Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_15 $$ return new RegexpMatcher(pattern)[ CD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_3 $$ int len = pattern.length()[ CD ]
Line_4 $$ if (len > 1 && pattern.indexOf('?') < 0) -->Line_11 $$ if (len > 2 && pattern.charAt(0) == '*' && pattern.indexOf('*', 1) == len - 1) [ CD ]
Line_4 $$ if (len > 1 && pattern.indexOf('?') < 0) -->Line_5 $$ if (pattern.charAt(0) == '*' && pattern.indexOf('*', 1) < 0) [ CD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_3 $$ int len = pattern.length()[ FD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_5 $$ if (pattern.charAt(0) == '*' && pattern.indexOf('*', 1) < 0) [ FD ]
Line_4 $$ if (len > 1 && pattern.indexOf('?') < 0) -->Line_8 $$ if (pattern.indexOf('*') == len - 1) [ CD ]
Line_11 $$ if (len > 2 && pattern.charAt(0) == '*' && pattern.indexOf('*', 1) == len - 1) -->Line_12 $$ return new InfixMatcher(pattern.substring(1, len - 1))[ CD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_9 $$ return new PrefixMatcher(pattern.substring(0, len - 1))[ FD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_12 $$ return new InfixMatcher(pattern.substring(1, len - 1))[ FD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_4 $$ if (len > 1 && pattern.indexOf('?') < 0) [ FD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_6 $$ return new SuffixMatcher(pattern.substring(1))[ FD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_8 $$ if (pattern.indexOf('*') == len - 1) [ FD ]
Line_5 $$ if (pattern.charAt(0) == '*' && pattern.indexOf('*', 1) < 0) -->Line_6 $$ return new SuffixMatcher(pattern.substring(1))[ CD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_4 $$ if (len > 1 && pattern.indexOf('?') < 0) [ CD ]
Line_8 $$ if (pattern.indexOf('*') == len - 1) -->Line_9 $$ return new PrefixMatcher(pattern.substring(0, len - 1))[ CD ]
Line_2 $$ private static MaskMatcher createMatcher(final String pattern) -->Line_11 $$ if (len > 2 && pattern.charAt(0) == '*' && pattern.indexOf('*', 1) == len - 1) [ FD ]
