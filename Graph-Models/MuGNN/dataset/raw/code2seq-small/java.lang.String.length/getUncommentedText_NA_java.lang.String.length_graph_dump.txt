Line_7 $$ String text = comment.getText()-->Line_12 $$ if (suffix != null && text.length() > suffix.length()) [ FD ]
Line_6 $$ if (commenter != null) -->Line_8 $$ final String prefix = commenter.getBlockCommentPrefix()[ CD ]
Line_2 $$ private static String getUncommentedText(@NotNull final PsiComment comment) -->Line_17 $$ return null[ CD ]
Line_2 $$ private static String getUncommentedText(@NotNull final PsiComment comment) -->Line_6 $$ if (commenter != null) [ CD ]
Line_5 $$ final Commenter commenter = LanguageCommenters.INSTANCE.forLanguage(language)-->Line_6 $$ if (commenter != null) [ FD ]
Line_10 $$ text = text.substring(prefix.length())-->Line_12 $$ if (suffix != null && text.length() > suffix.length()) [ FD ]
Line_11 $$ final String suffix = commenter.getBlockCommentSuffix()-->Line_13 $$ return text.substring(0, text.length() - suffix.length()).trim()[ FD ]
Line_9 $$ if (prefix != null && text.startsWith(prefix)) -->Line_11 $$ final String suffix = commenter.getBlockCommentSuffix()[ CD ]
Line_2 $$ private static String getUncommentedText(@NotNull final PsiComment comment) -->Line_3 $$ final PsiFile psiFile = comment.getContainingFile()[ CD ]
Line_9 $$ if (prefix != null && text.startsWith(prefix)) -->Line_12 $$ if (suffix != null && text.length() > suffix.length()) [ CD ]
Line_2 $$ private static String getUncommentedText(@NotNull final PsiComment comment) -->Line_5 $$ final Commenter commenter = LanguageCommenters.INSTANCE.forLanguage(language)[ CD ]
Line_7 $$ String text = comment.getText()-->Line_13 $$ return text.substring(0, text.length() - suffix.length()).trim()[ FD ]
Line_6 $$ if (commenter != null) -->Line_9 $$ if (prefix != null && text.startsWith(prefix)) [ CD ]
Line_12 $$ if (suffix != null && text.length() > suffix.length()) -->Line_13 $$ return text.substring(0, text.length() - suffix.length()).trim()[ CD ]
Line_2 $$ private static String getUncommentedText(@NotNull final PsiComment comment) -->Line_7 $$ String text = comment.getText()[ FD ]
Line_8 $$ final String prefix = commenter.getBlockCommentPrefix()-->Line_9 $$ if (prefix != null && text.startsWith(prefix)) [ FD ]
Line_9 $$ if (prefix != null && text.startsWith(prefix)) -->Line_10 $$ text = text.substring(prefix.length())[ CD ]
Line_8 $$ final String prefix = commenter.getBlockCommentPrefix()-->Line_10 $$ text = text.substring(prefix.length())[ FD ]
Line_7 $$ String text = comment.getText()-->Line_10 $$ text = text.substring(prefix.length())[ FD ]
Line_10 $$ text = text.substring(prefix.length())-->Line_13 $$ return text.substring(0, text.length() - suffix.length()).trim()[ FD ]
Line_5 $$ final Commenter commenter = LanguageCommenters.INSTANCE.forLanguage(language)-->Line_11 $$ final String suffix = commenter.getBlockCommentSuffix()[ FD ]
Line_5 $$ final Commenter commenter = LanguageCommenters.INSTANCE.forLanguage(language)-->Line_8 $$ final String prefix = commenter.getBlockCommentPrefix()[ FD ]
Line_4 $$ final Language language = psiFile.getViewProvider().getBaseLanguage()-->Line_5 $$ final Commenter commenter = LanguageCommenters.INSTANCE.forLanguage(language)[ FD ]
Line_11 $$ final String suffix = commenter.getBlockCommentSuffix()-->Line_12 $$ if (suffix != null && text.length() > suffix.length()) [ FD ]
Line_3 $$ final PsiFile psiFile = comment.getContainingFile()-->Line_4 $$ final Language language = psiFile.getViewProvider().getBaseLanguage()[ FD ]
Line_7 $$ String text = comment.getText()-->Line_9 $$ if (prefix != null && text.startsWith(prefix)) [ FD ]
Line_6 $$ if (commenter != null) -->Line_7 $$ String text = comment.getText()[ CD ]
Line_2 $$ private static String getUncommentedText(@NotNull final PsiComment comment) -->Line_3 $$ final PsiFile psiFile = comment.getContainingFile()[ FD ]
Line_2 $$ private static String getUncommentedText(@NotNull final PsiComment comment) -->Line_4 $$ final Language language = psiFile.getViewProvider().getBaseLanguage()[ CD ]
