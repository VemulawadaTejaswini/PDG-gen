Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_7 $$ if ("'".equals(token)) [ CD ]
Line_9 $$ token = quotedString.toString()-->Line_46 $$ String doubleToken = (token.length() > 1) ? lastToken + ' ' + token : lastToken + token[ FD ]
Line_9 $$ token = quotedString.toString()-->Line_27 $$ if ("(".equals(token)) [ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_15 $$ if (quoted) [ CD ]
Line_8 $$ if (quoted) -->Line_9 $$ token = quotedString.toString()[ CD ]
Line_9 $$ token = quotedString.toString()-->Line_24 $$ token = (substoken == null) ? token : substoken[ FD ]
Line_33 $$ token = StringHelper.qualify(token, currentCollectionProp)-->Line_46 $$ String doubleToken = (token.length() > 1) ? lastToken + ' ' + token : lastToken + token[ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_24 $$ token = (substoken == null) ? token : substoken[ FD ]
Line_15 $$ if (quoted) -->Line_16 $$ return[ CD ]
Line_24 $$ token = (substoken == null) ? token : substoken-->Line_27 $$ if ("(".equals(token)) [ FD ]
Line_27 $$ if ("(".equals(token)) -->Line_28 $$ return[ CD ]
Line_24 $$ token = (substoken == null) ? token : substoken-->Line_29 $$ if (")".equals(token)) [ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_7 $$ if ("'".equals(token)) [ FD ]
Line_47 $$ if (HQL_OPERATORS.contains(doubleToken.toLowerCase(Locale.ROOT))) -->Line_48 $$ parser.token(doubleToken, q)[ CD ]
Line_29 $$ if (")".equals(token)) -->Line_31 $$ return[ CD ]
Line_24 $$ token = (substoken == null) ? token : substoken-->Line_46 $$ String doubleToken = (token.length() > 1) ? lastToken + ' ' + token : lastToken + token[ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_33 $$ token = StringHelper.qualify(token, currentCollectionProp)[ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_48 $$ parser.token(doubleToken, q)[ FD ]
Line_9 $$ token = quotedString.toString()-->Line_36 $$ String prop = CollectionProperties.getNormalizedPropertyName(token.toLowerCase(Locale.ROOT))[ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_27 $$ if ("(".equals(token)) [ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_36 $$ String prop = CollectionProperties.getNormalizedPropertyName(token.toLowerCase(Locale.ROOT))[ FD ]
Line_47 $$ if (HQL_OPERATORS.contains(doubleToken.toLowerCase(Locale.ROOT))) -->Line_51 $$ parser.token(lastToken, q)[ CD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_5 $$ quotedString.append(token)[ FD ]
Line_8 $$ if (quoted) -->Line_11 $$ quotedString = new StringBuilder(20).append(token)[ CD ]
Line_33 $$ token = StringHelper.qualify(token, currentCollectionProp)-->Line_36 $$ String prop = CollectionProperties.getNormalizedPropertyName(token.toLowerCase(Locale.ROOT))[ FD ]
Line_37 $$ if (prop != null) -->Line_39 $$ return[ CD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_51 $$ parser.token(lastToken, q)[ FD ]
Line_46 $$ String doubleToken = (token.length() > 1) ? lastToken + ' ' + token : lastToken + token-->Line_48 $$ parser.token(doubleToken, q)[ FD ]
Line_27 $$ if ("(".equals(token)) -->Line_29 $$ if (")".equals(token)) [ CD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_24 $$ token = (substoken == null) ? token : substoken[ CD ]
Line_24 $$ token = (substoken == null) ? token : substoken-->Line_33 $$ token = StringHelper.qualify(token, currentCollectionProp)[ FD ]
Line_36 $$ String prop = CollectionProperties.getNormalizedPropertyName(token.toLowerCase(Locale.ROOT))-->Line_37 $$ if (prop != null) [ FD ]
Line_9 $$ token = quotedString.toString()-->Line_11 $$ quotedString = new StringBuilder(20).append(token)[ FD ]
Line_29 $$ if (")".equals(token)) -->Line_33 $$ token = StringHelper.qualify(token, currentCollectionProp)[ CD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_9 $$ token = quotedString.toString()[ FD ]
Line_7 $$ if ("'".equals(token)) -->Line_8 $$ if (quoted) [ CD ]
Line_46 $$ String doubleToken = (token.length() > 1) ? lastToken + ' ' + token : lastToken + token-->Line_47 $$ if (HQL_OPERATORS.contains(doubleToken.toLowerCase(Locale.ROOT))) [ FD ]
Line_9 $$ token = quotedString.toString()-->Line_29 $$ if (")".equals(token)) [ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_11 $$ quotedString = new StringBuilder(20).append(token)[ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_29 $$ if (")".equals(token)) [ FD ]
Line_24 $$ token = (substoken == null) ? token : substoken-->Line_36 $$ String prop = CollectionProperties.getNormalizedPropertyName(token.toLowerCase(Locale.ROOT))[ FD ]
Line_2 $$ public void token(String token, QueryTranslatorImpl q) throws QueryException -->Line_46 $$ String doubleToken = (token.length() > 1) ? lastToken + ' ' + token : lastToken + token[ FD ]
Line_9 $$ token = quotedString.toString()-->Line_33 $$ token = StringHelper.qualify(token, currentCollectionProp)[ FD ]
