Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_8 $$ ASTNode leaf = TreeUtil.findLastLeaf(psiElement.getNode())[ CD ]
Line_23 $$ insertionOffset += "()".length()-->Line_38 $$ doc.insertString(insertionOffset, toInsert)[ FD ]
Line_27 $$ String toInsert = ";"-->Line_34 $$ toInsert += " "[ FD ]
Line_3 $$ if (psiElement == null || !(psiElement instanceof PsiExpressionStatement) && !(psiElement instanceof PsiDeclarationStatement) && !(psiElement instanceof PsiImportStatementBase) && !(psiElement instanceof PsiDoWhileStatement) && !(psiElement instanceof PsiReturnStatement) && !(psiElement instanceof PsiThrowStatement) && !(psiElement instanceof PsiBreakStatement) && !(psiElement instanceof PsiContinueStatement) && !(psiElement instanceof PsiAssertStatement) && !(psiElement instanceof PsiPackageStatement) && (!(psiElement instanceof PsiField) || psiElement instanceof PsiEnumConstant) && (!(psiElement instanceof PsiMethod) || ((PsiMethod) psiElement).getBody() != null || MissingMethodBodyFixer.shouldHaveBody((PsiMethod) psiElement))) -->Line_4 $$ return false[ CD ]
Line_9 $$ while (leaf != null && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(leaf.getElementType())) -->Line_10 $$ tailLength += leaf.getTextLength()[ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_29 $$ if (((PsiForStatement) parent).getUpdate() == psiElement) [ FD ]
Line_6 $$ String text = psiElement.getText()-->Line_14 $$ text = text.substring(0, text.length() - tailLength)[ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_13 $$ if (tailLength > 0) [ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_41 $$ return false[ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_20 $$ Document doc = editor.getDocument()[ CD ]
Line_21 $$ if (psiElement instanceof PsiField && ((PsiField) psiElement).hasModifierProperty(PsiModifier.ABSTRACT)) -->Line_23 $$ insertionOffset += "()".length()[ CD ]
Line_8 $$ ASTNode leaf = TreeUtil.findLastLeaf(psiElement.getNode())-->Line_11 $$ leaf = TreeUtil.prevLeaf(leaf)[ FD ]
Line_8 $$ ASTNode leaf = TreeUtil.findLastLeaf(psiElement.getNode())-->Line_19 $$ int insertionOffset = leaf.getTextRange().getEndOffset()[ FD ]
Line_6 $$ String text = psiElement.getText()-->Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) [ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_26 $$ final PsiElement parent = psiElement.getParent()[ FD ]
Line_26 $$ final PsiElement parent = psiElement.getParent()-->Line_28 $$ if (parent instanceof PsiForStatement) [ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_9 $$ while (leaf != null && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(leaf.getElementType())) [ CD ]
Line_19 $$ int insertionOffset = leaf.getTextRange().getEndOffset()-->Line_23 $$ insertionOffset += "()".length()[ FD ]
Line_16 $$ if (leaf == null) -->Line_17 $$ return false[ CD ]
Line_7 $$ int tailLength = 0-->Line_13 $$ if (tailLength > 0) [ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_3 $$ if (psiElement == null || !(psiElement instanceof PsiExpressionStatement) && !(psiElement instanceof PsiDeclarationStatement) && !(psiElement instanceof PsiImportStatementBase) && !(psiElement instanceof PsiDoWhileStatement) && !(psiElement instanceof PsiReturnStatement) && !(psiElement instanceof PsiThrowStatement) && !(psiElement instanceof PsiBreakStatement) && !(psiElement instanceof PsiContinueStatement) && !(psiElement instanceof PsiAssertStatement) && !(psiElement instanceof PsiPackageStatement) && (!(psiElement instanceof PsiField) || psiElement instanceof PsiEnumConstant) && (!(psiElement instanceof PsiMethod) || ((PsiMethod) psiElement).getBody() != null || MissingMethodBodyFixer.shouldHaveBody((PsiMethod) psiElement))) [ CD ]
Line_11 $$ leaf = TreeUtil.prevLeaf(leaf)-->Line_10 $$ tailLength += leaf.getTextLength()[ FD ]
Line_13 $$ if (tailLength > 0) -->Line_14 $$ text = text.substring(0, text.length() - tailLength)[ CD ]
Line_29 $$ if (((PsiForStatement) parent).getUpdate() == psiElement) -->Line_33 $$ if (project != null && CodeStyleSettingsManager.getSettings(project).SPACE_AFTER_SEMICOLON) [ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_16 $$ if (leaf == null) [ CD ]
Line_32 $$ final Project project = editor.getProject()-->Line_33 $$ if (project != null && CodeStyleSettingsManager.getSettings(project).SPACE_AFTER_SEMICOLON) [ FD ]
Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) -->Line_26 $$ final PsiElement parent = psiElement.getParent()[ CD ]
Line_7 $$ int tailLength = 0-->Line_10 $$ tailLength += leaf.getTextLength()[ FD ]
Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) -->Line_28 $$ if (parent instanceof PsiForStatement) [ CD ]
Line_11 $$ leaf = TreeUtil.prevLeaf(leaf)-->Line_19 $$ int insertionOffset = leaf.getTextRange().getEndOffset()[ FD ]
Line_20 $$ Document doc = editor.getDocument()-->Line_22 $$ doc.insertString(insertionOffset, "()")[ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) [ CD ]
Line_9 $$ while (leaf != null && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(leaf.getElementType())) -->Line_11 $$ leaf = TreeUtil.prevLeaf(leaf)[ CD ]
Line_10 $$ tailLength += leaf.getTextLength()-->Line_13 $$ if (tailLength > 0) [ FD ]
Line_14 $$ text = text.substring(0, text.length() - tailLength)-->Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) [ FD ]
Line_19 $$ int insertionOffset = leaf.getTextRange().getEndOffset()-->Line_38 $$ doc.insertString(insertionOffset, toInsert)[ FD ]
Line_8 $$ ASTNode leaf = TreeUtil.findLastLeaf(psiElement.getNode())-->Line_9 $$ while (leaf != null && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(leaf.getElementType())) [ FD ]
Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) -->Line_38 $$ doc.insertString(insertionOffset, toInsert)[ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_19 $$ int insertionOffset = leaf.getTextRange().getEndOffset()[ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_8 $$ ASTNode leaf = TreeUtil.findLastLeaf(psiElement.getNode())[ FD ]
Line_11 $$ leaf = TreeUtil.prevLeaf(leaf)-->Line_16 $$ if (leaf == null) [ FD ]
Line_20 $$ Document doc = editor.getDocument()-->Line_38 $$ doc.insertString(insertionOffset, toInsert)[ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_6 $$ String text = psiElement.getText()[ CD ]
Line_19 $$ int insertionOffset = leaf.getTextRange().getEndOffset()-->Line_22 $$ doc.insertString(insertionOffset, "()")[ FD ]
Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) -->Line_39 $$ return true[ CD ]
Line_25 $$ if (!StringUtil.endsWithChar(text, ';')) -->Line_27 $$ String toInsert = ";"[ CD ]
Line_21 $$ if (psiElement instanceof PsiField && ((PsiField) psiElement).hasModifierProperty(PsiModifier.ABSTRACT)) -->Line_22 $$ doc.insertString(insertionOffset, "()")[ CD ]
Line_11 $$ leaf = TreeUtil.prevLeaf(leaf)-->Line_9 $$ while (leaf != null && ElementType.JAVA_COMMENT_OR_WHITESPACE_BIT_SET.contains(leaf.getElementType())) [ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_6 $$ String text = psiElement.getText()[ FD ]
Line_33 $$ if (project != null && CodeStyleSettingsManager.getSettings(project).SPACE_AFTER_SEMICOLON) -->Line_34 $$ toInsert += " "[ CD ]
Line_8 $$ ASTNode leaf = TreeUtil.findLastLeaf(psiElement.getNode())-->Line_10 $$ tailLength += leaf.getTextLength()[ FD ]
Line_8 $$ ASTNode leaf = TreeUtil.findLastLeaf(psiElement.getNode())-->Line_16 $$ if (leaf == null) [ FD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_20 $$ Document doc = editor.getDocument()[ FD ]
Line_27 $$ String toInsert = ";"-->Line_38 $$ doc.insertString(insertionOffset, toInsert)[ FD ]
Line_28 $$ if (parent instanceof PsiForStatement) -->Line_29 $$ if (((PsiForStatement) parent).getUpdate() == psiElement) [ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_32 $$ final Project project = editor.getProject()[ FD ]
Line_34 $$ toInsert += " "-->Line_38 $$ doc.insertString(insertionOffset, toInsert)[ FD ]
Line_29 $$ if (((PsiForStatement) parent).getUpdate() == psiElement) -->Line_32 $$ final Project project = editor.getProject()[ CD ]
Line_29 $$ if (((PsiForStatement) parent).getUpdate() == psiElement) -->Line_30 $$ return false[ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_21 $$ if (psiElement instanceof PsiField && ((PsiField) psiElement).hasModifierProperty(PsiModifier.ABSTRACT)) [ CD ]
Line_2 $$ private static boolean fixAfterLastValidElement(@NotNull Editor editor, @Nullable PsiElement psiElement) -->Line_7 $$ int tailLength = 0[ CD ]
