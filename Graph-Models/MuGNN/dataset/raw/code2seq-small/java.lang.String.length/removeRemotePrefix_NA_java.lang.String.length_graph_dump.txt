Line_3 $$ String prefix = remote + "/"-->Line_4 $$ if (branch.startsWith(prefix)) [ FD ]
Line_2 $$ private static String removeRemotePrefix(@NotNull String branch, @NotNull String remote) -->Line_7 $$ LOG.error(String.format("Remote branch name seems to be invalid. Branch: %s, remote: %s", branch, remote))[ CD ]
Line_2 $$ private static String removeRemotePrefix(@NotNull String branch, @NotNull String remote) -->Line_7 $$ LOG.error(String.format("Remote branch name seems to be invalid. Branch: %s, remote: %s", branch, remote))[ FD ]
Line_3 $$ String prefix = remote + "/"-->Line_5 $$ return branch.substring(prefix.length())[ FD ]
Line_2 $$ private static String removeRemotePrefix(@NotNull String branch, @NotNull String remote) -->Line_5 $$ return branch.substring(prefix.length())[ FD ]
Line_2 $$ private static String removeRemotePrefix(@NotNull String branch, @NotNull String remote) -->Line_3 $$ String prefix = remote + "/"[ CD ]
Line_2 $$ private static String removeRemotePrefix(@NotNull String branch, @NotNull String remote) -->Line_4 $$ if (branch.startsWith(prefix)) [ CD ]
Line_2 $$ private static String removeRemotePrefix(@NotNull String branch, @NotNull String remote) -->Line_8 $$ return branch[ CD ]
Line_4 $$ if (branch.startsWith(prefix)) -->Line_5 $$ return branch.substring(prefix.length())[ CD ]
Line_2 $$ private static String removeRemotePrefix(@NotNull String branch, @NotNull String remote) -->Line_4 $$ if (branch.startsWith(prefix)) [ FD ]
