Line_26 $$ if (Character.isWhitespace(payload.charAt(c))) -->Line_27 $$ payload = payload.replace(payload.charAt(c), 'w')[ CD ]
Line_4 $$ for (String token : tokens) -->Line_39 $$ payloads.get(token).add(new BytesRef())[ FD ]
Line_2 $$ private Map<String, List<BytesRef>> createPayloads(String[] tokens, int encoding) -->Line_3 $$ Map<String, List<BytesRef>> payloads = new HashMap()[ CD ]
Line_3 $$ Map<String, List<BytesRef>> payloads = new HashMap()-->Line_39 $$ payloads.get(token).add(new BytesRef())[ FD ]
Line_4 $$ for (String token : tokens) -->Line_14 $$ payloads.get(token).add(new BytesRef(PayloadHelper.encodeFloat(theFloat)))[ FD ]
Line_3 $$ Map<String, List<BytesRef>> payloads = new HashMap()-->Line_5 $$ if (payloads.get(token) == null) [ FD ]
Line_4 $$ for (String token : tokens) -->Line_6 $$ payloads.put(token, new ArrayList<BytesRef>())[ FD ]
Line_27 $$ payload = payload.replace(payload.charAt(c), 'w')-->Line_26 $$ if (Character.isWhitespace(payload.charAt(c))) [ FD ]
Line_25 $$ for (int c = 0; c < payload.length(); c++) -->Line_27 $$ payload = payload.replace(payload.charAt(c), 'w')[ FD ]
Line_3 $$ Map<String, List<BytesRef>> payloads = new HashMap()-->Line_14 $$ payloads.get(token).add(new BytesRef(PayloadHelper.encodeFloat(theFloat)))[ FD ]
Line_3 $$ Map<String, List<BytesRef>> payloads = new HashMap()-->Line_19 $$ payloads.get(token).add(new BytesRef(PayloadHelper.encodeInt(randomInt())))[ FD ]
Line_24 $$ String payload = randomUnicodeOfLengthBetween(50, 100)-->Line_25 $$ for (int c = 0; c < payload.length(); c++) [ FD ]
Line_3 $$ Map<String, List<BytesRef>> payloads = new HashMap()-->Line_6 $$ payloads.put(token, new ArrayList<BytesRef>())[ FD ]
Line_5 $$ if (payloads.get(token) == null) -->Line_6 $$ payloads.put(token, new ArrayList<BytesRef>())[ CD ]
Line_25 $$ for (int c = 0; c < payload.length(); c++) -->Line_26 $$ if (Character.isWhitespace(payload.charAt(c))) [ CD ]
Line_25 $$ for (int c = 0; c < payload.length(); c++) -->Line_26 $$ if (Character.isWhitespace(payload.charAt(c))) [ FD ]
Line_24 $$ String payload = randomUnicodeOfLengthBetween(50, 100)-->Line_27 $$ payload = payload.replace(payload.charAt(c), 'w')[ FD ]
Line_24 $$ String payload = randomUnicodeOfLengthBetween(50, 100)-->Line_26 $$ if (Character.isWhitespace(payload.charAt(c))) [ FD ]
Line_13 $$ float theFloat = randomFloat()-->Line_14 $$ payloads.get(token).add(new BytesRef(PayloadHelper.encodeFloat(theFloat)))[ FD ]
Line_3 $$ Map<String, List<BytesRef>> payloads = new HashMap()-->Line_30 $$ payloads.get(token).add(new BytesRef(payload))[ FD ]
Line_2 $$ private Map<String, List<BytesRef>> createPayloads(String[] tokens, int encoding) -->Line_42 $$ return payloads[ CD ]
Line_4 $$ for (String token : tokens) -->Line_30 $$ payloads.get(token).add(new BytesRef(payload))[ FD ]
Line_4 $$ for (String token : tokens) -->Line_19 $$ payloads.get(token).add(new BytesRef(PayloadHelper.encodeInt(randomInt())))[ FD ]
Line_27 $$ payload = payload.replace(payload.charAt(c), 'w')-->Line_25 $$ for (int c = 0; c < payload.length(); c++) [ FD ]
Line_4 $$ for (String token : tokens) -->Line_5 $$ if (payloads.get(token) == null) [ FD ]
Line_9 $$ if (createPayload) -->Line_39 $$ payloads.get(token).add(new BytesRef())[ CD ]
