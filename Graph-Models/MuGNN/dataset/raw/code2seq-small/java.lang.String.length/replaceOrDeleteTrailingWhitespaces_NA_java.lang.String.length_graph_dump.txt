Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_13 $$ document.replaceString(whitespaceRange.getStartOffset(), whitespaceRange.getEndOffset(), text)[ FD ]
Line_6 $$ if (document != null) -->Line_7 $$ final PyCodeStyleSettings customSettings = CodeStyleSettingsManager.getSettings(project).getCustomSettings(PyCodeStyleSettings.class)[ CD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_11 $$ if (!text.isEmpty() && whitespaceRange.getStartOffset() != 0) [ FD ]
Line_3 $$ final Project project = pyFile.getProject()-->Line_4 $$ final PsiDocumentManager documentManager = PsiDocumentManager.getInstance(project)[ FD ]
Line_10 $$ final String text = addLineFeed ? "\n" : ""-->Line_13 $$ document.replaceString(whitespaceRange.getStartOffset(), whitespaceRange.getEndOffset(), text)[ FD ]
Line_10 $$ final String text = addLineFeed ? "\n" : ""-->Line_20 $$ return TextRange.from(whitespaceRange.getStartOffset(), text.length())[ FD ]
Line_6 $$ if (document != null) -->Line_8 $$ final boolean addLineFeed = customSettings.BLANK_LINE_AT_FILE_END || EditorSettingsExternalizable.getInstance().isEnsureNewLineAtEOF()[ CD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_20 $$ return TextRange.from(whitespaceRange.getStartOffset(), text.length())[ FD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_18 $$ document.deleteString(whitespaceRange.getStartOffset(), whitespaceRange.getEndOffset())[ FD ]
Line_10 $$ final String text = addLineFeed ? "\n" : ""-->Line_11 $$ if (!text.isEmpty() && whitespaceRange.getStartOffset() != 0) [ FD ]
Line_5 $$ final Document document = documentManager.getDocument(pyFile)-->Line_15 $$ document.insertString(document.getTextLength(), text)[ FD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_25 $$ return whitespaceRange[ CD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_6 $$ if (document != null) [ CD ]
Line_12 $$ if (!whitespaceRange.isEmpty()) -->Line_13 $$ document.replaceString(whitespaceRange.getStartOffset(), whitespaceRange.getEndOffset(), text)[ CD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_3 $$ final Project project = pyFile.getProject()[ CD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_3 $$ final Project project = pyFile.getProject()[ FD ]
Line_10 $$ final String text = addLineFeed ? "\n" : ""-->Line_15 $$ document.insertString(document.getTextLength(), text)[ FD ]
Line_5 $$ final Document document = documentManager.getDocument(pyFile)-->Line_6 $$ if (document != null) [ FD ]
Line_5 $$ final Document document = documentManager.getDocument(pyFile)-->Line_13 $$ document.replaceString(whitespaceRange.getStartOffset(), whitespaceRange.getEndOffset(), text)[ FD ]
Line_4 $$ final PsiDocumentManager documentManager = PsiDocumentManager.getInstance(project)-->Line_22 $$ documentManager.commitDocument(document)[ FD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_4 $$ final PsiDocumentManager documentManager = PsiDocumentManager.getInstance(project)[ CD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_17 $$ if (!whitespaceRange.isEmpty()) [ FD ]
Line_5 $$ final Document document = documentManager.getDocument(pyFile)-->Line_22 $$ documentManager.commitDocument(document)[ FD ]
Line_3 $$ final Project project = pyFile.getProject()-->Line_7 $$ final PyCodeStyleSettings customSettings = CodeStyleSettingsManager.getSettings(project).getCustomSettings(PyCodeStyleSettings.class)[ FD ]
Line_12 $$ if (!whitespaceRange.isEmpty()) -->Line_15 $$ document.insertString(document.getTextLength(), text)[ CD ]
Line_5 $$ final Document document = documentManager.getDocument(pyFile)-->Line_18 $$ document.deleteString(whitespaceRange.getStartOffset(), whitespaceRange.getEndOffset())[ FD ]
Line_4 $$ final PsiDocumentManager documentManager = PsiDocumentManager.getInstance(project)-->Line_5 $$ final Document document = documentManager.getDocument(pyFile)[ FD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_5 $$ final Document document = documentManager.getDocument(pyFile)[ CD ]
Line_11 $$ if (!text.isEmpty() && whitespaceRange.getStartOffset() != 0) -->Line_12 $$ if (!whitespaceRange.isEmpty()) [ CD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_12 $$ if (!whitespaceRange.isEmpty()) [ FD ]
Line_2 $$ private static TextRange replaceOrDeleteTrailingWhitespaces(@NotNull final PsiFile pyFile, @NotNull final TextRange whitespaceRange) -->Line_5 $$ final Document document = documentManager.getDocument(pyFile)[ FD ]
Line_11 $$ if (!text.isEmpty() && whitespaceRange.getStartOffset() != 0) -->Line_17 $$ if (!whitespaceRange.isEmpty()) [ CD ]
Line_17 $$ if (!whitespaceRange.isEmpty()) -->Line_18 $$ document.deleteString(whitespaceRange.getStartOffset(), whitespaceRange.getEndOffset())[ CD ]
