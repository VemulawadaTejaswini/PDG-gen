Line_8 $$ for (FileStatus stat : tokenStats) -->Line_17 $$ fs.delete(stat.getPath(), false)[ FD ]
Line_9 $$ String name = stat.getPath().getName()-->Line_24 $$ if (name.startsWith(TMP_FILE_PREFIX)) [ FD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_4 $$ final int bucketId = Integer.parseInt(numStr)[ CD ]
Line_10 $$ if (name.startsWith(TOKEN_FILE_PREFIX)) -->Line_11 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ CD ]
Line_10 $$ if (name.startsWith(TOKEN_FILE_PREFIX)) -->Line_12 $$ loadedTokens.add(name)[ CD ]
Line_9 $$ String name = stat.getPath().getName()-->Line_14 $$ if (name.startsWith(UPDATE_TMP_FILE_PREFIX)) [ FD ]
Line_16 $$ if (loadedTokens.contains(tokenName)) -->Line_22 $$ ++numTokens[ CD ]
Line_8 $$ for (FileStatus stat : tokenStats) -->Line_27 $$ LOG.warn("Skipping unexpected file in history server token bucket: " + stat.getPath())[ FD ]
Line_9 $$ String name = stat.getPath().getName()-->Line_12 $$ loadedTokens.add(name)[ FD ]
Line_5 $$ int numTokens = 0-->Line_13 $$ ++numTokens[ FD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_5 $$ int numTokens = 0[ CD ]
Line_16 $$ if (loadedTokens.contains(tokenName)) -->Line_20 $$ fs.rename(stat.getPath(), new Path(stat.getPath().getParent(), tokenName))[ CD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_3 $$ String numStr = bucket.getName().substring(TOKEN_BUCKET_DIR_PREFIX.length())[ CD ]
Line_14 $$ if (name.startsWith(UPDATE_TMP_FILE_PREFIX)) -->Line_16 $$ if (loadedTokens.contains(tokenName)) [ CD ]
Line_9 $$ String name = stat.getPath().getName()-->Line_10 $$ if (name.startsWith(TOKEN_FILE_PREFIX)) [ FD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_19 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ FD ]
Line_3 $$ String numStr = bucket.getName().substring(TOKEN_BUCKET_DIR_PREFIX.length())-->Line_4 $$ final int bucketId = Integer.parseInt(numStr)[ FD ]
Line_8 $$ for (FileStatus stat : tokenStats) -->Line_11 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ FD ]
Line_4 $$ final int bucketId = Integer.parseInt(numStr)-->Line_19 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ FD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_30 $$ return numTokens[ CD ]
Line_24 $$ if (name.startsWith(TMP_FILE_PREFIX)) -->Line_27 $$ LOG.warn("Skipping unexpected file in history server token bucket: " + stat.getPath())[ CD ]
Line_9 $$ String name = stat.getPath().getName()-->Line_15 $$ String tokenName = name.substring(UPDATE_TMP_FILE_PREFIX.length())[ FD ]
Line_7 $$ Set<String> loadedTokens = new HashSet<String>(tokenStats.length)-->Line_12 $$ loadedTokens.add(name)[ FD ]
Line_15 $$ String tokenName = name.substring(UPDATE_TMP_FILE_PREFIX.length())-->Line_21 $$ loadedTokens.add(tokenName)[ FD ]
Line_8 $$ for (FileStatus stat : tokenStats) -->Line_20 $$ fs.rename(stat.getPath(), new Path(stat.getPath().getParent(), tokenName))[ FD ]
Line_15 $$ String tokenName = name.substring(UPDATE_TMP_FILE_PREFIX.length())-->Line_16 $$ if (loadedTokens.contains(tokenName)) [ FD ]
Line_14 $$ if (name.startsWith(UPDATE_TMP_FILE_PREFIX)) -->Line_15 $$ String tokenName = name.substring(UPDATE_TMP_FILE_PREFIX.length())[ CD ]
Line_8 $$ for (FileStatus stat : tokenStats) -->Line_19 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ FD ]
Line_5 $$ int numTokens = 0-->Line_22 $$ ++numTokens[ FD ]
Line_10 $$ if (name.startsWith(TOKEN_FILE_PREFIX)) -->Line_14 $$ if (name.startsWith(UPDATE_TMP_FILE_PREFIX)) [ CD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_11 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ FD ]
Line_16 $$ if (loadedTokens.contains(tokenName)) -->Line_19 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ CD ]
Line_7 $$ Set<String> loadedTokens = new HashSet<String>(tokenStats.length)-->Line_21 $$ loadedTokens.add(tokenName)[ FD ]
Line_16 $$ if (loadedTokens.contains(tokenName)) -->Line_17 $$ fs.delete(stat.getPath(), false)[ CD ]
Line_14 $$ if (name.startsWith(UPDATE_TMP_FILE_PREFIX)) -->Line_24 $$ if (name.startsWith(TMP_FILE_PREFIX)) [ CD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_6 $$ FileStatus[] tokenStats = fs.listStatus(bucket)[ FD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_6 $$ FileStatus[] tokenStats = fs.listStatus(bucket)[ CD ]
Line_8 $$ for (FileStatus stat : tokenStats) -->Line_9 $$ String name = stat.getPath().getName()[ FD ]
Line_24 $$ if (name.startsWith(TMP_FILE_PREFIX)) -->Line_25 $$ fs.delete(stat.getPath(), false)[ CD ]
Line_16 $$ if (loadedTokens.contains(tokenName)) -->Line_21 $$ loadedTokens.add(tokenName)[ CD ]
Line_4 $$ final int bucketId = Integer.parseInt(numStr)-->Line_11 $$ loadTokenFromBucket(bucketId, state, stat.getPath(), stat.getLen())[ FD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_7 $$ Set<String> loadedTokens = new HashSet<String>(tokenStats.length)[ CD ]
Line_10 $$ if (name.startsWith(TOKEN_FILE_PREFIX)) -->Line_13 $$ ++numTokens[ CD ]
Line_7 $$ Set<String> loadedTokens = new HashSet<String>(tokenStats.length)-->Line_16 $$ if (loadedTokens.contains(tokenName)) [ FD ]
Line_8 $$ for (FileStatus stat : tokenStats) -->Line_25 $$ fs.delete(stat.getPath(), false)[ FD ]
Line_2 $$ private int loadTokensFromBucket(HistoryServerState state, Path bucket) throws IOException -->Line_3 $$ String numStr = bucket.getName().substring(TOKEN_BUCKET_DIR_PREFIX.length())[ FD ]
