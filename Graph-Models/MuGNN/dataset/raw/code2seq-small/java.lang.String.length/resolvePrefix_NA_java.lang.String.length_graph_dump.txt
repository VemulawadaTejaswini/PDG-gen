Line_9 $$ return new SchemaPrefix(attribute, textRange, prefix) -->Line_11 $$ if (obj instanceof SchemaPrefix) [ CD ]
Line_4 $$ XmlTag parent = PsiTreeUtil.getParentOfType(context, XmlTag.class)-->Line_6 $$ final XmlAttribute attribute = parent.getAttribute(name, null)[ FD ]
Line_9 $$ return new SchemaPrefix(attribute, textRange, prefix) -->Line_15 $$ return super.equals(obj)[ FD ]
Line_2 $$ public static PsiElement resolvePrefix(final String prefix, XmlElement context) -->Line_13 $$ return prefix.equals(p.getName()) && p.getParent() == attribute[ FD ]
Line_12 $$ final SchemaPrefix p = (SchemaPrefix) obj-->Line_13 $$ return prefix.equals(p.getName()) && p.getParent() == attribute[ FD ]
Line_5 $$ while (parent != null) -->Line_7 $$ if (attribute != null) [ CD ]
Line_9 $$ return new SchemaPrefix(attribute, textRange, prefix) -->Line_11 $$ if (obj instanceof SchemaPrefix) [ FD ]
Line_2 $$ public static PsiElement resolvePrefix(final String prefix, XmlElement context) -->Line_4 $$ XmlTag parent = PsiTreeUtil.getParentOfType(context, XmlTag.class)[ CD ]
Line_2 $$ public static PsiElement resolvePrefix(final String prefix, XmlElement context) -->Line_21 $$ return null[ CD ]
Line_2 $$ public static PsiElement resolvePrefix(final String prefix, XmlElement context) -->Line_4 $$ XmlTag parent = PsiTreeUtil.getParentOfType(context, XmlTag.class)[ FD ]
Line_7 $$ if (attribute != null) -->Line_9 $$ return new SchemaPrefix(attribute, textRange, prefix) [ CD ]
Line_4 $$ XmlTag parent = PsiTreeUtil.getParentOfType(context, XmlTag.class)-->Line_5 $$ while (parent != null) [ FD ]
Line_5 $$ while (parent != null) -->Line_6 $$ final XmlAttribute attribute = parent.getAttribute(name, null)[ CD ]
Line_2 $$ public static PsiElement resolvePrefix(final String prefix, XmlElement context) -->Line_8 $$ final TextRange textRange = TextRange.from("xmlns:".length(), prefix.length())[ FD ]
Line_2 $$ public static PsiElement resolvePrefix(final String prefix, XmlElement context) -->Line_5 $$ while (parent != null) [ CD ]
Line_7 $$ if (attribute != null) -->Line_8 $$ final TextRange textRange = TextRange.from("xmlns:".length(), prefix.length())[ CD ]
Line_11 $$ if (obj instanceof SchemaPrefix) -->Line_13 $$ return prefix.equals(p.getName()) && p.getParent() == attribute[ CD ]
Line_6 $$ final XmlAttribute attribute = parent.getAttribute(name, null)-->Line_7 $$ if (attribute != null) [ FD ]
Line_5 $$ while (parent != null) -->Line_19 $$ parent = PsiTreeUtil.getParentOfType(parent, XmlTag.class)[ CD ]
Line_11 $$ if (obj instanceof SchemaPrefix) -->Line_12 $$ final SchemaPrefix p = (SchemaPrefix) obj[ CD ]
Line_4 $$ XmlTag parent = PsiTreeUtil.getParentOfType(context, XmlTag.class)-->Line_19 $$ parent = PsiTreeUtil.getParentOfType(parent, XmlTag.class)[ FD ]
Line_3 $$ final String name = "xmlns:" + prefix-->Line_6 $$ final XmlAttribute attribute = parent.getAttribute(name, null)[ FD ]
Line_2 $$ public static PsiElement resolvePrefix(final String prefix, XmlElement context) -->Line_3 $$ final String name = "xmlns:" + prefix[ CD ]
Line_9 $$ return new SchemaPrefix(attribute, textRange, prefix) -->Line_15 $$ return super.equals(obj)[ CD ]
