Line_2 $$ protected String fixHexColors(String content) -->Line_9 $$ content = StringUtil.replace(content, hexColor, StringUtil.toUpperCase(hexColor))[ FD ]
Line_5 $$ String hexColor = matcher.group(1)-->Line_6 $$ if (Validator.isNumber(hexColor) || (hexColor.length() < 3)) [ FD ]
Line_4 $$ while (matcher.find()) -->Line_9 $$ content = StringUtil.replace(content, hexColor, StringUtil.toUpperCase(hexColor))[ CD ]
Line_3 $$ Matcher matcher = _hexColorPattern.matcher(content)-->Line_5 $$ String hexColor = matcher.group(1)[ FD ]
Line_5 $$ String hexColor = matcher.group(1)-->Line_9 $$ content = StringUtil.replace(content, hexColor, StringUtil.toUpperCase(hexColor))[ FD ]
Line_4 $$ while (matcher.find()) -->Line_5 $$ String hexColor = matcher.group(1)[ CD ]
Line_4 $$ while (matcher.find()) -->Line_6 $$ if (Validator.isNumber(hexColor) || (hexColor.length() < 3)) [ CD ]
Line_2 $$ protected String fixHexColors(String content) -->Line_3 $$ Matcher matcher = _hexColorPattern.matcher(content)[ CD ]
Line_2 $$ protected String fixHexColors(String content) -->Line_3 $$ Matcher matcher = _hexColorPattern.matcher(content)[ FD ]
Line_2 $$ protected String fixHexColors(String content) -->Line_11 $$ return content[ CD ]
Line_3 $$ Matcher matcher = _hexColorPattern.matcher(content)-->Line_4 $$ while (matcher.find()) [ FD ]
Line_2 $$ protected String fixHexColors(String content) -->Line_4 $$ while (matcher.find()) [ CD ]
