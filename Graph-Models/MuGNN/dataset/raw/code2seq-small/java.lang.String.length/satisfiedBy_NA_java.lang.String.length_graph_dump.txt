Line_6 $$ final PsiLiteralExpression expression = (PsiLiteralExpression) element-->Line_7 $$ final PsiType type = expression.getType()[ FD ]
Line_16 $$ if (value == null || value.length() != 1) -->Line_17 $$ return false[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_7 $$ final PsiType type = expression.getType()[ CD ]
Line_12 $$ if (!JAVA_LANG_STRING.equals(typeText)) -->Line_13 $$ return false[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_19 $$ return isInConcatenationContext(element)[ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_6 $$ final PsiLiteralExpression expression = (PsiLiteralExpression) element[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_16 $$ if (value == null || value.length() != 1) [ CD ]
Line_7 $$ final PsiType type = expression.getType()-->Line_11 $$ final String typeText = type.getCanonicalText()[ FD ]
Line_3 $$ if (!(element instanceof PsiLiteralExpression)) -->Line_4 $$ return false[ CD ]
Line_11 $$ final String typeText = type.getCanonicalText()-->Line_12 $$ if (!JAVA_LANG_STRING.equals(typeText)) [ FD ]
Line_15 $$ final String value = (String) expression.getValue()-->Line_16 $$ if (value == null || value.length() != 1) [ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_11 $$ final String typeText = type.getCanonicalText()[ CD ]
Line_8 $$ if (type == null) -->Line_9 $$ return false[ CD ]
Line_7 $$ final PsiType type = expression.getType()-->Line_8 $$ if (type == null) [ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_12 $$ if (!JAVA_LANG_STRING.equals(typeText)) [ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_3 $$ if (!(element instanceof PsiLiteralExpression)) [ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_15 $$ final String value = (String) expression.getValue()[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_8 $$ if (type == null) [ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_19 $$ return isInConcatenationContext(element)[ CD ]
Line_6 $$ final PsiLiteralExpression expression = (PsiLiteralExpression) element-->Line_15 $$ final String value = (String) expression.getValue()[ FD ]
