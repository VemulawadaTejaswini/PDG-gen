Line_2 $$ private static void highlightWord(final CompletionVariant variant, final Project project) -->Line_4 $$ EditorColorsManager colorManager = EditorColorsManager.getInstance()[ CD ]
Line_2 $$ private static void highlightWord(final CompletionVariant variant, final Project project) -->Line_5 $$ TextAttributes attributes = colorManager.getGlobalScheme().getAttributes(EditorColors.TEXT_SEARCH_RESULT_ATTRIBUTES)[ CD ]
Line_2 $$ private static void highlightWord(final CompletionVariant variant, final Project project) -->Line_3 $$ HighlightManager highlightManager = HighlightManager.getInstance(project)[ FD ]
Line_4 $$ EditorColorsManager colorManager = EditorColorsManager.getInstance()-->Line_5 $$ TextAttributes attributes = colorManager.getGlobalScheme().getAttributes(EditorColors.TEXT_SEARCH_RESULT_ATTRIBUTES)[ FD ]
Line_3 $$ HighlightManager highlightManager = HighlightManager.getInstance(project)-->Line_6 $$ highlightManager.addOccurrenceHighlight(variant.editor, variant.offset, variant.offset + variant.variant.length(), attributes, HighlightManager.HIDE_BY_ANY_KEY, null, null)[ FD ]
Line_2 $$ private static void highlightWord(final CompletionVariant variant, final Project project) -->Line_6 $$ highlightManager.addOccurrenceHighlight(variant.editor, variant.offset, variant.offset + variant.variant.length(), attributes, HighlightManager.HIDE_BY_ANY_KEY, null, null)[ CD ]
Line_5 $$ TextAttributes attributes = colorManager.getGlobalScheme().getAttributes(EditorColors.TEXT_SEARCH_RESULT_ATTRIBUTES)-->Line_6 $$ highlightManager.addOccurrenceHighlight(variant.editor, variant.offset, variant.offset + variant.variant.length(), attributes, HighlightManager.HIDE_BY_ANY_KEY, null, null)[ FD ]
Line_2 $$ private static void highlightWord(final CompletionVariant variant, final Project project) -->Line_3 $$ HighlightManager highlightManager = HighlightManager.getInstance(project)[ CD ]
