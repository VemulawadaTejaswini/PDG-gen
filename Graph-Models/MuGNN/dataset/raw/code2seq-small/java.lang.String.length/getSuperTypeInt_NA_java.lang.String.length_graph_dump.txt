Line_3 $$ if (typeEquals(subType, superType)) -->Line_4 $$ return subType[ CD ]
Line_10 $$ result = getSuperType(clsType.superclass(), superType)-->Line_11 $$ if (result != null) [ FD ]
Line_14 $$ for (InterfaceType iface : clsType.allInterfaces()) -->Line_27 $$ result = getSuperType(iface, superType)[ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_6 $$ Type result[ CD ]
Line_24 $$ if (subType instanceof InterfaceType) -->Line_35 $$ if (subType instanceof ArrayType) [ CD ]
Line_50 $$ if (CommonClassNames.JAVA_LANG_OBJECT.equals(superType)) -->Line_51 $$ List list = subType.virtualMachine().classesByName(CommonClassNames.JAVA_LANG_OBJECT)[ CD ]
Line_6 $$ Type result-->Line_10 $$ result = getSuperType(clsType.superclass(), superType)[ FD ]
Line_9 $$ ClassType clsType = (ClassType) subType-->Line_10 $$ result = getSuperType(clsType.superclass(), superType)[ FD ]
Line_15 $$ if (typeEquals(iface, superType)) -->Line_16 $$ return iface[ CD ]
Line_14 $$ for (InterfaceType iface : clsType.allInterfaces()) -->Line_15 $$ if (typeEquals(iface, superType)) [ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_36 $$ if (superType.endsWith("[]")) [ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_24 $$ if (subType instanceof InterfaceType) [ FD ]
Line_52 $$ if (list.size() > 0) -->Line_53 $$ return (ReferenceType) list.get(0)[ CD ]
Line_45 $$ if (subType instanceof PrimitiveType) -->Line_46 $$ if (superType.equals("java.lang.Primitive")) [ CD ]
Line_7 $$ if (subType instanceof ClassType) -->Line_22 $$ return null[ CD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_35 $$ if (subType instanceof ArrayType) [ FD ]
Line_35 $$ if (subType instanceof ArrayType) -->Line_36 $$ if (superType.endsWith("[]")) [ CD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_50 $$ if (CommonClassNames.JAVA_LANG_OBJECT.equals(superType)) [ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_38 $$ String superTypeItem = superType.substring(0, superType.length() - 2)[ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_27 $$ result = getSuperType(iface, superType)[ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_15 $$ if (typeEquals(iface, superType)) [ FD ]
Line_46 $$ if (superType.equals("java.lang.Primitive")) -->Line_47 $$ return subType[ CD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_24 $$ if (subType instanceof InterfaceType) [ CD ]
Line_50 $$ if (CommonClassNames.JAVA_LANG_OBJECT.equals(superType)) -->Line_52 $$ if (list.size() > 0) [ CD ]
Line_38 $$ String superTypeItem = superType.substring(0, superType.length() - 2)-->Line_40 $$ return instanceOf(subTypeItem, superTypeItem) ? subType : null[ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_45 $$ if (subType instanceof PrimitiveType) [ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_50 $$ if (CommonClassNames.JAVA_LANG_OBJECT.equals(superType)) [ CD ]
Line_51 $$ List list = subType.virtualMachine().classesByName(CommonClassNames.JAVA_LANG_OBJECT)-->Line_52 $$ if (list.size() > 0) [ FD ]
Line_6 $$ Type result-->Line_27 $$ result = getSuperType(iface, superType)[ FD ]
Line_6 $$ Type result-->Line_28 $$ if (result != null) [ FD ]
Line_27 $$ result = getSuperType(iface, superType)-->Line_28 $$ if (result != null) [ FD ]
Line_39 $$ Type subTypeItem = ((ArrayType) subType).componentType()-->Line_40 $$ return instanceOf(subTypeItem, superTypeItem) ? subType : null[ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_10 $$ result = getSuperType(clsType.superclass(), superType)[ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_7 $$ if (subType instanceof ClassType) [ FD ]
Line_51 $$ List list = subType.virtualMachine().classesByName(CommonClassNames.JAVA_LANG_OBJECT)-->Line_53 $$ return (ReferenceType) list.get(0)[ FD ]
Line_10 $$ result = getSuperType(clsType.superclass(), superType)-->Line_27 $$ result = getSuperType(iface, superType)[ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_7 $$ if (subType instanceof ClassType) [ CD ]
Line_9 $$ ClassType clsType = (ClassType) subType-->Line_14 $$ for (InterfaceType iface : clsType.allInterfaces()) [ FD ]
Line_6 $$ Type result-->Line_11 $$ if (result != null) [ FD ]
Line_10 $$ result = getSuperType(clsType.superclass(), superType)-->Line_28 $$ if (result != null) [ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_46 $$ if (superType.equals("java.lang.Primitive")) [ FD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_3 $$ if (typeEquals(subType, superType)) [ FD ]
Line_35 $$ if (subType instanceof ArrayType) -->Line_45 $$ if (subType instanceof PrimitiveType) [ CD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_51 $$ List list = subType.virtualMachine().classesByName(CommonClassNames.JAVA_LANG_OBJECT)[ FD ]
Line_11 $$ if (result != null) -->Line_12 $$ return result[ CD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_3 $$ if (typeEquals(subType, superType)) [ CD ]
Line_28 $$ if (result != null) -->Line_29 $$ return result[ CD ]
Line_2 $$ private static Type getSuperTypeInt(@NotNull Type subType, @NotNull String superType) -->Line_56 $$ return null[ CD ]
