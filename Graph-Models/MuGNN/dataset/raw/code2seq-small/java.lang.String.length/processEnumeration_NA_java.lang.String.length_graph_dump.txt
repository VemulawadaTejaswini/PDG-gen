Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_8 $$ final String namespacePrefix = getDeclaration().getNamespacePrefix()[ CD ]
Line_4 $$ final XmlElementDescriptorImpl elementDescriptor = (XmlElementDescriptorImpl) XmlUtil.findXmlDescriptorByType(getDeclaration(), contextTag)-->Line_6 $$ return processEnumerationImpl(((ComplexTypeDescriptor) elementDescriptor.getType()).getDeclaration(), processor, forCompletion)[ FD ]
Line_4 $$ final XmlElementDescriptorImpl elementDescriptor = (XmlElementDescriptorImpl) XmlUtil.findXmlDescriptorByType(getDeclaration(), contextTag)-->Line_5 $$ if (elementDescriptor != null && elementDescriptor.getType() instanceof ComplexTypeDescriptor) [ FD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_9 $$ XmlTag type = getDeclaration().findFirstSubTag(((namespacePrefix.length() > 0) ? namespacePrefix + ":" : "") + "simpleType")[ CD ]
Line_9 $$ XmlTag type = getDeclaration().findFirstSubTag(((namespacePrefix.length() > 0) ? namespacePrefix + ":" : "") + "simpleType")-->Line_10 $$ if (type != null) [ FD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_3 $$ XmlTag contextTag = context != null ? PsiTreeUtil.getContextOfType(context, XmlTag.class, false) : null[ CD ]
Line_9 $$ XmlTag type = getDeclaration().findFirstSubTag(((namespacePrefix.length() > 0) ? namespacePrefix + ":" : "") + "simpleType")-->Line_11 $$ return processEnumerationImpl(type, processor, forCompletion)[ FD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_13 $$ return false[ CD ]
Line_5 $$ if (elementDescriptor != null && elementDescriptor.getType() instanceof ComplexTypeDescriptor) -->Line_6 $$ return processEnumerationImpl(((ComplexTypeDescriptor) elementDescriptor.getType()).getDeclaration(), processor, forCompletion)[ CD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_6 $$ return processEnumerationImpl(((ComplexTypeDescriptor) elementDescriptor.getType()).getDeclaration(), processor, forCompletion)[ FD ]
Line_8 $$ final String namespacePrefix = getDeclaration().getNamespacePrefix()-->Line_9 $$ XmlTag type = getDeclaration().findFirstSubTag(((namespacePrefix.length() > 0) ? namespacePrefix + ":" : "") + "simpleType")[ FD ]
Line_10 $$ if (type != null) -->Line_11 $$ return processEnumerationImpl(type, processor, forCompletion)[ CD ]
Line_3 $$ XmlTag contextTag = context != null ? PsiTreeUtil.getContextOfType(context, XmlTag.class, false) : null-->Line_4 $$ final XmlElementDescriptorImpl elementDescriptor = (XmlElementDescriptorImpl) XmlUtil.findXmlDescriptorByType(getDeclaration(), contextTag)[ FD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_4 $$ final XmlElementDescriptorImpl elementDescriptor = (XmlElementDescriptorImpl) XmlUtil.findXmlDescriptorByType(getDeclaration(), contextTag)[ CD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_10 $$ if (type != null) [ CD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_11 $$ return processEnumerationImpl(type, processor, forCompletion)[ FD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_3 $$ XmlTag contextTag = context != null ? PsiTreeUtil.getContextOfType(context, XmlTag.class, false) : null[ FD ]
Line_2 $$ private boolean processEnumeration(XmlElement context, PairProcessor<PsiElement, String> processor, boolean forCompletion) -->Line_5 $$ if (elementDescriptor != null && elementDescriptor.getType() instanceof ComplexTypeDescriptor) [ CD ]
