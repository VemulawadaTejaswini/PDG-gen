Line_10 $$ String content = StringUtil.read(process.getInputStream())-->Line_30 $$ String ticketId = content.substring(x, y)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_10 $$ String content = StringUtil.read(process.getInputStream())[ CD ]
Line_13 $$ int x = 0-->Line_39 $$ if (x == -1) [ FD ]
Line_49 $$ if (importShared.length == 0) -->Line_50 $$ return ticketIds[ CD ]
Line_53 $$ File currentImportSharedDir = new File(pluginDir, "../../shared/" + currentImportShared)-->Line_57 $$ ticketIds.addAll(_extractTicketIds(currentImportSharedDir, range))[ FD ]
Line_11 $$ content = StringUtil.replace(content, "\n", " ")-->Line_24 $$ if (Character.isDigit(content.charAt(y))) [ FD ]
Line_37 $$ String buildXmlContent = _fileUtil.read(buildXmlFile)-->Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)[ FD ]
Line_19 $$ int y = x + ticketIdPrefix.length() + 1-->Line_32 $$ x = y[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_11 $$ content = StringUtil.replace(content, "\n", " ")[ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_9 $$ Process process = runtime.exec(command, null, pluginDir)[ FD ]
Line_20 $$ while (true) -->Line_21 $$ if ((y + 1) > content.length()) [ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_37 $$ String buildXmlContent = _fileUtil.read(buildXmlFile)[ CD ]
Line_10 $$ String content = StringUtil.read(process.getInputStream())-->Line_21 $$ if ((y + 1) > content.length()) [ FD ]
Line_7 $$ command = "cmd /c " + command-->Line_9 $$ Process process = runtime.exec(command, null, pluginDir)[ FD ]
Line_10 $$ String content = StringUtil.read(process.getInputStream())-->Line_24 $$ if (Character.isDigit(content.charAt(y))) [ FD ]
Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)-->Line_30 $$ String ticketId = content.substring(x, y)[ FD ]
Line_39 $$ if (x == -1) -->Line_40 $$ return ticketIds[ CD ]
Line_11 $$ content = StringUtil.replace(content, "\n", " ")-->Line_21 $$ if ((y + 1) > content.length()) [ FD ]
Line_14 $$ while (true) -->Line_31 $$ ticketIds.add(ticketId)[ CD ]
Line_3 $$ Set<String> ticketIds = new TreeSet<String>(new NaturalOrderStringComparator())-->Line_57 $$ ticketIds.addAll(_extractTicketIds(currentImportSharedDir, range))[ FD ]
Line_32 $$ x = y-->Line_30 $$ String ticketId = content.substring(x, y)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_39 $$ if (x == -1) [ CD ]
Line_10 $$ String content = StringUtil.read(process.getInputStream())-->Line_11 $$ content = StringUtil.replace(content, "\n", " ")[ FD ]
Line_13 $$ int x = 0-->Line_32 $$ x = y[ FD ]
Line_14 $$ while (true) -->Line_20 $$ while (true) [ CD ]
Line_5 $$ String command = "git log " + range + " ."-->Line_9 $$ Process process = runtime.exec(command, null, pluginDir)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_45 $$ if ((x == -1) || (y == -1)) [ CD ]
Line_14 $$ while (true) -->Line_30 $$ String ticketId = content.substring(x, y)[ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_3 $$ Set<String> ticketIds = new TreeSet<String>(new NaturalOrderStringComparator())[ CD ]
Line_20 $$ while (true) -->Line_24 $$ if (Character.isDigit(content.charAt(y))) [ CD ]
Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)-->Line_42 $$ x = buildXmlContent.indexOf("value=\"", x)[ FD ]
Line_6 $$ if (OSDetector.isWindows()) -->Line_7 $$ command = "cmd /c " + command[ CD ]
Line_32 $$ x = y-->Line_39 $$ if (x == -1) [ FD ]
Line_14 $$ while (true) -->Line_16 $$ if (x == -1) [ CD ]
Line_13 $$ int x = 0-->Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)[ FD ]
Line_3 $$ Set<String> ticketIds = new TreeSet<String>(new NaturalOrderStringComparator())-->Line_31 $$ ticketIds.add(ticketId)[ FD ]
Line_32 $$ x = y-->Line_43 $$ x = buildXmlContent.indexOf("\"", x)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_4 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_37 $$ String buildXmlContent = _fileUtil.read(buildXmlFile)-->Line_48 $$ String[] importShared = StringUtil.split(buildXmlContent.substring(x + 1, y))[ FD ]
Line_32 $$ x = y-->Line_16 $$ if (x == -1) [ FD ]
Line_9 $$ Process process = runtime.exec(command, null, pluginDir)-->Line_10 $$ String content = StringUtil.read(process.getInputStream())[ FD ]
Line_32 $$ x = y-->Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_5 $$ String command = "git log " + range + " ."[ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_49 $$ if (importShared.length == 0) [ CD ]
Line_11 $$ content = StringUtil.replace(content, "\n", " ")-->Line_30 $$ String ticketId = content.substring(x, y)[ FD ]
Line_4 $$ Runtime runtime = Runtime.getRuntime()-->Line_9 $$ Process process = runtime.exec(command, null, pluginDir)[ FD ]
Line_13 $$ int x = 0-->Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)[ FD ]
Line_37 $$ String buildXmlContent = _fileUtil.read(buildXmlFile)-->Line_42 $$ x = buildXmlContent.indexOf("value=\"", x)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)[ CD ]
Line_19 $$ int y = x + ticketIdPrefix.length() + 1-->Line_25 $$ y++[ FD ]
Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)-->Line_43 $$ x = buildXmlContent.indexOf("\"", x)[ FD ]
Line_35 $$ File buildXmlFile = new File(pluginDir, "build.xml")-->Line_37 $$ String buildXmlContent = _fileUtil.read(buildXmlFile)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_9 $$ Process process = runtime.exec(command, null, pluginDir)[ CD ]
Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)-->Line_16 $$ if (x == -1) [ FD ]
Line_45 $$ if ((x == -1) || (y == -1)) -->Line_46 $$ return ticketIds[ CD ]
Line_13 $$ int x = 0-->Line_30 $$ String ticketId = content.substring(x, y)[ FD ]
Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)-->Line_39 $$ if (x == -1) [ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_42 $$ x = buildXmlContent.indexOf("value=\"", x)[ CD ]
Line_13 $$ int x = 0-->Line_42 $$ x = buildXmlContent.indexOf("value=\"", x)[ FD ]
Line_13 $$ int x = 0-->Line_43 $$ x = buildXmlContent.indexOf("\"", x)[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_38 $$ int x = buildXmlContent.indexOf("import.shared")[ CD ]
Line_42 $$ x = buildXmlContent.indexOf("value=\"", x)-->Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)[ FD ]
Line_19 $$ int y = x + ticketIdPrefix.length() + 1-->Line_48 $$ String[] importShared = StringUtil.split(buildXmlContent.substring(x + 1, y))[ FD ]
Line_19 $$ int y = x + ticketIdPrefix.length() + 1-->Line_24 $$ if (Character.isDigit(content.charAt(y))) [ FD ]
Line_14 $$ while (true) -->Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)[ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_43 $$ x = buildXmlContent.indexOf("\"", x)[ CD ]
Line_12 $$ for (String ticketIdPrefix : _TICKET_ID_PREFIXES) -->Line_19 $$ int y = x + ticketIdPrefix.length() + 1[ FD ]
Line_19 $$ int y = x + ticketIdPrefix.length() + 1-->Line_30 $$ String ticketId = content.substring(x, y)[ FD ]
Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)-->Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)[ FD ]
Line_24 $$ if (Character.isDigit(content.charAt(y))) -->Line_25 $$ y++[ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_59 $$ return ticketIds[ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_36 $$ System.out.println("## read a " + buildXmlFile)[ CD ]
Line_10 $$ String content = StringUtil.read(process.getInputStream())-->Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)[ FD ]
Line_32 $$ x = y-->Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)[ FD ]
Line_53 $$ File currentImportSharedDir = new File(pluginDir, "../../shared/" + currentImportShared)-->Line_54 $$ if (!currentImportSharedDir.exists()) [ FD ]
Line_43 $$ x = buildXmlContent.indexOf("\"", x)-->Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)[ FD ]
Line_14 $$ while (true) -->Line_32 $$ x = y[ CD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_57 $$ ticketIds.addAll(_extractTicketIds(currentImportSharedDir, range))[ FD ]
Line_13 $$ int x = 0-->Line_16 $$ if (x == -1) [ FD ]
Line_37 $$ String buildXmlContent = _fileUtil.read(buildXmlFile)-->Line_38 $$ int x = buildXmlContent.indexOf("import.shared")[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_48 $$ String[] importShared = StringUtil.split(buildXmlContent.substring(x + 1, y))[ CD ]
Line_5 $$ String command = "git log " + range + " ."-->Line_7 $$ command = "cmd /c " + command[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_35 $$ File buildXmlFile = new File(pluginDir, "build.xml")[ CD ]
Line_32 $$ x = y-->Line_42 $$ x = buildXmlContent.indexOf("value=\"", x)[ FD ]
Line_14 $$ while (true) -->Line_19 $$ int y = x + ticketIdPrefix.length() + 1[ CD ]
Line_37 $$ String buildXmlContent = _fileUtil.read(buildXmlFile)-->Line_43 $$ x = buildXmlContent.indexOf("\"", x)[ FD ]
Line_44 $$ int y = buildXmlContent.indexOf("\" />", x)-->Line_48 $$ String[] importShared = StringUtil.split(buildXmlContent.substring(x + 1, y))[ FD ]
Line_11 $$ content = StringUtil.replace(content, "\n", " ")-->Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)[ FD ]
Line_42 $$ x = buildXmlContent.indexOf("value=\"", x)-->Line_43 $$ x = buildXmlContent.indexOf("\"", x)[ FD ]
Line_15 $$ x = content.indexOf(ticketIdPrefix + "-", x)-->Line_32 $$ x = y[ FD ]
Line_2 $$ private Set<String> _extractTicketIds(File pluginDir, String range) throws Exception -->Line_6 $$ if (OSDetector.isWindows()) [ CD ]
