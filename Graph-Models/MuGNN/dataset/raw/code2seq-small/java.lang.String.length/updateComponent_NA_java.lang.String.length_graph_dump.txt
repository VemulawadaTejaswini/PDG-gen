Line_27 $$ background = getWarningBackground()-->Line_34 $$ comboBox.getEditor().getEditorComponent().setBackground(background)[ FD ]
Line_3 $$ final DomElement domElement = getDomElement()-->Line_4 $$ if (domElement == null || !domElement.isValid())[ FD ]
Line_3 $$ final DomElement domElement = getDomElement()-->Line_15 $$ if (domElement == null || !domElement.isValid())[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_30 $$ final Pair<String, Icon> pair = (Pair<String, Icon>) comboBox.getSelectedItem()[ CD ]
Line_18 $$ final DomElementsProblemsHolder holder = manager.getCachedProblemHolder(domElement)-->Line_20 $$ final List<DomElementProblemDescriptor> warningProblems = holder.getProblems(domElement, true, HighlightSeverity.WARNING)[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_19 $$ final List<DomElementProblemDescriptor> errorProblems = holder.getProblems(domElement)[ CD ]
Line_18 $$ final DomElementsProblemsHolder holder = manager.getCachedProblemHolder(domElement)-->Line_19 $$ final List<DomElementProblemDescriptor> errorProblems = holder.getProblems(domElement)[ FD ]
Line_21 $$ Color background = getDefaultBackground()-->Line_33 $$ comboBox.setBackground(background)[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_14 $$ final DomElement domElement = getDomElement()[ CD ]
Line_24 $$ background = getErrorBackground()-->Line_34 $$ comboBox.getEditor().getEditorComponent().setBackground(background)[ FD ]
Line_14 $$ final DomElement domElement = getDomElement()-->Line_19 $$ final List<DomElementProblemDescriptor> errorProblems = holder.getProblems(domElement)[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_20 $$ final List<DomElementProblemDescriptor> warningProblems = holder.getProblems(domElement, true, HighlightSeverity.WARNING)[ CD ]
Line_2 $$ protected void updateComponent() -->Line_7 $$ final Project project = getProject()[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_32 $$ background = s != null && s.trim().length() > 0 ? getDefaultBackground() : background[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_17 $$ final DomElementAnnotationsManager manager = DomElementAnnotationsManager.getInstance(project)[ CD ]
Line_23 $$ if (errorProblems.size() > 0) -->Line_24 $$ background = getErrorBackground()[ CD ]
Line_6 $$ final JComboBox comboBox = getComponent()-->Line_25 $$ comboBox.setToolTipText(TooltipUtils.getTooltipText(errorProblems))[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_33 $$ comboBox.setBackground(background)[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_34 $$ comboBox.getEditor().getEditorComponent().setBackground(background)[ CD ]
Line_7 $$ final Project project = getProject()-->Line_17 $$ final DomElementAnnotationsManager manager = DomElementAnnotationsManager.getInstance(project)[ FD ]
Line_32 $$ background = s != null && s.trim().length() > 0 ? getDefaultBackground() : background-->Line_34 $$ comboBox.getEditor().getEditorComponent().setBackground(background)[ FD ]
Line_2 $$ protected void updateComponent() -->Line_6 $$ final JComboBox comboBox = getComponent()[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_15 $$ if (domElement == null || !domElement.isValid())[ CD ]
Line_6 $$ final JComboBox comboBox = getComponent()-->Line_34 $$ comboBox.getEditor().getEditorComponent().setBackground(background)[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_18 $$ final DomElementsProblemsHolder holder = manager.getCachedProblemHolder(domElement)[ CD ]
Line_3 $$ final DomElement domElement = getDomElement()-->Line_20 $$ final List<DomElementProblemDescriptor> warningProblems = holder.getProblems(domElement, true, HighlightSeverity.WARNING)[ FD ]
Line_6 $$ final JComboBox comboBox = getComponent()-->Line_30 $$ final Pair<String, Icon> pair = (Pair<String, Icon>) comboBox.getSelectedItem()[ FD ]
Line_12 $$ if (!getDomWrapper().isValid())-->Line_13 $$ return[ CD ]
Line_20 $$ final List<DomElementProblemDescriptor> warningProblems = holder.getProblems(domElement, true, HighlightSeverity.WARNING)-->Line_26 $$ if (warningProblems.size() > 0) [ FD ]
Line_6 $$ final JComboBox comboBox = getComponent()-->Line_33 $$ comboBox.setBackground(background)[ FD ]
Line_21 $$ Color background = getDefaultBackground()-->Line_34 $$ comboBox.getEditor().getEditorComponent().setBackground(background)[ FD ]
Line_19 $$ final List<DomElementProblemDescriptor> errorProblems = holder.getProblems(domElement)-->Line_25 $$ comboBox.setToolTipText(TooltipUtils.getTooltipText(errorProblems))[ FD ]
Line_14 $$ final DomElement domElement = getDomElement()-->Line_15 $$ if (domElement == null || !domElement.isValid())[ FD ]
Line_21 $$ Color background = getDefaultBackground()-->Line_27 $$ background = getWarningBackground()[ FD ]
Line_24 $$ background = getErrorBackground()-->Line_27 $$ background = getWarningBackground()[ FD ]
Line_23 $$ if (errorProblems.size() > 0) -->Line_25 $$ comboBox.setToolTipText(TooltipUtils.getTooltipText(errorProblems))[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_12 $$ if (!getDomWrapper().isValid())[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_21 $$ Color background = getDefaultBackground()[ CD ]
Line_2 $$ protected void updateComponent() -->Line_4 $$ if (domElement == null || !domElement.isValid())[ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_23 $$ if (errorProblems.size() > 0) [ CD ]
Line_21 $$ Color background = getDefaultBackground()-->Line_24 $$ background = getErrorBackground()[ FD ]
Line_24 $$ background = getErrorBackground()-->Line_32 $$ background = s != null && s.trim().length() > 0 ? getDefaultBackground() : background[ FD ]
Line_31 $$ final String s = pair == null ? null : pair.first-->Line_32 $$ background = s != null && s.trim().length() > 0 ? getDefaultBackground() : background[ FD ]
Line_32 $$ background = s != null && s.trim().length() > 0 ? getDefaultBackground() : background-->Line_33 $$ comboBox.setBackground(background)[ FD ]
Line_2 $$ protected void updateComponent() -->Line_3 $$ final DomElement domElement = getDomElement()[ CD ]
Line_7 $$ final Project project = getProject()-->Line_10 $$ if (!project.isOpen())[ FD ]
Line_14 $$ final DomElement domElement = getDomElement()-->Line_18 $$ final DomElementsProblemsHolder holder = manager.getCachedProblemHolder(domElement)[ FD ]
Line_17 $$ final DomElementAnnotationsManager manager = DomElementAnnotationsManager.getInstance(project)-->Line_18 $$ final DomElementsProblemsHolder holder = manager.getCachedProblemHolder(domElement)[ FD ]
Line_20 $$ final List<DomElementProblemDescriptor> warningProblems = holder.getProblems(domElement, true, HighlightSeverity.WARNING)-->Line_28 $$ comboBox.setToolTipText(TooltipUtils.getTooltipText(warningProblems))[ FD ]
Line_26 $$ if (warningProblems.size() > 0) -->Line_28 $$ comboBox.setToolTipText(TooltipUtils.getTooltipText(warningProblems))[ CD ]
Line_15 $$ if (domElement == null || !domElement.isValid())-->Line_16 $$ return[ CD ]
Line_3 $$ final DomElement domElement = getDomElement()-->Line_19 $$ final List<DomElementProblemDescriptor> errorProblems = holder.getProblems(domElement)[ FD ]
Line_19 $$ final List<DomElementProblemDescriptor> errorProblems = holder.getProblems(domElement)-->Line_23 $$ if (errorProblems.size() > 0) [ FD ]
Line_3 $$ final DomElement domElement = getDomElement()-->Line_18 $$ final DomElementsProblemsHolder holder = manager.getCachedProblemHolder(domElement)[ FD ]
Line_6 $$ final JComboBox comboBox = getComponent()-->Line_22 $$ comboBox.setToolTipText(null)[ FD ]
Line_27 $$ background = getWarningBackground()-->Line_32 $$ background = s != null && s.trim().length() > 0 ? getDefaultBackground() : background[ FD ]
Line_23 $$ if (errorProblems.size() > 0) -->Line_26 $$ if (warningProblems.size() > 0) [ CD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_31 $$ final String s = pair == null ? null : pair.first[ CD ]
Line_10 $$ if (!project.isOpen())-->Line_11 $$ return[ CD ]
Line_21 $$ Color background = getDefaultBackground()-->Line_32 $$ background = s != null && s.trim().length() > 0 ? getDefaultBackground() : background[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_22 $$ comboBox.setToolTipText(null)[ CD ]
Line_26 $$ if (warningProblems.size() > 0) -->Line_27 $$ background = getWarningBackground()[ CD ]
Line_2 $$ protected void updateComponent() -->Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_27 $$ background = getWarningBackground()-->Line_33 $$ comboBox.setBackground(background)[ FD ]
Line_24 $$ background = getErrorBackground()-->Line_33 $$ comboBox.setBackground(background)[ FD ]
Line_14 $$ final DomElement domElement = getDomElement()-->Line_20 $$ final List<DomElementProblemDescriptor> warningProblems = holder.getProblems(domElement, true, HighlightSeverity.WARNING)[ FD ]
Line_8 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_10 $$ if (!project.isOpen())[ CD ]
Line_4 $$ if (domElement == null || !domElement.isValid())-->Line_5 $$ return[ CD ]
Line_6 $$ final JComboBox comboBox = getComponent()-->Line_28 $$ comboBox.setToolTipText(TooltipUtils.getTooltipText(warningProblems))[ FD ]
