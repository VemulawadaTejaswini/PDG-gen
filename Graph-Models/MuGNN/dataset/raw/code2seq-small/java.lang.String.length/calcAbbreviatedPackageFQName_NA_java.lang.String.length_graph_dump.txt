Line_10 $$ if (packageName.length() > 2 && shouldAbbreviateName(parentPackage)) -->Line_11 $$ name.insert(0, packageName.substring(0, 1))[ CD ]
Line_5 $$ final String packageName = parentPackage.getName()-->Line_11 $$ name.insert(0, packageName.substring(0, 1))[ FD ]
Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) -->Line_5 $$ final String packageName = parentPackage.getName()[ CD ]
Line_5 $$ final String packageName = parentPackage.getName()-->Line_6 $$ if (packageName == null || packageName.isEmpty()) [ FD ]
Line_3 $$ final StringBuilder name = new StringBuilder(aPackage.getName())-->Line_11 $$ name.insert(0, packageName.substring(0, 1))[ FD ]
Line_5 $$ final String packageName = parentPackage.getName()-->Line_13 $$ name.insert(0, packageName)[ FD ]
Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) -->Line_10 $$ if (packageName.length() > 2 && shouldAbbreviateName(parentPackage)) [ CD ]
Line_2 $$ public static String calcAbbreviatedPackageFQName(@NotNull PsiPackage aPackage) -->Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) [ CD ]
Line_10 $$ if (packageName.length() > 2 && shouldAbbreviateName(parentPackage)) -->Line_13 $$ name.insert(0, packageName)[ CD ]
Line_2 $$ public static String calcAbbreviatedPackageFQName(@NotNull PsiPackage aPackage) -->Line_3 $$ final StringBuilder name = new StringBuilder(aPackage.getName())[ FD ]
Line_3 $$ final StringBuilder name = new StringBuilder(aPackage.getName())-->Line_13 $$ name.insert(0, packageName)[ FD ]
Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) -->Line_10 $$ if (packageName.length() > 2 && shouldAbbreviateName(parentPackage)) [ FD ]
Line_2 $$ public static String calcAbbreviatedPackageFQName(@NotNull PsiPackage aPackage) -->Line_3 $$ final StringBuilder name = new StringBuilder(aPackage.getName())[ CD ]
Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) -->Line_5 $$ final String packageName = parentPackage.getName()[ FD ]
Line_2 $$ public static String calcAbbreviatedPackageFQName(@NotNull PsiPackage aPackage) -->Line_16 $$ return name.toString()[ CD ]
Line_5 $$ final String packageName = parentPackage.getName()-->Line_10 $$ if (packageName.length() > 2 && shouldAbbreviateName(parentPackage)) [ FD ]
Line_3 $$ final StringBuilder name = new StringBuilder(aPackage.getName())-->Line_16 $$ return name.toString()[ FD ]
Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) -->Line_6 $$ if (packageName == null || packageName.isEmpty()) [ CD ]
Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) -->Line_9 $$ name.insert(0, ".")[ CD ]
Line_3 $$ final StringBuilder name = new StringBuilder(aPackage.getName())-->Line_9 $$ name.insert(0, ".")[ FD ]
Line_2 $$ public static String calcAbbreviatedPackageFQName(@NotNull PsiPackage aPackage) -->Line_4 $$ for (PsiPackage parentPackage = aPackage.getParentPackage(); parentPackage != null; parentPackage = parentPackage.getParentPackage()) [ FD ]
