Line_20 $$ int ptr = mOutputPtr-->Line_27 $$ localName.getChars(0, len, buf, ptr)[ FD ]
Line_24 $$ ptr += len-->Line_25 $$ buf[ptr++] = ':'[ FD ]
Line_20 $$ int ptr = mOutputPtr-->Line_29 $$ buf[ptr++] = '='[ FD ]
Line_20 $$ int ptr = mOutputPtr-->Line_24 $$ ptr += len[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) [ CD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_26 $$ len = localName.length()[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_17 $$ fastWriteRaw(localName)[ CD ]
Line_6 $$ if (mCheckNames) -->Line_8 $$ verifyNameValidity(localName, mNsAware)[ CD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_21 $$ char[] buf = mOutputBuffer[ CD ]
Line_10 $$ int len = prefix.length()-->Line_24 $$ ptr += len[ FD ]
Line_20 $$ int ptr = mOutputPtr-->Line_30 $$ buf[ptr++] = '"'[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_27 $$ localName.getChars(0, len, buf, ptr)[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_14 $$ fastWriteRaw(prefix)[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_13 $$ if (prefix != null && prefix.length() > 0) [ CD ]
Line_10 $$ int len = prefix.length()-->Line_28 $$ ptr += len[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_23 $$ prefix.getChars(0, len, buf, ptr)[ CD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_12 $$ fastWriteRaw(' ')[ CD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_29 $$ buf[ptr++] = '='[ CD ]
Line_33 $$ if (vlen > 0) -->Line_34 $$ if (mAttrValueWriter != null) [ CD ]
Line_13 $$ if (prefix != null && prefix.length() > 0) -->Line_15 $$ fastWriteRaw(':')[ CD ]
Line_3 $$ if (mOut == null) -->Line_4 $$ return[ CD ]
Line_26 $$ len = localName.length()-->Line_27 $$ localName.getChars(0, len, buf, ptr)[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_10 $$ int len = prefix.length()[ CD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_24 $$ ptr += len[ CD ]
Line_26 $$ len = localName.length()-->Line_28 $$ ptr += len[ FD ]
Line_24 $$ ptr += len-->Line_30 $$ buf[ptr++] = '"'[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_25 $$ buf[ptr++] = ':'[ CD ]
Line_28 $$ ptr += len-->Line_30 $$ buf[ptr++] = '"'[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_28 $$ ptr += len[ CD ]
Line_20 $$ int ptr = mOutputPtr-->Line_22 $$ buf[ptr++] = ' '[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_18 $$ fastWriteRaw('=', '"')[ CD ]
Line_21 $$ char[] buf = mOutputBuffer-->Line_23 $$ prefix.getChars(0, len, buf, ptr)[ FD ]
Line_6 $$ if (mCheckNames) -->Line_7 $$ verifyNameValidity(prefix, mNsAware)[ CD ]
Line_20 $$ int ptr = mOutputPtr-->Line_25 $$ buf[ptr++] = ':'[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_8 $$ verifyNameValidity(localName, mNsAware)[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_17 $$ fastWriteRaw(localName)[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_30 $$ buf[ptr++] = '"'[ CD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_10 $$ int len = prefix.length()[ FD ]
Line_10 $$ int len = prefix.length()-->Line_26 $$ len = localName.length()[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_13 $$ if (prefix != null && prefix.length() > 0) [ FD ]
Line_20 $$ int ptr = mOutputPtr-->Line_23 $$ prefix.getChars(0, len, buf, ptr)[ FD ]
Line_28 $$ ptr += len-->Line_29 $$ buf[ptr++] = '='[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_7 $$ verifyNameValidity(prefix, mNsAware)[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_42 $$ fastWriteRaw('"')[ CD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_22 $$ buf[ptr++] = ' '[ CD ]
Line_10 $$ int len = prefix.length()-->Line_23 $$ prefix.getChars(0, len, buf, ptr)[ FD ]
Line_24 $$ ptr += len-->Line_28 $$ ptr += len[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_27 $$ localName.getChars(0, len, buf, ptr)[ CD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) [ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_33 $$ if (vlen > 0) [ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_6 $$ if (mCheckNames) [ CD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_23 $$ prefix.getChars(0, len, buf, ptr)[ FD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_3 $$ if (mOut == null) [ CD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_20 $$ int ptr = mOutputPtr[ CD ]
Line_10 $$ int len = prefix.length()-->Line_27 $$ localName.getChars(0, len, buf, ptr)[ FD ]
Line_24 $$ ptr += len-->Line_27 $$ localName.getChars(0, len, buf, ptr)[ FD ]
Line_20 $$ int ptr = mOutputPtr-->Line_28 $$ ptr += len[ FD ]
Line_11 $$ if (((mOutputBufLen - mOutputPtr) - (4 + localName.length() + len)) < 0) -->Line_26 $$ len = localName.length()[ CD ]
Line_21 $$ char[] buf = mOutputBuffer-->Line_27 $$ localName.getChars(0, len, buf, ptr)[ FD ]
Line_24 $$ ptr += len-->Line_29 $$ buf[ptr++] = '='[ FD ]
Line_13 $$ if (prefix != null && prefix.length() > 0) -->Line_14 $$ fastWriteRaw(prefix)[ CD ]
Line_2 $$ public void writeAttribute(String prefix, String localName, char[] value, int offset, int vlen) throws IOException, XMLStreamException -->Line_33 $$ if (vlen > 0) [ CD ]
