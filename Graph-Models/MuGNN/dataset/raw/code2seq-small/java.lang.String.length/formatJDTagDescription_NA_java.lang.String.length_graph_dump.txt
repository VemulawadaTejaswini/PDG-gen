Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_37 $$ sb.append(prefix)[ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_12 $$ str = str.substring(firstLine.length())[ FD ]
Line_5 $$ List<String> list-->Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) [ FD ]
Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())-->Line_32 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_31 $$ boolean insidePreTag = false-->Line_43 $$ insidePreTag = true[ FD ]
Line_10 $$ String firstLine = toArrayWrapping(str, rightMargin - firstLinePrefixLength).get(0)-->Line_13 $$ boolean unclosedPreTag = lineHasUnclosedPreTag(firstLine)[ FD ]
Line_32 $$ for (int i = 0; i < list.size(); i++) -->Line_33 $$ String line = list.get(i)[ FD ]
Line_32 $$ for (int i = 0; i < list.size(); i++) -->Line_34 $$ if (line.isEmpty() && !mySettings.JD_KEEP_EMPTY_LINES)[ CD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_9 $$ list = new ArrayList<String>()[ FD ]
Line_32 $$ for (int i = 0; i < list.size(); i++) -->Line_48 $$ sb.append('\n')[ CD ]
Line_36 $$ if (i != 0)-->Line_37 $$ sb.append(prefix)[ CD ]
Line_5 $$ List<String> list-->Line_32 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_41 $$ sb.append(line)[ FD ]
Line_33 $$ String line = list.get(i)-->Line_44 $$ if (line.endsWith(PRE_TAG_END)) [ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_28 $$ if (list == null) [ CD ]
Line_42 $$ if (line.startsWith(PRE_TAG_START)) -->Line_44 $$ if (line.endsWith(PRE_TAG_END)) [ CD ]
Line_31 $$ boolean insidePreTag = false-->Line_45 $$ insidePreTag = false[ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_51 $$ return sb[ CD ]
Line_9 $$ list = new ArrayList<String>()-->Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ FD ]
Line_22 $$ if (subList != null)-->Line_23 $$ list.addAll(subList)[ CD ]
Line_5 $$ List<String> list-->Line_11 $$ list.add(firstLine)[ FD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) [ FD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_14 $$ if (unclosedPreTag) [ CD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_3 $$ int rightMargin = mySettings.getRightMargin(JavaLanguage.INSTANCE)[ CD ]
Line_32 $$ for (int i = 0; i < list.size(); i++) -->Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ CD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_11 $$ list.add(firstLine)[ FD ]
Line_5 $$ List<String> list-->Line_28 $$ if (list == null) [ FD ]
Line_43 $$ insidePreTag = true-->Line_45 $$ insidePreTag = false[ FD ]
Line_9 $$ list = new ArrayList<String>()-->Line_23 $$ list.addAll(subList)[ FD ]
Line_9 $$ list = new ArrayList<String>()-->Line_11 $$ list.add(firstLine)[ FD ]
Line_45 $$ insidePreTag = false-->Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_17 $$ List<String> subList = toArrayWrapping(str, rightMargin - prefix.length())[ CD ]
Line_5 $$ List<String> list-->Line_33 $$ String line = list.get(i)[ FD ]
Line_17 $$ List<String> subList = toArrayWrapping(str, rightMargin - prefix.length())-->Line_20 $$ subList.set(0, firstLineTagRemoved)[ FD ]
Line_31 $$ boolean insidePreTag = false-->Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_9 $$ list = new ArrayList<String>()-->Line_32 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_32 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_5 $$ List<String> list[ CD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_14 $$ if (unclosedPreTag) -->Line_15 $$ str = PRE_TAG_START + str.replaceAll("^\\s+", "")[ CD ]
Line_9 $$ list = new ArrayList<String>()-->Line_28 $$ if (list == null) [ FD ]
Line_9 $$ list = new ArrayList<String>()-->Line_33 $$ String line = list.get(i)[ FD ]
Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())-->Line_28 $$ if (list == null) [ FD ]
Line_32 $$ for (int i = 0; i < list.size(); i++) -->Line_36 $$ if (i != 0)[ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_17 $$ List<String> subList = toArrayWrapping(str, rightMargin - prefix.length())[ FD ]
Line_18 $$ if (unclosedPreTag && subList != null && !subList.isEmpty()) -->Line_20 $$ subList.set(0, firstLineTagRemoved)[ CD ]
Line_10 $$ String firstLine = toArrayWrapping(str, rightMargin - firstLinePrefixLength).get(0)-->Line_12 $$ str = str.substring(firstLine.length())[ FD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_18 $$ if (unclosedPreTag && subList != null && !subList.isEmpty()) [ CD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_23 $$ list.addAll(subList)[ FD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_10 $$ String firstLine = toArrayWrapping(str, rightMargin - firstLinePrefixLength).get(0)[ CD ]
Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) -->Line_42 $$ if (line.startsWith(PRE_TAG_START)) [ CD ]
Line_28 $$ if (list == null) -->Line_29 $$ sb.append('\n')[ CD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_22 $$ if (subList != null)[ CD ]
Line_28 $$ if (list == null) -->Line_32 $$ for (int i = 0; i < list.size(); i++) [ CD ]
Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())-->Line_33 $$ String line = list.get(i)[ FD ]
Line_33 $$ String line = list.get(i)-->Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_32 $$ for (int i = 0; i < list.size(); i++) -->Line_36 $$ if (i != 0)[ CD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_33 $$ String line = list.get(i)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_48 $$ sb.append('\n')[ FD ]
Line_19 $$ String firstLineTagRemoved = subList.get(0).substring(PRE_TAG_START.length())-->Line_20 $$ subList.set(0, firstLineTagRemoved)[ FD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_11 $$ list.add(firstLine)[ CD ]
Line_5 $$ List<String> list-->Line_23 $$ list.addAll(subList)[ FD ]
Line_17 $$ List<String> subList = toArrayWrapping(str, rightMargin - prefix.length())-->Line_23 $$ list.addAll(subList)[ FD ]
Line_33 $$ String line = list.get(i)-->Line_34 $$ if (line.isEmpty() && !mySettings.JD_KEEP_EMPTY_LINES)[ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())[ FD ]
Line_17 $$ List<String> subList = toArrayWrapping(str, rightMargin - prefix.length())-->Line_22 $$ if (subList != null)[ FD ]
Line_18 $$ if (unclosedPreTag && subList != null && !subList.isEmpty()) -->Line_19 $$ String firstLineTagRemoved = subList.get(0).substring(PRE_TAG_START.length())[ CD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_12 $$ str = str.substring(firstLine.length())[ CD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_37 $$ sb.append(prefix)[ FD ]
Line_6 $$ if (mySettings.WRAP_COMMENTS) -->Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) [ CD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_15 $$ str = PRE_TAG_START + str.replaceAll("^\\s+", "")[ FD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_6 $$ if (mySettings.WRAP_COMMENTS) [ CD ]
Line_2 $$ protected StringBuilder formatJDTagDescription(@Nullable String str, @NotNull CharSequence prefix, boolean firstLineShorter, int firstLinePrefixLength) -->Line_10 $$ String firstLine = toArrayWrapping(str, rightMargin - firstLinePrefixLength).get(0)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_39 $$ sb.append(P_START_TAG)[ FD ]
Line_43 $$ insidePreTag = true-->Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) [ FD ]
Line_6 $$ if (mySettings.WRAP_COMMENTS) -->Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ CD ]
Line_42 $$ if (line.startsWith(PRE_TAG_START)) -->Line_43 $$ insidePreTag = true[ CD ]
Line_5 $$ List<String> list-->Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())[ FD ]
Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) -->Line_41 $$ sb.append(line)[ CD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_28 $$ if (list == null) [ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_29 $$ sb.append('\n')[ FD ]
Line_10 $$ String firstLine = toArrayWrapping(str, rightMargin - firstLinePrefixLength).get(0)-->Line_11 $$ list.add(firstLine)[ FD ]
Line_38 $$ if (line.isEmpty() && mySettings.JD_P_AT_EMPTY_LINES && !insidePreTag) -->Line_39 $$ sb.append(P_START_TAG)[ CD ]
Line_33 $$ String line = list.get(i)-->Line_41 $$ sb.append(line)[ FD ]
Line_28 $$ if (list == null) -->Line_31 $$ boolean insidePreTag = false[ CD ]
Line_5 $$ List<String> list-->Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ FD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_9 $$ list = new ArrayList<String>()[ CD ]
Line_6 $$ if (mySettings.WRAP_COMMENTS) -->Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())[ CD ]
Line_5 $$ List<String> list-->Line_9 $$ list = new ArrayList<String>()[ FD ]
Line_44 $$ if (line.endsWith(PRE_TAG_END)) -->Line_45 $$ insidePreTag = false[ CD ]
Line_7 $$ list = toArrayWrapping(str, rightMargin - prefix.length())-->Line_26 $$ list = toArray(str, "\n", new ArrayList<Boolean>())[ FD ]
Line_33 $$ String line = list.get(i)-->Line_42 $$ if (line.startsWith(PRE_TAG_START)) [ FD ]
Line_32 $$ for (int i = 0; i < list.size(); i++) -->Line_33 $$ String line = list.get(i)[ CD ]
Line_17 $$ List<String> subList = toArrayWrapping(str, rightMargin - prefix.length())-->Line_18 $$ if (unclosedPreTag && subList != null && !subList.isEmpty()) [ FD ]
Line_17 $$ List<String> subList = toArrayWrapping(str, rightMargin - prefix.length())-->Line_19 $$ String firstLineTagRemoved = subList.get(0).substring(PRE_TAG_START.length())[ FD ]
Line_8 $$ if (firstLineShorter && list != null && !list.isEmpty() && list.get(0).length() > rightMargin - firstLinePrefixLength) -->Line_13 $$ boolean unclosedPreTag = lineHasUnclosedPreTag(firstLine)[ CD ]
