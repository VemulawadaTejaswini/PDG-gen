Line_11 $$ for (int i = 0; i < parts.length - 1; i++) -->Line_12 $$ sb.append(parts[i])[ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_6 $$ if (path.length() <= 2) [ FD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_9 $$ String[] parts = StringUtil.split(path, CharPool.SLASH)[ FD ]
Line_4 $$ path = path.substring(5)-->Line_6 $$ if (path.length() <= 2) [ FD ]
Line_14 $$ String simpleName = parts[parts.length - 1]-->Line_15 $$ if (simpleName.startsWith(sb.toString())) [ FD ]
Line_15 $$ if (simpleName.startsWith(sb.toString())) -->Line_16 $$ return simpleName[ CD ]
Line_10 $$ StringBundler sb = new StringBundler(parts.length - 1)-->Line_12 $$ sb.append(parts[i])[ FD ]
Line_4 $$ path = path.substring(5)-->Line_9 $$ String[] parts = StringUtil.split(path, CharPool.SLASH)[ FD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_3 $$ if (path.startsWith("DLFE/")) [ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_11 $$ for (int i = 0; i < parts.length - 1; i++) [ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_6 $$ if (path.length() <= 2) [ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_18 $$ return path[ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_14 $$ String simpleName = parts[parts.length - 1][ CD ]
Line_3 $$ if (path.startsWith("DLFE/")) -->Line_4 $$ path = path.substring(5)[ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_9 $$ String[] parts = StringUtil.split(path, CharPool.SLASH)[ CD ]
Line_6 $$ if (path.length() <= 2) -->Line_7 $$ return path[ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_4 $$ path = path.substring(5)[ FD ]
Line_10 $$ StringBundler sb = new StringBundler(parts.length - 1)-->Line_15 $$ if (simpleName.startsWith(sb.toString())) [ FD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_15 $$ if (simpleName.startsWith(sb.toString())) [ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_10 $$ StringBundler sb = new StringBundler(parts.length - 1)[ CD ]
Line_2 $$ protected String unbuildPath(String path) -->Line_3 $$ if (path.startsWith("DLFE/")) [ FD ]
