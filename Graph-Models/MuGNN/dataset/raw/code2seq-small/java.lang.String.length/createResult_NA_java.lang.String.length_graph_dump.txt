Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_23 $$ final int highlightStartOffset[ CD ]
Line_26 $$ highlightStartOffset = entireLen + matcher.start(myLineRegister)-->Line_29 $$ highlightStartOffset = entireLen + matcher.start(myFileRegister)[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_12 $$ int line = 0[ CD ]
Line_7 $$ lineNumber = matcher.group(myLineRegister)-->Line_15 $$ line = Integer.parseInt(lineNumber)[ FD ]
Line_16 $$ column = Integer.parseInt(columnNumber)-->Line_22 $$ column -= 1[ FD ]
Line_3 $$ final String filePath = matcher.group(myFileRegister)-->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ FD ]
Line_23 $$ final int highlightStartOffset-->Line_29 $$ highlightStartOffset = entireLen + matcher.start(myFileRegister)[ FD ]
Line_20 $$ line -= 1-->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_29 $$ highlightStartOffset = entireLen + matcher.start(myFileRegister)[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_9 $$ if (myColumnRegister != -1) [ CD ]
Line_25 $$ if ((filePath == null || filePath.length() == 0) && myLineRegister != -1) -->Line_26 $$ highlightStartOffset = entireLen + matcher.start(myLineRegister)[ CD ]
Line_7 $$ lineNumber = matcher.group(myLineRegister)-->Line_27 $$ highlightEndOffset = highlightStartOffset + lineNumber.length()[ FD ]
Line_4 $$ String lineNumber = "0"-->Line_27 $$ highlightEndOffset = highlightStartOffset + lineNumber.length()[ FD ]
Line_4 $$ String lineNumber = "0"-->Line_7 $$ lineNumber = matcher.group(myLineRegister)[ FD ]
Line_22 $$ column -= 1-->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ FD ]
Line_24 $$ final int highlightEndOffset-->Line_30 $$ highlightEndOffset = highlightStartOffset + filePath.length()[ FD ]
Line_23 $$ final int highlightStartOffset-->Line_26 $$ highlightStartOffset = entireLen + matcher.start(myLineRegister)[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_3 $$ final String filePath = matcher.group(myFileRegister)[ FD ]
Line_13 $$ int column = 0-->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ FD ]
Line_24 $$ final int highlightEndOffset-->Line_27 $$ highlightEndOffset = highlightStartOffset + lineNumber.length()[ FD ]
Line_13 $$ int column = 0-->Line_21 $$ if (column > 0)[ FD ]
Line_9 $$ if (myColumnRegister != -1) -->Line_10 $$ columnNumber = matcher.group(myColumnRegister)[ CD ]
Line_12 $$ int line = 0-->Line_19 $$ if (line > 0)[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_26 $$ highlightStartOffset = entireLen + matcher.start(myLineRegister)[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_7 $$ lineNumber = matcher.group(myLineRegister)[ FD ]
Line_15 $$ line = Integer.parseInt(lineNumber)-->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ FD ]
Line_25 $$ if ((filePath == null || filePath.length() == 0) && myLineRegister != -1) -->Line_30 $$ highlightEndOffset = highlightStartOffset + filePath.length()[ CD ]
Line_15 $$ line = Integer.parseInt(lineNumber)-->Line_20 $$ line -= 1[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_5 $$ String columnNumber = "0"[ CD ]
Line_16 $$ column = Integer.parseInt(columnNumber)-->Line_21 $$ if (column > 0)[ FD ]
Line_3 $$ final String filePath = matcher.group(myFileRegister)-->Line_30 $$ highlightEndOffset = highlightStartOffset + filePath.length()[ FD ]
Line_5 $$ String columnNumber = "0"-->Line_10 $$ columnNumber = matcher.group(myColumnRegister)[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_6 $$ if (myLineRegister != -1) [ CD ]
Line_21 $$ if (column > 0)-->Line_22 $$ column -= 1[ CD ]
Line_25 $$ if ((filePath == null || filePath.length() == 0) && myLineRegister != -1) -->Line_29 $$ highlightStartOffset = entireLen + matcher.start(myFileRegister)[ CD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_21 $$ if (column > 0)[ CD ]
Line_27 $$ highlightEndOffset = highlightStartOffset + lineNumber.length()-->Line_30 $$ highlightEndOffset = highlightStartOffset + filePath.length()[ FD ]
Line_6 $$ if (myLineRegister != -1) -->Line_7 $$ lineNumber = matcher.group(myLineRegister)[ CD ]
Line_4 $$ String lineNumber = "0"-->Line_15 $$ line = Integer.parseInt(lineNumber)[ FD ]
Line_23 $$ final int highlightStartOffset-->Line_27 $$ highlightEndOffset = highlightStartOffset + lineNumber.length()[ FD ]
Line_5 $$ String columnNumber = "0"-->Line_16 $$ column = Integer.parseInt(columnNumber)[ FD ]
Line_10 $$ columnNumber = matcher.group(myColumnRegister)-->Line_16 $$ column = Integer.parseInt(columnNumber)[ FD ]
Line_15 $$ line = Integer.parseInt(lineNumber)-->Line_19 $$ if (line > 0)[ FD ]
Line_3 $$ final String filePath = matcher.group(myFileRegister)-->Line_25 $$ if ((filePath == null || filePath.length() == 0) && myLineRegister != -1) [ FD ]
Line_25 $$ if ((filePath == null || filePath.length() == 0) && myLineRegister != -1) -->Line_27 $$ highlightEndOffset = highlightStartOffset + lineNumber.length()[ CD ]
Line_29 $$ highlightStartOffset = entireLen + matcher.start(myFileRegister)-->Line_30 $$ highlightEndOffset = highlightStartOffset + filePath.length()[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_33 $$ return info != null ? new Result(highlightStartOffset, highlightEndOffset, info) : null[ CD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_3 $$ final String filePath = matcher.group(myFileRegister)[ CD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_13 $$ int column = 0[ CD ]
Line_12 $$ int line = 0-->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ FD ]
Line_19 $$ if (line > 0)-->Line_20 $$ line -= 1[ CD ]
Line_12 $$ int line = 0-->Line_20 $$ line -= 1[ FD ]
Line_13 $$ int column = 0-->Line_22 $$ column -= 1[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ CD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_24 $$ final int highlightEndOffset[ CD ]
Line_16 $$ column = Integer.parseInt(columnNumber)-->Line_32 $$ final HyperlinkInfo info = createOpenFileHyperlink(filePath, line, column)[ FD ]
Line_12 $$ int line = 0-->Line_15 $$ line = Integer.parseInt(lineNumber)[ FD ]
Line_26 $$ highlightStartOffset = entireLen + matcher.start(myLineRegister)-->Line_30 $$ highlightEndOffset = highlightStartOffset + filePath.length()[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_25 $$ if ((filePath == null || filePath.length() == 0) && myLineRegister != -1) [ CD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_19 $$ if (line > 0)[ CD ]
Line_23 $$ final int highlightStartOffset-->Line_30 $$ highlightEndOffset = highlightStartOffset + filePath.length()[ FD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_4 $$ String lineNumber = "0"[ CD ]
Line_2 $$ private Result createResult(final Matcher matcher, final int entireLen) -->Line_10 $$ columnNumber = matcher.group(myColumnRegister)[ FD ]
Line_26 $$ highlightStartOffset = entireLen + matcher.start(myLineRegister)-->Line_27 $$ highlightEndOffset = highlightStartOffset + lineNumber.length()[ FD ]
Line_13 $$ int column = 0-->Line_16 $$ column = Integer.parseInt(columnNumber)[ FD ]
