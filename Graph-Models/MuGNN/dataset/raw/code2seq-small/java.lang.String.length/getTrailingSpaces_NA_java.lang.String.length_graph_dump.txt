Line_4 $$ if (ignoreVisibleTrailingSpaces) -->Line_12 $$ return PropertyImpl.trailingSpaces(key)[ CD ]
Line_2 $$ private static TextRange getTrailingSpaces(PsiElement element, boolean ignoreVisibleTrailingSpaces) -->Line_3 $$ String key = element.getText()[ FD ]
Line_2 $$ private static TextRange getTrailingSpaces(PsiElement element, boolean ignoreVisibleTrailingSpaces) -->Line_4 $$ if (ignoreVisibleTrailingSpaces) [ CD ]
Line_3 $$ String key = element.getText()-->Line_7 $$ return i == key.length() - 1 ? null : new TextRange(i + 1, key.length())[ FD ]
Line_4 $$ if (ignoreVisibleTrailingSpaces) -->Line_10 $$ return element.getTextRange()[ CD ]
Line_2 $$ private static TextRange getTrailingSpaces(PsiElement element, boolean ignoreVisibleTrailingSpaces) -->Line_10 $$ return element.getTextRange()[ FD ]
Line_3 $$ String key = element.getText()-->Line_12 $$ return PropertyImpl.trailingSpaces(key)[ FD ]
Line_5 $$ for (int i = key.length() - 1; i > -1; i--) -->Line_6 $$ if (key.charAt(i) != ' ' && key.charAt(i) != '\t') [ CD ]
Line_3 $$ String key = element.getText()-->Line_6 $$ if (key.charAt(i) != ' ' && key.charAt(i) != '\t') [ FD ]
Line_2 $$ private static TextRange getTrailingSpaces(PsiElement element, boolean ignoreVisibleTrailingSpaces) -->Line_3 $$ String key = element.getText()[ CD ]
Line_3 $$ String key = element.getText()-->Line_5 $$ for (int i = key.length() - 1; i > -1; i--) [ FD ]
Line_4 $$ if (ignoreVisibleTrailingSpaces) -->Line_5 $$ for (int i = key.length() - 1; i > -1; i--) [ CD ]
Line_5 $$ for (int i = key.length() - 1; i > -1; i--) -->Line_6 $$ if (key.charAt(i) != ' ' && key.charAt(i) != '\t') [ FD ]
Line_6 $$ if (key.charAt(i) != ' ' && key.charAt(i) != '\t') -->Line_7 $$ return i == key.length() - 1 ? null : new TextRange(i + 1, key.length())[ CD ]
