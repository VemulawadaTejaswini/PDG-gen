Line_10 $$ String fieldName = null-->Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_63 $$ point.resetLon(parser.doubleValue())[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_75 $$ coerce = parser.booleanValue()[ FD ]
Line_13 $$ GeoDistance geoDistance = GeoDistanceQueryBuilder.DEFAULT_GEO_DISTANCE-->Line_109 $$ qb.geoDistance(geoDistance)[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_79 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, IGNORE_MALFORMED_FIELD)) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_71 $$ boost = parser.floatValue()[ FD ]
Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_46 $$ if (token.isValue()) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ FD ]
Line_84 $$ if (fieldName == null) -->Line_86 $$ fieldName = currentFieldName[ CD ]
Line_68 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) -->Line_70 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) [ CD ]
Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())-->Line_86 $$ fieldName = currentFieldName[ FD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_40 $$ point.resetFromGeoHash(parser.text())[ FD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_23 $$ if (token == XContentParser.Token.START_ARRAY) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_70 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_88 $$ throw new ParsingException(parser.getTokenLocation(), "[" + GeoDistanceQueryBuilder.NAME + "] field name already set to [" + fieldName + "] but found [" + currentFieldName + "]")[ FD ]
Line_8 $$ String currentFieldName = null-->Line_57 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_TYPE_FIELD)) [ FD ]
Line_17 $$ GeoValidationMethod validationMethod = null-->Line_82 $$ validationMethod = GeoValidationMethod.fromString(parser.text())[ FD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_109 $$ qb.geoDistance(geoDistance)[ FD ]
Line_80 $$ ignoreMalformed = parser.booleanValue()-->Line_106 $$ qb.setValidationMethod(GeoValidationMethod.infer(coerce, ignoreMalformed))[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_25 $$ GeoUtils.parseGeoPoint(parser, point)[ FD ]
Line_10 $$ String fieldName = null-->Line_84 $$ if (fieldName == null) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_72 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, OPTIMIZE_BBOX_FIELD)) [ FD ]
Line_5 $$ XContentParser.Token token-->Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ FD ]
Line_79 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, IGNORE_MALFORMED_FIELD)) -->Line_80 $$ ignoreMalformed = parser.booleanValue()[ CD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_21 $$ if (parseContext.isDeprecatedSetting(currentFieldName)) [ FD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_110 $$ qb.boost(boost)[ FD ]
Line_35 $$ if (currentName.equals(GeoPointFieldMapper.Names.LAT)) -->Line_36 $$ point.resetLat(parser.doubleValue())[ CD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())[ FD ]
Line_14 $$ String optimizeBbox = GeoDistanceQueryBuilder.DEFAULT_OPTIMIZE_BBOX-->Line_73 $$ optimizeBbox = parser.textOrNull()[ FD ]
Line_15 $$ boolean coerce = GeoValidationMethod.DEFAULT_LENIENT_PARSING-->Line_76 $$ if (coerce == true) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_79 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, IGNORE_MALFORMED_FIELD)) [ FD ]
Line_14 $$ String optimizeBbox = GeoDistanceQueryBuilder.DEFAULT_OPTIMIZE_BBOX-->Line_108 $$ qb.optimizeBbox(optimizeBbox)[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_80 $$ ignoreMalformed = parser.booleanValue()[ FD ]
Line_8 $$ String currentFieldName = null-->Line_20 $$ currentFieldName = parser.currentName()[ FD ]
Line_46 $$ if (token.isValue()) -->Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_FIELD)) [ CD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_46 $$ if (token.isValue()) [ FD ]
Line_65 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) -->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ CD ]
Line_5 $$ XContentParser.Token token-->Line_23 $$ if (token == XContentParser.Token.START_ARRAY) [ FD ]
Line_30 $$ fieldName = currentFieldName-->Line_86 $$ fieldName = currentFieldName[ FD ]
Line_23 $$ if (token == XContentParser.Token.START_ARRAY) -->Line_26 $$ if (token == XContentParser.Token.START_OBJECT) [ CD ]
Line_5 $$ XContentParser.Token token-->Line_26 $$ if (token == XContentParser.Token.START_OBJECT) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_30 $$ fieldName = currentFieldName[ FD ]
Line_70 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) -->Line_72 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, OPTIMIZE_BBOX_FIELD)) [ CD ]
Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())-->Line_86 $$ fieldName = currentFieldName[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_70 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) [ FD ]
Line_74 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, COERCE_FIELD)) -->Line_76 $$ if (coerce == true) [ CD ]
Line_30 $$ fieldName = currentFieldName-->Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())[ FD ]
Line_7 $$ String queryName = null-->Line_69 $$ queryName = parser.text()[ FD ]
Line_75 $$ coerce = parser.booleanValue()-->Line_106 $$ qb.setValidationMethod(GeoValidationMethod.infer(coerce, ignoreMalformed))[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ FD ]
Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())-->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_94 $$ throw new ParsingException(parser.getTokenLocation(), "geo_distance requires 'distance' to be specified")[ FD ]
Line_5 $$ XContentParser.Token token-->Line_34 $$ if (token.isValue()) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ FD ]
Line_21 $$ if (parseContext.isDeprecatedSetting(currentFieldName)) -->Line_23 $$ if (token == XContentParser.Token.START_ARRAY) [ CD ]
Line_56 $$ unit = DistanceUnit.fromString(parser.text())-->Line_98 $$ qb.distance(((Number) vDistance).doubleValue(), unit)[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_24 $$ fieldName = currentFieldName[ FD ]
Line_59 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) -->Line_62 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) [ CD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_74 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, COERCE_FIELD)) [ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_68 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) [ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_55 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, UNIT_FIELD)) [ FD ]
Line_97 $$ if (vDistance instanceof Number) -->Line_100 $$ qb.distance((String) vDistance, unit)[ CD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_FIELD)) [ FD ]
Line_75 $$ coerce = parser.booleanValue()-->Line_76 $$ if (coerce == true) [ FD ]
Line_56 $$ unit = DistanceUnit.fromString(parser.text())-->Line_100 $$ qb.distance((String) vDistance, unit)[ FD ]
Line_33 $$ currentName = parser.currentName()-->Line_39 $$ if (currentName.equals(GeoPointFieldMapper.Names.GEOHASH)) [ FD ]
Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_FIELD)) -->Line_48 $$ if (token == XContentParser.Token.VALUE_STRING) [ CD ]
Line_6 $$ float boost = AbstractQueryBuilder.DEFAULT_BOOST-->Line_71 $$ boost = parser.floatValue()[ FD ]
Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())-->Line_86 $$ fieldName = currentFieldName[ FD ]
Line_10 $$ String fieldName = null-->Line_86 $$ fieldName = currentFieldName[ FD ]
Line_11 $$ Object vDistance = null-->Line_97 $$ if (vDistance instanceof Number) [ FD ]
Line_55 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, UNIT_FIELD)) -->Line_57 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_TYPE_FIELD)) [ CD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_32 $$ if (token == XContentParser.Token.FIELD_NAME) [ FD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_104 $$ qb.setValidationMethod(validationMethod)[ FD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_25 $$ GeoUtils.parseGeoPoint(parser, point)[ FD ]
Line_10 $$ String fieldName = null-->Line_30 $$ fieldName = currentFieldName[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_65 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) [ FD ]
Line_62 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) -->Line_65 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) [ CD ]
Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())-->Line_84 $$ if (fieldName == null) [ FD ]
Line_5 $$ XContentParser.Token token-->Line_19 $$ if (token == XContentParser.Token.FIELD_NAME) [ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_72 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, OPTIMIZE_BBOX_FIELD)) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_60 $$ point.resetLat(parser.doubleValue())[ FD ]
Line_11 $$ Object vDistance = null-->Line_93 $$ if (vDistance == null) [ FD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_111 $$ qb.queryName(queryName)[ FD ]
Line_74 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, COERCE_FIELD)) -->Line_79 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, IGNORE_MALFORMED_FIELD)) [ CD ]
Line_8 $$ String currentFieldName = null-->Line_59 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) [ FD ]
Line_24 $$ fieldName = currentFieldName-->Line_30 $$ fieldName = currentFieldName[ FD ]
Line_24 $$ fieldName = currentFieldName-->Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())[ FD ]
Line_8 $$ String currentFieldName = null-->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ FD ]
Line_59 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) -->Line_60 $$ point.resetLat(parser.doubleValue())[ CD ]
Line_5 $$ XContentParser.Token token-->Line_32 $$ if (token == XContentParser.Token.FIELD_NAME) [ FD ]
Line_57 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_TYPE_FIELD)) -->Line_59 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) [ CD ]
Line_8 $$ String currentFieldName = null-->Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_81 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, VALIDATION_METHOD_FIELD)) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_55 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, UNIT_FIELD)) [ FD ]
Line_10 $$ String fieldName = null-->Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())[ FD ]
Line_19 $$ if (token == XContentParser.Token.FIELD_NAME) -->Line_20 $$ currentFieldName = parser.currentName()[ CD ]
Line_97 $$ if (vDistance instanceof Number) -->Line_98 $$ qb.distance(((Number) vDistance).doubleValue(), unit)[ CD ]
Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())-->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_86 $$ fieldName = currentFieldName[ FD ]
Line_24 $$ fieldName = currentFieldName-->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ FD ]
Line_5 $$ XContentParser.Token token-->Line_46 $$ if (token.isValue()) [ FD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_34 $$ if (token.isValue()) [ FD ]
Line_7 $$ String queryName = null-->Line_111 $$ qb.queryName(queryName)[ FD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_38 $$ point.resetLon(parser.doubleValue())[ FD ]
Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())-->Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())[ FD ]
Line_8 $$ String currentFieldName = null-->Line_74 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, COERCE_FIELD)) [ FD ]
Line_12 $$ DistanceUnit unit = GeoDistanceQueryBuilder.DEFAULT_DISTANCE_UNIT-->Line_100 $$ qb.distance((String) vDistance, unit)[ FD ]
Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_32 $$ if (token == XContentParser.Token.FIELD_NAME) [ CD ]
Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())-->Line_84 $$ if (fieldName == null) [ FD ]
Line_79 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, IGNORE_MALFORMED_FIELD)) -->Line_81 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, VALIDATION_METHOD_FIELD)) [ CD ]
Line_13 $$ GeoDistance geoDistance = GeoDistanceQueryBuilder.DEFAULT_GEO_DISTANCE-->Line_58 $$ geoDistance = GeoDistance.fromString(parser.text())[ FD ]
Line_72 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, OPTIMIZE_BBOX_FIELD)) -->Line_74 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, COERCE_FIELD)) [ CD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_19 $$ if (token == XContentParser.Token.FIELD_NAME) [ CD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_59 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) [ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_62 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_20 $$ currentFieldName = parser.currentName()[ FD ]
Line_39 $$ if (currentName.equals(GeoPointFieldMapper.Names.GEOHASH)) -->Line_40 $$ point.resetFromGeoHash(parser.text())[ CD ]
Line_72 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, OPTIMIZE_BBOX_FIELD)) -->Line_73 $$ optimizeBbox = parser.textOrNull()[ CD ]
Line_58 $$ geoDistance = GeoDistance.fromString(parser.text())-->Line_109 $$ qb.geoDistance(geoDistance)[ FD ]
Line_77 $$ ignoreMalformed = true-->Line_80 $$ ignoreMalformed = parser.booleanValue()[ FD ]
Line_103 $$ if (validationMethod != null) -->Line_106 $$ qb.setValidationMethod(GeoValidationMethod.infer(coerce, ignoreMalformed))[ CD ]
Line_35 $$ if (currentName.equals(GeoPointFieldMapper.Names.LAT)) -->Line_37 $$ if (currentName.equals(GeoPointFieldMapper.Names.LON)) [ CD ]
Line_37 $$ if (currentName.equals(GeoPointFieldMapper.Names.LON)) -->Line_39 $$ if (currentName.equals(GeoPointFieldMapper.Names.GEOHASH)) [ CD ]
Line_5 $$ XContentParser.Token token-->Line_48 $$ if (token == XContentParser.Token.VALUE_STRING) [ FD ]
Line_19 $$ if (token == XContentParser.Token.FIELD_NAME) -->Line_21 $$ if (parseContext.isDeprecatedSetting(currentFieldName)) [ CD ]
Line_82 $$ validationMethod = GeoValidationMethod.fromString(parser.text())-->Line_104 $$ qb.setValidationMethod(validationMethod)[ FD ]
Line_16 $$ boolean ignoreMalformed = GeoValidationMethod.DEFAULT_LENIENT_PARSING-->Line_106 $$ qb.setValidationMethod(GeoValidationMethod.infer(coerce, ignoreMalformed))[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_38 $$ point.resetLon(parser.doubleValue())[ FD ]
Line_103 $$ if (validationMethod != null) -->Line_104 $$ qb.setValidationMethod(validationMethod)[ CD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_102 $$ qb.point(point)[ FD ]
Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_48 $$ if (token == XContentParser.Token.VALUE_STRING) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_56 $$ unit = DistanceUnit.fromString(parser.text())[ FD ]
Line_10 $$ String fieldName = null-->Line_24 $$ fieldName = currentFieldName[ FD ]
Line_23 $$ if (token == XContentParser.Token.START_ARRAY) -->Line_24 $$ fieldName = currentFieldName[ CD ]
Line_26 $$ if (token == XContentParser.Token.START_OBJECT) -->Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ CD ]
Line_65 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) -->Line_68 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) [ CD ]
Line_15 $$ boolean coerce = GeoValidationMethod.DEFAULT_LENIENT_PARSING-->Line_75 $$ coerce = parser.booleanValue()[ FD ]
Line_24 $$ fieldName = currentFieldName-->Line_84 $$ if (fieldName == null) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_24 $$ fieldName = currentFieldName[ FD ]
Line_5 $$ XContentParser.Token token-->Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ FD ]
Line_33 $$ currentName = parser.currentName()-->Line_37 $$ if (currentName.equals(GeoPointFieldMapper.Names.LON)) [ FD ]
Line_30 $$ fieldName = currentFieldName-->Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())[ FD ]
Line_55 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, UNIT_FIELD)) -->Line_56 $$ unit = DistanceUnit.fromString(parser.text())[ CD ]
Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())-->Line_84 $$ if (fieldName == null) [ FD ]
Line_30 $$ fieldName = currentFieldName-->Line_84 $$ if (fieldName == null) [ FD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_48 $$ if (token == XContentParser.Token.VALUE_STRING) [ FD ]
Line_86 $$ fieldName = currentFieldName-->Line_84 $$ if (fieldName == null) [ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_57 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_TYPE_FIELD)) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_73 $$ optimizeBbox = parser.textOrNull()[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_58 $$ geoDistance = GeoDistance.fromString(parser.text())[ FD ]
Line_81 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, VALIDATION_METHOD_FIELD)) -->Line_82 $$ validationMethod = GeoValidationMethod.fromString(parser.text())[ CD ]
Line_32 $$ if (token == XContentParser.Token.FIELD_NAME) -->Line_33 $$ currentName = parser.currentName()[ CD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_85 $$ point.resetFromString(parser.text())[ FD ]
Line_6 $$ float boost = AbstractQueryBuilder.DEFAULT_BOOST-->Line_110 $$ qb.boost(boost)[ FD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_100 $$ qb.distance((String) vDistance, unit)[ FD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_98 $$ qb.distance(((Number) vDistance).doubleValue(), unit)[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_66 $$ point.resetFromGeoHash(parser.text())[ FD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_19 $$ if (token == XContentParser.Token.FIELD_NAME) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_33 $$ currentName = parser.currentName()[ FD ]
Line_15 $$ boolean coerce = GeoValidationMethod.DEFAULT_LENIENT_PARSING-->Line_106 $$ qb.setValidationMethod(GeoValidationMethod.infer(coerce, ignoreMalformed))[ FD ]
Line_8 $$ String currentFieldName = null-->Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_FIELD)) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_21 $$ if (parseContext.isDeprecatedSetting(currentFieldName)) [ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())[ FD ]
Line_62 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) -->Line_63 $$ point.resetLon(parser.doubleValue())[ CD ]
Line_8 $$ String currentFieldName = null-->Line_86 $$ fieldName = currentFieldName[ FD ]
Line_81 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, VALIDATION_METHOD_FIELD)) -->Line_84 $$ if (fieldName == null) [ CD ]
Line_24 $$ fieldName = currentFieldName-->Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())[ FD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_66 $$ point.resetFromGeoHash(parser.text())[ FD ]
Line_71 $$ boost = parser.floatValue()-->Line_110 $$ qb.boost(boost)[ FD ]
Line_69 $$ queryName = parser.text()-->Line_111 $$ qb.queryName(queryName)[ FD ]
Line_26 $$ if (token == XContentParser.Token.START_OBJECT) -->Line_30 $$ fieldName = currentFieldName[ CD ]
Line_33 $$ currentName = parser.currentName()-->Line_35 $$ if (currentName.equals(GeoPointFieldMapper.Names.LAT)) [ FD ]
Line_30 $$ fieldName = currentFieldName-->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ FD ]
Line_23 $$ if (token == XContentParser.Token.START_ARRAY) -->Line_25 $$ GeoUtils.parseGeoPoint(parser, point)[ CD ]
Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_FIELD)) -->Line_55 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, UNIT_FIELD)) [ CD ]
Line_62 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) -->Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())[ CD ]
Line_18 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_26 $$ if (token == XContentParser.Token.START_OBJECT) [ FD ]
Line_57 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, DISTANCE_TYPE_FIELD)) -->Line_58 $$ geoDistance = GeoDistance.fromString(parser.text())[ CD ]
Line_8 $$ String currentFieldName = null-->Line_68 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) [ FD ]
Line_77 $$ ignoreMalformed = true-->Line_106 $$ qb.setValidationMethod(GeoValidationMethod.infer(coerce, ignoreMalformed))[ FD ]
Line_34 $$ if (token.isValue()) -->Line_35 $$ if (currentName.equals(GeoPointFieldMapper.Names.LAT)) [ CD ]
Line_76 $$ if (coerce == true) -->Line_77 $$ ignoreMalformed = true[ CD ]
Line_8 $$ String currentFieldName = null-->Line_64 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LON_SUFFIX.length())[ FD ]
Line_17 $$ GeoValidationMethod validationMethod = null-->Line_104 $$ qb.setValidationMethod(validationMethod)[ FD ]
Line_37 $$ if (currentName.equals(GeoPointFieldMapper.Names.LON)) -->Line_38 $$ point.resetLon(parser.doubleValue())[ CD ]
Line_68 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) -->Line_69 $$ queryName = parser.text()[ CD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_106 $$ qb.setValidationMethod(GeoValidationMethod.infer(coerce, ignoreMalformed))[ FD ]
Line_16 $$ boolean ignoreMalformed = GeoValidationMethod.DEFAULT_LENIENT_PARSING-->Line_77 $$ ignoreMalformed = true[ FD ]
Line_8 $$ String currentFieldName = null-->Line_62 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LON_SUFFIX)) [ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_69 $$ queryName = parser.text()[ FD ]
Line_16 $$ boolean ignoreMalformed = GeoValidationMethod.DEFAULT_LENIENT_PARSING-->Line_80 $$ ignoreMalformed = parser.booleanValue()[ FD ]
Line_70 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) -->Line_71 $$ boost = parser.floatValue()[ CD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_82 $$ validationMethod = GeoValidationMethod.fromString(parser.text())[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_42 $$ throw new ParsingException(parser.getTokenLocation(), "[geo_distance] query does not support [" + currentFieldName + "]")[ FD ]
Line_8 $$ String currentFieldName = null-->Line_65 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) [ FD ]
Line_65 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.GEOHASH_SUFFIX)) -->Line_66 $$ point.resetFromGeoHash(parser.text())[ CD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_36 $$ point.resetLat(parser.doubleValue())[ FD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_63 $$ point.resetLon(parser.doubleValue())[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_40 $$ point.resetFromGeoHash(parser.text())[ FD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_60 $$ point.resetLat(parser.doubleValue())[ FD ]
Line_10 $$ String fieldName = null-->Line_67 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.GEOHASH_SUFFIX.length())[ FD ]
Line_73 $$ optimizeBbox = parser.textOrNull()-->Line_108 $$ qb.optimizeBbox(optimizeBbox)[ FD ]
Line_4 $$ XContentParser parser = parseContext.parser()-->Line_85 $$ point.resetFromString(parser.text())[ FD ]
Line_82 $$ validationMethod = GeoValidationMethod.fromString(parser.text())-->Line_103 $$ if (validationMethod != null) [ FD ]
Line_59 $$ if (currentFieldName.endsWith(GeoPointFieldMapper.Names.LAT_SUFFIX)) -->Line_61 $$ fieldName = currentFieldName.substring(0, currentFieldName.length() - GeoPointFieldMapper.Names.LAT_SUFFIX.length())[ CD ]
Line_84 $$ if (fieldName == null) -->Line_85 $$ point.resetFromString(parser.text())[ CD ]
Line_9 $$ GeoPoint point = new GeoPoint(Double.NaN, Double.NaN)-->Line_36 $$ point.resetLat(parser.doubleValue())[ FD ]
Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_32 $$ if (token == XContentParser.Token.FIELD_NAME) [ FD ]
Line_31 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_34 $$ if (token.isValue()) [ FD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_108 $$ qb.optimizeBbox(optimizeBbox)[ FD ]
Line_20 $$ currentFieldName = parser.currentName()-->Line_30 $$ fieldName = currentFieldName[ FD ]
Line_32 $$ if (token == XContentParser.Token.FIELD_NAME) -->Line_34 $$ if (token.isValue()) [ CD ]
Line_96 $$ GeoDistanceQueryBuilder qb = new GeoDistanceQueryBuilder(fieldName)-->Line_102 $$ qb.point(point)[ FD ]
Line_17 $$ GeoValidationMethod validationMethod = null-->Line_103 $$ if (validationMethod != null) [ FD ]
Line_8 $$ String currentFieldName = null-->Line_81 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, VALIDATION_METHOD_FIELD)) [ FD ]
Line_26 $$ if (token == XContentParser.Token.START_OBJECT) -->Line_46 $$ if (token.isValue()) [ CD ]
Line_74 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, COERCE_FIELD)) -->Line_75 $$ coerce = parser.booleanValue()[ CD ]
Line_12 $$ DistanceUnit unit = GeoDistanceQueryBuilder.DEFAULT_DISTANCE_UNIT-->Line_56 $$ unit = DistanceUnit.fromString(parser.text())[ FD ]
Line_12 $$ DistanceUnit unit = GeoDistanceQueryBuilder.DEFAULT_DISTANCE_UNIT-->Line_98 $$ qb.distance(((Number) vDistance).doubleValue(), unit)[ FD ]
Line_24 $$ fieldName = currentFieldName-->Line_86 $$ fieldName = currentFieldName[ FD ]
