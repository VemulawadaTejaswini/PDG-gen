Line_7 $$ TextFieldCompletionProvider field = file.getUserData(TextFieldCompletionProvider.COMPLETING_TEXT_FIELD_KEY)-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_13 $$ int offset = Math.min(text.length(), parameters.getOffset())-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_7 $$ TextFieldCompletionProvider field = file.getUserData(TextFieldCompletionProvider.COMPLETING_TEXT_FIELD_KEY)-->Line_8 $$ if (field == null)[ FD ]
Line_14 $$ String prefix = field.getPrefix(text.substring(0, offset))-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_17 $$ activeResult = result.withPrefixMatcher(prefix)-->Line_22 $$ activeResult = activeResult.caseInsensitive()[ FD ]
Line_22 $$ activeResult = activeResult.caseInsensitive()-->Line_25 $$ activeResult.stopHere()[ FD ]
Line_21 $$ if (field.isCaseInsensitivity()) -->Line_22 $$ activeResult = activeResult.caseInsensitive()[ CD ]
Line_15 $$ CompletionResultSet activeResult-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_16 $$ if (!result.getPrefixMatcher().getPrefix().equals(prefix)) -->Line_19 $$ activeResult = result[ CD ]
Line_13 $$ int offset = Math.min(text.length(), parameters.getOffset())-->Line_14 $$ String prefix = field.getPrefix(text.substring(0, offset))[ FD ]
Line_12 $$ String text = file.getText()-->Line_14 $$ String prefix = field.getPrefix(text.substring(0, offset))[ FD ]
Line_16 $$ if (!result.getPrefixMatcher().getPrefix().equals(prefix)) -->Line_17 $$ activeResult = result.withPrefixMatcher(prefix)[ CD ]
Line_12 $$ String text = file.getText()-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_17 $$ activeResult = result.withPrefixMatcher(prefix)-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_4 $$ PsiFile file = parameters.getOriginalFile()-->Line_12 $$ String text = file.getText()[ FD ]
Line_19 $$ activeResult = result-->Line_25 $$ activeResult.stopHere()[ FD ]
Line_22 $$ activeResult = activeResult.caseInsensitive()-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_10 $$ if (!(field instanceof DumbAware) && DumbService.isDumb(file.getProject()))-->Line_11 $$ return[ CD ]
Line_17 $$ activeResult = result.withPrefixMatcher(prefix)-->Line_19 $$ activeResult = result[ FD ]
Line_19 $$ activeResult = result-->Line_22 $$ activeResult = activeResult.caseInsensitive()[ FD ]
Line_5 $$ if (!(file instanceof PsiPlainTextFile))-->Line_6 $$ return[ CD ]
Line_14 $$ String prefix = field.getPrefix(text.substring(0, offset))-->Line_16 $$ if (!result.getPrefixMatcher().getPrefix().equals(prefix)) [ FD ]
Line_8 $$ if (field == null)-->Line_9 $$ return[ CD ]
Line_4 $$ PsiFile file = parameters.getOriginalFile()-->Line_7 $$ TextFieldCompletionProvider field = file.getUserData(TextFieldCompletionProvider.COMPLETING_TEXT_FIELD_KEY)[ FD ]
Line_4 $$ PsiFile file = parameters.getOriginalFile()-->Line_10 $$ if (!(field instanceof DumbAware) && DumbService.isDumb(file.getProject()))[ FD ]
Line_7 $$ TextFieldCompletionProvider field = file.getUserData(TextFieldCompletionProvider.COMPLETING_TEXT_FIELD_KEY)-->Line_21 $$ if (field.isCaseInsensitivity()) [ FD ]
Line_15 $$ CompletionResultSet activeResult-->Line_17 $$ activeResult = result.withPrefixMatcher(prefix)[ FD ]
Line_12 $$ String text = file.getText()-->Line_13 $$ int offset = Math.min(text.length(), parameters.getOffset())[ FD ]
Line_15 $$ CompletionResultSet activeResult-->Line_25 $$ activeResult.stopHere()[ FD ]
Line_17 $$ activeResult = result.withPrefixMatcher(prefix)-->Line_25 $$ activeResult.stopHere()[ FD ]
Line_19 $$ activeResult = result-->Line_24 $$ field.addCompletionVariants(text, offset, prefix, activeResult)[ FD ]
Line_14 $$ String prefix = field.getPrefix(text.substring(0, offset))-->Line_17 $$ activeResult = result.withPrefixMatcher(prefix)[ FD ]
Line_15 $$ CompletionResultSet activeResult-->Line_19 $$ activeResult = result[ FD ]
Line_7 $$ TextFieldCompletionProvider field = file.getUserData(TextFieldCompletionProvider.COMPLETING_TEXT_FIELD_KEY)-->Line_14 $$ String prefix = field.getPrefix(text.substring(0, offset))[ FD ]
Line_15 $$ CompletionResultSet activeResult-->Line_22 $$ activeResult = activeResult.caseInsensitive()[ FD ]
