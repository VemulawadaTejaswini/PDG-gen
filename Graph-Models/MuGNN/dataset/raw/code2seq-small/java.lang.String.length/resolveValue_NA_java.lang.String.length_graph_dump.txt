Line_8 $$ if (targetClass == null) -->Line_9 $$ listener.warning(String.format("Could not locate target class '%s' for field value link '%s'", targetClass, fieldName))[ CD ]
Line_18 $$ if (value == null) -->Line_20 $$ Element element = document.createElement("NO-VALUE-FOR_FIELD")[ CD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_19 $$ listener.warning(String.format("Field '%s' does not have any value", fieldName))[ FD ]
Line_7 $$ targetClass = repository.find(targetClassName)-->Line_8 $$ if (targetClass == null) [ FD ]
Line_8 $$ if (targetClass == null) -->Line_11 $$ element.appendChild(document.createTextNode(targetClassName + ":" + parts[1]))[ CD ]
Line_4 $$ ClassMetaData targetClass-->Line_15 $$ targetClass = classMetaData[ FD ]
Line_4 $$ ClassMetaData targetClass-->Line_17 $$ String value = targetClass.getConstants().get(parts[1])[ FD ]
Line_5 $$ if (parts[0].length() > 0) -->Line_8 $$ if (targetClass == null) [ CD ]
Line_5 $$ if (parts[0].length() > 0) -->Line_7 $$ targetClass = repository.find(targetClassName)[ CD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_9 $$ listener.warning(String.format("Could not locate target class '%s' for field value link '%s'", targetClass, fieldName))[ FD ]
Line_7 $$ targetClass = repository.find(targetClassName)-->Line_9 $$ listener.warning(String.format("Could not locate target class '%s' for field value link '%s'", targetClass, fieldName))[ FD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_5 $$ if (parts[0].length() > 0) [ CD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_17 $$ String value = targetClass.getConstants().get(parts[1])[ CD ]
Line_15 $$ targetClass = classMetaData-->Line_17 $$ String value = targetClass.getConstants().get(parts[1])[ FD ]
Line_15 $$ targetClass = classMetaData-->Line_21 $$ element.appendChild(document.createTextNode(targetClass.getClassName() + ":" + parts[1]))[ FD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_3 $$ String[] parts = fieldName.split("#")[ FD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_4 $$ ClassMetaData targetClass[ CD ]
Line_18 $$ if (value == null) -->Line_22 $$ return element[ CD ]
Line_4 $$ ClassMetaData targetClass-->Line_7 $$ targetClass = repository.find(targetClassName)[ FD ]
Line_10 $$ Element element = document.createElement("UNHANDLED-VALUE")-->Line_11 $$ element.appendChild(document.createTextNode(targetClassName + ":" + parts[1]))[ FD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_6 $$ String targetClassName = typeNameResolver.resolve(parts[0], classMetaData)[ FD ]
Line_8 $$ if (targetClass == null) -->Line_12 $$ return element[ CD ]
Line_18 $$ if (value == null) -->Line_21 $$ element.appendChild(document.createTextNode(targetClass.getClassName() + ":" + parts[1]))[ CD ]
Line_7 $$ targetClass = repository.find(targetClassName)-->Line_21 $$ element.appendChild(document.createTextNode(targetClass.getClassName() + ":" + parts[1]))[ FD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_24 $$ return createLiteralNode(value)[ CD ]
Line_17 $$ String value = targetClass.getConstants().get(parts[1])-->Line_18 $$ if (value == null) [ FD ]
Line_17 $$ String value = targetClass.getConstants().get(parts[1])-->Line_24 $$ return createLiteralNode(value)[ FD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_15 $$ targetClass = classMetaData[ FD ]
Line_8 $$ if (targetClass == null) -->Line_10 $$ Element element = document.createElement("UNHANDLED-VALUE")[ CD ]
Line_6 $$ String targetClassName = typeNameResolver.resolve(parts[0], classMetaData)-->Line_7 $$ targetClass = repository.find(targetClassName)[ FD ]
Line_4 $$ ClassMetaData targetClass-->Line_21 $$ element.appendChild(document.createTextNode(targetClass.getClassName() + ":" + parts[1]))[ FD ]
Line_7 $$ targetClass = repository.find(targetClassName)-->Line_17 $$ String value = targetClass.getConstants().get(parts[1])[ FD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_3 $$ String[] parts = fieldName.split("#")[ CD ]
Line_5 $$ if (parts[0].length() > 0) -->Line_6 $$ String targetClassName = typeNameResolver.resolve(parts[0], classMetaData)[ CD ]
Line_7 $$ targetClass = repository.find(targetClassName)-->Line_15 $$ targetClass = classMetaData[ FD ]
Line_4 $$ ClassMetaData targetClass-->Line_9 $$ listener.warning(String.format("Could not locate target class '%s' for field value link '%s'", targetClass, fieldName))[ FD ]
Line_4 $$ ClassMetaData targetClass-->Line_8 $$ if (targetClass == null) [ FD ]
Line_18 $$ if (value == null) -->Line_19 $$ listener.warning(String.format("Field '%s' does not have any value", fieldName))[ CD ]
Line_10 $$ Element element = document.createElement("UNHANDLED-VALUE")-->Line_21 $$ element.appendChild(document.createTextNode(targetClass.getClassName() + ":" + parts[1]))[ FD ]
Line_5 $$ if (parts[0].length() > 0) -->Line_15 $$ targetClass = classMetaData[ CD ]
Line_2 $$ public Node resolveValue(String fieldName, ClassMetaData classMetaData, GenerationListener listener) -->Line_18 $$ if (value == null) [ CD ]
