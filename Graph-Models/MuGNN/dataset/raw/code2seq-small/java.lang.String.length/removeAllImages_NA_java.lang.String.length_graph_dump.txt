Line_7 $$ int imageEndIndex = findImageEndIndexInclusive(text, i)-->Line_9 $$ TextRange linkRange = findEnclosingLink(text, i, imageEndIndex)[ FD ]
Line_8 $$ if (imageEndIndex != -1) -->Line_9 $$ TextRange linkRange = findEnclosingLink(text, i, imageEndIndex)[ CD ]
Line_28 $$ for (int intervalInd = intervals.size() - 1; intervalInd >= 0; intervalInd--) -->Line_29 $$ TextRange range = intervals.get(intervalInd)[ FD ]
Line_8 $$ if (imageEndIndex != -1) -->Line_10 $$ if (intervals == null) [ CD ]
Line_13 $$ final TextRange range-->Line_15 $$ range = linkRange[ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_9 $$ TextRange linkRange = findEnclosingLink(text, i, imageEndIndex)[ FD ]
Line_15 $$ range = linkRange-->Line_17 $$ range = new TextRange(i, imageEndIndex)[ FD ]
Line_15 $$ range = linkRange-->Line_20 $$ i = range.getEndOffset()[ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_24 $$ if (intervals == null) [ CD ]
Line_17 $$ range = new TextRange(i, imageEndIndex)-->Line_30 $$ buf.delete(range.getStartOffset(), range.getEndOffset() + 1)[ FD ]
Line_28 $$ for (int intervalInd = intervals.size() - 1; intervalInd >= 0; intervalInd--) -->Line_29 $$ TextRange range = intervals.get(intervalInd)[ CD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_5 $$ int i = 0[ CD ]
Line_3 $$ int n = text.length()-->Line_6 $$ while (i < n) [ FD ]
Line_13 $$ final TextRange range-->Line_20 $$ i = range.getEndOffset()[ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_4 $$ List<TextRange> intervals = null[ CD ]
Line_14 $$ if (linkRange != null) -->Line_15 $$ range = linkRange[ CD ]
Line_17 $$ range = new TextRange(i, imageEndIndex)-->Line_20 $$ i = range.getEndOffset()[ FD ]
Line_5 $$ int i = 0-->Line_7 $$ int imageEndIndex = findImageEndIndexInclusive(text, i)[ FD ]
Line_10 $$ if (intervals == null) -->Line_11 $$ intervals = new ArrayList<TextRange>(1)[ CD ]
Line_11 $$ intervals = new ArrayList<TextRange>(1)-->Line_24 $$ if (intervals == null) [ FD ]
Line_11 $$ intervals = new ArrayList<TextRange>(1)-->Line_28 $$ for (int intervalInd = intervals.size() - 1; intervalInd >= 0; intervalInd--) [ FD ]
Line_13 $$ final TextRange range-->Line_19 $$ intervals.add(range)[ FD ]
Line_9 $$ TextRange linkRange = findEnclosingLink(text, i, imageEndIndex)-->Line_15 $$ range = linkRange[ FD ]
Line_13 $$ final TextRange range-->Line_30 $$ buf.delete(range.getStartOffset(), range.getEndOffset() + 1)[ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_27 $$ StringBuilder buf = new StringBuilder(text)[ CD ]
Line_4 $$ List<TextRange> intervals = null-->Line_11 $$ intervals = new ArrayList<TextRange>(1)[ FD ]
Line_4 $$ List<TextRange> intervals = null-->Line_29 $$ TextRange range = intervals.get(intervalInd)[ FD ]
Line_20 $$ i = range.getEndOffset()-->Line_6 $$ while (i < n) [ FD ]
Line_11 $$ intervals = new ArrayList<TextRange>(1)-->Line_19 $$ intervals.add(range)[ FD ]
Line_17 $$ range = new TextRange(i, imageEndIndex)-->Line_19 $$ intervals.add(range)[ FD ]
Line_8 $$ if (imageEndIndex != -1) -->Line_14 $$ if (linkRange != null) [ CD ]
Line_5 $$ int i = 0-->Line_20 $$ i = range.getEndOffset()[ FD ]
Line_13 $$ final TextRange range-->Line_17 $$ range = new TextRange(i, imageEndIndex)[ FD ]
Line_11 $$ intervals = new ArrayList<TextRange>(1)-->Line_29 $$ TextRange range = intervals.get(intervalInd)[ FD ]
Line_5 $$ int i = 0-->Line_9 $$ TextRange linkRange = findEnclosingLink(text, i, imageEndIndex)[ FD ]
Line_4 $$ List<TextRange> intervals = null-->Line_19 $$ intervals.add(range)[ FD ]
Line_5 $$ int i = 0-->Line_6 $$ while (i < n) [ FD ]
Line_4 $$ List<TextRange> intervals = null-->Line_10 $$ if (intervals == null) [ FD ]
Line_20 $$ i = range.getEndOffset()-->Line_9 $$ TextRange linkRange = findEnclosingLink(text, i, imageEndIndex)[ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_3 $$ int n = text.length()[ FD ]
Line_24 $$ if (intervals == null) -->Line_25 $$ return text[ CD ]
Line_6 $$ while (i < n) -->Line_22 $$ i++[ CD ]
Line_15 $$ range = linkRange-->Line_30 $$ buf.delete(range.getStartOffset(), range.getEndOffset() + 1)[ FD ]
Line_4 $$ List<TextRange> intervals = null-->Line_24 $$ if (intervals == null) [ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_7 $$ int imageEndIndex = findImageEndIndexInclusive(text, i)[ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_3 $$ int n = text.length()[ CD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_28 $$ for (int intervalInd = intervals.size() - 1; intervalInd >= 0; intervalInd--) [ CD ]
Line_14 $$ if (linkRange != null) -->Line_17 $$ range = new TextRange(i, imageEndIndex)[ CD ]
Line_8 $$ if (imageEndIndex != -1) -->Line_20 $$ i = range.getEndOffset()[ CD ]
Line_20 $$ i = range.getEndOffset()-->Line_22 $$ i++[ FD ]
Line_15 $$ range = linkRange-->Line_19 $$ intervals.add(range)[ FD ]
Line_27 $$ StringBuilder buf = new StringBuilder(text)-->Line_32 $$ return buf.toString()[ FD ]
Line_11 $$ intervals = new ArrayList<TextRange>(1)-->Line_10 $$ if (intervals == null) [ FD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_6 $$ while (i < n) [ CD ]
Line_2 $$ private static String removeAllImages(@NotNull String text) -->Line_32 $$ return buf.toString()[ CD ]
Line_8 $$ if (imageEndIndex != -1) -->Line_13 $$ final TextRange range[ CD ]
Line_4 $$ List<TextRange> intervals = null-->Line_28 $$ for (int intervalInd = intervals.size() - 1; intervalInd >= 0; intervalInd--) [ FD ]
Line_5 $$ int i = 0-->Line_22 $$ i++[ FD ]
Line_20 $$ i = range.getEndOffset()-->Line_7 $$ int imageEndIndex = findImageEndIndexInclusive(text, i)[ FD ]
Line_28 $$ for (int intervalInd = intervals.size() - 1; intervalInd >= 0; intervalInd--) -->Line_30 $$ buf.delete(range.getStartOffset(), range.getEndOffset() + 1)[ CD ]
Line_29 $$ TextRange range = intervals.get(intervalInd)-->Line_30 $$ buf.delete(range.getStartOffset(), range.getEndOffset() + 1)[ FD ]
Line_27 $$ StringBuilder buf = new StringBuilder(text)-->Line_30 $$ buf.delete(range.getStartOffset(), range.getEndOffset() + 1)[ FD ]
Line_6 $$ while (i < n) -->Line_7 $$ int imageEndIndex = findImageEndIndexInclusive(text, i)[ CD ]
Line_8 $$ if (imageEndIndex != -1) -->Line_19 $$ intervals.add(range)[ CD ]
Line_9 $$ TextRange linkRange = findEnclosingLink(text, i, imageEndIndex)-->Line_14 $$ if (linkRange != null) [ FD ]
Line_6 $$ while (i < n) -->Line_8 $$ if (imageEndIndex != -1) [ CD ]
Line_7 $$ int imageEndIndex = findImageEndIndexInclusive(text, i)-->Line_8 $$ if (imageEndIndex != -1) [ FD ]
