Line_6 $$ final int lineNum = document.getLineNumber(offset)-->Line_8 $$ final int lineEnd = document.getLineEndOffset(lineNum)[ FD ]
Line_5 $$ final Document document = editor.getDocument()-->Line_8 $$ final int lineEnd = document.getLineEndOffset(lineNum)[ FD ]
Line_6 $$ final int lineNum = document.getLineNumber(offset)-->Line_7 $$ final int lineStart = document.getLineStartOffset(lineNum)[ FD ]
Line_9 $$ final String line = document.getText(TextRange.create(lineStart, lineEnd))-->Line_15 $$ final int insertionOffset = lineStart + StringUtil.trimTrailing(line).length()[ FD ]
Line_10 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_11 $$ final String trimmedLine = line.trim()[ CD ]
Line_13 $$ if (SectionBasedDocString.isValidSectionTitle(header)) -->Line_17 $$ processor.registerUnresolvedError(insertionOffset + patch.length())[ CD ]
Line_10 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_13 $$ if (SectionBasedDocString.isValidSectionTitle(header)) [ CD ]
Line_9 $$ final String line = document.getText(TextRange.create(lineStart, lineEnd))-->Line_11 $$ final String trimmedLine = line.trim()[ FD ]
Line_5 $$ final Document document = editor.getDocument()-->Line_9 $$ final String line = document.getText(TextRange.create(lineStart, lineEnd))[ FD ]
Line_11 $$ final String trimmedLine = line.trim()-->Line_12 $$ final String header = trimmedLine.endsWith(":") ? trimmedLine.substring(0, trimmedLine.length() - 1) : trimmedLine[ FD ]
Line_12 $$ final String header = trimmedLine.endsWith(":") ? trimmedLine.substring(0, trimmedLine.length() - 1) : trimmedLine-->Line_13 $$ if (SectionBasedDocString.isValidSectionTitle(header)) [ FD ]
Line_5 $$ final Document document = editor.getDocument()-->Line_16 $$ document.replaceString(insertionOffset, lineEnd, patch)[ FD ]
Line_8 $$ final int lineEnd = document.getLineEndOffset(lineNum)-->Line_16 $$ document.replaceString(insertionOffset, lineEnd, patch)[ FD ]
Line_11 $$ final String trimmedLine = line.trim()-->Line_14 $$ final String patch = (trimmedLine.endsWith(":") ? "\n" : ":\n") + PyIndentUtil.getLineIndent(line) + GoogleCodeStyleDocStringBuilder.getDefaultSectionIndent(pyString.getProject())[ FD ]
Line_15 $$ final int insertionOffset = lineStart + StringUtil.trimTrailing(line).length()-->Line_16 $$ document.replaceString(insertionOffset, lineEnd, patch)[ FD ]
Line_9 $$ final String line = document.getText(TextRange.create(lineStart, lineEnd))-->Line_10 $$ if (!StringUtil.isEmptyOrSpaces(line)) [ FD ]
Line_10 $$ if (!StringUtil.isEmptyOrSpaces(line)) -->Line_12 $$ final String header = trimmedLine.endsWith(":") ? trimmedLine.substring(0, trimmedLine.length() - 1) : trimmedLine[ CD ]
Line_13 $$ if (SectionBasedDocString.isValidSectionTitle(header)) -->Line_15 $$ final int insertionOffset = lineStart + StringUtil.trimTrailing(line).length()[ CD ]
Line_8 $$ final int lineEnd = document.getLineEndOffset(lineNum)-->Line_9 $$ final String line = document.getText(TextRange.create(lineStart, lineEnd))[ FD ]
Line_14 $$ final String patch = (trimmedLine.endsWith(":") ? "\n" : ":\n") + PyIndentUtil.getLineIndent(line) + GoogleCodeStyleDocStringBuilder.getDefaultSectionIndent(pyString.getProject())-->Line_16 $$ document.replaceString(insertionOffset, lineEnd, patch)[ FD ]
Line_5 $$ final Document document = editor.getDocument()-->Line_6 $$ final int lineNum = document.getLineNumber(offset)[ FD ]
Line_7 $$ final int lineStart = document.getLineStartOffset(lineNum)-->Line_9 $$ final String line = document.getText(TextRange.create(lineStart, lineEnd))[ FD ]
Line_5 $$ final Document document = editor.getDocument()-->Line_7 $$ final int lineStart = document.getLineStartOffset(lineNum)[ FD ]
Line_4 $$ final int offset = editor.getCaretModel().getOffset()-->Line_6 $$ final int lineNum = document.getLineNumber(offset)[ FD ]
Line_14 $$ final String patch = (trimmedLine.endsWith(":") ? "\n" : ":\n") + PyIndentUtil.getLineIndent(line) + GoogleCodeStyleDocStringBuilder.getDefaultSectionIndent(pyString.getProject())-->Line_17 $$ processor.registerUnresolvedError(insertionOffset + patch.length())[ FD ]
Line_13 $$ if (SectionBasedDocString.isValidSectionTitle(header)) -->Line_16 $$ document.replaceString(insertionOffset, lineEnd, patch)[ CD ]
Line_13 $$ if (SectionBasedDocString.isValidSectionTitle(header)) -->Line_14 $$ final String patch = (trimmedLine.endsWith(":") ? "\n" : ":\n") + PyIndentUtil.getLineIndent(line) + GoogleCodeStyleDocStringBuilder.getDefaultSectionIndent(pyString.getProject())[ CD ]
Line_9 $$ final String line = document.getText(TextRange.create(lineStart, lineEnd))-->Line_14 $$ final String patch = (trimmedLine.endsWith(":") ? "\n" : ":\n") + PyIndentUtil.getLineIndent(line) + GoogleCodeStyleDocStringBuilder.getDefaultSectionIndent(pyString.getProject())[ FD ]
