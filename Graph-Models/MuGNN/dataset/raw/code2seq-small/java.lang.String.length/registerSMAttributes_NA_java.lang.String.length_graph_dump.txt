Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_15 $$ attrs.put("actualFile", actualFilePath)[ FD ]
Line_17 $$ final int expectedIdx = trace.indexOf("expected:<")-->Line_20 $$ comparisonFailureMessage = trace.substring(0, expectedIdx)[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_34 $$ attrs.put("error", "true")[ FD ]
Line_3 $$ final int failureIdx = failureMessage != null ? trace.indexOf(failureMessage) : -1-->Line_21 $$ if (failureIdx > -1) [ FD ]
Line_19 $$ if (expectedIdx > 0) -->Line_20 $$ comparisonFailureMessage = trace.substring(0, expectedIdx)[ CD ]
Line_17 $$ final int expectedIdx = trace.indexOf("expected:<")-->Line_19 $$ if (expectedIdx > 0) [ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_6 $$ if (notification != null) [ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_17 $$ final int expectedIdx = trace.indexOf("expected:<")[ FD ]
Line_6 $$ if (notification != null) -->Line_10 $$ if (filePath != null) [ CD ]
Line_6 $$ if (notification != null) -->Line_19 $$ if (expectedIdx > 0) [ CD ]
Line_13 $$ final String actualFilePath = notification.getActualFilePath()-->Line_15 $$ attrs.put("actualFile", actualFilePath)[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_4 $$ final int failureMessageLength = failureMessage != null ? failureMessage.length() : 0[ CD ]
Line_20 $$ comparisonFailureMessage = trace.substring(0, expectedIdx)-->Line_24 $$ comparisonFailureMessage = (failureMessageLength > 0 ? failureMessage + "\n" : "") + "Comparison Failure: "[ FD ]
Line_9 $$ final String filePath = notification.getFilePath()-->Line_11 $$ attrs.put("expectedFile", filePath)[ FD ]
Line_6 $$ if (notification != null) -->Line_28 $$ Throwable throwableCause = null[ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_30 $$ throwableCause = throwable.getCause()[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_8 $$ attrs.put("actual", notification.getActual())[ FD ]
Line_22 $$ comparisonFailureMessage = trace.substring(0, failureIdx + failureMessageLength)-->Line_24 $$ comparisonFailureMessage = (failureMessageLength > 0 ? failureMessage + "\n" : "") + "Comparison Failure: "[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_22 $$ comparisonFailureMessage = trace.substring(0, failureIdx + failureMessageLength)[ FD ]
Line_13 $$ final String actualFilePath = notification.getActualFilePath()-->Line_14 $$ if (actualFilePath != null) [ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_5 $$ attrs.put("details", failureIdx > -1 ? trace.substring(failureIdx + failureMessageLength) : trace)[ FD ]
Line_6 $$ if (notification != null) -->Line_14 $$ if (actualFilePath != null) [ CD ]
Line_6 $$ if (notification != null) -->Line_7 $$ attrs.put("expected", notification.getExpected())[ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_13 $$ final String actualFilePath = notification.getActualFilePath()[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_20 $$ comparisonFailureMessage = trace.substring(0, expectedIdx)[ FD ]
Line_18 $$ final String comparisonFailureMessage-->Line_22 $$ comparisonFailureMessage = trace.substring(0, failureIdx + failureMessageLength)[ FD ]
Line_6 $$ if (notification != null) -->Line_26 $$ attrs.put("message", comparisonFailureMessage)[ CD ]
Line_21 $$ if (failureIdx > -1) -->Line_24 $$ comparisonFailureMessage = (failureMessageLength > 0 ? failureMessage + "\n" : "") + "Comparison Failure: "[ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_5 $$ attrs.put("details", failureIdx > -1 ? trace.substring(failureIdx + failureMessageLength) : trace)[ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_4 $$ final int failureMessageLength = failureMessage != null ? failureMessage.length() : 0[ FD ]
Line_20 $$ comparisonFailureMessage = trace.substring(0, expectedIdx)-->Line_26 $$ attrs.put("message", comparisonFailureMessage)[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_26 $$ attrs.put("message", comparisonFailureMessage)[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_33 $$ if (!isAssertionError(throwable.getClass()) && !isAssertionError(throwableCause != null ? throwableCause.getClass() : null)) [ FD ]
Line_6 $$ if (notification != null) -->Line_9 $$ final String filePath = notification.getFilePath()[ CD ]
Line_18 $$ final String comparisonFailureMessage-->Line_24 $$ comparisonFailureMessage = (failureMessageLength > 0 ? failureMessage + "\n" : "") + "Comparison Failure: "[ FD ]
Line_18 $$ final String comparisonFailureMessage-->Line_20 $$ comparisonFailureMessage = trace.substring(0, expectedIdx)[ FD ]
Line_22 $$ comparisonFailureMessage = trace.substring(0, failureIdx + failureMessageLength)-->Line_26 $$ attrs.put("message", comparisonFailureMessage)[ FD ]
Line_10 $$ if (filePath != null) -->Line_11 $$ attrs.put("expectedFile", filePath)[ CD ]
Line_30 $$ throwableCause = throwable.getCause()-->Line_33 $$ if (!isAssertionError(throwable.getClass()) && !isAssertionError(throwableCause != null ? throwableCause.getClass() : null)) [ FD ]
Line_6 $$ if (notification != null) -->Line_33 $$ if (!isAssertionError(throwable.getClass()) && !isAssertionError(throwableCause != null ? throwableCause.getClass() : null)) [ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_3 $$ final int failureIdx = failureMessage != null ? trace.indexOf(failureMessage) : -1[ FD ]
Line_6 $$ if (notification != null) -->Line_36 $$ attrs.put("message", failureIdx > -1 ? trace.substring(0, failureIdx + failureMessageLength) : failureMessage != null ? failureMessage : "")[ CD ]
Line_18 $$ final String comparisonFailureMessage-->Line_26 $$ attrs.put("message", comparisonFailureMessage)[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_6 $$ if (notification != null) [ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_36 $$ attrs.put("message", failureIdx > -1 ? trace.substring(0, failureIdx + failureMessageLength) : failureMessage != null ? failureMessage : "")[ FD ]
Line_6 $$ if (notification != null) -->Line_13 $$ final String actualFilePath = notification.getActualFilePath()[ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_3 $$ final int failureIdx = failureMessage != null ? trace.indexOf(failureMessage) : -1[ CD ]
Line_28 $$ Throwable throwableCause = null-->Line_30 $$ throwableCause = throwable.getCause()[ FD ]
Line_28 $$ Throwable throwableCause = null-->Line_33 $$ if (!isAssertionError(throwable.getClass()) && !isAssertionError(throwableCause != null ? throwableCause.getClass() : null)) [ FD ]
Line_20 $$ comparisonFailureMessage = trace.substring(0, expectedIdx)-->Line_22 $$ comparisonFailureMessage = trace.substring(0, failureIdx + failureMessageLength)[ FD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_7 $$ attrs.put("expected", notification.getExpected())[ FD ]
Line_19 $$ if (expectedIdx > 0) -->Line_21 $$ if (failureIdx > -1) [ CD ]
Line_6 $$ if (notification != null) -->Line_18 $$ final String comparisonFailureMessage[ CD ]
Line_33 $$ if (!isAssertionError(throwable.getClass()) && !isAssertionError(throwableCause != null ? throwableCause.getClass() : null)) -->Line_34 $$ attrs.put("error", "true")[ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_9 $$ final String filePath = notification.getFilePath()[ FD ]
Line_14 $$ if (actualFilePath != null) -->Line_15 $$ attrs.put("actualFile", actualFilePath)[ CD ]
Line_6 $$ if (notification != null) -->Line_17 $$ final int expectedIdx = trace.indexOf("expected:<")[ CD ]
Line_24 $$ comparisonFailureMessage = (failureMessageLength > 0 ? failureMessage + "\n" : "") + "Comparison Failure: "-->Line_26 $$ attrs.put("message", comparisonFailureMessage)[ FD ]
Line_21 $$ if (failureIdx > -1) -->Line_22 $$ comparisonFailureMessage = trace.substring(0, failureIdx + failureMessageLength)[ CD ]
Line_6 $$ if (notification != null) -->Line_8 $$ attrs.put("actual", notification.getActual())[ CD ]
Line_2 $$ public static void registerSMAttributes(ComparisonFailureData notification, String trace, String failureMessage, Map attrs, Throwable throwable) -->Line_11 $$ attrs.put("expectedFile", filePath)[ FD ]
Line_9 $$ final String filePath = notification.getFilePath()-->Line_10 $$ if (filePath != null) [ FD ]
