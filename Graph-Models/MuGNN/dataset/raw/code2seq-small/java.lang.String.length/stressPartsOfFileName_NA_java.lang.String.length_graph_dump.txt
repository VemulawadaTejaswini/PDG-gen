Line_3 $$ if (change instanceof AbstractFilePatchInProgress.PatchChange) -->Line_4 $$ final AbstractFilePatchInProgress.PatchChange patchChange = (AbstractFilePatchInProgress.PatchChange) change[ CD ]
Line_2 $$ public List<Pair<String, Stress>> stressPartsOfFileName(final Change change, final String parentPath) -->Line_8 $$ return Arrays.asList(Pair.create(basePathCorrected, Stress.BOLD), Pair.create(StringUtil.tail(parentPath, basePathCorrected.length()), Stress.PLAIN))[ FD ]
Line_2 $$ public List<Pair<String, Stress>> stressPartsOfFileName(final Change change, final String parentPath) -->Line_3 $$ if (change instanceof AbstractFilePatchInProgress.PatchChange) [ CD ]
Line_6 $$ final String basePathCorrected = basePath.trim().replace('/', File.separatorChar)-->Line_7 $$ if (parentPath.startsWith(basePathCorrected)) [ FD ]
Line_2 $$ public List<Pair<String, Stress>> stressPartsOfFileName(final Change change, final String parentPath) -->Line_11 $$ return null[ CD ]
Line_3 $$ if (change instanceof AbstractFilePatchInProgress.PatchChange) -->Line_5 $$ final String basePath = patchChange.getPatchInProgress().getBase().getPath()[ CD ]
Line_3 $$ if (change instanceof AbstractFilePatchInProgress.PatchChange) -->Line_7 $$ if (parentPath.startsWith(basePathCorrected)) [ CD ]
Line_7 $$ if (parentPath.startsWith(basePathCorrected)) -->Line_8 $$ return Arrays.asList(Pair.create(basePathCorrected, Stress.BOLD), Pair.create(StringUtil.tail(parentPath, basePathCorrected.length()), Stress.PLAIN))[ CD ]
Line_6 $$ final String basePathCorrected = basePath.trim().replace('/', File.separatorChar)-->Line_8 $$ return Arrays.asList(Pair.create(basePathCorrected, Stress.BOLD), Pair.create(StringUtil.tail(parentPath, basePathCorrected.length()), Stress.PLAIN))[ FD ]
Line_5 $$ final String basePath = patchChange.getPatchInProgress().getBase().getPath()-->Line_6 $$ final String basePathCorrected = basePath.trim().replace('/', File.separatorChar)[ FD ]
Line_2 $$ public List<Pair<String, Stress>> stressPartsOfFileName(final Change change, final String parentPath) -->Line_7 $$ if (parentPath.startsWith(basePathCorrected)) [ FD ]
Line_4 $$ final AbstractFilePatchInProgress.PatchChange patchChange = (AbstractFilePatchInProgress.PatchChange) change-->Line_5 $$ final String basePath = patchChange.getPatchInProgress().getBase().getPath()[ FD ]
Line_3 $$ if (change instanceof AbstractFilePatchInProgress.PatchChange) -->Line_6 $$ final String basePathCorrected = basePath.trim().replace('/', File.separatorChar)[ CD ]
Line_2 $$ public List<Pair<String, Stress>> stressPartsOfFileName(final Change change, final String parentPath) -->Line_3 $$ if (change instanceof AbstractFilePatchInProgress.PatchChange) [ FD ]
