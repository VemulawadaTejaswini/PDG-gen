Line_36 $$ if (raw) -->Line_37 $$ str = wholeMatch[ CD ]
Line_24 $$ str = new String(new char[] -->Line_40 $$ str = escapeMap.get(toReplace)[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_39 $$ final String toReplace = escapeRegexGroup(escMatcher, EscapeRegexGroup.ESCAPED_SUBSTRING)[ FD ]
Line_20 $$ final String str-->Line_40 $$ str = escapeMap.get(toReplace)[ FD ]
Line_22 $$ str = new String(new char[] -->Line_40 $$ str = escapeMap.get(toReplace)[ FD ]
Line_24 $$ str = new String(new char[] -->Line_35 $$ str = s[ FD ]
Line_8 $$ if (index < escMatcher.start()) -->Line_11 $$ result.add(Pair.create(offsetRange, range.substring(encoded)))[ CD ]
Line_28 $$ String s = wholeMatch-->Line_35 $$ str = s[ FD ]
Line_20 $$ final String str-->Line_26 $$ str = unicode ? new String(new char[] [ FD ]
Line_35 $$ str = s-->Line_42 $$ if (str != null) [ FD ]
Line_6 $$ int index = 0-->Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())[ FD ]
Line_35 $$ str = s-->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_39 $$ final String toReplace = escapeRegexGroup(escMatcher, EscapeRegexGroup.ESCAPED_SUBSTRING)-->Line_40 $$ str = escapeMap.get(toReplace)[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_43 $$ final TextRange wholeMatchRange = TextRange.create(escMatcher.start(), escMatcher.end())[ FD ]
Line_24 $$ str = new String(new char[] -->Line_26 $$ str = unicode ? new String(new char[] [ FD ]
Line_26 $$ str = unicode ? new String(new char[] -->Line_40 $$ str = escapeMap.get(toReplace)[ FD ]
Line_20 $$ final String str-->Line_35 $$ str = s[ FD ]
Line_26 $$ str = unicode ? new String(new char[] -->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_36 $$ if (raw) -->Line_39 $$ final String toReplace = escapeRegexGroup(escMatcher, EscapeRegexGroup.ESCAPED_SUBSTRING)[ CD ]
Line_20 $$ final String str-->Line_37 $$ str = wholeMatch[ FD ]
Line_35 $$ str = s-->Line_40 $$ str = escapeMap.get(toReplace)[ FD ]
Line_13 $$ final String octal = escapeRegexGroup(escMatcher, EscapeRegexGroup.OCTAL)-->Line_22 $$ str = new String(new char[] [ FD ]
Line_22 $$ str = new String(new char[] -->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_7 $$ while (escMatcher.find(index)) [ FD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_21 $$ if (!raw && octal != null) [ CD ]
Line_25 $$ if (escapedUnicode && unicode16 != null) -->Line_26 $$ str = unicode ? new String(new char[] [ CD ]
Line_18 $$ final String wholeMatch = escapeRegexGroup(escMatcher, EscapeRegexGroup.WHOLE_MATCH)-->Line_37 $$ str = wholeMatch[ FD ]
Line_40 $$ str = escapeMap.get(toReplace)-->Line_42 $$ if (str != null) [ FD ]
Line_46 $$ index = escMatcher.end()-->Line_7 $$ while (escMatcher.find(index)) [ FD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_19 $$ final boolean escapedUnicode = raw && unicode || !raw[ CD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_20 $$ final String str[ CD ]
Line_6 $$ int index = 0-->Line_48 $$ final TextRange range = TextRange.create(index, encoded.length())[ FD ]
Line_26 $$ str = unicode ? new String(new char[] -->Line_42 $$ if (str != null) [ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_13 $$ final String octal = escapeRegexGroup(escMatcher, EscapeRegexGroup.OCTAL)[ FD ]
Line_20 $$ final String str-->Line_42 $$ if (str != null) [ FD ]
Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())-->Line_49 $$ final TextRange offRange = range.shiftRight(offset)[ FD ]
Line_4 $$ final List<Pair<TextRange, String>> result = new ArrayList<Pair<TextRange, String>>()-->Line_50 $$ result.add(Pair.create(offRange, range.substring(encoded)))[ FD ]
Line_31 $$ s = new String(Character.toChars((int) Long.parseLong(unicode32, 16)))-->Line_35 $$ str = s[ FD ]
Line_27 $$ if (escapedUnicode && unicode32 != null) -->Line_29 $$ if (unicode) [ CD ]
Line_28 $$ String s = wholeMatch-->Line_31 $$ s = new String(Character.toChars((int) Long.parseLong(unicode32, 16)))[ FD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_14 $$ final String hex = escapeRegexGroup(escMatcher, EscapeRegexGroup.HEXADECIMAL)[ CD ]
Line_49 $$ final TextRange offRange = range.shiftRight(offset)-->Line_50 $$ result.add(Pair.create(offRange, range.substring(encoded)))[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())[ FD ]
Line_23 $$ if (!raw && hex != null) -->Line_24 $$ str = new String(new char[] [ CD ]
Line_24 $$ str = new String(new char[] -->Line_37 $$ str = wholeMatch[ FD ]
Line_22 $$ str = new String(new char[] -->Line_26 $$ str = unicode ? new String(new char[] [ FD ]
Line_6 $$ int index = 0-->Line_46 $$ index = escMatcher.end()[ FD ]
Line_20 $$ final String str-->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_46 $$ index = escMatcher.end()-->Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())[ FD ]
Line_23 $$ if (!raw && hex != null) -->Line_25 $$ if (escapedUnicode && unicode16 != null) [ CD ]
Line_37 $$ str = wholeMatch-->Line_40 $$ str = escapeMap.get(toReplace)[ FD ]
Line_20 $$ final String str-->Line_24 $$ str = new String(new char[] [ FD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_17 $$ final String unicode32 = escapeRegexGroup(escMatcher, EscapeRegexGroup.UNICODE_32BIT)[ CD ]
Line_25 $$ if (escapedUnicode && unicode16 != null) -->Line_27 $$ if (escapedUnicode && unicode32 != null) [ CD ]
Line_46 $$ index = escMatcher.end()-->Line_8 $$ if (index < escMatcher.start()) [ FD ]
Line_42 $$ if (str != null) -->Line_43 $$ final TextRange wholeMatchRange = TextRange.create(escMatcher.start(), escMatcher.end())[ CD ]
Line_8 $$ if (index < escMatcher.start()) -->Line_10 $$ final TextRange offsetRange = range.shiftRight(offset)[ CD ]
Line_35 $$ str = s-->Line_37 $$ str = wholeMatch[ FD ]
Line_20 $$ final String str-->Line_22 $$ str = new String(new char[] [ FD ]
Line_22 $$ str = new String(new char[] -->Line_37 $$ str = wholeMatch[ FD ]
Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())-->Line_50 $$ result.add(Pair.create(offRange, range.substring(encoded)))[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_8 $$ if (index < escMatcher.start()) [ FD ]
Line_6 $$ int index = 0-->Line_8 $$ if (index < escMatcher.start()) [ FD ]
Line_22 $$ str = new String(new char[] -->Line_42 $$ if (str != null) [ FD ]
Line_10 $$ final TextRange offsetRange = range.shiftRight(offset)-->Line_11 $$ result.add(Pair.create(offsetRange, range.substring(encoded)))[ FD ]
Line_24 $$ str = new String(new char[] -->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_26 $$ str = unicode ? new String(new char[] -->Line_37 $$ str = wholeMatch[ FD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_8 $$ if (index < escMatcher.start()) [ CD ]
Line_21 $$ if (!raw && octal != null) -->Line_23 $$ if (!raw && hex != null) [ CD ]
Line_17 $$ final String unicode32 = escapeRegexGroup(escMatcher, EscapeRegexGroup.UNICODE_32BIT)-->Line_31 $$ s = new String(Character.toChars((int) Long.parseLong(unicode32, 16)))[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_18 $$ final String wholeMatch = escapeRegexGroup(escMatcher, EscapeRegexGroup.WHOLE_MATCH)[ FD ]
Line_37 $$ str = wholeMatch-->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_48 $$ final TextRange range = TextRange.create(index, encoded.length())-->Line_49 $$ final TextRange offRange = range.shiftRight(offset)[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_46 $$ index = escMatcher.end()[ FD ]
Line_8 $$ if (index < escMatcher.start()) -->Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())[ CD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_18 $$ final String wholeMatch = escapeRegexGroup(escMatcher, EscapeRegexGroup.WHOLE_MATCH)[ CD ]
Line_4 $$ final List<Pair<TextRange, String>> result = new ArrayList<Pair<TextRange, String>>()-->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_42 $$ if (str != null) -->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ CD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_14 $$ final String hex = escapeRegexGroup(escMatcher, EscapeRegexGroup.HEXADECIMAL)[ FD ]
Line_4 $$ final List<Pair<TextRange, String>> result = new ArrayList<Pair<TextRange, String>>()-->Line_11 $$ result.add(Pair.create(offsetRange, range.substring(encoded)))[ FD ]
Line_48 $$ final TextRange range = TextRange.create(index, encoded.length())-->Line_50 $$ result.add(Pair.create(offRange, range.substring(encoded)))[ FD ]
Line_19 $$ final boolean escapedUnicode = raw && unicode || !raw-->Line_25 $$ if (escapedUnicode && unicode16 != null) [ FD ]
Line_24 $$ str = new String(new char[] -->Line_42 $$ if (str != null) [ FD ]
Line_22 $$ str = new String(new char[] -->Line_35 $$ str = s[ FD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_46 $$ index = escMatcher.end()[ CD ]
Line_27 $$ if (escapedUnicode && unicode32 != null) -->Line_35 $$ str = s[ CD ]
Line_21 $$ if (!raw && octal != null) -->Line_22 $$ str = new String(new char[] [ CD ]
Line_19 $$ final boolean escapedUnicode = raw && unicode || !raw-->Line_27 $$ if (escapedUnicode && unicode32 != null) [ FD ]
Line_14 $$ final String hex = escapeRegexGroup(escMatcher, EscapeRegexGroup.HEXADECIMAL)-->Line_24 $$ str = new String(new char[] [ FD ]
Line_46 $$ index = escMatcher.end()-->Line_48 $$ final TextRange range = TextRange.create(index, encoded.length())[ FD ]
Line_43 $$ final TextRange wholeMatchRange = TextRange.create(escMatcher.start(), escMatcher.end())-->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_37 $$ str = wholeMatch-->Line_42 $$ if (str != null) [ FD ]
Line_36 $$ if (raw) -->Line_40 $$ str = escapeMap.get(toReplace)[ CD ]
Line_27 $$ if (escapedUnicode && unicode32 != null) -->Line_28 $$ String s = wholeMatch[ CD ]
Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())-->Line_11 $$ result.add(Pair.create(offsetRange, range.substring(encoded)))[ FD ]
Line_5 $$ final Matcher escMatcher = PATTERN_ESCAPE.matcher(encoded)-->Line_17 $$ final String unicode32 = escapeRegexGroup(escMatcher, EscapeRegexGroup.UNICODE_32BIT)[ FD ]
Line_6 $$ int index = 0-->Line_7 $$ while (escMatcher.find(index)) [ FD ]
Line_26 $$ str = unicode ? new String(new char[] -->Line_35 $$ str = s[ FD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_42 $$ if (str != null) [ CD ]
Line_7 $$ while (escMatcher.find(index)) -->Line_13 $$ final String octal = escapeRegexGroup(escMatcher, EscapeRegexGroup.OCTAL)[ CD ]
Line_27 $$ if (escapedUnicode && unicode32 != null) -->Line_36 $$ if (raw) [ CD ]
Line_40 $$ str = escapeMap.get(toReplace)-->Line_44 $$ result.add(Pair.create(wholeMatchRange.shiftRight(offset), str))[ FD ]
Line_9 $$ final TextRange range = TextRange.create(index, escMatcher.start())-->Line_10 $$ final TextRange offsetRange = range.shiftRight(offset)[ FD ]
Line_22 $$ str = new String(new char[] -->Line_24 $$ str = new String(new char[] [ FD ]
