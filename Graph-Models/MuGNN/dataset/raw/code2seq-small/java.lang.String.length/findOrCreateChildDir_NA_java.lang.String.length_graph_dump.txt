Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_6 $$ final List<String> dirs = StringUtil.split(trimPath, "/")[ CD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_5 $$ String trimPath = StringUtil.trimStart(relativePath, "/")[ CD ]
Line_18 $$ root = dir-->Line_21 $$ root = root.createChildDirectory(this, dirName)[ FD ]
Line_11 $$ root = root.getParent()-->Line_21 $$ root = root.createChildDirectory(this, dirName)[ FD ]
Line_17 $$ if (dir != null) -->Line_18 $$ root = dir[ CD ]
Line_16 $$ VirtualFile dir = root.findChild(dirName)-->Line_18 $$ root = dir[ FD ]
Line_16 $$ VirtualFile dir = root.findChild(dirName)-->Line_17 $$ if (dir != null) [ FD ]
Line_7 $$ for (String dirName : dirs) -->Line_8 $$ if (dirName.equals("."))[ FD ]
Line_7 $$ for (String dirName : dirs) -->Line_10 $$ if (dirName.equals("..")) [ FD ]
Line_10 $$ if (dirName.equals("..")) -->Line_11 $$ root = root.getParent()[ CD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_21 $$ root = root.createChildDirectory(this, dirName)[ FD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_18 $$ root = dir[ FD ]
Line_7 $$ for (String dirName : dirs) -->Line_16 $$ VirtualFile dir = root.findChild(dirName)[ FD ]
Line_11 $$ root = root.getParent()-->Line_18 $$ root = dir[ FD ]
Line_7 $$ for (String dirName : dirs) -->Line_21 $$ root = root.createChildDirectory(this, dirName)[ FD ]
Line_10 $$ if (dirName.equals("..")) -->Line_12 $$ if (root == null)[ CD ]
Line_5 $$ String trimPath = StringUtil.trimStart(relativePath, "/")-->Line_6 $$ final List<String> dirs = StringUtil.split(trimPath, "/")[ FD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_12 $$ if (root == null)[ FD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_3 $$ if (relativePath.length() == 0)[ CD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_11 $$ root = root.getParent()[ FD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_3 $$ if (relativePath.length() == 0)[ FD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_16 $$ VirtualFile dir = root.findChild(dirName)[ FD ]
Line_11 $$ root = root.getParent()-->Line_16 $$ VirtualFile dir = root.findChild(dirName)[ FD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_5 $$ String trimPath = StringUtil.trimStart(relativePath, "/")[ FD ]
Line_3 $$ if (relativePath.length() == 0)-->Line_4 $$ return root[ CD ]
Line_2 $$ private VirtualFile findOrCreateChildDir(VirtualFile root, String relativePath) throws IOException -->Line_27 $$ return root[ CD ]
Line_11 $$ root = root.getParent()-->Line_12 $$ if (root == null)[ FD ]
