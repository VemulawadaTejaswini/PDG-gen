Line_24 $$ offset += intersectionLength-->Line_29 $$ if (offset == offsetInDecoded) [ FD ]
Line_10 $$ final int valueLength = value.length()-->Line_14 $$ if (valueLength == 1) [ FD ]
Line_3 $$ int offset = 0-->Line_15 $$ if (offset == offsetInDecoded) [ FD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_29 $$ if (offset == offsetInDecoded) [ CD ]
Line_7 $$ final TextRange intersection = encodedTextRange.intersection(rangeInsideHost)-->Line_22 $$ return intersection.getStartOffset() + delta[ FD ]
Line_8 $$ if (intersection != null && !intersection.isEmpty()) -->Line_26 $$ endOffset = intersection.getEndOffset()[ CD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_29 $$ if (offset == offsetInDecoded) [ FD ]
Line_15 $$ if (offset == offsetInDecoded) -->Line_16 $$ return intersection.getStartOffset()[ CD ]
Line_9 $$ final String value = fragment.getSecond()-->Line_10 $$ final int valueLength = value.length()[ FD ]
Line_14 $$ if (valueLength == 1) -->Line_20 $$ if (offset + intersectionLength >= offsetInDecoded) [ CD ]
Line_29 $$ if (offset == offsetInDecoded) -->Line_30 $$ return endOffset[ CD ]
Line_5 $$ for (Pair<TextRange, String> fragment : myHost.getDecodedFragments()) -->Line_6 $$ final TextRange encodedTextRange = fragment.getFirst()[ FD ]
Line_7 $$ final TextRange intersection = encodedTextRange.intersection(rangeInsideHost)-->Line_11 $$ final int intersectionLength = intersection.getLength()[ FD ]
Line_10 $$ final int valueLength = value.length()-->Line_12 $$ if (valueLength == 0) [ FD ]
Line_14 $$ if (valueLength == 1) -->Line_15 $$ if (offset == offsetInDecoded) [ CD ]
Line_5 $$ for (Pair<TextRange, String> fragment : myHost.getDecodedFragments()) -->Line_9 $$ final String value = fragment.getSecond()[ FD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_4 $$ int endOffset = -1[ CD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_3 $$ int offset = 0[ CD ]
Line_11 $$ final int intersectionLength = intersection.getLength()-->Line_24 $$ offset += intersectionLength[ FD ]
Line_6 $$ final TextRange encodedTextRange = fragment.getFirst()-->Line_7 $$ final TextRange intersection = encodedTextRange.intersection(rangeInsideHost)[ FD ]
Line_3 $$ int offset = 0-->Line_18 $$ offset++[ FD ]
Line_7 $$ final TextRange intersection = encodedTextRange.intersection(rangeInsideHost)-->Line_16 $$ return intersection.getStartOffset()[ FD ]
Line_4 $$ int endOffset = -1-->Line_26 $$ endOffset = intersection.getEndOffset()[ FD ]
Line_14 $$ if (valueLength == 1) -->Line_24 $$ offset += intersectionLength[ CD ]
Line_12 $$ if (valueLength == 0) -->Line_13 $$ return -1[ CD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_32 $$ return -1[ CD ]
Line_8 $$ if (intersection != null && !intersection.isEmpty()) -->Line_11 $$ final int intersectionLength = intersection.getLength()[ CD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_20 $$ if (offset + intersectionLength >= offsetInDecoded) [ FD ]
Line_8 $$ if (intersection != null && !intersection.isEmpty()) -->Line_10 $$ final int valueLength = value.length()[ CD ]
Line_3 $$ int offset = 0-->Line_29 $$ if (offset == offsetInDecoded) [ FD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_7 $$ final TextRange intersection = encodedTextRange.intersection(rangeInsideHost)[ FD ]
Line_12 $$ if (valueLength == 0) -->Line_14 $$ if (valueLength == 1) [ CD ]
Line_3 $$ int offset = 0-->Line_24 $$ offset += intersectionLength[ FD ]
Line_20 $$ if (offset + intersectionLength >= offsetInDecoded) -->Line_21 $$ final int delta = offsetInDecoded - offset[ CD ]
Line_20 $$ if (offset + intersectionLength >= offsetInDecoded) -->Line_22 $$ return intersection.getStartOffset() + delta[ CD ]
Line_7 $$ final TextRange intersection = encodedTextRange.intersection(rangeInsideHost)-->Line_26 $$ endOffset = intersection.getEndOffset()[ FD ]
Line_7 $$ final TextRange intersection = encodedTextRange.intersection(rangeInsideHost)-->Line_8 $$ if (intersection != null && !intersection.isEmpty()) [ FD ]
Line_8 $$ if (intersection != null && !intersection.isEmpty()) -->Line_12 $$ if (valueLength == 0) [ CD ]
Line_14 $$ if (valueLength == 1) -->Line_18 $$ offset++[ CD ]
Line_2 $$ public int getOffsetInHost(final int offsetInDecoded, @NotNull final TextRange rangeInsideHost) -->Line_15 $$ if (offset == offsetInDecoded) [ FD ]
Line_8 $$ if (intersection != null && !intersection.isEmpty()) -->Line_9 $$ final String value = fragment.getSecond()[ CD ]
