Line_5 $$ if (env != null) -->Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")[ CD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_36 $$ inOrb = CorbaORBService.getCurrent()[ FD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_36 $$ inOrb = CorbaORBService.getCurrent()[ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_4 $$ String ncIor = null[ CD ]
Line_15 $$ inOrb = CorbaORBService.getCurrent()-->Line_35 $$ if (inOrb == null) [ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_5 $$ if (env != null) [ FD ]
Line_4 $$ String ncIor = null-->Line_13 $$ ncIor = getStringifiedIor(provUrl)[ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_9 $$ if (env != null) [ CD ]
Line_23 $$ org.omg.CORBA.Object obj = _nc.resolve(_name)-->Line_24 $$ _nc = NamingContextHelper.narrow(obj)[ FD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_37 $$ IIOPLogger.ROOT_LOGGER.debugf("Getting default ORB %s", inOrb)[ FD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)[ FD ]
Line_9 $$ if (env != null) -->Line_10 $$ provUrl = (String) env.get(javax.naming.Context.PROVIDER_URL)[ CD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_35 $$ if (inOrb == null) [ FD ]
Line_10 $$ provUrl = (String) env.get(javax.naming.Context.PROVIDER_URL)-->Line_13 $$ ncIor = getStringifiedIor(provUrl)[ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_3 $$ org.omg.CORBA.ORB inOrb = null[ CD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_37 $$ IIOPLogger.ROOT_LOGGER.debugf("Getting default ORB %s", inOrb)[ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_9 $$ if (env != null) [ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_12 $$ if (provUrl != null && !isCorbaUrl(provUrl)) [ CD ]
Line_15 $$ inOrb = CorbaORBService.getCurrent()-->Line_37 $$ IIOPLogger.ROOT_LOGGER.debugf("Getting default ORB %s", inOrb)[ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_5 $$ if (env != null) [ CD ]
Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)-->Line_26 $$ throw IIOPLogger.ROOT_LOGGER.notANamingContext(insName)[ FD ]
Line_12 $$ if (provUrl != null && !isCorbaUrl(provUrl)) -->Line_18 $$ if (provUrl != null) [ CD ]
Line_14 $$ if (inOrb == null) -->Line_15 $$ inOrb = CorbaORBService.getCurrent()[ CD ]
Line_18 $$ if (provUrl != null) -->Line_20 $$ if (insName.length() > 0) [ CD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_14 $$ if (inOrb == null) [ FD ]
Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)-->Line_20 $$ if (insName.length() > 0) [ FD ]
Line_35 $$ if (inOrb == null) -->Line_36 $$ inOrb = CorbaORBService.getCurrent()[ CD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_39 $$ setOrbAndRootContext(inOrb, (String) null)[ FD ]
Line_13 $$ ncIor = getStringifiedIor(provUrl)-->Line_17 $$ setOrbAndRootContext(inOrb, ncIor)[ FD ]
Line_8 $$ String provUrl = null-->Line_18 $$ if (provUrl != null) [ FD ]
Line_15 $$ inOrb = CorbaORBService.getCurrent()-->Line_39 $$ setOrbAndRootContext(inOrb, (String) null)[ FD ]
Line_36 $$ inOrb = CorbaORBService.getCurrent()-->Line_39 $$ setOrbAndRootContext(inOrb, (String) null)[ FD ]
Line_15 $$ inOrb = CorbaORBService.getCurrent()-->Line_17 $$ setOrbAndRootContext(inOrb, ncIor)[ FD ]
Line_18 $$ if (provUrl != null) -->Line_35 $$ if (inOrb == null) [ CD ]
Line_10 $$ provUrl = (String) env.get(javax.naming.Context.PROVIDER_URL)-->Line_12 $$ if (provUrl != null && !isCorbaUrl(provUrl)) [ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")[ FD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_15 $$ inOrb = CorbaORBService.getCurrent()[ FD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_17 $$ setOrbAndRootContext(inOrb, ncIor)[ FD ]
Line_12 $$ if (provUrl != null && !isCorbaUrl(provUrl)) -->Line_13 $$ ncIor = getStringifiedIor(provUrl)[ CD ]
Line_10 $$ provUrl = (String) env.get(javax.naming.Context.PROVIDER_URL)-->Line_18 $$ if (provUrl != null) [ FD ]
Line_8 $$ String provUrl = null-->Line_12 $$ if (provUrl != null && !isCorbaUrl(provUrl)) [ FD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")[ FD ]
Line_20 $$ if (insName.length() > 0) -->Line_21 $$ _name = parser.nameToCosName(parser.parse(insName))[ CD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)[ FD ]
Line_35 $$ if (inOrb == null) -->Line_37 $$ IIOPLogger.ROOT_LOGGER.debugf("Getting default ORB %s", inOrb)[ CD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_10 $$ provUrl = (String) env.get(javax.naming.Context.PROVIDER_URL)[ FD ]
Line_12 $$ if (provUrl != null && !isCorbaUrl(provUrl)) -->Line_14 $$ if (inOrb == null) [ CD ]
Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)-->Line_21 $$ _name = parser.nameToCosName(parser.parse(insName))[ FD ]
Line_36 $$ inOrb = CorbaORBService.getCurrent()-->Line_37 $$ IIOPLogger.ROOT_LOGGER.debugf("Getting default ORB %s", inOrb)[ FD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_15 $$ inOrb = CorbaORBService.getCurrent()[ FD ]
Line_8 $$ String provUrl = null-->Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)[ FD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_17 $$ setOrbAndRootContext(inOrb, ncIor)[ FD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_35 $$ if (inOrb == null) [ FD ]
Line_4 $$ String ncIor = null-->Line_17 $$ setOrbAndRootContext(inOrb, ncIor)[ FD ]
Line_8 $$ String provUrl = null-->Line_10 $$ provUrl = (String) env.get(javax.naming.Context.PROVIDER_URL)[ FD ]
Line_15 $$ inOrb = CorbaORBService.getCurrent()-->Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)[ FD ]
Line_15 $$ inOrb = CorbaORBService.getCurrent()-->Line_36 $$ inOrb = CorbaORBService.getCurrent()[ FD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_8 $$ String provUrl = null[ CD ]
Line_12 $$ if (provUrl != null && !isCorbaUrl(provUrl)) -->Line_17 $$ setOrbAndRootContext(inOrb, ncIor)[ CD ]
Line_18 $$ if (provUrl != null) -->Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)[ CD ]
Line_3 $$ org.omg.CORBA.ORB inOrb = null-->Line_39 $$ setOrbAndRootContext(inOrb, (String) null)[ FD ]
Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)-->Line_29 $$ throw IIOPLogger.ROOT_LOGGER.notANamingContext(insName)[ FD ]
Line_10 $$ provUrl = (String) env.get(javax.naming.Context.PROVIDER_URL)-->Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)[ FD ]
Line_8 $$ String provUrl = null-->Line_13 $$ ncIor = getStringifiedIor(provUrl)[ FD ]
Line_6 $$ inOrb = (org.omg.CORBA.ORB) env.get("java.naming.corba.orb")-->Line_14 $$ if (inOrb == null) [ FD ]
Line_18 $$ if (provUrl != null) -->Line_39 $$ setOrbAndRootContext(inOrb, (String) null)[ CD ]
Line_2 $$ private void initOrbAndRootContext(Hashtable env) throws NamingException -->Line_19 $$ String insName = initUsingUrl(inOrb, provUrl, env)[ FD ]
