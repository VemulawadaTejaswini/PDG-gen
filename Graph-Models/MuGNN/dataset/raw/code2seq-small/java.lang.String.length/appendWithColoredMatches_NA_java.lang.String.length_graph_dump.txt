Line_3 $$ SimpleTextAttributes plain = new SimpleTextAttributes(STYLE_PLAIN, fg)-->Line_12 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, fragments, plain, highlighted)[ FD ]
Line_5 $$ List<TextRange> fragments = ContainerUtil.newArrayList()-->Line_9 $$ fragments.add(TextRange.from(matchStart, pattern.length()))[ FD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_9 $$ fragments.add(TextRange.from(matchStart, pattern.length()))[ FD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_3 $$ SimpleTextAttributes plain = new SimpleTextAttributes(STYLE_PLAIN, fg)[ CD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_12 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, fragments, plain, highlighted)[ FD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_4 $$ SimpleTextAttributes highlighted = new SimpleTextAttributes(null, fg, null, STYLE_SEARCH_MATCH)[ CD ]
Line_7 $$ int matchStart = StringUtil.indexOfIgnoreCase(name, pattern, 0)-->Line_8 $$ if (matchStart >= 0) [ FD ]
Line_8 $$ if (matchStart >= 0) -->Line_9 $$ fragments.add(TextRange.from(matchStart, pattern.length()))[ CD ]
Line_5 $$ List<TextRange> fragments = ContainerUtil.newArrayList()-->Line_12 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, fragments, plain, highlighted)[ FD ]
Line_4 $$ SimpleTextAttributes highlighted = new SimpleTextAttributes(null, fg, null, STYLE_SEARCH_MATCH)-->Line_12 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, fragments, plain, highlighted)[ FD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_5 $$ List<TextRange> fragments = ContainerUtil.newArrayList()[ CD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_12 $$ SpeedSearchUtil.appendColoredFragments(nameComponent, name, fragments, plain, highlighted)[ CD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_7 $$ int matchStart = StringUtil.indexOfIgnoreCase(name, pattern, 0)[ FD ]
Line_2 $$ private static void appendWithColoredMatches(SimpleColoredComponent nameComponent, String name, String pattern, Color fg, boolean selected) -->Line_6 $$ if (selected) [ CD ]
Line_6 $$ if (selected) -->Line_8 $$ if (matchStart >= 0) [ CD ]
Line_7 $$ int matchStart = StringUtil.indexOfIgnoreCase(name, pattern, 0)-->Line_9 $$ fragments.add(TextRange.from(matchStart, pattern.length()))[ FD ]
Line_6 $$ if (selected) -->Line_7 $$ int matchStart = StringUtil.indexOfIgnoreCase(name, pattern, 0)[ CD ]
