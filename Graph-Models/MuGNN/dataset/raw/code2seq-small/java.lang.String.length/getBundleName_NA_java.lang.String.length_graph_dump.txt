Line_14 $$ String bundleName = propertiesFile.getResourceBundle().getBaseName()-->Line_18 $$ bundleName = bundleName.replace('.', '/')[ FD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_14 $$ String bundleName = propertiesFile.getResourceBundle().getBaseName()[ FD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_8 $$ final PsiPackage aPackage = JavaDirectoryService.getInstance().getPackage(directory)[ CD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_18 $$ bundleName = bundleName.replace('.', '/')[ CD ]
Line_7 $$ final String packageName-->Line_10 $$ packageName = ""[ FD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_15 $$ if (packageName.length() > 0) [ CD ]
Line_15 $$ if (packageName.length() > 0) -->Line_16 $$ bundleName = packageName + '.' + bundleName[ CD ]
Line_8 $$ final PsiPackage aPackage = JavaDirectoryService.getInstance().getPackage(directory)-->Line_9 $$ if (aPackage == null) [ FD ]
Line_4 $$ if (directory == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_19 $$ return bundleName[ CD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_9 $$ if (aPackage == null) [ CD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_7 $$ final String packageName[ CD ]
Line_10 $$ packageName = ""-->Line_15 $$ if (packageName.length() > 0) [ FD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_4 $$ if (directory == null) [ CD ]
Line_12 $$ packageName = aPackage.getQualifiedName()-->Line_15 $$ if (packageName.length() > 0) [ FD ]
Line_3 $$ final PsiDirectory directory = propertiesFile.getParent()-->Line_4 $$ if (directory == null) [ FD ]
Line_9 $$ if (aPackage == null) -->Line_12 $$ packageName = aPackage.getQualifiedName()[ CD ]
Line_7 $$ final String packageName-->Line_12 $$ packageName = aPackage.getQualifiedName()[ FD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_14 $$ String bundleName = propertiesFile.getResourceBundle().getBaseName()[ CD ]
Line_14 $$ String bundleName = propertiesFile.getResourceBundle().getBaseName()-->Line_16 $$ bundleName = packageName + '.' + bundleName[ FD ]
Line_8 $$ final PsiPackage aPackage = JavaDirectoryService.getInstance().getPackage(directory)-->Line_12 $$ packageName = aPackage.getQualifiedName()[ FD ]
Line_10 $$ packageName = ""-->Line_12 $$ packageName = aPackage.getQualifiedName()[ FD ]
Line_7 $$ final String packageName-->Line_15 $$ if (packageName.length() > 0) [ FD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_3 $$ final PsiDirectory directory = propertiesFile.getParent()[ CD ]
Line_16 $$ bundleName = packageName + '.' + bundleName-->Line_18 $$ bundleName = bundleName.replace('.', '/')[ FD ]
Line_2 $$ public static String getBundleName(final PropertiesFile propertiesFile) -->Line_3 $$ final PsiDirectory directory = propertiesFile.getParent()[ FD ]
Line_9 $$ if (aPackage == null) -->Line_10 $$ packageName = ""[ CD ]
Line_3 $$ final PsiDirectory directory = propertiesFile.getParent()-->Line_8 $$ final PsiPackage aPackage = JavaDirectoryService.getInstance().getPackage(directory)[ FD ]
