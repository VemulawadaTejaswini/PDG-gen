Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_3 $$ if ((host.startsWith("#") && host.endsWith("#")) || (host.startsWith("_") && host.endsWith("_"))) [ CD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_42 $$ return InetAddress.getAllByName(host)[ FD ]
Line_32 $$ host = host.substring(0, host.length() - 5)-->Line_35 $$ host = host.substring(0, host.length() - 5)[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_6 $$ InetAddress[] addresses = customNameResolver.resolveIfPossible(host)[ FD ]
Line_3 $$ if ((host.startsWith("#") && host.endsWith("#")) || (host.startsWith("_") && host.endsWith("_"))) -->Line_4 $$ host = host.substring(1, host.length() - 1)[ CD ]
Line_32 $$ host = host.substring(0, host.length() - 5)-->Line_36 $$ return NetworkUtils.filterIPV6(NetworkUtils.getAddressesForInterface(host))[ FD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_34 $$ if (host.endsWith(":ipv6")) [ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_33 $$ return NetworkUtils.filterIPV4(NetworkUtils.getAddressesForInterface(host))[ FD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_35 $$ host = host.substring(0, host.length() - 5)[ FD ]
Line_6 $$ InetAddress[] addresses = customNameResolver.resolveIfPossible(host)-->Line_7 $$ if (addresses != null) [ FD ]
Line_31 $$ if (host.endsWith(":ipv4")) -->Line_33 $$ return NetworkUtils.filterIPV4(NetworkUtils.getAddressesForInterface(host))[ CD ]
Line_35 $$ host = host.substring(0, host.length() - 5)-->Line_42 $$ return InetAddress.getAllByName(host)[ FD ]
Line_32 $$ host = host.substring(0, host.length() - 5)-->Line_33 $$ return NetworkUtils.filterIPV4(NetworkUtils.getAddressesForInterface(host))[ FD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_42 $$ return InetAddress.getAllByName(host)[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_3 $$ if ((host.startsWith("#") && host.endsWith("#")) || (host.startsWith("_") && host.endsWith("_"))) [ FD ]
Line_34 $$ if (host.endsWith(":ipv6")) -->Line_35 $$ host = host.substring(0, host.length() - 5)[ CD ]
Line_5 $$ for (CustomNameResolver customNameResolver : customNameResolvers) -->Line_6 $$ InetAddress[] addresses = customNameResolver.resolveIfPossible(host)[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_34 $$ if (host.endsWith(":ipv6")) [ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_36 $$ return NetworkUtils.filterIPV6(NetworkUtils.getAddressesForInterface(host))[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_38 $$ return NetworkUtils.getAddressesForInterface(host)[ FD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_38 $$ return NetworkUtils.getAddressesForInterface(host)[ FD ]
Line_34 $$ if (host.endsWith(":ipv6")) -->Line_36 $$ return NetworkUtils.filterIPV6(NetworkUtils.getAddressesForInterface(host))[ CD ]
Line_35 $$ host = host.substring(0, host.length() - 5)-->Line_36 $$ return NetworkUtils.filterIPV6(NetworkUtils.getAddressesForInterface(host))[ FD ]
Line_31 $$ if (host.endsWith(":ipv4")) -->Line_32 $$ host = host.substring(0, host.length() - 5)[ CD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_42 $$ return InetAddress.getAllByName(host)[ CD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_33 $$ return NetworkUtils.filterIPV4(NetworkUtils.getAddressesForInterface(host))[ FD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_32 $$ host = host.substring(0, host.length() - 5)[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_31 $$ if (host.endsWith(":ipv4")) [ FD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_6 $$ InetAddress[] addresses = customNameResolver.resolveIfPossible(host)[ FD ]
Line_35 $$ host = host.substring(0, host.length() - 5)-->Line_38 $$ return NetworkUtils.getAddressesForInterface(host)[ FD ]
Line_32 $$ host = host.substring(0, host.length() - 5)-->Line_34 $$ if (host.endsWith(":ipv6")) [ FD ]
Line_31 $$ if (host.endsWith(":ipv4")) -->Line_34 $$ if (host.endsWith(":ipv6")) [ CD ]
Line_34 $$ if (host.endsWith(":ipv6")) -->Line_38 $$ return NetworkUtils.getAddressesForInterface(host)[ CD ]
Line_32 $$ host = host.substring(0, host.length() - 5)-->Line_38 $$ return NetworkUtils.getAddressesForInterface(host)[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_4 $$ host = host.substring(1, host.length() - 1)[ FD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_31 $$ if (host.endsWith(":ipv4")) [ FD ]
Line_7 $$ if (addresses != null) -->Line_8 $$ return addresses[ CD ]
Line_4 $$ host = host.substring(1, host.length() - 1)-->Line_36 $$ return NetworkUtils.filterIPV6(NetworkUtils.getAddressesForInterface(host))[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_35 $$ host = host.substring(0, host.length() - 5)[ FD ]
Line_32 $$ host = host.substring(0, host.length() - 5)-->Line_42 $$ return InetAddress.getAllByName(host)[ FD ]
Line_2 $$ private InetAddress[] resolveInternal(String host) throws IOException -->Line_32 $$ host = host.substring(0, host.length() - 5)[ FD ]
