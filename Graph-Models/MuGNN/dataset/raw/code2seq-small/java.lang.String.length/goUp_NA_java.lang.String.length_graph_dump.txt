Line_10 $$ if (newPath.length() < branchRootPath.length()) -->Line_20 $$ result = checkPathGoingUp(revisionAsked, targetRevision, branchRootPath, newPath, newTrunkUrl, false)[ CD ]
Line_7 $$ result = SvnMergeInfoCache.MergeCheckResult.NOT_MERGED-->Line_17 $$ result = svnInfo == null || svnInfo.getURL() == null ? SvnMergeInfoCache.MergeCheckResult.NOT_MERGED : goUpInRepo(revisionAsked, targetRevision, svnInfo.getURL().removePathTail(), newTrunkUrl)[ FD ]
Line_4 $$ SvnMergeInfoCache.MergeCheckResult result-->Line_7 $$ result = SvnMergeInfoCache.MergeCheckResult.NOT_MERGED[ FD ]
Line_6 $$ if (newTrunkUrl.length() == 0 || "/".equals(newTrunkUrl)) -->Line_10 $$ if (newPath.length() < branchRootPath.length()) [ CD ]
Line_9 $$ String newPath = new File(path).getParent()-->Line_10 $$ if (newPath.length() < branchRootPath.length()) [ FD ]
Line_5 $$ String newTrunkUrl = SVNPathUtil.removeTail(trunkUrl).trim()-->Line_17 $$ result = svnInfo == null || svnInfo.getURL() == null ? SvnMergeInfoCache.MergeCheckResult.NOT_MERGED : goUpInRepo(revisionAsked, targetRevision, svnInfo.getURL().removePathTail(), newTrunkUrl)[ FD ]
Line_16 $$ Info svnInfo = myVcs.getInfo(new File(branchRootPath))-->Line_17 $$ result = svnInfo == null || svnInfo.getURL() == null ? SvnMergeInfoCache.MergeCheckResult.NOT_MERGED : goUpInRepo(revisionAsked, targetRevision, svnInfo.getURL().removePathTail(), newTrunkUrl)[ FD ]
Line_5 $$ String newTrunkUrl = SVNPathUtil.removeTail(trunkUrl).trim()-->Line_20 $$ result = checkPathGoingUp(revisionAsked, targetRevision, branchRootPath, newPath, newTrunkUrl, false)[ FD ]
Line_5 $$ String newTrunkUrl = SVNPathUtil.removeTail(trunkUrl).trim()-->Line_6 $$ if (newTrunkUrl.length() == 0 || "/".equals(newTrunkUrl)) [ FD ]
Line_17 $$ result = svnInfo == null || svnInfo.getURL() == null ? SvnMergeInfoCache.MergeCheckResult.NOT_MERGED : goUpInRepo(revisionAsked, targetRevision, svnInfo.getURL().removePathTail(), newTrunkUrl)-->Line_20 $$ result = checkPathGoingUp(revisionAsked, targetRevision, branchRootPath, newPath, newTrunkUrl, false)[ FD ]
Line_7 $$ result = SvnMergeInfoCache.MergeCheckResult.NOT_MERGED-->Line_20 $$ result = checkPathGoingUp(revisionAsked, targetRevision, branchRootPath, newPath, newTrunkUrl, false)[ FD ]
Line_4 $$ SvnMergeInfoCache.MergeCheckResult result-->Line_17 $$ result = svnInfo == null || svnInfo.getURL() == null ? SvnMergeInfoCache.MergeCheckResult.NOT_MERGED : goUpInRepo(revisionAsked, targetRevision, svnInfo.getURL().removePathTail(), newTrunkUrl)[ FD ]
Line_6 $$ if (newTrunkUrl.length() == 0 || "/".equals(newTrunkUrl)) -->Line_9 $$ String newPath = new File(path).getParent()[ CD ]
Line_9 $$ String newPath = new File(path).getParent()-->Line_20 $$ result = checkPathGoingUp(revisionAsked, targetRevision, branchRootPath, newPath, newTrunkUrl, false)[ FD ]
Line_6 $$ if (newTrunkUrl.length() == 0 || "/".equals(newTrunkUrl)) -->Line_7 $$ result = SvnMergeInfoCache.MergeCheckResult.NOT_MERGED[ CD ]
Line_4 $$ SvnMergeInfoCache.MergeCheckResult result-->Line_20 $$ result = checkPathGoingUp(revisionAsked, targetRevision, branchRootPath, newPath, newTrunkUrl, false)[ FD ]
