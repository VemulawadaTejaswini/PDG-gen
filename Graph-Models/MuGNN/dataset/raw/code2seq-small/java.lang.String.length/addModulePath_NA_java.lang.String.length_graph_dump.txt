Line_4 $$ if (file == null) -->Line_8 $$ final RootFinder finder = new RootFinder(path)[ CD ]
Line_8 $$ final RootFinder finder = new RootFinder(path)-->Line_9 $$ RootVisitorHost.visitRoots(followed, finder)[ FD ]
Line_2 $$ private void addModulePath(@NotNull PyFile followed) -->Line_3 $$ final VirtualFile file = followed.getVirtualFile()[ CD ]
Line_8 $$ final RootFinder finder = new RootFinder(path)-->Line_10 $$ final String rootPath = finder.getResult()[ FD ]
Line_7 $$ final String path = file.getPath()-->Line_12 $$ final String afterPart = path.substring(rootPath.length())[ FD ]
Line_2 $$ private void addModulePath(@NotNull PyFile followed) -->Line_4 $$ if (file == null) [ CD ]
Line_3 $$ final VirtualFile file = followed.getVirtualFile()-->Line_4 $$ if (file == null) [ FD ]
Line_10 $$ final String rootPath = finder.getResult()-->Line_12 $$ final String afterPart = path.substring(rootPath.length())[ FD ]
Line_4 $$ if (file == null) -->Line_5 $$ myProlog.addWith(TagSmall, $(PyBundle.message("QDOC.module.path.unknown")))[ CD ]
Line_4 $$ if (file == null) -->Line_9 $$ RootVisitorHost.visitRoots(followed, finder)[ CD ]
Line_2 $$ private void addModulePath(@NotNull PyFile followed) -->Line_9 $$ RootVisitorHost.visitRoots(followed, finder)[ FD ]
Line_11 $$ if (rootPath != null) -->Line_12 $$ final String afterPart = path.substring(rootPath.length())[ CD ]
Line_10 $$ final String rootPath = finder.getResult()-->Line_11 $$ if (rootPath != null) [ FD ]
Line_10 $$ final String rootPath = finder.getResult()-->Line_13 $$ myProlog.addWith(TagSmall, $(rootPath).addWith(TagBold, $(afterPart)))[ FD ]
Line_4 $$ if (file == null) -->Line_7 $$ final String path = file.getPath()[ CD ]
Line_11 $$ if (rootPath != null) -->Line_13 $$ myProlog.addWith(TagSmall, $(rootPath).addWith(TagBold, $(afterPart)))[ CD ]
Line_3 $$ final VirtualFile file = followed.getVirtualFile()-->Line_7 $$ final String path = file.getPath()[ FD ]
Line_11 $$ if (rootPath != null) -->Line_15 $$ myProlog.addWith(TagSmall, $(path))[ CD ]
Line_4 $$ if (file == null) -->Line_10 $$ final String rootPath = finder.getResult()[ CD ]
Line_7 $$ final String path = file.getPath()-->Line_15 $$ myProlog.addWith(TagSmall, $(path))[ FD ]
Line_4 $$ if (file == null) -->Line_11 $$ if (rootPath != null) [ CD ]
Line_12 $$ final String afterPart = path.substring(rootPath.length())-->Line_13 $$ myProlog.addWith(TagSmall, $(rootPath).addWith(TagBold, $(afterPart)))[ FD ]
Line_2 $$ private void addModulePath(@NotNull PyFile followed) -->Line_3 $$ final VirtualFile file = followed.getVirtualFile()[ FD ]
