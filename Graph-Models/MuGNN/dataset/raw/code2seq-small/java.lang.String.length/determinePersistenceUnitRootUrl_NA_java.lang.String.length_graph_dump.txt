Line_3 $$ URL originalURL = resource.getURL()-->Line_5 $$ return ResourceUtils.extractJarFileURL(originalURL)[ FD ]
Line_20 $$ String persistenceUnitRoot = urlToString.substring(0, urlToString.lastIndexOf(META_INF))-->Line_21 $$ if (persistenceUnitRoot.endsWith("/")) [ FD ]
Line_3 $$ URL originalURL = resource.getURL()-->Line_4 $$ if (ResourceUtils.isJarURL(originalURL)) [ FD ]
Line_14 $$ if (urlToString.lastIndexOf(META_INF) == urlToString.lastIndexOf('/') - (1 + META_INF.length())) -->Line_18 $$ return null[ CD ]
Line_7 $$ String urlToString = originalURL.toExternalForm()-->Line_20 $$ String persistenceUnitRoot = urlToString.substring(0, urlToString.lastIndexOf(META_INF))[ FD ]
Line_14 $$ if (urlToString.lastIndexOf(META_INF) == urlToString.lastIndexOf('/') - (1 + META_INF.length())) -->Line_15 $$ if (logger.isInfoEnabled()) [ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_3 $$ URL originalURL = resource.getURL()[ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_16 $$ logger.info(resource.getFilename() + " is not located in the root of META-INF directory; cannot determine persistence unit root URL for " + resource)[ FD ]
Line_4 $$ if (ResourceUtils.isJarURL(originalURL)) -->Line_5 $$ return ResourceUtils.extractJarFileURL(originalURL)[ CD ]
Line_9 $$ if (logger.isInfoEnabled()) -->Line_10 $$ logger.info(resource.getFilename() + " should be located inside META-INF directory; cannot determine persistence unit root URL for " + resource)[ CD ]
Line_3 $$ URL originalURL = resource.getURL()-->Line_7 $$ String urlToString = originalURL.toExternalForm()[ FD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_4 $$ if (ResourceUtils.isJarURL(originalURL)) [ CD ]
Line_15 $$ if (logger.isInfoEnabled()) -->Line_16 $$ logger.info(resource.getFilename() + " is not located in the root of META-INF directory; cannot determine persistence unit root URL for " + resource)[ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_14 $$ if (urlToString.lastIndexOf(META_INF) == urlToString.lastIndexOf('/') - (1 + META_INF.length())) [ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_10 $$ logger.info(resource.getFilename() + " should be located inside META-INF directory; cannot determine persistence unit root URL for " + resource)[ FD ]
Line_8 $$ if (!urlToString.contains(META_INF)) -->Line_9 $$ if (logger.isInfoEnabled()) [ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_7 $$ String urlToString = originalURL.toExternalForm()[ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_8 $$ if (!urlToString.contains(META_INF)) [ CD ]
Line_21 $$ if (persistenceUnitRoot.endsWith("/")) -->Line_22 $$ persistenceUnitRoot = persistenceUnitRoot.substring(0, persistenceUnitRoot.length() - 1)[ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_21 $$ if (persistenceUnitRoot.endsWith("/")) [ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_3 $$ URL originalURL = resource.getURL()[ FD ]
Line_8 $$ if (!urlToString.contains(META_INF)) -->Line_12 $$ return null[ CD ]
Line_7 $$ String urlToString = originalURL.toExternalForm()-->Line_14 $$ if (urlToString.lastIndexOf(META_INF) == urlToString.lastIndexOf('/') - (1 + META_INF.length())) [ FD ]
Line_20 $$ String persistenceUnitRoot = urlToString.substring(0, urlToString.lastIndexOf(META_INF))-->Line_22 $$ persistenceUnitRoot = persistenceUnitRoot.substring(0, persistenceUnitRoot.length() - 1)[ FD ]
Line_7 $$ String urlToString = originalURL.toExternalForm()-->Line_8 $$ if (!urlToString.contains(META_INF)) [ FD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_20 $$ String persistenceUnitRoot = urlToString.substring(0, urlToString.lastIndexOf(META_INF))[ CD ]
Line_2 $$ protected URL determinePersistenceUnitRootUrl(Resource resource) throws IOException -->Line_24 $$ return new URL(persistenceUnitRoot)[ CD ]
