Line_7 $$ int group = 0-->Line_20 $$ groups[group++] = token[ FD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(version, ",./;'?:\\|=+-_*&^%$#@!~", true)-->Line_26 $$ groups[3] = token + fillQualifier(st)[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_36 $$ String ver = groups[0] + "." + groups[1] + "." + groups[2][ CD ]
Line_2 $$ public String getVersion(String version) -->Line_43 $$ if (!OSGI_VERSION_PATTERN.matcher(result).matches()) [ CD ]
Line_2 $$ public String getVersion(String version) -->Line_37 $$ String result[ CD ]
Line_16 $$ String token = st.nextToken()-->Line_20 $$ groups[group++] = token[ FD ]
Line_16 $$ String token = st.nextToken()-->Line_26 $$ groups[3] = token + fillQualifier(st)[ FD ]
Line_37 $$ String result-->Line_39 $$ result = ver + "." + groups[3][ FD ]
Line_38 $$ if (groups[3].length() > 0) -->Line_39 $$ result = ver + "." + groups[3][ CD ]
Line_39 $$ result = ver + "." + groups[3]-->Line_41 $$ result = ver[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_13 $$ groups[3] = ""[ CD ]
Line_7 $$ int group = 0-->Line_18 $$ if (group < 3) [ FD ]
Line_19 $$ if (ONLY_NUMBERS.matcher(token).matches()) -->Line_21 $$ groupToken = false[ CD ]
Line_2 $$ public String getVersion(String version) -->Line_14 $$ StringTokenizer st = new StringTokenizer(version, ",./;'?:\\|=+-_*&^%$#@!~", true)[ CD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_16 $$ String token = st.nextToken()[ CD ]
Line_37 $$ String result-->Line_41 $$ result = ver[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_38 $$ if (groups[3].length() > 0) [ CD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_17 $$ if (groupToken) [ CD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(version, ",./;'?:\\|=+-_*&^%$#@!~", true)-->Line_32 $$ groups[3] = fillQualifier(st)[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_11 $$ groups[1] = "0"[ CD ]
Line_17 $$ if (groupToken) -->Line_29 $$ if (".".equals(token)) [ CD ]
Line_39 $$ result = ver + "." + groups[3]-->Line_43 $$ if (!OSGI_VERSION_PATTERN.matcher(result).matches()) [ FD ]
Line_2 $$ public String getVersion(String version) -->Line_7 $$ int group = 0[ CD ]
Line_8 $$ boolean groupToken = true-->Line_21 $$ groupToken = false[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_10 $$ groups[0] = "0"[ CD ]
Line_41 $$ result = ver-->Line_43 $$ if (!OSGI_VERSION_PATTERN.matcher(result).matches()) [ FD ]
Line_2 $$ public String getVersion(String version) -->Line_3 $$ final Matcher m = OSGI_VERSION_PATTERN.matcher(version)[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_8 $$ boolean groupToken = true[ CD ]
Line_2 $$ public String getVersion(String version) -->Line_12 $$ groups[2] = "0"[ CD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(version, ",./;'?:\\|=+-_*&^%$#@!~", true)-->Line_16 $$ String token = st.nextToken()[ FD ]
Line_16 $$ String token = st.nextToken()-->Line_19 $$ if (ONLY_NUMBERS.matcher(token).matches()) [ FD ]
Line_19 $$ if (ONLY_NUMBERS.matcher(token).matches()) -->Line_20 $$ groups[group++] = token[ CD ]
Line_2 $$ public String getVersion(String version) -->Line_46 $$ return result[ CD ]
Line_29 $$ if (".".equals(token)) -->Line_32 $$ groups[3] = fillQualifier(st)[ CD ]
Line_4 $$ if (m.matches()) -->Line_5 $$ return version[ CD ]
Line_17 $$ if (groupToken) -->Line_18 $$ if (group < 3) [ CD ]
Line_18 $$ if (group < 3) -->Line_19 $$ if (ONLY_NUMBERS.matcher(token).matches()) [ CD ]
Line_36 $$ String ver = groups[0] + "." + groups[1] + "." + groups[2]-->Line_41 $$ result = ver[ FD ]
Line_3 $$ final Matcher m = OSGI_VERSION_PATTERN.matcher(version)-->Line_4 $$ if (m.matches()) [ FD ]
Line_18 $$ if (group < 3) -->Line_26 $$ groups[3] = token + fillQualifier(st)[ CD ]
Line_16 $$ String token = st.nextToken()-->Line_23 $$ groups[3] = token + fillQualifier(st)[ FD ]
Line_29 $$ if (".".equals(token)) -->Line_30 $$ groupToken = true[ CD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(version, ",./;'?:\\|=+-_*&^%$#@!~", true)-->Line_15 $$ while (st.hasMoreTokens()) [ FD ]
Line_37 $$ String result-->Line_43 $$ if (!OSGI_VERSION_PATTERN.matcher(result).matches()) [ FD ]
Line_38 $$ if (groups[3].length() > 0) -->Line_41 $$ result = ver[ CD ]
Line_21 $$ groupToken = false-->Line_30 $$ groupToken = true[ FD ]
Line_16 $$ String token = st.nextToken()-->Line_29 $$ if (".".equals(token)) [ FD ]
Line_14 $$ StringTokenizer st = new StringTokenizer(version, ",./;'?:\\|=+-_*&^%$#@!~", true)-->Line_23 $$ groups[3] = token + fillQualifier(st)[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_9 $$ String[] groups = new String[4][ CD ]
Line_8 $$ boolean groupToken = true-->Line_30 $$ groupToken = true[ FD ]
Line_2 $$ public String getVersion(String version) -->Line_15 $$ while (st.hasMoreTokens()) [ CD ]
Line_2 $$ public String getVersion(String version) -->Line_3 $$ final Matcher m = OSGI_VERSION_PATTERN.matcher(version)[ CD ]
Line_2 $$ public String getVersion(String version) -->Line_4 $$ if (m.matches()) [ CD ]
Line_19 $$ if (ONLY_NUMBERS.matcher(token).matches()) -->Line_23 $$ groups[3] = token + fillQualifier(st)[ CD ]
