Line_3 $$ String symbolic = "-rwxrwxrwx"-->Line_12 $$ b.setCharAt(k, symbolic.charAt(k))[ FD ]
Line_5 $$ StringBuilder b = new StringBuilder("----------")-->Line_12 $$ b.setCharAt(k, symbolic.charAt(k))[ FD ]
Line_9 $$ for (int j = 0; j < len; j++) -->Line_10 $$ if (permBinary.charAt(j) == '1') [ CD ]
Line_7 $$ String permBinary = binary.substring(2, binary.length())-->Line_10 $$ if (permBinary.charAt(j) == '1') [ FD ]
Line_8 $$ int len = permBinary.length()-->Line_9 $$ for (int j = 0; j < len; j++) [ FD ]
Line_7 $$ String permBinary = binary.substring(2, binary.length())-->Line_8 $$ int len = permBinary.length()[ FD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_6 $$ String binary = String.format("%11s", Integer.toBinaryString(i))[ FD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_9 $$ for (int j = 0; j < len; j++) [ CD ]
Line_5 $$ StringBuilder b = new StringBuilder("----------")-->Line_17 $$ char replacement = b.charAt(9) == 'x' ? 't' : 'T'[ FD ]
Line_5 $$ StringBuilder b = new StringBuilder("----------")-->Line_20 $$ assertEquals(i, FsPermission.valueOf(b.toString()).toShort())[ FD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_8 $$ int len = permBinary.length()[ CD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_20 $$ assertEquals(i, FsPermission.valueOf(b.toString()).toShort())[ FD ]
Line_10 $$ if (permBinary.charAt(j) == '1') -->Line_12 $$ b.setCharAt(k, symbolic.charAt(k))[ CD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_7 $$ String permBinary = binary.substring(2, binary.length())[ CD ]
Line_11 $$ int k = 9 - (len - 1 - j)-->Line_12 $$ b.setCharAt(k, symbolic.charAt(k))[ FD ]
Line_2 $$ public void testFsPermission() -->Line_4 $$ for (int i = 0; i < (1 << 10); i++) [ CD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_20 $$ assertEquals(i, FsPermission.valueOf(b.toString()).toShort())[ CD ]
Line_2 $$ public void testFsPermission() -->Line_3 $$ String symbolic = "-rwxrwxrwx"[ CD ]
Line_5 $$ StringBuilder b = new StringBuilder("----------")-->Line_18 $$ b.setCharAt(9, replacement)[ FD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_6 $$ String binary = String.format("%11s", Integer.toBinaryString(i))[ CD ]
Line_4 $$ for (int i = 0; i < (1 << 10); i++) -->Line_5 $$ StringBuilder b = new StringBuilder("----------")[ CD ]
Line_6 $$ String binary = String.format("%11s", Integer.toBinaryString(i))-->Line_7 $$ String permBinary = binary.substring(2, binary.length())[ FD ]
Line_10 $$ if (permBinary.charAt(j) == '1') -->Line_11 $$ int k = 9 - (len - 1 - j)[ CD ]
Line_9 $$ for (int j = 0; j < len; j++) -->Line_10 $$ if (permBinary.charAt(j) == '1') [ FD ]
