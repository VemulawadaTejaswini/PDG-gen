Line_14 $$ String fixedSubstring = expected.substring(posInExpected, placeholderPos)-->Line_20 $$ posInActual = matchedPosInActual + fixedSubstring.length()[ FD ]
Line_5 $$ while (posInExpected < expected.length()) -->Line_6 $$ int placeholderPos = expected.indexOf(PLATFORM_SPECIFIC_PLACEHOLDER, posInExpected)[ CD ]
Line_19 $$ posInExpected = placeholderPos + PLATFORM_SPECIFIC_PLACEHOLDER.length()-->Line_14 $$ String fixedSubstring = expected.substring(posInExpected, placeholderPos)[ FD ]
Line_4 $$ int posInActual = 0-->Line_8 $$ if (posInExpected == 0 ? actual.equals(expected) : actual.substring(posInActual).endsWith(expected.substring(posInExpected))) [ FD ]
Line_15 $$ int matchedPosInActual = actual.indexOf(fixedSubstring, posInActual)-->Line_20 $$ posInActual = matchedPosInActual + fixedSubstring.length()[ FD ]
Line_19 $$ posInExpected = placeholderPos + PLATFORM_SPECIFIC_PLACEHOLDER.length()-->Line_6 $$ int placeholderPos = expected.indexOf(PLATFORM_SPECIFIC_PLACEHOLDER, posInExpected)[ FD ]
Line_4 $$ int posInActual = 0-->Line_15 $$ int matchedPosInActual = actual.indexOf(fixedSubstring, posInActual)[ FD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_8 $$ if (posInExpected == 0 ? actual.equals(expected) : actual.substring(posInActual).endsWith(expected.substring(posInExpected))) [ FD ]
Line_5 $$ while (posInExpected < expected.length()) -->Line_16 $$ if (matchedPosInActual < 0 || posInExpected == 0 && matchedPosInActual > 0) [ CD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_4 $$ int posInActual = 0[ CD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_14 $$ String fixedSubstring = expected.substring(posInExpected, placeholderPos)[ FD ]
Line_5 $$ while (posInExpected < expected.length()) -->Line_20 $$ posInActual = matchedPosInActual + fixedSubstring.length()[ CD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_6 $$ int placeholderPos = expected.indexOf(PLATFORM_SPECIFIC_PLACEHOLDER, posInExpected)[ FD ]
Line_19 $$ posInExpected = placeholderPos + PLATFORM_SPECIFIC_PLACEHOLDER.length()-->Line_5 $$ while (posInExpected < expected.length()) [ FD ]
Line_3 $$ int posInExpected = 0-->Line_14 $$ String fixedSubstring = expected.substring(posInExpected, placeholderPos)[ FD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_15 $$ int matchedPosInActual = actual.indexOf(fixedSubstring, posInActual)[ FD ]
Line_6 $$ int placeholderPos = expected.indexOf(PLATFORM_SPECIFIC_PLACEHOLDER, posInExpected)-->Line_19 $$ posInExpected = placeholderPos + PLATFORM_SPECIFIC_PLACEHOLDER.length()[ FD ]
Line_5 $$ while (posInExpected < expected.length()) -->Line_7 $$ if (placeholderPos < 0) [ CD ]
Line_7 $$ if (placeholderPos < 0) -->Line_8 $$ if (posInExpected == 0 ? actual.equals(expected) : actual.substring(posInActual).endsWith(expected.substring(posInExpected))) [ CD ]
Line_6 $$ int placeholderPos = expected.indexOf(PLATFORM_SPECIFIC_PLACEHOLDER, posInExpected)-->Line_14 $$ String fixedSubstring = expected.substring(posInExpected, placeholderPos)[ FD ]
Line_19 $$ posInExpected = placeholderPos + PLATFORM_SPECIFIC_PLACEHOLDER.length()-->Line_8 $$ if (posInExpected == 0 ? actual.equals(expected) : actual.substring(posInActual).endsWith(expected.substring(posInExpected))) [ FD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_5 $$ while (posInExpected < expected.length()) [ FD ]
Line_5 $$ while (posInExpected < expected.length()) -->Line_19 $$ posInExpected = placeholderPos + PLATFORM_SPECIFIC_PLACEHOLDER.length()[ CD ]
Line_3 $$ int posInExpected = 0-->Line_8 $$ if (posInExpected == 0 ? actual.equals(expected) : actual.substring(posInActual).endsWith(expected.substring(posInExpected))) [ FD ]
Line_3 $$ int posInExpected = 0-->Line_5 $$ while (posInExpected < expected.length()) [ FD ]
Line_5 $$ while (posInExpected < expected.length()) -->Line_14 $$ String fixedSubstring = expected.substring(posInExpected, placeholderPos)[ CD ]
Line_5 $$ while (posInExpected < expected.length()) -->Line_15 $$ int matchedPosInActual = actual.indexOf(fixedSubstring, posInActual)[ CD ]
Line_8 $$ if (posInExpected == 0 ? actual.equals(expected) : actual.substring(posInActual).endsWith(expected.substring(posInExpected))) -->Line_9 $$ return[ CD ]
Line_20 $$ posInActual = matchedPosInActual + fixedSubstring.length()-->Line_8 $$ if (posInExpected == 0 ? actual.equals(expected) : actual.substring(posInActual).endsWith(expected.substring(posInExpected))) [ FD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_5 $$ while (posInExpected < expected.length()) [ CD ]
Line_3 $$ int posInExpected = 0-->Line_19 $$ posInExpected = placeholderPos + PLATFORM_SPECIFIC_PLACEHOLDER.length()[ FD ]
Line_20 $$ posInActual = matchedPosInActual + fixedSubstring.length()-->Line_15 $$ int matchedPosInActual = actual.indexOf(fixedSubstring, posInActual)[ FD ]
Line_2 $$ private static void assertMatches(String message, String expected, String actual) -->Line_3 $$ int posInExpected = 0[ CD ]
Line_6 $$ int placeholderPos = expected.indexOf(PLATFORM_SPECIFIC_PLACEHOLDER, posInExpected)-->Line_7 $$ if (placeholderPos < 0) [ FD ]
Line_4 $$ int posInActual = 0-->Line_20 $$ posInActual = matchedPosInActual + fixedSubstring.length()[ FD ]
Line_14 $$ String fixedSubstring = expected.substring(posInExpected, placeholderPos)-->Line_15 $$ int matchedPosInActual = actual.indexOf(fixedSubstring, posInActual)[ FD ]
Line_3 $$ int posInExpected = 0-->Line_6 $$ int placeholderPos = expected.indexOf(PLATFORM_SPECIFIC_PLACEHOLDER, posInExpected)[ FD ]
