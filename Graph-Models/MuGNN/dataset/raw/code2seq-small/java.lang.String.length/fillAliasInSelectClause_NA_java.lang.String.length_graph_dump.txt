Line_27 $$ nextComa += aliasExprLength-->Line_11 $$ prevComa = nextComa[ FD ]
Line_21 $$ String alias = getAlias(expression)-->Line_30 $$ aliases.add(alias)[ FD ]
Line_23 $$ alias = StringHelper.generateAlias("page", unique)-->Line_45 $$ aliases.add(alias)[ FD ]
Line_25 $$ final int aliasExprLength = (" as " + alias).length()-->Line_28 $$ endPos += aliasExprLength[ FD ]
Line_23 $$ alias = StringHelper.generateAlias("page", unique)-->Line_42 $$ alias = StringHelper.generateAlias("page", unique)[ FD ]
Line_6 $$ int nextComa = startPos-->Line_16 $$ if (nextComa != -1) [ FD ]
Line_22 $$ if (alias == null) -->Line_28 $$ endPos += aliasExprLength[ CD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_10 $$ while (nextComa != -1) [ CD ]
Line_17 $$ final String expression = sb.substring(prevComa, nextComa)-->Line_40 $$ String alias = getAlias(expression)[ FD ]
Line_23 $$ alias = StringHelper.generateAlias("page", unique)-->Line_41 $$ if (alias == null) [ FD ]
Line_8 $$ int unique = 0-->Line_23 $$ alias = StringHelper.generateAlias("page", unique)[ FD ]
Line_4 $$ final int startPos = shallowIndexOf(sb, SELECT_WITH_SPACE, 0)-->Line_35 $$ endPos = shallowIndexOfWord(sb, FROM, startPos)[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_7 $$ int prevComa = startPos[ CD ]
Line_17 $$ final String expression = sb.substring(prevComa, nextComa)-->Line_21 $$ String alias = getAlias(expression)[ FD ]
Line_27 $$ nextComa += aliasExprLength-->Line_16 $$ if (nextComa != -1) [ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_8 $$ int unique = 0[ CD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_24 $$ sb.insert(nextComa, " as " + alias)[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_3 $$ final List<String> aliases = new LinkedList<String>()[ CD ]
Line_37 $$ if (selectsMultipleColumns(expression)) -->Line_40 $$ String alias = getAlias(expression)[ CD ]
Line_6 $$ int nextComa = startPos-->Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)[ FD ]
Line_22 $$ if (alias == null) -->Line_26 $$ ++unique[ CD ]
Line_6 $$ int nextComa = startPos-->Line_13 $$ if (nextComa > endPos) [ FD ]
Line_7 $$ int prevComa = startPos-->Line_11 $$ prevComa = nextComa[ FD ]
Line_6 $$ int nextComa = startPos-->Line_32 $$ ++nextComa[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_4 $$ final int startPos = shallowIndexOf(sb, SELECT_WITH_SPACE, 0)[ CD ]
Line_27 $$ nextComa += aliasExprLength-->Line_24 $$ sb.insert(nextComa, " as " + alias)[ FD ]
Line_28 $$ endPos += aliasExprLength-->Line_13 $$ if (nextComa > endPos) [ FD ]
Line_8 $$ int unique = 0-->Line_26 $$ ++unique[ FD ]
Line_11 $$ prevComa = nextComa-->Line_36 $$ final String expression = sb.substring(prevComa, endPos)[ FD ]
Line_37 $$ if (selectsMultipleColumns(expression)) -->Line_45 $$ aliases.add(alias)[ CD ]
Line_17 $$ final String expression = sb.substring(prevComa, nextComa)-->Line_37 $$ if (selectsMultipleColumns(expression)) [ FD ]
Line_6 $$ int nextComa = startPos-->Line_11 $$ prevComa = nextComa[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_43 $$ sb.insert(endPos - 1, " as " + alias)[ FD ]
Line_40 $$ String alias = getAlias(expression)-->Line_42 $$ alias = StringHelper.generateAlias("page", unique)[ FD ]
Line_41 $$ if (alias == null) -->Line_42 $$ alias = StringHelper.generateAlias("page", unique)[ CD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_47 $$ return selectsMultipleColumns ? "*" : StringHelper.join(", ", aliases.iterator())[ CD ]
Line_23 $$ alias = StringHelper.generateAlias("page", unique)-->Line_22 $$ if (alias == null) [ FD ]
Line_3 $$ final List<String> aliases = new LinkedList<String>()-->Line_30 $$ aliases.add(alias)[ FD ]
Line_3 $$ final List<String> aliases = new LinkedList<String>()-->Line_47 $$ return selectsMultipleColumns ? "*" : StringHelper.join(", ", aliases.iterator())[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_36 $$ final String expression = sb.substring(prevComa, endPos)[ FD ]
Line_10 $$ while (nextComa != -1) -->Line_11 $$ prevComa = nextComa[ CD ]
Line_4 $$ final int startPos = shallowIndexOf(sb, SELECT_WITH_SPACE, 0)-->Line_5 $$ int endPos = shallowIndexOfWord(sb, FROM, startPos)[ FD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_27 $$ nextComa += aliasExprLength[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_6 $$ int nextComa = startPos[ CD ]
Line_37 $$ if (selectsMultipleColumns(expression)) -->Line_38 $$ selectsMultipleColumns = true[ CD ]
Line_18 $$ if (selectsMultipleColumns(expression)) -->Line_22 $$ if (alias == null) [ CD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)[ FD ]
Line_36 $$ final String expression = sb.substring(prevComa, endPos)-->Line_37 $$ if (selectsMultipleColumns(expression)) [ FD ]
Line_17 $$ final String expression = sb.substring(prevComa, nextComa)-->Line_18 $$ if (selectsMultipleColumns(expression)) [ FD ]
Line_6 $$ int nextComa = startPos-->Line_17 $$ final String expression = sb.substring(prevComa, nextComa)[ FD ]
Line_23 $$ alias = StringHelper.generateAlias("page", unique)-->Line_30 $$ aliases.add(alias)[ FD ]
Line_27 $$ nextComa += aliasExprLength-->Line_10 $$ while (nextComa != -1) [ FD ]
Line_10 $$ while (nextComa != -1) -->Line_16 $$ if (nextComa != -1) [ CD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_11 $$ prevComa = nextComa[ FD ]
Line_18 $$ if (selectsMultipleColumns(expression)) -->Line_19 $$ selectsMultipleColumns = true[ CD ]
Line_25 $$ final int aliasExprLength = (" as " + alias).length()-->Line_27 $$ nextComa += aliasExprLength[ FD ]
Line_37 $$ if (selectsMultipleColumns(expression)) -->Line_41 $$ if (alias == null) [ CD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_4 $$ final int startPos = shallowIndexOf(sb, SELECT_WITH_SPACE, 0)[ FD ]
Line_21 $$ String alias = getAlias(expression)-->Line_22 $$ if (alias == null) [ FD ]
Line_18 $$ if (selectsMultipleColumns(expression)) -->Line_21 $$ String alias = getAlias(expression)[ CD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_32 $$ ++nextComa[ FD ]
Line_40 $$ String alias = getAlias(expression)-->Line_45 $$ aliases.add(alias)[ FD ]
Line_28 $$ endPos += aliasExprLength-->Line_36 $$ final String expression = sb.substring(prevComa, endPos)[ FD ]
Line_21 $$ String alias = getAlias(expression)-->Line_41 $$ if (alias == null) [ FD ]
Line_9 $$ boolean selectsMultipleColumns = false-->Line_38 $$ selectsMultipleColumns = true[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_5 $$ int endPos = shallowIndexOfWord(sb, FROM, startPos)[ FD ]
Line_5 $$ int endPos = shallowIndexOfWord(sb, FROM, startPos)-->Line_13 $$ if (nextComa > endPos) [ FD ]
Line_36 $$ final String expression = sb.substring(prevComa, endPos)-->Line_40 $$ String alias = getAlias(expression)[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_36 $$ final String expression = sb.substring(prevComa, endPos)[ CD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_37 $$ if (selectsMultipleColumns(expression)) [ CD ]
Line_27 $$ nextComa += aliasExprLength-->Line_32 $$ ++nextComa[ FD ]
Line_11 $$ prevComa = nextComa-->Line_17 $$ final String expression = sb.substring(prevComa, nextComa)[ FD ]
Line_27 $$ nextComa += aliasExprLength-->Line_17 $$ final String expression = sb.substring(prevComa, nextComa)[ FD ]
Line_16 $$ if (nextComa != -1) -->Line_32 $$ ++nextComa[ CD ]
Line_22 $$ if (alias == null) -->Line_27 $$ nextComa += aliasExprLength[ CD ]
Line_5 $$ int endPos = shallowIndexOfWord(sb, FROM, startPos)-->Line_28 $$ endPos += aliasExprLength[ FD ]
Line_22 $$ if (alias == null) -->Line_23 $$ alias = StringHelper.generateAlias("page", unique)[ CD ]
Line_5 $$ int endPos = shallowIndexOfWord(sb, FROM, startPos)-->Line_35 $$ endPos = shallowIndexOfWord(sb, FROM, startPos)[ FD ]
Line_21 $$ String alias = getAlias(expression)-->Line_45 $$ aliases.add(alias)[ FD ]
Line_7 $$ int prevComa = startPos-->Line_36 $$ final String expression = sb.substring(prevComa, endPos)[ FD ]
Line_41 $$ if (alias == null) -->Line_43 $$ sb.insert(endPos - 1, " as " + alias)[ CD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_35 $$ endPos = shallowIndexOfWord(sb, FROM, startPos)[ CD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_9 $$ boolean selectsMultipleColumns = false[ CD ]
Line_7 $$ int prevComa = startPos-->Line_17 $$ final String expression = sb.substring(prevComa, nextComa)[ FD ]
Line_28 $$ endPos += aliasExprLength-->Line_35 $$ endPos = shallowIndexOfWord(sb, FROM, startPos)[ FD ]
Line_6 $$ int nextComa = startPos-->Line_27 $$ nextComa += aliasExprLength[ FD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_17 $$ final String expression = sb.substring(prevComa, nextComa)[ FD ]
Line_21 $$ String alias = getAlias(expression)-->Line_23 $$ alias = StringHelper.generateAlias("page", unique)[ FD ]
Line_22 $$ if (alias == null) -->Line_25 $$ final int aliasExprLength = (" as " + alias).length()[ CD ]
Line_3 $$ final List<String> aliases = new LinkedList<String>()-->Line_45 $$ aliases.add(alias)[ FD ]
Line_42 $$ alias = StringHelper.generateAlias("page", unique)-->Line_45 $$ aliases.add(alias)[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_24 $$ sb.insert(nextComa, " as " + alias)[ FD ]
Line_27 $$ nextComa += aliasExprLength-->Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)[ FD ]
Line_27 $$ nextComa += aliasExprLength-->Line_13 $$ if (nextComa > endPos) [ FD ]
Line_35 $$ endPos = shallowIndexOfWord(sb, FROM, startPos)-->Line_36 $$ final String expression = sb.substring(prevComa, endPos)[ FD ]
Line_21 $$ String alias = getAlias(expression)-->Line_42 $$ alias = StringHelper.generateAlias("page", unique)[ FD ]
Line_6 $$ int nextComa = startPos-->Line_10 $$ while (nextComa != -1) [ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_5 $$ int endPos = shallowIndexOfWord(sb, FROM, startPos)[ CD ]
Line_5 $$ int endPos = shallowIndexOfWord(sb, FROM, startPos)-->Line_36 $$ final String expression = sb.substring(prevComa, endPos)[ FD ]
Line_16 $$ if (nextComa != -1) -->Line_17 $$ final String expression = sb.substring(prevComa, nextComa)[ CD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_10 $$ while (nextComa != -1) [ FD ]
Line_10 $$ while (nextComa != -1) -->Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)[ CD ]
Line_16 $$ if (nextComa != -1) -->Line_18 $$ if (selectsMultipleColumns(expression)) [ CD ]
Line_22 $$ if (alias == null) -->Line_24 $$ sb.insert(nextComa, " as " + alias)[ CD ]
Line_10 $$ while (nextComa != -1) -->Line_13 $$ if (nextComa > endPos) [ CD ]
Line_40 $$ String alias = getAlias(expression)-->Line_41 $$ if (alias == null) [ FD ]
Line_6 $$ int nextComa = startPos-->Line_24 $$ sb.insert(nextComa, " as " + alias)[ FD ]
Line_18 $$ if (selectsMultipleColumns(expression)) -->Line_30 $$ aliases.add(alias)[ CD ]
Line_8 $$ int unique = 0-->Line_42 $$ alias = StringHelper.generateAlias("page", unique)[ FD ]
Line_9 $$ boolean selectsMultipleColumns = false-->Line_19 $$ selectsMultipleColumns = true[ FD ]
Line_19 $$ selectsMultipleColumns = true-->Line_38 $$ selectsMultipleColumns = true[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_35 $$ endPos = shallowIndexOfWord(sb, FROM, startPos)[ FD ]
Line_2 $$ protected String fillAliasInSelectClause(StringBuilder sb) -->Line_17 $$ final String expression = sb.substring(prevComa, nextComa)[ FD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_13 $$ if (nextComa > endPos) [ FD ]
Line_12 $$ nextComa = shallowIndexOf(sb, ",", nextComa)-->Line_16 $$ if (nextComa != -1) [ FD ]
