Line_2 $$ private Expression parseTemplate(String expressionString, ParserContext context) throws ParseException -->Line_3 $$ if (expressionString.length() == 0) [ CD ]
Line_2 $$ private Expression parseTemplate(String expressionString, ParserContext context) throws ParseException -->Line_6 $$ Expression[] expressions = parseExpressions(expressionString, context)[ CD ]
Line_3 $$ if (expressionString.length() == 0) -->Line_4 $$ return new LiteralExpression("")[ CD ]
Line_2 $$ private Expression parseTemplate(String expressionString, ParserContext context) throws ParseException -->Line_3 $$ if (expressionString.length() == 0) [ FD ]
Line_7 $$ if (expressions.length == 1) -->Line_8 $$ return expressions[0][ CD ]
Line_2 $$ private Expression parseTemplate(String expressionString, ParserContext context) throws ParseException -->Line_6 $$ Expression[] expressions = parseExpressions(expressionString, context)[ FD ]
Line_7 $$ if (expressions.length == 1) -->Line_10 $$ return new CompositeStringExpression(expressionString, expressions)[ CD ]
Line_2 $$ private Expression parseTemplate(String expressionString, ParserContext context) throws ParseException -->Line_7 $$ if (expressions.length == 1) [ CD ]
