Line_14 $$ for (int i = 0; i < properIndent.length(); i++) -->Line_15 $$ if (properIndent.charAt(i) == ' ') [ FD ]
Line_17 $$ if (properIndent.charAt(i) == '\t') -->Line_21 $$ afterLineEnd -= tabSize[ CD ]
Line_15 $$ if (properIndent.charAt(i) == ' ') -->Line_16 $$ afterLineEnd--[ CD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_24 $$ if (afterLineEnd == 0)[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_32 $$ return buf.toString()[ CD ]
Line_17 $$ if (properIndent.charAt(i) == '\t') -->Line_18 $$ if (afterLineEnd < tabSize) [ CD ]
Line_8 $$ if (atLineStart && project != null) -->Line_12 $$ if (properIndent != null) [ CD ]
Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)-->Line_17 $$ if (properIndent.charAt(i) == '\t') [ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_6 $$ final int caretOffset = editor.getCaretModel().getOffset()[ FD ]
Line_4 $$ StringBuilder buf = new StringBuilder()-->Line_23 $$ buf.append(properIndent.charAt(i))[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_18 $$ if (afterLineEnd < tabSize) [ FD ]
Line_8 $$ if (atLineStart && project != null) -->Line_9 $$ int offset = editor.getCaretModel().getOffset()[ CD ]
Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)-->Line_12 $$ if (properIndent != null) [ FD ]
Line_8 $$ if (atLineStart && project != null) -->Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)[ CD ]
Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)-->Line_14 $$ for (int i = 0; i < properIndent.length(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < properIndent.length(); i++) -->Line_23 $$ buf.append(properIndent.charAt(i))[ FD ]
Line_7 $$ boolean atLineStart = caretOffset >= doc.getTextLength() || doc.getLineStartOffset(doc.getLineNumber(caretOffset)) == caretOffset-->Line_8 $$ if (atLineStart && project != null) [ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_29 $$ for (int i = 0; i < afterLineEnd; i++) [ CD ]
Line_6 $$ final int caretOffset = editor.getCaretModel().getOffset()-->Line_7 $$ boolean atLineStart = caretOffset >= doc.getTextLength() || doc.getLineStartOffset(doc.getLineNumber(caretOffset)) == caretOffset[ FD ]
Line_3 $$ final Project project = editor.getProject()-->Line_10 $$ PsiDocumentManager.getInstance(project).commitDocument(doc)[ FD ]
Line_15 $$ if (properIndent.charAt(i) == ' ') -->Line_17 $$ if (properIndent.charAt(i) == '\t') [ CD ]
Line_21 $$ afterLineEnd -= tabSize-->Line_16 $$ afterLineEnd--[ FD ]
Line_3 $$ final Project project = editor.getProject()-->Line_13 $$ int tabSize = editor.getSettings().getTabSize(project)[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_13 $$ int tabSize = editor.getSettings().getTabSize(project)[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_29 $$ for (int i = 0; i < afterLineEnd; i++) [ FD ]
Line_3 $$ final Project project = editor.getProject()-->Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)[ FD ]
Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)-->Line_15 $$ if (properIndent.charAt(i) == ' ') [ FD ]
Line_14 $$ for (int i = 0; i < properIndent.length(); i++) -->Line_29 $$ for (int i = 0; i < afterLineEnd; i++) [ FD ]
Line_9 $$ int offset = editor.getCaretModel().getOffset()-->Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)[ FD ]
Line_14 $$ for (int i = 0; i < properIndent.length(); i++) -->Line_23 $$ buf.append(properIndent.charAt(i))[ CD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_7 $$ boolean atLineStart = caretOffset >= doc.getTextLength() || doc.getLineStartOffset(doc.getLineNumber(caretOffset)) == caretOffset[ CD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_6 $$ final int caretOffset = editor.getCaretModel().getOffset()[ CD ]
Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)-->Line_23 $$ buf.append(properIndent.charAt(i))[ FD ]
Line_13 $$ int tabSize = editor.getSettings().getTabSize(project)-->Line_21 $$ afterLineEnd -= tabSize[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_5 $$ final Document doc = editor.getDocument()[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_5 $$ final Document doc = editor.getDocument()[ CD ]
Line_12 $$ if (properIndent != null) -->Line_14 $$ for (int i = 0; i < properIndent.length(); i++) [ CD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_16 $$ afterLineEnd--[ FD ]
Line_13 $$ int tabSize = editor.getSettings().getTabSize(project)-->Line_18 $$ if (afterLineEnd < tabSize) [ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_21 $$ afterLineEnd -= tabSize[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_9 $$ int offset = editor.getCaretModel().getOffset()[ FD ]
Line_14 $$ for (int i = 0; i < properIndent.length(); i++) -->Line_24 $$ if (afterLineEnd == 0)[ CD ]
Line_14 $$ for (int i = 0; i < properIndent.length(); i++) -->Line_15 $$ if (properIndent.charAt(i) == ' ') [ CD ]
Line_4 $$ StringBuilder buf = new StringBuilder()-->Line_32 $$ return buf.toString()[ FD ]
Line_5 $$ final Document doc = editor.getDocument()-->Line_11 $$ String properIndent = offset >= doc.getTextLength() ? "" : CodeStyleFacade.getInstance(project).getLineIndent(doc, offset)[ FD ]
Line_14 $$ for (int i = 0; i < properIndent.length(); i++) -->Line_17 $$ if (properIndent.charAt(i) == '\t') [ FD ]
Line_29 $$ for (int i = 0; i < afterLineEnd; i++) -->Line_30 $$ buf.append(' ')[ CD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_3 $$ final Project project = editor.getProject()[ FD ]
Line_21 $$ afterLineEnd -= tabSize-->Line_18 $$ if (afterLineEnd < tabSize) [ FD ]
Line_8 $$ if (atLineStart && project != null) -->Line_10 $$ PsiDocumentManager.getInstance(project).commitDocument(doc)[ CD ]
Line_5 $$ final Document doc = editor.getDocument()-->Line_7 $$ boolean atLineStart = caretOffset >= doc.getTextLength() || doc.getLineStartOffset(doc.getLineNumber(caretOffset)) == caretOffset[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_3 $$ final Project project = editor.getProject()[ CD ]
Line_21 $$ afterLineEnd -= tabSize-->Line_29 $$ for (int i = 0; i < afterLineEnd; i++) [ FD ]
Line_21 $$ afterLineEnd -= tabSize-->Line_24 $$ if (afterLineEnd == 0)[ FD ]
Line_4 $$ StringBuilder buf = new StringBuilder()-->Line_30 $$ buf.append(' ')[ FD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_4 $$ StringBuilder buf = new StringBuilder()[ CD ]
Line_5 $$ final Document doc = editor.getDocument()-->Line_10 $$ PsiDocumentManager.getInstance(project).commitDocument(doc)[ FD ]
Line_12 $$ if (properIndent != null) -->Line_13 $$ int tabSize = editor.getSettings().getTabSize(project)[ CD ]
Line_2 $$ public static String calcStringToFillVirtualSpace(Editor editor, int afterLineEnd) -->Line_8 $$ if (atLineStart && project != null) [ CD ]
