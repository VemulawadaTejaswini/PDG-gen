Line_10 $$ String canonicalPath = myProjectCompilerOutput.getText()-->Line_16 $$ canonicalPath = FileUtil.toSystemIndependentName(canonicalPath)[ FD ]
Line_13 $$ canonicalPath = FileUtil.resolveShortWindowsName(canonicalPath)-->Line_16 $$ canonicalPath = FileUtil.toSystemIndependentName(canonicalPath)[ FD ]
Line_10 $$ String canonicalPath = myProjectCompilerOutput.getText()-->Line_11 $$ if (canonicalPath != null && canonicalPath.length() > 0) [ FD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_21 $$ LanguageLevelProjectExtension extension = LanguageLevelProjectExtension.getInstance(myProject)[ CD ]
Line_10 $$ String canonicalPath = myProjectCompilerOutput.getText()-->Line_17 $$ compilerProjectExtension.setCompilerOutputUrl(VfsUtilCore.pathToUrl(canonicalPath))[ FD ]
Line_28 $$ if (myProjectName != null) -->Line_30 $$ if (myDetailsComponent != null)[ CD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_26 $$ extension.setDefault(myLanguageLevelCombo.isDefault())[ CD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_27 $$ myProjectJdkConfigurable.apply()[ CD ]
Line_3 $$ final CompilerProjectExtension compilerProjectExtension = CompilerProjectExtension.getInstance(myProject)-->Line_17 $$ compilerProjectExtension.setCompilerOutputUrl(VfsUtilCore.pathToUrl(canonicalPath))[ FD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_5 $$ if (myProjectName != null && StringUtil.isEmptyOrSpaces(myProjectName.getText())) [ CD ]
Line_13 $$ canonicalPath = FileUtil.resolveShortWindowsName(canonicalPath)-->Line_17 $$ compilerProjectExtension.setCompilerOutputUrl(VfsUtilCore.pathToUrl(canonicalPath))[ FD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_28 $$ if (myProjectName != null) [ CD ]
Line_23 $$ if (level != null) -->Line_24 $$ extension.setLanguageLevel(level)[ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_10 $$ String canonicalPath = myProjectCompilerOutput.getText()[ CD ]
Line_10 $$ String canonicalPath = myProjectCompilerOutput.getText()-->Line_13 $$ canonicalPath = FileUtil.resolveShortWindowsName(canonicalPath)[ FD ]
Line_28 $$ if (myProjectName != null) -->Line_29 $$ ((ProjectEx) myProject).setProjectName(myProjectName.getText().trim())[ CD ]
Line_21 $$ LanguageLevelProjectExtension extension = LanguageLevelProjectExtension.getInstance(myProject)-->Line_26 $$ extension.setDefault(myLanguageLevelCombo.isDefault())[ FD ]
Line_3 $$ final CompilerProjectExtension compilerProjectExtension = CompilerProjectExtension.getInstance(myProject)-->Line_19 $$ compilerProjectExtension.setCompilerOutputPointer(null)[ FD ]
Line_22 $$ LanguageLevel level = myLanguageLevelCombo.getSelectedLevel()-->Line_24 $$ extension.setLanguageLevel(level)[ FD ]
Line_30 $$ if (myDetailsComponent != null)-->Line_31 $$ myDetailsComponent.setText(getBannerSlogan())[ CD ]
Line_11 $$ if (canonicalPath != null && canonicalPath.length() > 0) -->Line_17 $$ compilerProjectExtension.setCompilerOutputUrl(VfsUtilCore.pathToUrl(canonicalPath))[ CD ]
Line_21 $$ LanguageLevelProjectExtension extension = LanguageLevelProjectExtension.getInstance(myProject)-->Line_24 $$ extension.setLanguageLevel(level)[ FD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_22 $$ LanguageLevel level = myLanguageLevelCombo.getSelectedLevel()[ CD ]
Line_22 $$ LanguageLevel level = myLanguageLevelCombo.getSelectedLevel()-->Line_23 $$ if (level != null) [ FD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_23 $$ if (level != null) [ CD ]
Line_11 $$ if (canonicalPath != null && canonicalPath.length() > 0) -->Line_19 $$ compilerProjectExtension.setCompilerOutputPointer(null)[ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_3 $$ final CompilerProjectExtension compilerProjectExtension = CompilerProjectExtension.getInstance(myProject)[ CD ]
Line_16 $$ canonicalPath = FileUtil.toSystemIndependentName(canonicalPath)-->Line_17 $$ compilerProjectExtension.setCompilerOutputUrl(VfsUtilCore.pathToUrl(canonicalPath))[ FD ]
Line_8 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_11 $$ if (canonicalPath != null && canonicalPath.length() > 0) [ CD ]
Line_11 $$ if (canonicalPath != null && canonicalPath.length() > 0) -->Line_16 $$ canonicalPath = FileUtil.toSystemIndependentName(canonicalPath)[ CD ]
