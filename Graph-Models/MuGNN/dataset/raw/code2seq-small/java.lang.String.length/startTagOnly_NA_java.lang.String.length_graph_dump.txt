Line_2 $$ public void startTagOnly() -->Line_7 $$ context = parse(text, text.length() - 1)[ CD ]
Line_2 $$ public void startTagOnly() -->Line_5 $$ assertEquals(text.indexOf(">"), context.startTagEndOffset)[ CD ]
Line_3 $$ String text = "  *   <start>"-->Line_5 $$ assertEquals(text.indexOf(">"), context.startTagEndOffset)[ FD ]
Line_2 $$ public void startTagOnly() -->Line_6 $$ assertTrue(context.endTagStartOffset < 0)[ CD ]
Line_3 $$ String text = "  *   <start>"-->Line_4 $$ EnterAfterJavadocTagHandler.Context context = parse(text)[ FD ]
Line_4 $$ EnterAfterJavadocTagHandler.Context context = parse(text)-->Line_7 $$ context = parse(text, text.length() - 1)[ FD ]
Line_4 $$ EnterAfterJavadocTagHandler.Context context = parse(text)-->Line_8 $$ assertEmpty(context)[ FD ]
Line_2 $$ public void startTagOnly() -->Line_4 $$ EnterAfterJavadocTagHandler.Context context = parse(text)[ CD ]
Line_3 $$ String text = "  *   <start>"-->Line_7 $$ context = parse(text, text.length() - 1)[ FD ]
Line_2 $$ public void startTagOnly() -->Line_8 $$ assertEmpty(context)[ CD ]
Line_2 $$ public void startTagOnly() -->Line_3 $$ String text = "  *   <start>"[ CD ]
Line_7 $$ context = parse(text, text.length() - 1)-->Line_8 $$ assertEmpty(context)[ FD ]
