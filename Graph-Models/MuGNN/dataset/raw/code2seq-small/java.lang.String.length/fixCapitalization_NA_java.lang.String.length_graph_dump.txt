Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ char currChar = s.charAt(i)[ FD ]
Line_9 $$ if (title || Character.isUpperCase(currChar)) -->Line_11 $$ for (; j < s.length(); j++) [ CD ]
Line_18 $$ buffer = new StringBuilder(s)-->Line_20 $$ buffer.setCharAt(i, title ? toUpperCase(currChar) : toLowerCase(currChar))[ FD ]
Line_7 $$ if (!Character.isLetterOrDigit(prevChar) && prevChar != '\'') -->Line_8 $$ if (Character.isLetterOrDigit(currChar)) [ CD ]
Line_3 $$ StringBuilder buffer = null-->Line_26 $$ return buffer == null ? s : buffer.toString()[ FD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ if (!Character.isLetterOrDigit(prevChar) && prevChar != '\'') [ CD ]
Line_18 $$ buffer = new StringBuilder(s)-->Line_17 $$ if (buffer == null) [ FD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_26 $$ return buffer == null ? s : buffer.toString()[ CD ]
Line_9 $$ if (title || Character.isUpperCase(currChar)) -->Line_10 $$ int j = i[ CD ]
Line_6 $$ char currChar = s.charAt(i)-->Line_8 $$ if (Character.isLetterOrDigit(currChar)) [ FD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_5 $$ char prevChar = i == 0 ? ' ' : s.charAt(i - 1)[ CD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_3 $$ StringBuilder buffer = null[ CD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_16 $$ if (!isPreposition(s, i, j - 1, prepositions)) [ FD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_5 $$ char prevChar = i == 0 ? ' ' : s.charAt(i - 1)[ FD ]
Line_3 $$ StringBuilder buffer = null-->Line_17 $$ if (buffer == null) [ FD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_16 $$ if (!isPreposition(s, i, j - 1, prepositions)) [ FD ]
Line_11 $$ for (; j < s.length(); j++) -->Line_12 $$ if (!Character.isLetterOrDigit(s.charAt(j))) [ CD ]
Line_3 $$ StringBuilder buffer = null-->Line_18 $$ buffer = new StringBuilder(s)[ FD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_12 $$ if (!Character.isLetterOrDigit(s.charAt(j))) [ FD ]
Line_16 $$ if (!isPreposition(s, i, j - 1, prepositions)) -->Line_20 $$ buffer.setCharAt(i, title ? toUpperCase(currChar) : toLowerCase(currChar))[ CD ]
Line_18 $$ buffer = new StringBuilder(s)-->Line_26 $$ return buffer == null ? s : buffer.toString()[ FD ]
Line_10 $$ int j = i-->Line_12 $$ if (!Character.isLetterOrDigit(s.charAt(j))) [ FD ]
Line_17 $$ if (buffer == null) -->Line_18 $$ buffer = new StringBuilder(s)[ CD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_4 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_16 $$ if (!isPreposition(s, i, j - 1, prepositions)) -->Line_17 $$ if (buffer == null) [ CD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_9 $$ if (title || Character.isUpperCase(currChar)) [ FD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_4 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_8 $$ if (Character.isLetterOrDigit(currChar)) -->Line_9 $$ if (title || Character.isUpperCase(currChar)) [ CD ]
Line_9 $$ if (title || Character.isUpperCase(currChar)) -->Line_16 $$ if (!isPreposition(s, i, j - 1, prepositions)) [ CD ]
Line_10 $$ int j = i-->Line_11 $$ for (; j < s.length(); j++) [ FD ]
Line_5 $$ char prevChar = i == 0 ? ' ' : s.charAt(i - 1)-->Line_7 $$ if (!Character.isLetterOrDigit(prevChar) && prevChar != '\'') [ FD ]
Line_6 $$ char currChar = s.charAt(i)-->Line_20 $$ buffer.setCharAt(i, title ? toUpperCase(currChar) : toLowerCase(currChar))[ FD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ char currChar = s.charAt(i)[ CD ]
Line_3 $$ StringBuilder buffer = null-->Line_20 $$ buffer.setCharAt(i, title ? toUpperCase(currChar) : toLowerCase(currChar))[ FD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_6 $$ char currChar = s.charAt(i)[ FD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_20 $$ buffer.setCharAt(i, title ? toUpperCase(currChar) : toLowerCase(currChar))[ FD ]
Line_2 $$ private static String fixCapitalization(@NotNull String s, @NotNull String[] prepositions, boolean title) -->Line_11 $$ for (; j < s.length(); j++) [ FD ]
Line_6 $$ char currChar = s.charAt(i)-->Line_9 $$ if (title || Character.isUpperCase(currChar)) [ FD ]
