Line_8 $$ if ("_root".equals(component)) -->Line_11 $$ ESLoggerFactory.getLogger(component).setLevel(entry.getValue())[ CD ]
Line_6 $$ if (entry.getKey().startsWith("logger.")) -->Line_8 $$ if ("_root".equals(component)) [ CD ]
Line_5 $$ for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) -->Line_6 $$ if (entry.getKey().startsWith("logger.")) [ FD ]
Line_5 $$ for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) -->Line_7 $$ String component = entry.getKey().substring("logger.".length())[ FD ]
Line_8 $$ if ("_root".equals(component)) -->Line_9 $$ ESLoggerFactory.getRootLogger().setLevel(entry.getValue())[ CD ]
Line_5 $$ for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) -->Line_11 $$ ESLoggerFactory.getLogger(component).setLevel(entry.getValue())[ FD ]
Line_2 $$ public synchronized Settings applySettings(Settings newSettings) -->Line_3 $$ Settings settings = super.applySettings(newSettings)[ FD ]
Line_3 $$ Settings settings = super.applySettings(newSettings)-->Line_5 $$ for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) [ FD ]
Line_7 $$ String component = entry.getKey().substring("logger.".length())-->Line_8 $$ if ("_root".equals(component)) [ FD ]
Line_7 $$ String component = entry.getKey().substring("logger.".length())-->Line_11 $$ ESLoggerFactory.getLogger(component).setLevel(entry.getValue())[ FD ]
Line_6 $$ if (entry.getKey().startsWith("logger.")) -->Line_7 $$ String component = entry.getKey().substring("logger.".length())[ CD ]
Line_2 $$ public synchronized Settings applySettings(Settings newSettings) -->Line_3 $$ Settings settings = super.applySettings(newSettings)[ CD ]
Line_5 $$ for (Map.Entry<String, String> entry : settings.getAsMap().entrySet()) -->Line_9 $$ ESLoggerFactory.getRootLogger().setLevel(entry.getValue())[ FD ]
Line_2 $$ public synchronized Settings applySettings(Settings newSettings) -->Line_18 $$ return settings[ CD ]
