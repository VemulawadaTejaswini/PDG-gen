Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_8 $$ final TextRange range = current.getTextRange()[ FD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_9 $$ final String text = current.getText()[ CD ]
Line_8 $$ final TextRange range = current.getTextRange()-->Line_13 $$ int start = startOffset > range.getStartOffset() ? startOffset - range.getStartOffset() : 0[ FD ]
Line_13 $$ int start = startOffset > range.getStartOffset() ? startOffset - range.getStartOffset() : 0-->Line_24 $$ buffer.append(text.substring(start, end))[ FD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_8 $$ final TextRange range = current.getTextRange()[ CD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_9 $$ final String text = current.getText()[ FD ]
Line_9 $$ final String text = current.getText()-->Line_22 $$ buffer.append(text)[ FD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_14 $$ if (start >= text.length()) [ CD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_18 $$ if (end <= start) [ CD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_17 $$ int end = endOffset < range.getEndOffset() ? text.length() - (range.getEndOffset() - endOffset) : text.length()[ CD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_13 $$ int start = startOffset > range.getStartOffset() ? startOffset - range.getStartOffset() : 0[ CD ]
Line_17 $$ int end = endOffset < range.getEndOffset() ? text.length() - (range.getEndOffset() - endOffset) : text.length()-->Line_18 $$ if (end <= start) [ FD ]
Line_21 $$ if (start == 0 && end == text.length()) -->Line_22 $$ buffer.append(text)[ CD ]
Line_17 $$ int end = endOffset < range.getEndOffset() ? text.length() - (range.getEndOffset() - endOffset) : text.length()-->Line_24 $$ buffer.append(text.substring(start, end))[ FD ]
Line_9 $$ final String text = current.getText()-->Line_14 $$ if (start >= text.length()) [ FD ]
Line_9 $$ final String text = current.getText()-->Line_10 $$ if (StringUtil.isEmpty(text)) [ FD ]
Line_13 $$ int start = startOffset > range.getStartOffset() ? startOffset - range.getStartOffset() : 0-->Line_14 $$ if (start >= text.length()) [ FD ]
Line_9 $$ final String text = current.getText()-->Line_21 $$ if (start == 0 && end == text.length()) [ FD ]
Line_9 $$ final String text = current.getText()-->Line_24 $$ buffer.append(text.substring(start, end))[ FD ]
Line_21 $$ if (start == 0 && end == text.length()) -->Line_24 $$ buffer.append(text.substring(start, end))[ CD ]
Line_13 $$ int start = startOffset > range.getStartOffset() ? startOffset - range.getStartOffset() : 0-->Line_18 $$ if (end <= start) [ FD ]
Line_9 $$ final String text = current.getText()-->Line_17 $$ int end = endOffset < range.getEndOffset() ? text.length() - (range.getEndOffset() - endOffset) : text.length()[ FD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_21 $$ if (start == 0 && end == text.length()) [ CD ]
Line_8 $$ final TextRange range = current.getTextRange()-->Line_17 $$ int end = endOffset < range.getEndOffset() ? text.length() - (range.getEndOffset() - endOffset) : text.length()[ FD ]
Line_7 $$ for (PsiElement current = startElement; current != null && current.getTextRange().getStartOffset() < endOffset; current = next(current)) -->Line_10 $$ if (StringUtil.isEmpty(text)) [ CD ]
