Line_2 $$ private static void removeTrailingBlankLines(PsiFile file) -->Line_16 $$ if (lastBlankLineOffset > 0) [ CD ]
Line_3 $$ Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file)-->Line_17 $$ document.deleteString(lastBlankLineOffset, document.getTextLength())[ FD ]
Line_3 $$ Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file)-->Line_9 $$ int lineStart = document.getLineStartOffset(i)[ FD ]
Line_4 $$ if (document == null) -->Line_5 $$ return[ CD ]
Line_3 $$ Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file)-->Line_10 $$ String trimmed = document.getCharsSequence().subSequence(lineStart, document.getLineEndOffset(i)).toString().trim()[ FD ]
Line_7 $$ int lastBlankLineOffset = -1-->Line_14 $$ lastBlankLineOffset = lineStart[ FD ]
Line_10 $$ String trimmed = document.getCharsSequence().subSequence(lineStart, document.getLineEndOffset(i)).toString().trim()-->Line_11 $$ if (trimmed.length() > 0) [ FD ]
Line_9 $$ int lineStart = document.getLineStartOffset(i)-->Line_10 $$ String trimmed = document.getCharsSequence().subSequence(lineStart, document.getLineEndOffset(i)).toString().trim()[ FD ]
Line_16 $$ if (lastBlankLineOffset > 0) -->Line_17 $$ document.deleteString(lastBlankLineOffset, document.getTextLength())[ CD ]
Line_14 $$ lastBlankLineOffset = lineStart-->Line_17 $$ document.deleteString(lastBlankLineOffset, document.getTextLength())[ FD ]
Line_2 $$ private static void removeTrailingBlankLines(PsiFile file) -->Line_3 $$ Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file)[ CD ]
Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) -->Line_14 $$ lastBlankLineOffset = lineStart[ CD ]
Line_7 $$ int lastBlankLineOffset = -1-->Line_17 $$ document.deleteString(lastBlankLineOffset, document.getTextLength())[ FD ]
Line_2 $$ private static void removeTrailingBlankLines(PsiFile file) -->Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) [ CD ]
Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) -->Line_10 $$ String trimmed = document.getCharsSequence().subSequence(lineStart, document.getLineEndOffset(i)).toString().trim()[ CD ]
Line_14 $$ lastBlankLineOffset = lineStart-->Line_16 $$ if (lastBlankLineOffset > 0) [ FD ]
Line_3 $$ Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file)-->Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) [ FD ]
Line_2 $$ private static void removeTrailingBlankLines(PsiFile file) -->Line_7 $$ int lastBlankLineOffset = -1[ CD ]
Line_2 $$ private static void removeTrailingBlankLines(PsiFile file) -->Line_4 $$ if (document == null) [ CD ]
Line_9 $$ int lineStart = document.getLineStartOffset(i)-->Line_14 $$ lastBlankLineOffset = lineStart[ FD ]
Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) -->Line_10 $$ String trimmed = document.getCharsSequence().subSequence(lineStart, document.getLineEndOffset(i)).toString().trim()[ FD ]
Line_2 $$ private static void removeTrailingBlankLines(PsiFile file) -->Line_3 $$ Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file)[ FD ]
Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) -->Line_9 $$ int lineStart = document.getLineStartOffset(i)[ CD ]
Line_7 $$ int lastBlankLineOffset = -1-->Line_16 $$ if (lastBlankLineOffset > 0) [ FD ]
Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) -->Line_9 $$ int lineStart = document.getLineStartOffset(i)[ FD ]
Line_8 $$ for (int i = document.getLineCount() - 1; i >= 0; i--) -->Line_11 $$ if (trimmed.length() > 0) [ CD ]
Line_3 $$ Document document = PsiDocumentManager.getInstance(file.getProject()).getDocument(file)-->Line_4 $$ if (document == null) [ FD ]
