Line_12 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_17 $$ if (xmlTag != null) [ CD ]
Line_12 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_15 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())[ CD ]
Line_16 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)-->Line_18 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_23 $$ context.commitDocument()[ FD ]
Line_20 $$ String s = "\n<groupId></groupId>\n<artifactId></artifactId>\n"-->Line_21 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ FD ]
Line_14 $$ CaretModel caretModel = context.getEditor().getCaretModel()-->Line_15 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_25 $$ MavenDependencyCompletionUtil.invokeCompletion(context, CompletionType.BASIC)[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_13 $$ context.commitDocument()[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_15 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())[ FD ]
Line_12 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_14 $$ CaretModel caretModel = context.getEditor().getCaretModel()[ CD ]
Line_5 $$ if (myHandledTags.contains(lookupElement.getLookupString())) -->Line_31 $$ r = r.withLookupElement(decorator)[ CD ]
Line_4 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_10 $$ lookupElement.handleInsert(context)[ FD ]
Line_19 $$ if (domElement instanceof MavenDomDependency) -->Line_25 $$ MavenDependencyCompletionUtil.invokeCompletion(context, CompletionType.BASIC)[ CD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_24 $$ new ReformatCodeProcessor(context.getProject(), context.getFile(), xmlTag.getTextRange(), false).run()[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_10 $$ lookupElement.handleInsert(context)[ FD ]
Line_12 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_13 $$ context.commitDocument()[ CD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_31 $$ r = r.withLookupElement(decorator)[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_10 $$ lookupElement.handleInsert(context)[ CD ]
Line_12 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_16 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)[ CD ]
Line_17 $$ if (xmlTag != null) -->Line_19 $$ if (domElement instanceof MavenDomDependency) [ CD ]
Line_19 $$ if (domElement instanceof MavenDomDependency) -->Line_24 $$ new ReformatCodeProcessor(context.getProject(), context.getFile(), xmlTag.getTextRange(), false).run()[ CD ]
Line_4 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() [ FD ]
Line_14 $$ CaretModel caretModel = context.getEditor().getCaretModel()-->Line_22 $$ caretModel.moveToOffset(caretModel.getOffset() + s.length() - "</artifactId>\n".length())[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_14 $$ CaretModel caretModel = context.getEditor().getCaretModel()[ FD ]
Line_16 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)-->Line_17 $$ if (xmlTag != null) [ FD ]
Line_17 $$ if (xmlTag != null) -->Line_18 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)[ CD ]
Line_5 $$ if (myHandledTags.contains(lookupElement.getLookupString())) -->Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() [ CD ]
Line_15 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())-->Line_16 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)[ FD ]
Line_19 $$ if (domElement instanceof MavenDomDependency) -->Line_21 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ CD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_18 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)[ FD ]
Line_18 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)-->Line_19 $$ if (domElement instanceof MavenDomDependency) [ FD ]
Line_19 $$ if (domElement instanceof MavenDomDependency) -->Line_22 $$ caretModel.moveToOffset(caretModel.getOffset() + s.length() - "</artifactId>\n".length())[ CD ]
Line_20 $$ String s = "\n<groupId></groupId>\n<artifactId></artifactId>\n"-->Line_22 $$ caretModel.moveToOffset(caretModel.getOffset() + s.length() - "</artifactId>\n".length())[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_21 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ FD ]
Line_4 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_12 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) [ FD ]
Line_16 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)-->Line_24 $$ new ReformatCodeProcessor(context.getProject(), context.getFile(), xmlTag.getTextRange(), false).run()[ FD ]
Line_4 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_11 $$ Object object = lookupElement.getObject()[ FD ]
Line_14 $$ CaretModel caretModel = context.getEditor().getCaretModel()-->Line_21 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ FD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_12 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) [ CD ]
Line_19 $$ if (domElement instanceof MavenDomDependency) -->Line_20 $$ String s = "\n<groupId></groupId>\n<artifactId></artifactId>\n"[ CD ]
Line_19 $$ if (domElement instanceof MavenDomDependency) -->Line_23 $$ context.commitDocument()[ CD ]
Line_6 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_11 $$ Object object = lookupElement.getObject()[ CD ]
Line_4 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_5 $$ if (myHandledTags.contains(lookupElement.getLookupString())) [ FD ]
