Line_2 $$ public void consume(CompletionResult r) -->Line_4 $$ if (myHandledTags.contains(lookupElement.getLookupString())) [ CD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_18 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ FD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_7 $$ lookupElement.handleInsert(context)[ CD ]
Line_3 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_4 $$ if (myHandledTags.contains(lookupElement.getLookupString())) [ FD ]
Line_15 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)-->Line_16 $$ if (domElement instanceof MavenDomDependency) [ FD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_11 $$ CaretModel caretModel = context.getEditor().getCaretModel()[ FD ]
Line_13 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)-->Line_15 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)[ FD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_28 $$ r = r.withLookupElement(decorator)[ FD ]
Line_4 $$ if (myHandledTags.contains(lookupElement.getLookupString())) -->Line_28 $$ r = r.withLookupElement(decorator)[ CD ]
Line_17 $$ String s = "\n<groupId></groupId>\n<artifactId></artifactId>\n"-->Line_18 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ FD ]
Line_9 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_11 $$ CaretModel caretModel = context.getEditor().getCaretModel()[ CD ]
Line_11 $$ CaretModel caretModel = context.getEditor().getCaretModel()-->Line_19 $$ caretModel.moveToOffset(caretModel.getOffset() + s.length() - "</artifactId>\n".length())[ FD ]
Line_2 $$ public void consume(CompletionResult r) -->Line_3 $$ final LookupElement lookupElement = r.getLookupElement()[ CD ]
Line_2 $$ public void consume(CompletionResult r) -->Line_30 $$ result.passResult(r)[ FD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_21 $$ new ReformatCodeProcessor(context.getProject(), context.getFile(), xmlTag.getTextRange(), false).run()[ FD ]
Line_4 $$ if (myHandledTags.contains(lookupElement.getLookupString())) -->Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() [ CD ]
Line_16 $$ if (domElement instanceof MavenDomDependency) -->Line_20 $$ context.commitDocument()[ CD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_20 $$ context.commitDocument()[ FD ]
Line_9 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_10 $$ context.commitDocument()[ CD ]
Line_11 $$ CaretModel caretModel = context.getEditor().getCaretModel()-->Line_18 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ FD ]
Line_2 $$ public void consume(CompletionResult r) -->Line_3 $$ final LookupElement lookupElement = r.getLookupElement()[ FD ]
Line_2 $$ public void consume(CompletionResult r) -->Line_28 $$ r = r.withLookupElement(decorator)[ FD ]
Line_16 $$ if (domElement instanceof MavenDomDependency) -->Line_18 $$ context.getDocument().insertString(caretModel.getOffset(), s)[ CD ]
Line_14 $$ if (xmlTag != null) -->Line_15 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)[ CD ]
Line_2 $$ public void consume(CompletionResult r) -->Line_30 $$ result.passResult(r)[ CD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_9 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) [ CD ]
Line_3 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_7 $$ lookupElement.handleInsert(context)[ FD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_15 $$ DomElement domElement = DomManager.getDomManager(context.getProject()).getDomElement(xmlTag)[ FD ]
Line_16 $$ if (domElement instanceof MavenDomDependency) -->Line_19 $$ caretModel.moveToOffset(caretModel.getOffset() + s.length() - "</artifactId>\n".length())[ CD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_22 $$ MavenDependencyCompletionUtil.invokeCompletion(context, CompletionType.BASIC)[ FD ]
Line_9 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_14 $$ if (xmlTag != null) [ CD ]
Line_13 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)-->Line_14 $$ if (xmlTag != null) [ FD ]
Line_13 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)-->Line_21 $$ new ReformatCodeProcessor(context.getProject(), context.getFile(), xmlTag.getTextRange(), false).run()[ FD ]
Line_17 $$ String s = "\n<groupId></groupId>\n<artifactId></artifactId>\n"-->Line_19 $$ caretModel.moveToOffset(caretModel.getOffset() + s.length() - "</artifactId>\n".length())[ FD ]
Line_16 $$ if (domElement instanceof MavenDomDependency) -->Line_21 $$ new ReformatCodeProcessor(context.getProject(), context.getFile(), xmlTag.getTextRange(), false).run()[ CD ]
Line_16 $$ if (domElement instanceof MavenDomDependency) -->Line_22 $$ MavenDependencyCompletionUtil.invokeCompletion(context, CompletionType.BASIC)[ CD ]
Line_3 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() [ FD ]
Line_12 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())-->Line_13 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)[ FD ]
Line_3 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_9 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) [ FD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_8 $$ Object object = lookupElement.getObject()[ CD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_7 $$ lookupElement.handleInsert(context)[ FD ]
Line_16 $$ if (domElement instanceof MavenDomDependency) -->Line_17 $$ String s = "\n<groupId></groupId>\n<artifactId></artifactId>\n"[ CD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_10 $$ context.commitDocument()[ FD ]
Line_14 $$ if (xmlTag != null) -->Line_16 $$ if (domElement instanceof MavenDomDependency) [ CD ]
Line_3 $$ final LookupElement lookupElement = r.getLookupElement()-->Line_8 $$ Object object = lookupElement.getObject()[ FD ]
Line_9 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_12 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())[ CD ]
Line_9 $$ if ("dependency".equals(lookupElement.getLookupString()) && object instanceof XmlTag && "maven-4.0.0.xsd".equals(((XmlTag) object).getContainingFile().getName())) -->Line_13 $$ XmlTag xmlTag = PsiTreeUtil.getParentOfType(psiElement, XmlTag.class)[ CD ]
Line_11 $$ CaretModel caretModel = context.getEditor().getCaretModel()-->Line_12 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())[ FD ]
Line_5 $$ LookupElement decorator = LookupElementDecorator.withInsertHandler(lookupElement, new InsertHandler<LookupElementDecorator<LookupElement>>() -->Line_12 $$ PsiElement psiElement = context.getFile().findElementAt(caretModel.getOffset())[ FD ]
