Line_4 $$ if (Validator.isNull(subject)) -->Line_5 $$ if (Validator.isNotNull(body)) [ CD ]
Line_14 $$ double priority = 0.0-->Line_18 $$ return updateMessage(userId, messageId, subject, body, inputStreamOVPs, existingFiles, priority, allowPingbacks, serviceContext)[ FD ]
Line_12 $$ List<ObjectValuePair<String, InputStream>> inputStreamOVPs = null-->Line_18 $$ return updateMessage(userId, messageId, subject, body, inputStreamOVPs, existingFiles, priority, allowPingbacks, serviceContext)[ FD ]
Line_5 $$ if (Validator.isNotNull(body)) -->Line_6 $$ int pos = Math.min(body.length(), 50)[ CD ]
Line_6 $$ int pos = Math.min(body.length(), 50)-->Line_7 $$ subject = body.substring(0, pos) + "..."[ FD ]
Line_13 $$ List<String> existingFiles = null-->Line_18 $$ return updateMessage(userId, messageId, subject, body, inputStreamOVPs, existingFiles, priority, allowPingbacks, serviceContext)[ FD ]
Line_15 $$ boolean allowPingbacks = false-->Line_18 $$ return updateMessage(userId, messageId, subject, body, inputStreamOVPs, existingFiles, priority, allowPingbacks, serviceContext)[ FD ]
Line_5 $$ if (Validator.isNotNull(body)) -->Line_7 $$ subject = body.substring(0, pos) + "..."[ CD ]
Line_7 $$ subject = body.substring(0, pos) + "..."-->Line_18 $$ return updateMessage(userId, messageId, subject, body, inputStreamOVPs, existingFiles, priority, allowPingbacks, serviceContext)[ FD ]
