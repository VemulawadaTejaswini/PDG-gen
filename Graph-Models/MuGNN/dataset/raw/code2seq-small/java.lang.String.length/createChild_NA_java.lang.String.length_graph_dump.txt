Line_3 $$ String parentPath = parent.getPath()-->Line_4 $$ boolean hasEndSlash = parentPath.charAt(parentPath.length() - 1) == '/'[ FD ]
Line_2 $$ public VirtualFile createChild(@NotNull VirtualFile parent, @NotNull String name, boolean isDirectory) -->Line_3 $$ String parentPath = parent.getPath()[ FD ]
Line_2 $$ public VirtualFile createChild(@NotNull VirtualFile parent, @NotNull String name, boolean isDirectory) -->Line_5 $$ return getRemoteFileManager().getOrCreateFile((HttpVirtualFileImpl) parent, Urls.newFromIdea(parent.getUrl() + (hasEndSlash ? "" : '/') + name), parentPath + (hasEndSlash ? "" : '/') + name, isDirectory)[ FD ]
Line_2 $$ public VirtualFile createChild(@NotNull VirtualFile parent, @NotNull String name, boolean isDirectory) -->Line_5 $$ return getRemoteFileManager().getOrCreateFile((HttpVirtualFileImpl) parent, Urls.newFromIdea(parent.getUrl() + (hasEndSlash ? "" : '/') + name), parentPath + (hasEndSlash ? "" : '/') + name, isDirectory)[ CD ]
Line_2 $$ public VirtualFile createChild(@NotNull VirtualFile parent, @NotNull String name, boolean isDirectory) -->Line_3 $$ String parentPath = parent.getPath()[ CD ]
Line_2 $$ public VirtualFile createChild(@NotNull VirtualFile parent, @NotNull String name, boolean isDirectory) -->Line_4 $$ boolean hasEndSlash = parentPath.charAt(parentPath.length() - 1) == '/'[ CD ]
