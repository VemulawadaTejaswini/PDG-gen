Line_3 $$ if (val.indexOf('$') < 0 && val.indexOf('&') < 0) -->Line_4 $$ return val[ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_17 $$ sb.insert(charStart, c)[ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_52 $$ if (endChar == '}')[ CD ]
Line_2 $$ public String substituteVariables(String val) -->Line_61 $$ return sb.toString()[ CD ]
Line_11 $$ int charStart = sb.indexOf("&#")-->Line_17 $$ sb.insert(charStart, c)[ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_8 $$ val = val.replace("&quot;", "\"")[ FD ]
Line_7 $$ val = val.replace("&gt;", ">")-->Line_9 $$ val = val.replace("&amp;", "&")[ FD ]
Line_11 $$ int charStart = sb.indexOf("&#")-->Line_12 $$ while (charStart > -1) [ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_25 $$ if (sb.charAt(i) == '$') [ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_56 $$ if (value == null)[ CD ]
Line_59 $$ i = start + value.length()-->Line_23 $$ for (int i = 0; i < sb.length(); ) [ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_33 $$ sb.deleteCharAt(i - 2)[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_24 $$ for (; i < sb.length(); i++) [ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_46 $$ for (; i < sb.length(); i++) [ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_30 $$ if (i == sb.length())[ FD ]
Line_14 $$ if (charEnd > -1) -->Line_18 $$ charStart = sb.indexOf("&#")[ CD ]
Line_6 $$ val = val.replace("&lt;", "<")-->Line_7 $$ val = val.replace("&gt;", ">")[ FD ]
Line_18 $$ charStart = sb.indexOf("&#")-->Line_17 $$ sb.insert(charStart, c)[ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_55 $$ String value = getVariableValue(varName)[ CD ]
Line_32 $$ if (i > 1 && sb.charAt(i - 2) == '\\') -->Line_33 $$ sb.deleteCharAt(i - 2)[ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_42 $$ if (sb.charAt(i) == '[ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_30 $$ if (i == sb.length())[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_13 $$ int charEnd = sb.indexOf(";", charStart)[ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_24 $$ for (; i < sb.length(); i++) [ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_54 $$ String varName = sb.substring(nameStart, nameEnd)[ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_59 $$ i = start + value.length()[ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_11 $$ int charStart = sb.indexOf("&#")[ CD ]
Line_11 $$ int charStart = sb.indexOf("&#")-->Line_13 $$ int charEnd = sb.indexOf(";", charStart)[ FD ]
Line_46 $$ for (; i < sb.length(); i++) -->Line_47 $$ if (sb.charAt(i) == endChar)[ CD ]
Line_59 $$ i = start + value.length()-->Line_30 $$ if (i == sb.length())[ FD ]
Line_15 $$ char c = (char) Integer.parseInt(sb.substring(charStart + 2, charEnd))-->Line_17 $$ sb.insert(charStart, c)[ FD ]
Line_14 $$ if (charEnd > -1) -->Line_16 $$ sb.delete(charStart, charEnd + 1)[ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_25 $$ if (sb.charAt(i) == '$') [ FD ]
Line_13 $$ int charEnd = sb.indexOf(";", charStart)-->Line_14 $$ if (charEnd > -1) [ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_23 $$ for (int i = 0; i < sb.length(); ) [ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_32 $$ if (i > 1 && sb.charAt(i - 2) == '\\') [ CD ]
Line_2 $$ public String substituteVariables(String val) -->Line_6 $$ val = val.replace("&lt;", "<")[ FD ]
Line_59 $$ i = start + value.length()-->Line_34 $$ i--[ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_47 $$ if (sb.charAt(i) == endChar)[ FD ]
Line_12 $$ while (charStart > -1) -->Line_13 $$ int charEnd = sb.indexOf(";", charStart)[ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_46 $$ for (; i < sb.length(); i++) [ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_9 $$ val = val.replace("&amp;", "&")[ CD ]
Line_32 $$ if (i > 1 && sb.charAt(i - 2) == '\\') -->Line_34 $$ i--[ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_58 $$ sb.replace(start, end, value)[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_42 $$ if (sb.charAt(i) == '[ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_9 $$ val = val.replace("&amp;", "&")[ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_3 $$ if (val.indexOf('$') < 0 && val.indexOf('&') < 0) [ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_26 $$ i++[ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_7 $$ val = val.replace("&gt;", ">")[ FD ]
Line_18 $$ charStart = sb.indexOf("&#")-->Line_12 $$ while (charStart > -1) [ FD ]
Line_18 $$ charStart = sb.indexOf("&#")-->Line_13 $$ int charEnd = sb.indexOf(";", charStart)[ FD ]
Line_18 $$ charStart = sb.indexOf("&#")-->Line_16 $$ sb.delete(charStart, charEnd + 1)[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_32 $$ if (i > 1 && sb.charAt(i - 2) == '\\') [ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_42 $$ if (sb.charAt(i) == '[ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_58 $$ sb.replace(start, end, value)[ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_54 $$ String varName = sb.substring(nameStart, nameEnd)[ FD ]
Line_6 $$ val = val.replace("&lt;", "<")-->Line_8 $$ val = val.replace("&quot;", "\"")[ FD ]
Line_6 $$ val = val.replace("&lt;", "<")-->Line_9 $$ val = val.replace("&amp;", "&")[ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_34 $$ i--[ FD ]
Line_7 $$ val = val.replace("&gt;", ">")-->Line_8 $$ val = val.replace("&quot;", "\"")[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_11 $$ int charStart = sb.indexOf("&#")[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_47 $$ if (sb.charAt(i) == endChar)[ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_7 $$ val = val.replace("&gt;", ">")[ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_59 $$ i = start + value.length()[ CD ]
Line_24 $$ for (; i < sb.length(); i++) -->Line_25 $$ if (sb.charAt(i) == '$') [ CD ]
Line_2 $$ public String substituteVariables(String val) -->Line_3 $$ if (val.indexOf('$') < 0 && val.indexOf('&') < 0) [ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_8 $$ val = val.replace("&quot;", "\"")[ CD ]
Line_2 $$ public String substituteVariables(String val) -->Line_10 $$ StringBuilder sb = new StringBuilder(val)[ CD ]
Line_14 $$ if (charEnd > -1) -->Line_17 $$ sb.insert(charStart, c)[ CD ]
Line_2 $$ public String substituteVariables(String val) -->Line_6 $$ val = val.replace("&lt;", "<")[ CD ]
Line_12 $$ while (charStart > -1) -->Line_14 $$ if (charEnd > -1) [ CD ]
Line_8 $$ val = val.replace("&quot;", "\"")-->Line_9 $$ val = val.replace("&amp;", "&")[ FD ]
Line_2 $$ public String substituteVariables(String val) -->Line_12 $$ while (charStart > -1) [ CD ]
Line_13 $$ int charEnd = sb.indexOf(";", charStart)-->Line_15 $$ char c = (char) Integer.parseInt(sb.substring(charStart + 2, charEnd))[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_16 $$ sb.delete(charStart, charEnd + 1)[ FD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_61 $$ return sb.toString()[ FD ]
Line_59 $$ i = start + value.length()-->Line_42 $$ if (sb.charAt(i) == '[ FD ]
Line_11 $$ int charStart = sb.indexOf("&#")-->Line_18 $$ charStart = sb.indexOf("&#")[ FD ]
Line_11 $$ int charStart = sb.indexOf("&#")-->Line_16 $$ sb.delete(charStart, charEnd + 1)[ FD ]
Line_14 $$ if (charEnd > -1) -->Line_15 $$ char c = (char) Integer.parseInt(sb.substring(charStart + 2, charEnd))[ CD ]
Line_2 $$ public String substituteVariables(String val) -->Line_23 $$ for (int i = 0; i < sb.length(); ) [ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_24 $$ for (; i < sb.length(); i++) [ FD ]
Line_25 $$ if (sb.charAt(i) == '$') -->Line_26 $$ i++[ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_15 $$ char c = (char) Integer.parseInt(sb.substring(charStart + 2, charEnd))[ FD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_46 $$ for (; i < sb.length(); i++) [ CD ]
Line_23 $$ for (int i = 0; i < sb.length(); ) -->Line_30 $$ if (i == sb.length())[ CD ]
Line_10 $$ StringBuilder sb = new StringBuilder(val)-->Line_18 $$ charStart = sb.indexOf("&#")[ FD ]
