Line_4 $$ int[] offsets = new int[rawContent.length() + 1]-->Line_10 $$ GrStringUtil.parseRegexCharacters(rawContent, new StringBuilder(), offsets, false)[ FD ]
Line_3 $$ String rawContent = GrStringUtil.removeQuotes(literal.getText())-->Line_4 $$ int[] offsets = new int[rawContent.length() + 1][ FD ]
Line_5 $$ if (GrStringUtil.isSingleQuoteString(literal) || GrStringUtil.isDoubleQuoteString(literal)) -->Line_6 $$ GrStringUtil.parseStringCharacters(rawContent, new StringBuilder(), offsets)[ CD ]
Line_14 $$ int relativeEnd = endOffset - contentStart-->Line_15 $$ return ArrayUtil.find(offsets, relativeStart) < 0 || ArrayUtil.find(offsets, relativeEnd) < 0[ FD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_3 $$ String rawContent = GrStringUtil.removeQuotes(literal.getText())[ FD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_13 $$ int relativeStart = startOffset - contentStart[ CD ]
Line_9 $$ if (GrStringUtil.isDollarSlashyString(literal)) -->Line_10 $$ GrStringUtil.parseRegexCharacters(rawContent, new StringBuilder(), offsets, false)[ CD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_9 $$ if (GrStringUtil.isDollarSlashyString(literal)) [ FD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_14 $$ int relativeEnd = endOffset - contentStart[ CD ]
Line_13 $$ int relativeStart = startOffset - contentStart-->Line_15 $$ return ArrayUtil.find(offsets, relativeStart) < 0 || ArrayUtil.find(offsets, relativeEnd) < 0[ FD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_5 $$ if (GrStringUtil.isSingleQuoteString(literal) || GrStringUtil.isDoubleQuoteString(literal)) [ FD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_5 $$ if (GrStringUtil.isSingleQuoteString(literal) || GrStringUtil.isDoubleQuoteString(literal)) [ CD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_12 $$ int contentStart = literal.getTextRange().getStartOffset() + GrStringUtil.getStartQuote(literal.getText()).length()[ FD ]
Line_4 $$ int[] offsets = new int[rawContent.length() + 1]-->Line_8 $$ GrStringUtil.parseRegexCharacters(rawContent, new StringBuilder(), offsets, true)[ FD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_7 $$ if (GrStringUtil.isSlashyString(literal)) [ FD ]
Line_4 $$ int[] offsets = new int[rawContent.length() + 1]-->Line_15 $$ return ArrayUtil.find(offsets, relativeStart) < 0 || ArrayUtil.find(offsets, relativeEnd) < 0[ FD ]
Line_5 $$ if (GrStringUtil.isSingleQuoteString(literal) || GrStringUtil.isDoubleQuoteString(literal)) -->Line_7 $$ if (GrStringUtil.isSlashyString(literal)) [ CD ]
Line_7 $$ if (GrStringUtil.isSlashyString(literal)) -->Line_8 $$ GrStringUtil.parseRegexCharacters(rawContent, new StringBuilder(), offsets, true)[ CD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_15 $$ return ArrayUtil.find(offsets, relativeStart) < 0 || ArrayUtil.find(offsets, relativeEnd) < 0[ CD ]
Line_4 $$ int[] offsets = new int[rawContent.length() + 1]-->Line_6 $$ GrStringUtil.parseStringCharacters(rawContent, new StringBuilder(), offsets)[ FD ]
Line_3 $$ String rawContent = GrStringUtil.removeQuotes(literal.getText())-->Line_10 $$ GrStringUtil.parseRegexCharacters(rawContent, new StringBuilder(), offsets, false)[ FD ]
Line_3 $$ String rawContent = GrStringUtil.removeQuotes(literal.getText())-->Line_8 $$ GrStringUtil.parseRegexCharacters(rawContent, new StringBuilder(), offsets, true)[ FD ]
Line_3 $$ String rawContent = GrStringUtil.removeQuotes(literal.getText())-->Line_6 $$ GrStringUtil.parseStringCharacters(rawContent, new StringBuilder(), offsets)[ FD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_12 $$ int contentStart = literal.getTextRange().getStartOffset() + GrStringUtil.getStartQuote(literal.getText()).length()[ CD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_4 $$ int[] offsets = new int[rawContent.length() + 1][ CD ]
Line_7 $$ if (GrStringUtil.isSlashyString(literal)) -->Line_9 $$ if (GrStringUtil.isDollarSlashyString(literal)) [ CD ]
Line_2 $$ private static boolean isEscapesCut(GrLiteral literal, int startOffset, int endOffset) -->Line_3 $$ String rawContent = GrStringUtil.removeQuotes(literal.getText())[ CD ]
