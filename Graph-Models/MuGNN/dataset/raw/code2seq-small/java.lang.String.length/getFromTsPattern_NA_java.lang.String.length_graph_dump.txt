Line_2 $$ private Long getFromTsPattern() -->Line_5 $$ final int start = trimmed.indexOf(startPattern)[ CD ]
Line_5 $$ final int start = trimmed.indexOf(startPattern)-->Line_6 $$ if (start >= 0) [ FD ]
Line_8 $$ number = number.endsWith(")") ? number.substring(0, number.length() - 1) : number-->Line_10 $$ return Long.parseLong(number.trim())[ FD ]
Line_2 $$ private Long getFromTsPattern() -->Line_15 $$ return null[ CD ]
Line_6 $$ if (start >= 0) -->Line_7 $$ String number = trimmed.substring(startPattern.length() + start)[ CD ]
Line_2 $$ private Long getFromTsPattern() -->Line_6 $$ if (start >= 0) [ CD ]
Line_7 $$ String number = trimmed.substring(startPattern.length() + start)-->Line_8 $$ number = number.endsWith(")") ? number.substring(0, number.length() - 1) : number[ FD ]
Line_3 $$ final String trimmed = myVersionId.trim()-->Line_5 $$ final int start = trimmed.indexOf(startPattern)[ FD ]
Line_2 $$ private Long getFromTsPattern() -->Line_4 $$ final String startPattern = "(date"[ CD ]
Line_4 $$ final String startPattern = "(date"-->Line_7 $$ String number = trimmed.substring(startPattern.length() + start)[ FD ]
Line_7 $$ String number = trimmed.substring(startPattern.length() + start)-->Line_10 $$ return Long.parseLong(number.trim())[ FD ]
Line_6 $$ if (start >= 0) -->Line_8 $$ number = number.endsWith(")") ? number.substring(0, number.length() - 1) : number[ CD ]
Line_4 $$ final String startPattern = "(date"-->Line_5 $$ final int start = trimmed.indexOf(startPattern)[ FD ]
Line_2 $$ private Long getFromTsPattern() -->Line_3 $$ final String trimmed = myVersionId.trim()[ CD ]
Line_3 $$ final String trimmed = myVersionId.trim()-->Line_7 $$ String number = trimmed.substring(startPattern.length() + start)[ FD ]
