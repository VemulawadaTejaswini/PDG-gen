Line_6 $$ if (endIndex != -1) -->Line_8 $$ String key = propertyPath.substring(startIndex, endIndex + 1)[ CD ]
Line_5 $$ int endIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_SUFFIX_CHAR)-->Line_6 $$ if (endIndex != -1) [ FD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_5 $$ int endIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_SUFFIX_CHAR)[ FD ]
Line_6 $$ if (endIndex != -1) -->Line_12 $$ addStrippedPropertyPaths(strippedPaths, nestedPath + prefix + key, suffix)[ CD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_10 $$ strippedPaths.add(nestedPath + prefix + suffix)[ FD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_9 $$ String suffix = propertyPath.substring(endIndex + 1, propertyPath.length())[ FD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_11 $$ addStrippedPropertyPaths(strippedPaths, nestedPath + prefix, suffix)[ FD ]
Line_9 $$ String suffix = propertyPath.substring(endIndex + 1, propertyPath.length())-->Line_11 $$ addStrippedPropertyPaths(strippedPaths, nestedPath + prefix, suffix)[ FD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_12 $$ addStrippedPropertyPaths(strippedPaths, nestedPath + prefix + key, suffix)[ FD ]
Line_6 $$ if (endIndex != -1) -->Line_9 $$ String suffix = propertyPath.substring(endIndex + 1, propertyPath.length())[ CD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_7 $$ String prefix = propertyPath.substring(0, startIndex)[ FD ]
Line_6 $$ if (endIndex != -1) -->Line_11 $$ addStrippedPropertyPaths(strippedPaths, nestedPath + prefix, suffix)[ CD ]
Line_6 $$ if (endIndex != -1) -->Line_7 $$ String prefix = propertyPath.substring(0, startIndex)[ CD ]
Line_6 $$ if (endIndex != -1) -->Line_10 $$ strippedPaths.add(nestedPath + prefix + suffix)[ CD ]
Line_9 $$ String suffix = propertyPath.substring(endIndex + 1, propertyPath.length())-->Line_12 $$ addStrippedPropertyPaths(strippedPaths, nestedPath + prefix + key, suffix)[ FD ]
Line_4 $$ if (startIndex != -1) -->Line_5 $$ int endIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_SUFFIX_CHAR)[ CD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_4 $$ if (startIndex != -1) [ CD ]
Line_3 $$ int startIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_PREFIX_CHAR)-->Line_7 $$ String prefix = propertyPath.substring(0, startIndex)[ FD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_8 $$ String key = propertyPath.substring(startIndex, endIndex + 1)[ FD ]
Line_4 $$ if (startIndex != -1) -->Line_6 $$ if (endIndex != -1) [ CD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_3 $$ int startIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_PREFIX_CHAR)[ CD ]
Line_3 $$ int startIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_PREFIX_CHAR)-->Line_8 $$ String key = propertyPath.substring(startIndex, endIndex + 1)[ FD ]
Line_3 $$ int startIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_PREFIX_CHAR)-->Line_4 $$ if (startIndex != -1) [ FD ]
Line_2 $$ private void addStrippedPropertyPaths(List<String> strippedPaths, String nestedPath, String propertyPath) -->Line_3 $$ int startIndex = propertyPath.indexOf(PropertyAccessor.PROPERTY_KEY_PREFIX_CHAR)[ FD ]
