Line_2 $$ protected void paintComponent(Graphics g) -->Line_3 $$ int width = getSize().width[ CD ]
Line_12 $$ String remainPart = myAllText.substring(firstLineSize)-->Line_25 $$ setToolTipText("..." + remainPart.substring(secondLineSize))[ FD ]
Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart-->Line_20 $$ if (remainPart.length() <= secondLineSize) [ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_28 $$ super.paintComponent(g)[ CD ]
Line_4 $$ FontMetrics fontMetrics = getFontMetrics(getFont())-->Line_5 $$ int charWidth = fontMetrics.charWidth('a')[ FD ]
Line_12 $$ String remainPart = myAllText.substring(firstLineSize)-->Line_24 $$ setText(visibleText + remainPart.trim().substring(0, secondLineSize) + "...")[ FD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_19 $$ int secondLineSize = Math.max(0, (width - 3 * fontMetrics.charWidth('.')) / charWidth)[ CD ]
Line_11 $$ String firstLine = myAllText.substring(0, firstLineSize)-->Line_13 $$ int lastWhitespace = firstLine.lastIndexOf(' ')[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_5 $$ int charWidth = fontMetrics.charWidth('a')[ CD ]
Line_14 $$ if (lastWhitespace > -1) -->Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart[ CD ]
Line_11 $$ String firstLine = myAllText.substring(0, firstLineSize)-->Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart[ FD ]
Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart-->Line_24 $$ setText(visibleText + remainPart.trim().substring(0, secondLineSize) + "...")[ FD ]
Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart-->Line_25 $$ setToolTipText("..." + remainPart.substring(secondLineSize))[ FD ]
Line_6 $$ int firstLineSize = Math.max(0, width / charWidth)-->Line_12 $$ String remainPart = myAllText.substring(firstLineSize)[ FD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_12 $$ String remainPart = myAllText.substring(firstLineSize)[ CD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_20 $$ if (remainPart.length() <= secondLineSize) [ CD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_9 $$ setToolTipText(null)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_6 $$ int firstLineSize = Math.max(0, width / charWidth)[ CD ]
Line_20 $$ if (remainPart.length() <= secondLineSize) -->Line_22 $$ setToolTipText(null)[ CD ]
Line_4 $$ FontMetrics fontMetrics = getFontMetrics(getFont())-->Line_19 $$ int secondLineSize = Math.max(0, (width - 3 * fontMetrics.charWidth('.')) / charWidth)[ FD ]
Line_6 $$ int firstLineSize = Math.max(0, width / charWidth)-->Line_7 $$ if (myAllText.length() <= firstLineSize) [ FD ]
Line_12 $$ String remainPart = myAllText.substring(firstLineSize)-->Line_20 $$ if (remainPart.length() <= secondLineSize) [ FD ]
Line_12 $$ String remainPart = myAllText.substring(firstLineSize)-->Line_21 $$ setText(visibleText + remainPart.trim())[ FD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_18 $$ String visibleText = firstLine + "\n"[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_28 $$ super.paintComponent(g)[ FD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_7 $$ if (myAllText.length() <= firstLineSize) [ CD ]
Line_13 $$ int lastWhitespace = firstLine.lastIndexOf(' ')-->Line_16 $$ firstLine = firstLine.substring(0, lastWhitespace)[ FD ]
Line_20 $$ if (remainPart.length() <= secondLineSize) -->Line_24 $$ setText(visibleText + remainPart.trim().substring(0, secondLineSize) + "...")[ CD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_11 $$ String firstLine = myAllText.substring(0, firstLineSize)[ CD ]
Line_6 $$ int firstLineSize = Math.max(0, width / charWidth)-->Line_11 $$ String firstLine = myAllText.substring(0, firstLineSize)[ FD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_8 $$ setText(myAllText)[ CD ]
Line_12 $$ String remainPart = myAllText.substring(firstLineSize)-->Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart[ FD ]
Line_19 $$ int secondLineSize = Math.max(0, (width - 3 * fontMetrics.charWidth('.')) / charWidth)-->Line_25 $$ setToolTipText("..." + remainPart.substring(secondLineSize))[ FD ]
Line_13 $$ int lastWhitespace = firstLine.lastIndexOf(' ')-->Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart[ FD ]
Line_20 $$ if (remainPart.length() <= secondLineSize) -->Line_25 $$ setToolTipText("..." + remainPart.substring(secondLineSize))[ CD ]
Line_15 $$ remainPart = firstLine.substring(lastWhitespace) + remainPart-->Line_21 $$ setText(visibleText + remainPart.trim())[ FD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_14 $$ if (lastWhitespace > -1) [ CD ]
Line_20 $$ if (remainPart.length() <= secondLineSize) -->Line_21 $$ setText(visibleText + remainPart.trim())[ CD ]
Line_14 $$ if (lastWhitespace > -1) -->Line_16 $$ firstLine = firstLine.substring(0, lastWhitespace)[ CD ]
Line_2 $$ protected void paintComponent(Graphics g) -->Line_4 $$ FontMetrics fontMetrics = getFontMetrics(getFont())[ CD ]
Line_19 $$ int secondLineSize = Math.max(0, (width - 3 * fontMetrics.charWidth('.')) / charWidth)-->Line_20 $$ if (remainPart.length() <= secondLineSize) [ FD ]
Line_19 $$ int secondLineSize = Math.max(0, (width - 3 * fontMetrics.charWidth('.')) / charWidth)-->Line_24 $$ setText(visibleText + remainPart.trim().substring(0, secondLineSize) + "...")[ FD ]
Line_7 $$ if (myAllText.length() <= firstLineSize) -->Line_13 $$ int lastWhitespace = firstLine.lastIndexOf(' ')[ CD ]
Line_13 $$ int lastWhitespace = firstLine.lastIndexOf(' ')-->Line_14 $$ if (lastWhitespace > -1) [ FD ]
Line_11 $$ String firstLine = myAllText.substring(0, firstLineSize)-->Line_16 $$ firstLine = firstLine.substring(0, lastWhitespace)[ FD ]
