Line_4 $$ final XmlElementFactory factory = XmlElementFactory.getInstance(parent.getProject())-->Line_7 $$ final XmlTag tag = factory.createTagFromText(text.substring(0, text.length() - 2) + "></" + name + ">")[ FD ]
Line_8 $$ parent = (XmlTag) parent.replace(tag)-->Line_26 $$ return (XmlTag) parent.add(child)[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_23 $$ return (XmlTag) (subTagNum == -1 ? parent.addBefore(child, subTags[0]) : parent.addAfter(child, subTags[subTagNum]))[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_4 $$ final XmlElementFactory factory = XmlElementFactory.getInstance(parent.getProject())[ FD ]
Line_18 $$ while (subTagNum < subTags.length - 1 && subTags[subTagNum + 1].getName().equals(childElementName)) -->Line_19 $$ subTagNum++[ CD ]
Line_15 $$ for (XmlElementDescriptor childElementDescriptor : parentDescriptor.getElementsDescriptors(parent)) -->Line_16 $$ final String childElementName = childElementDescriptor.getName()[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_5 $$ final String name = parent.getName()[ FD ]
Line_21 $$ if (childElementName.equals(child.getLocalName())) -->Line_23 $$ return (XmlTag) (subTagNum == -1 ? parent.addBefore(child, subTags[0]) : parent.addAfter(child, subTags[subTagNum]))[ CD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_10 $$ final XmlElementDescriptor parentDescriptor = parent.getDescriptor()[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_26 $$ return (XmlTag) parent.add(child)[ FD ]
Line_3 $$ if (parent.getSubTags().length == 0 && parent.getText().endsWith("/>")) -->Line_6 $$ final String text = parent.getText()[ CD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_15 $$ for (XmlElementDescriptor childElementDescriptor : parentDescriptor.getElementsDescriptors(parent)) [ FD ]
Line_16 $$ final String childElementName = childElementDescriptor.getName()-->Line_18 $$ while (subTagNum < subTags.length - 1 && subTags[subTagNum + 1].getName().equals(childElementName)) [ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_6 $$ final String text = parent.getText()[ FD ]
Line_3 $$ if (parent.getSubTags().length == 0 && parent.getText().endsWith("/>")) -->Line_5 $$ final String name = parent.getName()[ CD ]
Line_8 $$ parent = (XmlTag) parent.replace(tag)-->Line_11 $$ final XmlTag[] subTags = parent.getSubTags()[ FD ]
Line_8 $$ parent = (XmlTag) parent.replace(tag)-->Line_10 $$ final XmlElementDescriptor parentDescriptor = parent.getDescriptor()[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_12 $$ if (parentDescriptor == null || subTags.length == 0)[ CD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_14 $$ int subTagNum = -1[ CD ]
Line_8 $$ parent = (XmlTag) parent.replace(tag)-->Line_15 $$ for (XmlElementDescriptor childElementDescriptor : parentDescriptor.getElementsDescriptors(parent)) [ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_10 $$ final XmlElementDescriptor parentDescriptor = parent.getDescriptor()[ CD ]
Line_16 $$ final String childElementName = childElementDescriptor.getName()-->Line_21 $$ if (childElementName.equals(child.getLocalName())) [ FD ]
Line_7 $$ final XmlTag tag = factory.createTagFromText(text.substring(0, text.length() - 2) + "></" + name + ">")-->Line_8 $$ parent = (XmlTag) parent.replace(tag)[ FD ]
Line_12 $$ if (parentDescriptor == null || subTags.length == 0)-->Line_13 $$ return (XmlTag) parent.add(child)[ CD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_26 $$ return (XmlTag) parent.add(child)[ CD ]
Line_8 $$ parent = (XmlTag) parent.replace(tag)-->Line_13 $$ return (XmlTag) parent.add(child)[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_11 $$ final XmlTag[] subTags = parent.getSubTags()[ FD ]
Line_8 $$ parent = (XmlTag) parent.replace(tag)-->Line_23 $$ return (XmlTag) (subTagNum == -1 ? parent.addBefore(child, subTags[0]) : parent.addAfter(child, subTags[subTagNum]))[ FD ]
Line_10 $$ final XmlElementDescriptor parentDescriptor = parent.getDescriptor()-->Line_15 $$ for (XmlElementDescriptor childElementDescriptor : parentDescriptor.getElementsDescriptors(parent)) [ FD ]
Line_21 $$ if (childElementName.equals(child.getLocalName())) -->Line_22 $$ subTagNum = index == -1 || index > subTagNum - prevSubTagNum ? subTagNum : prevSubTagNum + index[ CD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_11 $$ final XmlTag[] subTags = parent.getSubTags()[ CD ]
Line_3 $$ if (parent.getSubTags().length == 0 && parent.getText().endsWith("/>")) -->Line_8 $$ parent = (XmlTag) parent.replace(tag)[ CD ]
Line_3 $$ if (parent.getSubTags().length == 0 && parent.getText().endsWith("/>")) -->Line_4 $$ final XmlElementFactory factory = XmlElementFactory.getInstance(parent.getProject())[ CD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_13 $$ return (XmlTag) parent.add(child)[ FD ]
Line_3 $$ if (parent.getSubTags().length == 0 && parent.getText().endsWith("/>")) -->Line_7 $$ final XmlTag tag = factory.createTagFromText(text.substring(0, text.length() - 2) + "></" + name + ">")[ CD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_3 $$ if (parent.getSubTags().length == 0 && parent.getText().endsWith("/>")) [ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_21 $$ if (childElementName.equals(child.getLocalName())) [ FD ]
Line_6 $$ final String text = parent.getText()-->Line_7 $$ final XmlTag tag = factory.createTagFromText(text.substring(0, text.length() - 2) + "></" + name + ">")[ FD ]
Line_14 $$ int subTagNum = -1-->Line_19 $$ subTagNum++[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_3 $$ if (parent.getSubTags().length == 0 && parent.getText().endsWith("/>")) [ CD ]
Line_14 $$ int subTagNum = -1-->Line_22 $$ subTagNum = index == -1 || index > subTagNum - prevSubTagNum ? subTagNum : prevSubTagNum + index[ FD ]
Line_2 $$ public static XmlTag addChildTag(XmlTag parent, XmlTag child, int index) throws IncorrectOperationException -->Line_8 $$ parent = (XmlTag) parent.replace(tag)[ FD ]
