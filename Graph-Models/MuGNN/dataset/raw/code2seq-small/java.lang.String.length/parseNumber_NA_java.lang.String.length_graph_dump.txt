Line_8 $$ for (i = start; i < end && i < s.length(); i++) -->Line_10 $$ sum += Integer.valueOf(s.substring(i, i + 1), radix)[ CD ]
Line_2 $$ static Character parseNumber(int idx, String s, int radix, int len, boolean strict) -->Line_8 $$ for (i = start; i < end && i < s.length(); i++) [ FD ]
Line_3 $$ final int start = idx + 1-->Line_8 $$ for (i = start; i < end && i < s.length(); i++) [ FD ]
Line_2 $$ static Character parseNumber(int idx, String s, int radix, int len, boolean strict) -->Line_10 $$ sum += Integer.valueOf(s.substring(i, i + 1), radix)[ FD ]
Line_8 $$ for (i = start; i < end && i < s.length(); i++) -->Line_9 $$ sum *= radix[ CD ]
Line_9 $$ sum *= radix-->Line_10 $$ sum += Integer.valueOf(s.substring(i, i + 1), radix)[ FD ]
Line_2 $$ static Character parseNumber(int idx, String s, int radix, int len, boolean strict) -->Line_3 $$ final int start = idx + 1[ CD ]
Line_8 $$ for (i = start; i < end && i < s.length(); i++) -->Line_10 $$ sum += Integer.valueOf(s.substring(i, i + 1), radix)[ FD ]
Line_7 $$ int i-->Line_8 $$ for (i = start; i < end && i < s.length(); i++) [ FD ]
Line_2 $$ static Character parseNumber(int idx, String s, int radix, int len, boolean strict) -->Line_9 $$ sum *= radix[ FD ]
Line_7 $$ int i-->Line_10 $$ sum += Integer.valueOf(s.substring(i, i + 1), radix)[ FD ]
Line_2 $$ static Character parseNumber(int idx, String s, int radix, int len, boolean strict) -->Line_4 $$ final int end = start + len[ CD ]
Line_6 $$ int sum = 0-->Line_10 $$ sum += Integer.valueOf(s.substring(i, i + 1), radix)[ FD ]
Line_14 $$ if (sum < Character.MIN_CODE_POINT || sum > Character.MAX_CODE_POINT) -->Line_15 $$ return null[ CD ]
Line_6 $$ int sum = 0-->Line_9 $$ sum *= radix[ FD ]
Line_12 $$ if (i - start == 0)-->Line_13 $$ return null[ CD ]
