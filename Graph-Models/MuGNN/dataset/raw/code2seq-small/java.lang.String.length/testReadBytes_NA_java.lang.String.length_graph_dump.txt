Line_11 $$ try (ChannelProxy channel = new ChannelProxy(f);-->Line_14 $$ assertEquals(expected.length(), reader.length())[ FD ]
Line_11 $$ try (ChannelProxy channel = new ChannelProxy(f);-->Line_17 $$ assertTrue(reader.isEOF())[ FD ]
Line_5 $$ final String expected = "The quick brown fox jumps over the lazy dog"-->Line_14 $$ assertEquals(expected.length(), reader.length())[ FD ]
Line_5 $$ final String expected = "The quick brown fox jumps over the lazy dog"-->Line_7 $$ writer.write(expected.getBytes())[ FD ]
Line_6 $$ try (SequentialWriter writer = SequentialWriter.open(f)) -->Line_8 $$ writer.finish()[ FD ]
Line_6 $$ try (SequentialWriter writer = SequentialWriter.open(f)) -->Line_7 $$ writer.write(expected.getBytes())[ FD ]
Line_4 $$ File f = File.createTempFile("testReadBytes", "1")-->Line_10 $$ assert f.exists()[ FD ]
Line_11 $$ try (ChannelProxy channel = new ChannelProxy(f);-->Line_13 $$ assertEquals(f.getAbsolutePath(), reader.getPath())[ FD ]
Line_5 $$ final String expected = "The quick brown fox jumps over the lazy dog"-->Line_15 $$ ByteBuffer b = ByteBufferUtil.read(reader, expected.length())[ FD ]
Line_15 $$ ByteBuffer b = ByteBufferUtil.read(reader, expected.length())-->Line_16 $$ assertEquals(expected, new String(b.array(), Charset.forName("UTF-8")))[ FD ]
Line_11 $$ try (ChannelProxy channel = new ChannelProxy(f);-->Line_18 $$ assertEquals(0, reader.bytesRemaining())[ FD ]
Line_5 $$ final String expected = "The quick brown fox jumps over the lazy dog"-->Line_16 $$ assertEquals(expected, new String(b.array(), Charset.forName("UTF-8")))[ FD ]
Line_4 $$ File f = File.createTempFile("testReadBytes", "1")-->Line_6 $$ try (SequentialWriter writer = SequentialWriter.open(f)) [ FD ]
Line_4 $$ File f = File.createTempFile("testReadBytes", "1")-->Line_13 $$ assertEquals(f.getAbsolutePath(), reader.getPath())[ FD ]
Line_11 $$ try (ChannelProxy channel = new ChannelProxy(f);-->Line_15 $$ ByteBuffer b = ByteBufferUtil.read(reader, expected.length())[ FD ]
