Line_29 $$ String fileRepository = FileUtils.readLineFromFile(repositoryFile)-->Line_31 $$ fileRepository = ""[ FD ]
Line_31 $$ fileRepository = ""-->Line_34 $$ fileRepository = fileRepository.replace(File.separatorChar, '/')[ FD ]
Line_33 $$ fileRepository += repositoryDirs-->Line_34 $$ fileRepository = fileRepository.replace(File.separatorChar, '/')[ FD ]
Line_12 $$ final File directory = cvsFileSystem.getAdminFileSystem().getFile(directoryObject)-->Line_20 $$ throw new FileNotFoundException(SmartCvsSrcBundle.message("repository.file.not.found.for.directory.error.message", directory))[ FD ]
Line_29 $$ String fileRepository = FileUtils.readLineFromFile(repositoryFile)-->Line_33 $$ fileRepository += repositoryDirs[ FD ]
Line_16 $$ File dirFile = directory-->Line_27 $$ dirFile = dirFile.getParentFile()[ FD ]
Line_31 $$ fileRepository = ""-->Line_33 $$ fileRepository += repositoryDirs[ FD ]
Line_34 $$ fileRepository = fileRepository.replace(File.separatorChar, '/')-->Line_35 $$ if (fileRepository.startsWith(repository)) [ FD ]
Line_29 $$ String fileRepository = FileUtils.readLineFromFile(repositoryFile)-->Line_30 $$ if (fileRepository == null) [ FD ]
Line_17 $$ while (true) -->Line_22 $$ repositoryFile = new File(dirFile, CVS_REPOSITORY_FILE_PATH)[ CD ]
Line_22 $$ repositoryFile = new File(dirFile, CVS_REPOSITORY_FILE_PATH)-->Line_23 $$ if (repositoryFile.exists()) [ FD ]
Line_17 $$ while (true) -->Line_27 $$ dirFile = dirFile.getParentFile()[ CD ]
Line_27 $$ dirFile = dirFile.getParentFile()-->Line_26 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ FD ]
Line_15 $$ String repositoryDirs = ""-->Line_26 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ FD ]
Line_30 $$ if (fileRepository == null) -->Line_31 $$ fileRepository = ""[ CD ]
Line_31 $$ fileRepository = ""-->Line_35 $$ if (fileRepository.startsWith(repository)) [ FD ]
Line_17 $$ while (true) -->Line_26 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ CD ]
Line_22 $$ repositoryFile = new File(dirFile, CVS_REPOSITORY_FILE_PATH)-->Line_29 $$ String fileRepository = FileUtils.readLineFromFile(repositoryFile)[ FD ]
Line_33 $$ fileRepository += repositoryDirs-->Line_35 $$ if (fileRepository.startsWith(repository)) [ FD ]
Line_35 $$ if (fileRepository.startsWith(repository)) -->Line_38 $$ return FileUtils.ensureTrailingSlash(repository) + fileRepository[ CD ]
Line_17 $$ while (true) -->Line_23 $$ if (repositoryFile.exists()) [ CD ]
Line_16 $$ File dirFile = directory-->Line_26 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ FD ]
Line_35 $$ if (fileRepository.startsWith(repository)) -->Line_36 $$ return fileRepository[ CD ]
Line_29 $$ String fileRepository = FileUtils.readLineFromFile(repositoryFile)-->Line_35 $$ if (fileRepository.startsWith(repository)) [ FD ]
Line_15 $$ String repositoryDirs = ""-->Line_33 $$ fileRepository += repositoryDirs[ FD ]
Line_26 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs-->Line_33 $$ fileRepository += repositoryDirs[ FD ]
Line_29 $$ String fileRepository = FileUtils.readLineFromFile(repositoryFile)-->Line_34 $$ fileRepository = fileRepository.replace(File.separatorChar, '/')[ FD ]
