Line_2 $$ public void testPerformance() throws Exception -->Line_6 $$ String message = "Source file size: " + text.length()[ CD ]
Line_5 $$ PsiJavaFile file = (PsiJavaFile) createLightFile("test.java", text)-->Line_7 $$ myBuilder.buildStubTree(file)[ FD ]
Line_2 $$ public void testPerformance() throws Exception -->Line_3 $$ String path = PathManagerEx.getTestDataPath() + "/psi/stub/StubPerformanceTest.java"[ CD ]
Line_2 $$ public void testPerformance() throws Exception -->Line_5 $$ PsiJavaFile file = (PsiJavaFile) createLightFile("test.java", text)[ CD ]
Line_4 $$ String text = FileUtil.loadFile(new File(path))-->Line_6 $$ String message = "Source file size: " + text.length()[ FD ]
Line_4 $$ String text = FileUtil.loadFile(new File(path))-->Line_5 $$ PsiJavaFile file = (PsiJavaFile) createLightFile("test.java", text)[ FD ]
Line_6 $$ String message = "Source file size: " + text.length()-->Line_7 $$ PlatformTestUtil.startPerformanceTest(message, 2000, () -> myBuilder.buildStubTree(file)).cpuBound().useLegacyScaling().assertTiming()[ FD ]
Line_2 $$ public void testPerformance() throws Exception -->Line_7 $$ PlatformTestUtil.startPerformanceTest(message, 2000, () -> myBuilder.buildStubTree(file)).cpuBound().useLegacyScaling().assertTiming()[ CD ]
Line_2 $$ public void testPerformance() throws Exception -->Line_4 $$ String text = FileUtil.loadFile(new File(path))[ CD ]
