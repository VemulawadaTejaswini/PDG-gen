Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_42 $$ myCommandLine.getClassPath().addAllFiles(AntBuildFileImpl.ALL_CLASS_PATH.get(container))[ FD ]
Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_46 $$ final String toolsJar = ((JavaSdkType) sdkType).getToolsPath(jdk)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_31 $$ final String libraryDir = antHome + (antHome.endsWith("/") || antHome.endsWith(File.separator) ? "" : File.separator) + "lib"[ CD ]
Line_53 $$ final ParametersList programParameters = myCommandLine.getProgramParametersList()-->Line_71 $$ programParameters.add(INPUT_HANDLER_PARAMETER, IdeaInputHandler.class.getName())[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_23 $$ vmParametersList.add("-Xmx" + AntBuildFileImpl.MAX_HEAP_SIZE.get(container) + "m")[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_53 $$ final ParametersList programParameters = myCommandLine.getProgramParametersList()[ CD ]
Line_8 $$ jdkName = AntConfigurationImpl.DEFAULT_JDK_NAME.get(container)-->Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ FD ]
Line_5 $$ if (jdkName != null && jdkName.length() > 0) -->Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ CD ]
Line_4 $$ Sdk jdk-->Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_29 $$ final String antHome = AntInstallation.HOME_DIR.get(antInstallation.getProperties())[ CD ]
Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_33 $$ String[] urls = jdk.getRootProvider().getUrls(OrderRootType.CLASSES)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_70 $$ if (!programParameters.getList().contains(INPUT_HANDLER_PARAMETER)) [ CD ]
Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)-->Line_15 $$ throw new CantRunException(AntBundle.message("jdk.with.name.not.configured.error.message", jdkName))[ FD ]
Line_53 $$ final ParametersList programParameters = myCommandLine.getProgramParametersList()-->Line_70 $$ if (!programParameters.getList().contains(INPUT_HANDLER_PARAMETER)) [ FD ]
Line_47 $$ if (toolsJar != null) -->Line_48 $$ myCommandLine.getClassPath().add(toolsJar)[ CD ]
Line_4 $$ Sdk jdk-->Line_21 $$ myCommandLine.setJdk(jdk)[ FD ]
Line_8 $$ jdkName = AntConfigurationImpl.DEFAULT_JDK_NAME.get(container)-->Line_15 $$ throw new CantRunException(AntBundle.message("jdk.with.name.not.configured.error.message", jdkName))[ FD ]
Line_56 $$ for (String param : ParametersList.parse(additionalParams)) -->Line_58 $$ final String cutParam = param.substring("-J".length())[ FD ]
Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)-->Line_19 $$ throw new CantRunException(AntBundle.message("jdk.with.name.bad.configured.error.message", jdkName))[ FD ]
Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ FD ]
Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_33 $$ String[] urls = jdk.getRootProvider().getUrls(OrderRootType.CLASSES)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_24 $$ vmParametersList.add("-Xss" + AntBuildFileImpl.MAX_STACK_SIZE.get(container) + "m")[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_75 $$ myCommandLine.setWorkingDirectory(buildFile.getParent())[ CD ]
Line_22 $$ final ParametersList vmParametersList = myCommandLine.getVMParametersList()-->Line_32 $$ vmParametersList.add("-Dant.library.dir=" + libraryDir)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_5 $$ if (jdkName != null && jdkName.length() > 0) [ CD ]
Line_22 $$ final ParametersList vmParametersList = myCommandLine.getVMParametersList()-->Line_23 $$ vmParametersList.add("-Xmx" + AntBuildFileImpl.MAX_HEAP_SIZE.get(container) + "m")[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)[ FD ]
Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_14 $$ if (jdk == null) [ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_74 $$ myBuildFilePath = buildFile.getAbsolutePath()[ FD ]
Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_17 $$ VirtualFile homeDirectory = jdk.getHomeDirectory()[ FD ]
Line_5 $$ if (jdkName != null && jdkName.length() > 0) -->Line_8 $$ jdkName = AntConfigurationImpl.DEFAULT_JDK_NAME.get(container)[ CD ]
Line_22 $$ final ParametersList vmParametersList = myCommandLine.getVMParametersList()-->Line_24 $$ vmParametersList.add("-Xss" + AntBuildFileImpl.MAX_STACK_SIZE.get(container) + "m")[ FD ]
Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_46 $$ final String toolsJar = ((JavaSdkType) sdkType).getToolsPath(jdk)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_22 $$ final ParametersList vmParametersList = myCommandLine.getVMParametersList()[ CD ]
Line_70 $$ if (!programParameters.getList().contains(INPUT_HANDLER_PARAMETER)) -->Line_71 $$ programParameters.add(INPUT_HANDLER_PARAMETER, IdeaInputHandler.class.getName())[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_24 $$ vmParametersList.add("-Xss" + AntBuildFileImpl.MAX_STACK_SIZE.get(container) + "m")[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_34 $$ final String jdkHome = homeDirectory.getPath().replace('/', File.separatorChar)[ CD ]
Line_67 $$ if (!(programParameters.getList().contains(LOGFILE_SHORT_PARAMETER) || programParameters.getList().contains(LOGFILE_PARAMETER))) -->Line_68 $$ programParameters.add("-logger", IdeaAntLogger2.class.getName())[ CD ]
Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_21 $$ myCommandLine.setJdk(jdk)[ FD ]
Line_56 $$ for (String param : ParametersList.parse(additionalParams)) -->Line_63 $$ programParameters.add(param)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_54 $$ final String additionalParams = AntBuildFileImpl.ANT_COMMAND_LINE_PARAMETERS.get(container)[ FD ]
Line_5 $$ if (jdkName != null && jdkName.length() > 0) -->Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ CD ]
Line_59 $$ if (cutParam.length() > 0) -->Line_60 $$ vmParametersList.add(cutParam)[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_73 $$ myProperties = AntBuildFileImpl.ANT_PROPERTIES.get(container)[ FD ]
Line_17 $$ VirtualFile homeDirectory = jdk.getHomeDirectory()-->Line_34 $$ final String jdkHome = homeDirectory.getPath().replace('/', File.separatorChar)[ FD ]
Line_53 $$ final ParametersList programParameters = myCommandLine.getProgramParametersList()-->Line_68 $$ programParameters.add("-logger", IdeaAntLogger2.class.getName())[ FD ]
Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_21 $$ myCommandLine.setJdk(jdk)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_32 $$ vmParametersList.add("-Dant.library.dir=" + libraryDir)[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_67 $$ if (!(programParameters.getList().contains(LOGFILE_SHORT_PARAMETER) || programParameters.getList().contains(LOGFILE_PARAMETER))) [ CD ]
Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)-->Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ FD ]
Line_57 $$ if (param.startsWith("-J")) -->Line_59 $$ if (cutParam.length() > 0) [ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_35 $$ final String pathToJre = jdkHome + File.separator + "jre" + File.separator[ CD ]
Line_17 $$ VirtualFile homeDirectory = jdk.getHomeDirectory()-->Line_18 $$ if (homeDirectory == null) [ FD ]
Line_37 $$ final String path = PathUtil.toPresentableUrl(url)-->Line_39 $$ myCommandLine.getClassPath().add(path)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_33 $$ String[] urls = jdk.getRootProvider().getUrls(OrderRootType.CLASSES)[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_73 $$ myProperties = AntBuildFileImpl.ANT_PROPERTIES.get(container)[ CD ]
Line_5 $$ if (jdkName != null && jdkName.length() > 0) -->Line_9 $$ if (jdkName == null || jdkName.length() == 0) [ CD ]
Line_4 $$ Sdk jdk-->Line_14 $$ if (jdk == null) [ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_23 $$ vmParametersList.add("-Xmx" + AntBuildFileImpl.MAX_HEAP_SIZE.get(container) + "m")[ CD ]
Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)-->Line_5 $$ if (jdkName != null && jdkName.length() > 0) [ FD ]
Line_45 $$ if (sdkType instanceof JavaSdkType) -->Line_47 $$ if (toolsJar != null) [ CD ]
Line_38 $$ if (!path.startsWith(pathToJre)) -->Line_39 $$ myCommandLine.getClassPath().add(path)[ CD ]
Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)-->Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ FD ]
Line_4 $$ Sdk jdk-->Line_33 $$ String[] urls = jdk.getRootProvider().getUrls(OrderRootType.CLASSES)[ FD ]
Line_36 $$ for (String url : urls) -->Line_37 $$ final String path = PathUtil.toPresentableUrl(url)[ FD ]
Line_57 $$ if (param.startsWith("-J")) -->Line_63 $$ programParameters.add(param)[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_17 $$ VirtualFile homeDirectory = jdk.getHomeDirectory()[ CD ]
Line_4 $$ Sdk jdk-->Line_46 $$ final String toolsJar = ((JavaSdkType) sdkType).getToolsPath(jdk)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_54 $$ final String additionalParams = AntBuildFileImpl.ANT_COMMAND_LINE_PARAMETERS.get(container)[ CD ]
Line_4 $$ Sdk jdk-->Line_44 $$ final SdkTypeId sdkType = jdk.getSdkType()[ FD ]
Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_17 $$ VirtualFile homeDirectory = jdk.getHomeDirectory()[ FD ]
Line_45 $$ if (sdkType instanceof JavaSdkType) -->Line_46 $$ final String toolsJar = ((JavaSdkType) sdkType).getToolsPath(jdk)[ CD ]
Line_57 $$ if (param.startsWith("-J")) -->Line_58 $$ final String cutParam = param.substring("-J".length())[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)[ CD ]
Line_58 $$ final String cutParam = param.substring("-J".length())-->Line_60 $$ vmParametersList.add(cutParam)[ FD ]
Line_4 $$ Sdk jdk-->Line_17 $$ VirtualFile homeDirectory = jdk.getHomeDirectory()[ FD ]
Line_25 $$ final AntInstallation antInstallation = AntBuildFileImpl.ANT_INSTALLATION.get(container)-->Line_29 $$ final String antHome = AntInstallation.HOME_DIR.get(antInstallation.getProperties())[ FD ]
Line_54 $$ final String additionalParams = AntBuildFileImpl.ANT_COMMAND_LINE_PARAMETERS.get(container)-->Line_56 $$ for (String param : ParametersList.parse(additionalParams)) [ FD ]
Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_14 $$ if (jdk == null) [ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_55 $$ if (additionalParams != null) [ CD ]
Line_53 $$ final ParametersList programParameters = myCommandLine.getProgramParametersList()-->Line_67 $$ if (!(programParameters.getList().contains(LOGFILE_SHORT_PARAMETER) || programParameters.getList().contains(LOGFILE_PARAMETER))) [ FD ]
Line_53 $$ final ParametersList programParameters = myCommandLine.getProgramParametersList()-->Line_63 $$ programParameters.add(param)[ FD ]
Line_37 $$ final String path = PathUtil.toPresentableUrl(url)-->Line_38 $$ if (!path.startsWith(pathToJre)) [ FD ]
Line_8 $$ jdkName = AntConfigurationImpl.DEFAULT_JDK_NAME.get(container)-->Line_19 $$ throw new CantRunException(AntBundle.message("jdk.with.name.bad.configured.error.message", jdkName))[ FD ]
Line_58 $$ final String cutParam = param.substring("-J".length())-->Line_59 $$ if (cutParam.length() > 0) [ FD ]
Line_29 $$ final String antHome = AntInstallation.HOME_DIR.get(antInstallation.getProperties())-->Line_31 $$ final String libraryDir = antHome + (antHome.endsWith("/") || antHome.endsWith(File.separator) ? "" : File.separator) + "lib"[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_30 $$ vmParametersList.add("-Dant.home=" + antHome)[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_45 $$ if (sdkType instanceof JavaSdkType) [ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_75 $$ myCommandLine.setWorkingDirectory(buildFile.getParent())[ FD ]
Line_22 $$ final ParametersList vmParametersList = myCommandLine.getVMParametersList()-->Line_60 $$ vmParametersList.add(cutParam)[ FD ]
Line_46 $$ final String toolsJar = ((JavaSdkType) sdkType).getToolsPath(jdk)-->Line_48 $$ myCommandLine.getClassPath().add(toolsJar)[ FD ]
Line_6 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_44 $$ final SdkTypeId sdkType = jdk.getSdkType()[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_26 $$ if (antInstallation == null) [ CD ]
Line_54 $$ final String additionalParams = AntBuildFileImpl.ANT_COMMAND_LINE_PARAMETERS.get(container)-->Line_55 $$ if (additionalParams != null) [ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_52 $$ myCommandLine.setMainClass(AntMain2.class.getName())[ CD ]
Line_22 $$ final ParametersList vmParametersList = myCommandLine.getVMParametersList()-->Line_30 $$ vmParametersList.add("-Dant.home=" + antHome)[ FD ]
Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)-->Line_44 $$ final SdkTypeId sdkType = jdk.getSdkType()[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_43 $$ myCommandLine.getClassPath().addAllFiles(AntBuildFileImpl.getUserHomeLibraries())[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_44 $$ final SdkTypeId sdkType = jdk.getSdkType()[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_21 $$ myCommandLine.setJdk(jdk)[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_4 $$ Sdk jdk[ CD ]
Line_56 $$ for (String param : ParametersList.parse(additionalParams)) -->Line_57 $$ if (param.startsWith("-J")) [ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_51 $$ PathUtilEx.addRtJar(myCommandLine.getClassPath())[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_14 $$ if (jdk == null) [ CD ]
Line_46 $$ final String toolsJar = ((JavaSdkType) sdkType).getToolsPath(jdk)-->Line_47 $$ if (toolsJar != null) [ FD ]
Line_44 $$ final SdkTypeId sdkType = jdk.getSdkType()-->Line_45 $$ if (sdkType instanceof JavaSdkType) [ FD ]
Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)-->Line_9 $$ if (jdkName == null || jdkName.length() == 0) [ FD ]
Line_8 $$ jdkName = AntConfigurationImpl.DEFAULT_JDK_NAME.get(container)-->Line_9 $$ if (jdkName == null || jdkName.length() == 0) [ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_74 $$ myBuildFilePath = buildFile.getAbsolutePath()[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_25 $$ final AntInstallation antInstallation = AntBuildFileImpl.ANT_INSTALLATION.get(container)[ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_8 $$ jdkName = AntConfigurationImpl.DEFAULT_JDK_NAME.get(container)[ FD ]
Line_35 $$ final String pathToJre = jdkHome + File.separator + "jre" + File.separator-->Line_38 $$ if (!path.startsWith(pathToJre)) [ FD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_18 $$ if (homeDirectory == null) [ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_25 $$ final AntInstallation antInstallation = AntBuildFileImpl.ANT_INSTALLATION.get(container)[ CD ]
Line_2 $$ public void setBuildFile(AbstractProperty.AbstractPropertyContainer container, File buildFile) throws CantRunException -->Line_42 $$ myCommandLine.getClassPath().addAllFiles(AntBuildFileImpl.ALL_CLASS_PATH.get(container))[ CD ]
Line_3 $$ String jdkName = AntBuildFileImpl.CUSTOM_JDK_NAME.get(container)-->Line_8 $$ jdkName = AntConfigurationImpl.DEFAULT_JDK_NAME.get(container)[ FD ]
Line_4 $$ Sdk jdk-->Line_12 $$ jdk = GlobalAntConfiguration.findJdk(jdkName)[ FD ]
Line_25 $$ final AntInstallation antInstallation = AntBuildFileImpl.ANT_INSTALLATION.get(container)-->Line_26 $$ if (antInstallation == null) [ FD ]
