Line_2 $$ private static void manageReplace(Editor editor, GrConditionalExpression condExp, String conditionExpText, String newExp) -->Line_5 $$ GrExpression expressionFromText = GroovyPsiElementFactory.getInstance(editor.getProject()).createExpressionFromText(newExp, condExp.getContext())[ CD ]
Line_2 $$ private static void manageReplace(Editor editor, GrConditionalExpression condExp, String conditionExpText, String newExp) -->Line_5 $$ GrExpression expressionFromText = GroovyPsiElementFactory.getInstance(editor.getProject()).createExpressionFromText(newExp, condExp.getContext())[ FD ]
Line_2 $$ private static void manageReplace(Editor editor, GrConditionalExpression condExp, String conditionExpText, String newExp) -->Line_6 $$ expressionFromText = (GrExpression) condExp.replace(expressionFromText)[ CD ]
Line_5 $$ GrExpression expressionFromText = GroovyPsiElementFactory.getInstance(editor.getProject()).createExpressionFromText(newExp, condExp.getContext())-->Line_6 $$ expressionFromText = (GrExpression) condExp.replace(expressionFromText)[ FD ]
Line_2 $$ private static void manageReplace(Editor editor, GrConditionalExpression condExp, String conditionExpText, String newExp) -->Line_6 $$ expressionFromText = (GrExpression) condExp.replace(expressionFromText)[ FD ]
