Line_25 $$ if (matchHighlighting) -->Line_28 $$ final List<TextRange> ranges = adjustedFragments.subList(0, splitPoint)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_22 $$ final int splitPoint = adjustRanges(adjustedFragments, inspectionName.length() + 1)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_32 $$ final SimpleColoredComponent group = new SimpleColoredComponent()[ CD ]
Line_9 $$ final Color fg = sel ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground()-->Line_46 $$ icon.setForeground(fg)[ FD ]
Line_14 $$ final String inspectionName = "  " + toolWrapper.getDisplayName()-->Line_22 $$ final int splitPoint = adjustRanges(adjustedFragments, inspectionName.length() + 1)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_43 $$ right.add(group, BorderLayout.CENTER)[ CD ]
Line_6 $$ final JPanel panel = new JPanel(layout)-->Line_10 $$ panel.setBackground(bg)[ FD ]
Line_8 $$ final Color bg = sel ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_10 $$ panel.setBackground(bg)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_13 $$ final InspectionToolWrapper toolWrapper = (InspectionToolWrapper) value[ CD ]
Line_44 $$ final JLabel icon = new JLabel(getIcon(toolWrapper))-->Line_45 $$ icon.setBackground(bg)[ FD ]
Line_32 $$ final SimpleColoredComponent group = new SimpleColoredComponent()-->Line_43 $$ right.add(group, BorderLayout.CENTER)[ FD ]
Line_33 $$ if (matchHighlighting) -->Line_37 $$ final List<TextRange> ranges = adjustedFragments.subList(splitPoint, adjustedFragments.size())[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_42 $$ right.setForeground(fg)[ CD ]
Line_44 $$ final JLabel icon = new JLabel(getIcon(toolWrapper))-->Line_47 $$ right.add(icon, BorderLayout.EAST)[ FD ]
Line_28 $$ final List<TextRange> ranges = adjustedFragments.subList(0, splitPoint)-->Line_29 $$ SpeedSearchUtil.appendColoredFragments(c, inspectionName, ranges, sel ? mySelected : myPlain, myHighlighted)[ FD ]
Line_40 $$ final JPanel right = new JPanel(new BorderLayout())-->Line_43 $$ right.add(group, BorderLayout.CENTER)[ FD ]
Line_33 $$ if (matchHighlighting) -->Line_36 $$ final SimpleTextAttributes attributes = sel ? mySelected : SimpleTextAttributes.GRAYED_ATTRIBUTES[ CD ]
Line_18 $$ List<TextRange> adjustedFragments = new ArrayList<TextRange>()-->Line_37 $$ final List<TextRange> ranges = adjustedFragments.subList(splitPoint, adjustedFragments.size())[ FD ]
Line_19 $$ if (fragments != null) -->Line_20 $$ adjustedFragments.addAll(fragments)[ CD ]
Line_14 $$ final String inspectionName = "  " + toolWrapper.getDisplayName()-->Line_26 $$ c.append(inspectionName, myPlain)[ FD ]
Line_9 $$ final Color fg = sel ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground()-->Line_42 $$ right.setForeground(fg)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_24 $$ final boolean matchHighlighting = Registry.is("ide.highlight.match.in.selected.only") && !sel[ CD ]
Line_40 $$ final JPanel right = new JPanel(new BorderLayout())-->Line_47 $$ right.add(icon, BorderLayout.EAST)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_44 $$ final JLabel icon = new JLabel(getIcon(toolWrapper))[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_17 $$ List<TextRange> fragments = ((MinusculeMatcher) myMatcher).matchingFragments(matchingText)[ CD ]
Line_36 $$ final SimpleTextAttributes attributes = sel ? mySelected : SimpleTextAttributes.GRAYED_ATTRIBUTES-->Line_38 $$ SpeedSearchUtil.appendColoredFragments(group, groupName, ranges, attributes, myHighlighted)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_16 $$ final String matchingText = inspectionName + "|" + groupName[ CD ]
Line_13 $$ final InspectionToolWrapper toolWrapper = (InspectionToolWrapper) value-->Line_44 $$ final JLabel icon = new JLabel(getIcon(toolWrapper))[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_41 $$ right.setBackground(bg)[ CD ]
Line_18 $$ List<TextRange> adjustedFragments = new ArrayList<TextRange>()-->Line_28 $$ final List<TextRange> ranges = adjustedFragments.subList(0, splitPoint)[ FD ]
Line_6 $$ final JPanel panel = new JPanel(layout)-->Line_7 $$ panel.setOpaque(true)[ FD ]
Line_13 $$ final InspectionToolWrapper toolWrapper = (InspectionToolWrapper) value-->Line_14 $$ final String inspectionName = "  " + toolWrapper.getDisplayName()[ FD ]
Line_17 $$ List<TextRange> fragments = ((MinusculeMatcher) myMatcher).matchingFragments(matchingText)-->Line_19 $$ if (fragments != null) [ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_31 $$ panel.add(c, BorderLayout.WEST)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_23 $$ final SimpleColoredComponent c = new SimpleColoredComponent()[ CD ]
Line_8 $$ final Color bg = sel ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_41 $$ right.setBackground(bg)[ FD ]
Line_32 $$ final SimpleColoredComponent group = new SimpleColoredComponent()-->Line_34 $$ group.append(groupName, SimpleTextAttributes.GRAYED_ATTRIBUTES)[ FD ]
Line_22 $$ final int splitPoint = adjustRanges(adjustedFragments, inspectionName.length() + 1)-->Line_28 $$ final List<TextRange> ranges = adjustedFragments.subList(0, splitPoint)[ FD ]
Line_23 $$ final SimpleColoredComponent c = new SimpleColoredComponent()-->Line_26 $$ c.append(inspectionName, myPlain)[ FD ]
Line_9 $$ final Color fg = sel ? UIUtil.getListSelectionForeground() : UIUtil.getListForeground()-->Line_11 $$ panel.setForeground(fg)[ FD ]
Line_28 $$ final List<TextRange> ranges = adjustedFragments.subList(0, splitPoint)-->Line_38 $$ SpeedSearchUtil.appendColoredFragments(group, groupName, ranges, attributes, myHighlighted)[ FD ]
Line_13 $$ final InspectionToolWrapper toolWrapper = (InspectionToolWrapper) value-->Line_15 $$ final String groupName = StringUtil.join(toolWrapper.getGroupPath(), " | ")[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_25 $$ if (matchHighlighting) [ CD ]
Line_15 $$ final String groupName = StringUtil.join(toolWrapper.getGroupPath(), " | ")-->Line_38 $$ SpeedSearchUtil.appendColoredFragments(group, groupName, ranges, attributes, myHighlighted)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_40 $$ final JPanel right = new JPanel(new BorderLayout())[ CD ]
Line_18 $$ List<TextRange> adjustedFragments = new ArrayList<TextRange>()-->Line_22 $$ final int splitPoint = adjustRanges(adjustedFragments, inspectionName.length() + 1)[ FD ]
Line_14 $$ final String inspectionName = "  " + toolWrapper.getDisplayName()-->Line_29 $$ SpeedSearchUtil.appendColoredFragments(c, inspectionName, ranges, sel ? mySelected : myPlain, myHighlighted)[ FD ]
Line_6 $$ final JPanel panel = new JPanel(layout)-->Line_48 $$ panel.add(right, BorderLayout.EAST)[ FD ]
Line_25 $$ if (matchHighlighting) -->Line_26 $$ c.append(inspectionName, myPlain)[ CD ]
Line_33 $$ if (matchHighlighting) -->Line_38 $$ SpeedSearchUtil.appendColoredFragments(group, groupName, ranges, attributes, myHighlighted)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_46 $$ icon.setForeground(fg)[ CD ]
Line_40 $$ final JPanel right = new JPanel(new BorderLayout())-->Line_48 $$ panel.add(right, BorderLayout.EAST)[ FD ]
Line_6 $$ final JPanel panel = new JPanel(layout)-->Line_31 $$ panel.add(c, BorderLayout.WEST)[ FD ]
Line_23 $$ final SimpleColoredComponent c = new SimpleColoredComponent()-->Line_29 $$ SpeedSearchUtil.appendColoredFragments(c, inspectionName, ranges, sel ? mySelected : myPlain, myHighlighted)[ FD ]
Line_17 $$ List<TextRange> fragments = ((MinusculeMatcher) myMatcher).matchingFragments(matchingText)-->Line_20 $$ adjustedFragments.addAll(fragments)[ FD ]
Line_32 $$ final SimpleColoredComponent group = new SimpleColoredComponent()-->Line_38 $$ SpeedSearchUtil.appendColoredFragments(group, groupName, ranges, attributes, myHighlighted)[ FD ]
Line_4 $$ final BorderLayout layout = new BorderLayout()-->Line_5 $$ layout.setHgap(5)[ FD ]
Line_44 $$ final JLabel icon = new JLabel(getIcon(toolWrapper))-->Line_46 $$ icon.setForeground(fg)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_19 $$ if (fragments != null) [ CD ]
Line_23 $$ final SimpleColoredComponent c = new SimpleColoredComponent()-->Line_31 $$ panel.add(c, BorderLayout.WEST)[ FD ]
Line_25 $$ if (matchHighlighting) -->Line_29 $$ SpeedSearchUtil.appendColoredFragments(c, inspectionName, ranges, sel ? mySelected : myPlain, myHighlighted)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_15 $$ final String groupName = StringUtil.join(toolWrapper.getGroupPath(), " | ")[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_48 $$ panel.add(right, BorderLayout.EAST)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_47 $$ right.add(icon, BorderLayout.EAST)[ CD ]
Line_40 $$ final JPanel right = new JPanel(new BorderLayout())-->Line_41 $$ right.setBackground(bg)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_45 $$ icon.setBackground(bg)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_18 $$ List<TextRange> adjustedFragments = new ArrayList<TextRange>()[ CD ]
Line_18 $$ List<TextRange> adjustedFragments = new ArrayList<TextRange>()-->Line_20 $$ adjustedFragments.addAll(fragments)[ FD ]
Line_15 $$ final String groupName = StringUtil.join(toolWrapper.getGroupPath(), " | ")-->Line_34 $$ group.append(groupName, SimpleTextAttributes.GRAYED_ATTRIBUTES)[ FD ]
Line_6 $$ final JPanel panel = new JPanel(layout)-->Line_11 $$ panel.setForeground(fg)[ FD ]
Line_8 $$ final Color bg = sel ? UIUtil.getListSelectionBackground() : UIUtil.getListBackground()-->Line_45 $$ icon.setBackground(bg)[ FD ]
Line_40 $$ final JPanel right = new JPanel(new BorderLayout())-->Line_42 $$ right.setForeground(fg)[ FD ]
Line_22 $$ final int splitPoint = adjustRanges(adjustedFragments, inspectionName.length() + 1)-->Line_37 $$ final List<TextRange> ranges = adjustedFragments.subList(splitPoint, adjustedFragments.size())[ FD ]
Line_16 $$ final String matchingText = inspectionName + "|" + groupName-->Line_17 $$ List<TextRange> fragments = ((MinusculeMatcher) myMatcher).matchingFragments(matchingText)[ FD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_14 $$ final String inspectionName = "  " + toolWrapper.getDisplayName()[ CD ]
Line_33 $$ if (matchHighlighting) -->Line_34 $$ group.append(groupName, SimpleTextAttributes.GRAYED_ATTRIBUTES)[ CD ]
Line_12 $$ if (value instanceof InspectionToolWrapper) -->Line_33 $$ if (matchHighlighting) [ CD ]
