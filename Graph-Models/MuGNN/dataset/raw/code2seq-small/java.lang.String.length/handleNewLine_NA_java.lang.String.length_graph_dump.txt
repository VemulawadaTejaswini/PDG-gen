Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_10 $$ int type = bbCodeItem.getType()[ FD ]
Line_8 $$ String value = bbCodeItem.getValue()-->Line_11 $$ int excludeNewLineType = _excludeNewLineTypes.get(value)[ FD ]
Line_13 $$ data = StringPool.BLANK-->Line_22 $$ data = data.substring(0, data.length() - 1)[ FD ]
Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_20 $$ String value = bbCodeItem.getValue()[ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_4 $$ if ((marker.getValue() + 1) < bbCodeItems.size()) [ CD ]
Line_5 $$ if (data.matches("\\A\r?\n\\z")) -->Line_7 $$ if (bbCodeItem != null) [ CD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_18 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)[ FD ]
Line_22 $$ data = data.substring(0, data.length() - 1)-->Line_27 $$ if (data.length() > 0) [ FD ]
Line_13 $$ data = StringPool.BLANK-->Line_28 $$ data = StringUtil.replace(data, StringPool.RETURN_NEW_LINE, "<br />")[ FD ]
Line_22 $$ data = data.substring(0, data.length() - 1)-->Line_28 $$ data = StringUtil.replace(data, StringPool.RETURN_NEW_LINE, "<br />")[ FD ]
Line_12 $$ if ((type & excludeNewLineType) > 0) -->Line_13 $$ data = StringPool.BLANK[ CD ]
Line_17 $$ if (data.matches("(?s).*\r?\n\\z")) -->Line_19 $$ if ((bbCodeItem != null) && (bbCodeItem.getType() == BBCodeParser.TYPE_TAG_END)) [ CD ]
Line_19 $$ if ((bbCodeItem != null) && (bbCodeItem.getType() == BBCodeParser.TYPE_TAG_END)) -->Line_20 $$ String value = bbCodeItem.getValue()[ CD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_22 $$ data = data.substring(0, data.length() - 1)[ FD ]
Line_8 $$ String value = bbCodeItem.getValue()-->Line_21 $$ if (value.equals("*")) [ FD ]
Line_5 $$ if (data.matches("\\A\r?\n\\z")) -->Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)[ CD ]
Line_3 $$ BBCodeItem bbCodeItem = null-->Line_8 $$ String value = bbCodeItem.getValue()[ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_13 $$ data = StringPool.BLANK[ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)[ FD ]
Line_9 $$ if (_excludeNewLineTypes.containsKey(value)) -->Line_12 $$ if ((type & excludeNewLineType) > 0) [ CD ]
Line_4 $$ if ((marker.getValue() + 1) < bbCodeItems.size()) -->Line_5 $$ if (data.matches("\\A\r?\n\\z")) [ CD ]
Line_3 $$ BBCodeItem bbCodeItem = null-->Line_18 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)[ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_31 $$ return data[ CD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_5 $$ if (data.matches("\\A\r?\n\\z")) [ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_29 $$ data = StringUtil.replace(data, StringPool.NEW_LINE, "<br />")[ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_27 $$ if (data.length() > 0) [ CD ]
Line_5 $$ if (data.matches("\\A\r?\n\\z")) -->Line_17 $$ if (data.matches("(?s).*\r?\n\\z")) [ CD ]
Line_18 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_19 $$ if ((bbCodeItem != null) && (bbCodeItem.getType() == BBCodeParser.TYPE_TAG_END)) [ FD ]
Line_27 $$ if (data.length() > 0) -->Line_29 $$ data = StringUtil.replace(data, StringPool.NEW_LINE, "<br />")[ CD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_4 $$ if ((marker.getValue() + 1) < bbCodeItems.size()) [ FD ]
Line_7 $$ if (bbCodeItem != null) -->Line_8 $$ String value = bbCodeItem.getValue()[ CD ]
Line_27 $$ if (data.length() > 0) -->Line_28 $$ data = StringUtil.replace(data, StringPool.RETURN_NEW_LINE, "<br />")[ CD ]
Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_19 $$ if ((bbCodeItem != null) && (bbCodeItem.getType() == BBCodeParser.TYPE_TAG_END)) [ FD ]
Line_3 $$ BBCodeItem bbCodeItem = null-->Line_19 $$ if ((bbCodeItem != null) && (bbCodeItem.getType() == BBCodeParser.TYPE_TAG_END)) [ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_27 $$ if (data.length() > 0) [ FD ]
Line_22 $$ data = data.substring(0, data.length() - 1)-->Line_29 $$ data = StringUtil.replace(data, StringPool.NEW_LINE, "<br />")[ FD ]
Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_7 $$ if (bbCodeItem != null) [ FD ]
Line_9 $$ if (_excludeNewLineTypes.containsKey(value)) -->Line_10 $$ int type = bbCodeItem.getType()[ CD ]
Line_3 $$ BBCodeItem bbCodeItem = null-->Line_20 $$ String value = bbCodeItem.getValue()[ FD ]
Line_7 $$ if (bbCodeItem != null) -->Line_9 $$ if (_excludeNewLineTypes.containsKey(value)) [ CD ]
Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_8 $$ String value = bbCodeItem.getValue()[ FD ]
Line_28 $$ data = StringUtil.replace(data, StringPool.RETURN_NEW_LINE, "<br />")-->Line_29 $$ data = StringUtil.replace(data, StringPool.NEW_LINE, "<br />")[ FD ]
Line_13 $$ data = StringPool.BLANK-->Line_29 $$ data = StringUtil.replace(data, StringPool.NEW_LINE, "<br />")[ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_17 $$ if (data.matches("(?s).*\r?\n\\z")) [ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_3 $$ BBCodeItem bbCodeItem = null[ CD ]
Line_3 $$ BBCodeItem bbCodeItem = null-->Line_7 $$ if (bbCodeItem != null) [ FD ]
Line_19 $$ if ((bbCodeItem != null) && (bbCodeItem.getType() == BBCodeParser.TYPE_TAG_END)) -->Line_21 $$ if (value.equals("*")) [ CD ]
Line_17 $$ if (data.matches("(?s).*\r?\n\\z")) -->Line_18 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)[ CD ]
Line_13 $$ data = StringPool.BLANK-->Line_17 $$ if (data.matches("(?s).*\r?\n\\z")) [ FD ]
Line_13 $$ data = StringPool.BLANK-->Line_27 $$ if (data.length() > 0) [ FD ]
Line_21 $$ if (value.equals("*")) -->Line_22 $$ data = data.substring(0, data.length() - 1)[ CD ]
Line_9 $$ if (_excludeNewLineTypes.containsKey(value)) -->Line_11 $$ int excludeNewLineType = _excludeNewLineTypes.get(value)[ CD ]
Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_18 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)[ FD ]
Line_18 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)-->Line_20 $$ String value = bbCodeItem.getValue()[ FD ]
Line_3 $$ BBCodeItem bbCodeItem = null-->Line_10 $$ int type = bbCodeItem.getType()[ FD ]
Line_8 $$ String value = bbCodeItem.getValue()-->Line_9 $$ if (_excludeNewLineTypes.containsKey(value)) [ FD ]
Line_3 $$ BBCodeItem bbCodeItem = null-->Line_6 $$ bbCodeItem = bbCodeItems.get(marker.getValue() + 1)[ FD ]
Line_2 $$ protected String handleNewLine(List<BBCodeItem> bbCodeItems, Stack<String> tags, IntegerWrapper marker, String data) -->Line_28 $$ data = StringUtil.replace(data, StringPool.RETURN_NEW_LINE, "<br />")[ FD ]
