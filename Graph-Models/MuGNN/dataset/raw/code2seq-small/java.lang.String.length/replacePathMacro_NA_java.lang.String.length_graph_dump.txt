Line_6 $$ boolean startsWith = caseSensitive ? text.startsWith(path) : StringUtil.startsWithIgnoreCase(text, path)-->Line_7 $$ if (!startsWith)[ FD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_6 $$ boolean startsWith = caseSensitive ? text.startsWith(path) : StringUtil.startsWithIgnoreCase(text, path)[ CD ]
Line_9 $$ int endOfOccurrence = path.length()-->Line_11 $$ if (!isWindowsRoot && endOfOccurrence < text.length() && text.charAt(endOfOccurrence) != '/' && !text.substring(endOfOccurrence).startsWith("!/")) [ FD ]
Line_11 $$ if (!isWindowsRoot && endOfOccurrence < text.length() && text.charAt(endOfOccurrence) != '/' && !text.substring(endOfOccurrence).startsWith("!/")) -->Line_12 $$ return text[ CD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_7 $$ if (!startsWith)[ FD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_14 $$ return myMacroMap.get(path) + text.substring(endOfOccurrence)[ FD ]
Line_7 $$ if (!startsWith)-->Line_8 $$ return text[ CD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_9 $$ int endOfOccurrence = path.length()[ CD ]
Line_3 $$ if (text.length() < path.length() || path.isEmpty()) -->Line_4 $$ return text[ CD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_10 $$ final boolean isWindowsRoot = path.endsWith(":/")[ CD ]
Line_10 $$ final boolean isWindowsRoot = path.endsWith(":/")-->Line_11 $$ if (!isWindowsRoot && endOfOccurrence < text.length() && text.charAt(endOfOccurrence) != '/' && !text.substring(endOfOccurrence).startsWith("!/")) [ FD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_7 $$ if (!startsWith)[ CD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_3 $$ if (text.length() < path.length() || path.isEmpty()) [ CD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_14 $$ return myMacroMap.get(path) + text.substring(endOfOccurrence)[ CD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_11 $$ if (!isWindowsRoot && endOfOccurrence < text.length() && text.charAt(endOfOccurrence) != '/' && !text.substring(endOfOccurrence).startsWith("!/")) [ CD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_6 $$ boolean startsWith = caseSensitive ? text.startsWith(path) : StringUtil.startsWithIgnoreCase(text, path)[ FD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_11 $$ if (!isWindowsRoot && endOfOccurrence < text.length() && text.charAt(endOfOccurrence) != '/' && !text.substring(endOfOccurrence).startsWith("!/")) [ FD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_9 $$ int endOfOccurrence = path.length()[ FD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_10 $$ final boolean isWindowsRoot = path.endsWith(":/")[ FD ]
Line_2 $$ private String replacePathMacro(@NotNull String text, @NotNull final String path, boolean caseSensitive) -->Line_3 $$ if (text.length() < path.length() || path.isEmpty()) [ FD ]
Line_9 $$ int endOfOccurrence = path.length()-->Line_14 $$ return myMacroMap.get(path) + text.substring(endOfOccurrence)[ FD ]
