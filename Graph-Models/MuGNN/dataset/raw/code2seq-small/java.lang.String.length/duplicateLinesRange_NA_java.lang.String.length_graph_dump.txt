Line_9 $$ int end = editor.logicalPositionToOffset(nextLineStart)-->Line_13 $$ String s = document.getCharsSequence().subSequence(start, end).toString()[ FD ]
Line_8 $$ int start = editor.logicalPositionToOffset(lineStart)-->Line_13 $$ String s = document.getCharsSequence().subSequence(start, end).toString()[ FD ]
Line_10 $$ if (end <= start) -->Line_11 $$ return null[ CD ]
Line_6 $$ LogicalPosition lineStart = lines.first-->Line_8 $$ int start = editor.logicalPositionToOffset(lineStart)[ FD ]
Line_8 $$ int start = editor.logicalPositionToOffset(lineStart)-->Line_10 $$ if (end <= start) [ FD ]
Line_13 $$ String s = document.getCharsSequence().subSequence(start, end).toString()-->Line_19 $$ s = "\n" + s[ FD ]
Line_15 $$ int newOffset = end + offset - start-->Line_20 $$ newOffset++[ FD ]
Line_15 $$ int newOffset = end + offset - start-->Line_23 $$ editor.getCaretModel().moveToOffset(newOffset)[ FD ]
Line_9 $$ int end = editor.logicalPositionToOffset(nextLineStart)-->Line_10 $$ if (end <= start) [ FD ]
Line_13 $$ String s = document.getCharsSequence().subSequence(start, end).toString()-->Line_25 $$ return Couple.of(end, end + s.length())[ FD ]
Line_9 $$ int end = editor.logicalPositionToOffset(nextLineStart)-->Line_22 $$ document.insertString(end, s)[ FD ]
Line_7 $$ LogicalPosition nextLineStart = lines.second-->Line_9 $$ int end = editor.logicalPositionToOffset(nextLineStart)[ FD ]
Line_19 $$ s = "\n" + s-->Line_22 $$ document.insertString(end, s)[ FD ]
Line_19 $$ s = "\n" + s-->Line_25 $$ return Couple.of(end, end + s.length())[ FD ]
Line_9 $$ int end = editor.logicalPositionToOffset(nextLineStart)-->Line_25 $$ return Couple.of(end, end + s.length())[ FD ]
Line_13 $$ String s = document.getCharsSequence().subSequence(start, end).toString()-->Line_22 $$ document.insertString(end, s)[ FD ]
