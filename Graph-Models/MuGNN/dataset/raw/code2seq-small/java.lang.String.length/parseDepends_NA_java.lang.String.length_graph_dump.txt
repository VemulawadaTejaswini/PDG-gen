Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_4 $$ final int count = reader.getAttributeCount()[ FD ]
Line_22 $$ String dependency = parseTextElement(reader)-->Line_23 $$ if (dependency == null || dependency.trim().length() == 0)[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_25 $$ dependsConfig.setDependency(dependency)[ CD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_5 $$ for (int i = 0; i < count; i++) [ CD ]
Line_7 $$ final String attributeValue = reader.getAttributeValue(i)-->Line_16 $$ dependsConfig.setService(Boolean.parseBoolean(attributeValue))[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_3 $$ final DependsConfig dependsConfig = new DependsConfig()[ CD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_7 $$ final String attributeValue = reader.getAttributeValue(i)[ FD ]
Line_7 $$ final String attributeValue = reader.getAttributeValue(i)-->Line_13 $$ dependsConfig.setDependencyState(BeanState.valueOf(attributeValue.toUpperCase(Locale.ENGLISH)))[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_22 $$ String dependency = parseTextElement(reader)[ FD ]
Line_7 $$ final String attributeValue = reader.getAttributeValue(i)-->Line_10 $$ dependsConfig.setWhenRequired(BeanState.valueOf(attributeValue.toUpperCase(Locale.ENGLISH)))[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_22 $$ String dependency = parseTextElement(reader)[ CD ]
Line_3 $$ final DependsConfig dependsConfig = new DependsConfig()-->Line_13 $$ dependsConfig.setDependencyState(BeanState.valueOf(attributeValue.toUpperCase(Locale.ENGLISH)))[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_26 $$ return dependsConfig[ CD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_6 $$ final Attribute attribute = Attribute.of(reader.getAttributeLocalName(i))[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_4 $$ final int count = reader.getAttributeCount()[ CD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_23 $$ if (dependency == null || dependency.trim().length() == 0)[ CD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_7 $$ final String attributeValue = reader.getAttributeValue(i)[ CD ]
Line_3 $$ final DependsConfig dependsConfig = new DependsConfig()-->Line_16 $$ dependsConfig.setService(Boolean.parseBoolean(attributeValue))[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_19 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_4 $$ final int count = reader.getAttributeCount()-->Line_5 $$ for (int i = 0; i < count; i++) [ FD ]
Line_22 $$ String dependency = parseTextElement(reader)-->Line_25 $$ dependsConfig.setDependency(dependency)[ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_7 $$ final String attributeValue = reader.getAttributeValue(i)[ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_6 $$ final Attribute attribute = Attribute.of(reader.getAttributeLocalName(i))[ CD ]
Line_3 $$ final DependsConfig dependsConfig = new DependsConfig()-->Line_10 $$ dependsConfig.setWhenRequired(BeanState.valueOf(attributeValue.toUpperCase(Locale.ENGLISH)))[ FD ]
Line_3 $$ final DependsConfig dependsConfig = new DependsConfig()-->Line_25 $$ dependsConfig.setDependency(dependency)[ FD ]
Line_5 $$ for (int i = 0; i < count; i++) -->Line_19 $$ throw unexpectedAttribute(reader, i)[ FD ]
Line_2 $$ private DependsConfig parseDepends(final XMLExtendedStreamReader reader) throws XMLStreamException -->Line_6 $$ final Attribute attribute = Attribute.of(reader.getAttributeLocalName(i))[ FD ]
