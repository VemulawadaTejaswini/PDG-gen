Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_80 $$ pluginPackage.setTags(tags)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_82 $$ pluginPackage.setLongDescription(longDescription)[ CD ]
Line_11 $$ pluginType = Plugin.TYPE_HOOK-->Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_25 $$ if (pos == -1) [ CD ]
Line_31 $$ String moduleVersion = GetterUtil.getString(properties.getProperty("module-version"))-->Line_32 $$ if (Validator.isNull(moduleVersion)) [ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_84 $$ pluginPackage.setPageURL(pageURL)[ FD ]
Line_32 $$ if (Validator.isNull(moduleVersion)) -->Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2[ CD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_9 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_9 $$ if (pos == -1) [ CD ]
Line_14 $$ pos = displayName.indexOf("-layouttpl")-->Line_21 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_77 $$ pluginPackage.setTypes(types)[ CD ]
Line_7 $$ pluginType = Plugin.TYPE_EXT-->Line_23 $$ pluginType = Plugin.TYPE_WEB[ FD ]
Line_41 $$ String pluginName = GetterUtil.getString(properties.getProperty("name"))-->Line_74 $$ pluginPackage.setName(pluginName)[ FD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_21 $$ if (pos == -1) [ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_22 $$ pos = displayName.indexOf("-web")[ FD ]
Line_56 $$ for (String liferayVersion : liferayVersionsArray) -->Line_57 $$ liferayVersions.add(liferayVersion.trim())[ FD ]
Line_32 $$ if (Validator.isNull(moduleVersion)) -->Line_34 $$ if (displayName.length() > moduleVersionPos) [ CD ]
Line_9 $$ if (pos == -1) -->Line_10 $$ pos = displayName.indexOf("-hook")[ CD ]
Line_4 $$ String pluginType = Plugin.TYPE_PORTLET-->Line_19 $$ pluginType = Plugin.TYPE_THEME[ FD ]
Line_4 $$ String pluginType = Plugin.TYPE_PORTLET-->Line_23 $$ pluginType = Plugin.TYPE_WEB[ FD ]
Line_17 $$ if (pos == -1) -->Line_18 $$ pos = displayName.indexOf("-theme")[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_5 $$ if (pos == -1) [ CD ]
Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE-->Line_19 $$ pluginType = Plugin.TYPE_THEME[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_72 $$ List<String> requiredDeploymentContexts = ListUtil.fromArray(StringUtil.split(properties.getProperty("required-deployment-contexts")))[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ FD ]
Line_4 $$ String pluginType = Plugin.TYPE_PORTLET-->Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_42 $$ String deploymentContext = GetterUtil.getString(properties.getProperty("recommended-deployment-context"), moduleArtifactId)[ FD ]
Line_22 $$ pos = displayName.indexOf("-web")-->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_34 $$ if (displayName.length() > moduleVersionPos) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_22 $$ pos = displayName.indexOf("-web")[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_13 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_76 $$ pluginPackage.setAuthor(author)[ CD ]
Line_48 $$ for (int i = 0; i < licensesArray.length; i++) -->Line_52 $$ licenses.add(license)[ CD ]
Line_68 $$ String longDescription = GetterUtil.getString(properties.getProperty("long-description"))-->Line_82 $$ pluginPackage.setLongDescription(longDescription)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_46 $$ List<License> licenses = new ArrayList()[ CD ]
Line_11 $$ pluginType = Plugin.TYPE_HOOK-->Line_45 $$ types.add(pluginType)[ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_79 $$ pluginPackage.setLiferayVersions(liferayVersions)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ CD ]
Line_18 $$ pos = displayName.indexOf("-theme")-->Line_21 $$ if (pos == -1) [ FD ]
Line_14 $$ pos = displayName.indexOf("-layouttpl")-->Line_18 $$ pos = displayName.indexOf("-theme")[ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_85 $$ pluginPackage.setDownloadURL(downloadURL)[ FD ]
Line_62 $$ List<String> tags = new ArrayList()-->Line_65 $$ tags.add(tag.trim())[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_67 $$ String shortDescription = GetterUtil.getString(properties.getProperty("short-description"))[ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_21 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_55 $$ String[] liferayVersionsArray = StringUtil.split(properties.getProperty("liferay-versions"))[ FD ]
Line_23 $$ pluginType = Plugin.TYPE_WEB-->Line_45 $$ types.add(pluginType)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_67 $$ String shortDescription = GetterUtil.getString(properties.getProperty("short-description"))[ CD ]
Line_7 $$ pluginType = Plugin.TYPE_EXT-->Line_11 $$ pluginType = Plugin.TYPE_HOOK[ FD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_18 $$ pos = displayName.indexOf("-theme")[ FD ]
Line_21 $$ if (pos == -1) -->Line_23 $$ pluginType = Plugin.TYPE_WEB[ CD ]
Line_30 $$ String moduleArtifactId = displayPrefix + "-" + pluginType-->Line_42 $$ String deploymentContext = GetterUtil.getString(properties.getProperty("recommended-deployment-context"), moduleArtifactId)[ FD ]
Line_44 $$ List<String> types = new ArrayList()-->Line_77 $$ pluginPackage.setTypes(types)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_70 $$ String pageURL = GetterUtil.getString(properties.getProperty("page-url"))[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_44 $$ List<String> types = new ArrayList()[ CD ]
Line_49 $$ License license = new License()-->Line_51 $$ license.setOsiApproved(true)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_62 $$ List<String> tags = new ArrayList()[ CD ]
Line_4 $$ String pluginType = Plugin.TYPE_PORTLET-->Line_45 $$ types.add(pluginType)[ FD ]
Line_7 $$ pluginType = Plugin.TYPE_EXT-->Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2[ FD ]
Line_11 $$ pluginType = Plugin.TYPE_HOOK-->Line_19 $$ pluginType = Plugin.TYPE_THEME[ FD ]
Line_71 $$ String downloadURL = GetterUtil.getString(properties.getProperty("download-url"))-->Line_85 $$ pluginPackage.setDownloadURL(downloadURL)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_30 $$ String moduleArtifactId = displayPrefix + "-" + pluginType[ CD ]
Line_59 $$ if (liferayVersions.isEmpty()) -->Line_60 $$ liferayVersions.add(ReleaseInfo.getVersion() + "+")[ CD ]
Line_19 $$ pluginType = Plugin.TYPE_THEME-->Line_45 $$ types.add(pluginType)[ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_74 $$ pluginPackage.setName(pluginName)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_41 $$ String pluginName = GetterUtil.getString(properties.getProperty("name"))[ CD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_6 $$ pos = displayName.indexOf("-ext")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_31 $$ String moduleVersion = GetterUtil.getString(properties.getProperty("module-version"))[ FD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_22 $$ pos = displayName.indexOf("-web")[ FD ]
Line_31 $$ String moduleVersion = GetterUtil.getString(properties.getProperty("module-version"))-->Line_37 $$ moduleVersion = ReleaseInfo.getVersion()[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_45 $$ types.add(pluginType)[ CD ]
Line_46 $$ List<License> licenses = new ArrayList()-->Line_52 $$ licenses.add(license)[ FD ]
Line_43 $$ String author = GetterUtil.getString(properties.getProperty("author"))-->Line_76 $$ pluginPackage.setAuthor(author)[ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_82 $$ pluginPackage.setLongDescription(longDescription)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_86 $$ pluginPackage.setRequiredDeploymentContexts(requiredDeploymentContexts)[ CD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_81 $$ pluginPackage.setShortDescription(shortDescription)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_59 $$ if (liferayVersions.isEmpty()) [ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_18 $$ pos = displayName.indexOf("-theme")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_55 $$ String[] liferayVersionsArray = StringUtil.split(properties.getProperty("liferay-versions"))[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_31 $$ String moduleVersion = GetterUtil.getString(properties.getProperty("module-version"))[ CD ]
Line_35 $$ moduleVersion = displayName.substring(moduleVersionPos)-->Line_37 $$ moduleVersion = ReleaseInfo.getVersion()[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_68 $$ String longDescription = GetterUtil.getString(properties.getProperty("long-description"))[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_6 $$ pos = displayName.indexOf("-ext")[ FD ]
Line_9 $$ if (pos == -1) -->Line_11 $$ pluginType = Plugin.TYPE_HOOK[ CD ]
Line_54 $$ List<String> liferayVersions = new ArrayList()-->Line_59 $$ if (liferayVersions.isEmpty()) [ FD ]
Line_5 $$ if (pos == -1) -->Line_7 $$ pluginType = Plugin.TYPE_EXT[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_35 $$ moduleVersion = displayName.substring(moduleVersionPos)[ FD ]
Line_67 $$ String shortDescription = GetterUtil.getString(properties.getProperty("short-description"))-->Line_81 $$ pluginPackage.setShortDescription(shortDescription)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_17 $$ if (pos == -1) [ CD ]
Line_4 $$ String pluginType = Plugin.TYPE_PORTLET-->Line_11 $$ pluginType = Plugin.TYPE_HOOK[ FD ]
Line_7 $$ pluginType = Plugin.TYPE_EXT-->Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_47 $$ String[] licensesArray = StringUtil.split(properties.getProperty("licenses"))[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_54 $$ List<String> liferayVersions = new ArrayList()[ CD ]
Line_14 $$ pos = displayName.indexOf("-layouttpl")-->Line_25 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_41 $$ String pluginName = GetterUtil.getString(properties.getProperty("name"))[ FD ]
Line_14 $$ pos = displayName.indexOf("-layouttpl")-->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ FD ]
Line_54 $$ List<String> liferayVersions = new ArrayList()-->Line_60 $$ liferayVersions.add(ReleaseInfo.getVersion() + "+")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_29 $$ String moduleGroupId = GetterUtil.getString(properties.getProperty("module-group-id"))[ FD ]
Line_7 $$ pluginType = Plugin.TYPE_EXT-->Line_45 $$ types.add(pluginType)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_70 $$ String pageURL = GetterUtil.getString(properties.getProperty("page-url"))[ CD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_80 $$ pluginPackage.setTags(tags)[ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_76 $$ pluginPackage.setAuthor(author)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ FD ]
Line_18 $$ pos = displayName.indexOf("-theme")-->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_3 $$ int pos = displayName.indexOf("-portlet")[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_14 $$ pos = displayName.indexOf("-layouttpl")[ FD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_13 $$ if (pos == -1) [ FD ]
Line_25 $$ if (pos == -1) -->Line_26 $$ return null[ CD ]
Line_17 $$ if (pos == -1) -->Line_19 $$ pluginType = Plugin.TYPE_THEME[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_21 $$ if (pos == -1) [ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_74 $$ pluginPackage.setName(pluginName)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_63 $$ String[] tagsArray = StringUtil.split(properties.getProperty("tags"))[ FD ]
Line_34 $$ if (displayName.length() > moduleVersionPos) -->Line_37 $$ moduleVersion = ReleaseInfo.getVersion()[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_43 $$ String author = GetterUtil.getString(properties.getProperty("author"))[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_21 $$ if (pos == -1) [ FD ]
Line_49 $$ License license = new License()-->Line_50 $$ license.setName(licensesArray[i].trim())[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_87 $$ return pluginPackage[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_69 $$ String changeLog = GetterUtil.getString(properties.getProperty("change-log"))[ CD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_77 $$ pluginPackage.setTypes(types)[ FD ]
Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE-->Line_23 $$ pluginType = Plugin.TYPE_WEB[ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_25 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_4 $$ String pluginType = Plugin.TYPE_PORTLET[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_14 $$ pos = displayName.indexOf("-layouttpl")[ FD ]
Line_14 $$ pos = displayName.indexOf("-layouttpl")-->Line_22 $$ pos = displayName.indexOf("-web")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_48 $$ for (int i = 0; i < licensesArray.length; i++) [ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_68 $$ String longDescription = GetterUtil.getString(properties.getProperty("long-description"))[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_84 $$ pluginPackage.setPageURL(pageURL)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_83 $$ pluginPackage.setChangeLog(changeLog)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_10 $$ pos = displayName.indexOf("-hook")[ FD ]
Line_42 $$ String deploymentContext = GetterUtil.getString(properties.getProperty("recommended-deployment-context"), moduleArtifactId)-->Line_75 $$ pluginPackage.setRecommendedDeploymentContext(deploymentContext)[ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_17 $$ if (pos == -1) [ FD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_17 $$ if (pos == -1) [ FD ]
Line_70 $$ String pageURL = GetterUtil.getString(properties.getProperty("page-url"))-->Line_84 $$ pluginPackage.setPageURL(pageURL)[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_10 $$ pos = displayName.indexOf("-hook")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_69 $$ String changeLog = GetterUtil.getString(properties.getProperty("change-log"))[ FD ]
Line_34 $$ if (displayName.length() > moduleVersionPos) -->Line_35 $$ moduleVersion = displayName.substring(moduleVersionPos)[ CD ]
Line_48 $$ for (int i = 0; i < licensesArray.length; i++) -->Line_51 $$ license.setOsiApproved(true)[ CD ]
Line_11 $$ pluginType = Plugin.TYPE_HOOK-->Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2[ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ FD ]
Line_72 $$ List<String> requiredDeploymentContexts = ListUtil.fromArray(StringUtil.split(properties.getProperty("required-deployment-contexts")))-->Line_86 $$ pluginPackage.setRequiredDeploymentContexts(requiredDeploymentContexts)[ FD ]
Line_22 $$ pos = displayName.indexOf("-web")-->Line_25 $$ if (pos == -1) [ FD ]
Line_19 $$ pluginType = Plugin.TYPE_THEME-->Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_3 $$ int pos = displayName.indexOf("-portlet")[ CD ]
Line_21 $$ if (pos == -1) -->Line_22 $$ pos = displayName.indexOf("-web")[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_47 $$ String[] licensesArray = StringUtil.split(properties.getProperty("licenses"))[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_17 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_75 $$ pluginPackage.setRecommendedDeploymentContext(deploymentContext)[ CD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_14 $$ pos = displayName.indexOf("-layouttpl")[ FD ]
Line_54 $$ List<String> liferayVersions = new ArrayList()-->Line_79 $$ pluginPackage.setLiferayVersions(liferayVersions)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_79 $$ pluginPackage.setLiferayVersions(liferayVersions)[ CD ]
Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2-->Line_34 $$ if (displayName.length() > moduleVersionPos) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_71 $$ String downloadURL = GetterUtil.getString(properties.getProperty("download-url"))[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_78 $$ pluginPackage.setLicenses(licenses)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_42 $$ String deploymentContext = GetterUtil.getString(properties.getProperty("recommended-deployment-context"), moduleArtifactId)[ CD ]
Line_69 $$ String changeLog = GetterUtil.getString(properties.getProperty("change-log"))-->Line_83 $$ pluginPackage.setChangeLog(changeLog)[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_25 $$ if (pos == -1) [ FD ]
Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE-->Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2[ FD ]
Line_49 $$ License license = new License()-->Line_52 $$ licenses.add(license)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_72 $$ List<String> requiredDeploymentContexts = ListUtil.fromArray(StringUtil.split(properties.getProperty("required-deployment-contexts")))[ CD ]
Line_14 $$ pos = displayName.indexOf("-layouttpl")-->Line_17 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_85 $$ pluginPackage.setDownloadURL(downloadURL)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_40 $$ String moduleId = moduleGroupId + "/" + moduleArtifactId + "/" + moduleVersion + "/war"[ CD ]
Line_23 $$ pluginType = Plugin.TYPE_WEB-->Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2[ FD ]
Line_13 $$ if (pos == -1) -->Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE[ CD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_78 $$ pluginPackage.setLicenses(licenses)[ FD ]
Line_18 $$ pos = displayName.indexOf("-theme")-->Line_25 $$ if (pos == -1) [ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_22 $$ pos = displayName.indexOf("-web")[ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_18 $$ pos = displayName.indexOf("-theme")[ FD ]
Line_54 $$ List<String> liferayVersions = new ArrayList()-->Line_57 $$ liferayVersions.add(liferayVersion.trim())[ FD ]
Line_7 $$ pluginType = Plugin.TYPE_EXT-->Line_19 $$ pluginType = Plugin.TYPE_THEME[ FD ]
Line_44 $$ List<String> types = new ArrayList()-->Line_45 $$ types.add(pluginType)[ FD ]
Line_15 $$ pluginType = Plugin.TYPE_LAYOUT_TEMPLATE-->Line_45 $$ types.add(pluginType)[ FD ]
Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2-->Line_35 $$ moduleVersion = displayName.substring(moduleVersionPos)[ FD ]
Line_31 $$ String moduleVersion = GetterUtil.getString(properties.getProperty("module-version"))-->Line_35 $$ moduleVersion = displayName.substring(moduleVersionPos)[ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_5 $$ if (pos == -1) [ FD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_28 $$ String displayPrefix = displayName.substring(0, pos)[ FD ]
Line_5 $$ if (pos == -1) -->Line_6 $$ pos = displayName.indexOf("-ext")[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_71 $$ String downloadURL = GetterUtil.getString(properties.getProperty("download-url"))[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_29 $$ String moduleGroupId = GetterUtil.getString(properties.getProperty("module-group-id"))[ CD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_86 $$ pluginPackage.setRequiredDeploymentContexts(requiredDeploymentContexts)[ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_75 $$ pluginPackage.setRecommendedDeploymentContext(deploymentContext)[ FD ]
Line_73 $$ PluginPackage pluginPackage = new PluginPackageImpl(moduleId)-->Line_83 $$ pluginPackage.setChangeLog(changeLog)[ FD ]
Line_4 $$ String pluginType = Plugin.TYPE_PORTLET-->Line_33 $$ int moduleVersionPos = pos + pluginType.length() + 2[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_13 $$ if (pos == -1) [ CD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_25 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_43 $$ String author = GetterUtil.getString(properties.getProperty("author"))[ CD ]
Line_4 $$ String pluginType = Plugin.TYPE_PORTLET-->Line_7 $$ pluginType = Plugin.TYPE_EXT[ FD ]
Line_18 $$ pos = displayName.indexOf("-theme")-->Line_22 $$ pos = displayName.indexOf("-web")[ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_10 $$ pos = displayName.indexOf("-hook")[ FD ]
Line_64 $$ for (String tag : tagsArray) -->Line_65 $$ tags.add(tag.trim())[ FD ]
Line_48 $$ for (int i = 0; i < licensesArray.length; i++) -->Line_49 $$ License license = new License()[ CD ]
Line_19 $$ pluginType = Plugin.TYPE_THEME-->Line_23 $$ pluginType = Plugin.TYPE_WEB[ FD ]
Line_11 $$ pluginType = Plugin.TYPE_HOOK-->Line_23 $$ pluginType = Plugin.TYPE_WEB[ FD ]
Line_62 $$ List<String> tags = new ArrayList()-->Line_80 $$ pluginPackage.setTags(tags)[ FD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_13 $$ if (pos == -1) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_63 $$ String[] tagsArray = StringUtil.split(properties.getProperty("tags"))[ CD ]
Line_6 $$ pos = displayName.indexOf("-ext")-->Line_9 $$ if (pos == -1) [ FD ]
Line_3 $$ int pos = displayName.indexOf("-portlet")-->Line_18 $$ pos = displayName.indexOf("-theme")[ FD ]
Line_10 $$ pos = displayName.indexOf("-hook")-->Line_14 $$ pos = displayName.indexOf("-layouttpl")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_32 $$ if (Validator.isNull(moduleVersion)) [ CD ]
Line_46 $$ List<License> licenses = new ArrayList()-->Line_78 $$ pluginPackage.setLicenses(licenses)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageProperties(String displayName, Properties properties) -->Line_81 $$ pluginPackage.setShortDescription(shortDescription)[ CD ]
Line_48 $$ for (int i = 0; i < licensesArray.length; i++) -->Line_50 $$ license.setName(licensesArray[i].trim())[ CD ]
Line_13 $$ if (pos == -1) -->Line_14 $$ pos = displayName.indexOf("-layouttpl")[ CD ]
