Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_6 $$ DocumentationUtil.formatEntityName(typeName == null ? XmlBundle.message("xml.javadoc.tag.name.message") : typeName, name, buf)[ CD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_10 $$ builder.append(HtmlDocumentationProvider.BR).append(XmlBundle.message("xml.javadoc.version.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(version)[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(str.length() + 20)-->Line_8 $$ final StringBuilder builder = buf.append(XmlBundle.message("xml.javadoc.description.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(str)[ FD ]
Line_9 $$ if (version != null) -->Line_10 $$ builder.append(HtmlDocumentationProvider.BR).append(XmlBundle.message("xml.javadoc.version.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(version)[ CD ]
Line_8 $$ final StringBuilder builder = buf.append(XmlBundle.message("xml.javadoc.description.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(str)-->Line_12 $$ return builder.toString()[ FD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_3 $$ if (str == null)[ FD ]
Line_3 $$ if (str == null)-->Line_4 $$ return null[ CD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_8 $$ final StringBuilder builder = buf.append(XmlBundle.message("xml.javadoc.description.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(str)[ FD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_5 $$ StringBuilder buf = new StringBuilder(str.length() + 20)[ FD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_9 $$ if (version != null) [ CD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_5 $$ StringBuilder buf = new StringBuilder(str.length() + 20)[ CD ]
Line_8 $$ final StringBuilder builder = buf.append(XmlBundle.message("xml.javadoc.description.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(str)-->Line_10 $$ builder.append(HtmlDocumentationProvider.BR).append(XmlBundle.message("xml.javadoc.version.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(version)[ FD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_6 $$ DocumentationUtil.formatEntityName(typeName == null ? XmlBundle.message("xml.javadoc.tag.name.message") : typeName, name, buf)[ FD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_12 $$ return builder.toString()[ CD ]
Line_7 $$ final String indent = "  "-->Line_10 $$ builder.append(HtmlDocumentationProvider.BR).append(XmlBundle.message("xml.javadoc.version.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(version)[ FD ]
Line_7 $$ final String indent = "  "-->Line_8 $$ final StringBuilder builder = buf.append(XmlBundle.message("xml.javadoc.description.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(str)[ FD ]
Line_5 $$ StringBuilder buf = new StringBuilder(str.length() + 20)-->Line_6 $$ DocumentationUtil.formatEntityName(typeName == null ? XmlBundle.message("xml.javadoc.tag.name.message") : typeName, name, buf)[ FD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_9 $$ if (version != null) [ FD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_8 $$ final StringBuilder builder = buf.append(XmlBundle.message("xml.javadoc.description.message")).append(indent).append(HtmlDocumentationProvider.NBSP).append(str)[ CD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_7 $$ final String indent = "  "[ CD ]
Line_2 $$ protected String generateDoc(String str, String name, String typeName, String version) -->Line_3 $$ if (str == null)[ CD ]
