Line_10 $$ String catchStatusCode-->Line_12 $$ catchStatusCode = catches.get(catchParam).v1()[ FD ]
Line_14 $$ catchStatusCode = "4xx|5xx"-->Line_18 $$ fail(formatStatusCodeMessage(restResponse, catchStatusCode))[ FD ]
Line_13 $$ if (catchParam.startsWith("/") && catchParam.endsWith("/")) -->Line_14 $$ catchStatusCode = "4xx|5xx"[ CD ]
Line_11 $$ if (catches.containsKey(catchParam)) -->Line_13 $$ if (catchParam.startsWith("/") && catchParam.endsWith("/")) [ CD ]
Line_25 $$ if (catchParam.length() > 2 && catchParam.startsWith("/") && catchParam.endsWith("/")) -->Line_30 $$ assertThat("the error message was expected to match the provided regex but didn't", error.toString(), matches(regex))[ CD ]
Line_27 $$ Object error = executionContext.response("error")-->Line_28 $$ assertThat("error was expected in the response", error, notNullValue())[ FD ]
Line_25 $$ if (catchParam.length() > 2 && catchParam.startsWith("/") && catchParam.endsWith("/")) -->Line_27 $$ Object error = executionContext.response("error")[ CD ]
Line_25 $$ if (catchParam.length() > 2 && catchParam.startsWith("/") && catchParam.endsWith("/")) -->Line_29 $$ String regex = catchParam.substring(1, catchParam.length() - 1)[ CD ]
Line_27 $$ Object error = executionContext.response("error")-->Line_30 $$ assertThat("the error message was expected to match the provided regex but didn't", error.toString(), matches(regex))[ FD ]
Line_21 $$ if (!Strings.hasLength(catchParam)) -->Line_23 $$ if (catches.containsKey(catchParam)) [ CD ]
Line_29 $$ String regex = catchParam.substring(1, catchParam.length() - 1)-->Line_30 $$ assertThat("the error message was expected to match the provided regex but didn't", error.toString(), matches(regex))[ FD ]
Line_9 $$ if (Strings.hasLength(catchParam)) -->Line_10 $$ String catchStatusCode[ CD ]
Line_23 $$ if (catches.containsKey(catchParam)) -->Line_24 $$ assertStatusCode(e.restResponse())[ CD ]
Line_12 $$ catchStatusCode = catches.get(catchParam).v1()-->Line_18 $$ fail(formatStatusCodeMessage(restResponse, catchStatusCode))[ FD ]
Line_10 $$ String catchStatusCode-->Line_14 $$ catchStatusCode = "4xx|5xx"[ FD ]
Line_10 $$ String catchStatusCode-->Line_18 $$ fail(formatStatusCodeMessage(restResponse, catchStatusCode))[ FD ]
Line_21 $$ if (!Strings.hasLength(catchParam)) -->Line_22 $$ fail(formatStatusCodeMessage(e.restResponse(), "2xx"))[ CD ]
Line_25 $$ if (catchParam.length() > 2 && catchParam.startsWith("/") && catchParam.endsWith("/")) -->Line_28 $$ assertThat("error was expected in the response", error, notNullValue())[ CD ]
Line_9 $$ if (Strings.hasLength(catchParam)) -->Line_11 $$ if (catches.containsKey(catchParam)) [ CD ]
Line_8 $$ RestResponse restResponse = executionContext.callApi(apiCallSection.getApi(), apiCallSection.getParams(), apiCallSection.getBodies(), apiCallSection.getHeaders())-->Line_18 $$ fail(formatStatusCodeMessage(restResponse, catchStatusCode))[ FD ]
Line_23 $$ if (catches.containsKey(catchParam)) -->Line_25 $$ if (catchParam.length() > 2 && catchParam.startsWith("/") && catchParam.endsWith("/")) [ CD ]
Line_3 $$ if ("param".equals(catchParam)) -->Line_5 $$ return[ CD ]
Line_3 $$ if ("param".equals(catchParam)) -->Line_4 $$ logger.info("found [catch: param], no request sent")[ CD ]
Line_25 $$ if (catchParam.length() > 2 && catchParam.startsWith("/") && catchParam.endsWith("/")) -->Line_26 $$ assertThat(formatStatusCodeMessage(e.restResponse(), "4xx|5xx"), e.statusCode(), greaterThanOrEqualTo(400))[ CD ]
Line_12 $$ catchStatusCode = catches.get(catchParam).v1()-->Line_14 $$ catchStatusCode = "4xx|5xx"[ FD ]
Line_2 $$ public void execute(RestTestExecutionContext executionContext) throws IOException -->Line_8 $$ RestResponse restResponse = executionContext.callApi(apiCallSection.getApi(), apiCallSection.getParams(), apiCallSection.getBodies(), apiCallSection.getHeaders())[ FD ]
Line_2 $$ public void execute(RestTestExecutionContext executionContext) throws IOException -->Line_27 $$ Object error = executionContext.response("error")[ FD ]
Line_2 $$ public void execute(RestTestExecutionContext executionContext) throws IOException -->Line_3 $$ if ("param".equals(catchParam)) [ CD ]
Line_11 $$ if (catches.containsKey(catchParam)) -->Line_12 $$ catchStatusCode = catches.get(catchParam).v1()[ CD ]
Line_9 $$ if (Strings.hasLength(catchParam)) -->Line_18 $$ fail(formatStatusCodeMessage(restResponse, catchStatusCode))[ CD ]
