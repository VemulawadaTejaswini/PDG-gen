Line_9 $$ if (mappingEnd < 0) -->Line_13 $$ myPos = myLiteral.length()[ CD ]
Line_7 $$ if (isAt('(')) -->Line_8 $$ int mappingEnd = myLiteral.indexOf(')', myPos + 1)[ CD ]
Line_2 $$ private void parseSubstitution() -->Line_29 $$ if (isAtSet(VALID_CONVERSION_TYPES)) [ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_12 $$ chunk.setUnclosedMapping(true)[ FD ]
Line_2 $$ private void parseSubstitution() -->Line_20 $$ chunk.setWidth(parseWidth())[ CD ]
Line_2 $$ private void parseSubstitution() -->Line_5 $$ myResult.add(chunk)[ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_23 $$ chunk.setPrecision(parseWidth())[ FD ]
Line_21 $$ if (isAt('.')) -->Line_23 $$ chunk.setPrecision(parseWidth())[ CD ]
Line_8 $$ int mappingEnd = myLiteral.indexOf(')', myPos + 1)-->Line_16 $$ chunk.setMappingKey(myLiteral.substring(myPos + 1, mappingEnd))[ FD ]
Line_2 $$ private void parseSubstitution() -->Line_19 $$ chunk.setConversionFlags(parseWhileCharacterInSet(CONVERSION_FLAGS))[ CD ]
Line_25 $$ if (isAtSet(LENGTH_MODIFIERS)) -->Line_26 $$ chunk.setLengthModifier(myLiteral.charAt(myPos))[ CD ]
Line_2 $$ private void parseSubstitution() -->Line_33 $$ chunk.setEndIndex(myPos)[ CD ]
Line_8 $$ int mappingEnd = myLiteral.indexOf(')', myPos + 1)-->Line_9 $$ if (mappingEnd < 0) [ FD ]
Line_7 $$ if (isAt('(')) -->Line_16 $$ chunk.setMappingKey(myLiteral.substring(myPos + 1, mappingEnd))[ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_20 $$ chunk.setWidth(parseWidth())[ FD ]
Line_9 $$ if (mappingEnd < 0) -->Line_12 $$ chunk.setUnclosedMapping(true)[ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_5 $$ myResult.add(chunk)[ FD ]
Line_2 $$ private void parseSubstitution() -->Line_7 $$ if (isAt('(')) [ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_26 $$ chunk.setLengthModifier(myLiteral.charAt(myPos))[ FD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_30 $$ chunk.setConversionType(myLiteral.charAt(myPos))[ FD ]
Line_2 $$ private void parseSubstitution() -->Line_21 $$ if (isAt('.')) [ CD ]
Line_9 $$ if (mappingEnd < 0) -->Line_11 $$ chunk.setMappingKey(myLiteral.substring(myPos + 1))[ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_19 $$ chunk.setConversionFlags(parseWhileCharacterInSet(CONVERSION_FLAGS))[ FD ]
Line_2 $$ private void parseSubstitution() -->Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)[ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_11 $$ chunk.setMappingKey(myLiteral.substring(myPos + 1))[ FD ]
Line_29 $$ if (isAtSet(VALID_CONVERSION_TYPES)) -->Line_30 $$ chunk.setConversionType(myLiteral.charAt(myPos))[ CD ]
Line_9 $$ if (mappingEnd < 0) -->Line_14 $$ return[ CD ]
Line_9 $$ if (mappingEnd < 0) -->Line_10 $$ chunk.setEndIndex(myLiteral.length())[ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_16 $$ chunk.setMappingKey(myLiteral.substring(myPos + 1, mappingEnd))[ FD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_33 $$ chunk.setEndIndex(myPos)[ FD ]
Line_2 $$ private void parseSubstitution() -->Line_25 $$ if (isAtSet(LENGTH_MODIFIERS)) [ CD ]
Line_4 $$ SubstitutionChunk chunk = new SubstitutionChunk(myPos)-->Line_10 $$ chunk.setEndIndex(myLiteral.length())[ FD ]
Line_7 $$ if (isAt('(')) -->Line_9 $$ if (mappingEnd < 0) [ CD ]
