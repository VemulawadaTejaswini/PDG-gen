Line_11 $$ rowsPerSecond = formatCountRate(0, new Duration(0, SECONDS), false)-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_10 $$ bytesPerSecond = formatDataRate(new DataSize(0, BYTE), new Duration(0, SECONDS), false)-->Line_13 $$ bytesPerSecond = formatDataRate(bytes(stage.getProcessedBytes()), elapsedTime, false)[ FD ]
Line_9 $$ if (stage.isDone()) -->Line_10 $$ bytesPerSecond = formatDataRate(new DataSize(0, BYTE), new Duration(0, SECONDS), false)[ CD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_4 $$ String id = String.valueOf(stageNumberCounter.getAndIncrement())[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_3 $$ Duration elapsedTime = nanosSince(start)[ CD ]
Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())-->Line_17 $$ reprintLine(stageSummary)[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_9 $$ if (stage.isDone()) [ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_14 $$ rowsPerSecond = formatCountRate(stage.getProcessedRows(), elapsedTime, false)[ FD ]
Line_11 $$ rowsPerSecond = formatCountRate(0, new Duration(0, SECONDS), false)-->Line_14 $$ rowsPerSecond = formatCountRate(stage.getProcessedRows(), elapsedTime, false)[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_18 $$ for (StageStats subStage : stage.getSubStages()) [ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_13 $$ bytesPerSecond = formatDataRate(bytes(stage.getProcessedBytes()), elapsedTime, false)[ FD ]
Line_7 $$ String bytesPerSecond-->Line_10 $$ bytesPerSecond = formatDataRate(new DataSize(0, BYTE), new Duration(0, SECONDS), false)[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_9 $$ if (stage.isDone()) [ CD ]
Line_8 $$ String rowsPerSecond-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_7 $$ String bytesPerSecond-->Line_13 $$ bytesPerSecond = formatDataRate(bytes(stage.getProcessedBytes()), elapsedTime, false)[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_17 $$ reprintLine(stageSummary)[ CD ]
Line_9 $$ if (stage.isDone()) -->Line_13 $$ bytesPerSecond = formatDataRate(bytes(stage.getProcessedBytes()), elapsedTime, false)[ CD ]
Line_8 $$ String rowsPerSecond-->Line_11 $$ rowsPerSecond = formatCountRate(0, new Duration(0, SECONDS), false)[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_19 $$ printStageTree(subStage, indent + "  ", stageNumberCounter)[ FD ]
Line_7 $$ String bytesPerSecond-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_5 $$ String name = indent + id-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_13 $$ bytesPerSecond = formatDataRate(bytes(stage.getProcessedBytes()), elapsedTime, false)-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_5 $$ String name = indent + id[ CD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_4 $$ String id = String.valueOf(stageNumberCounter.getAndIncrement())[ CD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_6 $$ name += Strings.repeat(".", max(0, 10 - name.length()))[ CD ]
Line_8 $$ String rowsPerSecond-->Line_14 $$ rowsPerSecond = formatCountRate(stage.getProcessedRows(), elapsedTime, false)[ FD ]
Line_9 $$ if (stage.isDone()) -->Line_11 $$ rowsPerSecond = formatCountRate(0, new Duration(0, SECONDS), false)[ CD ]
Line_18 $$ for (StageStats subStage : stage.getSubStages()) -->Line_19 $$ printStageTree(subStage, indent + "  ", stageNumberCounter)[ FD ]
Line_3 $$ Duration elapsedTime = nanosSince(start)-->Line_13 $$ bytesPerSecond = formatDataRate(bytes(stage.getProcessedBytes()), elapsedTime, false)[ FD ]
Line_10 $$ bytesPerSecond = formatDataRate(new DataSize(0, BYTE), new Duration(0, SECONDS), false)-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_7 $$ String bytesPerSecond[ CD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_8 $$ String rowsPerSecond[ CD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_5 $$ String name = indent + id-->Line_6 $$ name += Strings.repeat(".", max(0, 10 - name.length()))[ FD ]
Line_14 $$ rowsPerSecond = formatCountRate(stage.getProcessedRows(), elapsedTime, false)-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_6 $$ name += Strings.repeat(".", max(0, 10 - name.length()))-->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ FD ]
Line_9 $$ if (stage.isDone()) -->Line_14 $$ rowsPerSecond = formatCountRate(stage.getProcessedRows(), elapsedTime, false)[ CD ]
Line_2 $$ private void printStageTree(StageStats stage, String indent, AtomicInteger stageNumberCounter) -->Line_16 $$ String stageSummary = String.format("%10s%1s  %5s  %6s  %5s  %7s  %6s  %5s  %5s", name, stageStateCharacter(stage.getState()), formatCount(stage.getProcessedRows()), rowsPerSecond, formatDataSize(bytes(stage.getProcessedBytes()), false), bytesPerSecond, stage.getQueuedSplits(), stage.getRunningSplits(), stage.getCompletedSplits())[ CD ]
Line_3 $$ Duration elapsedTime = nanosSince(start)-->Line_14 $$ rowsPerSecond = formatCountRate(stage.getProcessedRows(), elapsedTime, false)[ FD ]
