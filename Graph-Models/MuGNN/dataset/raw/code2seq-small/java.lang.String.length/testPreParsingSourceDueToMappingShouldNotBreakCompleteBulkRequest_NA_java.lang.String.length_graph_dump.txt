Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_10 $$ assertExists(get("test", "type", "2"))[ CD ]
Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_9 $$ assertThat(bulkResponse.getItems()[1].isFailed(), is(false))[ CD ]
Line_6 $$ BulkResponse bulkResponse = client().prepareBulk().add(brokenBuildRequestData.getBytes(StandardCharsets.UTF_8), 0, brokenBuildRequestData.length(), "test", "type").setRefresh(true).get()-->Line_9 $$ assertThat(bulkResponse.getItems()[1].isFailed(), is(false))[ FD ]
Line_6 $$ BulkResponse bulkResponse = client().prepareBulk().add(brokenBuildRequestData.getBytes(StandardCharsets.UTF_8), 0, brokenBuildRequestData.length(), "test", "type").setRefresh(true).get()-->Line_8 $$ assertThat(bulkResponse.getItems()[0].isFailed(), is(true))[ FD ]
Line_3 $$ XContentBuilder builder = jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("enabled", true).field("path", "last_modified").endObject().endObject().endObject()-->Line_4 $$ assertAcked(prepareCreate("test").addMapping("type", builder).setSettings(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2_ID))[ FD ]
Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_4 $$ assertAcked(prepareCreate("test").addMapping("type", builder).setSettings(IndexMetaData.SETTING_VERSION_CREATED, Version.V_1_4_2_ID))[ CD ]
Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_3 $$ XContentBuilder builder = jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("enabled", true).field("path", "last_modified").endObject().endObject().endObject()[ CD ]
Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_6 $$ BulkResponse bulkResponse = client().prepareBulk().add(brokenBuildRequestData.getBytes(StandardCharsets.UTF_8), 0, brokenBuildRequestData.length(), "test", "type").setRefresh(true).get()[ CD ]
Line_5 $$ String brokenBuildRequestData = "-->Line_6 $$ BulkResponse bulkResponse = client().prepareBulk().add(brokenBuildRequestData.getBytes(StandardCharsets.UTF_8), 0, brokenBuildRequestData.length(), "test", "type").setRefresh(true).get()[ FD ]
Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_5 $$ String brokenBuildRequestData = "[ CD ]
Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_7 $$ assertThat(bulkResponse.getItems().length, is(2))[ CD ]
Line_2 $$ public void testPreParsingSourceDueToMappingShouldNotBreakCompleteBulkRequest() throws Exception -->Line_8 $$ assertThat(bulkResponse.getItems()[0].isFailed(), is(true))[ CD ]
Line_6 $$ BulkResponse bulkResponse = client().prepareBulk().add(brokenBuildRequestData.getBytes(StandardCharsets.UTF_8), 0, brokenBuildRequestData.length(), "test", "type").setRefresh(true).get()-->Line_7 $$ assertThat(bulkResponse.getItems().length, is(2))[ FD ]
