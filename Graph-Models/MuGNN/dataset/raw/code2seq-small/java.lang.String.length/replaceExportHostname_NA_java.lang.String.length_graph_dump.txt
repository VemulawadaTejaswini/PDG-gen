Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_7 $$ int serverPort = PortalUtil.getPortalServerPort(secure)[ CD ]
Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)-->Line_53 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_43 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_19 $$ urlSB.append(DATA_HANDLER_PUBLIC_LAYOUT_SET_SECURE_URL)[ FD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_54 $$ return url.substring(portalUrl.length())[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_30 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_23 $$ return url.substring(portalUrl.length())[ FD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_36 $$ return url.substring(portalUrl.length())[ FD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_43 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_6 $$ boolean secure = HttpUtil.isSecure(url)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_11 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)[ FD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_3 $$ if (!HttpUtil.hasProtocol(url)) [ CD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_30 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_6 $$ boolean secure = HttpUtil.isSecure(url)[ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_49 $$ return url.substring(portalUrl.length())[ FD ]
Line_7 $$ int serverPort = PortalUtil.getPortalServerPort(secure)-->Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_6 $$ boolean secure = HttpUtil.isSecure(url)-->Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)-->Line_43 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_13 $$ String publicLayoutSetVirtualHostname = publicLayoutSet.getVirtualHostname()-->Line_15 $$ if (Validator.isNotNull(publicLayoutSetVirtualHostname)) [ FD ]
Line_7 $$ int serverPort = PortalUtil.getPortalServerPort(secure)-->Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_21 $$ urlSB.append(DATA_HANDLER_PUBLIC_LAYOUT_SET_URL)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_27 $$ String privateLayoutSetVirtualHostname = privateLayoutSet.getVirtualHostname()[ CD ]
Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)-->Line_54 $$ return url.substring(portalUrl.length())[ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_36 $$ return url.substring(portalUrl.length())[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_3 $$ if (!HttpUtil.hasProtocol(url)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_53 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_15 $$ if (Validator.isNotNull(publicLayoutSetVirtualHostname)) [ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_41 $$ if (Validator.isNotNull(companyVirtualHostname)) [ CD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_17 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_17 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_49 $$ return url.substring(portalUrl.length())[ FD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_43 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_44 $$ if (secure) -->Line_45 $$ urlSB.append(DATA_HANDLER_COMPANY_SECURE_URL)[ CD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_53 $$ if (url.startsWith(portalUrl)) -->Line_54 $$ return url.substring(portalUrl.length())[ CD ]
Line_12 $$ LayoutSet publicLayoutSet = group.getPublicLayoutSet()-->Line_13 $$ String publicLayoutSetVirtualHostname = publicLayoutSet.getVirtualHostname()[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_47 $$ urlSB.append(DATA_HANDLER_COMPANY_URL)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)[ CD ]
Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)-->Line_53 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_17 $$ if (url.startsWith(portalUrl)) -->Line_18 $$ if (secure) [ CD ]
Line_30 $$ if (url.startsWith(portalUrl)) -->Line_31 $$ if (secure) [ CD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_54 $$ return url.substring(portalUrl.length())[ FD ]
Line_11 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)-->Line_26 $$ LayoutSet privateLayoutSet = group.getPrivateLayoutSet()[ FD ]
Line_31 $$ if (secure) -->Line_34 $$ urlSB.append(DATA_HANDLER_PRIVATE_LAYOUT_SET_URL)[ CD ]
Line_27 $$ String privateLayoutSetVirtualHostname = privateLayoutSet.getVirtualHostname()-->Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_6 $$ boolean secure = HttpUtil.isSecure(url)-->Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_13 $$ String publicLayoutSetVirtualHostname = publicLayoutSet.getVirtualHostname()[ CD ]
Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)-->Line_54 $$ return url.substring(portalUrl.length())[ FD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_53 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)[ FD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_49 $$ return url.substring(portalUrl.length())[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_8 $$ if (serverPort == -1) [ CD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)[ FD ]
Line_28 $$ if (Validator.isNotNull(privateLayoutSetVirtualHostname)) -->Line_30 $$ if (url.startsWith(portalUrl)) [ CD ]
Line_39 $$ Company company = CompanyLocalServiceUtil.getCompany(group.getCompanyId())-->Line_40 $$ String companyVirtualHostname = company.getVirtualHostname()[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_53 $$ if (url.startsWith(portalUrl)) [ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_14 $$ String portalUrl = StringPool.BLANK[ CD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_28 $$ if (Validator.isNotNull(privateLayoutSetVirtualHostname)) -->Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)[ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_12 $$ LayoutSet publicLayoutSet = group.getPublicLayoutSet()[ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_11 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)[ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_54 $$ return url.substring(portalUrl.length())[ FD ]
Line_41 $$ if (Validator.isNotNull(companyVirtualHostname)) -->Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)[ CD ]
Line_41 $$ if (Validator.isNotNull(companyVirtualHostname)) -->Line_43 $$ if (url.startsWith(portalUrl)) [ CD ]
Line_31 $$ if (secure) -->Line_32 $$ urlSB.append(DATA_HANDLER_PRIVATE_LAYOUT_SET_SECURE_URL)[ CD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_49 $$ return url.substring(portalUrl.length())[ FD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_53 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_11 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)-->Line_39 $$ Company company = CompanyLocalServiceUtil.getCompany(group.getCompanyId())[ FD ]
Line_43 $$ if (url.startsWith(portalUrl)) -->Line_44 $$ if (secure) [ CD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_43 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_30 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_53 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_15 $$ if (Validator.isNotNull(publicLayoutSetVirtualHostname)) -->Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)[ CD ]
Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)-->Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)[ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_30 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_6 $$ boolean secure = HttpUtil.isSecure(url)-->Line_7 $$ int serverPort = PortalUtil.getPortalServerPort(secure)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_17 $$ if (url.startsWith(portalUrl)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_56 $$ return url[ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_39 $$ Company company = CompanyLocalServiceUtil.getCompany(group.getCompanyId())[ CD ]
Line_18 $$ if (secure) -->Line_21 $$ urlSB.append(DATA_HANDLER_PUBLIC_LAYOUT_SET_URL)[ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_34 $$ urlSB.append(DATA_HANDLER_PRIVATE_LAYOUT_SET_URL)[ FD ]
Line_43 $$ if (url.startsWith(portalUrl)) -->Line_49 $$ return url.substring(portalUrl.length())[ CD ]
Line_11 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)-->Line_12 $$ LayoutSet publicLayoutSet = group.getPublicLayoutSet()[ FD ]
Line_30 $$ if (url.startsWith(portalUrl)) -->Line_36 $$ return url.substring(portalUrl.length())[ CD ]
Line_7 $$ int serverPort = PortalUtil.getPortalServerPort(secure)-->Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_40 $$ String companyVirtualHostname = company.getVirtualHostname()-->Line_41 $$ if (Validator.isNotNull(companyVirtualHostname)) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_32 $$ urlSB.append(DATA_HANDLER_PRIVATE_LAYOUT_SET_SECURE_URL)[ FD ]
Line_40 $$ String companyVirtualHostname = company.getVirtualHostname()-->Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)[ FD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_36 $$ return url.substring(portalUrl.length())[ FD ]
Line_7 $$ int serverPort = PortalUtil.getPortalServerPort(secure)-->Line_8 $$ if (serverPort == -1) [ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_28 $$ if (Validator.isNotNull(privateLayoutSetVirtualHostname)) [ CD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_26 $$ LayoutSet privateLayoutSet = group.getPrivateLayoutSet()[ CD ]
Line_6 $$ boolean secure = HttpUtil.isSecure(url)-->Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_54 $$ return url.substring(portalUrl.length())[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_40 $$ String companyVirtualHostname = company.getVirtualHostname()[ CD ]
Line_44 $$ if (secure) -->Line_47 $$ urlSB.append(DATA_HANDLER_COMPANY_URL)[ CD ]
Line_18 $$ if (secure) -->Line_19 $$ urlSB.append(DATA_HANDLER_PUBLIC_LAYOUT_SET_SECURE_URL)[ CD ]
Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)-->Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)[ FD ]
Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)-->Line_23 $$ return url.substring(portalUrl.length())[ FD ]
Line_6 $$ boolean secure = HttpUtil.isSecure(url)-->Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)[ FD ]
Line_17 $$ if (url.startsWith(portalUrl)) -->Line_23 $$ return url.substring(portalUrl.length())[ CD ]
Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)-->Line_49 $$ return url.substring(portalUrl.length())[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_36 $$ return url.substring(portalUrl.length())[ FD ]
Line_27 $$ String privateLayoutSetVirtualHostname = privateLayoutSet.getVirtualHostname()-->Line_28 $$ if (Validator.isNotNull(privateLayoutSetVirtualHostname)) [ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_23 $$ return url.substring(portalUrl.length())[ FD ]
Line_8 $$ if (serverPort == -1) -->Line_9 $$ return url[ CD ]
Line_3 $$ if (!HttpUtil.hasProtocol(url)) -->Line_4 $$ return url[ CD ]
Line_7 $$ int serverPort = PortalUtil.getPortalServerPort(secure)-->Line_52 $$ portalUrl = PortalUtil.getPortalURL("localhost", serverPort, secure)[ FD ]
Line_2 $$ protected String replaceExportHostname(long groupId, String url, StringBundler urlSB) throws PortalException -->Line_45 $$ urlSB.append(DATA_HANDLER_COMPANY_SECURE_URL)[ FD ]
Line_26 $$ LayoutSet privateLayoutSet = group.getPrivateLayoutSet()-->Line_27 $$ String privateLayoutSetVirtualHostname = privateLayoutSet.getVirtualHostname()[ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_29 $$ portalUrl = PortalUtil.getPortalURL(privateLayoutSetVirtualHostname, serverPort, secure)[ FD ]
Line_14 $$ String portalUrl = StringPool.BLANK-->Line_42 $$ portalUrl = PortalUtil.getPortalURL(companyVirtualHostname, serverPort, secure)[ FD ]
Line_15 $$ if (Validator.isNotNull(publicLayoutSetVirtualHostname)) -->Line_17 $$ if (url.startsWith(portalUrl)) [ CD ]
Line_13 $$ String publicLayoutSetVirtualHostname = publicLayoutSet.getVirtualHostname()-->Line_16 $$ portalUrl = PortalUtil.getPortalURL(publicLayoutSetVirtualHostname, serverPort, secure)[ FD ]
