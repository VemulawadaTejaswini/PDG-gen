Line_16 $$ BufferedReader urlReader = new BufferedReader(new InputStreamReader(in, StandardCharsets.UTF_8))-->Line_17 $$ String metadataResult = urlReader.readLine()[ FD ]
Line_9 $$ InputStream in = null-->Line_26 $$ IOUtils.closeWhileHandlingException(in)[ FD ]
Line_7 $$ Map<String, String> ec2Attributes = new HashMap()-->Line_22 $$ ec2Attributes.put("aws_availability_zone", metadataResult)[ FD ]
Line_18 $$ if (metadataResult == null || metadataResult.length() == 0) -->Line_19 $$ logger.error("no ec2 metadata returned from [ CD ]
Line_9 $$ InputStream in = null-->Line_15 $$ in = urlConnection.getInputStream()[ FD ]
Line_15 $$ in = urlConnection.getInputStream()-->Line_26 $$ IOUtils.closeWhileHandlingException(in)[ FD ]
Line_4 $$ if (!settings.getAsBoolean("cloud.node.auto_attributes", false)) -->Line_5 $$ return null[ CD ]
Line_8 $$ URLConnection urlConnection-->Line_14 $$ urlConnection.setConnectTimeout(2000)[ FD ]
Line_13 $$ urlConnection = url.openConnection()-->Line_15 $$ in = urlConnection.getInputStream()[ FD ]
Line_8 $$ URLConnection urlConnection-->Line_13 $$ urlConnection = url.openConnection()[ FD ]
Line_11 $$ URL url = new URL(AwsEc2ServiceImpl.EC2_METADATA_URL + "placement/availability-zone")-->Line_19 $$ logger.error("no ec2 metadata returned from [ FD ]
Line_11 $$ URL url = new URL(AwsEc2ServiceImpl.EC2_METADATA_URL + "placement/availability-zone")-->Line_12 $$ logger.debug("obtaining ec2 [placement/availability-zone] from ec2 meta-data url [ FD ]
Line_11 $$ URL url = new URL(AwsEc2ServiceImpl.EC2_METADATA_URL + "placement/availability-zone")-->Line_13 $$ urlConnection = url.openConnection()[ FD ]
Line_17 $$ String metadataResult = urlReader.readLine()-->Line_22 $$ ec2Attributes.put("aws_availability_zone", metadataResult)[ FD ]
Line_17 $$ String metadataResult = urlReader.readLine()-->Line_18 $$ if (metadataResult == null || metadataResult.length() == 0) [ FD ]
Line_13 $$ urlConnection = url.openConnection()-->Line_14 $$ urlConnection.setConnectTimeout(2000)[ FD ]
Line_8 $$ URLConnection urlConnection-->Line_15 $$ in = urlConnection.getInputStream()[ FD ]
Line_18 $$ if (metadataResult == null || metadataResult.length() == 0) -->Line_20 $$ return null[ CD ]
