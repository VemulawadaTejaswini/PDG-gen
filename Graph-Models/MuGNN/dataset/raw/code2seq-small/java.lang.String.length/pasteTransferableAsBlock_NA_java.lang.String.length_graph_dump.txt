Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_20 $$ editor.getCaretModel().moveToLogicalPosition(caretToRestore)[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_19 $$ caretToRestore = new LogicalPosition(caretLine, caretToRestore.column + longestLineLength)[ CD ]
Line_4 $$ if (content == null)-->Line_5 $$ return[ CD ]
Line_7 $$ if (text == null)-->Line_8 $$ return[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_11 $$ String[] lines = LineTokenizer.tokenize(text.toCharArray(), false)[ CD ]
Line_13 $$ for (int i = 0; i < lines.length; i++) -->Line_17 $$ insertStringAtCaret(editor, line, false, true)[ CD ]
Line_13 $$ for (int i = 0; i < lines.length; i++) -->Line_14 $$ String line = lines[i][ CD ]
Line_14 $$ String line = lines[i]-->Line_15 $$ longestLineLength = Math.max(longestLineLength, line.length())[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_21 $$ zeroWidthBlockSelectionAtCaretColumn(editor, caretLine, caretLine)[ FD ]
Line_9 $$ int caretLine = editor.getCaretModel().getLogicalPosition().line-->Line_21 $$ zeroWidthBlockSelectionAtCaretColumn(editor, caretLine, caretLine)[ FD ]
Line_19 $$ caretToRestore = new LogicalPosition(caretLine, caretToRestore.column + longestLineLength)-->Line_20 $$ editor.getCaretModel().moveToLogicalPosition(caretToRestore)[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_3 $$ Transferable content = getTransferable(producer)[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_7 $$ if (text == null)[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_20 $$ editor.getCaretModel().moveToLogicalPosition(caretToRestore)[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_4 $$ if (content == null)[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_12 $$ int longestLineLength = 0[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_17 $$ insertStringAtCaret(editor, line, false, true)[ FD ]
Line_13 $$ for (int i = 0; i < lines.length; i++) -->Line_16 $$ editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(caretLine + i, caretToRestore.column))[ CD ]
Line_6 $$ String text = getStringContent(content)-->Line_11 $$ String[] lines = LineTokenizer.tokenize(text.toCharArray(), false)[ FD ]
Line_3 $$ Transferable content = getTransferable(producer)-->Line_6 $$ String text = getStringContent(content)[ FD ]
Line_3 $$ Transferable content = getTransferable(producer)-->Line_4 $$ if (content == null)[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_10 $$ LogicalPosition caretToRestore = editor.getCaretModel().getLogicalPosition()[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_10 $$ LogicalPosition caretToRestore = editor.getCaretModel().getLogicalPosition()[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_16 $$ editor.getCaretModel().moveToLogicalPosition(new LogicalPosition(caretLine + i, caretToRestore.column))[ FD ]
Line_12 $$ int longestLineLength = 0-->Line_15 $$ longestLineLength = Math.max(longestLineLength, line.length())[ FD ]
Line_14 $$ String line = lines[i]-->Line_17 $$ insertStringAtCaret(editor, line, false, true)[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_6 $$ String text = getStringContent(content)[ CD ]
Line_6 $$ String text = getStringContent(content)-->Line_7 $$ if (text == null)[ FD ]
Line_13 $$ for (int i = 0; i < lines.length; i++) -->Line_15 $$ longestLineLength = Math.max(longestLineLength, line.length())[ CD ]
Line_10 $$ LogicalPosition caretToRestore = editor.getCaretModel().getLogicalPosition()-->Line_20 $$ editor.getCaretModel().moveToLogicalPosition(caretToRestore)[ FD ]
Line_10 $$ LogicalPosition caretToRestore = editor.getCaretModel().getLogicalPosition()-->Line_19 $$ caretToRestore = new LogicalPosition(caretLine, caretToRestore.column + longestLineLength)[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_9 $$ int caretLine = editor.getCaretModel().getLogicalPosition().line[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_9 $$ int caretLine = editor.getCaretModel().getLogicalPosition().line[ FD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_3 $$ Transferable content = getTransferable(producer)[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_21 $$ zeroWidthBlockSelectionAtCaretColumn(editor, caretLine, caretLine)[ CD ]
Line_2 $$ public static void pasteTransferableAsBlock(Editor editor, @Nullable Producer<Transferable> producer) -->Line_13 $$ for (int i = 0; i < lines.length; i++) [ CD ]
