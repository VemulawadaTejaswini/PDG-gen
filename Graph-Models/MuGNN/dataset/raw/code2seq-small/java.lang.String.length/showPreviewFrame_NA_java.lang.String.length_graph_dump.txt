Line_36 $$ Locale locale = Locale.getDefault()-->Line_38 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + "_" + locale.getCountry() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_18 $$ final LwRootContainer rootContainer-->Line_58 $$ FormEditingUtil.iterateStringDescriptors(rootContainer, new FormEditingUtil.StringDescriptorVisitor<IComponent>() [ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_3 $$ final String tempPath[ CD ]
Line_12 $$ final PathsList sources = OrderEnumerator.orderEntries(module).withoutSdk().withoutLibraries().withoutDepModules().getSourcePathsList()-->Line_88 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_25 $$ if (rootContainer.getComponentCount() == 0) -->Line_27 $$ return[ CD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_44 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_66 $$ if (bundleSet.size() > 0) -->Line_88 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ CD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_17 $$ final Document doc = FileDocumentManager.getInstance().getDocument(formFile)[ FD ]
Line_18 $$ final LwRootContainer rootContainer-->Line_25 $$ if (rootContainer.getComponentCount() == 0) [ FD ]
Line_3 $$ final String tempPath-->Line_33 $$ CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME + "$MyExitAction", true)[ FD ]
Line_80 $$ CompilerManager.getInstance(module.getProject()).make(scope, new CompileStatusNotification() -->Line_82 $$ if (!aborted && errors == 0) [ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_69 $$ PropertiesReferenceManager manager = PropertiesReferenceManager.getInstance(module.getProject())[ FD ]
Line_66 $$ if (bundleSet.size() > 0) -->Line_69 $$ PropertiesReferenceManager manager = PropertiesReferenceManager.getInstance(module.getProject())[ CD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_71 $$ for (PropertiesFile propFile : manager.findPropertiesFiles(module, bundleName)) [ FD ]
Line_18 $$ final LwRootContainer rootContainer-->Line_29 $$ setPreviewBindings(rootContainer, CLASS_TO_BIND_NAME)[ FD ]
Line_3 $$ final String tempPath-->Line_38 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + "_" + locale.getCountry() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_40 $$ if (locale.getLanguage().length() > 0) -->Line_41 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ CD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_33 $$ CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME + "$MyExitAction", true)[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_13 $$ final String classPath = OrderEnumerator.orderEntries(module).recursively().getPathsList().getPathsString() + File.pathSeparator + sources.getPathsString() + File.pathSeparator + tempPath[ CD ]
Line_13 $$ final String classPath = OrderEnumerator.orderEntries(module).recursively().getPathsList().getPathsString() + File.pathSeparator + sources.getPathsString() + File.pathSeparator + tempPath-->Line_15 $$ final InstrumentationClassFinder finder = createClassFinder(classPath)[ FD ]
Line_45 $$ final AsmCodeGenerator codeGenerator = new AsmCodeGenerator(rootContainer, finder, nestedFormLoader, true, new PsiClassWriter(module))-->Line_47 $$ final FormErrorInfo[] errors = codeGenerator.getErrors()[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_9 $$ Messages.showErrorDialog(module.getProject(), UIDesignerBundle.message("error.cannot.preview.form", formFile.getPath().replace('/', File.separatorChar), e.toString()), CommonBundle.getErrorTitle())[ FD ]
Line_3 $$ final String tempPath-->Line_88 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_20 $$ rootContainer = Utils.getRootContainer(doc.getText(), new CompiledClassPropertiesProvider(finder.getLoader()))-->Line_25 $$ if (rootContainer.getComponentCount() == 0) [ FD ]
Line_5 $$ final File tempDirectory = FileUtil.createTempDirectory("FormPreview", "")-->Line_6 $$ tempPath = tempDirectory.getAbsolutePath()[ FD ]
Line_3 $$ final String tempPath-->Line_41 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_60 $$ if (descriptor.getBundleName() != null) -->Line_61 $$ bundleSet.add(descriptor.getDottedBundleName())[ CD ]
Line_58 $$ FormEditingUtil.iterateStringDescriptors(rootContainer, new FormEditingUtil.StringDescriptorVisitor<IComponent>() -->Line_63 $$ return true[ CD ]
Line_57 $$ final HashSet<String> bundleSet = new HashSet<String>()-->Line_61 $$ bundleSet.add(descriptor.getDottedBundleName())[ FD ]
Line_57 $$ final HashSet<String> bundleSet = new HashSet<String>()-->Line_66 $$ if (bundleSet.size() > 0) [ FD ]
Line_18 $$ final LwRootContainer rootContainer-->Line_20 $$ rootContainer = Utils.getRootContainer(doc.getText(), new CompiledClassPropertiesProvider(finder.getLoader()))[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_80 $$ CompilerManager.getInstance(module.getProject()).make(scope, new CompileStatusNotification() [ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_35 $$ CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME + "$MySetLafAction", true)[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_49 $$ Messages.showErrorDialog(module.getProject(), UIDesignerBundle.message("error.cannot.preview.form", formFile.getPath().replace('/', File.separatorChar), errors[0].getErrorMessage()), CommonBundle.getErrorTitle())[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_22 $$ Messages.showErrorDialog(module.getProject(), UIDesignerBundle.message("error.cannot.read.form", formFile.getPath().replace('/', File.separatorChar), e.getMessage()), CommonBundle.getErrorTitle())[ FD ]
Line_66 $$ if (bundleSet.size() > 0) -->Line_80 $$ CompilerManager.getInstance(module.getProject()).make(scope, new CompileStatusNotification() [ CD ]
Line_20 $$ rootContainer = Utils.getRootContainer(doc.getText(), new CompiledClassPropertiesProvider(finder.getLoader()))-->Line_29 $$ setPreviewBindings(rootContainer, CLASS_TO_BIND_NAME)[ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_32 $$ final File tempFile = CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME, true)[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_12 $$ final PathsList sources = OrderEnumerator.orderEntries(module).withoutSdk().withoutLibraries().withoutDepModules().getSourcePathsList()[ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_34 $$ CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME + "$MyPackAction", true)[ FD ]
Line_17 $$ final Document doc = FileDocumentManager.getInstance().getDocument(formFile)-->Line_20 $$ rootContainer = Utils.getRootContainer(doc.getText(), new CompiledClassPropertiesProvider(finder.getLoader()))[ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_43 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_80 $$ CompilerManager.getInstance(module.getProject()).make(scope, new CompileStatusNotification() -->Line_82 $$ if (!aborted && errors == 0) [ CD ]
Line_3 $$ final String tempPath-->Line_35 $$ CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME + "$MySetLafAction", true)[ FD ]
Line_36 $$ Locale locale = Locale.getDefault()-->Line_40 $$ if (locale.getLanguage().length() > 0) [ FD ]
Line_15 $$ final InstrumentationClassFinder finder = createClassFinder(classPath)-->Line_20 $$ rootContainer = Utils.getRootContainer(doc.getText(), new CompiledClassPropertiesProvider(finder.getLoader()))[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_13 $$ final String classPath = OrderEnumerator.orderEntries(module).recursively().getPathsList().getPathsString() + File.pathSeparator + sources.getPathsString() + File.pathSeparator + tempPath[ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_38 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + "_" + locale.getCountry() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_7 $$ CopyResourcesUtil.copyFormsRuntime(tempPath, true)[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_15 $$ final InstrumentationClassFinder finder = createClassFinder(classPath)[ CD ]
Line_3 $$ final String tempPath-->Line_6 $$ tempPath = tempDirectory.getAbsolutePath()[ FD ]
Line_36 $$ Locale locale = Locale.getDefault()-->Line_37 $$ if (locale.getCountry().length() > 0 && locale.getLanguage().length() > 0) [ FD ]
Line_32 $$ final File tempFile = CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME, true)-->Line_46 $$ codeGenerator.patchFile(tempFile)[ FD ]
Line_74 $$ if (moduleForFile != null) -->Line_75 $$ modules.add(moduleForFile)[ CD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_88 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_36 $$ Locale locale = Locale.getDefault()-->Line_43 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_48 $$ if (errors.length != 0) -->Line_50 $$ return[ CD ]
Line_58 $$ FormEditingUtil.iterateStringDescriptors(rootContainer, new FormEditingUtil.StringDescriptorVisitor<IComponent>() -->Line_60 $$ if (descriptor.getBundleName() != null) [ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_12 $$ final PathsList sources = OrderEnumerator.orderEntries(module).withoutSdk().withoutLibraries().withoutDepModules().getSourcePathsList()[ CD ]
Line_20 $$ rootContainer = Utils.getRootContainer(doc.getText(), new CompiledClassPropertiesProvider(finder.getLoader()))-->Line_58 $$ FormEditingUtil.iterateStringDescriptors(rootContainer, new FormEditingUtil.StringDescriptorVisitor<IComponent>() [ FD ]
Line_3 $$ final String tempPath-->Line_7 $$ CopyResourcesUtil.copyFormsRuntime(tempPath, true)[ FD ]
Line_15 $$ final InstrumentationClassFinder finder = createClassFinder(classPath)-->Line_91 $$ finder.releaseResources()[ FD ]
Line_3 $$ final String tempPath-->Line_43 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_26 $$ Messages.showErrorDialog(module.getProject(), UIDesignerBundle.message("error.cannot.preview.empty.form", formFile.getPath().replace('/', File.separatorChar)), CommonBundle.getErrorTitle())[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_73 $$ final Module moduleForFile = ModuleUtil.findModuleForFile(propFile.getVirtualFile(), module.getProject())[ FD ]
Line_36 $$ Locale locale = Locale.getDefault()-->Line_41 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_3 $$ final String tempPath-->Line_44 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_12 $$ final PathsList sources = OrderEnumerator.orderEntries(module).withoutSdk().withoutLibraries().withoutDepModules().getSourcePathsList()-->Line_13 $$ final String classPath = OrderEnumerator.orderEntries(module).recursively().getPathsList().getPathsString() + File.pathSeparator + sources.getPathsString() + File.pathSeparator + tempPath[ FD ]
Line_58 $$ FormEditingUtil.iterateStringDescriptors(rootContainer, new FormEditingUtil.StringDescriptorVisitor<IComponent>() -->Line_60 $$ if (descriptor.getBundleName() != null) [ CD ]
Line_3 $$ final String tempPath-->Line_34 $$ CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME + "$MyPackAction", true)[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_54 $$ Messages.showErrorDialog(module.getProject(), UIDesignerBundle.message("error.cannot.preview.form", formFile.getPath().replace('/', File.separatorChar), e.getMessage() != null ? e.getMessage() : e.toString()), CommonBundle.getErrorTitle())[ FD ]
Line_12 $$ final PathsList sources = OrderEnumerator.orderEntries(module).withoutSdk().withoutLibraries().withoutDepModules().getSourcePathsList()-->Line_83 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_41 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ FD ]
Line_3 $$ final String tempPath-->Line_83 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_37 $$ if (locale.getCountry().length() > 0 && locale.getLanguage().length() > 0) -->Line_38 $$ CopyResourcesUtil.copyProperties(tempPath, RUNTIME_BUNDLE_PREFIX + "_" + locale.getLanguage() + "_" + locale.getCountry() + PropertiesFileType.DOT_DEFAULT_EXTENSION)[ CD ]
Line_48 $$ if (errors.length != 0) -->Line_49 $$ Messages.showErrorDialog(module.getProject(), UIDesignerBundle.message("error.cannot.preview.form", formFile.getPath().replace('/', File.separatorChar), errors[0].getErrorMessage()), CommonBundle.getErrorTitle())[ CD ]
Line_25 $$ if (rootContainer.getComponentCount() == 0) -->Line_26 $$ Messages.showErrorDialog(module.getProject(), UIDesignerBundle.message("error.cannot.preview.empty.form", formFile.getPath().replace('/', File.separatorChar)), CommonBundle.getErrorTitle())[ CD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_88 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_3 $$ final String tempPath-->Line_32 $$ final File tempFile = CopyResourcesUtil.copyClass(tempPath, CLASS_TO_BIND_NAME, true)[ FD ]
Line_2 $$ private static void showPreviewFrame(@NotNull final Module module, @NotNull final VirtualFile formFile, @Nullable final Locale stringDescriptorLocale) -->Line_83 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_45 $$ final AsmCodeGenerator codeGenerator = new AsmCodeGenerator(rootContainer, finder, nestedFormLoader, true, new PsiClassWriter(module))-->Line_46 $$ codeGenerator.patchFile(tempFile)[ FD ]
Line_58 $$ FormEditingUtil.iterateStringDescriptors(rootContainer, new FormEditingUtil.StringDescriptorVisitor<IComponent>() -->Line_61 $$ bundleSet.add(descriptor.getDottedBundleName())[ FD ]
Line_6 $$ tempPath = tempDirectory.getAbsolutePath()-->Line_83 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ FD ]
Line_82 $$ if (!aborted && errors == 0) -->Line_83 $$ runPreviewProcess(tempPath, sources, module, formFile, stringDescriptorLocale)[ CD ]
