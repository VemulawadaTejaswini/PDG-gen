Line_3 $$ if (categories == null || categories.isEmpty()) -->Line_4 $$ return[ CD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_15 $$ op.get("value").set("INFO")[ CD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_16 $$ CoreUtils.applyUpdates(updates, managementClient.getControllerClient())[ CD ]
Line_7 $$ for (String category : categories) -->Line_8 $$ if (category == null || category.length() == 0) [ FD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_3 $$ if (categories == null || categories.isEmpty()) [ CD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_6 $$ final List<ModelNode> updates = new ArrayList<ModelNode>()[ CD ]
Line_6 $$ final List<ModelNode> updates = new ArrayList<ModelNode>()-->Line_11 $$ updates.add(Util.createRemoveOperation(PATH_LOGGING.append("logger", category)))[ FD ]
Line_6 $$ final List<ModelNode> updates = new ArrayList<ModelNode>()-->Line_16 $$ CoreUtils.applyUpdates(updates, managementClient.getControllerClient())[ FD ]
Line_13 $$ ModelNode op = Util.createEmptyOperation("write-attribute", PATH_LOGGING.append("console-handler", "CONSOLE"))-->Line_15 $$ op.get("value").set("INFO")[ FD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_16 $$ CoreUtils.applyUpdates(updates, managementClient.getControllerClient())[ FD ]
Line_7 $$ for (String category : categories) -->Line_11 $$ updates.add(Util.createRemoveOperation(PATH_LOGGING.append("logger", category)))[ FD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_13 $$ ModelNode op = Util.createEmptyOperation("write-attribute", PATH_LOGGING.append("console-handler", "CONSOLE"))[ CD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_14 $$ op.get("name").set("level")[ CD ]
Line_13 $$ ModelNode op = Util.createEmptyOperation("write-attribute", PATH_LOGGING.append("console-handler", "CONSOLE"))-->Line_14 $$ op.get("name").set("level")[ FD ]
