Line_9 $$ final StringBuilder result = new StringBuilder()-->Line_30 $$ if (result.length() > 0) [ FD ]
Line_7 $$ value = PATTERN.matcher(Normalizer.normalize(value, Normalizer.Form.NFD)).replaceAll("")-->Line_12 $$ final char c = value.charAt(i)[ FD ]
Line_10 $$ boolean insertDotBeforeNextWord = false-->Line_31 $$ insertDotBeforeNextWord = true[ FD ]
Line_37 $$ PropertiesFile propertiesFile = getPropertiesFile()-->Line_42 $$ while (propertiesFile.findPropertyByKey(key + suffix) != null) [ FD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_3 $$ if (myCustomization.suggestedName != null) [ CD ]
Line_12 $$ final char c = value.charAt(i)-->Line_17 $$ result.append(Character.toLowerCase(c))[ FD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_7 $$ value = PATTERN.matcher(Normalizer.normalize(value, Normalizer.Form.NFD)).replaceAll("")[ CD ]
Line_7 $$ value = PATTERN.matcher(Normalizer.normalize(value, Normalizer.Form.NFD)).replaceAll("")-->Line_22 $$ if (i == value.length() - 1) [ FD ]
Line_13 $$ if (Character.isLetterOrDigit(c)) -->Line_17 $$ result.append(Character.toLowerCase(c))[ CD ]
Line_13 $$ if (Character.isLetterOrDigit(c)) -->Line_18 $$ insertDotBeforeNextWord = false[ CD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_37 $$ PropertiesFile propertiesFile = getPropertiesFile()[ CD ]
Line_3 $$ if (myCustomization.suggestedName != null) -->Line_4 $$ return myCustomization.suggestedName[ CD ]
Line_18 $$ insertDotBeforeNextWord = false-->Line_31 $$ insertDotBeforeNextWord = true[ FD ]
Line_37 $$ PropertiesFile propertiesFile = getPropertiesFile()-->Line_39 $$ if (propertiesFile.findPropertyByKey(key) == null)[ FD ]
Line_42 $$ while (propertiesFile.findPropertyByKey(key + suffix) != null) -->Line_43 $$ suffix++[ CD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_6 $$ String key = defaultSuggestPropertyKey(value)[ CD ]
Line_39 $$ if (propertiesFile.findPropertyByKey(key) == null)-->Line_40 $$ return key[ CD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_7 $$ value = PATTERN.matcher(Normalizer.normalize(value, Normalizer.Form.NFD)).replaceAll("")[ FD ]
Line_6 $$ String key = defaultSuggestPropertyKey(value)-->Line_35 $$ key = result.toString()[ FD ]
Line_12 $$ final char c = value.charAt(i)-->Line_19 $$ if (c == '&') [ FD ]
Line_9 $$ final StringBuilder result = new StringBuilder()-->Line_17 $$ result.append(Character.toLowerCase(c))[ FD ]
Line_38 $$ if (propertiesFile != null) -->Line_41 $$ int suffix = 1[ CD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_11 $$ for (int i = 0; i < value.length(); i++) [ FD ]
Line_8 $$ if (key == null) -->Line_9 $$ final StringBuilder result = new StringBuilder()[ CD ]
Line_11 $$ for (int i = 0; i < value.length(); i++) -->Line_12 $$ final char c = value.charAt(i)[ CD ]
Line_28 $$ insertDotBeforeNextWord = true-->Line_31 $$ insertDotBeforeNextWord = true[ FD ]
Line_7 $$ value = PATTERN.matcher(Normalizer.normalize(value, Normalizer.Form.NFD)).replaceAll("")-->Line_25 $$ if (Character.isLetter(value.charAt(i + 1))) [ FD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_8 $$ if (key == null) [ CD ]
Line_9 $$ final StringBuilder result = new StringBuilder()-->Line_35 $$ key = result.toString()[ FD ]
Line_30 $$ if (result.length() > 0) -->Line_31 $$ insertDotBeforeNextWord = true[ CD ]
Line_11 $$ for (int i = 0; i < value.length(); i++) -->Line_12 $$ final char c = value.charAt(i)[ FD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_6 $$ String key = defaultSuggestPropertyKey(value)[ FD ]
Line_38 $$ if (propertiesFile != null) -->Line_47 $$ return key[ CD ]
Line_19 $$ if (c == '&') -->Line_25 $$ if (Character.isLetter(value.charAt(i + 1))) [ CD ]
Line_19 $$ if (c == '&') -->Line_28 $$ insertDotBeforeNextWord = true[ CD ]
Line_10 $$ boolean insertDotBeforeNextWord = false-->Line_28 $$ insertDotBeforeNextWord = true[ FD ]
Line_41 $$ int suffix = 1-->Line_43 $$ suffix++[ FD ]
Line_14 $$ if (insertDotBeforeNextWord) -->Line_15 $$ result.append('.')[ CD ]
Line_38 $$ if (propertiesFile != null) -->Line_42 $$ while (propertiesFile.findPropertyByKey(key + suffix) != null) [ CD ]
Line_38 $$ if (propertiesFile != null) -->Line_45 $$ return key + suffix[ CD ]
Line_9 $$ final StringBuilder result = new StringBuilder()-->Line_15 $$ result.append('.')[ FD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_12 $$ final char c = value.charAt(i)[ FD ]
Line_8 $$ if (key == null) -->Line_11 $$ for (int i = 0; i < value.length(); i++) [ CD ]
Line_7 $$ value = PATTERN.matcher(Normalizer.normalize(value, Normalizer.Form.NFD)).replaceAll("")-->Line_11 $$ for (int i = 0; i < value.length(); i++) [ FD ]
Line_13 $$ if (Character.isLetterOrDigit(c)) -->Line_19 $$ if (c == '&') [ CD ]
Line_18 $$ insertDotBeforeNextWord = false-->Line_28 $$ insertDotBeforeNextWord = true[ FD ]
Line_37 $$ PropertiesFile propertiesFile = getPropertiesFile()-->Line_38 $$ if (propertiesFile != null) [ FD ]
Line_19 $$ if (c == '&') -->Line_30 $$ if (result.length() > 0) [ CD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_25 $$ if (Character.isLetter(value.charAt(i + 1))) [ FD ]
Line_10 $$ boolean insertDotBeforeNextWord = false-->Line_18 $$ insertDotBeforeNextWord = false[ FD ]
Line_6 $$ String key = defaultSuggestPropertyKey(value)-->Line_8 $$ if (key == null) [ FD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_22 $$ if (i == value.length() - 1) [ FD ]
Line_13 $$ if (Character.isLetterOrDigit(c)) -->Line_14 $$ if (insertDotBeforeNextWord) [ CD ]
Line_2 $$ protected String suggestPropertyKey(String value) -->Line_38 $$ if (propertiesFile != null) [ CD ]
Line_38 $$ if (propertiesFile != null) -->Line_39 $$ if (propertiesFile.findPropertyByKey(key) == null)[ CD ]
Line_6 $$ String key = defaultSuggestPropertyKey(value)-->Line_39 $$ if (propertiesFile.findPropertyByKey(key) == null)[ FD ]
Line_8 $$ if (key == null) -->Line_10 $$ boolean insertDotBeforeNextWord = false[ CD ]
Line_11 $$ for (int i = 0; i < value.length(); i++) -->Line_22 $$ if (i == value.length() - 1) [ FD ]
Line_35 $$ key = result.toString()-->Line_39 $$ if (propertiesFile.findPropertyByKey(key) == null)[ FD ]
Line_11 $$ for (int i = 0; i < value.length(); i++) -->Line_13 $$ if (Character.isLetterOrDigit(c)) [ CD ]
Line_8 $$ if (key == null) -->Line_35 $$ key = result.toString()[ CD ]
Line_19 $$ if (c == '&') -->Line_22 $$ if (i == value.length() - 1) [ CD ]
Line_12 $$ final char c = value.charAt(i)-->Line_13 $$ if (Character.isLetterOrDigit(c)) [ FD ]
Line_19 $$ if (c == '&') -->Line_20 $$ if (insertDotBeforeNextWord)[ CD ]
