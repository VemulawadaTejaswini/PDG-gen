Line_12 $$ TextRange range2 = TextRange.from(text.lastIndexOf(xxx), xxx.length())-->Line_13 $$ SmartPsiFileRange pointer2 = manager.createSmartPsiFileRangePointer(psiFile, range2)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_8 $$ assertTrue(String.valueOf(psiFile), psiFile instanceof PsiPlainTextFile)[ CD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_29 $$ assertEquals(range1.shiftRight(1), pointer1.getRange())[ CD ]
Line_12 $$ TextRange range2 = TextRange.from(text.lastIndexOf(xxx), xxx.length())-->Line_30 $$ assertEquals(range2.shiftRight(1), pointer2.getRange())[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_4 $$ String xxx = "xxx"[ CD ]
Line_9 $$ SmartPointerManagerImpl manager = getPointerManager()-->Line_11 $$ SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1)[ FD ]
Line_10 $$ TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length())-->Line_21 $$ assertEquals(pointer1.getRange(), range1)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_30 $$ assertEquals(range2.shiftRight(1), pointer2.getRange())[ CD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_7 $$ PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile)[ CD ]
Line_4 $$ String xxx = "xxx"-->Line_10 $$ TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length())[ FD ]
Line_15 $$ SoftReference<PsiFile> ref = new SoftReference<PsiFile>(psiFile)-->Line_17 $$ while (ref.get() != null) [ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_13 $$ SmartPsiFileRange pointer2 = manager.createSmartPsiFileRangePointer(psiFile, range2)[ CD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_21 $$ assertEquals(pointer1.getRange(), range1)[ CD ]
Line_5 $$ String text = xxx + " " + xxx + " " + xxx-->Line_6 $$ setFileText(vfile, text)[ FD ]
Line_3 $$ final VirtualFile vfile = createChildData(myRoot, "X.txt")-->Line_26 $$ insertString(FileDocumentManager.getInstance().getDocument(vfile), 0, " ")[ FD ]
Line_10 $$ TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length())-->Line_11 $$ SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_9 $$ SmartPointerManagerImpl manager = getPointerManager()[ CD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_11 $$ SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1)[ CD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_16 $$ psiFile = null[ CD ]
Line_3 $$ final VirtualFile vfile = createChildData(myRoot, "X.txt")-->Line_20 $$ assertNull(FileDocumentManager.getInstance().getCachedDocument(vfile))[ FD ]
Line_7 $$ PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile)-->Line_16 $$ psiFile = null[ FD ]
Line_11 $$ SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1)-->Line_29 $$ assertEquals(range1.shiftRight(1), pointer1.getRange())[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_5 $$ String text = xxx + " " + xxx + " " + xxx[ CD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_15 $$ SoftReference<PsiFile> ref = new SoftReference<PsiFile>(psiFile)[ CD ]
Line_7 $$ PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile)-->Line_11 $$ SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_20 $$ assertNull(FileDocumentManager.getInstance().getCachedDocument(vfile))[ CD ]
Line_5 $$ String text = xxx + " " + xxx + " " + xxx-->Line_12 $$ TextRange range2 = TextRange.from(text.lastIndexOf(xxx), xxx.length())[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_12 $$ TextRange range2 = TextRange.from(text.lastIndexOf(xxx), xxx.length())[ CD ]
Line_17 $$ while (ref.get() != null) -->Line_18 $$ PlatformTestUtil.tryGcSoftlyReachableObjects()[ CD ]
Line_7 $$ PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile)-->Line_8 $$ assertTrue(String.valueOf(psiFile), psiFile instanceof PsiPlainTextFile)[ FD ]
Line_5 $$ String text = xxx + " " + xxx + " " + xxx-->Line_10 $$ TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length())[ FD ]
Line_22 $$ WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() -->Line_26 $$ insertString(FileDocumentManager.getInstance().getDocument(vfile), 0, " ")[ CD ]
Line_10 $$ TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length())-->Line_29 $$ assertEquals(range1.shiftRight(1), pointer1.getRange())[ FD ]
Line_13 $$ SmartPsiFileRange pointer2 = manager.createSmartPsiFileRangePointer(psiFile, range2)-->Line_30 $$ assertEquals(range2.shiftRight(1), pointer2.getRange())[ FD ]
Line_7 $$ PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile)-->Line_13 $$ SmartPsiFileRange pointer2 = manager.createSmartPsiFileRangePointer(psiFile, range2)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_3 $$ final VirtualFile vfile = createChildData(myRoot, "X.txt")[ CD ]
Line_4 $$ String xxx = "xxx"-->Line_12 $$ TextRange range2 = TextRange.from(text.lastIndexOf(xxx), xxx.length())[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_14 $$ assertNotNull(FileDocumentManager.getInstance().getCachedDocument(vfile))[ CD ]
Line_3 $$ final VirtualFile vfile = createChildData(myRoot, "X.txt")-->Line_14 $$ assertNotNull(FileDocumentManager.getInstance().getCachedDocument(vfile))[ FD ]
Line_11 $$ SmartPsiFileRange pointer1 = manager.createSmartPsiFileRangePointer(psiFile, range1)-->Line_21 $$ assertEquals(pointer1.getRange(), range1)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_17 $$ while (ref.get() != null) [ CD ]
Line_3 $$ final VirtualFile vfile = createChildData(myRoot, "X.txt")-->Line_6 $$ setFileText(vfile, text)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_6 $$ setFileText(vfile, text)[ CD ]
Line_3 $$ final VirtualFile vfile = createChildData(myRoot, "X.txt")-->Line_7 $$ PsiFile psiFile = PsiManager.getInstance(getProject()).findFile(vfile)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_10 $$ TextRange range1 = TextRange.from(text.indexOf(xxx), xxx.length())[ CD ]
Line_9 $$ SmartPointerManagerImpl manager = getPointerManager()-->Line_13 $$ SmartPsiFileRange pointer2 = manager.createSmartPsiFileRangePointer(psiFile, range2)[ FD ]
Line_2 $$ public void testSmartPointersSurvivePsiFileUnload() throws IOException -->Line_22 $$ WriteCommandAction.runWriteCommandAction(getProject(), new Runnable() [ CD ]
