Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_20 $$ appender = new TaskLogAppender()[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_9 $$ assertEquals(appender.getIsCleanup(), false)[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_6 $$ appender.activateOptions()[ FD ]
Line_20 $$ appender = new TaskLogAppender()-->Line_22 $$ appender.activateOptions()[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_18 $$ appender.close()[ CD ]
Line_12 $$ Layout layout = new PatternLayout("%-5p [%t]: %m%n")-->Line_13 $$ appender.setLayout(layout)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_13 $$ appender.setLayout(layout)[ CD ]
Line_2 $$ public void testTaskLogAppender() -->Line_17 $$ appender.flush()[ CD ]
Line_2 $$ public void testTaskLogAppender() -->Line_11 $$ appender.setWriter(writer)[ CD ]
Line_10 $$ Writer writer = new StringWriter()-->Line_19 $$ assertTrue(writer.toString().length() > 0)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_20 $$ appender = new TaskLogAppender()[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_17 $$ appender.flush()[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_19 $$ assertTrue(writer.toString().length() > 0)[ CD ]
Line_2 $$ public void testTaskLogAppender() -->Line_16 $$ appender.append(event)[ CD ]
Line_10 $$ Writer writer = new StringWriter()-->Line_11 $$ appender.setWriter(writer)[ FD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_22 $$ appender.activateOptions()[ FD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_23 $$ assertEquals(appender.getIsCleanup(), true)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_10 $$ Writer writer = new StringWriter()[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_16 $$ appender.append(event)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_22 $$ appender.activateOptions()[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_9 $$ assertEquals(appender.getIsCleanup(), false)[ FD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_11 $$ appender.setWriter(writer)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_23 $$ assertEquals(appender.getIsCleanup(), true)[ CD ]
Line_2 $$ public void testTaskLogAppender() -->Line_5 $$ System.setProperty(TaskLogAppender.LOGSIZE_PROPERTY, "1003")[ CD ]
Line_20 $$ appender = new TaskLogAppender()-->Line_23 $$ assertEquals(appender.getIsCleanup(), true)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_6 $$ appender.activateOptions()[ CD ]
Line_2 $$ public void testTaskLogAppender() -->Line_12 $$ Layout layout = new PatternLayout("%-5p [%t]: %m%n")[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_18 $$ appender.close()[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_14 $$ Category logger = Logger.getLogger(getClass().getName())[ CD ]
Line_15 $$ LoggingEvent event = new LoggingEvent("fqnOfCategoryClass", logger, Priority.INFO, "message", new Throwable())-->Line_16 $$ appender.append(event)[ FD ]
Line_20 $$ appender = new TaskLogAppender()-->Line_21 $$ appender.setIsCleanup(true)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_21 $$ appender.setIsCleanup(true)[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_7 $$ assertEquals(appender.getTaskId(), "attempt_01_02_m03_04_001")[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_3 $$ TaskLogAppender appender = new TaskLogAppender()[ CD ]
Line_2 $$ public void testTaskLogAppender() -->Line_15 $$ LoggingEvent event = new LoggingEvent("fqnOfCategoryClass", logger, Priority.INFO, "message", new Throwable())[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_8 $$ assertEquals(appender.getTotalLogFileSize(), 1000)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_4 $$ System.setProperty(TaskLogAppender.TASKID_PROPERTY, "attempt_01_02_m03_04_001")[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_21 $$ appender.setIsCleanup(true)[ FD ]
Line_2 $$ public void testTaskLogAppender() -->Line_8 $$ assertEquals(appender.getTotalLogFileSize(), 1000)[ CD ]
Line_2 $$ public void testTaskLogAppender() -->Line_7 $$ assertEquals(appender.getTaskId(), "attempt_01_02_m03_04_001")[ CD ]
Line_3 $$ TaskLogAppender appender = new TaskLogAppender()-->Line_13 $$ appender.setLayout(layout)[ FD ]
