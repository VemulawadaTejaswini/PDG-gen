Line_23 $$ String content = _read(path)-->Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)[ FD ]
Line_23 $$ String content = _read(path)-->Line_31 $$ Files.write(path, content.getBytes(StandardCharsets.UTF_8))[ FD ]
Line_6 $$ upgradeFileVersion = upgradeFileVersion.replace('_', '.')-->Line_15 $$ if (!upgradeFileVersion.equals(_getModuleVersion())) [ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")[ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_3 $$ String pathString = path.toString()[ CD ]
Line_3 $$ String pathString = path.toString()-->Line_4 $$ pathString = pathString.replace('\\', '/')[ FD ]
Line_14 $$ if (Files.notExists(upgradeFilePath)) -->Line_19 $$ if (upgradeFilePath == null) [ CD ]
Line_14 $$ if (Files.notExists(upgradeFilePath)) -->Line_15 $$ if (!upgradeFileVersion.equals(_getModuleVersion())) [ CD ]
Line_6 $$ upgradeFileVersion = upgradeFileVersion.replace('_', '.')-->Line_28 $$ Path indexesFilePath = _getIndexesFilePath(upgradeFileVersion)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_14 $$ if (Files.notExists(upgradeFilePath)) [ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_27 $$ String author = _getAuthor(content)[ CD ]
Line_23 $$ String content = _read(path)-->Line_27 $$ String author = _getAuthor(content)[ FD ]
Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")-->Line_15 $$ if (!upgradeFileVersion.equals(_getModuleVersion())) [ FD ]
Line_12 $$ String upgradeFileName = tableName + "ModelImpl.java"-->Line_18 $$ upgradeFilePath = _getUpgradeFilePath(upgradeFileName)[ FD ]
Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)-->Line_18 $$ upgradeFilePath = _getUpgradeFilePath(upgradeFileName)[ FD ]
Line_24 $$ String packagePath = _getPackagePath(content)-->Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)[ FD ]
Line_6 $$ upgradeFileVersion = upgradeFileVersion.replace('_', '.')-->Line_8 $$ upgradeFileVersion = upgradeFileVersion.replaceFirst(".+\\.to\\.(.+)", "$1")[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_31 $$ Files.write(path, content.getBytes(StandardCharsets.UTF_8))[ FD ]
Line_26 $$ String upgradeFileContent = _read(upgradeFilePath)-->Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)[ FD ]
Line_25 $$ String className = fileName.substring(0, fileName.length() - 5)-->Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)[ FD ]
Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)-->Line_31 $$ Files.write(path, content.getBytes(StandardCharsets.UTF_8))[ FD ]
Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")-->Line_7 $$ if (upgradeFileVersion.contains("to")) [ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_31 $$ Files.write(path, content.getBytes(StandardCharsets.UTF_8))[ CD ]
Line_4 $$ pathString = pathString.replace('\\', '/')-->Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_26 $$ String upgradeFileContent = _read(upgradeFilePath)[ CD ]
Line_7 $$ if (upgradeFileVersion.contains("to")) -->Line_8 $$ upgradeFileVersion = upgradeFileVersion.replaceFirst(".+\\.to\\.(.+)", "$1")[ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)[ CD ]
Line_28 $$ Path indexesFilePath = _getIndexesFilePath(upgradeFileVersion)-->Line_29 $$ String[] addIndexes = _getAddIndexes(indexesFilePath, tableName)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_6 $$ upgradeFileVersion = upgradeFileVersion.replace('_', '.')[ CD ]
Line_6 $$ upgradeFileVersion = upgradeFileVersion.replace('_', '.')-->Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)[ FD ]
Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")-->Line_6 $$ upgradeFileVersion = upgradeFileVersion.replace('_', '.')[ FD ]
Line_10 $$ String fileName = String.valueOf(path.getFileName())-->Line_11 $$ String tableName = fileName.substring(0, fileName.length() - 10)[ FD ]
Line_8 $$ upgradeFileVersion = upgradeFileVersion.replaceFirst(".+\\.to\\.(.+)", "$1")-->Line_28 $$ Path indexesFilePath = _getIndexesFilePath(upgradeFileVersion)[ FD ]
Line_6 $$ upgradeFileVersion = upgradeFileVersion.replace('_', '.')-->Line_7 $$ if (upgradeFileVersion.contains("to")) [ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_4 $$ pathString = pathString.replace('\\', '/')[ CD ]
Line_11 $$ String tableName = fileName.substring(0, fileName.length() - 10)-->Line_29 $$ String[] addIndexes = _getAddIndexes(indexesFilePath, tableName)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_7 $$ if (upgradeFileVersion.contains("to")) [ CD ]
Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)-->Line_26 $$ String upgradeFileContent = _read(upgradeFilePath)[ FD ]
Line_12 $$ String upgradeFileName = tableName + "ModelImpl.java"-->Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)[ FD ]
Line_19 $$ if (upgradeFilePath == null) -->Line_20 $$ return[ CD ]
Line_29 $$ String[] addIndexes = _getAddIndexes(indexesFilePath, tableName)-->Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_23 $$ String content = _read(path)[ CD ]
Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)-->Line_14 $$ if (Files.notExists(upgradeFilePath)) [ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_11 $$ String tableName = fileName.substring(0, fileName.length() - 10)[ CD ]
Line_8 $$ upgradeFileVersion = upgradeFileVersion.replaceFirst(".+\\.to\\.(.+)", "$1")-->Line_15 $$ if (!upgradeFileVersion.equals(_getModuleVersion())) [ FD ]
Line_14 $$ if (Files.notExists(upgradeFilePath)) -->Line_18 $$ upgradeFilePath = _getUpgradeFilePath(upgradeFileName)[ CD ]
Line_10 $$ String fileName = String.valueOf(path.getFileName())-->Line_25 $$ String className = fileName.substring(0, fileName.length() - 5)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_23 $$ String content = _read(path)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_28 $$ Path indexesFilePath = _getIndexesFilePath(upgradeFileVersion)[ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_10 $$ String fileName = String.valueOf(path.getFileName())[ FD ]
Line_23 $$ String content = _read(path)-->Line_24 $$ String packagePath = _getPackagePath(content)[ FD ]
Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")-->Line_28 $$ Path indexesFilePath = _getIndexesFilePath(upgradeFileVersion)[ FD ]
Line_27 $$ String author = _getAuthor(content)-->Line_30 $$ content = _getContent(packagePath, className, upgradeFileContent, author, addIndexes)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_24 $$ String packagePath = _getPackagePath(content)[ CD ]
Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")-->Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_3 $$ String pathString = path.toString()[ FD ]
Line_18 $$ upgradeFilePath = _getUpgradeFilePath(upgradeFileName)-->Line_26 $$ String upgradeFileContent = _read(upgradeFilePath)[ FD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_10 $$ String fileName = String.valueOf(path.getFileName())[ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_12 $$ String upgradeFileName = tableName + "ModelImpl.java"[ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)[ CD ]
Line_8 $$ upgradeFileVersion = upgradeFileVersion.replaceFirst(".+\\.to\\.(.+)", "$1")-->Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)[ FD ]
Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")-->Line_8 $$ upgradeFileVersion = upgradeFileVersion.replaceFirst(".+\\.to\\.(.+)", "$1")[ FD ]
Line_18 $$ upgradeFilePath = _getUpgradeFilePath(upgradeFileName)-->Line_19 $$ if (upgradeFilePath == null) [ FD ]
Line_15 $$ if (!upgradeFileVersion.equals(_getModuleVersion())) -->Line_16 $$ return[ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_25 $$ String className = fileName.substring(0, fileName.length() - 5)[ CD ]
Line_2 $$ private void _buildUpgradeTable(Path path) throws IOException -->Line_29 $$ String[] addIndexes = _getAddIndexes(indexesFilePath, tableName)[ CD ]
Line_3 $$ String pathString = path.toString()-->Line_5 $$ String upgradeFileVersion = pathString.replaceFirst(".*/upgrade/v(.+)/util.*", "$1")[ FD ]
Line_13 $$ Path upgradeFilePath = Paths.get(_upgradeTableDirName, upgradeFileVersion, upgradeFileName)-->Line_19 $$ if (upgradeFilePath == null) [ FD ]
