Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_28 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_16 $$ if (seq.length() < width) [ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_18 $$ list.add(seq)[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) [ FD ]
Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)-->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_17 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_16 $$ if (seq.length() < width) -->Line_17 $$ seq = isMarked ? seq : seq.trim()[ CD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_3 $$ List<String> list = new ArrayList<String>()-->Line_12 $$ list.add("")[ FD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_33 $$ seq = seq.substring(wrapPos + 1)[ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_29 $$ list.add(seq)[ FD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_17 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) -->Line_28 $$ seq = isMarked ? seq : seq.trim()[ CD ]
Line_23 $$ if (wrapPos <= 2 * width / 3) -->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ CD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) [ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_33 $$ seq = seq.substring(wrapPos + 1)[ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_8 $$ for (Pair<String, Boolean> pair : pairs) -->Line_10 $$ boolean isMarked = pair.getSecond()[ FD ]
Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_16 $$ if (seq.length() < width) [ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)-->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)-->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)-->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) -->Line_29 $$ list.add(seq)[ CD ]
Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)-->Line_23 $$ if (wrapPos <= 2 * width / 3) [ FD ]
Line_16 $$ if (seq.length() < width) -->Line_23 $$ if (wrapPos <= 2 * width / 3) [ CD ]
Line_16 $$ if (seq.length() < width) -->Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)[ CD ]
Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)-->Line_23 $$ if (wrapPos <= 2 * width / 3) [ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_28 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_28 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_5 $$ if (pairs == null) [ CD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_18 $$ list.add(seq)[ FD ]
Line_16 $$ if (seq.length() < width) -->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ CD ]
Line_9 $$ String seq = pair.getFirst()-->Line_29 $$ list.add(seq)[ FD ]
Line_5 $$ if (pairs == null) -->Line_6 $$ return null[ CD ]
Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)-->Line_23 $$ if (wrapPos <= 2 * width / 3) [ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) [ FD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_3 $$ List<String> list = new ArrayList<String>()[ CD ]
Line_4 $$ List<Pair<String, Boolean>> pairs = splitToParagraphs(s)-->Line_5 $$ if (pairs == null) [ FD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_18 $$ list.add(seq)[ FD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_4 $$ List<Pair<String, Boolean>> pairs = splitToParagraphs(s)[ CD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_29 $$ list.add(seq)[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_33 $$ seq = seq.substring(wrapPos + 1)[ FD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_16 $$ if (seq.length() < width) [ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_18 $$ list.add(seq)[ FD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_16 $$ if (seq.length() < width) -->Line_18 $$ list.add(seq)[ CD ]
Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) -->Line_33 $$ seq = seq.substring(wrapPos + 1)[ CD ]
Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)-->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) [ FD ]
Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)-->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_8 $$ for (Pair<String, Boolean> pair : pairs) -->Line_9 $$ String seq = pair.getFirst()[ FD ]
Line_3 $$ List<String> list = new ArrayList<String>()-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_4 $$ List<Pair<String, Boolean>> pairs = splitToParagraphs(s)[ FD ]
Line_16 $$ if (seq.length() < width) -->Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) [ CD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_15 $$ while (true) -->Line_16 $$ if (seq.length() < width) [ CD ]
Line_28 $$ seq = isMarked ? seq : seq.trim()-->Line_16 $$ if (seq.length() < width) [ FD ]
Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)-->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_29 $$ list.add(seq)[ FD ]
Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)-->Line_23 $$ if (wrapPos <= 2 * width / 3) [ FD ]
Line_33 $$ seq = seq.substring(wrapPos + 1)-->Line_17 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_23 $$ if (wrapPos <= 2 * width / 3) -->Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)[ CD ]
Line_11 $$ if (seq.isEmpty()) -->Line_12 $$ list.add("")[ CD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_16 $$ if (seq.length() < width) [ FD ]
Line_24 $$ wrapPos = Math.min(seq.length() - 1, width)-->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_22 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_3 $$ List<String> list = new ArrayList<String>()-->Line_29 $$ list.add(seq)[ FD ]
Line_17 $$ seq = isMarked ? seq : seq.trim()-->Line_21 $$ int wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_3 $$ List<String> list = new ArrayList<String>()-->Line_18 $$ list.add(seq)[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_25 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_27 $$ if (wrapPos >= seq.length() - 1 || wrapPos < 0) -->Line_32 $$ list.add(seq.substring(0, wrapPos))[ CD ]
Line_2 $$ private List<String> toArrayWrapping(@Nullable String s, int width) -->Line_38 $$ return list[ CD ]
Line_9 $$ String seq = pair.getFirst()-->Line_32 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_9 $$ String seq = pair.getFirst()-->Line_11 $$ if (seq.isEmpty()) [ FD ]
