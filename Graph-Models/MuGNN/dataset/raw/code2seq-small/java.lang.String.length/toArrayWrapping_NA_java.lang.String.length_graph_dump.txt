Line_17 $$ for (Pair<String, Boolean> pair : pairs) -->Line_18 $$ String seq = pair.getFirst()[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_48 $$ seq = seq.substring(wrapPos + 1)[ FD ]
Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)-->Line_47 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_39 $$ wrapPos = seq.indexOf(' ', wrapPos)-->Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_38 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_47 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_39 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_13 $$ List<Pair<String, Boolean>> pairs = splitToParagraphs(s)-->Line_14 $$ if (pairs == null) [ FD ]
Line_38 $$ wrapPos = Math.min(seq.length() - 1, width)-->Line_39 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_43 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_26 $$ if (seq.length() < width) [ FD ]
Line_25 $$ while (true) -->Line_26 $$ if (seq.length() < width) [ CD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_47 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)-->Line_38 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_39 $$ wrapPos = seq.indexOf(' ', wrapPos)-->Line_47 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_17 $$ for (Pair<String, Boolean> pair : pairs) -->Line_19 $$ boolean isMarked = pair.getSecond()[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_43 $$ seq = isMarked ? seq : seq.trim()[ FD ]
Line_26 $$ if (seq.length() < width) -->Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ CD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_29 $$ list.add(seq)[ FD ]
Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)-->Line_39 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_38 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_38 $$ wrapPos = Math.min(seq.length() - 1, width)-->Line_47 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_29 $$ list.add(seq)[ FD ]
Line_14 $$ if (pairs == null) -->Line_15 $$ return null[ CD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_44 $$ list.add(seq)[ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_26 $$ if (seq.length() < width) [ FD ]
Line_26 $$ if (seq.length() < width) -->Line_29 $$ list.add(seq)[ CD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_26 $$ if (seq.length() < width) [ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_48 $$ seq = seq.substring(wrapPos + 1)-->Line_39 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_12 $$ List<String> list = new ArrayList<String>()-->Line_44 $$ list.add(seq)[ FD ]
Line_38 $$ wrapPos = Math.min(seq.length() - 1, width)-->Line_34 $$ wrapPos = seq.lastIndexOf(' ', wrapPos)[ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_47 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_44 $$ list.add(seq)[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_20 $$ if (seq.isEmpty()) [ FD ]
Line_12 $$ List<String> list = new ArrayList<String>()-->Line_47 $$ list.add(seq.substring(0, wrapPos))[ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_29 $$ list.add(seq)[ FD ]
Line_12 $$ List<String> list = new ArrayList<String>()-->Line_29 $$ list.add(seq)[ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_39 $$ wrapPos = seq.indexOf(' ', wrapPos)[ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_44 $$ list.add(seq)[ FD ]
Line_18 $$ String seq = pair.getFirst()-->Line_38 $$ wrapPos = Math.min(seq.length() - 1, width)[ FD ]
Line_43 $$ seq = isMarked ? seq : seq.trim()-->Line_48 $$ seq = seq.substring(wrapPos + 1)[ FD ]
