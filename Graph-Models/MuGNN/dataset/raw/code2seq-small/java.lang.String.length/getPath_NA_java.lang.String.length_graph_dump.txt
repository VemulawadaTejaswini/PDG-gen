Line_9 $$ StringBuilder answer = new StringBuilder(parentPath.length() + 1 + myName.length())-->Line_15 $$ return answer.toString()[ FD ]
Line_9 $$ StringBuilder answer = new StringBuilder(parentPath.length() + 1 + myName.length())-->Line_10 $$ answer.append(parentPath)[ FD ]
Line_11 $$ if (answer.charAt(answer.length() - 1) != '/') -->Line_12 $$ answer.append('/')[ CD ]
Line_9 $$ StringBuilder answer = new StringBuilder(parentPath.length() + 1 + myName.length())-->Line_12 $$ answer.append('/')[ FD ]
Line_8 $$ String parentPath = myParent.getPath()-->Line_10 $$ answer.append(parentPath)[ FD ]
Line_9 $$ StringBuilder answer = new StringBuilder(parentPath.length() + 1 + myName.length())-->Line_14 $$ answer.append(myName)[ FD ]
Line_5 $$ if (myParent == null) -->Line_6 $$ return FileUtil.toSystemIndependentName(myHandler.getFile().getPath()) + "!/"[ CD ]
Line_9 $$ StringBuilder answer = new StringBuilder(parentPath.length() + 1 + myName.length())-->Line_11 $$ if (answer.charAt(answer.length() - 1) != '/') [ FD ]
Line_8 $$ String parentPath = myParent.getPath()-->Line_9 $$ StringBuilder answer = new StringBuilder(parentPath.length() + 1 + myName.length())[ FD ]
