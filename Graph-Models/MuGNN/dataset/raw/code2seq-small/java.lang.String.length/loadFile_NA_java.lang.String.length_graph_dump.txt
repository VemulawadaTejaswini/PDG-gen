Line_5 $$ text = StringUtil.convertLineSeparators(text)-->Line_11 $$ final String after = text.substring(index + placeholder.length())[ FD ]
Line_4 $$ String text = FileUtil.loadFile(new File(fullName)).trim()-->Line_8 $$ final int index = text.indexOf(placeholder)[ FD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_7 $$ final String placeholder = "<_classpath_>"[ CD ]
Line_4 $$ String text = FileUtil.loadFile(new File(fullName)).trim()-->Line_11 $$ final String after = text.substring(index + placeholder.length())[ FD ]
Line_4 $$ String text = FileUtil.loadFile(new File(fullName)).trim()-->Line_10 $$ final String before = text.substring(0, index)[ FD ]
Line_5 $$ text = StringUtil.convertLineSeparators(text)-->Line_12 $$ text = before + FileUtil.toSystemIndependentName(root) + after[ FD ]
Line_7 $$ final String placeholder = "<_classpath_>"-->Line_11 $$ final String after = text.substring(index + placeholder.length())[ FD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_6 $$ final String root = PathUtil.getJarPathForClass(this.getClass())[ CD ]
Line_4 $$ String text = FileUtil.loadFile(new File(fullName)).trim()-->Line_5 $$ text = StringUtil.convertLineSeparators(text)[ FD ]
Line_6 $$ final String root = PathUtil.getJarPathForClass(this.getClass())-->Line_12 $$ text = before + FileUtil.toSystemIndependentName(root) + after[ FD ]
Line_9 $$ if (index > 0) -->Line_11 $$ final String after = text.substring(index + placeholder.length())[ CD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_4 $$ String text = FileUtil.loadFile(new File(fullName)).trim()[ CD ]
Line_7 $$ final String placeholder = "<_classpath_>"-->Line_8 $$ final int index = text.indexOf(placeholder)[ FD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_14 $$ return text[ CD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_3 $$ String fullName = getMyTestDataPath() + File.separatorChar + name[ CD ]
Line_8 $$ final int index = text.indexOf(placeholder)-->Line_10 $$ final String before = text.substring(0, index)[ FD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_5 $$ text = StringUtil.convertLineSeparators(text)[ CD ]
Line_11 $$ final String after = text.substring(index + placeholder.length())-->Line_12 $$ text = before + FileUtil.toSystemIndependentName(root) + after[ FD ]
Line_9 $$ if (index > 0) -->Line_12 $$ text = before + FileUtil.toSystemIndependentName(root) + after[ CD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_8 $$ final int index = text.indexOf(placeholder)[ CD ]
Line_8 $$ final int index = text.indexOf(placeholder)-->Line_9 $$ if (index > 0) [ FD ]
Line_5 $$ text = StringUtil.convertLineSeparators(text)-->Line_10 $$ final String before = text.substring(0, index)[ FD ]
Line_4 $$ String text = FileUtil.loadFile(new File(fullName)).trim()-->Line_12 $$ text = before + FileUtil.toSystemIndependentName(root) + after[ FD ]
Line_9 $$ if (index > 0) -->Line_10 $$ final String before = text.substring(0, index)[ CD ]
Line_2 $$ protected String loadFile(String name) throws IOException -->Line_9 $$ if (index > 0) [ CD ]
Line_5 $$ text = StringUtil.convertLineSeparators(text)-->Line_8 $$ final int index = text.indexOf(placeholder)[ FD ]
