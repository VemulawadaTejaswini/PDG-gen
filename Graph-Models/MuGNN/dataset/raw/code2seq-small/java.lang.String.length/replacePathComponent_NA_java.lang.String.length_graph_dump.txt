Line_8 $$ String prefix = ""-->Line_11 $$ if (prefix.length() == 0) [ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_26 $$ newPos = start + name.length()[ FD ]
Line_10 $$ prefix = doc.getText(start, caretPos - start)-->Line_12 $$ prefix = doc.getText(start, end - start)[ FD ]
Line_22 $$ int newPos-->Line_33 $$ doc.insertString(newPos, myFinder.getSeparator(), doc.getDefaultRootElement().getAttributes())[ FD ]
Line_26 $$ newPos = start + name.length()-->Line_42 $$ myPathTextField.setCaretPosition(newPos)[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_25 $$ doc.insertString(start, name, doc.getDefaultRootElement().getAttributes())[ FD ]
Line_10 $$ prefix = doc.getText(start, caretPos - start)-->Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_24 $$ doc.remove(start, end - start)[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_5 $$ myPathTextField.setSelectionEnd(0)[ CD ]
Line_8 $$ String prefix = ""-->Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0[ FD ]
Line_6 $$ final String name = file.getName()-->Line_28 $$ doc.insertString(caretPos, name, doc.getDefaultRootElement().getAttributes())[ FD ]
Line_11 $$ if (prefix.length() == 0) -->Line_12 $$ prefix = doc.getText(start, end - start)[ CD ]
Line_29 $$ newPos = caretPos + name.length()-->Line_34 $$ newPos++[ FD ]
Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0-->Line_20 $$ toRemoveExistingName = true[ FD ]
Line_26 $$ newPos = start + name.length()-->Line_39 $$ newPos++[ FD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_28 $$ doc.insertString(caretPos, name, doc.getDefaultRootElement().getAttributes())[ FD ]
Line_26 $$ newPos = start + name.length()-->Line_32 $$ if (!myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_23 $$ if (toRemoveExistingName) -->Line_26 $$ newPos = start + name.length()[ CD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_31 $$ if (file.isDirectory()) [ FD ]
Line_8 $$ String prefix = ""-->Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0[ FD ]
Line_7 $$ boolean toRemoveExistingName-->Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0[ FD ]
Line_22 $$ int newPos-->Line_26 $$ newPos = start + name.length()[ FD ]
Line_23 $$ if (toRemoveExistingName) -->Line_29 $$ newPos = caretPos + name.length()[ CD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_28 $$ doc.insertString(caretPos, name, doc.getDefaultRootElement().getAttributes())[ FD ]
Line_22 $$ int newPos-->Line_42 $$ myPathTextField.setCaretPosition(newPos)[ FD ]
Line_6 $$ final String name = file.getName()-->Line_25 $$ doc.insertString(start, name, doc.getDefaultRootElement().getAttributes())[ FD ]
Line_12 $$ prefix = doc.getText(start, end - start)-->Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0[ FD ]
Line_38 $$ if (myFinder.getSeparator().equals(doc.getText(newPos, 1))) -->Line_39 $$ newPos++[ CD ]
Line_9 $$ if (caretPos >= start) -->Line_11 $$ if (prefix.length() == 0) [ CD ]
Line_10 $$ prefix = doc.getText(start, caretPos - start)-->Line_11 $$ if (prefix.length() == 0) [ FD ]
Line_23 $$ if (toRemoveExistingName) -->Line_25 $$ doc.insertString(start, name, doc.getDefaultRootElement().getAttributes())[ CD ]
Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0-->Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0[ FD ]
Line_23 $$ if (toRemoveExistingName) -->Line_24 $$ doc.remove(start, end - start)[ CD ]
Line_22 $$ int newPos-->Line_34 $$ newPos++[ FD ]
Line_29 $$ newPos = caretPos + name.length()-->Line_42 $$ myPathTextField.setCaretPosition(newPos)[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_6 $$ final String name = file.getName()[ CD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_37 $$ if (newPos < doc.getLength()) [ FD ]
Line_26 $$ newPos = start + name.length()-->Line_37 $$ if (newPos < doc.getLength()) [ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_10 $$ prefix = doc.getText(start, caretPos - start)[ FD ]
Line_22 $$ int newPos-->Line_29 $$ newPos = caretPos + name.length()[ FD ]
Line_6 $$ final String name = file.getName()-->Line_26 $$ newPos = start + name.length()[ FD ]
Line_22 $$ int newPos-->Line_39 $$ newPos++[ FD ]
Line_26 $$ newPos = start + name.length()-->Line_29 $$ newPos = caretPos + name.length()[ FD ]
Line_7 $$ boolean toRemoveExistingName-->Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0[ FD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_38 $$ if (myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_10 $$ prefix = doc.getText(start, caretPos - start)[ FD ]
Line_29 $$ newPos = caretPos + name.length()-->Line_32 $$ if (!myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_37 $$ if (newPos < doc.getLength()) [ CD ]
Line_9 $$ if (caretPos >= start) -->Line_14 $$ if (SystemInfo.isFileSystemCaseSensitive) [ CD ]
Line_6 $$ final String name = file.getName()-->Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0[ FD ]
Line_26 $$ newPos = start + name.length()-->Line_34 $$ newPos++[ FD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_24 $$ doc.remove(start, end - start)[ FD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_32 $$ if (!myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_9 $$ if (caretPos >= start) [ FD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_25 $$ doc.insertString(start, name, doc.getDefaultRootElement().getAttributes())[ FD ]
Line_14 $$ if (SystemInfo.isFileSystemCaseSensitive) -->Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0[ CD ]
Line_9 $$ if (caretPos >= start) -->Line_10 $$ prefix = doc.getText(start, caretPos - start)[ CD ]
Line_6 $$ final String name = file.getName()-->Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0[ FD ]
Line_23 $$ if (toRemoveExistingName) -->Line_28 $$ doc.insertString(caretPos, name, doc.getDefaultRootElement().getAttributes())[ CD ]
Line_26 $$ newPos = start + name.length()-->Line_38 $$ if (myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_29 $$ newPos = caretPos + name.length()-->Line_33 $$ doc.insertString(newPos, myFinder.getSeparator(), doc.getDefaultRootElement().getAttributes())[ FD ]
Line_37 $$ if (newPos < doc.getLength()) -->Line_38 $$ if (myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ CD ]
Line_22 $$ int newPos-->Line_38 $$ if (myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_29 $$ newPos = caretPos + name.length()-->Line_37 $$ if (newPos < doc.getLength()) [ FD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_33 $$ doc.insertString(newPos, myFinder.getSeparator(), doc.getDefaultRootElement().getAttributes())[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_31 $$ if (file.isDirectory()) [ CD ]
Line_8 $$ String prefix = ""-->Line_12 $$ prefix = doc.getText(start, end - start)[ FD ]
Line_12 $$ prefix = doc.getText(start, end - start)-->Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_4 $$ myPathTextField.setSelectionStart(0)[ CD ]
Line_22 $$ int newPos-->Line_32 $$ if (!myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0-->Line_20 $$ toRemoveExistingName = true[ FD ]
Line_10 $$ prefix = doc.getText(start, caretPos - start)-->Line_17 $$ toRemoveExistingName = StringUtil.toUpperCase(name).startsWith(StringUtil.toUpperCase(prefix)) && prefix.length() > 0[ FD ]
Line_29 $$ newPos = caretPos + name.length()-->Line_39 $$ newPos++[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_7 $$ boolean toRemoveExistingName[ CD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_8 $$ String prefix = ""[ CD ]
Line_22 $$ int newPos-->Line_37 $$ if (newPos < doc.getLength()) [ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_3 $$ final Document doc = myPathTextField.getDocument()[ CD ]
Line_3 $$ final Document doc = myPathTextField.getDocument()-->Line_12 $$ prefix = doc.getText(start, end - start)[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_29 $$ newPos = caretPos + name.length()[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_6 $$ final String name = file.getName()[ FD ]
Line_14 $$ if (SystemInfo.isFileSystemCaseSensitive) -->Line_15 $$ toRemoveExistingName = name.startsWith(prefix) && prefix.length() > 0[ CD ]
Line_29 $$ newPos = caretPos + name.length()-->Line_38 $$ if (myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_42 $$ myPathTextField.setCaretPosition(newPos)[ CD ]
Line_26 $$ newPos = start + name.length()-->Line_33 $$ doc.insertString(newPos, myFinder.getSeparator(), doc.getDefaultRootElement().getAttributes())[ FD ]
Line_8 $$ String prefix = ""-->Line_10 $$ prefix = doc.getText(start, caretPos - start)[ FD ]
Line_32 $$ if (!myFinder.getSeparator().equals(doc.getText(newPos, 1))) -->Line_34 $$ newPos++[ CD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_23 $$ if (toRemoveExistingName) [ CD ]
Line_32 $$ if (!myFinder.getSeparator().equals(doc.getText(newPos, 1))) -->Line_33 $$ doc.insertString(newPos, myFinder.getSeparator(), doc.getDefaultRootElement().getAttributes())[ CD ]
Line_6 $$ final String name = file.getName()-->Line_29 $$ newPos = caretPos + name.length()[ FD ]
Line_9 $$ if (caretPos >= start) -->Line_20 $$ toRemoveExistingName = true[ CD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_12 $$ prefix = doc.getText(start, end - start)[ FD ]
Line_31 $$ if (file.isDirectory()) -->Line_32 $$ if (!myFinder.getSeparator().equals(doc.getText(newPos, 1))) [ CD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_22 $$ int newPos[ CD ]
Line_7 $$ boolean toRemoveExistingName-->Line_20 $$ toRemoveExistingName = true[ FD ]
Line_2 $$ private void replacePathComponent(LookupFile file, int caretPos, int start, int end) throws BadLocationException -->Line_9 $$ if (caretPos >= start) [ CD ]
