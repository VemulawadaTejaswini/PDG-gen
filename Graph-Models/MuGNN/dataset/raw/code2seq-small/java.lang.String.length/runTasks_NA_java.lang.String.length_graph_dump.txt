Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_32 $$ if (settings == null)[ CD ]
Line_5 $$ Map<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>> lazyConfigurationsMap = new FactoryMap<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>>() -->Line_8 $$ if (configurationType == null)[ CD ]
Line_26 $$ for (Iterator<String> iterator = tasks.iterator(); iterator.hasNext(); ) -->Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) [ CD ]
Line_2 $$ public boolean runTasks(@NotNull Collection<String> modules, @NotNull Phase... phases) -->Line_53 $$ return runTasksQueue(tasksQueue)[ CD ]
Line_31 $$ Map<String, RunnerAndConfigurationSettings> settings = lazyConfigurationsMap.get(activation.systemId)-->Line_32 $$ if (settings == null)[ FD ]
Line_5 $$ Map<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>> lazyConfigurationsMap = new FactoryMap<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>>() -->Line_31 $$ Map<String, RunnerAndConfigurationSettings> settings = lazyConfigurationsMap.get(activation.systemId)[ FD ]
Line_10 $$ return ContainerUtil.map2Map(RunManager.getInstance(myProject).getConfigurationSettingsList(configurationType), new Function<RunnerAndConfigurationSettings, Pair<String, RunnerAndConfigurationSettings>>() -->Line_12 $$ return Pair.create(configurationSettings.getName(), configurationSettings)[ FD ]
Line_10 $$ return ContainerUtil.map2Map(RunManager.getInstance(myProject).getConfigurationSettingsList(configurationType), new Function<RunnerAndConfigurationSettings, Pair<String, RunnerAndConfigurationSettings>>() -->Line_12 $$ return Pair.create(configurationSettings.getName(), configurationSettings)[ CD ]
Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_34 $$ RunnerAndConfigurationSettings configurationSettings = settings.get(configurationName)[ CD ]
Line_10 $$ return ContainerUtil.map2Map(RunManager.getInstance(myProject).getConfigurationSettingsList(configurationType), new Function<RunnerAndConfigurationSettings, Pair<String, RunnerAndConfigurationSettings>>() -->Line_35 $$ if (configurationSettings == null)[ FD ]
Line_2 $$ public boolean runTasks(@NotNull Collection<String> modules, @NotNull Phase... phases) -->Line_4 $$ final Queue<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>> tasksQueue = new LinkedList<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>>()[ CD ]
Line_5 $$ Map<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>> lazyConfigurationsMap = new FactoryMap<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>>() -->Line_7 $$ final AbstractExternalSystemTaskConfigurationType configurationType = ExternalSystemUtil.findConfigurationType(key)[ FD ]
Line_7 $$ final AbstractExternalSystemTaskConfigurationType configurationType = ExternalSystemUtil.findConfigurationType(key)-->Line_10 $$ return ContainerUtil.map2Map(RunManager.getInstance(myProject).getConfigurationSettingsList(configurationType), new Function<RunnerAndConfigurationSettings, Pair<String, RunnerAndConfigurationSettings>>() [ FD ]
Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_29 $$ iterator.remove()[ CD ]
Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_38 $$ if (configurationName.equals(configurationSettings.getName()) && runConfiguration instanceof ExternalSystemRunConfiguration) [ CD ]
Line_4 $$ final Queue<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>> tasksQueue = new LinkedList<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>>()-->Line_39 $$ tasksQueue.add(Pair.create(activation.systemId, ((ExternalSystemRunConfiguration) runConfiguration).getSettings()))[ FD ]
Line_27 $$ String task = iterator.next()-->Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) [ FD ]
Line_27 $$ String task = iterator.next()-->Line_30 $$ final String configurationName = task.substring(RUN_CONFIGURATION_TASK_PREFIX.length())[ FD ]
Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_37 $$ final RunConfiguration runConfiguration = configurationSettings.getConfiguration()[ CD ]
Line_4 $$ final Queue<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>> tasksQueue = new LinkedList<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>>()-->Line_51 $$ tasksQueue.add(Pair.create(activation.systemId, executionSettings))[ FD ]
Line_3 $$ final ExternalProjectsStateProvider stateProvider = ExternalProjectsManager.getInstance(myProject).getStateProvider()-->Line_17 $$ for (final ExternalProjectsStateProvider.TasksActivation activation : stateProvider.getAllTasksActivation()) [ FD ]
Line_26 $$ for (Iterator<String> iterator = tasks.iterator(); iterator.hasNext(); ) -->Line_27 $$ String task = iterator.next()[ FD ]
Line_21 $$ if (hashPath || (phase.isSyncPhase() && isShareSameRootPath(modules, activation)))-->Line_22 $$ ContainerUtil.addAll(tasks, activation.state.getTasks(phase))[ CD ]
Line_10 $$ return ContainerUtil.map2Map(RunManager.getInstance(myProject).getConfigurationSettingsList(configurationType), new Function<RunnerAndConfigurationSettings, Pair<String, RunnerAndConfigurationSettings>>() -->Line_38 $$ if (configurationName.equals(configurationSettings.getName()) && runConfiguration instanceof ExternalSystemRunConfiguration) [ FD ]
Line_10 $$ return ContainerUtil.map2Map(RunManager.getInstance(myProject).getConfigurationSettingsList(configurationType), new Function<RunnerAndConfigurationSettings, Pair<String, RunnerAndConfigurationSettings>>() -->Line_37 $$ final RunConfiguration runConfiguration = configurationSettings.getConfiguration()[ FD ]
Line_26 $$ for (Iterator<String> iterator = tasks.iterator(); iterator.hasNext(); ) -->Line_27 $$ String task = iterator.next()[ CD ]
Line_34 $$ RunnerAndConfigurationSettings configurationSettings = settings.get(configurationName)-->Line_37 $$ final RunConfiguration runConfiguration = configurationSettings.getConfiguration()[ FD ]
Line_2 $$ public boolean runTasks(@NotNull Collection<String> modules, @NotNull Phase... phases) -->Line_18 $$ final boolean hashPath = modules.contains(activation.projectPath)[ FD ]
Line_4 $$ final Queue<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>> tasksQueue = new LinkedList<Pair<ProjectSystemId, ExternalSystemTaskExecutionSettings>>()-->Line_53 $$ return runTasksQueue(tasksQueue)[ FD ]
Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_35 $$ if (configurationSettings == null)[ CD ]
Line_26 $$ for (Iterator<String> iterator = tasks.iterator(); iterator.hasNext(); ) -->Line_29 $$ iterator.remove()[ FD ]
Line_8 $$ if (configurationType == null)-->Line_9 $$ return null[ CD ]
Line_2 $$ public boolean runTasks(@NotNull Collection<String> modules, @NotNull Phase... phases) -->Line_3 $$ final ExternalProjectsStateProvider stateProvider = ExternalProjectsManager.getInstance(myProject).getStateProvider()[ CD ]
Line_34 $$ RunnerAndConfigurationSettings configurationSettings = settings.get(configurationName)-->Line_38 $$ if (configurationName.equals(configurationSettings.getName()) && runConfiguration instanceof ExternalSystemRunConfiguration) [ FD ]
Line_38 $$ if (configurationName.equals(configurationSettings.getName()) && runConfiguration instanceof ExternalSystemRunConfiguration) -->Line_39 $$ tasksQueue.add(Pair.create(activation.systemId, ((ExternalSystemRunConfiguration) runConfiguration).getSettings()))[ CD ]
Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_30 $$ final String configurationName = task.substring(RUN_CONFIGURATION_TASK_PREFIX.length())[ CD ]
Line_7 $$ final AbstractExternalSystemTaskConfigurationType configurationType = ExternalSystemUtil.findConfigurationType(key)-->Line_8 $$ if (configurationType == null)[ FD ]
Line_2 $$ public boolean runTasks(@NotNull Collection<String> modules, @NotNull Phase... phases) -->Line_5 $$ Map<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>> lazyConfigurationsMap = new FactoryMap<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>>() [ CD ]
Line_28 $$ if (task.length() > RUN_CONFIGURATION_TASK_PREFIX.length() && task.startsWith(RUN_CONFIGURATION_TASK_PREFIX)) -->Line_31 $$ Map<String, RunnerAndConfigurationSettings> settings = lazyConfigurationsMap.get(activation.systemId)[ CD ]
Line_30 $$ final String configurationName = task.substring(RUN_CONFIGURATION_TASK_PREFIX.length())-->Line_34 $$ RunnerAndConfigurationSettings configurationSettings = settings.get(configurationName)[ FD ]
Line_31 $$ Map<String, RunnerAndConfigurationSettings> settings = lazyConfigurationsMap.get(activation.systemId)-->Line_34 $$ RunnerAndConfigurationSettings configurationSettings = settings.get(configurationName)[ FD ]
Line_34 $$ RunnerAndConfigurationSettings configurationSettings = settings.get(configurationName)-->Line_35 $$ if (configurationSettings == null)[ FD ]
Line_5 $$ Map<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>> lazyConfigurationsMap = new FactoryMap<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>>() -->Line_7 $$ final AbstractExternalSystemTaskConfigurationType configurationType = ExternalSystemUtil.findConfigurationType(key)[ CD ]
Line_2 $$ public boolean runTasks(@NotNull Collection<String> modules, @NotNull Phase... phases) -->Line_21 $$ if (hashPath || (phase.isSyncPhase() && isShareSameRootPath(modules, activation)))[ FD ]
Line_5 $$ Map<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>> lazyConfigurationsMap = new FactoryMap<ProjectSystemId, Map<String, RunnerAndConfigurationSettings>>() -->Line_10 $$ return ContainerUtil.map2Map(RunManager.getInstance(myProject).getConfigurationSettingsList(configurationType), new Function<RunnerAndConfigurationSettings, Pair<String, RunnerAndConfigurationSettings>>() [ CD ]
Line_30 $$ final String configurationName = task.substring(RUN_CONFIGURATION_TASK_PREFIX.length())-->Line_38 $$ if (configurationName.equals(configurationSettings.getName()) && runConfiguration instanceof ExternalSystemRunConfiguration) [ FD ]
