Line_10 $$ int secondDelim = myCanHasVersion ? text.indexOf(':', firstDelim + 1) : -1-->Line_12 $$ if (secondDelim == -1) [ FD ]
Line_16 $$ if (lastDelim == -1) -->Line_17 $$ lastDelim = text.length()[ CD ]
Line_5 $$ String text = range.substring(element.getText())-->Line_17 $$ lastDelim = text.length()[ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_12 $$ if (secondDelim == -1) [ CD ]
Line_4 $$ TextRange range = manipulator.getRangeInElement(element)-->Line_5 $$ String text = range.substring(element.getText())[ FD ]
Line_6 $$ int firstDelim = text.indexOf(':')-->Line_19 $$ return new PsiReference[] [ FD ]
Line_5 $$ String text = range.substring(element.getText())-->Line_10 $$ int secondDelim = myCanHasVersion ? text.indexOf(':', firstDelim + 1) : -1[ FD ]
Line_3 $$ ElementManipulator<PsiElement> manipulator = ElementManipulators.getManipulator(element)-->Line_4 $$ TextRange range = manipulator.getRangeInElement(element)[ FD ]
Line_5 $$ String text = range.substring(element.getText())-->Line_19 $$ return new PsiReference[] [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_6 $$ int firstDelim = text.indexOf(':')[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_3 $$ ElementManipulator<PsiElement> manipulator = ElementManipulators.getManipulator(element)[ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_5 $$ String text = range.substring(element.getText())[ FD ]
Line_5 $$ String text = range.substring(element.getText())-->Line_13 $$ return new PsiReference[] [ FD ]
Line_7 $$ if (firstDelim == -1) -->Line_8 $$ return new PsiReference[] [ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_3 $$ ElementManipulator<PsiElement> manipulator = ElementManipulators.getManipulator(element)[ CD ]
Line_12 $$ if (secondDelim == -1) -->Line_13 $$ return new PsiReference[] [ CD ]
Line_4 $$ TextRange range = manipulator.getRangeInElement(element)-->Line_13 $$ return new PsiReference[] [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_4 $$ TextRange range = manipulator.getRangeInElement(element)[ FD ]
Line_5 $$ String text = range.substring(element.getText())-->Line_15 $$ int lastDelim = text.indexOf(secondDelim + 1)[ FD ]
Line_15 $$ int lastDelim = text.indexOf(secondDelim + 1)-->Line_16 $$ if (lastDelim == -1) [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_7 $$ if (firstDelim == -1) [ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_11 $$ int start = range.getStartOffset()[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_16 $$ if (lastDelim == -1) [ CD ]
Line_6 $$ int firstDelim = text.indexOf(':')-->Line_7 $$ if (firstDelim == -1) [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_19 $$ return new PsiReference[] [ CD ]
Line_6 $$ int firstDelim = text.indexOf(':')-->Line_13 $$ return new PsiReference[] [ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_10 $$ int secondDelim = myCanHasVersion ? text.indexOf(':', firstDelim + 1) : -1[ CD ]
Line_15 $$ int lastDelim = text.indexOf(secondDelim + 1)-->Line_17 $$ lastDelim = text.length()[ FD ]
Line_4 $$ TextRange range = manipulator.getRangeInElement(element)-->Line_11 $$ int start = range.getStartOffset()[ FD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_15 $$ int lastDelim = text.indexOf(secondDelim + 1)[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_5 $$ String text = range.substring(element.getText())[ CD ]
Line_2 $$ public PsiReference[] getReferencesByElement(@NotNull PsiElement element, @NotNull ProcessingContext context) -->Line_4 $$ TextRange range = manipulator.getRangeInElement(element)[ CD ]
Line_10 $$ int secondDelim = myCanHasVersion ? text.indexOf(':', firstDelim + 1) : -1-->Line_19 $$ return new PsiReference[] [ FD ]
Line_5 $$ String text = range.substring(element.getText())-->Line_6 $$ int firstDelim = text.indexOf(':')[ FD ]
