Line_20 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)-->Line_21 $$ if (shortcutsText.length() > 0) [ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_8 $$ Document document = editor.getDocument()[ FD ]
Line_18 $$ if (newModel.isForward()) -->Line_36 $$ position = HintManager.ABOVE[ CD ]
Line_19 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_NEXT : IdeActions.ACTION_FIND_PREVIOUS)-->Line_29 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)[ FD ]
Line_8 $$ Document document = editor.getDocument()-->Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))[ FD ]
Line_3 $$ String message = FindBundle.message("find.search.string.not.found.message", stringToFind)-->Line_31 $$ message = FindBundle.message("find.search.again.from.bottom.hotkey.message", message, shortcutsText)[ FD ]
Line_18 $$ if (newModel.isForward()) -->Line_35 $$ editor.putUserData(KEY, Direction.UP)[ CD ]
Line_7 $$ FindManager findManager = FindManager.getInstance(project)-->Line_15 $$ modelForNextSearch = findManager.getFindInFileModel()[ FD ]
Line_5 $$ if (model.isGlobal()) -->Line_45 $$ editor.getCaretModel().addCaretListener(listener)[ CD ]
Line_6 $$ final FindModel newModel = model.clone()-->Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))[ FD ]
Line_22 $$ message = FindBundle.message("find.search.again.from.top.hotkey.message", message, shortcutsText)-->Line_47 $$ JComponent component = HintUtil.createInformationLabel(JDOMUtil.escapeText(message, false, false))[ FD ]
Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))-->Line_11 $$ result = null[ FD ]
Line_10 $$ if (!result.isStringFound()) -->Line_11 $$ result = null[ CD ]
Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))-->Line_17 $$ if (result != null) [ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_42 $$ editor.getCaretModel().removeCaretListener(this)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_47 $$ JComponent component = HintUtil.createInformationLabel(JDOMUtil.escapeText(message, false, false))[ CD ]
Line_3 $$ String message = FindBundle.message("find.search.string.not.found.message", stringToFind)-->Line_47 $$ JComponent component = HintUtil.createInformationLabel(JDOMUtil.escapeText(message, false, false))[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_6 $$ final FindModel newModel = model.clone()[ FD ]
Line_3 $$ String message = FindBundle.message("find.search.string.not.found.message", stringToFind)-->Line_22 $$ message = FindBundle.message("find.search.again.from.top.hotkey.message", message, shortcutsText)[ FD ]
Line_13 $$ FindModel modelForNextSearch = findManager.getFindNextModel(editor)-->Line_28 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_PREVIOUS : IdeActions.ACTION_FIND_NEXT)[ FD ]
Line_20 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)-->Line_31 $$ message = FindBundle.message("find.search.again.from.bottom.hotkey.message", message, shortcutsText)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_49 $$ HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, position, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING, 0, false)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_5 $$ if (model.isGlobal()) [ CD ]
Line_24 $$ message = FindBundle.message("find.search.again.from.top.action.message", message)-->Line_31 $$ message = FindBundle.message("find.search.again.from.bottom.hotkey.message", message, shortcutsText)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_41 $$ editor.putUserData(KEY, null)[ FD ]
Line_5 $$ if (model.isGlobal()) -->Line_14 $$ if (modelForNextSearch == null) [ CD ]
Line_18 $$ if (newModel.isForward()) -->Line_26 $$ editor.putUserData(KEY, Direction.DOWN)[ CD ]
Line_15 $$ modelForNextSearch = findManager.getFindInFileModel()-->Line_19 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_NEXT : IdeActions.ACTION_FIND_PREVIOUS)[ FD ]
Line_31 $$ message = FindBundle.message("find.search.again.from.bottom.hotkey.message", message, shortcutsText)-->Line_33 $$ message = FindBundle.message("find.search.again.from.bottom.action.message", message)[ FD ]
Line_4 $$ short position = HintManager.UNDER-->Line_36 $$ position = HintManager.ABOVE[ FD ]
Line_24 $$ message = FindBundle.message("find.search.again.from.top.action.message", message)-->Line_47 $$ JComponent component = HintUtil.createInformationLabel(JDOMUtil.escapeText(message, false, false))[ FD ]
Line_5 $$ if (model.isGlobal()) -->Line_13 $$ FindModel modelForNextSearch = findManager.getFindNextModel(editor)[ CD ]
Line_21 $$ if (shortcutsText.length() > 0) -->Line_24 $$ message = FindBundle.message("find.search.again.from.top.action.message", message)[ CD ]
Line_22 $$ message = FindBundle.message("find.search.again.from.top.hotkey.message", message, shortcutsText)-->Line_33 $$ message = FindBundle.message("find.search.again.from.bottom.action.message", message)[ FD ]
Line_39 $$ CaretListener listener = new CaretAdapter() -->Line_41 $$ editor.putUserData(KEY, null)[ CD ]
Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))-->Line_10 $$ if (!result.isStringFound()) [ FD ]
Line_30 $$ if (shortcutsText.length() > 0) -->Line_31 $$ message = FindBundle.message("find.search.again.from.bottom.hotkey.message", message, shortcutsText)[ CD ]
Line_33 $$ message = FindBundle.message("find.search.again.from.bottom.action.message", message)-->Line_47 $$ JComponent component = HintUtil.createInformationLabel(JDOMUtil.escapeText(message, false, false))[ FD ]
Line_5 $$ if (model.isGlobal()) -->Line_8 $$ Document document = editor.getDocument()[ CD ]
Line_13 $$ FindModel modelForNextSearch = findManager.getFindNextModel(editor)-->Line_14 $$ if (modelForNextSearch == null) [ FD ]
Line_18 $$ if (newModel.isForward()) -->Line_28 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_PREVIOUS : IdeActions.ACTION_FIND_NEXT)[ CD ]
Line_5 $$ if (model.isGlobal()) -->Line_6 $$ final FindModel newModel = model.clone()[ CD ]
Line_22 $$ message = FindBundle.message("find.search.again.from.top.hotkey.message", message, shortcutsText)-->Line_31 $$ message = FindBundle.message("find.search.again.from.bottom.hotkey.message", message, shortcutsText)[ FD ]
Line_7 $$ FindManager findManager = FindManager.getInstance(project)-->Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))[ FD ]
Line_18 $$ if (newModel.isForward()) -->Line_29 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)[ CD ]
Line_5 $$ if (model.isGlobal()) -->Line_39 $$ CaretListener listener = new CaretAdapter() [ CD ]
Line_39 $$ CaretListener listener = new CaretAdapter() -->Line_42 $$ editor.getCaretModel().removeCaretListener(this)[ CD ]
Line_18 $$ if (newModel.isForward()) -->Line_30 $$ if (shortcutsText.length() > 0) [ CD ]
Line_3 $$ String message = FindBundle.message("find.search.string.not.found.message", stringToFind)-->Line_24 $$ message = FindBundle.message("find.search.again.from.top.action.message", message)[ FD ]
Line_31 $$ message = FindBundle.message("find.search.again.from.bottom.hotkey.message", message, shortcutsText)-->Line_47 $$ JComponent component = HintUtil.createInformationLabel(JDOMUtil.escapeText(message, false, false))[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_49 $$ HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, position, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING, 0, false)[ CD ]
Line_4 $$ short position = HintManager.UNDER-->Line_49 $$ HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, position, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING, 0, false)[ FD ]
Line_5 $$ if (model.isGlobal()) -->Line_17 $$ if (result != null) [ CD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_3 $$ String message = FindBundle.message("find.search.string.not.found.message", stringToFind)[ FD ]
Line_19 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_NEXT : IdeActions.ACTION_FIND_PREVIOUS)-->Line_20 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)[ FD ]
Line_6 $$ final FindModel newModel = model.clone()-->Line_18 $$ if (newModel.isForward()) [ FD ]
Line_22 $$ message = FindBundle.message("find.search.again.from.top.hotkey.message", message, shortcutsText)-->Line_24 $$ message = FindBundle.message("find.search.again.from.top.action.message", message)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_13 $$ FindModel modelForNextSearch = findManager.getFindNextModel(editor)[ FD ]
Line_5 $$ if (model.isGlobal()) -->Line_7 $$ FindManager findManager = FindManager.getInstance(project)[ CD ]
Line_18 $$ if (newModel.isForward()) -->Line_19 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_NEXT : IdeActions.ACTION_FIND_PREVIOUS)[ CD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_35 $$ editor.putUserData(KEY, Direction.UP)[ FD ]
Line_5 $$ if (model.isGlobal()) -->Line_10 $$ if (!result.isStringFound()) [ CD ]
Line_13 $$ FindModel modelForNextSearch = findManager.getFindNextModel(editor)-->Line_15 $$ modelForNextSearch = findManager.getFindInFileModel()[ FD ]
Line_3 $$ String message = FindBundle.message("find.search.string.not.found.message", stringToFind)-->Line_33 $$ message = FindBundle.message("find.search.again.from.bottom.action.message", message)[ FD ]
Line_7 $$ FindManager findManager = FindManager.getInstance(project)-->Line_13 $$ FindModel modelForNextSearch = findManager.getFindNextModel(editor)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_7 $$ FindManager findManager = FindManager.getInstance(project)[ FD ]
Line_21 $$ if (shortcutsText.length() > 0) -->Line_22 $$ message = FindBundle.message("find.search.again.from.top.hotkey.message", message, shortcutsText)[ CD ]
Line_5 $$ if (model.isGlobal()) -->Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))[ CD ]
Line_20 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)-->Line_30 $$ if (shortcutsText.length() > 0) [ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_3 $$ String message = FindBundle.message("find.search.string.not.found.message", stringToFind)[ CD ]
Line_24 $$ message = FindBundle.message("find.search.again.from.top.action.message", message)-->Line_33 $$ message = FindBundle.message("find.search.again.from.bottom.action.message", message)[ FD ]
Line_13 $$ FindModel modelForNextSearch = findManager.getFindNextModel(editor)-->Line_19 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_NEXT : IdeActions.ACTION_FIND_PREVIOUS)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_26 $$ editor.putUserData(KEY, Direction.DOWN)[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_4 $$ short position = HintManager.UNDER[ CD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_9 $$ FindResult result = findManager.findString(document.getCharsSequence(), newModel.isForward() ? 0 : document.getTextLength(), model, getVirtualFile(editor))[ FD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_45 $$ editor.getCaretModel().addCaretListener(listener)[ FD ]
Line_18 $$ if (newModel.isForward()) -->Line_21 $$ if (shortcutsText.length() > 0) [ CD ]
Line_39 $$ CaretListener listener = new CaretAdapter() -->Line_45 $$ editor.getCaretModel().addCaretListener(listener)[ FD ]
Line_14 $$ if (modelForNextSearch == null) -->Line_15 $$ modelForNextSearch = findManager.getFindInFileModel()[ CD ]
Line_17 $$ if (result != null) -->Line_18 $$ if (newModel.isForward()) [ CD ]
Line_36 $$ position = HintManager.ABOVE-->Line_49 $$ HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, position, HintManager.HIDE_BY_ANY_KEY | HintManager.HIDE_BY_TEXT_CHANGE | HintManager.HIDE_BY_SCROLLING, 0, false)[ FD ]
Line_18 $$ if (newModel.isForward()) -->Line_20 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)[ CD ]
Line_2 $$ public static void processNotFound(final Editor editor, String stringToFind, FindModel model, Project project) -->Line_5 $$ if (model.isGlobal()) [ FD ]
Line_20 $$ String shortcutsText = KeymapUtil.getFirstKeyboardShortcutText(action)-->Line_22 $$ message = FindBundle.message("find.search.again.from.top.hotkey.message", message, shortcutsText)[ FD ]
Line_15 $$ modelForNextSearch = findManager.getFindInFileModel()-->Line_28 $$ AnAction action = ActionManager.getInstance().getAction(modelForNextSearch.isForward() ? IdeActions.ACTION_FIND_PREVIOUS : IdeActions.ACTION_FIND_NEXT)[ FD ]
Line_30 $$ if (shortcutsText.length() > 0) -->Line_33 $$ message = FindBundle.message("find.search.again.from.bottom.action.message", message)[ CD ]
Line_11 $$ result = null-->Line_17 $$ if (result != null) [ FD ]
