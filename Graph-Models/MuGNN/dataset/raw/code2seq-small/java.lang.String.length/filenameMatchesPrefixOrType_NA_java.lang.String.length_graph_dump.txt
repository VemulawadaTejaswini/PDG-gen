Line_3 $$ final boolean prefixMatched = prefix.length() == 0 || StringUtil.startsWithIgnoreCase(fileName, prefix)-->Line_4 $$ if (prefixMatched && (suitableFileTypes.length == 0 || invocationCount > 2))[ FD ]
Line_2 $$ private static boolean filenameMatchesPrefixOrType(final String fileName, final String prefix, final FileType[] suitableFileTypes, final int invocationCount) -->Line_4 $$ if (prefixMatched && (suitableFileTypes.length == 0 || invocationCount > 2))[ CD ]
Line_2 $$ private static boolean filenameMatchesPrefixOrType(final String fileName, final String prefix, final FileType[] suitableFileTypes, final int invocationCount) -->Line_7 $$ final String extension = FileUtilRt.getExtension(fileName)[ FD ]
Line_2 $$ private static boolean filenameMatchesPrefixOrType(final String fileName, final String prefix, final FileType[] suitableFileTypes, final int invocationCount) -->Line_3 $$ final boolean prefixMatched = prefix.length() == 0 || StringUtil.startsWithIgnoreCase(fileName, prefix)[ CD ]
Line_2 $$ private static boolean filenameMatchesPrefixOrType(final String fileName, final String prefix, final FileType[] suitableFileTypes, final int invocationCount) -->Line_3 $$ final boolean prefixMatched = prefix.length() == 0 || StringUtil.startsWithIgnoreCase(fileName, prefix)[ FD ]
Line_7 $$ final String extension = FileUtilRt.getExtension(fileName)-->Line_8 $$ if (extension.length() == 0)[ FD ]
Line_10 $$ for (final FileType fileType : suitableFileTypes) -->Line_11 $$ for (final FileNameMatcher matcher : FileTypeManager.getInstance().getAssociations(fileType)) [ FD ]
Line_2 $$ private static boolean filenameMatchesPrefixOrType(final String fileName, final String prefix, final FileType[] suitableFileTypes, final int invocationCount) -->Line_12 $$ if (FileNameMatcherEx.acceptsCharSequence(matcher, fileName))[ FD ]
Line_12 $$ if (FileNameMatcherEx.acceptsCharSequence(matcher, fileName))-->Line_13 $$ return true[ CD ]
Line_2 $$ private static boolean filenameMatchesPrefixOrType(final String fileName, final String prefix, final FileType[] suitableFileTypes, final int invocationCount) -->Line_6 $$ if (prefixMatched) [ CD ]
Line_6 $$ if (prefixMatched) -->Line_8 $$ if (extension.length() == 0)[ CD ]
Line_11 $$ for (final FileNameMatcher matcher : FileTypeManager.getInstance().getAssociations(fileType)) -->Line_12 $$ if (FileNameMatcherEx.acceptsCharSequence(matcher, fileName))[ FD ]
Line_8 $$ if (extension.length() == 0)-->Line_9 $$ return false[ CD ]
Line_4 $$ if (prefixMatched && (suitableFileTypes.length == 0 || invocationCount > 2))-->Line_5 $$ return true[ CD ]
Line_6 $$ if (prefixMatched) -->Line_7 $$ final String extension = FileUtilRt.getExtension(fileName)[ CD ]
Line_2 $$ private static boolean filenameMatchesPrefixOrType(final String fileName, final String prefix, final FileType[] suitableFileTypes, final int invocationCount) -->Line_17 $$ return false[ CD ]
