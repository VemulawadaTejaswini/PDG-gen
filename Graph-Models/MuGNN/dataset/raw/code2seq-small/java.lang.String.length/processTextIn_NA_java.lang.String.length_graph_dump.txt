Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_9 $$ if (!ignoreReferences && referenceAt != null && (referenceAt.resolve() != null || referenceAt instanceof PsiPolyVariantReference && ((PsiPolyVariantReference) referenceAt).multiResolve(true).length > 0))[ FD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_25 $$ TextRange textRange = new TextRange(offset, offset + stringToSearch.length())[ FD ]
Line_12 $$ char c = text.charAt(offset - 1)-->Line_13 $$ if (Character.isJavaIdentifierPart(c) && c != '$') [ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_11 $$ if (offset > 0) [ FD ]
Line_11 $$ if (offset > 0) -->Line_12 $$ char c = text.charAt(offset - 1)[ CD ]
Line_29 $$ offset += stringToSearch.length()-->Line_11 $$ if (offset > 0) [ FD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_3 $$ String text = scope.getText()[ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_8 $$ final PsiReference referenceAt = scope.findReferenceAt(offset)[ FD ]
Line_26 $$ if (!processor.process(scope, textRange)) -->Line_27 $$ return false[ CD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_4 $$ for (int offset = 0; offset < text.length(); offset++) [ CD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_26 $$ if (!processor.process(scope, textRange)) [ FD ]
Line_11 $$ if (offset > 0) -->Line_13 $$ if (Character.isJavaIdentifierPart(c) && c != '$') [ CD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_9 $$ if (!ignoreReferences && referenceAt != null && (referenceAt.resolve() != null || referenceAt instanceof PsiPolyVariantReference && ((PsiPolyVariantReference) referenceAt).multiResolve(true).length > 0))[ CD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_29 $$ offset += stringToSearch.length()[ FD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_8 $$ final PsiReference referenceAt = scope.findReferenceAt(offset)[ FD ]
Line_5 $$ offset = text.indexOf(stringToSearch, offset)-->Line_6 $$ if (offset < 0)[ FD ]
Line_19 $$ if (offset + stringToSearch.length() < text.length()) -->Line_21 $$ if (Character.isJavaIdentifierPart(c) && c != '$') [ CD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_29 $$ offset += stringToSearch.length()[ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_5 $$ offset = text.indexOf(stringToSearch, offset)[ CD ]
Line_29 $$ offset += stringToSearch.length()-->Line_5 $$ offset = text.indexOf(stringToSearch, offset)[ FD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_20 $$ char c = text.charAt(offset + stringToSearch.length())[ FD ]
Line_25 $$ TextRange textRange = new TextRange(offset, offset + stringToSearch.length())-->Line_26 $$ if (!processor.process(scope, textRange)) [ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_29 $$ offset += stringToSearch.length()[ CD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_6 $$ if (offset < 0)[ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_19 $$ if (offset + stringToSearch.length() < text.length()) [ CD ]
Line_8 $$ final PsiReference referenceAt = scope.findReferenceAt(offset)-->Line_9 $$ if (!ignoreReferences && referenceAt != null && (referenceAt.resolve() != null || referenceAt instanceof PsiPolyVariantReference && ((PsiPolyVariantReference) referenceAt).multiResolve(true).length > 0))[ FD ]
Line_3 $$ String text = scope.getText()-->Line_20 $$ char c = text.charAt(offset + stringToSearch.length())[ FD ]
Line_29 $$ offset += stringToSearch.length()-->Line_4 $$ for (int offset = 0; offset < text.length(); offset++) [ FD ]
Line_3 $$ String text = scope.getText()-->Line_4 $$ for (int offset = 0; offset < text.length(); offset++) [ FD ]
Line_5 $$ offset = text.indexOf(stringToSearch, offset)-->Line_29 $$ offset += stringToSearch.length()[ FD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_3 $$ String text = scope.getText()[ CD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_6 $$ if (offset < 0)[ CD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_11 $$ if (offset > 0) [ CD ]
Line_12 $$ char c = text.charAt(offset - 1)-->Line_21 $$ if (Character.isJavaIdentifierPart(c) && c != '$') [ FD ]
Line_29 $$ offset += stringToSearch.length()-->Line_6 $$ if (offset < 0)[ FD ]
Line_3 $$ String text = scope.getText()-->Line_19 $$ if (offset + stringToSearch.length() < text.length()) [ FD ]
Line_19 $$ if (offset + stringToSearch.length() < text.length()) -->Line_20 $$ char c = text.charAt(offset + stringToSearch.length())[ CD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_31 $$ return true[ CD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_8 $$ final PsiReference referenceAt = scope.findReferenceAt(offset)[ CD ]
Line_3 $$ String text = scope.getText()-->Line_12 $$ char c = text.charAt(offset - 1)[ FD ]
Line_5 $$ offset = text.indexOf(stringToSearch, offset)-->Line_4 $$ for (int offset = 0; offset < text.length(); offset++) [ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_5 $$ offset = text.indexOf(stringToSearch, offset)[ FD ]
Line_5 $$ offset = text.indexOf(stringToSearch, offset)-->Line_11 $$ if (offset > 0) [ FD ]
Line_3 $$ String text = scope.getText()-->Line_5 $$ offset = text.indexOf(stringToSearch, offset)[ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_26 $$ if (!processor.process(scope, textRange)) [ CD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_19 $$ if (offset + stringToSearch.length() < text.length()) [ FD ]
Line_4 $$ for (int offset = 0; offset < text.length(); offset++) -->Line_25 $$ TextRange textRange = new TextRange(offset, offset + stringToSearch.length())[ CD ]
Line_2 $$ private static boolean processTextIn(PsiElement scope, String stringToSearch, final boolean ignoreReferences, PairProcessor<PsiElement, TextRange> processor) -->Line_5 $$ offset = text.indexOf(stringToSearch, offset)[ FD ]
Line_5 $$ offset = text.indexOf(stringToSearch, offset)-->Line_8 $$ final PsiReference referenceAt = scope.findReferenceAt(offset)[ FD ]
Line_29 $$ offset += stringToSearch.length()-->Line_8 $$ final PsiReference referenceAt = scope.findReferenceAt(offset)[ FD ]
