Line_2 $$ public static int shiftForward(@NotNull CharSequence buffer, final int startOffset, final int endOffset, @NotNull String chars) -->Line_10 $$ if (i >= chars.length()) [ FD ]
Line_6 $$ for (i = 0; i < chars.length(); i++) -->Line_7 $$ if (c == chars.charAt(i))[ FD ]
Line_3 $$ for (int offset = startOffset, limit = Math.min(endOffset, buffer.length()); offset < limit; offset++) -->Line_4 $$ char c = buffer.charAt(offset)[ CD ]
Line_6 $$ for (i = 0; i < chars.length(); i++) -->Line_7 $$ if (c == chars.charAt(i))[ CD ]
Line_2 $$ public static int shiftForward(@NotNull CharSequence buffer, final int startOffset, final int endOffset, @NotNull String chars) -->Line_4 $$ char c = buffer.charAt(offset)[ FD ]
Line_3 $$ for (int offset = startOffset, limit = Math.min(endOffset, buffer.length()); offset < limit; offset++) -->Line_5 $$ int i[ CD ]
Line_2 $$ public static int shiftForward(@NotNull CharSequence buffer, final int startOffset, final int endOffset, @NotNull String chars) -->Line_3 $$ for (int offset = startOffset, limit = Math.min(endOffset, buffer.length()); offset < limit; offset++) [ FD ]
Line_5 $$ int i-->Line_10 $$ if (i >= chars.length()) [ FD ]
Line_5 $$ int i-->Line_6 $$ for (i = 0; i < chars.length(); i++) [ FD ]
Line_2 $$ public static int shiftForward(@NotNull CharSequence buffer, final int startOffset, final int endOffset, @NotNull String chars) -->Line_6 $$ for (i = 0; i < chars.length(); i++) [ FD ]
Line_3 $$ for (int offset = startOffset, limit = Math.min(endOffset, buffer.length()); offset < limit; offset++) -->Line_10 $$ if (i >= chars.length()) [ CD ]
Line_2 $$ public static int shiftForward(@NotNull CharSequence buffer, final int startOffset, final int endOffset, @NotNull String chars) -->Line_14 $$ return endOffset[ CD ]
Line_4 $$ char c = buffer.charAt(offset)-->Line_7 $$ if (c == chars.charAt(i))[ FD ]
Line_5 $$ int i-->Line_7 $$ if (c == chars.charAt(i))[ FD ]
Line_2 $$ public static int shiftForward(@NotNull CharSequence buffer, final int startOffset, final int endOffset, @NotNull String chars) -->Line_3 $$ for (int offset = startOffset, limit = Math.min(endOffset, buffer.length()); offset < limit; offset++) [ CD ]
Line_3 $$ for (int offset = startOffset, limit = Math.min(endOffset, buffer.length()); offset < limit; offset++) -->Line_4 $$ char c = buffer.charAt(offset)[ FD ]
Line_10 $$ if (i >= chars.length()) -->Line_11 $$ return offset[ CD ]
Line_3 $$ for (int offset = startOffset, limit = Math.min(endOffset, buffer.length()); offset < limit; offset++) -->Line_6 $$ for (i = 0; i < chars.length(); i++) [ CD ]
Line_2 $$ public static int shiftForward(@NotNull CharSequence buffer, final int startOffset, final int endOffset, @NotNull String chars) -->Line_7 $$ if (c == chars.charAt(i))[ FD ]
Line_6 $$ for (i = 0; i < chars.length(); i++) -->Line_10 $$ if (i >= chars.length()) [ FD ]
