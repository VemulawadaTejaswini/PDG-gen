Line_12 $$ final int startOffset = marker.getStartOffset()-->Line_13 $$ highlightManager.addOccurrenceHighlight(editor, startOffset, startOffset + variableNameLength, attributes, 0, highlighters, null)[ FD ]
Line_6 $$ if (variable != null) -->Line_10 $$ if (isReplaceAllOccurrences()) [ CD ]
Line_15 $$ if (getExpr() != null) -->Line_17 $$ highlightManager.addOccurrenceHighlight(editor, startOffset, startOffset + variableNameLength, attributes, 0, highlighters, null)[ CD ]
Line_5 $$ final V variable = getVariable()-->Line_6 $$ if (variable != null) [ FD ]
Line_7 $$ final String name = variable.getName()-->Line_9 $$ final int variableNameLength = name.length()[ FD ]
Line_6 $$ if (variable != null) -->Line_8 $$ LOG.assertTrue(name != null, variable)[ CD ]
Line_6 $$ if (variable != null) -->Line_7 $$ final String name = variable.getName()[ CD ]
Line_10 $$ if (isReplaceAllOccurrences()) -->Line_15 $$ if (getExpr() != null) [ CD ]
Line_20 $$ for (RangeHighlighter highlighter : highlighters) -->Line_21 $$ highlighter.setGreedyToLeft(true)[ FD ]
Line_5 $$ final V variable = getVariable()-->Line_7 $$ final String name = variable.getName()[ FD ]
Line_4 $$ final TextAttributes attributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES)-->Line_13 $$ highlightManager.addOccurrenceHighlight(editor, startOffset, startOffset + variableNameLength, attributes, 0, highlighters, null)[ FD ]
Line_15 $$ if (getExpr() != null) -->Line_16 $$ final int startOffset = getExprMarker().getStartOffset()[ CD ]
Line_11 $$ for (RangeMarker marker : getOccurrenceMarkers()) -->Line_12 $$ final int startOffset = marker.getStartOffset()[ FD ]
Line_12 $$ final int startOffset = marker.getStartOffset()-->Line_17 $$ highlightManager.addOccurrenceHighlight(editor, startOffset, startOffset + variableNameLength, attributes, 0, highlighters, null)[ FD ]
Line_4 $$ final TextAttributes attributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES)-->Line_17 $$ highlightManager.addOccurrenceHighlight(editor, startOffset, startOffset + variableNameLength, attributes, 0, highlighters, null)[ FD ]
Line_6 $$ if (variable != null) -->Line_9 $$ final int variableNameLength = name.length()[ CD ]
Line_5 $$ final V variable = getVariable()-->Line_8 $$ LOG.assertTrue(name != null, variable)[ FD ]
Line_20 $$ for (RangeHighlighter highlighter : highlighters) -->Line_22 $$ highlighter.setGreedyToRight(true)[ FD ]
