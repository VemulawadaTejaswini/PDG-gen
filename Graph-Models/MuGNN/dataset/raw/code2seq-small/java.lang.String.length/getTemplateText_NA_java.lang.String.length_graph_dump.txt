Line_2 $$ public String getTemplateText(final PsiFile psiFile, String fileText, String nameWithoutExtension) -->Line_3 $$ if (psiFile instanceof PsiJavaFile) [ CD ]
Line_2 $$ public String getTemplateText(final PsiFile psiFile, String fileText, String nameWithoutExtension) -->Line_20 $$ return StringUtil.replace(fileText, nameWithoutExtension, "$[ FD ]
Line_2 $$ public String getTemplateText(final PsiFile psiFile, String fileText, String nameWithoutExtension) -->Line_7 $$ fileText = StringUtil.replace(fileText, packageName, "$[ FD ]
Line_14 $$ psiClass = aClass-->Line_19 $$ if (psiClass != null) [ FD ]
Line_4 $$ PsiJavaFile javaFile = (PsiJavaFile) psiFile-->Line_5 $$ String packageName = javaFile.getPackageName()[ FD ]
Line_3 $$ if (psiFile instanceof PsiJavaFile) -->Line_4 $$ PsiJavaFile javaFile = (PsiJavaFile) psiFile[ CD ]
Line_12 $$ for (PsiClass aClass : classes) -->Line_14 $$ psiClass = aClass[ FD ]
Line_10 $$ PsiClass psiClass = null-->Line_19 $$ if (psiClass != null) [ FD ]
Line_13 $$ if (nameWithoutExtension.equals(aClass.getName())) -->Line_14 $$ psiClass = aClass[ CD ]
Line_3 $$ if (psiFile instanceof PsiJavaFile) -->Line_6 $$ if (packageName.length() > 0) [ CD ]
Line_3 $$ if (psiFile instanceof PsiJavaFile) -->Line_10 $$ PsiClass psiClass = null[ CD ]
Line_12 $$ for (PsiClass aClass : classes) -->Line_13 $$ if (nameWithoutExtension.equals(aClass.getName())) [ FD ]
Line_2 $$ public String getTemplateText(final PsiFile psiFile, String fileText, String nameWithoutExtension) -->Line_13 $$ if (nameWithoutExtension.equals(aClass.getName())) [ FD ]
Line_3 $$ if (psiFile instanceof PsiJavaFile) -->Line_9 $$ PsiClass[] classes = javaFile.getClasses()[ CD ]
Line_3 $$ if (psiFile instanceof PsiJavaFile) -->Line_5 $$ String packageName = javaFile.getPackageName()[ CD ]
Line_19 $$ if (psiClass != null) -->Line_20 $$ return StringUtil.replace(fileText, nameWithoutExtension, "$[ CD ]
Line_7 $$ fileText = StringUtil.replace(fileText, packageName, "$-->Line_20 $$ return StringUtil.replace(fileText, nameWithoutExtension, "$[ FD ]
Line_5 $$ String packageName = javaFile.getPackageName()-->Line_7 $$ fileText = StringUtil.replace(fileText, packageName, "$[ FD ]
Line_2 $$ public String getTemplateText(final PsiFile psiFile, String fileText, String nameWithoutExtension) -->Line_23 $$ return null[ CD ]
Line_4 $$ PsiJavaFile javaFile = (PsiJavaFile) psiFile-->Line_9 $$ PsiClass[] classes = javaFile.getClasses()[ FD ]
Line_5 $$ String packageName = javaFile.getPackageName()-->Line_6 $$ if (packageName.length() > 0) [ FD ]
Line_6 $$ if (packageName.length() > 0) -->Line_7 $$ fileText = StringUtil.replace(fileText, packageName, "$[ CD ]
Line_10 $$ PsiClass psiClass = null-->Line_14 $$ psiClass = aClass[ FD ]
Line_2 $$ public String getTemplateText(final PsiFile psiFile, String fileText, String nameWithoutExtension) -->Line_3 $$ if (psiFile instanceof PsiJavaFile) [ FD ]
Line_3 $$ if (psiFile instanceof PsiJavaFile) -->Line_11 $$ if ((classes.length > 0)) [ CD ]
Line_3 $$ if (psiFile instanceof PsiJavaFile) -->Line_19 $$ if (psiClass != null) [ CD ]
