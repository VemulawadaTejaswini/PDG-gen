Line_2 $$ protected void parseOwnerGroup(String ownerStr) -->Line_7 $$ owner = matcher.group(1)[ CD ]
Line_2 $$ protected void parseOwnerGroup(String ownerStr) -->Line_4 $$ if (!matcher.matches()) [ CD ]
Line_2 $$ protected void parseOwnerGroup(String ownerStr) -->Line_3 $$ Matcher matcher = chownPattern.matcher(ownerStr)[ FD ]
Line_2 $$ protected void parseOwnerGroup(String ownerStr) -->Line_12 $$ if (owner == null && group == null) [ CD ]
Line_3 $$ Matcher matcher = chownPattern.matcher(ownerStr)-->Line_7 $$ owner = matcher.group(1)[ FD ]
Line_3 $$ Matcher matcher = chownPattern.matcher(ownerStr)-->Line_8 $$ group = matcher.group(3)[ FD ]
Line_2 $$ protected void parseOwnerGroup(String ownerStr) -->Line_3 $$ Matcher matcher = chownPattern.matcher(ownerStr)[ CD ]
Line_2 $$ protected void parseOwnerGroup(String ownerStr) -->Line_9 $$ if (group != null && group.length() == 0) [ CD ]
Line_2 $$ protected void parseOwnerGroup(String ownerStr) -->Line_8 $$ group = matcher.group(3)[ CD ]
Line_3 $$ Matcher matcher = chownPattern.matcher(ownerStr)-->Line_4 $$ if (!matcher.matches()) [ FD ]
