Line_29 $$ final Matcher matcher = ourPattern.matcher(suffix)-->Line_31 $$ extractUserNameAndPassword(matcher, result)[ FD ]
Line_21 $$ final String suffix = result.extractMethod(rootString, check)-->Line_42 $$ result.REPOSITORY = suffix[ FD ]
Line_21 $$ final String suffix = result.extractMethod(rootString, check)-->Line_38 $$ result.REPOSITORY = suffix[ FD ]
Line_5 $$ if (rootString.isEmpty()) -->Line_11 $$ if (!StringUtil.startsWithChar(rootString, ':')) [ CD ]
Line_16 $$ if (rootString.startsWith(LOCAL)) -->Line_17 $$ result.METHOD = CvsMethod.LOCAL_METHOD[ CD ]
Line_16 $$ if (rootString.startsWith(LOCAL)) -->Line_18 $$ result.REPOSITORY = rootString.substring(LOCAL.length())[ CD ]
Line_4 $$ final CvsRootParser result = new CvsRootParser()-->Line_33 $$ extractRepository(matcher, result)[ FD ]
Line_22 $$ if (CvsMethod.LOCAL_METHOD.equals(result.METHOD)) -->Line_26 $$ if (result.HOST != null && !result.HOST.isEmpty() && result.USER_NAME != null && !result.USER_NAME.isEmpty()) [ CD ]
Line_28 $$ if (suffix.contains("@") || suffix.contains(":")) -->Line_30 $$ if (matcher.matches()) [ CD ]
Line_11 $$ if (!StringUtil.startsWithChar(rootString, ':')) -->Line_14 $$ return result[ CD ]
Line_35 $$ if (check) -->Line_38 $$ result.REPOSITORY = suffix[ CD ]
Line_21 $$ final String suffix = result.extractMethod(rootString, check)-->Line_28 $$ if (suffix.contains("@") || suffix.contains(":")) [ FD ]
Line_4 $$ final CvsRootParser result = new CvsRootParser()-->Line_21 $$ final String suffix = result.extractMethod(rootString, check)[ FD ]
Line_26 $$ if (result.HOST != null && !result.HOST.isEmpty() && result.USER_NAME != null && !result.USER_NAME.isEmpty()) -->Line_27 $$ result.REPOSITORY = suffix.trim()[ CD ]
Line_29 $$ final Matcher matcher = ourPattern.matcher(suffix)-->Line_30 $$ if (matcher.matches()) [ FD ]
Line_21 $$ final String suffix = result.extractMethod(rootString, check)-->Line_27 $$ result.REPOSITORY = suffix.trim()[ FD ]
Line_26 $$ if (result.HOST != null && !result.HOST.isEmpty() && result.USER_NAME != null && !result.USER_NAME.isEmpty()) -->Line_28 $$ if (suffix.contains("@") || suffix.contains(":")) [ CD ]
Line_22 $$ if (CvsMethod.LOCAL_METHOD.equals(result.METHOD)) -->Line_23 $$ result.REPOSITORY = suffix[ CD ]
Line_30 $$ if (matcher.matches()) -->Line_31 $$ extractUserNameAndPassword(matcher, result)[ CD ]
Line_5 $$ if (rootString.isEmpty()) -->Line_10 $$ return result[ CD ]
Line_4 $$ final CvsRootParser result = new CvsRootParser()-->Line_31 $$ extractUserNameAndPassword(matcher, result)[ FD ]
Line_16 $$ if (rootString.startsWith(LOCAL)) -->Line_19 $$ return result[ CD ]
Line_5 $$ if (rootString.isEmpty()) -->Line_6 $$ if (check) [ CD ]
Line_21 $$ final String suffix = result.extractMethod(rootString, check)-->Line_23 $$ result.REPOSITORY = suffix[ FD ]
Line_4 $$ final CvsRootParser result = new CvsRootParser()-->Line_24 $$ skipTrailingRepositorySlash(result)[ FD ]
Line_28 $$ if (suffix.contains("@") || suffix.contains(":")) -->Line_29 $$ final Matcher matcher = ourPattern.matcher(suffix)[ CD ]
Line_4 $$ final CvsRootParser result = new CvsRootParser()-->Line_32 $$ extractHostAndPort(matcher, result)[ FD ]
Line_30 $$ if (matcher.matches()) -->Line_32 $$ extractHostAndPort(matcher, result)[ CD ]
Line_29 $$ final Matcher matcher = ourPattern.matcher(suffix)-->Line_33 $$ extractRepository(matcher, result)[ FD ]
Line_29 $$ final Matcher matcher = ourPattern.matcher(suffix)-->Line_32 $$ extractHostAndPort(matcher, result)[ FD ]
Line_21 $$ final String suffix = result.extractMethod(rootString, check)-->Line_29 $$ final Matcher matcher = ourPattern.matcher(suffix)[ FD ]
Line_28 $$ if (suffix.contains("@") || suffix.contains(":")) -->Line_42 $$ result.REPOSITORY = suffix[ CD ]
Line_30 $$ if (matcher.matches()) -->Line_33 $$ extractRepository(matcher, result)[ CD ]
Line_22 $$ if (CvsMethod.LOCAL_METHOD.equals(result.METHOD)) -->Line_24 $$ skipTrailingRepositorySlash(result)[ CD ]
Line_30 $$ if (matcher.matches()) -->Line_35 $$ if (check) [ CD ]
Line_5 $$ if (rootString.isEmpty()) -->Line_9 $$ result.METHOD = CvsMethod.PSERVER_METHOD[ CD ]
Line_11 $$ if (!StringUtil.startsWithChar(rootString, ':')) -->Line_12 $$ result.METHOD = CvsMethod.LOCAL_METHOD[ CD ]
Line_11 $$ if (!StringUtil.startsWithChar(rootString, ':')) -->Line_13 $$ result.REPOSITORY = rootString[ CD ]
