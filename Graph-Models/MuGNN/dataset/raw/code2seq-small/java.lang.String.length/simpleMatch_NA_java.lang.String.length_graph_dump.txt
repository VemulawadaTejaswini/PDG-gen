Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_8 $$ return pattern.equals(str)[ FD ]
Line_11 $$ if (pattern.length() == 1) -->Line_12 $$ return true[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_16 $$ return str.endsWith(pattern.substring(1))[ FD ]
Line_15 $$ if (nextIndex == -1) -->Line_17 $$ if (nextIndex == 1) [ CD ]
Line_10 $$ if (firstIndex == 0) -->Line_20 $$ String part = pattern.substring(1, nextIndex)[ CD ]
Line_21 $$ int partIndex = str.indexOf(part)-->Line_26 $$ partIndex = str.indexOf(part, partIndex + 1)[ FD ]
Line_10 $$ if (firstIndex == 0) -->Line_28 $$ return false[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_18 $$ return simpleMatch(pattern.substring(1), str)[ FD ]
Line_14 $$ int nextIndex = pattern.indexOf('*', firstIndex + 1)-->Line_17 $$ if (nextIndex == 1) [ FD ]
Line_10 $$ if (firstIndex == 0) -->Line_22 $$ while (partIndex != -1) [ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_10 $$ if (firstIndex == 0) [ CD ]
Line_7 $$ if (firstIndex == -1) -->Line_8 $$ return pattern.equals(str)[ CD ]
Line_26 $$ partIndex = str.indexOf(part, partIndex + 1)-->Line_22 $$ while (partIndex != -1) [ FD ]
Line_14 $$ int nextIndex = pattern.indexOf('*', firstIndex + 1)-->Line_23 $$ if (simpleMatch(pattern.substring(nextIndex), str.substring(partIndex + part.length()))) [ FD ]
Line_10 $$ if (firstIndex == 0) -->Line_15 $$ if (nextIndex == -1) [ CD ]
Line_10 $$ if (firstIndex == 0) -->Line_11 $$ if (pattern.length() == 1) [ CD ]
Line_23 $$ if (simpleMatch(pattern.substring(nextIndex), str.substring(partIndex + part.length()))) -->Line_24 $$ return true[ CD ]
Line_17 $$ if (nextIndex == 1) -->Line_18 $$ return simpleMatch(pattern.substring(1), str)[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_21 $$ int partIndex = str.indexOf(part)[ FD ]
Line_22 $$ while (partIndex != -1) -->Line_23 $$ if (simpleMatch(pattern.substring(nextIndex), str.substring(partIndex + part.length()))) [ CD ]
Line_22 $$ while (partIndex != -1) -->Line_26 $$ partIndex = str.indexOf(part, partIndex + 1)[ CD ]
Line_6 $$ int firstIndex = pattern.indexOf('*')-->Line_30 $$ return (str.length() >= firstIndex && pattern.substring(0, firstIndex).equals(str.substring(0, firstIndex)) && simpleMatch(pattern.substring(firstIndex), str.substring(firstIndex)))[ FD ]
Line_3 $$ if (pattern == null || str == null) -->Line_4 $$ return false[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_23 $$ if (simpleMatch(pattern.substring(nextIndex), str.substring(partIndex + part.length()))) [ FD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_7 $$ if (firstIndex == -1) [ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_3 $$ if (pattern == null || str == null) [ CD ]
Line_14 $$ int nextIndex = pattern.indexOf('*', firstIndex + 1)-->Line_15 $$ if (nextIndex == -1) [ FD ]
Line_20 $$ String part = pattern.substring(1, nextIndex)-->Line_21 $$ int partIndex = str.indexOf(part)[ FD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_30 $$ return (str.length() >= firstIndex && pattern.substring(0, firstIndex).equals(str.substring(0, firstIndex)) && simpleMatch(pattern.substring(firstIndex), str.substring(firstIndex)))[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_14 $$ int nextIndex = pattern.indexOf('*', firstIndex + 1)[ FD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_30 $$ return (str.length() >= firstIndex && pattern.substring(0, firstIndex).equals(str.substring(0, firstIndex)) && simpleMatch(pattern.substring(firstIndex), str.substring(firstIndex)))[ FD ]
Line_15 $$ if (nextIndex == -1) -->Line_16 $$ return str.endsWith(pattern.substring(1))[ CD ]
Line_10 $$ if (firstIndex == 0) -->Line_14 $$ int nextIndex = pattern.indexOf('*', firstIndex + 1)[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_26 $$ partIndex = str.indexOf(part, partIndex + 1)[ FD ]
Line_20 $$ String part = pattern.substring(1, nextIndex)-->Line_23 $$ if (simpleMatch(pattern.substring(nextIndex), str.substring(partIndex + part.length()))) [ FD ]
Line_14 $$ int nextIndex = pattern.indexOf('*', firstIndex + 1)-->Line_20 $$ String part = pattern.substring(1, nextIndex)[ FD ]
Line_21 $$ int partIndex = str.indexOf(part)-->Line_22 $$ while (partIndex != -1) [ FD ]
Line_6 $$ int firstIndex = pattern.indexOf('*')-->Line_10 $$ if (firstIndex == 0) [ FD ]
Line_10 $$ if (firstIndex == 0) -->Line_21 $$ int partIndex = str.indexOf(part)[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_11 $$ if (pattern.length() == 1) [ FD ]
Line_6 $$ int firstIndex = pattern.indexOf('*')-->Line_7 $$ if (firstIndex == -1) [ FD ]
Line_20 $$ String part = pattern.substring(1, nextIndex)-->Line_26 $$ partIndex = str.indexOf(part, partIndex + 1)[ FD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_6 $$ int firstIndex = pattern.indexOf('*')[ FD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_6 $$ int firstIndex = pattern.indexOf('*')[ CD ]
Line_2 $$ public static boolean simpleMatch(String pattern, String str) -->Line_20 $$ String part = pattern.substring(1, nextIndex)[ FD ]
