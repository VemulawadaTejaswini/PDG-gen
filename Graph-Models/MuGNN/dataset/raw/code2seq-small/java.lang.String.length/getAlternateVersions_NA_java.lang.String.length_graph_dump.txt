Line_12 $$ if (tempQueryBuilder.mustNot().size() > 0) -->Line_15 $$ expectedQuery.mustNot(mustNot)[ CD ]
Line_7 $$ if (tempQueryBuilder.must().size() > 0) -->Line_8 $$ QueryBuilder must = tempQueryBuilder.must().get(0)[ CD ]
Line_9 $$ contentString += "must: " + must.toString() + ","-->Line_24 $$ contentString += "filter: " + filter.toString() + ","[ FD ]
Line_3 $$ Map<String, BoolQueryBuilder> alternateVersions = new HashMap()-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_18 $$ QueryBuilder should = tempQueryBuilder.should().get(0)-->Line_20 $$ expectedQuery.should(should)[ FD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_13 $$ QueryBuilder mustNot = tempQueryBuilder.mustNot().get(0)[ FD ]
Line_6 $$ String contentString = "-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_5 $$ BoolQueryBuilder expectedQuery = new BoolQueryBuilder()-->Line_15 $$ expectedQuery.mustNot(mustNot)[ FD ]
Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_7 $$ if (tempQueryBuilder.must().size() > 0) [ FD ]
Line_5 $$ BoolQueryBuilder expectedQuery = new BoolQueryBuilder()-->Line_10 $$ expectedQuery.must(must)[ FD ]
Line_9 $$ contentString += "must: " + must.toString() + ","-->Line_19 $$ contentString += "should: " + should.toString() + ","[ FD ]
Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","-->Line_24 $$ contentString += "filter: " + filter.toString() + ","[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_22 $$ if (tempQueryBuilder.filter().size() > 0) [ CD ]
Line_8 $$ QueryBuilder must = tempQueryBuilder.must().get(0)-->Line_10 $$ expectedQuery.must(must)[ FD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_17 $$ if (tempQueryBuilder.should().size() > 0) [ FD ]
Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","-->Line_28 $$ contentString += "    }    \n" + "}"[ FD ]
Line_5 $$ BoolQueryBuilder expectedQuery = new BoolQueryBuilder()-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_24 $$ contentString += "filter: " + filter.toString() + ","-->Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)[ FD ]
Line_13 $$ QueryBuilder mustNot = tempQueryBuilder.mustNot().get(0)-->Line_15 $$ expectedQuery.mustNot(mustNot)[ FD ]
Line_24 $$ contentString += "filter: " + filter.toString() + ","-->Line_28 $$ contentString += "    }    \n" + "}"[ FD ]
Line_6 $$ String contentString = "-->Line_28 $$ contentString += "    }    \n" + "}"[ FD ]
Line_9 $$ contentString += "must: " + must.toString() + ","-->Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","[ FD ]
Line_23 $$ QueryBuilder filter = tempQueryBuilder.filter().get(0)-->Line_24 $$ contentString += "filter: " + filter.toString() + ","[ FD ]
Line_9 $$ contentString += "must: " + must.toString() + ","-->Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)[ FD ]
Line_7 $$ if (tempQueryBuilder.must().size() > 0) -->Line_9 $$ contentString += "must: " + must.toString() + ","[ CD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_18 $$ QueryBuilder should = tempQueryBuilder.should().get(0)[ FD ]
Line_6 $$ String contentString = "-->Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_28 $$ contentString += "    }    \n" + "}"[ CD ]
Line_6 $$ String contentString = "-->Line_24 $$ contentString += "filter: " + filter.toString() + ","[ FD ]
Line_23 $$ QueryBuilder filter = tempQueryBuilder.filter().get(0)-->Line_25 $$ expectedQuery.filter(filter)[ FD ]
Line_19 $$ contentString += "should: " + should.toString() + ","-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_7 $$ if (tempQueryBuilder.must().size() > 0) [ CD ]
Line_24 $$ contentString += "filter: " + filter.toString() + ","-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_19 $$ contentString += "should: " + should.toString() + ","-->Line_28 $$ contentString += "    }    \n" + "}"[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_3 $$ Map<String, BoolQueryBuilder> alternateVersions = new HashMap()[ CD ]
Line_5 $$ BoolQueryBuilder expectedQuery = new BoolQueryBuilder()-->Line_25 $$ expectedQuery.filter(filter)[ FD ]
Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","-->Line_19 $$ contentString += "should: " + should.toString() + ","[ FD ]
Line_12 $$ if (tempQueryBuilder.mustNot().size() > 0) -->Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","[ CD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_23 $$ QueryBuilder filter = tempQueryBuilder.filter().get(0)[ FD ]
Line_8 $$ QueryBuilder must = tempQueryBuilder.must().get(0)-->Line_9 $$ contentString += "must: " + must.toString() + ","[ FD ]
Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)-->Line_28 $$ contentString += "    }    \n" + "}"[ FD ]
Line_28 $$ contentString += "    }    \n" + "}"-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_18 $$ QueryBuilder should = tempQueryBuilder.should().get(0)-->Line_19 $$ contentString += "should: " + should.toString() + ","[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)[ CD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()[ CD ]
Line_22 $$ if (tempQueryBuilder.filter().size() > 0) -->Line_23 $$ QueryBuilder filter = tempQueryBuilder.filter().get(0)[ CD ]
Line_9 $$ contentString += "must: " + must.toString() + ","-->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ FD ]
Line_7 $$ if (tempQueryBuilder.must().size() > 0) -->Line_10 $$ expectedQuery.must(must)[ CD ]
Line_17 $$ if (tempQueryBuilder.should().size() > 0) -->Line_20 $$ expectedQuery.should(should)[ CD ]
Line_6 $$ String contentString = "-->Line_19 $$ contentString += "should: " + should.toString() + ","[ FD ]
Line_6 $$ String contentString = "-->Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)[ FD ]
Line_17 $$ if (tempQueryBuilder.should().size() > 0) -->Line_18 $$ QueryBuilder should = tempQueryBuilder.should().get(0)[ CD ]
Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","-->Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)[ FD ]
Line_17 $$ if (tempQueryBuilder.should().size() > 0) -->Line_19 $$ contentString += "should: " + should.toString() + ","[ CD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_17 $$ if (tempQueryBuilder.should().size() > 0) [ CD ]
Line_19 $$ contentString += "should: " + should.toString() + ","-->Line_24 $$ contentString += "filter: " + filter.toString() + ","[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_6 $$ String contentString = "[ CD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_12 $$ if (tempQueryBuilder.mustNot().size() > 0) [ CD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_8 $$ QueryBuilder must = tempQueryBuilder.must().get(0)[ FD ]
Line_5 $$ BoolQueryBuilder expectedQuery = new BoolQueryBuilder()-->Line_20 $$ expectedQuery.should(should)[ FD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_22 $$ if (tempQueryBuilder.filter().size() > 0) [ FD ]
Line_22 $$ if (tempQueryBuilder.filter().size() > 0) -->Line_25 $$ expectedQuery.filter(filter)[ CD ]
Line_9 $$ contentString += "must: " + must.toString() + ","-->Line_28 $$ contentString += "    }    \n" + "}"[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_5 $$ BoolQueryBuilder expectedQuery = new BoolQueryBuilder()[ CD ]
Line_6 $$ String contentString = "-->Line_9 $$ contentString += "must: " + must.toString() + ","[ FD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_29 $$ alternateVersions.put(contentString, expectedQuery)[ CD ]
Line_2 $$ protected Map<String, BoolQueryBuilder> getAlternateVersions() -->Line_30 $$ return alternateVersions[ CD ]
Line_19 $$ contentString += "should: " + should.toString() + ","-->Line_27 $$ contentString = contentString.substring(0, contentString.length() - 1)[ FD ]
Line_13 $$ QueryBuilder mustNot = tempQueryBuilder.mustNot().get(0)-->Line_14 $$ contentString += (randomBoolean() ? "must_not: " : "mustNot: ") + mustNot.toString() + ","[ FD ]
Line_12 $$ if (tempQueryBuilder.mustNot().size() > 0) -->Line_13 $$ QueryBuilder mustNot = tempQueryBuilder.mustNot().get(0)[ CD ]
Line_22 $$ if (tempQueryBuilder.filter().size() > 0) -->Line_24 $$ contentString += "filter: " + filter.toString() + ","[ CD ]
Line_4 $$ BoolQueryBuilder tempQueryBuilder = createTestQueryBuilder()-->Line_12 $$ if (tempQueryBuilder.mustNot().size() > 0) [ FD ]
