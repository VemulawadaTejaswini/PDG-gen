Line_3 $$ final int dashIndex = vs.lastIndexOf('_')-->Line_4 $$ if (dashIndex >= 0) [ FD ]
Line_4 $$ if (dashIndex >= 0) -->Line_6 $$ for (int idx = dashIndex + 1; idx < vs.length(); idx++) [ CD ]
Line_8 $$ if (Character.isDigit(ch)) -->Line_9 $$ builder.append(ch)[ CD ]
Line_2 $$ private static int getMinorVersion(String vs) -->Line_21 $$ return 0[ CD ]
Line_7 $$ final char ch = vs.charAt(idx)-->Line_9 $$ builder.append(ch)[ FD ]
Line_7 $$ final char ch = vs.charAt(idx)-->Line_8 $$ if (Character.isDigit(ch)) [ FD ]
Line_4 $$ if (dashIndex >= 0) -->Line_14 $$ if (builder.length() > 0) [ CD ]
Line_2 $$ private static int getMinorVersion(String vs) -->Line_3 $$ final int dashIndex = vs.lastIndexOf('_')[ FD ]
Line_6 $$ for (int idx = dashIndex + 1; idx < vs.length(); idx++) -->Line_7 $$ final char ch = vs.charAt(idx)[ CD ]
Line_2 $$ private static int getMinorVersion(String vs) -->Line_4 $$ if (dashIndex >= 0) [ CD ]
Line_2 $$ private static int getMinorVersion(String vs) -->Line_3 $$ final int dashIndex = vs.lastIndexOf('_')[ CD ]
Line_6 $$ for (int idx = dashIndex + 1; idx < vs.length(); idx++) -->Line_8 $$ if (Character.isDigit(ch)) [ CD ]
Line_5 $$ StringBuilder builder = new StringBuilder()-->Line_9 $$ builder.append(ch)[ FD ]
Line_4 $$ if (dashIndex >= 0) -->Line_5 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_2 $$ private static int getMinorVersion(String vs) -->Line_7 $$ final char ch = vs.charAt(idx)[ FD ]
Line_5 $$ StringBuilder builder = new StringBuilder()-->Line_14 $$ if (builder.length() > 0) [ FD ]
Line_5 $$ StringBuilder builder = new StringBuilder()-->Line_16 $$ return Integer.parseInt(builder.toString())[ FD ]
Line_6 $$ for (int idx = dashIndex + 1; idx < vs.length(); idx++) -->Line_7 $$ final char ch = vs.charAt(idx)[ FD ]
Line_2 $$ private static int getMinorVersion(String vs) -->Line_6 $$ for (int idx = dashIndex + 1; idx < vs.length(); idx++) [ FD ]
