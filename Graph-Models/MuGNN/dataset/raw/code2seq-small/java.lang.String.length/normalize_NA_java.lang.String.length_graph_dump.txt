Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_3 $$ final int minLen = Math.min(s1.length(), s2.length())[ FD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_4 $$ final StringBuilder sb1 = new StringBuilder(s1)[ CD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_20 $$ return Pair.create(s1, s2)[ FD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_7 $$ final char ch1 = s1.charAt(i)[ FD ]
Line_4 $$ final StringBuilder sb1 = new StringBuilder(s1)-->Line_10 $$ sb1.setCharAt(i, '_')[ FD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_20 $$ return Pair.create(s1, s2)[ CD ]
Line_5 $$ final StringBuilder sb2 = new StringBuilder(s2)-->Line_11 $$ sb2.setCharAt(i, '_')[ FD ]
Line_14 $$ if (ch2 == '-' && ch1 != '_') -->Line_15 $$ sb2.setCharAt(i, '_')[ CD ]
Line_12 $$ if (ch1 == '-' && ch2 != '_') -->Line_13 $$ sb1.setCharAt(i, '_')[ CD ]
Line_12 $$ if (ch1 == '-' && ch2 != '_') -->Line_14 $$ if (ch2 == '-' && ch1 != '_') [ CD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_10 $$ sb1.setCharAt(i, '_')[ FD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_8 $$ final char ch2 = sb2.charAt(i)[ FD ]
Line_3 $$ final int minLen = Math.min(s1.length(), s2.length())-->Line_6 $$ for (int i = 0; i < minLen; i++) [ FD ]
Line_4 $$ final StringBuilder sb1 = new StringBuilder(s1)-->Line_13 $$ sb1.setCharAt(i, '_')[ FD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_19 $$ s2 = sb2.toString()[ CD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_9 $$ if (ch1 == ch2 && ch1 == '-') [ CD ]
Line_9 $$ if (ch1 == ch2 && ch1 == '-') -->Line_11 $$ sb2.setCharAt(i, '_')[ CD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_7 $$ final char ch1 = s1.charAt(i)[ CD ]
Line_5 $$ final StringBuilder sb2 = new StringBuilder(s2)-->Line_8 $$ final char ch2 = sb2.charAt(i)[ FD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_19 $$ s2 = sb2.toString()[ FD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_13 $$ sb1.setCharAt(i, '_')[ FD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_18 $$ s1 = sb1.toString()[ FD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_11 $$ sb2.setCharAt(i, '_')[ FD ]
Line_9 $$ if (ch1 == ch2 && ch1 == '-') -->Line_12 $$ if (ch1 == '-' && ch2 != '_') [ CD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_6 $$ for (int i = 0; i < minLen; i++) [ CD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_5 $$ final StringBuilder sb2 = new StringBuilder(s2)[ CD ]
Line_4 $$ final StringBuilder sb1 = new StringBuilder(s1)-->Line_18 $$ s1 = sb1.toString()[ FD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_7 $$ final char ch1 = s1.charAt(i)[ FD ]
Line_19 $$ s2 = sb2.toString()-->Line_20 $$ return Pair.create(s1, s2)[ FD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_15 $$ sb2.setCharAt(i, '_')[ FD ]
Line_5 $$ final StringBuilder sb2 = new StringBuilder(s2)-->Line_19 $$ s2 = sb2.toString()[ FD ]
Line_6 $$ for (int i = 0; i < minLen; i++) -->Line_8 $$ final char ch2 = sb2.charAt(i)[ CD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_3 $$ final int minLen = Math.min(s1.length(), s2.length())[ CD ]
Line_18 $$ s1 = sb1.toString()-->Line_20 $$ return Pair.create(s1, s2)[ FD ]
Line_2 $$ private static Pair<String, String> normalize(String s1, String s2) -->Line_18 $$ s1 = sb1.toString()[ CD ]
Line_5 $$ final StringBuilder sb2 = new StringBuilder(s2)-->Line_15 $$ sb2.setCharAt(i, '_')[ FD ]
Line_9 $$ if (ch1 == ch2 && ch1 == '-') -->Line_10 $$ sb1.setCharAt(i, '_')[ CD ]
