Line_2 $$ private String _fixLeadingPath(Object leadingPath) -->Line_3 $$ String leadingPathString = GradleUtil.toString(leadingPath)[ CD ]
Line_4 $$ if (Validator.isNull(leadingPathString)) -->Line_5 $$ return ""[ CD ]
Line_7 $$ char lastChar = leadingPathString.charAt(leadingPathString.length() - 1)-->Line_8 $$ if (lastChar != '/') [ FD ]
Line_2 $$ private String _fixLeadingPath(Object leadingPath) -->Line_8 $$ if (lastChar != '/') [ CD ]
Line_2 $$ private String _fixLeadingPath(Object leadingPath) -->Line_3 $$ String leadingPathString = GradleUtil.toString(leadingPath)[ FD ]
Line_2 $$ private String _fixLeadingPath(Object leadingPath) -->Line_11 $$ return leadingPathString[ CD ]
Line_3 $$ String leadingPathString = GradleUtil.toString(leadingPath)-->Line_4 $$ if (Validator.isNull(leadingPathString)) [ FD ]
Line_3 $$ String leadingPathString = GradleUtil.toString(leadingPath)-->Line_7 $$ char lastChar = leadingPathString.charAt(leadingPathString.length() - 1)[ FD ]
Line_3 $$ String leadingPathString = GradleUtil.toString(leadingPath)-->Line_9 $$ leadingPathString += '/'[ FD ]
Line_8 $$ if (lastChar != '/') -->Line_9 $$ leadingPathString += '/'[ CD ]
Line_2 $$ private String _fixLeadingPath(Object leadingPath) -->Line_7 $$ char lastChar = leadingPathString.charAt(leadingPathString.length() - 1)[ CD ]
Line_2 $$ private String _fixLeadingPath(Object leadingPath) -->Line_4 $$ if (Validator.isNull(leadingPathString)) [ CD ]
