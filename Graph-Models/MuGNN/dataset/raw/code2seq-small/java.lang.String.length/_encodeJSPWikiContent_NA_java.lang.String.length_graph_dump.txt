Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_20 $$ return encodedContent.toString()[ CD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_16 $$ content = content.substring(start)[ FD ]
Line_5 $$ int start = 0-->Line_13 $$ start = commentMatcher.end()[ FD ]
Line_7 $$ while (commentMatcher.find()) -->Line_10 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(oldContent)[ CD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_7 $$ while (commentMatcher.find()) [ CD ]
Line_15 $$ if (start < content.length()) -->Line_16 $$ content = content.substring(start)[ CD ]
Line_3 $$ StringBundler encodedContent = new StringBundler()-->Line_20 $$ return encodedContent.toString()[ FD ]
Line_13 $$ start = commentMatcher.end()-->Line_16 $$ content = content.substring(start)[ FD ]
Line_3 $$ StringBundler encodedContent = new StringBundler()-->Line_11 $$ encodedContent.append(_encodeLink(oldContent, wikiLinkMatcher))[ FD ]
Line_13 $$ start = commentMatcher.end()-->Line_9 $$ String oldContent = content.substring(start, end)[ FD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_3 $$ StringBundler encodedContent = new StringBundler()[ CD ]
Line_16 $$ content = content.substring(start)-->Line_18 $$ encodedContent.append(_encodeLink(content, wikiLinkMatcher))[ FD ]
Line_6 $$ int end = 0-->Line_9 $$ String oldContent = content.substring(start, end)[ FD ]
Line_3 $$ StringBundler encodedContent = new StringBundler()-->Line_12 $$ encodedContent.append(content.substring(commentMatcher.start(), commentMatcher.end()))[ FD ]
Line_7 $$ while (commentMatcher.find()) -->Line_11 $$ encodedContent.append(_encodeLink(oldContent, wikiLinkMatcher))[ CD ]
Line_4 $$ Matcher commentMatcher = _wikiCommentPattern.matcher(content)-->Line_13 $$ start = commentMatcher.end()[ FD ]
Line_9 $$ String oldContent = content.substring(start, end)-->Line_10 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(oldContent)[ FD ]
Line_15 $$ if (start < content.length()) -->Line_17 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(content)[ CD ]
Line_4 $$ Matcher commentMatcher = _wikiCommentPattern.matcher(content)-->Line_7 $$ while (commentMatcher.find()) [ FD ]
Line_5 $$ int start = 0-->Line_15 $$ if (start < content.length()) [ FD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_18 $$ encodedContent.append(_encodeLink(content, wikiLinkMatcher))[ FD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_15 $$ if (start < content.length()) [ FD ]
Line_7 $$ while (commentMatcher.find()) -->Line_13 $$ start = commentMatcher.end()[ CD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_6 $$ int end = 0[ CD ]
Line_15 $$ if (start < content.length()) -->Line_18 $$ encodedContent.append(_encodeLink(content, wikiLinkMatcher))[ CD ]
Line_7 $$ while (commentMatcher.find()) -->Line_9 $$ String oldContent = content.substring(start, end)[ CD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_5 $$ int start = 0[ CD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_4 $$ Matcher commentMatcher = _wikiCommentPattern.matcher(content)[ FD ]
Line_10 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(oldContent)-->Line_11 $$ encodedContent.append(_encodeLink(oldContent, wikiLinkMatcher))[ FD ]
Line_3 $$ StringBundler encodedContent = new StringBundler()-->Line_18 $$ encodedContent.append(_encodeLink(content, wikiLinkMatcher))[ FD ]
Line_10 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(oldContent)-->Line_18 $$ encodedContent.append(_encodeLink(content, wikiLinkMatcher))[ FD ]
Line_7 $$ while (commentMatcher.find()) -->Line_12 $$ encodedContent.append(content.substring(commentMatcher.start(), commentMatcher.end()))[ CD ]
Line_5 $$ int start = 0-->Line_9 $$ String oldContent = content.substring(start, end)[ FD ]
Line_6 $$ int end = 0-->Line_8 $$ end = commentMatcher.start()[ FD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_17 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(content)[ FD ]
Line_4 $$ Matcher commentMatcher = _wikiCommentPattern.matcher(content)-->Line_12 $$ encodedContent.append(content.substring(commentMatcher.start(), commentMatcher.end()))[ FD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_4 $$ Matcher commentMatcher = _wikiCommentPattern.matcher(content)[ CD ]
Line_9 $$ String oldContent = content.substring(start, end)-->Line_11 $$ encodedContent.append(_encodeLink(oldContent, wikiLinkMatcher))[ FD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_15 $$ if (start < content.length()) [ CD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_9 $$ String oldContent = content.substring(start, end)[ FD ]
Line_5 $$ int start = 0-->Line_16 $$ content = content.substring(start)[ FD ]
Line_4 $$ Matcher commentMatcher = _wikiCommentPattern.matcher(content)-->Line_8 $$ end = commentMatcher.start()[ FD ]
Line_16 $$ content = content.substring(start)-->Line_17 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(content)[ FD ]
Line_17 $$ Matcher wikiLinkMatcher = _wikiLinkPattern.matcher(content)-->Line_18 $$ encodedContent.append(_encodeLink(content, wikiLinkMatcher))[ FD ]
Line_7 $$ while (commentMatcher.find()) -->Line_8 $$ end = commentMatcher.start()[ CD ]
Line_2 $$ private static String _encodeJSPWikiContent(String content) -->Line_12 $$ encodedContent.append(content.substring(commentMatcher.start(), commentMatcher.end()))[ FD ]
Line_13 $$ start = commentMatcher.end()-->Line_15 $$ if (start < content.length()) [ FD ]
Line_8 $$ end = commentMatcher.start()-->Line_9 $$ String oldContent = content.substring(start, end)[ FD ]
