Line_7 $$ if (pathEntry.startsWith("\"") && pathEntry.endsWith("\"")) -->Line_8 $$ if (pathEntry.length() < 2)[ CD ]
Line_3 $$ final String path = System.getenv("PATH")-->Line_6 $$ for (String pathEntry : StringUtil.split(path, ";")) [ FD ]
Line_12 $$ File f = new File(pathEntry, exeName)-->Line_14 $$ candidates.add(FileUtil.toSystemDependentName(f.getPath()))[ FD ]
Line_2 $$ public static void findInPath(Collection<String> candidates, String exeName) -->Line_14 $$ candidates.add(FileUtil.toSystemDependentName(f.getPath()))[ FD ]
Line_2 $$ public static void findInPath(Collection<String> candidates, String exeName) -->Line_4 $$ if (path == null)[ CD ]
Line_7 $$ if (pathEntry.startsWith("\"") && pathEntry.endsWith("\"")) -->Line_10 $$ pathEntry = pathEntry.substring(1, pathEntry.length() - 1)[ CD ]
Line_12 $$ File f = new File(pathEntry, exeName)-->Line_13 $$ if (f.exists()) [ FD ]
Line_3 $$ final String path = System.getenv("PATH")-->Line_4 $$ if (path == null)[ FD ]
Line_13 $$ if (f.exists()) -->Line_14 $$ candidates.add(FileUtil.toSystemDependentName(f.getPath()))[ CD ]
Line_4 $$ if (path == null)-->Line_5 $$ return[ CD ]
Line_6 $$ for (String pathEntry : StringUtil.split(path, ";")) -->Line_10 $$ pathEntry = pathEntry.substring(1, pathEntry.length() - 1)[ FD ]
Line_2 $$ public static void findInPath(Collection<String> candidates, String exeName) -->Line_3 $$ final String path = System.getenv("PATH")[ CD ]
Line_6 $$ for (String pathEntry : StringUtil.split(path, ";")) -->Line_8 $$ if (pathEntry.length() < 2)[ FD ]
Line_6 $$ for (String pathEntry : StringUtil.split(path, ";")) -->Line_7 $$ if (pathEntry.startsWith("\"") && pathEntry.endsWith("\"")) [ FD ]
