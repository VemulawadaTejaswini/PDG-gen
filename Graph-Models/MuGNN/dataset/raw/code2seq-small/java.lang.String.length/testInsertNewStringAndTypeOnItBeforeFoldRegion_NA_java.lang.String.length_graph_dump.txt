Line_11 $$ int foldStartOffset = myEditor.getDocument().getText().indexOf("/**")-->Line_13 $$ assertEquals(new VisualPosition(1, 0), myEditor.offsetToVisualPosition(foldStartOffset))[ FD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_3 $$ String text = "\n" + "class Test [ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_13 $$ assertEquals(new VisualPosition(1, 0), myEditor.offsetToVisualPosition(foldStartOffset))[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_8 $$ type("\n")[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_10 $$ type("import")[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_6 $$ addCollapsedFoldRegion(0, text.indexOf("class") - 1, placeholder)[ CD ]
Line_3 $$ String text = "\n" + "class Test -->Line_6 $$ addCollapsedFoldRegion(0, text.indexOf("class") - 1, placeholder)[ FD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_15 $$ assertEquals(new VisualPosition(1, placeholder.length()), myEditor.offsetToVisualPosition(foldEndOffset))[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_12 $$ int foldEndOffset = myEditor.getDocument().getText().indexOf("class") - 1[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_7 $$ myEditor.getCaretModel().moveToOffset(0)[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_9 $$ myEditor.getCaretModel().moveToOffset(0)[ CD ]
Line_5 $$ String placeholder = ""-->Line_6 $$ addCollapsedFoldRegion(0, text.indexOf("class") - 1, placeholder)[ FD ]
Line_5 $$ String placeholder = ""-->Line_15 $$ assertEquals(new VisualPosition(1, placeholder.length()), myEditor.offsetToVisualPosition(foldEndOffset))[ FD ]
Line_12 $$ int foldEndOffset = myEditor.getDocument().getText().indexOf("class") - 1-->Line_15 $$ assertEquals(new VisualPosition(1, placeholder.length()), myEditor.offsetToVisualPosition(foldEndOffset))[ FD ]
Line_3 $$ String text = "\n" + "class Test -->Line_4 $$ init(100, text)[ FD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_11 $$ int foldStartOffset = myEditor.getDocument().getText().indexOf("/**")[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_5 $$ String placeholder = ""[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_14 $$ assertEquals(new VisualPosition(1, 0), myEditor.offsetToVisualPosition((foldStartOffset + foldEndOffset) / 2))[ CD ]
Line_2 $$ public void testInsertNewStringAndTypeOnItBeforeFoldRegion() throws IOException -->Line_4 $$ init(100, text)[ CD ]
