Line_2 $$ private static int deduceBlockSelectionWidth(int[] startOffsets, int[] endOffsets, final String text) -->Line_5 $$ int totalLength = fragmentCount - 1[ CD ]
Line_2 $$ private static int deduceBlockSelectionWidth(int[] startOffsets, int[] endOffsets, final String text) -->Line_6 $$ for (int i = 0; i < fragmentCount; i++) [ CD ]
Line_9 $$ if (totalLength < text.length() && (text.length() + 1) % fragmentCount == 0) -->Line_10 $$ return (text.length() + 1) / fragmentCount - 1[ CD ]
Line_3 $$ int fragmentCount = startOffsets.length-->Line_6 $$ for (int i = 0; i < fragmentCount; i++) [ FD ]
Line_2 $$ private static int deduceBlockSelectionWidth(int[] startOffsets, int[] endOffsets, final String text) -->Line_9 $$ if (totalLength < text.length() && (text.length() + 1) % fragmentCount == 0) [ FD ]
Line_2 $$ private static int deduceBlockSelectionWidth(int[] startOffsets, int[] endOffsets, final String text) -->Line_10 $$ return (text.length() + 1) / fragmentCount - 1[ FD ]
Line_9 $$ if (totalLength < text.length() && (text.length() + 1) % fragmentCount == 0) -->Line_12 $$ return -1[ CD ]
Line_2 $$ private static int deduceBlockSelectionWidth(int[] startOffsets, int[] endOffsets, final String text) -->Line_9 $$ if (totalLength < text.length() && (text.length() + 1) % fragmentCount == 0) [ CD ]
Line_2 $$ private static int deduceBlockSelectionWidth(int[] startOffsets, int[] endOffsets, final String text) -->Line_3 $$ int fragmentCount = startOffsets.length[ CD ]
Line_6 $$ for (int i = 0; i < fragmentCount; i++) -->Line_7 $$ totalLength += endOffsets[i] - startOffsets[i][ CD ]
Line_5 $$ int totalLength = fragmentCount - 1-->Line_7 $$ totalLength += endOffsets[i] - startOffsets[i][ FD ]
