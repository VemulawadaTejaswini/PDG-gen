Line_2 $$ private static boolean containsPackagePrefix(Module module, String packageFQName) -->Line_3 $$ if (module == null)[ FD ]
Line_9 $$ if (prefixLength > 0 && packageFQName.startsWith(packagePrefix)) -->Line_10 $$ return true[ CD ]
Line_6 $$ for (SourceFolder sourceFolder : contentEntry.getSourceFolders(JavaModuleSourceRootTypes.SOURCES)) -->Line_7 $$ final String packagePrefix = sourceFolder.getPackagePrefix()[ FD ]
Line_2 $$ private static boolean containsPackagePrefix(Module module, String packageFQName) -->Line_9 $$ if (prefixLength > 0 && packageFQName.startsWith(packagePrefix)) [ FD ]
Line_7 $$ final String packagePrefix = sourceFolder.getPackagePrefix()-->Line_9 $$ if (prefixLength > 0 && packageFQName.startsWith(packagePrefix)) [ FD ]
Line_2 $$ private static boolean containsPackagePrefix(Module module, String packageFQName) -->Line_5 $$ for (ContentEntry contentEntry : ModuleRootManager.getInstance(module).getContentEntries()) [ FD ]
Line_2 $$ private static boolean containsPackagePrefix(Module module, String packageFQName) -->Line_14 $$ return false[ CD ]
Line_5 $$ for (ContentEntry contentEntry : ModuleRootManager.getInstance(module).getContentEntries()) -->Line_6 $$ for (SourceFolder sourceFolder : contentEntry.getSourceFolders(JavaModuleSourceRootTypes.SOURCES)) [ FD ]
Line_7 $$ final String packagePrefix = sourceFolder.getPackagePrefix()-->Line_8 $$ final int prefixLength = packagePrefix.length()[ FD ]
Line_3 $$ if (module == null)-->Line_4 $$ return false[ CD ]
Line_2 $$ private static boolean containsPackagePrefix(Module module, String packageFQName) -->Line_3 $$ if (module == null)[ CD ]
