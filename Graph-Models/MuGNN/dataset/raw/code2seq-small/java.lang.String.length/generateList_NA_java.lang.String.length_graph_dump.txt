Line_32 $$ if (align_comments) -->Line_35 $$ sb.append(nd.name)[ CD ]
Line_32 $$ if (align_comments) -->Line_36 $$ int spacesNumber = max + 1 - nd.name.length()[ CD ]
Line_6 $$ CodeStyleSettings settings = myFormatter.getSettings()-->Line_7 $$ CommonCodeStyleSettings.IndentOptions indentOptions = settings.getIndentOptions(JavaFileType.INSTANCE)[ FD ]
Line_32 $$ if (align_comments) -->Line_33 $$ sb.append(prefix)[ CD ]
Line_9 $$ int max = 0-->Line_17 $$ max = currentLength[ FD ]
Line_28 $$ if (wrapDescription && !isNull(nd.desc)) -->Line_32 $$ if (align_comments) [ CD ]
Line_7 $$ CommonCodeStyleSettings.IndentOptions indentOptions = settings.getIndentOptions(JavaFileType.INSTANCE)-->Line_8 $$ String continuationIndent = new IndentInfo(0, indentOptions.CONTINUATION_INDENT_SIZE, 0).generateNewWhiteSpace(indentOptions)[ FD ]
Line_21 $$ StringBuilder fill = new StringBuilder(prefix.length() + tag.length() + max + 1)-->Line_23 $$ StringUtil.repeatSymbol(fill, ' ', max + 1 + tag.length())[ FD ]
Line_32 $$ if (align_comments) -->Line_42 $$ sb.append(myFormatter.getParser().formatJDTagDescription(tag + nd.name + " " + description, prefix))[ CD ]
Line_32 $$ if (align_comments) -->Line_41 $$ String description = (nd.desc == null) ? "" : nd.desc[ CD ]
Line_12 $$ int currentLength = nd.name.length()-->Line_17 $$ max = currentLength[ FD ]
Line_32 $$ if (align_comments) -->Line_40 $$ sb.append(prefix)[ CD ]
Line_21 $$ StringBuilder fill = new StringBuilder(prefix.length() + tag.length() + max + 1)-->Line_22 $$ fill.append(prefix)[ FD ]
Line_32 $$ if (align_comments) -->Line_37 $$ StringUtil.repeatSymbol(sb, ' ', Math.max(0, spacesNumber))[ CD ]
Line_28 $$ if (wrapDescription && !isNull(nd.desc)) -->Line_30 $$ sb.append(wrapParametersPrefix)[ CD ]
Line_24 $$ String wrapParametersPrefix = prefix + continuationIndent-->Line_30 $$ sb.append(wrapParametersPrefix)[ FD ]
Line_24 $$ String wrapParametersPrefix = prefix + continuationIndent-->Line_31 $$ sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc, wrapParametersPrefix))[ FD ]
Line_32 $$ if (align_comments) -->Line_38 $$ sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc, fill))[ CD ]
Line_21 $$ StringBuilder fill = new StringBuilder(prefix.length() + tag.length() + max + 1)-->Line_38 $$ sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc, fill))[ FD ]
Line_28 $$ if (wrapDescription && !isNull(nd.desc)) -->Line_29 $$ sb.append(prefix).append(tag).append(nd.name).append("\n")[ CD ]
Line_36 $$ int spacesNumber = max + 1 - nd.name.length()-->Line_37 $$ StringUtil.repeatSymbol(sb, ' ', Math.max(0, spacesNumber))[ FD ]
Line_32 $$ if (align_comments) -->Line_34 $$ sb.append(tag)[ CD ]
Line_28 $$ if (wrapDescription && !isNull(nd.desc)) -->Line_31 $$ sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc, wrapParametersPrefix))[ CD ]
