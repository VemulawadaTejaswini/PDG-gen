Line_5 $$ for (String parentsHash : parentsHashes) -->Line_6 $$ if (parentsHash.length() > 0) [ FD ]
Line_2 $$ public static SimpleCommit<Integer> asIntegerCommit(@NotNull String commitHash, @NotNull String[] parentsHashes) -->Line_3 $$ int intCommitHash = CommitParser.createHash(commitHash)[ FD ]
Line_5 $$ for (String parentsHash : parentsHashes) -->Line_7 $$ parents.add(CommitParser.createHash(parentsHash))[ FD ]
Line_2 $$ public static SimpleCommit<Integer> asIntegerCommit(@NotNull String commitHash, @NotNull String[] parentsHashes) -->Line_3 $$ int intCommitHash = CommitParser.createHash(commitHash)[ CD ]
Line_2 $$ public static SimpleCommit<Integer> asIntegerCommit(@NotNull String commitHash, @NotNull String[] parentsHashes) -->Line_10 $$ return new SimpleCommit<Integer>(intCommitHash, parents, intCommitHash)[ CD ]
Line_6 $$ if (parentsHash.length() > 0) -->Line_7 $$ parents.add(CommitParser.createHash(parentsHash))[ CD ]
Line_4 $$ List<Integer> parents = new ArrayList<Integer>()-->Line_7 $$ parents.add(CommitParser.createHash(parentsHash))[ FD ]
Line_2 $$ public static SimpleCommit<Integer> asIntegerCommit(@NotNull String commitHash, @NotNull String[] parentsHashes) -->Line_4 $$ List<Integer> parents = new ArrayList<Integer>()[ CD ]
