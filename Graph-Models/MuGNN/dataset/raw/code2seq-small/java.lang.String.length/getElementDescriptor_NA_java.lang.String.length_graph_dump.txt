Line_7 $$ if (descriptor != null) -->Line_8 $$ final XmlElementDescriptor value = descriptor.getValue()[ CD ]
Line_5 $$ final QNameKey pair = new QNameKey(namespace, localName)-->Line_6 $$ final CachedValue<XmlElementDescriptor> descriptor = myDescriptorsMap.get(pair)[ FD ]
Line_20 $$ String name = tag.getAttributeValue("name")-->Line_22 $$ if (checkElementNameEquivalence(localName, namespace, name, tag)) [ FD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_58 $$ final XmlElementDescriptor xmlElementDescriptor = nsDescriptor.getElementDescriptor(localName, namespace, visited, reference)[ FD ]
Line_57 $$ if (nsDescriptor != null) -->Line_59 $$ if (xmlElementDescriptor instanceof XmlElementDescriptorImpl) [ CD ]
Line_44 $$ if (includedDocument != null) -->Line_46 $$ if (data instanceof XmlNSDescriptorImpl) [ CD ]
Line_12 $$ final XmlTag rootTag = myTag-->Line_13 $$ if (rootTag == null)[ FD ]
Line_42 $$ if (xmlFile != null) -->Line_43 $$ final XmlDocument includedDocument = xmlFile.getDocument()[ CD ]
Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() -->Line_34 $$ myDescriptorsMap.put(pair, cachedValue)[ FD ]
Line_46 $$ if (data instanceof XmlNSDescriptorImpl) -->Line_48 $$ if (elementDescriptor != null) [ CD ]
Line_38 $$ if (equalsToSchemaName(tag, INCLUDE_TAG_NAME) || (reference && equalsToSchemaName(tag, IMPORT_TAG_NAME) && (namespace.equals(tag.getAttributeValue("namespace")) || namespace.length() == 0 && tag.getAttributeValue("namespace") == null))) -->Line_55 $$ if (equalsToSchemaName(tag, REDEFINE_TAG_NAME)) [ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_16 $$ visited.add(this)[ CD ]
Line_26 $$ if (name != null && !name.equals(pair.second)) -->Line_28 $$ return new Result<XmlElementDescriptor>(null, PsiModificationTracker.MODIFICATION_COUNT)[ CD ]
Line_44 $$ if (includedDocument != null) -->Line_45 $$ final PsiMetaData data = includedDocument.getMetaData()[ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_65 $$ return null[ CD ]
Line_22 $$ if (checkElementNameEquivalence(localName, namespace, name, tag)) -->Line_35 $$ return cachedValue.getValue()[ CD ]
Line_5 $$ final QNameKey pair = new QNameKey(namespace, localName)-->Line_34 $$ myDescriptorsMap.put(pair, cachedValue)[ FD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_3 $$ if (visited.contains(this))[ FD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() [ FD ]
Line_57 $$ if (nsDescriptor != null) -->Line_58 $$ final XmlElementDescriptor xmlElementDescriptor = nsDescriptor.getElementDescriptor(localName, namespace, visited, reference)[ CD ]
Line_7 $$ if (descriptor != null) -->Line_9 $$ if (value == null || value.getDeclaration().isValid())[ CD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_38 $$ if (equalsToSchemaName(tag, INCLUDE_TAG_NAME) || (reference && equalsToSchemaName(tag, IMPORT_TAG_NAME) && (namespace.equals(tag.getAttributeValue("namespace")) || namespace.length() == 0 && tag.getAttributeValue("namespace") == null))) [ FD ]
Line_3 $$ if (visited.contains(this))-->Line_4 $$ return null[ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_7 $$ if (descriptor != null) [ CD ]
Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() -->Line_31 $$ return new Result<XmlElementDescriptor>(xmlElementDescriptor, xmlElementDescriptor.getDependences())[ CD ]
Line_12 $$ final XmlTag rootTag = myTag-->Line_15 $$ XmlTag[] tags = rootTag.getSubTags()[ FD ]
Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() -->Line_30 $$ final XmlElementDescriptor xmlElementDescriptor = createElementDescriptor(tag)[ CD ]
Line_25 $$ final String name = tag.getAttributeValue("name")-->Line_26 $$ if (name != null && !name.equals(pair.second)) [ FD ]
Line_26 $$ if (name != null && !name.equals(pair.second)) -->Line_27 $$ myDescriptorsMap.remove(pair)[ CD ]
Line_46 $$ if (data instanceof XmlNSDescriptorImpl) -->Line_47 $$ final XmlElementDescriptor elementDescriptor = ((XmlNSDescriptorImpl) data).getElementDescriptor(localName, namespace, visited, reference)[ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_13 $$ if (rootTag == null)[ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_47 $$ final XmlElementDescriptor elementDescriptor = ((XmlNSDescriptorImpl) data).getElementDescriptor(localName, namespace, visited, reference)[ FD ]
Line_8 $$ final XmlElementDescriptor value = descriptor.getValue()-->Line_9 $$ if (value == null || value.getDeclaration().isValid())[ FD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_25 $$ final String name = tag.getAttributeValue("name")[ FD ]
Line_19 $$ if (equalsToSchemaName(tag, ELEMENT_TAG_NAME)) -->Line_20 $$ String name = tag.getAttributeValue("name")[ CD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_20 $$ String name = tag.getAttributeValue("name")[ FD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_30 $$ final XmlElementDescriptor xmlElementDescriptor = createElementDescriptor(tag)[ FD ]
Line_13 $$ if (rootTag == null)-->Line_14 $$ return null[ CD ]
Line_20 $$ String name = tag.getAttributeValue("name")-->Line_21 $$ if (name != null) [ FD ]
Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() -->Line_35 $$ return cachedValue.getValue()[ FD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_22 $$ if (checkElementNameEquivalence(localName, namespace, name, tag)) [ FD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_3 $$ if (visited.contains(this))[ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_6 $$ final CachedValue<XmlElementDescriptor> descriptor = myDescriptorsMap.get(pair)[ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_15 $$ XmlTag[] tags = rootTag.getSubTags()[ CD ]
Line_19 $$ if (equalsToSchemaName(tag, ELEMENT_TAG_NAME)) -->Line_21 $$ if (name != null) [ CD ]
Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() -->Line_26 $$ if (name != null && !name.equals(pair.second)) [ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_17 $$ LOG.assertTrue(rootTag.isValid())[ CD ]
Line_30 $$ final XmlElementDescriptor xmlElementDescriptor = createElementDescriptor(tag)-->Line_59 $$ if (xmlElementDescriptor instanceof XmlElementDescriptorImpl) [ FD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_19 $$ if (equalsToSchemaName(tag, ELEMENT_TAG_NAME)) [ FD ]
Line_12 $$ final XmlTag rootTag = myTag-->Line_17 $$ LOG.assertTrue(rootTag.isValid())[ FD ]
Line_22 $$ if (checkElementNameEquivalence(localName, namespace, name, tag)) -->Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() [ CD ]
Line_30 $$ final XmlElementDescriptor xmlElementDescriptor = createElementDescriptor(tag)-->Line_31 $$ return new Result<XmlElementDescriptor>(xmlElementDescriptor, xmlElementDescriptor.getDependences())[ FD ]
Line_42 $$ if (xmlFile != null) -->Line_44 $$ if (includedDocument != null) [ CD ]
Line_59 $$ if (xmlElementDescriptor instanceof XmlElementDescriptorImpl) -->Line_60 $$ return new RedefinedElementDescriptor((XmlElementDescriptorImpl) xmlElementDescriptor, this)[ CD ]
Line_9 $$ if (value == null || value.getDeclaration().isValid())-->Line_10 $$ return value[ CD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_56 $$ final XmlNSDescriptorImpl nsDescriptor = getRedefinedElementDescriptor(tag)[ FD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_5 $$ final QNameKey pair = new QNameKey(namespace, localName)[ CD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_38 $$ if (equalsToSchemaName(tag, INCLUDE_TAG_NAME) || (reference && equalsToSchemaName(tag, IMPORT_TAG_NAME) && (namespace.equals(tag.getAttributeValue("namespace")) || namespace.length() == 0 && tag.getAttributeValue("namespace") == null))) [ FD ]
Line_5 $$ final QNameKey pair = new QNameKey(namespace, localName)-->Line_27 $$ myDescriptorsMap.remove(pair)[ FD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_16 $$ visited.add(this)[ FD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_55 $$ if (equalsToSchemaName(tag, REDEFINE_TAG_NAME)) [ FD ]
Line_40 $$ if (schemaLocation != null) -->Line_42 $$ if (xmlFile != null) [ CD ]
Line_55 $$ if (equalsToSchemaName(tag, REDEFINE_TAG_NAME)) -->Line_56 $$ final XmlNSDescriptorImpl nsDescriptor = getRedefinedElementDescriptor(tag)[ CD ]
Line_38 $$ if (equalsToSchemaName(tag, INCLUDE_TAG_NAME) || (reference && equalsToSchemaName(tag, IMPORT_TAG_NAME) && (namespace.equals(tag.getAttributeValue("namespace")) || namespace.length() == 0 && tag.getAttributeValue("namespace") == null))) -->Line_39 $$ final String schemaLocation = tag.getAttributeValue("schemaLocation")[ CD ]
Line_22 $$ if (checkElementNameEquivalence(localName, namespace, name, tag)) -->Line_34 $$ myDescriptorsMap.put(pair, cachedValue)[ CD ]
Line_21 $$ if (name != null) -->Line_22 $$ if (checkElementNameEquivalence(localName, namespace, name, tag)) [ CD ]
Line_19 $$ if (equalsToSchemaName(tag, ELEMENT_TAG_NAME)) -->Line_38 $$ if (equalsToSchemaName(tag, INCLUDE_TAG_NAME) || (reference && equalsToSchemaName(tag, IMPORT_TAG_NAME) && (namespace.equals(tag.getAttributeValue("namespace")) || namespace.length() == 0 && tag.getAttributeValue("namespace") == null))) [ CD ]
Line_6 $$ final CachedValue<XmlElementDescriptor> descriptor = myDescriptorsMap.get(pair)-->Line_7 $$ if (descriptor != null) [ FD ]
Line_40 $$ if (schemaLocation != null) -->Line_41 $$ final XmlFile xmlFile = XmlUtil.findNamespace(rootTag.getContainingFile(), schemaLocation)[ CD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_22 $$ if (checkElementNameEquivalence(localName, namespace, name, tag)) [ FD ]
Line_48 $$ if (elementDescriptor != null) -->Line_49 $$ return elementDescriptor[ CD ]
Line_20 $$ String name = tag.getAttributeValue("name")-->Line_26 $$ if (name != null && !name.equals(pair.second)) [ FD ]
Line_2 $$ public XmlElementDescriptor getElementDescriptor(String localName, String namespace, Set<XmlNSDescriptorImpl> visited, boolean reference) -->Line_12 $$ final XmlTag rootTag = myTag[ CD ]
Line_38 $$ if (equalsToSchemaName(tag, INCLUDE_TAG_NAME) || (reference && equalsToSchemaName(tag, IMPORT_TAG_NAME) && (namespace.equals(tag.getAttributeValue("namespace")) || namespace.length() == 0 && tag.getAttributeValue("namespace") == null))) -->Line_40 $$ if (schemaLocation != null) [ CD ]
Line_6 $$ final CachedValue<XmlElementDescriptor> descriptor = myDescriptorsMap.get(pair)-->Line_8 $$ final XmlElementDescriptor value = descriptor.getValue()[ FD ]
Line_23 $$ final CachedValue<XmlElementDescriptor> cachedValue = CachedValuesManager.getManager(tag.getProject()).createCachedValue(new CachedValueProvider<XmlElementDescriptor>() -->Line_25 $$ final String name = tag.getAttributeValue("name")[ CD ]
Line_12 $$ final XmlTag rootTag = myTag-->Line_41 $$ final XmlFile xmlFile = XmlUtil.findNamespace(rootTag.getContainingFile(), schemaLocation)[ FD ]
Line_18 $$ for (final XmlTag tag : tags) -->Line_39 $$ final String schemaLocation = tag.getAttributeValue("schemaLocation")[ FD ]
Line_55 $$ if (equalsToSchemaName(tag, REDEFINE_TAG_NAME)) -->Line_57 $$ if (nsDescriptor != null) [ CD ]
