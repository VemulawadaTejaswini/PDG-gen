Line_6 $$ int numberLen = number.length()-->Line_12 $$ sb.append(number.substring(numberLen - 4, numberLen))[ FD ]
Line_7 $$ if (numberLen > 4) -->Line_12 $$ sb.append(number.substring(numberLen - 4, numberLen))[ CD ]
Line_3 $$ if (number == null) -->Line_4 $$ return number[ CD ]
Line_2 $$ public static String hide(String number, String x) -->Line_6 $$ int numberLen = number.length()[ FD ]
Line_2 $$ public static String hide(String number, String x) -->Line_6 $$ int numberLen = number.length()[ CD ]
Line_7 $$ if (numberLen > 4) -->Line_13 $$ number = sb.toString()[ CD ]
Line_2 $$ public static String hide(String number, String x) -->Line_7 $$ if (numberLen > 4) [ CD ]
Line_9 $$ for (int i = 0; i < numberLen - 4; i++) -->Line_10 $$ sb.append(x)[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(numberLen - 3)-->Line_10 $$ sb.append(x)[ FD ]
Line_2 $$ public static String hide(String number, String x) -->Line_13 $$ number = sb.toString()[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(numberLen - 3)-->Line_13 $$ number = sb.toString()[ FD ]
Line_2 $$ public static String hide(String number, String x) -->Line_15 $$ return number[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(numberLen - 3)-->Line_12 $$ sb.append(number.substring(numberLen - 4, numberLen))[ FD ]
Line_2 $$ public static String hide(String number, String x) -->Line_3 $$ if (number == null) [ FD ]
Line_7 $$ if (numberLen > 4) -->Line_9 $$ for (int i = 0; i < numberLen - 4; i++) [ CD ]
Line_2 $$ public static String hide(String number, String x) -->Line_12 $$ sb.append(number.substring(numberLen - 4, numberLen))[ FD ]
Line_7 $$ if (numberLen > 4) -->Line_8 $$ StringBundler sb = new StringBundler(numberLen - 3)[ CD ]
Line_2 $$ public static String hide(String number, String x) -->Line_3 $$ if (number == null) [ CD ]
Line_6 $$ int numberLen = number.length()-->Line_7 $$ if (numberLen > 4) [ FD ]
Line_2 $$ public static String hide(String number, String x) -->Line_10 $$ sb.append(x)[ FD ]
