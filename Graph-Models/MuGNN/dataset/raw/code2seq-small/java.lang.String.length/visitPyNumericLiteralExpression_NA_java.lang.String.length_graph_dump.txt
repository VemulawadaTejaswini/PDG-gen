Line_7 $$ StringBuilder message = new StringBuilder(myCommonMessage)-->Line_17 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_32 $$ len = appendLanguageLevel(message, len, languageLevel)-->Line_17 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_24 $$ boolean isNull = true-->Line_31 $$ if (!isNull) [ FD ]
Line_32 $$ len = appendLanguageLevel(message, len, languageLevel)-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_5 $$ int len = 0-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_6 $$ LocalQuickFix quickFix = null-->Line_33 $$ quickFix = new ReplaceOctalNumericLiteralQuickFix()[ FD ]
Line_23 $$ if (c != 'o' && c != 'b' && c != 'x') -->Line_24 $$ boolean isNull = true[ CD ]
Line_15 $$ final String text = node.getText()-->Line_22 $$ final char c = Character.toLowerCase(text.charAt(1))[ FD ]
Line_15 $$ final String text = node.getText()-->Line_16 $$ if (text.endsWith("l") || text.endsWith("L")) [ FD ]
Line_17 $$ len = appendLanguageLevel(message, len, languageLevel)-->Line_32 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_15 $$ final String text = node.getText()-->Line_21 $$ if (text.length() > 1 && text.charAt(0) == '0') [ FD ]
Line_21 $$ if (text.length() > 1 && text.charAt(0) == '0') -->Line_22 $$ final char c = Character.toLowerCase(text.charAt(1))[ CD ]
Line_19 $$ quickFix = new RemoveTrailingLQuickFix()-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_7 $$ StringBuilder message = new StringBuilder(myCommonMessage)-->Line_32 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_7 $$ StringBuilder message = new StringBuilder(myCommonMessage)-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_9 $$ for (int i = 0; i != myVersionsToProcess.size(); ++i) -->Line_10 $$ LanguageLevel languageLevel = myVersionsToProcess.get(i)[ FD ]
Line_9 $$ for (int i = 0; i != myVersionsToProcess.size(); ++i) -->Line_11 $$ if (languageLevel.isPy3K()) [ CD ]
Line_34 $$ suffix = " not support this syntax. It requires '0o' prefix for octal literals"-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_6 $$ LocalQuickFix quickFix = null-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_21 $$ if (text.length() > 1 && text.charAt(0) == '0') -->Line_23 $$ if (c != 'o' && c != 'b' && c != 'x') [ CD ]
Line_16 $$ if (text.endsWith("l") || text.endsWith("L")) -->Line_19 $$ quickFix = new RemoveTrailingLQuickFix()[ CD ]
Line_25 $$ for (char a : text.toCharArray()) -->Line_26 $$ if (a != '0') [ FD ]
Line_31 $$ if (!isNull) -->Line_34 $$ suffix = " not support this syntax. It requires '0o' prefix for octal literals"[ CD ]
Line_11 $$ if (languageLevel.isPy3K()) -->Line_16 $$ if (text.endsWith("l") || text.endsWith("L")) [ CD ]
Line_5 $$ int len = 0-->Line_17 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_10 $$ LanguageLevel languageLevel = myVersionsToProcess.get(i)-->Line_32 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_15 $$ final String text = node.getText()-->Line_25 $$ for (char a : text.toCharArray()) [ FD ]
Line_19 $$ quickFix = new RemoveTrailingLQuickFix()-->Line_33 $$ quickFix = new ReplaceOctalNumericLiteralQuickFix()[ FD ]
Line_8 $$ String suffix = ""-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_16 $$ if (text.endsWith("l") || text.endsWith("L")) -->Line_17 $$ len = appendLanguageLevel(message, len, languageLevel)[ CD ]
Line_6 $$ LocalQuickFix quickFix = null-->Line_19 $$ quickFix = new RemoveTrailingLQuickFix()[ FD ]
Line_11 $$ if (languageLevel.isPy3K()) -->Line_15 $$ final String text = node.getText()[ CD ]
Line_10 $$ LanguageLevel languageLevel = myVersionsToProcess.get(i)-->Line_17 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_16 $$ if (text.endsWith("l") || text.endsWith("L")) -->Line_18 $$ suffix = " not support a trailing \'l\' or \'L\'."[ CD ]
Line_10 $$ LanguageLevel languageLevel = myVersionsToProcess.get(i)-->Line_11 $$ if (languageLevel.isPy3K()) [ FD ]
Line_27 $$ isNull = false-->Line_31 $$ if (!isNull) [ FD ]
Line_5 $$ int len = 0-->Line_32 $$ len = appendLanguageLevel(message, len, languageLevel)[ FD ]
Line_31 $$ if (!isNull) -->Line_32 $$ len = appendLanguageLevel(message, len, languageLevel)[ CD ]
Line_18 $$ suffix = " not support a trailing \'l\' or \'L\'."-->Line_34 $$ suffix = " not support this syntax. It requires '0o' prefix for octal literals"[ FD ]
Line_26 $$ if (a != '0') -->Line_27 $$ isNull = false[ CD ]
Line_8 $$ String suffix = ""-->Line_34 $$ suffix = " not support this syntax. It requires '0o' prefix for octal literals"[ FD ]
Line_11 $$ if (languageLevel.isPy3K()) -->Line_12 $$ if (!node.isIntegerLiteral()) [ CD ]
Line_24 $$ boolean isNull = true-->Line_27 $$ isNull = false[ FD ]
Line_33 $$ quickFix = new ReplaceOctalNumericLiteralQuickFix()-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_9 $$ for (int i = 0; i != myVersionsToProcess.size(); ++i) -->Line_10 $$ LanguageLevel languageLevel = myVersionsToProcess.get(i)[ CD ]
Line_31 $$ if (!isNull) -->Line_33 $$ quickFix = new ReplaceOctalNumericLiteralQuickFix()[ CD ]
Line_18 $$ suffix = " not support a trailing \'l\' or \'L\'."-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_23 $$ if (c != 'o' && c != 'b' && c != 'x') -->Line_31 $$ if (!isNull) [ CD ]
Line_17 $$ len = appendLanguageLevel(message, len, languageLevel)-->Line_40 $$ commonRegisterProblem(message, suffix, len, node, quickFix)[ FD ]
Line_11 $$ if (languageLevel.isPy3K()) -->Line_21 $$ if (text.length() > 1 && text.charAt(0) == '0') [ CD ]
Line_8 $$ String suffix = ""-->Line_18 $$ suffix = " not support a trailing \'l\' or \'L\'."[ FD ]
