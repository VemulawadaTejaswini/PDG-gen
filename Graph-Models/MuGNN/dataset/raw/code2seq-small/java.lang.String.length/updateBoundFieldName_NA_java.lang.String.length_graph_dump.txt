Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_8 $$ checkRemoveUnusedField(root, oldName, FormEditingUtil.getNextSaveUndoGroupId(project))[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_29 $$ if (!isFieldUnreferenced(oldField)) [ CD ]
Line_37 $$ if (editor != null) -->Line_38 $$ editor.refreshAndSave(false)[ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_36 $$ GuiEditor editor = DesignerToolWindowManager.getInstance(project).getActiveFormEditor()[ CD ]
Line_6 $$ final Project project = root.getProject()-->Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))[ FD ]
Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))-->Line_17 $$ CreateFieldFix.runImpl(project, root, aClass, fieldClassName, newName, false, FormEditingUtil.getNextSaveUndoGroupId(project))[ FD ]
Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))-->Line_41 $$ if (!CommonRefactoringUtil.checkReadOnlyStatus(project, aClass)) [ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_6 $$ final Project project = root.getProject()[ FD ]
Line_12 $$ if (aClass == null) -->Line_13 $$ return[ CD ]
Line_6 $$ final Project project = root.getProject()-->Line_30 $$ final int option = Messages.showYesNoDialog(project, MessageFormat.format(UIDesignerBundle.message("message.rename.field"), oldName, newName), UIDesignerBundle.message("title.rename"), Messages.getQuestionIcon())[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_44 $$ final RenameProcessor processor = new RenameProcessor(project, oldField, newName, true, true)[ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_7 $$ if (newName.length() == 0) [ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_37 $$ if (editor != null) [ CD ]
Line_6 $$ final Project project = root.getProject()-->Line_40 $$ PsiDocumentManager.getInstance(project).commitAllDocuments()[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_26 $$ checkRemoveUnusedField(root, oldName, FormEditingUtil.getNextSaveUndoGroupId(project))[ FD ]
Line_15 $$ if (oldName == null) -->Line_19 $$ return[ CD ]
Line_31 $$ if (option != Messages.YES) -->Line_33 $$ return[ CD ]
Line_3 $$ final String classToBind = root.getClassToBind()-->Line_4 $$ if (classToBind == null)[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_25 $$ if (aClass.findFieldByName(newName, true) != null) [ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_17 $$ CreateFieldFix.runImpl(project, root, aClass, fieldClassName, newName, false, FormEditingUtil.getNextSaveUndoGroupId(project))[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_3 $$ final String classToBind = root.getClassToBind()[ CD ]
Line_21 $$ final PsiField oldField = aClass.findFieldByName(oldName, true)-->Line_22 $$ if (oldField == null) [ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_30 $$ final int option = Messages.showYesNoDialog(project, MessageFormat.format(UIDesignerBundle.message("message.rename.field"), oldName, newName), UIDesignerBundle.message("title.rename"), Messages.getQuestionIcon())[ FD ]
Line_44 $$ final RenameProcessor processor = new RenameProcessor(project, oldField, newName, true, true)-->Line_45 $$ processor.run()[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_45 $$ processor.run()[ CD ]
Line_21 $$ final PsiField oldField = aClass.findFieldByName(oldName, true)-->Line_29 $$ if (!isFieldUnreferenced(oldField)) [ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_15 $$ if (oldName == null) [ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_15 $$ if (oldName == null) [ FD ]
Line_6 $$ final Project project = root.getProject()-->Line_36 $$ GuiEditor editor = DesignerToolWindowManager.getInstance(project).getActiveFormEditor()[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_40 $$ PsiDocumentManager.getInstance(project).commitAllDocuments()[ CD ]
Line_25 $$ if (aClass.findFieldByName(newName, true) != null) -->Line_26 $$ checkRemoveUnusedField(root, oldName, FormEditingUtil.getNextSaveUndoGroupId(project))[ CD ]
Line_16 $$ if (aClass.findFieldByName(newName, true) == null) -->Line_17 $$ CreateFieldFix.runImpl(project, root, aClass, fieldClassName, newName, false, FormEditingUtil.getNextSaveUndoGroupId(project))[ CD ]
Line_36 $$ GuiEditor editor = DesignerToolWindowManager.getInstance(project).getActiveFormEditor()-->Line_37 $$ if (editor != null) [ FD ]
Line_22 $$ if (oldField == null) -->Line_23 $$ return[ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_21 $$ final PsiField oldField = aClass.findFieldByName(oldName, true)[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_41 $$ if (!CommonRefactoringUtil.checkReadOnlyStatus(project, aClass)) [ CD ]
Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))-->Line_25 $$ if (aClass.findFieldByName(newName, true) != null) [ FD ]
Line_7 $$ if (newName.length() == 0) -->Line_8 $$ checkRemoveUnusedField(root, oldName, FormEditingUtil.getNextSaveUndoGroupId(project))[ CD ]
Line_4 $$ if (classToBind == null)-->Line_5 $$ return[ CD ]
Line_36 $$ GuiEditor editor = DesignerToolWindowManager.getInstance(project).getActiveFormEditor()-->Line_38 $$ editor.refreshAndSave(false)[ FD ]
Line_29 $$ if (!isFieldUnreferenced(oldField)) -->Line_31 $$ if (option != Messages.YES) [ CD ]
Line_3 $$ final String classToBind = root.getClassToBind()-->Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))[ FD ]
Line_6 $$ final Project project = root.getProject()-->Line_17 $$ CreateFieldFix.runImpl(project, root, aClass, fieldClassName, newName, false, FormEditingUtil.getNextSaveUndoGroupId(project))[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_22 $$ if (oldField == null) [ CD ]
Line_41 $$ if (!CommonRefactoringUtil.checkReadOnlyStatus(project, aClass)) -->Line_42 $$ return[ CD ]
Line_6 $$ final Project project = root.getProject()-->Line_26 $$ checkRemoveUnusedField(root, oldName, FormEditingUtil.getNextSaveUndoGroupId(project))[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_7 $$ if (newName.length() == 0) [ FD ]
Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))-->Line_12 $$ if (aClass == null) [ FD ]
Line_6 $$ final Project project = root.getProject()-->Line_41 $$ if (!CommonRefactoringUtil.checkReadOnlyStatus(project, aClass)) [ FD ]
Line_15 $$ if (oldName == null) -->Line_16 $$ if (aClass.findFieldByName(newName, true) == null) [ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_12 $$ if (aClass == null) [ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_16 $$ if (aClass.findFieldByName(newName, true) == null) [ FD ]
Line_25 $$ if (aClass.findFieldByName(newName, true) != null) -->Line_27 $$ return[ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_6 $$ final Project project = root.getProject()[ CD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))[ CD ]
Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))-->Line_16 $$ if (aClass.findFieldByName(newName, true) == null) [ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_3 $$ final String classToBind = root.getClassToBind()[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_25 $$ if (aClass.findFieldByName(newName, true) != null) [ FD ]
Line_29 $$ if (!isFieldUnreferenced(oldField)) -->Line_30 $$ final int option = Messages.showYesNoDialog(project, MessageFormat.format(UIDesignerBundle.message("message.rename.field"), oldName, newName), UIDesignerBundle.message("title.rename"), Messages.getQuestionIcon())[ CD ]
Line_6 $$ final Project project = root.getProject()-->Line_8 $$ checkRemoveUnusedField(root, oldName, FormEditingUtil.getNextSaveUndoGroupId(project))[ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_4 $$ if (classToBind == null)[ CD ]
Line_7 $$ if (newName.length() == 0) -->Line_9 $$ return[ CD ]
Line_30 $$ final int option = Messages.showYesNoDialog(project, MessageFormat.format(UIDesignerBundle.message("message.rename.field"), oldName, newName), UIDesignerBundle.message("title.rename"), Messages.getQuestionIcon())-->Line_31 $$ if (option != Messages.YES) [ FD ]
Line_2 $$ public static void updateBoundFieldName(final RadRootContainer root, final String oldName, final String newName, final String fieldClassName) -->Line_21 $$ final PsiField oldField = aClass.findFieldByName(oldName, true)[ CD ]
Line_11 $$ final PsiClass aClass = JavaPsiFacade.getInstance(project).findClass(classToBind, GlobalSearchScope.allScope(project))-->Line_21 $$ final PsiField oldField = aClass.findFieldByName(oldName, true)[ FD ]
