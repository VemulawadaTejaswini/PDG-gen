Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_28 $$ validate(component)[ FD ]
Line_5 $$ int mx = x - referencex-->Line_8 $$ mx += getInteger(component, "offset", 0)[ FD ]
Line_45 $$ if ((id == MouseEvent.MOUSE_ENTERED) && (mousepressed == null)) -->Line_46 $$ setCursor(Cursor.getPredefinedCursor(Cursor.TEXT_CURSOR))[ CD ]
Line_5 $$ int mx = x - referencex-->Line_11 $$ mx += view.x - 1[ FD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_26 $$ setInteger(component, "end", caretend, 0)[ CD ]
Line_32 $$ if (!multiline) -->Line_35 $$ Rectangle view = getRectangle(component, ":view")[ CD ]
Line_5 $$ int mx = x - referencex-->Line_33 $$ mx += getInteger(component, "offset", 0)[ FD ]
Line_29 $$ if (id == MouseEvent.MOUSE_DRAGGED) -->Line_40 $$ if (dragcaret != getInteger(component, "end", 0)) [ CD ]
Line_29 $$ if (id == MouseEvent.MOUSE_DRAGGED) -->Line_45 $$ if ((id == MouseEvent.MOUSE_ENTERED) && (mousepressed == null)) [ CD ]
Line_12 $$ my = y - referencey + view.y - 1-->Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_16 $$ if (clickcount > 1) [ CD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_29 $$ if (id == MouseEvent.MOUSE_DRAGGED) [ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_33 $$ mx += getInteger(component, "offset", 0)[ FD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_4 $$ setReference(component, 2 + left, 2)[ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) [ FD ]
Line_15 $$ int caretend = caretstart-->Line_21 $$ while ((caretend < text.length()) && ((clickcount == 2) ? Character.isLetterOrDigit(text.charAt(caretend)) : (text.charAt(caretend) != '\n'))) [ FD ]
Line_6 $$ int my = 0-->Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_17 $$ String text = getString(component, "text", "")-->Line_21 $$ while ((caretend < text.length()) && ((clickcount == 2) ? Character.isLetterOrDigit(text.charAt(caretend)) : (text.charAt(caretend) != '\n'))) [ FD ]
Line_17 $$ String text = getString(component, "text", "")-->Line_18 $$ while ((caretstart > 0) && ((clickcount == 2) ? Character.isLetterOrDigit(text.charAt(caretstart - 1)) : (text.charAt(caretstart - 1) != '\n'))) [ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_8 $$ mx += getInteger(component, "offset", 0)[ FD ]
Line_21 $$ while ((caretend < text.length()) && ((clickcount == 2) ? Character.isLetterOrDigit(text.charAt(caretend)) : (text.charAt(caretend) != '\n'))) -->Line_22 $$ caretend++[ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_17 $$ String text = getString(component, "text", "")[ FD ]
Line_47 $$ if (((id == MouseEvent.MOUSE_EXITED) && (mousepressed == null)) || ((id == MouseEvent.MOUSE_RELEASED) && ((mouseinside != component) || (insidepart != null)))) -->Line_48 $$ setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR))[ CD ]
Line_32 $$ if (!multiline) -->Line_33 $$ mx += getInteger(component, "offset", 0)[ CD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_6 $$ int my = 0[ CD ]
Line_7 $$ if (!multiline) -->Line_11 $$ mx += view.x - 1[ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_4 $$ setReference(component, 2 + left, 2)[ FD ]
Line_7 $$ if (!multiline) -->Line_12 $$ my = y - referencey + view.y - 1[ CD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_28 $$ validate(component)[ CD ]
Line_40 $$ if (dragcaret != getInteger(component, "end", 0)) -->Line_41 $$ setInteger(component, "end", dragcaret, 0)[ CD ]
Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)-->Line_19 $$ caretstart--[ FD ]
Line_29 $$ if (id == MouseEvent.MOUSE_DRAGGED) -->Line_32 $$ if (!multiline) [ CD ]
Line_8 $$ mx += getInteger(component, "offset", 0)-->Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_36 $$ mx += view.x - 1-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_32 $$ if (!multiline) [ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_27 $$ setFocus(component)[ FD ]
Line_5 $$ int mx = x - referencex-->Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_37 $$ my = y - referencey + view.y - 1-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_6 $$ int my = 0-->Line_37 $$ my = y - referencey + view.y - 1[ FD ]
Line_15 $$ int caretend = caretstart-->Line_22 $$ caretend++[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_35 $$ Rectangle view = getRectangle(component, ":view")[ FD ]
Line_8 $$ mx += getInteger(component, "offset", 0)-->Line_11 $$ mx += view.x - 1[ FD ]
Line_11 $$ mx += view.x - 1-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_25 $$ setInteger(component, "start", caretstart, 0)[ CD ]
Line_8 $$ mx += getInteger(component, "offset", 0)-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_16 $$ if (clickcount > 1) -->Line_21 $$ while ((caretend < text.length()) && ((clickcount == 2) ? Character.isLetterOrDigit(text.charAt(caretend)) : (text.charAt(caretend) != '\n'))) [ CD ]
Line_7 $$ if (!multiline) -->Line_10 $$ Rectangle view = getRectangle(component, ":view")[ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_10 $$ Rectangle view = getRectangle(component, ":view")[ FD ]
Line_6 $$ int my = 0-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_15 $$ int caretend = caretstart[ CD ]
Line_12 $$ my = y - referencey + view.y - 1-->Line_37 $$ my = y - referencey + view.y - 1[ FD ]
Line_29 $$ if (id == MouseEvent.MOUSE_DRAGGED) -->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ CD ]
Line_32 $$ if (!multiline) -->Line_36 $$ mx += view.x - 1[ CD ]
Line_8 $$ mx += getInteger(component, "offset", 0)-->Line_36 $$ mx += view.x - 1[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_29 $$ if (id == MouseEvent.MOUSE_DRAGGED) [ FD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_7 $$ if (!multiline) [ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_41 $$ setInteger(component, "end", dragcaret, 0)[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) [ CD ]
Line_40 $$ if (dragcaret != getInteger(component, "end", 0)) -->Line_42 $$ validate(component)[ CD ]
Line_33 $$ mx += getInteger(component, "offset", 0)-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_40 $$ if (dragcaret != getInteger(component, "end", 0)) [ FD ]
Line_11 $$ mx += view.x - 1-->Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_15 $$ int caretend = caretstart-->Line_26 $$ setInteger(component, "end", caretend, 0)[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_16 $$ if (clickcount > 1) [ FD ]
Line_32 $$ if (!multiline) -->Line_37 $$ my = y - referencey + view.y - 1[ CD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)[ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_42 $$ validate(component)[ FD ]
Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)-->Line_25 $$ setInteger(component, "start", caretstart, 0)[ FD ]
Line_8 $$ mx += getInteger(component, "offset", 0)-->Line_33 $$ mx += getInteger(component, "offset", 0)[ FD ]
Line_5 $$ int mx = x - referencex-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_18 $$ while ((caretstart > 0) && ((clickcount == 2) ? Character.isLetterOrDigit(text.charAt(caretstart - 1)) : (text.charAt(caretstart - 1) != '\n'))) -->Line_19 $$ caretstart--[ CD ]
Line_11 $$ mx += view.x - 1-->Line_33 $$ mx += getInteger(component, "offset", 0)[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_25 $$ setInteger(component, "start", caretstart, 0)[ FD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_5 $$ int mx = x - referencex[ CD ]
Line_3 $$ if (id == MouseEvent.MOUSE_PRESSED) -->Line_27 $$ setFocus(component)[ CD ]
Line_11 $$ mx += view.x - 1-->Line_36 $$ mx += view.x - 1[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_26 $$ setInteger(component, "end", caretend, 0)[ FD ]
Line_16 $$ if (clickcount > 1) -->Line_17 $$ String text = getString(component, "text", "")[ CD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_7 $$ if (!multiline) [ FD ]
Line_16 $$ if (clickcount > 1) -->Line_18 $$ while ((caretstart > 0) && ((clickcount == 2) ? Character.isLetterOrDigit(text.charAt(caretstart - 1)) : (text.charAt(caretstart - 1) != '\n'))) [ CD ]
Line_12 $$ my = y - referencey + view.y - 1-->Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_6 $$ int my = 0-->Line_12 $$ my = y - referencey + view.y - 1[ FD ]
Line_2 $$ private void processField(int x, int y, int clickcount, int id, Object component, Object part, boolean multiline, boolean hidden, int left) -->Line_14 $$ int caretstart = getCaretLocation(component, mx, my, hidden)[ FD ]
Line_33 $$ mx += getInteger(component, "offset", 0)-->Line_36 $$ mx += view.x - 1[ FD ]
Line_45 $$ if ((id == MouseEvent.MOUSE_ENTERED) && (mousepressed == null)) -->Line_47 $$ if (((id == MouseEvent.MOUSE_EXITED) && (mousepressed == null)) || ((id == MouseEvent.MOUSE_RELEASED) && ((mouseinside != component) || (insidepart != null)))) [ CD ]
Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)-->Line_40 $$ if (dragcaret != getInteger(component, "end", 0)) [ FD ]
Line_7 $$ if (!multiline) -->Line_8 $$ mx += getInteger(component, "offset", 0)[ CD ]
Line_5 $$ int mx = x - referencex-->Line_36 $$ mx += view.x - 1[ FD ]
Line_39 $$ int dragcaret = getCaretLocation(component, mx, my, hidden)-->Line_41 $$ setInteger(component, "end", dragcaret, 0)[ FD ]
