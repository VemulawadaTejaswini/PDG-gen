Line_2 $$ public static String getSshTunnelValue(@Nullable String tunnelSetting) -->Line_5 $$ String svnSshVariableValue = EnvironmentUtil.getValue(svnSshVariableName)[ CD ]
Line_2 $$ public static String getSshTunnelValue(@Nullable String tunnelSetting) -->Line_4 $$ String svnSshVariableName = getSvnSshVariableName(tunnelSetting)[ FD ]
Line_4 $$ String svnSshVariableName = getSvnSshVariableName(tunnelSetting)-->Line_5 $$ String svnSshVariableValue = EnvironmentUtil.getValue(svnSshVariableName)[ FD ]
Line_2 $$ public static String getSshTunnelValue(@Nullable String tunnelSetting) -->Line_4 $$ String svnSshVariableName = getSvnSshVariableName(tunnelSetting)[ CD ]
Line_2 $$ public static String getSshTunnelValue(@Nullable String tunnelSetting) -->Line_6 $$ return !StringUtil.isEmpty(svnSshVariableValue) ? svnSshVariableValue : !StringUtil.isEmpty(svnSshVariableName) ? tunnelSetting.substring(1 + svnSshVariableName.length()) : tunnelSetting[ CD ]
Line_2 $$ public static String getSshTunnelValue(@Nullable String tunnelSetting) -->Line_6 $$ return !StringUtil.isEmpty(svnSshVariableValue) ? svnSshVariableValue : !StringUtil.isEmpty(svnSshVariableName) ? tunnelSetting.substring(1 + svnSshVariableName.length()) : tunnelSetting[ FD ]
Line_4 $$ String svnSshVariableName = getSvnSshVariableName(tunnelSetting)-->Line_6 $$ return !StringUtil.isEmpty(svnSshVariableValue) ? svnSshVariableValue : !StringUtil.isEmpty(svnSshVariableName) ? tunnelSetting.substring(1 + svnSshVariableName.length()) : tunnelSetting[ FD ]
Line_2 $$ public static String getSshTunnelValue(@Nullable String tunnelSetting) -->Line_3 $$ tunnelSetting = !StringUtil.isEmpty(tunnelSetting) ? tunnelSetting : DEFAULT_SSH_TUNNEL_VALUE[ FD ]
Line_5 $$ String svnSshVariableValue = EnvironmentUtil.getValue(svnSshVariableName)-->Line_6 $$ return !StringUtil.isEmpty(svnSshVariableValue) ? svnSshVariableValue : !StringUtil.isEmpty(svnSshVariableName) ? tunnelSetting.substring(1 + svnSshVariableName.length()) : tunnelSetting[ FD ]
