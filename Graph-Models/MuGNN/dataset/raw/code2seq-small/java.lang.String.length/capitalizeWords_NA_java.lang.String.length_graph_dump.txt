Line_10 $$ if (!leaveOriginalDelims && out.length() > 0) -->Line_11 $$ out.append(' ')[ CD ]
Line_8 $$ while (tokenizer.hasMoreTokens()) -->Line_9 $$ final String word = tokenizer.nextToken()[ CD ]
Line_8 $$ while (tokenizer.hasMoreTokens()) -->Line_14 $$ if (!allWords) [ CD ]
Line_5 $$ final StringTokenizer tokenizer = new StringTokenizer(text, tokenizerDelim, leaveOriginalDelims)-->Line_8 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_6 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_11 $$ out.append(' ')[ FD ]
Line_9 $$ final String word = tokenizer.nextToken()-->Line_13 $$ out.append(toCapitalize ? capitalize(word) : word)[ FD ]
Line_14 $$ if (!allWords) -->Line_15 $$ toCapitalize = false[ CD ]
Line_6 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_18 $$ return out.toString()[ FD ]
Line_8 $$ while (tokenizer.hasMoreTokens()) -->Line_13 $$ out.append(toCapitalize ? capitalize(word) : word)[ CD ]
Line_7 $$ boolean toCapitalize = true-->Line_15 $$ toCapitalize = false[ FD ]
Line_6 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_10 $$ if (!leaveOriginalDelims && out.length() > 0) [ FD ]
Line_6 $$ final StringBuilder out = new StringBuilder(text.length())-->Line_13 $$ out.append(toCapitalize ? capitalize(word) : word)[ FD ]
Line_5 $$ final StringTokenizer tokenizer = new StringTokenizer(text, tokenizerDelim, leaveOriginalDelims)-->Line_9 $$ final String word = tokenizer.nextToken()[ FD ]
Line_8 $$ while (tokenizer.hasMoreTokens()) -->Line_10 $$ if (!leaveOriginalDelims && out.length() > 0) [ CD ]
