Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_8 $$ long bytes[ CD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_13 $$ if (lowerSValue.endsWith("kb")) [ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)[ FD ]
Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)-->Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)[ FD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_31 $$ if (lowerSValue.endsWith("b")) [ FD ]
Line_21 $$ if (lowerSValue.endsWith("gb")) -->Line_23 $$ if (lowerSValue.endsWith("t")) [ CD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)[ FD ]
Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_15 $$ if (lowerSValue.endsWith("m")) -->Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)[ CD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_25 $$ if (lowerSValue.endsWith("tb")) -->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ CD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_8 $$ long bytes-->Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)[ FD ]
Line_25 $$ if (lowerSValue.endsWith("tb")) -->Line_27 $$ if (lowerSValue.endsWith("p")) [ CD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)[ FD ]
Line_31 $$ if (lowerSValue.endsWith("b")) -->Line_33 $$ if (lowerSValue.equals("-1")) [ CD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)[ FD ]
Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ FD ]
Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_51 $$ return new ByteSizeValue(bytes, ByteSizeUnit.BYTES)[ CD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_33 $$ if (lowerSValue.equals("-1")) [ FD ]
Line_8 $$ long bytes-->Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_33 $$ if (lowerSValue.equals("-1")) -->Line_36 $$ if (lowerSValue.equals("0")) [ CD ]
Line_5 $$ if (sValue == null) -->Line_6 $$ return defaultValue[ CD ]
Line_3 $$ settingName = Objects.requireNonNull(settingName)-->Line_4 $$ assert settingName.startsWith("index.") == false || MetaDataIndexUpgradeService.INDEX_BYTES_SIZE_SETTINGS.contains(settingName)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_17 $$ if (lowerSValue.endsWith("mb")) [ FD ]
Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_5 $$ if (sValue == null) [ CD ]
Line_23 $$ if (lowerSValue.endsWith("t")) -->Line_25 $$ if (lowerSValue.endsWith("tb")) [ CD ]
Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_8 $$ long bytes-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_8 $$ long bytes-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_11 $$ if (lowerSValue.endsWith("k")) -->Line_13 $$ if (lowerSValue.endsWith("kb")) [ CD ]
Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_19 $$ if (lowerSValue.endsWith("g")) -->Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)[ CD ]
Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_3 $$ settingName = Objects.requireNonNull(settingName)[ FD ]
Line_27 $$ if (lowerSValue.endsWith("p")) -->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ CD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)[ FD ]
Line_8 $$ long bytes-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_23 $$ if (lowerSValue.endsWith("t")) [ FD ]
Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)[ FD ]
Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_36 $$ if (lowerSValue.equals("0")) [ FD ]
Line_13 $$ if (lowerSValue.endsWith("kb")) -->Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)[ CD ]
Line_8 $$ long bytes-->Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)[ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_15 $$ if (lowerSValue.endsWith("m")) -->Line_17 $$ if (lowerSValue.endsWith("mb")) [ CD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)[ FD ]
Line_17 $$ if (lowerSValue.endsWith("mb")) -->Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)[ CD ]
Line_8 $$ long bytes-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_19 $$ if (lowerSValue.endsWith("g")) [ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_21 $$ if (lowerSValue.endsWith("gb")) [ FD ]
Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_29 $$ if (lowerSValue.endsWith("pb")) -->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ CD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_21 $$ if (lowerSValue.endsWith("gb")) -->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ CD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_11 $$ if (lowerSValue.endsWith("k")) -->Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)[ CD ]
Line_8 $$ long bytes-->Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)[ FD ]
Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_27 $$ if (lowerSValue.endsWith("p")) [ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)-->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_15 $$ if (lowerSValue.endsWith("m")) [ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)[ FD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)[ FD ]
Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_19 $$ if (lowerSValue.endsWith("g")) -->Line_21 $$ if (lowerSValue.endsWith("gb")) [ CD ]
Line_31 $$ if (lowerSValue.endsWith("b")) -->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ CD ]
Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_3 $$ settingName = Objects.requireNonNull(settingName)[ CD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_25 $$ if (lowerSValue.endsWith("tb")) [ FD ]
Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ FD ]
Line_29 $$ if (lowerSValue.endsWith("pb")) -->Line_31 $$ if (lowerSValue.endsWith("b")) [ CD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_18 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C2)-->Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)[ FD ]
Line_23 $$ if (lowerSValue.endsWith("t")) -->Line_24 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C4)[ CD ]
Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)-->Line_30 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C5)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_29 $$ if (lowerSValue.endsWith("pb")) [ FD ]
Line_8 $$ long bytes-->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ FD ]
Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)[ FD ]
Line_28 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C5)-->Line_32 $$ bytes = Long.parseLong(lowerSValue.substring(0, lowerSValue.length() - 1).trim())[ FD ]
Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)-->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ FD ]
Line_8 $$ long bytes-->Line_26 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C4)[ FD ]
Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()-->Line_11 $$ if (lowerSValue.endsWith("k")) [ FD ]
Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)-->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ FD ]
Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_10 $$ String lowerSValue = sValue.toLowerCase(Locale.ROOT).trim()[ FD ]
Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_5 $$ if (sValue == null) [ FD ]
Line_27 $$ if (lowerSValue.endsWith("p")) -->Line_29 $$ if (lowerSValue.endsWith("pb")) [ CD ]
Line_2 $$ public static ByteSizeValue parseBytesSizeValue(String sValue, ByteSizeValue defaultValue, String settingName) throws ElasticsearchParseException -->Line_4 $$ assert settingName.startsWith("index.") == false || MetaDataIndexUpgradeService.INDEX_BYTES_SIZE_SETTINGS.contains(settingName)[ FD ]
Line_12 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C1)-->Line_16 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C2)[ FD ]
Line_17 $$ if (lowerSValue.endsWith("mb")) -->Line_19 $$ if (lowerSValue.endsWith("g")) [ CD ]
Line_14 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C1)-->Line_22 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 2)) * ByteSizeUnit.C3)[ FD ]
Line_8 $$ long bytes-->Line_20 $$ bytes = (long) (Double.parseDouble(lowerSValue.substring(0, lowerSValue.length() - 1)) * ByteSizeUnit.C3)[ FD ]
Line_13 $$ if (lowerSValue.endsWith("kb")) -->Line_15 $$ if (lowerSValue.endsWith("m")) [ CD ]
