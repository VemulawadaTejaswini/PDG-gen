Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_16 $$ return zev.toArray(entries)[ CD ]
Line_8 $$ for (ZipEntryRO ze : values) -->Line_11 $$ zev.add(ze)[ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_5 $$ if (null == path)[ CD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_15 $$ ZipEntryRO[] entries = new ZipEntryRO[zev.size()][ CD ]
Line_15 $$ ZipEntryRO[] entries = new ZipEntryRO[zev.size()]-->Line_16 $$ return zev.toArray(entries)[ FD ]
Line_9 $$ if (ze.mFileName.startsWith(path)) -->Line_10 $$ if (-1 == ze.mFileName.indexOf('/', length)) [ CD ]
Line_3 $$ Vector<ZipEntryRO> zev = new Vector<ZipEntryRO>()-->Line_11 $$ zev.add(ze)[ FD ]
Line_6 $$ path = ""-->Line_7 $$ int length = path.length()[ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_7 $$ int length = path.length()[ FD ]
Line_10 $$ if (-1 == ze.mFileName.indexOf('/', length)) -->Line_11 $$ zev.add(ze)[ CD ]
Line_5 $$ if (null == path)-->Line_6 $$ path = ""[ CD ]
Line_7 $$ int length = path.length()-->Line_10 $$ if (-1 == ze.mFileName.indexOf('/', length)) [ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_7 $$ int length = path.length()[ CD ]
Line_3 $$ Vector<ZipEntryRO> zev = new Vector<ZipEntryRO>()-->Line_15 $$ ZipEntryRO[] entries = new ZipEntryRO[zev.size()][ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_6 $$ path = ""[ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_9 $$ if (ze.mFileName.startsWith(path)) [ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_4 $$ Collection<ZipEntryRO> values = mHashMap.values()[ CD ]
Line_6 $$ path = ""-->Line_9 $$ if (ze.mFileName.startsWith(path)) [ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_5 $$ if (null == path)[ FD ]
Line_2 $$ ZipEntryRO[] getEntriesAt(String path) -->Line_3 $$ Vector<ZipEntryRO> zev = new Vector<ZipEntryRO>()[ CD ]
Line_3 $$ Vector<ZipEntryRO> zev = new Vector<ZipEntryRO>()-->Line_16 $$ return zev.toArray(entries)[ FD ]
