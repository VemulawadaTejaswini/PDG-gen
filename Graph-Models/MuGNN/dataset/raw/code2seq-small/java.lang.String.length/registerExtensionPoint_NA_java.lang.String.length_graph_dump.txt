Line_7 $$ epName = extensionPoint.getQualifiedName().getStringValue()-->Line_10 $$ if (!epName.startsWith(epPrefix))[ FD ]
Line_5 $$ epName = pluginId + "." + epName-->Line_10 $$ if (!epName.startsWith(epPrefix))[ FD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_3 $$ String epName = extensionPoint.getName().getStringValue()[ CD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_13 $$ domExtension.setDeclaringElement(extensionPoint)[ FD ]
Line_5 $$ epName = pluginId + "." + epName-->Line_12 $$ final DomExtension domExtension = registrar.registerCollectionChildrenExtension(new XmlName(epName.substring(epPrefix.length())), Extension.class)[ FD ]
Line_4 $$ if (epName != null && StringUtil.isNotEmpty(pluginId))-->Line_5 $$ epName = pluginId + "." + epName[ CD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_8 $$ if (epName == null)[ CD ]
Line_7 $$ epName = extensionPoint.getQualifiedName().getStringValue()-->Line_12 $$ final DomExtension domExtension = registrar.registerCollectionChildrenExtension(new XmlName(epName.substring(epPrefix.length())), Extension.class)[ FD ]
Line_5 $$ epName = pluginId + "." + epName-->Line_6 $$ if (epName == null)[ FD ]
Line_3 $$ String epName = extensionPoint.getName().getStringValue()-->Line_7 $$ epName = extensionPoint.getQualifiedName().getStringValue()[ FD ]
Line_5 $$ epName = pluginId + "." + epName-->Line_8 $$ if (epName == null)[ FD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_13 $$ domExtension.setDeclaringElement(extensionPoint)[ CD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_12 $$ final DomExtension domExtension = registrar.registerCollectionChildrenExtension(new XmlName(epName.substring(epPrefix.length())), Extension.class)[ FD ]
Line_10 $$ if (!epName.startsWith(epPrefix))-->Line_11 $$ return[ CD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_4 $$ if (epName != null && StringUtil.isNotEmpty(pluginId))[ FD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_7 $$ epName = extensionPoint.getQualifiedName().getStringValue()[ FD ]
Line_3 $$ String epName = extensionPoint.getName().getStringValue()-->Line_8 $$ if (epName == null)[ FD ]
Line_12 $$ final DomExtension domExtension = registrar.registerCollectionChildrenExtension(new XmlName(epName.substring(epPrefix.length())), Extension.class)-->Line_14 $$ domExtension.addExtender(EXTENSION_EXTENDER)[ FD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_10 $$ if (!epName.startsWith(epPrefix))[ CD ]
Line_12 $$ final DomExtension domExtension = registrar.registerCollectionChildrenExtension(new XmlName(epName.substring(epPrefix.length())), Extension.class)-->Line_13 $$ domExtension.setDeclaringElement(extensionPoint)[ FD ]
Line_3 $$ String epName = extensionPoint.getName().getStringValue()-->Line_5 $$ epName = pluginId + "." + epName[ FD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_3 $$ String epName = extensionPoint.getName().getStringValue()[ FD ]
Line_5 $$ epName = pluginId + "." + epName-->Line_7 $$ epName = extensionPoint.getQualifiedName().getStringValue()[ FD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_10 $$ if (!epName.startsWith(epPrefix))[ FD ]
Line_3 $$ String epName = extensionPoint.getName().getStringValue()-->Line_10 $$ if (!epName.startsWith(epPrefix))[ FD ]
Line_6 $$ if (epName == null)-->Line_7 $$ epName = extensionPoint.getQualifiedName().getStringValue()[ CD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_6 $$ if (epName == null)[ CD ]
Line_7 $$ epName = extensionPoint.getQualifiedName().getStringValue()-->Line_8 $$ if (epName == null)[ FD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_4 $$ if (epName != null && StringUtil.isNotEmpty(pluginId))[ CD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_14 $$ domExtension.addExtender(EXTENSION_EXTENDER)[ CD ]
Line_3 $$ String epName = extensionPoint.getName().getStringValue()-->Line_12 $$ final DomExtension domExtension = registrar.registerCollectionChildrenExtension(new XmlName(epName.substring(epPrefix.length())), Extension.class)[ FD ]
Line_8 $$ if (epName == null)-->Line_9 $$ return[ CD ]
Line_2 $$ private static void registerExtensionPoint(final DomExtensionsRegistrar registrar, final ExtensionPoint extensionPoint, String epPrefix, @Nullable String pluginId) -->Line_12 $$ final DomExtension domExtension = registrar.registerCollectionChildrenExtension(new XmlName(epName.substring(epPrefix.length())), Extension.class)[ CD ]
Line_3 $$ String epName = extensionPoint.getName().getStringValue()-->Line_6 $$ if (epName == null)[ FD ]
