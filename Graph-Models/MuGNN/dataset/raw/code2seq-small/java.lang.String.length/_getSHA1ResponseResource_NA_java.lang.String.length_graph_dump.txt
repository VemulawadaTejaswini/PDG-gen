Line_10 $$ HttpResponse httpResponse = new BasicHttpResponse(new BasicStatusLine(HttpVersion.HTTP_1_1, HttpStatus.SC_OK, null))-->Line_11 $$ httpResponse.setEntity(new StringEntity(sha1))[ FD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_5 $$ if (cachedArtifactFile == null) [ CD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_4 $$ File cachedArtifactFile = _getCachedArtifactFile(location)[ CD ]
Line_4 $$ File cachedArtifactFile = _getCachedArtifactFile(location)-->Line_8 $$ HashValue hashValue = HashUtil.sha1(cachedArtifactFile)[ FD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_12 $$ httpResponse.setHeader(HttpHeaders.CONTENT_LENGTH, String.valueOf(sha1.length()))[ CD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_13 $$ httpResponse.setHeader(HttpHeaders.LAST_MODIFIED, String.valueOf(cachedArtifactFile.lastModified()))[ CD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_4 $$ File cachedArtifactFile = _getCachedArtifactFile(location)[ FD ]
Line_5 $$ if (cachedArtifactFile == null) -->Line_6 $$ return null[ CD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_10 $$ HttpResponse httpResponse = new BasicHttpResponse(new BasicStatusLine(HttpVersion.HTTP_1_1, HttpStatus.SC_OK, null))[ CD ]
Line_10 $$ HttpResponse httpResponse = new BasicHttpResponse(new BasicStatusLine(HttpVersion.HTTP_1_1, HttpStatus.SC_OK, null))-->Line_12 $$ httpResponse.setHeader(HttpHeaders.CONTENT_LENGTH, String.valueOf(sha1.length()))[ FD ]
Line_4 $$ File cachedArtifactFile = _getCachedArtifactFile(location)-->Line_5 $$ if (cachedArtifactFile == null) [ FD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_3 $$ location = location.substring(0, location.length() - 5)[ FD ]
Line_8 $$ HashValue hashValue = HashUtil.sha1(cachedArtifactFile)-->Line_9 $$ String sha1 = hashValue.asHexString()[ FD ]
Line_3 $$ location = location.substring(0, location.length() - 5)-->Line_4 $$ File cachedArtifactFile = _getCachedArtifactFile(location)[ FD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_8 $$ HashValue hashValue = HashUtil.sha1(cachedArtifactFile)[ CD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_11 $$ httpResponse.setEntity(new StringEntity(sha1))[ CD ]
Line_4 $$ File cachedArtifactFile = _getCachedArtifactFile(location)-->Line_13 $$ httpResponse.setHeader(HttpHeaders.LAST_MODIFIED, String.valueOf(cachedArtifactFile.lastModified()))[ FD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_9 $$ String sha1 = hashValue.asHexString()[ CD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_14 $$ return new HttpResponseResource(HttpGet.METHOD_NAME, uri, httpResponse)[ CD ]
Line_2 $$ private HttpResponseResource _getSHA1ResponseResource(URI uri, String location) throws Exception -->Line_3 $$ location = location.substring(0, location.length() - 5)[ CD ]
Line_10 $$ HttpResponse httpResponse = new BasicHttpResponse(new BasicStatusLine(HttpVersion.HTTP_1_1, HttpStatus.SC_OK, null))-->Line_13 $$ httpResponse.setHeader(HttpHeaders.LAST_MODIFIED, String.valueOf(cachedArtifactFile.lastModified()))[ FD ]
Line_9 $$ String sha1 = hashValue.asHexString()-->Line_12 $$ httpResponse.setHeader(HttpHeaders.CONTENT_LENGTH, String.valueOf(sha1.length()))[ FD ]
