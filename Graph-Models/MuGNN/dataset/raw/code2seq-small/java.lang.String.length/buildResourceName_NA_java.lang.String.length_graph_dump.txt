Line_2 $$ public static String buildResourceName(final PsiFile file) -->Line_10 $$ return packageName.replace('.', '/') + '/' + file.getName()[ FD ]
Line_7 $$ if (packageName.length() == 0) -->Line_8 $$ return file.getName()[ CD ]
Line_2 $$ public static String buildResourceName(final PsiFile file) -->Line_4 $$ if (directory != null) [ CD ]
Line_4 $$ if (directory != null) -->Line_10 $$ return packageName.replace('.', '/') + '/' + file.getName()[ CD ]
Line_6 $$ String packageName = pkg != null ? pkg.getQualifiedName() : ""-->Line_10 $$ return packageName.replace('.', '/') + '/' + file.getName()[ FD ]
Line_2 $$ public static String buildResourceName(final PsiFile file) -->Line_8 $$ return file.getName()[ FD ]
Line_4 $$ if (directory != null) -->Line_5 $$ PsiPackage pkg = JavaDirectoryService.getInstance().getPackage(directory)[ CD ]
Line_2 $$ public static String buildResourceName(final PsiFile file) -->Line_12 $$ return null[ CD ]
Line_3 $$ PsiDirectory directory = file.getContainingDirectory()-->Line_5 $$ PsiPackage pkg = JavaDirectoryService.getInstance().getPackage(directory)[ FD ]
Line_4 $$ if (directory != null) -->Line_6 $$ String packageName = pkg != null ? pkg.getQualifiedName() : ""[ CD ]
Line_2 $$ public static String buildResourceName(final PsiFile file) -->Line_3 $$ PsiDirectory directory = file.getContainingDirectory()[ FD ]
Line_6 $$ String packageName = pkg != null ? pkg.getQualifiedName() : ""-->Line_7 $$ if (packageName.length() == 0) [ FD ]
Line_2 $$ public static String buildResourceName(final PsiFile file) -->Line_3 $$ PsiDirectory directory = file.getContainingDirectory()[ CD ]
Line_5 $$ PsiPackage pkg = JavaDirectoryService.getInstance().getPackage(directory)-->Line_6 $$ String packageName = pkg != null ? pkg.getQualifiedName() : ""[ FD ]
Line_4 $$ if (directory != null) -->Line_7 $$ if (packageName.length() == 0) [ CD ]
Line_3 $$ PsiDirectory directory = file.getContainingDirectory()-->Line_4 $$ if (directory != null) [ FD ]
