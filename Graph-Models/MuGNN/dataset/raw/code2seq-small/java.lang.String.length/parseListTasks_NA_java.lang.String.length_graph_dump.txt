Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(stream))-->Line_7 $$ while ((line = br.readLine()) != null) [ FD ]
Line_9 $$ if (tab != -1) -->Line_10 $$ String proc = line.substring(0, tab).trim()[ CD ]
Line_8 $$ int tab = line.indexOf('\t')-->Line_11 $$ String name = line.substring(tab).trim()[ FD ]
Line_7 $$ while ((line = br.readLine()) != null) -->Line_10 $$ String proc = line.substring(0, tab).trim()[ FD ]
Line_6 $$ String line-->Line_10 $$ String proc = line.substring(0, tab).trim()[ FD ]
Line_3 $$ List<ProcessInfo> processList = ContainerUtil.newArrayList()-->Line_24 $$ return processList.isEmpty() ? ProcessInfo.EMPTY_ARRAY : processList.toArray(new ProcessInfo[processList.size()])[ FD ]
Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(stream))-->Line_22 $$ br.close()[ FD ]
Line_10 $$ String proc = line.substring(0, tab).trim()-->Line_12 $$ if (proc.length() > 0 && name.length() > 0) [ FD ]
Line_7 $$ while ((line = br.readLine()) != null) -->Line_9 $$ if (tab != -1) [ CD ]
Line_8 $$ int tab = line.indexOf('\t')-->Line_10 $$ String proc = line.substring(0, tab).trim()[ FD ]
Line_2 $$ private static ProcessInfo[] parseListTasks(InputStream stream) throws IOException -->Line_4 $$ BufferedReader br = new BufferedReader(new InputStreamReader(stream))[ CD ]
Line_11 $$ String name = line.substring(tab).trim()-->Line_12 $$ if (proc.length() > 0 && name.length() > 0) [ FD ]
Line_2 $$ private static ProcessInfo[] parseListTasks(InputStream stream) throws IOException -->Line_3 $$ List<ProcessInfo> processList = ContainerUtil.newArrayList()[ CD ]
Line_9 $$ if (tab != -1) -->Line_12 $$ if (proc.length() > 0 && name.length() > 0) [ CD ]
Line_6 $$ String line-->Line_11 $$ String name = line.substring(tab).trim()[ FD ]
Line_3 $$ List<ProcessInfo> processList = ContainerUtil.newArrayList()-->Line_15 $$ processList.add(new ProcessInfo(pid, name))[ FD ]
Line_6 $$ String line-->Line_8 $$ int tab = line.indexOf('\t')[ FD ]
Line_9 $$ if (tab != -1) -->Line_11 $$ String name = line.substring(tab).trim()[ CD ]
Line_7 $$ while ((line = br.readLine()) != null) -->Line_11 $$ String name = line.substring(tab).trim()[ FD ]
Line_7 $$ while ((line = br.readLine()) != null) -->Line_8 $$ int tab = line.indexOf('\t')[ FD ]
Line_2 $$ private static ProcessInfo[] parseListTasks(InputStream stream) throws IOException -->Line_24 $$ return processList.isEmpty() ? ProcessInfo.EMPTY_ARRAY : processList.toArray(new ProcessInfo[processList.size()])[ CD ]
Line_10 $$ String proc = line.substring(0, tab).trim()-->Line_14 $$ int pid = Integer.parseInt(proc)[ FD ]
Line_7 $$ while ((line = br.readLine()) != null) -->Line_8 $$ int tab = line.indexOf('\t')[ CD ]
Line_8 $$ int tab = line.indexOf('\t')-->Line_9 $$ if (tab != -1) [ FD ]
Line_6 $$ String line-->Line_7 $$ while ((line = br.readLine()) != null) [ FD ]
