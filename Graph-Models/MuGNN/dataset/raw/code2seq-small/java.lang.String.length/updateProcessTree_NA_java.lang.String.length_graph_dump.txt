Line_7 $$ for (Map.Entry<String, ProcessInfo> entry : allProcessInfo.entrySet()) -->Line_8 $$ String pid = entry.getKey()[ FD ]
Line_2 $$ public void updateProcessTree() -->Line_3 $$ if (taskProcessId != null) [ CD ]
Line_5 $$ if (processesInfoStr != null && processesInfoStr.length() > 0) -->Line_6 $$ Map<String, ProcessInfo> allProcessInfo = createProcessInfo(processesInfoStr)[ CD ]
Line_6 $$ Map<String, ProcessInfo> allProcessInfo = createProcessInfo(processesInfoStr)-->Line_7 $$ for (Map.Entry<String, ProcessInfo> entry : allProcessInfo.entrySet()) [ FD ]
Line_5 $$ if (processesInfoStr != null && processesInfoStr.length() > 0) -->Line_18 $$ processTree.clear()[ CD ]
Line_3 $$ if (taskProcessId != null) -->Line_4 $$ String processesInfoStr = getAllProcessInfoFromShell()[ CD ]
Line_11 $$ if (oldInfo != null) -->Line_12 $$ pInfo.age += oldInfo.age[ CD ]
Line_5 $$ if (processesInfoStr != null && processesInfoStr.length() > 0) -->Line_21 $$ processTree.clear()[ CD ]
Line_8 $$ String pid = entry.getKey()-->Line_10 $$ ProcessInfo oldInfo = processTree.get(pid)[ FD ]
Line_11 $$ if (oldInfo != null) -->Line_13 $$ pInfo.cpuTimeMsDelta = pInfo.cpuTimeMs - oldInfo.cpuTimeMs[ CD ]
Line_4 $$ String processesInfoStr = getAllProcessInfoFromShell()-->Line_6 $$ Map<String, ProcessInfo> allProcessInfo = createProcessInfo(processesInfoStr)[ FD ]
Line_7 $$ for (Map.Entry<String, ProcessInfo> entry : allProcessInfo.entrySet()) -->Line_9 $$ ProcessInfo pInfo = entry.getValue()[ FD ]
Line_3 $$ if (taskProcessId != null) -->Line_5 $$ if (processesInfoStr != null && processesInfoStr.length() > 0) [ CD ]
Line_4 $$ String processesInfoStr = getAllProcessInfoFromShell()-->Line_5 $$ if (processesInfoStr != null && processesInfoStr.length() > 0) [ FD ]
Line_11 $$ if (oldInfo != null) -->Line_15 $$ pInfo.cpuTimeMsDelta = pInfo.cpuTimeMs[ CD ]
Line_10 $$ ProcessInfo oldInfo = processTree.get(pid)-->Line_11 $$ if (oldInfo != null) [ FD ]
