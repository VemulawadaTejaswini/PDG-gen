Line_7 $$ for (final String prefix : myPackagePrefixIndex.getAllPackagePrefixes(scope)) -->Line_9 $$ final int i = prefix.indexOf('.', qualifiedName.length() + 1)[ FD ]
Line_5 $$ final Map<String, PsiPackage> packagesMap = new HashMap<String, PsiPackage>()-->Line_12 $$ packagesMap.put(childName, new PsiPackageImpl(psiPackage.getManager(), childName))[ FD ]
Line_7 $$ for (final String prefix : myPackagePrefixIndex.getAllPackagePrefixes(scope)) -->Line_8 $$ if (StringUtil.isEmpty(qualifiedName) || StringUtil.startsWithConcatenation(prefix, qualifiedName, ".")) [ FD ]
Line_10 $$ String childName = i >= 0 ? prefix.substring(0, i) : prefix-->Line_11 $$ if (!packagesMap.containsKey(childName)) [ FD ]
Line_9 $$ final int i = prefix.indexOf('.', qualifiedName.length() + 1)-->Line_10 $$ String childName = i >= 0 ? prefix.substring(0, i) : prefix[ FD ]
Line_11 $$ if (!packagesMap.containsKey(childName)) -->Line_12 $$ packagesMap.put(childName, new PsiPackageImpl(psiPackage.getManager(), childName))[ CD ]
Line_10 $$ String childName = i >= 0 ? prefix.substring(0, i) : prefix-->Line_12 $$ packagesMap.put(childName, new PsiPackageImpl(psiPackage.getManager(), childName))[ FD ]
Line_5 $$ final Map<String, PsiPackage> packagesMap = new HashMap<String, PsiPackage>()-->Line_18 $$ return packagesMap.values().toArray(new PsiPackage[packagesMap.size()])[ FD ]
Line_7 $$ for (final String prefix : myPackagePrefixIndex.getAllPackagePrefixes(scope)) -->Line_10 $$ String childName = i >= 0 ? prefix.substring(0, i) : prefix[ FD ]
Line_8 $$ if (StringUtil.isEmpty(qualifiedName) || StringUtil.startsWithConcatenation(prefix, qualifiedName, ".")) -->Line_11 $$ if (!packagesMap.containsKey(childName)) [ CD ]
Line_6 $$ final String qualifiedName = psiPackage.getQualifiedName()-->Line_8 $$ if (StringUtil.isEmpty(qualifiedName) || StringUtil.startsWithConcatenation(prefix, qualifiedName, ".")) [ FD ]
Line_5 $$ final Map<String, PsiPackage> packagesMap = new HashMap<String, PsiPackage>()-->Line_11 $$ if (!packagesMap.containsKey(childName)) [ FD ]
Line_6 $$ final String qualifiedName = psiPackage.getQualifiedName()-->Line_9 $$ final int i = prefix.indexOf('.', qualifiedName.length() + 1)[ FD ]
Line_8 $$ if (StringUtil.isEmpty(qualifiedName) || StringUtil.startsWithConcatenation(prefix, qualifiedName, ".")) -->Line_10 $$ String childName = i >= 0 ? prefix.substring(0, i) : prefix[ CD ]
Line_8 $$ if (StringUtil.isEmpty(qualifiedName) || StringUtil.startsWithConcatenation(prefix, qualifiedName, ".")) -->Line_9 $$ final int i = prefix.indexOf('.', qualifiedName.length() + 1)[ CD ]
