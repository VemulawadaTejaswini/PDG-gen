Line_2 $$ private void startWebApp() -->Line_5 $$ initializers = initializers == null || initializers.length() == 0 ? "" : initializers[ CD ]
Line_4 $$ String initializers = conf.get("hadoop.http.filter.initializers")-->Line_7 $$ initializers = TimelineAuthenticationFilterInitializer.class.getName() + "," + initializers[ FD ]
Line_18 $$ String actualInitializers = org.apache.commons.lang.StringUtils.join(target, ",")-->Line_20 $$ conf.set("hadoop.http.filter.initializers", actualInitializers)[ FD ]
Line_3 $$ Configuration conf = getConfig()-->Line_4 $$ String initializers = conf.get("hadoop.http.filter.initializers")[ FD ]
Line_11 $$ for (String filterInitializer : parts) -->Line_12 $$ filterInitializer = filterInitializer.trim()[ FD ]
Line_4 $$ String initializers = conf.get("hadoop.http.filter.initializers")-->Line_19 $$ if (!actualInitializers.equals(initializers)) [ FD ]
Line_25 $$ AHSWebApp ahsWebApp = AHSWebApp.getInstance()-->Line_29 $$ webApp = WebApps.$for("applicationhistory", ApplicationHistoryClientService.class, ahsClientService, "ws").with(conf).at(bindAddress).start(ahsWebApp)[ FD ]
Line_31 $$ String msg = "AHSWebApp failed to start."-->Line_32 $$ LOG.error(msg, e)[ FD ]
Line_2 $$ private void startWebApp() -->Line_6 $$ if (!initializers.contains(TimelineAuthenticationFilterInitializer.class.getName())) [ CD ]
Line_2 $$ private void startWebApp() -->Line_3 $$ Configuration conf = getConfig()[ CD ]
Line_25 $$ AHSWebApp ahsWebApp = AHSWebApp.getInstance()-->Line_28 $$ ahsWebApp.setTimelineDataManager(timelineDataManager)[ FD ]
Line_2 $$ private void startWebApp() -->Line_22 $$ String bindAddress = WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.TIMELINE_SERVICE_BIND_HOST, WebAppUtils.getAHSWebAppURLWithoutScheme(conf))[ CD ]
Line_4 $$ String initializers = conf.get("hadoop.http.filter.initializers")-->Line_5 $$ initializers = initializers == null || initializers.length() == 0 ? "" : initializers[ FD ]
Line_5 $$ initializers = initializers == null || initializers.length() == 0 ? "" : initializers-->Line_19 $$ if (!actualInitializers.equals(initializers)) [ FD ]
Line_7 $$ initializers = TimelineAuthenticationFilterInitializer.class.getName() + "," + initializers-->Line_19 $$ if (!actualInitializers.equals(initializers)) [ FD ]
Line_2 $$ private void startWebApp() -->Line_19 $$ if (!actualInitializers.equals(initializers)) [ CD ]
Line_5 $$ initializers = initializers == null || initializers.length() == 0 ? "" : initializers-->Line_7 $$ initializers = TimelineAuthenticationFilterInitializer.class.getName() + "," + initializers[ FD ]
Line_19 $$ if (!actualInitializers.equals(initializers)) -->Line_20 $$ conf.set("hadoop.http.filter.initializers", actualInitializers)[ CD ]
Line_2 $$ private void startWebApp() -->Line_18 $$ String actualInitializers = org.apache.commons.lang.StringUtils.join(target, ",")[ CD ]
Line_18 $$ String actualInitializers = org.apache.commons.lang.StringUtils.join(target, ",")-->Line_19 $$ if (!actualInitializers.equals(initializers)) [ FD ]
Line_3 $$ Configuration conf = getConfig()-->Line_22 $$ String bindAddress = WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.TIMELINE_SERVICE_BIND_HOST, WebAppUtils.getAHSWebAppURLWithoutScheme(conf))[ FD ]
Line_12 $$ filterInitializer = filterInitializer.trim()-->Line_13 $$ if (filterInitializer.equals(AuthenticationFilterInitializer.class.getName())) [ FD ]
Line_5 $$ initializers = initializers == null || initializers.length() == 0 ? "" : initializers-->Line_6 $$ if (!initializers.contains(TimelineAuthenticationFilterInitializer.class.getName())) [ FD ]
Line_2 $$ private void startWebApp() -->Line_10 $$ ArrayList<String> target = new ArrayList<String>()[ CD ]
Line_25 $$ AHSWebApp ahsWebApp = AHSWebApp.getInstance()-->Line_27 $$ ahsWebApp.setTimelineDelegationTokenSecretManagerService(secretManagerService)[ FD ]
Line_4 $$ String initializers = conf.get("hadoop.http.filter.initializers")-->Line_9 $$ String[] parts = initializers.split(",")[ FD ]
Line_4 $$ String initializers = conf.get("hadoop.http.filter.initializers")-->Line_6 $$ if (!initializers.contains(TimelineAuthenticationFilterInitializer.class.getName())) [ FD ]
Line_2 $$ private void startWebApp() -->Line_4 $$ String initializers = conf.get("hadoop.http.filter.initializers")[ CD ]
Line_12 $$ filterInitializer = filterInitializer.trim()-->Line_16 $$ target.add(filterInitializer)[ FD ]
Line_3 $$ Configuration conf = getConfig()-->Line_20 $$ conf.set("hadoop.http.filter.initializers", actualInitializers)[ FD ]
Line_2 $$ private void startWebApp() -->Line_9 $$ String[] parts = initializers.split(",")[ CD ]
Line_5 $$ initializers = initializers == null || initializers.length() == 0 ? "" : initializers-->Line_9 $$ String[] parts = initializers.split(",")[ FD ]
Line_11 $$ for (String filterInitializer : parts) -->Line_13 $$ if (filterInitializer.equals(AuthenticationFilterInitializer.class.getName())) [ FD ]
Line_25 $$ AHSWebApp ahsWebApp = AHSWebApp.getInstance()-->Line_26 $$ ahsWebApp.setApplicationHistoryManager(historyManager)[ FD ]
Line_10 $$ ArrayList<String> target = new ArrayList<String>()-->Line_16 $$ target.add(filterInitializer)[ FD ]
Line_6 $$ if (!initializers.contains(TimelineAuthenticationFilterInitializer.class.getName())) -->Line_7 $$ initializers = TimelineAuthenticationFilterInitializer.class.getName() + "," + initializers[ CD ]
Line_3 $$ Configuration conf = getConfig()-->Line_29 $$ webApp = WebApps.$for("applicationhistory", ApplicationHistoryClientService.class, ahsClientService, "ws").with(conf).at(bindAddress).start(ahsWebApp)[ FD ]
Line_2 $$ private void startWebApp() -->Line_23 $$ LOG.info("Instantiating AHSWebApp at " + bindAddress)[ CD ]
Line_11 $$ for (String filterInitializer : parts) -->Line_16 $$ target.add(filterInitializer)[ FD ]
Line_22 $$ String bindAddress = WebAppUtils.getWebAppBindURL(conf, YarnConfiguration.TIMELINE_SERVICE_BIND_HOST, WebAppUtils.getAHSWebAppURLWithoutScheme(conf))-->Line_29 $$ webApp = WebApps.$for("applicationhistory", ApplicationHistoryClientService.class, ahsClientService, "ws").with(conf).at(bindAddress).start(ahsWebApp)[ FD ]
Line_7 $$ initializers = TimelineAuthenticationFilterInitializer.class.getName() + "," + initializers-->Line_9 $$ String[] parts = initializers.split(",")[ FD ]
Line_10 $$ ArrayList<String> target = new ArrayList<String>()-->Line_18 $$ String actualInitializers = org.apache.commons.lang.StringUtils.join(target, ",")[ FD ]
