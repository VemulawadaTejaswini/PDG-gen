Line_6 $$ for (int i = 0, n = settings.scale.length; i < n; i++) -->Line_22 $$ imageProcessor.clear()[ CD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_16 $$ writeImages(outputDir, scaledPackFileName, pages)[ FD ]
Line_15 $$ String scaledPackFileName = settings.getScaledPackFileName(packFileName, i)-->Line_16 $$ writeImages(outputDir, scaledPackFileName, pages)[ FD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_18 $$ writePackFile(outputDir, scaledPackFileName, pages)[ FD ]
Line_9 $$ if (inputImage.file != null)-->Line_10 $$ imageProcessor.addImage(inputImage.file)[ CD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_6 $$ for (int i = 0, n = settings.scale.length; i < n; i++) [ CD ]
Line_4 $$ packFileName = packFileName.substring(0, packFileName.length() - settings.atlasExtension.length())-->Line_15 $$ String scaledPackFileName = settings.getScaledPackFileName(packFileName, i)[ FD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_3 $$ if (packFileName.endsWith(settings.atlasExtension))[ FD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_4 $$ packFileName = packFileName.substring(0, packFileName.length() - settings.atlasExtension.length())[ FD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_3 $$ if (packFileName.endsWith(settings.atlasExtension))[ CD ]
Line_9 $$ if (inputImage.file != null)-->Line_12 $$ imageProcessor.addImage(inputImage.image, inputImage.name)[ CD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_5 $$ outputDir.mkdirs()[ FD ]
Line_14 $$ Array<Page> pages = packer.pack(imageProcessor.getImages())-->Line_16 $$ writeImages(outputDir, scaledPackFileName, pages)[ FD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_5 $$ outputDir.mkdirs()[ CD ]
Line_14 $$ Array<Page> pages = packer.pack(imageProcessor.getImages())-->Line_18 $$ writePackFile(outputDir, scaledPackFileName, pages)[ FD ]
Line_15 $$ String scaledPackFileName = settings.getScaledPackFileName(packFileName, i)-->Line_18 $$ writePackFile(outputDir, scaledPackFileName, pages)[ FD ]
Line_6 $$ for (int i = 0, n = settings.scale.length; i < n; i++) -->Line_15 $$ String scaledPackFileName = settings.getScaledPackFileName(packFileName, i)[ CD ]
Line_3 $$ if (packFileName.endsWith(settings.atlasExtension))-->Line_4 $$ packFileName = packFileName.substring(0, packFileName.length() - settings.atlasExtension.length())[ CD ]
Line_6 $$ for (int i = 0, n = settings.scale.length; i < n; i++) -->Line_15 $$ String scaledPackFileName = settings.getScaledPackFileName(packFileName, i)[ FD ]
Line_6 $$ for (int i = 0, n = settings.scale.length; i < n; i++) -->Line_14 $$ Array<Page> pages = packer.pack(imageProcessor.getImages())[ CD ]
Line_6 $$ for (int i = 0, n = settings.scale.length; i < n; i++) -->Line_16 $$ writeImages(outputDir, scaledPackFileName, pages)[ CD ]
Line_6 $$ for (int i = 0, n = settings.scale.length; i < n; i++) -->Line_7 $$ imageProcessor.setScale(settings.scale[i])[ CD ]
Line_2 $$ public void pack(File outputDir, String packFileName) -->Line_15 $$ String scaledPackFileName = settings.getScaledPackFileName(packFileName, i)[ FD ]
