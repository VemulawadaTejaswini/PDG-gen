Line_7 $$ LocalCacheDirectoryManager hDir = new LocalCacheDirectoryManager(conf)-->Line_22 $$ Assert.assertEquals(sb.toString(), hDir.getRelativePathForLocalization())[ FD ]
Line_7 $$ LocalCacheDirectoryManager hDir = new LocalCacheDirectoryManager(conf)-->Line_32 $$ hDir.decrementFileCountForPath(testPath2)[ FD ]
Line_7 $$ LocalCacheDirectoryManager hDir = new LocalCacheDirectoryManager(conf)-->Line_35 $$ Assert.assertEquals(testPath2, hDir.getRelativePathForLocalization())[ FD ]
Line_13 $$ String num = Integer.toString(i - 1, 36)-->Line_15 $$ sb.append(num.charAt(0))[ FD ]
Line_14 $$ if (num.length() == 1) -->Line_15 $$ sb.append(num.charAt(0))[ CD ]
Line_12 $$ StringBuffer sb = new StringBuffer()-->Line_15 $$ sb.append(num.charAt(0))[ FD ]
Line_12 $$ StringBuffer sb = new StringBuffer()-->Line_20 $$ sb.append(Path.SEPARATOR).append(num.charAt(j))[ FD ]
Line_13 $$ String num = Integer.toString(i - 1, 36)-->Line_20 $$ sb.append(Path.SEPARATOR).append(num.charAt(j))[ FD ]
Line_25 $$ String testPath2 = "2"-->Line_32 $$ hDir.decrementFileCountForPath(testPath2)[ FD ]
Line_19 $$ for (int j = 1; j < num.length(); j++) -->Line_20 $$ sb.append(Path.SEPARATOR).append(num.charAt(j))[ CD ]
Line_25 $$ String testPath2 = "2"-->Line_35 $$ Assert.assertEquals(testPath2, hDir.getRelativePathForLocalization())[ FD ]
Line_12 $$ StringBuffer sb = new StringBuffer()-->Line_17 $$ sb.append(Integer.toString(Integer.parseInt(num.substring(0, 1), 36) - 1, 36))[ FD ]
Line_13 $$ String num = Integer.toString(i - 1, 36)-->Line_19 $$ for (int j = 1; j < num.length(); j++) [ FD ]
Line_13 $$ String num = Integer.toString(i - 1, 36)-->Line_17 $$ sb.append(Integer.toString(Integer.parseInt(num.substring(0, 1), 36) - 1, 36))[ FD ]
Line_12 $$ StringBuffer sb = new StringBuffer()-->Line_22 $$ Assert.assertEquals(sb.toString(), hDir.getRelativePathForLocalization())[ FD ]
Line_19 $$ for (int j = 1; j < num.length(); j++) -->Line_20 $$ sb.append(Path.SEPARATOR).append(num.charAt(j))[ FD ]
Line_14 $$ if (num.length() == 1) -->Line_17 $$ sb.append(Integer.toString(Integer.parseInt(num.substring(0, 1), 36) - 1, 36))[ CD ]
Line_13 $$ String num = Integer.toString(i - 1, 36)-->Line_14 $$ if (num.length() == 1) [ FD ]
