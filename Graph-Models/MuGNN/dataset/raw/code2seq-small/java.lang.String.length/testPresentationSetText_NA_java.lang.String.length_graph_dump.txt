Line_4 $$ Presentation p = new Presentation()-->Line_6 $$ Assert.assertEquals(menuTexts[i], p.getText())[ FD ]
Line_2 $$ public void testPresentationSetText() -->Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) [ CD ]
Line_4 $$ Presentation p = new Presentation()-->Line_8 $$ Assert.assertEquals(indeces[i], p.getDisplayedMnemonicIndex())[ FD ]
Line_4 $$ Presentation p = new Presentation()-->Line_7 $$ Assert.assertEquals(mnemonics[i], p.getMnemonic())[ FD ]
Line_4 $$ Presentation p = new Presentation()-->Line_15 $$ Assert.assertTrue(menuTexts[i].length() > p.getDisplayedMnemonicIndex())[ FD ]
Line_4 $$ Presentation p = new Presentation()-->Line_11 $$ Assert.assertEquals(menuTexts[i], p.getText())[ FD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_15 $$ Assert.assertTrue(menuTexts[i].length() > p.getDisplayedMnemonicIndex())[ CD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_13 $$ Assert.assertEquals(indeces[i], p.getDisplayedMnemonicIndex())[ CD ]
Line_4 $$ Presentation p = new Presentation()-->Line_13 $$ Assert.assertEquals(indeces[i], p.getDisplayedMnemonicIndex())[ FD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_14 $$ Assert.assertEquals(fullMenuTexts[i], p.getTextWithMnemonic())[ CD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_11 $$ Assert.assertEquals(menuTexts[i], p.getText())[ CD ]
Line_4 $$ Presentation p = new Presentation()-->Line_12 $$ Assert.assertEquals(mnemonics[i], p.getMnemonic())[ FD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_10 $$ p.setText(inputTextsAmpersands[i])[ CD ]
Line_4 $$ Presentation p = new Presentation()-->Line_14 $$ Assert.assertEquals(fullMenuTexts[i], p.getTextWithMnemonic())[ FD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_8 $$ Assert.assertEquals(indeces[i], p.getDisplayedMnemonicIndex())[ CD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_12 $$ Assert.assertEquals(mnemonics[i], p.getMnemonic())[ CD ]
Line_4 $$ Presentation p = new Presentation()-->Line_10 $$ p.setText(inputTextsAmpersands[i])[ FD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_4 $$ Presentation p = new Presentation()[ CD ]
Line_4 $$ Presentation p = new Presentation()-->Line_9 $$ Assert.assertEquals(fullMenuTexts[i], p.getTextWithMnemonic())[ FD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_5 $$ p.setText(inputTextsUnderscores[i])[ CD ]
Line_4 $$ Presentation p = new Presentation()-->Line_5 $$ p.setText(inputTextsUnderscores[i])[ FD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_6 $$ Assert.assertEquals(menuTexts[i], p.getText())[ CD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_9 $$ Assert.assertEquals(fullMenuTexts[i], p.getTextWithMnemonic())[ CD ]
Line_3 $$ for (int i = 0; i < inputTextsUnderscores.length; i++) -->Line_7 $$ Assert.assertEquals(mnemonics[i], p.getMnemonic())[ CD ]
