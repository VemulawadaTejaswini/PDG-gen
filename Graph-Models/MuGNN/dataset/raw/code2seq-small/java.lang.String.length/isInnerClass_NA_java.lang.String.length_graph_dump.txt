Line_3 $$ String name = vFile.getNameWithoutExtension()-->Line_4 $$ int index = name.lastIndexOf('$', name.length())[ FD ]
Line_5 $$ if (index > 0 && index < name.length() - 1) -->Line_7 $$ if (vFile.getParent().findChild(supposedParentName) != null) [ CD ]
Line_2 $$ public static boolean isInnerClass(@NotNull VirtualFile vFile) -->Line_3 $$ String name = vFile.getNameWithoutExtension()[ FD ]
Line_3 $$ String name = vFile.getNameWithoutExtension()-->Line_5 $$ if (index > 0 && index < name.length() - 1) [ FD ]
Line_2 $$ public static boolean isInnerClass(@NotNull VirtualFile vFile) -->Line_3 $$ String name = vFile.getNameWithoutExtension()[ CD ]
Line_2 $$ public static boolean isInnerClass(@NotNull VirtualFile vFile) -->Line_4 $$ int index = name.lastIndexOf('$', name.length())[ CD ]
Line_2 $$ public static boolean isInnerClass(@NotNull VirtualFile vFile) -->Line_7 $$ if (vFile.getParent().findChild(supposedParentName) != null) [ FD ]
Line_2 $$ public static boolean isInnerClass(@NotNull VirtualFile vFile) -->Line_5 $$ if (index > 0 && index < name.length() - 1) [ CD ]
Line_4 $$ int index = name.lastIndexOf('$', name.length())-->Line_6 $$ String supposedParentName = name.substring(0, index) + ".class"[ FD ]
Line_3 $$ String name = vFile.getNameWithoutExtension()-->Line_6 $$ String supposedParentName = name.substring(0, index) + ".class"[ FD ]
Line_2 $$ public static boolean isInnerClass(@NotNull VirtualFile vFile) -->Line_11 $$ return false[ CD ]
Line_6 $$ String supposedParentName = name.substring(0, index) + ".class"-->Line_7 $$ if (vFile.getParent().findChild(supposedParentName) != null) [ FD ]
Line_7 $$ if (vFile.getParent().findChild(supposedParentName) != null) -->Line_8 $$ return true[ CD ]
Line_5 $$ if (index > 0 && index < name.length() - 1) -->Line_6 $$ String supposedParentName = name.substring(0, index) + ".class"[ CD ]
