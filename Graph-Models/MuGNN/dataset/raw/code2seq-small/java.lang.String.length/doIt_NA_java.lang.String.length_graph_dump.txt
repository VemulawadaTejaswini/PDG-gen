Line_12 $$ if (locationAttribute == null) -->Line_16 $$ locationAttribute.setValue(newValue)[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_3 $$ if (!FileModificationService.getInstance().prepareFileForWrite(file))[ CD ]
Line_6 $$ if (tag.getAttributeValue(XMLNS_XSI_ATTR_NAME) == null) -->Line_7 $$ tag.add(elementFactory.createXmlAttribute(XMLNS_XSI_ATTR_NAME, XmlUtil.XML_SCHEMA_INSTANCE_URI))[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_11 $$ int offset = s.length()[ FD ]
Line_9 $$ final XmlAttribute locationAttribute = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME)-->Line_12 $$ if (locationAttribute == null) [ FD ]
Line_5 $$ final XmlElementFactory elementFactory = XmlElementFactory.getInstance(file.getProject())-->Line_13 $$ tag.add(elementFactory.createXmlAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME, toInsert))[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_21 $$ final TextRange textRange = new TextRange(range.getEndOffset() - offset - 1, range.getEndOffset() - 1)[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_5 $$ final XmlElementFactory elementFactory = XmlElementFactory.getInstance(file.getProject())[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_11 $$ int offset = s.length()[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_20 $$ final TextRange range = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME).getValueElement().getTextRange()[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_6 $$ if (tag.getAttributeValue(XMLNS_XSI_ATTR_NAME) == null) [ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_12 $$ if (locationAttribute == null) [ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_5 $$ final XmlElementFactory elementFactory = XmlElementFactory.getInstance(file.getProject())[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_19 $$ CodeStyleManager.getInstance(file.getProject()).reformat(tag)[ FD ]
Line_9 $$ final XmlAttribute locationAttribute = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME)-->Line_16 $$ locationAttribute.setValue(newValue)[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_18 $$ PsiDocumentManager.getInstance(file.getProject()).doPostponedOperationsAndUnblockDocument(editor.getDocument())[ CD ]
Line_12 $$ if (locationAttribute == null) -->Line_15 $$ final String newValue = locationAttribute.getValue() + "\n" + toInsert[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_6 $$ if (tag.getAttributeValue(XMLNS_XSI_ATTR_NAME) == null) [ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_9 $$ final XmlAttribute locationAttribute = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME)[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_18 $$ PsiDocumentManager.getInstance(file.getProject()).doPostponedOperationsAndUnblockDocument(editor.getDocument())[ FD ]
Line_21 $$ final TextRange textRange = new TextRange(range.getEndOffset() - offset - 1, range.getEndOffset() - 1)-->Line_22 $$ editor.getCaretModel().moveToOffset(textRange.getStartOffset())[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_22 $$ editor.getCaretModel().moveToOffset(textRange.getStartOffset())[ CD ]
Line_10 $$ final String toInsert = uri + " " + s-->Line_13 $$ tag.add(elementFactory.createXmlAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME, toInsert))[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_9 $$ final XmlAttribute locationAttribute = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME)[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_7 $$ tag.add(elementFactory.createXmlAttribute(XMLNS_XSI_ATTR_NAME, XmlUtil.XML_SCHEMA_INSTANCE_URI))[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_10 $$ final String toInsert = uri + " " + s[ CD ]
Line_5 $$ final XmlElementFactory elementFactory = XmlElementFactory.getInstance(file.getProject())-->Line_7 $$ tag.add(elementFactory.createXmlAttribute(XMLNS_XSI_ATTR_NAME, XmlUtil.XML_SCHEMA_INSTANCE_URI))[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_20 $$ final TextRange range = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME).getValueElement().getTextRange()[ FD ]
Line_12 $$ if (locationAttribute == null) -->Line_13 $$ tag.add(elementFactory.createXmlAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME, toInsert))[ CD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_3 $$ if (!FileModificationService.getInstance().prepareFileForWrite(file))[ FD ]
Line_3 $$ if (!FileModificationService.getInstance().prepareFileForWrite(file))-->Line_4 $$ return[ CD ]
Line_15 $$ final String newValue = locationAttribute.getValue() + "\n" + toInsert-->Line_16 $$ locationAttribute.setValue(newValue)[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_19 $$ CodeStyleManager.getInstance(file.getProject()).reformat(tag)[ CD ]
Line_20 $$ final TextRange range = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME).getValueElement().getTextRange()-->Line_21 $$ final TextRange textRange = new TextRange(range.getEndOffset() - offset - 1, range.getEndOffset() - 1)[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_13 $$ tag.add(elementFactory.createXmlAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME, toInsert))[ FD ]
Line_2 $$ private static void doIt(final PsiFile file, final Editor editor, final String uri, final XmlTag tag, final String s) throws IncorrectOperationException -->Line_22 $$ editor.getCaretModel().moveToOffset(textRange.getStartOffset())[ FD ]
Line_9 $$ final XmlAttribute locationAttribute = tag.getAttribute(XSI_SCHEMA_LOCATION_ATTR_NAME)-->Line_15 $$ final String newValue = locationAttribute.getValue() + "\n" + toInsert[ FD ]
