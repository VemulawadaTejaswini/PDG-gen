Line_16 $$ while (true) -->Line_21 $$ int end = lexer.getTokenEnd()[ CD ]
Line_27 $$ if (tokenType == TemplateTokenType.ESCAPE_DOLLAR) -->Line_30 $$ buffer.append(token)[ CD ]
Line_2 $$ public void parseSegments() -->Line_9 $$ if (myString == null)[ CD ]
Line_23 $$ if (tokenType == TemplateTokenType.VARIABLE) -->Line_24 $$ String name = token.substring(1, token.length() - 1)[ CD ]
Line_6 $$ if (mySegments != null) -->Line_7 $$ return[ CD ]
Line_13 $$ StringBuilder buffer = new StringBuilder("")-->Line_28 $$ buffer.append("$")[ FD ]
Line_23 $$ if (tokenType == TemplateTokenType.VARIABLE) -->Line_26 $$ mySegments.add(segment)[ CD ]
Line_13 $$ StringBuilder buffer = new StringBuilder("")-->Line_30 $$ buffer.append(token)[ FD ]
Line_3 $$ if (!toParseSegments) -->Line_4 $$ return[ CD ]
Line_22 $$ String token = myString.substring(start, end)-->Line_24 $$ String name = token.substring(1, token.length() - 1)[ FD ]
Line_16 $$ while (true) -->Line_32 $$ lexer.advance()[ CD ]
Line_2 $$ public void parseSegments() -->Line_13 $$ StringBuilder buffer = new StringBuilder("")[ CD ]
Line_17 $$ IElementType tokenType = lexer.getTokenType()-->Line_18 $$ if (tokenType == null)[ FD ]
Line_17 $$ IElementType tokenType = lexer.getTokenType()-->Line_27 $$ if (tokenType == TemplateTokenType.ESCAPE_DOLLAR) [ FD ]
Line_16 $$ while (true) -->Line_20 $$ int start = lexer.getTokenStart()[ CD ]
Line_2 $$ public void parseSegments() -->Line_6 $$ if (mySegments != null) [ CD ]
Line_2 $$ public void parseSegments() -->Line_3 $$ if (!toParseSegments) [ CD ]
Line_2 $$ public void parseSegments() -->Line_16 $$ while (true) [ CD ]
Line_21 $$ int end = lexer.getTokenEnd()-->Line_22 $$ String token = myString.substring(start, end)[ FD ]
Line_16 $$ while (true) -->Line_22 $$ String token = myString.substring(start, end)[ CD ]
Line_16 $$ while (true) -->Line_23 $$ if (tokenType == TemplateTokenType.VARIABLE) [ CD ]
Line_14 $$ TemplateTextLexer lexer = new TemplateTextLexer()-->Line_15 $$ lexer.start(myString)[ FD ]
Line_2 $$ public void parseSegments() -->Line_34 $$ myTemplateText = buffer.toString()[ CD ]
Line_14 $$ TemplateTextLexer lexer = new TemplateTextLexer()-->Line_20 $$ int start = lexer.getTokenStart()[ FD ]
Line_17 $$ IElementType tokenType = lexer.getTokenType()-->Line_23 $$ if (tokenType == TemplateTokenType.VARIABLE) [ FD ]
Line_13 $$ StringBuilder buffer = new StringBuilder("")-->Line_25 $$ Segment segment = new Segment(name, buffer.length())[ FD ]
Line_22 $$ String token = myString.substring(start, end)-->Line_30 $$ buffer.append(token)[ FD ]
Line_2 $$ public void parseSegments() -->Line_11 $$ myString = StringUtil.convertLineSeparators(myString)[ CD ]
Line_14 $$ TemplateTextLexer lexer = new TemplateTextLexer()-->Line_17 $$ IElementType tokenType = lexer.getTokenType()[ FD ]
Line_2 $$ public void parseSegments() -->Line_14 $$ TemplateTextLexer lexer = new TemplateTextLexer()[ CD ]
Line_23 $$ if (tokenType == TemplateTokenType.VARIABLE) -->Line_27 $$ if (tokenType == TemplateTokenType.ESCAPE_DOLLAR) [ CD ]
Line_13 $$ StringBuilder buffer = new StringBuilder("")-->Line_34 $$ myTemplateText = buffer.toString()[ FD ]
Line_20 $$ int start = lexer.getTokenStart()-->Line_22 $$ String token = myString.substring(start, end)[ FD ]
Line_14 $$ TemplateTextLexer lexer = new TemplateTextLexer()-->Line_32 $$ lexer.advance()[ FD ]
Line_16 $$ while (true) -->Line_18 $$ if (tokenType == null)[ CD ]
Line_14 $$ TemplateTextLexer lexer = new TemplateTextLexer()-->Line_21 $$ int end = lexer.getTokenEnd()[ FD ]
Line_27 $$ if (tokenType == TemplateTokenType.ESCAPE_DOLLAR) -->Line_28 $$ buffer.append("$")[ CD ]
Line_16 $$ while (true) -->Line_17 $$ IElementType tokenType = lexer.getTokenType()[ CD ]
Line_25 $$ Segment segment = new Segment(name, buffer.length())-->Line_26 $$ mySegments.add(segment)[ FD ]
Line_23 $$ if (tokenType == TemplateTokenType.VARIABLE) -->Line_25 $$ Segment segment = new Segment(name, buffer.length())[ CD ]
Line_2 $$ public void parseSegments() -->Line_15 $$ lexer.start(myString)[ CD ]
