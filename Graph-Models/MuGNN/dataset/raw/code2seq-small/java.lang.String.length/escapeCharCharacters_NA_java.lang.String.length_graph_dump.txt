Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_4 $$ StringUtil.escapeStringCharacters(s.length(), s, isStringLiteral(token) ? "\"" : "\'", buffer)[ FD ]
Line_2 $$ protected String escapeCharCharacters(@NotNull String s, @NotNull PsiElement token) -->Line_5 $$ return buffer.toString()[ CD ]
Line_2 $$ protected String escapeCharCharacters(@NotNull String s, @NotNull PsiElement token) -->Line_4 $$ StringUtil.escapeStringCharacters(s.length(), s, isStringLiteral(token) ? "\"" : "\'", buffer)[ FD ]
Line_2 $$ protected String escapeCharCharacters(@NotNull String s, @NotNull PsiElement token) -->Line_4 $$ StringUtil.escapeStringCharacters(s.length(), s, isStringLiteral(token) ? "\"" : "\'", buffer)[ CD ]
Line_2 $$ protected String escapeCharCharacters(@NotNull String s, @NotNull PsiElement token) -->Line_3 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder buffer = new StringBuilder()-->Line_5 $$ return buffer.toString()[ FD ]
