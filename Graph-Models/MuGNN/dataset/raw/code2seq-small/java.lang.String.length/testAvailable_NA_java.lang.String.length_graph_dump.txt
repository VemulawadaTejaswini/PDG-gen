Line_6 $$ int available = readerInputStream.available()-->Line_9 $$ available = readerInputStream.available()[ FD ]
Line_2 $$ public void testAvailable() -->Line_3 $$ Reader reader = new StringReader(_TEST_STRING_ENGLISH)[ CD ]
Line_5 $$ ReaderInputStream readerInputStream = new ReaderInputStream(reader, StringPool.UTF8)-->Line_6 $$ int available = readerInputStream.available()[ FD ]
Line_9 $$ available = readerInputStream.available()-->Line_10 $$ Assert.assertEquals(_TEST_STRING_ENGLISH.length() - 1, available)[ FD ]
Line_5 $$ ReaderInputStream readerInputStream = new ReaderInputStream(reader, StringPool.UTF8)-->Line_8 $$ readerInputStream.read()[ FD ]
Line_5 $$ ReaderInputStream readerInputStream = new ReaderInputStream(reader, StringPool.UTF8)-->Line_9 $$ available = readerInputStream.available()[ FD ]
Line_6 $$ int available = readerInputStream.available()-->Line_7 $$ Assert.assertEquals(0, available)[ FD ]
Line_6 $$ int available = readerInputStream.available()-->Line_10 $$ Assert.assertEquals(_TEST_STRING_ENGLISH.length() - 1, available)[ FD ]
