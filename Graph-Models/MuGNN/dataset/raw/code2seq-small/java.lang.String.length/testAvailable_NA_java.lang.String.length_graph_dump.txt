Line_10 $$ available = readerInputStream.available()-->Line_11 $$ Assert.assertEquals(_TEST_STRING_ENGLISH.length() - 1, available)[ FD ]
Line_6 $$ ReaderInputStream readerInputStream = new ReaderInputStream(reader, StringPool.UTF8)-->Line_7 $$ int available = readerInputStream.available()[ FD ]
Line_6 $$ ReaderInputStream readerInputStream = new ReaderInputStream(reader, StringPool.UTF8)-->Line_9 $$ readerInputStream.read()[ FD ]
Line_7 $$ int available = readerInputStream.available()-->Line_8 $$ Assert.assertEquals(0, available)[ FD ]
Line_6 $$ ReaderInputStream readerInputStream = new ReaderInputStream(reader, StringPool.UTF8)-->Line_10 $$ available = readerInputStream.available()[ FD ]
Line_7 $$ int available = readerInputStream.available()-->Line_11 $$ Assert.assertEquals(_TEST_STRING_ENGLISH.length() - 1, available)[ FD ]
Line_7 $$ int available = readerInputStream.available()-->Line_10 $$ available = readerInputStream.available()[ FD ]
