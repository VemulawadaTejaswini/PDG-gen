Line_3 $$ String groupFriendlyURL = null-->Line_6 $$ groupFriendlyURL = friendlyURL.substring(2, pos)[ FD ]
Line_19 $$ if (Validator.isNull(layoutFriendlyURL)) -->Line_20 $$ return mainPath[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_23 $$ return HttpUtil.addParameter(HttpUtil.removeParameter(actualURL, "p_v_l_s_g_id"), "p_v_l_s_g_id", groupId)[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_22 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), privateLayout, mainPath, layoutFriendlyURL, params, requestContext)[ CD ]
Line_11 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, groupFriendlyURL)-->Line_22 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), privateLayout, mainPath, layoutFriendlyURL, params, requestContext)[ FD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_4 $$ int pos = friendlyURL.indexOf(CharPool.SLASH, 3)[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_11 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, groupFriendlyURL)[ FD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_12 $$ if (group == null) [ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_3 $$ String groupFriendlyURL = null[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_17 $$ layoutFriendlyURL = friendlyURL.substring(pos)[ FD ]
Line_6 $$ groupFriendlyURL = friendlyURL.substring(2, pos)-->Line_11 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, groupFriendlyURL)[ FD ]
Line_17 $$ layoutFriendlyURL = friendlyURL.substring(pos)-->Line_19 $$ if (Validator.isNull(layoutFriendlyURL)) [ FD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_15 $$ String layoutFriendlyURL = null[ CD ]
Line_8 $$ if (Validator.isNull(groupFriendlyURL)) -->Line_9 $$ return mainPath[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_8 $$ if (Validator.isNull(groupFriendlyURL)) [ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_6 $$ groupFriendlyURL = friendlyURL.substring(2, pos)[ FD ]
Line_15 $$ String layoutFriendlyURL = null-->Line_19 $$ if (Validator.isNull(layoutFriendlyURL)) [ FD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_22 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), privateLayout, mainPath, layoutFriendlyURL, params, requestContext)[ FD ]
Line_6 $$ groupFriendlyURL = friendlyURL.substring(2, pos)-->Line_8 $$ if (Validator.isNull(groupFriendlyURL)) [ FD ]
Line_15 $$ String layoutFriendlyURL = null-->Line_17 $$ layoutFriendlyURL = friendlyURL.substring(pos)[ FD ]
Line_3 $$ String groupFriendlyURL = null-->Line_8 $$ if (Validator.isNull(groupFriendlyURL)) [ FD ]
Line_12 $$ if (group == null) -->Line_13 $$ return mainPath[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_16 $$ if ((pos != -1) && ((pos + 1) != friendlyURL.length())) [ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_16 $$ if ((pos != -1) && ((pos + 1) != friendlyURL.length())) [ FD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_5 $$ if (pos != -1) [ CD ]
Line_11 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, groupFriendlyURL)-->Line_12 $$ if (group == null) [ FD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_11 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, groupFriendlyURL)[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_4 $$ int pos = friendlyURL.indexOf(CharPool.SLASH, 3)[ FD ]
Line_5 $$ if (pos != -1) -->Line_6 $$ groupFriendlyURL = friendlyURL.substring(2, pos)[ CD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_23 $$ return HttpUtil.addParameter(HttpUtil.removeParameter(actualURL, "p_v_l_s_g_id"), "p_v_l_s_g_id", groupId)[ FD ]
Line_2 $$ public String getActualURL(long companyId, long groupId, boolean privateLayout, String mainPath, String friendlyURL, Map<String, String[]> params, Map<String, Object> requestContext) throws PortalException -->Line_19 $$ if (Validator.isNull(layoutFriendlyURL)) [ CD ]
Line_15 $$ String layoutFriendlyURL = null-->Line_22 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), privateLayout, mainPath, layoutFriendlyURL, params, requestContext)[ FD ]
Line_22 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), privateLayout, mainPath, layoutFriendlyURL, params, requestContext)-->Line_23 $$ return HttpUtil.addParameter(HttpUtil.removeParameter(actualURL, "p_v_l_s_g_id"), "p_v_l_s_g_id", groupId)[ FD ]
Line_4 $$ int pos = friendlyURL.indexOf(CharPool.SLASH, 3)-->Line_6 $$ groupFriendlyURL = friendlyURL.substring(2, pos)[ FD ]
Line_4 $$ int pos = friendlyURL.indexOf(CharPool.SLASH, 3)-->Line_5 $$ if (pos != -1) [ FD ]
Line_4 $$ int pos = friendlyURL.indexOf(CharPool.SLASH, 3)-->Line_17 $$ layoutFriendlyURL = friendlyURL.substring(pos)[ FD ]
Line_16 $$ if ((pos != -1) && ((pos + 1) != friendlyURL.length())) -->Line_17 $$ layoutFriendlyURL = friendlyURL.substring(pos)[ CD ]
Line_17 $$ layoutFriendlyURL = friendlyURL.substring(pos)-->Line_22 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), privateLayout, mainPath, layoutFriendlyURL, params, requestContext)[ FD ]
Line_3 $$ String groupFriendlyURL = null-->Line_11 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, groupFriendlyURL)[ FD ]
