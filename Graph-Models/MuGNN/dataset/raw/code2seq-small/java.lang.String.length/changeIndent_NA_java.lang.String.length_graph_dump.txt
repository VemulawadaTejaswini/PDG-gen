Line_6 $$ int end = DocumentUtil.getFirstNonSpaceCharOffset(context.document, context.targetLine)-->Line_7 $$ context.editor.getDocument().replaceString(start, end, newIndentString)[ FD ]
Line_4 $$ String newIndentString = new IndentInfo(0, newIndent, 0).generateNewWhiteSpace(context.getIndentOptions())-->Line_9 $$ context.editor.getCaretModel().moveToOffset(start + newIndentString.length())[ FD ]
Line_2 $$ private static void changeIndent(@NotNull ChangeIndentContext context, int newIndent) -->Line_8 $$ if (caretOffset > start && caretOffset < end) [ CD ]
Line_2 $$ private static void changeIndent(@NotNull ChangeIndentContext context, int newIndent) -->Line_7 $$ context.editor.getDocument().replaceString(start, end, newIndentString)[ CD ]
Line_2 $$ private static void changeIndent(@NotNull ChangeIndentContext context, int newIndent) -->Line_5 $$ int start = context.document.getLineStartOffset(context.targetLine)[ CD ]
Line_2 $$ private static void changeIndent(@NotNull ChangeIndentContext context, int newIndent) -->Line_4 $$ String newIndentString = new IndentInfo(0, newIndent, 0).generateNewWhiteSpace(context.getIndentOptions())[ FD ]
Line_4 $$ String newIndentString = new IndentInfo(0, newIndent, 0).generateNewWhiteSpace(context.getIndentOptions())-->Line_7 $$ context.editor.getDocument().replaceString(start, end, newIndentString)[ FD ]
Line_2 $$ private static void changeIndent(@NotNull ChangeIndentContext context, int newIndent) -->Line_4 $$ String newIndentString = new IndentInfo(0, newIndent, 0).generateNewWhiteSpace(context.getIndentOptions())[ CD ]
Line_2 $$ private static void changeIndent(@NotNull ChangeIndentContext context, int newIndent) -->Line_3 $$ int caretOffset = context.editor.getCaretModel().getOffset()[ CD ]
Line_8 $$ if (caretOffset > start && caretOffset < end) -->Line_9 $$ context.editor.getCaretModel().moveToOffset(start + newIndentString.length())[ CD ]
Line_2 $$ private static void changeIndent(@NotNull ChangeIndentContext context, int newIndent) -->Line_6 $$ int end = DocumentUtil.getFirstNonSpaceCharOffset(context.document, context.targetLine)[ CD ]
Line_5 $$ int start = context.document.getLineStartOffset(context.targetLine)-->Line_7 $$ context.editor.getDocument().replaceString(start, end, newIndentString)[ FD ]
