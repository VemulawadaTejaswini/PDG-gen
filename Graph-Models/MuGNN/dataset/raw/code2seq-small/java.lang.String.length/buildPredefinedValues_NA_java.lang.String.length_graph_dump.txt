Line_14 $$ Map<String, String> predefinedValues = null-->Line_17 $$ predefinedValues.put(TemplateToken.ATTRS, attributesString)[ FD ]
Line_3 $$ if (generator == null) -->Line_4 $$ return Collections.emptyMap()[ CD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_14 $$ Map<String, String> predefinedValues = null[ CD ]
Line_12 $$ String attributesString = generator.buildAttributesString(attributes, hasChildren, myNumberInIteration, myTotalIterations, mySurroundedText)-->Line_13 $$ attributesString = attributesString.length() > 0 ? ' ' + attributesString : null[ FD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_3 $$ if (generator == null) [ FD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_19 $$ return predefinedValues[ CD ]
Line_14 $$ Map<String, String> predefinedValues = null-->Line_16 $$ predefinedValues = new HashMap<String, String>()[ FD ]
Line_15 $$ if (attributesString != null) -->Line_16 $$ predefinedValues = new HashMap<String, String>()[ CD ]
Line_13 $$ attributesString = attributesString.length() > 0 ? ' ' + attributesString : null-->Line_17 $$ predefinedValues.put(TemplateToken.ATTRS, attributesString)[ FD ]
Line_16 $$ predefinedValues = new HashMap<String, String>()-->Line_17 $$ predefinedValues.put(TemplateToken.ATTRS, attributesString)[ FD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_12 $$ String attributesString = generator.buildAttributesString(attributes, hasChildren, myNumberInIteration, myTotalIterations, mySurroundedText)[ CD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_3 $$ if (generator == null) [ CD ]
Line_6 $$ for (String value : attributes.values()) -->Line_7 $$ if (ZenCodingUtil.containsSurroundedTextMarker(value)) [ FD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_13 $$ attributesString = attributesString.length() > 0 ? ' ' + attributesString : null[ CD ]
Line_12 $$ String attributesString = generator.buildAttributesString(attributes, hasChildren, myNumberInIteration, myTotalIterations, mySurroundedText)-->Line_15 $$ if (attributesString != null) [ FD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_6 $$ for (String value : attributes.values()) [ FD ]
Line_15 $$ if (attributesString != null) -->Line_17 $$ predefinedValues.put(TemplateToken.ATTRS, attributesString)[ CD ]
Line_12 $$ String attributesString = generator.buildAttributesString(attributes, hasChildren, myNumberInIteration, myTotalIterations, mySurroundedText)-->Line_17 $$ predefinedValues.put(TemplateToken.ATTRS, attributesString)[ FD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_15 $$ if (attributesString != null) [ CD ]
Line_13 $$ attributesString = attributesString.length() > 0 ? ' ' + attributesString : null-->Line_15 $$ if (attributesString != null) [ FD ]
Line_2 $$ private Map<String, String> buildPredefinedValues(@NotNull Map<String, String> attributes, @Nullable XmlZenCodingGenerator generator, boolean hasChildren) -->Line_12 $$ String attributesString = generator.buildAttributesString(attributes, hasChildren, myNumberInIteration, myTotalIterations, mySurroundedText)[ FD ]
