Line_3 $$ String prefix = ToolsBundle.message("tools.filters.name.template") + " "-->Line_10 $$ int n = Integer.valueOf(name.substring(prefix.length()).trim()).intValue()[ FD ]
Line_7 $$ String name = wrapper.getName()-->Line_8 $$ if (name.startsWith(prefix)) [ FD ]
Line_2 $$ private String suggestFilterName() -->Line_4 $$ int number = 1[ CD ]
Line_7 $$ String name = wrapper.getName()-->Line_10 $$ int n = Integer.valueOf(name.substring(prefix.length()).trim()).intValue()[ FD ]
Line_4 $$ int number = 1-->Line_11 $$ number = Math.max(number, n + 1)[ FD ]
Line_3 $$ String prefix = ToolsBundle.message("tools.filters.name.template") + " "-->Line_8 $$ if (name.startsWith(prefix)) [ FD ]
Line_5 $$ for (int i = 0; i < myFiltersModel.getSize(); i++) -->Line_7 $$ String name = wrapper.getName()[ CD ]
Line_2 $$ private String suggestFilterName() -->Line_16 $$ return prefix + number[ CD ]
Line_5 $$ for (int i = 0; i < myFiltersModel.getSize(); i++) -->Line_6 $$ FilterInfo wrapper = (FilterInfo) myFiltersModel.getElementAt(i)[ CD ]
Line_2 $$ private String suggestFilterName() -->Line_5 $$ for (int i = 0; i < myFiltersModel.getSize(); i++) [ CD ]
Line_2 $$ private String suggestFilterName() -->Line_3 $$ String prefix = ToolsBundle.message("tools.filters.name.template") + " "[ CD ]
Line_5 $$ for (int i = 0; i < myFiltersModel.getSize(); i++) -->Line_8 $$ if (name.startsWith(prefix)) [ CD ]
Line_6 $$ FilterInfo wrapper = (FilterInfo) myFiltersModel.getElementAt(i)-->Line_7 $$ String name = wrapper.getName()[ FD ]
Line_5 $$ for (int i = 0; i < myFiltersModel.getSize(); i++) -->Line_6 $$ FilterInfo wrapper = (FilterInfo) myFiltersModel.getElementAt(i)[ FD ]
