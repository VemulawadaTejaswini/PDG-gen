Line_24 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "add")-->Line_27 $$ executeOperation(operation)[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_25 $$ operation.get("address").add("location", "/")[ FD ]
Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")-->Line_23 $$ executeOperation(operation)[ FD ]
Line_15 $$ String badUrl = url.toString()-->Line_16 $$ badUrl = badUrl.substring(0, badUrl.length() - 1)[ FD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")[ FD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_4 $$ operation.get("name").set("default-response-code")[ CD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_4 $$ operation.get("name").set("default-response-code")[ FD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_10 $$ executeReloadAndWaitForCompletion(getModelControllerClient())[ CD ]
Line_12 $$ HttpGet httpget = new HttpGet(url.toString() + URL_PATTERN)-->Line_18 $$ response = this.httpclient.execute(httpget)[ FD ]
Line_24 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "add")-->Line_25 $$ operation.get("address").add("location", "/")[ FD ]
Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")-->Line_27 $$ executeOperation(operation)[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_22 $$ operation.get("name").set("default-response-code")[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")[ FD ]
Line_13 $$ HttpResponse response = this.httpclient.execute(httpget)-->Line_14 $$ Assert.assertEquals(HttpServletResponse.SC_OK, response.getStatusLine().getStatusCode())[ FD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_26 $$ operation.get("handler").set("welcome-content")[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_27 $$ executeOperation(operation)[ FD ]
Line_13 $$ HttpResponse response = this.httpclient.execute(httpget)-->Line_18 $$ response = this.httpclient.execute(httpget)[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_8 $$ operation.get("address").add("location", "/")[ FD ]
Line_24 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "add")-->Line_26 $$ operation.get("handler").set("welcome-content")[ FD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_9 $$ executeOperation(operation)[ CD ]
Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")-->Line_26 $$ operation.get("handler").set("welcome-content")[ FD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_6 $$ executeOperation(operation)[ CD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_23 $$ executeOperation(operation)[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_26 $$ operation.get("handler").set("welcome-content")[ FD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_8 $$ operation.get("address").add("location", "/")[ FD ]
Line_12 $$ HttpGet httpget = new HttpGet(url.toString() + URL_PATTERN)-->Line_13 $$ HttpResponse response = this.httpclient.execute(httpget)[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_5 $$ operation.get("value").set(506)[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_24 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "add")[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_6 $$ executeOperation(operation)[ FD ]
Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")-->Line_25 $$ operation.get("address").add("location", "/")[ FD ]
Line_18 $$ response = this.httpclient.execute(httpget)-->Line_19 $$ Assert.assertEquals(506, response.getStatusLine().getStatusCode())[ FD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")[ CD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_8 $$ operation.get("address").add("location", "/")[ CD ]
Line_13 $$ HttpResponse response = this.httpclient.execute(httpget)-->Line_19 $$ Assert.assertEquals(506, response.getStatusLine().getStatusCode())[ FD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_9 $$ executeOperation(operation)[ FD ]
Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")-->Line_24 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "add")[ FD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_22 $$ operation.get("name").set("default-response-code")[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_9 $$ executeOperation(operation)[ FD ]
Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")-->Line_22 $$ operation.get("name").set("default-response-code")[ FD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_23 $$ executeOperation(operation)[ FD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_24 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "add")[ FD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_25 $$ operation.get("address").add("location", "/")[ FD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")[ CD ]
Line_7 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "remove")-->Line_27 $$ executeOperation(operation)[ FD ]
Line_17 $$ httpget = new HttpGet(badUrl + "xxx/xxx")-->Line_18 $$ response = this.httpclient.execute(httpget)[ FD ]
Line_12 $$ HttpGet httpget = new HttpGet(url.toString() + URL_PATTERN)-->Line_17 $$ httpget = new HttpGet(badUrl + "xxx/xxx")[ FD ]
Line_2 $$ public void testDefaultResponseCode() throws Exception -->Line_5 $$ operation.get("value").set(506)[ CD ]
Line_3 $$ ModelNode operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "write-attribute")-->Line_21 $$ operation = createOpNode("subsystem=undertow/server=default-server/host=default-host", "undefine-attribute")[ FD ]
