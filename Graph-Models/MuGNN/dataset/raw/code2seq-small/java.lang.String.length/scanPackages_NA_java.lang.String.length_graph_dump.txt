Line_14 $$ String className = reader.getClassMetadata().getClassName()-->Line_17 $$ if (className.endsWith(PACKAGE_INFO_SUFFIX)) [ FD ]
Line_14 $$ String className = reader.getClassMetadata().getClassName()-->Line_16 $$ classNames.add(className)[ FD ]
Line_5 $$ Set<String> packageNames = new TreeSet<String>()-->Line_18 $$ packageNames.add(className.substring(0, className.length() - PACKAGE_INFO_SUFFIX.length()))[ FD ]
Line_14 $$ String className = reader.getClassMetadata().getClassName()-->Line_18 $$ packageNames.add(className.substring(0, className.length() - PACKAGE_INFO_SUFFIX.length()))[ FD ]
Line_13 $$ MetadataReader reader = readerFactory.getMetadataReader(resource)-->Line_15 $$ if (matchesEntityTypeFilter(reader, readerFactory)) [ FD ]
Line_2 $$ protected void scanPackages(Configuration config) -->Line_3 $$ if (this.packagesToScan != null) [ CD ]
Line_3 $$ if (this.packagesToScan != null) -->Line_4 $$ Set<String> classNames = new TreeSet<String>()[ CD ]
Line_7 $$ for (String pkg : this.packagesToScan) -->Line_8 $$ String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN[ FD ]
Line_8 $$ String pattern = ResourcePatternResolver.CLASSPATH_ALL_URL_PREFIX + ClassUtils.convertClassNameToResourcePath(pkg) + RESOURCE_PATTERN-->Line_9 $$ Resource[] resources = this.resourcePatternResolver.getResources(pattern)[ FD ]
Line_10 $$ MetadataReaderFactory readerFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)-->Line_13 $$ MetadataReader reader = readerFactory.getMetadataReader(resource)[ FD ]
Line_11 $$ for (Resource resource : resources) -->Line_13 $$ MetadataReader reader = readerFactory.getMetadataReader(resource)[ FD ]
Line_15 $$ if (matchesEntityTypeFilter(reader, readerFactory)) -->Line_16 $$ classNames.add(className)[ CD ]
Line_17 $$ if (className.endsWith(PACKAGE_INFO_SUFFIX)) -->Line_18 $$ packageNames.add(className.substring(0, className.length() - PACKAGE_INFO_SUFFIX.length()))[ CD ]
Line_4 $$ Set<String> classNames = new TreeSet<String>()-->Line_16 $$ classNames.add(className)[ FD ]
Line_10 $$ MetadataReaderFactory readerFactory = new CachingMetadataReaderFactory(this.resourcePatternResolver)-->Line_15 $$ if (matchesEntityTypeFilter(reader, readerFactory)) [ FD ]
Line_30 $$ for (String packageName : packageNames) -->Line_31 $$ config.addPackage(packageName)[ FD ]
Line_2 $$ protected void scanPackages(Configuration config) -->Line_31 $$ config.addPackage(packageName)[ FD ]
Line_12 $$ if (resource.isReadable()) -->Line_13 $$ MetadataReader reader = readerFactory.getMetadataReader(resource)[ CD ]
Line_15 $$ if (matchesEntityTypeFilter(reader, readerFactory)) -->Line_17 $$ if (className.endsWith(PACKAGE_INFO_SUFFIX)) [ CD ]
Line_14 $$ String className = reader.getClassMetadata().getClassName()-->Line_28 $$ config.addAnnotatedClass(this.resourcePatternResolver.getClassLoader().loadClass(className))[ FD ]
Line_12 $$ if (resource.isReadable()) -->Line_14 $$ String className = reader.getClassMetadata().getClassName()[ CD ]
Line_11 $$ for (Resource resource : resources) -->Line_12 $$ if (resource.isReadable()) [ FD ]
Line_2 $$ protected void scanPackages(Configuration config) -->Line_28 $$ config.addAnnotatedClass(this.resourcePatternResolver.getClassLoader().loadClass(className))[ FD ]
Line_3 $$ if (this.packagesToScan != null) -->Line_5 $$ Set<String> packageNames = new TreeSet<String>()[ CD ]
Line_12 $$ if (resource.isReadable()) -->Line_15 $$ if (matchesEntityTypeFilter(reader, readerFactory)) [ CD ]
Line_13 $$ MetadataReader reader = readerFactory.getMetadataReader(resource)-->Line_14 $$ String className = reader.getClassMetadata().getClassName()[ FD ]
