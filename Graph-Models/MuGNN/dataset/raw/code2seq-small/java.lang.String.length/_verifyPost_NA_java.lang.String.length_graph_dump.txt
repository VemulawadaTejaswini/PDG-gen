Line_16 $$ if (mbMessage.getUserId() == defaultUserId) -->Line_17 $$ _linkbackConsumer.verifyTrackback(mbMessage.getMessageId(), url, entryURL)[ CD ]
Line_8 $$ start += "[url=".length()-->Line_11 $$ url = body.substring(start, end)[ FD ]
Line_9 $$ int end = body.indexOf("]", start)-->Line_11 $$ url = body.substring(start, end)[ FD ]
Line_15 $$ long defaultUserId = UserLocalServiceUtil.getDefaultUserId(mbMessage.getCompanyId())-->Line_16 $$ if (mbMessage.getUserId() == defaultUserId) [ FD ]
Line_7 $$ if (start > -1) -->Line_8 $$ start += "[url=".length()[ CD ]
Line_8 $$ start += "[url=".length()-->Line_9 $$ int end = body.indexOf("]", start)[ FD ]
Line_4 $$ String body = mbMessage.getBody()-->Line_11 $$ url = body.substring(start, end)[ FD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_4 $$ String body = mbMessage.getBody()[ FD ]
Line_4 $$ String body = mbMessage.getBody()-->Line_9 $$ int end = body.indexOf("]", start)[ FD ]
Line_9 $$ int end = body.indexOf("]", start)-->Line_10 $$ if (end > -1) [ FD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_3 $$ String entryURL = Portal.FRIENDLY_URL_SEPARATOR + "blogs/" + entry.getUrlTitle()[ FD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_6 $$ int start = body.indexOf("[url=")[ CD ]
Line_14 $$ if (Validator.isNotNull(url)) -->Line_16 $$ if (mbMessage.getUserId() == defaultUserId) [ CD ]
Line_6 $$ int start = body.indexOf("[url=")-->Line_7 $$ if (start > -1) [ FD ]
Line_7 $$ if (start > -1) -->Line_10 $$ if (end > -1) [ CD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_17 $$ _linkbackConsumer.verifyTrackback(mbMessage.getMessageId(), url, entryURL)[ FD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_14 $$ if (Validator.isNotNull(url)) [ CD ]
Line_5 $$ String url = null-->Line_17 $$ _linkbackConsumer.verifyTrackback(mbMessage.getMessageId(), url, entryURL)[ FD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_4 $$ String body = mbMessage.getBody()[ CD ]
Line_7 $$ if (start > -1) -->Line_9 $$ int end = body.indexOf("]", start)[ CD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_7 $$ if (start > -1) [ CD ]
Line_6 $$ int start = body.indexOf("[url=")-->Line_9 $$ int end = body.indexOf("]", start)[ FD ]
Line_3 $$ String entryURL = Portal.FRIENDLY_URL_SEPARATOR + "blogs/" + entry.getUrlTitle()-->Line_17 $$ _linkbackConsumer.verifyTrackback(mbMessage.getMessageId(), url, entryURL)[ FD ]
Line_10 $$ if (end > -1) -->Line_11 $$ url = body.substring(start, end)[ CD ]
Line_4 $$ String body = mbMessage.getBody()-->Line_6 $$ int start = body.indexOf("[url=")[ FD ]
Line_5 $$ String url = null-->Line_14 $$ if (Validator.isNotNull(url)) [ FD ]
Line_14 $$ if (Validator.isNotNull(url)) -->Line_15 $$ long defaultUserId = UserLocalServiceUtil.getDefaultUserId(mbMessage.getCompanyId())[ CD ]
Line_6 $$ int start = body.indexOf("[url=")-->Line_8 $$ start += "[url=".length()[ FD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_3 $$ String entryURL = Portal.FRIENDLY_URL_SEPARATOR + "blogs/" + entry.getUrlTitle()[ CD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_5 $$ String url = null[ CD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_16 $$ if (mbMessage.getUserId() == defaultUserId) [ FD ]
Line_5 $$ String url = null-->Line_11 $$ url = body.substring(start, end)[ FD ]
Line_6 $$ int start = body.indexOf("[url=")-->Line_11 $$ url = body.substring(start, end)[ FD ]
Line_11 $$ url = body.substring(start, end)-->Line_14 $$ if (Validator.isNotNull(url)) [ FD ]
Line_11 $$ url = body.substring(start, end)-->Line_17 $$ _linkbackConsumer.verifyTrackback(mbMessage.getMessageId(), url, entryURL)[ FD ]
Line_2 $$ private void _verifyPost(BlogsEntry entry, MBMessage mbMessage) throws PortalException -->Line_15 $$ long defaultUserId = UserLocalServiceUtil.getDefaultUserId(mbMessage.getCompanyId())[ FD ]
