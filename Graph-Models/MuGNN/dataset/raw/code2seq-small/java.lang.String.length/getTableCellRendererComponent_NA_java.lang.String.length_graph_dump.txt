Line_9 $$ return new SimpleColoredComponent() -->Line_17 $$ final TableColumnModel columnModel = table.getColumnModel()[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_7 $$ final int modelColumn = table.convertColumnIndexToModel(column)[ FD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_22 $$ g.translate(-offset, 0)[ FD ]
Line_29 $$ if (c instanceof JLabel) -->Line_35 $$ label.setIcon(null)[ CD ]
Line_47 $$ if (DirDiffTableModel.COLUMN_SIZE.equals(name)) -->Line_50 $$ label.setHorizontalAlignment(LEFT)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_44 $$ final String name = table.getColumnName(column)[ FD ]
Line_29 $$ if (c instanceof JLabel) -->Line_43 $$ label.setForeground(fg)[ CD ]
Line_29 $$ if (c instanceof JLabel) -->Line_36 $$ final DirDiffOperation op = element.getOperation()[ CD ]
Line_37 $$ if (modelColumn == (table.getColumnCount() - 1) / 2) -->Line_39 $$ label.setHorizontalAlignment(CENTER)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_17 $$ final TableColumnModel columnModel = table.getColumnModel()[ FD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_24 $$ g.translate(offset, 0)[ CD ]
Line_19 $$ offset += columnModel.getColumn(i).getWidth()-->Line_24 $$ g.translate(offset, 0)[ FD ]
Line_29 $$ if (c instanceof JLabel) -->Line_45 $$ if (DirDiffTableModel.COLUMN_DATE.equals(name)) [ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_8 $$ if (element.isSeparator()) [ CD ]
Line_5 $$ if (element == null)-->Line_6 $$ return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column)[ CD ]
Line_17 $$ final TableColumnModel columnModel = table.getColumnModel()-->Line_19 $$ offset += columnModel.getColumn(i).getWidth()[ FD ]
Line_3 $$ final DirDiffTableModel model = (DirDiffTableModel) table.getModel()-->Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)[ FD ]
Line_7 $$ final int modelColumn = table.convertColumnIndexToModel(column)-->Line_37 $$ if (modelColumn == (table.getColumnCount() - 1) / 2) [ FD ]
Line_16 $$ int i = 0-->Line_20 $$ i++[ FD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_15 $$ int offset = 0[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_6 $$ return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column)[ FD ]
Line_18 $$ while (i < column) -->Line_20 $$ i++[ CD ]
Line_47 $$ if (DirDiffTableModel.COLUMN_SIZE.equals(name)) -->Line_53 $$ if (text != null && text.trim().length() > 0) [ CD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_16 $$ int i = 0[ CD ]
Line_45 $$ if (DirDiffTableModel.COLUMN_DATE.equals(name)) -->Line_46 $$ label.setHorizontalAlignment(CENTER)[ CD ]
Line_47 $$ if (DirDiffTableModel.COLUMN_SIZE.equals(name)) -->Line_51 $$ final String text = label.getText()[ CD ]
Line_29 $$ if (c instanceof JLabel) -->Line_31 $$ Border border = label.getBorder()[ CD ]
Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)-->Line_5 $$ if (element == null)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_3 $$ final DirDiffTableModel model = (DirDiffTableModel) table.getModel()[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_18 $$ while (i < column) [ FD ]
Line_16 $$ int i = 0-->Line_19 $$ offset += columnModel.getColumn(i).getWidth()[ FD ]
Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)-->Line_36 $$ final DirDiffOperation op = element.getOperation()[ FD ]
Line_37 $$ if (modelColumn == (table.getColumnCount() - 1) / 2) -->Line_40 $$ return label[ CD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_18 $$ while (i < column) [ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_29 $$ if (c instanceof JLabel) [ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_28 $$ final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column)[ FD ]
Line_47 $$ if (DirDiffTableModel.COLUMN_SIZE.equals(name)) -->Line_52 $$ label.setText("  " + text)[ CD ]
Line_53 $$ if (text != null && text.trim().length() > 0) -->Line_54 $$ label.setIcon(modelColumn == 0 ? element.getSourceIcon() : element.getTargetIcon())[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_3 $$ final DirDiffTableModel model = (DirDiffTableModel) table.getModel()[ FD ]
Line_29 $$ if (c instanceof JLabel) -->Line_44 $$ final String name = table.getColumnName(column)[ CD ]
Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)-->Line_12 $$ append(element.getName())[ FD ]
Line_19 $$ offset += columnModel.getColumn(i).getWidth()-->Line_22 $$ g.translate(-offset, 0)[ FD ]
Line_8 $$ if (element.isSeparator()) -->Line_9 $$ return new SimpleColoredComponent() [ CD ]
Line_29 $$ if (c instanceof JLabel) -->Line_37 $$ if (modelColumn == (table.getColumnCount() - 1) / 2) [ CD ]
Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)-->Line_8 $$ if (element.isSeparator()) [ FD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_22 $$ g.translate(-offset, 0)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_58 $$ return c[ CD ]
Line_15 $$ int offset = 0-->Line_24 $$ g.translate(offset, 0)[ FD ]
Line_15 $$ int offset = 0-->Line_22 $$ g.translate(-offset, 0)[ FD ]
Line_45 $$ if (DirDiffTableModel.COLUMN_DATE.equals(name)) -->Line_47 $$ if (DirDiffTableModel.COLUMN_SIZE.equals(name)) [ CD ]
Line_29 $$ if (c instanceof JLabel) -->Line_32 $$ if ((hasFocus || isSelected) && border != null) [ CD ]
Line_15 $$ int offset = 0-->Line_19 $$ offset += columnModel.getColumn(i).getWidth()[ FD ]
Line_18 $$ while (i < column) -->Line_19 $$ offset += columnModel.getColumn(i).getWidth()[ CD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_24 $$ g.translate(offset, 0)[ FD ]
Line_47 $$ if (DirDiffTableModel.COLUMN_SIZE.equals(name)) -->Line_48 $$ label.setHorizontalAlignment(RIGHT)[ CD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_23 $$ super.doPaint(g)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)[ CD ]
Line_37 $$ if (modelColumn == (table.getColumnCount() - 1) / 2) -->Line_38 $$ label.setIcon(op.getIcon())[ CD ]
Line_32 $$ if ((hasFocus || isSelected) && border != null) -->Line_33 $$ label.setBorder(new EmptyBorder(border.getBorderInsets(label)))[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_37 $$ if (modelColumn == (table.getColumnCount() - 1) / 2) [ FD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_28 $$ final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column)[ CD ]
Line_9 $$ return new SimpleColoredComponent() -->Line_23 $$ super.doPaint(g)[ FD ]
Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)-->Line_11 $$ setIcon(ObjectUtils.chooseNotNull(element.getSourceIcon(), element.getTargetIcon()))[ FD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_5 $$ if (element == null)[ CD ]
Line_2 $$ public Component getTableCellRendererComponent(final JTable table, Object value, boolean isSelected, boolean hasFocus, final int row, final int column) -->Line_7 $$ final int modelColumn = table.convertColumnIndexToModel(column)[ CD ]
Line_16 $$ int i = 0-->Line_18 $$ while (i < column) [ FD ]
Line_4 $$ final DirDiffElementImpl element = model.getElementAt(row)-->Line_54 $$ label.setIcon(modelColumn == 0 ? element.getSourceIcon() : element.getTargetIcon())[ FD ]
