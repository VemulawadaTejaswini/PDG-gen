Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_6 $$ final Matcher matcher = myPattern.matcher(line)[ FD ]
Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_10 $$ return findLinkInTrace(line, matcher)[ CD ]
Line_3 $$ if (line.length() > MAX_LINE_TO_PARSE) -->Line_4 $$ line = line.substring(0, MAX_LINE_TO_PARSE)[ CD ]
Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_7 $$ if (!matcher.find()) [ CD ]
Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_4 $$ line = line.substring(0, MAX_LINE_TO_PARSE)[ FD ]
Line_7 $$ if (!matcher.find()) -->Line_8 $$ return null[ CD ]
Line_6 $$ final Matcher matcher = myPattern.matcher(line)-->Line_10 $$ return findLinkInTrace(line, matcher)[ FD ]
Line_6 $$ final Matcher matcher = myPattern.matcher(line)-->Line_7 $$ if (!matcher.find()) [ FD ]
Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_3 $$ if (line.length() > MAX_LINE_TO_PARSE) [ FD ]
Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_6 $$ final Matcher matcher = myPattern.matcher(line)[ CD ]
Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_10 $$ return findLinkInTrace(line, matcher)[ FD ]
Line_2 $$ public final LinkInTrace findLinkInTrace(@NotNull String line) -->Line_3 $$ if (line.length() > MAX_LINE_TO_PARSE) [ CD ]
