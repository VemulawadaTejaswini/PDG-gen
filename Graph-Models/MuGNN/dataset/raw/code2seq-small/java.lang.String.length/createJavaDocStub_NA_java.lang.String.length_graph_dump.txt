Line_4 $$ final DocumentationProvider langDocumentationProvider = LanguageDocumentation.INSTANCE.forLanguage(comment.getParent().getLanguage())-->Line_6 $$ if (langDocumentationProvider instanceof CompositeDocumentationProvider) [ FD ]
Line_7 $$ docProvider = ((CompositeDocumentationProvider) langDocumentationProvider).getFirstCodeDocumentationProvider()-->Line_12 $$ if (docProvider.findExistingDocComment(comment) != comment)[ FD ]
Line_7 $$ docProvider = ((CompositeDocumentationProvider) langDocumentationProvider).getFirstCodeDocumentationProvider()-->Line_9 $$ docProvider = langDocumentationProvider instanceof CodeDocumentationProvider ? (CodeDocumentationProvider) langDocumentationProvider : null[ FD ]
Line_9 $$ docProvider = langDocumentationProvider instanceof CodeDocumentationProvider ? (CodeDocumentationProvider) langDocumentationProvider : null-->Line_12 $$ if (docProvider.findExistingDocComment(comment) != comment)[ FD ]
Line_17 $$ docStub = docProvider.generateDocumentationContentStub(comment)-->Line_21 $$ if (docStub != null && docStub.length() != 0) [ FD ]
Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) -->Line_6 $$ if (langDocumentationProvider instanceof CompositeDocumentationProvider) [ CD ]
Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) -->Line_27 $$ PsiDocumentManager.getInstance(project).commitAllDocuments()[ CD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_30 $$ return comment[ CD ]
Line_5 $$ final CodeDocumentationProvider docProvider-->Line_7 $$ docProvider = ((CompositeDocumentationProvider) langDocumentationProvider).getFirstCodeDocumentationProvider()[ FD ]
Line_9 $$ docProvider = langDocumentationProvider instanceof CodeDocumentationProvider ? (CodeDocumentationProvider) langDocumentationProvider : null-->Line_11 $$ if (docProvider != null) [ FD ]
Line_11 $$ if (docProvider != null) -->Line_14 $$ String docStub[ CD ]
Line_11 $$ if (docProvider != null) -->Line_15 $$ DumbService.getInstance(project).setAlternativeResolveEnabled(true)[ CD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_17 $$ docStub = docProvider.generateDocumentationContentStub(comment)[ FD ]
Line_21 $$ if (docStub != null && docStub.length() != 0) -->Line_24 $$ myDocument.insertString(myOffset, docStub)[ CD ]
Line_14 $$ String docStub-->Line_24 $$ myDocument.insertString(myOffset, docStub)[ FD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_15 $$ DumbService.getInstance(project).setAlternativeResolveEnabled(true)[ FD ]
Line_14 $$ String docStub-->Line_17 $$ docStub = docProvider.generateDocumentationContentStub(comment)[ FD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_12 $$ if (docProvider.findExistingDocComment(comment) != comment)[ FD ]
Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) -->Line_5 $$ final CodeDocumentationProvider docProvider[ CD ]
Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) -->Line_28 $$ return PsiTreeUtil.getNonStrictParentOfType(myFile.findElementAt(myOffset), PsiComment.class)[ CD ]
Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) -->Line_4 $$ final DocumentationProvider langDocumentationProvider = LanguageDocumentation.INSTANCE.forLanguage(comment.getParent().getLanguage())[ CD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) [ CD ]
Line_5 $$ final CodeDocumentationProvider docProvider-->Line_9 $$ docProvider = langDocumentationProvider instanceof CodeDocumentationProvider ? (CodeDocumentationProvider) langDocumentationProvider : null[ FD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_4 $$ final DocumentationProvider langDocumentationProvider = LanguageDocumentation.INSTANCE.forLanguage(comment.getParent().getLanguage())[ FD ]
Line_6 $$ if (langDocumentationProvider instanceof CompositeDocumentationProvider) -->Line_7 $$ docProvider = ((CompositeDocumentationProvider) langDocumentationProvider).getFirstCodeDocumentationProvider()[ CD ]
Line_21 $$ if (docStub != null && docStub.length() != 0) -->Line_22 $$ myOffset = CharArrayUtil.shiftForwardUntil(myDocument.getCharsSequence(), myOffset, LINE_SEPARATOR)[ CD ]
Line_17 $$ docStub = docProvider.generateDocumentationContentStub(comment)-->Line_24 $$ myDocument.insertString(myOffset, docStub)[ FD ]
Line_14 $$ String docStub-->Line_21 $$ if (docStub != null && docStub.length() != 0) [ FD ]
Line_21 $$ if (docStub != null && docStub.length() != 0) -->Line_23 $$ myOffset = CharArrayUtil.shiftForward(myDocument.getCharsSequence(), myOffset, LINE_SEPARATOR)[ CD ]
Line_5 $$ final CodeDocumentationProvider docProvider-->Line_17 $$ docStub = docProvider.generateDocumentationContentStub(comment)[ FD ]
Line_11 $$ if (docProvider != null) -->Line_21 $$ if (docStub != null && docStub.length() != 0) [ CD ]
Line_11 $$ if (docProvider != null) -->Line_12 $$ if (docProvider.findExistingDocComment(comment) != comment)[ CD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_19 $$ DumbService.getInstance(project).setAlternativeResolveEnabled(false)[ FD ]
Line_7 $$ docProvider = ((CompositeDocumentationProvider) langDocumentationProvider).getFirstCodeDocumentationProvider()-->Line_11 $$ if (docProvider != null) [ FD ]
Line_9 $$ docProvider = langDocumentationProvider instanceof CodeDocumentationProvider ? (CodeDocumentationProvider) langDocumentationProvider : null-->Line_17 $$ docStub = docProvider.generateDocumentationContentStub(comment)[ FD ]
Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) -->Line_11 $$ if (docProvider != null) [ CD ]
Line_5 $$ final CodeDocumentationProvider docProvider-->Line_12 $$ if (docProvider.findExistingDocComment(comment) != comment)[ FD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_3 $$ if (settings.JAVADOC_STUB_ON_ENTER) [ FD ]
Line_7 $$ docProvider = ((CompositeDocumentationProvider) langDocumentationProvider).getFirstCodeDocumentationProvider()-->Line_17 $$ docStub = docProvider.generateDocumentationContentStub(comment)[ FD ]
Line_2 $$ private PsiComment createJavaDocStub(final CodeInsightSettings settings, final PsiComment comment, final Project project) -->Line_27 $$ PsiDocumentManager.getInstance(project).commitAllDocuments()[ FD ]
Line_5 $$ final CodeDocumentationProvider docProvider-->Line_11 $$ if (docProvider != null) [ FD ]
Line_12 $$ if (docProvider.findExistingDocComment(comment) != comment)-->Line_13 $$ return comment[ CD ]
Line_6 $$ if (langDocumentationProvider instanceof CompositeDocumentationProvider) -->Line_9 $$ docProvider = langDocumentationProvider instanceof CodeDocumentationProvider ? (CodeDocumentationProvider) langDocumentationProvider : null[ CD ]
