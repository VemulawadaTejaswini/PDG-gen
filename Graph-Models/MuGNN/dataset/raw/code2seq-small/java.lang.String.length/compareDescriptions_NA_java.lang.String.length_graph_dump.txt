Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_24 $$ return true[ CD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_3 $$ String expectedDescription = expectedProblem.getChildText("description")[ FD ]
Line_14 $$ if (tokenizer.ttype == StreamTokenizer.TT_NUMBER) -->Line_15 $$ word = Double.toString(tokenizer.nval)[ CD ]
Line_22 $$ idx += word.length()-->Line_19 $$ idx = reportedDescription.indexOf(word, idx)[ FD ]
Line_3 $$ String expectedDescription = expectedProblem.getChildText("description")-->Line_5 $$ if (expectedDescription.equals(reportedDescription))[ FD ]
Line_10 $$ while (tokenizer.nextToken() != StreamTokenizer.TT_EOF) -->Line_20 $$ if (idx == -1)[ CD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_9 $$ int idx = 0[ CD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_3 $$ String expectedDescription = expectedProblem.getChildText("description")[ CD ]
Line_3 $$ String expectedDescription = expectedProblem.getChildText("description")-->Line_7 $$ StreamTokenizer tokenizer = new StreamTokenizer(new CharArrayReader(expectedDescription.toCharArray()))[ FD ]
Line_12 $$ if (tokenizer.sval != null) -->Line_14 $$ if (tokenizer.ttype == StreamTokenizer.TT_NUMBER) [ CD ]
Line_13 $$ word = tokenizer.sval-->Line_22 $$ idx += word.length()[ FD ]
Line_9 $$ int idx = 0-->Line_19 $$ idx = reportedDescription.indexOf(word, idx)[ FD ]
Line_20 $$ if (idx == -1)-->Line_21 $$ return false[ CD ]
Line_7 $$ StreamTokenizer tokenizer = new StreamTokenizer(new CharArrayReader(expectedDescription.toCharArray()))-->Line_8 $$ tokenizer.quoteChar('\'')[ FD ]
Line_15 $$ word = Double.toString(tokenizer.nval)-->Line_22 $$ idx += word.length()[ FD ]
Line_19 $$ idx = reportedDescription.indexOf(word, idx)-->Line_20 $$ if (idx == -1)[ FD ]
Line_5 $$ if (expectedDescription.equals(reportedDescription))-->Line_6 $$ return true[ CD ]
Line_19 $$ idx = reportedDescription.indexOf(word, idx)-->Line_22 $$ idx += word.length()[ FD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_10 $$ while (tokenizer.nextToken() != StreamTokenizer.TT_EOF) [ CD ]
Line_11 $$ String word-->Line_13 $$ word = tokenizer.sval[ FD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_7 $$ StreamTokenizer tokenizer = new StreamTokenizer(new CharArrayReader(expectedDescription.toCharArray()))[ CD ]
Line_7 $$ StreamTokenizer tokenizer = new StreamTokenizer(new CharArrayReader(expectedDescription.toCharArray()))-->Line_10 $$ while (tokenizer.nextToken() != StreamTokenizer.TT_EOF) [ FD ]
Line_22 $$ idx += word.length()-->Line_20 $$ if (idx == -1)[ FD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_4 $$ String reportedDescription = reportedProblem.getChildText("description")[ FD ]
Line_13 $$ word = tokenizer.sval-->Line_15 $$ word = Double.toString(tokenizer.nval)[ FD ]
Line_10 $$ while (tokenizer.nextToken() != StreamTokenizer.TT_EOF) -->Line_11 $$ String word[ CD ]
Line_11 $$ String word-->Line_15 $$ word = Double.toString(tokenizer.nval)[ FD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_8 $$ tokenizer.quoteChar('\'')[ CD ]
Line_4 $$ String reportedDescription = reportedProblem.getChildText("description")-->Line_5 $$ if (expectedDescription.equals(reportedDescription))[ FD ]
Line_13 $$ word = tokenizer.sval-->Line_19 $$ idx = reportedDescription.indexOf(word, idx)[ FD ]
Line_11 $$ String word-->Line_22 $$ idx += word.length()[ FD ]
Line_10 $$ while (tokenizer.nextToken() != StreamTokenizer.TT_EOF) -->Line_12 $$ if (tokenizer.sval != null) [ CD ]
Line_4 $$ String reportedDescription = reportedProblem.getChildText("description")-->Line_19 $$ idx = reportedDescription.indexOf(word, idx)[ FD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_4 $$ String reportedDescription = reportedProblem.getChildText("description")[ CD ]
Line_10 $$ while (tokenizer.nextToken() != StreamTokenizer.TT_EOF) -->Line_19 $$ idx = reportedDescription.indexOf(word, idx)[ CD ]
Line_12 $$ if (tokenizer.sval != null) -->Line_13 $$ word = tokenizer.sval[ CD ]
Line_9 $$ int idx = 0-->Line_22 $$ idx += word.length()[ FD ]
Line_9 $$ int idx = 0-->Line_20 $$ if (idx == -1)[ FD ]
Line_15 $$ word = Double.toString(tokenizer.nval)-->Line_19 $$ idx = reportedDescription.indexOf(word, idx)[ FD ]
Line_10 $$ while (tokenizer.nextToken() != StreamTokenizer.TT_EOF) -->Line_22 $$ idx += word.length()[ CD ]
Line_11 $$ String word-->Line_19 $$ idx = reportedDescription.indexOf(word, idx)[ FD ]
Line_2 $$ static boolean compareDescriptions(Element reportedProblem, Element expectedProblem) throws Exception -->Line_5 $$ if (expectedDescription.equals(reportedDescription))[ CD ]
