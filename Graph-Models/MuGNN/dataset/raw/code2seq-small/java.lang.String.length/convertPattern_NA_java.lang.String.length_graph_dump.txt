Line_2 $$ static String convertPattern(String pattern) -->Line_21 $$ char c = pattern.charAt(i)[ FD ]
Line_44 $$ firstIdentifierLetter = false-->Line_55 $$ firstIdentifierLetter = true[ FD ]
Line_45 $$ if (c == '*') -->Line_47 $$ firstIdentifierLetter = true[ CD ]
Line_55 $$ firstIdentifierLetter = true-->Line_25 $$ if (!firstIdentifierLetter) [ FD ]
Line_5 $$ pattern = pattern.substring(0, eol)-->Line_8 $$ pattern = pattern.substring(0, 80)[ FD ]
Line_45 $$ if (c == '*') -->Line_48 $$ if (c == '.') [ CD ]
Line_48 $$ if (c == '.') -->Line_51 $$ if (c == ' ') [ CD ]
Line_5 $$ pattern = pattern.substring(0, eol)-->Line_7 $$ if (pattern.length() >= 80) [ FD ]
Line_19 $$ boolean firstIdentifierLetter = true-->Line_47 $$ firstIdentifierLetter = true[ FD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_51 $$ if (c == ' ') [ FD ]
Line_19 $$ boolean firstIdentifierLetter = true-->Line_44 $$ firstIdentifierLetter = false[ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_19 $$ boolean firstIdentifierLetter = true[ CD ]
Line_3 $$ int eol = pattern.indexOf('\n')-->Line_4 $$ if (eol != -1) [ FD ]
Line_53 $$ firstIdentifierLetter = true-->Line_55 $$ firstIdentifierLetter = true[ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_13 $$ if (containsOnlyUppercaseLetters(pattern)) [ FD ]
Line_47 $$ firstIdentifierLetter = true-->Line_55 $$ firstIdentifierLetter = true[ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_3 $$ int eol = pattern.indexOf('\n')[ FD ]
Line_47 $$ firstIdentifierLetter = true-->Line_53 $$ firstIdentifierLetter = true[ FD ]
Line_50 $$ firstIdentifierLetter = true-->Line_55 $$ firstIdentifierLetter = true[ FD ]
Line_50 $$ firstIdentifierLetter = true-->Line_53 $$ firstIdentifierLetter = true[ FD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_42 $$ buffer.append(c)[ FD ]
Line_19 $$ boolean firstIdentifierLetter = true-->Line_50 $$ firstIdentifierLetter = true[ FD ]
Line_47 $$ firstIdentifierLetter = true-->Line_25 $$ if (!firstIdentifierLetter) [ FD ]
Line_44 $$ firstIdentifierLetter = false-->Line_50 $$ firstIdentifierLetter = true[ FD ]
Line_30 $$ if (allowToLower || i == 0) -->Line_31 $$ buffer.append('|')[ CD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_8 $$ pattern = pattern.substring(0, 80)[ FD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_48 $$ if (c == '.') [ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_5 $$ pattern = pattern.substring(0, eol)[ FD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_39 $$ buffer.append(Character.toUpperCase(c))[ FD ]
Line_44 $$ firstIdentifierLetter = false-->Line_25 $$ if (!firstIdentifierLetter) [ FD ]
Line_3 $$ int eol = pattern.indexOf('\n')-->Line_5 $$ pattern = pattern.substring(0, eol)[ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_7 $$ if (pattern.length() >= 80) [ CD ]
Line_12 $$ boolean allowToLower = true-->Line_14 $$ allowToLower = false[ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_65 $$ return buffer.toString()[ CD ]
Line_20 $$ for (int i = 0; i < pattern.length(); i++) -->Line_21 $$ char c = pattern.charAt(i)[ CD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_45 $$ if (c == '*') [ FD ]
Line_50 $$ firstIdentifierLetter = true-->Line_25 $$ if (!firstIdentifierLetter) [ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_3 $$ int eol = pattern.indexOf('\n')[ CD ]
Line_51 $$ if (c == ' ') -->Line_52 $$ buffer.append(".*\\ ")[ CD ]
Line_5 $$ pattern = pattern.substring(0, eol)-->Line_13 $$ if (containsOnlyUppercaseLetters(pattern)) [ FD ]
Line_8 $$ pattern = pattern.substring(0, 80)-->Line_13 $$ if (containsOnlyUppercaseLetters(pattern)) [ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_13 $$ if (containsOnlyUppercaseLetters(pattern)) [ CD ]
Line_13 $$ if (containsOnlyUppercaseLetters(pattern)) -->Line_14 $$ allowToLower = false[ CD ]
Line_22 $$ if (Character.isLetterOrDigit(c)) -->Line_45 $$ if (c == '*') [ CD ]
Line_20 $$ for (int i = 0; i < pattern.length(); i++) -->Line_22 $$ if (Character.isLetterOrDigit(c)) [ CD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_16 $$ if (allowToLower) [ CD ]
Line_12 $$ boolean allowToLower = true-->Line_30 $$ if (allowToLower || i == 0) [ FD ]
Line_8 $$ pattern = pattern.substring(0, 80)-->Line_21 $$ char c = pattern.charAt(i)[ FD ]
Line_25 $$ if (!firstIdentifierLetter) -->Line_26 $$ buffer.append("[^A-Z]*")[ CD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_64 $$ buffer.append(".*")[ CD ]
Line_19 $$ boolean firstIdentifierLetter = true-->Line_55 $$ firstIdentifierLetter = true[ FD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_35 $$ if (Character.isLowerCase(c)) [ FD ]
Line_19 $$ boolean firstIdentifierLetter = true-->Line_53 $$ firstIdentifierLetter = true[ FD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_32 $$ buffer.append(Character.toLowerCase(c))[ FD ]
Line_45 $$ if (c == '*') -->Line_46 $$ buffer.append(".*")[ CD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_7 $$ if (pattern.length() >= 80) [ FD ]
Line_5 $$ pattern = pattern.substring(0, eol)-->Line_20 $$ for (int i = 0; i < pattern.length(); i++) [ FD ]
Line_35 $$ if (Character.isLowerCase(c)) -->Line_37 $$ buffer.append(c)[ CD ]
Line_47 $$ firstIdentifierLetter = true-->Line_50 $$ firstIdentifierLetter = true[ FD ]
Line_8 $$ pattern = pattern.substring(0, 80)-->Line_20 $$ for (int i = 0; i < pattern.length(); i++) [ FD ]
Line_14 $$ allowToLower = false-->Line_30 $$ if (allowToLower || i == 0) [ FD ]
Line_35 $$ if (Character.isLowerCase(c)) -->Line_42 $$ buffer.append(c)[ CD ]
Line_51 $$ if (c == ' ') -->Line_55 $$ firstIdentifierLetter = true[ CD ]
Line_7 $$ if (pattern.length() >= 80) -->Line_8 $$ pattern = pattern.substring(0, 80)[ CD ]
Line_53 $$ firstIdentifierLetter = true-->Line_25 $$ if (!firstIdentifierLetter) [ FD ]
Line_51 $$ if (c == ' ') -->Line_53 $$ firstIdentifierLetter = true[ CD ]
Line_44 $$ firstIdentifierLetter = false-->Line_53 $$ firstIdentifierLetter = true[ FD ]
Line_20 $$ for (int i = 0; i < pattern.length(); i++) -->Line_21 $$ char c = pattern.charAt(i)[ FD ]
Line_19 $$ boolean firstIdentifierLetter = true-->Line_25 $$ if (!firstIdentifierLetter) [ FD ]
Line_35 $$ if (Character.isLowerCase(c)) -->Line_38 $$ buffer.append('|')[ CD ]
Line_35 $$ if (Character.isLowerCase(c)) -->Line_36 $$ buffer.append('[')[ CD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_22 $$ if (Character.isLetterOrDigit(c)) [ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_20 $$ for (int i = 0; i < pattern.length(); i++) [ FD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_37 $$ buffer.append(c)[ FD ]
Line_35 $$ if (Character.isLowerCase(c)) -->Line_40 $$ buffer.append(']')[ CD ]
Line_21 $$ char c = pattern.charAt(i)-->Line_29 $$ buffer.append(c)[ FD ]
Line_48 $$ if (c == '.') -->Line_49 $$ buffer.append("\\.")[ CD ]
Line_16 $$ if (allowToLower) -->Line_17 $$ buffer.append(".*")[ CD ]
Line_35 $$ if (Character.isLowerCase(c)) -->Line_39 $$ buffer.append(Character.toUpperCase(c))[ CD ]
Line_5 $$ pattern = pattern.substring(0, eol)-->Line_21 $$ char c = pattern.charAt(i)[ FD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_4 $$ if (eol != -1) [ CD ]
Line_44 $$ firstIdentifierLetter = false-->Line_47 $$ firstIdentifierLetter = true[ FD ]
Line_48 $$ if (c == '.') -->Line_50 $$ firstIdentifierLetter = true[ CD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_20 $$ for (int i = 0; i < pattern.length(); i++) [ CD ]
Line_22 $$ if (Character.isLetterOrDigit(c)) -->Line_44 $$ firstIdentifierLetter = false[ CD ]
Line_4 $$ if (eol != -1) -->Line_5 $$ pattern = pattern.substring(0, eol)[ CD ]
Line_51 $$ if (c == ' ') -->Line_61 $$ buffer.append(Integer.toHexString(c + 0x20000).substring(3))[ CD ]
Line_2 $$ static String convertPattern(String pattern) -->Line_12 $$ boolean allowToLower = true[ CD ]
Line_30 $$ if (allowToLower || i == 0) -->Line_32 $$ buffer.append(Character.toLowerCase(c))[ CD ]
