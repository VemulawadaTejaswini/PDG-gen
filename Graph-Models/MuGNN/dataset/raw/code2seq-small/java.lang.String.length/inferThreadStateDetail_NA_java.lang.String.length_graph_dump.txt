Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_10 $$ final String javaThreadState = threadState.getJavaThreadState()[ FD ]
Line_22 $$ while (true) -->Line_23 $$ pos = stackTrace.indexOf(PUMP_EVENT, pos)[ CD ]
Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_29 $$ threadState.setExtraState("modality level " + modality)[ FD ]
Line_20 $$ int modality = 0-->Line_26 $$ modality++[ FD ]
Line_17 $$ if (stackTrace.contains("java.awt.EventQueue.getNextEvent")) -->Line_18 $$ threadState.setThreadStateDetail("idle")[ CD ]
Line_22 $$ while (true) -->Line_27 $$ pos += PUMP_EVENT.length()[ CD ]
Line_23 $$ pos = stackTrace.indexOf(PUMP_EVENT, pos)-->Line_24 $$ if (pos < 0)[ FD ]
Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_8 $$ threadState.setOperation(ThreadOperation.IO)[ FD ]
Line_22 $$ while (true) -->Line_24 $$ if (pos < 0)[ CD ]
Line_16 $$ if (threadState.isEDT()) -->Line_21 $$ int pos = 0[ CD ]
Line_16 $$ if (threadState.isEDT()) -->Line_29 $$ threadState.setExtraState("modality level " + modality)[ CD ]
Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_16 $$ if (threadState.isEDT()) [ FD ]
Line_7 $$ if (stackTrace.contains("at java.io.FileInputStream.readBytes")) -->Line_8 $$ threadState.setOperation(ThreadOperation.IO)[ CD ]
Line_16 $$ if (threadState.isEDT()) -->Line_20 $$ int modality = 0[ CD ]
Line_21 $$ int pos = 0-->Line_24 $$ if (pos < 0)[ FD ]
Line_5 $$ if (stackTrace.contains("at java.net.PlainSocketImpl.socketAccept") || stackTrace.contains("at java.net.PlainDatagramSocketImpl.receive") || stackTrace.contains("at java.net.SocketInputStream.socketRead") || stackTrace.contains("at java.net.PlainSocketImpl.socketConnect")) -->Line_7 $$ if (stackTrace.contains("at java.io.FileInputStream.readBytes")) [ CD ]
Line_27 $$ pos += PUMP_EVENT.length()-->Line_23 $$ pos = stackTrace.indexOf(PUMP_EVENT, pos)[ FD ]
Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_5 $$ if (stackTrace.contains("at java.net.PlainSocketImpl.socketAccept") || stackTrace.contains("at java.net.PlainDatagramSocketImpl.receive") || stackTrace.contains("at java.net.SocketInputStream.socketRead") || stackTrace.contains("at java.net.PlainSocketImpl.socketConnect")) [ CD ]
Line_7 $$ if (stackTrace.contains("at java.io.FileInputStream.readBytes")) -->Line_9 $$ if (stackTrace.contains("at java.lang.Thread.sleep")) [ CD ]
Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_16 $$ if (threadState.isEDT()) [ CD ]
Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_18 $$ threadState.setThreadStateDetail("idle")[ FD ]
Line_2 $$ public static void inferThreadStateDetail(final ThreadState threadState) -->Line_6 $$ threadState.setOperation(ThreadOperation.Socket)[ FD ]
Line_16 $$ if (threadState.isEDT()) -->Line_17 $$ if (stackTrace.contains("java.awt.EventQueue.getNextEvent")) [ CD ]
Line_22 $$ while (true) -->Line_26 $$ modality++[ CD ]
Line_27 $$ pos += PUMP_EVENT.length()-->Line_24 $$ if (pos < 0)[ FD ]
Line_21 $$ int pos = 0-->Line_27 $$ pos += PUMP_EVENT.length()[ FD ]
Line_21 $$ int pos = 0-->Line_23 $$ pos = stackTrace.indexOf(PUMP_EVENT, pos)[ FD ]
Line_10 $$ final String javaThreadState = threadState.getJavaThreadState()-->Line_11 $$ if (!Thread.State.RUNNABLE.name().equals(javaThreadState)) [ FD ]
Line_16 $$ if (threadState.isEDT()) -->Line_22 $$ while (true) [ CD ]
Line_23 $$ pos = stackTrace.indexOf(PUMP_EVENT, pos)-->Line_27 $$ pos += PUMP_EVENT.length()[ FD ]
Line_9 $$ if (stackTrace.contains("at java.lang.Thread.sleep")) -->Line_10 $$ final String javaThreadState = threadState.getJavaThreadState()[ CD ]
Line_5 $$ if (stackTrace.contains("at java.net.PlainSocketImpl.socketAccept") || stackTrace.contains("at java.net.PlainDatagramSocketImpl.receive") || stackTrace.contains("at java.net.SocketInputStream.socketRead") || stackTrace.contains("at java.net.PlainSocketImpl.socketConnect")) -->Line_6 $$ threadState.setOperation(ThreadOperation.Socket)[ CD ]
Line_9 $$ if (stackTrace.contains("at java.lang.Thread.sleep")) -->Line_11 $$ if (!Thread.State.RUNNABLE.name().equals(javaThreadState)) [ CD ]
