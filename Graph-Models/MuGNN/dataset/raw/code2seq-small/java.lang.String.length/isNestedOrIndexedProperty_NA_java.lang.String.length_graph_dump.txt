Line_3 $$ if (propertyPath == null) -->Line_4 $$ return false[ CD ]
Line_2 $$ public static boolean isNestedOrIndexedProperty(String propertyPath) -->Line_7 $$ char ch = propertyPath.charAt(i)[ FD ]
Line_6 $$ for (int i = 0; i < propertyPath.length(); i++) -->Line_7 $$ char ch = propertyPath.charAt(i)[ FD ]
Line_6 $$ for (int i = 0; i < propertyPath.length(); i++) -->Line_7 $$ char ch = propertyPath.charAt(i)[ CD ]
Line_8 $$ if (ch == PropertyAccessor.NESTED_PROPERTY_SEPARATOR_CHAR || ch == PropertyAccessor.PROPERTY_KEY_PREFIX_CHAR) -->Line_9 $$ return true[ CD ]
Line_2 $$ public static boolean isNestedOrIndexedProperty(String propertyPath) -->Line_6 $$ for (int i = 0; i < propertyPath.length(); i++) [ FD ]
Line_2 $$ public static boolean isNestedOrIndexedProperty(String propertyPath) -->Line_6 $$ for (int i = 0; i < propertyPath.length(); i++) [ CD ]
Line_2 $$ public static boolean isNestedOrIndexedProperty(String propertyPath) -->Line_12 $$ return false[ CD ]
Line_6 $$ for (int i = 0; i < propertyPath.length(); i++) -->Line_8 $$ if (ch == PropertyAccessor.NESTED_PROPERTY_SEPARATOR_CHAR || ch == PropertyAccessor.PROPERTY_KEY_PREFIX_CHAR) [ CD ]
Line_2 $$ public static boolean isNestedOrIndexedProperty(String propertyPath) -->Line_3 $$ if (propertyPath == null) [ FD ]
Line_2 $$ public static boolean isNestedOrIndexedProperty(String propertyPath) -->Line_3 $$ if (propertyPath == null) [ CD ]
