Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_8 $$ while (true) [ CD ]
Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_10 $$ if (nextWordStart >= name.length()) [ FD ]
Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_4 $$ if (startFrom >= name.length() || myHasHumps && isLowerCase[patternIndex] && !(patternIndex > 0 && isWordSeparator[patternIndex - 1])) [ FD ]
Line_3 $$ final char p = myPattern[patternIndex]-->Line_13 $$ if (charEquals(p, patternIndex, name.charAt(nextWordStart), true)) [ FD ]
Line_10 $$ if (nextWordStart >= name.length()) -->Line_11 $$ return -1[ CD ]
Line_7 $$ int nextWordStart = startFrom-->Line_10 $$ if (nextWordStart >= name.length()) [ FD ]
Line_8 $$ while (true) -->Line_9 $$ nextWordStart = nextWord(name, nextWordStart)[ CD ]
Line_7 $$ int nextWordStart = startFrom-->Line_9 $$ nextWordStart = nextWord(name, nextWordStart)[ FD ]
Line_13 $$ if (charEquals(p, patternIndex, name.charAt(nextWordStart), true)) -->Line_14 $$ return nextWordStart[ CD ]
Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_3 $$ final char p = myPattern[patternIndex][ CD ]
Line_9 $$ nextWordStart = nextWord(name, nextWordStart)-->Line_13 $$ if (charEquals(p, patternIndex, name.charAt(nextWordStart), true)) [ FD ]
Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_7 $$ int nextWordStart = startFrom[ CD ]
Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_13 $$ if (charEquals(p, patternIndex, name.charAt(nextWordStart), true)) [ FD ]
Line_8 $$ while (true) -->Line_10 $$ if (nextWordStart >= name.length()) [ CD ]
Line_4 $$ if (startFrom >= name.length() || myHasHumps && isLowerCase[patternIndex] && !(patternIndex > 0 && isWordSeparator[patternIndex - 1])) -->Line_5 $$ return -1[ CD ]
Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_4 $$ if (startFrom >= name.length() || myHasHumps && isLowerCase[patternIndex] && !(patternIndex > 0 && isWordSeparator[patternIndex - 1])) [ CD ]
Line_7 $$ int nextWordStart = startFrom-->Line_13 $$ if (charEquals(p, patternIndex, name.charAt(nextWordStart), true)) [ FD ]
Line_8 $$ while (true) -->Line_13 $$ if (charEquals(p, patternIndex, name.charAt(nextWordStart), true)) [ CD ]
Line_2 $$ private int indexOfWordStart(@NotNull String name, int patternIndex, int startFrom) -->Line_9 $$ nextWordStart = nextWord(name, nextWordStart)[ FD ]
Line_9 $$ nextWordStart = nextWord(name, nextWordStart)-->Line_10 $$ if (nextWordStart >= name.length()) [ FD ]
