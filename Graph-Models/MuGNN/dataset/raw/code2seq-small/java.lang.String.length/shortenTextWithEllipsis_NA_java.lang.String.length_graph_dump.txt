Line_4 $$ if (textLength > maxLength) -->Line_5 $$ final int prefixLength = maxLength - suffixLength - symbol.length()[ CD ]
Line_2 $$ public static String shortenTextWithEllipsis(@NotNull final String text, final int maxLength, final int suffixLength, @NotNull String symbol) -->Line_4 $$ if (textLength > maxLength) [ FD ]
Line_3 $$ final int textLength = text.length()-->Line_4 $$ if (textLength > maxLength) [ FD ]
Line_5 $$ final int prefixLength = maxLength - suffixLength - symbol.length()-->Line_7 $$ return text.substring(0, prefixLength) + symbol + text.substring(textLength - suffixLength)[ FD ]
Line_4 $$ if (textLength > maxLength) -->Line_9 $$ return text[ CD ]
Line_4 $$ if (textLength > maxLength) -->Line_7 $$ return text.substring(0, prefixLength) + symbol + text.substring(textLength - suffixLength)[ CD ]
Line_2 $$ public static String shortenTextWithEllipsis(@NotNull final String text, final int maxLength, final int suffixLength, @NotNull String symbol) -->Line_3 $$ final int textLength = text.length()[ CD ]
Line_2 $$ public static String shortenTextWithEllipsis(@NotNull final String text, final int maxLength, final int suffixLength, @NotNull String symbol) -->Line_7 $$ return text.substring(0, prefixLength) + symbol + text.substring(textLength - suffixLength)[ FD ]
Line_2 $$ public static String shortenTextWithEllipsis(@NotNull final String text, final int maxLength, final int suffixLength, @NotNull String symbol) -->Line_4 $$ if (textLength > maxLength) [ CD ]
Line_2 $$ public static String shortenTextWithEllipsis(@NotNull final String text, final int maxLength, final int suffixLength, @NotNull String symbol) -->Line_5 $$ final int prefixLength = maxLength - suffixLength - symbol.length()[ FD ]
Line_2 $$ public static String shortenTextWithEllipsis(@NotNull final String text, final int maxLength, final int suffixLength, @NotNull String symbol) -->Line_3 $$ final int textLength = text.length()[ FD ]
