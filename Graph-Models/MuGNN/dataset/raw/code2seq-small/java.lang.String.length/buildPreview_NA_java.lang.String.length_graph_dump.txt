Line_25 $$ for (Map.Entry<String, String> entry : links.entrySet()) -->Line_28 $$ toAdd.put(shortName, entry.getValue())[ FD ]
Line_31 $$ if (longName != null) -->Line_32 $$ toAdd.put(longName, entry.getValue())[ CD ]
Line_43 $$ StringBuilder buffer = new StringBuilder(header)-->Line_44 $$ replace(buffer, "\n", "<br/>", modifiedRanges)[ FD ]
Line_46 $$ String visibleName = replaceFrom-->Line_49 $$ visibleName = visibleName.substring(i + 1)[ FD ]
Line_43 $$ StringBuilder buffer = new StringBuilder(header)-->Line_51 $$ replace(buffer, replaceFrom, String.format("<a href=\"%s\">%s</a>", links.get(replaceFrom), visibleName), modifiedRanges)[ FD ]
Line_15 $$ if (fullText == null) -->Line_16 $$ return header[ CD ]
Line_27 $$ if (shortName != null) -->Line_28 $$ toAdd.put(shortName, entry.getValue())[ CD ]
Line_46 $$ String visibleName = replaceFrom-->Line_47 $$ int i = visibleName.lastIndexOf('.')[ FD ]
Line_45 $$ for (String replaceFrom : sortedReplacements) -->Line_51 $$ replace(buffer, replaceFrom, String.format("<a href=\"%s\">%s</a>", links.get(replaceFrom), visibleName), modifiedRanges)[ FD ]
Line_25 $$ for (Map.Entry<String, String> entry : links.entrySet()) -->Line_30 $$ String longName = parseLongName(entry.getKey(), entry.getValue())[ FD ]
Line_49 $$ visibleName = visibleName.substring(i + 1)-->Line_51 $$ replace(buffer, replaceFrom, String.format("<a href=\"%s\">%s</a>", links.get(replaceFrom), visibleName), modifiedRanges)[ FD ]
Line_30 $$ String longName = parseLongName(entry.getKey(), entry.getValue())-->Line_31 $$ if (longName != null) [ FD ]
Line_25 $$ for (Map.Entry<String, String> entry : links.entrySet()) -->Line_32 $$ toAdd.put(longName, entry.getValue())[ FD ]
Line_48 $$ if (i > 0 && i < visibleName.length() - 1) -->Line_49 $$ visibleName = visibleName.substring(i + 1)[ CD ]
Line_25 $$ for (Map.Entry<String, String> entry : links.entrySet()) -->Line_26 $$ String shortName = parseShortName(entry.getKey())[ FD ]
Line_41 $$ List<String> sortedReplacements = ContainerUtilRt.newArrayList(links.keySet())-->Line_42 $$ Collections.sort(sortedReplacements, REPLACEMENTS_COMPARATOR)[ FD ]
Line_36 $$ if (qName != null) -->Line_37 $$ links.put(qName, DocumentationManagerProtocol.PSI_ELEMENT_PROTOCOL + qName)[ CD ]
Line_46 $$ String visibleName = replaceFrom-->Line_48 $$ if (i > 0 && i < visibleName.length() - 1) [ FD ]
Line_26 $$ String shortName = parseShortName(entry.getKey())-->Line_28 $$ toAdd.put(shortName, entry.getValue())[ FD ]
Line_43 $$ StringBuilder buffer = new StringBuilder(header)-->Line_53 $$ return buffer.toString()[ FD ]
Line_30 $$ String longName = parseLongName(entry.getKey(), entry.getValue())-->Line_32 $$ toAdd.put(longName, entry.getValue())[ FD ]
Line_46 $$ String visibleName = replaceFrom-->Line_51 $$ replace(buffer, replaceFrom, String.format("<a href=\"%s\">%s</a>", links.get(replaceFrom), visibleName), modifiedRanges)[ FD ]
Line_26 $$ String shortName = parseShortName(entry.getKey())-->Line_27 $$ if (shortName != null) [ FD ]
