Line_10 $$ if (!stringText.startsWith("\"\"\"") && !stringText.endsWith("\"\"\"")) -->Line_12 $$ if (holder != null) [ CD ]
Line_4 $$ String stringText = string.getText()-->Line_14 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''")) [ FD ]
Line_12 $$ if (holder != null) -->Line_19 $$ if (string.getStringValue().isEmpty())[ CD ]
Line_6 $$ stringText = stringText.substring(length)-->Line_14 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''")) [ FD ]
Line_12 $$ if (holder != null) -->Line_13 $$ int quoteCount = 1[ CD ]
Line_7 $$ final PyDocStringOwner docStringOwner = PsiTreeUtil.getParentOfType(string, PyDocStringOwner.class)-->Line_8 $$ if (docStringOwner != null) [ FD ]
Line_6 $$ stringText = stringText.substring(length)-->Line_10 $$ if (!stringText.startsWith("\"\"\"") && !stringText.endsWith("\"\"\"")) [ FD ]
Line_4 $$ String stringText = string.getText()-->Line_18 $$ TextRange trEnd = new TextRange(stringText.length() + length - quoteCount, stringText.length() + length)[ FD ]
Line_13 $$ int quoteCount = 1-->Line_15 $$ quoteCount = 3[ FD ]
Line_4 $$ String stringText = string.getText()-->Line_6 $$ stringText = stringText.substring(length)[ FD ]
Line_12 $$ if (holder != null) -->Line_14 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''")) [ CD ]
Line_10 $$ if (!stringText.startsWith("\"\"\"") && !stringText.endsWith("\"\"\"")) -->Line_11 $$ ProblemsHolder holder = getHolder()[ CD ]
Line_9 $$ if (docStringOwner.getDocStringExpression() == string) -->Line_10 $$ if (!stringText.startsWith("\"\"\"") && !stringText.endsWith("\"\"\"")) [ CD ]
Line_19 $$ if (string.getStringValue().isEmpty())-->Line_23 $$ holder.registerProblem(string, trEnd, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ CD ]
Line_12 $$ if (holder != null) -->Line_17 $$ TextRange trStart = new TextRange(length, length + quoteCount)[ CD ]
Line_19 $$ if (string.getStringValue().isEmpty())-->Line_20 $$ holder.registerProblem(string, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ CD ]
Line_19 $$ if (string.getStringValue().isEmpty())-->Line_22 $$ holder.registerProblem(string, trStart, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ CD ]
Line_14 $$ if (stringText.startsWith("'''") && stringText.endsWith("'''")) -->Line_15 $$ quoteCount = 3[ CD ]
Line_4 $$ String stringText = string.getText()-->Line_10 $$ if (!stringText.startsWith("\"\"\"") && !stringText.endsWith("\"\"\"")) [ FD ]
Line_11 $$ ProblemsHolder holder = getHolder()-->Line_20 $$ holder.registerProblem(string, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ FD ]
Line_7 $$ final PyDocStringOwner docStringOwner = PsiTreeUtil.getParentOfType(string, PyDocStringOwner.class)-->Line_9 $$ if (docStringOwner.getDocStringExpression() == string) [ FD ]
Line_18 $$ TextRange trEnd = new TextRange(stringText.length() + length - quoteCount, stringText.length() + length)-->Line_23 $$ holder.registerProblem(string, trEnd, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ FD ]
Line_5 $$ int length = PyStringLiteralExpressionImpl.getPrefixLength(stringText)-->Line_6 $$ stringText = stringText.substring(length)[ FD ]
Line_12 $$ if (holder != null) -->Line_18 $$ TextRange trEnd = new TextRange(stringText.length() + length - quoteCount, stringText.length() + length)[ CD ]
Line_17 $$ TextRange trStart = new TextRange(length, length + quoteCount)-->Line_22 $$ holder.registerProblem(string, trStart, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ FD ]
Line_11 $$ ProblemsHolder holder = getHolder()-->Line_22 $$ holder.registerProblem(string, trStart, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ FD ]
Line_11 $$ ProblemsHolder holder = getHolder()-->Line_12 $$ if (holder != null) [ FD ]
Line_6 $$ stringText = stringText.substring(length)-->Line_18 $$ TextRange trEnd = new TextRange(stringText.length() + length - quoteCount, stringText.length() + length)[ FD ]
Line_11 $$ ProblemsHolder holder = getHolder()-->Line_23 $$ holder.registerProblem(string, trEnd, PyBundle.message("INSP.message.single.quoted.docstring"), new ConvertDocstringQuickFix())[ FD ]
Line_8 $$ if (docStringOwner != null) -->Line_9 $$ if (docStringOwner.getDocStringExpression() == string) [ CD ]
Line_4 $$ String stringText = string.getText()-->Line_5 $$ int length = PyStringLiteralExpressionImpl.getPrefixLength(stringText)[ FD ]
