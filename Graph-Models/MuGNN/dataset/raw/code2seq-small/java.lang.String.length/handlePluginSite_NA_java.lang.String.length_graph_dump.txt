Line_15 $$ String path = request.rawPath().substring("/_plugin/".length())-->Line_29 $$ sitePath = path.substring(i1 + 1)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_19 $$ if (i1 == -1) [ CD ]
Line_18 $$ String sitePath-->Line_31 $$ if (sitePath.length() == 0) [ FD ]
Line_41 $$ Path file = siteFile.resolve(sitePath)-->Line_52 $$ file = file.resolve("index.html")[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_46 $$ BasicFileAttributes attributes = Files.readAttributes(file, BasicFileAttributes.class)[ CD ]
Line_48 $$ if (!attributes.isDirectory()) -->Line_49 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ CD ]
Line_23 $$ BytesRestResponse restResponse = new BytesRestResponse(RestStatus.MOVED_PERMANENTLY, "text/html", "<head><meta http-equiv=\"refresh\" content=\"0; URL=" + redirectUrl + "\"></head>")-->Line_25 $$ channel.sendResponse(restResponse)[ FD ]
Line_23 $$ BytesRestResponse restResponse = new BytesRestResponse(RestStatus.MOVED_PERMANENTLY, "text/html", "<head><meta http-equiv=\"refresh\" content=\"0; URL=" + redirectUrl + "\"></head>")-->Line_24 $$ restResponse.addHeader("Location", redirectUrl)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_47 $$ if (!attributes.isRegularFile()) [ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_38 $$ final Path siteFile = environment.pluginsFile().resolve(pluginName).resolve("_site")[ CD ]
Line_15 $$ String path = request.rawPath().substring("/_plugin/".length())-->Line_16 $$ int i1 = path.indexOf('/')[ FD ]
Line_32 $$ sitePath = "index.html"-->Line_60 $$ channel.sendResponse(new BytesRestResponse(OK, guessMimeType(sitePath), data))[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_7 $$ if (request.method() == RestRequest.Method.OPTIONS) [ FD ]
Line_52 $$ file = file.resolve("index.html")-->Line_59 $$ byte[] data = Files.readAllBytes(file)[ FD ]
Line_17 $$ String pluginName-->Line_38 $$ final Path siteFile = environment.pluginsFile().resolve(pluginName).resolve("_site")[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_11 $$ if (request.method() != RestRequest.Method.GET) [ FD ]
Line_29 $$ sitePath = path.substring(i1 + 1)-->Line_41 $$ Path file = siteFile.resolve(sitePath)[ FD ]
Line_29 $$ sitePath = path.substring(i1 + 1)-->Line_32 $$ sitePath = "index.html"[ FD ]
Line_47 $$ if (!attributes.isRegularFile()) -->Line_48 $$ if (!attributes.isDirectory()) [ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_22 $$ String redirectUrl = request.rawPath() + "/"[ FD ]
Line_3 $$ if (disableSites) -->Line_4 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ CD ]
Line_15 $$ String path = request.rawPath().substring("/_plugin/".length())-->Line_28 $$ pluginName = path.substring(0, i1)[ FD ]
Line_38 $$ final Path siteFile = environment.pluginsFile().resolve(pluginName).resolve("_site")-->Line_39 $$ final String separator = siteFile.getFileSystem().getSeparator()[ FD ]
Line_40 $$ sitePath = sitePath.replace("/", separator)-->Line_41 $$ Path file = siteFile.resolve(sitePath)[ FD ]
Line_42 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !file.toAbsolutePath().normalize().startsWith(siteFile.toAbsolutePath().normalize())) -->Line_44 $$ return[ CD ]
Line_41 $$ Path file = siteFile.resolve(sitePath)-->Line_53 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !Files.isRegularFile(file)) [ FD ]
Line_29 $$ sitePath = path.substring(i1 + 1)-->Line_31 $$ if (sitePath.length() == 0) [ FD ]
Line_21 $$ sitePath = null-->Line_41 $$ Path file = siteFile.resolve(sitePath)[ FD ]
Line_7 $$ if (request.method() == RestRequest.Method.OPTIONS) -->Line_8 $$ channel.sendResponse(new BytesRestResponse(OK))[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_3 $$ if (disableSites) [ CD ]
Line_17 $$ String pluginName-->Line_28 $$ pluginName = path.substring(0, i1)[ FD ]
Line_16 $$ int i1 = path.indexOf('/')-->Line_19 $$ if (i1 == -1) [ FD ]
Line_20 $$ pluginName = path-->Line_28 $$ pluginName = path.substring(0, i1)[ FD ]
Line_29 $$ sitePath = path.substring(i1 + 1)-->Line_40 $$ sitePath = sitePath.replace("/", separator)[ FD ]
Line_21 $$ sitePath = null-->Line_60 $$ channel.sendResponse(new BytesRestResponse(OK, guessMimeType(sitePath), data))[ FD ]
Line_21 $$ sitePath = null-->Line_35 $$ sitePath = sitePath.substring(1)[ FD ]
Line_18 $$ String sitePath-->Line_32 $$ sitePath = "index.html"[ FD ]
Line_11 $$ if (request.method() != RestRequest.Method.GET) -->Line_13 $$ return[ CD ]
Line_21 $$ sitePath = null-->Line_31 $$ if (sitePath.length() == 0) [ FD ]
Line_46 $$ BasicFileAttributes attributes = Files.readAttributes(file, BasicFileAttributes.class)-->Line_48 $$ if (!attributes.isDirectory()) [ FD ]
Line_35 $$ sitePath = sitePath.substring(1)-->Line_60 $$ channel.sendResponse(new BytesRestResponse(OK, guessMimeType(sitePath), data))[ FD ]
Line_32 $$ sitePath = "index.html"-->Line_34 $$ while (sitePath.length() > 0 && sitePath.charAt(0) == '/') [ FD ]
Line_29 $$ sitePath = path.substring(i1 + 1)-->Line_35 $$ sitePath = sitePath.substring(1)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_12 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ FD ]
Line_21 $$ sitePath = null-->Line_34 $$ while (sitePath.length() > 0 && sitePath.charAt(0) == '/') [ FD ]
Line_32 $$ sitePath = "index.html"-->Line_41 $$ Path file = siteFile.resolve(sitePath)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_11 $$ if (request.method() != RestRequest.Method.GET) [ CD ]
Line_19 $$ if (i1 == -1) -->Line_25 $$ channel.sendResponse(restResponse)[ CD ]
Line_35 $$ sitePath = sitePath.substring(1)-->Line_40 $$ sitePath = sitePath.replace("/", separator)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_25 $$ channel.sendResponse(restResponse)[ FD ]
Line_35 $$ sitePath = sitePath.substring(1)-->Line_41 $$ Path file = siteFile.resolve(sitePath)[ FD ]
Line_42 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !file.toAbsolutePath().normalize().startsWith(siteFile.toAbsolutePath().normalize())) -->Line_43 $$ channel.sendResponse(new BytesRestResponse(NOT_FOUND))[ CD ]
Line_18 $$ String sitePath-->Line_41 $$ Path file = siteFile.resolve(sitePath)[ FD ]
Line_3 $$ if (disableSites) -->Line_5 $$ return[ CD ]
Line_18 $$ String sitePath-->Line_60 $$ channel.sendResponse(new BytesRestResponse(OK, guessMimeType(sitePath), data))[ FD ]
Line_31 $$ if (sitePath.length() == 0) -->Line_34 $$ while (sitePath.length() > 0 && sitePath.charAt(0) == '/') [ CD ]
Line_21 $$ sitePath = null-->Line_32 $$ sitePath = "index.html"[ FD ]
Line_17 $$ String pluginName-->Line_20 $$ pluginName = path[ FD ]
Line_11 $$ if (request.method() != RestRequest.Method.GET) -->Line_12 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ CD ]
Line_15 $$ String path = request.rawPath().substring("/_plugin/".length())-->Line_20 $$ pluginName = path[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_4 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_7 $$ if (request.method() == RestRequest.Method.OPTIONS) [ CD ]
Line_40 $$ sitePath = sitePath.replace("/", separator)-->Line_60 $$ channel.sendResponse(new BytesRestResponse(OK, guessMimeType(sitePath), data))[ FD ]
Line_32 $$ sitePath = "index.html"-->Line_35 $$ sitePath = sitePath.substring(1)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_18 $$ String sitePath[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_40 $$ sitePath = sitePath.replace("/", separator)[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_16 $$ int i1 = path.indexOf('/')[ CD ]
Line_53 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !Files.isRegularFile(file)) -->Line_55 $$ return[ CD ]
Line_19 $$ if (i1 == -1) -->Line_24 $$ restResponse.addHeader("Location", redirectUrl)[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_49 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ FD ]
Line_19 $$ if (i1 == -1) -->Line_28 $$ pluginName = path.substring(0, i1)[ CD ]
Line_28 $$ pluginName = path.substring(0, i1)-->Line_38 $$ final Path siteFile = environment.pluginsFile().resolve(pluginName).resolve("_site")[ FD ]
Line_41 $$ Path file = siteFile.resolve(sitePath)-->Line_42 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !file.toAbsolutePath().normalize().startsWith(siteFile.toAbsolutePath().normalize())) [ FD ]
Line_34 $$ while (sitePath.length() > 0 && sitePath.charAt(0) == '/') -->Line_35 $$ sitePath = sitePath.substring(1)[ CD ]
Line_32 $$ sitePath = "index.html"-->Line_40 $$ sitePath = sitePath.replace("/", separator)[ FD ]
Line_46 $$ BasicFileAttributes attributes = Files.readAttributes(file, BasicFileAttributes.class)-->Line_47 $$ if (!attributes.isRegularFile()) [ FD ]
Line_19 $$ if (i1 == -1) -->Line_29 $$ sitePath = path.substring(i1 + 1)[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_8 $$ channel.sendResponse(new BytesRestResponse(OK))[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_41 $$ Path file = siteFile.resolve(sitePath)[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_60 $$ channel.sendResponse(new BytesRestResponse(OK, guessMimeType(sitePath), data))[ FD ]
Line_18 $$ String sitePath-->Line_21 $$ sitePath = null[ FD ]
Line_52 $$ file = file.resolve("index.html")-->Line_53 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !Files.isRegularFile(file)) [ FD ]
Line_38 $$ final Path siteFile = environment.pluginsFile().resolve(pluginName).resolve("_site")-->Line_41 $$ Path file = siteFile.resolve(sitePath)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_42 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !file.toAbsolutePath().normalize().startsWith(siteFile.toAbsolutePath().normalize())) [ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_15 $$ String path = request.rawPath().substring("/_plugin/".length())[ CD ]
Line_38 $$ final Path siteFile = environment.pluginsFile().resolve(pluginName).resolve("_site")-->Line_42 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !file.toAbsolutePath().normalize().startsWith(siteFile.toAbsolutePath().normalize())) [ FD ]
Line_19 $$ if (i1 == -1) -->Line_26 $$ return[ CD ]
Line_18 $$ String sitePath-->Line_29 $$ sitePath = path.substring(i1 + 1)[ FD ]
Line_20 $$ pluginName = path-->Line_38 $$ final Path siteFile = environment.pluginsFile().resolve(pluginName).resolve("_site")[ FD ]
Line_29 $$ sitePath = path.substring(i1 + 1)-->Line_60 $$ channel.sendResponse(new BytesRestResponse(OK, guessMimeType(sitePath), data))[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_62 $$ channel.sendResponse(new BytesRestResponse(INTERNAL_SERVER_ERROR))[ FD ]
Line_21 $$ sitePath = null-->Line_29 $$ sitePath = path.substring(i1 + 1)[ FD ]
Line_19 $$ if (i1 == -1) -->Line_20 $$ pluginName = path[ CD ]
Line_18 $$ String sitePath-->Line_40 $$ sitePath = sitePath.replace("/", separator)[ FD ]
Line_7 $$ if (request.method() == RestRequest.Method.OPTIONS) -->Line_9 $$ return[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_17 $$ String pluginName[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_39 $$ final String separator = siteFile.getFileSystem().getSeparator()[ CD ]
Line_48 $$ if (!attributes.isDirectory()) -->Line_50 $$ return[ CD ]
Line_53 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !Files.isRegularFile(file)) -->Line_54 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ CD ]
Line_21 $$ sitePath = null-->Line_40 $$ sitePath = sitePath.replace("/", separator)[ FD ]
Line_41 $$ Path file = siteFile.resolve(sitePath)-->Line_59 $$ byte[] data = Files.readAllBytes(file)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_54 $$ channel.sendResponse(new BytesRestResponse(FORBIDDEN))[ FD ]
Line_19 $$ if (i1 == -1) -->Line_22 $$ String redirectUrl = request.rawPath() + "/"[ CD ]
Line_19 $$ if (i1 == -1) -->Line_21 $$ sitePath = null[ CD ]
Line_18 $$ String sitePath-->Line_34 $$ while (sitePath.length() > 0 && sitePath.charAt(0) == '/') [ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_43 $$ channel.sendResponse(new BytesRestResponse(NOT_FOUND))[ FD ]
Line_47 $$ if (!attributes.isRegularFile()) -->Line_52 $$ file = file.resolve("index.html")[ CD ]
Line_19 $$ if (i1 == -1) -->Line_23 $$ BytesRestResponse restResponse = new BytesRestResponse(RestStatus.MOVED_PERMANENTLY, "text/html", "<head><meta http-equiv=\"refresh\" content=\"0; URL=" + redirectUrl + "\"></head>")[ CD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_31 $$ if (sitePath.length() == 0) [ CD ]
Line_41 $$ Path file = siteFile.resolve(sitePath)-->Line_46 $$ BasicFileAttributes attributes = Files.readAttributes(file, BasicFileAttributes.class)[ FD ]
Line_18 $$ String sitePath-->Line_35 $$ sitePath = sitePath.substring(1)[ FD ]
Line_35 $$ sitePath = sitePath.substring(1)-->Line_34 $$ while (sitePath.length() > 0 && sitePath.charAt(0) == '/') [ FD ]
Line_29 $$ sitePath = path.substring(i1 + 1)-->Line_34 $$ while (sitePath.length() > 0 && sitePath.charAt(0) == '/') [ FD ]
Line_22 $$ String redirectUrl = request.rawPath() + "/"-->Line_24 $$ restResponse.addHeader("Location", redirectUrl)[ FD ]
Line_2 $$ void handlePluginSite(HttpRequest request, HttpChannel channel) throws IOException -->Line_15 $$ String path = request.rawPath().substring("/_plugin/".length())[ FD ]
Line_16 $$ int i1 = path.indexOf('/')-->Line_28 $$ pluginName = path.substring(0, i1)[ FD ]
Line_31 $$ if (sitePath.length() == 0) -->Line_32 $$ sitePath = "index.html"[ CD ]
Line_39 $$ final String separator = siteFile.getFileSystem().getSeparator()-->Line_40 $$ sitePath = sitePath.replace("/", separator)[ FD ]
Line_47 $$ if (!attributes.isRegularFile()) -->Line_53 $$ if (!Files.exists(file) || FileSystemUtils.isHidden(file) || !Files.isRegularFile(file)) [ CD ]
