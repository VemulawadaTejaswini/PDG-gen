Line_26 $$ StringBuilder encoding = new StringBuilder()-->Line_31 $$ encoding.append(c)[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_25 $$ index++[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_27 $$ while (index < text.length()) [ CD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_10 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_25 $$ index++[ FD ]
Line_4 $$ int index = 0-->Line_28 $$ char c = text.charAt(index)[ FD ]
Line_4 $$ int index = 0-->Line_22 $$ char quote = text.charAt(index)[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_15 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_20 $$ if (index >= text.length())[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_10 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_22 $$ char quote = text.charAt(index)[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_22 $$ char quote = text.charAt(index)[ FD ]
Line_27 $$ while (index < text.length()) -->Line_28 $$ char c = text.charAt(index)[ CD ]
Line_4 $$ int index = 0-->Line_35 $$ index++[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_10 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_35 $$ index++[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_8 $$ index += XML_PROLOG_START.length()[ FD ]
Line_6 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))-->Line_7 $$ return null[ CD ]
Line_27 $$ while (index < text.length()) -->Line_31 $$ encoding.append(c)[ CD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_20 $$ if (index >= text.length())[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_18 $$ index++[ CD ]
Line_9 $$ while (index < text.length()) -->Line_10 $$ index = skipWhiteSpace(index, text)[ CD ]
Line_4 $$ int index = 0-->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_28 $$ char c = text.charAt(index)[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_4 $$ int index = 0-->Line_8 $$ index += XML_PROLOG_START.length()[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_15 $$ index = skipWhiteSpace(index, text)[ CD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ while (index < text.length()) [ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_9 $$ while (index < text.length()) [ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_22 $$ char quote = text.charAt(index)[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ while (index < text.length()) [ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ while (index < text.length()) [ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_23 $$ if (quote != '\'' && quote != '\"')[ CD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_28 $$ char c = text.charAt(index)[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_28 $$ char c = text.charAt(index)[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_25 $$ index++[ CD ]
Line_4 $$ int index = 0-->Line_27 $$ while (index < text.length()) [ FD ]
Line_14 $$ index += ENCODING.length()-->Line_20 $$ if (index >= text.length())[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_20 $$ if (index >= text.length())[ FD ]
Line_28 $$ char c = text.charAt(index)-->Line_31 $$ encoding.append(c)[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_35 $$ index++[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_25 $$ index++[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_27 $$ while (index < text.length()) [ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_35 $$ index++[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_18 $$ index++[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_19 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_18 $$ index++[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_14 $$ index += ENCODING.length()[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_19 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_29 $$ if (c == quote)-->Line_30 $$ return encoding.toString()[ CD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_25 $$ index++[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_18 $$ index++[ FD ]
Line_4 $$ int index = 0-->Line_5 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_22 $$ char quote = text.charAt(index)[ FD ]
Line_4 $$ int index = 0-->Line_25 $$ index++[ FD ]
Line_4 $$ int index = 0-->Line_10 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_9 $$ while (index < text.length()) [ FD ]
Line_9 $$ while (index < text.length()) -->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ CD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ CD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_32 $$ index++[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_32 $$ index++[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_15 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_25 $$ index++[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_35 $$ index++[ FD ]
Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))-->Line_12 $$ return null[ CD ]
Line_28 $$ char c = text.charAt(index)-->Line_29 $$ if (c == quote)[ FD ]
Line_4 $$ int index = 0-->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_18 $$ index++[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_35 $$ index++[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_20 $$ if (index >= text.length())[ CD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_19 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_10 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_18 $$ index++[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_25 $$ index++[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_9 $$ while (index < text.length()) [ FD ]
Line_4 $$ int index = 0-->Line_6 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_32 $$ index++[ FD ]
Line_9 $$ while (index < text.length()) -->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ CD ]
Line_14 $$ index += ENCODING.length()-->Line_18 $$ index++[ FD ]
Line_4 $$ int index = 0-->Line_32 $$ index++[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_11 $$ if (StringUtil.startsWith(text, index, XML_PROLOG_END))[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_9 $$ while (index < text.length()) [ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_9 $$ while (index < text.length()) -->Line_35 $$ index++[ CD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_32 $$ index++[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_4 $$ int index = 0-->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_32 $$ index++[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_28 $$ char c = text.charAt(index)[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_14 $$ index += ENCODING.length()[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_14 $$ index += ENCODING.length()[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_22 $$ char quote = text.charAt(index)[ FD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_22 $$ char quote = text.charAt(index)[ FD ]
Line_4 $$ int index = 0-->Line_15 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_4 $$ int index = 0-->Line_19 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_32 $$ index++[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_6 $$ if (!StringUtil.startsWith(text, index, XML_PROLOG_START))[ FD ]
Line_4 $$ int index = 0-->Line_14 $$ index += ENCODING.length()[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_9 $$ while (index < text.length()) [ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_10 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_35 $$ index++[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_15 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_22 $$ char quote = text.charAt(index)[ CD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_19 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_9 $$ while (index < text.length()) [ FD ]
Line_14 $$ index += ENCODING.length()-->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_26 $$ StringBuilder encoding = new StringBuilder()-->Line_30 $$ return encoding.toString()[ FD ]
Line_4 $$ int index = 0-->Line_20 $$ if (index >= text.length())[ FD ]
Line_14 $$ index += ENCODING.length()-->Line_15 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_20 $$ if (index >= text.length())[ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_27 $$ while (index < text.length()) [ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_27 $$ while (index < text.length()) [ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_19 $$ index = skipWhiteSpace(index, text)[ CD ]
Line_14 $$ index += ENCODING.length()-->Line_28 $$ char c = text.charAt(index)[ FD ]
Line_8 $$ index += XML_PROLOG_START.length()-->Line_15 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_20 $$ if (index >= text.length())[ FD ]
Line_27 $$ while (index < text.length()) -->Line_29 $$ if (c == quote)[ CD ]
Line_27 $$ while (index < text.length()) -->Line_32 $$ index++[ CD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_28 $$ char c = text.charAt(index)[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_14 $$ index += ENCODING.length()[ CD ]
Line_10 $$ index = skipWhiteSpace(index, text)-->Line_16 $$ if (index >= text.length() || text.charAt(index) != '=')[ FD ]
Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) -->Line_26 $$ StringBuilder encoding = new StringBuilder()[ CD ]
Line_22 $$ char quote = text.charAt(index)-->Line_29 $$ if (c == quote)[ FD ]
Line_4 $$ int index = 0-->Line_9 $$ while (index < text.length()) [ FD ]
Line_19 $$ index = skipWhiteSpace(index, text)-->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
Line_5 $$ index = skipWhiteSpace(index, text)-->Line_19 $$ index = skipWhiteSpace(index, text)[ FD ]
Line_4 $$ int index = 0-->Line_18 $$ index++[ FD ]
Line_15 $$ index = skipWhiteSpace(index, text)-->Line_13 $$ if (StringUtil.startsWith(text, index, ENCODING)) [ FD ]
