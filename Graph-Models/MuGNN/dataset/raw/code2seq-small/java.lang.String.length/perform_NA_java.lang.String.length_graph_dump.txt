Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_5 $$ final PsiModifierList modifierList = variable.getModifierList()[ FD ]
Line_10 $$ if (generateFinal) -->Line_11 $$ final PsiTypeElement typeElement = variable.getTypeElement()[ CD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_26 $$ PsiDocumentManager.getInstance(variable.getProject()).commitDocument(document)[ FD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_21 $$ if (lookup != null) [ CD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_16 $$ document.deleteString(textOffset + idx, textOffset + idx + modifier.length() + 1)[ FD ]
Line_3 $$ final Document document = myEditor.getDocument()-->Line_13 $$ document.insertString(typeOffset, modifier + " ")[ FD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_15 $$ final int idx = modifierList.getText().indexOf(modifier)[ FD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_8 $$ final Runnable runnable = new Runnable() [ CD ]
Line_10 $$ if (generateFinal) -->Line_12 $$ final int typeOffset = typeElement != null ? typeElement.getTextOffset() : textOffset[ CD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_5 $$ final PsiModifierList modifierList = variable.getModifierList()[ CD ]
Line_8 $$ final Runnable runnable = new Runnable() -->Line_22 $$ lookup.performGuardedChange(runnable)[ FD ]
Line_3 $$ final Document document = myEditor.getDocument()-->Line_16 $$ document.deleteString(textOffset + idx, textOffset + idx + modifier.length() + 1)[ FD ]
Line_10 $$ if (generateFinal) -->Line_16 $$ document.deleteString(textOffset + idx, textOffset + idx + modifier.length() + 1)[ CD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_4 $$ LOG.assertTrue(variable != null)[ CD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_6 $$ LOG.assertTrue(modifierList != null)[ CD ]
Line_3 $$ final Document document = myEditor.getDocument()-->Line_26 $$ PsiDocumentManager.getInstance(variable.getProject()).commitDocument(document)[ FD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_7 $$ final int textOffset = modifierList.getTextOffset()[ CD ]
Line_21 $$ if (lookup != null) -->Line_24 $$ runnable.run()[ CD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_3 $$ final Document document = myEditor.getDocument()[ CD ]
Line_11 $$ final PsiTypeElement typeElement = variable.getTypeElement()-->Line_12 $$ final int typeOffset = typeElement != null ? typeElement.getTextOffset() : textOffset[ FD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_11 $$ final PsiTypeElement typeElement = variable.getTypeElement()[ FD ]
Line_2 $$ public void perform(final boolean generateFinal, final String modifier, final PsiVariable variable) -->Line_26 $$ PsiDocumentManager.getInstance(variable.getProject()).commitDocument(document)[ CD ]
Line_5 $$ final PsiModifierList modifierList = variable.getModifierList()-->Line_15 $$ final int idx = modifierList.getText().indexOf(modifier)[ FD ]
Line_8 $$ final Runnable runnable = new Runnable() -->Line_10 $$ if (generateFinal) [ CD ]
Line_8 $$ final Runnable runnable = new Runnable() -->Line_24 $$ runnable.run()[ FD ]
Line_10 $$ if (generateFinal) -->Line_15 $$ final int idx = modifierList.getText().indexOf(modifier)[ CD ]
Line_5 $$ final PsiModifierList modifierList = variable.getModifierList()-->Line_7 $$ final int textOffset = modifierList.getTextOffset()[ FD ]
Line_21 $$ if (lookup != null) -->Line_22 $$ lookup.performGuardedChange(runnable)[ CD ]
Line_10 $$ if (generateFinal) -->Line_13 $$ document.insertString(typeOffset, modifier + " ")[ CD ]
Line_12 $$ final int typeOffset = typeElement != null ? typeElement.getTextOffset() : textOffset-->Line_13 $$ document.insertString(typeOffset, modifier + " ")[ FD ]
