Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_11 $$ List<VcsRef> refs = new ArrayList<VcsRef>()[ CD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_8 $$ Hash hash = HashImpl.build(strHash)[ CD ]
Line_3 $$ int firstSpaceIndex = input.indexOf(' ')-->Line_7 $$ String strHash = input.substring(0, firstSpaceIndex)[ FD ]
Line_9 $$ String refPaths = input.substring(firstSpaceIndex + 2, input.length() - 1)-->Line_10 $$ String[] longRefPaths = refPaths.split(", ")[ FD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_7 $$ String strHash = input.substring(0, firstSpaceIndex)[ CD ]
Line_14 $$ if (ref != null) -->Line_15 $$ refs.add(ref)[ CD ]
Line_3 $$ int firstSpaceIndex = input.indexOf(' ')-->Line_4 $$ if (firstSpaceIndex < 0) [ FD ]
Line_7 $$ String strHash = input.substring(0, firstSpaceIndex)-->Line_8 $$ Hash hash = HashImpl.build(strHash)[ FD ]
Line_11 $$ List<VcsRef> refs = new ArrayList<VcsRef>()-->Line_15 $$ refs.add(ref)[ FD ]
Line_4 $$ if (firstSpaceIndex < 0) -->Line_5 $$ return Collections.emptyList()[ CD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_4 $$ if (firstSpaceIndex < 0) [ CD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_3 $$ int firstSpaceIndex = input.indexOf(' ')[ CD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_10 $$ String[] longRefPaths = refPaths.split(", ")[ CD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_13 $$ VcsRef ref = createRef(hash, longRefPatch, root)[ FD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_18 $$ return refs[ CD ]
Line_12 $$ for (String longRefPatch : longRefPaths) -->Line_13 $$ VcsRef ref = createRef(hash, longRefPatch, root)[ FD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_9 $$ String refPaths = input.substring(firstSpaceIndex + 2, input.length() - 1)[ CD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_3 $$ int firstSpaceIndex = input.indexOf(' ')[ FD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_7 $$ String strHash = input.substring(0, firstSpaceIndex)[ FD ]
Line_13 $$ VcsRef ref = createRef(hash, longRefPatch, root)-->Line_14 $$ if (ref != null) [ FD ]
Line_13 $$ VcsRef ref = createRef(hash, longRefPatch, root)-->Line_15 $$ refs.add(ref)[ FD ]
Line_8 $$ Hash hash = HashImpl.build(strHash)-->Line_13 $$ VcsRef ref = createRef(hash, longRefPatch, root)[ FD ]
Line_2 $$ public List<VcsRef> parseCommitRefs(@NotNull String input, @NotNull VirtualFile root) -->Line_9 $$ String refPaths = input.substring(firstSpaceIndex + 2, input.length() - 1)[ FD ]
