Line_2 $$ public static File getFile(String resourceLocation) throws FileNotFoundException -->Line_3 $$ Assert.notNull(resourceLocation, "Resource location must not be null")[ CD ]
Line_2 $$ public static File getFile(String resourceLocation) throws FileNotFoundException -->Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) [ FD ]
Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) -->Line_9 $$ if (url == null) [ CD ]
Line_8 $$ URL url = (cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path))-->Line_9 $$ if (url == null) [ FD ]
Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) -->Line_12 $$ return getFile(url, description)[ CD ]
Line_5 $$ String path = resourceLocation.substring(CLASSPATH_URL_PREFIX.length())-->Line_8 $$ URL url = (cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path))[ FD ]
Line_2 $$ public static File getFile(String resourceLocation) throws FileNotFoundException -->Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) [ CD ]
Line_7 $$ ClassLoader cl = ClassUtils.getDefaultClassLoader()-->Line_8 $$ URL url = (cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path))[ FD ]
Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) -->Line_5 $$ String path = resourceLocation.substring(CLASSPATH_URL_PREFIX.length())[ CD ]
Line_8 $$ URL url = (cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path))-->Line_12 $$ return getFile(url, description)[ FD ]
Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) -->Line_8 $$ URL url = (cl != null ? cl.getResource(path) : ClassLoader.getSystemResource(path))[ CD ]
Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) -->Line_6 $$ String description = "class path resource [" + path + "]"[ CD ]
Line_2 $$ public static File getFile(String resourceLocation) throws FileNotFoundException -->Line_5 $$ String path = resourceLocation.substring(CLASSPATH_URL_PREFIX.length())[ FD ]
Line_2 $$ public static File getFile(String resourceLocation) throws FileNotFoundException -->Line_3 $$ Assert.notNull(resourceLocation, "Resource location must not be null")[ FD ]
Line_4 $$ if (resourceLocation.startsWith(CLASSPATH_URL_PREFIX)) -->Line_7 $$ ClassLoader cl = ClassUtils.getDefaultClassLoader()[ CD ]
Line_6 $$ String description = "class path resource [" + path + "]"-->Line_12 $$ return getFile(url, description)[ FD ]
