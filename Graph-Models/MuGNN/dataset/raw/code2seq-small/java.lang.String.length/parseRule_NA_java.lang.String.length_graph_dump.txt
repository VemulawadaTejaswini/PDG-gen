Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_14 $$ String ext = substitute(attributes.getValue("ext"))[ FD ]
Line_37 $$ String[] conf-->Line_41 $$ conf = confs.split(",")[ FD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_21 $$ PatternMatcher matcher = getPatternMatcher(attributes.getValue("matcher"))[ CD ]
Line_4 $$ if (name == null) -->Line_5 $$ name = substitute(attributes.getValue("artifact"))[ CD ]
Line_4 $$ if (name == null) -->Line_6 $$ if (name == null) [ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_10 $$ String type = substitute(attributes.getValue("type"))[ FD ]
Line_16 $$ if (state == State.DEP_ARTIFACT) -->Line_17 $$ String url = substitute(attributes.getValue("url"))[ CD ]
Line_36 $$ if (confs != null && confs.length() > 0) -->Line_38 $$ if ("*".equals(confs)) [ CD ]
Line_39 $$ conf = getMd().getConfigurationsNames()-->Line_41 $$ conf = confs.split(",")[ FD ]
Line_11 $$ if (type == null) -->Line_12 $$ type = "artifact".equals(tag) ? "jar" : PatternMatcher.ANY_EXPRESSION[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_4 $$ if (name == null) [ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_18 $$ Map<String, String> extraAttributes = getExtraAttributes(attributes, new String[] [ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_23 $$ String module = elvis(substitute(attributes.getValue("module")), PatternMatcher.ANY_EXPRESSION)[ FD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_32 $$ Map<String, String> extraAttributes = getExtraAttributes(attributes, new String[] [ CD ]
Line_36 $$ if (confs != null && confs.length() > 0) -->Line_37 $$ String[] conf[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_11 $$ if (type == null) [ CD ]
Line_6 $$ if (name == null) -->Line_7 $$ name = "artifact".equals(tag) ? dd.getDependencyId().getName() : PatternMatcher.ANY_EXPRESSION[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_16 $$ if (state == State.DEP_ARTIFACT) [ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_10 $$ String type = substitute(attributes.getValue("type"))[ CD ]
Line_35 $$ String confs = substitute(attributes.getValue("conf"))-->Line_36 $$ if (confs != null && confs.length() > 0) [ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_32 $$ Map<String, String> extraAttributes = getExtraAttributes(attributes, new String[] [ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_5 $$ name = substitute(attributes.getValue("artifact"))[ FD ]
Line_14 $$ String ext = substitute(attributes.getValue("ext"))-->Line_15 $$ ext = ext != null ? ext : type[ FD ]
Line_16 $$ if (state == State.DEP_ARTIFACT) -->Line_20 $$ if (state == State.ARTIFACT_INCLUDE) [ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_21 $$ PatternMatcher matcher = getPatternMatcher(attributes.getValue("matcher"))[ FD ]
Line_23 $$ String module = elvis(substitute(attributes.getValue("module")), PatternMatcher.ANY_EXPRESSION)-->Line_31 $$ ArtifactId aid = new ArtifactId(IvyUtil.createModuleId(org, module), name, type, ext)[ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_35 $$ String confs = substitute(attributes.getValue("conf"))[ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_36 $$ if (confs != null && confs.length() > 0) [ CD ]
Line_43 $$ for (String confName : conf) -->Line_44 $$ addConfiguration(confName.trim())[ FD ]
Line_3 $$ String name = substitute(attributes.getValue("name"))-->Line_5 $$ name = substitute(attributes.getValue("artifact"))[ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_7 $$ name = "artifact".equals(tag) ? dd.getDependencyId().getName() : PatternMatcher.ANY_EXPRESSION[ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_17 $$ String url = substitute(attributes.getValue("url"))[ FD ]
Line_35 $$ String confs = substitute(attributes.getValue("conf"))-->Line_38 $$ if ("*".equals(confs)) [ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_30 $$ String module = elvis(substitute(attributes.getValue("module")), PatternMatcher.ANY_EXPRESSION)[ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_35 $$ String confs = substitute(attributes.getValue("conf"))[ CD ]
Line_3 $$ String name = substitute(attributes.getValue("name"))-->Line_6 $$ if (name == null) [ FD ]
Line_38 $$ if ("*".equals(confs)) -->Line_39 $$ conf = getMd().getConfigurationsNames()[ CD ]
Line_10 $$ String type = substitute(attributes.getValue("type"))-->Line_12 $$ type = "artifact".equals(tag) ? "jar" : PatternMatcher.ANY_EXPRESSION[ FD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_22 $$ String org = elvis(substitute(attributes.getValue("org")), PatternMatcher.ANY_EXPRESSION)[ CD ]
Line_16 $$ if (state == State.DEP_ARTIFACT) -->Line_18 $$ Map<String, String> extraAttributes = getExtraAttributes(attributes, new String[] [ CD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_25 $$ Map<String, String> extraAttributes = getExtraAttributes(attributes, new String[] [ CD ]
Line_23 $$ String module = elvis(substitute(attributes.getValue("module")), PatternMatcher.ANY_EXPRESSION)-->Line_24 $$ ArtifactId aid = new ArtifactId(IvyUtil.createModuleId(org, module), name, type, ext)[ FD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_23 $$ String module = elvis(substitute(attributes.getValue("module")), PatternMatcher.ANY_EXPRESSION)[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_14 $$ String ext = substitute(attributes.getValue("ext"))[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_15 $$ ext = ext != null ? ext : type[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_28 $$ PatternMatcher matcher = getPatternMatcher(attributes.getValue("matcher"))[ FD ]
Line_22 $$ String org = elvis(substitute(attributes.getValue("org")), PatternMatcher.ANY_EXPRESSION)-->Line_24 $$ ArtifactId aid = new ArtifactId(IvyUtil.createModuleId(org, module), name, type, ext)[ FD ]
Line_38 $$ if ("*".equals(confs)) -->Line_41 $$ conf = confs.split(",")[ CD ]
Line_5 $$ name = substitute(attributes.getValue("artifact"))-->Line_7 $$ name = "artifact".equals(tag) ? dd.getDependencyId().getName() : PatternMatcher.ANY_EXPRESSION[ FD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_24 $$ ArtifactId aid = new ArtifactId(IvyUtil.createModuleId(org, module), name, type, ext)[ CD ]
Line_5 $$ name = substitute(attributes.getValue("artifact"))-->Line_6 $$ if (name == null) [ FD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_28 $$ PatternMatcher matcher = getPatternMatcher(attributes.getValue("matcher"))[ CD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_30 $$ String module = elvis(substitute(attributes.getValue("module")), PatternMatcher.ANY_EXPRESSION)[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_22 $$ String org = elvis(substitute(attributes.getValue("org")), PatternMatcher.ANY_EXPRESSION)[ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_25 $$ Map<String, String> extraAttributes = getExtraAttributes(attributes, new String[] [ FD ]
Line_3 $$ String name = substitute(attributes.getValue("name"))-->Line_7 $$ name = "artifact".equals(tag) ? dd.getDependencyId().getName() : PatternMatcher.ANY_EXPRESSION[ FD ]
Line_20 $$ if (state == State.ARTIFACT_INCLUDE) -->Line_29 $$ String org = elvis(substitute(attributes.getValue("org")), PatternMatcher.ANY_EXPRESSION)[ CD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_3 $$ String name = substitute(attributes.getValue("name"))[ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_3 $$ String name = substitute(attributes.getValue("name"))[ CD ]
Line_37 $$ String[] conf-->Line_39 $$ conf = getMd().getConfigurationsNames()[ FD ]
Line_3 $$ String name = substitute(attributes.getValue("name"))-->Line_4 $$ if (name == null) [ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_12 $$ type = "artifact".equals(tag) ? "jar" : PatternMatcher.ANY_EXPRESSION[ FD ]
Line_10 $$ String type = substitute(attributes.getValue("type"))-->Line_11 $$ if (type == null) [ FD ]
Line_2 $$ private void parseRule(String tag, Attributes attributes) throws MalformedURLException -->Line_29 $$ String org = elvis(substitute(attributes.getValue("org")), PatternMatcher.ANY_EXPRESSION)[ FD ]
Line_22 $$ String org = elvis(substitute(attributes.getValue("org")), PatternMatcher.ANY_EXPRESSION)-->Line_31 $$ ArtifactId aid = new ArtifactId(IvyUtil.createModuleId(org, module), name, type, ext)[ FD ]
Line_35 $$ String confs = substitute(attributes.getValue("conf"))-->Line_41 $$ conf = confs.split(",")[ FD ]
