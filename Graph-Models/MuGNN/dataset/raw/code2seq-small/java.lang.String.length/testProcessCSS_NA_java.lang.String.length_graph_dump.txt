Line_2 $$ public void testProcessCSS() throws Exception -->Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")[ CD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ CD ]
Line_25 $$ String code = ".a-->Line_36 $$ Assert.assertEquals(code.length() + 34, charBuffer.position())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_3 $$ StripFilter stripFilter = new StripFilter()[ CD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_17 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_7 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_31 $$ Assert.assertEquals(code.length() + 30, charBuffer.position())[ FD ]
Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_32 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style> \r\t\n")[ CD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_23 $$ Assert.assertEquals("style type=\"text/css\"></style>", stringWriter.toString())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_25 $$ String code = ".a-->Line_26 $$ String minifiedCode = MinifierUtil.minifyCss(code)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_16 $$ stringWriter = new StringWriter()[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_7 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_26 $$ String minifiedCode = MinifierUtil.minifyCss(code)[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_13 $$ Assert.assertEquals("style type=\"text/css\">", stringWriter.toString())[ FD ]
Line_28 $$ stringWriter = new StringWriter()-->Line_30 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style>", stringWriter.toString())[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")[ CD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_28 $$ stringWriter = new StringWriter()[ CD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_28 $$ stringWriter = new StringWriter()-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_18 $$ Assert.assertEquals("style type=\"text/css\"></style>", stringWriter.toString())[ CD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_24 $$ Assert.assertEquals(34, charBuffer.position())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_14 $$ Assert.assertEquals(22, charBuffer.position())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_36 $$ Assert.assertEquals(code.length() + 34, charBuffer.position())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_35 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style> ", stringWriter.toString())[ CD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_28 $$ stringWriter = new StringWriter()[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_21 $$ stringWriter = new StringWriter()[ FD ]
Line_25 $$ String code = ".a-->Line_31 $$ Assert.assertEquals(code.length() + 30, charBuffer.position())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_31 $$ Assert.assertEquals(code.length() + 30, charBuffer.position())[ CD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_32 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style> \r\t\n")[ FD ]
Line_32 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style> \r\t\n")-->Line_36 $$ Assert.assertEquals(code.length() + 34, charBuffer.position())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_13 $$ Assert.assertEquals("style type=\"text/css\">", stringWriter.toString())[ CD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_23 $$ Assert.assertEquals("style type=\"text/css\"></style>", stringWriter.toString())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_7 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")-->Line_32 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style> \r\t\n")[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_23 $$ Assert.assertEquals("style type=\"text/css\"></style>", stringWriter.toString())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")[ CD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_30 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style>", stringWriter.toString())[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_28 $$ stringWriter = new StringWriter()[ FD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_31 $$ Assert.assertEquals(code.length() + 30, charBuffer.position())[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_33 $$ stringWriter = new StringWriter()[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_30 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style>", stringWriter.toString())[ FD ]
Line_10 $$ LogRecord logRecord = logRecords.get(0)-->Line_11 $$ Assert.assertEquals("Missing </style>", logRecord.getMessage())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_30 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style>", stringWriter.toString())[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_36 $$ Assert.assertEquals(code.length() + 34, charBuffer.position())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_21 $$ stringWriter = new StringWriter()[ CD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_36 $$ Assert.assertEquals(code.length() + 34, charBuffer.position())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_23 $$ Assert.assertEquals("style type=\"text/css\"></style>", stringWriter.toString())[ CD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_32 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style> \r\t\n")[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_17 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_33 $$ stringWriter = new StringWriter()[ CD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_9 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_32 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style> \r\t\n")[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_35 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style> ", stringWriter.toString())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_19 $$ Assert.assertEquals(30, charBuffer.position())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_28 $$ stringWriter = new StringWriter()[ FD ]
Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")-->Line_31 $$ Assert.assertEquals(code.length() + 30, charBuffer.position())[ FD ]
Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_10 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_33 $$ stringWriter = new StringWriter()[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_6 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(StripFilter.class.getName(), Level.WARNING)) -->Line_8 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_25 $$ String code = ".a[ CD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_17 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_30 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style>", stringWriter.toString())[ CD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ CD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_24 $$ Assert.assertEquals(34, charBuffer.position())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_17 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_35 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style> ", stringWriter.toString())[ FD ]
Line_28 $$ stringWriter = new StringWriter()-->Line_33 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_16 $$ stringWriter = new StringWriter()[ CD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_19 $$ Assert.assertEquals(30, charBuffer.position())[ FD ]
Line_33 $$ stringWriter = new StringWriter()-->Line_35 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style> ", stringWriter.toString())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_24 $$ Assert.assertEquals(34, charBuffer.position())[ FD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_21 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_5 $$ StringWriter stringWriter = new StringWriter()[ CD ]
Line_28 $$ stringWriter = new StringWriter()-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")[ CD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_31 $$ Assert.assertEquals(code.length() + 30, charBuffer.position())[ FD ]
Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")-->Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_19 $$ Assert.assertEquals(30, charBuffer.position())[ CD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_15 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"></style>")[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_17 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_36 $$ Assert.assertEquals(code.length() + 34, charBuffer.position())[ CD ]
Line_32 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style> \r\t\n")-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")-->Line_36 $$ Assert.assertEquals(code.length() + 34, charBuffer.position())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_18 $$ Assert.assertEquals("style type=\"text/css\"></style>", stringWriter.toString())[ FD ]
Line_21 $$ stringWriter = new StringWriter()-->Line_29 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_14 $$ Assert.assertEquals(22, charBuffer.position())[ CD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.wrap("style type=\"text/css\">abc")-->Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")[ FD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_27 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\">" + code + "</style>")[ FD ]
Line_33 $$ stringWriter = new StringWriter()-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_33 $$ stringWriter = new StringWriter()[ FD ]
Line_20 $$ charBuffer = CharBuffer.wrap("style type=\"text/css\"> \r\t\n</style>")-->Line_34 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_22 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_35 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style> ", stringWriter.toString())[ FD ]
Line_28 $$ stringWriter = new StringWriter()-->Line_35 $$ Assert.assertEquals("style type=\"text/css\">" + minifiedCode + "</style> ", stringWriter.toString())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_24 $$ Assert.assertEquals(34, charBuffer.position())[ CD ]
Line_16 $$ stringWriter = new StringWriter()-->Line_18 $$ Assert.assertEquals("style type=\"text/css\"></style>", stringWriter.toString())[ FD ]
Line_2 $$ public void testProcessCSS() throws Exception -->Line_17 $$ stripFilter.processCSS(null, null, charBuffer, stringWriter)[ CD ]
