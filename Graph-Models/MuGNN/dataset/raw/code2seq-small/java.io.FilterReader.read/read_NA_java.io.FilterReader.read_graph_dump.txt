Line_32 $$ while (isHexChar((char) (x = peek()))) -->Line_35 $$ value |= Character.digit(x, 16)[ CD ]
Line_21 $$ int n = 0-->Line_40 $$ consume(n)[ FD ]
Line_35 $$ value |= Character.digit(x, 16)-->Line_43 $$ if (value <= 0xFFFF) [ FD ]
Line_2 $$ public int read() throws IOException -->Line_7 $$ if (i == -1) [ CD ]
Line_26 $$ if (n > 0 && x == '-->Line_29 $$ return i[ CD ]
Line_22 $$ int x-->Line_37 $$ if (x == '}') [ FD ]
Line_35 $$ value |= Character.digit(x, 16)-->Line_46 $$ myQueuedChars.add(Utf16.surrogate2(value))[ FD ]
Line_31 $$ int value = 0-->Line_47 $$ return Utf16.surrogate1(value)[ FD ]
Line_2 $$ public int read() throws IOException -->Line_6 $$ final int i = super.read()[ CD ]
Line_32 $$ while (isHexChar((char) (x = peek()))) -->Line_35 $$ value |= Character.digit(x, 16)[ FD ]
Line_23 $$ while ((x = peek()) == 'x') -->Line_35 $$ value |= Character.digit(x, 16)[ FD ]
Line_7 $$ if (i == -1) -->Line_8 $$ return -1[ CD ]
Line_22 $$ int x-->Line_35 $$ value |= Character.digit(x, 16)[ FD ]
Line_31 $$ int value = 0-->Line_46 $$ myQueuedChars.add(Utf16.surrogate2(value))[ FD ]
Line_22 $$ int x-->Line_23 $$ while ((x = peek()) == 'x') [ FD ]
Line_21 $$ int n = 0-->Line_24 $$ n++[ FD ]
Line_23 $$ while ((x = peek()) == 'x') -->Line_32 $$ while (isHexChar((char) (x = peek()))) [ FD ]
Line_34 $$ value <<= 4-->Line_35 $$ value |= Character.digit(x, 16)[ FD ]
Line_43 $$ if (value <= 0xFFFF) -->Line_44 $$ return value[ CD ]
Line_23 $$ while ((x = peek()) == 'x') -->Line_24 $$ n++[ CD ]
Line_32 $$ while (isHexChar((char) (x = peek()))) -->Line_34 $$ value <<= 4[ CD ]
Line_2 $$ public int read() throws IOException -->Line_49 $$ return i[ CD ]
Line_34 $$ value <<= 4-->Line_46 $$ myQueuedChars.add(Utf16.surrogate2(value))[ FD ]
Line_6 $$ final int i = super.read()-->Line_7 $$ if (i == -1) [ FD ]
Line_22 $$ int x-->Line_32 $$ while (isHexChar((char) (x = peek()))) [ FD ]
Line_21 $$ int n = 0-->Line_27 $$ n++[ FD ]
Line_31 $$ int value = 0-->Line_34 $$ value <<= 4[ FD ]
Line_21 $$ int n = 0-->Line_41 $$ myLengthMap.put(myOffset - 1, n)[ FD ]
Line_32 $$ while (isHexChar((char) (x = peek()))) -->Line_33 $$ n++[ CD ]
Line_34 $$ value <<= 4-->Line_43 $$ if (value <= 0xFFFF) [ FD ]
Line_21 $$ int n = 0-->Line_33 $$ n++[ FD ]
Line_31 $$ int value = 0-->Line_35 $$ value |= Character.digit(x, 16)[ FD ]
Line_35 $$ value |= Character.digit(x, 16)-->Line_47 $$ return Utf16.surrogate1(value)[ FD ]
Line_3 $$ if (myQueuedChars.size() > 0) -->Line_4 $$ return consume()[ CD ]
Line_21 $$ int n = 0-->Line_38 $$ n++[ FD ]
Line_14 $$ if (peek() == '\n') -->Line_15 $$ consume()[ CD ]
Line_26 $$ if (n > 0 && x == '-->Line_27 $$ n++[ CD ]
Line_31 $$ int value = 0-->Line_43 $$ if (value <= 0xFFFF) [ FD ]
Line_32 $$ while (isHexChar((char) (x = peek()))) -->Line_37 $$ if (x == '}') [ FD ]
Line_34 $$ value <<= 4-->Line_47 $$ return Utf16.surrogate1(value)[ FD ]
Line_14 $$ if (peek() == '\n') -->Line_16 $$ myLengthMap.put(myOffset - 1, 2)[ CD ]
Line_37 $$ if (x == '}') -->Line_38 $$ n++[ CD ]
Line_23 $$ while ((x = peek()) == 'x') -->Line_37 $$ if (x == '}') [ FD ]
Line_2 $$ public int read() throws IOException -->Line_3 $$ if (myQueuedChars.size() > 0) [ CD ]
