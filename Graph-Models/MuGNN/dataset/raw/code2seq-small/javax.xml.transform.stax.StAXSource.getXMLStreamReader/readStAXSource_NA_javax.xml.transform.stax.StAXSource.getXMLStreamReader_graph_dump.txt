Line_2 $$ public void readStAXSource() throws Exception -->Line_7 $$ assertTrue(streamReader.hasNext())[ CD ]
Line_5 $$ StAXSource result = (StAXSource) converter.read(StAXSource.class, inputMessage)-->Line_6 $$ XMLStreamReader streamReader = result.getXMLStreamReader()[ FD ]
Line_9 $$ String s = streamReader.getLocalName()-->Line_12 $$ assertEquals("Hello World", s)[ FD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_13 $$ streamReader.close()[ CD ]
Line_6 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_13 $$ streamReader.close()[ FD ]
Line_6 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_9 $$ String s = streamReader.getLocalName()[ FD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_5 $$ StAXSource result = (StAXSource) converter.read(StAXSource.class, inputMessage)[ CD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_10 $$ assertEquals("root", s)[ CD ]
Line_6 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_8 $$ streamReader.nextTag()[ FD ]
Line_9 $$ String s = streamReader.getLocalName()-->Line_11 $$ s = streamReader.getElementText()[ FD ]
Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))-->Line_4 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "xml"))[ FD ]
Line_9 $$ String s = streamReader.getLocalName()-->Line_10 $$ assertEquals("root", s)[ FD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_8 $$ streamReader.nextTag()[ CD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))[ CD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_11 $$ s = streamReader.getElementText()[ CD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_6 $$ XMLStreamReader streamReader = result.getXMLStreamReader()[ CD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_12 $$ assertEquals("Hello World", s)[ CD ]
Line_6 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_7 $$ assertTrue(streamReader.hasNext())[ FD ]
Line_11 $$ s = streamReader.getElementText()-->Line_12 $$ assertEquals("Hello World", s)[ FD ]
Line_3 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))-->Line_5 $$ StAXSource result = (StAXSource) converter.read(StAXSource.class, inputMessage)[ FD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_9 $$ String s = streamReader.getLocalName()[ CD ]
Line_6 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_11 $$ s = streamReader.getElementText()[ FD ]
Line_2 $$ public void readStAXSource() throws Exception -->Line_4 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "xml"))[ CD ]
