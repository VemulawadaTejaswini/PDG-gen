Line_7 $$ if (aClass.getAnnotation(annotationClass) != null)-->Line_8 $$ return true[ CD ]
Line_10 $$ Method method = ReflectionUtil.getDeclaredMethod(aClass, methodName)-->Line_11 $$ if (method != null) [ FD ]
Line_11 $$ if (method != null) -->Line_14 $$ methodChecked = true[ CD ]
Line_5 $$ boolean methodChecked = false-->Line_14 $$ methodChecked = true[ FD ]
Line_12 $$ if (method.getAnnotation(annotationClass) != null)-->Line_13 $$ return true[ CD ]
Line_10 $$ Method method = ReflectionUtil.getDeclaredMethod(aClass, methodName)-->Line_12 $$ if (method.getAnnotation(annotationClass) != null)[ FD ]
Line_2 $$ protected boolean annotatedWith(@NotNull Class annotationClass) -->Line_5 $$ boolean methodChecked = false[ CD ]
Line_11 $$ if (method != null) -->Line_12 $$ if (method.getAnnotation(annotationClass) != null)[ CD ]
Line_2 $$ protected boolean annotatedWith(@NotNull Class annotationClass) -->Line_19 $$ return false[ CD ]
Line_5 $$ boolean methodChecked = false-->Line_9 $$ if (!methodChecked) [ FD ]
Line_4 $$ String methodName = "test" + getTestName(false)-->Line_10 $$ Method method = ReflectionUtil.getDeclaredMethod(aClass, methodName)[ FD ]
Line_9 $$ if (!methodChecked) -->Line_11 $$ if (method != null) [ CD ]
Line_3 $$ Class<?> aClass = getClass()-->Line_7 $$ if (aClass.getAnnotation(annotationClass) != null)[ FD ]
Line_2 $$ protected boolean annotatedWith(@NotNull Class annotationClass) -->Line_3 $$ Class<?> aClass = getClass()[ CD ]
Line_3 $$ Class<?> aClass = getClass()-->Line_10 $$ Method method = ReflectionUtil.getDeclaredMethod(aClass, methodName)[ FD ]
Line_6 $$ while (aClass != null && aClass != Object.class) -->Line_7 $$ if (aClass.getAnnotation(annotationClass) != null)[ CD ]
Line_2 $$ protected boolean annotatedWith(@NotNull Class annotationClass) -->Line_7 $$ if (aClass.getAnnotation(annotationClass) != null)[ FD ]
Line_17 $$ aClass = aClass.getSuperclass()-->Line_7 $$ if (aClass.getAnnotation(annotationClass) != null)[ FD ]
Line_2 $$ protected boolean annotatedWith(@NotNull Class annotationClass) -->Line_6 $$ while (aClass != null && aClass != Object.class) [ CD ]
Line_9 $$ if (!methodChecked) -->Line_10 $$ Method method = ReflectionUtil.getDeclaredMethod(aClass, methodName)[ CD ]
Line_2 $$ protected boolean annotatedWith(@NotNull Class annotationClass) -->Line_12 $$ if (method.getAnnotation(annotationClass) != null)[ FD ]
Line_6 $$ while (aClass != null && aClass != Object.class) -->Line_9 $$ if (!methodChecked) [ CD ]
Line_6 $$ while (aClass != null && aClass != Object.class) -->Line_17 $$ aClass = aClass.getSuperclass()[ CD ]
Line_3 $$ Class<?> aClass = getClass()-->Line_17 $$ aClass = aClass.getSuperclass()[ FD ]
Line_2 $$ protected boolean annotatedWith(@NotNull Class annotationClass) -->Line_4 $$ String methodName = "test" + getTestName(false)[ CD ]
Line_14 $$ methodChecked = true-->Line_9 $$ if (!methodChecked) [ FD ]
Line_17 $$ aClass = aClass.getSuperclass()-->Line_10 $$ Method method = ReflectionUtil.getDeclaredMethod(aClass, methodName)[ FD ]
