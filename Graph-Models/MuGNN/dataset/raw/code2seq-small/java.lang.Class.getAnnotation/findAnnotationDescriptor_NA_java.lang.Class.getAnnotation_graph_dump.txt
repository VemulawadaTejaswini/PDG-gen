Line_11 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(composedAnnotation) && visited.add(composedAnnotation)) -->Line_13 $$ if (descriptor != null) [ CD ]
Line_7 $$ if (AnnotationUtils.isAnnotationDeclaredLocally(annotationType, clazz)) -->Line_8 $$ return new AnnotationDescriptor<T>(clazz, clazz.getAnnotation(annotationType))[ CD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_3 $$ Assert.notNull(annotationType, "Annotation type must not be null")[ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_18 $$ return findAnnotationDescriptor(clazz.getSuperclass(), visited, annotationType)[ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_8 $$ return new AnnotationDescriptor<T>(clazz, clazz.getAnnotation(annotationType))[ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_3 $$ Assert.notNull(annotationType, "Annotation type must not be null")[ CD ]
Line_4 $$ if (clazz == null || Object.class == clazz) -->Line_5 $$ return null[ CD ]
Line_10 $$ for (Annotation composedAnnotation : clazz.getDeclaredAnnotations()) -->Line_11 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(composedAnnotation) && visited.add(composedAnnotation)) [ FD ]
Line_10 $$ for (Annotation composedAnnotation : clazz.getDeclaredAnnotations()) -->Line_12 $$ AnnotationDescriptor<T> descriptor = findAnnotationDescriptor(composedAnnotation.annotationType(), visited, annotationType)[ FD ]
Line_12 $$ AnnotationDescriptor<T> descriptor = findAnnotationDescriptor(composedAnnotation.annotationType(), visited, annotationType)-->Line_13 $$ if (descriptor != null) [ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_7 $$ if (AnnotationUtils.isAnnotationDeclaredLocally(annotationType, clazz)) [ CD ]
Line_12 $$ AnnotationDescriptor<T> descriptor = findAnnotationDescriptor(composedAnnotation.annotationType(), visited, annotationType)-->Line_14 $$ return new AnnotationDescriptor<T>(clazz, descriptor.getDeclaringClass(), composedAnnotation, descriptor.getAnnotation())[ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_4 $$ if (clazz == null || Object.class == clazz) [ CD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_7 $$ if (AnnotationUtils.isAnnotationDeclaredLocally(annotationType, clazz)) [ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_10 $$ for (Annotation composedAnnotation : clazz.getDeclaredAnnotations()) [ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_18 $$ return findAnnotationDescriptor(clazz.getSuperclass(), visited, annotationType)[ CD ]
Line_13 $$ if (descriptor != null) -->Line_14 $$ return new AnnotationDescriptor<T>(clazz, descriptor.getDeclaringClass(), composedAnnotation, descriptor.getAnnotation())[ CD ]
Line_11 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(composedAnnotation) && visited.add(composedAnnotation)) -->Line_12 $$ AnnotationDescriptor<T> descriptor = findAnnotationDescriptor(composedAnnotation.annotationType(), visited, annotationType)[ CD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_11 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(composedAnnotation) && visited.add(composedAnnotation)) [ FD ]
Line_2 $$ private static <T extends Annotation> AnnotationDescriptor<T> findAnnotationDescriptor(Class<?> clazz, Set<Annotation> visited, Class<T> annotationType) -->Line_12 $$ AnnotationDescriptor<T> descriptor = findAnnotationDescriptor(composedAnnotation.annotationType(), visited, annotationType)[ FD ]
