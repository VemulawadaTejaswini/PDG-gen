Line_6 $$ CompatibilityVersion annotation = clazz.getAnnotation(CompatibilityVersion.class)-->Line_7 $$ if (annotation != null) [ FD ]
Line_7 $$ if (annotation != null) -->Line_8 $$ return Version.smallest(Version.fromId(annotation.version()), compatibilityVersion(clazz.getSuperclass()))[ CD ]
Line_2 $$ private Version compatibilityVersion(Class<?> clazz) -->Line_10 $$ return compatibilityVersion(clazz.getSuperclass())[ CD ]
Line_2 $$ private Version compatibilityVersion(Class<?> clazz) -->Line_6 $$ CompatibilityVersion annotation = clazz.getAnnotation(CompatibilityVersion.class)[ FD ]
Line_2 $$ private Version compatibilityVersion(Class<?> clazz) -->Line_6 $$ CompatibilityVersion annotation = clazz.getAnnotation(CompatibilityVersion.class)[ CD ]
Line_2 $$ private Version compatibilityVersion(Class<?> clazz) -->Line_8 $$ return Version.smallest(Version.fromId(annotation.version()), compatibilityVersion(clazz.getSuperclass()))[ FD ]
Line_3 $$ if (clazz == Object.class || clazz == ESIntegTestCase.class) -->Line_4 $$ return globalCompatibilityVersion()[ CD ]
Line_2 $$ private Version compatibilityVersion(Class<?> clazz) -->Line_10 $$ return compatibilityVersion(clazz.getSuperclass())[ FD ]
Line_2 $$ private Version compatibilityVersion(Class<?> clazz) -->Line_7 $$ if (annotation != null) [ CD ]
Line_2 $$ private Version compatibilityVersion(Class<?> clazz) -->Line_3 $$ if (clazz == Object.class || clazz == ESIntegTestCase.class) [ CD ]
Line_6 $$ CompatibilityVersion annotation = clazz.getAnnotation(CompatibilityVersion.class)-->Line_8 $$ return Version.smallest(Version.fromId(annotation.version()), compatibilityVersion(clazz.getSuperclass()))[ FD ]
