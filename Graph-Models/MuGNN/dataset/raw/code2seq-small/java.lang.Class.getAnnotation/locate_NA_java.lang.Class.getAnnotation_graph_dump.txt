Line_3 $$ Queue<Class<?>> queue = new LinkedList()-->Line_7 $$ queue.offer(targetClass)[ FD ]
Line_9 $$ Class<?> clazz = null-->Line_10 $$ while ((clazz = queue.poll()) != null) [ FD ]
Line_11 $$ T annotation = null-->Line_15 $$ if (annotation != null) [ FD ]
Line_10 $$ while ((clazz = queue.poll()) != null) -->Line_11 $$ T annotation = null[ CD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_9 $$ Class<?> clazz = null[ CD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_4 $$ if (targetClass == null) [ FD ]
Line_14 $$ annotation = specificMethod.getAnnotation(annotationClass)-->Line_15 $$ if (annotation != null) [ FD ]
Line_4 $$ if (targetClass == null) -->Line_7 $$ queue.offer(targetClass)[ CD ]
Line_4 $$ if (targetClass == null) -->Line_5 $$ queue.offer(method.getDeclaringClass())[ CD ]
Line_11 $$ T annotation = null-->Line_14 $$ annotation = specificMethod.getAnnotation(annotationClass)[ FD ]
Line_3 $$ Queue<Class<?>> queue = new LinkedList()-->Line_26 $$ _queueSuperTypes(queue, clazz)[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_22 $$ annotation = clazz.getAnnotation(annotationClass)[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_4 $$ if (targetClass == null) [ CD ]
Line_10 $$ while ((clazz = queue.poll()) != null) -->Line_21 $$ clazz.getMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_25 $$ if (annotation == null) -->Line_26 $$ _queueSuperTypes(queue, clazz)[ CD ]
Line_9 $$ Class<?> clazz = null-->Line_26 $$ _queueSuperTypes(queue, clazz)[ FD ]
Line_9 $$ Class<?> clazz = null-->Line_22 $$ annotation = clazz.getAnnotation(annotationClass)[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_10 $$ while ((clazz = queue.poll()) != null) [ CD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_21 $$ clazz.getMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_13 $$ Method specificMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_3 $$ Queue<Class<?>> queue = new LinkedList()[ CD ]
Line_11 $$ T annotation = null-->Line_22 $$ annotation = clazz.getAnnotation(annotationClass)[ FD ]
Line_13 $$ Method specificMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())-->Line_14 $$ annotation = specificMethod.getAnnotation(annotationClass)[ FD ]
Line_10 $$ while ((clazz = queue.poll()) != null) -->Line_26 $$ _queueSuperTypes(queue, clazz)[ FD ]
Line_3 $$ Queue<Class<?>> queue = new LinkedList()-->Line_5 $$ queue.offer(method.getDeclaringClass())[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_5 $$ queue.offer(method.getDeclaringClass())[ FD ]
Line_15 $$ if (annotation != null) -->Line_16 $$ return annotation[ CD ]
Line_14 $$ annotation = specificMethod.getAnnotation(annotationClass)-->Line_25 $$ if (annotation == null) [ FD ]
Line_11 $$ T annotation = null-->Line_25 $$ if (annotation == null) [ FD ]
Line_9 $$ Class<?> clazz = null-->Line_21 $$ clazz.getMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_9 $$ Class<?> clazz = null-->Line_13 $$ Method specificMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_3 $$ Queue<Class<?>> queue = new LinkedList()-->Line_10 $$ while ((clazz = queue.poll()) != null) [ FD ]
Line_10 $$ while ((clazz = queue.poll()) != null) -->Line_13 $$ Method specificMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_14 $$ annotation = specificMethod.getAnnotation(annotationClass)-->Line_22 $$ annotation = clazz.getAnnotation(annotationClass)[ FD ]
Line_10 $$ while ((clazz = queue.poll()) != null) -->Line_22 $$ annotation = clazz.getAnnotation(annotationClass)[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_14 $$ annotation = specificMethod.getAnnotation(annotationClass)[ FD ]
Line_22 $$ annotation = clazz.getAnnotation(annotationClass)-->Line_15 $$ if (annotation != null) [ FD ]
Line_22 $$ annotation = clazz.getAnnotation(annotationClass)-->Line_25 $$ if (annotation == null) [ FD ]
Line_25 $$ if (annotation == null) -->Line_28 $$ return annotation[ CD ]
Line_10 $$ while ((clazz = queue.poll()) != null) -->Line_25 $$ if (annotation == null) [ CD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_7 $$ queue.offer(targetClass)[ FD ]
Line_2 $$ public static <T extends Annotation> T locate(Method method, Class<?> targetClass, Class<T> annotationClass) -->Line_31 $$ return null[ CD ]
