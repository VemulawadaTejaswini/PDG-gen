Line_3 $$ AliasForWithDuplicateAttributeDeclaration annotation = AliasForWithDuplicateAttributeDeclarationClass.class.getAnnotation(AliasForWithDuplicateAttributeDeclaration.class)-->Line_9 $$ synthesizeAnnotation(annotation)[ FD ]
Line_2 $$ public void synthesizeAnnotationWhereAliasForHasDuplicateAttributeDeclaration() throws Exception -->Line_8 $$ exception.expectMessage(endsWith("but only one is permitted."))[ CD ]
Line_2 $$ public void synthesizeAnnotationWhereAliasForHasDuplicateAttributeDeclaration() throws Exception -->Line_9 $$ synthesizeAnnotation(annotation)[ CD ]
Line_2 $$ public void synthesizeAnnotationWhereAliasForHasDuplicateAttributeDeclaration() throws Exception -->Line_6 $$ exception.expectMessage(containsString(AliasForWithDuplicateAttributeDeclaration.class.getName()))[ CD ]
Line_2 $$ public void synthesizeAnnotationWhereAliasForHasDuplicateAttributeDeclaration() throws Exception -->Line_3 $$ AliasForWithDuplicateAttributeDeclaration annotation = AliasForWithDuplicateAttributeDeclarationClass.class.getAnnotation(AliasForWithDuplicateAttributeDeclaration.class)[ CD ]
Line_2 $$ public void synthesizeAnnotationWhereAliasForHasDuplicateAttributeDeclaration() throws Exception -->Line_4 $$ exception.expect(AnnotationConfigurationException.class)[ CD ]
Line_2 $$ public void synthesizeAnnotationWhereAliasForHasDuplicateAttributeDeclaration() throws Exception -->Line_5 $$ exception.expectMessage(startsWith("In @AliasFor declared on attribute [foo] in annotation"))[ CD ]
Line_2 $$ public void synthesizeAnnotationWhereAliasForHasDuplicateAttributeDeclaration() throws Exception -->Line_7 $$ exception.expectMessage(containsString("attribute 'attribute' and its alias 'value' are present with values of [baz] and [bar]"))[ CD ]
