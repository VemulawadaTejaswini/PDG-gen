Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_8 $$ Filter[] filters = attributes.getAnnotationArray("excludeFilters", Filter.class)[ CD ]
Line_5 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanClass.class, componentScan)-->Line_6 $$ assertNotNull(attributes)[ FD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_4 $$ assertNotNull(componentScan)[ CD ]
Line_8 $$ Filter[] filters = attributes.getAnnotationArray("excludeFilters", Filter.class)-->Line_10 $$ List<String> patterns = stream(filters).map(Filter::<>pattern).collect(toList())[ FD ]
Line_5 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanClass.class, componentScan)-->Line_8 $$ Filter[] filters = attributes.getAnnotationArray("excludeFilters", Filter.class)[ FD ]
Line_10 $$ List<String> patterns = stream(filters).map(Filter::<>pattern).collect(toList())-->Line_11 $$ assertEquals(asList("*Foo", "*Bar"), patterns)[ FD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_5 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanClass.class, componentScan)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_9 $$ assertNotNull(filters)[ CD ]
Line_8 $$ Filter[] filters = attributes.getAnnotationArray("excludeFilters", Filter.class)-->Line_9 $$ assertNotNull(filters)[ FD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_7 $$ assertEquals(ComponentScan.class, attributes.annotationType())[ CD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_10 $$ List<String> patterns = stream(filters).map(Filter::<>pattern).collect(toList())[ CD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_11 $$ assertEquals(asList("*Foo", "*Bar"), patterns)[ CD ]
Line_5 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanClass.class, componentScan)-->Line_7 $$ assertEquals(ComponentScan.class, attributes.annotationType())[ FD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_6 $$ assertNotNull(attributes)[ CD ]
Line_2 $$ public void getAnnotationAttributesWithNestedAnnotations() -->Line_3 $$ ComponentScan componentScan = ComponentScanClass.class.getAnnotation(ComponentScan.class)[ CD ]
Line_3 $$ ComponentScan componentScan = ComponentScanClass.class.getAnnotation(ComponentScan.class)-->Line_4 $$ assertNotNull(componentScan)[ FD ]
Line_3 $$ ComponentScan componentScan = ComponentScanClass.class.getAnnotation(ComponentScan.class)-->Line_5 $$ AnnotationAttributes attributes = getAnnotationAttributes(ComponentScanClass.class, componentScan)[ FD ]
