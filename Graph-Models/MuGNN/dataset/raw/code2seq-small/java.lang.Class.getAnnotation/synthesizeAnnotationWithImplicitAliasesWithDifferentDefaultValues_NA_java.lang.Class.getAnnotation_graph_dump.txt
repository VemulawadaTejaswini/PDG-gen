Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_3 $$ Class<?> clazz = ImplicitAliasesWithDifferentDefaultValuesContextConfigClass.class[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_8 $$ exception.expectMessage(startsWith("Misconfigured aliases:"))[ CD ]
Line_4 $$ Class<ImplicitAliasesWithDifferentDefaultValuesContextConfig> annotationType = ImplicitAliasesWithDifferentDefaultValuesContextConfig.class-->Line_5 $$ ImplicitAliasesWithDifferentDefaultValuesContextConfig config = clazz.getAnnotation(annotationType)[ FD ]
Line_4 $$ Class<ImplicitAliasesWithDifferentDefaultValuesContextConfig> annotationType = ImplicitAliasesWithDifferentDefaultValuesContextConfig.class-->Line_9 $$ exception.expectMessage(containsString("attribute [location1] in annotation [" + annotationType.getName() + "]"))[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_10 $$ exception.expectMessage(containsString("attribute [location2] in annotation [" + annotationType.getName() + "]"))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_6 $$ assertNotNull(config)[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_12 $$ synthesizeAnnotation(config, clazz)[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_4 $$ Class<ImplicitAliasesWithDifferentDefaultValuesContextConfig> annotationType = ImplicitAliasesWithDifferentDefaultValuesContextConfig.class[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_7 $$ exception.expect(AnnotationConfigurationException.class)[ CD ]
Line_5 $$ ImplicitAliasesWithDifferentDefaultValuesContextConfig config = clazz.getAnnotation(annotationType)-->Line_12 $$ synthesizeAnnotation(config, clazz)[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_5 $$ ImplicitAliasesWithDifferentDefaultValuesContextConfig config = clazz.getAnnotation(annotationType)[ CD ]
Line_4 $$ Class<ImplicitAliasesWithDifferentDefaultValuesContextConfig> annotationType = ImplicitAliasesWithDifferentDefaultValuesContextConfig.class-->Line_10 $$ exception.expectMessage(containsString("attribute [location2] in annotation [" + annotationType.getName() + "]"))[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_11 $$ exception.expectMessage(endsWith("must declare the same default value."))[ CD ]
Line_5 $$ ImplicitAliasesWithDifferentDefaultValuesContextConfig config = clazz.getAnnotation(annotationType)-->Line_6 $$ assertNotNull(config)[ FD ]
Line_3 $$ Class<?> clazz = ImplicitAliasesWithDifferentDefaultValuesContextConfigClass.class-->Line_5 $$ ImplicitAliasesWithDifferentDefaultValuesContextConfig config = clazz.getAnnotation(annotationType)[ FD ]
Line_3 $$ Class<?> clazz = ImplicitAliasesWithDifferentDefaultValuesContextConfigClass.class-->Line_12 $$ synthesizeAnnotation(config, clazz)[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDifferentDefaultValues() throws Exception -->Line_9 $$ exception.expectMessage(containsString("attribute [location1] in annotation [" + annotationType.getName() + "]"))[ CD ]
