Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_9 $$ exception.expect(AnnotationConfigurationException.class)[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_5 $$ ImplicitAliasesWithDuplicateValuesContextConfig config = clazz.getAnnotation(annotationType)[ CD ]
Line_3 $$ Class<?> clazz = ImplicitAliasesWithDuplicateValuesContextConfigClass.class-->Line_5 $$ ImplicitAliasesWithDuplicateValuesContextConfig config = clazz.getAnnotation(annotationType)[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_3 $$ Class<?> clazz = ImplicitAliasesWithDuplicateValuesContextConfigClass.class[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_18 $$ synthesizedConfig.location1()[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_17 $$ exception.expectMessage(endsWith("but only one is permitted."))[ CD ]
Line_4 $$ Class<ImplicitAliasesWithDuplicateValuesContextConfig> annotationType = ImplicitAliasesWithDuplicateValuesContextConfig.class-->Line_5 $$ ImplicitAliasesWithDuplicateValuesContextConfig config = clazz.getAnnotation(annotationType)[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_12 $$ exception.expectMessage(containsString("declared on class"))[ CD ]
Line_7 $$ ImplicitAliasesWithDuplicateValuesContextConfig synthesizedConfig = synthesizeAnnotation(config, clazz)-->Line_18 $$ synthesizedConfig.location1()[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_10 $$ exception.expectMessage(startsWith("In annotation"))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_6 $$ assertNotNull(config)[ CD ]
Line_3 $$ Class<?> clazz = ImplicitAliasesWithDuplicateValuesContextConfigClass.class-->Line_13 $$ exception.expectMessage(containsString(clazz.getName()))[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_4 $$ Class<ImplicitAliasesWithDuplicateValuesContextConfig> annotationType = ImplicitAliasesWithDuplicateValuesContextConfig.class[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_8 $$ assertNotNull(synthesizedConfig)[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_11 $$ exception.expectMessage(containsString(annotationType.getName()))[ CD ]
Line_3 $$ Class<?> clazz = ImplicitAliasesWithDuplicateValuesContextConfigClass.class-->Line_7 $$ ImplicitAliasesWithDuplicateValuesContextConfig synthesizedConfig = synthesizeAnnotation(config, clazz)[ FD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_15 $$ exception.expectMessage(either(containsString("attribute 'location1' and its alias 'location2'")).or(containsString("attribute 'location2' and its alias 'location1'")))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_13 $$ exception.expectMessage(containsString(clazz.getName()))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_14 $$ exception.expectMessage(containsString("and synthesized from"))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_16 $$ exception.expectMessage(either(containsString("are present with values of [1] and [2]")).or(containsString("are present with values of [2] and [1]")))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithImplicitAliasesWithDuplicateValues() throws Exception -->Line_7 $$ ImplicitAliasesWithDuplicateValuesContextConfig synthesizedConfig = synthesizeAnnotation(config, clazz)[ CD ]
Line_5 $$ ImplicitAliasesWithDuplicateValuesContextConfig config = clazz.getAnnotation(annotationType)-->Line_6 $$ assertNotNull(config)[ FD ]
Line_4 $$ Class<ImplicitAliasesWithDuplicateValuesContextConfig> annotationType = ImplicitAliasesWithDuplicateValuesContextConfig.class-->Line_11 $$ exception.expectMessage(containsString(annotationType.getName()))[ FD ]
Line_5 $$ ImplicitAliasesWithDuplicateValuesContextConfig config = clazz.getAnnotation(annotationType)-->Line_7 $$ ImplicitAliasesWithDuplicateValuesContextConfig synthesizedConfig = synthesizeAnnotation(config, clazz)[ FD ]
Line_7 $$ ImplicitAliasesWithDuplicateValuesContextConfig synthesizedConfig = synthesizeAnnotation(config, clazz)-->Line_8 $$ assertNotNull(synthesizedConfig)[ FD ]
