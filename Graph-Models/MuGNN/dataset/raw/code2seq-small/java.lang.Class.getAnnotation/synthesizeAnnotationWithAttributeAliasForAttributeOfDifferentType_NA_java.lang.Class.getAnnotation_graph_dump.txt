Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_8 $$ exception.expectMessage(containsString("attribute [bar]"))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_4 $$ exception.expect(AnnotationConfigurationException.class)[ CD ]
Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_6 $$ exception.expectMessage(containsString(AliasForAttributeOfDifferentType.class.getName()))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_3 $$ AliasForAttributeOfDifferentType annotation = AliasForAttributeOfDifferentTypeClass.class.getAnnotation(AliasForAttributeOfDifferentType.class)[ CD ]
Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_10 $$ synthesizeAnnotation(annotation)[ CD ]
Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_7 $$ exception.expectMessage(containsString("attribute [foo]"))[ CD ]
Line_3 $$ AliasForAttributeOfDifferentType annotation = AliasForAttributeOfDifferentTypeClass.class.getAnnotation(AliasForAttributeOfDifferentType.class)-->Line_10 $$ synthesizeAnnotation(annotation)[ FD ]
Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_5 $$ exception.expectMessage(startsWith("Misconfigured aliases"))[ CD ]
Line_2 $$ public void synthesizeAnnotationWithAttributeAliasForAttributeOfDifferentType() throws Exception -->Line_9 $$ exception.expectMessage(endsWith("must declare the same return type."))[ CD ]
