Line_29 $$ JLabel label1 = new MyLabel(" " + CodeInsightBundle.message("incremental.search.tooltip.prefix"))-->Line_32 $$ panel.add(label1, BorderLayout.WEST)[ FD ]
Line_19 $$ if (data.hint != null) -->Line_26 $$ data.hint.hide()[ CD ]
Line_3 $$ if (!ourActionsRegistered) -->Line_7 $$ actionManager.setActionHandler(IdeActions.ACTION_EDITOR_BACKSPACE, new BackSpaceHandler(actionManager.getActionHandler(IdeActions.ACTION_EDITOR_BACKSPACE)))[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_12 $$ FeatureUsageTracker.getInstance().triggerFeatureUsed("editing.incremental.search")[ CD ]
Line_22 $$ if ("".equals(hintData.label.getText())) -->Line_23 $$ label2 = new MyLabel(data.lastSearch)[ CD ]
Line_68 $$ caretListener[0] = new CaretAdapter() -->Line_73 $$ if (!hint.isVisible())[ CD ]
Line_3 $$ if (!ourActionsRegistered) -->Line_4 $$ EditorActionManager actionManager = EditorActionManager.getInstance()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_86 $$ hintData.searchStart = editor.getCaretModel().getOffset()[ FD ]
Line_68 $$ caretListener[0] = new CaretAdapter() -->Line_75 $$ hint.hide()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_37 $$ final Document document = editor.getDocument()[ FD ]
Line_68 $$ caretListener[0] = new CaretAdapter() -->Line_71 $$ if (data != null && data.ignoreCaretMove)[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_87 $$ hint.putUserData(SEARCH_DATA_IN_HINT_KEY, hintData)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_79 $$ editor.getCaretModel().addCaretListener(listener)[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_84 $$ HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, p, HintManagerImpl.HIDE_BY_ESCAPE | HintManagerImpl.HIDE_BY_TEXT_CHANGE, 0, false, new HintHint(editor, p).setAwtTooltip(false))[ FD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_47 $$ PerEditorSearchData editorData = editor.getUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY)[ CD ]
Line_15 $$ PerEditorSearchData data = editor.getUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY)-->Line_17 $$ data = new PerEditorSearchData()[ FD ]
Line_3 $$ if (!ourActionsRegistered) -->Line_9 $$ actionManager.setActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_DOWN, new DownHandler(actionManager.getActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_DOWN)))[ CD ]
Line_31 $$ JPanel panel = new MyPanel(label1)-->Line_33 $$ panel.add(label2, BorderLayout.CENTER)[ FD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_64 $$ hint.hide()[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_90 $$ if (hintData.label.getText().length() > 0) [ CD ]
Line_14 $$ JLabel label2 = new MyLabel(selection == null ? "" : selection)-->Line_33 $$ panel.add(label2, BorderLayout.CENTER)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_15 $$ PerEditorSearchData data = editor.getUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY)[ CD ]
Line_90 $$ if (hintData.label.getText().length() > 0) -->Line_91 $$ updatePosition(editor, hintData, true, false)[ CD ]
Line_20 $$ if (data.lastSearch != null) -->Line_22 $$ if ("".equals(hintData.label.getText())) [ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_73 $$ if (!hint.isVisible())[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_84 $$ HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, p, HintManagerImpl.HIDE_BY_ESCAPE | HintManagerImpl.HIDE_BY_TEXT_CHANGE, 0, false, new HintHint(editor, p).setAwtTooltip(false))[ FD ]
Line_50 $$ if (documentListener[0] != null) -->Line_51 $$ document.removeDocumentListener(documentListener[0])[ CD ]
Line_60 $$ documentListener[0] = new DocumentAdapter() -->Line_64 $$ hint.hide()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_84 $$ HintManagerImpl.getInstanceImpl().showEditorHint(hint, editor, p, HintManagerImpl.HIDE_BY_ESCAPE | HintManagerImpl.HIDE_BY_TEXT_CHANGE, 0, false, new HintHint(editor, p).setAwtTooltip(false))[ CD ]
Line_19 $$ if (data.hint != null) -->Line_20 $$ if (data.lastSearch != null) [ CD ]
Line_31 $$ JPanel panel = new MyPanel(label1)-->Line_32 $$ panel.add(label1, BorderLayout.WEST)[ FD ]
Line_54 $$ if (caretListener[0] != null) -->Line_55 $$ CaretListener listener = caretListener[0][ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_16 $$ if (data == null) [ CD ]
Line_21 $$ PerHintSearchData hintData = data.hint.getUserData(SEARCH_DATA_IN_HINT_KEY)-->Line_87 $$ hint.putUserData(SEARCH_DATA_IN_HINT_KEY, hintData)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_56 $$ editor.getCaretModel().removeCaretListener(listener)[ FD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_54 $$ if (caretListener[0] != null) [ CD ]
Line_44 $$ if (data.segmentHighlighter != null) -->Line_45 $$ data.segmentHighlighter.dispose()[ CD ]
Line_55 $$ CaretListener listener = caretListener[0]-->Line_56 $$ editor.getCaretModel().removeCaretListener(listener)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_37 $$ final Document document = editor.getDocument()[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_41 $$ LOG.assertTrue(data != null)[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_83 $$ Point p = SwingUtilities.convertPoint(component, x, y, component.getRootPane().getLayeredPane())[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_80 $$ final JComponent component = editor.getComponent()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_86 $$ hintData.searchStart = editor.getCaretModel().getOffset()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_14 $$ JLabel label2 = new MyLabel(selection == null ? "" : selection)[ CD ]
Line_15 $$ PerEditorSearchData data = editor.getUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY)-->Line_16 $$ if (data == null) [ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_13 $$ String selection = editor.getSelectionModel().getSelectedText()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_34 $$ panel.setBorder(BorderFactory.createLineBorder(Color.black))[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_62 $$ if (!hint.isVisible())[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_36 $$ final CaretListener[] caretListener = new CaretListener[1][ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_38 $$ final LightweightHint hint = new LightweightHint(panel) [ CD ]
Line_15 $$ PerEditorSearchData data = editor.getUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY)-->Line_89 $$ editor.putUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY, data)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_3 $$ if (!ourActionsRegistered) [ CD ]
Line_31 $$ JPanel panel = new MyPanel(label1)-->Line_34 $$ panel.setBorder(BorderFactory.createLineBorder(Color.black))[ FD ]
Line_62 $$ if (!hint.isVisible())-->Line_63 $$ return[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_89 $$ editor.putUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY, data)[ FD ]
Line_73 $$ if (!hint.isVisible())-->Line_74 $$ return[ CD ]
Line_3 $$ if (!ourActionsRegistered) -->Line_6 $$ typedAction.setupRawHandler(new MyTypedHandler(typedAction.getRawHandler()))[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_44 $$ if (data.segmentHighlighter != null) [ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_42 $$ String prefix = data.label.getText()[ CD ]
Line_21 $$ PerHintSearchData hintData = data.hint.getUserData(SEARCH_DATA_IN_HINT_KEY)-->Line_91 $$ updatePosition(editor, hintData, true, false)[ FD ]
Line_16 $$ if (data == null) -->Line_19 $$ if (data.hint != null) [ CD ]
Line_40 $$ PerHintSearchData data = getUserData(SEARCH_DATA_IN_HINT_KEY)-->Line_89 $$ editor.putUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY, data)[ FD ]
Line_4 $$ EditorActionManager actionManager = EditorActionManager.getInstance()-->Line_5 $$ TypedAction typedAction = actionManager.getTypedAction()[ FD ]
Line_37 $$ final Document document = editor.getDocument()-->Line_67 $$ document.addDocumentListener(documentListener[0])[ FD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_82 $$ int y = -hint.getComponent().getPreferredSize().height[ FD ]
Line_29 $$ JLabel label1 = new MyLabel(" " + CodeInsightBundle.message("incremental.search.tooltip.prefix"))-->Line_30 $$ label1.setFont(UIUtil.getLabelFont().deriveFont(Font.BOLD))[ FD ]
Line_3 $$ if (!ourActionsRegistered) -->Line_5 $$ TypedAction typedAction = actionManager.getTypedAction()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_67 $$ document.addDocumentListener(documentListener[0])[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_75 $$ hint.hide()[ FD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_50 $$ if (documentListener[0] != null) [ CD ]
Line_14 $$ JLabel label2 = new MyLabel(selection == null ? "" : selection)-->Line_23 $$ label2 = new MyLabel(data.lastSearch)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_32 $$ panel.add(label1, BorderLayout.WEST)[ CD ]
Line_54 $$ if (caretListener[0] != null) -->Line_56 $$ editor.getCaretModel().removeCaretListener(listener)[ CD ]
Line_23 $$ label2 = new MyLabel(data.lastSearch)-->Line_33 $$ panel.add(label2, BorderLayout.CENTER)[ FD ]
Line_4 $$ EditorActionManager actionManager = EditorActionManager.getInstance()-->Line_7 $$ actionManager.setActionHandler(IdeActions.ACTION_EDITOR_BACKSPACE, new BackSpaceHandler(actionManager.getActionHandler(IdeActions.ACTION_EDITOR_BACKSPACE)))[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_79 $$ editor.getCaretModel().addCaretListener(listener)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_82 $$ int y = -hint.getComponent().getPreferredSize().height[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_91 $$ updatePosition(editor, hintData, true, false)[ FD ]
Line_50 $$ if (documentListener[0] != null) -->Line_52 $$ documentListener[0] = null[ CD ]
Line_4 $$ EditorActionManager actionManager = EditorActionManager.getInstance()-->Line_8 $$ actionManager.setActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_UP, new UpHandler(actionManager.getActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_UP)))[ FD ]
Line_55 $$ CaretListener listener = caretListener[0]-->Line_79 $$ editor.getCaretModel().addCaretListener(listener)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_87 $$ hint.putUserData(SEARCH_DATA_IN_HINT_KEY, hintData)[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_31 $$ JPanel panel = new MyPanel(label1)[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_49 $$ editorData.lastSearch = prefix[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_89 $$ editor.putUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY, data)[ CD ]
Line_37 $$ final Document document = editor.getDocument()-->Line_51 $$ document.removeDocumentListener(documentListener[0])[ FD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_43 $$ super.hide()[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_13 $$ String selection = editor.getSelectionModel().getSelectedText()[ FD ]
Line_68 $$ caretListener[0] = new CaretAdapter() -->Line_70 $$ PerHintSearchData data = hint.getUserData(SEARCH_DATA_IN_HINT_KEY)[ CD ]
Line_16 $$ if (data == null) -->Line_17 $$ data = new PerEditorSearchData()[ CD ]
Line_42 $$ String prefix = data.label.getText()-->Line_49 $$ editorData.lastSearch = prefix[ FD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_70 $$ PerHintSearchData data = hint.getUserData(SEARCH_DATA_IN_HINT_KEY)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_15 $$ PerEditorSearchData data = editor.getUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_47 $$ PerEditorSearchData editorData = editor.getUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY)[ FD ]
Line_17 $$ data = new PerEditorSearchData()-->Line_89 $$ editor.putUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY, data)[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_30 $$ label1.setFont(UIUtil.getLabelFont().deriveFont(Font.BOLD))[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_33 $$ panel.add(label2, BorderLayout.CENTER)[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_40 $$ PerHintSearchData data = getUserData(SEARCH_DATA_IN_HINT_KEY)[ CD ]
Line_71 $$ if (data != null && data.ignoreCaretMove)-->Line_72 $$ return[ CD ]
Line_3 $$ if (!ourActionsRegistered) -->Line_8 $$ actionManager.setActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_UP, new UpHandler(actionManager.getActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_UP)))[ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_35 $$ final DocumentListener[] documentListener = new DocumentListener[1][ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_68 $$ caretListener[0] = new CaretAdapter() [ CD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_60 $$ documentListener[0] = new DocumentAdapter() [ CD ]
Line_70 $$ PerHintSearchData data = hint.getUserData(SEARCH_DATA_IN_HINT_KEY)-->Line_89 $$ editor.putUserData(SEARCH_DATA_IN_EDITOR_VIEW_KEY, data)[ FD ]
Line_60 $$ documentListener[0] = new DocumentAdapter() -->Line_62 $$ if (!hint.isVisible())[ CD ]
Line_4 $$ EditorActionManager actionManager = EditorActionManager.getInstance()-->Line_9 $$ actionManager.setActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_DOWN, new DownHandler(actionManager.getActionHandler(IdeActions.ACTION_EDITOR_MOVE_CARET_DOWN)))[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_29 $$ JLabel label1 = new MyLabel(" " + CodeInsightBundle.message("incremental.search.tooltip.prefix"))[ CD ]
Line_38 $$ final LightweightHint hint = new LightweightHint(panel) -->Line_48 $$ editorData.hint = null[ CD ]
Line_20 $$ if (data.lastSearch != null) -->Line_21 $$ PerHintSearchData hintData = data.hint.getUserData(SEARCH_DATA_IN_HINT_KEY)[ CD ]
Line_5 $$ TypedAction typedAction = actionManager.getTypedAction()-->Line_6 $$ typedAction.setupRawHandler(new MyTypedHandler(typedAction.getRawHandler()))[ FD ]
Line_2 $$ public void invoke(Project project, final Editor editor) -->Line_80 $$ final JComponent component = editor.getComponent()[ FD ]
