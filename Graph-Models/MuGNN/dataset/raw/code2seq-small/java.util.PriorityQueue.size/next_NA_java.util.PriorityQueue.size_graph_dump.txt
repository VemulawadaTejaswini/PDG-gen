Line_5 $$ if (minSegment != null) -->Line_7 $$ if (size() == 0) [ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_5 $$ if (minSegment != null) [ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_21 $$ return true[ CD ]
Line_3 $$ if (size() == 0)-->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_13 $$ long startPos = minSegment.in.getPosition()[ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_14 $$ rawKey = minSegment.getKey()[ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_15 $$ if (rawValue == null) [ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_18 $$ minSegment.nextRawValue(rawValue)[ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_20 $$ updateProgress(endPos - startPos)[ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_3 $$ if (size() == 0)[ CD ]
Line_5 $$ if (minSegment != null) -->Line_6 $$ adjustPriorityQueue(minSegment)[ CD ]
Line_2 $$ public boolean next() throws IOException -->Line_19 $$ long endPos = minSegment.in.getPosition()[ CD ]
Line_15 $$ if (rawValue == null) -->Line_16 $$ rawValue = minSegment.in.createValueBytes()[ CD ]
Line_7 $$ if (size() == 0) -->Line_9 $$ return false[ CD ]
