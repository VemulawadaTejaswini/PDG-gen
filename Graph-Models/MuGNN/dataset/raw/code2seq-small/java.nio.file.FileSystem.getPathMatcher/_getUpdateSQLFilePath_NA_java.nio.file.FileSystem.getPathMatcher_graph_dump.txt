Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_19 $$ Version version = _getUpdateSQLFileVersion(path)[ FD ]
Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_24 $$ return FileVisitResult.CONTINUE[ CD ]
Line_6 $$ final AtomicReference<Path> atomicReference = new AtomicReference()-->Line_14 $$ Path updateSQLFilePath = atomicReference.get()[ FD ]
Line_6 $$ final AtomicReference<Path> atomicReference = new AtomicReference()-->Line_27 $$ return atomicReference.get()[ FD ]
Line_15 $$ if (updateSQLFilePath == null) -->Line_20 $$ if (updateSQLFileVersion.compareTo(version) < 0) [ CD ]
Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_21 $$ atomicReference.set(path)[ FD ]
Line_2 $$ private Path _getUpdateSQLFilePath() throws IOException -->Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() [ CD ]
Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_15 $$ if (updateSQLFilePath == null) [ CD ]
Line_2 $$ private Path _getUpdateSQLFilePath() throws IOException -->Line_3 $$ if (!_osgiModule) [ CD ]
Line_14 $$ Path updateSQLFilePath = atomicReference.get()-->Line_18 $$ Version updateSQLFileVersion = _getUpdateSQLFileVersion(updateSQLFilePath)[ FD ]
Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_14 $$ Path updateSQLFilePath = atomicReference.get()[ CD ]
Line_2 $$ private Path _getUpdateSQLFilePath() throws IOException -->Line_6 $$ final AtomicReference<Path> atomicReference = new AtomicReference()[ CD ]
Line_15 $$ if (updateSQLFilePath == null) -->Line_19 $$ Version version = _getUpdateSQLFileVersion(path)[ CD ]
Line_8 $$ final PathMatcher pathMatcher = fileSystem.getPathMatcher("glob:**/dependencies/update.sql")-->Line_11 $$ if (!pathMatcher.matches(path)) [ FD ]
Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_11 $$ if (!pathMatcher.matches(path)) [ CD ]
Line_3 $$ if (!_osgiModule) -->Line_4 $$ return Paths.get(_sqlDirName, "update-6.2.0-7.0.0.sql")[ CD ]
Line_11 $$ if (!pathMatcher.matches(path)) -->Line_12 $$ return FileVisitResult.CONTINUE[ CD ]
Line_15 $$ if (updateSQLFilePath == null) -->Line_16 $$ atomicReference.set(path)[ CD ]
Line_2 $$ private Path _getUpdateSQLFilePath() throws IOException -->Line_7 $$ FileSystem fileSystem = FileSystems.getDefault()[ CD ]
Line_19 $$ Version version = _getUpdateSQLFileVersion(path)-->Line_20 $$ if (updateSQLFileVersion.compareTo(version) < 0) [ FD ]
Line_6 $$ final AtomicReference<Path> atomicReference = new AtomicReference()-->Line_16 $$ atomicReference.set(path)[ FD ]
Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_16 $$ atomicReference.set(path)[ FD ]
Line_2 $$ private Path _getUpdateSQLFilePath() throws IOException -->Line_27 $$ return atomicReference.get()[ CD ]
Line_9 $$ Files.walkFileTree(Paths.get(_resourcesDirName), new SimpleFileVisitor<Path>() -->Line_11 $$ if (!pathMatcher.matches(path)) [ FD ]
Line_18 $$ Version updateSQLFileVersion = _getUpdateSQLFileVersion(updateSQLFilePath)-->Line_20 $$ if (updateSQLFileVersion.compareTo(version) < 0) [ FD ]
Line_6 $$ final AtomicReference<Path> atomicReference = new AtomicReference()-->Line_21 $$ atomicReference.set(path)[ FD ]
Line_20 $$ if (updateSQLFileVersion.compareTo(version) < 0) -->Line_21 $$ atomicReference.set(path)[ CD ]
Line_2 $$ private Path _getUpdateSQLFilePath() throws IOException -->Line_8 $$ final PathMatcher pathMatcher = fileSystem.getPathMatcher("glob:**/dependencies/update.sql")[ CD ]
Line_14 $$ Path updateSQLFilePath = atomicReference.get()-->Line_15 $$ if (updateSQLFilePath == null) [ FD ]
Line_7 $$ FileSystem fileSystem = FileSystems.getDefault()-->Line_8 $$ final PathMatcher pathMatcher = fileSystem.getPathMatcher("glob:**/dependencies/update.sql")[ FD ]
Line_15 $$ if (updateSQLFilePath == null) -->Line_18 $$ Version updateSQLFileVersion = _getUpdateSQLFileVersion(updateSQLFilePath)[ CD ]
