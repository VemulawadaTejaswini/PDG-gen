Line_2 $$ private static boolean isNewLineBefore(CharSequence text, int offset) -->Line_3 $$ int i = offset - 1[ CD ]
Line_3 $$ int i = offset - 1-->Line_5 $$ if (text.charAt(i) == '\n') [ FD ]
Line_3 $$ int i = offset - 1-->Line_4 $$ while (i >= 0 && Character.isWhitespace(text.charAt(i))) [ FD ]
Line_3 $$ int i = offset - 1-->Line_8 $$ i--[ FD ]
Line_2 $$ private static boolean isNewLineBefore(CharSequence text, int offset) -->Line_4 $$ while (i >= 0 && Character.isWhitespace(text.charAt(i))) [ FD ]
Line_2 $$ private static boolean isNewLineBefore(CharSequence text, int offset) -->Line_4 $$ while (i >= 0 && Character.isWhitespace(text.charAt(i))) [ CD ]
Line_4 $$ while (i >= 0 && Character.isWhitespace(text.charAt(i))) -->Line_5 $$ if (text.charAt(i) == '\n') [ CD ]
Line_2 $$ private static boolean isNewLineBefore(CharSequence text, int offset) -->Line_10 $$ return i < 0[ CD ]
Line_5 $$ if (text.charAt(i) == '\n') -->Line_6 $$ return true[ CD ]
Line_2 $$ private static boolean isNewLineBefore(CharSequence text, int offset) -->Line_5 $$ if (text.charAt(i) == '\n') [ FD ]
Line_4 $$ while (i >= 0 && Character.isWhitespace(text.charAt(i))) -->Line_8 $$ i--[ CD ]
