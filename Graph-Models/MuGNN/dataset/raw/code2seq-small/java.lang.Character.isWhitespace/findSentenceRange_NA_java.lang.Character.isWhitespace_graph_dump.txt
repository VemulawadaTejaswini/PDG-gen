Line_3 $$ int sentenceStart = start-->Line_12 $$ while (sentenceStart < end && Character.isWhitespace(editorText.charAt(sentenceStart))) [ FD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_20 $$ if (isSentenceEnd(editorText, sentenceEnd - 1)) [ FD ]
Line_18 $$ if (sentenceEnd - end > 1000)-->Line_19 $$ return null[ CD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_15 $$ int sentenceEnd = Math.max(0, end - 1)[ CD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_7 $$ if (isSentenceEnd(editorText, sentenceStart - 1) || !isNatural(editorText.charAt(sentenceStart - 1))) [ FD ]
Line_3 $$ int sentenceStart = start-->Line_4 $$ while (sentenceStart > 0) [ FD ]
Line_4 $$ while (sentenceStart > 0) -->Line_10 $$ sentenceStart--[ CD ]
Line_3 $$ int sentenceStart = start-->Line_10 $$ sentenceStart--[ FD ]
Line_12 $$ while (sentenceStart < end && Character.isWhitespace(editorText.charAt(sentenceStart))) -->Line_13 $$ sentenceStart++[ CD ]
Line_16 $$ while (sentenceEnd < editorText.length()) -->Line_20 $$ if (isSentenceEnd(editorText, sentenceEnd - 1)) [ CD ]
Line_16 $$ while (sentenceEnd < editorText.length()) -->Line_18 $$ if (sentenceEnd - end > 1000)[ CD ]
Line_15 $$ int sentenceEnd = Math.max(0, end - 1)-->Line_17 $$ sentenceEnd++[ FD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_12 $$ while (sentenceStart < end && Character.isWhitespace(editorText.charAt(sentenceStart))) [ CD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_4 $$ while (sentenceStart > 0) [ CD ]
Line_5 $$ if (start - sentenceStart > 1000)-->Line_6 $$ return null[ CD ]
Line_16 $$ while (sentenceEnd < editorText.length()) -->Line_17 $$ sentenceEnd++[ CD ]
Line_3 $$ int sentenceStart = start-->Line_13 $$ sentenceStart++[ FD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_16 $$ while (sentenceEnd < editorText.length()) [ CD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_3 $$ int sentenceStart = start[ CD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_24 $$ return new TextRange(sentenceStart, sentenceEnd)[ CD ]
Line_4 $$ while (sentenceStart > 0) -->Line_5 $$ if (start - sentenceStart > 1000)[ CD ]
Line_4 $$ while (sentenceStart > 0) -->Line_7 $$ if (isSentenceEnd(editorText, sentenceStart - 1) || !isNatural(editorText.charAt(sentenceStart - 1))) [ CD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_12 $$ while (sentenceStart < end && Character.isWhitespace(editorText.charAt(sentenceStart))) [ FD ]
Line_15 $$ int sentenceEnd = Math.max(0, end - 1)-->Line_16 $$ while (sentenceEnd < editorText.length()) [ FD ]
Line_2 $$ private static TextRange findSentenceRange(String editorText, int start, int end) -->Line_16 $$ while (sentenceEnd < editorText.length()) [ FD ]
