Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_15 $$ String name = line.substring(0, idx)[ FD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_20 $$ return isMyTag[ CD ]
Line_7 $$ for (idx = 0; idx < line.length(); idx++) -->Line_9 $$ if (Character.isWhitespace(ch))[ CD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_7 $$ for (idx = 0; idx < line.length(); idx++) [ FD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_3 $$ boolean isMyTag = c instanceof JDMethodComment && (JDTag.THROWS.tagEqual(tag) || JDTag.EXCEPTION.tagEqual(tag))[ FD ]
Line_5 $$ JDMethodComment mc = (JDMethodComment) c-->Line_17 $$ mc.addThrow(name, desc)[ FD ]
Line_7 $$ for (idx = 0; idx < line.length(); idx++) -->Line_15 $$ String name = line.substring(0, idx)[ FD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_12 $$ if (idx == line.length()) [ FD ]
Line_12 $$ if (idx == line.length()) -->Line_17 $$ mc.addThrow(name, desc)[ CD ]
Line_7 $$ for (idx = 0; idx < line.length(); idx++) -->Line_12 $$ if (idx == line.length()) [ FD ]
Line_6 $$ int idx-->Line_7 $$ for (idx = 0; idx < line.length(); idx++) [ FD ]
Line_12 $$ if (idx == line.length()) -->Line_16 $$ String desc = line.substring(idx).trim()[ CD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_3 $$ boolean isMyTag = c instanceof JDMethodComment && (JDTag.THROWS.tagEqual(tag) || JDTag.EXCEPTION.tagEqual(tag))[ CD ]
Line_16 $$ String desc = line.substring(idx).trim()-->Line_17 $$ mc.addThrow(name, desc)[ FD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_8 $$ char ch = line.charAt(idx)[ FD ]
Line_4 $$ if (isMyTag) -->Line_6 $$ int idx[ CD ]
Line_7 $$ for (idx = 0; idx < line.length(); idx++) -->Line_8 $$ char ch = line.charAt(idx)[ CD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_4 $$ if (isMyTag) [ CD ]
Line_4 $$ if (isMyTag) -->Line_12 $$ if (idx == line.length()) [ CD ]
Line_15 $$ String name = line.substring(0, idx)-->Line_17 $$ mc.addThrow(name, desc)[ FD ]
Line_7 $$ for (idx = 0; idx < line.length(); idx++) -->Line_16 $$ String desc = line.substring(idx).trim()[ FD ]
Line_4 $$ if (isMyTag) -->Line_5 $$ JDMethodComment mc = (JDMethodComment) c[ CD ]
Line_12 $$ if (idx == line.length()) -->Line_13 $$ mc.addThrow(line, "")[ CD ]
Line_8 $$ char ch = line.charAt(idx)-->Line_9 $$ if (Character.isWhitespace(ch))[ FD ]
Line_5 $$ JDMethodComment mc = (JDMethodComment) c-->Line_13 $$ mc.addThrow(line, "")[ FD ]
Line_6 $$ int idx-->Line_8 $$ char ch = line.charAt(idx)[ FD ]
Line_6 $$ int idx-->Line_12 $$ if (idx == line.length()) [ FD ]
Line_4 $$ if (isMyTag) -->Line_7 $$ for (idx = 0; idx < line.length(); idx++) [ CD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_13 $$ mc.addThrow(line, "")[ FD ]
Line_12 $$ if (idx == line.length()) -->Line_15 $$ String name = line.substring(0, idx)[ CD ]
Line_6 $$ int idx-->Line_16 $$ String desc = line.substring(idx).trim()[ FD ]
Line_7 $$ for (idx = 0; idx < line.length(); idx++) -->Line_8 $$ char ch = line.charAt(idx)[ FD ]
Line_2 $$ boolean parse(String tag, String line, JDComment c) -->Line_16 $$ String desc = line.substring(idx).trim()[ FD ]
Line_6 $$ int idx-->Line_15 $$ String name = line.substring(0, idx)[ FD ]
