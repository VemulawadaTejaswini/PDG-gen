Line_24 $$ if (bounds.contains(center)) -->Line_25 $$ screen = bounds[ CD ]
Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)-->Line_13 $$ frame = WindowManager.getInstance().findVisibleFrame()[ FD ]
Line_19 $$ if (frame != null) -->Line_20 $$ final Point topLeft = frame.getLocation()[ CD ]
Line_16 $$ frame = WindowManager.getInstance().getFrame(project)-->Line_19 $$ if (frame != null) [ FD ]
Line_7 $$ JFrame frame = null-->Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_7 $$ JFrame frame = null[ CD ]
Line_4 $$ if (env.isHeadlessInstance()) -->Line_5 $$ return key + ".headless"[ CD ]
Line_16 $$ frame = WindowManager.getInstance().getFrame(project)-->Line_20 $$ final Point topLeft = frame.getLocation()[ FD ]
Line_25 $$ screen = bounds-->Line_31 $$ screen = gc.getBounds()[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_3 $$ GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment()[ CD ]
Line_8 $$ final Component owner = IdeFocusManager.findInstance().getFocusOwner()-->Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)[ FD ]
Line_13 $$ frame = WindowManager.getInstance().findVisibleFrame()-->Line_20 $$ final Point topLeft = frame.getLocation()[ FD ]
Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)-->Line_21 $$ Point center = new Point(topLeft.x + frame.getWidth() / 2, topLeft.y + frame.getHeight() / 2)[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_33 $$ String realKey = key + '.' + screen.x + '.' + screen.y + '.' + screen.width + '.' + screen.height[ CD ]
Line_3 $$ GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment()-->Line_30 $$ GraphicsConfiguration gc = env.getScreenDevices()[0].getDefaultConfiguration()[ FD ]
Line_7 $$ JFrame frame = null-->Line_16 $$ frame = WindowManager.getInstance().getFrame(project)[ FD ]
Line_19 $$ if (frame != null) -->Line_21 $$ Point center = new Point(topLeft.x + frame.getWidth() / 2, topLeft.y + frame.getHeight() / 2)[ CD ]
Line_7 $$ JFrame frame = null-->Line_19 $$ if (frame != null) [ FD ]
Line_22 $$ for (GraphicsDevice device : env.getScreenDevices()) -->Line_23 $$ Rectangle bounds = device.getDefaultConfiguration().getBounds()[ FD ]
Line_7 $$ JFrame frame = null-->Line_21 $$ Point center = new Point(topLeft.x + frame.getWidth() / 2, topLeft.y + frame.getHeight() / 2)[ FD ]
Line_18 $$ Rectangle screen = new Rectangle(0, 0, 0, 0)-->Line_25 $$ screen = bounds[ FD ]
Line_7 $$ JFrame frame = null-->Line_13 $$ frame = WindowManager.getInstance().findVisibleFrame()[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_12 $$ if (frame == null) [ CD ]
Line_13 $$ frame = WindowManager.getInstance().findVisibleFrame()-->Line_21 $$ Point center = new Point(topLeft.x + frame.getWidth() / 2, topLeft.y + frame.getHeight() / 2)[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_9 $$ if (owner != null) [ CD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_37 $$ return realKey[ CD ]
Line_21 $$ Point center = new Point(topLeft.x + frame.getWidth() / 2, topLeft.y + frame.getHeight() / 2)-->Line_24 $$ if (bounds.contains(center)) [ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_19 $$ if (frame != null) [ CD ]
Line_12 $$ if (frame == null) -->Line_13 $$ frame = WindowManager.getInstance().findVisibleFrame()[ CD ]
Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)-->Line_16 $$ frame = WindowManager.getInstance().getFrame(project)[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_8 $$ final Component owner = IdeFocusManager.findInstance().getFocusOwner()[ CD ]
Line_13 $$ frame = WindowManager.getInstance().findVisibleFrame()-->Line_16 $$ frame = WindowManager.getInstance().getFrame(project)[ FD ]
Line_23 $$ Rectangle bounds = device.getDefaultConfiguration().getBounds()-->Line_25 $$ screen = bounds[ FD ]
Line_13 $$ frame = WindowManager.getInstance().findVisibleFrame()-->Line_19 $$ if (frame != null) [ FD ]
Line_23 $$ Rectangle bounds = device.getDefaultConfiguration().getBounds()-->Line_24 $$ if (bounds.contains(center)) [ FD ]
Line_18 $$ Rectangle screen = new Rectangle(0, 0, 0, 0)-->Line_31 $$ screen = gc.getBounds()[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_4 $$ if (env.isHeadlessInstance()) [ CD ]
Line_30 $$ GraphicsConfiguration gc = env.getScreenDevices()[0].getDefaultConfiguration()-->Line_31 $$ screen = gc.getBounds()[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_16 $$ frame = WindowManager.getInstance().getFrame(project)[ FD ]
Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)-->Line_12 $$ if (frame == null) [ FD ]
Line_19 $$ if (frame != null) -->Line_31 $$ screen = gc.getBounds()[ CD ]
Line_7 $$ JFrame frame = null-->Line_12 $$ if (frame == null) [ FD ]
Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)-->Line_19 $$ if (frame != null) [ FD ]
Line_19 $$ if (frame != null) -->Line_30 $$ GraphicsConfiguration gc = env.getScreenDevices()[0].getDefaultConfiguration()[ CD ]
Line_9 $$ if (owner != null) -->Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)[ CD ]
Line_16 $$ frame = WindowManager.getInstance().getFrame(project)-->Line_21 $$ Point center = new Point(topLeft.x + frame.getWidth() / 2, topLeft.y + frame.getHeight() / 2)[ FD ]
Line_3 $$ GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment()-->Line_22 $$ for (GraphicsDevice device : env.getScreenDevices()) [ FD ]
Line_34 $$ if (JBUI.isHiDPI()) -->Line_35 $$ realKey += "@" + (((int) (96 * JBUI.scale(1f)))) + "dpi"[ CD ]
Line_8 $$ final Component owner = IdeFocusManager.findInstance().getFocusOwner()-->Line_9 $$ if (owner != null) [ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_15 $$ if (project != null && (frame == null || (frame instanceof IdeFrame && project != ((IdeFrame) frame).getProject()))) [ CD ]
Line_7 $$ JFrame frame = null-->Line_20 $$ final Point topLeft = frame.getLocation()[ FD ]
Line_15 $$ if (project != null && (frame == null || (frame instanceof IdeFrame && project != ((IdeFrame) frame).getProject()))) -->Line_16 $$ frame = WindowManager.getInstance().getFrame(project)[ CD ]
Line_33 $$ String realKey = key + '.' + screen.x + '.' + screen.y + '.' + screen.width + '.' + screen.height-->Line_35 $$ realKey += "@" + (((int) (96 * JBUI.scale(1f)))) + "dpi"[ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_34 $$ if (JBUI.isHiDPI()) [ CD ]
Line_3 $$ GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment()-->Line_4 $$ if (env.isHeadlessInstance()) [ FD ]
Line_2 $$ private static String realKey(String key, @Nullable Project project) -->Line_18 $$ Rectangle screen = new Rectangle(0, 0, 0, 0)[ CD ]
Line_10 $$ frame = UIUtil.getParentOfType(JFrame.class, owner)-->Line_20 $$ final Point topLeft = frame.getLocation()[ FD ]
