Line_6 $$ for (PropertyDescriptor propertyDescriptor : descrs) -->Line_8 $$ assertEquals(propertyDescriptor.getName() + " has unexpected type", keyDescr.getPropertyType(), propertyDescriptor.getPropertyType())[ FD ]
Line_7 $$ if (propertyDescriptor.getName().equals(keyDescr.getName())) -->Line_8 $$ assertEquals(propertyDescriptor.getName() + " has unexpected type", keyDescr.getPropertyType(), propertyDescriptor.getPropertyType())[ CD ]
Line_4 $$ PropertyDescriptor keyDescr = BeanUtils.getPropertyDescriptor(Bean.class, "value")-->Line_7 $$ if (propertyDescriptor.getName().equals(keyDescr.getName())) [ FD ]
Line_4 $$ PropertyDescriptor keyDescr = BeanUtils.getPropertyDescriptor(Bean.class, "value")-->Line_5 $$ assertEquals(String.class, keyDescr.getPropertyType())[ FD ]
Line_2 $$ public void testSPR6063() -->Line_3 $$ PropertyDescriptor[] descrs = BeanUtils.getPropertyDescriptors(Bean.class)[ CD ]
Line_4 $$ PropertyDescriptor keyDescr = BeanUtils.getPropertyDescriptor(Bean.class, "value")-->Line_8 $$ assertEquals(propertyDescriptor.getName() + " has unexpected type", keyDescr.getPropertyType(), propertyDescriptor.getPropertyType())[ FD ]
Line_6 $$ for (PropertyDescriptor propertyDescriptor : descrs) -->Line_7 $$ if (propertyDescriptor.getName().equals(keyDescr.getName())) [ FD ]
Line_2 $$ public void testSPR6063() -->Line_4 $$ PropertyDescriptor keyDescr = BeanUtils.getPropertyDescriptor(Bean.class, "value")[ CD ]
Line_2 $$ public void testSPR6063() -->Line_5 $$ assertEquals(String.class, keyDescr.getPropertyType())[ CD ]
