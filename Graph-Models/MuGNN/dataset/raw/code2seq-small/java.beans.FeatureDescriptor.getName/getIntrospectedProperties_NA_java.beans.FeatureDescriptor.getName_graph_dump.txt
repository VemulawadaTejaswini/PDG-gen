Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_118 $$ if (Color.class.equals(propertyType)) [ CD ]
Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)-->Line_132 $$ result.add(property)[ FD ]
Line_35 $$ final Properties properties = (myProject == null) ? new Properties() : Properties.getInstance()-->Line_138 $$ myClass2Properties.put(aClass, properties)[ FD ]
Line_34 $$ final IntrospectedProperty property-->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ FD ]
Line_49 $$ if (AbstractButton.class.isAssignableFrom(aClass)) -->Line_57 $$ if (JTabbedPane.class.isAssignableFrom(aClass)) [ CD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_132 $$ result.add(property)[ FD ]
Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_107 $$ if (name.equals(SwingProperties.LABEL_FOR)) [ CD ]
Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_34 $$ final IntrospectedProperty property-->Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)[ FD ]
Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)[ FD ]
Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)-->Line_132 $$ result.add(property)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_68 $$ if (double.class.equals(propertyType)) [ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)[ FD ]
Line_107 $$ if (name.equals(SwingProperties.LABEL_FOR)) -->Line_108 $$ filter = new Condition<RadComponent>() [ CD ]
Line_34 $$ final IntrospectedProperty property-->Line_132 $$ result.add(property)[ FD ]
Line_18 $$ for (final PropertyDescriptor descriptor : descriptors) -->Line_19 $$ Method readMethod = descriptor.getReadMethod()[ FD ]
Line_70 $$ if (float.class.equals(propertyType)) -->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ CD ]
Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_108 $$ filter = new Condition<RadComponent>() -->Line_112 $$ ComponentItem item = getItem(t.getComponentClassName())[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_124 $$ if (ListModel.class.isAssignableFrom(propertyType)) [ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_72 $$ if (long.class.equals(propertyType)) [ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_36 $$ if (int.class.equals(propertyType)) [ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ FD ]
Line_19 $$ Method readMethod = descriptor.getReadMethod()-->Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)[ FD ]
Line_65 $$ if (boolean.class.equals(propertyType)) -->Line_68 $$ if (double.class.equals(propertyType)) [ CD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_81 $$ if (String.class.equals(propertyType)) [ FD ]
Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)[ FD ]
Line_84 $$ if (Insets.class.equals(propertyType)) -->Line_87 $$ if (Dimension.class.equals(propertyType)) [ CD ]
Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_98 $$ if (JTabbedPane.class.isAssignableFrom(aClass) && name.equals(SwingProperties.SELECTED_COMPONENT)) [ CD ]
Line_124 $$ if (ListModel.class.isAssignableFrom(propertyType)) -->Line_126 $$ if (Enum.class.isAssignableFrom(propertyType)) [ CD ]
Line_20 $$ Method writeMethod = descriptor.getWriteMethod()-->Line_28 $$ delegeeClass.getMethod(writeMethod.getName(), writeMethod.getParameterTypes())[ FD ]
Line_57 $$ if (JTabbedPane.class.isAssignableFrom(aClass)) -->Line_58 $$ if (SwingProperties.SELECTED_INDEX.equals(name)) [ CD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_102 $$ if (JMenuBar.class.isAssignableFrom(propertyType) || JPopupMenu.class.isAssignableFrom(propertyType)) [ FD ]
Line_34 $$ final IntrospectedProperty property-->Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_72 $$ if (long.class.equals(propertyType)) -->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ CD ]
Line_34 $$ final IntrospectedProperty property-->Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_36 $$ if (int.class.equals(propertyType)) -->Line_65 $$ if (boolean.class.equals(propertyType)) [ CD ]
Line_34 $$ final IntrospectedProperty property-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_120 $$ if (Font.class.equals(propertyType)) -->Line_122 $$ if (Icon.class.equals(propertyType)) [ CD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_39 $$ if (enumPairs != null) -->Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)[ CD ]
Line_57 $$ if (JTabbedPane.class.isAssignableFrom(aClass)) -->Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ CD ]
Line_68 $$ if (double.class.equals(propertyType)) -->Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)[ CD ]
Line_57 $$ if (JTabbedPane.class.isAssignableFrom(aClass)) -->Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ CD ]
Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_132 $$ result.add(property)[ FD ]
Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_20 $$ Method writeMethod = descriptor.getWriteMethod()-->Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)[ FD ]
Line_108 $$ filter = new Condition<RadComponent>() -->Line_112 $$ ComponentItem item = getItem(t.getComponentClassName())[ CD ]
Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_94 $$ if (JSplitPane.class.isAssignableFrom(aClass) && (name.equals("leftComponent") || name.equals("rightComponent") || name.equals("topComponent") || name.equals("bottomComponent"))) [ CD ]
Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_14 $$ final ArrayList<IntrospectedProperty> result = new ArrayList<IntrospectedProperty>()-->Line_137 $$ final IntrospectedProperty[] properties = result.toArray(new IntrospectedProperty[result.size()])[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_126 $$ if (Enum.class.isAssignableFrom(propertyType)) [ FD ]
Line_39 $$ if (enumPairs != null) -->Line_41 $$ if (JLabel.class.isAssignableFrom(aClass)) [ CD ]
Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_102 $$ if (JMenuBar.class.isAssignableFrom(propertyType) || JPopupMenu.class.isAssignableFrom(propertyType)) [ CD ]
Line_81 $$ if (String.class.equals(propertyType)) -->Line_84 $$ if (Insets.class.equals(propertyType)) [ CD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_74 $$ if (byte.class.equals(propertyType)) -->Line_76 $$ if (short.class.equals(propertyType)) [ CD ]
Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_72 $$ if (long.class.equals(propertyType)) -->Line_74 $$ if (byte.class.equals(propertyType)) [ CD ]
Line_76 $$ if (short.class.equals(propertyType)) -->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ CD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_70 $$ if (float.class.equals(propertyType)) [ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_76 $$ if (short.class.equals(propertyType)) -->Line_78 $$ if (char.class.equals(propertyType)) [ CD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_132 $$ result.add(property)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_87 $$ if (Dimension.class.equals(propertyType)) [ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) [ FD ]
Line_108 $$ filter = new Condition<RadComponent>() -->Line_113 $$ return item != null && item.isCanAttachLabel()[ CD ]
Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_87 $$ if (Dimension.class.equals(propertyType)) -->Line_90 $$ if (Rectangle.class.equals(propertyType)) [ CD ]
Line_122 $$ if (Icon.class.equals(propertyType)) -->Line_124 $$ if (ListModel.class.isAssignableFrom(propertyType)) [ CD ]
Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)-->Line_132 $$ result.add(property)[ FD ]
Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)-->Line_132 $$ result.add(property)[ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_132 $$ result.add(property)[ FD ]
Line_118 $$ if (Color.class.equals(propertyType)) -->Line_120 $$ if (Font.class.equals(propertyType)) [ CD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_65 $$ if (boolean.class.equals(propertyType)) [ FD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_118 $$ if (Color.class.equals(propertyType)) [ FD ]
Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)-->Line_132 $$ result.add(property)[ FD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_112 $$ ComponentItem item = getItem(t.getComponentClassName())-->Line_113 $$ return item != null && item.isCanAttachLabel()[ FD ]
Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ FD ]
Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_78 $$ if (char.class.equals(propertyType)) [ FD ]
Line_19 $$ Method readMethod = descriptor.getReadMethod()-->Line_27 $$ delegeeClass.getMethod(readMethod.getName(), readMethod.getParameterTypes())[ FD ]
Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ FD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_41 $$ if (JLabel.class.isAssignableFrom(aClass)) -->Line_49 $$ if (AbstractButton.class.isAssignableFrom(aClass)) [ CD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_76 $$ if (short.class.equals(propertyType)) [ FD ]
Line_74 $$ if (byte.class.equals(propertyType)) -->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ CD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_34 $$ final IntrospectedProperty property-->Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_122 $$ if (Icon.class.equals(propertyType)) [ FD ]
Line_68 $$ if (double.class.equals(propertyType)) -->Line_70 $$ if (float.class.equals(propertyType)) [ CD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)[ FD ]
Line_18 $$ for (final PropertyDescriptor descriptor : descriptors) -->Line_21 $$ Class propertyType = descriptor.getPropertyType()[ FD ]
Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_36 $$ if (int.class.equals(propertyType)) -->Line_39 $$ if (enumPairs != null) [ CD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_120 $$ if (Font.class.equals(propertyType)) [ FD ]
Line_90 $$ if (Rectangle.class.equals(propertyType)) -->Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) [ CD ]
Line_34 $$ final IntrospectedProperty property-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_18 $$ for (final PropertyDescriptor descriptor : descriptors) -->Line_20 $$ Method writeMethod = descriptor.getWriteMethod()[ FD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_74 $$ if (byte.class.equals(propertyType)) [ FD ]
Line_106 $$ Condition<RadComponent> filter = null-->Line_108 $$ filter = new Condition<RadComponent>() [ FD ]
Line_55 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)-->Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)[ FD ]
Line_34 $$ final IntrospectedProperty property-->Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_14 $$ final ArrayList<IntrospectedProperty> result = new ArrayList<IntrospectedProperty>()-->Line_132 $$ result.add(property)[ FD ]
Line_16 $$ final BeanInfo beanInfo = Introspector.getBeanInfo(aClass)-->Line_17 $$ final PropertyDescriptor[] descriptors = beanInfo.getPropertyDescriptors()[ FD ]
Line_47 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)[ FD ]
Line_70 $$ if (float.class.equals(propertyType)) -->Line_72 $$ if (long.class.equals(propertyType)) [ CD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_90 $$ if (Rectangle.class.equals(propertyType)) [ FD ]
Line_78 $$ if (char.class.equals(propertyType)) -->Line_81 $$ if (String.class.equals(propertyType)) [ CD ]
Line_34 $$ final IntrospectedProperty property-->Line_40 $$ property = createIntEnumProperty(name, readMethod, writeMethod, enumPairs)[ FD ]
Line_61 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_73 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Long.class)[ FD ]
Line_93 $$ if (Component.class.isAssignableFrom(propertyType)) -->Line_106 $$ Condition<RadComponent> filter = null[ CD ]
Line_69 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Double.class)-->Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)[ FD ]
Line_71 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Float.class)-->Line_75 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Byte.class)[ FD ]
Line_63 $$ property = new IntroIntProperty(name, readMethod, writeMethod, storeAsClient)-->Line_132 $$ result.add(property)[ FD ]
Line_25 $$ boolean storeAsClient = false-->Line_30 $$ storeAsClient = true[ FD ]
Line_21 $$ Class propertyType = descriptor.getPropertyType()-->Line_84 $$ if (Insets.class.equals(propertyType)) [ FD ]
Line_34 $$ final IntrospectedProperty property-->Line_77 $$ property = new IntroPrimitiveTypeProperty(name, readMethod, writeMethod, storeAsClient, Short.class)[ FD ]
