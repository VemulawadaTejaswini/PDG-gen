Line_16 $$ for (int index = 1; index <= columnCount; index++) -->Line_22 $$ Object value = getColumnValue(rs, index, pd)[ FD ]
Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)-->Line_22 $$ Object value = getColumnValue(rs, index, pd)[ FD ]
Line_16 $$ for (int index = 1; index <= columnCount; index++) -->Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)[ CD ]
Line_11 $$ BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(mappedObject)-->Line_12 $$ initBeanWrapper(bw)[ FD ]
Line_16 $$ for (int index = 1; index <= columnCount; index++) -->Line_17 $$ String column = JdbcUtils.lookupColumnName(rsmd, index)[ CD ]
Line_23 $$ if (rowNumber == 0 && logger.isDebugEnabled()) -->Line_24 $$ logger.debug("Mapping column '" + column + "' to property '" + pd.getName() + "' of type [" + ClassUtils.getQualifiedName(pd.getPropertyType()) + "]")[ CD ]
Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)-->Line_38 $$ populatedProperties.add(pd.getName())[ FD ]
Line_15 $$ Set<String> populatedProperties = (isCheckFullyPopulated() ? new HashSet<String>() : null)-->Line_50 $$ if (populatedProperties != null && !populatedProperties.equals(this.mappedProperties)) [ FD ]
Line_15 $$ Set<String> populatedProperties = (isCheckFullyPopulated() ? new HashSet<String>() : null)-->Line_38 $$ populatedProperties.add(pd.getName())[ FD ]
Line_16 $$ for (int index = 1; index <= columnCount; index++) -->Line_20 $$ if (pd != null) [ CD ]
Line_37 $$ if (populatedProperties != null) -->Line_38 $$ populatedProperties.add(pd.getName())[ CD ]
Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)-->Line_24 $$ logger.debug("Mapping column '" + column + "' to property '" + pd.getName() + "' of type [" + ClassUtils.getQualifiedName(pd.getPropertyType()) + "]")[ FD ]
Line_29 $$ if (value == null && this.primitivesDefaultedForNullValue) -->Line_30 $$ if (logger.isDebugEnabled()) [ CD ]
Line_30 $$ if (logger.isDebugEnabled()) -->Line_31 $$ logger.debug("Intercepted TypeMismatchException for row " + rowNumber + " and column '" + column + "' with null value when setting property '" + pd.getName() + "' of type [" + ClassUtils.getQualifiedName(pd.getPropertyType()) + "] on object: " + mappedObject, ex)[ CD ]
Line_17 $$ String column = JdbcUtils.lookupColumnName(rsmd, index)-->Line_18 $$ String field = lowerCaseName(column.replaceAll(" ", ""))[ FD ]
Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)-->Line_41 $$ throw new DataRetrievalFailureException("Unable to map column '" + column + "' to property '" + pd.getName() + "'", ex)[ FD ]
Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)-->Line_31 $$ logger.debug("Intercepted TypeMismatchException for row " + rowNumber + " and column '" + column + "' with null value when setting property '" + pd.getName() + "' of type [" + ClassUtils.getQualifiedName(pd.getPropertyType()) + "] on object: " + mappedObject, ex)[ FD ]
Line_22 $$ Object value = getColumnValue(rs, index, pd)-->Line_27 $$ bw.setPropertyValue(pd.getName(), value)[ FD ]
Line_16 $$ for (int index = 1; index <= columnCount; index++) -->Line_18 $$ String field = lowerCaseName(column.replaceAll(" ", ""))[ CD ]
Line_11 $$ BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(mappedObject)-->Line_27 $$ bw.setPropertyValue(pd.getName(), value)[ FD ]
Line_18 $$ String field = lowerCaseName(column.replaceAll(" ", ""))-->Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)[ FD ]
Line_13 $$ ResultSetMetaData rsmd = rs.getMetaData()-->Line_14 $$ int columnCount = rsmd.getColumnCount()[ FD ]
Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)-->Line_20 $$ if (pd != null) [ FD ]
Line_14 $$ int columnCount = rsmd.getColumnCount()-->Line_16 $$ for (int index = 1; index <= columnCount; index++) [ FD ]
Line_16 $$ for (int index = 1; index <= columnCount; index++) -->Line_17 $$ String column = JdbcUtils.lookupColumnName(rsmd, index)[ FD ]
Line_19 $$ PropertyDescriptor pd = this.mappedFields.get(field)-->Line_27 $$ bw.setPropertyValue(pd.getName(), value)[ FD ]
Line_13 $$ ResultSetMetaData rsmd = rs.getMetaData()-->Line_17 $$ String column = JdbcUtils.lookupColumnName(rsmd, index)[ FD ]
Line_15 $$ Set<String> populatedProperties = (isCheckFullyPopulated() ? new HashSet<String>() : null)-->Line_37 $$ if (populatedProperties != null) [ FD ]
Line_10 $$ T mappedObject = BeanUtils.instantiate(this.mappedClass)-->Line_11 $$ BeanWrapper bw = PropertyAccessorFactory.forBeanPropertyAccess(mappedObject)[ FD ]
