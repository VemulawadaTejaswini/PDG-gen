Line_11 $$ List<String> candidates = new ArrayList<String>()-->Line_16 $$ candidates.add(possibleAlternative)[ FD ]
Line_12 $$ for (PropertyDescriptor pd : propertyDescriptors) -->Line_13 $$ if (pd.getWriteMethod() != null) [ FD ]
Line_15 $$ if (calculateStringDistance(propertyName, possibleAlternative) <= maxDistance) -->Line_16 $$ candidates.add(possibleAlternative)[ CD ]
Line_14 $$ String possibleAlternative = pd.getName()-->Line_15 $$ if (calculateStringDistance(propertyName, possibleAlternative) <= maxDistance) [ FD ]
Line_13 $$ if (pd.getWriteMethod() != null) -->Line_15 $$ if (calculateStringDistance(propertyName, possibleAlternative) <= maxDistance) [ CD ]
Line_12 $$ for (PropertyDescriptor pd : propertyDescriptors) -->Line_14 $$ String possibleAlternative = pd.getName()[ FD ]
Line_13 $$ if (pd.getWriteMethod() != null) -->Line_14 $$ String possibleAlternative = pd.getName()[ CD ]
Line_14 $$ String possibleAlternative = pd.getName()-->Line_16 $$ candidates.add(possibleAlternative)[ FD ]
Line_11 $$ List<String> candidates = new ArrayList<String>()-->Line_20 $$ Collections.sort(candidates)[ FD ]
Line_11 $$ List<String> candidates = new ArrayList<String>()-->Line_21 $$ return StringUtils.toStringArray(candidates)[ FD ]
