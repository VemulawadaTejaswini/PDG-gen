Line_19 $$ ApplicationId appId = ApplicationId.newInstance(12345, 1)-->Line_20 $$ LOG.info(appId.toString())[ FD ]
Line_26 $$ ShuffleHandler shuffleHandler = new ShuffleHandler() -->Line_40 $$ shuffleHandler.init(conf)[ FD ]
Line_21 $$ String appAttemptId = "attempt_12345_1_m_1_0"-->Line_25 $$ createShuffleHandlerFiles(absLogDir, user, appId.toString(), appAttemptId, conf, fileMap)[ FD ]
Line_24 $$ List<File> fileMap = new ArrayList<File>()-->Line_64 $$ String message = "Owner '" + owner + "' for path " + fileMap.get(0).getAbsolutePath() + " did not match expected owner '" + user + "'"[ FD ]
Line_12 $$ Configuration conf = new Configuration()-->Line_14 $$ conf.setInt(ShuffleHandler.MAX_SHUFFLE_CONNECTIONS, 3)[ FD ]
Line_26 $$ ShuffleHandler shuffleHandler = new ShuffleHandler() -->Line_67 $$ shuffleHandler.stop()[ FD ]
Line_12 $$ Configuration conf = new Configuration()-->Line_40 $$ shuffleHandler.init(conf)[ FD ]
Line_26 $$ ShuffleHandler shuffleHandler = new ShuffleHandler() -->Line_48 $$ URL url = new URL("http://127.0.0.1:" + shuffleHandler.getConfig().get(ShuffleHandler.SHUFFLE_PORT_CONFIG_KEY) + "/mapOutput?job=job_12345_0001&reduce=" + reducerId + "&map=attempt_12345_1_m_1_0")[ FD ]
Line_24 $$ List<File> fileMap = new ArrayList<File>()-->Line_25 $$ createShuffleHandlerFiles(absLogDir, user, appId.toString(), appAttemptId, conf, fileMap)[ FD ]
Line_12 $$ Configuration conf = new Configuration()-->Line_13 $$ conf.setInt(ShuffleHandler.SHUFFLE_PORT_CONFIG_KEY, 0)[ FD ]
Line_26 $$ ShuffleHandler shuffleHandler = new ShuffleHandler() -->Line_47 $$ shuffleHandler.initializeApplication(new ApplicationInitializationContext(user, appId, ByteBuffer.wrap(outputBuffer.getData(), 0, outputBuffer.getLength())))[ FD ]
Line_26 $$ ShuffleHandler shuffleHandler = new ShuffleHandler() -->Line_42 $$ shuffleHandler.start()[ FD ]
Line_12 $$ Configuration conf = new Configuration()-->Line_16 $$ UserGroupInformation.setConfiguration(conf)[ FD ]
Line_17 $$ File absLogDir = new File("target", TestShuffleHandler.class.getSimpleName() + "LocDir").getAbsoluteFile()-->Line_18 $$ conf.set(YarnConfiguration.NM_LOCAL_DIRS, absLogDir.getAbsolutePath())[ FD ]
Line_12 $$ Configuration conf = new Configuration()-->Line_25 $$ createShuffleHandlerFiles(absLogDir, user, appId.toString(), appAttemptId, conf, fileMap)[ FD ]
Line_19 $$ ApplicationId appId = ApplicationId.newInstance(12345, 1)-->Line_25 $$ createShuffleHandlerFiles(absLogDir, user, appId.toString(), appAttemptId, conf, fileMap)[ FD ]
Line_12 $$ Configuration conf = new Configuration()-->Line_15 $$ conf.set(CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHENTICATION, "kerberos")[ FD ]
Line_12 $$ Configuration conf = new Configuration()-->Line_18 $$ conf.set(YarnConfiguration.NM_LOCAL_DIRS, absLogDir.getAbsolutePath())[ FD ]
Line_17 $$ File absLogDir = new File("target", TestShuffleHandler.class.getSimpleName() + "LocDir").getAbsoluteFile()-->Line_25 $$ createShuffleHandlerFiles(absLogDir, user, appId.toString(), appAttemptId, conf, fileMap)[ FD ]
Line_22 $$ String user = "randomUser"-->Line_25 $$ createShuffleHandlerFiles(absLogDir, user, appId.toString(), appAttemptId, conf, fileMap)[ FD ]
