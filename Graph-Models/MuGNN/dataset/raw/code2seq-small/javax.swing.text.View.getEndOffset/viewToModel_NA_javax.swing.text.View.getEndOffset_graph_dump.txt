Line_2 $$ public int viewToModel(float x, float y, Shape a, Position.Bias[] bias) -->Line_4 $$ if (x < alloc.x + (alloc.width / 2)) [ CD ]
Line_2 $$ public int viewToModel(float x, float y, Shape a, Position.Bias[] bias) -->Line_9 $$ return getEndOffset()[ CD ]
Line_2 $$ public int viewToModel(float x, float y, Shape a, Position.Bias[] bias) -->Line_3 $$ Rectangle alloc = (Rectangle) a[ CD ]
Line_4 $$ if (x < alloc.x + (alloc.width / 2)) -->Line_6 $$ return getStartOffset()[ CD ]
Line_2 $$ public int viewToModel(float x, float y, Shape a, Position.Bias[] bias) -->Line_4 $$ if (x < alloc.x + (alloc.width / 2)) [ FD ]
Line_4 $$ if (x < alloc.x + (alloc.width / 2)) -->Line_5 $$ bias[0] = Position.Bias.Forward[ CD ]
Line_2 $$ public int viewToModel(float x, float y, Shape a, Position.Bias[] bias) -->Line_8 $$ bias[0] = Position.Bias.Backward[ CD ]
