Line_5 $$ if ((pos >= p0) && (pos <= p1)) -->Line_7 $$ if (pos == p1) [ CD ]
Line_4 $$ int p1 = getEndOffset()-->Line_7 $$ if (pos == p1) [ FD ]
Line_2 $$ public Shape modelToView(int pos, Shape a, Position.Bias b) throws BadLocationException -->Line_7 $$ if (pos == p1) [ FD ]
Line_5 $$ if ((pos >= p0) && (pos <= p1)) -->Line_11 $$ return r[ CD ]
Line_2 $$ public Shape modelToView(int pos, Shape a, Position.Bias b) throws BadLocationException -->Line_5 $$ if ((pos >= p0) && (pos <= p1)) [ CD ]
Line_2 $$ public Shape modelToView(int pos, Shape a, Position.Bias b) throws BadLocationException -->Line_3 $$ int p0 = getStartOffset()[ CD ]
Line_2 $$ public Shape modelToView(int pos, Shape a, Position.Bias b) throws BadLocationException -->Line_4 $$ int p1 = getEndOffset()[ CD ]
Line_2 $$ public Shape modelToView(int pos, Shape a, Position.Bias b) throws BadLocationException -->Line_13 $$ return null[ CD ]
Line_5 $$ if ((pos >= p0) && (pos <= p1)) -->Line_10 $$ r.width = 0[ CD ]
Line_5 $$ if ((pos >= p0) && (pos <= p1)) -->Line_6 $$ Rectangle r = a.getBounds()[ CD ]
Line_7 $$ if (pos == p1) -->Line_8 $$ r.x += r.width[ CD ]
Line_2 $$ public Shape modelToView(int pos, Shape a, Position.Bias b) throws BadLocationException -->Line_6 $$ Rectangle r = a.getBounds()[ FD ]
