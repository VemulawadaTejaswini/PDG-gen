Line_3 $$ if (state.getAMRMTokenSecretManagerState() != null) -->Line_4 $$ MasterKey currentKey = state.getAMRMTokenSecretManagerState().getCurrentMasterKey()[ CD ]
Line_2 $$ public void recover(RMState state) -->Line_4 $$ MasterKey currentKey = state.getAMRMTokenSecretManagerState().getCurrentMasterKey()[ FD ]
Line_7 $$ if (nextKey != null) -->Line_9 $$ this.timer.schedule(new NextKeyActivator(), this.activationDelay)[ CD ]
Line_2 $$ public void recover(RMState state) -->Line_3 $$ if (state.getAMRMTokenSecretManagerState() != null) [ FD ]
Line_6 $$ MasterKey nextKey = state.getAMRMTokenSecretManagerState().getNextMasterKey()-->Line_7 $$ if (nextKey != null) [ FD ]
Line_3 $$ if (state.getAMRMTokenSecretManagerState() != null) -->Line_5 $$ this.currentMasterKey = new MasterKeyData(currentKey, createSecretKey(currentKey.getBytes().array()))[ CD ]
Line_3 $$ if (state.getAMRMTokenSecretManagerState() != null) -->Line_6 $$ MasterKey nextKey = state.getAMRMTokenSecretManagerState().getNextMasterKey()[ CD ]
Line_6 $$ MasterKey nextKey = state.getAMRMTokenSecretManagerState().getNextMasterKey()-->Line_8 $$ this.nextMasterKey = new MasterKeyData(nextKey, createSecretKey(nextKey.getBytes().array()))[ FD ]
Line_7 $$ if (nextKey != null) -->Line_8 $$ this.nextMasterKey = new MasterKeyData(nextKey, createSecretKey(nextKey.getBytes().array()))[ CD ]
Line_4 $$ MasterKey currentKey = state.getAMRMTokenSecretManagerState().getCurrentMasterKey()-->Line_5 $$ this.currentMasterKey = new MasterKeyData(currentKey, createSecretKey(currentKey.getBytes().array()))[ FD ]
Line_3 $$ if (state.getAMRMTokenSecretManagerState() != null) -->Line_7 $$ if (nextKey != null) [ CD ]
Line_2 $$ public void recover(RMState state) -->Line_6 $$ MasterKey nextKey = state.getAMRMTokenSecretManagerState().getNextMasterKey()[ FD ]
Line_2 $$ public void recover(RMState state) -->Line_3 $$ if (state.getAMRMTokenSecretManagerState() != null) [ CD ]
