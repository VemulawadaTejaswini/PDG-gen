Line_10 $$ for (Color c : gradientEditor.colors) -->Line_11 $$ colors[i++] = c.getRed() / 255f[ FD ]
Line_5 $$ color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1 - lightnessSlider.getPercentage()))-->Line_6 $$ colorPanel.setBackground(color)[ FD ]
Line_10 $$ for (Color c : gradientEditor.colors) -->Line_13 $$ colors[i++] = c.getBlue() / 255f[ FD ]
Line_2 $$ void updateColor() -->Line_9 $$ int i = 0[ CD ]
Line_9 $$ int i = 0-->Line_11 $$ colors[i++] = c.getRed() / 255f[ FD ]
Line_9 $$ int i = 0-->Line_13 $$ colors[i++] = c.getBlue() / 255f[ FD ]
Line_2 $$ void updateColor() -->Line_16 $$ i = 0[ CD ]
Line_2 $$ void updateColor() -->Line_3 $$ Color color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1))[ CD ]
Line_3 $$ Color color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1))-->Line_6 $$ colorPanel.setBackground(color)[ FD ]
Line_2 $$ void updateColor() -->Line_7 $$ gradientEditor.setColor(color)[ CD ]
Line_9 $$ int i = 0-->Line_17 $$ percentages[i++] = percent[ FD ]
Line_9 $$ int i = 0-->Line_16 $$ i = 0[ FD ]
Line_2 $$ void updateColor() -->Line_5 $$ color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1 - lightnessSlider.getPercentage()))[ CD ]
Line_2 $$ void updateColor() -->Line_18 $$ value.setColors(colors)[ CD ]
Line_5 $$ color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1 - lightnessSlider.getPercentage()))-->Line_7 $$ gradientEditor.setColor(color)[ FD ]
Line_3 $$ Color color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1))-->Line_5 $$ color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1 - lightnessSlider.getPercentage()))[ FD ]
Line_10 $$ for (Color c : gradientEditor.colors) -->Line_12 $$ colors[i++] = c.getGreen() / 255f[ FD ]
Line_15 $$ float[] percentages = new float[gradientEditor.percentages.size()]-->Line_19 $$ value.setTimeline(percentages)[ FD ]
Line_3 $$ Color color = new Color(Color.HSBtoRGB(hueSlider.getPercentage(), 1 - saturationSlider.getPercentage(), 1))-->Line_7 $$ gradientEditor.setColor(color)[ FD ]
Line_16 $$ i = 0-->Line_17 $$ percentages[i++] = percent[ FD ]
Line_2 $$ void updateColor() -->Line_15 $$ float[] percentages = new float[gradientEditor.percentages.size()][ CD ]
Line_2 $$ void updateColor() -->Line_6 $$ colorPanel.setBackground(color)[ CD ]
Line_2 $$ void updateColor() -->Line_4 $$ lightnessSlider.setColors(new Color[] [ CD ]
Line_8 $$ float[] colors = new float[gradientEditor.colors.size() * 3]-->Line_18 $$ value.setColors(colors)[ FD ]
Line_2 $$ void updateColor() -->Line_19 $$ value.setTimeline(percentages)[ CD ]
Line_9 $$ int i = 0-->Line_12 $$ colors[i++] = c.getGreen() / 255f[ FD ]
Line_2 $$ void updateColor() -->Line_8 $$ float[] colors = new float[gradientEditor.colors.size() * 3][ CD ]
