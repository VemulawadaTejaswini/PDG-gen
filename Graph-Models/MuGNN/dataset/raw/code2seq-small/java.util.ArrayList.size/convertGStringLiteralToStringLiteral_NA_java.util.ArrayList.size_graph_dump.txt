Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())-->Line_19 $$ text = child.getText()[ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_30 $$ StringBuilder builder = new StringBuilder(literal.getTextLength() * 2)[ FD ]
Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)-->Line_24 $$ if (text != null) [ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_4 $$ if (child == null)[ CD ]
Line_6 $$ String text-->Line_11 $$ text = child.getText()[ FD ]
Line_14 $$ if (((GrStringInjection) child).getClosableBlock() != null) -->Line_16 $$ if (((GrStringInjection) child).getExpression() != null) [ CD ]
Line_11 $$ text = child.getText()-->Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)[ FD ]
Line_7 $$ ArrayList<String> list = new ArrayList<String>()-->Line_35 $$ builder.append(" + ").append(list.get(i))[ FD ]
Line_8 $$ PsiElement prevSibling = null-->Line_27 $$ prevSibling = child[ FD ]
Line_6 $$ String text-->Line_25 $$ list.add(text)[ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_30 $$ StringBuilder builder = new StringBuilder(literal.getTextLength() * 2)[ CD ]
Line_6 $$ String text-->Line_19 $$ text = child.getText()[ FD ]
Line_28 $$ child = child.getNextSibling()-->Line_27 $$ prevSibling = child[ FD ]
Line_19 $$ text = child.getText()-->Line_25 $$ list.add(text)[ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_37 $$ return builder.toString()[ CD ]
Line_6 $$ String text-->Line_24 $$ if (text != null) [ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_3 $$ PsiElement child = literal.getFirstChild()[ FD ]
Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)-->Line_25 $$ list.add(text)[ FD ]
Line_11 $$ text = child.getText()-->Line_24 $$ if (text != null) [ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_34 $$ for (int i = 1; i < list.size(); i++) [ CD ]
Line_19 $$ text = child.getText()-->Line_24 $$ if (text != null) [ FD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_28 $$ child = child.getNextSibling()[ FD ]
Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())-->Line_24 $$ if (text != null) [ FD ]
Line_11 $$ text = child.getText()-->Line_19 $$ text = child.getText()[ FD ]
Line_28 $$ child = child.getNextSibling()-->Line_11 $$ text = child.getText()[ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_8 $$ PsiElement prevSibling = null[ CD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_9 $$ PsiElement nextSibling[ CD ]
Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())-->Line_25 $$ list.add(text)[ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_3 $$ PsiElement child = literal.getFirstChild()[ CD ]
Line_10 $$ do -->Line_13 $$ if (child instanceof GrStringInjection) [ CD ]
Line_10 $$ do -->Line_24 $$ if (text != null) [ CD ]
Line_34 $$ for (int i = 1; i < list.size(); i++) -->Line_35 $$ builder.append(" + ").append(list.get(i))[ CD ]
Line_28 $$ child = child.getNextSibling()-->Line_12 $$ nextSibling = child.getNextSibling()[ FD ]
Line_28 $$ child = child.getNextSibling()-->Line_10 $$ do [ FD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_19 $$ text = child.getText()[ FD ]
Line_7 $$ ArrayList<String> list = new ArrayList<String>()-->Line_33 $$ builder.append(list.get(0))[ FD ]
Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())-->Line_25 $$ list.add(text)[ FD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_13 $$ if (child instanceof GrStringInjection) [ FD ]
Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())-->Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)[ FD ]
Line_11 $$ text = child.getText()-->Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())[ FD ]
Line_28 $$ child = child.getNextSibling()-->Line_13 $$ if (child instanceof GrStringInjection) [ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_6 $$ String text[ CD ]
Line_24 $$ if (text != null) -->Line_25 $$ list.add(text)[ CD ]
Line_4 $$ if (child == null)-->Line_5 $$ return literal.getText()[ CD ]
Line_30 $$ StringBuilder builder = new StringBuilder(literal.getTextLength() * 2)-->Line_35 $$ builder.append(" + ").append(list.get(i))[ FD ]
Line_11 $$ text = child.getText()-->Line_25 $$ list.add(text)[ FD ]
Line_9 $$ PsiElement nextSibling-->Line_12 $$ nextSibling = child.getNextSibling()[ FD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_10 $$ do [ FD ]
Line_7 $$ ArrayList<String> list = new ArrayList<String>()-->Line_25 $$ list.add(text)[ FD ]
Line_13 $$ if (child instanceof GrStringInjection) -->Line_14 $$ if (((GrStringInjection) child).getClosableBlock() != null) [ CD ]
Line_11 $$ text = child.getText()-->Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())[ FD ]
Line_10 $$ do -->Line_11 $$ text = child.getText()[ CD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_7 $$ ArrayList<String> list = new ArrayList<String>()[ CD ]
Line_16 $$ if (((GrStringInjection) child).getExpression() != null) -->Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())[ CD ]
Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())-->Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())[ FD ]
Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())-->Line_19 $$ text = child.getText()[ FD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_12 $$ nextSibling = child.getNextSibling()[ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_33 $$ builder.append(list.get(0))[ CD ]
Line_28 $$ child = child.getNextSibling()-->Line_19 $$ text = child.getText()[ FD ]
Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())-->Line_24 $$ if (text != null) [ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_5 $$ return literal.getText()[ FD ]
Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())-->Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)[ FD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_4 $$ if (child == null)[ FD ]
Line_31 $$ if (list.isEmpty())-->Line_32 $$ return "''"[ CD ]
Line_16 $$ if (((GrStringInjection) child).getExpression() != null) -->Line_19 $$ text = child.getText()[ CD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_11 $$ text = child.getText()[ FD ]
Line_14 $$ if (((GrStringInjection) child).getClosableBlock() != null) -->Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())[ CD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_10 $$ do [ CD ]
Line_19 $$ text = child.getText()-->Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)[ FD ]
Line_30 $$ StringBuilder builder = new StringBuilder(literal.getTextLength() * 2)-->Line_33 $$ builder.append(list.get(0))[ FD ]
Line_10 $$ do -->Line_28 $$ child = child.getNextSibling()[ CD ]
Line_10 $$ do -->Line_12 $$ nextSibling = child.getNextSibling()[ CD ]
Line_6 $$ String text-->Line_15 $$ text = prepareClosableBlock(((GrStringInjection) child).getClosableBlock())[ FD ]
Line_2 $$ public static String convertGStringLiteralToStringLiteral(GrLiteral literal) -->Line_31 $$ if (list.isEmpty())[ CD ]
Line_6 $$ String text-->Line_17 $$ text = prepareExpression(((GrStringInjection) child).getExpression())[ FD ]
Line_10 $$ do -->Line_27 $$ prevSibling = child[ CD ]
Line_6 $$ String text-->Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)[ FD ]
Line_34 $$ for (int i = 1; i < list.size(); i++) -->Line_35 $$ builder.append(" + ").append(list.get(i))[ FD ]
Line_7 $$ ArrayList<String> list = new ArrayList<String>()-->Line_34 $$ for (int i = 1; i < list.size(); i++) [ FD ]
Line_30 $$ StringBuilder builder = new StringBuilder(literal.getTextLength() * 2)-->Line_37 $$ return builder.toString()[ FD ]
Line_13 $$ if (child instanceof GrStringInjection) -->Line_22 $$ text = prepareText(text, prevSibling == null, nextSibling == null, nextSibling instanceof GrClosableBlock || nextSibling instanceof GrReferenceExpression)[ CD ]
Line_7 $$ ArrayList<String> list = new ArrayList<String>()-->Line_31 $$ if (list.isEmpty())[ FD ]
Line_3 $$ PsiElement child = literal.getFirstChild()-->Line_27 $$ prevSibling = child[ FD ]
