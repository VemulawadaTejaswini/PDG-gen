Line_2 $$ private File[] getFileArray() -->Line_4 $$ TreePath[] selectionPaths = myTree.getSelectionPaths()[ CD ]
Line_3 $$ ArrayList<File> result = new ArrayList<File>()-->Line_11 $$ if (result.isEmpty())[ FD ]
Line_3 $$ ArrayList<File> result = new ArrayList<File>()-->Line_13 $$ return result.toArray(new File[result.size()])[ FD ]
Line_11 $$ if (result.isEmpty())-->Line_12 $$ return null[ CD ]
Line_4 $$ TreePath[] selectionPaths = myTree.getSelectionPaths()-->Line_5 $$ if (selectionPaths != null) [ FD ]
Line_3 $$ ArrayList<File> result = new ArrayList<File>()-->Line_8 $$ result.addAll(treeNode.getFiles())[ FD ]
Line_2 $$ private File[] getFileArray() -->Line_5 $$ if (selectionPaths != null) [ CD ]
Line_7 $$ AbstractTreeNode treeNode = (AbstractTreeNode) selectionPath.getLastPathComponent()-->Line_8 $$ result.addAll(treeNode.getFiles())[ FD ]
Line_2 $$ private File[] getFileArray() -->Line_11 $$ if (result.isEmpty())[ CD ]
Line_6 $$ for (TreePath selectionPath : selectionPaths) -->Line_7 $$ AbstractTreeNode treeNode = (AbstractTreeNode) selectionPath.getLastPathComponent()[ FD ]
Line_2 $$ private File[] getFileArray() -->Line_3 $$ ArrayList<File> result = new ArrayList<File>()[ CD ]
Line_2 $$ private File[] getFileArray() -->Line_13 $$ return result.toArray(new File[result.size()])[ CD ]
