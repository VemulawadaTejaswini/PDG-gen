Line_26 $$ start = dl.getLastName()-->Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)[ FD ]
Line_43 $$ for (int i = 0; i < dl.getPartialListing().length; i++) -->Line_44 $$ source.remove(dl.getPartialListing()[i].getLocalName())[ CD ]
Line_16 $$ for (int j = 0; j < numEntries; j++) -->Line_17 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp1/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 3, 0)[ CD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_43 $$ for (int i = 0; i < dl.getPartialListing().length; i++) [ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_15 $$ int numEntries = source.size()[ FD ]
Line_16 $$ for (int j = 0; j < numEntries; j++) -->Line_17 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp1/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 3, 0)[ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_44 $$ source.remove(dl.getPartialListing()[i].getLocalName())[ FD ]
Line_19 $$ byte[] start = HdfsFileStatus.EMPTY_NAME-->Line_46 $$ start = dl.getLastName()[ FD ]
Line_46 $$ start = dl.getLastName()-->Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)[ FD ]
Line_16 $$ for (int j = 0; j < numEntries; j++) -->Line_36 $$ for (int j = 0; j < numEntries; j++) [ FD ]
Line_26 $$ start = dl.getLastName()-->Line_39 $$ start = HdfsFileStatus.EMPTY_NAME[ FD ]
Line_19 $$ byte[] start = HdfsFileStatus.EMPTY_NAME-->Line_39 $$ start = HdfsFileStatus.EMPTY_NAME[ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_31 $$ source.add("f3")[ FD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_22 $$ assertTrue(dl.getPartialListing().length == 1)[ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_24 $$ source.remove(dl.getPartialListing()[i].getLocalName())[ FD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_44 $$ source.remove(dl.getPartialListing()[i].getLocalName())[ FD ]
Line_2 $$ public void testLocationLimitInListingOps() throws Exception -->Line_4 $$ conf.setInt(DFSConfigKeys.DFS_LIST_LIMIT, 9)[ CD ]
Line_9 $$ final DistributedFileSystem hdfs = cluster.getFileSystem()-->Line_11 $$ hdfs.mkdirs(new Path("/tmp1"))[ FD ]
Line_20 $$ for (int j = 0; j < numEntries; j++) -->Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)[ CD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_33 $$ source.add("f5")[ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_35 $$ numEntries = source.size()[ FD ]
Line_5 $$ MiniDFSCluster cluster = null-->Line_51 $$ cluster.shutdown()[ FD ]
Line_5 $$ MiniDFSCluster cluster = null-->Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()[ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_29 $$ source.add("f1")[ FD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_23 $$ for (int i = 0; i < dl.getPartialListing().length; i++) [ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_37 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp2/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 1, 0)[ FD ]
Line_35 $$ numEntries = source.size()-->Line_36 $$ for (int j = 0; j < numEntries; j++) [ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_17 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp1/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 3, 0)[ FD ]
Line_40 $$ for (int j = 0; j < numEntries / 3; j++) -->Line_43 $$ for (int i = 0; i < dl.getPartialListing().length; i++) [ CD ]
Line_9 $$ final DistributedFileSystem hdfs = cluster.getFileSystem()-->Line_12 $$ hdfs.mkdirs(new Path("/tmp2"))[ FD ]
Line_36 $$ for (int j = 0; j < numEntries; j++) -->Line_37 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp2/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 1, 0)[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_8 $$ cluster.waitActive()[ FD ]
Line_39 $$ start = HdfsFileStatus.EMPTY_NAME-->Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)[ FD ]
Line_19 $$ byte[] start = HdfsFileStatus.EMPTY_NAME-->Line_26 $$ start = dl.getLastName()[ FD ]
Line_20 $$ for (int j = 0; j < numEntries; j++) -->Line_26 $$ start = dl.getLastName()[ CD ]
Line_40 $$ for (int j = 0; j < numEntries / 3; j++) -->Line_46 $$ start = dl.getLastName()[ CD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_34 $$ source.add("f6")[ FD ]
Line_23 $$ for (int i = 0; i < dl.getPartialListing().length; i++) -->Line_24 $$ source.remove(dl.getPartialListing()[i].getLocalName())[ CD ]
Line_19 $$ byte[] start = HdfsFileStatus.EMPTY_NAME-->Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)[ FD ]
Line_39 $$ start = HdfsFileStatus.EMPTY_NAME-->Line_46 $$ start = dl.getLastName()[ FD ]
Line_16 $$ for (int j = 0; j < numEntries; j++) -->Line_40 $$ for (int j = 0; j < numEntries / 3; j++) [ FD ]
Line_20 $$ for (int j = 0; j < numEntries; j++) -->Line_23 $$ for (int i = 0; i < dl.getPartialListing().length; i++) [ CD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_42 $$ assertTrue(dl.getPartialListing().length == 3)[ FD ]
Line_26 $$ start = dl.getLastName()-->Line_46 $$ start = dl.getLastName()[ FD ]
Line_36 $$ for (int j = 0; j < numEntries; j++) -->Line_40 $$ for (int j = 0; j < numEntries / 3; j++) [ FD ]
Line_23 $$ for (int i = 0; i < dl.getPartialListing().length; i++) -->Line_43 $$ for (int i = 0; i < dl.getPartialListing().length; i++) [ FD ]
Line_19 $$ byte[] start = HdfsFileStatus.EMPTY_NAME-->Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)[ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_32 $$ source.add("f4")[ FD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_24 $$ source.remove(dl.getPartialListing()[i].getLocalName())[ FD ]
Line_9 $$ final DistributedFileSystem hdfs = cluster.getFileSystem()-->Line_17 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp1/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 3, 0)[ FD ]
Line_50 $$ if (cluster != null) -->Line_51 $$ cluster.shutdown()[ CD ]
Line_20 $$ for (int j = 0; j < numEntries; j++) -->Line_40 $$ for (int j = 0; j < numEntries / 3; j++) [ FD ]
Line_15 $$ int numEntries = source.size()-->Line_35 $$ numEntries = source.size()[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_9 $$ final DistributedFileSystem hdfs = cluster.getFileSystem()[ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_48 $$ assertTrue(source.size() == 0)[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)[ FD ]
Line_16 $$ for (int j = 0; j < numEntries; j++) -->Line_37 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp2/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 1, 0)[ FD ]
Line_15 $$ int numEntries = source.size()-->Line_36 $$ for (int j = 0; j < numEntries; j++) [ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_30 $$ source.add("f2")[ FD ]
Line_36 $$ for (int j = 0; j < numEntries; j++) -->Line_37 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp2/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 1, 0)[ CD ]
Line_26 $$ start = dl.getLastName()-->Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)[ FD ]
Line_5 $$ MiniDFSCluster cluster = null-->Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)[ FD ]
Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)-->Line_44 $$ source.remove(dl.getPartialListing()[i].getLocalName())[ FD ]
Line_2 $$ public void testLocationLimitInListingOps() throws Exception -->Line_5 $$ MiniDFSCluster cluster = null[ CD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_13 $$ source.add("f1")[ FD ]
Line_5 $$ MiniDFSCluster cluster = null-->Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)[ FD ]
Line_5 $$ MiniDFSCluster cluster = null-->Line_8 $$ cluster.waitActive()[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)[ FD ]
Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)-->Line_43 $$ for (int i = 0; i < dl.getPartialListing().length; i++) [ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_28 $$ assertTrue(source.size() == 0)[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_51 $$ cluster.shutdown()[ FD ]
Line_5 $$ MiniDFSCluster cluster = null-->Line_9 $$ final DistributedFileSystem hdfs = cluster.getFileSystem()[ FD ]
Line_20 $$ for (int j = 0; j < numEntries; j++) -->Line_36 $$ for (int j = 0; j < numEntries; j++) [ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_50 $$ if (cluster != null) [ FD ]
Line_2 $$ public void testLocationLimitInListingOps() throws Exception -->Line_3 $$ final Configuration conf = new Configuration()[ CD ]
Line_40 $$ for (int j = 0; j < numEntries / 3; j++) -->Line_42 $$ assertTrue(dl.getPartialListing().length == 3)[ CD ]
Line_20 $$ for (int j = 0; j < numEntries; j++) -->Line_37 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp2/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 1, 0)[ FD ]
Line_15 $$ int numEntries = source.size()-->Line_16 $$ for (int j = 0; j < numEntries; j++) [ FD ]
Line_40 $$ for (int j = 0; j < numEntries / 3; j++) -->Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)[ CD ]
Line_15 $$ int numEntries = source.size()-->Line_20 $$ for (int j = 0; j < numEntries; j++) [ FD ]
Line_5 $$ MiniDFSCluster cluster = null-->Line_50 $$ if (cluster != null) [ FD ]
Line_16 $$ for (int j = 0; j < numEntries; j++) -->Line_20 $$ for (int j = 0; j < numEntries; j++) [ FD ]
Line_10 $$ ArrayList<String> source = new ArrayList<String>()-->Line_14 $$ source.add("f2")[ FD ]
Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)-->Line_42 $$ assertTrue(dl.getPartialListing().length == 3)[ FD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_26 $$ start = dl.getLastName()[ FD ]
Line_9 $$ final DistributedFileSystem hdfs = cluster.getFileSystem()-->Line_37 $$ DFSTestUtil.createFile(hdfs, new Path("/tmp2/" + source.get(j)), 4096, 3 * 1024 - 100, 1024, (short) 1, 0)[ FD ]
Line_41 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp2", start, true)-->Line_46 $$ start = dl.getLastName()[ FD ]
Line_3 $$ final Configuration conf = new Configuration()-->Line_4 $$ conf.setInt(DFSConfigKeys.DFS_LIST_LIMIT, 9)[ FD ]
Line_20 $$ for (int j = 0; j < numEntries; j++) -->Line_22 $$ assertTrue(dl.getPartialListing().length == 1)[ CD ]
Line_21 $$ DirectoryListing dl = cluster.getNameNodeRpc().getListing("/tmp1", start, true)-->Line_46 $$ start = dl.getLastName()[ FD ]
