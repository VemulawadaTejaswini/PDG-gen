Line_9 $$ final DomFileElement originalElement = domManager.getFileElement(originalFile)-->Line_10 $$ if (originalElement != null) [ FD ]
Line_7 $$ final XmlFile originalFile = (XmlFile) xmlFile.getOriginalFile()-->Line_9 $$ final DomFileElement originalElement = domManager.getFileElement(originalFile)[ FD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_22 $$ if (roots.size() == 1) [ CD ]
Line_10 $$ if (originalElement != null) -->Line_11 $$ element = originalElement[ CD ]
Line_3 $$ final DomManager domManager = element.getManager()-->Line_17 $$ final DomFileElement<T> fileElement = domManager.getFileElement(file)[ FD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_15 $$ ArrayList<T> roots = new ArrayList<T>(files.size())[ CD ]
Line_11 $$ element = originalElement-->Line_14 $$ files.addAll(getFilesToMerge(element))[ FD ]
Line_3 $$ final DomManager domManager = element.getManager()-->Line_9 $$ final DomFileElement originalElement = domManager.getFileElement(originalFile)[ FD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_7 $$ final XmlFile originalFile = (XmlFile) xmlFile.getOriginalFile()[ CD ]
Line_25 $$ if (myMerger == null) -->Line_26 $$ myMerger = DomService.getInstance().createModelMerger()[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_4 $$ XmlFile xmlFile = element.getFile()[ FD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_6 $$ files.add(xmlFile)[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_8 $$ if (originalFile != xmlFile) [ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_11 $$ element = originalElement[ FD ]
Line_8 $$ if (originalFile != xmlFile) -->Line_9 $$ final DomFileElement originalElement = domManager.getFileElement(originalFile)[ CD ]
Line_16 $$ for (XmlFile file : files) -->Line_17 $$ final DomFileElement<T> fileElement = domManager.getFileElement(file)[ FD ]
Line_15 $$ ArrayList<T> roots = new ArrayList<T>(files.size())-->Line_19 $$ roots.add(fileElement.getRootElement())[ FD ]
Line_15 $$ ArrayList<T> roots = new ArrayList<T>(files.size())-->Line_22 $$ if (roots.size() == 1) [ FD ]
Line_4 $$ XmlFile xmlFile = element.getFile()-->Line_8 $$ if (originalFile != xmlFile) [ FD ]
Line_9 $$ final DomFileElement originalElement = domManager.getFileElement(originalFile)-->Line_11 $$ element = originalElement[ FD ]
Line_8 $$ if (originalFile != xmlFile) -->Line_10 $$ if (originalElement != null) [ CD ]
Line_22 $$ if (roots.size() == 1) -->Line_23 $$ return roots.iterator().next()[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_14 $$ files.addAll(getFilesToMerge(element))[ FD ]
Line_15 $$ ArrayList<T> roots = new ArrayList<T>(files.size())-->Line_28 $$ return myMerger.mergeModels(getRootElementClass(), roots)[ FD ]
Line_4 $$ XmlFile xmlFile = element.getFile()-->Line_7 $$ final XmlFile originalFile = (XmlFile) xmlFile.getOriginalFile()[ FD ]
Line_17 $$ final DomFileElement<T> fileElement = domManager.getFileElement(file)-->Line_18 $$ if (fileElement != null) [ FD ]
Line_4 $$ XmlFile xmlFile = element.getFile()-->Line_6 $$ files.add(xmlFile)[ FD ]
Line_15 $$ ArrayList<T> roots = new ArrayList<T>(files.size())-->Line_23 $$ return roots.iterator().next()[ FD ]
Line_18 $$ if (fileElement != null) -->Line_19 $$ roots.add(fileElement.getRootElement())[ CD ]
Line_17 $$ final DomFileElement<T> fileElement = domManager.getFileElement(file)-->Line_19 $$ roots.add(fileElement.getRootElement())[ FD ]
Line_5 $$ Set<XmlFile> files = new HashSet<XmlFile>()-->Line_14 $$ files.addAll(getFilesToMerge(element))[ FD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_5 $$ Set<XmlFile> files = new HashSet<XmlFile>()[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_3 $$ final DomManager domManager = element.getManager()[ FD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_4 $$ XmlFile xmlFile = element.getFile()[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_28 $$ return myMerger.mergeModels(getRootElementClass(), roots)[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_3 $$ final DomManager domManager = element.getManager()[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_14 $$ files.addAll(getFilesToMerge(element))[ CD ]
Line_2 $$ public final T getMergedRoot(DomFileElement<T> element) -->Line_25 $$ if (myMerger == null) [ CD ]
Line_5 $$ Set<XmlFile> files = new HashSet<XmlFile>()-->Line_15 $$ ArrayList<T> roots = new ArrayList<T>(files.size())[ FD ]
Line_7 $$ final XmlFile originalFile = (XmlFile) xmlFile.getOriginalFile()-->Line_8 $$ if (originalFile != xmlFile) [ FD ]
Line_5 $$ Set<XmlFile> files = new HashSet<XmlFile>()-->Line_6 $$ files.add(xmlFile)[ FD ]
