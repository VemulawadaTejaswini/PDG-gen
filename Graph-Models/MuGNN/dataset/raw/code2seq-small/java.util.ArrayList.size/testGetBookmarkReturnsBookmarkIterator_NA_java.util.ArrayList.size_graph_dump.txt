Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_6 $$ assertEquals(bookmark.next(), list.get(0))[ CD ]
Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_11 $$ Iterator<Integer> bookmark2 = set.getBookmark()[ CD ]
Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_5 $$ Iterator<Integer> bookmark = set.getBookmark()[ CD ]
Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_12 $$ assertEquals(bookmark2.next(), list.get(numAdvance))[ CD ]
Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_4 $$ assertTrue(set.addAll(list))[ CD ]
Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_8 $$ for (int i = 1; i < numAdvance; i++) [ CD ]
Line_7 $$ final int numAdvance = list.size() / 2-->Line_8 $$ for (int i = 1; i < numAdvance; i++) [ FD ]
Line_7 $$ final int numAdvance = list.size() / 2-->Line_12 $$ assertEquals(bookmark2.next(), list.get(numAdvance))[ FD ]
Line_5 $$ Iterator<Integer> bookmark = set.getBookmark()-->Line_6 $$ assertEquals(bookmark.next(), list.get(0))[ FD ]
Line_8 $$ for (int i = 1; i < numAdvance; i++) -->Line_9 $$ bookmark.next()[ CD ]
Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_7 $$ final int numAdvance = list.size() / 2[ CD ]
Line_5 $$ Iterator<Integer> bookmark = set.getBookmark()-->Line_9 $$ bookmark.next()[ FD ]
Line_11 $$ Iterator<Integer> bookmark2 = set.getBookmark()-->Line_12 $$ assertEquals(bookmark2.next(), list.get(numAdvance))[ FD ]
Line_2 $$ public void testGetBookmarkReturnsBookmarkIterator() -->Line_3 $$ LOG.info("Test getBookmark returns proper iterator")[ CD ]
