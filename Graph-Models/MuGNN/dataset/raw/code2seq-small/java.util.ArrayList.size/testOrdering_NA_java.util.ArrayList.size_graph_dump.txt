Line_13 $$ searcher.doc(topDocs.scoreDocs[0].doc, new StoredFieldVisitor() -->Line_16 $$ return Status.YES[ CD ]
Line_10 $$ IndexSearcher searcher = new IndexSearcher(reader)-->Line_13 $$ searcher.doc(topDocs.scoreDocs[0].doc, new StoredFieldVisitor() [ FD ]
Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))-->Line_8 $$ indexWriter.addDocument(document)[ FD ]
Line_12 $$ final ArrayList<String> fieldsOrder = new ArrayList()-->Line_19 $$ assertThat(fieldsOrder.size(), equalTo(2))[ FD ]
Line_5 $$ Document document = new Document()-->Line_7 $$ document.add(new TextField("#id", "1", Field.Store.YES))[ FD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_10 $$ IndexSearcher searcher = new IndexSearcher(reader)[ CD ]
Line_10 $$ IndexSearcher searcher = new IndexSearcher(reader)-->Line_11 $$ TopDocs topDocs = searcher.search(new TermQuery(new Term("_id", "1")), 1)[ FD ]
Line_13 $$ searcher.doc(topDocs.scoreDocs[0].doc, new StoredFieldVisitor() -->Line_15 $$ fieldsOrder.add(fieldInfo.name)[ CD ]
Line_12 $$ final ArrayList<String> fieldsOrder = new ArrayList()-->Line_15 $$ fieldsOrder.add(fieldInfo.name)[ FD ]
Line_12 $$ final ArrayList<String> fieldsOrder = new ArrayList()-->Line_20 $$ assertThat(fieldsOrder.get(0), equalTo("_id"))[ FD ]
Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))-->Line_22 $$ indexWriter.close()[ FD ]
Line_5 $$ Document document = new Document()-->Line_6 $$ document.add(new TextField("_id", "1", Field.Store.YES))[ FD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_13 $$ searcher.doc(topDocs.scoreDocs[0].doc, new StoredFieldVisitor() [ CD ]
Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))-->Line_9 $$ IndexReader reader = DirectoryReader.open(indexWriter, true)[ FD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_20 $$ assertThat(fieldsOrder.get(0), equalTo("_id"))[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_5 $$ Document document = new Document()[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_7 $$ document.add(new TextField("#id", "1", Field.Store.YES))[ CD ]
Line_5 $$ Document document = new Document()-->Line_8 $$ indexWriter.addDocument(document)[ FD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_3 $$ Directory dir = new RAMDirectory()[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_6 $$ document.add(new TextField("_id", "1", Field.Store.YES))[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_21 $$ assertThat(fieldsOrder.get(1), equalTo("#id"))[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_8 $$ indexWriter.addDocument(document)[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_9 $$ IndexReader reader = DirectoryReader.open(indexWriter, true)[ CD ]
Line_12 $$ final ArrayList<String> fieldsOrder = new ArrayList()-->Line_21 $$ assertThat(fieldsOrder.get(1), equalTo("#id"))[ FD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_4 $$ IndexWriter indexWriter = new IndexWriter(dir, new IndexWriterConfig(Lucene.STANDARD_ANALYZER))[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_22 $$ indexWriter.close()[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_19 $$ assertThat(fieldsOrder.size(), equalTo(2))[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_11 $$ TopDocs topDocs = searcher.search(new TermQuery(new Term("_id", "1")), 1)[ CD ]
Line_2 $$ public void testOrdering() throws Exception -->Line_12 $$ final ArrayList<String> fieldsOrder = new ArrayList()[ CD ]
