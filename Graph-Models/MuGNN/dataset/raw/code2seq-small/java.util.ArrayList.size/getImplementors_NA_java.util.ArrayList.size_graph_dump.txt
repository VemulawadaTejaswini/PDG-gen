Line_22 $$ if (isMappedClass) -->Line_26 $$ if (mappedClass != null && clazz.isAssignableFrom(mappedClass)) [ CD ]
Line_27 $$ final boolean assignableSuperclass-->Line_32 $$ assignableSuperclass = false[ FD ]
Line_10 $$ for (EntityPersister checkPersister : entityPersisters.values()) -->Line_14 $$ final Queryable checkQueryable = Queryable.class.cast(checkPersister)[ FD ]
Line_30 $$ assignableSuperclass = clazz.isAssignableFrom(mappedSuperclass)-->Line_34 $$ if (!assignableSuperclass) [ FD ]
Line_2 $$ public String[] getImplementors(String className) throws MappingException -->Line_3 $$ final Class clazz[ CD ]
Line_2 $$ public String[] getImplementors(String className) throws MappingException -->Line_41 $$ return results.toArray(new String[results.size()])[ CD ]
Line_14 $$ final Queryable checkQueryable = Queryable.class.cast(checkPersister)-->Line_29 $$ Class mappedSuperclass = getEntityPersister(checkQueryable.getMappedSuperclass()).getMappedClass()[ FD ]
Line_32 $$ assignableSuperclass = false-->Line_34 $$ if (!assignableSuperclass) [ FD ]
Line_10 $$ for (EntityPersister checkPersister : entityPersisters.values()) -->Line_11 $$ if (!Queryable.class.isInstance(checkPersister)) [ FD ]
Line_34 $$ if (!assignableSuperclass) -->Line_35 $$ results.add(checkQueryableEntityName)[ CD ]
Line_22 $$ if (isMappedClass) -->Line_23 $$ results.add(checkQueryableEntityName)[ CD ]
Line_27 $$ final boolean assignableSuperclass-->Line_30 $$ assignableSuperclass = clazz.isAssignableFrom(mappedSuperclass)[ FD ]
Line_27 $$ final boolean assignableSuperclass-->Line_34 $$ if (!assignableSuperclass) [ FD ]
Line_15 $$ final String checkQueryableEntityName = checkQueryable.getEntityName()-->Line_16 $$ final boolean isMappedClass = className.equals(checkQueryableEntityName)[ FD ]
Line_17 $$ if (checkQueryable.isExplicitPolymorphism()) -->Line_22 $$ if (isMappedClass) [ CD ]
Line_2 $$ public String[] getImplementors(String className) throws MappingException -->Line_16 $$ final boolean isMappedClass = className.equals(checkQueryableEntityName)[ FD ]
Line_15 $$ final String checkQueryableEntityName = checkQueryable.getEntityName()-->Line_23 $$ results.add(checkQueryableEntityName)[ FD ]
Line_3 $$ final Class clazz-->Line_30 $$ assignableSuperclass = clazz.isAssignableFrom(mappedSuperclass)[ FD ]
Line_30 $$ assignableSuperclass = clazz.isAssignableFrom(mappedSuperclass)-->Line_32 $$ assignableSuperclass = false[ FD ]
Line_26 $$ if (mappedClass != null && clazz.isAssignableFrom(mappedClass)) -->Line_34 $$ if (!assignableSuperclass) [ CD ]
Line_17 $$ if (checkQueryable.isExplicitPolymorphism()) -->Line_18 $$ if (isMappedClass) [ CD ]
Line_9 $$ ArrayList<String> results = new ArrayList<String>()-->Line_35 $$ results.add(checkQueryableEntityName)[ FD ]
Line_18 $$ if (isMappedClass) -->Line_19 $$ return new String[] [ CD ]
Line_3 $$ final Class clazz-->Line_5 $$ clazz = serviceRegistry.getService(ClassLoaderService.class).classForName(className)[ FD ]
Line_28 $$ if (checkQueryable.isInherited()) -->Line_30 $$ assignableSuperclass = clazz.isAssignableFrom(mappedSuperclass)[ CD ]
Line_28 $$ if (checkQueryable.isInherited()) -->Line_29 $$ Class mappedSuperclass = getEntityPersister(checkQueryable.getMappedSuperclass()).getMappedClass()[ CD ]
Line_3 $$ final Class clazz-->Line_26 $$ if (mappedClass != null && clazz.isAssignableFrom(mappedClass)) [ FD ]
Line_29 $$ Class mappedSuperclass = getEntityPersister(checkQueryable.getMappedSuperclass()).getMappedClass()-->Line_30 $$ assignableSuperclass = clazz.isAssignableFrom(mappedSuperclass)[ FD ]
Line_22 $$ if (isMappedClass) -->Line_25 $$ final Class mappedClass = checkQueryable.getMappedClass()[ CD ]
Line_14 $$ final Queryable checkQueryable = Queryable.class.cast(checkPersister)-->Line_28 $$ if (checkQueryable.isInherited()) [ FD ]
Line_14 $$ final Queryable checkQueryable = Queryable.class.cast(checkPersister)-->Line_17 $$ if (checkQueryable.isExplicitPolymorphism()) [ FD ]
Line_9 $$ ArrayList<String> results = new ArrayList<String>()-->Line_41 $$ return results.toArray(new String[results.size()])[ FD ]
Line_14 $$ final Queryable checkQueryable = Queryable.class.cast(checkPersister)-->Line_15 $$ final String checkQueryableEntityName = checkQueryable.getEntityName()[ FD ]
Line_25 $$ final Class mappedClass = checkQueryable.getMappedClass()-->Line_26 $$ if (mappedClass != null && clazz.isAssignableFrom(mappedClass)) [ FD ]
Line_5 $$ clazz = serviceRegistry.getService(ClassLoaderService.class).classForName(className)-->Line_30 $$ assignableSuperclass = clazz.isAssignableFrom(mappedSuperclass)[ FD ]
Line_5 $$ clazz = serviceRegistry.getService(ClassLoaderService.class).classForName(className)-->Line_26 $$ if (mappedClass != null && clazz.isAssignableFrom(mappedClass)) [ FD ]
Line_9 $$ ArrayList<String> results = new ArrayList<String>()-->Line_23 $$ results.add(checkQueryableEntityName)[ FD ]
Line_14 $$ final Queryable checkQueryable = Queryable.class.cast(checkPersister)-->Line_25 $$ final Class mappedClass = checkQueryable.getMappedClass()[ FD ]
Line_2 $$ public String[] getImplementors(String className) throws MappingException -->Line_9 $$ ArrayList<String> results = new ArrayList<String>()[ CD ]
Line_26 $$ if (mappedClass != null && clazz.isAssignableFrom(mappedClass)) -->Line_27 $$ final boolean assignableSuperclass[ CD ]
Line_15 $$ final String checkQueryableEntityName = checkQueryable.getEntityName()-->Line_35 $$ results.add(checkQueryableEntityName)[ FD ]
Line_2 $$ public String[] getImplementors(String className) throws MappingException -->Line_5 $$ clazz = serviceRegistry.getService(ClassLoaderService.class).classForName(className)[ FD ]
Line_28 $$ if (checkQueryable.isInherited()) -->Line_32 $$ assignableSuperclass = false[ CD ]
Line_26 $$ if (mappedClass != null && clazz.isAssignableFrom(mappedClass)) -->Line_28 $$ if (checkQueryable.isInherited()) [ CD ]
