Line_4 $$ if (phaseCount != 0) -->Line_12 $$ if (fixedWeightageForAllPhases) [ CD ]
Line_4 $$ if (phaseCount != 0) -->Line_6 $$ float progressFromCurrentPhase = 0.0f[ CD ]
Line_3 $$ int phaseCount = phases.size()-->Line_7 $$ if (currentPhase < phaseCount) [ FD ]
Line_7 $$ if (currentPhase < phaseCount) -->Line_9 $$ progressFromCurrentPhase = getProgressWeightage(currentPhase) * subProgress[ CD ]
Line_7 $$ if (currentPhase < phaseCount) -->Line_8 $$ subProgress = phase().getInternal()[ CD ]
Line_4 $$ if (phaseCount != 0) -->Line_11 $$ float progressFromCompletedPhases = 0.0f[ CD ]
Line_13 $$ progressFromCompletedPhases = progressPerPhase * currentPhase-->Line_16 $$ progressFromCompletedPhases += getProgressWeightage(i)[ FD ]
Line_4 $$ if (phaseCount != 0) -->Line_7 $$ if (currentPhase < phaseCount) [ CD ]
Line_5 $$ float subProgress = 0.0f-->Line_9 $$ progressFromCurrentPhase = getProgressWeightage(currentPhase) * subProgress[ FD ]
Line_11 $$ float progressFromCompletedPhases = 0.0f-->Line_16 $$ progressFromCompletedPhases += getProgressWeightage(i)[ FD ]
Line_15 $$ for (int i = 0; i < currentPhase; i++) -->Line_16 $$ progressFromCompletedPhases += getProgressWeightage(i)[ FD ]
Line_12 $$ if (fixedWeightageForAllPhases) -->Line_15 $$ for (int i = 0; i < currentPhase; i++) [ CD ]
Line_4 $$ if (phaseCount != 0) -->Line_5 $$ float subProgress = 0.0f[ CD ]
Line_5 $$ float subProgress = 0.0f-->Line_8 $$ subProgress = phase().getInternal()[ FD ]
Line_11 $$ float progressFromCompletedPhases = 0.0f-->Line_13 $$ progressFromCompletedPhases = progressPerPhase * currentPhase[ FD ]
Line_8 $$ subProgress = phase().getInternal()-->Line_9 $$ progressFromCurrentPhase = getProgressWeightage(currentPhase) * subProgress[ FD ]
Line_4 $$ if (phaseCount != 0) -->Line_21 $$ return progress[ CD ]
Line_2 $$ private synchronized float getInternal() -->Line_3 $$ int phaseCount = phases.size()[ CD ]
Line_15 $$ for (int i = 0; i < currentPhase; i++) -->Line_16 $$ progressFromCompletedPhases += getProgressWeightage(i)[ CD ]
Line_6 $$ float progressFromCurrentPhase = 0.0f-->Line_9 $$ progressFromCurrentPhase = getProgressWeightage(currentPhase) * subProgress[ FD ]
Line_4 $$ if (phaseCount != 0) -->Line_19 $$ return progressFromCompletedPhases + progressFromCurrentPhase[ CD ]
Line_12 $$ if (fixedWeightageForAllPhases) -->Line_13 $$ progressFromCompletedPhases = progressPerPhase * currentPhase[ CD ]
Line_2 $$ private synchronized float getInternal() -->Line_4 $$ if (phaseCount != 0) [ CD ]
Line_3 $$ int phaseCount = phases.size()-->Line_4 $$ if (phaseCount != 0) [ FD ]
