Line_2 $$ void clearVariants(boolean expected, int start) -->Line_9 $$ list.setSize(start)[ FD ]
Line_2 $$ void clearVariants(boolean expected, int start) -->Line_6 $$ for (int i = start, len = list.size(); i < len; i++) [ CD ]
Line_3 $$ MyList<Variant> list = expected ? variants : unexpected-->Line_7 $$ VARIANTS.recycle(list.get(i))[ FD ]
Line_3 $$ MyList<Variant> list = expected ? variants : unexpected-->Line_6 $$ for (int i = start, len = list.size(); i < len; i++) [ FD ]
Line_3 $$ MyList<Variant> list = expected ? variants : unexpected-->Line_4 $$ if (start < 0 || start >= list.size())[ FD ]
Line_6 $$ for (int i = start, len = list.size(); i < len; i++) -->Line_7 $$ VARIANTS.recycle(list.get(i))[ FD ]
Line_6 $$ for (int i = start, len = list.size(); i < len; i++) -->Line_7 $$ VARIANTS.recycle(list.get(i))[ CD ]
Line_2 $$ void clearVariants(boolean expected, int start) -->Line_9 $$ list.setSize(start)[ CD ]
Line_3 $$ MyList<Variant> list = expected ? variants : unexpected-->Line_9 $$ list.setSize(start)[ FD ]
Line_2 $$ void clearVariants(boolean expected, int start) -->Line_4 $$ if (start < 0 || start >= list.size())[ CD ]
Line_2 $$ void clearVariants(boolean expected, int start) -->Line_3 $$ MyList<Variant> list = expected ? variants : unexpected[ CD ]
Line_4 $$ if (start < 0 || start >= list.size())-->Line_5 $$ return[ CD ]
