Line_13 $$ taskQueue = new TaskQueue()-->Line_52 $$ Assert.assertSame(object4, taskQueue.poll())[ FD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_52 $$ Assert.assertSame(object4, taskQueue.poll())[ FD ]
Line_2 $$ public void testDrainTo() -->Line_18 $$ Set<Object> set = new HashSet()[ CD ]
Line_12 $$ Object object4 = new Object()-->Line_28 $$ object4 = new Object()[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_43 $$ taskQueue.drainTo(list)[ FD ]
Line_28 $$ object4 = new Object()-->Line_33 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_10 $$ Object object2 = new Object()-->Line_49 $$ Assert.assertSame(object2, list.get(1))[ FD ]
Line_11 $$ Object object3 = new Object()-->Line_32 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_31 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_25 $$ object1 = new Object()-->Line_30 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_14 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_11 $$ Object object3 = new Object()[ CD ]
Line_2 $$ public void testDrainTo() -->Line_31 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ CD ]
Line_27 $$ object3 = new Object()-->Line_32 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_34 $$ List<Object> list = new ArrayList<Object>() -->Line_49 $$ Assert.assertSame(object2, list.get(1))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_14 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_26 $$ object2 = new Object()-->Line_31 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_10 $$ Object object2 = new Object()-->Line_22 $$ Assert.assertTrue(set.contains(object2))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_51 $$ Assert.assertSame(object3, taskQueue.poll())[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_51 $$ Assert.assertSame(object3, taskQueue.poll())[ FD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_33 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_25 $$ object1 = new Object()-->Line_48 $$ Assert.assertSame(object1, list.get(0))[ FD ]
Line_9 $$ Object object1 = new Object()-->Line_21 $$ Assert.assertTrue(set.contains(object1))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_52 $$ Assert.assertSame(object4, taskQueue.poll())[ CD ]
Line_2 $$ public void testDrainTo() -->Line_29 $$ taskQueue = new TaskQueue()[ CD ]
Line_10 $$ Object object2 = new Object()-->Line_15 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_32 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_11 $$ Object object3 = new Object()-->Line_16 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_12 $$ Object object4 = new Object()-->Line_17 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_18 $$ Set<Object> set = new HashSet()-->Line_20 $$ Assert.assertEquals(4, set.size())[ FD ]
Line_2 $$ public void testDrainTo() -->Line_32 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ CD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_31 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_12 $$ Object object4 = new Object()-->Line_24 $$ Assert.assertTrue(set.contains(object4))[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_31 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_34 $$ List<Object> list = new ArrayList<Object>() -->Line_43 $$ taskQueue.drainTo(list)[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_32 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_21 $$ Assert.assertTrue(set.contains(object1))[ CD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_19 $$ taskQueue.drainTo(set)[ FD ]
Line_12 $$ Object object4 = new Object()-->Line_33 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_13 $$ taskQueue = new TaskQueue()[ CD ]
Line_2 $$ public void testDrainTo() -->Line_25 $$ object1 = new Object()[ CD ]
Line_2 $$ public void testDrainTo() -->Line_17 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ CD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_30 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_9 $$ Object object1 = new Object()-->Line_30 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_47 $$ Assert.assertEquals(2, list.size())[ CD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_17 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_12 $$ Object object4 = new Object()-->Line_52 $$ Assert.assertSame(object4, taskQueue.poll())[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_29 $$ taskQueue = new TaskQueue()[ FD ]
Line_9 $$ Object object1 = new Object()-->Line_25 $$ object1 = new Object()[ FD ]
Line_18 $$ Set<Object> set = new HashSet()-->Line_22 $$ Assert.assertTrue(set.contains(object2))[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_33 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_33 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_16 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ CD ]
Line_2 $$ public void testDrainTo() -->Line_51 $$ Assert.assertSame(object3, taskQueue.poll())[ CD ]
Line_2 $$ public void testDrainTo() -->Line_30 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ CD ]
Line_34 $$ List<Object> list = new ArrayList<Object>() -->Line_39 $$ return super.add(e)[ FD ]
Line_2 $$ public void testDrainTo() -->Line_20 $$ Assert.assertEquals(4, set.size())[ CD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_30 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_15 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_10 $$ Object object2 = new Object()-->Line_31 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_34 $$ List<Object> list = new ArrayList<Object>() [ CD ]
Line_34 $$ List<Object> list = new ArrayList<Object>() -->Line_48 $$ Assert.assertSame(object1, list.get(0))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_19 $$ taskQueue.drainTo(set)[ CD ]
Line_2 $$ public void testDrainTo() -->Line_10 $$ Object object2 = new Object()[ CD ]
Line_2 $$ public void testDrainTo() -->Line_26 $$ object2 = new Object()[ CD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_17 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ FD ]
Line_18 $$ Set<Object> set = new HashSet()-->Line_24 $$ Assert.assertTrue(set.contains(object4))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_15 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ CD ]
Line_26 $$ object2 = new Object()-->Line_49 $$ Assert.assertSame(object2, list.get(1))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_48 $$ Assert.assertSame(object1, list.get(0))[ CD ]
Line_2 $$ public void testDrainTo() -->Line_50 $$ Assert.assertEquals(2, taskQueue.size())[ CD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_32 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_50 $$ Assert.assertEquals(2, taskQueue.size())[ FD ]
Line_2 $$ public void testDrainTo() -->Line_14 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ CD ]
Line_2 $$ public void testDrainTo() -->Line_22 $$ Assert.assertTrue(set.contains(object2))[ CD ]
Line_18 $$ Set<Object> set = new HashSet()-->Line_21 $$ Assert.assertTrue(set.contains(object1))[ FD ]
Line_9 $$ Object object1 = new Object()-->Line_14 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_2 $$ public void testDrainTo() -->Line_12 $$ Object object4 = new Object()[ CD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_16 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_29 $$ taskQueue = new TaskQueue()[ FD ]
Line_2 $$ public void testDrainTo() -->Line_33 $$ Assert.assertTrue(taskQueue.offer(object4, new boolean[1]))[ CD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_50 $$ Assert.assertEquals(2, taskQueue.size())[ FD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_43 $$ taskQueue.drainTo(list)[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_13 $$ taskQueue = new TaskQueue()[ FD ]
Line_34 $$ List<Object> list = new ArrayList<Object>() -->Line_47 $$ Assert.assertEquals(2, list.size())[ FD ]
Line_18 $$ Set<Object> set = new HashSet()-->Line_23 $$ Assert.assertTrue(set.contains(object3))[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_43 $$ taskQueue.drainTo(list)[ FD ]
Line_27 $$ object3 = new Object()-->Line_51 $$ Assert.assertSame(object3, taskQueue.poll())[ FD ]
Line_2 $$ public void testDrainTo() -->Line_24 $$ Assert.assertTrue(set.contains(object4))[ CD ]
Line_34 $$ List<Object> list = new ArrayList<Object>() -->Line_36 $$ if (size() >= 2) [ CD ]
Line_34 $$ List<Object> list = new ArrayList<Object>() -->Line_39 $$ return super.add(e)[ CD ]
Line_2 $$ public void testDrainTo() -->Line_49 $$ Assert.assertSame(object2, list.get(1))[ CD ]
Line_2 $$ public void testDrainTo() -->Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()[ CD ]
Line_28 $$ object4 = new Object()-->Line_52 $$ Assert.assertSame(object4, taskQueue.poll())[ FD ]
Line_2 $$ public void testDrainTo() -->Line_23 $$ Assert.assertTrue(set.contains(object3))[ CD ]
Line_11 $$ Object object3 = new Object()-->Line_51 $$ Assert.assertSame(object3, taskQueue.poll())[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_16 $$ Assert.assertTrue(taskQueue.offer(object3, new boolean[1]))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_15 $$ Assert.assertTrue(taskQueue.offer(object2, new boolean[1]))[ FD ]
Line_11 $$ Object object3 = new Object()-->Line_23 $$ Assert.assertTrue(set.contains(object3))[ FD ]
Line_9 $$ Object object1 = new Object()-->Line_48 $$ Assert.assertSame(object1, list.get(0))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_52 $$ Assert.assertSame(object4, taskQueue.poll())[ FD ]
Line_2 $$ public void testDrainTo() -->Line_9 $$ Object object1 = new Object()[ CD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_50 $$ Assert.assertEquals(2, taskQueue.size())[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_30 $$ Assert.assertTrue(taskQueue.offer(object1, new boolean[1]))[ FD ]
Line_3 $$ TaskQueue<Object> taskQueue = new TaskQueue()-->Line_5 $$ taskQueue.drainTo(null)[ FD ]
Line_13 $$ taskQueue = new TaskQueue()-->Line_19 $$ taskQueue.drainTo(set)[ FD ]
Line_10 $$ Object object2 = new Object()-->Line_26 $$ object2 = new Object()[ FD ]
Line_2 $$ public void testDrainTo() -->Line_28 $$ object4 = new Object()[ CD ]
Line_29 $$ taskQueue = new TaskQueue()-->Line_51 $$ Assert.assertSame(object3, taskQueue.poll())[ FD ]
Line_18 $$ Set<Object> set = new HashSet()-->Line_19 $$ taskQueue.drainTo(set)[ FD ]
Line_2 $$ public void testDrainTo() -->Line_27 $$ object3 = new Object()[ CD ]
Line_11 $$ Object object3 = new Object()-->Line_27 $$ object3 = new Object()[ FD ]
