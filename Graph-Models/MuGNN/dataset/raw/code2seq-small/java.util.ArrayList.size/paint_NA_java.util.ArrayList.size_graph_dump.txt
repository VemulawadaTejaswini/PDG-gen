Line_2 $$ public void paint(Graphics g) -->Line_15 $$ Color bgColor[ CD ]
Line_38 $$ currBaseLine += myTextInsets.top-->Line_48 $$ currBaseLine += fontHeight[ FD ]
Line_17 $$ if (mySelected && myHasFocus) -->Line_18 $$ bgColor = UIUtil.getTreeSelectionBackground()[ CD ]
Line_16 $$ Color fgColor-->Line_19 $$ fgColor = UIUtil.getTreeSelectionForeground()[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_3 $$ int height = getHeight()[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_40 $$ g.setColor(fgColor)[ FD ]
Line_9 $$ if (myIcon != null) -->Line_13 $$ borderW -= myIcon.getIconWidth()[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_41 $$ UISettings.setupAntialiasing(g)[ CD ]
Line_45 $$ for (int i = 0; i < myWraps.size(); i++) -->Line_47 $$ g.drawString(currLine, myTextInsets.left, currBaseLine)[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_47 $$ g.drawString(currLine, myTextInsets.left, currBaseLine)[ FD ]
Line_12 $$ borderX += myIcon.getIconWidth()-->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ FD ]
Line_36 $$ int fontHeight = getCurrFontMetrics().getHeight()-->Line_48 $$ currBaseLine += fontHeight[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_17 $$ if (mySelected && myHasFocus) [ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_5 $$ int borderX = myLabelInsets.left - 1[ CD ]
Line_17 $$ if (mySelected && myHasFocus) -->Line_21 $$ bgColor = UIUtil.getTreeTextBackground()[ CD ]
Line_48 $$ currBaseLine += fontHeight-->Line_47 $$ g.drawString(currLine, myTextInsets.left, currBaseLine)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_28 $$ g.setColor(UIUtil.getTreeSelectionBorderColor())[ FD ]
Line_15 $$ Color bgColor-->Line_18 $$ bgColor = UIUtil.getTreeSelectionBackground()[ FD ]
Line_19 $$ fgColor = UIUtil.getTreeSelectionForeground()-->Line_40 $$ g.setColor(fgColor)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_45 $$ for (int i = 0; i < myWraps.size(); i++) [ CD ]
Line_37 $$ int currBaseLine = getCurrFontMetrics().getAscent()-->Line_43 $$ g.drawString(myPrefix, myTextInsets.left - myPrefixWidth + 1, currBaseLine)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_32 $$ recalculateWraps()[ CD ]
Line_37 $$ int currBaseLine = getCurrFontMetrics().getAscent()-->Line_47 $$ g.drawString(currLine, myTextInsets.left, currBaseLine)[ FD ]
Line_27 $$ if (mySelected) -->Line_29 $$ UIUtil.drawDottedRectangle(g, borderX, borderY, borderX + borderW - 1, borderY + borderH - 1)[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ FD ]
Line_24 $$ if (!(myTree.getUI() instanceof WideSelectionTreeUI) || !((WideSelectionTreeUI) myTree.getUI()).isWideSelection()) -->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_37 $$ int currBaseLine = getCurrFontMetrics().getAscent()[ CD ]
Line_16 $$ Color fgColor-->Line_22 $$ fgColor = getForeground()[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_25 $$ g.setColor(bgColor)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_40 $$ g.setColor(fgColor)[ CD ]
Line_10 $$ int verticalIconPosition = (height - myIcon.getIconHeight()) / 2-->Line_11 $$ myIcon.paintIcon(this, g, 0, verticalIconPosition)[ FD ]
Line_7 $$ int borderW = width - borderX - myLabelInsets.right + 2-->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_8 $$ int borderH = height - borderY - myLabelInsets.bottom + 1[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_43 $$ g.drawString(myPrefix, myTextInsets.left - myPrefixWidth + 1, currBaseLine)[ FD ]
Line_8 $$ int borderH = height - borderY - myLabelInsets.bottom + 1-->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_4 $$ int width = getWidth()[ CD ]
Line_45 $$ for (int i = 0; i < myWraps.size(); i++) -->Line_48 $$ currBaseLine += fontHeight[ CD ]
Line_15 $$ Color bgColor-->Line_25 $$ g.setColor(bgColor)[ FD ]
Line_5 $$ int borderX = myLabelInsets.left - 1-->Line_29 $$ UIUtil.drawDottedRectangle(g, borderX, borderY, borderX + borderW - 1, borderY + borderH - 1)[ FD ]
Line_19 $$ fgColor = UIUtil.getTreeSelectionForeground()-->Line_22 $$ fgColor = getForeground()[ FD ]
Line_9 $$ if (myIcon != null) -->Line_11 $$ myIcon.paintIcon(this, g, 0, verticalIconPosition)[ CD ]
Line_46 $$ String currLine = (String) myWraps.get(i)-->Line_47 $$ g.drawString(currLine, myTextInsets.left, currBaseLine)[ FD ]
Line_6 $$ int borderY = myLabelInsets.top - 1-->Line_29 $$ UIUtil.drawDottedRectangle(g, borderX, borderY, borderX + borderW - 1, borderY + borderH - 1)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_33 $$ if (myTooSmall) [ CD ]
Line_17 $$ if (mySelected && myHasFocus) -->Line_19 $$ fgColor = UIUtil.getTreeSelectionForeground()[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_39 $$ g.setFont(getFont())[ CD ]
Line_37 $$ int currBaseLine = getCurrFontMetrics().getAscent()-->Line_48 $$ currBaseLine += fontHeight[ FD ]
Line_24 $$ if (!(myTree.getUI() instanceof WideSelectionTreeUI) || !((WideSelectionTreeUI) myTree.getUI()).isWideSelection()) -->Line_25 $$ g.setColor(bgColor)[ CD ]
Line_7 $$ int borderW = width - borderX - myLabelInsets.right + 2-->Line_13 $$ borderW -= myIcon.getIconWidth()[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_16 $$ Color fgColor[ CD ]
Line_6 $$ int borderY = myLabelInsets.top - 1-->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ FD ]
Line_27 $$ if (mySelected) -->Line_28 $$ g.setColor(UIUtil.getTreeSelectionBorderColor())[ CD ]
Line_9 $$ if (myIcon != null) -->Line_12 $$ borderX += myIcon.getIconWidth()[ CD ]
Line_15 $$ Color bgColor-->Line_21 $$ bgColor = UIUtil.getTreeTextBackground()[ FD ]
Line_42 $$ if (!StringUtil.isEmpty(myPrefix)) -->Line_43 $$ g.drawString(myPrefix, myTextInsets.left - myPrefixWidth + 1, currBaseLine)[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_36 $$ int fontHeight = getCurrFontMetrics().getHeight()[ CD ]
Line_24 $$ if (!(myTree.getUI() instanceof WideSelectionTreeUI) || !((WideSelectionTreeUI) myTree.getUI()).isWideSelection()) -->Line_27 $$ if (mySelected) [ CD ]
Line_5 $$ int borderX = myLabelInsets.left - 1-->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_41 $$ UISettings.setupAntialiasing(g)[ FD ]
Line_12 $$ borderX += myIcon.getIconWidth()-->Line_29 $$ UIUtil.drawDottedRectangle(g, borderX, borderY, borderX + borderW - 1, borderY + borderH - 1)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_9 $$ if (myIcon != null) [ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_39 $$ g.setFont(getFont())[ FD ]
Line_38 $$ currBaseLine += myTextInsets.top-->Line_43 $$ g.drawString(myPrefix, myTextInsets.left - myPrefixWidth + 1, currBaseLine)[ FD ]
Line_17 $$ if (mySelected && myHasFocus) -->Line_22 $$ fgColor = getForeground()[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_24 $$ if (!(myTree.getUI() instanceof WideSelectionTreeUI) || !((WideSelectionTreeUI) myTree.getUI()).isWideSelection()) [ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_38 $$ currBaseLine += myTextInsets.top[ CD ]
Line_18 $$ bgColor = UIUtil.getTreeSelectionBackground()-->Line_25 $$ g.setColor(bgColor)[ FD ]
Line_37 $$ int currBaseLine = getCurrFontMetrics().getAscent()-->Line_38 $$ currBaseLine += myTextInsets.top[ FD ]
Line_21 $$ bgColor = UIUtil.getTreeTextBackground()-->Line_25 $$ g.setColor(bgColor)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_29 $$ UIUtil.drawDottedRectangle(g, borderX, borderY, borderX + borderW - 1, borderY + borderH - 1)[ FD ]
Line_16 $$ Color fgColor-->Line_40 $$ g.setColor(fgColor)[ FD ]
Line_33 $$ if (myTooSmall) -->Line_34 $$ return[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_7 $$ int borderW = width - borderX - myLabelInsets.right + 2[ CD ]
Line_2 $$ public void paint(Graphics g) -->Line_6 $$ int borderY = myLabelInsets.top - 1[ CD ]
Line_22 $$ fgColor = getForeground()-->Line_40 $$ g.setColor(fgColor)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_11 $$ myIcon.paintIcon(this, g, 0, verticalIconPosition)[ FD ]
Line_2 $$ public void paint(Graphics g) -->Line_42 $$ if (!StringUtil.isEmpty(myPrefix)) [ CD ]
Line_38 $$ currBaseLine += myTextInsets.top-->Line_47 $$ g.drawString(currLine, myTextInsets.left, currBaseLine)[ FD ]
Line_5 $$ int borderX = myLabelInsets.left - 1-->Line_12 $$ borderX += myIcon.getIconWidth()[ FD ]
Line_45 $$ for (int i = 0; i < myWraps.size(); i++) -->Line_46 $$ String currLine = (String) myWraps.get(i)[ CD ]
Line_18 $$ bgColor = UIUtil.getTreeSelectionBackground()-->Line_21 $$ bgColor = UIUtil.getTreeTextBackground()[ FD ]
Line_13 $$ borderW -= myIcon.getIconWidth()-->Line_26 $$ g.fillRect(borderX, borderY, borderW, borderH)[ FD ]
Line_45 $$ for (int i = 0; i < myWraps.size(); i++) -->Line_46 $$ String currLine = (String) myWraps.get(i)[ FD ]
Line_9 $$ if (myIcon != null) -->Line_10 $$ int verticalIconPosition = (height - myIcon.getIconHeight()) / 2[ CD ]
