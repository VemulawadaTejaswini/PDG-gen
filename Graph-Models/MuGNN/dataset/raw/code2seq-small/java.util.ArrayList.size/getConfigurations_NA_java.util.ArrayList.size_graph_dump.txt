Line_8 $$ final ChooseRunConfigurationPopup.ItemWrapper[] wrappers = ChooseRunConfigurationPopup.createSettingsList(project, new ExecutorProvider() -->Line_10 $$ return ExecutorRegistry.getInstance().getExecutorById(ToolWindowId.DEBUG)[ CD ]
Line_2 $$ private SearchResult getConfigurations(String pattern, int max) -->Line_24 $$ return configurations[ CD ]
Line_2 $$ private SearchResult getConfigurations(String pattern, int max) -->Line_13 $$ check()[ CD ]
Line_2 $$ private SearchResult getConfigurations(String pattern, int max) -->Line_8 $$ final ChooseRunConfigurationPopup.ItemWrapper[] wrappers = ChooseRunConfigurationPopup.createSettingsList(project, new ExecutorProvider() [ CD ]
Line_2 $$ private SearchResult getConfigurations(String pattern, int max) -->Line_16 $$ if (configurations.size() == max) [ FD ]
Line_3 $$ SearchResult configurations = new SearchResult()-->Line_20 $$ configurations.add(wrapper)[ FD ]
Line_15 $$ if (matcher.matches(wrapper.getText()) && !myListModel.contains(wrapper)) -->Line_16 $$ if (configurations.size() == max) [ CD ]
Line_16 $$ if (configurations.size() == max) -->Line_17 $$ configurations.needMore = true[ CD ]
Line_2 $$ private SearchResult getConfigurations(String pattern, int max) -->Line_3 $$ SearchResult configurations = new SearchResult()[ CD ]
Line_2 $$ private SearchResult getConfigurations(String pattern, int max) -->Line_4 $$ if (!Registry.is("search.everywhere.configurations")) [ CD ]
Line_15 $$ if (matcher.matches(wrapper.getText()) && !myListModel.contains(wrapper)) -->Line_20 $$ configurations.add(wrapper)[ CD ]
Line_3 $$ SearchResult configurations = new SearchResult()-->Line_16 $$ if (configurations.size() == max) [ FD ]
Line_4 $$ if (!Registry.is("search.everywhere.configurations")) -->Line_5 $$ return configurations[ CD ]
Line_2 $$ private SearchResult getConfigurations(String pattern, int max) -->Line_7 $$ MinusculeMatcher matcher = new MinusculeMatcher(pattern, NameUtil.MatchingCaseSensitivity.NONE)[ CD ]
Line_7 $$ MinusculeMatcher matcher = new MinusculeMatcher(pattern, NameUtil.MatchingCaseSensitivity.NONE)-->Line_15 $$ if (matcher.matches(wrapper.getText()) && !myListModel.contains(wrapper)) [ FD ]
