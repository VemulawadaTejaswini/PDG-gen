Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_6 $$ Preconditions.checkArgument(nnIds != null, "Could not determine namenode ids in namespace '%s'. " + "Please configure " + DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX, nsId), nsId)[ CD ]
Line_4 $$ Collection<String> nnIds = DFSUtil.getNameNodeIds(conf, nsId)-->Line_7 $$ Preconditions.checkArgument(nnIds.size() == 2, "Expected exactly 2 NameNodes in namespace '%s'. " + "Instead, got only %s (NN ids were '%s'", nsId, nnIds.size(), Joiner.on("','").join(nnIds))[ FD ]
Line_9 $$ ArrayList<String> nnSet = Lists.newArrayList(nnIds)-->Line_11 $$ assert nnSet.size() == 1[ FD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_8 $$ Preconditions.checkState(myNNId != null && !myNNId.isEmpty(), "Could not determine own NN ID in namespace '%s'. Please " + "ensure that this node is one of the machines listed as an " + "NN RPC address, or configure " + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY, nsId)[ FD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_10 $$ nnSet.remove(myNNId)[ CD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_7 $$ Preconditions.checkArgument(nnIds.size() == 2, "Expected exactly 2 NameNodes in namespace '%s'. " + "Instead, got only %s (NN ids were '%s'", nsId, nnIds.size(), Joiner.on("','").join(nnIds))[ FD ]
Line_4 $$ Collection<String> nnIds = DFSUtil.getNameNodeIds(conf, nsId)-->Line_9 $$ ArrayList<String> nnSet = Lists.newArrayList(nnIds)[ FD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_3 $$ Preconditions.checkArgument(nsId != null, "Could not determine namespace id. Please ensure that this " + "machine is one of the machines listed as a NN RPC address, " + "or configure " + DFSConfigKeys.DFS_NAMESERVICE_ID)[ CD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_8 $$ Preconditions.checkState(myNNId != null && !myNNId.isEmpty(), "Could not determine own NN ID in namespace '%s'. Please " + "ensure that this node is one of the machines listed as an " + "NN RPC address, or configure " + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY, nsId)[ CD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_12 $$ return nnSet.get(0)[ CD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_7 $$ Preconditions.checkArgument(nnIds.size() == 2, "Expected exactly 2 NameNodes in namespace '%s'. " + "Instead, got only %s (NN ids were '%s'", nsId, nnIds.size(), Joiner.on("','").join(nnIds))[ CD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_6 $$ Preconditions.checkArgument(nnIds != null, "Could not determine namenode ids in namespace '%s'. " + "Please configure " + DFSUtil.addKeySuffixes(DFSConfigKeys.DFS_HA_NAMENODES_KEY_PREFIX, nsId), nsId)[ FD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_4 $$ Collection<String> nnIds = DFSUtil.getNameNodeIds(conf, nsId)[ CD ]
Line_9 $$ ArrayList<String> nnSet = Lists.newArrayList(nnIds)-->Line_12 $$ return nnSet.get(0)[ FD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_4 $$ Collection<String> nnIds = DFSUtil.getNameNodeIds(conf, nsId)[ FD ]
Line_5 $$ String myNNId = conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY)-->Line_8 $$ Preconditions.checkState(myNNId != null && !myNNId.isEmpty(), "Could not determine own NN ID in namespace '%s'. Please " + "ensure that this node is one of the machines listed as an " + "NN RPC address, or configure " + DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY, nsId)[ FD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_5 $$ String myNNId = conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY)[ CD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_5 $$ String myNNId = conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY)[ FD ]
Line_9 $$ ArrayList<String> nnSet = Lists.newArrayList(nnIds)-->Line_10 $$ nnSet.remove(myNNId)[ FD ]
Line_5 $$ String myNNId = conf.get(DFSConfigKeys.DFS_HA_NAMENODE_ID_KEY)-->Line_10 $$ nnSet.remove(myNNId)[ FD ]
Line_2 $$ public static String getNameNodeIdOfOtherNode(Configuration conf, String nsId) -->Line_9 $$ ArrayList<String> nnSet = Lists.newArrayList(nnIds)[ CD ]
