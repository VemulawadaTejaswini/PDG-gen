Line_10 $$ Map<String, Map<String, InetSocketAddress>> addresses = DFSUtil.getHaNnWebHdfsAddresses(conf, scheme)-->Line_11 $$ Map<String, InetSocketAddress> addrs = addresses.get(uri.getHost())[ FD ]
Line_16 $$ InetSocketAddress[] r = new InetSocketAddress[ret.size()]-->Line_17 $$ return ret.toArray(r)[ FD ]
Line_6 $$ if (!HAUtil.isLogicalUri(conf, uri)) -->Line_8 $$ ret.add(addr)[ CD ]
Line_4 $$ final String scheme = uri.getScheme()-->Line_10 $$ Map<String, Map<String, InetSocketAddress>> addresses = DFSUtil.getHaNnWebHdfsAddresses(conf, scheme)[ FD ]
Line_5 $$ ArrayList<InetSocketAddress> ret = new ArrayList<InetSocketAddress>()-->Line_17 $$ return ret.toArray(r)[ FD ]
Line_11 $$ Map<String, InetSocketAddress> addrs = addresses.get(uri.getHost())-->Line_12 $$ for (InetSocketAddress addr : addrs.values()) [ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_6 $$ if (!HAUtil.isLogicalUri(conf, uri)) [ FD ]
Line_2 $$ private InetSocketAddress[] resolveNNAddr() throws IOException -->Line_17 $$ return ret.toArray(r)[ CD ]
Line_6 $$ if (!HAUtil.isLogicalUri(conf, uri)) -->Line_11 $$ Map<String, InetSocketAddress> addrs = addresses.get(uri.getHost())[ CD ]
Line_6 $$ if (!HAUtil.isLogicalUri(conf, uri)) -->Line_10 $$ Map<String, Map<String, InetSocketAddress>> addresses = DFSUtil.getHaNnWebHdfsAddresses(conf, scheme)[ CD ]
Line_7 $$ InetSocketAddress addr = NetUtils.createSocketAddr(uri.getAuthority(), getDefaultPort())-->Line_8 $$ ret.add(addr)[ FD ]
Line_5 $$ ArrayList<InetSocketAddress> ret = new ArrayList<InetSocketAddress>()-->Line_13 $$ ret.add(addr)[ FD ]
Line_2 $$ private InetSocketAddress[] resolveNNAddr() throws IOException -->Line_4 $$ final String scheme = uri.getScheme()[ CD ]
Line_5 $$ ArrayList<InetSocketAddress> ret = new ArrayList<InetSocketAddress>()-->Line_8 $$ ret.add(addr)[ FD ]
Line_2 $$ private InetSocketAddress[] resolveNNAddr() throws IOException -->Line_3 $$ Configuration conf = getConf()[ CD ]
Line_6 $$ if (!HAUtil.isLogicalUri(conf, uri)) -->Line_7 $$ InetSocketAddress addr = NetUtils.createSocketAddr(uri.getAuthority(), getDefaultPort())[ CD ]
Line_2 $$ private InetSocketAddress[] resolveNNAddr() throws IOException -->Line_6 $$ if (!HAUtil.isLogicalUri(conf, uri)) [ CD ]
Line_3 $$ Configuration conf = getConf()-->Line_10 $$ Map<String, Map<String, InetSocketAddress>> addresses = DFSUtil.getHaNnWebHdfsAddresses(conf, scheme)[ FD ]
Line_5 $$ ArrayList<InetSocketAddress> ret = new ArrayList<InetSocketAddress>()-->Line_16 $$ InetSocketAddress[] r = new InetSocketAddress[ret.size()][ FD ]
Line_2 $$ private InetSocketAddress[] resolveNNAddr() throws IOException -->Line_16 $$ InetSocketAddress[] r = new InetSocketAddress[ret.size()][ CD ]
Line_7 $$ InetSocketAddress addr = NetUtils.createSocketAddr(uri.getAuthority(), getDefaultPort())-->Line_13 $$ ret.add(addr)[ FD ]
Line_2 $$ private InetSocketAddress[] resolveNNAddr() throws IOException -->Line_5 $$ ArrayList<InetSocketAddress> ret = new ArrayList<InetSocketAddress>()[ CD ]
