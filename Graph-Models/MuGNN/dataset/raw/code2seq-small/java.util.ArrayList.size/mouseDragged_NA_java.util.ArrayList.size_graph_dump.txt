Line_2 $$ public void mouseDragged(MouseEvent event) -->Line_3 $$ if (dragIndex == -1 || dragIndex == 0 || dragIndex == percentages.size() - 1)[ CD ]
Line_5 $$ float percent = (event.getX() - gradientX) / (float) gradientWidth-->Line_8 $$ percentages.set(dragIndex, percent)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent event) -->Line_7 $$ percent = Math.min(percent, percentages.get(dragIndex + 1) - 0.01f)[ CD ]
Line_2 $$ public void mouseDragged(MouseEvent event) -->Line_5 $$ float percent = (event.getX() - gradientX) / (float) gradientWidth[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent event) -->Line_6 $$ percent = Math.max(percent, percentages.get(dragIndex - 1) + 0.01f)[ CD ]
Line_6 $$ percent = Math.max(percent, percentages.get(dragIndex - 1) + 0.01f)-->Line_8 $$ percentages.set(dragIndex, percent)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent event) -->Line_5 $$ float percent = (event.getX() - gradientX) / (float) gradientWidth[ CD ]
Line_5 $$ float percent = (event.getX() - gradientX) / (float) gradientWidth-->Line_6 $$ percent = Math.max(percent, percentages.get(dragIndex - 1) + 0.01f)[ FD ]
Line_7 $$ percent = Math.min(percent, percentages.get(dragIndex + 1) - 0.01f)-->Line_8 $$ percentages.set(dragIndex, percent)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent event) -->Line_9 $$ repaint()[ CD ]
Line_3 $$ if (dragIndex == -1 || dragIndex == 0 || dragIndex == percentages.size() - 1)-->Line_4 $$ return[ CD ]
Line_6 $$ percent = Math.max(percent, percentages.get(dragIndex - 1) + 0.01f)-->Line_7 $$ percent = Math.min(percent, percentages.get(dragIndex + 1) - 0.01f)[ FD ]
Line_5 $$ float percent = (event.getX() - gradientX) / (float) gradientWidth-->Line_7 $$ percent = Math.min(percent, percentages.get(dragIndex + 1) - 0.01f)[ FD ]
Line_2 $$ public void mouseDragged(MouseEvent event) -->Line_8 $$ percentages.set(dragIndex, percent)[ CD ]
