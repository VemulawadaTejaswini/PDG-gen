Line_16 $$ ArrayList<Path> toList = new ArrayList<Path>()-->Line_17 $$ toList.add(new Path("/"))[ FD ]
Line_11 $$ for (int i = 0; i < 2; i++) -->Line_16 $$ ArrayList<Path> toList = new ArrayList<Path>()[ CD ]
Line_2 $$ public void testUpgradeFromRel1ReservedImage() throws Exception -->Line_5 $$ final Configuration conf = new Configuration()[ CD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).format(false).startupOption(StartupOption.UPGRADE).numDataNodes(0).build()-->Line_9 $$ DistributedFileSystem dfs = cluster.getFileSystem()[ FD ]
Line_37 $$ if (cluster != null) -->Line_38 $$ cluster.shutdown()[ CD ]
Line_11 $$ for (int i = 0; i < 2; i++) -->Line_34 $$ assertEquals("Found an unexpected path while listing filesystem", found.size(), expected.length)[ CD ]
Line_12 $$ if (i == 1) -->Line_13 $$ cluster.finalizeCluster(conf)[ CD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).format(false).startupOption(StartupOption.UPGRADE).numDataNodes(0).build()-->Line_37 $$ if (cluster != null) [ FD ]
Line_22 $$ for (FileStatus status : statuses) -->Line_27 $$ toList.add(status.getPath())[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_13 $$ cluster.finalizeCluster(conf)[ FD ]
Line_16 $$ ArrayList<Path> toList = new ArrayList<Path>()-->Line_19 $$ while (!toList.isEmpty()) [ FD ]
Line_2 $$ public void testUpgradeFromRel1ReservedImage() throws Exception -->Line_3 $$ unpackStorage(HADOOP1_RESERVED_IMAGE, HADOOP_DFS_DIR_TXT)[ CD ]
Line_16 $$ ArrayList<Path> toList = new ArrayList<Path>()-->Line_20 $$ Path p = toList.remove(0)[ FD ]
Line_11 $$ for (int i = 0; i < 2; i++) -->Line_12 $$ if (i == 1) [ CD ]
Line_12 $$ if (i == 1) -->Line_14 $$ cluster.restartNameNode(true)[ CD ]
Line_19 $$ while (!toList.isEmpty()) -->Line_20 $$ Path p = toList.remove(0)[ CD ]
Line_26 $$ if (status.isDirectory()) -->Line_27 $$ toList.add(status.getPath())[ CD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).format(false).startupOption(StartupOption.UPGRADE).numDataNodes(0).build()[ FD ]
Line_22 $$ for (FileStatus status : statuses) -->Line_23 $$ final String path = status.getPath().toUri().getPath()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).format(false).startupOption(StartupOption.UPGRADE).numDataNodes(0).build()-->Line_14 $$ cluster.restartNameNode(true)[ FD ]
Line_23 $$ final String path = status.getPath().toUri().getPath()-->Line_25 $$ found.add(path)[ FD ]
Line_19 $$ while (!toList.isEmpty()) -->Line_21 $$ FileStatus[] statuses = dfs.listStatus(p)[ CD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_14 $$ cluster.restartNameNode(true)[ FD ]
Line_11 $$ for (int i = 0; i < 2; i++) -->Line_18 $$ ArrayList<String> found = new ArrayList<String>()[ CD ]
Line_18 $$ ArrayList<String> found = new ArrayList<String>()-->Line_25 $$ found.add(path)[ FD ]
Line_16 $$ ArrayList<Path> toList = new ArrayList<Path>()-->Line_27 $$ toList.add(status.getPath())[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_9 $$ DistributedFileSystem dfs = cluster.getFileSystem()[ FD ]
Line_5 $$ final Configuration conf = new Configuration()-->Line_13 $$ cluster.finalizeCluster(conf)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_37 $$ if (cluster != null) [ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).format(false).startupOption(StartupOption.UPGRADE).numDataNodes(0).build()-->Line_38 $$ cluster.shutdown()[ FD ]
Line_11 $$ for (int i = 0; i < 2; i++) -->Line_17 $$ toList.add(new Path("/"))[ CD ]
Line_11 $$ for (int i = 0; i < 2; i++) -->Line_19 $$ while (!toList.isEmpty()) [ CD ]
Line_20 $$ Path p = toList.remove(0)-->Line_21 $$ FileStatus[] statuses = dfs.listStatus(p)[ FD ]
Line_2 $$ public void testUpgradeFromRel1ReservedImage() throws Exception -->Line_4 $$ MiniDFSCluster cluster = null[ CD ]
Line_11 $$ for (int i = 0; i < 2; i++) -->Line_12 $$ if (i == 1) [ FD ]
Line_18 $$ ArrayList<String> found = new ArrayList<String>()-->Line_32 $$ assertTrue("Did not find expected path " + s, found.contains(s))[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).format(false).startupOption(StartupOption.UPGRADE).numDataNodes(0).build()-->Line_13 $$ cluster.finalizeCluster(conf)[ FD ]
Line_9 $$ DistributedFileSystem dfs = cluster.getFileSystem()-->Line_21 $$ FileStatus[] statuses = dfs.listStatus(p)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_38 $$ cluster.shutdown()[ FD ]
Line_22 $$ for (FileStatus status : statuses) -->Line_26 $$ if (status.isDirectory()) [ FD ]
Line_18 $$ ArrayList<String> found = new ArrayList<String>()-->Line_34 $$ assertEquals("Found an unexpected path while listing filesystem", found.size(), expected.length)[ FD ]
