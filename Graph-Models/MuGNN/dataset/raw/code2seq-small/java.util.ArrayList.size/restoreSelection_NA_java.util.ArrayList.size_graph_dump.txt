Line_7 $$ int leadIndex = -1-->Line_14 $$ leadIndex = index[ FD ]
Line_4 $$ final ListSelectionModel selectionModel = myList.getSelectionModel()-->Line_12 $$ selectionModel.addSelectionInterval(index, index)[ FD ]
Line_13 $$ if (o == selection.myLeadSelection) -->Line_14 $$ leadIndex = index[ CD ]
Line_8 $$ for (int i = 0; i < selectedObjects.size(); i++) -->Line_10 $$ final int index = myModel.indexOf(o)[ CD ]
Line_10 $$ final int index = myModel.indexOf(o)-->Line_12 $$ selectionModel.addSelectionInterval(index, index)[ FD ]
Line_2 $$ private void restoreSelection(final SelectionInfo selection) -->Line_4 $$ final ListSelectionModel selectionModel = myList.getSelectionModel()[ CD ]
Line_6 $$ if (!selectedObjects.isEmpty()) -->Line_8 $$ for (int i = 0; i < selectedObjects.size(); i++) [ CD ]
Line_4 $$ final ListSelectionModel selectionModel = myList.getSelectionModel()-->Line_18 $$ if (selectionModel.getMinSelectionIndex() == -1) [ FD ]
Line_2 $$ private void restoreSelection(final SelectionInfo selection) -->Line_6 $$ if (!selectedObjects.isEmpty()) [ CD ]
Line_2 $$ private void restoreSelection(final SelectionInfo selection) -->Line_3 $$ final ArrayList<Object> selectedObjects = selection.mySelectedObjects[ CD ]
Line_8 $$ for (int i = 0; i < selectedObjects.size(); i++) -->Line_9 $$ final Object o = selectedObjects.get(i)[ CD ]
Line_4 $$ final ListSelectionModel selectionModel = myList.getSelectionModel()-->Line_5 $$ selectionModel.clearSelection()[ FD ]
Line_3 $$ final ArrayList<Object> selectedObjects = selection.mySelectedObjects-->Line_9 $$ final Object o = selectedObjects.get(i)[ FD ]
Line_3 $$ final ArrayList<Object> selectedObjects = selection.mySelectedObjects-->Line_8 $$ for (int i = 0; i < selectedObjects.size(); i++) [ FD ]
Line_8 $$ for (int i = 0; i < selectedObjects.size(); i++) -->Line_9 $$ final Object o = selectedObjects.get(i)[ FD ]
Line_19 $$ final int toSelect = Math.min(selection.myLeadSelectionIndex, myModel.getSize() - 1)-->Line_21 $$ myList.setSelectedIndex(toSelect)[ FD ]
Line_14 $$ leadIndex = index-->Line_23 $$ if (leadIndex != -1) [ FD ]
Line_14 $$ leadIndex = index-->Line_24 $$ selectionModel.setLeadSelectionIndex(leadIndex)[ FD ]
Line_23 $$ if (leadIndex != -1) -->Line_24 $$ selectionModel.setLeadSelectionIndex(leadIndex)[ CD ]
Line_19 $$ final int toSelect = Math.min(selection.myLeadSelectionIndex, myModel.getSize() - 1)-->Line_20 $$ if (toSelect >= 0) [ FD ]
Line_2 $$ private void restoreSelection(final SelectionInfo selection) -->Line_5 $$ selectionModel.clearSelection()[ CD ]
Line_9 $$ final Object o = selectedObjects.get(i)-->Line_13 $$ if (o == selection.myLeadSelection) [ FD ]
Line_9 $$ final Object o = selectedObjects.get(i)-->Line_10 $$ final int index = myModel.indexOf(o)[ FD ]
Line_11 $$ if (index > -1) -->Line_13 $$ if (o == selection.myLeadSelection) [ CD ]
Line_18 $$ if (selectionModel.getMinSelectionIndex() == -1) -->Line_20 $$ if (toSelect >= 0) [ CD ]
Line_6 $$ if (!selectedObjects.isEmpty()) -->Line_18 $$ if (selectionModel.getMinSelectionIndex() == -1) [ CD ]
Line_6 $$ if (!selectedObjects.isEmpty()) -->Line_7 $$ int leadIndex = -1[ CD ]
Line_10 $$ final int index = myModel.indexOf(o)-->Line_11 $$ if (index > -1) [ FD ]
Line_20 $$ if (toSelect >= 0) -->Line_21 $$ myList.setSelectedIndex(toSelect)[ CD ]
Line_3 $$ final ArrayList<Object> selectedObjects = selection.mySelectedObjects-->Line_6 $$ if (!selectedObjects.isEmpty()) [ FD ]
Line_8 $$ for (int i = 0; i < selectedObjects.size(); i++) -->Line_11 $$ if (index > -1) [ CD ]
Line_10 $$ final int index = myModel.indexOf(o)-->Line_14 $$ leadIndex = index[ FD ]
Line_4 $$ final ListSelectionModel selectionModel = myList.getSelectionModel()-->Line_24 $$ selectionModel.setLeadSelectionIndex(leadIndex)[ FD ]
Line_18 $$ if (selectionModel.getMinSelectionIndex() == -1) -->Line_23 $$ if (leadIndex != -1) [ CD ]
Line_18 $$ if (selectionModel.getMinSelectionIndex() == -1) -->Line_19 $$ final int toSelect = Math.min(selection.myLeadSelectionIndex, myModel.getSize() - 1)[ CD ]
Line_7 $$ int leadIndex = -1-->Line_23 $$ if (leadIndex != -1) [ FD ]
Line_11 $$ if (index > -1) -->Line_12 $$ selectionModel.addSelectionInterval(index, index)[ CD ]
Line_7 $$ int leadIndex = -1-->Line_24 $$ selectionModel.setLeadSelectionIndex(leadIndex)[ FD ]
