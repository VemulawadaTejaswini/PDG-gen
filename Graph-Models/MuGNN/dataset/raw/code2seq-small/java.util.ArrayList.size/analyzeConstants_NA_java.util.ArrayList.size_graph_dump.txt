Line_3 $$ ArrayList a = new ArrayList()-->Line_23 $$ constants = (ConstantAnalysis[]) a.toArray(constants)[ FD ]
Line_4 $$ for (int i = 0; i < fields.length; ++i) -->Line_8 $$ if (!type.isPrimitive() && type != java.lang.String.class) [ CD ]
Line_2 $$ protected void analyzeConstants() throws RMIIIOPViolationException -->Line_3 $$ ArrayList a = new ArrayList()[ CD ]
Line_3 $$ ArrayList a = new ArrayList()-->Line_20 $$ a.add(new ConstantAnalysis(name, type, value))[ FD ]
Line_4 $$ for (int i = 0; i < fields.length; ++i) -->Line_20 $$ a.add(new ConstantAnalysis(name, type, value))[ CD ]
Line_3 $$ ArrayList a = new ArrayList()-->Line_22 $$ constants = new ConstantAnalysis[a.size()][ FD ]
Line_4 $$ for (int i = 0; i < fields.length; ++i) -->Line_5 $$ if ((f_flags[i] & F_CONSTANT) == 0)[ CD ]
Line_4 $$ for (int i = 0; i < fields.length; ++i) -->Line_13 $$ String name = fields[i].getName()[ CD ]
Line_4 $$ for (int i = 0; i < fields.length; ++i) -->Line_14 $$ Object value[ CD ]
Line_14 $$ Object value-->Line_16 $$ value = fields[i].get(null)[ FD ]
Line_2 $$ protected void analyzeConstants() throws RMIIIOPViolationException -->Line_4 $$ for (int i = 0; i < fields.length; ++i) [ CD ]
Line_7 $$ Class type = fields[i].getType()-->Line_8 $$ if (!type.isPrimitive() && type != java.lang.String.class) [ FD ]
Line_8 $$ if (!type.isPrimitive() && type != java.lang.String.class) -->Line_9 $$ if (cls.isInterface())[ CD ]
Line_4 $$ for (int i = 0; i < fields.length; ++i) -->Line_7 $$ Class type = fields[i].getType()[ CD ]
