Line_2 $$ public void init() -->Line_6 $$ defaultEditor.setClickCountToStart(1)[ CD ]
Line_35 $$ if (rows.length > 0) -->Line_46 $$ myTableModel.fireTableRowsUpdated(rows[0], rows[rows.length - 1])[ CD ]
Line_2 $$ public void init() -->Line_65 $$ JPanel listPanel = ToolbarDecorator.createDecorator(myTable).disableAddAction().disableRemoveAction().createPanel()[ CD ]
Line_2 $$ public void init() -->Line_21 $$ myTable.setShowGrid(false)[ CD ]
Line_2 $$ public void init() -->Line_8 $$ myTable.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION)[ CD ]
Line_36 $$ boolean valueToBeSet = false-->Line_44 $$ myVariableData[row].passAsParameter = valueToBeSet[ FD ]
Line_10 $$ myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() -->Line_17 $$ return this[ CD ]
Line_39 $$ valueToBeSet = true-->Line_44 $$ myVariableData[row].passAsParameter = valueToBeSet[ FD ]
Line_2 $$ public void init() -->Line_66 $$ add(listPanel, BorderLayout.CENTER)[ CD ]
Line_2 $$ public void init() -->Line_5 $$ DefaultCellEditor defaultEditor = (DefaultCellEditor) myTable.getDefaultEditor(Object.class)[ CD ]
Line_57 $$ if (!myTable.isEditing()) -->Line_58 $$ int row = myTable.getSelectedRow()[ CD ]
Line_2 $$ public void init() -->Line_67 $$ if (myVariableData.length > 1) [ CD ]
Line_57 $$ if (!myTable.isEditing()) -->Line_59 $$ if (row >= 0 && row < myTableModel.getRowCount()) [ CD ]
Line_10 $$ myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() -->Line_14 $$ super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column)[ FD ]
Line_67 $$ if (myVariableData.length > 1) -->Line_68 $$ myTable.getSelectionModel().setSelectionInterval(0, 0)[ CD ]
Line_36 $$ boolean valueToBeSet = false-->Line_39 $$ valueToBeSet = true[ FD ]
Line_2 $$ public void init() -->Line_7 $$ myTable.setTableHeader(null)[ CD ]
Line_28 $$ actionMap.put("enable_disable", new AbstractAction() -->Line_32 $$ if (myTable.isEditing())[ CD ]
Line_32 $$ if (myTable.isEditing())-->Line_33 $$ return[ CD ]
Line_35 $$ if (rows.length > 0) -->Line_47 $$ TableUtil.selectRows(myTable, rows)[ CD ]
Line_34 $$ int[] rows = myTable.getSelectedRows()-->Line_47 $$ TableUtil.selectRows(myTable, rows)[ FD ]
Line_58 $$ int row = myTable.getSelectedRow()-->Line_60 $$ TableUtil.editCellAt(myTable, row, MyTableModel.PARAMETER_NAME_COLUMN)[ FD ]
Line_2 $$ public void init() -->Line_9 $$ TableUtil.setupCheckboxColumn(myTable, MyTableModel.CHECKMARK_COLUMN)[ CD ]
Line_35 $$ if (rows.length > 0) -->Line_36 $$ boolean valueToBeSet = false[ CD ]
Line_10 $$ myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() -->Line_16 $$ setText(data.name)[ CD ]
Line_5 $$ DefaultCellEditor defaultEditor = (DefaultCellEditor) myTable.getDefaultEditor(Object.class)-->Line_6 $$ defaultEditor.setClickCountToStart(1)[ FD ]
Line_2 $$ public void init() -->Line_28 $$ actionMap.put("enable_disable", new AbstractAction() [ CD ]
Line_28 $$ actionMap.put("enable_disable", new AbstractAction() -->Line_35 $$ if (rows.length > 0) [ CD ]
Line_2 $$ public void init() -->Line_10 $$ myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() [ CD ]
Line_38 $$ if (!myVariableData[row].passAsParameter) -->Line_39 $$ valueToBeSet = true[ CD ]
Line_10 $$ myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() -->Line_60 $$ TableUtil.editCellAt(myTable, row, MyTableModel.PARAMETER_NAME_COLUMN)[ FD ]
Line_10 $$ myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() -->Line_15 $$ AbstractVariableData data = myVariableData[row][ CD ]
Line_2 $$ public void init() -->Line_25 $$ inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0), "enable_disable")[ CD ]
Line_59 $$ if (row >= 0 && row < myTableModel.getRowCount()) -->Line_60 $$ TableUtil.editCellAt(myTable, row, MyTableModel.PARAMETER_NAME_COLUMN)[ CD ]
Line_37 $$ for (int row : rows) -->Line_60 $$ TableUtil.editCellAt(myTable, row, MyTableModel.PARAMETER_NAME_COLUMN)[ FD ]
Line_2 $$ public void init() -->Line_22 $$ myTable.setIntercellSpacing(JBUI.emptySize())[ CD ]
Line_2 $$ public void init() -->Line_20 $$ myTable.setPreferredScrollableViewportSize(new Dimension(250, myTable.getRowHeight() * 5))[ CD ]
Line_53 $$ actionMap.put("edit_parameter_name", new AbstractAction() -->Line_57 $$ if (!myTable.isEditing()) [ CD ]
Line_10 $$ myTable.getColumnModel().getColumn(MyTableModel.PARAMETER_NAME_COLUMN).setCellRenderer(new DefaultTableCellRenderer() -->Line_14 $$ super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column)[ CD ]
Line_2 $$ public void init() -->Line_53 $$ actionMap.put("edit_parameter_name", new AbstractAction() [ CD ]
Line_28 $$ actionMap.put("enable_disable", new AbstractAction() -->Line_34 $$ int[] rows = myTable.getSelectedRows()[ CD ]
