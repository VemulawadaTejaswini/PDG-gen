Line_87 $$ hasException = false-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_2 $$ public void testSpaceCommands() throws Exception -->Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()[ CD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_13 $$ int fileSpace = fileLen * replication-->Line_42 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_33 $$ boolean hasException = false-->Line_68 $$ assertTrue(hasException)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_19 $$ final Path quotaDir20 = new Path("/nqdir0/qdir1/qdir20")-->Line_113 $$ dfs.setQuota(quotaDir20, HdfsConstants.QUOTA_DONT_SET, 10 * fileSpace)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_55 $$ final Path file2 = new Path(dstPath, "fileDir/file2")-->Line_100 $$ dfs.setReplication(file2, (short) (replication - 1))[ FD ]
Line_93 $$ hasException = true-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_37 $$ hasException = true-->Line_93 $$ hasException = true[ FD ]
Line_2 $$ public void testSpaceCommands() throws Exception -->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_CONTENT_SUMMARY_LIMIT_KEY, 2)[ CD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_16 $$ dfs.setQuota(quotaDir1, HdfsConstants.QUOTA_DONT_SET, 4 * fileSpace)[ FD ]
Line_86 $$ out = dfs.append(file2)-->Line_91 $$ out.close()[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_70 $$ assertTrue(dfs.exists(dstPath))[ FD ]
Line_47 $$ Path srcPath = new Path(quotaDir21, "nqdir32")-->Line_64 $$ assertFalse(dfs.rename(dstPath, srcPath))[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_120 $$ assertTrue(dfs.mkdirs(quotaDir2053_A))[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_33 $$ boolean hasException = false-->Line_87 $$ hasException = false[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_14 $$ assertTrue(dfs.mkdirs(new Path("/nqdir0/qdir1/qdir20/nqdir30")))[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_100 $$ dfs.setReplication(file2, (short) (replication - 1))[ FD ]
Line_2 $$ public void testSpaceCommands() throws Exception -->Line_7 $$ final FileSystem fs = cluster.getFileSystem()[ CD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_105 $$ dfs.setReplication(file2, (short) (replication + 1))[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_64 $$ assertFalse(dfs.rename(dstPath, srcPath))[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_33 $$ boolean hasException = false-->Line_66 $$ hasException = true[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_40 $$ assertTrue(dfs.delete(new Path(quotaDir21, "nqdir33"), true))[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_44 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_11 $$ int fileLen = 1024-->Line_97 $$ file2Len += fileLen[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_43 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_12 $$ short replication = 3-->Line_57 $$ DFSTestUtil.createFile(dfs, file2, file2Len, replication, 0)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_45 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_117 $$ final Path quotaDir2053 = new Path("/hdfs-2053")-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_123 $$ final Path quotaDir2053_C = new Path(quotaDir2053, "C")-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_19 $$ final Path quotaDir20 = new Path("/nqdir0/qdir1/qdir20")-->Line_21 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_93 $$ hasException = true-->Line_103 $$ hasException = false[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_43 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_27 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_13 $$ int fileSpace = fileLen * replication-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_15 $$ final Path quotaDir1 = new Path("/nqdir0/qdir1")-->Line_16 $$ dfs.setQuota(quotaDir1, HdfsConstants.QUOTA_DONT_SET, 4 * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_41 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_56 $$ int file2Len = 2 * fileLen-->Line_97 $$ file2Len += fileLen[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_37 $$ hasException = true-->Line_68 $$ assertTrue(hasException)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_55 $$ final Path file2 = new Path(dstPath, "fileDir/file2")-->Line_105 $$ dfs.setReplication(file2, (short) (replication + 1))[ FD ]
Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_119 $$ final Path quotaDir2053_A = new Path(quotaDir2053, "A")-->Line_120 $$ assertTrue(dfs.mkdirs(quotaDir2053_A))[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_3 $$ final Configuration conf = new HdfsConfiguration()-->Line_4 $$ conf.set(DFSConfigKeys.DFS_BLOCK_SIZE_KEY, "512")[ FD ]
Line_33 $$ boolean hasException = false-->Line_107 $$ hasException = true[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_11 $$ int fileLen = 1024-->Line_30 $$ DFSTestUtil.createFile(dfs, new Path(tempPath, "fileDir/file1"), fileLen, replication, 0)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_64 $$ assertFalse(dfs.rename(dstPath, srcPath))[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_66 $$ hasException = true-->Line_103 $$ hasException = false[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_137 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir2053_C, "fileC"), sizeFactorC * fileLen, replication, 0)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_12 $$ short replication = 3-->Line_131 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir2053_A, "fileA"), sizeFactorA * fileLen, replication, 0)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_11 $$ int fileLen = 1024-->Line_82 $$ file2Len += fileLen[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_48 $$ assertTrue(dfs.rename(srcPath, dstPath))[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_2 $$ public void testSpaceCommands() throws Exception -->Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs[ CD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_12 $$ short replication = 3-->Line_137 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir2053_C, "fileC"), sizeFactorC * fileLen, replication, 0)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_62 $$ hasException = false-->Line_107 $$ hasException = true[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_48 $$ assertTrue(dfs.rename(srcPath, dstPath))[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_29 $$ assertTrue(dfs.mkdirs(tempPath))[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_13 $$ int fileSpace = fileLen * replication-->Line_32 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_79 $$ OutputStream out = dfs.append(file2)-->Line_89 $$ out.write(new byte[fileLen + 1024])[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_128 $$ dfs.setQuota(quotaDir2053_C, HdfsConstants.QUOTA_DONT_SET, (sizeFactorC + 1) * fileSpace)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_31 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_22 $$ assertEquals(c.getSpaceQuota(), 6 * fileSpace)[ FD ]
Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_3 $$ final Configuration conf = new HdfsConfiguration()-->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_CONTENT_SUMMARY_LIMIT_KEY, 2)[ FD ]
Line_87 $$ hasException = false-->Line_103 $$ hasException = false[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_79 $$ OutputStream out = dfs.append(file2)-->Line_86 $$ out = dfs.append(file2)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_45 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_86 $$ out = dfs.append(file2)-->Line_89 $$ out.write(new byte[fileLen + 1024])[ FD ]
Line_66 $$ hasException = true-->Line_93 $$ hasException = true[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_12 $$ short replication = 3-->Line_30 $$ DFSTestUtil.createFile(dfs, new Path(tempPath, "fileDir/file1"), fileLen, replication, 0)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_42 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_55 $$ final Path file2 = new Path(dstPath, "fileDir/file2")-->Line_86 $$ out = dfs.append(file2)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_79 $$ OutputStream out = dfs.append(file2)-->Line_94 $$ IOUtils.closeStream(out)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_7 $$ final FileSystem fs = cluster.getFileSystem()[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_112 $$ dfs.setQuota(quotaDir1, HdfsConstants.QUOTA_DONT_SET, 10 * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_37 $$ hasException = true-->Line_103 $$ hasException = false[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_47 $$ Path srcPath = new Path(quotaDir21, "nqdir32")-->Line_48 $$ assertTrue(dfs.rename(srcPath, dstPath))[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_41 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_37 $$ hasException = true-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_55 $$ final Path file2 = new Path(dstPath, "fileDir/file2")-->Line_114 $$ dfs.setReplication(file2, (short) (replication + 1))[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_19 $$ final Path quotaDir20 = new Path("/nqdir0/qdir1/qdir20")-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_13 $$ int fileSpace = fileLen * replication-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_25 $$ dfs.setQuota(quotaDir21, HdfsConstants.QUOTA_DONT_SET, 2 * fileSpace)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_62 $$ hasException = false-->Line_96 $$ assertTrue(hasException)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_37 $$ hasException = true-->Line_96 $$ assertTrue(hasException)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_12 $$ short replication = 3-->Line_134 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir2053_B, "fileB"), sizeFactorB * fileLen, replication, 0)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_124 $$ assertTrue(dfs.mkdirs(quotaDir2053_C))[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_113 $$ dfs.setQuota(quotaDir20, HdfsConstants.QUOTA_DONT_SET, 10 * fileSpace)[ FD ]
Line_117 $$ final Path quotaDir2053 = new Path("/hdfs-2053")-->Line_118 $$ assertTrue(dfs.mkdirs(quotaDir2053))[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_15 $$ final Path quotaDir1 = new Path("/nqdir0/qdir1")-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_93 $$ hasException = true-->Line_96 $$ assertTrue(hasException)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_56 $$ int file2Len = 2 * fileLen-->Line_57 $$ DFSTestUtil.createFile(dfs, file2, file2Len, replication, 0)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_33 $$ boolean hasException = false-->Line_93 $$ hasException = true[ FD ]
Line_66 $$ hasException = true-->Line_96 $$ assertTrue(hasException)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_43 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_144 $$ cluster.shutdown()[ FD ]
Line_33 $$ boolean hasException = false-->Line_39 $$ assertTrue(hasException)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_87 $$ hasException = false-->Line_93 $$ hasException = true[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_82 $$ file2Len += fileLen-->Line_97 $$ file2Len += fileLen[ FD ]
Line_19 $$ final Path quotaDir20 = new Path("/nqdir0/qdir1/qdir20")-->Line_20 $$ dfs.setQuota(quotaDir20, HdfsConstants.QUOTA_DONT_SET, 6 * fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_140 $$ c = dfs.getContentSummary(quotaDir2053)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_131 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir2053_A, "fileA"), sizeFactorA * fileLen, replication, 0)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_19 $$ final Path quotaDir20 = new Path("/nqdir0/qdir1/qdir20")-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_24 $$ assertTrue(dfs.mkdirs(quotaDir21))[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_42 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_44 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_69 $$ assertFalse(dfs.exists(srcPath))[ FD ]
Line_15 $$ final Path quotaDir1 = new Path("/nqdir0/qdir1")-->Line_112 $$ dfs.setQuota(quotaDir1, HdfsConstants.QUOTA_DONT_SET, 10 * fileSpace)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_93 $$ hasException = true-->Line_107 $$ hasException = true[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_15 $$ final Path quotaDir1 = new Path("/nqdir0/qdir1")-->Line_85 $$ dfs.setQuota(quotaDir1, HdfsConstants.QUOTA_DONT_SET, 5 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_66 $$ hasException = true-->Line_87 $$ hasException = false[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_32 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_28 $$ Path tempPath = new Path(quotaDir21, "nqdir32")-->Line_29 $$ assertTrue(dfs.mkdirs(tempPath))[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_33 $$ boolean hasException = false-->Line_103 $$ hasException = false[ FD ]
Line_107 $$ hasException = true-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_37 $$ hasException = true-->Line_87 $$ hasException = false[ FD ]
Line_2 $$ public void testSpaceCommands() throws Exception -->Line_4 $$ conf.set(DFSConfigKeys.DFS_BLOCK_SIZE_KEY, "512")[ CD ]
Line_62 $$ hasException = false-->Line_93 $$ hasException = true[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_55 $$ final Path file2 = new Path(dstPath, "fileDir/file2")-->Line_79 $$ OutputStream out = dfs.append(file2)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_41 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_19 $$ final Path quotaDir20 = new Path("/nqdir0/qdir1/qdir20")-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_31 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_44 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_37 $$ hasException = true-->Line_107 $$ hasException = true[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_55 $$ final Path file2 = new Path(dstPath, "fileDir/file2")-->Line_57 $$ DFSTestUtil.createFile(dfs, file2, file2Len, replication, 0)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_103 $$ hasException = false-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_66 $$ hasException = true-->Line_107 $$ hasException = true[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_27 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_15 $$ final Path quotaDir1 = new Path("/nqdir0/qdir1")-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_42 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_22 $$ assertEquals(c.getSpaceQuota(), 6 * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_57 $$ DFSTestUtil.createFile(dfs, file2, file2Len, replication, 0)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_33 $$ boolean hasException = false-->Line_37 $$ hasException = true[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_21 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_37 $$ hasException = true-->Line_62 $$ hasException = false[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_41 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_72 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_123 $$ final Path quotaDir2053_C = new Path(quotaDir2053, "C")-->Line_124 $$ assertTrue(dfs.mkdirs(quotaDir2053_C))[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_31 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_45 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_30 $$ DFSTestUtil.createFile(dfs, new Path(tempPath, "fileDir/file1"), fileLen, replication, 0)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_27 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_26 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_114 $$ dfs.setReplication(file2, (short) (replication + 1))[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_62 $$ hasException = false-->Line_87 $$ hasException = false[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_31 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_42 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_79 $$ OutputStream out = dfs.append(file2)-->Line_81 $$ out.close()[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_43 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_85 $$ dfs.setQuota(quotaDir1, HdfsConstants.QUOTA_DONT_SET, 5 * fileSpace)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_24 $$ assertTrue(dfs.mkdirs(quotaDir21))[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_25 $$ dfs.setQuota(quotaDir21, HdfsConstants.QUOTA_DONT_SET, 2 * fileSpace)[ FD ]
Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_33 $$ boolean hasException = false-->Line_96 $$ assertTrue(hasException)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_121 $$ final Path quotaDir2053_B = new Path(quotaDir2053, "B")-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_26 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_26 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_32 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_121 $$ final Path quotaDir2053_B = new Path(quotaDir2053, "B")-->Line_122 $$ assertTrue(dfs.mkdirs(quotaDir2053_B))[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_45 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_15 $$ final Path quotaDir1 = new Path("/nqdir0/qdir1")-->Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_86 $$ out = dfs.append(file2)-->Line_90 $$ out.flush()[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_56 $$ int file2Len = 2 * fileLen-->Line_82 $$ file2Len += fileLen[ FD ]
Line_103 $$ hasException = false-->Line_107 $$ hasException = true[ FD ]
Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_42 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_122 $$ assertTrue(dfs.mkdirs(quotaDir2053_B))[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_44 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_18 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_66 $$ hasException = true-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_45 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_79 $$ OutputStream out = dfs.append(file2)-->Line_80 $$ out.write(new byte[fileLen])[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_41 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_33 $$ boolean hasException = false-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_33 $$ boolean hasException = false-->Line_62 $$ hasException = false[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_79 $$ OutputStream out = dfs.append(file2)[ FD ]
Line_19 $$ final Path quotaDir20 = new Path("/nqdir0/qdir1/qdir20")-->Line_44 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_51 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_2 $$ public void testSpaceCommands() throws Exception -->Line_8 $$ assertTrue("Not a HDFS: " + fs.getUri(), fs instanceof DistributedFileSystem)[ CD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_7 $$ final FileSystem fs = cluster.getFileSystem()-->Line_8 $$ assertTrue("Not a HDFS: " + fs.getUri(), fs instanceof DistributedFileSystem)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_70 $$ assertTrue(dfs.exists(dstPath))[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_50 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_47 $$ Path srcPath = new Path(quotaDir21, "nqdir32")-->Line_69 $$ assertFalse(dfs.exists(srcPath))[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_53 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_32 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_37 $$ hasException = true-->Line_66 $$ hasException = true[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_52 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_123 $$ final Path quotaDir2053_C = new Path(quotaDir2053, "C")-->Line_128 $$ dfs.setQuota(quotaDir2053_C, HdfsConstants.QUOTA_DONT_SET, (sizeFactorC + 1) * fileSpace)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_86 $$ out = dfs.append(file2)[ FD ]
Line_66 $$ hasException = true-->Line_68 $$ assertTrue(hasException)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_35 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir21, "nqdir33/file2"), 2 * fileLen, replication, 0)[ FD ]
Line_123 $$ final Path quotaDir2053_C = new Path(quotaDir2053, "C")-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_32 $$ assertEquals(c.getSpaceConsumed(), fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_61 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_78 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_62 $$ hasException = false-->Line_103 $$ hasException = false[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_134 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir2053_B, "fileB"), sizeFactorB * fileLen, replication, 0)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_98 $$ c = dfs.getContentSummary(dstPath)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_6 $$ final MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_142 $$ assertEquals(20, cluster.getNamesystem().getFSDirectory().getYieldCount())[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_99 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace)[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_26 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_45 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_44 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_62 $$ hasException = false-->Line_68 $$ assertTrue(hasException)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_54 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_86 $$ out = dfs.append(file2)-->Line_94 $$ IOUtils.closeStream(out)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_76 $$ assertEquals(c.getSpaceQuota(), 4 * fileSpace)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_110 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_71 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_12 $$ short replication = 3-->Line_35 $$ DFSTestUtil.createFile(dfs, new Path(quotaDir21, "nqdir33/file2"), 2 * fileLen, replication, 0)[ FD ]
Line_83 $$ c = dfs.getContentSummary(dstPath)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_2 $$ public void testSpaceCommands() throws Exception -->Line_3 $$ final Configuration conf = new HdfsConfiguration()[ CD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_49 $$ c = dfs.getContentSummary(quotaDir20)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_73 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_79 $$ OutputStream out = dfs.append(file2)-->Line_90 $$ out.flush()[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_73 $$ c = dfs.getContentSummary(quotaDir21)-->Line_83 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_21 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_23 $$ final Path quotaDir21 = new Path("/nqdir0/qdir1/qdir21")-->Line_31 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_60 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_119 $$ final Path quotaDir2053_A = new Path(quotaDir2053, "A")-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_49 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_87 $$ hasException = false-->Line_96 $$ assertTrue(hasException)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_59 $$ assertEquals(c.getSpaceConsumed(), 3 * fileSpace)[ FD ]
Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_74 $$ assertEquals(c.getSpaceConsumed(), 0)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_77 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_139 $$ assertEquals(c.getSpaceConsumed(), sizeFactorC * fileSpace)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_41 $$ c = dfs.getContentSummary(quotaDir21)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_62 $$ hasException = false-->Line_66 $$ hasException = true[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_115 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_115 $$ c = dfs.getContentSummary(dstPath)-->Line_138 $$ c = dfs.getContentSummary(quotaDir2053_C)[ FD ]
Line_51 $$ c = dfs.getContentSummary(quotaDir1)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_17 $$ ContentSummary c = dfs.getContentSummary(quotaDir1)-->Line_140 $$ c = dfs.getContentSummary(quotaDir2053)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_37 $$ hasException = true-->Line_39 $$ assertTrue(hasException)[ FD ]
Line_87 $$ hasException = false-->Line_107 $$ hasException = true[ FD ]
Line_79 $$ OutputStream out = dfs.append(file2)-->Line_91 $$ out.close()[ FD ]
Line_41 $$ c = dfs.getContentSummary(quotaDir21)-->Line_111 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_110 $$ c = dfs.getContentSummary(dstPath)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_53 $$ c = dfs.getContentSummary(quotaDir21)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_130 $$ assertEquals(c.getSpaceQuota(), (sizeFactorC + 1) * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_62 $$ hasException = false-->Line_109 $$ assertTrue(hasException)[ FD ]
Line_77 $$ c = dfs.getContentSummary(dstPath)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_135 $$ c = dfs.getContentSummary(quotaDir2053_B)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_116 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace + file2Len)[ FD ]
Line_31 $$ c = dfs.getContentSummary(quotaDir21)-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_118 $$ assertTrue(dfs.mkdirs(quotaDir2053))[ FD ]
Line_46 $$ Path dstPath = new Path(quotaDir20, "nqdir30")-->Line_98 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_58 $$ c = dfs.getContentSummary(quotaDir20)-->Line_141 $$ assertEquals(c.getSpaceConsumed(), (sizeFactorA + sizeFactorB + sizeFactorC) * fileSpace)[ FD ]
Line_129 $$ c = dfs.getContentSummary(quotaDir2053_C)-->Line_136 $$ assertEquals(c.getSpaceConsumed(), sizeFactorB * fileSpace)[ FD ]
Line_60 $$ c = dfs.getContentSummary(quotaDir21)-->Line_133 $$ assertEquals(c.getSpaceConsumed(), sizeFactorA * fileSpace)[ FD ]
Line_75 $$ c = dfs.getContentSummary(quotaDir1)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_84 $$ assertEquals(c.getSpaceConsumed(), 4 * fileSpace)[ FD ]
Line_71 $$ c = dfs.getContentSummary(quotaDir20)-->Line_75 $$ c = dfs.getContentSummary(quotaDir1)[ FD ]
Line_9 $$ final DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_20 $$ dfs.setQuota(quotaDir20, HdfsConstants.QUOTA_DONT_SET, 6 * fileSpace)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_132 $$ c = dfs.getContentSummary(quotaDir2053_A)[ FD ]
Line_21 $$ c = dfs.getContentSummary(quotaDir20)-->Line_43 $$ assertEquals(c.getSpaceQuota(), 2 * fileSpace)[ FD ]
Line_101 $$ c = dfs.getContentSummary(dstPath)-->Line_102 $$ assertEquals(c.getSpaceConsumed(), 5 * fileSpace - file2Len)[ FD ]
Line_26 $$ c = dfs.getContentSummary(quotaDir21)-->Line_44 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_101 $$ c = dfs.getContentSummary(dstPath)[ FD ]
Line_44 $$ c = dfs.getContentSummary(quotaDir20)-->Line_58 $$ c = dfs.getContentSummary(quotaDir20)[ FD ]
