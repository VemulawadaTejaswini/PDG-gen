Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)[ CD ]
Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_7 $$ baos.flush()[ FD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_12 $$ return o2[ CD ]
Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_8 $$ byte[] bytes = baos.toByteArray()[ FD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_9 $$ ByteArrayInputStream is = new ByteArrayInputStream(bytes)[ CD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_3 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_7 $$ baos.flush()[ CD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_11 $$ Object o2 = ois.readObject()[ CD ]
Line_10 $$ ObjectInputStream ois = new ObjectInputStream(is)-->Line_11 $$ Object o2 = ois.readObject()[ FD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_6 $$ oos.flush()[ CD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_8 $$ byte[] bytes = baos.toByteArray()[ CD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_5 $$ oos.writeObject(o)[ CD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_10 $$ ObjectInputStream ois = new ObjectInputStream(is)[ CD ]
Line_2 $$ public static Object serializeAndDeserialize(Object o) throws IOException, ClassNotFoundException -->Line_5 $$ oos.writeObject(o)[ FD ]
Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)-->Line_6 $$ oos.flush()[ FD ]
Line_4 $$ ObjectOutputStream oos = new ObjectOutputStream(baos)-->Line_5 $$ oos.writeObject(o)[ FD ]
