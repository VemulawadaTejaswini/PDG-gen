Line_21 $$ fis = new FileInputStream(f)-->Line_34 $$ if (fis != null)[ FD ]
Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)-->Line_38 $$ os.flush()[ FD ]
Line_10 $$ String remoteName-->Line_14 $$ remoteName = f.getName()[ FD ]
Line_25 $$ trans = buffer.length-->Line_27 $$ trans = (int) remain[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_39 $$ readResponse(is)[ CD ]
Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)-->Line_17 $$ os.flush()[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_37 $$ os.write(0)[ CD ]
Line_23 $$ int trans-->Line_25 $$ trans = buffer.length[ FD ]
Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)-->Line_41 $$ os.write("E\n".getBytes("ISO-8859-1"))[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_5 $$ InputStream is = new BufferedInputStream(sess.getStdout(), 512)[ FD ]
Line_3 $$ byte[] buffer = new byte[8192]-->Line_28 $$ if (fis.read(buffer, 0, trans) != trans)[ FD ]
Line_9 $$ long remain = f.length()-->Line_31 $$ remain -= trans[ FD ]
Line_11 $$ if ((remoteFiles != null) && (remoteFiles.length > i) && (remoteFiles[i] != null))-->Line_12 $$ remoteName = remoteFiles[i][ CD ]
Line_24 $$ if (remain > buffer.length)-->Line_25 $$ trans = buffer.length[ CD ]
Line_22 $$ while (remain > 0) -->Line_28 $$ if (fis.read(buffer, 0, trans) != trans)[ CD ]
Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)-->Line_16 $$ os.write(cline.getBytes("ISO-8859-1"))[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_17 $$ os.flush()[ CD ]
Line_5 $$ InputStream is = new BufferedInputStream(sess.getStdout(), 512)-->Line_6 $$ readResponse(is)[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)[ CD ]
Line_24 $$ if (remain > buffer.length)-->Line_27 $$ trans = (int) remain[ CD ]
Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)-->Line_30 $$ os.write(buffer, 0, trans)[ FD ]
Line_25 $$ trans = buffer.length-->Line_30 $$ os.write(buffer, 0, trans)[ FD ]
Line_23 $$ int trans-->Line_31 $$ remain -= trans[ FD ]
Line_25 $$ trans = buffer.length-->Line_31 $$ remain -= trans[ FD ]
Line_21 $$ fis = new FileInputStream(f)-->Line_35 $$ fis.close()[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_3 $$ byte[] buffer = new byte[8192][ CD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_42 $$ os.flush()[ CD ]
Line_9 $$ long remain = f.length()-->Line_22 $$ while (remain > 0) [ FD ]
Line_19 $$ FileInputStream fis = null-->Line_21 $$ fis = new FileInputStream(f)[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_15 $$ String cline = "C" + mode + " " + remain + " " + remoteName + "\n"[ CD ]
Line_21 $$ fis = new FileInputStream(f)-->Line_28 $$ if (fis.read(buffer, 0, trans) != trans)[ FD ]
Line_23 $$ int trans-->Line_30 $$ os.write(buffer, 0, trans)[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_8 $$ File f = new File(files[i])[ CD ]
Line_15 $$ String cline = "C" + mode + " " + remain + " " + remoteName + "\n"-->Line_16 $$ os.write(cline.getBytes("ISO-8859-1"))[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_5 $$ InputStream is = new BufferedInputStream(sess.getStdout(), 512)[ CD ]
Line_23 $$ int trans-->Line_27 $$ trans = (int) remain[ FD ]
Line_22 $$ while (remain > 0) -->Line_31 $$ remain -= trans[ CD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_19 $$ FileInputStream fis = null[ CD ]
Line_8 $$ File f = new File(files[i])-->Line_14 $$ remoteName = f.getName()[ FD ]
Line_27 $$ trans = (int) remain-->Line_31 $$ remain -= trans[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_38 $$ os.flush()[ CD ]
Line_22 $$ while (remain > 0) -->Line_24 $$ if (remain > buffer.length)[ CD ]
Line_23 $$ int trans-->Line_28 $$ if (fis.read(buffer, 0, trans) != trans)[ FD ]
Line_8 $$ File f = new File(files[i])-->Line_9 $$ long remain = f.length()[ FD ]
Line_9 $$ long remain = f.length()-->Line_24 $$ if (remain > buffer.length)[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_6 $$ readResponse(is)[ CD ]
Line_19 $$ FileInputStream fis = null-->Line_28 $$ if (fis.read(buffer, 0, trans) != trans)[ FD ]
Line_19 $$ FileInputStream fis = null-->Line_35 $$ fis.close()[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_18 $$ readResponse(is)[ CD ]
Line_31 $$ remain -= trans-->Line_22 $$ while (remain > 0) [ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_10 $$ String remoteName[ CD ]
Line_3 $$ byte[] buffer = new byte[8192]-->Line_30 $$ os.write(buffer, 0, trans)[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_16 $$ os.write(cline.getBytes("ISO-8859-1"))[ CD ]
Line_10 $$ String remoteName-->Line_12 $$ remoteName = remoteFiles[i][ FD ]
Line_11 $$ if ((remoteFiles != null) && (remoteFiles.length > i) && (remoteFiles[i] != null))-->Line_14 $$ remoteName = f.getName()[ CD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_9 $$ long remain = f.length()[ CD ]
Line_25 $$ trans = buffer.length-->Line_28 $$ if (fis.read(buffer, 0, trans) != trans)[ FD ]
Line_22 $$ while (remain > 0) -->Line_30 $$ os.write(buffer, 0, trans)[ CD ]
Line_27 $$ trans = (int) remain-->Line_28 $$ if (fis.read(buffer, 0, trans) != trans)[ FD ]
Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)-->Line_37 $$ os.write(0)[ FD ]
Line_5 $$ InputStream is = new BufferedInputStream(sess.getStdout(), 512)-->Line_18 $$ readResponse(is)[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_7 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_22 $$ while (remain > 0) -->Line_23 $$ int trans[ CD ]
Line_34 $$ if (fis != null)-->Line_35 $$ fis.close()[ CD ]
Line_4 $$ OutputStream os = new BufferedOutputStream(sess.getStdin(), 40000)-->Line_42 $$ os.flush()[ FD ]
Line_19 $$ FileInputStream fis = null-->Line_34 $$ if (fis != null)[ FD ]
Line_31 $$ remain -= trans-->Line_24 $$ if (remain > buffer.length)[ FD ]
Line_7 $$ for (int i = 0; i < files.length; i++) -->Line_11 $$ if ((remoteFiles != null) && (remoteFiles.length > i) && (remoteFiles[i] != null))[ CD ]
Line_27 $$ trans = (int) remain-->Line_30 $$ os.write(buffer, 0, trans)[ FD ]
Line_12 $$ remoteName = remoteFiles[i]-->Line_14 $$ remoteName = f.getName()[ FD ]
Line_5 $$ InputStream is = new BufferedInputStream(sess.getStdout(), 512)-->Line_39 $$ readResponse(is)[ FD ]
Line_2 $$ private void sendFiles(Session sess, String[] files, String[] remoteFiles, String mode) throws IOException -->Line_41 $$ os.write("E\n".getBytes("ISO-8859-1"))[ CD ]
