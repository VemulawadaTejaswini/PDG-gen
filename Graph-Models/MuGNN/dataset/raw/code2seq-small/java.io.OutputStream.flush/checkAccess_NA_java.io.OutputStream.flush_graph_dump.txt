Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_23 $$ IOUtils.closeStream(out)[ FD ]
Line_14 $$ DatanodeRegistration dnR = datanode.getDNRegistrationForBP(blk.getBlockPoolId())-->Line_15 $$ resp.setFirstBadLink(dnR.getXferAddr())[ FD ]
Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_17 $$ resp.build().writeDelimitedTo(out)[ FD ]
Line_4 $$ if (LOG.isDebugEnabled()) -->Line_5 $$ LOG.debug("Checking block access token for block '" + blk.getBlockId() + "' with mode '" + mode + "'")[ CD ]
Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_18 $$ out.flush()[ FD ]
Line_11 $$ if (reply) -->Line_13 $$ if (mode == BlockTokenSecretManager.AccessMode.WRITE) [ CD ]
Line_13 $$ if (mode == BlockTokenSecretManager.AccessMode.WRITE) -->Line_15 $$ resp.setFirstBadLink(dnR.getXferAddr())[ CD ]
Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_5 $$ LOG.debug("Checking block access token for block '" + blk.getBlockId() + "' with mode '" + mode + "'")[ FD ]
Line_13 $$ if (mode == BlockTokenSecretManager.AccessMode.WRITE) -->Line_14 $$ DatanodeRegistration dnR = datanode.getDNRegistrationForBP(blk.getBlockPoolId())[ CD ]
Line_11 $$ if (reply) -->Line_18 $$ out.flush()[ CD ]
Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_13 $$ if (mode == BlockTokenSecretManager.AccessMode.WRITE) [ FD ]
Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_3 $$ if (datanode.isBlockTokenEnabled) [ CD ]
Line_11 $$ if (reply) -->Line_12 $$ BlockOpResponseProto.Builder resp = BlockOpResponseProto.newBuilder().setStatus(ERROR_ACCESS_TOKEN)[ CD ]
Line_12 $$ BlockOpResponseProto.Builder resp = BlockOpResponseProto.newBuilder().setStatus(ERROR_ACCESS_TOKEN)-->Line_17 $$ resp.build().writeDelimitedTo(out)[ FD ]
Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_14 $$ DatanodeRegistration dnR = datanode.getDNRegistrationForBP(blk.getBlockPoolId())[ FD ]
Line_2 $$ private void checkAccess(OutputStream out, final boolean reply, final ExtendedBlock blk, final Token<BlockTokenIdentifier> t, final Op op, final BlockTokenSecretManager.AccessMode mode) throws IOException -->Line_8 $$ datanode.blockPoolTokenSecretManager.checkAccess(t, null, blk, mode)[ FD ]
Line_12 $$ BlockOpResponseProto.Builder resp = BlockOpResponseProto.newBuilder().setStatus(ERROR_ACCESS_TOKEN)-->Line_15 $$ resp.setFirstBadLink(dnR.getXferAddr())[ FD ]
Line_11 $$ if (reply) -->Line_17 $$ resp.build().writeDelimitedTo(out)[ CD ]
Line_3 $$ if (datanode.isBlockTokenEnabled) -->Line_4 $$ if (LOG.isDebugEnabled()) [ CD ]
