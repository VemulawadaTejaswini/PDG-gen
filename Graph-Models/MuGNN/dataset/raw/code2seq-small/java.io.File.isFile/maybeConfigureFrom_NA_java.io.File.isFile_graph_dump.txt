Line_6 $$ Properties properties = new Properties()-->Line_19 $$ result.put(key.toString(), properties.get(key).toString())[ FD ]
Line_2 $$ private void maybeConfigureFrom(File propertiesFile, Map<String, String> result) -->Line_3 $$ if (!propertiesFile.isFile()) [ CD ]
Line_3 $$ if (!propertiesFile.isFile()) -->Line_4 $$ return[ CD ]
Line_6 $$ Properties properties = new Properties()-->Line_17 $$ for (Object key : properties.keySet()) [ FD ]
Line_2 $$ private void maybeConfigureFrom(File propertiesFile, Map<String, String> result) -->Line_6 $$ Properties properties = new Properties()[ CD ]
Line_6 $$ Properties properties = new Properties()-->Line_10 $$ properties.load(inputStream)[ FD ]
Line_17 $$ for (Object key : properties.keySet()) -->Line_18 $$ if (GradleProperties.ALL.contains(key.toString())) [ FD ]
Line_18 $$ if (GradleProperties.ALL.contains(key.toString())) -->Line_19 $$ result.put(key.toString(), properties.get(key).toString())[ CD ]
Line_8 $$ FileInputStream inputStream = new FileInputStream(propertiesFile)-->Line_12 $$ inputStream.close()[ FD ]
Line_2 $$ private void maybeConfigureFrom(File propertiesFile, Map<String, String> result) -->Line_19 $$ result.put(key.toString(), properties.get(key).toString())[ FD ]
Line_2 $$ private void maybeConfigureFrom(File propertiesFile, Map<String, String> result) -->Line_3 $$ if (!propertiesFile.isFile()) [ FD ]
Line_8 $$ FileInputStream inputStream = new FileInputStream(propertiesFile)-->Line_10 $$ properties.load(inputStream)[ FD ]
Line_17 $$ for (Object key : properties.keySet()) -->Line_19 $$ result.put(key.toString(), properties.get(key).toString())[ FD ]
