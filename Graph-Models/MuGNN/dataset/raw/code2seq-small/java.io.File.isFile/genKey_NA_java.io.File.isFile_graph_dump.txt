Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_11 $$ addParameter(genCommandLine, "-dname")[ FD ]
Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_16 $$ addParameter(genCommandLine, "CN=" + vendor.replaceAll(",", "\\\\,"))[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()[ CD ]
Line_2 $$ private int genKey(String binPath) -->Line_13 $$ if (StringUtil.isEmptyOrSpaces(vendor)) [ CD ]
Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_10 $$ addParameter(genCommandLine, "-genkeypair")[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_19 $$ collectStoreParams(true, genCommandLine)[ CD ]
Line_4 $$ final File keyStoreFile = new File(keyStorePath)-->Line_6 $$ FileUtil.delete(keyStoreFile)[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_9 $$ addParameter(genCommandLine, FileUtil.toSystemDependentName(binPath + File.separator + "keytool"))[ CD ]
Line_12 $$ String vendor = getVendor()-->Line_16 $$ addParameter(genCommandLine, "CN=" + vendor.replaceAll(",", "\\\\,"))[ FD ]
Line_4 $$ final File keyStoreFile = new File(keyStorePath)-->Line_5 $$ if (keyStoreFile.isFile()) [ FD ]
Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_18 $$ addParameter(genCommandLine, getAlias(true))[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_10 $$ addParameter(genCommandLine, "-genkeypair")[ CD ]
Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_9 $$ addParameter(genCommandLine, FileUtil.toSystemDependentName(binPath + File.separator + "keytool"))[ FD ]
Line_12 $$ String vendor = getVendor()-->Line_13 $$ if (StringUtil.isEmptyOrSpaces(vendor)) [ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_17 $$ addParameter(genCommandLine, "-alias")[ CD ]
Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_19 $$ collectStoreParams(true, genCommandLine)[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_3 $$ final String keyStorePath = getKeystore(true)[ CD ]
Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_20 $$ return startProcess(genCommandLine)[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_5 $$ if (keyStoreFile.isFile()) [ CD ]
Line_2 $$ private int genKey(String binPath) -->Line_4 $$ final File keyStoreFile = new File(keyStorePath)[ CD ]
Line_2 $$ private int genKey(String binPath) -->Line_20 $$ return startProcess(genCommandLine)[ CD ]
Line_12 $$ String vendor = getVendor()-->Line_14 $$ vendor = "jb-fx-build"[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_16 $$ addParameter(genCommandLine, "CN=" + vendor.replaceAll(",", "\\\\,"))[ CD ]
Line_13 $$ if (StringUtil.isEmptyOrSpaces(vendor)) -->Line_14 $$ vendor = "jb-fx-build"[ CD ]
Line_2 $$ private int genKey(String binPath) -->Line_18 $$ addParameter(genCommandLine, getAlias(true))[ CD ]
Line_14 $$ vendor = "jb-fx-build"-->Line_16 $$ addParameter(genCommandLine, "CN=" + vendor.replaceAll(",", "\\\\,"))[ FD ]
Line_5 $$ if (keyStoreFile.isFile()) -->Line_6 $$ FileUtil.delete(keyStoreFile)[ CD ]
Line_2 $$ private int genKey(String binPath) -->Line_12 $$ String vendor = getVendor()[ CD ]
Line_8 $$ final List<String> genCommandLine = new ArrayList<String>()-->Line_17 $$ addParameter(genCommandLine, "-alias")[ FD ]
Line_2 $$ private int genKey(String binPath) -->Line_11 $$ addParameter(genCommandLine, "-dname")[ CD ]
