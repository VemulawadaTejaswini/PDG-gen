Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_5 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_2 $$ public void testCopyToLocal() throws IOException -->Line_3 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_7 $$ DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_51 $$ dfs.close()[ FD ]
Line_22 $$ File f2 = new File(localroot, "f2")-->Line_33 $$ f2.delete()[ FD ]
Line_2 $$ public void testCopyToLocal() throws IOException -->Line_8 $$ FsShell shell = new FsShell()[ CD ]
Line_2 $$ public void testCopyToLocal() throws IOException -->Line_6 $$ assertTrue("Not a HDFS: " + fs.getUri(), fs instanceof DistributedFileSystem)[ CD ]
Line_5 $$ FileSystem fs = cluster.getFileSystem()-->Line_6 $$ assertTrue("Not a HDFS: " + fs.getUri(), fs instanceof DistributedFileSystem)[ FD ]
Line_7 $$ DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_11 $$ String root = createTree(dfs, "copyToLocal")[ FD ]
Line_40 $$ String[] args = -->Line_42 $$ assertEquals(1, shell.run(args))[ FD ]
Line_26 $$ File f3 = new File(sub, "f3")-->Line_34 $$ f3.delete()[ FD ]
Line_8 $$ FsShell shell = new FsShell()-->Line_9 $$ shell.setConf(conf)[ FD ]
Line_20 $$ File f1 = new File(localroot, "f1")-->Line_21 $$ assertTrue("Copying failed.", f1.isFile())[ FD ]
Line_2 $$ public void testCopyToLocal() throws IOException -->Line_7 $$ DistributedFileSystem dfs = (DistributedFileSystem) fs[ CD ]
Line_2 $$ public void testCopyToLocal() throws IOException -->Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()[ CD ]
Line_22 $$ File f2 = new File(localroot, "f2")-->Line_23 $$ assertTrue("Copying failed.", f2.isFile())[ FD ]
Line_30 $$ File f5 = new File(localroot2, "f1")-->Line_31 $$ assertTrue("Copying failed.", f5.isFile())[ FD ]
Line_26 $$ File f3 = new File(sub, "f3")-->Line_27 $$ assertTrue("Copying failed.", f3.isFile())[ FD ]
Line_20 $$ File f1 = new File(localroot, "f1")-->Line_32 $$ f1.delete()[ FD ]
Line_46 $$ File f6 = new File(TEST_ROOT_DIR, "nosuchfile")-->Line_47 $$ assertTrue(!f6.exists())[ FD ]
Line_2 $$ public void testCopyToLocal() throws IOException -->Line_9 $$ shell.setConf(conf)[ CD ]
Line_24 $$ File sub = new File(localroot, "sub")-->Line_25 $$ assertTrue("Copying failed.", sub.isDirectory())[ FD ]
Line_24 $$ File sub = new File(localroot, "sub")-->Line_37 $$ sub.delete()[ FD ]
Line_30 $$ File f5 = new File(localroot2, "f1")-->Line_36 $$ f5.delete()[ FD ]
Line_3 $$ Configuration conf = new HdfsConfiguration()-->Line_9 $$ shell.setConf(conf)[ FD ]
Line_28 $$ File f4 = new File(sub, "f4")-->Line_29 $$ assertTrue("Copying failed.", f4.isFile())[ FD ]
Line_2 $$ public void testCopyToLocal() throws IOException -->Line_5 $$ FileSystem fs = cluster.getFileSystem()[ CD ]
Line_4 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_54 $$ cluster.shutdown()[ FD ]
Line_8 $$ FsShell shell = new FsShell()-->Line_42 $$ assertEquals(1, shell.run(args))[ FD ]
Line_28 $$ File f4 = new File(sub, "f4")-->Line_35 $$ f4.delete()[ FD ]
Line_8 $$ FsShell shell = new FsShell()-->Line_14 $$ assertEquals(0, runCmd(shell, "-copyToLocal", root + "*", TEST_ROOT_DIR))[ FD ]
