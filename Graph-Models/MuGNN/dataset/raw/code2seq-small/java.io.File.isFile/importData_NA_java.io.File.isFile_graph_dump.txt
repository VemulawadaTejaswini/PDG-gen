Line_2 $$ public boolean importData(final TransferSupport support) -->Line_3 $$ if (canImport(support)) [ CD ]
Line_4 $$ List<VirtualFile> pomFiles = new ArrayList<VirtualFile>()-->Line_18 $$ manager.addManagedFilesOrUnignore(pomFiles)[ FD ]
Line_3 $$ if (canImport(support)) -->Line_4 $$ List<VirtualFile> pomFiles = new ArrayList<VirtualFile>()[ CD ]
Line_3 $$ if (canImport(support)) -->Line_6 $$ if (fileList == null)[ CD ]
Line_5 $$ final List<File> fileList = FileCopyPasteUtil.getFileList(support.getTransferable())-->Line_6 $$ if (fileList == null)[ FD ]
Line_3 $$ if (canImport(support)) -->Line_19 $$ return true[ CD ]
Line_9 $$ for (File file : fileList) -->Line_11 $$ if (file.isFile() && virtualFile != null && MavenActionUtil.isMavenProjectFile(virtualFile) && !manager.isManagedFile(virtualFile)) [ FD ]
Line_10 $$ VirtualFile virtualFile = VfsUtil.findFileByIoFile(file, true)-->Line_12 $$ pomFiles.add(virtualFile)[ FD ]
Line_3 $$ if (canImport(support)) -->Line_8 $$ MavenProjectsManager manager = MavenProjectsManager.getInstance(myProject)[ CD ]
Line_2 $$ public boolean importData(final TransferSupport support) -->Line_21 $$ return false[ CD ]
Line_11 $$ if (file.isFile() && virtualFile != null && MavenActionUtil.isMavenProjectFile(virtualFile) && !manager.isManagedFile(virtualFile)) -->Line_12 $$ pomFiles.add(virtualFile)[ CD ]
Line_4 $$ List<VirtualFile> pomFiles = new ArrayList<VirtualFile>()-->Line_15 $$ if (pomFiles.isEmpty()) [ FD ]
Line_3 $$ if (canImport(support)) -->Line_18 $$ manager.addManagedFilesOrUnignore(pomFiles)[ CD ]
Line_2 $$ public boolean importData(final TransferSupport support) -->Line_3 $$ if (canImport(support)) [ FD ]
Line_3 $$ if (canImport(support)) -->Line_5 $$ final List<File> fileList = FileCopyPasteUtil.getFileList(support.getTransferable())[ CD ]
Line_9 $$ for (File file : fileList) -->Line_10 $$ VirtualFile virtualFile = VfsUtil.findFileByIoFile(file, true)[ FD ]
Line_8 $$ MavenProjectsManager manager = MavenProjectsManager.getInstance(myProject)-->Line_11 $$ if (file.isFile() && virtualFile != null && MavenActionUtil.isMavenProjectFile(virtualFile) && !manager.isManagedFile(virtualFile)) [ FD ]
Line_4 $$ List<VirtualFile> pomFiles = new ArrayList<VirtualFile>()-->Line_12 $$ pomFiles.add(virtualFile)[ FD ]
Line_15 $$ if (pomFiles.isEmpty()) -->Line_16 $$ return false[ CD ]
Line_6 $$ if (fileList == null)-->Line_7 $$ return false[ CD ]
Line_3 $$ if (canImport(support)) -->Line_15 $$ if (pomFiles.isEmpty()) [ CD ]
Line_8 $$ MavenProjectsManager manager = MavenProjectsManager.getInstance(myProject)-->Line_18 $$ manager.addManagedFilesOrUnignore(pomFiles)[ FD ]
Line_10 $$ VirtualFile virtualFile = VfsUtil.findFileByIoFile(file, true)-->Line_11 $$ if (file.isFile() && virtualFile != null && MavenActionUtil.isMavenProjectFile(virtualFile) && !manager.isManagedFile(virtualFile)) [ FD ]
Line_2 $$ public boolean importData(final TransferSupport support) -->Line_5 $$ final List<File> fileList = FileCopyPasteUtil.getFileList(support.getTransferable())[ FD ]
