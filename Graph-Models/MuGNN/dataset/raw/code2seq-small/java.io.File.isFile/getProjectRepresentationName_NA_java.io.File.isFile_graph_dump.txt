Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_15 $$ if (targetProjectDir.isFile()) [ CD ]
Line_19 $$ for (File f = targetProjectDir; f != null && !FileUtil.filesEqual(f, rootProjectDir); f = f.getParentFile()) -->Line_20 $$ buffer.insert(0, f.getName()).insert(0, ":")[ FD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_23 $$ return buffer.toString()[ CD ]
Line_4 $$ File rootProjectDir = new File(targetProjectPath)-->Line_8 $$ return rootProjectDir.getName()[ FD ]
Line_18 $$ StringBuilder buffer = new StringBuilder()-->Line_23 $$ return buffer.toString()[ FD ]
Line_12 $$ rootProjectDir = rootProjectDir.getParentFile()-->Line_22 $$ buffer.insert(0, rootProjectDir.getName())[ FD ]
Line_3 $$ if (rootProjectPath == null) -->Line_8 $$ return rootProjectDir.getName()[ CD ]
Line_14 $$ File targetProjectDir = new File(targetProjectPath)-->Line_16 $$ targetProjectDir = targetProjectDir.getParentFile()[ FD ]
Line_18 $$ StringBuilder buffer = new StringBuilder()-->Line_20 $$ buffer.insert(0, f.getName()).insert(0, ":")[ FD ]
Line_3 $$ if (rootProjectPath == null) -->Line_5 $$ if (rootProjectDir.isFile()) [ CD ]
Line_4 $$ File rootProjectDir = new File(targetProjectPath)-->Line_12 $$ rootProjectDir = rootProjectDir.getParentFile()[ FD ]
Line_4 $$ File rootProjectDir = new File(targetProjectPath)-->Line_19 $$ for (File f = targetProjectDir; f != null && !FileUtil.filesEqual(f, rootProjectDir); f = f.getParentFile()) [ FD ]
Line_18 $$ StringBuilder buffer = new StringBuilder()-->Line_22 $$ buffer.insert(0, rootProjectDir.getName())[ FD ]
Line_11 $$ if (rootProjectDir.isFile()) -->Line_12 $$ rootProjectDir = rootProjectDir.getParentFile()[ CD ]
Line_4 $$ File rootProjectDir = new File(targetProjectPath)-->Line_6 $$ rootProjectDir = rootProjectDir.getParentFile()[ FD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_11 $$ if (rootProjectDir.isFile()) [ CD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_22 $$ buffer.insert(0, rootProjectDir.getName())[ CD ]
Line_6 $$ rootProjectDir = rootProjectDir.getParentFile()-->Line_22 $$ buffer.insert(0, rootProjectDir.getName())[ FD ]
Line_3 $$ if (rootProjectPath == null) -->Line_4 $$ File rootProjectDir = new File(targetProjectPath)[ CD ]
Line_4 $$ File rootProjectDir = new File(targetProjectPath)-->Line_5 $$ if (rootProjectDir.isFile()) [ FD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_3 $$ if (rootProjectPath == null) [ FD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_14 $$ File targetProjectDir = new File(targetProjectPath)[ CD ]
Line_6 $$ rootProjectDir = rootProjectDir.getParentFile()-->Line_19 $$ for (File f = targetProjectDir; f != null && !FileUtil.filesEqual(f, rootProjectDir); f = f.getParentFile()) [ FD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_3 $$ if (rootProjectPath == null) [ CD ]
Line_14 $$ File targetProjectDir = new File(targetProjectPath)-->Line_15 $$ if (targetProjectDir.isFile()) [ FD ]
Line_6 $$ rootProjectDir = rootProjectDir.getParentFile()-->Line_12 $$ rootProjectDir = rootProjectDir.getParentFile()[ FD ]
Line_4 $$ File rootProjectDir = new File(targetProjectPath)-->Line_11 $$ if (rootProjectDir.isFile()) [ FD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_19 $$ for (File f = targetProjectDir; f != null && !FileUtil.filesEqual(f, rootProjectDir); f = f.getParentFile()) [ CD ]
Line_6 $$ rootProjectDir = rootProjectDir.getParentFile()-->Line_11 $$ if (rootProjectDir.isFile()) [ FD ]
Line_5 $$ if (rootProjectDir.isFile()) -->Line_6 $$ rootProjectDir = rootProjectDir.getParentFile()[ CD ]
Line_2 $$ public static String getProjectRepresentationName(@NotNull String targetProjectPath, @Nullable String rootProjectPath) -->Line_18 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_15 $$ if (targetProjectDir.isFile()) -->Line_16 $$ targetProjectDir = targetProjectDir.getParentFile()[ CD ]
Line_12 $$ rootProjectDir = rootProjectDir.getParentFile()-->Line_19 $$ for (File f = targetProjectDir; f != null && !FileUtil.filesEqual(f, rootProjectDir); f = f.getParentFile()) [ FD ]
Line_4 $$ File rootProjectDir = new File(targetProjectPath)-->Line_22 $$ buffer.insert(0, rootProjectDir.getName())[ FD ]
Line_19 $$ for (File f = targetProjectDir; f != null && !FileUtil.filesEqual(f, rootProjectDir); f = f.getParentFile()) -->Line_20 $$ buffer.insert(0, f.getName()).insert(0, ":")[ CD ]
Line_6 $$ rootProjectDir = rootProjectDir.getParentFile()-->Line_8 $$ return rootProjectDir.getName()[ FD ]
