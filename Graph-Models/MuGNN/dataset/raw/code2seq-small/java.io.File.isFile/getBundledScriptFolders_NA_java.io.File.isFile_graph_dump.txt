Line_13 $$ if (jarPath.isFile()) -->Line_14 $$ jarPath = jarPath.getParentFile()[ CD ]
Line_2 $$ private static Set<File> getBundledScriptFolders() -->Line_18 $$ return scriptFolders[ CD ]
Line_2 $$ private static Set<File> getBundledScriptFolders() -->Line_4 $$ Set<Class> classes = new HashSet<Class>(ContainerUtil.map2Set(extensions, new Function<GroovyFrameworkConfigNotification, Class>() [ CD ]
Line_2 $$ private static Set<File> getBundledScriptFolders() -->Line_9 $$ classes.add(GroovyFrameworkConfigNotification.class)[ CD ]
Line_4 $$ Set<Class> classes = new HashSet<Class>(ContainerUtil.map2Set(extensions, new Function<GroovyFrameworkConfigNotification, Class>() -->Line_9 $$ classes.add(GroovyFrameworkConfigNotification.class)[ FD ]
Line_4 $$ Set<Class> classes = new HashSet<Class>(ContainerUtil.map2Set(extensions, new Function<GroovyFrameworkConfigNotification, Class>() -->Line_6 $$ return notification.getClass()[ CD ]
Line_4 $$ Set<Class> classes = new HashSet<Class>(ContainerUtil.map2Set(extensions, new Function<GroovyFrameworkConfigNotification, Class>() -->Line_6 $$ return notification.getClass()[ FD ]
Line_2 $$ private static Set<File> getBundledScriptFolders() -->Line_3 $$ final GroovyFrameworkConfigNotification[] extensions = GroovyFrameworkConfigNotification.EP_NAME.getExtensions()[ CD ]
Line_3 $$ final GroovyFrameworkConfigNotification[] extensions = GroovyFrameworkConfigNotification.EP_NAME.getExtensions()-->Line_4 $$ Set<Class> classes = new HashSet<Class>(ContainerUtil.map2Set(extensions, new Function<GroovyFrameworkConfigNotification, Class>() [ FD ]
