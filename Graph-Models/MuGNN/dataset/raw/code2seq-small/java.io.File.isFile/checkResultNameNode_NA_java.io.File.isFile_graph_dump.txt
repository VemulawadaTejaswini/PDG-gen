Line_4 $$ for (int i = 0; i < baseDirs.length; i++) -->Line_8 $$ assertTrue(new File(baseDirs[i], "current/seen_txid").isFile())[ CD ]
Line_4 $$ for (int i = 0; i < baseDirs.length; i++) -->Line_12 $$ for (int i = 0; i < baseDirs.length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < baseDirs.length; i++) -->Line_6 $$ assertTrue(new File(baseDirs[i], "current/VERSION").isFile())[ CD ]
Line_2 $$ void checkResultNameNode(String[] baseDirs, boolean currentShouldExist, boolean previousShouldExist) throws IOException -->Line_3 $$ if (currentShouldExist) [ CD ]
Line_12 $$ for (int i = 0; i < baseDirs.length; i++) -->Line_13 $$ assertTrue(new File(baseDirs[i], "previous").isDirectory())[ CD ]
Line_3 $$ if (currentShouldExist) -->Line_4 $$ for (int i = 0; i < baseDirs.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < baseDirs.length; i++) -->Line_7 $$ assertNotNull(FSImageTestUtil.findNewestImageFile(baseDirs[i] + "/current"))[ CD ]
Line_11 $$ if (previousShouldExist) -->Line_12 $$ for (int i = 0; i < baseDirs.length; i++) [ CD ]
Line_12 $$ for (int i = 0; i < baseDirs.length; i++) -->Line_14 $$ assertEquals(UpgradeUtilities.checksumContents(NAME_NODE, new File(baseDirs[i], "previous"), false), UpgradeUtilities.checksumMasterNameNodeContents())[ CD ]
Line_4 $$ for (int i = 0; i < baseDirs.length; i++) -->Line_5 $$ assertTrue(new File(baseDirs[i], "current").isDirectory())[ CD ]
Line_2 $$ void checkResultNameNode(String[] baseDirs, boolean currentShouldExist, boolean previousShouldExist) throws IOException -->Line_11 $$ if (previousShouldExist) [ CD ]
