Line_5 $$ if (!parent.exists()) -->Line_9 $$ if (parent.isFile()) [ CD ]
Line_3 $$ File ioFile = CvsVfsUtil.getFileFor(file)-->Line_4 $$ final File parent = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)[ FD ]
Line_9 $$ if (parent.isFile()) -->Line_10 $$ return null[ CD ]
Line_4 $$ final File parent = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)-->Line_9 $$ if (parent.isFile()) [ FD ]
Line_6 $$ if (!parent.mkdirs()) -->Line_7 $$ return null[ CD ]
Line_2 $$ private static File createFromRevisionAndPath(final VirtualFile file, final String revision) -->Line_12 $$ return new File(parent, ".#" + ioFile.getName() + "." + revision)[ CD ]
Line_2 $$ private static File createFromRevisionAndPath(final VirtualFile file, final String revision) -->Line_3 $$ File ioFile = CvsVfsUtil.getFileFor(file)[ FD ]
Line_5 $$ if (!parent.exists()) -->Line_6 $$ if (!parent.mkdirs()) [ CD ]
Line_4 $$ final File parent = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)-->Line_6 $$ if (!parent.mkdirs()) [ FD ]
Line_4 $$ final File parent = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)-->Line_5 $$ if (!parent.exists()) [ FD ]
Line_2 $$ private static File createFromRevisionAndPath(final VirtualFile file, final String revision) -->Line_4 $$ final File parent = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)[ CD ]
Line_2 $$ private static File createFromRevisionAndPath(final VirtualFile file, final String revision) -->Line_3 $$ File ioFile = CvsVfsUtil.getFileFor(file)[ CD ]
Line_2 $$ private static File createFromRevisionAndPath(final VirtualFile file, final String revision) -->Line_5 $$ if (!parent.exists()) [ CD ]
Line_3 $$ File ioFile = CvsVfsUtil.getFileFor(file)-->Line_12 $$ return new File(parent, ".#" + ioFile.getName() + "." + revision)[ FD ]
