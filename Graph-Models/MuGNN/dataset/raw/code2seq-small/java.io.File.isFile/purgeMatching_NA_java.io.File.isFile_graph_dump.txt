Line_3 $$ for (File f : FileUtil.listFiles(dir)) -->Line_12 $$ if (!f.delete()) [ FD ]
Line_3 $$ for (File f : FileUtil.listFiles(dir)) -->Line_7 $$ Matcher matcher = p.matcher(f.getName())[ FD ]
Line_10 $$ if (txid < minTxIdToKeep) -->Line_12 $$ if (!f.delete()) [ CD ]
Line_12 $$ if (!f.delete()) -->Line_13 $$ LOG.warn("Unable to delete no-longer-needed data " + f)[ CD ]
Line_10 $$ if (txid < minTxIdToKeep) -->Line_11 $$ LOG.info("Purging no-longer needed file " + txid)[ CD ]
Line_3 $$ for (File f : FileUtil.listFiles(dir)) -->Line_4 $$ if (!f.isFile())[ FD ]
Line_8 $$ if (matcher.matches()) -->Line_9 $$ long txid = Long.parseLong(matcher.group(1))[ CD ]
Line_9 $$ long txid = Long.parseLong(matcher.group(1))-->Line_10 $$ if (txid < minTxIdToKeep) [ FD ]
Line_6 $$ for (Pattern p : patterns) -->Line_7 $$ Matcher matcher = p.matcher(f.getName())[ FD ]
Line_7 $$ Matcher matcher = p.matcher(f.getName())-->Line_9 $$ long txid = Long.parseLong(matcher.group(1))[ FD ]
Line_2 $$ private static void purgeMatching(File dir, List<Pattern> patterns, long minTxIdToKeep) throws IOException -->Line_10 $$ if (txid < minTxIdToKeep) [ FD ]
Line_7 $$ Matcher matcher = p.matcher(f.getName())-->Line_8 $$ if (matcher.matches()) [ FD ]
Line_2 $$ private static void purgeMatching(File dir, List<Pattern> patterns, long minTxIdToKeep) throws IOException -->Line_3 $$ for (File f : FileUtil.listFiles(dir)) [ FD ]
Line_8 $$ if (matcher.matches()) -->Line_10 $$ if (txid < minTxIdToKeep) [ CD ]
