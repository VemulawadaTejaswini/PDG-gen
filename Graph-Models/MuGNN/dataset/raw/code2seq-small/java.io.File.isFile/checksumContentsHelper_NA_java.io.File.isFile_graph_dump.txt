Line_10 $$ if (recursive) -->Line_11 $$ checksumContentsHelper(nodeType, list[i], checksum, recursive)[ CD ]
Line_18 $$ FileInputStream fis = null-->Line_27 $$ if (fis != null) [ FD ]
Line_6 $$ File[] list = dir.listFiles()-->Line_7 $$ Arrays.sort(list)[ FD ]
Line_18 $$ FileInputStream fis = null-->Line_28 $$ fis.close()[ FD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_3 $$ if (!dir.isDirectory()) [ CD ]
Line_22 $$ int bytesRead-->Line_23 $$ while ((bytesRead = fis.read(buffer)) != -1) [ FD ]
Line_18 $$ FileInputStream fis = null-->Line_20 $$ fis = new FileInputStream(list[i])[ FD ]
Line_8 $$ for (int i = 0; i < list.length; i++) -->Line_9 $$ if (!list[i].isFile()) [ CD ]
Line_21 $$ byte[] buffer = new byte[1024]-->Line_24 $$ checksum.update(buffer, 0, bytesRead)[ FD ]
Line_18 $$ FileInputStream fis = null-->Line_23 $$ while ((bytesRead = fis.read(buffer)) != -1) [ FD ]
Line_23 $$ while ((bytesRead = fis.read(buffer)) != -1) -->Line_24 $$ checksum.update(buffer, 0, bytesRead)[ FD ]
Line_20 $$ fis = new FileInputStream(list[i])-->Line_27 $$ if (fis != null) [ FD ]
Line_21 $$ byte[] buffer = new byte[1024]-->Line_23 $$ while ((bytesRead = fis.read(buffer)) != -1) [ FD ]
Line_23 $$ while ((bytesRead = fis.read(buffer)) != -1) -->Line_24 $$ checksum.update(buffer, 0, bytesRead)[ CD ]
Line_27 $$ if (fis != null) -->Line_28 $$ fis.close()[ CD ]
Line_20 $$ fis = new FileInputStream(list[i])-->Line_28 $$ fis.close()[ FD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_3 $$ if (!dir.isDirectory()) [ FD ]
Line_9 $$ if (!list[i].isFile()) -->Line_10 $$ if (recursive) [ CD ]
Line_8 $$ for (int i = 0; i < list.length; i++) -->Line_15 $$ if (nodeType == DATA_NODE && (list[i].getName().equals("VERSION") || list[i].getName().equals("dfsUsed"))) [ CD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_24 $$ checksum.update(buffer, 0, bytesRead)[ FD ]
Line_8 $$ for (int i = 0; i < list.length; i++) -->Line_18 $$ FileInputStream fis = null[ CD ]
Line_20 $$ fis = new FileInputStream(list[i])-->Line_23 $$ while ((bytesRead = fis.read(buffer)) != -1) [ FD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_8 $$ for (int i = 0; i < list.length; i++) [ CD ]
Line_22 $$ int bytesRead-->Line_24 $$ checksum.update(buffer, 0, bytesRead)[ FD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_11 $$ checksumContentsHelper(nodeType, list[i], checksum, recursive)[ FD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_7 $$ Arrays.sort(list)[ CD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_6 $$ File[] list = dir.listFiles()[ FD ]
Line_2 $$ public static void checksumContentsHelper(NodeType nodeType, File dir, CRC32 checksum, boolean recursive) throws IOException -->Line_6 $$ File[] list = dir.listFiles()[ CD ]
