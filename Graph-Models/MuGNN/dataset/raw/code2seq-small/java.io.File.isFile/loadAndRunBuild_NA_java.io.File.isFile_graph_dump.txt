Line_4 $$ if (configPath != null) -->Line_5 $$ File optionsDir = new File(configPath, "options")[ CD ]
Line_14 $$ if (scriptPath != null) -->Line_20 $$ initializer = new GroovyModelInitializer(scriptFile)[ CD ]
Line_35 $$ if (dataStorageRoot == null) -->Line_36 $$ System.err.println("Error: Cannot determine build data storage root for project " + projectPath)[ CD ]
Line_30 $$ if (cacheDirPath != null) -->Line_31 $$ dataStorageRoot = new File(cacheDirPath)[ CD ]
Line_35 $$ if (dataStorageRoot == null) -->Line_37 $$ return 1[ CD ]
Line_6 $$ if (!optionsDir.isDirectory()) -->Line_7 $$ System.err.println("'" + configPath + "' is not valid config path: " + optionsDir.getAbsolutePath() + " not found")[ CD ]
Line_5 $$ File optionsDir = new File(configPath, "options")-->Line_6 $$ if (!optionsDir.isDirectory()) [ FD ]
Line_33 $$ dataStorageRoot = Utils.getDataStorageRoot(projectPath)-->Line_35 $$ if (dataStorageRoot == null) [ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_48 $$ return consoleMessageHandler.hasErrors() ? 1 : 0[ CD ]
Line_29 $$ File dataStorageRoot-->Line_42 $$ runBuild(loader, dataStorageRoot, !incremental, modulesSet, allModules, artifactsList, allArtifacts, true, consoleMessageHandler)[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_26 $$ JpsModelLoaderImpl loader = new JpsModelLoaderImpl(projectPath, globalOptionsPath, initializer)[ CD ]
Line_39 $$ ConsoleMessageHandler consoleMessageHandler = new ConsoleMessageHandler()-->Line_42 $$ runBuild(loader, dataStorageRoot, !incremental, modulesSet, allModules, artifactsList, allArtifacts, true, consoleMessageHandler)[ FD ]
Line_29 $$ File dataStorageRoot-->Line_35 $$ if (dataStorageRoot == null) [ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_3 $$ String globalOptionsPath = null[ CD ]
Line_31 $$ dataStorageRoot = new File(cacheDirPath)-->Line_35 $$ if (dataStorageRoot == null) [ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_28 $$ List<String> artifactsList = Arrays.asList(artifacts)[ CD ]
Line_29 $$ File dataStorageRoot-->Line_31 $$ dataStorageRoot = new File(cacheDirPath)[ FD ]
Line_6 $$ if (!optionsDir.isDirectory()) -->Line_8 $$ return 1[ CD ]
Line_15 $$ File scriptFile = new File(scriptPath)-->Line_16 $$ if (!scriptFile.isFile()) [ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_47 $$ System.out.println("Build finished in " + Utils.formatDuration(System.currentTimeMillis() - start))[ CD ]
Line_31 $$ dataStorageRoot = new File(cacheDirPath)-->Line_33 $$ dataStorageRoot = Utils.getDataStorageRoot(projectPath)[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_35 $$ if (dataStorageRoot == null) [ CD ]
Line_4 $$ if (configPath != null) -->Line_10 $$ globalOptionsPath = optionsDir.getAbsolutePath()[ CD ]
Line_5 $$ File optionsDir = new File(configPath, "options")-->Line_10 $$ globalOptionsPath = optionsDir.getAbsolutePath()[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_29 $$ File dataStorageRoot[ CD ]
Line_16 $$ if (!scriptFile.isFile()) -->Line_17 $$ System.err.println("Script '" + scriptPath + "' not found")[ CD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_30 $$ if (cacheDirPath != null) [ CD ]
Line_3 $$ String globalOptionsPath = null-->Line_10 $$ globalOptionsPath = optionsDir.getAbsolutePath()[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_39 $$ ConsoleMessageHandler consoleMessageHandler = new ConsoleMessageHandler()[ CD ]
Line_22 $$ if (modules.length == 0 && artifacts.length == 0 && !allModules && !allArtifacts) -->Line_24 $$ return 1[ CD ]
Line_5 $$ File optionsDir = new File(configPath, "options")-->Line_7 $$ System.err.println("'" + configPath + "' is not valid config path: " + optionsDir.getAbsolutePath() + " not found")[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_40 $$ long start = System.currentTimeMillis()[ CD ]
Line_28 $$ List<String> artifactsList = Arrays.asList(artifacts)-->Line_42 $$ runBuild(loader, dataStorageRoot, !incremental, modulesSet, allModules, artifactsList, allArtifacts, true, consoleMessageHandler)[ FD ]
Line_12 $$ ParameterizedRunnable<JpsModel> initializer = null-->Line_20 $$ initializer = new GroovyModelInitializer(scriptFile)[ FD ]
Line_22 $$ if (modules.length == 0 && artifacts.length == 0 && !allModules && !allArtifacts) -->Line_23 $$ System.err.println("Nothing to compile: at least one of --modules, --artifacts, --all-modules or --all-artifacts parameters must be specified")[ CD ]
Line_39 $$ ConsoleMessageHandler consoleMessageHandler = new ConsoleMessageHandler()-->Line_48 $$ return consoleMessageHandler.hasErrors() ? 1 : 0[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_33 $$ dataStorageRoot = Utils.getDataStorageRoot(projectPath)[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_12 $$ ParameterizedRunnable<JpsModel> initializer = null[ CD ]
Line_30 $$ if (cacheDirPath != null) -->Line_33 $$ dataStorageRoot = Utils.getDataStorageRoot(projectPath)[ CD ]
Line_26 $$ JpsModelLoaderImpl loader = new JpsModelLoaderImpl(projectPath, globalOptionsPath, initializer)-->Line_42 $$ runBuild(loader, dataStorageRoot, !incremental, modulesSet, allModules, artifactsList, allArtifacts, true, consoleMessageHandler)[ FD ]
Line_29 $$ File dataStorageRoot-->Line_33 $$ dataStorageRoot = Utils.getDataStorageRoot(projectPath)[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_14 $$ if (scriptPath != null) [ CD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_4 $$ if (configPath != null) [ CD ]
Line_14 $$ if (scriptPath != null) -->Line_16 $$ if (!scriptFile.isFile()) [ CD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_22 $$ if (modules.length == 0 && artifacts.length == 0 && !allModules && !allArtifacts) [ CD ]
Line_31 $$ dataStorageRoot = new File(cacheDirPath)-->Line_42 $$ runBuild(loader, dataStorageRoot, !incremental, modulesSet, allModules, artifactsList, allArtifacts, true, consoleMessageHandler)[ FD ]
Line_14 $$ if (scriptPath != null) -->Line_15 $$ File scriptFile = new File(scriptPath)[ CD ]
Line_27 $$ Set<String> modulesSet = new HashSet<String>(Arrays.asList(modules))-->Line_42 $$ runBuild(loader, dataStorageRoot, !incremental, modulesSet, allModules, artifactsList, allArtifacts, true, consoleMessageHandler)[ FD ]
Line_16 $$ if (!scriptFile.isFile()) -->Line_18 $$ return 1[ CD ]
Line_4 $$ if (configPath != null) -->Line_6 $$ if (!optionsDir.isDirectory()) [ CD ]
Line_33 $$ dataStorageRoot = Utils.getDataStorageRoot(projectPath)-->Line_42 $$ runBuild(loader, dataStorageRoot, !incremental, modulesSet, allModules, artifactsList, allArtifacts, true, consoleMessageHandler)[ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_13 $$ String scriptPath = initializationScriptPath[ CD ]
Line_13 $$ String scriptPath = initializationScriptPath-->Line_14 $$ if (scriptPath != null) [ FD ]
Line_2 $$ public int loadAndRunBuild(final String projectPath) -->Line_27 $$ Set<String> modulesSet = new HashSet<String>(Arrays.asList(modules))[ CD ]
