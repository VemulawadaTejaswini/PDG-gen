Line_2 $$ private File findDependencyJar(String module, String name) -->Line_16 $$ throw new IllegalArgumentException(String.format("Cannot find JAR '%s' required by module '%s' using classpath or distribution directory '%s'", name, module, gradleDistributionLocator.getGradleHome()))[ FD ]
Line_3 $$ File jarFile = classpathJars.get(name)-->Line_4 $$ if (jarFile != null) [ FD ]
Line_12 $$ if (jarFile.isFile()) -->Line_13 $$ return jarFile[ CD ]
Line_2 $$ private File findDependencyJar(String module, String name) -->Line_8 $$ throw new IllegalArgumentException(String.format("Cannot find JAR '%s' required by module '%s' using classpath.", name, module))[ FD ]
Line_4 $$ if (jarFile != null) -->Line_5 $$ return jarFile[ CD ]
Line_2 $$ private File findDependencyJar(String module, String name) -->Line_7 $$ if (gradleDistributionLocator.getGradleHome() == null) [ CD ]
Line_2 $$ private File findDependencyJar(String module, String name) -->Line_3 $$ File jarFile = classpathJars.get(name)[ CD ]
Line_3 $$ File jarFile = classpathJars.get(name)-->Line_12 $$ if (jarFile.isFile()) [ FD ]
Line_2 $$ private File findDependencyJar(String module, String name) -->Line_4 $$ if (jarFile != null) [ CD ]
Line_3 $$ File jarFile = classpathJars.get(name)-->Line_11 $$ jarFile = new File(libDir, name)[ FD ]
Line_11 $$ jarFile = new File(libDir, name)-->Line_12 $$ if (jarFile.isFile()) [ FD ]
Line_2 $$ private File findDependencyJar(String module, String name) -->Line_3 $$ File jarFile = classpathJars.get(name)[ FD ]
