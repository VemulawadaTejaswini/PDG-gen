Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_4 $$ if (!file.isFile()) [ CD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_8 $$ int index = Bytes.indexOf(data, stringToCorrupt)[ CD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_8 $$ int index = Bytes.indexOf(data, stringToCorrupt)[ FD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_4 $$ if (!file.isFile()) [ FD ]
Line_8 $$ int index = Bytes.indexOf(data, stringToCorrupt)-->Line_9 $$ if (index == -1) [ FD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_15 $$ Files.write(data, file)[ FD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_7 $$ byte[] data = Files.toByteArray(file)[ FD ]
Line_12 $$ for (int i = 0; i < stringToCorrupt.length; i++) -->Line_13 $$ data[index + i] = replacement[i][ CD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_15 $$ Files.write(data, file)[ CD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_3 $$ Preconditions.checkArgument(replacement.length == stringToCorrupt.length)[ CD ]
Line_7 $$ byte[] data = Files.toByteArray(file)-->Line_15 $$ Files.write(data, file)[ FD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_9 $$ if (index == -1) [ CD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_12 $$ for (int i = 0; i < stringToCorrupt.length; i++) [ CD ]
Line_7 $$ byte[] data = Files.toByteArray(file)-->Line_8 $$ int index = Bytes.indexOf(data, stringToCorrupt)[ FD ]
Line_2 $$ public static void corruptFile(File file, byte[] stringToCorrupt, byte[] replacement) throws IOException -->Line_7 $$ byte[] data = Files.toByteArray(file)[ CD ]
