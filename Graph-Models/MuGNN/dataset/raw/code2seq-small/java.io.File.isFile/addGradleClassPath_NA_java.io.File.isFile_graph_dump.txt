Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_17 $$ classpath.add(child.getAbsolutePath())[ FD ]
Line_4 $$ String gradleToolingApiJarPath = PathUtil.getJarPathForClass(ProjectConnection.class)-->Line_5 $$ if (!StringUtil.isEmpty(gradleToolingApiJarPath)) [ FD ]
Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_5 $$ if (!StringUtil.isEmpty(gradleToolingApiJarPath)) [ CD ]
Line_5 $$ if (!StringUtil.isEmpty(gradleToolingApiJarPath)) -->Line_6 $$ gradleLibDirPath = PathUtil.getParentPath(gradleToolingApiJarPath)[ CD ]
Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_3 $$ String gradleLibDirPath = null[ CD ]
Line_6 $$ gradleLibDirPath = PathUtil.getParentPath(gradleToolingApiJarPath)-->Line_8 $$ if (gradleLibDirPath == null || gradleLibDirPath.isEmpty())[ FD ]
Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_4 $$ String gradleToolingApiJarPath = PathUtil.getJarPathForClass(ProjectConnection.class)[ CD ]
Line_8 $$ if (gradleLibDirPath == null || gradleLibDirPath.isEmpty())-->Line_9 $$ return[ CD ]
Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_10 $$ File gradleLibDir = new File(gradleLibDirPath)[ CD ]
Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_13 $$ File[] children = FileUtil.notNullize(gradleLibDir.listFiles())[ CD ]
Line_10 $$ File gradleLibDir = new File(gradleLibDirPath)-->Line_13 $$ File[] children = FileUtil.notNullize(gradleLibDir.listFiles())[ FD ]
Line_14 $$ for (File child : children) -->Line_15 $$ final String fileName = child.getName()[ FD ]
Line_10 $$ File gradleLibDir = new File(gradleLibDirPath)-->Line_11 $$ if (!gradleLibDir.isDirectory())[ FD ]
Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_8 $$ if (gradleLibDirPath == null || gradleLibDirPath.isEmpty())[ CD ]
Line_11 $$ if (!gradleLibDir.isDirectory())-->Line_12 $$ return[ CD ]
Line_16 $$ if (fileName.endsWith(".jar") && child.isFile()) -->Line_17 $$ classpath.add(child.getAbsolutePath())[ CD ]
Line_14 $$ for (File child : children) -->Line_16 $$ if (fileName.endsWith(".jar") && child.isFile()) [ FD ]
Line_14 $$ for (File child : children) -->Line_17 $$ classpath.add(child.getAbsolutePath())[ FD ]
Line_4 $$ String gradleToolingApiJarPath = PathUtil.getJarPathForClass(ProjectConnection.class)-->Line_6 $$ gradleLibDirPath = PathUtil.getParentPath(gradleToolingApiJarPath)[ FD ]
Line_3 $$ String gradleLibDirPath = null-->Line_6 $$ gradleLibDirPath = PathUtil.getParentPath(gradleToolingApiJarPath)[ FD ]
Line_2 $$ private static void addGradleClassPath(@NotNull final List<String> classpath) -->Line_11 $$ if (!gradleLibDir.isDirectory())[ CD ]
Line_15 $$ final String fileName = child.getName()-->Line_16 $$ if (fileName.endsWith(".jar") && child.isFile()) [ FD ]
Line_3 $$ String gradleLibDirPath = null-->Line_8 $$ if (gradleLibDirPath == null || gradleLibDirPath.isEmpty())[ FD ]
