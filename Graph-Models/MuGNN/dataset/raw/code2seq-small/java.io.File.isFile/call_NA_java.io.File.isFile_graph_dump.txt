Line_2 $$ public File call() throws Exception -->Line_4 $$ if (distDir.isDirectory() && markerFile.isFile()) [ CD ]
Line_4 $$ if (distDir.isDirectory() && markerFile.isFile()) -->Line_5 $$ return getAndVerifyDistributionRoot(distDir, distDir.getAbsolutePath())[ CD ]
Line_2 $$ public File call() throws Exception -->Line_26 $$ return root[ CD ]
Line_23 $$ File root = getAndVerifyDistributionRoot(distDir, distributionUrl.toString())-->Line_24 $$ setExecutablePermissions(root)[ FD ]
Line_3 $$ final File markerFile = new File(localZipFile.getParentFile(), localZipFile.getName() + ".ok")-->Line_4 $$ if (distDir.isDirectory() && markerFile.isFile()) [ FD ]
Line_2 $$ public File call() throws Exception -->Line_21 $$ logger.log("Unzipping " + localZipFile.getAbsolutePath() + " to " + distDir.getAbsolutePath())[ CD ]
Line_2 $$ public File call() throws Exception -->Line_20 $$ verifyDownloadChecksum(configuration.getDistribution().toString(), localZipFile, distributionSha256Sum)[ CD ]
Line_9 $$ File tmpZipFile = new File(localZipFile.getParentFile(), localZipFile.getName() + ".part")-->Line_10 $$ tmpZipFile.delete()[ FD ]
Line_8 $$ if (needsDownload) -->Line_13 $$ tmpZipFile.renameTo(localZipFile)[ CD ]
Line_2 $$ public File call() throws Exception -->Line_24 $$ setExecutablePermissions(root)[ CD ]
Line_2 $$ public File call() throws Exception -->Line_25 $$ markerFile.createNewFile()[ CD ]
Line_3 $$ final File markerFile = new File(localZipFile.getParentFile(), localZipFile.getName() + ".ok")-->Line_25 $$ markerFile.createNewFile()[ FD ]
Line_16 $$ for (File dir : topLevelDirs) -->Line_17 $$ logger.log("Deleting directory " + dir.getAbsolutePath())[ FD ]
Line_2 $$ public File call() throws Exception -->Line_22 $$ unzip(localZipFile, distDir)[ CD ]
Line_2 $$ public File call() throws Exception -->Line_23 $$ File root = getAndVerifyDistributionRoot(distDir, distributionUrl.toString())[ CD ]
Line_2 $$ public File call() throws Exception -->Line_3 $$ final File markerFile = new File(localZipFile.getParentFile(), localZipFile.getName() + ".ok")[ CD ]
Line_9 $$ File tmpZipFile = new File(localZipFile.getParentFile(), localZipFile.getName() + ".part")-->Line_13 $$ tmpZipFile.renameTo(localZipFile)[ FD ]
Line_9 $$ File tmpZipFile = new File(localZipFile.getParentFile(), localZipFile.getName() + ".part")-->Line_12 $$ download.download(distributionUrl, tmpZipFile)[ FD ]
Line_8 $$ if (needsDownload) -->Line_11 $$ logger.log("Downloading " + distributionUrl)[ CD ]
Line_8 $$ if (needsDownload) -->Line_10 $$ tmpZipFile.delete()[ CD ]
Line_8 $$ if (needsDownload) -->Line_9 $$ File tmpZipFile = new File(localZipFile.getParentFile(), localZipFile.getName() + ".part")[ CD ]
Line_2 $$ public File call() throws Exception -->Line_15 $$ List<File> topLevelDirs = listDirs(distDir)[ CD ]
Line_16 $$ for (File dir : topLevelDirs) -->Line_18 $$ deleteDir(dir)[ FD ]
Line_8 $$ if (needsDownload) -->Line_12 $$ download.download(distributionUrl, tmpZipFile)[ CD ]
Line_2 $$ public File call() throws Exception -->Line_7 $$ boolean needsDownload = !localZipFile.isFile()[ CD ]
Line_2 $$ public File call() throws Exception -->Line_8 $$ if (needsDownload) [ CD ]
