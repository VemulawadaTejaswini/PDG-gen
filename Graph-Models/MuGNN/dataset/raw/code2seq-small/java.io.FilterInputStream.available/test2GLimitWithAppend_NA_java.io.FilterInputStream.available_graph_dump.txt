Line_5 $$ class PathCollectionExternalizer implements DataExternalizer<Collection<String>> -->Line_8 $$ IOUtil.writeString(str, out)[ FD ]
Line_15 $$ final String str = IOUtil.readString(stream)-->Line_16 $$ result.add(str)[ FD ]
Line_26 $$ for (int i = 0; i < 2000; i++) -->Line_27 $$ final int finalJ = j[ CD ]
Line_12 $$ final Set<String> result = new THashSet(FileUtil.PATH_HASHING_STRATEGY)-->Line_16 $$ result.add(str)[ FD ]
Line_5 $$ class PathCollectionExternalizer implements DataExternalizer<Collection<String>> -->Line_18 $$ return result[ CD ]
Line_25 $$ for (int j = 0; j < 7; ++j) -->Line_26 $$ for (int i = 0; i < 2000; i++) [ CD ]
Line_14 $$ while (stream.available() > 0) -->Line_15 $$ final String str = IOUtil.readString(stream)[ CD ]
Line_7 $$ for (String str : value) -->Line_8 $$ IOUtil.writeString(str, out)[ FD ]
Line_3 $$ File file = FileUtil.createTempFile("persistent", "map")-->Line_4 $$ FileUtil.createParentDirs(file)[ FD ]
Line_3 $$ File file = FileUtil.createTempFile("persistent", "map")-->Line_42 $$ clearMap(file, map)[ FD ]
Line_26 $$ for (int i = 0; i < 2000; i++) -->Line_28 $$ map.appendData("abc" + i,  out -> IOUtil.writeString(StringUtil.repeat("0123456789", 10000 + finalJ - 3), out))[ CD ]
Line_14 $$ while (stream.available() > 0) -->Line_16 $$ result.add(str)[ CD ]
Line_13 $$ final DataInputStream stream = (DataInputStream) in-->Line_14 $$ while (stream.available() > 0) [ FD ]
Line_13 $$ final DataInputStream stream = (DataInputStream) in-->Line_15 $$ final String str = IOUtil.readString(stream)[ FD ]
Line_2 $$ public void test2GLimitWithAppend() throws IOException -->Line_4 $$ FileUtil.createParentDirs(file)[ CD ]
Line_5 $$ class PathCollectionExternalizer implements DataExternalizer<Collection<String>> -->Line_14 $$ while (stream.available() > 0) [ CD ]
Line_7 $$ for (String str : value) -->Line_16 $$ result.add(str)[ FD ]
Line_25 $$ for (int j = 0; j < 7; ++j) -->Line_30 $$ map.force()[ CD ]
Line_2 $$ public void test2GLimitWithAppend() throws IOException -->Line_3 $$ File file = FileUtil.createTempFile("persistent", "map")[ CD ]
Line_5 $$ class PathCollectionExternalizer implements DataExternalizer<Collection<String>> -->Line_13 $$ final DataInputStream stream = (DataInputStream) in[ CD ]
Line_5 $$ class PathCollectionExternalizer implements DataExternalizer<Collection<String>> -->Line_28 $$ IOUtil.writeString(StringUtil.repeat("0123456789", 10000 + finalJ - 3), out)[ FD ]
Line_5 $$ class PathCollectionExternalizer implements DataExternalizer<Collection<String>> -->Line_12 $$ final Set<String> result = new THashSet(FileUtil.PATH_HASHING_STRATEGY)[ CD ]
