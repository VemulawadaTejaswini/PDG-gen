Line_19 $$ JsonValue prev = null-->Line_27 $$ child.prev = prev[ FD ]
Line_15 $$ if (size == 0)-->Line_16 $$ return result[ CD ]
Line_11 $$ if (type == '#') -->Line_15 $$ if (size == 0)[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_5 $$ byte valueType = 0[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_20 $$ long c = 0[ CD ]
Line_23 $$ final JsonValue child = parse(din, valueType == 0 ? din.readByte() : valueType)-->Line_31 $$ result.child = child[ FD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_37 $$ type = din.readByte()[ CD ]
Line_8 $$ type = din.readByte()-->Line_11 $$ if (type == '#') [ FD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_24 $$ child.setName(key)[ CD ]
Line_4 $$ byte type = din.readByte()-->Line_8 $$ type = din.readByte()[ FD ]
Line_34 $$ prev = child-->Line_27 $$ child.prev = prev[ FD ]
Line_34 $$ prev = child-->Line_26 $$ if (prev != null) [ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_23 $$ final JsonValue child = parse(din, valueType == 0 ? din.readByte() : valueType)[ FD ]
Line_22 $$ final String key = parseString(din, true, type)-->Line_24 $$ child.setName(key)[ FD ]
Line_6 $$ if (type == '$') -->Line_7 $$ valueType = din.readByte()[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_21 $$ while (din.available() > 0 && type != '}') [ FD ]
Line_23 $$ final JsonValue child = parse(din, valueType == 0 ? din.readByte() : valueType)-->Line_24 $$ child.setName(key)[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_4 $$ byte type = din.readByte()[ CD ]
Line_19 $$ JsonValue prev = null-->Line_34 $$ prev = child[ FD ]
Line_8 $$ type = din.readByte()-->Line_37 $$ type = din.readByte()[ FD ]
Line_4 $$ byte type = din.readByte()-->Line_17 $$ type = din.readByte()[ FD ]
Line_20 $$ long c = 0-->Line_35 $$ if (size > 0 && ++c >= size)[ FD ]
Line_26 $$ if (prev != null) -->Line_28 $$ prev.next = child[ CD ]
Line_26 $$ if (prev != null) -->Line_31 $$ result.child = child[ CD ]
Line_3 $$ JsonValue result = new JsonValue(JsonValue.ValueType.object)-->Line_25 $$ child.parent = result[ FD ]
Line_8 $$ type = din.readByte()-->Line_22 $$ final String key = parseString(din, true, type)[ FD ]
Line_26 $$ if (prev != null) -->Line_29 $$ result.size++[ CD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_34 $$ prev = child[ CD ]
Line_11 $$ if (type == '#') -->Line_13 $$ if (size < 0)[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_22 $$ final String key = parseString(din, true, type)[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_7 $$ valueType = din.readByte()[ FD ]
Line_11 $$ if (type == '#') -->Line_12 $$ size = parseSize(din, false, -1)[ CD ]
Line_12 $$ size = parseSize(din, false, -1)-->Line_13 $$ if (size < 0)[ FD ]
Line_4 $$ byte type = din.readByte()-->Line_22 $$ final String key = parseString(din, true, type)[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_8 $$ type = din.readByte()[ FD ]
Line_4 $$ byte type = din.readByte()-->Line_37 $$ type = din.readByte()[ FD ]
Line_4 $$ byte type = din.readByte()-->Line_11 $$ if (type == '#') [ FD ]
Line_11 $$ if (type == '#') -->Line_17 $$ type = din.readByte()[ CD ]
Line_23 $$ final JsonValue child = parse(din, valueType == 0 ? din.readByte() : valueType)-->Line_28 $$ prev.next = child[ FD ]
Line_10 $$ long size = -1-->Line_13 $$ if (size < 0)[ FD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_25 $$ child.parent = result[ CD ]
Line_3 $$ JsonValue result = new JsonValue(JsonValue.ValueType.object)-->Line_15 $$ if (size == 0)[ FD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_35 $$ if (size > 0 && ++c >= size)[ CD ]
Line_10 $$ long size = -1-->Line_15 $$ if (size == 0)[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_11 $$ if (type == '#') [ CD ]
Line_4 $$ byte type = din.readByte()-->Line_6 $$ if (type == '$') [ FD ]
Line_26 $$ if (prev != null) -->Line_32 $$ result.size = 1[ CD ]
Line_26 $$ if (prev != null) -->Line_27 $$ child.prev = prev[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_4 $$ byte type = din.readByte()[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_19 $$ JsonValue prev = null[ CD ]
Line_19 $$ JsonValue prev = null-->Line_26 $$ if (prev != null) [ FD ]
Line_6 $$ if (type == '$') -->Line_8 $$ type = din.readByte()[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_10 $$ long size = -1[ CD ]
Line_23 $$ final JsonValue child = parse(din, valueType == 0 ? din.readByte() : valueType)-->Line_34 $$ prev = child[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_3 $$ JsonValue result = new JsonValue(JsonValue.ValueType.object)[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_37 $$ type = din.readByte()[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_17 $$ type = din.readByte()[ FD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_23 $$ final JsonValue child = parse(din, valueType == 0 ? din.readByte() : valueType)[ CD ]
Line_10 $$ long size = -1-->Line_12 $$ size = parseSize(din, false, -1)[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_39 $$ return result[ CD ]
Line_5 $$ byte valueType = 0-->Line_7 $$ valueType = din.readByte()[ FD ]
Line_37 $$ type = din.readByte()-->Line_22 $$ final String key = parseString(din, true, type)[ FD ]
Line_12 $$ size = parseSize(din, false, -1)-->Line_15 $$ if (size == 0)[ FD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_26 $$ if (prev != null) [ CD ]
Line_17 $$ type = din.readByte()-->Line_37 $$ type = din.readByte()[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_12 $$ size = parseSize(din, false, -1)[ FD ]
Line_8 $$ type = din.readByte()-->Line_17 $$ type = din.readByte()[ FD ]
Line_17 $$ type = din.readByte()-->Line_22 $$ final String key = parseString(din, true, type)[ FD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_21 $$ while (din.available() > 0 && type != '}') [ CD ]
Line_21 $$ while (din.available() > 0 && type != '}') -->Line_22 $$ final String key = parseString(din, true, type)[ CD ]
Line_2 $$ protected JsonValue parseObject(final DataInputStream din) throws IOException -->Line_6 $$ if (type == '$') [ CD ]
