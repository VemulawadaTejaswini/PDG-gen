Line_2 $$ private Map<Key, Value> deserializeSavedPersistentData(ByteSequence bytes) throws IOException -->Line_13 $$ return result[ CD ]
Line_2 $$ private Map<Key, Value> deserializeSavedPersistentData(ByteSequence bytes) throws IOException -->Line_5 $$ if (pairs == 0)[ CD ]
Line_2 $$ private Map<Key, Value> deserializeSavedPersistentData(ByteSequence bytes) throws IOException -->Line_8 $$ while (stream.available() > 0) [ CD ]
Line_2 $$ private Map<Key, Value> deserializeSavedPersistentData(ByteSequence bytes) throws IOException -->Line_4 $$ int pairs = DataInputOutputUtil.readINT(stream)[ CD ]
Line_2 $$ private Map<Key, Value> deserializeSavedPersistentData(ByteSequence bytes) throws IOException -->Line_3 $$ DataInputStream stream = new DataInputStream(new UnsyncByteArrayInputStream(bytes.getBytes(), bytes.getOffset(), bytes.getLength()))[ CD ]
Line_3 $$ DataInputStream stream = new DataInputStream(new UnsyncByteArrayInputStream(bytes.getBytes(), bytes.getOffset(), bytes.getLength()))-->Line_8 $$ while (stream.available() > 0) [ FD ]
Line_3 $$ DataInputStream stream = new DataInputStream(new UnsyncByteArrayInputStream(bytes.getBytes(), bytes.getOffset(), bytes.getLength()))-->Line_9 $$ Value value = myValueExternalizer.read(stream)[ FD ]
Line_2 $$ private Map<Key, Value> deserializeSavedPersistentData(ByteSequence bytes) throws IOException -->Line_3 $$ DataInputStream stream = new DataInputStream(new UnsyncByteArrayInputStream(bytes.getBytes(), bytes.getOffset(), bytes.getLength()))[ FD ]
Line_8 $$ while (stream.available() > 0) -->Line_9 $$ Value value = myValueExternalizer.read(stream)[ CD ]
Line_5 $$ if (pairs == 0)-->Line_6 $$ return Collections.emptyMap()[ CD ]
Line_8 $$ while (stream.available() > 0) -->Line_10 $$ Collection<Key> keys = mySnapshotIndexExternalizer.read(stream)[ CD ]
Line_9 $$ Value value = myValueExternalizer.read(stream)-->Line_11 $$ result.put(k, value)[ FD ]
Line_3 $$ DataInputStream stream = new DataInputStream(new UnsyncByteArrayInputStream(bytes.getBytes(), bytes.getOffset(), bytes.getLength()))-->Line_4 $$ int pairs = DataInputOutputUtil.readINT(stream)[ FD ]
Line_3 $$ DataInputStream stream = new DataInputStream(new UnsyncByteArrayInputStream(bytes.getBytes(), bytes.getOffset(), bytes.getLength()))-->Line_10 $$ Collection<Key> keys = mySnapshotIndexExternalizer.read(stream)[ FD ]
Line_2 $$ private Map<Key, Value> deserializeSavedPersistentData(ByteSequence bytes) throws IOException -->Line_7 $$ Map<Key, Value> result = new THashMap<Key, Value>(pairs)[ CD ]
Line_4 $$ int pairs = DataInputOutputUtil.readINT(stream)-->Line_5 $$ if (pairs == 0)[ FD ]
Line_7 $$ Map<Key, Value> result = new THashMap<Key, Value>(pairs)-->Line_11 $$ result.put(k, value)[ FD ]
