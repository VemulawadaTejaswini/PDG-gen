Line_4 $$ final DataInputStream is = FRAMEWORK_FILE_ATTRIBUTE.readAttribute(file)-->Line_13 $$ is.close()[ FD ]
Line_2 $$ public static String getFrameworkIdOfBuildFile(VirtualFile file) -->Line_3 $$ if (file instanceof NewVirtualFile) [ FD ]
Line_3 $$ if (file instanceof NewVirtualFile) -->Line_19 $$ return ""[ CD ]
Line_3 $$ if (file instanceof NewVirtualFile) -->Line_5 $$ if (is != null) [ CD ]
Line_2 $$ public static String getFrameworkIdOfBuildFile(VirtualFile file) -->Line_21 $$ return file.getUserData(FRAMEWORK_FILE_MARKER)[ CD ]
Line_4 $$ final DataInputStream is = FRAMEWORK_FILE_ATTRIBUTE.readAttribute(file)-->Line_5 $$ if (is != null) [ FD ]
Line_8 $$ if (is.available() == 0) -->Line_9 $$ return null[ CD ]
Line_2 $$ public static String getFrameworkIdOfBuildFile(VirtualFile file) -->Line_16 $$ LOG.error(file.getPath(), e)[ FD ]
Line_2 $$ public static String getFrameworkIdOfBuildFile(VirtualFile file) -->Line_21 $$ return file.getUserData(FRAMEWORK_FILE_MARKER)[ FD ]
Line_4 $$ final DataInputStream is = FRAMEWORK_FILE_ATTRIBUTE.readAttribute(file)-->Line_8 $$ if (is.available() == 0) [ FD ]
Line_2 $$ public static String getFrameworkIdOfBuildFile(VirtualFile file) -->Line_3 $$ if (file instanceof NewVirtualFile) [ CD ]
Line_3 $$ if (file instanceof NewVirtualFile) -->Line_4 $$ final DataInputStream is = FRAMEWORK_FILE_ATTRIBUTE.readAttribute(file)[ CD ]
Line_2 $$ public static String getFrameworkIdOfBuildFile(VirtualFile file) -->Line_4 $$ final DataInputStream is = FRAMEWORK_FILE_ATTRIBUTE.readAttribute(file)[ FD ]
Line_4 $$ final DataInputStream is = FRAMEWORK_FILE_ATTRIBUTE.readAttribute(file)-->Line_11 $$ return IOUtil.readString(is)[ FD ]
