Line_22 $$ final Value value = externalizer.read(stream)-->Line_27 $$ mapping.associateFileIdToValue(idCountOrSingleValue, value)[ FD ]
Line_24 $$ if (idCountOrSingleValue > 0) -->Line_30 $$ ChangeBufferingList changeBufferingList = ensureFileSetCapacityForValue(value, idCountOrSingleValue)[ CD ]
Line_21 $$ for (int valueIdx = 0; valueIdx < valueCount; valueIdx++) -->Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)[ CD ]
Line_6 $$ if (valueCount < 0) -->Line_21 $$ for (int valueIdx = 0; valueIdx < valueCount; valueIdx++) [ CD ]
Line_2 $$ public void readFrom(DataInputStream stream, DataExternalizer<Value> externalizer) throws IOException -->Line_4 $$ while (stream.available() > 0) [ CD ]
Line_2 $$ public void readFrom(DataInputStream stream, DataExternalizer<Value> externalizer) throws IOException -->Line_22 $$ final Value value = externalizer.read(stream)[ FD ]
Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)-->Line_25 $$ addValue(idCountOrSingleValue, value)[ FD ]
Line_29 $$ idCountOrSingleValue = -idCountOrSingleValue-->Line_24 $$ if (idCountOrSingleValue > 0) [ FD ]
Line_3 $$ FileId2ValueMapping<Value> mapping = null-->Line_13 $$ doCompact = mapping.removeFileId(inputId)[ FD ]
Line_24 $$ if (idCountOrSingleValue > 0) -->Line_25 $$ addValue(idCountOrSingleValue, value)[ CD ]
Line_2 $$ public void readFrom(DataInputStream stream, DataExternalizer<Value> externalizer) throws IOException -->Line_5 $$ final int valueCount = DataInputOutputUtil.readINT(stream)[ FD ]
Line_34 $$ if (changeBufferingList != null)-->Line_35 $$ changeBufferingList.add(prev + id)[ CD ]
Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)-->Line_38 $$ if (mapping != null)[ FD ]
Line_22 $$ final Value value = externalizer.read(stream)-->Line_30 $$ ChangeBufferingList changeBufferingList = ensureFileSetCapacityForValue(value, idCountOrSingleValue)[ FD ]
Line_6 $$ if (valueCount < 0) -->Line_18 $$ if (doCompact)[ CD ]
Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)-->Line_26 $$ if (mapping != null)[ FD ]
Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)-->Line_30 $$ ChangeBufferingList changeBufferingList = ensureFileSetCapacityForValue(value, idCountOrSingleValue)[ FD ]
Line_33 $$ final int id = DataInputOutputUtil.readINT(stream)-->Line_40 $$ prev += id[ FD ]
Line_5 $$ final int valueCount = DataInputOutputUtil.readINT(stream)-->Line_7 $$ final int inputId = -valueCount[ FD ]
Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)-->Line_24 $$ if (idCountOrSingleValue > 0) [ FD ]
Line_3 $$ FileId2ValueMapping<Value> mapping = null-->Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)[ FD ]
Line_13 $$ doCompact = mapping.removeFileId(inputId)-->Line_16 $$ doCompact = true[ FD ]
Line_6 $$ if (valueCount < 0) -->Line_8 $$ if (mapping == null && size() > NUMBER_OF_VALUES_THRESHOLD) [ CD ]
Line_11 $$ boolean doCompact-->Line_16 $$ doCompact = true[ FD ]
Line_3 $$ FileId2ValueMapping<Value> mapping = null-->Line_27 $$ mapping.associateFileIdToValue(idCountOrSingleValue, value)[ FD ]
Line_11 $$ boolean doCompact-->Line_13 $$ doCompact = mapping.removeFileId(inputId)[ FD ]
Line_12 $$ if (mapping != null) -->Line_13 $$ doCompact = mapping.removeFileId(inputId)[ CD ]
Line_38 $$ if (mapping != null)-->Line_39 $$ mapping.associateFileIdToValue(prev + id, value)[ CD ]
Line_34 $$ if (changeBufferingList != null)-->Line_37 $$ addValue(prev + id, value)[ CD ]
Line_8 $$ if (mapping == null && size() > NUMBER_OF_VALUES_THRESHOLD) -->Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)[ CD ]
Line_6 $$ if (valueCount < 0) -->Line_11 $$ boolean doCompact[ CD ]
Line_12 $$ if (mapping != null) -->Line_16 $$ doCompact = true[ CD ]
Line_12 $$ if (mapping != null) -->Line_15 $$ removeAssociatedValue(inputId)[ CD ]
Line_32 $$ for (int i = 0; i < idCountOrSingleValue; i++) -->Line_40 $$ prev += id[ CD ]
Line_22 $$ final Value value = externalizer.read(stream)-->Line_37 $$ addValue(prev + id, value)[ FD ]
Line_2 $$ public void readFrom(DataInputStream stream, DataExternalizer<Value> externalizer) throws IOException -->Line_3 $$ FileId2ValueMapping<Value> mapping = null[ CD ]
Line_24 $$ if (idCountOrSingleValue > 0) -->Line_26 $$ if (mapping != null)[ CD ]
Line_22 $$ final Value value = externalizer.read(stream)-->Line_25 $$ addValue(idCountOrSingleValue, value)[ FD ]
Line_29 $$ idCountOrSingleValue = -idCountOrSingleValue-->Line_27 $$ mapping.associateFileIdToValue(idCountOrSingleValue, value)[ FD ]
Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)-->Line_27 $$ mapping.associateFileIdToValue(idCountOrSingleValue, value)[ FD ]
Line_32 $$ for (int i = 0; i < idCountOrSingleValue; i++) -->Line_34 $$ if (changeBufferingList != null)[ CD ]
Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)-->Line_39 $$ mapping.associateFileIdToValue(prev + id, value)[ FD ]
Line_21 $$ for (int valueIdx = 0; valueIdx < valueCount; valueIdx++) -->Line_24 $$ if (idCountOrSingleValue > 0) [ CD ]
Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)-->Line_12 $$ if (mapping != null) [ FD ]
Line_22 $$ final Value value = externalizer.read(stream)-->Line_39 $$ mapping.associateFileIdToValue(prev + id, value)[ FD ]
Line_5 $$ final int valueCount = DataInputOutputUtil.readINT(stream)-->Line_21 $$ for (int valueIdx = 0; valueIdx < valueCount; valueIdx++) [ FD ]
Line_24 $$ if (idCountOrSingleValue > 0) -->Line_29 $$ idCountOrSingleValue = -idCountOrSingleValue[ CD ]
Line_6 $$ if (valueCount < 0) -->Line_7 $$ final int inputId = -valueCount[ CD ]
Line_21 $$ for (int valueIdx = 0; valueIdx < valueCount; valueIdx++) -->Line_22 $$ final Value value = externalizer.read(stream)[ CD ]
Line_4 $$ while (stream.available() > 0) -->Line_5 $$ final int valueCount = DataInputOutputUtil.readINT(stream)[ CD ]
Line_3 $$ FileId2ValueMapping<Value> mapping = null-->Line_39 $$ mapping.associateFileIdToValue(prev + id, value)[ FD ]
Line_2 $$ public void readFrom(DataInputStream stream, DataExternalizer<Value> externalizer) throws IOException -->Line_4 $$ while (stream.available() > 0) [ FD ]
Line_4 $$ while (stream.available() > 0) -->Line_6 $$ if (valueCount < 0) [ CD ]
Line_9 $$ mapping = new FileId2ValueMapping<Value>(this)-->Line_13 $$ doCompact = mapping.removeFileId(inputId)[ FD ]
Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)-->Line_32 $$ for (int i = 0; i < idCountOrSingleValue; i++) [ FD ]
Line_31 $$ int prev = 0-->Line_40 $$ prev += id[ FD ]
Line_29 $$ idCountOrSingleValue = -idCountOrSingleValue-->Line_30 $$ ChangeBufferingList changeBufferingList = ensureFileSetCapacityForValue(value, idCountOrSingleValue)[ FD ]
Line_3 $$ FileId2ValueMapping<Value> mapping = null-->Line_12 $$ if (mapping != null) [ FD ]
Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)-->Line_27 $$ mapping.associateFileIdToValue(idCountOrSingleValue, value)[ FD ]
Line_32 $$ for (int i = 0; i < idCountOrSingleValue; i++) -->Line_38 $$ if (mapping != null)[ CD ]
Line_30 $$ ChangeBufferingList changeBufferingList = ensureFileSetCapacityForValue(value, idCountOrSingleValue)-->Line_35 $$ changeBufferingList.add(prev + id)[ FD ]
Line_2 $$ public void readFrom(DataInputStream stream, DataExternalizer<Value> externalizer) throws IOException -->Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)[ FD ]
Line_29 $$ idCountOrSingleValue = -idCountOrSingleValue-->Line_25 $$ addValue(idCountOrSingleValue, value)[ FD ]
Line_7 $$ final int inputId = -valueCount-->Line_13 $$ doCompact = mapping.removeFileId(inputId)[ FD ]
Line_26 $$ if (mapping != null)-->Line_27 $$ mapping.associateFileIdToValue(idCountOrSingleValue, value)[ CD ]
Line_5 $$ final int valueCount = DataInputOutputUtil.readINT(stream)-->Line_6 $$ if (valueCount < 0) [ FD ]
Line_29 $$ idCountOrSingleValue = -idCountOrSingleValue-->Line_32 $$ for (int i = 0; i < idCountOrSingleValue; i++) [ FD ]
Line_3 $$ FileId2ValueMapping<Value> mapping = null-->Line_38 $$ if (mapping != null)[ FD ]
Line_6 $$ if (valueCount < 0) -->Line_12 $$ if (mapping != null) [ CD ]
Line_18 $$ if (doCompact)-->Line_19 $$ setNeedsCompacting(true)[ CD ]
Line_2 $$ public void readFrom(DataInputStream stream, DataExternalizer<Value> externalizer) throws IOException -->Line_33 $$ final int id = DataInputOutputUtil.readINT(stream)[ FD ]
Line_3 $$ FileId2ValueMapping<Value> mapping = null-->Line_26 $$ if (mapping != null)[ FD ]
Line_30 $$ ChangeBufferingList changeBufferingList = ensureFileSetCapacityForValue(value, idCountOrSingleValue)-->Line_34 $$ if (changeBufferingList != null)[ FD ]
Line_23 $$ int idCountOrSingleValue = DataInputOutputUtil.readINT(stream)-->Line_29 $$ idCountOrSingleValue = -idCountOrSingleValue[ FD ]
Line_24 $$ if (idCountOrSingleValue > 0) -->Line_31 $$ int prev = 0[ CD ]
Line_32 $$ for (int i = 0; i < idCountOrSingleValue; i++) -->Line_33 $$ final int id = DataInputOutputUtil.readINT(stream)[ CD ]
Line_7 $$ final int inputId = -valueCount-->Line_15 $$ removeAssociatedValue(inputId)[ FD ]
Line_24 $$ if (idCountOrSingleValue > 0) -->Line_32 $$ for (int i = 0; i < idCountOrSingleValue; i++) [ CD ]
