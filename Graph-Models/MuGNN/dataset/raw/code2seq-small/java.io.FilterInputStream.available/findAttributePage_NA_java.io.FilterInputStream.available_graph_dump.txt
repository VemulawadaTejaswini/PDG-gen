Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_43 $$ DataInputOutputUtil.writeINT(appender, fileId)[ FD ]
Line_23 $$ if (inlineAttributes) -->Line_26 $$ return attrAddressOrSize[ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_4 $$ int recordId = getAttributeRecordId(fileId)[ CD ]
Line_8 $$ if (recordId == 0) -->Line_9 $$ if (!toWrite)[ CD ]
Line_4 $$ int recordId = getAttributeRecordId(fileId)-->Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)[ FD ]
Line_38 $$ if (toWrite) -->Line_40 $$ if (bulkAttrReadSupport) [ CD ]
Line_17 $$ if (bulkAttrReadSupport)-->Line_18 $$ skipRecordHeader(attrRefs, DbConnection.RESERVED_ATTR_ID, fileId)[ CD ]
Line_7 $$ Storage storage = getAttributesStorage()-->Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)[ FD ]
Line_38 $$ if (toWrite) -->Line_55 $$ return attrAddress[ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_5 $$ int encodedAttrId = DbConnection.getAttributeId(attr.getId())[ FD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_3 $$ checkFileIsValid(fileId)[ CD ]
Line_5 $$ int encodedAttrId = DbConnection.getAttributeId(attr.getId())-->Line_22 $$ if (attIdOnPage == encodedAttrId) [ FD ]
Line_8 $$ if (recordId == 0) -->Line_13 $$ directoryRecord = true[ CD ]
Line_20 $$ final int attIdOnPage = DataInputOutputUtil.readINT(attrRefs)-->Line_22 $$ if (attIdOnPage == encodedAttrId) [ FD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_6 $$ boolean directoryRecord = false[ CD ]
Line_19 $$ while (attrRefs.available() > 0) -->Line_20 $$ final int attIdOnPage = DataInputOutputUtil.readINT(attrRefs)[ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_9 $$ if (!toWrite)[ FD ]
Line_40 $$ if (bulkAttrReadSupport) -->Line_41 $$ if (directoryRecord) [ CD ]
Line_41 $$ if (directoryRecord) -->Line_42 $$ DataInputOutputUtil.writeINT(appender, DbConnection.RESERVED_ATTR_ID)[ CD ]
Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)-->Line_42 $$ DataInputOutputUtil.writeINT(appender, DbConnection.RESERVED_ATTR_ID)[ FD ]
Line_22 $$ if (attIdOnPage == encodedAttrId) -->Line_23 $$ if (inlineAttributes) [ CD ]
Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)-->Line_46 $$ DataInputOutputUtil.writeINT(appender, encodedAttrId)[ FD ]
Line_38 $$ if (toWrite) -->Line_49 $$ DbConnection.REASONABLY_SMALL.myAttrPageRequested = true[ CD ]
Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_35 $$ attrRefs.close()[ FD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_18 $$ skipRecordHeader(attrRefs, DbConnection.RESERVED_ATTR_ID, fileId)[ FD ]
Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_21 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)[ FD ]
Line_7 $$ Storage storage = getAttributesStorage()-->Line_11 $$ recordId = storage.createNewRecord()[ FD ]
Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)-->Line_48 $$ DataInputOutputUtil.writeINT(appender, inlineAttributes ? attrAddress + MAX_SMALL_ATTR_SIZE : attrAddress)[ FD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_5 $$ int encodedAttrId = DbConnection.getAttributeId(attr.getId())[ CD ]
Line_29 $$ if (inlineAttributes && attrAddressOrSize < MAX_SMALL_ATTR_SIZE) -->Line_30 $$ attrRefs.skipBytes(attrAddressOrSize)[ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_38 $$ if (toWrite) [ CD ]
Line_38 $$ if (toWrite) -->Line_46 $$ DataInputOutputUtil.writeINT(appender, encodedAttrId)[ CD ]
Line_8 $$ if (recordId == 0) -->Line_11 $$ recordId = storage.createNewRecord()[ CD ]
Line_38 $$ if (toWrite) -->Line_48 $$ DataInputOutputUtil.writeINT(appender, inlineAttributes ? attrAddress + MAX_SMALL_ATTR_SIZE : attrAddress)[ CD ]
Line_11 $$ recordId = storage.createNewRecord()-->Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)[ FD ]
Line_22 $$ if (attIdOnPage == encodedAttrId) -->Line_29 $$ if (inlineAttributes && attrAddressOrSize < MAX_SMALL_ATTR_SIZE) [ CD ]
Line_7 $$ Storage storage = getAttributesStorage()-->Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)[ FD ]
Line_6 $$ boolean directoryRecord = false-->Line_13 $$ directoryRecord = true[ FD ]
Line_38 $$ if (toWrite) -->Line_47 $$ int attrAddress = storage.createNewRecord()[ CD ]
Line_8 $$ if (recordId == 0) -->Line_12 $$ setAttributeRecordId(fileId, recordId)[ CD ]
Line_5 $$ int encodedAttrId = DbConnection.getAttributeId(attr.getId())-->Line_46 $$ DataInputOutputUtil.writeINT(appender, encodedAttrId)[ FD ]
Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_20 $$ final int attIdOnPage = DataInputOutputUtil.readINT(attrRefs)[ FD ]
Line_4 $$ int recordId = getAttributeRecordId(fileId)-->Line_11 $$ recordId = storage.createNewRecord()[ FD ]
Line_11 $$ recordId = storage.createNewRecord()-->Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)[ FD ]
Line_11 $$ recordId = storage.createNewRecord()-->Line_12 $$ setAttributeRecordId(fileId, recordId)[ FD ]
Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_30 $$ attrRefs.skipBytes(attrAddressOrSize)[ FD ]
Line_4 $$ int recordId = getAttributeRecordId(fileId)-->Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)[ FD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_4 $$ int recordId = getAttributeRecordId(fileId)[ FD ]
Line_4 $$ int recordId = getAttributeRecordId(fileId)-->Line_8 $$ if (recordId == 0) [ FD ]
Line_7 $$ Storage storage = getAttributesStorage()-->Line_47 $$ int attrAddress = storage.createNewRecord()[ FD ]
Line_4 $$ int recordId = getAttributeRecordId(fileId)-->Line_24 $$ return attrAddressOrSize < MAX_SMALL_ATTR_SIZE ? -recordId : attrAddressOrSize - MAX_SMALL_ATTR_SIZE[ FD ]
Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)-->Line_51 $$ appender.close()[ FD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_3 $$ checkFileIsValid(fileId)[ FD ]
Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_19 $$ while (attrRefs.available() > 0) [ FD ]
Line_19 $$ while (attrRefs.available() > 0) -->Line_21 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)[ CD ]
Line_21 $$ final int attrAddressOrSize = DataInputOutputUtil.readINT(attrRefs)-->Line_30 $$ attrRefs.skipBytes(attrAddressOrSize)[ FD ]
Line_38 $$ if (toWrite) -->Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)[ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_57 $$ return 0[ CD ]
Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)-->Line_18 $$ skipRecordHeader(attrRefs, DbConnection.RESERVED_ATTR_ID, fileId)[ FD ]
Line_11 $$ recordId = storage.createNewRecord()-->Line_24 $$ return attrAddressOrSize < MAX_SMALL_ATTR_SIZE ? -recordId : attrAddressOrSize - MAX_SMALL_ATTR_SIZE[ FD ]
Line_9 $$ if (!toWrite)-->Line_10 $$ return 0[ CD ]
Line_4 $$ int recordId = getAttributeRecordId(fileId)-->Line_12 $$ setAttributeRecordId(fileId, recordId)[ FD ]
Line_23 $$ if (inlineAttributes) -->Line_24 $$ return attrAddressOrSize < MAX_SMALL_ATTR_SIZE ? -recordId : attrAddressOrSize - MAX_SMALL_ATTR_SIZE[ CD ]
Line_39 $$ Storage.AppenderStream appender = storage.appendStream(recordId)-->Line_43 $$ DataInputOutputUtil.writeINT(appender, fileId)[ FD ]
Line_19 $$ while (attrRefs.available() > 0) -->Line_22 $$ if (attIdOnPage == encodedAttrId) [ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_8 $$ if (recordId == 0) [ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_12 $$ setAttributeRecordId(fileId, recordId)[ FD ]
Line_41 $$ if (directoryRecord) -->Line_43 $$ DataInputOutputUtil.writeINT(appender, fileId)[ CD ]
Line_8 $$ if (recordId == 0) -->Line_15 $$ DataInputStream attrRefs = storage.readStream(recordId)[ CD ]
Line_2 $$ private static int findAttributePage(int fileId, FileAttribute attr, boolean toWrite) throws IOException -->Line_7 $$ Storage storage = getAttributesStorage()[ CD ]
