Line_2 $$ public static AccessType determineAnnotationSpecifiedAccessType(Element element) -->Line_3 $$ final AnnotationMirror accessAnnotationMirror = TypeUtils.getAnnotationMirror(element, Constants.ACCESS)[ FD ]
Line_8 $$ if (accessElement.getSimpleName().toString().equals(AccessType.PROPERTY.toString())) -->Line_9 $$ forcedAccessType = AccessType.PROPERTY[ CD ]
Line_6 $$ Element accessElement = (Element) TypeUtils.getAnnotationValue(accessAnnotationMirror, DEFAULT_ANNOTATION_PARAMETER_NAME)-->Line_7 $$ if (accessElement.getKind().equals(ElementKind.ENUM_CONSTANT)) [ FD ]
Line_6 $$ Element accessElement = (Element) TypeUtils.getAnnotationValue(accessAnnotationMirror, DEFAULT_ANNOTATION_PARAMETER_NAME)-->Line_8 $$ if (accessElement.getSimpleName().toString().equals(AccessType.PROPERTY.toString())) [ FD ]
Line_3 $$ final AnnotationMirror accessAnnotationMirror = TypeUtils.getAnnotationMirror(element, Constants.ACCESS)-->Line_5 $$ if (accessAnnotationMirror != null) [ FD ]
Line_10 $$ if (accessElement.getSimpleName().toString().equals(AccessType.FIELD.toString())) -->Line_11 $$ forcedAccessType = AccessType.FIELD[ CD ]
Line_2 $$ public static AccessType determineAnnotationSpecifiedAccessType(Element element) -->Line_4 $$ AccessType forcedAccessType = null[ CD ]
Line_7 $$ if (accessElement.getKind().equals(ElementKind.ENUM_CONSTANT)) -->Line_8 $$ if (accessElement.getSimpleName().toString().equals(AccessType.PROPERTY.toString())) [ CD ]
Line_2 $$ public static AccessType determineAnnotationSpecifiedAccessType(Element element) -->Line_5 $$ if (accessAnnotationMirror != null) [ CD ]
Line_4 $$ AccessType forcedAccessType = null-->Line_9 $$ forcedAccessType = AccessType.PROPERTY[ FD ]
Line_8 $$ if (accessElement.getSimpleName().toString().equals(AccessType.PROPERTY.toString())) -->Line_10 $$ if (accessElement.getSimpleName().toString().equals(AccessType.FIELD.toString())) [ CD ]
Line_9 $$ forcedAccessType = AccessType.PROPERTY-->Line_11 $$ forcedAccessType = AccessType.FIELD[ FD ]
Line_3 $$ final AnnotationMirror accessAnnotationMirror = TypeUtils.getAnnotationMirror(element, Constants.ACCESS)-->Line_6 $$ Element accessElement = (Element) TypeUtils.getAnnotationValue(accessAnnotationMirror, DEFAULT_ANNOTATION_PARAMETER_NAME)[ FD ]
Line_4 $$ AccessType forcedAccessType = null-->Line_11 $$ forcedAccessType = AccessType.FIELD[ FD ]
Line_2 $$ public static AccessType determineAnnotationSpecifiedAccessType(Element element) -->Line_3 $$ final AnnotationMirror accessAnnotationMirror = TypeUtils.getAnnotationMirror(element, Constants.ACCESS)[ CD ]
Line_6 $$ Element accessElement = (Element) TypeUtils.getAnnotationValue(accessAnnotationMirror, DEFAULT_ANNOTATION_PARAMETER_NAME)-->Line_10 $$ if (accessElement.getSimpleName().toString().equals(AccessType.FIELD.toString())) [ FD ]
Line_5 $$ if (accessAnnotationMirror != null) -->Line_6 $$ Element accessElement = (Element) TypeUtils.getAnnotationValue(accessAnnotationMirror, DEFAULT_ANNOTATION_PARAMETER_NAME)[ CD ]
Line_5 $$ if (accessAnnotationMirror != null) -->Line_7 $$ if (accessElement.getKind().equals(ElementKind.ENUM_CONSTANT)) [ CD ]
Line_2 $$ public static AccessType determineAnnotationSpecifiedAccessType(Element element) -->Line_15 $$ return forcedAccessType[ CD ]
