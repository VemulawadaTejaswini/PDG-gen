Line_3 $$ if (stroke != null) -->Line_5 $$ int modifiers = stroke.getModifiers()[ CD ]
Line_3 $$ if (stroke != null) -->Line_12 $$ append(sb, "button2", modifiers, InputEvent.BUTTON2_DOWN_MASK)[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ append(sb, "released", stroke.isOnKeyRelease())[ FD ]
Line_14 $$ int code = stroke.getKeyCode()-->Line_20 $$ name = Integer.toHexString(code)[ FD ]
Line_15 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_17 $$ String name = LazyVirtualKeys.myCodeToName.get(code)[ CD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_9 $$ append(sb, "alt", modifiers, InputEvent.ALT_DOWN_MASK)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ append(sb, "meta", modifiers, InputEvent.META_DOWN_MASK)[ FD ]
Line_3 $$ if (stroke != null) -->Line_11 $$ append(sb, "button1", modifiers, InputEvent.BUTTON1_DOWN_MASK)[ CD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_7 $$ append(sb, "ctrl", modifiers, InputEvent.CTRL_DOWN_MASK)[ FD ]
Line_2 $$ public static String toString(KeyStroke stroke) -->Line_3 $$ if (stroke != null) [ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ append(sb, "typed", true)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_27 $$ return sb.append(ch).toString()[ FD ]
Line_3 $$ if (stroke != null) -->Line_24 $$ char ch = stroke.getKeyChar()[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ append(sb, "altGraph", modifiers, InputEvent.ALT_GRAPH_DOWN_MASK)[ FD ]
Line_3 $$ if (stroke != null) -->Line_29 $$ LOG.error("undefined key stroke")[ CD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_11 $$ append(sb, "button1", modifiers, InputEvent.BUTTON1_DOWN_MASK)[ FD ]
Line_3 $$ if (stroke != null) -->Line_8 $$ append(sb, "meta", modifiers, InputEvent.META_DOWN_MASK)[ CD ]
Line_24 $$ char ch = stroke.getKeyChar()-->Line_25 $$ if (ch != KeyEvent.CHAR_UNDEFINED) [ FD ]
Line_24 $$ char ch = stroke.getKeyChar()-->Line_27 $$ return sb.append(ch).toString()[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ append(sb, "ctrl", modifiers, InputEvent.CTRL_DOWN_MASK)[ FD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_12 $$ append(sb, "button2", modifiers, InputEvent.BUTTON2_DOWN_MASK)[ FD ]
Line_2 $$ public static String toString(KeyStroke stroke) -->Line_14 $$ int code = stroke.getKeyCode()[ FD ]
Line_18 $$ if (name == null) -->Line_20 $$ name = Integer.toHexString(code)[ CD ]
Line_17 $$ String name = LazyVirtualKeys.myCodeToName.get(code)-->Line_22 $$ return sb.append(name).toString()[ FD ]
Line_15 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_18 $$ if (name == null) [ CD ]
Line_2 $$ public static String toString(KeyStroke stroke) -->Line_24 $$ char ch = stroke.getKeyChar()[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append('#')[ FD ]
Line_3 $$ if (stroke != null) -->Line_14 $$ int code = stroke.getKeyCode()[ CD ]
Line_17 $$ String name = LazyVirtualKeys.myCodeToName.get(code)-->Line_20 $$ name = Integer.toHexString(code)[ FD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_6 $$ append(sb, "shift", modifiers, InputEvent.SHIFT_DOWN_MASK)[ FD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_8 $$ append(sb, "meta", modifiers, InputEvent.META_DOWN_MASK)[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_9 $$ append(sb, "alt", modifiers, InputEvent.ALT_DOWN_MASK)[ FD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_13 $$ append(sb, "button3", modifiers, InputEvent.BUTTON3_DOWN_MASK)[ FD ]
Line_3 $$ if (stroke != null) -->Line_6 $$ append(sb, "shift", modifiers, InputEvent.SHIFT_DOWN_MASK)[ CD ]
Line_5 $$ int modifiers = stroke.getModifiers()-->Line_10 $$ append(sb, "altGraph", modifiers, InputEvent.ALT_GRAPH_DOWN_MASK)[ FD ]
Line_2 $$ public static String toString(KeyStroke stroke) -->Line_16 $$ append(sb, "released", stroke.isOnKeyRelease())[ FD ]
Line_3 $$ if (stroke != null) -->Line_13 $$ append(sb, "button3", modifiers, InputEvent.BUTTON3_DOWN_MASK)[ CD ]
Line_3 $$ if (stroke != null) -->Line_15 $$ if (code != KeyEvent.VK_UNDEFINED) [ CD ]
Line_2 $$ public static String toString(KeyStroke stroke) -->Line_31 $$ return null[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ append(sb, "button1", modifiers, InputEvent.BUTTON1_DOWN_MASK)[ FD ]
Line_20 $$ name = Integer.toHexString(code)-->Line_22 $$ return sb.append(name).toString()[ FD ]
Line_3 $$ if (stroke != null) -->Line_4 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ return sb.append(name).toString()[ FD ]
Line_3 $$ if (stroke != null) -->Line_25 $$ if (ch != KeyEvent.CHAR_UNDEFINED) [ CD ]
Line_15 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_16 $$ append(sb, "released", stroke.isOnKeyRelease())[ CD ]
Line_3 $$ if (stroke != null) -->Line_10 $$ append(sb, "altGraph", modifiers, InputEvent.ALT_GRAPH_DOWN_MASK)[ CD ]
Line_25 $$ if (ch != KeyEvent.CHAR_UNDEFINED) -->Line_26 $$ append(sb, "typed", true)[ CD ]
Line_2 $$ public static String toString(KeyStroke stroke) -->Line_3 $$ if (stroke != null) [ FD ]
Line_25 $$ if (ch != KeyEvent.CHAR_UNDEFINED) -->Line_27 $$ return sb.append(ch).toString()[ CD ]
Line_17 $$ String name = LazyVirtualKeys.myCodeToName.get(code)-->Line_18 $$ if (name == null) [ FD ]
Line_14 $$ int code = stroke.getKeyCode()-->Line_15 $$ if (code != KeyEvent.VK_UNDEFINED) [ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ append(sb, "shift", modifiers, InputEvent.SHIFT_DOWN_MASK)[ FD ]
Line_3 $$ if (stroke != null) -->Line_9 $$ append(sb, "alt", modifiers, InputEvent.ALT_DOWN_MASK)[ CD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_12 $$ append(sb, "button2", modifiers, InputEvent.BUTTON2_DOWN_MASK)[ FD ]
Line_15 $$ if (code != KeyEvent.VK_UNDEFINED) -->Line_22 $$ return sb.append(name).toString()[ CD ]
Line_14 $$ int code = stroke.getKeyCode()-->Line_17 $$ String name = LazyVirtualKeys.myCodeToName.get(code)[ FD ]
Line_2 $$ public static String toString(KeyStroke stroke) -->Line_5 $$ int modifiers = stroke.getModifiers()[ FD ]
Line_4 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ append(sb, "button3", modifiers, InputEvent.BUTTON3_DOWN_MASK)[ FD ]
Line_18 $$ if (name == null) -->Line_19 $$ sb.append('#')[ CD ]
Line_3 $$ if (stroke != null) -->Line_7 $$ append(sb, "ctrl", modifiers, InputEvent.CTRL_DOWN_MASK)[ CD ]
