Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_18 $$ addAttributes(iDef, ia)[ FD ]
Line_10 $$ String base = cls.getName()-->Line_15 $$ m.add(base, iDef)[ FD ]
Line_10 $$ String base = cls.getName()-->Line_11 $$ base = base.substring(base.lastIndexOf('.') + 1)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_4 $$ Class cls = ia.getCls()[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)[ FD ]
Line_6 $$ if (iDef != null)-->Line_7 $$ return iDef[ CD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_20 $$ return iDef[ CD ]
Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_15 $$ m.add(base, iDef)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_9 $$ String[] base_interfaces = addInterfaces(ia)[ CD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_17 $$ addConstants(iDef, ia)[ CD ]
Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_19 $$ addOperations(iDef, ia)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_17 $$ addConstants(iDef, ia)[ FD ]
Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)-->Line_14 $$ addTypeCode(cls, iDef.type())[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_14 $$ addTypeCode(cls, iDef.type())[ CD ]
Line_4 $$ Class cls = ia.getCls()-->Line_14 $$ addTypeCode(cls, iDef.type())[ FD ]
Line_4 $$ Class cls = ia.getCls()-->Line_16 $$ interfaceMap.put(cls, iDef)[ FD ]
Line_4 $$ Class cls = ia.getCls()-->Line_8 $$ ModuleDefImpl m = ensurePackageExists(cls.getPackage().getName())[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_10 $$ String base = cls.getName()[ CD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_14 $$ addTypeCode(cls, iDef.type())[ FD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_19 $$ addOperations(iDef, ia)[ FD ]
Line_4 $$ Class cls = ia.getCls()-->Line_10 $$ String base = cls.getName()[ FD ]
Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_4 $$ Class cls = ia.getCls()[ CD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_6 $$ if (iDef != null)[ FD ]
Line_4 $$ Class cls = ia.getCls()-->Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_19 $$ addOperations(iDef, ia)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)[ CD ]
Line_11 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_15 $$ m.add(base, iDef)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_6 $$ if (iDef != null)[ CD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_16 $$ interfaceMap.put(cls, iDef)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_15 $$ m.add(base, iDef)[ CD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_3 $$ InterfaceDefImpl iDef[ CD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)[ FD ]
Line_12 $$ base = Util.javaToIDLName(base)-->Line_15 $$ m.add(base, iDef)[ FD ]
Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_6 $$ if (iDef != null)[ FD ]
Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)-->Line_16 $$ interfaceMap.put(cls, iDef)[ FD ]
Line_11 $$ base = base.substring(base.lastIndexOf('.') + 1)-->Line_12 $$ base = Util.javaToIDLName(base)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_18 $$ addAttributes(iDef, ia)[ CD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_18 $$ addAttributes(iDef, ia)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_8 $$ ModuleDefImpl m = ensurePackageExists(cls.getPackage().getName())[ CD ]
Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)-->Line_17 $$ addConstants(iDef, ia)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_12 $$ base = Util.javaToIDLName(base)[ CD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_16 $$ interfaceMap.put(cls, iDef)[ CD ]
Line_8 $$ ModuleDefImpl m = ensurePackageExists(cls.getPackage().getName())-->Line_15 $$ m.add(base, iDef)[ FD ]
Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)-->Line_15 $$ m.add(base, iDef)[ FD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_18 $$ addAttributes(iDef, ia)[ FD ]
Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)-->Line_18 $$ addAttributes(iDef, ia)[ FD ]
Line_10 $$ String base = cls.getName()-->Line_12 $$ base = Util.javaToIDLName(base)[ FD ]
Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_16 $$ interfaceMap.put(cls, iDef)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)[ CD ]
Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_14 $$ addTypeCode(cls, iDef.type())[ FD ]
Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)-->Line_17 $$ addConstants(iDef, ia)[ FD ]
Line_13 $$ iDef = new InterfaceDefImpl(ia.getRepositoryId(), base, "1.0", m, base_interfaces, impl)-->Line_19 $$ addOperations(iDef, ia)[ FD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_5 $$ iDef = (InterfaceDefImpl) interfaceMap.get(cls)[ FD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_15 $$ m.add(base, iDef)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_11 $$ base = base.substring(base.lastIndexOf('.') + 1)[ CD ]
Line_3 $$ InterfaceDefImpl iDef-->Line_17 $$ addConstants(iDef, ia)[ FD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_19 $$ addOperations(iDef, ia)[ CD ]
Line_2 $$ private InterfaceDefImpl addInterface(InterfaceAnalysis ia) throws RMIIIOPViolationException, IRConstructionException -->Line_9 $$ String[] base_interfaces = addInterfaces(ia)[ FD ]
