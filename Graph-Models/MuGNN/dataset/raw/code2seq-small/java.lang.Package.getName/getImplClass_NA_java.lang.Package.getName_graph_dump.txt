Line_5 $$ if (!className.endsWith("Impl")) -->Line_10 $$ String implClassName = pkg.getName() + ".impl." + clazz.getSimpleName() + "Impl"[ CD ]
Line_5 $$ if (!className.endsWith("Impl")) -->Line_9 $$ Package pkg = clazz.getPackage()[ CD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_12 $$ implClass = getImplClass(implClassName, classLoader)[ FD ]
Line_10 $$ String implClassName = pkg.getName() + ".impl." + clazz.getSimpleName() + "Impl"-->Line_16 $$ implClass = getImplClass(implClassName, _portalClassLoader)[ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_4 $$ String className = clazz.getName()[ FD ]
Line_12 $$ implClass = getImplClass(implClassName, classLoader)-->Line_25 $$ PortalRuntimePermission.checkDynamicQuery(implClass)[ FD ]
Line_4 $$ String className = clazz.getName()-->Line_5 $$ if (!className.endsWith("Impl")) [ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_7 $$ classLoader = ClassLoaderUtil.getContextClassLoader()[ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_25 $$ PortalRuntimePermission.checkDynamicQuery(implClass)[ CD ]
Line_9 $$ Package pkg = clazz.getPackage()-->Line_10 $$ String implClassName = pkg.getName() + ".impl." + clazz.getSimpleName() + "Impl"[ FD ]
Line_10 $$ String implClassName = pkg.getName() + ".impl." + clazz.getSimpleName() + "Impl"-->Line_12 $$ implClass = getImplClass(implClassName, classLoader)[ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_10 $$ String implClassName = pkg.getName() + ".impl." + clazz.getSimpleName() + "Impl"[ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_5 $$ if (!className.endsWith("Impl")) [ CD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_6 $$ if (classLoader == null) [ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_9 $$ Package pkg = clazz.getPackage()[ FD ]
Line_6 $$ if (classLoader == null) -->Line_7 $$ classLoader = ClassLoaderUtil.getContextClassLoader()[ CD ]
Line_7 $$ classLoader = ClassLoaderUtil.getContextClassLoader()-->Line_12 $$ implClass = getImplClass(implClassName, classLoader)[ FD ]
Line_7 $$ classLoader = ClassLoaderUtil.getContextClassLoader()-->Line_14 $$ if (classLoader != _portalClassLoader) [ FD ]
Line_3 $$ Class<?> implClass = clazz-->Line_25 $$ PortalRuntimePermission.checkDynamicQuery(implClass)[ FD ]
Line_14 $$ if (classLoader != _portalClassLoader) -->Line_21 $$ _log.error("Unable find model " + implClassName, e1)[ CD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_4 $$ String className = clazz.getName()[ CD ]
Line_5 $$ if (!className.endsWith("Impl")) -->Line_6 $$ if (classLoader == null) [ CD ]
Line_3 $$ Class<?> implClass = clazz-->Line_12 $$ implClass = getImplClass(implClassName, classLoader)[ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_3 $$ Class<?> implClass = clazz[ CD ]
Line_12 $$ implClass = getImplClass(implClassName, classLoader)-->Line_16 $$ implClass = getImplClass(implClassName, _portalClassLoader)[ FD ]
Line_3 $$ Class<?> implClass = clazz-->Line_16 $$ implClass = getImplClass(implClassName, _portalClassLoader)[ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_14 $$ if (classLoader != _portalClassLoader) [ FD ]
Line_16 $$ implClass = getImplClass(implClassName, _portalClassLoader)-->Line_25 $$ PortalRuntimePermission.checkDynamicQuery(implClass)[ FD ]
Line_2 $$ protected Class<?> getImplClass(Class<?> clazz, ClassLoader classLoader) -->Line_26 $$ return implClass[ CD ]
