Line_16 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()-->Line_19 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_8 $$ ServerDeploymentPlanResult result = future.get(20, TimeUnit.SECONDS)-->Line_9 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_19 $$ actionResult = result.getDeploymentActionResult(plan.getId())-->Line_20 $$ if (actionResult != null) [ FD ]
Line_4 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_7 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)[ FD ]
Line_7 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)-->Line_8 $$ ServerDeploymentPlanResult result = future.get(20, TimeUnit.SECONDS)[ FD ]
Line_6 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_19 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_7 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)-->Line_17 $$ future = manager.execute(plan)[ FD ]
Line_10 $$ if (actionResult != null) -->Line_11 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ CD ]
Line_16 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()-->Line_17 $$ future = manager.execute(plan)[ FD ]
Line_4 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_6 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()[ FD ]
Line_9 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_11 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ FD ]
Line_6 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_7 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)[ FD ]
Line_6 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_9 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_10 $$ if (actionResult != null) -->Line_12 $$ if (deploymentException != null) [ CD ]
Line_17 $$ future = manager.execute(plan)-->Line_18 $$ future.get(20, TimeUnit.SECONDS)[ FD ]
Line_9 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_19 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_11 $$ final Throwable deploymentException = actionResult.getDeploymentException()-->Line_22 $$ if (deploymentException != null) [ FD ]
Line_11 $$ final Throwable deploymentException = actionResult.getDeploymentException()-->Line_12 $$ if (deploymentException != null) [ FD ]
Line_7 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)-->Line_18 $$ future.get(20, TimeUnit.SECONDS)[ FD ]
Line_20 $$ if (actionResult != null) -->Line_21 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ CD ]
Line_6 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_16 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()[ FD ]
Line_20 $$ if (actionResult != null) -->Line_22 $$ if (deploymentException != null) [ CD ]
Line_19 $$ actionResult = result.getDeploymentActionResult(plan.getId())-->Line_21 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ FD ]
Line_8 $$ ServerDeploymentPlanResult result = future.get(20, TimeUnit.SECONDS)-->Line_19 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_6 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_17 $$ future = manager.execute(plan)[ FD ]
Line_9 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_21 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ FD ]
Line_9 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_10 $$ if (actionResult != null) [ FD ]
Line_4 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_17 $$ future = manager.execute(plan)[ FD ]
Line_4 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_16 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()[ FD ]
Line_9 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_20 $$ if (actionResult != null) [ FD ]
