Line_5 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_6 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)[ FD ]
Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_19 $$ if (actionResult != null) [ FD ]
Line_15 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()-->Line_16 $$ future = manager.execute(plan)[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_9 $$ if (actionResult != null) [ CD ]
Line_10 $$ final Throwable deploymentException = actionResult.getDeploymentException()-->Line_21 $$ if (deploymentException != null) [ FD ]
Line_9 $$ if (actionResult != null) -->Line_10 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_15 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()[ CD ]
Line_19 $$ if (actionResult != null) -->Line_21 $$ if (deploymentException != null) [ CD ]
Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_18 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_18 $$ actionResult = result.getDeploymentActionResult(plan.getId())-->Line_19 $$ if (actionResult != null) [ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_4 $$ final String packageName = DeployedXmlDataSourceManagementTestCase.class.getPackage().getName().replace(".", "/")[ CD ]
Line_9 $$ if (actionResult != null) -->Line_11 $$ if (deploymentException != null) [ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_16 $$ future = manager.execute(plan)[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_19 $$ if (actionResult != null) [ CD ]
Line_3 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_16 $$ future = manager.execute(plan)[ FD ]
Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_10 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ FD ]
Line_7 $$ ServerDeploymentPlanResult result = future.get(20, TimeUnit.SECONDS)-->Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_16 $$ future = manager.execute(plan)-->Line_17 $$ future.get(20, TimeUnit.SECONDS)[ FD ]
Line_3 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_5 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_3 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())[ CD ]
Line_15 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()-->Line_18 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_10 $$ final Throwable deploymentException = actionResult.getDeploymentException()-->Line_11 $$ if (deploymentException != null) [ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_6 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)[ CD ]
Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_20 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ FD ]
Line_5 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_16 $$ future = manager.execute(plan)[ FD ]
Line_18 $$ actionResult = result.getDeploymentActionResult(plan.getId())-->Line_20 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_5 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_3 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_18 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ CD ]
Line_6 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)-->Line_7 $$ ServerDeploymentPlanResult result = future.get(20, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_17 $$ future.get(20, TimeUnit.SECONDS)[ CD ]
Line_3 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_15 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()[ FD ]
Line_6 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)-->Line_17 $$ future.get(20, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_7 $$ ServerDeploymentPlanResult result = future.get(20, TimeUnit.SECONDS)[ CD ]
Line_7 $$ ServerDeploymentPlanResult result = future.get(20, TimeUnit.SECONDS)-->Line_18 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_5 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_18 $$ actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_5 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())[ FD ]
Line_6 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)-->Line_16 $$ future = manager.execute(plan)[ FD ]
Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())-->Line_9 $$ if (actionResult != null) [ FD ]
Line_3 $$ ServerDeploymentManager manager = ServerDeploymentManager.Factory.create(managementClient.getControllerClient())-->Line_6 $$ Future<ServerDeploymentPlanResult> future = manager.execute(plan)[ FD ]
Line_19 $$ if (actionResult != null) -->Line_20 $$ final Throwable deploymentException = actionResult.getDeploymentException()[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_8 $$ ServerDeploymentActionResult actionResult = result.getDeploymentActionResult(plan.getId())[ CD ]
Line_5 $$ DeploymentPlan plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + TEST_DS_XML)).andDeploy().build()-->Line_15 $$ plan = manager.newDeploymentPlan().add(DeployedXmlDataSourceManagementTestCase.class.getResource("/" + packageName + "/" + JPA_DS_XML)).andDeploy().build()[ FD ]
