Line_7 $$ Logger logger = Logger.getLogger(pkg.getName())-->Line_9 $$ logger.setLevel(Level.OFF)[ FD ]
Line_10 $$ String property = System.getProperty("java.util.logging.config.file")-->Line_18 $$ if (property == null) [ FD ]
Line_8 $$ Level level = logger.getLevel()-->Line_23 $$ logger.setLevel(level)[ FD ]
Line_12 $$ Xuggler xuggler = new XugglerImpl()-->Line_16 $$ return xuggler.isNativeLibraryInstalled()[ FD ]
Line_7 $$ Logger logger = Logger.getLogger(pkg.getName())-->Line_23 $$ logger.setLevel(level)[ FD ]
Line_6 $$ Package pkg = JNILibrary.class.getPackage()-->Line_7 $$ Logger logger = Logger.getLogger(pkg.getName())[ FD ]
Line_18 $$ if (property == null) -->Line_19 $$ System.clearProperty("java.util.logging.config.file")[ CD ]
Line_10 $$ String property = System.getProperty("java.util.logging.config.file")-->Line_21 $$ System.setProperty("java.util.logging.config.file", property)[ FD ]
Line_7 $$ Logger logger = Logger.getLogger(pkg.getName())-->Line_8 $$ Level level = logger.getLevel()[ FD ]
Line_13 $$ Field informAdministratorField = ReflectionUtil.getDeclaredField(XugglerImpl.class, "_informAdministrator")-->Line_14 $$ informAdministratorField.setBoolean(xuggler, false)[ FD ]
Line_4 $$ PrintStream printStream = System.out-->Line_24 $$ System.setOut(printStream)[ FD ]
Line_12 $$ Xuggler xuggler = new XugglerImpl()-->Line_14 $$ informAdministratorField.setBoolean(xuggler, false)[ FD ]
Line_18 $$ if (property == null) -->Line_21 $$ System.setProperty("java.util.logging.config.file", property)[ CD ]
