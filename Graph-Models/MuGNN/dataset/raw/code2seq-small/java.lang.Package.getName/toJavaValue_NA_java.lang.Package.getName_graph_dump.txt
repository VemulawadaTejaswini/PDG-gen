Line_3 $$ if (object == null || object.equals(Context.getUndefinedValue())) -->Line_5 $$ if (object.getClass().getPackage().getName().startsWith("java.")) [ CD ]
Line_3 $$ if (object == null || object.equals(Context.getUndefinedValue())) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static Object toJavaValue(Object object) -->Line_3 $$ if (object == null || object.equals(Context.getUndefinedValue())) [ FD ]
Line_2 $$ public static Object toJavaValue(Object object) -->Line_3 $$ if (object == null || object.equals(Context.getUndefinedValue())) [ CD ]
Line_5 $$ if (object.getClass().getPackage().getName().startsWith("java.")) -->Line_7 $$ if (object instanceof FunctionObject) [ CD ]
Line_2 $$ public static Object toJavaValue(Object object) -->Line_9 $$ if (object instanceof Scriptable) [ FD ]
Line_5 $$ if (object.getClass().getPackage().getName().startsWith("java.")) -->Line_6 $$ return object[ CD ]
Line_9 $$ if (object instanceof Scriptable) -->Line_10 $$ return toMap((Scriptable) object)[ CD ]
Line_2 $$ public static Object toJavaValue(Object object) -->Line_8 $$ throw new IllegalArgumentException(String.format("Cannot convert function object to value (object: %s)", object))[ FD ]
Line_2 $$ public static Object toJavaValue(Object object) -->Line_7 $$ if (object instanceof FunctionObject) [ FD ]
Line_7 $$ if (object instanceof FunctionObject) -->Line_9 $$ if (object instanceof Scriptable) [ CD ]
Line_2 $$ public static Object toJavaValue(Object object) -->Line_5 $$ if (object.getClass().getPackage().getName().startsWith("java.")) [ FD ]
Line_2 $$ public static Object toJavaValue(Object object) -->Line_12 $$ throw new IllegalArgumentException(String.format("Can't convert JS object %s (type: %s) to native Java object", object, object.getClass().getName()))[ FD ]
