Line_12 $$ String outputPackage = implClass.getPackage().getName()-->Line_23 $$ outputPackage = cmd.getOptionValue("output-package")[ FD ]
Line_12 $$ String outputPackage = implClass.getPackage().getName()-->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)[ FD ]
Line_11 $$ String outputClass = "HamletTmp"-->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ FD ]
Line_16 $$ if (cmd.hasOption("impl-class")) -->Line_17 $$ implClass = Class.forName(cmd.getOptionValue("impl-class"))[ CD ]
Line_4 $$ if (cmd.hasOption("help")) -->Line_6 $$ return[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_19 $$ if (cmd.hasOption("output-class")) [ CD ]
Line_20 $$ outputClass = cmd.getOptionValue("output-class")-->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ FD ]
Line_14 $$ specClass = Class.forName(cmd.getOptionValue("spec-class"))-->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_16 $$ if (cmd.hasOption("impl-class")) [ CD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_4 $$ if (cmd.hasOption("help")) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_12 $$ String outputPackage = implClass.getPackage().getName()[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_22 $$ if (cmd.hasOption("output-package")) [ CD ]
Line_10 $$ Class<?> implClass = HamletImpl.class-->Line_12 $$ String outputPackage = implClass.getPackage().getName()[ FD ]
Line_10 $$ Class<?> implClass = HamletImpl.class-->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)[ CD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_19 $$ if (cmd.hasOption("output-class")) [ FD ]
Line_23 $$ outputPackage = cmd.getOptionValue("output-package")-->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ FD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_22 $$ if (cmd.hasOption("output-package")) [ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_10 $$ Class<?> implClass = HamletImpl.class[ CD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_16 $$ if (cmd.hasOption("impl-class")) [ FD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_23 $$ outputPackage = cmd.getOptionValue("output-package")[ FD ]
Line_11 $$ String outputClass = "HamletTmp"-->Line_20 $$ outputClass = cmd.getOptionValue("output-class")[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_11 $$ String outputClass = "HamletTmp"[ CD ]
Line_4 $$ if (cmd.hasOption("help")) -->Line_5 $$ new HelpFormatter().printHelp("Usage: hbgen [OPTIONS]", opts)[ CD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_17 $$ implClass = Class.forName(cmd.getOptionValue("impl-class"))[ FD ]
Line_19 $$ if (cmd.hasOption("output-class")) -->Line_20 $$ outputClass = cmd.getOptionValue("output-class")[ CD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_13 $$ if (cmd.hasOption("spec-class")) [ FD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_14 $$ specClass = Class.forName(cmd.getOptionValue("spec-class"))[ FD ]
Line_17 $$ implClass = Class.forName(cmd.getOptionValue("impl-class"))-->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ FD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_13 $$ if (cmd.hasOption("spec-class")) [ CD ]
Line_10 $$ Class<?> implClass = HamletImpl.class-->Line_17 $$ implClass = Class.forName(cmd.getOptionValue("impl-class"))[ FD ]
Line_3 $$ CommandLine cmd = new GnuParser().parse(opts, args)-->Line_20 $$ outputClass = cmd.getOptionValue("output-class")[ FD ]
Line_22 $$ if (cmd.hasOption("output-package")) -->Line_23 $$ outputPackage = cmd.getOptionValue("output-package")[ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_4 $$ if (cmd.hasOption("help")) [ CD ]
Line_2 $$ public static void main(String[] args) throws Exception -->Line_25 $$ new HamletGen().generate(specClass, implClass, outputClass, outputPackage)[ CD ]
Line_13 $$ if (cmd.hasOption("spec-class")) -->Line_14 $$ specClass = Class.forName(cmd.getOptionValue("spec-class"))[ CD ]
