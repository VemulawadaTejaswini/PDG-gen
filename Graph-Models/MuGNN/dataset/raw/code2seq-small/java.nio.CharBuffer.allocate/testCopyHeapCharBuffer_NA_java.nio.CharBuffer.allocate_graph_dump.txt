Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())-->Line_5 $$ buffer.append(s)[ FD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_7 $$ assertNotNull(CharArrayUtil.fromSequenceWithoutCopying(buffer))[ CD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_5 $$ buffer.append(s)[ CD ]
Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())-->Line_9 $$ assertNull(CharArrayUtil.fromSequenceWithoutCopying(buffer.subSequence(1, 5)))[ FD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_8 $$ assertNotNull(CharArrayUtil.fromSequenceWithoutCopying(buffer.subSequence(0, 5)))[ CD ]
Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())-->Line_6 $$ buffer.rewind()[ FD ]
Line_3 $$ String s = "abc.d"-->Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())[ FD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())[ CD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_9 $$ assertNull(CharArrayUtil.fromSequenceWithoutCopying(buffer.subSequence(1, 5)))[ CD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_10 $$ assertNull(CharArrayUtil.fromSequenceWithoutCopying(buffer.subSequence(1, 2)))[ CD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_6 $$ buffer.rewind()[ CD ]
Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())-->Line_10 $$ assertNull(CharArrayUtil.fromSequenceWithoutCopying(buffer.subSequence(1, 2)))[ FD ]
Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())-->Line_7 $$ assertNotNull(CharArrayUtil.fromSequenceWithoutCopying(buffer))[ FD ]
Line_2 $$ public void testCopyHeapCharBuffer() -->Line_3 $$ String s = "abc.d"[ CD ]
Line_4 $$ CharBuffer buffer = CharBuffer.allocate(s.length())-->Line_8 $$ assertNotNull(CharArrayUtil.fromSequenceWithoutCopying(buffer.subSequence(0, 5)))[ FD ]
Line_3 $$ String s = "abc.d"-->Line_5 $$ buffer.append(s)[ FD ]
