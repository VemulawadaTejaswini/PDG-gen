Line_7 $$ final CharBuffer dst = CharBuffer.allocate((int) ((double) buffer.remaining() * decoder.maxCharsPerByte()))-->Line_20 $$ return dst.flip().toString()[ FD ]
Line_14 $$ if (!cr.isUnderflow()) -->Line_15 $$ cr.throwException()[ CD ]
Line_7 $$ final CharBuffer dst = CharBuffer.allocate((int) ((double) buffer.remaining() * decoder.maxCharsPerByte()))-->Line_13 $$ cr = decoder.flush(dst)[ FD ]
Line_2 $$ public String toUtf8() -->Line_3 $$ if (!buffer.hasRemaining()) [ CD ]
Line_2 $$ public String toUtf8() -->Line_6 $$ final CharsetDecoder decoder = CharsetUtil.getDecoder(StandardCharsets.UTF_8)[ CD ]
Line_9 $$ CoderResult cr = decoder.decode(buffer, dst, true)-->Line_14 $$ if (!cr.isUnderflow()) [ FD ]
Line_9 $$ CoderResult cr = decoder.decode(buffer, dst, true)-->Line_15 $$ cr.throwException()[ FD ]
Line_9 $$ CoderResult cr = decoder.decode(buffer, dst, true)-->Line_10 $$ if (!cr.isUnderflow()) [ FD ]
Line_2 $$ public String toUtf8() -->Line_20 $$ return dst.flip().toString()[ CD ]
Line_3 $$ if (!buffer.hasRemaining()) -->Line_4 $$ return ""[ CD ]
Line_6 $$ final CharsetDecoder decoder = CharsetUtil.getDecoder(StandardCharsets.UTF_8)-->Line_9 $$ CoderResult cr = decoder.decode(buffer, dst, true)[ FD ]
Line_9 $$ CoderResult cr = decoder.decode(buffer, dst, true)-->Line_11 $$ cr.throwException()[ FD ]
Line_9 $$ CoderResult cr = decoder.decode(buffer, dst, true)-->Line_13 $$ cr = decoder.flush(dst)[ FD ]
Line_2 $$ public String toUtf8() -->Line_7 $$ final CharBuffer dst = CharBuffer.allocate((int) ((double) buffer.remaining() * decoder.maxCharsPerByte()))[ CD ]
Line_13 $$ cr = decoder.flush(dst)-->Line_14 $$ if (!cr.isUnderflow()) [ FD ]
Line_6 $$ final CharsetDecoder decoder = CharsetUtil.getDecoder(StandardCharsets.UTF_8)-->Line_13 $$ cr = decoder.flush(dst)[ FD ]
Line_13 $$ cr = decoder.flush(dst)-->Line_15 $$ cr.throwException()[ FD ]
Line_10 $$ if (!cr.isUnderflow()) -->Line_11 $$ cr.throwException()[ CD ]
Line_6 $$ final CharsetDecoder decoder = CharsetUtil.getDecoder(StandardCharsets.UTF_8)-->Line_7 $$ final CharBuffer dst = CharBuffer.allocate((int) ((double) buffer.remaining() * decoder.maxCharsPerByte()))[ FD ]
Line_7 $$ final CharBuffer dst = CharBuffer.allocate((int) ((double) buffer.remaining() * decoder.maxCharsPerByte()))-->Line_9 $$ CoderResult cr = decoder.decode(buffer, dst, true)[ FD ]
