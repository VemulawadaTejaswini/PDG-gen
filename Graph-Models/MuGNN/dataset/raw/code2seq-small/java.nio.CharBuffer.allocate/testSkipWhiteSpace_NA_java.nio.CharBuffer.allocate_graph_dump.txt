Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_33 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_3 $$ StripFilter stripFilter = new StripFilter()[ CD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_13 $$ Assert.assertEquals(0, charBuffer.position())[ CD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_33 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_27 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_35 $$ stringWriter = new StringWriter()[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")[ CD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ CD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_15 $$ stringWriter = new StringWriter()[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_28 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_25 $$ stringWriter = new StringWriter()[ FD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_30 $$ stringWriter = new StringWriter()[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_30 $$ stringWriter = new StringWriter()[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_23 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_6 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_15 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_5 $$ StringWriter stringWriter = new StringWriter()[ CD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_22 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_35 $$ stringWriter = new StringWriter()[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_28 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_28 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_6 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_11 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_11 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_32 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")-->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_14 $$ charBuffer = CharBuffer.wrap(" ")[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_28 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_32 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_14 $$ charBuffer = CharBuffer.wrap(" ")[ FD ]
Line_30 $$ stringWriter = new StringWriter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_12 $$ Assert.assertEquals("", stringWriter.toString())[ CD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_24 $$ charBuffer = CharBuffer.wrap("\r")[ FD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_30 $$ stringWriter = new StringWriter()[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_18 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_10 $$ stringWriter = new StringWriter()[ CD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_20 $$ stringWriter = new StringWriter()[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_30 $$ stringWriter = new StringWriter()-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_20 $$ stringWriter = new StringWriter()[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_12 $$ Assert.assertEquals("", stringWriter.toString())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_28 $$ Assert.assertEquals(1, charBuffer.position())[ CD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_25 $$ stringWriter = new StringWriter()[ FD ]
Line_29 $$ charBuffer = CharBuffer.wrap("\n")-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_29 $$ charBuffer = CharBuffer.wrap("\n")-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_30 $$ stringWriter = new StringWriter()-->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_32 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_24 $$ charBuffer = CharBuffer.wrap("\r")[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_18 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_14 $$ charBuffer = CharBuffer.wrap(" ")[ CD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)[ CD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_22 $$ Assert.assertEquals(" ", stringWriter.toString())[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_17 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_17 $$ Assert.assertEquals(" ", stringWriter.toString())[ CD ]
Line_29 $$ charBuffer = CharBuffer.wrap("\n")-->Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_18 $$ Assert.assertEquals(1, charBuffer.position())[ CD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_32 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_8 $$ Assert.assertEquals(0, charBuffer.position())[ FD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_29 $$ charBuffer = CharBuffer.wrap("\n")[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_23 $$ Assert.assertEquals(1, charBuffer.position())[ CD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_15 $$ stringWriter = new StringWriter()[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_6 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_29 $$ charBuffer = CharBuffer.wrap("\n")[ CD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_13 $$ Assert.assertEquals(0, charBuffer.position())[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_35 $$ stringWriter = new StringWriter()[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_23 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_7 $$ Assert.assertEquals("", stringWriter.toString())[ FD ]
Line_35 $$ stringWriter = new StringWriter()-->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_29 $$ charBuffer = CharBuffer.wrap("\n")[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_33 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_33 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_25 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ CD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_27 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_29 $$ charBuffer = CharBuffer.wrap("\n")[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_30 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_25 $$ stringWriter = new StringWriter()[ CD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_32 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_17 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_19 $$ charBuffer = CharBuffer.wrap("\t")[ CD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_22 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")[ CD ]
Line_29 $$ charBuffer = CharBuffer.wrap("\n")-->Line_33 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_24 $$ charBuffer = CharBuffer.wrap("\r")[ FD ]
Line_35 $$ stringWriter = new StringWriter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_33 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_29 $$ charBuffer = CharBuffer.wrap("\n")[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_35 $$ stringWriter = new StringWriter()[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_22 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_19 $$ charBuffer = CharBuffer.wrap("\t")[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_25 $$ stringWriter = new StringWriter()[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_24 $$ charBuffer = CharBuffer.wrap("\r")[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ CD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_11 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_37 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_27 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_6 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_7 $$ Assert.assertEquals("", stringWriter.toString())[ CD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_32 $$ Assert.assertEquals(" ", stringWriter.toString())[ CD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_22 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_28 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_29 $$ charBuffer = CharBuffer.wrap("\n")[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_11 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_23 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_30 $$ stringWriter = new StringWriter()-->Line_32 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_35 $$ stringWriter = new StringWriter()[ CD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_30 $$ stringWriter = new StringWriter()-->Line_35 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_20 $$ stringWriter = new StringWriter()[ CD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_27 $$ Assert.assertEquals(" ", stringWriter.toString())[ CD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_30 $$ stringWriter = new StringWriter()[ CD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_13 $$ Assert.assertEquals(0, charBuffer.position())[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_16 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_33 $$ Assert.assertEquals(1, charBuffer.position())[ CD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_18 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_25 $$ stringWriter = new StringWriter()-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_19 $$ charBuffer = CharBuffer.wrap("\t")[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_30 $$ stringWriter = new StringWriter()[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_19 $$ charBuffer = CharBuffer.wrap("\t")[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ CD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_20 $$ stringWriter = new StringWriter()[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_35 $$ stringWriter = new StringWriter()[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_8 $$ Assert.assertEquals(0, charBuffer.position())[ CD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_17 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ CD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_27 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_20 $$ stringWriter = new StringWriter()-->Line_27 $$ Assert.assertEquals(" ", stringWriter.toString())[ FD ]
Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")-->Line_36 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_5 $$ StringWriter stringWriter = new StringWriter()-->Line_10 $$ stringWriter = new StringWriter()[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_23 $$ Assert.assertEquals(1, charBuffer.position())[ FD ]
Line_24 $$ charBuffer = CharBuffer.wrap("\r")-->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ FD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_11 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")[ FD ]
Line_29 $$ charBuffer = CharBuffer.wrap("\n")-->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_11 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ CD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_9 $$ charBuffer = CharBuffer.wrap("abc \t\r\n")-->Line_34 $$ charBuffer = CharBuffer.wrap(" \t\r\n")[ FD ]
Line_15 $$ stringWriter = new StringWriter()-->Line_21 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_24 $$ charBuffer = CharBuffer.wrap("\r")[ CD ]
Line_10 $$ stringWriter = new StringWriter()-->Line_12 $$ Assert.assertEquals("", stringWriter.toString())[ FD ]
Line_14 $$ charBuffer = CharBuffer.wrap(" ")-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_4 $$ CharBuffer charBuffer = CharBuffer.allocate(0)-->Line_38 $$ Assert.assertEquals(4, charBuffer.position())[ FD ]
Line_2 $$ public void testSkipWhiteSpace() throws Exception -->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ CD ]
Line_19 $$ charBuffer = CharBuffer.wrap("\t")-->Line_31 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
Line_3 $$ StripFilter stripFilter = new StripFilter()-->Line_26 $$ stripFilter.skipWhiteSpace(charBuffer, stringWriter, true)[ FD ]
