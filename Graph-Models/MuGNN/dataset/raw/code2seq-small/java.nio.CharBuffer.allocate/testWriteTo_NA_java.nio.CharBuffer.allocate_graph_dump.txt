Line_3 $$ UnsyncCharArrayWriter unsyncCharArrayWriter = new UnsyncCharArrayWriter()-->Line_4 $$ unsyncCharArrayWriter.write("abcd")[ FD ]
Line_5 $$ CharBuffer charBuffer = CharBuffer.allocate(2)-->Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_16 $$ Assert.assertTrue(Arrays.equals("abcd".getBytes(), byteArrayOutputStream.toByteArray()))[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_20 $$ Assert.assertEquals("abcd", stringWriter.toString())[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_12 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_17 $$ StringWriter stringWriter = new StringWriter()[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_14 $$ Assert.assertEquals(4, length)[ CD ]
Line_5 $$ CharBuffer charBuffer = CharBuffer.allocate(2)-->Line_9 $$ Assert.assertEquals(2, charBuffer.limit())[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_7 $$ Assert.assertEquals(2, length)[ CD ]
Line_5 $$ CharBuffer charBuffer = CharBuffer.allocate(2)-->Line_10 $$ charBuffer.position(0)[ FD ]
Line_18 $$ length = unsyncCharArrayWriter.writeTo(stringWriter)-->Line_19 $$ Assert.assertEquals(4, length)[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_9 $$ Assert.assertEquals(2, charBuffer.limit())[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_10 $$ charBuffer.position(0)[ CD ]
Line_17 $$ StringWriter stringWriter = new StringWriter()-->Line_20 $$ Assert.assertEquals("abcd", stringWriter.toString())[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_4 $$ unsyncCharArrayWriter.write("abcd")[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_19 $$ Assert.assertEquals(4, length)[ CD ]
Line_13 $$ length = unsyncCharArrayWriter.writeTo(byteArrayOutputStream, StringPool.UTF8)-->Line_19 $$ Assert.assertEquals(4, length)[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_15 $$ Assert.assertEquals(4, byteArrayOutputStream.size())[ CD ]
Line_17 $$ StringWriter stringWriter = new StringWriter()-->Line_18 $$ length = unsyncCharArrayWriter.writeTo(stringWriter)[ FD ]
Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)-->Line_13 $$ length = unsyncCharArrayWriter.writeTo(byteArrayOutputStream, StringPool.UTF8)[ FD ]
Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)-->Line_19 $$ Assert.assertEquals(4, length)[ FD ]
Line_12 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_15 $$ Assert.assertEquals(4, byteArrayOutputStream.size())[ FD ]
Line_13 $$ length = unsyncCharArrayWriter.writeTo(byteArrayOutputStream, StringPool.UTF8)-->Line_14 $$ Assert.assertEquals(4, length)[ FD ]
Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)-->Line_14 $$ Assert.assertEquals(4, length)[ FD ]
Line_13 $$ length = unsyncCharArrayWriter.writeTo(byteArrayOutputStream, StringPool.UTF8)-->Line_18 $$ length = unsyncCharArrayWriter.writeTo(stringWriter)[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_18 $$ length = unsyncCharArrayWriter.writeTo(stringWriter)[ CD ]
Line_5 $$ CharBuffer charBuffer = CharBuffer.allocate(2)-->Line_11 $$ Assert.assertEquals("ab", charBuffer.toString())[ FD ]
Line_3 $$ UnsyncCharArrayWriter unsyncCharArrayWriter = new UnsyncCharArrayWriter()-->Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)[ FD ]
Line_3 $$ UnsyncCharArrayWriter unsyncCharArrayWriter = new UnsyncCharArrayWriter()-->Line_13 $$ length = unsyncCharArrayWriter.writeTo(byteArrayOutputStream, StringPool.UTF8)[ FD ]
Line_5 $$ CharBuffer charBuffer = CharBuffer.allocate(2)-->Line_8 $$ Assert.assertEquals(2, charBuffer.position())[ FD ]
Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)-->Line_18 $$ length = unsyncCharArrayWriter.writeTo(stringWriter)[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_11 $$ Assert.assertEquals("ab", charBuffer.toString())[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_3 $$ UnsyncCharArrayWriter unsyncCharArrayWriter = new UnsyncCharArrayWriter()[ CD ]
Line_3 $$ UnsyncCharArrayWriter unsyncCharArrayWriter = new UnsyncCharArrayWriter()-->Line_18 $$ length = unsyncCharArrayWriter.writeTo(stringWriter)[ FD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_8 $$ Assert.assertEquals(2, charBuffer.position())[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_13 $$ length = unsyncCharArrayWriter.writeTo(byteArrayOutputStream, StringPool.UTF8)[ CD ]
Line_2 $$ public void testWriteTo() throws IOException -->Line_5 $$ CharBuffer charBuffer = CharBuffer.allocate(2)[ CD ]
Line_12 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_13 $$ length = unsyncCharArrayWriter.writeTo(byteArrayOutputStream, StringPool.UTF8)[ FD ]
Line_6 $$ int length = unsyncCharArrayWriter.writeTo(charBuffer)-->Line_7 $$ Assert.assertEquals(2, length)[ FD ]
Line_12 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_16 $$ Assert.assertTrue(Arrays.equals("abcd".getBytes(), byteArrayOutputStream.toByteArray()))[ FD ]
