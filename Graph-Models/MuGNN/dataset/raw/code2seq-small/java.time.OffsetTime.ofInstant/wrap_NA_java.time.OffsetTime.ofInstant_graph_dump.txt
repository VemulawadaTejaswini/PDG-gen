Line_10 $$ if (Time.class.isInstance(value)) -->Line_11 $$ return ((Time) value).toLocalTime().atOffset(OffsetDateTime.now().getOffset())[ CD ]
Line_21 $$ if (Long.class.isInstance(value)) -->Line_22 $$ return OffsetTime.ofInstant(Instant.ofEpochMilli((Long) value), ZoneId.systemDefault())[ CD ]
Line_25 $$ final Calendar calendar = (Calendar) value-->Line_26 $$ return OffsetTime.ofInstant(calendar.toInstant(), calendar.getTimeZone().toZoneId())[ FD ]
Line_4 $$ if (value == null) -->Line_5 $$ return null[ CD ]
Line_18 $$ final Date date = (Date) value-->Line_19 $$ return OffsetTime.ofInstant(date.toInstant(), ZoneId.systemDefault())[ FD ]
Line_17 $$ if (Date.class.isInstance(value)) -->Line_19 $$ return OffsetTime.ofInstant(date.toInstant(), ZoneId.systemDefault())[ CD ]
Line_13 $$ if (Timestamp.class.isInstance(value)) -->Line_15 $$ return OffsetTime.ofInstant(ts.toInstant(), ZoneId.systemDefault())[ CD ]
Line_14 $$ final Timestamp ts = (Timestamp) value-->Line_15 $$ return OffsetTime.ofInstant(ts.toInstant(), ZoneId.systemDefault())[ FD ]
Line_24 $$ if (Calendar.class.isInstance(value)) -->Line_26 $$ return OffsetTime.ofInstant(calendar.toInstant(), calendar.getTimeZone().toZoneId())[ CD ]
Line_17 $$ if (Date.class.isInstance(value)) -->Line_18 $$ final Date date = (Date) value[ CD ]
Line_24 $$ if (Calendar.class.isInstance(value)) -->Line_25 $$ final Calendar calendar = (Calendar) value[ CD ]
Line_13 $$ if (Timestamp.class.isInstance(value)) -->Line_14 $$ final Timestamp ts = (Timestamp) value[ CD ]
Line_7 $$ if (OffsetTime.class.isInstance(value)) -->Line_8 $$ return (OffsetTime) value[ CD ]
