Line_5 $$ zipRef = getZipFileHandle()-->Line_26 $$ zipRef.release()[ FD ]
Line_15 $$ if (entry != null) -->Line_17 $$ if (stream != null) [ CD ]
Line_5 $$ zipRef = getZipFileHandle()-->Line_13 $$ ZipFile zip = zipRef.get()[ FD ]
Line_16 $$ InputStream stream = zip.getInputStream(entry)-->Line_19 $$ return FileUtil.loadBytes(stream, (int) entry.getSize())[ FD ]
Line_3 $$ FileAccessorCache.Handle<ZipFile> zipRef-->Line_26 $$ zipRef.release()[ FD ]
Line_14 $$ ZipEntry entry = zip.getEntry(relativePath)-->Line_16 $$ InputStream stream = zip.getInputStream(entry)[ FD ]
Line_13 $$ ZipFile zip = zipRef.get()-->Line_14 $$ ZipEntry entry = zip.getEntry(relativePath)[ FD ]
Line_2 $$ public byte[] contentsToByteArray(@NotNull String relativePath) throws IOException -->Line_14 $$ ZipEntry entry = zip.getEntry(relativePath)[ FD ]
Line_7 $$ Throwable cause = ex.getCause()-->Line_8 $$ if (cause instanceof IOException)[ FD ]
Line_14 $$ ZipEntry entry = zip.getEntry(relativePath)-->Line_19 $$ return FileUtil.loadBytes(stream, (int) entry.getSize())[ FD ]
Line_3 $$ FileAccessorCache.Handle<ZipFile> zipRef-->Line_5 $$ zipRef = getZipFileHandle()[ FD ]
Line_13 $$ ZipFile zip = zipRef.get()-->Line_16 $$ InputStream stream = zip.getInputStream(entry)[ FD ]
Line_2 $$ public byte[] contentsToByteArray(@NotNull String relativePath) throws IOException -->Line_28 $$ return ArrayUtil.EMPTY_BYTE_ARRAY[ CD ]
Line_16 $$ InputStream stream = zip.getInputStream(entry)-->Line_17 $$ if (stream != null) [ FD ]
Line_15 $$ if (entry != null) -->Line_16 $$ InputStream stream = zip.getInputStream(entry)[ CD ]
Line_16 $$ InputStream stream = zip.getInputStream(entry)-->Line_21 $$ stream.close()[ FD ]
Line_3 $$ FileAccessorCache.Handle<ZipFile> zipRef-->Line_13 $$ ZipFile zip = zipRef.get()[ FD ]
Line_2 $$ public byte[] contentsToByteArray(@NotNull String relativePath) throws IOException -->Line_3 $$ FileAccessorCache.Handle<ZipFile> zipRef[ CD ]
Line_14 $$ ZipEntry entry = zip.getEntry(relativePath)-->Line_15 $$ if (entry != null) [ FD ]
