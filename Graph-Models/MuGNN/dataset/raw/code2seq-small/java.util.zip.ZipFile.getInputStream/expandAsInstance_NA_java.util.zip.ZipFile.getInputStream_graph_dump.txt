Line_3 $$ File versionDir = new File(targetOldVersions, version.getFullVersionName())-->Line_19 $$ File[] files = versionDir.listFiles()[ FD ]
Line_2 $$ private File expandAsInstance(final File file) throws Exception -->Line_5 $$ final ZipFile zipFile = new ZipFile(file)[ CD ]
Line_3 $$ File versionDir = new File(targetOldVersions, version.getFullVersionName())-->Line_21 $$ throw new RuntimeException("The unzipped file contains more than one file in " + versionDir.getAbsolutePath() + ". Unable to determine the true distribution")[ FD ]
Line_8 $$ final ZipEntry entry = en.nextElement()-->Line_13 $$ inputStreamToFile(zipFile.getInputStream(entry), output)[ FD ]
Line_7 $$ for (Enumeration<? extends ZipEntry> en = zipFile.entries(); en.hasMoreElements(); ) -->Line_10 $$ if (entry.isDirectory()) [ CD ]
Line_9 $$ final File output = new File(versionDir, entry.getName())-->Line_11 $$ createIfNotExists(output)[ FD ]
Line_7 $$ for (Enumeration<? extends ZipEntry> en = zipFile.entries(); en.hasMoreElements(); ) -->Line_8 $$ final ZipEntry entry = en.nextElement()[ FD ]
Line_5 $$ final ZipFile zipFile = new ZipFile(file)-->Line_7 $$ for (Enumeration<? extends ZipEntry> en = zipFile.entries(); en.hasMoreElements(); ) [ FD ]
Line_7 $$ for (Enumeration<? extends ZipEntry> en = zipFile.entries(); en.hasMoreElements(); ) -->Line_9 $$ final File output = new File(versionDir, entry.getName())[ CD ]
Line_2 $$ private File expandAsInstance(final File file) throws Exception -->Line_3 $$ File versionDir = new File(targetOldVersions, version.getFullVersionName())[ CD ]
Line_5 $$ final ZipFile zipFile = new ZipFile(file)-->Line_13 $$ inputStreamToFile(zipFile.getInputStream(entry), output)[ FD ]
Line_2 $$ private File expandAsInstance(final File file) throws Exception -->Line_4 $$ createIfNotExists(versionDir)[ CD ]
Line_3 $$ File versionDir = new File(targetOldVersions, version.getFullVersionName())-->Line_4 $$ createIfNotExists(versionDir)[ FD ]
Line_2 $$ private File expandAsInstance(final File file) throws Exception -->Line_20 $$ if (files.length != 1) [ CD ]
Line_2 $$ private File expandAsInstance(final File file) throws Exception -->Line_23 $$ return files[0][ CD ]
Line_10 $$ if (entry.isDirectory()) -->Line_13 $$ inputStreamToFile(zipFile.getInputStream(entry), output)[ CD ]
Line_8 $$ final ZipEntry entry = en.nextElement()-->Line_9 $$ final File output = new File(versionDir, entry.getName())[ FD ]
Line_5 $$ final ZipFile zipFile = new ZipFile(file)-->Line_17 $$ IoUtils.safeClose(zipFile)[ FD ]
Line_10 $$ if (entry.isDirectory()) -->Line_11 $$ createIfNotExists(output)[ CD ]
Line_2 $$ private File expandAsInstance(final File file) throws Exception -->Line_19 $$ File[] files = versionDir.listFiles()[ CD ]
Line_7 $$ for (Enumeration<? extends ZipEntry> en = zipFile.entries(); en.hasMoreElements(); ) -->Line_8 $$ final ZipEntry entry = en.nextElement()[ CD ]
Line_8 $$ final ZipEntry entry = en.nextElement()-->Line_10 $$ if (entry.isDirectory()) [ FD ]
Line_9 $$ final File output = new File(versionDir, entry.getName())-->Line_13 $$ inputStreamToFile(zipFile.getInputStream(entry), output)[ FD ]
