Line_9 $$ if (!entry.isDirectory()) -->Line_15 $$ out.close()[ CD ]
Line_7 $$ while (entries.hasMoreElements()) -->Line_9 $$ if (!entry.isDirectory()) [ CD ]
Line_9 $$ if (!entry.isDirectory()) -->Line_11 $$ assertTrue(file.getParentFile().mkdirs() || file.getParentFile().isDirectory())[ CD ]
Line_6 $$ Enumeration<? extends ZipEntry> entries = zip.entries()-->Line_7 $$ while (entries.hasMoreElements()) [ FD ]
Line_9 $$ if (!entry.isDirectory()) -->Line_13 $$ OutputStream out = new FileOutputStream(file)[ CD ]
Line_12 $$ InputStream in = zip.getInputStream(entry)-->Line_16 $$ in.close()[ FD ]
Line_7 $$ while (entries.hasMoreElements()) -->Line_8 $$ ZipEntry entry = entries.nextElement()[ CD ]
Line_8 $$ ZipEntry entry = entries.nextElement()-->Line_12 $$ InputStream in = zip.getInputStream(entry)[ FD ]
Line_4 $$ ZipFile zip = new ZipFile(archive)-->Line_6 $$ Enumeration<? extends ZipEntry> entries = zip.entries()[ FD ]
Line_9 $$ if (!entry.isDirectory()) -->Line_10 $$ File file = new File(targetDir, entry.getName())[ CD ]
Line_10 $$ File file = new File(targetDir, entry.getName())-->Line_11 $$ assertTrue(file.getParentFile().mkdirs() || file.getParentFile().isDirectory())[ FD ]
Line_4 $$ ZipFile zip = new ZipFile(archive)-->Line_20 $$ zip.close()[ FD ]
Line_12 $$ InputStream in = zip.getInputStream(entry)-->Line_14 $$ InterpreterUtil.copyStream(in, out)[ FD ]
Line_8 $$ ZipEntry entry = entries.nextElement()-->Line_10 $$ File file = new File(targetDir, entry.getName())[ FD ]
Line_9 $$ if (!entry.isDirectory()) -->Line_16 $$ in.close()[ CD ]
Line_13 $$ OutputStream out = new FileOutputStream(file)-->Line_15 $$ out.close()[ FD ]
Line_6 $$ Enumeration<? extends ZipEntry> entries = zip.entries()-->Line_8 $$ ZipEntry entry = entries.nextElement()[ FD ]
Line_8 $$ ZipEntry entry = entries.nextElement()-->Line_9 $$ if (!entry.isDirectory()) [ FD ]
Line_9 $$ if (!entry.isDirectory()) -->Line_14 $$ InterpreterUtil.copyStream(in, out)[ CD ]
Line_9 $$ if (!entry.isDirectory()) -->Line_12 $$ InputStream in = zip.getInputStream(entry)[ CD ]
Line_4 $$ ZipFile zip = new ZipFile(archive)-->Line_12 $$ InputStream in = zip.getInputStream(entry)[ FD ]
Line_13 $$ OutputStream out = new FileOutputStream(file)-->Line_14 $$ InterpreterUtil.copyStream(in, out)[ FD ]
