Line_5 $$ if (source == null || !MouseDragHelper.checkModifiers(dge.getTriggerEvent()))-->Line_6 $$ return[ CD ]
Line_17 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())-->Line_20 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
Line_21 $$ if (pair == null) -->Line_22 $$ pair = Pair.create(EMPTY_IMAGE, new Point(0, 0))[ CD ]
Line_4 $$ final DnDSource source = getSource(dge.getComponent())-->Line_17 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ FD ]
Line_17 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())-->Line_18 $$ myCurrentEvent = new DnDEventImpl(DnDManagerImpl.this, action, dnDDragStartBean.getAttachedObject(), dnDDragStartBean.getPoint())[ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())[ FD ]
Line_20 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())-->Line_21 $$ if (pair == null) [ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_19 $$ myCurrentEvent.setOrgPoint(dge.getDragOrigin())[ CD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_19 $$ myCurrentEvent.setOrgPoint(dge.getDragOrigin())[ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_20 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())-->Line_17 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_5 $$ if (source == null || !MouseDragHelper.checkModifiers(dge.getTriggerEvent()))[ FD ]
Line_20 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())-->Line_22 $$ pair = Pair.create(EMPTY_IMAGE, new Point(0, 0))[ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_17 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_4 $$ final DnDSource source = getSource(dge.getComponent())[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_20 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ CD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) [ FD ]
Line_4 $$ final DnDSource source = getSource(dge.getComponent())-->Line_20 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_17 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ CD ]
Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) -->Line_9 $$ if (myCurrentEvent == null) [ CD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_21 $$ if (pair == null) [ CD ]
Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())-->Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) [ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_16 $$ hideCurrentHighlighter()[ CD ]
Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())-->Line_20 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_24 $$ if (!DragSource.isDragImageSupported()) [ CD ]
Line_4 $$ final DnDSource source = getSource(dge.getComponent())-->Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) [ FD ]
