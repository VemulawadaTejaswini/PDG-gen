Line_7 $$ Element currentTest-->Line_18 $$ currentTest = testElements.get(testDescription)[ FD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_15 $$ rootElement.appendChild(currentTest)[ CD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_11 $$ if (n != null && !tag.isEmpty())[ CD ]
Line_11 $$ if (n != null && !tag.isEmpty())-->Line_12 $$ n = n + "-" + tag[ CD ]
Line_9 $$ currentTest = doc.createElement(TESTCASE)-->Line_13 $$ currentTest.setAttribute(ATTR_NAME, n == null ? UNKNOWN : n)[ FD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_14 $$ currentTest.setAttribute(ATTR_CLASSNAME, JUnitVersionHelper.getTestCaseClassName(test))[ CD ]
Line_9 $$ currentTest = doc.createElement(TESTCASE)-->Line_16 $$ testElements.put(createDescription(test), currentTest)[ FD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_18 $$ currentTest = testElements.get(testDescription)[ CD ]
Line_2 $$ public void endTest(final Test test) -->Line_10 $$ String n = JUnitVersionHelper.getTestCaseName(test)[ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_21 $$ currentTest.setAttribute(ATTR_TIME, "" + ((System.currentTimeMillis() - l) / ONE_SECOND))[ CD ]
Line_9 $$ currentTest = doc.createElement(TESTCASE)-->Line_21 $$ currentTest.setAttribute(ATTR_TIME, "" + ((System.currentTimeMillis() - l) / ONE_SECOND))[ FD ]
Line_3 $$ final String testDescription = createDescription(test)-->Line_18 $$ currentTest = testElements.get(testDescription)[ FD ]
Line_3 $$ final String testDescription = createDescription(test)-->Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) [ FD ]
Line_7 $$ Element currentTest-->Line_15 $$ rootElement.appendChild(currentTest)[ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_7 $$ Element currentTest[ CD ]
Line_9 $$ currentTest = doc.createElement(TESTCASE)-->Line_14 $$ currentTest.setAttribute(ATTR_CLASSNAME, JUnitVersionHelper.getTestCaseClassName(test))[ FD ]
Line_7 $$ Element currentTest-->Line_13 $$ currentTest.setAttribute(ATTR_NAME, n == null ? UNKNOWN : n)[ FD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_9 $$ currentTest = doc.createElement(TESTCASE)[ CD ]
Line_2 $$ public void endTest(final Test test) -->Line_4 $$ if (!testStarts.containsKey(testDescription)) [ CD ]
Line_9 $$ currentTest = doc.createElement(TESTCASE)-->Line_18 $$ currentTest = testElements.get(testDescription)[ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_3 $$ final String testDescription = createDescription(test)[ CD ]
Line_7 $$ Element currentTest-->Line_9 $$ currentTest = doc.createElement(TESTCASE)[ FD ]
Line_7 $$ Element currentTest-->Line_16 $$ testElements.put(createDescription(test), currentTest)[ FD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_13 $$ currentTest.setAttribute(ATTR_NAME, n == null ? UNKNOWN : n)[ CD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_16 $$ testElements.put(createDescription(test), currentTest)[ CD ]
Line_10 $$ String n = JUnitVersionHelper.getTestCaseName(test)-->Line_12 $$ n = n + "-" + tag[ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_20 $$ final Long l = testStarts.get(createDescription(test))[ CD ]
Line_2 $$ public void endTest(final Test test) -->Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) [ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_14 $$ currentTest.setAttribute(ATTR_CLASSNAME, JUnitVersionHelper.getTestCaseClassName(test))[ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_16 $$ testElements.put(createDescription(test), currentTest)[ FD ]
Line_7 $$ Element currentTest-->Line_21 $$ currentTest.setAttribute(ATTR_TIME, "" + ((System.currentTimeMillis() - l) / ONE_SECOND))[ FD ]
Line_9 $$ currentTest = doc.createElement(TESTCASE)-->Line_15 $$ rootElement.appendChild(currentTest)[ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_20 $$ final Long l = testStarts.get(createDescription(test))[ FD ]
Line_3 $$ final String testDescription = createDescription(test)-->Line_4 $$ if (!testStarts.containsKey(testDescription)) [ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_3 $$ final String testDescription = createDescription(test)[ FD ]
Line_2 $$ public void endTest(final Test test) -->Line_5 $$ startTest(test)[ FD ]
Line_18 $$ currentTest = testElements.get(testDescription)-->Line_21 $$ currentTest.setAttribute(ATTR_TIME, "" + ((System.currentTimeMillis() - l) / ONE_SECOND))[ FD ]
Line_4 $$ if (!testStarts.containsKey(testDescription)) -->Line_5 $$ startTest(test)[ CD ]
Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) -->Line_10 $$ String n = JUnitVersionHelper.getTestCaseName(test)[ CD ]
Line_2 $$ public void endTest(final Test test) -->Line_8 $$ if (!failedTests.containsKey(test) && !skippedTests.containsKey(testDescription) && !ignoredTests.containsKey(testDescription)) [ CD ]
Line_7 $$ Element currentTest-->Line_14 $$ currentTest.setAttribute(ATTR_CLASSNAME, JUnitVersionHelper.getTestCaseClassName(test))[ FD ]
