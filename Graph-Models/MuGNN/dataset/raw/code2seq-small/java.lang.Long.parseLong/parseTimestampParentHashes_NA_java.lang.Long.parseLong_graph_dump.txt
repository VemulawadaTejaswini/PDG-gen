Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_5 $$ long timestamp[ CD ]
Line_4 $$ String timestampStr = line.substring(0, firstSeparatorIndex)-->Line_10 $$ timestamp = Long.parseLong(timestampStr)[ FD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_16 $$ List<Hash> parents = ContainerUtil.newArrayList()[ CD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_20 $$ return new TimedVcsCommitImpl(intToHash(commit.getId()), parents, timestamp)[ CD ]
Line_17 $$ for (int p : commit.getParents()) -->Line_18 $$ parents.add(intToHash(p))[ FD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_15 $$ com.intellij.vcs.log.graph.GraphCommit<Integer> commit = CommitParser.parseCommitParentsAsInteger(line.substring(firstSeparatorIndex + 2))[ CD ]
Line_7 $$ if (timestampStr.isEmpty()) -->Line_10 $$ timestamp = Long.parseLong(timestampStr)[ CD ]
Line_8 $$ timestamp = 0-->Line_10 $$ timestamp = Long.parseLong(timestampStr)[ FD ]
Line_15 $$ com.intellij.vcs.log.graph.GraphCommit<Integer> commit = CommitParser.parseCommitParentsAsInteger(line.substring(firstSeparatorIndex + 2))-->Line_20 $$ return new TimedVcsCommitImpl(intToHash(commit.getId()), parents, timestamp)[ FD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_3 $$ int firstSeparatorIndex = CommitParser.nextSeparatorIndex(line, 0)[ FD ]
Line_5 $$ long timestamp-->Line_10 $$ timestamp = Long.parseLong(timestampStr)[ FD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_4 $$ String timestampStr = line.substring(0, firstSeparatorIndex)[ FD ]
Line_7 $$ if (timestampStr.isEmpty()) -->Line_8 $$ timestamp = 0[ CD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_15 $$ com.intellij.vcs.log.graph.GraphCommit<Integer> commit = CommitParser.parseCommitParentsAsInteger(line.substring(firstSeparatorIndex + 2))[ FD ]
Line_3 $$ int firstSeparatorIndex = CommitParser.nextSeparatorIndex(line, 0)-->Line_4 $$ String timestampStr = line.substring(0, firstSeparatorIndex)[ FD ]
Line_5 $$ long timestamp-->Line_8 $$ timestamp = 0[ FD ]
Line_16 $$ List<Hash> parents = ContainerUtil.newArrayList()-->Line_18 $$ parents.add(intToHash(p))[ FD ]
Line_15 $$ com.intellij.vcs.log.graph.GraphCommit<Integer> commit = CommitParser.parseCommitParentsAsInteger(line.substring(firstSeparatorIndex + 2))-->Line_17 $$ for (int p : commit.getParents()) [ FD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_4 $$ String timestampStr = line.substring(0, firstSeparatorIndex)[ CD ]
Line_4 $$ String timestampStr = line.substring(0, firstSeparatorIndex)-->Line_7 $$ if (timestampStr.isEmpty()) [ FD ]
Line_2 $$ public static TimedVcsCommit parseTimestampParentHashes(@NotNull String line) -->Line_3 $$ int firstSeparatorIndex = CommitParser.nextSeparatorIndex(line, 0)[ CD ]
