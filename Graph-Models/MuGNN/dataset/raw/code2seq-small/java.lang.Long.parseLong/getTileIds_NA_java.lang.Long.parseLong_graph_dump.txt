Line_20 $$ is = new ByteArrayInputStream(bytes)-->Line_22 $$ is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length))[ FD ]
Line_30 $$ int read = is.read(temp)-->Line_37 $$ if (read != temp.length)[ FD ]
Line_27 $$ byte[] temp = new byte[4]-->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ FD ]
Line_20 $$ is = new ByteArrayInputStream(bytes)-->Line_45 $$ StreamUtils.closeQuietly(is)[ FD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_29 $$ for (int x = 0; x < width; x++) [ FD ]
Line_29 $$ for (int x = 0; x < width; x++) -->Line_31 $$ while (read < temp.length) [ CD ]
Line_9 $$ if (encoding.equals("csv")) -->Line_10 $$ String[] array = data.getText().split(",")[ CD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_3 $$ Element data = element.getChildByName("data")[ CD ]
Line_4 $$ String encoding = data.getAttribute("encoding", null)-->Line_14 $$ if (encoding.equals("base64")) [ FD ]
Line_15 $$ InputStream is = null-->Line_24 $$ is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)))[ FD ]
Line_31 $$ while (read < temp.length) -->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ CD ]
Line_15 $$ InputStream is = null-->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ FD ]
Line_24 $$ is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)))-->Line_45 $$ StreamUtils.closeQuietly(is)[ FD ]
Line_24 $$ is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)))-->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ FD ]
Line_30 $$ int read = is.read(temp)-->Line_31 $$ while (read < temp.length) [ FD ]
Line_35 $$ read += curr-->Line_31 $$ while (read < temp.length) [ FD ]
Line_4 $$ String encoding = data.getAttribute("encoding", null)-->Line_9 $$ if (encoding.equals("csv")) [ FD ]
Line_15 $$ InputStream is = null-->Line_20 $$ is = new ByteArrayInputStream(bytes)[ FD ]
Line_19 $$ if (compression == null)-->Line_21 $$ if (compression.equals("gzip"))[ CD ]
Line_17 $$ String compression = data.getAttribute("compression", null)-->Line_21 $$ if (compression.equals("gzip"))[ FD ]
Line_29 $$ for (int x = 0; x < width; x++) -->Line_37 $$ if (read != temp.length)[ CD ]
Line_22 $$ is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length))-->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ FD ]
Line_19 $$ if (compression == null)-->Line_20 $$ is = new ByteArrayInputStream(bytes)[ CD ]
Line_3 $$ Element data = element.getChildByName("data")-->Line_4 $$ String encoding = data.getAttribute("encoding", null)[ FD ]
Line_3 $$ Element data = element.getChildByName("data")-->Line_18 $$ byte[] bytes = Base64Coder.decode(data.getText())[ FD ]
Line_17 $$ String compression = data.getAttribute("compression", null)-->Line_23 $$ if (compression.equals("zlib"))[ FD ]
Line_29 $$ for (int x = 0; x < width; x++) -->Line_39 $$ ids[y * width + x] = unsignedByteToInt(temp[0]) | unsignedByteToInt(temp[1]) << 8 | unsignedByteToInt(temp[2]) << 16 | unsignedByteToInt(temp[3]) << 24[ CD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_3 $$ Element data = element.getChildByName("data")[ FD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_8 $$ int[] ids = new int[width * height][ CD ]
Line_15 $$ InputStream is = null-->Line_22 $$ is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length))[ FD ]
Line_9 $$ if (encoding.equals("csv")) -->Line_11 $$ for (int i = 0; i < array.length; i++) ids[i] = (int) Long.parseLong(array[i].trim())[ CD ]
Line_31 $$ while (read < temp.length) -->Line_33 $$ if (curr == -1)[ CD ]
Line_20 $$ is = new ByteArrayInputStream(bytes)-->Line_24 $$ is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)))[ FD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_4 $$ String encoding = data.getAttribute("encoding", null)[ CD ]
Line_22 $$ is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length))-->Line_24 $$ is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)))[ FD ]
Line_27 $$ byte[] temp = new byte[4]-->Line_30 $$ int read = is.read(temp)[ FD ]
Line_31 $$ while (read < temp.length) -->Line_35 $$ read += curr[ CD ]
Line_35 $$ read += curr-->Line_37 $$ if (read != temp.length)[ FD ]
Line_21 $$ if (compression.equals("gzip"))-->Line_23 $$ if (compression.equals("zlib"))[ CD ]
Line_28 $$ for (int y = 0; y < height; y++) -->Line_29 $$ for (int x = 0; x < width; x++) [ CD ]
Line_3 $$ Element data = element.getChildByName("data")-->Line_10 $$ String[] array = data.getText().split(",")[ FD ]
Line_17 $$ String compression = data.getAttribute("compression", null)-->Line_19 $$ if (compression == null)[ FD ]
Line_15 $$ InputStream is = null-->Line_30 $$ int read = is.read(temp)[ FD ]
Line_15 $$ InputStream is = null-->Line_45 $$ StreamUtils.closeQuietly(is)[ FD ]
Line_30 $$ int read = is.read(temp)-->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ FD ]
Line_32 $$ int curr = is.read(temp, read, temp.length - read)-->Line_35 $$ read += curr[ FD ]
Line_14 $$ if (encoding.equals("base64")) -->Line_15 $$ InputStream is = null[ CD ]
Line_23 $$ if (compression.equals("zlib"))-->Line_24 $$ is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)))[ CD ]
Line_29 $$ for (int x = 0; x < width; x++) -->Line_30 $$ int read = is.read(temp)[ CD ]
Line_22 $$ is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length))-->Line_30 $$ int read = is.read(temp)[ FD ]
Line_22 $$ is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length))-->Line_45 $$ StreamUtils.closeQuietly(is)[ FD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_9 $$ if (encoding.equals("csv")) [ CD ]
Line_30 $$ int read = is.read(temp)-->Line_35 $$ read += curr[ FD ]
Line_20 $$ is = new ByteArrayInputStream(bytes)-->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ FD ]
Line_13 $$ if (true)-->Line_14 $$ if (encoding.equals("base64")) [ CD ]
Line_32 $$ int curr = is.read(temp, read, temp.length - read)-->Line_33 $$ if (curr == -1)[ FD ]
Line_35 $$ read += curr-->Line_32 $$ int curr = is.read(temp, read, temp.length - read)[ FD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_51 $$ return ids[ CD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_28 $$ for (int y = 0; y < height; y++) [ FD ]
Line_24 $$ is = new BufferedInputStream(new InflaterInputStream(new ByteArrayInputStream(bytes)))-->Line_30 $$ int read = is.read(temp)[ FD ]
Line_21 $$ if (compression.equals("gzip"))-->Line_22 $$ is = new BufferedInputStream(new GZIPInputStream(new ByteArrayInputStream(bytes), bytes.length))[ CD ]
Line_3 $$ Element data = element.getChildByName("data")-->Line_17 $$ String compression = data.getAttribute("compression", null)[ FD ]
Line_20 $$ is = new ByteArrayInputStream(bytes)-->Line_30 $$ int read = is.read(temp)[ FD ]
Line_9 $$ if (encoding.equals("csv")) -->Line_13 $$ if (true)[ CD ]
Line_4 $$ String encoding = data.getAttribute("encoding", null)-->Line_5 $$ if (encoding == null) [ FD ]
Line_2 $$ public static int[] getTileIds(Element element, int width, int height) -->Line_5 $$ if (encoding == null) [ CD ]
