Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_30 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "long")[ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_62 $$ if (builder == null) [ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_52 $$ if (token == XContentParser.Token.VALUE_NUMBER) [ FD ]
Line_57 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_62 $$ if (builder == null) [ FD ]
Line_13 $$ for (FormatDateTimeFormatter dateTimeFormatter : context.root().dynamicDateTimeFormatters()) -->Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_81 $$ if (builder != null) [ FD ]
Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)-->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_67 $$ if (token == XContentParser.Token.VALUE_BOOLEAN) -->Line_68 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "boolean")[ CD ]
Line_69 $$ if (builder == null) -->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ CD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_57 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)[ FD ]
Line_57 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ FD ]
Line_54 $$ if (numberType == XContentParser.NumberType.INT || numberType == XContentParser.NumberType.LONG) -->Line_60 $$ if (numberType == XContentParser.NumberType.FLOAT || numberType == XContentParser.NumberType.DOUBLE) [ CD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_51 $$ return builder[ CD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_69 $$ if (builder == null) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_47 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string")[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_31 $$ if (builder == null) [ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_32 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)[ FD ]
Line_11 $$ String text = context.parser().text()-->Line_29 $$ Long.parseLong(text)[ FD ]
Line_31 $$ if (builder == null) -->Line_32 $$ builder = MapperBuilders.longField(currentFieldName)[ CD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_56 $$ if (builder == null) [ FD ]
Line_10 $$ if (context.root().dateDetection()) -->Line_11 $$ String text = context.parser().text()[ CD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_75 $$ if (builder == null) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_61 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "double")[ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_57 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_17 $$ if (builder == null) [ FD ]
Line_73 $$ if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) -->Line_75 $$ if (builder == null) [ CD ]
Line_67 $$ if (token == XContentParser.Token.VALUE_BOOLEAN) -->Line_69 $$ if (builder == null) [ CD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_16 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "date")[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_53 $$ XContentParser.NumberType numberType = context.parser().numberType()[ FD ]
Line_56 $$ if (builder == null) -->Line_57 $$ builder = MapperBuilders.longField(currentFieldName)[ CD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_48 $$ if (builder == null) [ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_48 $$ if (builder == null) [ FD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_62 $$ if (builder == null) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_67 $$ if (token == XContentParser.Token.VALUE_BOOLEAN) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_27 $$ String text = context.parser().text()[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)[ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_48 $$ if (builder == null) [ FD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_52 $$ if (token == XContentParser.Token.VALUE_NUMBER) [ CD ]
Line_57 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_69 $$ if (builder == null) [ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_56 $$ if (builder == null) [ FD ]
Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)-->Line_81 $$ if (builder != null) [ FD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)[ CD ]
Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_32 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_69 $$ if (builder == null) [ FD ]
Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_80 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, null)[ FD ]
Line_11 $$ String text = context.parser().text()-->Line_15 $$ dateTimeFormatter.parser().parseMillis(text)[ FD ]
Line_57 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_48 $$ if (builder == null) [ FD ]
Line_10 $$ if (context.root().dateDetection()) -->Line_12 $$ if (Strings.countOccurrencesOf(text, ":") > 1 || Strings.countOccurrencesOf(text, "-") > 1 || Strings.countOccurrencesOf(text, "/") > 1) [ CD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_75 $$ if (builder == null) [ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_47 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string")[ CD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_57 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_6 $$ if (builder != null) [ FD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_74 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "binary")[ FD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_81 $$ if (builder != null) [ FD ]
Line_67 $$ if (token == XContentParser.Token.VALUE_BOOLEAN) -->Line_73 $$ if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) [ CD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_32 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_10 $$ if (context.root().dateDetection()) [ FD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_57 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_56 $$ if (builder == null) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_68 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "boolean")[ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_81 $$ if (builder != null) [ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_75 $$ if (builder == null) [ FD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_40 $$ if (builder == null) [ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_81 $$ if (builder != null) [ FD ]
Line_11 $$ String text = context.parser().text()-->Line_12 $$ if (Strings.countOccurrencesOf(text, ":") > 1 || Strings.countOccurrencesOf(text, "-") > 1 || Strings.countOccurrencesOf(text, "/") > 1) [ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_69 $$ if (builder == null) [ FD ]
Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)-->Line_81 $$ if (builder != null) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_39 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "double")[ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_56 $$ if (builder == null) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_55 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "long")[ FD ]
Line_54 $$ if (numberType == XContentParser.NumberType.INT || numberType == XContentParser.NumberType.LONG) -->Line_59 $$ return builder[ CD ]
Line_52 $$ if (token == XContentParser.Token.VALUE_NUMBER) -->Line_53 $$ XContentParser.NumberType numberType = context.parser().numberType()[ CD ]
Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)-->Line_75 $$ if (builder == null) [ FD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_75 $$ if (builder == null) [ FD ]
Line_60 $$ if (numberType == XContentParser.NumberType.FLOAT || numberType == XContentParser.NumberType.DOUBLE) -->Line_62 $$ if (builder == null) [ CD ]
Line_75 $$ if (builder == null) -->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ CD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)[ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)[ FD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_73 $$ if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) [ FD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_26 $$ if (context.root().numericDetection()) [ CD ]
Line_73 $$ if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) -->Line_74 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "binary")[ CD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_81 $$ if (builder != null) [ FD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_48 $$ if (builder == null) [ CD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_62 $$ if (builder == null) [ FD ]
Line_52 $$ if (token == XContentParser.Token.VALUE_NUMBER) -->Line_54 $$ if (numberType == XContentParser.NumberType.INT || numberType == XContentParser.NumberType.LONG) [ CD ]
Line_81 $$ if (builder != null) -->Line_82 $$ return builder[ CD ]
Line_11 $$ String text = context.parser().text()-->Line_38 $$ Double.parseDouble(text)[ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_57 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)[ FD ]
Line_60 $$ if (numberType == XContentParser.NumberType.FLOAT || numberType == XContentParser.NumberType.DOUBLE) -->Line_61 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "double")[ CD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ FD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_6 $$ if (builder != null) [ CD ]
Line_17 $$ if (builder == null) -->Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)[ CD ]
Line_40 $$ if (builder == null) -->Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)[ CD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_57 $$ builder = MapperBuilders.longField(currentFieldName)[ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_62 $$ if (builder == null) [ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_69 $$ if (builder == null) [ FD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)[ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ FD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ FD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ FD ]
Line_13 $$ for (FormatDateTimeFormatter dateTimeFormatter : context.root().dynamicDateTimeFormatters()) -->Line_15 $$ dateTimeFormatter.parser().parseMillis(text)[ FD ]
Line_73 $$ if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) -->Line_78 $$ return builder[ CD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_26 $$ if (context.root().numericDetection()) [ FD ]
Line_73 $$ if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) -->Line_81 $$ if (builder != null) [ CD ]
Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)-->Line_69 $$ if (builder == null) [ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)[ FD ]
Line_6 $$ if (builder != null) -->Line_7 $$ return builder[ CD ]
Line_48 $$ if (builder == null) -->Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)[ CD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_52 $$ if (token == XContentParser.Token.VALUE_NUMBER) -->Line_67 $$ if (token == XContentParser.Token.VALUE_BOOLEAN) [ CD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) [ CD ]
Line_60 $$ if (numberType == XContentParser.NumberType.FLOAT || numberType == XContentParser.NumberType.DOUBLE) -->Line_65 $$ return builder[ CD ]
Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)-->Line_81 $$ if (builder != null) [ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_40 $$ if (builder == null) [ FD ]
Line_32 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_73 $$ if (token == XContentParser.Token.VALUE_EMBEDDED_OBJECT) -->Line_80 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, null)[ CD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_11 $$ String text = context.parser().text()[ FD ]
Line_54 $$ if (numberType == XContentParser.NumberType.INT || numberType == XContentParser.NumberType.LONG) -->Line_55 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "long")[ CD ]
Line_62 $$ if (builder == null) -->Line_63 $$ builder = MapperBuilders.floatField(currentFieldName)[ CD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_31 $$ if (builder == null) [ FD ]
Line_49 $$ builder = MapperBuilders.stringField(currentFieldName)-->Line_56 $$ if (builder == null) [ FD ]
Line_41 $$ builder = MapperBuilders.doubleField(currentFieldName)-->Line_75 $$ if (builder == null) [ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)[ FD ]
Line_26 $$ if (context.root().numericDetection()) -->Line_27 $$ String text = context.parser().text()[ CD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_40 $$ if (builder == null) [ FD ]
Line_57 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_76 $$ builder = MapperBuilders.binaryField(currentFieldName)[ FD ]
Line_57 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_75 $$ if (builder == null) [ FD ]
Line_70 $$ builder = MapperBuilders.booleanField(currentFieldName)-->Line_75 $$ if (builder == null) [ FD ]
Line_57 $$ builder = MapperBuilders.longField(currentFieldName)-->Line_81 $$ if (builder != null) [ FD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)[ FD ]
Line_18 $$ builder = MapperBuilders.dateField(currentFieldName).dateTimeFormatter(dateTimeFormatter)-->Line_69 $$ if (builder == null) [ FD ]
Line_2 $$ private static Mapper.Builder<?, ?> createBuilderFromDynamicValue(final ParseContext context, XContentParser.Token token, String currentFieldName) throws IOException -->Line_13 $$ for (FormatDateTimeFormatter dateTimeFormatter : context.root().dynamicDateTimeFormatters()) [ FD ]
Line_54 $$ if (numberType == XContentParser.NumberType.INT || numberType == XContentParser.NumberType.LONG) -->Line_56 $$ if (builder == null) [ CD ]
Line_67 $$ if (token == XContentParser.Token.VALUE_BOOLEAN) -->Line_72 $$ return builder[ CD ]
Line_5 $$ Mapper.Builder builder = context.root().findTemplateBuilder(context, currentFieldName, "string", null)-->Line_62 $$ if (builder == null) [ FD ]
Line_3 $$ if (token == XContentParser.Token.VALUE_STRING) -->Line_10 $$ if (context.root().dateDetection()) [ CD ]
