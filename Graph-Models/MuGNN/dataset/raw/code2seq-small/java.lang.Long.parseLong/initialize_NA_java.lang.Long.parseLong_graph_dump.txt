Line_61 $$ if (debug) -->Line_62 $$ randomSeed = random.nextLong()[ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_26 $$ tempDirName = args[++i][ FD ]
Line_2 $$ private int initialize(String[] args) throws IllegalArgumentException -->Line_4 $$ String inputPathName = null[ CD ]
Line_20 $$ if (thisArg.equalsIgnoreCase("-seed")) -->Line_23 $$ if (thisArg.equalsIgnoreCase("-skew-buffer-length")) [ CD ]
Line_49 $$ if (inputCycle <= 0) -->Line_50 $$ LOG.error("You must have an input cycle length.")[ CD ]
Line_7 $$ String thisArg = args[i]-->Line_18 $$ if (thisArg.equalsIgnoreCase("-allow-missorting")) [ FD ]
Line_7 $$ String thisArg = args[i]-->Line_10 $$ if (thisArg.equalsIgnoreCase("-output-duration")) [ FD ]
Line_7 $$ String thisArg = args[i]-->Line_12 $$ if (thisArg.equalsIgnoreCase("-input-cycle")) [ FD ]
Line_12 $$ if (thisArg.equalsIgnoreCase("-input-cycle")) -->Line_14 $$ if (thisArg.equalsIgnoreCase("-concentration")) [ CD ]
Line_7 $$ String thisArg = args[i]-->Line_20 $$ if (thisArg.equalsIgnoreCase("-seed")) [ FD ]
Line_2 $$ private int initialize(String[] args) throws IllegalArgumentException -->Line_71 $$ return 0[ CD ]
Line_61 $$ if (debug) -->Line_63 $$ LOG.warn("This run effectively has a -seed of " + randomSeed)[ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_8 $$ if (thisArg.equalsIgnoreCase("-starts-after")) [ CD ]
Line_38 $$ Configuration conf = getConf()-->Line_43 $$ outGen.init(outPath, conf)[ FD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_31 $$ outputPathName = args[++i][ FD ]
Line_4 $$ String inputPathName = null-->Line_30 $$ inputPathName = thisArg[ FD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_13 $$ inputCycle = parseDuration(args[++i])[ FD ]
Line_14 $$ if (thisArg.equalsIgnoreCase("-concentration")) -->Line_15 $$ concentration = Double.parseDouble(args[++i])[ CD ]
Line_10 $$ if (thisArg.equalsIgnoreCase("-output-duration")) -->Line_12 $$ if (thisArg.equalsIgnoreCase("-input-cycle")) [ CD ]
Line_20 $$ if (thisArg.equalsIgnoreCase("-seed")) -->Line_22 $$ randomSeed = Long.parseLong(args[++i])[ CD ]
Line_27 $$ if (thisArg.equals("") || thisArg.startsWith("-")) -->Line_32 $$ if (i != args.length - 1) [ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_15 $$ concentration = Double.parseDouble(args[++i])[ FD ]
Line_5 $$ String outputPathName = null-->Line_31 $$ outputPathName = args[++i][ FD ]
Line_25 $$ if (thisArg.equalsIgnoreCase("-temp-directory")) -->Line_27 $$ if (thisArg.equals("") || thisArg.startsWith("-")) [ CD ]
Line_41 $$ Path outPath = new Path(outputPathName)-->Line_44 $$ tempDir = tempDirName == null ? outPath.getParent() : new Path(tempDirName)[ FD ]
Line_3 $$ String tempDirName = null-->Line_26 $$ tempDirName = args[++i][ FD ]
Line_8 $$ if (thisArg.equalsIgnoreCase("-starts-after")) -->Line_10 $$ if (thisArg.equalsIgnoreCase("-output-duration")) [ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_22 $$ randomSeed = Long.parseLong(args[++i])[ FD ]
Line_7 $$ String thisArg = args[i]-->Line_23 $$ if (thisArg.equalsIgnoreCase("-skew-buffer-length")) [ FD ]
Line_7 $$ String thisArg = args[i]-->Line_25 $$ if (thisArg.equalsIgnoreCase("-temp-directory")) [ FD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_7 $$ String thisArg = args[i][ CD ]
Line_7 $$ String thisArg = args[i]-->Line_14 $$ if (thisArg.equalsIgnoreCase("-concentration")) [ FD ]
Line_25 $$ if (thisArg.equalsIgnoreCase("-temp-directory")) -->Line_26 $$ tempDirName = args[++i][ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_9 $$ startsAfter = parseDuration(args[++i])[ FD ]
Line_49 $$ if (inputCycle <= 0) -->Line_51 $$ return NO_INPUT_CYCLE_LENGTH[ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_11 $$ outputDuration = parseDuration(args[++i])[ FD ]
Line_12 $$ if (thisArg.equalsIgnoreCase("-input-cycle")) -->Line_13 $$ inputCycle = parseDuration(args[++i])[ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_24 $$ skewBufferLength = Integer.parseInt(args[++i])[ FD ]
Line_2 $$ private int initialize(String[] args) throws IllegalArgumentException -->Line_5 $$ String outputPathName = null[ CD ]
Line_2 $$ private int initialize(String[] args) throws IllegalArgumentException -->Line_6 $$ for (int i = 0; i < args.length; ++i) [ CD ]
Line_14 $$ if (thisArg.equalsIgnoreCase("-concentration")) -->Line_16 $$ if (thisArg.equalsIgnoreCase("-debug")) [ CD ]
Line_7 $$ String thisArg = args[i]-->Line_30 $$ inputPathName = thisArg[ FD ]
Line_23 $$ if (thisArg.equalsIgnoreCase("-skew-buffer-length")) -->Line_24 $$ skewBufferLength = Integer.parseInt(args[++i])[ CD ]
Line_18 $$ if (thisArg.equalsIgnoreCase("-allow-missorting")) -->Line_20 $$ if (thisArg.equalsIgnoreCase("-seed")) [ CD ]
Line_16 $$ if (thisArg.equalsIgnoreCase("-debug")) -->Line_18 $$ if (thisArg.equalsIgnoreCase("-allow-missorting")) [ CD ]
Line_8 $$ if (thisArg.equalsIgnoreCase("-starts-after")) -->Line_9 $$ startsAfter = parseDuration(args[++i])[ CD ]
Line_7 $$ String thisArg = args[i]-->Line_27 $$ if (thisArg.equals("") || thisArg.startsWith("-")) [ FD ]
Line_27 $$ if (thisArg.equals("") || thisArg.startsWith("-")) -->Line_30 $$ inputPathName = thisArg[ CD ]
Line_6 $$ for (int i = 0; i < args.length; ++i) -->Line_32 $$ if (i != args.length - 1) [ FD ]
Line_10 $$ if (thisArg.equalsIgnoreCase("-output-duration")) -->Line_11 $$ outputDuration = parseDuration(args[++i])[ CD ]
Line_27 $$ if (thisArg.equals("") || thisArg.startsWith("-")) -->Line_31 $$ outputPathName = args[++i][ CD ]
Line_7 $$ String thisArg = args[i]-->Line_16 $$ if (thisArg.equalsIgnoreCase("-debug")) [ FD ]
Line_23 $$ if (thisArg.equalsIgnoreCase("-skew-buffer-length")) -->Line_25 $$ if (thisArg.equalsIgnoreCase("-temp-directory")) [ CD ]
Line_45 $$ FileSystem fs = tempDir.getFileSystem(getConf())-->Line_46 $$ if (!fs.getFileStatus(tempDir).isDirectory()) [ FD ]
Line_2 $$ private int initialize(String[] args) throws IllegalArgumentException -->Line_3 $$ String tempDirName = null[ CD ]
Line_41 $$ Path outPath = new Path(outputPathName)-->Line_43 $$ outGen.init(outPath, conf)[ FD ]
Line_7 $$ String thisArg = args[i]-->Line_8 $$ if (thisArg.equalsIgnoreCase("-starts-after")) [ FD ]
