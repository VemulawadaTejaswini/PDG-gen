Line_44 $$ while (read + s.begin < s.end) -->Line_50 $$ archive.put(new Path(parsed[0]), new HarStatus(lineFeed))[ CD ]
Line_9 $$ FileStatus masterStat = fs.getFileStatus(masterIndexPath)-->Line_20 $$ while (read < masterStat.getLen()) [ FD ]
Line_12 $$ read = lin.readLine(line)-->Line_22 $$ read += b[ FD ]
Line_20 $$ while (read < masterStat.getLen()) -->Line_23 $$ readStr = line.toString().split(" ")[ CD ]
Line_3 $$ Text line = new Text()-->Line_21 $$ int b = lin.readLine(line)[ FD ]
Line_2 $$ private void parseMetaData() throws IOException -->Line_5 $$ FSDataInputStream in = null[ CD ]
Line_35 $$ FSDataInputStream aIn = fs.open(archiveIndexPath)-->Line_42 $$ aIn.seek(s.begin)[ FD ]
Line_4 $$ long read-->Line_20 $$ while (read < masterStat.getLen()) [ FD ]
Line_12 $$ read = lin.readLine(line)-->Line_20 $$ while (read < masterStat.getLen()) [ FD ]
Line_44 $$ while (read + s.begin < s.end) -->Line_49 $$ parsed[0] = decodeFileName(parsed[0])[ CD ]
Line_3 $$ Text line = new Text()-->Line_12 $$ read = lin.readLine(line)[ FD ]
Line_3 $$ Text line = new Text()-->Line_47 $$ String lineFeed = line.toString()[ FD ]
Line_3 $$ Text line = new Text()-->Line_23 $$ readStr = line.toString().split(" ")[ FD ]
Line_4 $$ long read-->Line_12 $$ read = lin.readLine(line)[ FD ]
Line_11 $$ lin = new LineReader(in, getConf())-->Line_21 $$ int b = lin.readLine(line)[ FD ]
Line_20 $$ while (read < masterStat.getLen()) -->Line_22 $$ read += b[ CD ]
Line_5 $$ FSDataInputStream in = null-->Line_33 $$ IOUtils.cleanup(LOG, lin, in)[ FD ]
Line_37 $$ FileStatus archiveStat = fs.getFileStatus(archiveIndexPath)-->Line_38 $$ archiveIndexTimestamp = archiveStat.getModificationTime()[ FD ]
Line_22 $$ read += b-->Line_41 $$ read = 0[ FD ]
Line_39 $$ LineReader aLin-->Line_45 $$ int tmp = aLin.readLine(line)[ FD ]
Line_45 $$ int tmp = aLin.readLine(line)-->Line_46 $$ read += tmp[ FD ]
Line_44 $$ while (read + s.begin < s.end) -->Line_46 $$ read += tmp[ CD ]
Line_44 $$ while (read + s.begin < s.end) -->Line_51 $$ line.clear()[ CD ]
Line_43 $$ aLin = new LineReader(aIn, getConf())-->Line_45 $$ int tmp = aLin.readLine(line)[ FD ]
Line_41 $$ read = 0-->Line_46 $$ read += tmp[ FD ]
Line_47 $$ String lineFeed = line.toString()-->Line_48 $$ String[] parsed = lineFeed.split(" ")[ FD ]
Line_44 $$ while (read + s.begin < s.end) -->Line_47 $$ String lineFeed = line.toString()[ CD ]
Line_12 $$ read = lin.readLine(line)-->Line_46 $$ read += tmp[ FD ]
Line_20 $$ while (read < masterStat.getLen()) -->Line_21 $$ int b = lin.readLine(line)[ CD ]
Line_4 $$ long read-->Line_41 $$ read = 0[ FD ]
Line_12 $$ read = lin.readLine(line)-->Line_41 $$ read = 0[ FD ]
Line_20 $$ while (read < masterStat.getLen()) -->Line_26 $$ stores.add(new Store(Long.parseLong(readStr[2]), Long.parseLong(readStr[3]), startHash, endHash))[ CD ]
Line_39 $$ LineReader aLin-->Line_43 $$ aLin = new LineReader(aIn, getConf())[ FD ]
Line_9 $$ FileStatus masterStat = fs.getFileStatus(masterIndexPath)-->Line_10 $$ masterIndexTimestamp = masterStat.getModificationTime()[ FD ]
Line_20 $$ while (read < masterStat.getLen()) -->Line_25 $$ int endHash = Integer.parseInt(readStr[1])[ CD ]
Line_11 $$ lin = new LineReader(in, getConf())-->Line_33 $$ IOUtils.cleanup(LOG, lin, in)[ FD ]
Line_2 $$ private void parseMetaData() throws IOException -->Line_4 $$ long read[ CD ]
Line_4 $$ long read-->Line_22 $$ read += b[ FD ]
Line_20 $$ while (read < masterStat.getLen()) -->Line_24 $$ int startHash = Integer.parseInt(readStr[0])[ CD ]
Line_3 $$ Text line = new Text()-->Line_13 $$ String versionLine = line.toString()[ FD ]
Line_20 $$ while (read < masterStat.getLen()) -->Line_27 $$ line.clear()[ CD ]
Line_44 $$ while (read + s.begin < s.end) -->Line_48 $$ String[] parsed = lineFeed.split(" ")[ CD ]
Line_22 $$ read += b-->Line_46 $$ read += tmp[ FD ]
Line_3 $$ Text line = new Text()-->Line_27 $$ line.clear()[ FD ]
Line_2 $$ private void parseMetaData() throws IOException -->Line_3 $$ Text line = new Text()[ CD ]
Line_6 $$ LineReader lin = null-->Line_33 $$ IOUtils.cleanup(LOG, lin, in)[ FD ]
Line_44 $$ while (read + s.begin < s.end) -->Line_45 $$ int tmp = aLin.readLine(line)[ CD ]
Line_11 $$ lin = new LineReader(in, getConf())-->Line_12 $$ read = lin.readLine(line)[ FD ]
Line_3 $$ Text line = new Text()-->Line_45 $$ int tmp = aLin.readLine(line)[ FD ]
Line_4 $$ long read-->Line_46 $$ read += tmp[ FD ]
Line_35 $$ FSDataInputStream aIn = fs.open(archiveIndexPath)-->Line_55 $$ IOUtils.cleanup(LOG, aIn)[ FD ]
Line_2 $$ private void parseMetaData() throws IOException -->Line_35 $$ FSDataInputStream aIn = fs.open(archiveIndexPath)[ CD ]
Line_3 $$ Text line = new Text()-->Line_51 $$ line.clear()[ FD ]
Line_8 $$ in = fs.open(masterIndexPath)-->Line_33 $$ IOUtils.cleanup(LOG, lin, in)[ FD ]
Line_21 $$ int b = lin.readLine(line)-->Line_22 $$ read += b[ FD ]
Line_6 $$ LineReader lin = null-->Line_12 $$ read = lin.readLine(line)[ FD ]
Line_22 $$ read += b-->Line_20 $$ while (read < masterStat.getLen()) [ FD ]
Line_5 $$ FSDataInputStream in = null-->Line_8 $$ in = fs.open(masterIndexPath)[ FD ]
Line_13 $$ String versionLine = line.toString()-->Line_14 $$ String[] arr = versionLine.split(" ")[ FD ]
Line_6 $$ LineReader lin = null-->Line_11 $$ lin = new LineReader(in, getConf())[ FD ]
Line_2 $$ private void parseMetaData() throws IOException -->Line_6 $$ LineReader lin = null[ CD ]
Line_6 $$ LineReader lin = null-->Line_21 $$ int b = lin.readLine(line)[ FD ]
Line_19 $$ String[] readStr-->Line_23 $$ readStr = line.toString().split(" ")[ FD ]
