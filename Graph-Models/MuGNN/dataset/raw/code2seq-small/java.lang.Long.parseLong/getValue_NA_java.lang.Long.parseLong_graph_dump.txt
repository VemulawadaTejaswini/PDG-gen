Line_3 $$ final IElementType type = getLiteralElementType()-->Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) [ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_17 $$ final long value = parseDigits(text, 3, 32)[ FD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_29 $$ if (type == JavaTokenType.LONG_LITERAL) [ FD ]
Line_2 $$ public Object getValue() -->Line_6 $$ if (type == JavaTokenType.INTEGER_LITERAL) [ CD ]
Line_65 $$ if (StringUtil.endsWithChar(text, '\'')) -->Line_66 $$ if (textLength == 1)[ CD ]
Line_84 $$ if (type == JavaTokenType.TRUE_KEYWORD) -->Line_85 $$ return Boolean.TRUE[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_52 $$ return Float.valueOf(text)[ FD ]
Line_68 $$ text = text.substring(1, textLength - 1)-->Line_70 $$ text = text.substring(1, textLength)[ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_45 $$ return Long.valueOf(text, 10)[ FD ]
Line_2 $$ public Object getValue() -->Line_3 $$ final IElementType type = getLiteralElementType()[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_13 $$ final long value = parseDigits(text.substring(2), 1, 32)[ FD ]
Line_34 $$ if (text.startsWith(HEX_PREFIX)) -->Line_35 $$ return parseDigits(text.substring(2), 4, 64)[ CD ]
Line_65 $$ if (StringUtil.endsWithChar(text, '\'')) -->Line_70 $$ text = text.substring(1, textLength)[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_30 $$ if (StringUtil.endsWithChar(text, 'L') || StringUtil.endsWithChar(text, 'l')) [ FD ]
Line_80 $$ if (type == JavaTokenType.STRING_LITERAL) -->Line_81 $$ String innerText = getInnerText()[ CD ]
Line_12 $$ if (text.startsWith(BIN_PREFIX)) -->Line_13 $$ final long value = parseDigits(text.substring(2), 1, 32)[ CD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_6 $$ if (type == JavaTokenType.INTEGER_LITERAL) [ FD ]
Line_2 $$ public Object getValue() -->Line_57 $$ if (type == JavaTokenType.DOUBLE_LITERAL) [ CD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_57 $$ if (type == JavaTokenType.DOUBLE_LITERAL) [ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_52 $$ return Float.valueOf(text)[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_41 $$ return parseDigits(text, 3, 64)[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_8 $$ if (text.startsWith(HEX_PREFIX)) [ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_68 $$ text = text.substring(1, textLength - 1)[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_65 $$ if (StringUtil.endsWithChar(text, '\'')) [ FD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_80 $$ if (type == JavaTokenType.STRING_LITERAL) [ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_65 $$ if (StringUtil.endsWithChar(text, '\'')) [ FD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_84 $$ if (type == JavaTokenType.TRUE_KEYWORD) [ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_9 $$ final long value = parseDigits(text.substring(2), 4, 32)[ FD ]
Line_72 $$ StringBuilder chars = new StringBuilder()-->Line_76 $$ if (chars.length() != 1)[ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_68 $$ text = text.substring(1, textLength - 1)[ FD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_59 $$ return Double.valueOf(text)[ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_43 $$ if (_2_IN_63.equals(text))[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_37 $$ if (text.startsWith(BIN_PREFIX)) [ FD ]
Line_2 $$ public Object getValue() -->Line_29 $$ if (type == JavaTokenType.LONG_LITERAL) [ CD ]
Line_2 $$ public Object getValue() -->Line_80 $$ if (type == JavaTokenType.STRING_LITERAL) [ CD ]
Line_16 $$ if (StringUtil.startsWithChar(text, '0')) -->Line_18 $$ return Integer.valueOf((int) value)[ CD ]
Line_76 $$ if (chars.length() != 1)-->Line_77 $$ return null[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_31 $$ text = text.substring(0, textLength - 1)[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_40 $$ if (StringUtil.startsWithChar(text, '0')) [ FD ]
Line_5 $$ final int textLength = text.length()-->Line_66 $$ if (textLength == 1)[ FD ]
Line_12 $$ if (text.startsWith(BIN_PREFIX)) -->Line_14 $$ return Integer.valueOf((int) value)[ CD ]
Line_74 $$ if (!success)-->Line_75 $$ return null[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_12 $$ if (text.startsWith(BIN_PREFIX)) [ FD ]
Line_40 $$ if (StringUtil.startsWithChar(text, '0')) -->Line_41 $$ return parseDigits(text, 3, 64)[ CD ]
Line_72 $$ StringBuilder chars = new StringBuilder()-->Line_73 $$ boolean success = parseStringCharacters(text, chars, null)[ FD ]
Line_80 $$ if (type == JavaTokenType.STRING_LITERAL) -->Line_82 $$ return innerText == null ? null : internedParseStringCharacters(innerText)[ CD ]
Line_2 $$ public Object getValue() -->Line_84 $$ if (type == JavaTokenType.TRUE_KEYWORD) [ CD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_40 $$ if (StringUtil.startsWithChar(text, '0')) [ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_21 $$ if (text.equals(_2_IN_31))[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_35 $$ return parseDigits(text.substring(2), 4, 64)[ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_73 $$ boolean success = parseStringCharacters(text, chars, null)[ FD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_50 $$ if (type == JavaTokenType.FLOAT_LITERAL) [ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_38 $$ return parseDigits(text.substring(2), 1, 64)[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_70 $$ text = text.substring(1, textLength)[ FD ]
Line_68 $$ text = text.substring(1, textLength - 1)-->Line_73 $$ boolean success = parseStringCharacters(text, chars, null)[ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_37 $$ if (text.startsWith(BIN_PREFIX)) [ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_73 $$ boolean success = parseStringCharacters(text, chars, null)[ FD ]
Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) -->Line_73 $$ boolean success = parseStringCharacters(text, chars, null)[ CD ]
Line_3 $$ final IElementType type = getLiteralElementType()-->Line_87 $$ if (type == JavaTokenType.FALSE_KEYWORD) [ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_34 $$ if (text.startsWith(HEX_PREFIX)) [ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_38 $$ return parseDigits(text.substring(2), 1, 64)[ FD ]
Line_2 $$ public Object getValue() -->Line_5 $$ final int textLength = text.length()[ CD ]
Line_2 $$ public Object getValue() -->Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()[ CD ]
Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) -->Line_76 $$ if (chars.length() != 1)[ CD ]
Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) -->Line_78 $$ return Character.valueOf(chars.charAt(0))[ CD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_41 $$ return parseDigits(text, 3, 64)[ FD ]
Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) -->Line_65 $$ if (StringUtil.endsWithChar(text, '\'')) [ CD ]
Line_2 $$ public Object getValue() -->Line_90 $$ return null[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_43 $$ if (_2_IN_63.equals(text))[ FD ]
Line_5 $$ final int textLength = text.length()-->Line_70 $$ text = text.substring(1, textLength)[ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_34 $$ if (text.startsWith(HEX_PREFIX)) [ FD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_59 $$ return Double.valueOf(text)[ FD ]
Line_87 $$ if (type == JavaTokenType.FALSE_KEYWORD) -->Line_88 $$ return Boolean.FALSE[ CD ]
Line_70 $$ text = text.substring(1, textLength)-->Line_73 $$ boolean success = parseStringCharacters(text, chars, null)[ FD ]
Line_81 $$ String innerText = getInnerText()-->Line_82 $$ return innerText == null ? null : internedParseStringCharacters(innerText)[ FD ]
Line_37 $$ if (text.startsWith(BIN_PREFIX)) -->Line_38 $$ return parseDigits(text.substring(2), 1, 64)[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_5 $$ final int textLength = text.length()[ FD ]
Line_16 $$ if (StringUtil.startsWithChar(text, '0')) -->Line_17 $$ final long value = parseDigits(text, 3, 32)[ CD ]
Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) -->Line_74 $$ if (!success)[ CD ]
Line_29 $$ if (type == JavaTokenType.LONG_LITERAL) -->Line_30 $$ if (StringUtil.endsWithChar(text, 'L') || StringUtil.endsWithChar(text, 'l')) [ CD ]
Line_72 $$ StringBuilder chars = new StringBuilder()-->Line_78 $$ return Character.valueOf(chars.charAt(0))[ FD ]
Line_2 $$ public Object getValue() -->Line_87 $$ if (type == JavaTokenType.FALSE_KEYWORD) [ CD ]
Line_30 $$ if (StringUtil.endsWithChar(text, 'L') || StringUtil.endsWithChar(text, 'l')) -->Line_31 $$ text = text.substring(0, textLength - 1)[ CD ]
Line_8 $$ if (text.startsWith(HEX_PREFIX)) -->Line_9 $$ final long value = parseDigits(text.substring(2), 4, 32)[ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_20 $$ final long l = Long.parseLong(text, 10)[ FD ]
Line_8 $$ if (text.startsWith(HEX_PREFIX)) -->Line_10 $$ return Integer.valueOf((int) value)[ CD ]
Line_21 $$ if (text.equals(_2_IN_31))-->Line_22 $$ return Integer.valueOf((int) l)[ CD ]
Line_2 $$ public Object getValue() -->Line_50 $$ if (type == JavaTokenType.FLOAT_LITERAL) [ CD ]
Line_2 $$ public Object getValue() -->Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) [ CD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_45 $$ return Long.valueOf(text, 10)[ FD ]
Line_43 $$ if (_2_IN_63.equals(text))-->Line_44 $$ return Long.valueOf(-1L << 63)[ CD ]
Line_66 $$ if (textLength == 1)-->Line_67 $$ return null[ CD ]
Line_64 $$ if (type == JavaTokenType.CHARACTER_LITERAL) -->Line_72 $$ StringBuilder chars = new StringBuilder()[ CD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_35 $$ return parseDigits(text.substring(2), 4, 64)[ FD ]
Line_73 $$ boolean success = parseStringCharacters(text, chars, null)-->Line_74 $$ if (!success)[ FD ]
Line_65 $$ if (StringUtil.endsWithChar(text, '\'')) -->Line_68 $$ text = text.substring(1, textLength - 1)[ CD ]
Line_31 $$ text = text.substring(0, textLength - 1)-->Line_70 $$ text = text.substring(1, textLength)[ FD ]
Line_4 $$ String text = NUMERIC_LITERALS.contains(type) ? getCanonicalText().toLowerCase(Locale.ENGLISH) : getCanonicalText()-->Line_16 $$ if (StringUtil.startsWithChar(text, '0')) [ FD ]
