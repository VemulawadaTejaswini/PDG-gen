Line_15 $$ if (StringUtils.hasText(intervalString)) -->Line_23 $$ org.springframework.util.Log4jConfigurer.initLogging(location)[ CD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_14 $$ String intervalString = servletContext.getInitParameter(REFRESH_INTERVAL_PARAM)[ FD ]
Line_3 $$ if (exposeWebAppRoot(servletContext)) -->Line_4 $$ WebUtils.setWebAppRootSystemProperty(servletContext)[ CD ]
Line_10 $$ if (!ResourceUtils.isUrl(location)) -->Line_11 $$ location = WebUtils.getRealPath(servletContext, location)[ CD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)[ FD ]
Line_9 $$ location = ServletContextPropertyUtils.resolvePlaceholders(location, servletContext)-->Line_18 $$ org.springframework.util.Log4jConfigurer.initLogging(location, refreshInterval)[ FD ]
Line_9 $$ location = ServletContextPropertyUtils.resolvePlaceholders(location, servletContext)-->Line_10 $$ if (!ResourceUtils.isUrl(location)) [ FD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_11 $$ location = WebUtils.getRealPath(servletContext, location)[ FD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_3 $$ if (exposeWebAppRoot(servletContext)) [ FD ]
Line_11 $$ location = WebUtils.getRealPath(servletContext, location)-->Line_23 $$ org.springframework.util.Log4jConfigurer.initLogging(location)[ FD ]
Line_9 $$ location = ServletContextPropertyUtils.resolvePlaceholders(location, servletContext)-->Line_11 $$ location = WebUtils.getRealPath(servletContext, location)[ FD ]
Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)-->Line_11 $$ location = WebUtils.getRealPath(servletContext, location)[ FD ]
Line_9 $$ location = ServletContextPropertyUtils.resolvePlaceholders(location, servletContext)-->Line_23 $$ org.springframework.util.Log4jConfigurer.initLogging(location)[ FD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_3 $$ if (exposeWebAppRoot(servletContext)) [ CD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_7 $$ if (location != null) [ CD ]
Line_17 $$ long refreshInterval = Long.parseLong(intervalString)-->Line_18 $$ org.springframework.util.Log4jConfigurer.initLogging(location, refreshInterval)[ FD ]
Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)-->Line_18 $$ org.springframework.util.Log4jConfigurer.initLogging(location, refreshInterval)[ FD ]
Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)-->Line_23 $$ org.springframework.util.Log4jConfigurer.initLogging(location)[ FD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_13 $$ servletContext.log("Initializing log4j from [" + location + "]")[ FD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_9 $$ location = ServletContextPropertyUtils.resolvePlaceholders(location, servletContext)[ FD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_4 $$ WebUtils.setWebAppRootSystemProperty(servletContext)[ FD ]
Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)-->Line_7 $$ if (location != null) [ FD ]
Line_11 $$ location = WebUtils.getRealPath(servletContext, location)-->Line_18 $$ org.springframework.util.Log4jConfigurer.initLogging(location, refreshInterval)[ FD ]
Line_14 $$ String intervalString = servletContext.getInitParameter(REFRESH_INTERVAL_PARAM)-->Line_15 $$ if (StringUtils.hasText(intervalString)) [ FD ]
Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)-->Line_9 $$ location = ServletContextPropertyUtils.resolvePlaceholders(location, servletContext)[ FD ]
Line_14 $$ String intervalString = servletContext.getInitParameter(REFRESH_INTERVAL_PARAM)-->Line_17 $$ long refreshInterval = Long.parseLong(intervalString)[ FD ]
Line_2 $$ public static void initLogging(ServletContext servletContext) -->Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)[ CD ]
Line_6 $$ String location = servletContext.getInitParameter(CONFIG_LOCATION_PARAM)-->Line_10 $$ if (!ResourceUtils.isUrl(location)) [ FD ]
