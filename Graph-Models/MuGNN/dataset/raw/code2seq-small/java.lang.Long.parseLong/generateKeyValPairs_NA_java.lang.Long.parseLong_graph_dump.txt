Line_28 $$ countType = STRING_VALUE_MAX-->Line_34 $$ countType = STRING_VALUE_MIN[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_31 $$ if (e != null) [ FD ]
Line_19 $$ if (e != null) -->Line_20 $$ retv.add(e)[ CD ]
Line_2 $$ public ArrayList<Entry<Text, Text>> generateKeyValPairs(Object key, Object val) -->Line_4 $$ String[] words = val.toString().split(" ")[ CD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_2 $$ public ArrayList<Entry<Text, Text>> generateKeyValPairs(Object key, Object val) -->Line_4 $$ String[] words = val.toString().split(" ")[ FD ]
Line_17 $$ id = "max"-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_8 $$ for (String word : words) -->Line_11 $$ id = "count_" + word[ FD ]
Line_23 $$ id = "min"-->Line_29 $$ id = "value_as_string_max"[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_37 $$ if (e != null) [ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_44 $$ retv.add(e)[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_23 $$ id = "min"-->Line_35 $$ id = "value_as_string_min"[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_38 $$ retv.add(e)[ FD ]
Line_2 $$ public ArrayList<Entry<Text, Text>> generateKeyValPairs(Object key, Object val) -->Line_7 $$ Entry<Text, Text> e[ CD ]
Line_29 $$ id = "value_as_string_max"-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()-->Line_50 $$ retv.add(e)[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_44 $$ retv.add(e)[ FD ]
Line_6 $$ String id-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_40 $$ countType = UNIQ_VALUE_COUNT[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_43 $$ if (e != null) [ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_19 $$ if (e != null) [ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_25 $$ if (e != null) [ FD ]
Line_23 $$ id = "min"-->Line_41 $$ id = "uniq_count"[ FD ]
Line_48 $$ e = generateEntry(countType, id, new Text(word))-->Line_50 $$ retv.add(e)[ FD ]
Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()-->Line_14 $$ retv.add(e)[ FD ]
Line_17 $$ id = "max"-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_17 $$ id = "max"-->Line_23 $$ id = "min"[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_28 $$ countType = STRING_VALUE_MAX[ FD ]
Line_6 $$ String id-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_23 $$ id = "min"-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_32 $$ retv.add(e)[ FD ]
Line_8 $$ for (String word : words) -->Line_9 $$ long numVal = Long.parseLong(word)[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_34 $$ countType = STRING_VALUE_MIN[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_25 $$ if (e != null) -->Line_26 $$ retv.add(e)[ CD ]
Line_2 $$ public ArrayList<Entry<Text, Text>> generateKeyValPairs(Object key, Object val) -->Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()[ CD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_49 $$ if (e != null) [ FD ]
Line_23 $$ id = "min"-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_43 $$ if (e != null) [ FD ]
Line_23 $$ id = "min"-->Line_47 $$ id = "histogram"[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_34 $$ countType = STRING_VALUE_MIN[ FD ]
Line_2 $$ public ArrayList<Entry<Text, Text>> generateKeyValPairs(Object key, Object val) -->Line_53 $$ return retv[ CD ]
Line_11 $$ id = "count_" + word-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_43 $$ if (e != null) [ FD ]
Line_29 $$ id = "value_as_string_max"-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_37 $$ if (e != null) [ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()-->Line_38 $$ retv.add(e)[ FD ]
Line_23 $$ id = "min"-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_34 $$ countType = STRING_VALUE_MIN-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_42 $$ e = generateEntry(countType, id, new Text(word))-->Line_50 $$ retv.add(e)[ FD ]
Line_23 $$ id = "min"-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_22 $$ countType = LONG_VALUE_MIN[ FD ]
Line_5 $$ String countType-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_2 $$ public ArrayList<Entry<Text, Text>> generateKeyValPairs(Object key, Object val) -->Line_6 $$ String id[ CD ]
Line_11 $$ id = "count_" + word-->Line_35 $$ id = "value_as_string_min"[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_40 $$ countType = UNIQ_VALUE_COUNT[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_16 $$ countType = LONG_VALUE_MAX[ FD ]
Line_5 $$ String countType-->Line_28 $$ countType = STRING_VALUE_MAX[ FD ]
Line_31 $$ if (e != null) -->Line_32 $$ retv.add(e)[ CD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_50 $$ retv.add(e)[ FD ]
Line_40 $$ countType = UNIQ_VALUE_COUNT-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_42 $$ e = generateEntry(countType, id, new Text(word))-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_50 $$ retv.add(e)[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_19 $$ if (e != null) [ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_31 $$ if (e != null) [ FD ]
Line_11 $$ id = "count_" + word-->Line_47 $$ id = "histogram"[ FD ]
Line_2 $$ public ArrayList<Entry<Text, Text>> generateKeyValPairs(Object key, Object val) -->Line_5 $$ String countType[ CD ]
Line_35 $$ id = "value_as_string_min"-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_49 $$ if (e != null) -->Line_50 $$ retv.add(e)[ CD ]
Line_6 $$ String id-->Line_23 $$ id = "min"[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_6 $$ String id-->Line_29 $$ id = "value_as_string_max"[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_50 $$ retv.add(e)[ FD ]
Line_11 $$ id = "count_" + word-->Line_23 $$ id = "min"[ FD ]
Line_5 $$ String countType-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_6 $$ String id-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_28 $$ countType = STRING_VALUE_MAX-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_25 $$ if (e != null) [ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_40 $$ countType = UNIQ_VALUE_COUNT[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_31 $$ if (e != null) [ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_31 $$ if (e != null) [ FD ]
Line_43 $$ if (e != null) -->Line_44 $$ retv.add(e)[ CD ]
Line_29 $$ id = "value_as_string_max"-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_46 $$ countType = VALUE_HISTOGRAM[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_6 $$ String id-->Line_41 $$ id = "uniq_count"[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_20 $$ retv.add(e)[ FD ]
Line_5 $$ String countType-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_5 $$ String countType-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_42 $$ e = generateEntry(countType, id, new Text(word))-->Line_49 $$ if (e != null) [ FD ]
Line_5 $$ String countType-->Line_10 $$ countType = LONG_VALUE_SUM[ FD ]
Line_6 $$ String id-->Line_47 $$ id = "histogram"[ FD ]
Line_35 $$ id = "value_as_string_min"-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_14 $$ retv.add(e)[ FD ]
Line_17 $$ id = "max"-->Line_47 $$ id = "histogram"[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_44 $$ retv.add(e)[ FD ]
Line_11 $$ id = "count_" + word-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_47 $$ id = "histogram"-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_49 $$ if (e != null) [ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_50 $$ retv.add(e)[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_38 $$ retv.add(e)[ FD ]
Line_34 $$ countType = STRING_VALUE_MIN-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_35 $$ id = "value_as_string_min"-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()-->Line_26 $$ retv.add(e)[ FD ]
Line_5 $$ String countType-->Line_40 $$ countType = UNIQ_VALUE_COUNT[ FD ]
Line_17 $$ id = "max"-->Line_41 $$ id = "uniq_count"[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_46 $$ countType = VALUE_HISTOGRAM[ FD ]
Line_11 $$ id = "count_" + word-->Line_12 $$ e = generateEntry(countType, id, ONE)[ FD ]
Line_5 $$ String countType-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_6 $$ String id-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_26 $$ retv.add(e)[ FD ]
Line_29 $$ id = "value_as_string_max"-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()-->Line_20 $$ retv.add(e)[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_11 $$ id = "count_" + word-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_29 $$ id = "value_as_string_max"-->Line_41 $$ id = "uniq_count"[ FD ]
Line_42 $$ e = generateEntry(countType, id, new Text(word))-->Line_44 $$ retv.add(e)[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_38 $$ retv.add(e)[ FD ]
Line_37 $$ if (e != null) -->Line_38 $$ retv.add(e)[ CD ]
Line_28 $$ countType = STRING_VALUE_MAX-->Line_46 $$ countType = VALUE_HISTOGRAM[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_11 $$ id = "count_" + word-->Line_41 $$ id = "uniq_count"[ FD ]
Line_11 $$ id = "count_" + word-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_41 $$ id = "uniq_count"-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_6 $$ String id-->Line_17 $$ id = "max"[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_34 $$ countType = STRING_VALUE_MIN[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_38 $$ retv.add(e)[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_31 $$ if (e != null) [ FD ]
Line_5 $$ String countType-->Line_22 $$ countType = LONG_VALUE_MIN[ FD ]
Line_28 $$ countType = STRING_VALUE_MAX-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_42 $$ e = generateEntry(countType, id, new Text(word))-->Line_43 $$ if (e != null) [ FD ]
Line_6 $$ String id-->Line_11 $$ id = "count_" + word[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_37 $$ if (e != null) [ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_32 $$ retv.add(e)[ FD ]
Line_40 $$ countType = UNIQ_VALUE_COUNT-->Line_46 $$ countType = VALUE_HISTOGRAM[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_44 $$ retv.add(e)[ FD ]
Line_13 $$ if (e != null) -->Line_14 $$ retv.add(e)[ CD ]
Line_35 $$ id = "value_as_string_min"-->Line_41 $$ id = "uniq_count"[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_22 $$ countType = LONG_VALUE_MIN[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_13 $$ if (e != null) [ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_34 $$ countType = STRING_VALUE_MIN-->Line_40 $$ countType = UNIQ_VALUE_COUNT[ FD ]
Line_28 $$ countType = STRING_VALUE_MAX-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_25 $$ if (e != null) [ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_46 $$ countType = VALUE_HISTOGRAM[ FD ]
Line_17 $$ id = "max"-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_20 $$ retv.add(e)[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_38 $$ retv.add(e)[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_46 $$ countType = VALUE_HISTOGRAM-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_50 $$ retv.add(e)[ FD ]
Line_5 $$ String countType-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_28 $$ countType = STRING_VALUE_MAX[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_32 $$ retv.add(e)[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_44 $$ retv.add(e)[ FD ]
Line_41 $$ id = "uniq_count"-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_34 $$ countType = STRING_VALUE_MIN-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_19 $$ if (e != null) [ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_20 $$ retv.add(e)[ FD ]
Line_17 $$ id = "max"-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_40 $$ countType = UNIQ_VALUE_COUNT-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_49 $$ if (e != null) [ FD ]
Line_5 $$ String countType-->Line_34 $$ countType = STRING_VALUE_MIN[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_49 $$ if (e != null) [ FD ]
Line_11 $$ id = "count_" + word-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_43 $$ if (e != null) [ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_13 $$ if (e != null) [ FD ]
Line_35 $$ id = "value_as_string_min"-->Line_47 $$ id = "histogram"[ FD ]
Line_11 $$ id = "count_" + word-->Line_17 $$ id = "max"[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_17 $$ id = "max"-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_23 $$ id = "min"-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_17 $$ id = "max"-->Line_35 $$ id = "value_as_string_min"[ FD ]
Line_10 $$ countType = LONG_VALUE_SUM-->Line_12 $$ e = generateEntry(countType, id, ONE)[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_26 $$ retv.add(e)[ FD ]
Line_17 $$ id = "max"-->Line_29 $$ id = "value_as_string_max"[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_12 $$ e = generateEntry(countType, id, ONE)[ FD ]
Line_5 $$ String countType-->Line_16 $$ countType = LONG_VALUE_MAX[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_32 $$ retv.add(e)[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_37 $$ if (e != null) [ FD ]
Line_5 $$ String countType-->Line_12 $$ e = generateEntry(countType, id, ONE)[ FD ]
Line_5 $$ String countType-->Line_46 $$ countType = VALUE_HISTOGRAM[ FD ]
Line_29 $$ id = "value_as_string_max"-->Line_47 $$ id = "histogram"[ FD ]
Line_28 $$ countType = STRING_VALUE_MAX-->Line_40 $$ countType = UNIQ_VALUE_COUNT[ FD ]
Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()-->Line_44 $$ retv.add(e)[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_49 $$ if (e != null) [ FD ]
Line_17 $$ id = "max"-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_11 $$ id = "count_" + word-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_6 $$ String id-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_3 $$ ArrayList<Entry<Text, Text>> retv = new ArrayList<Entry<Text, Text>>()-->Line_32 $$ retv.add(e)[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_26 $$ retv.add(e)[ FD ]
Line_6 $$ String id-->Line_12 $$ e = generateEntry(countType, id, ONE)[ FD ]
Line_29 $$ id = "value_as_string_max"-->Line_35 $$ id = "value_as_string_min"[ FD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_37 $$ if (e != null) [ FD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_44 $$ retv.add(e)[ FD ]
Line_24 $$ e = generateEntry(countType, id, new Text(word))-->Line_49 $$ if (e != null) [ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_43 $$ if (e != null) [ FD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_42 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_37 $$ if (e != null) [ FD ]
Line_41 $$ id = "uniq_count"-->Line_47 $$ id = "histogram"[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_48 $$ e = generateEntry(countType, id, new Text(word))-->Line_49 $$ if (e != null) [ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_32 $$ retv.add(e)[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_18 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_11 $$ id = "count_" + word-->Line_29 $$ id = "value_as_string_max"[ FD ]
Line_16 $$ countType = LONG_VALUE_MAX-->Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_25 $$ if (e != null) [ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_26 $$ retv.add(e)[ FD ]
Line_34 $$ countType = STRING_VALUE_MIN-->Line_46 $$ countType = VALUE_HISTOGRAM[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_28 $$ countType = STRING_VALUE_MAX[ FD ]
Line_7 $$ Entry<Text, Text> e-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_6 $$ String id-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_28 $$ countType = STRING_VALUE_MAX-->Line_48 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_22 $$ countType = LONG_VALUE_MIN-->Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))[ FD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_50 $$ retv.add(e)[ FD ]
Line_18 $$ e = generateEntry(countType, id, new Text(word))-->Line_24 $$ e = generateEntry(countType, id, new Text(word))[ FD ]
Line_36 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_38 $$ retv.add(e)[ FD ]
Line_6 $$ String id-->Line_35 $$ id = "value_as_string_min"[ FD ]
Line_30 $$ e = generateEntry(countType, id, new Text("" + numVal))-->Line_43 $$ if (e != null) [ FD ]
Line_12 $$ e = generateEntry(countType, id, ONE)-->Line_14 $$ retv.add(e)[ FD ]
