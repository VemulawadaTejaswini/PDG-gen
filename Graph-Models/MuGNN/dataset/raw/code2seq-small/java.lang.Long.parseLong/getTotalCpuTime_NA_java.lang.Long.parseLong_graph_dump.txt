Line_7 $$ totalCpuTime += parseLong(data.trim())-->Line_9 $$ return TimeUnit.NANOSECONDS.toNanos(totalCpuTime)[ FD ]
Line_2 $$ private long getTotalCpuTime() -->Line_9 $$ return TimeUnit.NANOSECONDS.toNanos(totalCpuTime)[ CD ]
Line_4 $$ for (URI server : nodes) -->Line_5 $$ URI addressUri = uriBuilderFrom(server).replacePath("/v1/jmx/mbean/java.lang:type=OperatingSystem/ProcessCpuTime").build()[ FD ]
Line_6 $$ String data = httpClient.execute(prepareGet().setUri(addressUri).build(), createStringResponseHandler()).getBody()-->Line_7 $$ totalCpuTime += parseLong(data.trim())[ FD ]
Line_3 $$ long totalCpuTime = 0-->Line_9 $$ return TimeUnit.NANOSECONDS.toNanos(totalCpuTime)[ FD ]
Line_5 $$ URI addressUri = uriBuilderFrom(server).replacePath("/v1/jmx/mbean/java.lang:type=OperatingSystem/ProcessCpuTime").build()-->Line_6 $$ String data = httpClient.execute(prepareGet().setUri(addressUri).build(), createStringResponseHandler()).getBody()[ FD ]
Line_2 $$ private long getTotalCpuTime() -->Line_3 $$ long totalCpuTime = 0[ CD ]
Line_3 $$ long totalCpuTime = 0-->Line_7 $$ totalCpuTime += parseLong(data.trim())[ FD ]
