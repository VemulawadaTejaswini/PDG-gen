Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_3 $$ if (jobIDName == null) [ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_13 $$ String counters = line.get("COUNTERS")[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_7 $$ String finishTime = line.get("FINISH_TIME")[ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_13 $$ String counters = line.get("COUNTERS")[ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_17 $$ return null[ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_9 $$ String finishedMaps = line.get("FINISHED_MAPS")[ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_8 $$ String status = line.get("JOB_STATUS")[ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_12 $$ String failedReduces = line.get("FAILED_REDUCES")[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_10 $$ String finishedReduces = line.get("FINISHED_REDUCES")[ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_12 $$ String failedReduces = line.get("FAILED_REDUCES")[ CD ]
Line_7 $$ String finishTime = line.get("FINISH_TIME")-->Line_15 $$ return new JobFinishedEvent(jobID, Long.parseLong(finishTime), Integer.parseInt(finishedMaps), Integer.parseInt(finishedReduces), Integer.parseInt(failedMaps), Integer.parseInt(failedReduces), null, null, maybeParseCounters(counters))[ FD ]
Line_12 $$ String failedReduces = line.get("FAILED_REDUCES")-->Line_15 $$ return new JobFinishedEvent(jobID, Long.parseLong(finishTime), Integer.parseInt(finishedMaps), Integer.parseInt(finishedReduces), Integer.parseInt(failedMaps), Integer.parseInt(failedReduces), null, null, maybeParseCounters(counters))[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_11 $$ String failedMaps = line.get("FAILED_MAPS")[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_8 $$ String status = line.get("JOB_STATUS")[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_14 $$ if (status != null && status.equalsIgnoreCase("success") && finishTime != null && finishedMaps != null && finishedReduces != null) [ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_3 $$ if (jobIDName == null) [ CD ]
Line_3 $$ if (jobIDName == null) -->Line_4 $$ return null[ CD ]
Line_8 $$ String status = line.get("JOB_STATUS")-->Line_14 $$ if (status != null && status.equalsIgnoreCase("success") && finishTime != null && finishedMaps != null && finishedReduces != null) [ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_7 $$ String finishTime = line.get("FINISH_TIME")[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_9 $$ String finishedMaps = line.get("FINISHED_MAPS")[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_10 $$ String finishedReduces = line.get("FINISHED_REDUCES")[ FD ]
Line_10 $$ String finishedReduces = line.get("FINISHED_REDUCES")-->Line_15 $$ return new JobFinishedEvent(jobID, Long.parseLong(finishTime), Integer.parseInt(finishedMaps), Integer.parseInt(finishedReduces), Integer.parseInt(failedMaps), Integer.parseInt(failedReduces), null, null, maybeParseCounters(counters))[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_6 $$ JobID jobID = JobID.forName(jobIDName)[ CD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_6 $$ JobID jobID = JobID.forName(jobIDName)[ FD ]
Line_11 $$ String failedMaps = line.get("FAILED_MAPS")-->Line_15 $$ return new JobFinishedEvent(jobID, Long.parseLong(finishTime), Integer.parseInt(finishedMaps), Integer.parseInt(finishedReduces), Integer.parseInt(failedMaps), Integer.parseInt(failedReduces), null, null, maybeParseCounters(counters))[ FD ]
Line_13 $$ String counters = line.get("COUNTERS")-->Line_15 $$ return new JobFinishedEvent(jobID, Long.parseLong(finishTime), Integer.parseInt(finishedMaps), Integer.parseInt(finishedReduces), Integer.parseInt(failedMaps), Integer.parseInt(failedReduces), null, null, maybeParseCounters(counters))[ FD ]
Line_2 $$ HistoryEvent maybeEmitEvent(ParsedLine line, String jobIDName, HistoryEventEmitter thatg) -->Line_11 $$ String failedMaps = line.get("FAILED_MAPS")[ CD ]
Line_9 $$ String finishedMaps = line.get("FINISHED_MAPS")-->Line_15 $$ return new JobFinishedEvent(jobID, Long.parseLong(finishTime), Integer.parseInt(finishedMaps), Integer.parseInt(finishedReduces), Integer.parseInt(failedMaps), Integer.parseInt(failedReduces), null, null, maybeParseCounters(counters))[ FD ]
Line_14 $$ if (status != null && status.equalsIgnoreCase("success") && finishTime != null && finishedMaps != null && finishedReduces != null) -->Line_15 $$ return new JobFinishedEvent(jobID, Long.parseLong(finishTime), Integer.parseInt(finishedMaps), Integer.parseInt(finishedReduces), Integer.parseInt(failedMaps), Integer.parseInt(failedReduces), null, null, maybeParseCounters(counters))[ CD ]
