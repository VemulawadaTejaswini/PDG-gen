Line_2 $$ public void map(LongWritable key, Text value, OutputCollector<Text, LongWritable> output, Reporter reporter) throws IOException -->Line_5 $$ v = v.substring(v.indexOf(",") + 1)[ CD ]
Line_3 $$ String v = value.toString()-->Line_6 $$ output.collect(new Text(k), new LongWritable(Long.parseLong(v)))[ FD ]
Line_2 $$ public void map(LongWritable key, Text value, OutputCollector<Text, LongWritable> output, Reporter reporter) throws IOException -->Line_3 $$ String v = value.toString()[ FD ]
Line_3 $$ String v = value.toString()-->Line_4 $$ String k = v.substring(0, v.indexOf(","))[ FD ]
Line_2 $$ public void map(LongWritable key, Text value, OutputCollector<Text, LongWritable> output, Reporter reporter) throws IOException -->Line_6 $$ output.collect(new Text(k), new LongWritable(Long.parseLong(v)))[ FD ]
Line_2 $$ public void map(LongWritable key, Text value, OutputCollector<Text, LongWritable> output, Reporter reporter) throws IOException -->Line_3 $$ String v = value.toString()[ CD ]
Line_2 $$ public void map(LongWritable key, Text value, OutputCollector<Text, LongWritable> output, Reporter reporter) throws IOException -->Line_6 $$ output.collect(new Text(k), new LongWritable(Long.parseLong(v)))[ CD ]
Line_5 $$ v = v.substring(v.indexOf(",") + 1)-->Line_6 $$ output.collect(new Text(k), new LongWritable(Long.parseLong(v)))[ FD ]
Line_2 $$ public void map(LongWritable key, Text value, OutputCollector<Text, LongWritable> output, Reporter reporter) throws IOException -->Line_4 $$ String k = v.substring(0, v.indexOf(","))[ CD ]
Line_3 $$ String v = value.toString()-->Line_5 $$ v = v.substring(v.indexOf(",") + 1)[ FD ]
