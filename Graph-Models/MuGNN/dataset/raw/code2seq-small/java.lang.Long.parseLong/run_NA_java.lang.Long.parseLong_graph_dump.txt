Line_34 $$ List<String> row = new LinkedList<String>()-->Line_45 $$ row.add(directive.getPath().toUri().getPath())[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_4 $$ String pathFilter = StringUtils.popOptionWithArgument("-path", args)[ CD ]
Line_4 $$ String pathFilter = StringUtils.popOptionWithArgument("-path", args)-->Line_5 $$ if (pathFilter != null) [ FD ]
Line_38 $$ String expiry-->Line_40 $$ expiry = "never"[ FD ]
Line_46 $$ if (printStats) -->Line_49 $$ row.add("" + stats.getFilesNeeded())[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_17 $$ if (!args.isEmpty()) [ FD ]
Line_42 $$ expiry = directive.getExpiration().toString()-->Line_44 $$ row.add(expiry)[ FD ]
Line_38 $$ String expiry-->Line_42 $$ expiry = directive.getExpiration().toString()[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_4 $$ String pathFilter = StringUtils.popOptionWithArgument("-path", args)[ FD ]
Line_30 $$ while (iter.hasNext()) -->Line_36 $$ row.add(directive.getPool())[ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_52 $$ tableListing.addRow(row.toArray(new String[0]))[ CD ]
Line_3 $$ CacheDirectiveInfo.Builder builder = new CacheDirectiveInfo.Builder()-->Line_10 $$ builder.setPool(poolFilter)[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_25 $$ TableListing tableListing = tableBuilder.build()[ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_34 $$ List<String> row = new LinkedList<String>()[ CD ]
Line_33 $$ CacheDirectiveStats stats = entry.getStats()-->Line_49 $$ row.add("" + stats.getFilesNeeded())[ FD ]
Line_3 $$ CacheDirectiveInfo.Builder builder = new CacheDirectiveInfo.Builder()-->Line_6 $$ builder.setPath(new Path(pathFilter))[ FD ]
Line_17 $$ if (!args.isEmpty()) -->Line_18 $$ System.err.println("Can't understand argument: " + args.get(0))[ CD ]
Line_28 $$ RemoteIterator<CacheDirectiveEntry> iter = dfs.listCacheDirectives(builder.build())-->Line_30 $$ while (iter.hasNext()) [ FD ]
Line_30 $$ while (iter.hasNext()) -->Line_53 $$ numEntries++[ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_31 $$ CacheDirectiveEntry entry = iter.next()[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_8 $$ String poolFilter = StringUtils.popOptionWithArgument("-pool", args)[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_18 $$ System.err.println("Can't understand argument: " + args.get(0))[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_63 $$ return 0[ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_37 $$ row.add("" + directive.getReplication())[ CD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_44 $$ row.add(expiry)[ FD ]
Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()-->Line_37 $$ row.add("" + directive.getReplication())[ FD ]
Line_31 $$ CacheDirectiveEntry entry = iter.next()-->Line_33 $$ CacheDirectiveStats stats = entry.getStats()[ FD ]
Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()-->Line_42 $$ expiry = directive.getExpiration().toString()[ FD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_48 $$ row.add("" + stats.getBytesCached())[ FD ]
Line_30 $$ while (iter.hasNext()) -->Line_39 $$ if (directive.getExpiration().getMillis() > Expiration.MAX_RELATIVE_EXPIRY_MS / 2) [ CD ]
Line_27 $$ DistributedFileSystem dfs = getDFS(conf)-->Line_28 $$ RemoteIterator<CacheDirectiveEntry> iter = dfs.listCacheDirectives(builder.build())[ FD ]
Line_5 $$ if (pathFilter != null) -->Line_6 $$ builder.setPath(new Path(pathFilter))[ CD ]
Line_3 $$ CacheDirectiveInfo.Builder builder = new CacheDirectiveInfo.Builder()-->Line_15 $$ builder.setId(Long.parseLong(idFilter))[ FD ]
Line_29 $$ int numEntries = 0-->Line_55 $$ System.out.print(String.format("Found %d entr%s%n", numEntries, numEntries == 1 ? "y" : "ies"))[ FD ]
Line_9 $$ if (poolFilter != null) -->Line_10 $$ builder.setPool(poolFilter)[ CD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_47 $$ row.add("" + stats.getBytesNeeded())[ FD ]
Line_25 $$ TableListing tableListing = tableBuilder.build()-->Line_52 $$ tableListing.addRow(row.toArray(new String[0]))[ FD ]
Line_30 $$ while (iter.hasNext()) -->Line_44 $$ row.add(expiry)[ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_46 $$ if (printStats) [ CD ]
Line_13 $$ String idFilter = StringUtils.popOptionWithArgument("-id", args)-->Line_15 $$ builder.setId(Long.parseLong(idFilter))[ FD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_52 $$ tableListing.addRow(row.toArray(new String[0]))[ FD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_49 $$ row.add("" + stats.getFilesNeeded())[ FD ]
Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()-->Line_35 $$ row.add("" + directive.getId())[ FD ]
Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()-->Line_39 $$ if (directive.getExpiration().getMillis() > Expiration.MAX_RELATIVE_EXPIRY_MS / 2) [ FD ]
Line_3 $$ CacheDirectiveInfo.Builder builder = new CacheDirectiveInfo.Builder()-->Line_28 $$ RemoteIterator<CacheDirectiveEntry> iter = dfs.listCacheDirectives(builder.build())[ FD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_50 $$ row.add("" + stats.getFilesCached())[ FD ]
Line_46 $$ if (printStats) -->Line_48 $$ row.add("" + stats.getBytesCached())[ CD ]
Line_29 $$ int numEntries = 0-->Line_56 $$ if (numEntries > 0) [ FD ]
Line_13 $$ String idFilter = StringUtils.popOptionWithArgument("-id", args)-->Line_14 $$ if (idFilter != null) [ FD ]
Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()-->Line_36 $$ row.add(directive.getPool())[ FD ]
Line_40 $$ expiry = "never"-->Line_44 $$ row.add(expiry)[ FD ]
Line_46 $$ if (printStats) -->Line_50 $$ row.add("" + stats.getFilesCached())[ CD ]
Line_25 $$ TableListing tableListing = tableBuilder.build()-->Line_57 $$ System.out.print(tableListing)[ FD ]
Line_14 $$ if (idFilter != null) -->Line_15 $$ builder.setId(Long.parseLong(idFilter))[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_8 $$ String poolFilter = StringUtils.popOptionWithArgument("-pool", args)[ CD ]
Line_31 $$ CacheDirectiveEntry entry = iter.next()-->Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_13 $$ String idFilter = StringUtils.popOptionWithArgument("-id", args)[ CD ]
Line_46 $$ if (printStats) -->Line_47 $$ row.add("" + stats.getBytesNeeded())[ CD ]
Line_21 $$ TableListing.Builder tableBuilder = new TableListing.Builder().addField("ID", Justification.RIGHT).addField("POOL", Justification.LEFT).addField("REPL", Justification.RIGHT).addField("EXPIRY", Justification.LEFT).addField("PATH", Justification.LEFT)-->Line_25 $$ TableListing tableListing = tableBuilder.build()[ FD ]
Line_30 $$ while (iter.hasNext()) -->Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_14 $$ if (idFilter != null) [ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_38 $$ String expiry[ CD ]
Line_29 $$ int numEntries = 0-->Line_53 $$ numEntries++[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_12 $$ boolean printStats = StringUtils.popOption("-stats", args)[ FD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_37 $$ row.add("" + directive.getReplication())[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_17 $$ if (!args.isEmpty()) [ CD ]
Line_39 $$ if (directive.getExpiration().getMillis() > Expiration.MAX_RELATIVE_EXPIRY_MS / 2) -->Line_42 $$ expiry = directive.getExpiration().toString()[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_22 $$ if (printStats) [ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_5 $$ if (pathFilter != null) [ CD ]
Line_56 $$ if (numEntries > 0) -->Line_57 $$ System.out.print(tableListing)[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_3 $$ CacheDirectiveInfo.Builder builder = new CacheDirectiveInfo.Builder()[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_21 $$ TableListing.Builder tableBuilder = new TableListing.Builder().addField("ID", Justification.RIGHT).addField("POOL", Justification.LEFT).addField("REPL", Justification.RIGHT).addField("EXPIRY", Justification.LEFT).addField("PATH", Justification.LEFT)[ CD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_13 $$ String idFilter = StringUtils.popOptionWithArgument("-id", args)[ FD ]
Line_17 $$ if (!args.isEmpty()) -->Line_19 $$ return 1[ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_35 $$ row.add("" + directive.getId())[ CD ]
Line_30 $$ while (iter.hasNext()) -->Line_33 $$ CacheDirectiveStats stats = entry.getStats()[ CD ]
Line_32 $$ CacheDirectiveInfo directive = entry.getInfo()-->Line_45 $$ row.add(directive.getPath().toUri().getPath())[ FD ]
Line_33 $$ CacheDirectiveStats stats = entry.getStats()-->Line_50 $$ row.add("" + stats.getFilesCached())[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_9 $$ if (poolFilter != null) [ CD ]
Line_40 $$ expiry = "never"-->Line_42 $$ expiry = directive.getExpiration().toString()[ FD ]
Line_30 $$ while (iter.hasNext()) -->Line_45 $$ row.add(directive.getPath().toUri().getPath())[ CD ]
Line_8 $$ String poolFilter = StringUtils.popOptionWithArgument("-pool", args)-->Line_9 $$ if (poolFilter != null) [ FD ]
Line_22 $$ if (printStats) -->Line_23 $$ tableBuilder.addField("BYTES_NEEDED", Justification.RIGHT).addField("BYTES_CACHED", Justification.RIGHT).addField("FILES_NEEDED", Justification.RIGHT).addField("FILES_CACHED", Justification.RIGHT)[ CD ]
Line_33 $$ CacheDirectiveStats stats = entry.getStats()-->Line_48 $$ row.add("" + stats.getBytesCached())[ FD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_35 $$ row.add("" + directive.getId())[ FD ]
Line_34 $$ List<String> row = new LinkedList<String>()-->Line_36 $$ row.add(directive.getPool())[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_12 $$ boolean printStats = StringUtils.popOption("-stats", args)[ CD ]
Line_33 $$ CacheDirectiveStats stats = entry.getStats()-->Line_47 $$ row.add("" + stats.getBytesNeeded())[ FD ]
Line_38 $$ String expiry-->Line_44 $$ row.add(expiry)[ FD ]
Line_21 $$ TableListing.Builder tableBuilder = new TableListing.Builder().addField("ID", Justification.RIGHT).addField("POOL", Justification.LEFT).addField("REPL", Justification.RIGHT).addField("EXPIRY", Justification.LEFT).addField("PATH", Justification.LEFT)-->Line_23 $$ tableBuilder.addField("BYTES_NEEDED", Justification.RIGHT).addField("BYTES_CACHED", Justification.RIGHT).addField("FILES_NEEDED", Justification.RIGHT).addField("FILES_CACHED", Justification.RIGHT)[ FD ]
Line_28 $$ RemoteIterator<CacheDirectiveEntry> iter = dfs.listCacheDirectives(builder.build())-->Line_31 $$ CacheDirectiveEntry entry = iter.next()[ FD ]
Line_8 $$ String poolFilter = StringUtils.popOptionWithArgument("-pool", args)-->Line_10 $$ builder.setPool(poolFilter)[ FD ]
Line_2 $$ public int run(Configuration conf, List<String> args) throws IOException -->Line_27 $$ DistributedFileSystem dfs = getDFS(conf)[ FD ]
Line_39 $$ if (directive.getExpiration().getMillis() > Expiration.MAX_RELATIVE_EXPIRY_MS / 2) -->Line_40 $$ expiry = "never"[ CD ]
