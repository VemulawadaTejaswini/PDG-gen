Line_5 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ stats.addValue(Long.parseLong(value.split(" ")[0]) * 1.0 / total)[ CD ]
Line_2 $$ public void testTableSamplePoissonizedRescaled() throws Exception -->Line_4 $$ long total = (long) computeExpected("SELECT COUNT(*) FROM orders", ImmutableList.of(BIGINT)).getMaterializedRows().get(0).getField(0)[ CD ]
Line_2 $$ public void testTableSamplePoissonizedRescaled() throws Exception -->Line_5 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_9 $$ double mean = stats.getGeometricMean()-->Line_10 $$ assertTrue(mean > 0.90 && mean < 1.1, format("Expected sample to be rescaled to ~1.0, but was %s", mean))[ FD ]
Line_2 $$ public void testTableSamplePoissonizedRescaled() throws Exception -->Line_11 $$ assertTrue(stats.getVariance() > 0, "Samples all had the exact same size")[ CD ]
Line_6 $$ String value = (String) computeActual("SELECT COUNT(*) FROM orders TABLESAMPLE POISSONIZED (50) RESCALED APPROXIMATE AT 95 CONFIDENCE").getMaterializedRows().get(0).getField(0)-->Line_7 $$ stats.addValue(Long.parseLong(value.split(" ")[0]) * 1.0 / total)[ FD ]
Line_2 $$ public void testTableSamplePoissonizedRescaled() throws Exception -->Line_9 $$ double mean = stats.getGeometricMean()[ CD ]
Line_3 $$ DescriptiveStatistics stats = new DescriptiveStatistics()-->Line_11 $$ assertTrue(stats.getVariance() > 0, "Samples all had the exact same size")[ FD ]
Line_3 $$ DescriptiveStatistics stats = new DescriptiveStatistics()-->Line_7 $$ stats.addValue(Long.parseLong(value.split(" ")[0]) * 1.0 / total)[ FD ]
Line_5 $$ for (int i = 0; i < 100; i++) -->Line_6 $$ String value = (String) computeActual("SELECT COUNT(*) FROM orders TABLESAMPLE POISSONIZED (50) RESCALED APPROXIMATE AT 95 CONFIDENCE").getMaterializedRows().get(0).getField(0)[ CD ]
Line_2 $$ public void testTableSamplePoissonizedRescaled() throws Exception -->Line_3 $$ DescriptiveStatistics stats = new DescriptiveStatistics()[ CD ]
Line_3 $$ DescriptiveStatistics stats = new DescriptiveStatistics()-->Line_9 $$ double mean = stats.getGeometricMean()[ FD ]
Line_2 $$ public void testTableSamplePoissonizedRescaled() throws Exception -->Line_10 $$ assertTrue(mean > 0.90 && mean < 1.1, format("Expected sample to be rescaled to ~1.0, but was %s", mean))[ CD ]
