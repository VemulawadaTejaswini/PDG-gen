Line_11 $$ String line-->Line_15 $$ Matcher matcher = BLACKLIST_LINE.matcher(line)[ FD ]
Line_14 $$ if (line != null && line.length() > 0 && line.charAt(0) != '#') -->Line_29 $$ if (notParsed)[ CD ]
Line_14 $$ if (line != null && line.length() > 0 && line.charAt(0) != '#') -->Line_15 $$ Matcher matcher = BLACKLIST_LINE.matcher(line)[ CD ]
Line_5 $$ if (blacklistFile.exists() && blacklistFile.canRead()) -->Line_6 $$ Reader input[ CD ]
Line_13 $$ line = lines.readLine()-->Line_12 $$ do [ FD ]
Line_9 $$ LineNumberReader lines = new LineNumberReader(input)-->Line_36 $$ lines.close()[ FD ]
Line_15 $$ Matcher matcher = BLACKLIST_LINE.matcher(line)-->Line_22 $$ final String filename = matcher.group(1)[ FD ]
Line_2 $$ private Map<String, Pair<Integer, Long>> loadBlacklist() -->Line_3 $$ Map<String, Pair<Integer, Long>> ret = new HashMap<String, Pair<Integer, Long>>()[ CD ]
Line_11 $$ String line-->Line_14 $$ if (line != null && line.length() > 0 && line.charAt(0) != '#') [ FD ]
Line_13 $$ line = lines.readLine()-->Line_14 $$ if (line != null && line.length() > 0 && line.charAt(0) != '#') [ FD ]
Line_18 $$ final int version = fromVersionString(matcher.group(2))-->Line_19 $$ if (version > 0) [ FD ]
Line_9 $$ LineNumberReader lines = new LineNumberReader(input)-->Line_13 $$ line = lines.readLine()[ FD ]
Line_3 $$ Map<String, Pair<Integer, Long>> ret = new HashMap<String, Pair<Integer, Long>>()-->Line_23 $$ ret.put(filename, new Pair<Integer, Long>(version, timestamp))[ FD ]
Line_17 $$ if (matcher.matches()) -->Line_18 $$ final int version = fromVersionString(matcher.group(2))[ CD ]
Line_6 $$ Reader input-->Line_8 $$ input = new FileReader(blacklistFile)[ FD ]
Line_13 $$ line = lines.readLine()-->Line_15 $$ Matcher matcher = BLACKLIST_LINE.matcher(line)[ FD ]
Line_22 $$ final String filename = matcher.group(1)-->Line_23 $$ ret.put(filename, new Pair<Integer, Long>(version, timestamp))[ FD ]
Line_14 $$ if (line != null && line.length() > 0 && line.charAt(0) != '#') -->Line_16 $$ boolean notParsed = true[ CD ]
Line_12 $$ do -->Line_13 $$ line = lines.readLine()[ CD ]
Line_29 $$ if (notParsed)-->Line_30 $$ LOG.warn("In blacklist at " + mySkeletonsPath + " strange line '" + line + "'")[ CD ]
Line_15 $$ Matcher matcher = BLACKLIST_LINE.matcher(line)-->Line_18 $$ final int version = fromVersionString(matcher.group(2))[ FD ]
Line_17 $$ if (matcher.matches()) -->Line_19 $$ if (version > 0) [ CD ]
Line_12 $$ do -->Line_14 $$ if (line != null && line.length() > 0 && line.charAt(0) != '#') [ CD ]
Line_16 $$ boolean notParsed = true-->Line_24 $$ notParsed = false[ FD ]
Line_14 $$ if (line != null && line.length() > 0 && line.charAt(0) != '#') -->Line_17 $$ if (matcher.matches()) [ CD ]
Line_15 $$ Matcher matcher = BLACKLIST_LINE.matcher(line)-->Line_17 $$ if (matcher.matches()) [ FD ]
Line_2 $$ private Map<String, Pair<Integer, Long>> loadBlacklist() -->Line_5 $$ if (blacklistFile.exists() && blacklistFile.canRead()) [ CD ]
Line_2 $$ private Map<String, Pair<Integer, Long>> loadBlacklist() -->Line_4 $$ File blacklistFile = new File(mySkeletonsPath, BLACKLIST_FILE_NAME)[ CD ]
Line_4 $$ File blacklistFile = new File(mySkeletonsPath, BLACKLIST_FILE_NAME)-->Line_5 $$ if (blacklistFile.exists() && blacklistFile.canRead()) [ FD ]
Line_15 $$ Matcher matcher = BLACKLIST_LINE.matcher(line)-->Line_21 $$ final long timestamp = Long.parseLong(matcher.group(3))[ FD ]
Line_11 $$ String line-->Line_13 $$ line = lines.readLine()[ FD ]
Line_2 $$ private Map<String, Pair<Integer, Long>> loadBlacklist() -->Line_41 $$ return ret[ CD ]
Line_11 $$ String line-->Line_12 $$ do [ FD ]
