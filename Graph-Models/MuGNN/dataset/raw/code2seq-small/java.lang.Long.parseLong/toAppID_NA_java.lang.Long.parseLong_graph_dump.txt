Line_3 $$ if (!it.hasNext() || !it.next().equals(prefix)) -->Line_4 $$ throwParseException(sjoin(prefix, ID), s)[ CD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_4 $$ throwParseException(sjoin(prefix, ID), s)[ FD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_6 $$ shouldHaveNext(prefix, s, it)[ FD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_7 $$ ApplicationId appId = ApplicationId.newInstance(Long.parseLong(it.next()), Integer.parseInt(it.next()))[ FD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_3 $$ if (!it.hasNext() || !it.next().equals(prefix)) [ FD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_3 $$ if (!it.hasNext() || !it.next().equals(prefix)) [ CD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_6 $$ shouldHaveNext(prefix, s, it)[ CD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_7 $$ ApplicationId appId = ApplicationId.newInstance(Long.parseLong(it.next()), Integer.parseInt(it.next()))[ CD ]
Line_2 $$ public static ApplicationId toAppID(String prefix, String s, Iterator<String> it) -->Line_8 $$ return appId[ CD ]
