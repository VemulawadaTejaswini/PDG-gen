Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_3 $$ final String inodeId = DFSUtil.bytes2String(pathComponents[3])[ CD ]
Line_19 $$ if (parent == null || parent.getId() == INodeId.ROOT_INODE_ID) -->Line_20 $$ return Path.SEPARATOR[ CD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_13 $$ INode inode = fsd.getInode(id)[ FD ]
Line_3 $$ final String inodeId = DFSUtil.bytes2String(pathComponents[3])-->Line_6 $$ id = Long.parseLong(inodeId)[ FD ]
Line_6 $$ id = Long.parseLong(inodeId)-->Line_13 $$ INode inode = fsd.getInode(id)[ FD ]
Line_6 $$ id = Long.parseLong(inodeId)-->Line_26 $$ if (id != INodeId.ROOT_INODE_ID) [ FD ]
Line_25 $$ String path = ""-->Line_29 $$ return constructRemainingPath(path, pathComponents, 4)[ FD ]
Line_4 $$ final long id-->Line_13 $$ INode inode = fsd.getInode(id)[ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_13 $$ INode inode = fsd.getInode(id)[ CD ]
Line_10 $$ if (id == INodeId.ROOT_INODE_ID && pathComponents.length == 4) -->Line_11 $$ return Path.SEPARATOR[ CD ]
Line_26 $$ if (id != INodeId.ROOT_INODE_ID) -->Line_27 $$ path = inode.getFullPathName()[ CD ]
Line_17 $$ if ((pathComponents.length > 4) && DFSUtil.bytes2String(pathComponents[4]).equals("..")) -->Line_18 $$ INode parent = inode.getParent()[ CD ]
Line_18 $$ INode parent = inode.getParent()-->Line_19 $$ if (parent == null || parent.getId() == INodeId.ROOT_INODE_ID) [ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_26 $$ if (id != INodeId.ROOT_INODE_ID) [ CD ]
Line_4 $$ final long id-->Line_26 $$ if (id != INodeId.ROOT_INODE_ID) [ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_14 $$ if (inode == null) [ CD ]
Line_19 $$ if (parent == null || parent.getId() == INodeId.ROOT_INODE_ID) -->Line_22 $$ return parent.getFullPathName()[ CD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_17 $$ if ((pathComponents.length > 4) && DFSUtil.bytes2String(pathComponents[4]).equals("..")) [ CD ]
Line_25 $$ String path = ""-->Line_27 $$ path = inode.getFullPathName()[ FD ]
Line_17 $$ if ((pathComponents.length > 4) && DFSUtil.bytes2String(pathComponents[4]).equals("..")) -->Line_19 $$ if (parent == null || parent.getId() == INodeId.ROOT_INODE_ID) [ CD ]
Line_13 $$ INode inode = fsd.getInode(id)-->Line_14 $$ if (inode == null) [ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_10 $$ if (id == INodeId.ROOT_INODE_ID && pathComponents.length == 4) [ CD ]
Line_4 $$ final long id-->Line_6 $$ id = Long.parseLong(inodeId)[ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_4 $$ final long id[ CD ]
Line_13 $$ INode inode = fsd.getInode(id)-->Line_27 $$ path = inode.getFullPathName()[ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_29 $$ return constructRemainingPath(path, pathComponents, 4)[ CD ]
Line_27 $$ path = inode.getFullPathName()-->Line_29 $$ return constructRemainingPath(path, pathComponents, 4)[ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_29 $$ return constructRemainingPath(path, pathComponents, 4)[ FD ]
Line_18 $$ INode parent = inode.getParent()-->Line_22 $$ return parent.getFullPathName()[ FD ]
Line_13 $$ INode inode = fsd.getInode(id)-->Line_18 $$ INode parent = inode.getParent()[ FD ]
Line_2 $$ private static String resolveDotInodesPath(String src, byte[][] pathComponents, FSDirectory fsd) throws FileNotFoundException -->Line_25 $$ String path = ""[ CD ]
