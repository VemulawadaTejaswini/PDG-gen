Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_12 $$ info.setNumReduces(Integer.parseInt(NUM_REDUCES))[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_13 $$ info.setJobStatus(JOB_STATUS)[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_19 $$ Assert.assertEquals("Submit time different after encoding and decoding", info.getSubmitTime(), parsedInfo.getSubmitTime())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_27 $$ Assert.assertEquals("Job start time different after encoding and decoding", info.getJobStartTime(), parsedInfo.getJobStartTime())[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)[ CD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_27 $$ Assert.assertEquals("Job start time different after encoding and decoding", info.getJobStartTime(), parsedInfo.getJobStartTime())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_20 $$ Assert.assertEquals("User different after encoding and decoding", info.getUser(), parsedInfo.getUser())[ CD ]
Line_16 $$ String jobHistoryFile = FileNameIndexUtils.getDoneFileName(info)-->Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_7 $$ info.setSubmitTime(Long.parseLong(SUBMIT_TIME))[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_15 $$ info.setJobStartTime(Long.parseLong(JOB_START_TIME))[ CD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_26 $$ Assert.assertEquals("Queue name different after encoding and decoding", info.getQueueName(), parsedInfo.getQueueName())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_7 $$ info.setSubmitTime(Long.parseLong(SUBMIT_TIME))[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_24 $$ Assert.assertEquals("Num reduces different after encoding and decoding", info.getNumReduces(), parsedInfo.getNumReduces())[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_11 $$ info.setNumMaps(Integer.parseInt(NUM_MAPS))[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_24 $$ Assert.assertEquals("Num reduces different after encoding and decoding", info.getNumReduces(), parsedInfo.getNumReduces())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_9 $$ info.setJobName(JOB_NAME)[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_8 $$ info.setUser(USER_NAME)[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_16 $$ String jobHistoryFile = FileNameIndexUtils.getDoneFileName(info)[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_16 $$ String jobHistoryFile = FileNameIndexUtils.getDoneFileName(info)[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_11 $$ info.setNumMaps(Integer.parseInt(NUM_MAPS))[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_6 $$ info.setJobId(jobId)[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_4 $$ JobID oldJobId = JobID.forName(JOB_ID)[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_6 $$ info.setJobId(jobId)[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_14 $$ info.setQueueName(QUEUE_NAME)[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_23 $$ Assert.assertEquals("Num maps different after encoding and decoding", info.getNumMaps(), parsedInfo.getNumMaps())[ CD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_24 $$ Assert.assertEquals("Num reduces different after encoding and decoding", info.getNumReduces(), parsedInfo.getNumReduces())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_25 $$ Assert.assertEquals("Job status different after encoding and decoding", info.getJobStatus(), parsedInfo.getJobStatus())[ CD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_21 $$ Assert.assertEquals("Job name different after encoding and decoding", info.getJobName(), parsedInfo.getJobName())[ FD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_23 $$ Assert.assertEquals("Num maps different after encoding and decoding", info.getNumMaps(), parsedInfo.getNumMaps())[ FD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_19 $$ Assert.assertEquals("Submit time different after encoding and decoding", info.getSubmitTime(), parsedInfo.getSubmitTime())[ FD ]
Line_5 $$ JobId jobId = TypeConverter.toYarn(oldJobId)-->Line_6 $$ info.setJobId(jobId)[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_18 $$ Assert.assertEquals("Job id different after encoding and decoding", info.getJobId(), parsedInfo.getJobId())[ FD ]
Line_4 $$ JobID oldJobId = JobID.forName(JOB_ID)-->Line_5 $$ JobId jobId = TypeConverter.toYarn(oldJobId)[ FD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_25 $$ Assert.assertEquals("Job status different after encoding and decoding", info.getJobStatus(), parsedInfo.getJobStatus())[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_21 $$ Assert.assertEquals("Job name different after encoding and decoding", info.getJobName(), parsedInfo.getJobName())[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_15 $$ info.setJobStartTime(Long.parseLong(JOB_START_TIME))[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_21 $$ Assert.assertEquals("Job name different after encoding and decoding", info.getJobName(), parsedInfo.getJobName())[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_26 $$ Assert.assertEquals("Queue name different after encoding and decoding", info.getQueueName(), parsedInfo.getQueueName())[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_14 $$ info.setQueueName(QUEUE_NAME)[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_27 $$ Assert.assertEquals("Job start time different after encoding and decoding", info.getJobStartTime(), parsedInfo.getJobStartTime())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_5 $$ JobId jobId = TypeConverter.toYarn(oldJobId)[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_22 $$ Assert.assertEquals("Finish time different after encoding and decoding", info.getFinishTime(), parsedInfo.getFinishTime())[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_12 $$ info.setNumReduces(Integer.parseInt(NUM_REDUCES))[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_26 $$ Assert.assertEquals("Queue name different after encoding and decoding", info.getQueueName(), parsedInfo.getQueueName())[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_10 $$ info.setFinishTime(Long.parseLong(FINISH_TIME))[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_3 $$ JobIndexInfo info = new JobIndexInfo()[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_13 $$ info.setJobStatus(JOB_STATUS)[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_20 $$ Assert.assertEquals("User different after encoding and decoding", info.getUser(), parsedInfo.getUser())[ FD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_18 $$ Assert.assertEquals("Job id different after encoding and decoding", info.getJobId(), parsedInfo.getJobId())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_19 $$ Assert.assertEquals("Submit time different after encoding and decoding", info.getSubmitTime(), parsedInfo.getSubmitTime())[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_22 $$ Assert.assertEquals("Finish time different after encoding and decoding", info.getFinishTime(), parsedInfo.getFinishTime())[ FD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_20 $$ Assert.assertEquals("User different after encoding and decoding", info.getUser(), parsedInfo.getUser())[ FD ]
Line_17 $$ JobIndexInfo parsedInfo = FileNameIndexUtils.getIndexInfo(jobHistoryFile)-->Line_22 $$ Assert.assertEquals("Finish time different after encoding and decoding", info.getFinishTime(), parsedInfo.getFinishTime())[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_23 $$ Assert.assertEquals("Num maps different after encoding and decoding", info.getNumMaps(), parsedInfo.getNumMaps())[ FD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_25 $$ Assert.assertEquals("Job status different after encoding and decoding", info.getJobStatus(), parsedInfo.getJobStatus())[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_8 $$ info.setUser(USER_NAME)[ CD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_10 $$ info.setFinishTime(Long.parseLong(FINISH_TIME))[ CD ]
Line_3 $$ JobIndexInfo info = new JobIndexInfo()-->Line_9 $$ info.setJobName(JOB_NAME)[ FD ]
Line_2 $$ public void testEncodingDecodingEquivalence() throws IOException -->Line_18 $$ Assert.assertEquals("Job id different after encoding and decoding", info.getJobId(), parsedInfo.getJobId())[ CD ]
