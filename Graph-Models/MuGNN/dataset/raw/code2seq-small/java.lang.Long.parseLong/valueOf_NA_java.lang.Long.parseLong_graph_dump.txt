Line_13 $$ final Summation sigma = new Summation(N, E)-->Line_17 $$ sigma.setValue(value.indexOf('.') < 0 ? Double.longBitsToDouble(Long.parseLong(value)) : Double.parseDouble(value))[ FD ]
Line_8 $$ i = j + 2-->Line_16 $$ final String value = Util.parseStringVariable("value", s.substring(i))[ FD ]
Line_4 $$ int j = s.indexOf("; ", i)-->Line_12 $$ final ArithmeticProgression E = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_14 $$ i = j + 1-->Line_15 $$ if (s.length() > i) [ FD ]
Line_8 $$ i = j + 2-->Line_12 $$ final ArithmeticProgression E = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_4 $$ int j = s.indexOf("; ", i)-->Line_7 $$ final ArithmeticProgression N = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_4 $$ int j = s.indexOf("; ", i)-->Line_9 $$ j = s.indexOf("]", i)[ FD ]
Line_9 $$ j = s.indexOf("]", i)-->Line_10 $$ if (j < 0)[ FD ]
Line_3 $$ int i = 1-->Line_9 $$ j = s.indexOf("]", i)[ FD ]
Line_16 $$ final String value = Util.parseStringVariable("value", s.substring(i))-->Line_17 $$ sigma.setValue(value.indexOf('.') < 0 ? Double.longBitsToDouble(Long.parseLong(value)) : Double.parseDouble(value))[ FD ]
Line_8 $$ i = j + 2-->Line_9 $$ j = s.indexOf("]", i)[ FD ]
Line_8 $$ i = j + 2-->Line_15 $$ if (s.length() > i) [ FD ]
Line_3 $$ int i = 1-->Line_4 $$ int j = s.indexOf("; ", i)[ FD ]
Line_3 $$ int i = 1-->Line_12 $$ final ArithmeticProgression E = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_15 $$ if (s.length() > i) -->Line_17 $$ sigma.setValue(value.indexOf('.') < 0 ? Double.longBitsToDouble(Long.parseLong(value)) : Double.parseDouble(value))[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_16 $$ final String value = Util.parseStringVariable("value", s.substring(i))[ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_7 $$ final ArithmeticProgression N = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_3 $$ int i = 1-->Line_8 $$ i = j + 2[ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_12 $$ final ArithmeticProgression E = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_3 $$ int i = 1-->Line_16 $$ final String value = Util.parseStringVariable("value", s.substring(i))[ FD ]
Line_3 $$ int i = 1-->Line_15 $$ if (s.length() > i) [ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_9 $$ j = s.indexOf("]", i)[ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_13 $$ final Summation sigma = new Summation(N, E)[ CD ]
Line_8 $$ i = j + 2-->Line_14 $$ i = j + 1[ FD ]
Line_4 $$ int j = s.indexOf("; ", i)-->Line_8 $$ i = j + 2[ FD ]
Line_9 $$ j = s.indexOf("]", i)-->Line_12 $$ final ArithmeticProgression E = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_5 $$ if (j < 0)[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_15 $$ if (s.length() > i) [ CD ]
Line_4 $$ int j = s.indexOf("; ", i)-->Line_10 $$ if (j < 0)[ FD ]
Line_14 $$ i = j + 1-->Line_16 $$ final String value = Util.parseStringVariable("value", s.substring(i))[ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_10 $$ if (j < 0)[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_8 $$ i = j + 2[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_15 $$ if (s.length() > i) [ FD ]
Line_3 $$ int i = 1-->Line_14 $$ i = j + 1[ FD ]
Line_15 $$ if (s.length() > i) -->Line_16 $$ final String value = Util.parseStringVariable("value", s.substring(i))[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_7 $$ final ArithmeticProgression N = ArithmeticProgression.valueOf(s.substring(i, j))[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_14 $$ i = j + 1[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_19 $$ return sigma[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_12 $$ final ArithmeticProgression E = ArithmeticProgression.valueOf(s.substring(i, j))[ CD ]
Line_3 $$ int i = 1-->Line_7 $$ final ArithmeticProgression N = ArithmeticProgression.valueOf(s.substring(i, j))[ FD ]
Line_9 $$ j = s.indexOf("]", i)-->Line_14 $$ i = j + 1[ FD ]
Line_4 $$ int j = s.indexOf("; ", i)-->Line_5 $$ if (j < 0)[ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_4 $$ int j = s.indexOf("; ", i)[ CD ]
Line_4 $$ int j = s.indexOf("; ", i)-->Line_14 $$ i = j + 1[ FD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_9 $$ j = s.indexOf("]", i)[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_3 $$ int i = 1[ CD ]
Line_2 $$ public static Summation valueOf(final String s) -->Line_4 $$ int j = s.indexOf("; ", i)[ FD ]
