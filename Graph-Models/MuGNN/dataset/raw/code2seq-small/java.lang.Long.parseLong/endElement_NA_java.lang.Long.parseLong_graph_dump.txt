Line_27 $$ if (myCurrentTest != null) -->Line_30 $$ myProcessor.onUncapturedOutput(currentText, myErrorOutput ? ProcessOutputTypes.STDERR : ProcessOutputTypes.STDOUT)[ CD ]
Line_14 $$ if (TestResultsXmlFormatter.STATUS_IGNORED.equals(myStatus) || TestResultsXmlFormatter.STATUS_SKIPPED.equals(myStatus)) -->Line_15 $$ myProcessor.onTestIgnored(new TestIgnoredEvent(myCurrentTest, "", currentText) [ CD ]
Line_4 $$ final boolean isTestOutput = myCurrentTest == null || TestResultsXmlFormatter.STATUS_PASSED.equals(myStatus) || !myErrorOutput-->Line_26 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName) && !StringUtil.isEmpty(currentText) && isTestOutput) [ FD ]
Line_10 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_21 $$ myProcessor.onTestFinished(new TestFinishedEvent(myCurrentTest, myDuration != null ? Long.parseLong(myDuration) : -1))[ CD ]
Line_10 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_11 $$ final boolean isError = TestResultsXmlFormatter.STATUS_ERROR.equals(myStatus)[ CD ]
Line_10 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_26 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName) && !StringUtil.isEmpty(currentText) && isTestOutput) [ CD ]
Line_2 $$ public void endElement(String uri, String localName, String qName) throws SAXException -->Line_10 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) [ FD ]
Line_10 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_12 $$ if (TestResultsXmlFormatter.STATUS_FAILED.equals(myStatus) || isError) [ CD ]
Line_26 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName) && !StringUtil.isEmpty(currentText) && isTestOutput) -->Line_27 $$ if (myCurrentTest != null) [ CD ]
Line_2 $$ public void endElement(String uri, String localName, String qName) throws SAXException -->Line_5 $$ if (isTestOutput) [ CD ]
Line_11 $$ final boolean isError = TestResultsXmlFormatter.STATUS_ERROR.equals(myStatus)-->Line_12 $$ if (TestResultsXmlFormatter.STATUS_FAILED.equals(myStatus) || isError) [ FD ]
Line_22 $$ if (!TestResultsXmlFormatter.STATUS_PASSED.equals(myStatus)) -->Line_23 $$ currentValue.setLength(0)[ CD ]
Line_12 $$ if (TestResultsXmlFormatter.STATUS_FAILED.equals(myStatus) || isError) -->Line_13 $$ myProcessor.onTestFailure(new TestFailedEvent(myCurrentTest, "", currentText, isError, null, null))[ CD ]
Line_2 $$ public void endElement(String uri, String localName, String qName) throws SAXException -->Line_26 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName) && !StringUtil.isEmpty(currentText) && isTestOutput) [ FD ]
Line_15 $$ myProcessor.onTestIgnored(new TestIgnoredEvent(myCurrentTest, "", currentText) -->Line_17 $$ return ""[ CD ]
Line_2 $$ public void endElement(String uri, String localName, String qName) throws SAXException -->Line_8 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) [ CD ]
Line_8 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) -->Line_9 $$ myProcessor.onSuiteFinished(new TestSuiteFinishedEvent(mySuites.pop()))[ CD ]
Line_2 $$ public void endElement(String uri, String localName, String qName) throws SAXException -->Line_4 $$ final boolean isTestOutput = myCurrentTest == null || TestResultsXmlFormatter.STATUS_PASSED.equals(myStatus) || !myErrorOutput[ CD ]
Line_8 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) -->Line_10 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) [ CD ]
Line_2 $$ public void endElement(String uri, String localName, String qName) throws SAXException -->Line_3 $$ final String currentText = StringUtil.unescapeXml(currentValue.toString())[ CD ]
Line_5 $$ if (isTestOutput) -->Line_6 $$ currentValue.setLength(0)[ CD ]
Line_2 $$ public void endElement(String uri, String localName, String qName) throws SAXException -->Line_8 $$ if (TestResultsXmlFormatter.ELEM_SUITE.equals(qName)) [ FD ]
Line_3 $$ final String currentText = StringUtil.unescapeXml(currentValue.toString())-->Line_30 $$ myProcessor.onUncapturedOutput(currentText, myErrorOutput ? ProcessOutputTypes.STDERR : ProcessOutputTypes.STDOUT)[ FD ]
Line_3 $$ final String currentText = StringUtil.unescapeXml(currentValue.toString())-->Line_26 $$ if (TestResultsXmlFormatter.ELEM_OUTPUT.equals(qName) && !StringUtil.isEmpty(currentText) && isTestOutput) [ FD ]
Line_10 $$ if (TestResultsXmlFormatter.ELEM_TEST.equals(qName)) -->Line_22 $$ if (!TestResultsXmlFormatter.STATUS_PASSED.equals(myStatus)) [ CD ]
Line_12 $$ if (TestResultsXmlFormatter.STATUS_FAILED.equals(myStatus) || isError) -->Line_14 $$ if (TestResultsXmlFormatter.STATUS_IGNORED.equals(myStatus) || TestResultsXmlFormatter.STATUS_SKIPPED.equals(myStatus)) [ CD ]
Line_27 $$ if (myCurrentTest != null) -->Line_28 $$ myProcessor.onTestOutput(new TestOutputEvent(myCurrentTest, currentText, !myErrorOutput))[ CD ]
