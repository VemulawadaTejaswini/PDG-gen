Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_10 $$ if (jobBeingTraced != null && taskID != null) [ CD ]
Line_44 $$ int distance = Integer.MAX_VALUE-->Line_62 $$ distance = Math.min(distance, successfulMapAttemptTimes.length - 1)[ FD ]
Line_8 $$ String hostName = line.get("HOSTNAME")-->Line_45 $$ if (hostName != null) [ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_72 $$ if (attemptID != null) [ CD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_51 $$ attempt.setHostName(hostName, null)[ FD ]
Line_29 $$ Pre21JobHistoryConstants.Values stat = null-->Line_68 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")[ FD ]
Line_25 $$ if (!attemptAlreadyExists) -->Line_27 $$ task.getAttempts().add(attempt)[ CD ]
Line_13 $$ task = new LoggedTask()-->Line_14 $$ task.setTaskID(taskID)[ FD ]
Line_85 $$ long startTimeValue = Long.parseLong(attemptStartTime)-->Line_87 $$ taskAttemptStartTimes.put(attemptID, startTimeValue)[ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")[ CD ]
Line_74 $$ if (matcher.matches()) -->Line_76 $$ if (attemptNumberString != null) [ CD ]
Line_63 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) -->Line_64 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()[ CD ]
Line_45 $$ if (hostName != null) -->Line_46 $$ ParsedHost host = getAndRecordParsedHost(hostName)[ CD ]
Line_72 $$ if (attemptID != null) -->Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)[ CD ]
Line_13 $$ task = new LoggedTask()-->Line_16 $$ tasksInCurrentJob.put(taskID, task)[ FD ]
Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)-->Line_75 $$ String attemptNumberString = matcher.group(1)[ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_41 $$ if (attemptFinishTime != null) [ CD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_36 $$ incorporateCounters(attempt, counters)[ FD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_38 $$ if (attemptStartTime != null) [ FD ]
Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")-->Line_41 $$ if (attemptFinishTime != null) [ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_48 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_6 $$ String attemptStartTime = line.get("START_TIME")[ CD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)[ FD ]
Line_13 $$ task = new LoggedTask()-->Line_27 $$ task.getAttempts().add(attempt)[ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_63 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) [ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_29 $$ Pre21JobHistoryConstants.Values stat = null[ CD ]
Line_29 $$ Pre21JobHistoryConstants.Values stat = null-->Line_34 $$ stat = null[ FD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_13 $$ task = new LoggedTask()[ FD ]
Line_9 $$ String counters = line.get("COUNTERS")-->Line_36 $$ incorporateCounters(attempt, counters)[ FD ]
Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")-->Line_42 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ FD ]
Line_47 $$ if (host != null) -->Line_51 $$ attempt.setHostName(hostName, null)[ CD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_25 $$ if (!attemptAlreadyExists) [ CD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_63 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) [ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_39 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")[ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_36 $$ incorporateCounters(attempt, counters)[ CD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)[ CD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_4 $$ String taskID = line.get("TASKID")[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)[ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_26 $$ attemptsInCurrentJob.put(attemptID, attempt)[ FD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_84 $$ if (attemptStartTime != null) [ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_36 $$ incorporateCounters(attempt, counters)[ FD ]
Line_12 $$ if (task == null) -->Line_16 $$ tasksInCurrentJob.put(taskID, task)[ CD ]
Line_21 $$ if (attempt == null) -->Line_22 $$ attempt = new LoggedTaskAttempt()[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_94 $$ taskMapAttemptFinishTimes.put(attemptID, finishTime)[ FD ]
Line_12 $$ if (task == null) -->Line_15 $$ jobBeingTraced.getMapTasks().add(task)[ CD ]
Line_92 $$ long finishTime = Long.parseLong(attemptFinishTime)-->Line_94 $$ taskMapAttemptFinishTimes.put(attemptID, finishTime)[ FD ]
Line_57 $$ distance = Math.min(distance, preferedLoc.distance(host))-->Line_62 $$ distance = Math.min(distance, successfulMapAttemptTimes.length - 1)[ FD ]
Line_75 $$ String attemptNumberString = matcher.group(1)-->Line_77 $$ int attemptNumber = Integer.parseInt(attemptNumberString)[ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_63 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) [ CD ]
Line_44 $$ int distance = Integer.MAX_VALUE-->Line_60 $$ mapperLocality.enter(distance)[ FD ]
Line_13 $$ task = new LoggedTask()-->Line_15 $$ jobBeingTraced.getMapTasks().add(task)[ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_64 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()[ FD ]
Line_47 $$ if (host != null) -->Line_49 $$ attempt.setLocation(host.makeLoggedLocation())[ CD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_20 $$ boolean attemptAlreadyExists = attempt != null[ CD ]
Line_29 $$ Pre21JobHistoryConstants.Values stat = null-->Line_65 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ FD ]
Line_64 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()-->Line_66 $$ successfulMapAttemptTimes[distance].enter(runtime)[ FD ]
Line_74 $$ if (matcher.matches()) -->Line_75 $$ String attemptNumberString = matcher.group(1)[ CD ]
Line_56 $$ ParsedHost preferedLoc = new ParsedHost(loc)-->Line_57 $$ distance = Math.min(distance, preferedLoc.distance(host))[ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_23 $$ attempt.setAttemptID(attemptID)[ FD ]
Line_25 $$ if (!attemptAlreadyExists) -->Line_26 $$ attemptsInCurrentJob.put(attemptID, attempt)[ CD ]
Line_45 $$ if (hostName != null) -->Line_60 $$ mapperLocality.enter(distance)[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_72 $$ if (attemptID != null) [ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_45 $$ if (hostName != null) [ CD ]
Line_21 $$ if (attempt == null) -->Line_23 $$ attempt.setAttemptID(attemptID)[ CD ]
Line_46 $$ ParsedHost host = getAndRecordParsedHost(hostName)-->Line_47 $$ if (host != null) [ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_38 $$ if (attemptStartTime != null) [ CD ]
Line_34 $$ stat = null-->Line_65 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_27 $$ task.getAttempts().add(attempt)[ FD ]
Line_84 $$ if (attemptStartTime != null) -->Line_86 $$ if (startTimeValue != 0 && startTimeValue + MAXIMUM_CLOCK_SKEW >= launchTimeCurrentJob) [ CD ]
Line_8 $$ String hostName = line.get("HOSTNAME")-->Line_51 $$ attempt.setHostName(hostName, null)[ FD ]
Line_46 $$ ParsedHost host = getAndRecordParsedHost(hostName)-->Line_49 $$ attempt.setLocation(host.makeLoggedLocation())[ FD ]
Line_76 $$ if (attemptNumberString != null) -->Line_77 $$ int attemptNumber = Integer.parseInt(attemptNumberString)[ CD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_23 $$ attempt.setAttemptID(attemptID)[ FD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_14 $$ task.setTaskID(taskID)[ FD ]
Line_5 $$ String status = line.get("TASK_STATUS")-->Line_93 $$ if (status.equals("SUCCESS")) [ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_22 $$ attempt = new LoggedTaskAttempt()[ FD ]
Line_63 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) -->Line_68 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ CD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_64 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()[ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_42 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ FD ]
Line_38 $$ if (attemptStartTime != null) -->Line_39 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ CD ]
Line_13 $$ task = new LoggedTask()-->Line_18 $$ task.setTaskID(taskID)[ FD ]
Line_13 $$ task = new LoggedTask()-->Line_53 $$ List<LoggedLocation> locs = task.getPreferredLocations()[ FD ]
Line_46 $$ ParsedHost host = getAndRecordParsedHost(hostName)-->Line_57 $$ distance = Math.min(distance, preferedLoc.distance(host))[ FD ]
Line_34 $$ stat = null-->Line_68 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ FD ]
Line_57 $$ distance = Math.min(distance, preferedLoc.distance(host))-->Line_60 $$ mapperLocality.enter(distance)[ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_27 $$ task.getAttempts().add(attempt)[ FD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_39 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ FD ]
Line_8 $$ String hostName = line.get("HOSTNAME")-->Line_46 $$ ParsedHost host = getAndRecordParsedHost(hostName)[ FD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_14 $$ task.setTaskID(taskID)[ FD ]
Line_45 $$ if (hostName != null) -->Line_47 $$ if (host != null) [ CD ]
Line_63 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) -->Line_65 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ CD ]
Line_12 $$ if (task == null) -->Line_13 $$ task = new LoggedTask()[ CD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_42 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ FD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_23 $$ attempt.setAttemptID(attemptID)[ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_8 $$ String hostName = line.get("HOSTNAME")[ FD ]
Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)-->Line_74 $$ if (matcher.matches()) [ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_9 $$ String counters = line.get("COUNTERS")[ CD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_12 $$ if (task == null) [ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_26 $$ attemptsInCurrentJob.put(attemptID, attempt)[ FD ]
Line_20 $$ boolean attemptAlreadyExists = attempt != null-->Line_25 $$ if (!attemptAlreadyExists) [ FD ]
Line_31 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_68 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_5 $$ String status = line.get("TASK_STATUS")[ CD ]
Line_31 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_65 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ FD ]
Line_45 $$ if (hostName != null) -->Line_54 $$ if (host != null && locs != null) [ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_87 $$ taskAttemptStartTimes.put(attemptID, startTimeValue)[ FD ]
Line_84 $$ if (attemptStartTime != null) -->Line_91 $$ if (status != null && attemptFinishTime != null) [ CD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_39 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_37 $$ attempt.setResult(stat)[ FD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_89 $$ taskAttemptStartTimes.remove(attemptID)[ FD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_16 $$ tasksInCurrentJob.put(taskID, task)[ FD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_26 $$ attemptsInCurrentJob.put(attemptID, attempt)[ FD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_48 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ FD ]
Line_45 $$ if (hostName != null) -->Line_53 $$ List<LoggedLocation> locs = task.getPreferredLocations()[ CD ]
Line_84 $$ if (attemptStartTime != null) -->Line_85 $$ long startTimeValue = Long.parseLong(attemptStartTime)[ CD ]
Line_75 $$ String attemptNumberString = matcher.group(1)-->Line_76 $$ if (attemptNumberString != null) [ FD ]
Line_41 $$ if (attemptFinishTime != null) -->Line_42 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ CD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_49 $$ attempt.setLocation(host.makeLoggedLocation())[ FD ]
Line_86 $$ if (startTimeValue != 0 && startTimeValue + MAXIMUM_CLOCK_SKEW >= launchTimeCurrentJob) -->Line_87 $$ taskAttemptStartTimes.put(attemptID, startTimeValue)[ CD ]
Line_47 $$ if (host != null) -->Line_48 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ CD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_12 $$ if (task == null) [ CD ]
Line_72 $$ if (attemptID != null) -->Line_74 $$ if (matcher.matches()) [ CD ]
Line_46 $$ ParsedHost host = getAndRecordParsedHost(hostName)-->Line_48 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ FD ]
Line_86 $$ if (startTimeValue != 0 && startTimeValue + MAXIMUM_CLOCK_SKEW >= launchTimeCurrentJob) -->Line_89 $$ taskAttemptStartTimes.remove(attemptID)[ CD ]
Line_29 $$ Pre21JobHistoryConstants.Values stat = null-->Line_37 $$ attempt.setResult(stat)[ FD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_15 $$ jobBeingTraced.getMapTasks().add(task)[ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")[ CD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_37 $$ attempt.setResult(stat)[ CD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_18 $$ task.setTaskID(taskID)[ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_4 $$ String taskID = line.get("TASKID")[ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)[ FD ]
Line_31 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_37 $$ attempt.setResult(stat)[ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_5 $$ String status = line.get("TASK_STATUS")[ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_18 $$ task.setTaskID(taskID)[ CD ]
Line_76 $$ if (attemptNumberString != null) -->Line_78 $$ successfulNthMapperAttempts.enter(attemptNumber)[ CD ]
Line_65 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) -->Line_66 $$ successfulMapAttemptTimes[distance].enter(runtime)[ CD ]
Line_22 $$ attempt = new LoggedTaskAttempt()-->Line_49 $$ attempt.setLocation(host.makeLoggedLocation())[ FD ]
Line_34 $$ stat = null-->Line_37 $$ attempt.setResult(stat)[ FD ]
Line_5 $$ String status = line.get("TASK_STATUS")-->Line_31 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)[ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_21 $$ if (attempt == null) [ CD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_18 $$ task.setTaskID(taskID)[ FD ]
Line_29 $$ Pre21JobHistoryConstants.Values stat = null-->Line_31 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)[ FD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_44 $$ int distance = Integer.MAX_VALUE[ CD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_6 $$ String attemptStartTime = line.get("START_TIME")[ FD ]
Line_64 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()-->Line_69 $$ failedMapAttemptTimes[distance].enter(runtime)[ FD ]
Line_44 $$ int distance = Integer.MAX_VALUE-->Line_57 $$ distance = Math.min(distance, preferedLoc.distance(host))[ FD ]
Line_12 $$ if (task == null) -->Line_14 $$ task.setTaskID(taskID)[ CD ]
Line_93 $$ if (status.equals("SUCCESS")) -->Line_94 $$ taskMapAttemptFinishTimes.put(attemptID, finishTime)[ CD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_8 $$ String hostName = line.get("HOSTNAME")[ CD ]
Line_10 $$ if (jobBeingTraced != null && taskID != null) -->Line_62 $$ distance = Math.min(distance, successfulMapAttemptTimes.length - 1)[ CD ]
Line_91 $$ if (status != null && attemptFinishTime != null) -->Line_92 $$ long finishTime = Long.parseLong(attemptFinishTime)[ CD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_37 $$ attempt.setResult(stat)[ FD ]
Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")-->Line_92 $$ long finishTime = Long.parseLong(attemptFinishTime)[ FD ]
Line_68 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) -->Line_69 $$ failedMapAttemptTimes[distance].enter(runtime)[ CD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_27 $$ task.getAttempts().add(attempt)[ FD ]
Line_31 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_34 $$ stat = null[ FD ]
Line_11 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_53 $$ List<LoggedLocation> locs = task.getPreferredLocations()[ FD ]
Line_91 $$ if (status != null && attemptFinishTime != null) -->Line_93 $$ if (status.equals("SUCCESS")) [ CD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_16 $$ tasksInCurrentJob.put(taskID, task)[ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_21 $$ if (attempt == null) [ FD ]
Line_2 $$ private void processMapAttemptLine(ParsedLine line) -->Line_9 $$ String counters = line.get("COUNTERS")[ FD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_85 $$ long startTimeValue = Long.parseLong(attemptStartTime)[ FD ]
Line_77 $$ int attemptNumber = Integer.parseInt(attemptNumberString)-->Line_78 $$ successfulNthMapperAttempts.enter(attemptNumber)[ FD ]
Line_19 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_51 $$ attempt.setHostName(hostName, null)[ FD ]
