Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_3 $$ name = in.readString()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_12 $$ mergeId = in.readOptionalString()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_7 $$ docCount = in.readInt()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_8 $$ delDocCount = in.readInt()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_6 $$ search = in.readBoolean()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_15 $$ ramTree = readRamTree(in)[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_10 $$ version = Lucene.parseVersionLenient(in.readOptionalString(), null)[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_7 $$ docCount = in.readInt()[ FD ]
Line_14 $$ if (in.readBoolean()) -->Line_15 $$ ramTree = readRamTree(in)[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_3 $$ name = in.readString()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_11 $$ compound = in.readOptionalBoolean()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_13 $$ memoryInBytes = in.readLong()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_13 $$ memoryInBytes = in.readLong()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_6 $$ search = in.readBoolean()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_5 $$ committed = in.readBoolean()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_9 $$ sizeInBytes = in.readLong()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_14 $$ if (in.readBoolean()) [ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_11 $$ compound = in.readOptionalBoolean()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_4 $$ generation = Long.parseLong(name.substring(1), Character.MAX_RADIX)[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_9 $$ sizeInBytes = in.readLong()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_8 $$ delDocCount = in.readInt()[ FD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_12 $$ mergeId = in.readOptionalString()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_5 $$ committed = in.readBoolean()[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_10 $$ version = Lucene.parseVersionLenient(in.readOptionalString(), null)[ CD ]
Line_2 $$ public void readFrom(StreamInput in) throws IOException -->Line_14 $$ if (in.readBoolean()) [ FD ]
