Line_10 $$ for (Component component : components) -->Line_11 $$ Point point = component.getLocation()[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_5 $$ super.layoutContainer(target)[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_6 $$ target.setSize(realSize)[ CD ]
Line_8 $$ int yShift = (int) ((1 - myPhase) * target.getPreferredSize().height)-->Line_12 $$ point.y -= yShift[ FD ]
Line_10 $$ for (Component component : components) -->Line_13 $$ component.setLocation(point)[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_4 $$ target.setSize(target.getPreferredSize())[ FD ]
Line_11 $$ Point point = component.getLocation()-->Line_13 $$ component.setLocation(point)[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_3 $$ final Dimension realSize = target.getSize()[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_8 $$ int yShift = (int) ((1 - myPhase) * target.getPreferredSize().height)[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_5 $$ super.layoutContainer(target)[ CD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_6 $$ target.setSize(realSize)[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_3 $$ final Dimension realSize = target.getSize()[ CD ]
Line_3 $$ final Dimension realSize = target.getSize()-->Line_6 $$ target.setSize(realSize)[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_7 $$ synchronized (target.getTreeLock()) [ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_9 $$ Component[] components = target.getComponents()[ FD ]
Line_2 $$ public void layoutContainer(Container target) -->Line_4 $$ target.setSize(target.getPreferredSize())[ CD ]
