Line_7 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()-->Line_13 $$ backgroundGraphics.setClip(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_12 $$ Graphics2D backgroundGraphics = (Graphics2D) g.create()-->Line_15 $$ backgroundGraphics.dispose()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent c) -->Line_4 $$ paintSelectedRows(g, ((JTree) c))[ FD ]
Line_11 $$ if (sourceList != null && (Boolean) sourceList) -->Line_15 $$ backgroundGraphics.dispose()[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent c) -->Line_18 $$ super.paint(g, c)[ FD ]
Line_8 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0-->Line_13 $$ backgroundGraphics.setClip(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent c) -->Line_3 $$ if (myWideSelection && !UIUtil.isUnderAquaBasedLookAndFeel() && !UIUtil.isUnderDarcula() && !UIUtil.isUnderIntelliJLaF()) [ CD ]
Line_11 $$ if (sourceList != null && (Boolean) sourceList) -->Line_14 $$ LIST_BACKGROUND_PAINTER.paintBorder(tree, backgroundGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent c) -->Line_18 $$ super.paint(g, c)[ CD ]
Line_12 $$ Graphics2D backgroundGraphics = (Graphics2D) g.create()-->Line_13 $$ backgroundGraphics.setClip(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent c) -->Line_9 $$ final Rectangle bounds = g.getClipBounds()[ FD ]
Line_8 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0-->Line_14 $$ LIST_BACKGROUND_PAINTER.paintBorder(tree, backgroundGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_3 $$ if (myWideSelection && !UIUtil.isUnderAquaBasedLookAndFeel() && !UIUtil.isUnderDarcula() && !UIUtil.isUnderIntelliJLaF()) -->Line_4 $$ paintSelectedRows(g, ((JTree) c))[ CD ]
Line_6 $$ if (myWideSelection) -->Line_8 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0[ CD ]
Line_6 $$ if (myWideSelection) -->Line_9 $$ final Rectangle bounds = g.getClipBounds()[ CD ]
Line_11 $$ if (sourceList != null && (Boolean) sourceList) -->Line_13 $$ backgroundGraphics.setClip(xOffset, bounds.y, containerWidth, bounds.height)[ CD ]
Line_2 $$ public void paint(Graphics g, JComponent c) -->Line_12 $$ Graphics2D backgroundGraphics = (Graphics2D) g.create()[ FD ]
Line_2 $$ public void paint(Graphics g, JComponent c) -->Line_6 $$ if (myWideSelection) [ CD ]
Line_6 $$ if (myWideSelection) -->Line_10 $$ final Object sourceList = tree.getClientProperty(SOURCE_LIST_CLIENT_PROPERTY)[ CD ]
Line_7 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()-->Line_14 $$ LIST_BACKGROUND_PAINTER.paintBorder(tree, backgroundGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_12 $$ Graphics2D backgroundGraphics = (Graphics2D) g.create()-->Line_14 $$ LIST_BACKGROUND_PAINTER.paintBorder(tree, backgroundGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_11 $$ if (sourceList != null && (Boolean) sourceList) -->Line_12 $$ Graphics2D backgroundGraphics = (Graphics2D) g.create()[ CD ]
Line_6 $$ if (myWideSelection) -->Line_7 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()[ CD ]
Line_6 $$ if (myWideSelection) -->Line_11 $$ if (sourceList != null && (Boolean) sourceList) [ CD ]
