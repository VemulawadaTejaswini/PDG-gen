Line_2 $$ public CopyOnWriteHashMap<K, V> copyAndRemove(Object key) -->Line_6 $$ final int hash = key.hashCode()[ FD ]
Line_2 $$ public CopyOnWriteHashMap<K, V> copyAndRemove(Object key) -->Line_3 $$ if (key == null) [ CD ]
Line_2 $$ public CopyOnWriteHashMap<K, V> copyAndRemove(Object key) -->Line_3 $$ if (key == null) [ FD ]
Line_7 $$ final InnerNode<K, V> newRoot = root.remove(key, hash)-->Line_8 $$ if (root == newRoot) [ FD ]
Line_8 $$ if (root == newRoot) -->Line_9 $$ return this[ CD ]
Line_2 $$ public CopyOnWriteHashMap<K, V> copyAndRemove(Object key) -->Line_6 $$ final int hash = key.hashCode()[ CD ]
Line_2 $$ public CopyOnWriteHashMap<K, V> copyAndRemove(Object key) -->Line_7 $$ final InnerNode<K, V> newRoot = root.remove(key, hash)[ FD ]
Line_6 $$ final int hash = key.hashCode()-->Line_7 $$ final InnerNode<K, V> newRoot = root.remove(key, hash)[ FD ]
Line_2 $$ public CopyOnWriteHashMap<K, V> copyAndRemove(Object key) -->Line_8 $$ if (root == newRoot) [ CD ]
Line_8 $$ if (root == newRoot) -->Line_11 $$ return new CopyOnWriteHashMap(newRoot, size - 1)[ CD ]
Line_2 $$ public CopyOnWriteHashMap<K, V> copyAndRemove(Object key) -->Line_7 $$ final InnerNode<K, V> newRoot = root.remove(key, hash)[ CD ]
