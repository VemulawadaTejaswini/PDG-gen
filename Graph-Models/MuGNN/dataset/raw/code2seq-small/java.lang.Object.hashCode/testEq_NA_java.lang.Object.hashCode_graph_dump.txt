Line_20 $$ if (eq) -->Line_21 $$ assertEquals(h1, h2)[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_4 $$ final int h2 = id2.hashCode()[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_13 $$ assertEquals(eq, 0 == id1.compareTo((T) id2))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_12 $$ assertFalse(id2.equals(null))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_16 $$ assertTrue(id1.compareTo(null) != 0)[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_19 $$ assertEquals(h2, id2.hashCode())[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_3 $$ final int h1 = id1.hashCode()[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_9 $$ assertEquals(eq, id1.equals(id2))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_10 $$ assertEquals(eq, id2.equals(id1))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_19 $$ assertEquals(h2, id2.hashCode())[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_8 $$ assertEquals(0, id2.compareTo((T) id2))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_5 $$ assertTrue(id1.equals(id1))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_3 $$ final int h1 = id1.hashCode()[ CD ]
Line_3 $$ final int h1 = id1.hashCode()-->Line_21 $$ assertEquals(h1, h2)[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_11 $$ assertFalse(id1.equals(null))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_12 $$ assertFalse(id2.equals(null))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_5 $$ assertTrue(id1.equals(id1))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_20 $$ if (eq) [ CD ]
Line_4 $$ final int h2 = id2.hashCode()-->Line_21 $$ assertEquals(h1, h2)[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_4 $$ final int h2 = id2.hashCode()[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_13 $$ assertEquals(eq, 0 == id1.compareTo((T) id2))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_11 $$ assertFalse(id1.equals(null))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_15 $$ assertEquals(sign(id1.compareTo((T) id2)), -sign(id2.compareTo((T) id1)))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_8 $$ assertEquals(0, id2.compareTo((T) id2))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_17 $$ assertTrue(id2.compareTo(null) != 0)[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_15 $$ assertEquals(sign(id1.compareTo((T) id2)), -sign(id2.compareTo((T) id1)))[ CD ]
Line_3 $$ final int h1 = id1.hashCode()-->Line_18 $$ assertEquals(h1, id1.hashCode())[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_18 $$ assertEquals(h1, id1.hashCode())[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_7 $$ assertEquals(0, id1.compareTo((T) id1))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_7 $$ assertEquals(0, id1.compareTo((T) id1))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_17 $$ assertTrue(id2.compareTo(null) != 0)[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_6 $$ assertTrue(id2.equals(id2))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_18 $$ assertEquals(h1, id1.hashCode())[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_6 $$ assertTrue(id2.equals(id2))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_9 $$ assertEquals(eq, id1.equals(id2))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_10 $$ assertEquals(eq, id2.equals(id1))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_14 $$ assertEquals(eq, 0 == id2.compareTo((T) id1))[ CD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_14 $$ assertEquals(eq, 0 == id2.compareTo((T) id1))[ FD ]
Line_2 $$ private <T> void testEq(final boolean eq, Comparable<T> id1, Comparable<T> id2) -->Line_16 $$ assertTrue(id1.compareTo(null) != 0)[ FD ]
Line_4 $$ final int h2 = id2.hashCode()-->Line_19 $$ assertEquals(h2, id2.hashCode())[ FD ]
