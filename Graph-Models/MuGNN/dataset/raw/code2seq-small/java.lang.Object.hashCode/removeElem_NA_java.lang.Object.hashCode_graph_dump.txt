Line_4 $$ final int hashCode = key.hashCode()-->Line_5 $$ final int index = getIndex(hashCode)[ FD ]
Line_11 $$ found = entries[index]-->Line_24 $$ found = found.next[ FD ]
Line_16 $$ if (hashCode == found.hashCode && found.element.equals(key)) -->Line_23 $$ prev = found[ CD ]
Line_3 $$ LinkedElement<T> found = null-->Line_11 $$ found = entries[index][ FD ]
Line_8 $$ if (hashCode == entries[index].hashCode && entries[index].element.equals(key)) -->Line_15 $$ for (found = prev.next; found != null; ) [ CD ]
Line_3 $$ LinkedElement<T> found = null-->Line_24 $$ found = found.next[ FD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_16 $$ if (hashCode == found.hashCode && found.element.equals(key)) [ FD ]
Line_11 $$ found = entries[index]-->Line_23 $$ prev = found[ FD ]
Line_8 $$ if (hashCode == entries[index].hashCode && entries[index].element.equals(key)) -->Line_14 $$ LinkedElement<T> prev = entries[index][ CD ]
Line_6 $$ if (entries[index] == null) -->Line_8 $$ if (hashCode == entries[index].hashCode && entries[index].element.equals(key)) [ CD ]
Line_15 $$ for (found = prev.next; found != null; ) -->Line_16 $$ if (hashCode == found.hashCode && found.element.equals(key)) [ CD ]
Line_3 $$ LinkedElement<T> found = null-->Line_23 $$ prev = found[ FD ]
Line_15 $$ for (found = prev.next; found != null; ) -->Line_23 $$ prev = found[ FD ]
Line_8 $$ if (hashCode == entries[index].hashCode && entries[index].element.equals(key)) -->Line_11 $$ found = entries[index][ CD ]
Line_8 $$ if (hashCode == entries[index].hashCode && entries[index].element.equals(key)) -->Line_12 $$ entries[index] = found.next[ CD ]
Line_11 $$ found = entries[index]-->Line_15 $$ for (found = prev.next; found != null; ) [ FD ]
Line_24 $$ found = found.next-->Line_23 $$ prev = found[ FD ]
Line_16 $$ if (hashCode == found.hashCode && found.element.equals(key)) -->Line_19 $$ prev.next = found.next[ CD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_28 $$ return found[ CD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_4 $$ final int hashCode = key.hashCode()[ CD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_4 $$ final int hashCode = key.hashCode()[ FD ]
Line_6 $$ if (entries[index] == null) -->Line_7 $$ return null[ CD ]
Line_14 $$ LinkedElement<T> prev = entries[index]-->Line_23 $$ prev = found[ FD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_8 $$ if (hashCode == entries[index].hashCode && entries[index].element.equals(key)) [ FD ]
Line_16 $$ if (hashCode == found.hashCode && found.element.equals(key)) -->Line_20 $$ found.next = null[ CD ]
Line_15 $$ for (found = prev.next; found != null; ) -->Line_24 $$ found = found.next[ FD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_3 $$ LinkedElement<T> found = null[ CD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_6 $$ if (entries[index] == null) [ CD ]
Line_3 $$ LinkedElement<T> found = null-->Line_15 $$ for (found = prev.next; found != null; ) [ FD ]
Line_16 $$ if (hashCode == found.hashCode && found.element.equals(key)) -->Line_24 $$ found = found.next[ CD ]
Line_24 $$ found = found.next-->Line_15 $$ for (found = prev.next; found != null; ) [ FD ]
Line_2 $$ protected LinkedElement<T> removeElem(final T key) -->Line_5 $$ final int index = getIndex(hashCode)[ CD ]
