Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_3 $$ assertEquals("Should be equal", master, equal)[ FD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_8 $$ assertEquals("Hash code for subclass should match", master.hashCode(), subclass.hashCode())[ CD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_3 $$ assertEquals("Should be equal", master, equal)[ CD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_6 $$ assertNotEquals("Hash code for non-equal instances should not match", master.hashCode(), notEqual.hashCode())[ CD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_7 $$ assertEquals("Subclass should be equal", master, subclass)[ FD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_4 $$ assertEquals("Hash code for equal instances should match", master.hashCode(), equal.hashCode())[ CD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_6 $$ assertNotEquals("Hash code for non-equal instances should not match", master.hashCode(), notEqual.hashCode())[ FD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_8 $$ assertEquals("Hash code for subclass should match", master.hashCode(), subclass.hashCode())[ FD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_4 $$ assertEquals("Hash code for equal instances should match", master.hashCode(), equal.hashCode())[ FD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_5 $$ assertNotEquals("Should not be equal", master, notEqual)[ CD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_5 $$ assertNotEquals("Should not be equal", master, notEqual)[ FD ]
Line_2 $$ private void assertEqualsAndHashCodeContracts(Object master, Object equal, Object notEqual, Object subclass) -->Line_7 $$ assertEquals("Subclass should be equal", master, subclass)[ CD ]
