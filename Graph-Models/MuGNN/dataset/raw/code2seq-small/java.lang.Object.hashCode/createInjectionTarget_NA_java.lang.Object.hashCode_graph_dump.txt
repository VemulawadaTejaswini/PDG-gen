Line_14 $$ final ClassTransformer transformer = beanManager.getServices().get(ClassTransformer.class)-->Line_25 $$ type = transformer.getEnhancedAnnotatedType(clazz, bdaId)[ FD ]
Line_34 $$ WeldInjectionTargetBuilder<T> builder = beanManager.createInjectionTargetBuilder(type)-->Line_35 $$ builder.setBean(bean)[ FD ]
Line_25 $$ type = transformer.getEnhancedAnnotatedType(clazz, bdaId)-->Line_27 $$ if (Beans.getBeanConstructor(type) == null) [ FD ]
Line_17 $$ EnhancedAnnotatedType<T> type = transformer.getEnhancedAnnotatedType(clazz, beanManager.getId())-->Line_27 $$ if (Beans.getBeanConstructor(type) == null) [ FD ]
Line_17 $$ EnhancedAnnotatedType<T> type = transformer.getEnhancedAnnotatedType(clazz, beanManager.getId())-->Line_34 $$ WeldInjectionTargetBuilder<T> builder = beanManager.createInjectionTargetBuilder(type)[ FD ]
Line_38 $$ if (interceptionSupport) -->Line_39 $$ return builder.build()[ CD ]
Line_18 $$ if (!type.getJavaClass().equals(componentClass)) -->Line_25 $$ type = transformer.getEnhancedAnnotatedType(clazz, bdaId)[ CD ]
Line_17 $$ EnhancedAnnotatedType<T> type = transformer.getEnhancedAnnotatedType(clazz, beanManager.getId())-->Line_18 $$ if (!type.getJavaClass().equals(componentClass)) [ FD ]
Line_34 $$ WeldInjectionTargetBuilder<T> builder = beanManager.createInjectionTargetBuilder(type)-->Line_39 $$ return builder.build()[ FD ]
Line_25 $$ type = transformer.getEnhancedAnnotatedType(clazz, bdaId)-->Line_34 $$ WeldInjectionTargetBuilder<T> builder = beanManager.createInjectionTargetBuilder(type)[ FD ]
Line_17 $$ EnhancedAnnotatedType<T> type = transformer.getEnhancedAnnotatedType(clazz, beanManager.getId())-->Line_25 $$ type = transformer.getEnhancedAnnotatedType(clazz, bdaId)[ FD ]
Line_14 $$ final ClassTransformer transformer = beanManager.getServices().get(ClassTransformer.class)-->Line_17 $$ EnhancedAnnotatedType<T> type = transformer.getEnhancedAnnotatedType(clazz, beanManager.getId())[ FD ]
