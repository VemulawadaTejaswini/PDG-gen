Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_5 $$ int maxServers = ParamUtil.getInteger(request, "maxServers")[ FD ]
Line_13 $$ for (ClusterNode clusterNode : clusterNodes) -->Line_19 $$ _registerClusterOrder(request, clusterNode, orderUuid, productEntryName, maxServers)[ FD ]
Line_4 $$ String productEntryName = ParamUtil.getString(request, "productEntryName")-->Line_7 $$ if ((clusterNodes.size() <= 1) || Validator.isNull(productEntryName) || Validator.isNull(orderUuid)) [ FD ]
Line_23 $$ String message = "Error contacting " + inetAddress.getHostName()-->Line_27 $$ request.setAttribute(clusterNode.getClusterNodeId() + "_ERROR_MESSAGE", message)[ FD ]
Line_4 $$ String productEntryName = ParamUtil.getString(request, "productEntryName")-->Line_19 $$ _registerClusterOrder(request, clusterNode, orderUuid, productEntryName, maxServers)[ FD ]
Line_22 $$ InetAddress inetAddress = clusterNode.getBindInetAddress()-->Line_23 $$ String message = "Error contacting " + inetAddress.getHostName()[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_3 $$ String orderUuid = ParamUtil.getString(request, "orderUuid")[ CD ]
Line_7 $$ if ((clusterNodes.size() <= 1) || Validator.isNull(productEntryName) || Validator.isNull(orderUuid)) -->Line_8 $$ Map<String, Object> attributes = registerOrder(orderUuid, productEntryName, maxServers)[ CD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_7 $$ if ((clusterNodes.size() <= 1) || Validator.isNull(productEntryName) || Validator.isNull(orderUuid)) [ CD ]
Line_3 $$ String orderUuid = ParamUtil.getString(request, "orderUuid")-->Line_7 $$ if ((clusterNodes.size() <= 1) || Validator.isNull(productEntryName) || Validator.isNull(orderUuid)) [ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_3 $$ String orderUuid = ParamUtil.getString(request, "orderUuid")[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_14 $$ boolean register = ParamUtil.getBoolean(request, clusterNode.getClusterNodeId() + "_register")[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_19 $$ _registerClusterOrder(request, clusterNode, orderUuid, productEntryName, maxServers)[ FD ]
Line_13 $$ for (ClusterNode clusterNode : clusterNodes) -->Line_14 $$ boolean register = ParamUtil.getBoolean(request, clusterNode.getClusterNodeId() + "_register")[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_5 $$ int maxServers = ParamUtil.getInteger(request, "maxServers")[ CD ]
Line_3 $$ String orderUuid = ParamUtil.getString(request, "orderUuid")-->Line_8 $$ Map<String, Object> attributes = registerOrder(orderUuid, productEntryName, maxServers)[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_6 $$ List<ClusterNode> clusterNodes = ClusterExecutorUtil.getClusterNodes()[ CD ]
Line_4 $$ String productEntryName = ParamUtil.getString(request, "productEntryName")-->Line_8 $$ Map<String, Object> attributes = registerOrder(orderUuid, productEntryName, maxServers)[ FD ]
Line_13 $$ for (ClusterNode clusterNode : clusterNodes) -->Line_27 $$ request.setAttribute(clusterNode.getClusterNodeId() + "_ERROR_MESSAGE", message)[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_4 $$ String productEntryName = ParamUtil.getString(request, "productEntryName")[ FD ]
Line_13 $$ for (ClusterNode clusterNode : clusterNodes) -->Line_25 $$ message += StringPool.COLON + clusterNode.getPortalPort()[ FD ]
Line_13 $$ for (ClusterNode clusterNode : clusterNodes) -->Line_22 $$ InetAddress inetAddress = clusterNode.getBindInetAddress()[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_10 $$ request.setAttribute(entry.getKey(), entry.getValue())[ FD ]
Line_24 $$ if (clusterNode.getPortalPort() != -1) -->Line_25 $$ message += StringPool.COLON + clusterNode.getPortalPort()[ CD ]
Line_8 $$ Map<String, Object> attributes = registerOrder(orderUuid, productEntryName, maxServers)-->Line_9 $$ for (Map.Entry<String, Object> entry : attributes.entrySet()) [ FD ]
Line_6 $$ List<ClusterNode> clusterNodes = ClusterExecutorUtil.getClusterNodes()-->Line_7 $$ if ((clusterNodes.size() <= 1) || Validator.isNull(productEntryName) || Validator.isNull(orderUuid)) [ FD ]
Line_14 $$ boolean register = ParamUtil.getBoolean(request, clusterNode.getClusterNodeId() + "_register")-->Line_15 $$ if (!register) [ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_4 $$ String productEntryName = ParamUtil.getString(request, "productEntryName")[ CD ]
Line_13 $$ for (ClusterNode clusterNode : clusterNodes) -->Line_24 $$ if (clusterNode.getPortalPort() != -1) [ FD ]
Line_3 $$ String orderUuid = ParamUtil.getString(request, "orderUuid")-->Line_19 $$ _registerClusterOrder(request, clusterNode, orderUuid, productEntryName, maxServers)[ FD ]
Line_23 $$ String message = "Error contacting " + inetAddress.getHostName()-->Line_25 $$ message += StringPool.COLON + clusterNode.getPortalPort()[ FD ]
Line_9 $$ for (Map.Entry<String, Object> entry : attributes.entrySet()) -->Line_10 $$ request.setAttribute(entry.getKey(), entry.getValue())[ FD ]
Line_5 $$ int maxServers = ParamUtil.getInteger(request, "maxServers")-->Line_19 $$ _registerClusterOrder(request, clusterNode, orderUuid, productEntryName, maxServers)[ FD ]
Line_25 $$ message += StringPool.COLON + clusterNode.getPortalPort()-->Line_27 $$ request.setAttribute(clusterNode.getClusterNodeId() + "_ERROR_MESSAGE", message)[ FD ]
Line_5 $$ int maxServers = ParamUtil.getInteger(request, "maxServers")-->Line_8 $$ Map<String, Object> attributes = registerOrder(orderUuid, productEntryName, maxServers)[ FD ]
Line_2 $$ public static void registerOrder(HttpServletRequest request) -->Line_27 $$ request.setAttribute(clusterNode.getClusterNodeId() + "_ERROR_MESSAGE", message)[ FD ]
