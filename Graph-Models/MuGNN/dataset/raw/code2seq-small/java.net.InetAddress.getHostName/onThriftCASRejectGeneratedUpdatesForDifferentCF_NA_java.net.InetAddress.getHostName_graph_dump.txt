Line_3 $$ String cf = "cf" + System.nanoTime()-->Line_8 $$ client.cas(bytes(10), cf, Collections.<Column>emptyList(), Collections.singletonList(getColumnForInsert("v1", 10)), org.apache.cassandra.thrift.ConsistencyLevel.LOCAL_SERIAL, org.apache.cassandra.thrift.ConsistencyLevel.ONE)[ FD ]
Line_6 $$ Cassandra.Client client = new Cassandra.Client(new TBinaryProtocol(new TFramedTransportFactory().openTransport(InetAddress.getLocalHost().getHostName(), 9170)))-->Line_7 $$ client.set_keyspace(ksName)[ FD ]
Line_6 $$ Cassandra.Client client = new Cassandra.Client(new TBinaryProtocol(new TFramedTransportFactory().openTransport(InetAddress.getLocalHost().getHostName(), 9170)))-->Line_8 $$ client.cas(bytes(10), cf, Collections.<Column>emptyList(), Collections.singletonList(getColumnForInsert("v1", 10)), org.apache.cassandra.thrift.ConsistencyLevel.LOCAL_SERIAL, org.apache.cassandra.thrift.ConsistencyLevel.ONE)[ FD ]
Line_3 $$ String cf = "cf" + System.nanoTime()-->Line_10 $$ assertUpdateNotExecuted(cf, 10)[ FD ]
Line_2 $$ public void onThriftCASRejectGeneratedUpdatesForDifferentCF() throws Exception -->Line_3 $$ String cf = "cf" + System.nanoTime()[ CD ]
Line_3 $$ String cf = "cf" + System.nanoTime()-->Line_5 $$ setupTableWithTrigger(cf, CrossTableTrigger.class)[ FD ]
