Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_17 $$ if (name != null) [ CD ]
Line_5 $$ final InetAddress addr = getHostAddress()-->Line_13 $$ prefixesList.add(addr.getHostName())[ FD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_20 $$ if (prefixes != null && prefixes.length > 0) [ CD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_21 $$ prefixesList.addAll(asList(prefixes))[ FD ]
Line_5 $$ final InetAddress addr = getHostAddress()-->Line_6 $$ if (addr != null) [ FD ]
Line_20 $$ if (prefixes != null && prefixes.length > 0) -->Line_21 $$ prefixesList.addAll(asList(prefixes))[ CD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_23 $$ return getLogger(getLoggerName(loggerName), prefixesList.toArray(new String[prefixesList.size()]))[ FD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_4 $$ if (settings.getAsBoolean("logger.logHostAddress", false)) [ CD ]
Line_4 $$ if (settings.getAsBoolean("logger.logHostAddress", false)) -->Line_6 $$ if (addr != null) [ CD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_16 $$ String name = settings.get("name")[ CD ]
Line_12 $$ if (addr != null) -->Line_13 $$ prefixesList.add(addr.getHostName())[ CD ]
Line_5 $$ final InetAddress addr = getHostAddress()-->Line_7 $$ prefixesList.add(addr.getHostAddress())[ FD ]
Line_17 $$ if (name != null) -->Line_18 $$ prefixesList.add(name)[ CD ]
Line_3 $$ List<String> prefixesList = new ArrayList()-->Line_18 $$ prefixesList.add(name)[ FD ]
Line_5 $$ final InetAddress addr = getHostAddress()-->Line_12 $$ if (addr != null) [ FD ]
Line_3 $$ List<String> prefixesList = new ArrayList()-->Line_21 $$ prefixesList.addAll(asList(prefixes))[ FD ]
Line_10 $$ if (settings.getAsBoolean("logger.logHostName", false)) -->Line_12 $$ if (addr != null) [ CD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_10 $$ if (settings.getAsBoolean("logger.logHostName", false)) [ FD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_10 $$ if (settings.getAsBoolean("logger.logHostName", false)) [ CD ]
Line_10 $$ if (settings.getAsBoolean("logger.logHostName", false)) -->Line_11 $$ final InetAddress addr = getHostAddress()[ CD ]
Line_3 $$ List<String> prefixesList = new ArrayList()-->Line_23 $$ return getLogger(getLoggerName(loggerName), prefixesList.toArray(new String[prefixesList.size()]))[ FD ]
Line_4 $$ if (settings.getAsBoolean("logger.logHostAddress", false)) -->Line_5 $$ final InetAddress addr = getHostAddress()[ CD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_3 $$ List<String> prefixesList = new ArrayList()[ CD ]
Line_3 $$ List<String> prefixesList = new ArrayList()-->Line_7 $$ prefixesList.add(addr.getHostAddress())[ FD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_23 $$ return getLogger(getLoggerName(loggerName), prefixesList.toArray(new String[prefixesList.size()]))[ CD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_4 $$ if (settings.getAsBoolean("logger.logHostAddress", false)) [ FD ]
Line_3 $$ List<String> prefixesList = new ArrayList()-->Line_13 $$ prefixesList.add(addr.getHostName())[ FD ]
Line_16 $$ String name = settings.get("name")-->Line_18 $$ prefixesList.add(name)[ FD ]
Line_6 $$ if (addr != null) -->Line_7 $$ prefixesList.add(addr.getHostAddress())[ CD ]
Line_2 $$ public static ESLogger getLogger(String loggerName, Settings settings, String... prefixes) -->Line_16 $$ String name = settings.get("name")[ FD ]
Line_16 $$ String name = settings.get("name")-->Line_17 $$ if (name != null) [ FD ]
