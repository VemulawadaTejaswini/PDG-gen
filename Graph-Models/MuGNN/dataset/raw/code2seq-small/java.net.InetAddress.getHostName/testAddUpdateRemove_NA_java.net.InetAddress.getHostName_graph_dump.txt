Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_15 $$ op.get("socket-binding").set("test-binding")[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_18 $$ Assert.assertTrue("Could not connect to created connector.", WebUtil.testHttpURL(new URL("http", testHost, TEST_PORT, "/").toString()))[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_39 $$ Assert.assertFalse("Could not connect to created connector.", WebUtil.testHttpURL(new URL("http", testHost, TEST_PORT, "/").toString()))[ CD ]
Line_30 $$ rte.retryTask(new Callable<Boolean>() -->Line_33 $$ if (!available)[ CD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_20 $$ op.get(NAME).set("port")[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_12 $$ op.get("port").set(TEST_PORT)[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_50 $$ result = executeOperation(op)[ CD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_20 $$ op.get(NAME).set("port")[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_41 $$ result = executeOperation(op, false)[ CD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_13 $$ result = executeOperation(op)[ FD ]
Line_27 $$ result = executeOperation(op)-->Line_42 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_21 $$ op.get(VALUE).set(TEST_PORT + 1)[ FD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_20 $$ op.get(NAME).set("port")[ FD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_41 $$ result = executeOperation(op, false)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_51 $$ op = createOpNode("interface=test-interface", REMOVE)[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_25 $$ logger.info("Restarting server.")[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_44 $$ result = executeOperation(op, false)[ CD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_30 $$ rte.retryTask(new Callable<Boolean>() [ CD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_21 $$ op.get(VALUE).set(TEST_PORT + 1)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_38 $$ logger.info("Server is up.")[ CD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_50 $$ result = executeOperation(op)[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_26 $$ op = createOpNode(null, "reload")[ FD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_26 $$ op = createOpNode(null, "reload")[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_44 $$ result = executeOperation(op, false)[ FD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_50 $$ result = executeOperation(op)[ FD ]
Line_30 $$ rte.retryTask(new Callable<Boolean>() -->Line_35 $$ return available[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_13 $$ result = executeOperation(op)[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_29 $$ RetryTaskExecutor<Boolean> rte = new RetryTaskExecutor<Boolean>()[ CD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_16 $$ result = executeOperation(op)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)[ FD ]
Line_26 $$ op = createOpNode(null, "reload")-->Line_44 $$ result = executeOperation(op, false)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_45 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ CD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_41 $$ result = executeOperation(op, false)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_52 $$ result = executeOperation(op)[ CD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_22 $$ result = executeOperation(op, false)[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_50 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_16 $$ result = executeOperation(op)[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)[ CD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_44 $$ result = executeOperation(op, false)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_9 $$ ModelNode result = executeOperation(op)[ CD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_47 $$ result = executeOperation(op)[ FD ]
Line_22 $$ result = executeOperation(op, false)-->Line_23 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)[ FD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_22 $$ result = executeOperation(op, false)[ FD ]
Line_13 $$ result = executeOperation(op)-->Line_45 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_15 $$ op.get("socket-binding").set("test-binding")[ FD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_42 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)[ CD ]
Line_13 $$ result = executeOperation(op)-->Line_23 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_20 $$ op.get(NAME).set("port")[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_46 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", REMOVE)[ CD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_40 $$ op = createOpNode("interface=test-interface", REMOVE)[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_11 $$ op.get("interface").set("test-interface")[ CD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_22 $$ result = executeOperation(op, false)[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_22 $$ result = executeOperation(op, false)[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_15 $$ op.get("socket-binding").set("test-binding")[ FD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_52 $$ result = executeOperation(op)[ FD ]
Line_22 $$ result = executeOperation(op, false)-->Line_45 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_20 $$ op.get(NAME).set("port")[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_47 $$ result = executeOperation(op)[ CD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_52 $$ result = executeOperation(op)[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_8 $$ op.get("nic").set(testNic.getName())[ CD ]
Line_16 $$ result = executeOperation(op)-->Line_45 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_21 $$ op.get(VALUE).set(TEST_PORT + 1)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_43 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", REMOVE)[ CD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_24 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_15 $$ op.get("socket-binding").set("test-binding")[ CD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_21 $$ op.get(VALUE).set(TEST_PORT + 1)[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_13 $$ result = executeOperation(op)[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_42 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_44 $$ result = executeOperation(op, false)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_9 $$ ModelNode result = executeOperation(op)[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_22 $$ result = executeOperation(op, false)[ CD ]
Line_19 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", WRITE_ATTRIBUTE_OPERATION)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)[ CD ]
Line_28 $$ final String testUrl = new URL("http", testHost, TEST_PORT + 1, "/").toString()-->Line_32 $$ boolean available = WebUtil.testHttpURL(testUrl)[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_47 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_49 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", REMOVE)[ CD ]
Line_26 $$ op = createOpNode(null, "reload")-->Line_52 $$ result = executeOperation(op)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_50 $$ result = executeOperation(op)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_41 $$ result = executeOperation(op, false)[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_52 $$ result = executeOperation(op)[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_24 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_13 $$ result = executeOperation(op)[ FD ]
Line_29 $$ RetryTaskExecutor<Boolean> rte = new RetryTaskExecutor<Boolean>()-->Line_30 $$ rte.retryTask(new Callable<Boolean>() [ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_28 $$ final String testUrl = new URL("http", testHost, TEST_PORT + 1, "/").toString()[ CD ]
Line_26 $$ op = createOpNode(null, "reload")-->Line_47 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_26 $$ op = createOpNode(null, "reload")[ CD ]
Line_26 $$ op = createOpNode(null, "reload")-->Line_41 $$ result = executeOperation(op, false)[ FD ]
Line_26 $$ op = createOpNode(null, "reload")-->Line_50 $$ result = executeOperation(op)[ FD ]
Line_22 $$ result = executeOperation(op, false)-->Line_24 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_16 $$ result = executeOperation(op)[ FD ]
Line_13 $$ result = executeOperation(op)-->Line_22 $$ result = executeOperation(op, false)[ FD ]
Line_13 $$ result = executeOperation(op)-->Line_42 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_23 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ CD ]
Line_22 $$ result = executeOperation(op, false)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_42 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ CD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_47 $$ result = executeOperation(op)[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_22 $$ result = executeOperation(op, false)[ FD ]
Line_13 $$ result = executeOperation(op)-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_8 $$ op.get("nic").set(testNic.getName())[ FD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_45 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_52 $$ result = executeOperation(op)[ FD ]
Line_27 $$ result = executeOperation(op)-->Line_45 $$ Assert.assertFalse("Removed socked binding with connector still using it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_44 $$ result = executeOperation(op, false)[ FD ]
Line_9 $$ ModelNode result = executeOperation(op)-->Line_23 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_41 $$ result = executeOperation(op, false)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_26 $$ op = createOpNode(null, "reload")[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_47 $$ result = executeOperation(op)[ FD ]
Line_13 $$ result = executeOperation(op)-->Line_16 $$ result = executeOperation(op)[ FD ]
Line_30 $$ rte.retryTask(new Callable<Boolean>() -->Line_32 $$ boolean available = WebUtil.testHttpURL(testUrl)[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_27 $$ result = executeOperation(op)[ CD ]
Line_16 $$ result = executeOperation(op)-->Line_22 $$ result = executeOperation(op, false)[ FD ]
Line_16 $$ result = executeOperation(op)-->Line_23 $$ Assert.assertEquals(SUCCESS, result.get(OUTCOME).asString())[ FD ]
Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)-->Line_16 $$ result = executeOperation(op)[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_12 $$ op.get("port").set(TEST_PORT)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_21 $$ op.get(VALUE).set(TEST_PORT + 1)[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_3 $$ if (testNic == null) [ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_14 $$ op = createOpNode("subsystem=undertow/server=default-server/http-listener=test", ADD)[ CD ]
Line_3 $$ if (testNic == null) -->Line_5 $$ return[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_24 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ CD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_11 $$ op.get("interface").set("test-interface")[ FD ]
Line_26 $$ op = createOpNode(null, "reload")-->Line_27 $$ result = executeOperation(op)[ FD ]
Line_22 $$ result = executeOperation(op, false)-->Line_42 $$ Assert.assertFalse("Removed interface with socket binding bound to it.", SUCCESS.equals(result.get(OUTCOME).asString()))[ FD ]
Line_32 $$ boolean available = WebUtil.testHttpURL(testUrl)-->Line_33 $$ if (!available)[ FD ]
Line_10 $$ op = createOpNode("socket-binding-group=standard-sockets/socket-binding=test-binding", ADD)-->Line_26 $$ op = createOpNode(null, "reload")[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_11 $$ op.get("interface").set("test-interface")[ FD ]
Line_3 $$ if (testNic == null) -->Line_4 $$ logger.error("Could not look up non-default interface")[ CD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_12 $$ op.get("port").set(TEST_PORT)[ FD ]
Line_7 $$ ModelNode op = createOpNode("interface=test-interface", ADD)-->Line_16 $$ result = executeOperation(op)[ FD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_17 $$ String testHost = NetworkUtils.canonize(testNic.getInetAddresses().nextElement().getHostName())[ CD ]
Line_2 $$ public void testAddUpdateRemove() throws Exception -->Line_48 $$ Assert.assertFalse("Could not connect to created connector.", WebUtil.testHttpURL(new URL("http", testHost, TEST_PORT, "/").toString()))[ CD ]
Line_13 $$ result = executeOperation(op)-->Line_24 $$ Assert.assertTrue(result.get(RESPONSE_HEADERS).get(PROCESS_STATE).asString().equals("reload-required"))[ FD ]
