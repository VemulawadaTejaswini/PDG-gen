Line_14 $$ if (true) -->Line_18 $$ candidate.setTimeZone(TimeZoneUtil.getTimeZone(StringPool.UTC))[ CD ]
Line_14 $$ if (true) -->Line_19 $$ candidate.setMinimalDaysInFirstWeek(4)[ CD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_17 $$ candidate.clear(Calendar.DST_OFFSET)[ FD ]
Line_14 $$ if (true) -->Line_20 $$ candidate.setFirstDayOfWeek(dtStart.getFirstDayOfWeek())[ CD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_37 $$ reduce_day_of_month(dtStart, candidate)[ FD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_28 $$ reduce_constant_length_field(Calendar.HOUR_OF_DAY, dtStart, candidate)[ FD ]
Line_22 $$ if (frequency == NO_RECURRENCE) -->Line_24 $$ return candidate[ CD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_18 $$ candidate.setTimeZone(TimeZoneUtil.getTimeZone(StringPool.UTC))[ FD ]
Line_22 $$ if (frequency == NO_RECURRENCE) -->Line_23 $$ candidate.setTime(dtStart.getTime())[ CD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_34 $$ reduce_constant_length_field(Calendar.DAY_OF_WEEK, dtStart, candidate)[ FD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_40 $$ reduce_day_of_year(dtStart, candidate)[ FD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_26 $$ reduce_constant_length_field(Calendar.SECOND, dtStart, candidate)[ FD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_27 $$ reduce_constant_length_field(Calendar.MINUTE, dtStart, candidate)[ FD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_23 $$ candidate.setTime(dtStart.getTime())[ FD ]
Line_14 $$ if (true) -->Line_17 $$ candidate.clear(Calendar.DST_OFFSET)[ CD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_19 $$ candidate.setMinimalDaysInFirstWeek(4)[ FD ]
Line_13 $$ Calendar candidate = (Calendar) current.clone()-->Line_20 $$ candidate.setFirstDayOfWeek(dtStart.getFirstDayOfWeek())[ FD ]
