Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_13 $$ myCurrent.clear(Calendar.DST_OFFSET)[ FD ]
Line_19 $$ if (myCurrent.getTime().getTime() < dtStart.getTime().getTime()) -->Line_24 $$ return false[ CD ]
Line_43 $$ if (debug) -->Line_44 $$ System.err.println("No matching candidates")[ CD ]
Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_17 $$ myCurrent.set(Calendar.SECOND, 0)[ FD ]
Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_18 $$ myCurrent.set(Calendar.MILLISECOND, 0)[ FD ]
Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_19 $$ if (myCurrent.getTime().getTime() < dtStart.getTime().getTime()) [ FD ]
Line_41 $$ candidate = getCandidateStartTime(candidate)-->Line_29 $$ if (candidateIsInRecurrence(candidate, debug)) [ FD ]
Line_36 $$ if (debug) -->Line_37 $$ System.err.println("No candidates after dtStart")[ CD ]
Line_26 $$ Calendar candidate = getCandidateStartTime(myCurrent)-->Line_29 $$ if (candidateIsInRecurrence(candidate, debug)) [ FD ]
Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_15 $$ myCurrent.setMinimalDaysInFirstWeek(4)[ FD ]
Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_26 $$ Calendar candidate = getCandidateStartTime(myCurrent)[ FD ]
Line_29 $$ if (candidateIsInRecurrence(candidate, debug)) -->Line_30 $$ return true[ CD ]
Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_14 $$ myCurrent.setTimeZone(TimeZoneUtil.getTimeZone(StringPool.UTC))[ FD ]
Line_26 $$ Calendar candidate = getCandidateStartTime(myCurrent)-->Line_41 $$ candidate = getCandidateStartTime(candidate)[ FD ]
Line_10 $$ Calendar myCurrent = (Calendar) current.clone()-->Line_16 $$ myCurrent.setFirstDayOfWeek(dtStart.getFirstDayOfWeek())[ FD ]
