Line_2 $$ public List<Info> getThreadInfo() -->Line_8 $$ return Ordering.from(byName()).sortedCopy(builder.build())[ CD ]
Line_2 $$ public List<Info> getThreadInfo() -->Line_3 $$ ThreadMXBean mbean = ManagementFactory.getThreadMXBean()[ CD ]
Line_3 $$ ThreadMXBean mbean = ManagementFactory.getThreadMXBean()-->Line_5 $$ for (ThreadInfo info : mbean.getThreadInfo(mbean.getAllThreadIds(), Integer.MAX_VALUE)) [ FD ]
Line_4 $$ ImmutableList.Builder<Info> builder = ImmutableList.builder()-->Line_8 $$ return Ordering.from(byName()).sortedCopy(builder.build())[ FD ]
Line_4 $$ ImmutableList.Builder<Info> builder = ImmutableList.builder()-->Line_6 $$ builder.add(new Info(info.getThreadId(), info.getThreadName(), info.getThreadState().name(), info.getLockOwnerId() == -1 ? null : info.getLockOwnerId(), toStackTrace(info.getStackTrace())))[ FD ]
Line_5 $$ for (ThreadInfo info : mbean.getThreadInfo(mbean.getAllThreadIds(), Integer.MAX_VALUE)) -->Line_6 $$ builder.add(new Info(info.getThreadId(), info.getThreadName(), info.getThreadState().name(), info.getLockOwnerId() == -1 ? null : info.getLockOwnerId(), toStackTrace(info.getStackTrace())))[ FD ]
Line_2 $$ public List<Info> getThreadInfo() -->Line_4 $$ ImmutableList.Builder<Info> builder = ImmutableList.builder()[ CD ]
