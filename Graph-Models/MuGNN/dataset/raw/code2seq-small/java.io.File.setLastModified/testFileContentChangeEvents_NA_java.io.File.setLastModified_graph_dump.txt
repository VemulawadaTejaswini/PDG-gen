Line_4 $$ long stamp = file.lastModified()-->Line_24 $$ assertTrue(file.setLastModified(stamp))[ FD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_21 $$ vFile.refresh(false, false)[ CD ]
Line_12 $$ if (event instanceof VFileContentChangeEvent && vFile.equals(event.getFile())) -->Line_13 $$ updated[0]++[ CD ]
Line_8 $$ MessageBusConnection connection = ApplicationManager.getApplication().getMessageBus().connect(getTestRootDisposable())-->Line_9 $$ connection.subscribe(VirtualFileManager.VFS_CHANGES, new BulkFileListener.Adapter() [ FD ]
Line_3 $$ File file = IoTestUtil.createTestFile("file.txt")-->Line_20 $$ assertTrue(file.setLastModified(stamp))[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByIoFile(file)-->Line_25 $$ vFile.refresh(false, false)[ FD ]
Line_11 $$ for (VFileEvent event : events) -->Line_12 $$ if (event instanceof VFileContentChangeEvent && vFile.equals(event.getFile())) [ FD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_9 $$ connection.subscribe(VirtualFileManager.VFS_CHANGES, new BulkFileListener.Adapter() [ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_7 $$ int[] updated = [ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_25 $$ vFile.refresh(false, false)[ CD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByIoFile(file)-->Line_12 $$ if (event instanceof VFileContentChangeEvent && vFile.equals(event.getFile())) [ FD ]
Line_3 $$ File file = IoTestUtil.createTestFile("file.txt")-->Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByIoFile(file)[ FD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_8 $$ MessageBusConnection connection = ApplicationManager.getApplication().getMessageBus().connect(getTestRootDisposable())[ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_4 $$ long stamp = file.lastModified()[ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_23 $$ FileUtil.writeToFile(file, "more content")[ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_24 $$ assertTrue(file.setLastModified(stamp))[ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_19 $$ FileUtil.writeToFile(file, "content")[ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_3 $$ File file = IoTestUtil.createTestFile("file.txt")[ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_20 $$ assertTrue(file.setLastModified(stamp))[ CD ]
Line_3 $$ File file = IoTestUtil.createTestFile("file.txt")-->Line_4 $$ long stamp = file.lastModified()[ FD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_22 $$ assertEquals(1, updated[0])[ CD ]
Line_3 $$ File file = IoTestUtil.createTestFile("file.txt")-->Line_19 $$ FileUtil.writeToFile(file, "content")[ FD ]
Line_3 $$ File file = IoTestUtil.createTestFile("file.txt")-->Line_24 $$ assertTrue(file.setLastModified(stamp))[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByIoFile(file)-->Line_21 $$ vFile.refresh(false, false)[ FD ]
Line_4 $$ long stamp = file.lastModified()-->Line_20 $$ assertTrue(file.setLastModified(stamp))[ FD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_6 $$ assertNotNull(vFile)[ CD ]
Line_3 $$ File file = IoTestUtil.createTestFile("file.txt")-->Line_23 $$ FileUtil.writeToFile(file, "more content")[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByIoFile(file)-->Line_6 $$ assertNotNull(vFile)[ FD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByIoFile(file)[ CD ]
Line_2 $$ public void testFileContentChangeEvents() throws IOException -->Line_26 $$ assertEquals(2, updated[0])[ CD ]
