Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_14 $$ myCurrentEvent.setOrgPoint(dge.getDragOrigin())[ CD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_5 $$ if (source == null || !MouseDragHelper.checkModifiers(dge.getTriggerEvent()))[ FD ]
Line_12 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())-->Line_13 $$ myCurrentEvent = new DnDEventImpl(DnDManagerImpl.this, action, dnDDragStartBean.getAttachedObject(), dnDDragStartBean.getPoint())[ FD ]
Line_16 $$ if (pair == null) -->Line_17 $$ pair = Pair.create(EMPTY_IMAGE, new Point(0, 0))[ CD ]
Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())-->Line_12 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())[ FD ]
Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())-->Line_17 $$ pair = Pair.create(EMPTY_IMAGE, new Point(0, 0))[ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_22 $$ dge.startDrag(DragSource.DefaultCopyDrop, pair.first, pair.second, myCurrentEvent, new MyDragSourceListener(source))[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ CD ]
Line_4 $$ final DnDSource source = getSource(dge.getComponent())-->Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) -->Line_9 $$ if (myCurrentEvent == null) [ CD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_19 $$ if (!DragSource.isDragImageSupported()) [ CD ]
Line_4 $$ final DnDSource source = getSource(dge.getComponent())-->Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) [ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_4 $$ final DnDSource source = getSource(dge.getComponent())[ FD ]
Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())-->Line_16 $$ if (pair == null) [ FD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) [ FD ]
Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())-->Line_8 $$ if (source.canStartDragging(action, dge.getDragOrigin())) [ FD ]
Line_4 $$ final DnDSource source = getSource(dge.getComponent())-->Line_12 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ FD ]
Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())-->Line_20 $$ myCurrentEvent.putUserData(DRAGGED_IMAGE_KEY, pair)[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_11 $$ hideCurrentHighlighter()[ CD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_10 $$ LOG.debug("Starting dragging for " + action)[ CD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_12 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ CD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_14 $$ myCurrentEvent.setOrgPoint(dge.getDragOrigin())[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_22 $$ dge.startDrag(DragSource.DefaultCopyDrop, pair.first, pair.second, myCurrentEvent, new MyDragSourceListener(source))[ CD ]
Line_5 $$ if (source == null || !MouseDragHelper.checkModifiers(dge.getTriggerEvent()))-->Line_6 $$ return[ CD ]
Line_17 $$ pair = Pair.create(EMPTY_IMAGE, new Point(0, 0))-->Line_20 $$ myCurrentEvent.putUserData(DRAGGED_IMAGE_KEY, pair)[ FD ]
Line_9 $$ if (myCurrentEvent == null) -->Line_16 $$ if (pair == null) [ CD ]
Line_2 $$ public void dragGestureRecognized(DragGestureEvent dge) -->Line_12 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())[ FD ]
Line_19 $$ if (!DragSource.isDragImageSupported()) -->Line_20 $$ myCurrentEvent.putUserData(DRAGGED_IMAGE_KEY, pair)[ CD ]
Line_12 $$ final DnDDragStartBean dnDDragStartBean = source.startDragging(action, dge.getDragOrigin())-->Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
Line_7 $$ DnDAction action = getDnDActionForPlatformAction(dge.getDragAction())-->Line_15 $$ Pair<Image, Point> pair = dnDDragStartBean.isEmpty() ? null : source.createDraggedImage(action, dge.getDragOrigin())[ FD ]
