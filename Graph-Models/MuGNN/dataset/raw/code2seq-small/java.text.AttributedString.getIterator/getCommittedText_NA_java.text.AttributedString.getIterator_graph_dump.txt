Line_10 $$ if (beginIndex < composedStartIndex) -->Line_11 $$ if (endIndex <= composedStartIndex) [ CD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_3 $$ int composedStartIndex = 0[ CD ]
Line_9 $$ String committed-->Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)[ FD ]
Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)-->Line_18 $$ committed = getText(beginIndex + composedEndIndex - composedStartIndex, endIndex - beginIndex)[ FD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_4 $$ int composedEndIndex = 0[ CD ]
Line_9 $$ String committed-->Line_18 $$ committed = getText(beginIndex + composedEndIndex - composedStartIndex, endIndex - beginIndex)[ FD ]
Line_11 $$ if (endIndex <= composedStartIndex) -->Line_12 $$ committed = getText(beginIndex, endIndex - beginIndex)[ CD ]
Line_9 $$ String committed-->Line_12 $$ committed = getText(beginIndex, endIndex - beginIndex)[ FD ]
Line_14 $$ int firstPartLength = composedStartIndex - beginIndex-->Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)[ FD ]
Line_3 $$ int composedStartIndex = 0-->Line_6 $$ composedStartIndex = composedTextRange.getStartOffset()[ FD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_20 $$ return new AttributedString(committed).getIterator()[ CD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_12 $$ committed = getText(beginIndex, endIndex - beginIndex)[ FD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_10 $$ if (beginIndex < composedStartIndex) [ FD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)[ FD ]
Line_12 $$ committed = getText(beginIndex, endIndex - beginIndex)-->Line_18 $$ committed = getText(beginIndex + composedEndIndex - composedStartIndex, endIndex - beginIndex)[ FD ]
Line_3 $$ int composedStartIndex = 0-->Line_10 $$ if (beginIndex < composedStartIndex) [ FD ]
Line_12 $$ committed = getText(beginIndex, endIndex - beginIndex)-->Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)[ FD ]
Line_4 $$ int composedEndIndex = 0-->Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)[ FD ]
Line_11 $$ if (endIndex <= composedStartIndex) -->Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)[ CD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_9 $$ String committed[ CD ]
Line_6 $$ composedStartIndex = composedTextRange.getStartOffset()-->Line_11 $$ if (endIndex <= composedStartIndex) [ FD ]
Line_3 $$ int composedStartIndex = 0-->Line_11 $$ if (endIndex <= composedStartIndex) [ FD ]
Line_6 $$ composedStartIndex = composedTextRange.getStartOffset()-->Line_10 $$ if (beginIndex < composedStartIndex) [ FD ]
Line_4 $$ int composedEndIndex = 0-->Line_7 $$ composedEndIndex = composedTextRange.getEndOffset()[ FD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_10 $$ if (beginIndex < composedStartIndex) [ CD ]
Line_5 $$ if (composedText != null) -->Line_6 $$ composedStartIndex = composedTextRange.getStartOffset()[ CD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_5 $$ if (composedText != null) [ CD ]
Line_11 $$ if (endIndex <= composedStartIndex) -->Line_14 $$ int firstPartLength = composedStartIndex - beginIndex[ CD ]
Line_10 $$ if (beginIndex < composedStartIndex) -->Line_18 $$ committed = getText(beginIndex + composedEndIndex - composedStartIndex, endIndex - beginIndex)[ CD ]
Line_2 $$ public AttributedCharacterIterator getCommittedText(int beginIndex, int endIndex, AttributedCharacterIterator.Attribute[] attributes) -->Line_11 $$ if (endIndex <= composedStartIndex) [ FD ]
Line_5 $$ if (composedText != null) -->Line_7 $$ composedEndIndex = composedTextRange.getEndOffset()[ CD ]
Line_7 $$ composedEndIndex = composedTextRange.getEndOffset()-->Line_15 $$ committed = getText(beginIndex, firstPartLength) + getText(composedEndIndex, endIndex - beginIndex - firstPartLength)[ FD ]
