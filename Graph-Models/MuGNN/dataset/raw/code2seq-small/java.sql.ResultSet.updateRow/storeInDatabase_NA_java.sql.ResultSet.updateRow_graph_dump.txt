Line_13 $$ resultSet = preparedStatement.executeQuery()-->Line_16 $$ resultSet.updateRow()[ FD ]
Line_14 $$ if (resultSet.next()) -->Line_20 $$ preparedStatement.setString(2, outputStream.toString())[ CD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_20 $$ preparedStatement.setString(2, outputStream.toString())[ FD ]
Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")-->Line_20 $$ preparedStatement.setString(2, outputStream.toString())[ FD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_13 $$ resultSet = preparedStatement.executeQuery()[ FD ]
Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")-->Line_27 $$ cleanUp(connection, preparedStatement, resultSet)[ FD ]
Line_14 $$ if (resultSet.next()) -->Line_21 $$ preparedStatement.executeUpdate()[ CD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_4 $$ ConfigurationHandler.write(outputStream, dictionary)[ CD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_7 $$ ResultSet resultSet = null[ CD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_5 $$ Connection connection = null[ CD ]
Line_7 $$ ResultSet resultSet = null-->Line_13 $$ resultSet = preparedStatement.executeQuery()[ FD ]
Line_9 $$ connection = _dataSource.getConnection()-->Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)[ FD ]
Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)-->Line_19 $$ preparedStatement.setString(1, pid)[ FD ]
Line_7 $$ ResultSet resultSet = null-->Line_15 $$ resultSet.updateString(2, outputStream.toString())[ FD ]
Line_7 $$ ResultSet resultSet = null-->Line_27 $$ cleanUp(connection, preparedStatement, resultSet)[ FD ]
Line_14 $$ if (resultSet.next()) -->Line_15 $$ resultSet.updateString(2, outputStream.toString())[ CD ]
Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)-->Line_27 $$ cleanUp(connection, preparedStatement, resultSet)[ FD ]
Line_7 $$ ResultSet resultSet = null-->Line_14 $$ if (resultSet.next()) [ FD ]
Line_13 $$ resultSet = preparedStatement.executeQuery()-->Line_15 $$ resultSet.updateString(2, outputStream.toString())[ FD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_6 $$ PreparedStatement preparedStatement = null[ CD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_21 $$ preparedStatement.executeUpdate()[ FD ]
Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)-->Line_20 $$ preparedStatement.setString(2, outputStream.toString())[ FD ]
Line_13 $$ resultSet = preparedStatement.executeQuery()-->Line_14 $$ if (resultSet.next()) [ FD ]
Line_5 $$ Connection connection = null-->Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)[ FD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_4 $$ ConfigurationHandler.write(outputStream, dictionary)[ FD ]
Line_3 $$ UnsyncByteArrayOutputStream outputStream = new UnsyncByteArrayOutputStream()-->Line_15 $$ resultSet.updateString(2, outputStream.toString())[ FD ]
Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)-->Line_13 $$ resultSet = preparedStatement.executeQuery()[ FD ]
Line_14 $$ if (resultSet.next()) -->Line_16 $$ resultSet.updateRow()[ CD ]
Line_14 $$ if (resultSet.next()) -->Line_19 $$ preparedStatement.setString(1, pid)[ CD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_19 $$ preparedStatement.setString(1, pid)[ FD ]
Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")-->Line_21 $$ preparedStatement.executeUpdate()[ FD ]
Line_3 $$ UnsyncByteArrayOutputStream outputStream = new UnsyncByteArrayOutputStream()-->Line_28 $$ outputStream.close()[ FD ]
Line_9 $$ connection = _dataSource.getConnection()-->Line_10 $$ connection.setAutoCommit(false)[ FD ]
Line_5 $$ Connection connection = null-->Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")[ FD ]
Line_9 $$ connection = _dataSource.getConnection()-->Line_23 $$ connection.commit()[ FD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_27 $$ cleanUp(connection, preparedStatement, resultSet)[ FD ]
Line_9 $$ connection = _dataSource.getConnection()-->Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")[ FD ]
Line_5 $$ Connection connection = null-->Line_9 $$ connection = _dataSource.getConnection()[ FD ]
Line_14 $$ if (resultSet.next()) -->Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")[ CD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_12 $$ preparedStatement.setString(1, pid)[ FD ]
Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)-->Line_21 $$ preparedStatement.executeUpdate()[ FD ]
Line_5 $$ Connection connection = null-->Line_23 $$ connection.commit()[ FD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_3 $$ UnsyncByteArrayOutputStream outputStream = new UnsyncByteArrayOutputStream()[ CD ]
Line_3 $$ UnsyncByteArrayOutputStream outputStream = new UnsyncByteArrayOutputStream()-->Line_4 $$ ConfigurationHandler.write(outputStream, dictionary)[ FD ]
Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)-->Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")[ FD ]
Line_13 $$ resultSet = preparedStatement.executeQuery()-->Line_27 $$ cleanUp(connection, preparedStatement, resultSet)[ FD ]
Line_5 $$ Connection connection = null-->Line_10 $$ connection.setAutoCommit(false)[ FD ]
Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)-->Line_12 $$ preparedStatement.setString(1, pid)[ FD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_19 $$ preparedStatement.setString(1, pid)[ FD ]
Line_5 $$ Connection connection = null-->Line_27 $$ cleanUp(connection, preparedStatement, resultSet)[ FD ]
Line_7 $$ ResultSet resultSet = null-->Line_16 $$ resultSet.updateRow()[ FD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_11 $$ preparedStatement = connection.prepareStatement(buildSQL("select configurationId, dictionary from Configuration_ " + "where configurationId = ?"), ResultSet.TYPE_FORWARD_ONLY, ResultSet.CONCUR_UPDATABLE)[ FD ]
Line_3 $$ UnsyncByteArrayOutputStream outputStream = new UnsyncByteArrayOutputStream()-->Line_20 $$ preparedStatement.setString(2, outputStream.toString())[ FD ]
Line_6 $$ PreparedStatement preparedStatement = null-->Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")[ FD ]
Line_2 $$ protected void storeInDatabase(String pid, Dictionary<?, ?> dictionary) throws IOException -->Line_12 $$ preparedStatement.setString(1, pid)[ FD ]
Line_18 $$ preparedStatement = prepareStatement(connection, "insert into Configuration_ (configurationId, " + "dictionary) values (?, ?)")-->Line_19 $$ preparedStatement.setString(1, pid)[ FD ]
Line_9 $$ connection = _dataSource.getConnection()-->Line_27 $$ cleanUp(connection, preparedStatement, resultSet)[ FD ]
