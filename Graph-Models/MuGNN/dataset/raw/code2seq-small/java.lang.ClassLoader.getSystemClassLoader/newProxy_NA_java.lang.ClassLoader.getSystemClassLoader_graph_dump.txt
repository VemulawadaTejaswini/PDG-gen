Line_3 $$ ClassLoader classLoader = interfaceClass.getClassLoader()-->Line_4 $$ if (classLoader == null) [ FD ]
Line_2 $$ public static <T> T newProxy(ObjectName objectName, Class<T> interfaceClass, ProcessCallableExecutor processCallableExecutor) -->Line_3 $$ ClassLoader classLoader = interfaceClass.getClassLoader()[ CD ]
Line_2 $$ public static <T> T newProxy(ObjectName objectName, Class<T> interfaceClass, ProcessCallableExecutor processCallableExecutor) -->Line_7 $$ return (T) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] [ CD ]
Line_3 $$ ClassLoader classLoader = interfaceClass.getClassLoader()-->Line_5 $$ classLoader = ClassLoader.getSystemClassLoader()[ FD ]
Line_5 $$ classLoader = ClassLoader.getSystemClassLoader()-->Line_7 $$ return (T) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] [ FD ]
Line_4 $$ if (classLoader == null) -->Line_5 $$ classLoader = ClassLoader.getSystemClassLoader()[ CD ]
Line_2 $$ public static <T> T newProxy(ObjectName objectName, Class<T> interfaceClass, ProcessCallableExecutor processCallableExecutor) -->Line_3 $$ ClassLoader classLoader = interfaceClass.getClassLoader()[ FD ]
Line_2 $$ public static <T> T newProxy(ObjectName objectName, Class<T> interfaceClass, ProcessCallableExecutor processCallableExecutor) -->Line_4 $$ if (classLoader == null) [ CD ]
Line_3 $$ ClassLoader classLoader = interfaceClass.getClassLoader()-->Line_7 $$ return (T) ProxyUtil.newProxyInstance(classLoader, new Class<?>[] [ FD ]
