Line_41 $$ if (logger.isDebugEnabled()) -->Line_42 $$ logger.debug("Cannot introspect jar files in parent ClassLoader since [" + classLoader + "] does not support 'getParent()': " + ex)[ CD ]
Line_20 $$ if (logger.isDebugEnabled()) -->Line_21 $$ logger.debug("Cannot search for matching files underneath [" + url + "] because it cannot be converted to a valid 'jar:' URL: " + ex.getMessage())[ CD ]
Line_15 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + url.toString() + ResourceUtils.JAR_URL_SEPARATOR)-->Line_17 $$ result.add(jarResource)[ FD ]
Line_16 $$ if (jarResource.exists()) -->Line_17 $$ result.add(jarResource)[ CD ]
Line_15 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + url.toString() + ResourceUtils.JAR_URL_SEPARATOR)-->Line_16 $$ if (jarResource.exists()) [ FD ]
Line_12 $$ for (URL url : ((URLClassLoader) classLoader).getURLs()) -->Line_15 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + url.toString() + ResourceUtils.JAR_URL_SEPARATOR)[ FD ]
Line_27 $$ if (logger.isDebugEnabled()) -->Line_28 $$ logger.debug("Cannot introspect jar files since ClassLoader [" + classLoader + "] does not support 'getURLs()': " + ex)[ CD ]
Line_12 $$ for (URL url : ((URLClassLoader) classLoader).getURLs()) -->Line_13 $$ if (ResourceUtils.isJarFileURL(url)) [ FD ]
