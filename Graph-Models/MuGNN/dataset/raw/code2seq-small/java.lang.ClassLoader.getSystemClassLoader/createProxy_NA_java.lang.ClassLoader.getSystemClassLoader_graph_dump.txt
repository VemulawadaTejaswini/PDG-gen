Line_2 $$ public Object createProxy(Errors errors, Class<?> expectedType) throws ErrorsException -->Line_13 $$ invocationHandlers.add(invocationHandler)[ CD ]
Line_2 $$ public Object createProxy(Errors errors, Class<?> expectedType) throws ErrorsException -->Line_12 $$ DelegatingInvocationHandler<T> invocationHandler = new DelegatingInvocationHandler()[ CD ]
Line_2 $$ public Object createProxy(Errors errors, Class<?> expectedType) throws ErrorsException -->Line_7 $$ throw errors.cannotSatisfyCircularDependency(expectedType).toException()[ FD ]
Line_2 $$ public Object createProxy(Errors errors, Class<?> expectedType) throws ErrorsException -->Line_17 $$ return expectedType.cast(Proxy.newProxyInstance(classLoader, new Class[] [ FD ]
Line_12 $$ DelegatingInvocationHandler<T> invocationHandler = new DelegatingInvocationHandler()-->Line_17 $$ return expectedType.cast(Proxy.newProxyInstance(classLoader, new Class[] [ FD ]
Line_2 $$ public Object createProxy(Errors errors, Class<?> expectedType) throws ErrorsException -->Line_17 $$ return expectedType.cast(Proxy.newProxyInstance(classLoader, new Class[] [ CD ]
Line_2 $$ public Object createProxy(Errors errors, Class<?> expectedType) throws ErrorsException -->Line_9 $$ if (invocationHandlers == null) [ CD ]
Line_12 $$ DelegatingInvocationHandler<T> invocationHandler = new DelegatingInvocationHandler()-->Line_13 $$ invocationHandlers.add(invocationHandler)[ FD ]
