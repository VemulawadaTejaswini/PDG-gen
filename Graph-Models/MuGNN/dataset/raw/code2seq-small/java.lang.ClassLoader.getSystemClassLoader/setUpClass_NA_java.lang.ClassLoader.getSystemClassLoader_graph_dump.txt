Line_5 $$ paclField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] -->Line_7 $$ String methodName = method.getName()[ FD ]
Line_2 $$ public static void setUpClass() throws Exception -->Line_27 $$ propsField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] [ CD ]
Line_5 $$ paclField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] -->Line_7 $$ String methodName = method.getName()[ CD ]
Line_8 $$ if (!methodName.equals("getDataSource")) -->Line_9 $$ return "test"[ CD ]
Line_5 $$ paclField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] -->Line_11 $$ return ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] [ CD ]
Line_11 $$ return ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] -->Line_13 $$ return null[ CD ]
Line_3 $$ Field paclField = ReflectionUtil.getDeclaredField(DataAccess.class, "_pacl")-->Line_5 $$ paclField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] [ FD ]
Line_2 $$ public static void setUpClass() throws Exception -->Line_18 $$ Field portalField = ReflectionUtil.getDeclaredField(PortalUtil.class, "_portal")[ CD ]
Line_20 $$ portalField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] -->Line_22 $$ return "test"[ CD ]
Line_2 $$ public static void setUpClass() throws Exception -->Line_5 $$ paclField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] [ CD ]
Line_2 $$ public static void setUpClass() throws Exception -->Line_3 $$ Field paclField = ReflectionUtil.getDeclaredField(DataAccess.class, "_pacl")[ CD ]
Line_2 $$ public static void setUpClass() throws Exception -->Line_20 $$ portalField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] [ CD ]
Line_2 $$ public static void setUpClass() throws Exception -->Line_25 $$ Field propsField = ReflectionUtil.getDeclaredField(PropsUtil.class, "_props")[ CD ]
Line_5 $$ paclField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] -->Line_8 $$ if (!methodName.equals("getDataSource")) [ CD ]
Line_27 $$ propsField.set(null, ProxyUtil.newProxyInstance(ClassLoader.getSystemClassLoader(), new Class<?>[] -->Line_29 $$ return "test"[ CD ]
Line_3 $$ Field paclField = ReflectionUtil.getDeclaredField(DataAccess.class, "_pacl")-->Line_4 $$ _pacl = (DataAccess.PACL) paclField.get(null)[ FD ]
Line_7 $$ String methodName = method.getName()-->Line_8 $$ if (!methodName.equals("getDataSource")) [ FD ]
