Line_2 $$ public void testCancelInner() throws Exception -->Line_7 $$ Assert.assertTrue(_futureTask.isCancelled())[ CD ]
Line_2 $$ public void testCancelInner() throws Exception -->Line_4 $$ Assert.assertFalse(future.isCancelled())[ CD ]
Line_3 $$ Future<Object> future = new NopFutureConverter(_futureTask)-->Line_5 $$ Assert.assertFalse(future.isDone())[ FD ]
Line_3 $$ Future<Object> future = new NopFutureConverter(_futureTask)-->Line_9 $$ Assert.assertTrue(future.isCancelled())[ FD ]
Line_3 $$ Future<Object> future = new NopFutureConverter(_futureTask)-->Line_10 $$ Assert.assertTrue(future.isDone())[ FD ]
Line_3 $$ Future<Object> future = new NopFutureConverter(_futureTask)-->Line_12 $$ future.get()[ FD ]
Line_2 $$ public void testCancelInner() throws Exception -->Line_9 $$ Assert.assertTrue(future.isCancelled())[ CD ]
Line_2 $$ public void testCancelInner() throws Exception -->Line_8 $$ Assert.assertTrue(_futureTask.isDone())[ CD ]
Line_2 $$ public void testCancelInner() throws Exception -->Line_6 $$ _futureTask.cancel(true)[ CD ]
Line_3 $$ Future<Object> future = new NopFutureConverter(_futureTask)-->Line_17 $$ future.get(1, TimeUnit.SECONDS)[ FD ]
Line_2 $$ public void testCancelInner() throws Exception -->Line_3 $$ Future<Object> future = new NopFutureConverter(_futureTask)[ CD ]
Line_2 $$ public void testCancelInner() throws Exception -->Line_5 $$ Assert.assertFalse(future.isDone())[ CD ]
Line_3 $$ Future<Object> future = new NopFutureConverter(_futureTask)-->Line_4 $$ Assert.assertFalse(future.isCancelled())[ FD ]
Line_2 $$ public void testCancelInner() throws Exception -->Line_10 $$ Assert.assertTrue(future.isDone())[ CD ]
