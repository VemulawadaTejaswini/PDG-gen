Line_2 $$ private static Map.Entry<Integer, Long> getMode(int... src) -->Line_3 $$ return Arrays.stream(src).mapToObj(Integer::<>valueOf).collect(groupingBy( i -> i, counting())).entrySet().stream().max(( e1,  e2) -> e1.getValue().compareTo(e2.getValue())).flatMap( e -> Optional.of(new AbstractMap.SimpleImmutableEntry(Integer.valueOf(e.getKey().intValue()), Long.valueOf(e.getValue().longValue())))).get()[ FD ]
Line_2 $$ private static Map.Entry<Integer, Long> getMode(int... src) -->Line_3 $$ return Arrays.stream(src).mapToObj(Integer::<>valueOf).collect(groupingBy( i -> i, counting())).entrySet().stream().max(( e1,  e2) -> e1.getValue().compareTo(e2.getValue())).flatMap( e -> Optional.of(new AbstractMap.SimpleImmutableEntry(Integer.valueOf(e.getKey().intValue()), Long.valueOf(e.getValue().longValue())))).get()[ CD ]
