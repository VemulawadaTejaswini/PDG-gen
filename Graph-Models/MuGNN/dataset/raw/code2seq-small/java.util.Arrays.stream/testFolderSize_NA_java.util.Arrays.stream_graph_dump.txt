Line_2 $$ public void testFolderSize() throws Exception -->Line_5 $$ File childFolder = createFolder(Paths.get(folder.getPath(), "child"))[ CD ]
Line_2 $$ public void testFolderSize() throws Exception -->Line_10 $$ assertEquals(Arrays.stream(files).mapToLong( f -> f.length()).sum(), size)[ CD ]
Line_6 $$ File[] files = -->Line_10 $$ assertEquals(Arrays.stream(files).mapToLong( f -> f.length()).sum(), size)[ FD ]
Line_3 $$ File folder = createFolder(Paths.get(DatabaseDescriptor.getAllDataFileLocations()[0], "testFolderSize"))-->Line_5 $$ File childFolder = createFolder(Paths.get(folder.getPath(), "child"))[ FD ]
Line_3 $$ File folder = createFolder(Paths.get(DatabaseDescriptor.getAllDataFileLocations()[0], "testFolderSize"))-->Line_4 $$ folder.deleteOnExit()[ FD ]
Line_2 $$ public void testFolderSize() throws Exception -->Line_9 $$ long size = FileUtils.folderSize(folder)[ CD ]
Line_3 $$ File folder = createFolder(Paths.get(DatabaseDescriptor.getAllDataFileLocations()[0], "testFolderSize"))-->Line_9 $$ long size = FileUtils.folderSize(folder)[ FD ]
Line_2 $$ public void testFolderSize() throws Exception -->Line_3 $$ File folder = createFolder(Paths.get(DatabaseDescriptor.getAllDataFileLocations()[0], "testFolderSize"))[ CD ]
Line_2 $$ public void testFolderSize() throws Exception -->Line_6 $$ File[] files = [ CD ]
Line_2 $$ public void testFolderSize() throws Exception -->Line_8 $$ assertEquals(files[0].length(), FileUtils.folderSize(files[0]))[ CD ]
Line_9 $$ long size = FileUtils.folderSize(folder)-->Line_10 $$ assertEquals(Arrays.stream(files).mapToLong( f -> f.length()).sum(), size)[ FD ]
Line_2 $$ public void testFolderSize() throws Exception -->Line_4 $$ folder.deleteOnExit()[ CD ]
Line_2 $$ public void testFolderSize() throws Exception -->Line_7 $$ assertEquals(0, FileUtils.folderSize(new File(folder, "i_dont_exist")))[ CD ]
