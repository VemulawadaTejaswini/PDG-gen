Line_4 $$ if (classLoader == null) -->Line_5 $$ return ref[ CD ]
Line_3 $$ final ClassLoader classLoader = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()-->Line_4 $$ if (classLoader == null) [ FD ]
Line_7 $$ final String factoriesProp = (String) environment.get(Context.OBJECT_FACTORIES)-->Line_8 $$ if (factoriesProp != null) [ FD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_7 $$ final String factoriesProp = (String) environment.get(Context.OBJECT_FACTORIES)[ CD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_3 $$ final ClassLoader classLoader = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()[ CD ]
Line_15 $$ if (objectFactory instanceof DirObjectFactory) -->Line_16 $$ result = DirObjectFactory.class.cast(objectFactory).getObjectInstance(ref, name, nameCtx, environment, attributes)[ CD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_7 $$ final String factoriesProp = (String) environment.get(Context.OBJECT_FACTORIES)[ FD ]
Line_13 $$ final ObjectFactory objectFactory = ObjectFactory.class.cast(factoryClass.newInstance())-->Line_18 $$ result = objectFactory.getObjectInstance(ref, name, nameCtx, environment)[ FD ]
Line_10 $$ for (String className : classes) -->Line_12 $$ final Class<?> factoryClass = classLoader.loadClass(className)[ FD ]
Line_16 $$ result = DirObjectFactory.class.cast(objectFactory).getObjectInstance(ref, name, nameCtx, environment, attributes)-->Line_20 $$ if (result != null) [ FD ]
Line_13 $$ final ObjectFactory objectFactory = ObjectFactory.class.cast(factoryClass.newInstance())-->Line_15 $$ if (objectFactory instanceof DirObjectFactory) [ FD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_4 $$ if (classLoader == null) [ CD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_18 $$ result = objectFactory.getObjectInstance(ref, name, nameCtx, environment)[ FD ]
Line_18 $$ result = objectFactory.getObjectInstance(ref, name, nameCtx, environment)-->Line_20 $$ if (result != null) [ FD ]
Line_20 $$ if (result != null) -->Line_21 $$ return result[ CD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_27 $$ return ref[ CD ]
Line_12 $$ final Class<?> factoryClass = classLoader.loadClass(className)-->Line_13 $$ final ObjectFactory objectFactory = ObjectFactory.class.cast(factoryClass.newInstance())[ FD ]
Line_8 $$ if (factoriesProp != null) -->Line_9 $$ final String[] classes = factoriesProp.split(":")[ CD ]
Line_14 $$ final Object result-->Line_16 $$ result = DirObjectFactory.class.cast(objectFactory).getObjectInstance(ref, name, nameCtx, environment, attributes)[ FD ]
Line_15 $$ if (objectFactory instanceof DirObjectFactory) -->Line_18 $$ result = objectFactory.getObjectInstance(ref, name, nameCtx, environment)[ CD ]
Line_14 $$ final Object result-->Line_18 $$ result = objectFactory.getObjectInstance(ref, name, nameCtx, environment)[ FD ]
Line_16 $$ result = DirObjectFactory.class.cast(objectFactory).getObjectInstance(ref, name, nameCtx, environment, attributes)-->Line_18 $$ result = objectFactory.getObjectInstance(ref, name, nameCtx, environment)[ FD ]
Line_13 $$ final ObjectFactory objectFactory = ObjectFactory.class.cast(factoryClass.newInstance())-->Line_16 $$ result = DirObjectFactory.class.cast(objectFactory).getObjectInstance(ref, name, nameCtx, environment, attributes)[ FD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_8 $$ if (factoriesProp != null) [ CD ]
Line_2 $$ public Object getObjectInstance(final Object ref, final Name name, final Context nameCtx, final Hashtable<?, ?> environment, final Attributes attributes) throws Exception -->Line_16 $$ result = DirObjectFactory.class.cast(objectFactory).getObjectInstance(ref, name, nameCtx, environment, attributes)[ FD ]
Line_14 $$ final Object result-->Line_20 $$ if (result != null) [ FD ]
Line_3 $$ final ClassLoader classLoader = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()-->Line_12 $$ final Class<?> factoryClass = classLoader.loadClass(className)[ FD ]
Line_7 $$ final String factoriesProp = (String) environment.get(Context.OBJECT_FACTORIES)-->Line_9 $$ final String[] classes = factoriesProp.split(":")[ FD ]
