Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_34 $$ return null[ CD ]
Line_6 $$ fastClass = FastClass.create(clazz)-->Line_12 $$ final Object instance = fastClass.newInstance()[ FD ]
Line_7 $$ bulkAccessor = BulkAccessor.create(clazz, getterNames, setterNames, types)-->Line_13 $$ bulkAccessor.setPropertyValues(instance, bulkAccessor.getPropertyValues(instance))[ FD ]
Line_20 $$ int index = 0-->Line_24 $$ if (index >= 0) [ FD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_7 $$ bulkAccessor = BulkAccessor.create(clazz, getterNames, setterNames, types)[ FD ]
Line_6 $$ fastClass = FastClass.create(clazz)-->Line_9 $$ if (fastClass == null) [ FD ]
Line_21 $$ if (t instanceof BulkAccessorException) -->Line_22 $$ index = ((BulkAccessorException) t).getIndex()[ CD ]
Line_4 $$ BulkAccessor bulkAccessor-->Line_7 $$ bulkAccessor = BulkAccessor.create(clazz, getterNames, setterNames, types)[ FD ]
Line_31 $$ if (fastClass != null && bulkAccessor != null) -->Line_32 $$ return new ReflectionOptimizerImpl(new InstantiationOptimizerAdapter(fastClass), new AccessOptimizerAdapter(bulkAccessor, clazz))[ CD ]
Line_3 $$ FastClass fastClass-->Line_17 $$ fastClass = null[ FD ]
Line_4 $$ BulkAccessor bulkAccessor-->Line_18 $$ bulkAccessor = null[ FD ]
Line_9 $$ if (fastClass == null) -->Line_10 $$ bulkAccessor = null[ CD ]
Line_7 $$ bulkAccessor = BulkAccessor.create(clazz, getterNames, setterNames, types)-->Line_10 $$ bulkAccessor = null[ FD ]
Line_4 $$ BulkAccessor bulkAccessor-->Line_13 $$ bulkAccessor.setPropertyValues(instance, bulkAccessor.getPropertyValues(instance))[ FD ]
Line_4 $$ BulkAccessor bulkAccessor-->Line_10 $$ bulkAccessor = null[ FD ]
Line_19 $$ if (LOG.isDebugEnabled()) -->Line_24 $$ if (index >= 0) [ CD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_6 $$ fastClass = FastClass.create(clazz)[ FD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_3 $$ FastClass fastClass[ CD ]
Line_3 $$ FastClass fastClass-->Line_9 $$ if (fastClass == null) [ FD ]
Line_6 $$ fastClass = FastClass.create(clazz)-->Line_17 $$ fastClass = null[ FD ]
Line_24 $$ if (index >= 0) -->Line_27 $$ LOG.debugf("Reflection optimizer disabled for %s [%s: %s]", clazz.getName(), StringHelper.unqualify(t.getClass().getName()), t.getMessage())[ CD ]
Line_9 $$ if (fastClass == null) -->Line_13 $$ bulkAccessor.setPropertyValues(instance, bulkAccessor.getPropertyValues(instance))[ CD ]
Line_19 $$ if (LOG.isDebugEnabled()) -->Line_20 $$ int index = 0[ CD ]
Line_3 $$ FastClass fastClass-->Line_12 $$ final Object instance = fastClass.newInstance()[ FD ]
Line_8 $$ if (!clazz.isInterface() && !Modifier.isAbstract(clazz.getModifiers())) -->Line_9 $$ if (fastClass == null) [ CD ]
Line_22 $$ index = ((BulkAccessorException) t).getIndex()-->Line_24 $$ if (index >= 0) [ FD ]
Line_10 $$ bulkAccessor = null-->Line_18 $$ bulkAccessor = null[ FD ]
Line_9 $$ if (fastClass == null) -->Line_12 $$ final Object instance = fastClass.newInstance()[ CD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_4 $$ BulkAccessor bulkAccessor[ CD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_25 $$ LOG.debugf("Reflection optimizer disabled for %s [%s: %s (property %s)]", clazz.getName(), StringHelper.unqualify(t.getClass().getName()), t.getMessage(), setterNames[index])[ FD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_27 $$ LOG.debugf("Reflection optimizer disabled for %s [%s: %s]", clazz.getName(), StringHelper.unqualify(t.getClass().getName()), t.getMessage())[ FD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_8 $$ if (!clazz.isInterface() && !Modifier.isAbstract(clazz.getModifiers())) [ FD ]
Line_24 $$ if (index >= 0) -->Line_25 $$ LOG.debugf("Reflection optimizer disabled for %s [%s: %s (property %s)]", clazz.getName(), StringHelper.unqualify(t.getClass().getName()), t.getMessage(), setterNames[index])[ CD ]
Line_10 $$ bulkAccessor = null-->Line_13 $$ bulkAccessor.setPropertyValues(instance, bulkAccessor.getPropertyValues(instance))[ FD ]
Line_3 $$ FastClass fastClass-->Line_6 $$ fastClass = FastClass.create(clazz)[ FD ]
Line_2 $$ public ReflectionOptimizer getReflectionOptimizer(Class clazz, String[] getterNames, String[] setterNames, Class[] types) -->Line_31 $$ if (fastClass != null && bulkAccessor != null) [ CD ]
Line_7 $$ bulkAccessor = BulkAccessor.create(clazz, getterNames, setterNames, types)-->Line_18 $$ bulkAccessor = null[ FD ]
Line_20 $$ int index = 0-->Line_22 $$ index = ((BulkAccessorException) t).getIndex()[ FD ]
Line_19 $$ if (LOG.isDebugEnabled()) -->Line_21 $$ if (t instanceof BulkAccessorException) [ CD ]
Line_12 $$ final Object instance = fastClass.newInstance()-->Line_13 $$ bulkAccessor.setPropertyValues(instance, bulkAccessor.getPropertyValues(instance))[ FD ]
