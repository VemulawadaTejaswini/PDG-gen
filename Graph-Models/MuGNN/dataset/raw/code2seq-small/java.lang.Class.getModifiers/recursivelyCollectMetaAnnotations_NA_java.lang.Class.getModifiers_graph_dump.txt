Line_3 $$ String annotationName = annotation.annotationType().getName()-->Line_6 $$ this.attributesMap.add(annotationName, AnnotationUtils.getAnnotationAttributes(annotation, false, true))[ FD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_5 $$ if (Modifier.isPublic(annotation.annotationType().getModifiers())) [ FD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_8 $$ recursivelyCollectMetaAnnotations(visited, metaMetaAnnotation)[ FD ]
Line_5 $$ if (Modifier.isPublic(annotation.annotationType().getModifiers())) -->Line_6 $$ this.attributesMap.add(annotationName, AnnotationUtils.getAnnotationAttributes(annotation, false, true))[ CD ]
Line_4 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && visited.add(annotationName)) -->Line_5 $$ if (Modifier.isPublic(annotation.annotationType().getModifiers())) [ CD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_4 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && visited.add(annotationName)) [ FD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_7 $$ for (Annotation metaMetaAnnotation : annotation.annotationType().getAnnotations()) [ FD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_3 $$ String annotationName = annotation.annotationType().getName()[ CD ]
Line_7 $$ for (Annotation metaMetaAnnotation : annotation.annotationType().getAnnotations()) -->Line_8 $$ recursivelyCollectMetaAnnotations(visited, metaMetaAnnotation)[ FD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_6 $$ this.attributesMap.add(annotationName, AnnotationUtils.getAnnotationAttributes(annotation, false, true))[ FD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_3 $$ String annotationName = annotation.annotationType().getName()[ FD ]
Line_3 $$ String annotationName = annotation.annotationType().getName()-->Line_4 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && visited.add(annotationName)) [ FD ]
Line_2 $$ private void recursivelyCollectMetaAnnotations(Set<String> visited, Annotation annotation) -->Line_4 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && visited.add(annotationName)) [ CD ]
