Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_5 $$ if (testForExcluded && shouldExcludeTestClass(moduleName, testCaseClass))[ CD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_5 $$ if (testForExcluded && shouldExcludeTestClass(moduleName, testCaseClass))[ FD ]
Line_12 $$ if (Test.class.isAssignableFrom(suiteMethod.getReturnType()) && (suiteMethod.getModifiers() & Modifier.STATIC) != 0) -->Line_13 $$ return true[ CD ]
Line_3 $$ if ((testCaseClass.getModifiers() & Modifier.ABSTRACT) != 0)-->Line_4 $$ return false[ CD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_17 $$ return TestRunnerUtil.isJUnit4TestClass(testCaseClass)[ FD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_7 $$ if (TestCase.class.isAssignableFrom(testCaseClass) || TestSuite.class.isAssignableFrom(testCaseClass)) [ FD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_11 $$ final Method suiteMethod = testCaseClass.getMethod("suite")[ FD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_7 $$ if (TestCase.class.isAssignableFrom(testCaseClass) || TestSuite.class.isAssignableFrom(testCaseClass)) [ CD ]
Line_11 $$ final Method suiteMethod = testCaseClass.getMethod("suite")-->Line_12 $$ if (Test.class.isAssignableFrom(suiteMethod.getReturnType()) && (suiteMethod.getModifiers() & Modifier.STATIC) != 0) [ FD ]
Line_7 $$ if (TestCase.class.isAssignableFrom(testCaseClass) || TestSuite.class.isAssignableFrom(testCaseClass)) -->Line_8 $$ return true[ CD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_3 $$ if ((testCaseClass.getModifiers() & Modifier.ABSTRACT) != 0)[ CD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_17 $$ return TestRunnerUtil.isJUnit4TestClass(testCaseClass)[ CD ]
Line_5 $$ if (testForExcluded && shouldExcludeTestClass(moduleName, testCaseClass))-->Line_6 $$ return false[ CD ]
Line_2 $$ private boolean shouldAddTestCase(final Class<?> testCaseClass, String moduleName, boolean testForExcluded) -->Line_3 $$ if ((testCaseClass.getModifiers() & Modifier.ABSTRACT) != 0)[ FD ]
