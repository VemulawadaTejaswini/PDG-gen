Line_6 $$ Class<? extends Number> clazz = field.getNumericClass()-->Line_11 $$ if (clazz.equals(Long.class)) [ FD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_3 $$ if (!field.isNumeric()) [ FD ]
Line_7 $$ if (clazz.equals(Float.class)) -->Line_8 $$ return Float.valueOf(value)[ CD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_14 $$ return Short.valueOf(value)[ FD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_7 $$ if (clazz.equals(Float.class)) [ CD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_10 $$ return Integer.valueOf(value)[ FD ]
Line_6 $$ Class<? extends Number> clazz = field.getNumericClass()-->Line_13 $$ if (clazz.equals(Short.class)) [ FD ]
Line_11 $$ if (clazz.equals(Long.class)) -->Line_13 $$ if (clazz.equals(Short.class)) [ CD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_3 $$ if (!field.isNumeric()) [ CD ]
Line_9 $$ if (clazz.equals(Integer.class)) -->Line_11 $$ if (clazz.equals(Long.class)) [ CD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_6 $$ Class<? extends Number> clazz = field.getNumericClass()[ FD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_16 $$ return Double.valueOf(value)[ FD ]
Line_7 $$ if (clazz.equals(Float.class)) -->Line_9 $$ if (clazz.equals(Integer.class)) [ CD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_6 $$ Class<? extends Number> clazz = field.getNumericClass()[ CD ]
Line_13 $$ if (clazz.equals(Short.class)) -->Line_14 $$ return Short.valueOf(value)[ CD ]
Line_6 $$ Class<? extends Number> clazz = field.getNumericClass()-->Line_7 $$ if (clazz.equals(Float.class)) [ FD ]
Line_11 $$ if (clazz.equals(Long.class)) -->Line_12 $$ return Long.valueOf(value)[ CD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_8 $$ return Float.valueOf(value)[ FD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_12 $$ return Long.valueOf(value)[ FD ]
Line_3 $$ if (!field.isNumeric()) -->Line_4 $$ return value[ CD ]
Line_6 $$ Class<? extends Number> clazz = field.getNumericClass()-->Line_9 $$ if (clazz.equals(Integer.class)) [ FD ]
Line_9 $$ if (clazz.equals(Integer.class)) -->Line_10 $$ return Integer.valueOf(value)[ CD ]
Line_2 $$ protected Object translateValue(Field field, String value) -->Line_16 $$ return Double.valueOf(value)[ CD ]
