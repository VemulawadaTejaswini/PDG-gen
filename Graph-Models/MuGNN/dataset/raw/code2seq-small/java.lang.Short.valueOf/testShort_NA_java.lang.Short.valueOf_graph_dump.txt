Line_2 $$ public void testShort() -->Line_9 $$ assertEquals("3", initializer.getText())[ CD ]
Line_5 $$ PsiLiteralExpression initializer = (PsiLiteralExpression) field.getInitializer()-->Line_9 $$ assertEquals("3", initializer.getText())[ FD ]
Line_3 $$ PsiField field = myClass.findFieldByName("SHORT_CONST", false)-->Line_10 $$ assertEquals(Short.valueOf((short) 3), field.computeConstantValue())[ FD ]
Line_5 $$ PsiLiteralExpression initializer = (PsiLiteralExpression) field.getInitializer()-->Line_7 $$ assertEquals(PsiType.INT, initializer.getType())[ FD ]
Line_5 $$ PsiLiteralExpression initializer = (PsiLiteralExpression) field.getInitializer()-->Line_6 $$ assertNotNull(initializer)[ FD ]
Line_2 $$ public void testShort() -->Line_4 $$ assertNotNull(field)[ CD ]
Line_5 $$ PsiLiteralExpression initializer = (PsiLiteralExpression) field.getInitializer()-->Line_8 $$ assertEquals(Integer.valueOf(3), initializer.getValue())[ FD ]
Line_2 $$ public void testShort() -->Line_3 $$ PsiField field = myClass.findFieldByName("SHORT_CONST", false)[ CD ]
Line_2 $$ public void testShort() -->Line_7 $$ assertEquals(PsiType.INT, initializer.getType())[ CD ]
Line_2 $$ public void testShort() -->Line_8 $$ assertEquals(Integer.valueOf(3), initializer.getValue())[ CD ]
Line_2 $$ public void testShort() -->Line_10 $$ assertEquals(Short.valueOf((short) 3), field.computeConstantValue())[ CD ]
Line_3 $$ PsiField field = myClass.findFieldByName("SHORT_CONST", false)-->Line_5 $$ PsiLiteralExpression initializer = (PsiLiteralExpression) field.getInitializer()[ FD ]
Line_2 $$ public void testShort() -->Line_6 $$ assertNotNull(initializer)[ CD ]
Line_3 $$ PsiField field = myClass.findFieldByName("SHORT_CONST", false)-->Line_4 $$ assertNotNull(field)[ FD ]
Line_2 $$ public void testShort() -->Line_5 $$ PsiLiteralExpression initializer = (PsiLiteralExpression) field.getInitializer()[ CD ]
