Line_28 $$ if (Float.class.isAssignableFrom(type)) -->Line_29 $$ return (X) Float.valueOf(value.floatValue())[ CD ]
Line_10 $$ if (BigInteger.class.isAssignableFrom(type)) -->Line_11 $$ return (X) value.toBigIntegerExact()[ CD ]
Line_4 $$ if (value == null) -->Line_5 $$ return null[ CD ]
Line_19 $$ if (Integer.class.isAssignableFrom(type)) -->Line_20 $$ return (X) Integer.valueOf(value.intValue())[ CD ]
Line_7 $$ if (BigDecimal.class.isAssignableFrom(type)) -->Line_8 $$ return (X) value[ CD ]
Line_22 $$ if (Long.class.isAssignableFrom(type)) -->Line_23 $$ return (X) Long.valueOf(value.longValue())[ CD ]
Line_13 $$ if (Byte.class.isAssignableFrom(type)) -->Line_14 $$ return (X) Byte.valueOf(value.byteValue())[ CD ]
Line_25 $$ if (Double.class.isAssignableFrom(type)) -->Line_26 $$ return (X) Double.valueOf(value.doubleValue())[ CD ]
Line_16 $$ if (Short.class.isAssignableFrom(type)) -->Line_17 $$ return (X) Short.valueOf(value.shortValue())[ CD ]
