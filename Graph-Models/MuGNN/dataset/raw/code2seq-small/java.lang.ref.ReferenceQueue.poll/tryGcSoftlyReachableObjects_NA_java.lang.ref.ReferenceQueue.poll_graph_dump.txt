Line_4 $$ SoftReference<Object> ref = new SoftReference<Object>(new Object(), q)-->Line_15 $$ list.ensureCapacity(list.size() + useReference(ref))[ FD ]
Line_5 $$ ArrayList<SoftReference<?>> list = ContainerUtil.newArrayListWithCapacity(100 + useReference(ref))-->Line_13 $$ list.add(new SoftReference<byte[]>(new byte[bytes]))[ FD ]
Line_4 $$ SoftReference<Object> ref = new SoftReference<Object>(new Object(), q)-->Line_5 $$ ArrayList<SoftReference<?>> list = ContainerUtil.newArrayListWithCapacity(100 + useReference(ref))[ FD ]
Line_2 $$ public static void tryGcSoftlyReachableObjects() -->Line_4 $$ SoftReference<Object> ref = new SoftReference<Object>(new Object(), q)[ CD ]
Line_3 $$ ReferenceQueue<Object> q = new ReferenceQueue<Object>()-->Line_9 $$ if (q.poll() != null) [ FD ]
Line_2 $$ public static void tryGcSoftlyReachableObjects() -->Line_5 $$ ArrayList<SoftReference<?>> list = ContainerUtil.newArrayListWithCapacity(100 + useReference(ref))[ CD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_13 $$ list.add(new SoftReference<byte[]>(new byte[bytes]))[ CD ]
Line_2 $$ public static void tryGcSoftlyReachableObjects() -->Line_15 $$ list.ensureCapacity(list.size() + useReference(ref))[ CD ]
Line_2 $$ public static void tryGcSoftlyReachableObjects() -->Line_7 $$ final long freeMemory = Runtime.getRuntime().freeMemory()[ CD ]
Line_2 $$ public static void tryGcSoftlyReachableObjects() -->Line_8 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_12 $$ int bytes = Math.min((int) (freeMemory * 0.45), Integer.MAX_VALUE / 2)[ CD ]
Line_5 $$ ArrayList<SoftReference<?>> list = ContainerUtil.newArrayListWithCapacity(100 + useReference(ref))-->Line_15 $$ list.ensureCapacity(list.size() + useReference(ref))[ FD ]
Line_2 $$ public static void tryGcSoftlyReachableObjects() -->Line_6 $$ System.gc()[ CD ]
Line_2 $$ public static void tryGcSoftlyReachableObjects() -->Line_3 $$ ReferenceQueue<Object> q = new ReferenceQueue<Object>()[ CD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_9 $$ if (q.poll() != null) [ CD ]
