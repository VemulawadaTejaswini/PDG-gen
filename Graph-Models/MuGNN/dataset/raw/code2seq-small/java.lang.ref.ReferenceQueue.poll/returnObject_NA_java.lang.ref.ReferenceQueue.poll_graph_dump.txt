Line_11 $$ while (_getCount() > _maxIdleSize) -->Line_12 $$ if ((_softReferences.poll() != null) && _useWeakCounter) [ CD ]
Line_7 $$ if (_useWeakCounter) -->Line_8 $$ _weakCounter.getAndIncrement()[ CD ]
Line_3 $$ if (_getCount() < _maxIdleSize) -->Line_7 $$ if (_useWeakCounter) [ CD ]
Line_18 $$ while (true) -->Line_19 $$ softReference = (SoftReference<? extends V>) _referenceQueue.poll()[ CD ]
Line_19 $$ softReference = (SoftReference<? extends V>) _referenceQueue.poll()-->Line_23 $$ if (_softReferences.remove(softReference) && _useWeakCounter) [ FD ]
Line_18 $$ while (true) -->Line_23 $$ if (_softReferences.remove(softReference) && _useWeakCounter) [ CD ]
Line_4 $$ SoftReference<V> softReference = new SoftReference(value, _referenceQueue)-->Line_20 $$ if (softReference == null) [ FD ]
Line_2 $$ public void returnObject(V value) -->Line_5 $$ _poolAction.onReturn(value)[ FD ]
Line_2 $$ public void returnObject(V value) -->Line_3 $$ if (_getCount() < _maxIdleSize) [ CD ]
Line_4 $$ SoftReference<V> softReference = new SoftReference(value, _referenceQueue)-->Line_23 $$ if (_softReferences.remove(softReference) && _useWeakCounter) [ FD ]
Line_3 $$ if (_getCount() < _maxIdleSize) -->Line_6 $$ _softReferences.offer(softReference)[ CD ]
Line_3 $$ if (_getCount() < _maxIdleSize) -->Line_11 $$ while (_getCount() > _maxIdleSize) [ CD ]
Line_12 $$ if ((_softReferences.poll() != null) && _useWeakCounter) -->Line_13 $$ _weakCounter.getAndDecrement()[ CD ]
Line_4 $$ SoftReference<V> softReference = new SoftReference(value, _referenceQueue)-->Line_6 $$ _softReferences.offer(softReference)[ FD ]
Line_3 $$ if (_getCount() < _maxIdleSize) -->Line_5 $$ _poolAction.onReturn(value)[ CD ]
Line_23 $$ if (_softReferences.remove(softReference) && _useWeakCounter) -->Line_24 $$ _weakCounter.getAndDecrement()[ CD ]
Line_2 $$ public void returnObject(V value) -->Line_18 $$ while (true) [ CD ]
Line_19 $$ softReference = (SoftReference<? extends V>) _referenceQueue.poll()-->Line_20 $$ if (softReference == null) [ FD ]
Line_18 $$ while (true) -->Line_20 $$ if (softReference == null) [ CD ]
Line_3 $$ if (_getCount() < _maxIdleSize) -->Line_4 $$ SoftReference<V> softReference = new SoftReference(value, _referenceQueue)[ CD ]
Line_4 $$ SoftReference<V> softReference = new SoftReference(value, _referenceQueue)-->Line_19 $$ softReference = (SoftReference<? extends V>) _referenceQueue.poll()[ FD ]
