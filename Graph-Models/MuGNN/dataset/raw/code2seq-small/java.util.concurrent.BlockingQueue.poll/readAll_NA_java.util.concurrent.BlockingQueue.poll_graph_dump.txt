Line_3 $$ Vector<String> lines = new Vector<String>()-->Line_9 $$ lines.add(line)[ FD ]
Line_4 $$ String line = null-->Line_5 $$ do [ FD ]
Line_2 $$ public String[] readAll(final long timeout) -->Line_3 $$ Vector<String> lines = new Vector<String>()[ CD ]
Line_7 $$ line = outputQueue.poll(timeout, TimeUnit.MILLISECONDS)-->Line_8 $$ if (line != null)[ FD ]
Line_7 $$ line = outputQueue.poll(timeout, TimeUnit.MILLISECONDS)-->Line_5 $$ do [ FD ]
Line_8 $$ if (line != null)-->Line_9 $$ lines.add(line)[ CD ]
Line_7 $$ line = outputQueue.poll(timeout, TimeUnit.MILLISECONDS)-->Line_9 $$ lines.add(line)[ FD ]
Line_2 $$ public String[] readAll(final long timeout) -->Line_4 $$ String line = null[ CD ]
Line_3 $$ Vector<String> lines = new Vector<String>()-->Line_13 $$ return lines.toArray(new String[] [ FD ]
Line_2 $$ public String[] readAll(final long timeout) -->Line_13 $$ return lines.toArray(new String[] [ CD ]
Line_2 $$ public String[] readAll(final long timeout) -->Line_5 $$ do [ CD ]
Line_4 $$ String line = null-->Line_8 $$ if (line != null)[ FD ]
Line_2 $$ public String[] readAll(final long timeout) -->Line_7 $$ line = outputQueue.poll(timeout, TimeUnit.MILLISECONDS)[ FD ]
Line_4 $$ String line = null-->Line_9 $$ lines.add(line)[ FD ]
Line_4 $$ String line = null-->Line_7 $$ line = outputQueue.poll(timeout, TimeUnit.MILLISECONDS)[ FD ]
