Line_26 $$ if (accumRect != null) -->Line_33 $$ g.setColor(Color.lightGray)[ CD ]
Line_22 $$ accumPath = accumRect == null ? path : accumPath.getParentPath()-->Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)[ FD ]
Line_13 $$ TreePath accumPath = null-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_13 $$ TreePath accumPath = null-->Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)[ FD ]
Line_24 $$ node = (DefaultMutableTreeNode) node.getParent()-->Line_29 $$ node = (DefaultMutableTreeNode) accumPath.getLastPathComponent()[ FD ]
Line_22 $$ accumPath = accumRect == null ? path : accumPath.getParentPath()-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_26 $$ if (accumRect != null) -->Line_28 $$ accumRect = accumRect.intersection(new Rectangle(rowRect.x, rowRect.y, Integer.MAX_VALUE, Integer.MAX_VALUE))[ CD ]
Line_28 $$ accumRect = accumRect.intersection(new Rectangle(rowRect.x, rowRect.y, Integer.MAX_VALUE, Integer.MAX_VALUE))-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_34 $$ g.drawRoundRect(accumRect.x, accumRect.y, accumRect.width, accumRect.height, 10, 10)[ FD ]
Line_26 $$ if (accumRect != null) -->Line_32 $$ g.fillRoundRect(accumRect.x, accumRect.y, accumRect.width, accumRect.height, 10, 10)[ CD ]
Line_11 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_26 $$ if (accumRect != null) -->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ CD ]
Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))-->Line_28 $$ accumRect = accumRect.intersection(new Rectangle(rowRect.x, rowRect.y, Integer.MAX_VALUE, Integer.MAX_VALUE))[ FD ]
Line_11 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_14 $$ while (node != null) [ FD ]
Line_26 $$ if (accumRect != null) -->Line_31 $$ g.setColor(Gray._230)[ CD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_6 $$ Color old = g.getColor()[ CD ]
Line_14 $$ while (node != null) -->Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)[ CD ]
Line_22 $$ accumPath = accumRect == null ? path : accumPath.getParentPath()-->Line_27 $$ Rectangle rowRect = tree.getRowBounds(tree.getRowForPath(accumPath))[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_4 $$ int start = tree.getClosestRowForLocation(clipBounds.x, clipBounds.y)[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_6 $$ Color old = g.getColor()[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_31 $$ g.setColor(Gray._230)[ FD ]
Line_14 $$ while (node != null) -->Line_16 $$ if (!(userObject instanceof DuplicatableNode))[ CD ]
Line_14 $$ while (node != null) -->Line_15 $$ Object userObject = node.getUserObject()[ CD ]
Line_14 $$ while (node != null) -->Line_24 $$ node = (DefaultMutableTreeNode) node.getParent()[ CD ]
Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_18 $$ DuplicatableNode duplicatableNode = (DuplicatableNode) userObject-->Line_19 $$ Object duplicate = duplicatableNode.getDuplicate()[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_3 $$ Rectangle clipBounds = g.getClipBounds()[ CD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_32 $$ g.fillRoundRect(accumRect.x, accumRect.y, accumRect.width, accumRect.height, 10, 10)[ FD ]
Line_12 $$ Rectangle accumRect = null-->Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_7 $$ for (int i = start; i < end; i++) [ CD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_13 $$ TreePath accumPath = null[ CD ]
Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))-->Line_26 $$ if (accumRect != null) [ FD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_8 $$ TreePath path = tree.getPathForRow(i)[ CD ]
Line_26 $$ if (accumRect != null) -->Line_29 $$ node = (DefaultMutableTreeNode) accumPath.getLastPathComponent()[ CD ]
Line_11 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_15 $$ Object userObject = node.getUserObject()[ FD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_8 $$ TreePath path = tree.getPathForRow(i)[ FD ]
Line_13 $$ TreePath accumPath = null-->Line_22 $$ accumPath = accumRect == null ? path : accumPath.getParentPath()[ FD ]
Line_24 $$ node = (DefaultMutableTreeNode) node.getParent()-->Line_14 $$ while (node != null) [ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_4 $$ int start = tree.getClosestRowForLocation(clipBounds.x, clipBounds.y)[ CD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_5 $$ int end = Math.min(tree.getRowCount(), tree.getClosestRowForLocation(clipBounds.x + clipBounds.width, clipBounds.y + clipBounds.height) + 1)[ CD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_9 $$ if (path == null)[ CD ]
Line_26 $$ if (accumRect != null) -->Line_34 $$ g.drawRoundRect(accumRect.x, accumRect.y, accumRect.width, accumRect.height, 10, 10)[ CD ]
Line_8 $$ TreePath path = tree.getPathForRow(i)-->Line_11 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent()[ FD ]
Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)-->Line_28 $$ accumRect = accumRect.intersection(new Rectangle(rowRect.x, rowRect.y, Integer.MAX_VALUE, Integer.MAX_VALUE))[ FD ]
Line_24 $$ node = (DefaultMutableTreeNode) node.getParent()-->Line_15 $$ Object userObject = node.getUserObject()[ FD ]
Line_19 $$ Object duplicate = duplicatableNode.getDuplicate()-->Line_20 $$ if (duplicate == null)[ FD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_26 $$ if (accumRect != null) [ CD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_11 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent()[ CD ]
Line_12 $$ Rectangle accumRect = null-->Line_28 $$ accumRect = accumRect.intersection(new Rectangle(rowRect.x, rowRect.y, Integer.MAX_VALUE, Integer.MAX_VALUE))[ FD ]
Line_6 $$ Color old = g.getColor()-->Line_37 $$ g.setColor(old)[ FD ]
Line_13 $$ TreePath accumPath = null-->Line_27 $$ Rectangle rowRect = tree.getRowBounds(tree.getRowForPath(accumPath))[ FD ]
Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)-->Line_26 $$ if (accumRect != null) [ FD ]
Line_5 $$ int end = Math.min(tree.getRowCount(), tree.getClosestRowForLocation(clipBounds.x + clipBounds.width, clipBounds.y + clipBounds.height) + 1)-->Line_7 $$ for (int i = start; i < end; i++) [ FD ]
Line_14 $$ while (node != null) -->Line_20 $$ if (duplicate == null)[ CD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_3 $$ Rectangle clipBounds = g.getClipBounds()[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_27 $$ Rectangle rowRect = tree.getRowBounds(tree.getRowForPath(accumPath))[ FD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_14 $$ while (node != null) [ CD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_8 $$ TreePath path = tree.getPathForRow(i)[ FD ]
Line_7 $$ for (int i = start; i < end; i++) -->Line_12 $$ Rectangle accumRect = null[ CD ]
Line_12 $$ Rectangle accumRect = null-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_8 $$ TreePath path = tree.getPathForRow(i)-->Line_9 $$ if (path == null)[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_33 $$ g.setColor(Color.lightGray)[ FD ]
Line_14 $$ while (node != null) -->Line_19 $$ Object duplicate = duplicatableNode.getDuplicate()[ CD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_37 $$ g.setColor(old)[ FD ]
Line_14 $$ while (node != null) -->Line_18 $$ DuplicatableNode duplicatableNode = (DuplicatableNode) userObject[ CD ]
Line_11 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_29 $$ node = (DefaultMutableTreeNode) accumPath.getLastPathComponent()[ FD ]
Line_12 $$ Rectangle accumRect = null-->Line_26 $$ if (accumRect != null) [ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_23 $$ accumRect = union(tree.getPathBounds(accumPath), accumRect)[ FD ]
Line_28 $$ accumRect = accumRect.intersection(new Rectangle(rowRect.x, rowRect.y, Integer.MAX_VALUE, Integer.MAX_VALUE))-->Line_26 $$ if (accumRect != null) [ FD ]
Line_13 $$ TreePath accumPath = null-->Line_29 $$ node = (DefaultMutableTreeNode) accumPath.getLastPathComponent()[ FD ]
Line_29 $$ node = (DefaultMutableTreeNode) accumPath.getLastPathComponent()-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_37 $$ g.setColor(old)[ CD ]
Line_22 $$ accumPath = accumRect == null ? path : accumPath.getParentPath()-->Line_29 $$ node = (DefaultMutableTreeNode) accumPath.getLastPathComponent()[ FD ]
Line_2 $$ public static void paintDuplicateNodesBackground(Graphics g, JTree tree) -->Line_5 $$ int end = Math.min(tree.getRowCount(), tree.getClosestRowForLocation(clipBounds.x + clipBounds.width, clipBounds.y + clipBounds.height) + 1)[ FD ]
Line_26 $$ if (accumRect != null) -->Line_27 $$ Rectangle rowRect = tree.getRowBounds(tree.getRowForPath(accumPath))[ CD ]
Line_11 $$ DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent()-->Line_24 $$ node = (DefaultMutableTreeNode) node.getParent()[ FD ]
Line_24 $$ node = (DefaultMutableTreeNode) node.getParent()-->Line_30 $$ accumRect = union(accumRect, getExpandedNodesRect(tree, node, accumPath))[ FD ]
Line_14 $$ while (node != null) -->Line_22 $$ accumPath = accumRect == null ? path : accumPath.getParentPath()[ CD ]
