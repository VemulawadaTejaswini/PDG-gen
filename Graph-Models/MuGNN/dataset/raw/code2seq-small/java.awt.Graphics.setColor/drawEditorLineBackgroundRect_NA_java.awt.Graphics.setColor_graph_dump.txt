Line_5 $$ Color fgColor = attributes.getForegroundColor()-->Line_7 $$ myTextFgColors.put(visualLine, fgColor)[ FD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_6 $$ if (!Comparing.equal(fgColor, defaultForegroundColor)) [ FD ]
Line_3 $$ Color color = myEditor.getBackgroundColor(attributes)-->Line_4 $$ if (!Comparing.equal(color, defaultBackgroundColor)) [ FD ]
Line_4 $$ if (!Comparing.equal(color, defaultBackgroundColor)) -->Line_10 $$ g.fillRect(startX, startY, getWidth() - startX, myEditor.getLineHeight())[ CD ]
Line_4 $$ if (!Comparing.equal(color, defaultBackgroundColor)) -->Line_5 $$ Color fgColor = attributes.getForegroundColor()[ CD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_3 $$ Color color = myEditor.getBackgroundColor(attributes)[ FD ]
Line_3 $$ Color color = myEditor.getBackgroundColor(attributes)-->Line_9 $$ g.setColor(color)[ FD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_7 $$ myTextFgColors.put(visualLine, fgColor)[ FD ]
Line_4 $$ if (!Comparing.equal(color, defaultBackgroundColor)) -->Line_9 $$ g.setColor(color)[ CD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_5 $$ Color fgColor = attributes.getForegroundColor()[ FD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_4 $$ if (!Comparing.equal(color, defaultBackgroundColor)) [ CD ]
Line_4 $$ if (!Comparing.equal(color, defaultBackgroundColor)) -->Line_6 $$ if (!Comparing.equal(fgColor, defaultForegroundColor)) [ CD ]
Line_5 $$ Color fgColor = attributes.getForegroundColor()-->Line_6 $$ if (!Comparing.equal(fgColor, defaultForegroundColor)) [ FD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_10 $$ g.fillRect(startX, startY, getWidth() - startX, myEditor.getLineHeight())[ FD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_3 $$ Color color = myEditor.getBackgroundColor(attributes)[ CD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_4 $$ if (!Comparing.equal(color, defaultBackgroundColor)) [ FD ]
Line_2 $$ private void drawEditorLineBackgroundRect(Graphics g, TextAttributes attributes, int visualLine, Color defaultBackgroundColor, Color defaultForegroundColor, int startX, int startY) -->Line_9 $$ g.setColor(color)[ FD ]
Line_6 $$ if (!Comparing.equal(fgColor, defaultForegroundColor)) -->Line_7 $$ myTextFgColors.put(visualLine, fgColor)[ CD ]
