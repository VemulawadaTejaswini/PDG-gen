Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_78 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_5 $$ g.setColor(defaultBackground)[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_93 $$ if (collapsedFolderAt != null) [ CD ]
Line_18 $$ if (clipStartPosition.line >= myDocument.getLineCount() || clipStartPosition.line < 0) -->Line_19 $$ if (position.x > 0)[ CD ]
Line_95 $$ prevBackColor = backColor-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_41 $$ TIntHashSet softWrapsToSkip = new TIntHashSet()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_118 $$ repaintToScreenBottom(EditorUtil.yPositionToLogicalLine(this, position))[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_13 $$ if (clipStartVisualPos.line == 0 && prefixText != null) [ CD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_38 $$ Color backColor = getBackgroundColor(attributes)[ CD ]
Line_88 $$ prevBackColor = backColor-->Line_95 $$ prevBackColor = backColor[ FD ]
Line_88 $$ prevBackColor = backColor-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_96 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) -->Line_98 $$ prevBackColor = backColor[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_10 $$ int visibleLine = yPositionToVisibleLine(clip.y)[ CD ]
Line_54 $$ prevBackColor = color-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_107 $$ start = iterationState.getStartOffset()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_47 $$ color = backColor-->Line_50 $$ color = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null[ FD ]
Line_95 $$ prevBackColor = backColor-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_39 $$ int fontType = attributes.getFontType()-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_58 $$ boolean[] caretRowPainted = new boolean[1]-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_9 $$ int lineHeight = getLineHeight()-->Line_84 $$ position.y += lineHeight[ FD ]
Line_45 $$ Color color = null-->Line_52 $$ if (color != null) [ FD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_69 $$ if (lIterator.getLineNumber() < lastLineIndex) [ CD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_88 $$ prevBackColor = backColor[ FD ]
Line_49 $$ if (color == null && position.y == getCaretModel().getVisualPosition().line * getLineHeight()) -->Line_50 $$ color = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null[ CD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_71 $$ g.setColor(backColor)[ FD ]
Line_98 $$ prevBackColor = backColor-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_16 $$ prevBackColor = backColor-->Line_95 $$ prevBackColor = backColor[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_32 $$ lIterator.start(start)[ CD ]
Line_40 $$ int lastLineIndex = Math.max(0, myDocument.getLineCount() - 1)-->Line_69 $$ if (lIterator.getLineNumber() < lastLineIndex) [ FD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_68 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_67 $$ prevBackColor = backColor[ CD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_8 $$ Color prevBackColor = null[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_6 $$ g.fillRect(clip.x, clip.y, clip.width, clip.height)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_67 $$ prevBackColor = backColor[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_65 $$ if (collapsedFolderAt == null) [ CD ]
Line_54 $$ prevBackColor = color-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_111 $$ if (lIterator.getLineNumber() >= lastLineIndex && position.y <= clip.y + clip.height) [ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_16 $$ prevBackColor = backColor-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_65 $$ if (collapsedFolderAt == null) [ FD ]
Line_106 $$ fontType = attributes.getFontType()-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_47 $$ color = backColor-->Line_52 $$ if (color != null) [ FD ]
Line_85 $$ start = lEnd-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_110 $$ flushBackground(g, clip)[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_13 $$ if (clipStartVisualPos.line == 0 && prefixText != null) -->Line_16 $$ prevBackColor = backColor[ CD ]
Line_39 $$ int fontType = attributes.getFontType()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_93 $$ if (collapsedFolderAt != null) [ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_96 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) [ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_15 $$ position.x = drawBackground(g, backColor, prefixText, 0, prefixText.length(), position, myPrefixAttributes.getFontType(), defaultBackground, clip)[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_40 $$ int lastLineIndex = Math.max(0, myDocument.getLineCount() - 1)[ CD ]
Line_95 $$ prevBackColor = backColor-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_95 $$ prevBackColor = backColor-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_60 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) -->Line_61 $$ int hEnd = iterationState.getEndOffset()[ CD ]
Line_41 $$ TIntHashSet softWrapsToSkip = new TIntHashSet()-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_106 $$ fontType = attributes.getFontType()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_106 $$ fontType = attributes.getFontType()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_75 $$ if (iterationState.hasPastFileEndBackgroundSegments()) -->Line_76 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ CD ]
Line_27 $$ int start = clipStartOffset-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_37 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_106 $$ fontType = attributes.getFontType()[ FD ]
Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_86 $$ if (collapsedFolderAt.getEndOffset() == clipEndOffset) [ FD ]
Line_16 $$ prevBackColor = backColor-->Line_54 $$ prevBackColor = color[ FD ]
Line_58 $$ boolean[] caretRowPainted = new boolean[1]-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_58 $$ boolean[] caretRowPainted = new boolean[1]-->Line_78 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_103 $$ iterationState.advance()[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_111 $$ if (lIterator.getLineNumber() >= lastLineIndex && position.y <= clip.y + clip.height) [ CD ]
Line_43 $$ if (softWrap != null) -->Line_52 $$ if (color != null) [ CD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_84 $$ position.y += lineHeight[ CD ]
Line_19 $$ if (position.x > 0)-->Line_20 $$ flushBackground(g, clip)[ CD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_105 $$ backColor = getBackgroundColor(attributes)[ CD ]
Line_69 $$ if (lIterator.getLineNumber() < lastLineIndex) -->Line_75 $$ if (iterationState.hasPastFileEndBackgroundSegments()) [ CD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_4 $$ if (myEditorComponent.isOpaque()) -->Line_6 $$ g.fillRect(clip.x, clip.y, clip.width, clip.height)[ CD ]
Line_114 $$ if (mySoftWrapsChanged) -->Line_119 $$ myGutterComponent.repaint(0, clip.y, myGutterComponent.getWidth(), myGutterComponent.getHeight() - clip.y)[ CD ]
Line_45 $$ Color color = null-->Line_47 $$ color = backColor[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_16 $$ prevBackColor = backColor[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_76 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_27 $$ int start = clipStartOffset-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_54 $$ prevBackColor = color[ FD ]
Line_42 $$ SoftWrap softWrap = getSoftWrapModel().getSoftWrap(start)-->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_107 $$ start = iterationState.getStartOffset()[ CD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_68 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_76 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_98 $$ prevBackColor = backColor-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_41 $$ TIntHashSet softWrapsToSkip = new TIntHashSet()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_70 $$ if (backColor != null && !backColor.equals(defaultBackground)) -->Line_71 $$ g.setColor(backColor)[ CD ]
Line_54 $$ prevBackColor = color-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_86 $$ if (collapsedFolderAt.getEndOffset() == clipEndOffset) -->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ CD ]
Line_45 $$ Color color = null-->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ FD ]
Line_33 $$ if (lIterator.atEnd()) -->Line_34 $$ return[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_60 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) [ CD ]
Line_61 $$ int hEnd = iterationState.getEndOffset()-->Line_63 $$ if (hEnd >= lEnd) [ FD ]
Line_104 $$ attributes = iterationState.getMergedAttributes()-->Line_106 $$ fontType = attributes.getFontType()[ FD ]
Line_62 $$ int lEnd = lIterator.getEnd()-->Line_85 $$ start = lEnd[ FD ]
Line_47 $$ color = backColor-->Line_54 $$ prevBackColor = color[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_33 $$ if (lIterator.atEnd()) [ FD ]
Line_18 $$ if (clipStartPosition.line >= myDocument.getLineCount() || clipStartPosition.line < 0) -->Line_21 $$ return[ CD ]
Line_13 $$ if (clipStartVisualPos.line == 0 && prefixText != null) -->Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()[ CD ]
Line_27 $$ int start = clipStartOffset-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_59 $$ CharSequence text = myDocument.getImmutableCharSequence()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_85 $$ start = lEnd-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_96 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) -->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ CD ]
Line_16 $$ prevBackColor = backColor-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_114 $$ if (mySoftWrapsChanged) -->Line_118 $$ repaintToScreenBottom(EditorUtil.yPositionToLogicalLine(this, position))[ CD ]
Line_16 $$ prevBackColor = backColor-->Line_67 $$ prevBackColor = backColor[ FD ]
Line_54 $$ prevBackColor = color-->Line_95 $$ prevBackColor = backColor[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_88 $$ prevBackColor = backColor[ FD ]
Line_39 $$ int fontType = attributes.getFontType()-->Line_106 $$ fontType = attributes.getFontType()[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ CD ]
Line_50 $$ color = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null-->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ FD ]
Line_9 $$ int lineHeight = getLineHeight()-->Line_72 $$ g.fillRect(position.x, position.y, clip.x + clip.width - position.x, lineHeight)[ FD ]
Line_58 $$ boolean[] caretRowPainted = new boolean[1]-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_61 $$ int hEnd = iterationState.getEndOffset()-->Line_96 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) [ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_76 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_68 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_50 $$ color = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null-->Line_52 $$ if (color != null) [ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_62 $$ int lEnd = lIterator.getEnd()[ FD ]
Line_47 $$ color = backColor-->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ FD ]
Line_101 $$ prevBackColor = backColor-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_37 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_38 $$ Color backColor = getBackgroundColor(attributes)[ FD ]
Line_46 $$ if (backColor != null && !backColor.equals(defaultBackground)) -->Line_47 $$ color = backColor[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_9 $$ int lineHeight = getLineHeight()[ CD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_78 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_95 $$ prevBackColor = backColor-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_96 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) -->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_5 $$ g.setColor(defaultBackground)[ FD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_81 $$ position.x = 0[ CD ]
Line_42 $$ SoftWrap softWrap = getSoftWrapModel().getSoftWrap(start)-->Line_43 $$ if (softWrap != null) [ FD ]
Line_96 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) -->Line_101 $$ prevBackColor = backColor[ CD ]
Line_8 $$ Color prevBackColor = null-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_88 $$ prevBackColor = backColor-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_9 $$ int lineHeight = getLineHeight()-->Line_78 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_47 $$ color = backColor[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_43 $$ if (softWrap != null) [ CD ]
Line_101 $$ prevBackColor = backColor-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_41 $$ TIntHashSet softWrapsToSkip = new TIntHashSet()-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_41 $$ TIntHashSet softWrapsToSkip = new TIntHashSet()[ CD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_68 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_54 $$ prevBackColor = color-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_27 $$ int start = clipStartOffset[ CD ]
Line_60 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) -->Line_63 $$ if (hEnd >= lEnd) [ CD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_75 $$ if (iterationState.hasPastFileEndBackgroundSegments()) [ FD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_82 $$ if (position.y > clip.y + clip.height)[ CD ]
Line_37 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_39 $$ int fontType = attributes.getFontType()[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_95 $$ prevBackColor = backColor[ FD ]
Line_16 $$ prevBackColor = backColor-->Line_88 $$ prevBackColor = backColor[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_78 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_71 $$ g.setColor(backColor)[ FD ]
Line_54 $$ prevBackColor = color-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_112 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_98 $$ prevBackColor = backColor-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_98 $$ prevBackColor = backColor-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_52 $$ if (color != null) -->Line_54 $$ prevBackColor = color[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_86 $$ if (collapsedFolderAt.getEndOffset() == clipEndOffset) [ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_28 $$ if (!myPurePaintingMode) [ CD ]
Line_60 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) -->Line_62 $$ int lEnd = lIterator.getEnd()[ CD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_27 $$ int start = clipStartOffset-->Line_107 $$ start = iterationState.getStartOffset()[ FD ]
Line_37 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_105 $$ backColor = getBackgroundColor(attributes)[ FD ]
Line_42 $$ SoftWrap softWrap = getSoftWrapModel().getSoftWrap(start)-->Line_44 $$ softWrapsToSkip.add(softWrap.getStart())[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_92 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_58 $$ boolean[] caretRowPainted = new boolean[1][ CD ]
Line_28 $$ if (!myPurePaintingMode) -->Line_29 $$ getSoftWrapModel().registerSoftWrapsIfNecessary()[ CD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_106 $$ fontType = attributes.getFontType()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_62 $$ int lEnd = lIterator.getEnd()-->Line_63 $$ if (hEnd >= lEnd) [ FD ]
Line_88 $$ prevBackColor = backColor-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_27 $$ int start = clipStartOffset-->Line_32 $$ lIterator.start(start)[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_107 $$ start = iterationState.getStartOffset()-->Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_104 $$ attributes = iterationState.getMergedAttributes()[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_12 $$ CharSequence prefixText = myPrefixText == null ? null : new CharArrayCharSequence(myPrefixText)[ CD ]
Line_61 $$ int hEnd = iterationState.getEndOffset()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_58 $$ boolean[] caretRowPainted = new boolean[1]-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_37 $$ TextAttributes attributes = iterationState.getMergedAttributes()-->Line_104 $$ attributes = iterationState.getMergedAttributes()[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_76 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_41 $$ TIntHashSet softWrapsToSkip = new TIntHashSet()-->Line_44 $$ softWrapsToSkip.add(softWrap.getStart())[ FD ]
Line_58 $$ boolean[] caretRowPainted = new boolean[1]-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_12 $$ CharSequence prefixText = myPrefixText == null ? null : new CharArrayCharSequence(myPrefixText)-->Line_15 $$ position.x = drawBackground(g, backColor, prefixText, 0, prefixText.length(), position, myPrefixAttributes.getFontType(), defaultBackground, clip)[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_95 $$ prevBackColor = backColor[ FD ]
Line_86 $$ if (collapsedFolderAt.getEndOffset() == clipEndOffset) -->Line_88 $$ prevBackColor = backColor[ CD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_95 $$ prevBackColor = backColor[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_20 $$ flushBackground(g, clip)[ FD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_61 $$ int hEnd = iterationState.getEndOffset()[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_15 $$ position.x = drawBackground(g, backColor, prefixText, 0, prefixText.length(), position, myPrefixAttributes.getFontType(), defaultBackground, clip)[ FD ]
Line_85 $$ start = lEnd-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_105 $$ backColor = getBackgroundColor(attributes)[ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_85 $$ start = lEnd-->Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_88 $$ prevBackColor = backColor[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_46 $$ if (backColor != null && !backColor.equals(defaultBackground)) [ FD ]
Line_93 $$ if (collapsedFolderAt != null) -->Line_95 $$ prevBackColor = backColor[ CD ]
Line_43 $$ if (softWrap != null) -->Line_49 $$ if (color == null && position.y == getCaretModel().getVisualPosition().line * getLineHeight()) [ CD ]
Line_9 $$ int lineHeight = getLineHeight()-->Line_76 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_85 $$ start = lEnd-->Line_107 $$ start = iterationState.getStartOffset()[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_107 $$ start = iterationState.getStartOffset()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_110 $$ flushBackground(g, clip)[ CD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_70 $$ if (backColor != null && !backColor.equals(defaultBackground)) [ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_70 $$ if (backColor != null && !backColor.equals(defaultBackground)) [ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_92 $$ FoldRegion collapsedFolderAt = iterationState.getCurrentFold()[ CD ]
Line_114 $$ if (mySoftWrapsChanged) -->Line_116 $$ clearTextWidthCache()[ CD ]
Line_104 $$ attributes = iterationState.getMergedAttributes()-->Line_105 $$ backColor = getBackgroundColor(attributes)[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_39 $$ int fontType = attributes.getFontType()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_101 $$ prevBackColor = backColor-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_106 $$ fontType = attributes.getFontType()[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_72 $$ g.fillRect(position.x, position.y, clip.x + clip.width - position.x, lineHeight)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_42 $$ SoftWrap softWrap = getSoftWrapModel().getSoftWrap(start)[ CD ]
Line_67 $$ prevBackColor = backColor-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_69 $$ if (lIterator.getLineNumber() < lastLineIndex) -->Line_70 $$ if (backColor != null && !backColor.equals(defaultBackground)) [ CD ]
Line_16 $$ prevBackColor = backColor-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_59 $$ CharSequence text = myDocument.getImmutableCharSequence()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_88 $$ prevBackColor = backColor-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_98 $$ prevBackColor = backColor-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())[ CD ]
Line_95 $$ prevBackColor = backColor-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_103 $$ iterationState.advance()[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_39 $$ int fontType = attributes.getFontType()[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_37 $$ TextAttributes attributes = iterationState.getMergedAttributes()[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_15 $$ position.x = drawBackground(g, backColor, prefixText, 0, prefixText.length(), position, myPrefixAttributes.getFontType(), defaultBackground, clip)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_114 $$ if (mySoftWrapsChanged) [ CD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_37 $$ TextAttributes attributes = iterationState.getMergedAttributes()[ FD ]
Line_114 $$ if (mySoftWrapsChanged) -->Line_117 $$ validateSize()[ CD ]
Line_8 $$ Color prevBackColor = null-->Line_67 $$ prevBackColor = backColor[ FD ]
Line_43 $$ if (softWrap != null) -->Line_45 $$ Color color = null[ CD ]
Line_39 $$ int fontType = attributes.getFontType()-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_46 $$ if (backColor != null && !backColor.equals(defaultBackground)) [ FD ]
Line_54 $$ prevBackColor = color-->Line_67 $$ prevBackColor = backColor[ FD ]
Line_101 $$ prevBackColor = backColor-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_18 $$ if (clipStartPosition.line >= myDocument.getLineCount() || clipStartPosition.line < 0) [ CD ]
Line_16 $$ prevBackColor = backColor-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_67 $$ prevBackColor = backColor[ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_69 $$ if (lIterator.getLineNumber() < lastLineIndex) [ FD ]
Line_9 $$ int lineHeight = getLineHeight()-->Line_112 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_42 $$ SoftWrap softWrap = getSoftWrapModel().getSoftWrap(start)-->Line_56 $$ position.x = softWrap.getIndentInPixels()[ FD ]
Line_59 $$ CharSequence text = myDocument.getImmutableCharSequence()-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_43 $$ if (softWrap != null) -->Line_44 $$ softWrapsToSkip.add(softWrap.getStart())[ CD ]
Line_54 $$ prevBackColor = color-->Line_88 $$ prevBackColor = backColor[ FD ]
Line_45 $$ Color color = null-->Line_54 $$ prevBackColor = color[ FD ]
Line_63 $$ if (hEnd >= lEnd) -->Line_90 $$ lIterator.advance()[ CD ]
Line_95 $$ prevBackColor = backColor-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_59 $$ CharSequence text = myDocument.getImmutableCharSequence()-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_59 $$ CharSequence text = myDocument.getImmutableCharSequence()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_60 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) [ FD ]
Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_27 $$ int start = clipStartOffset-->Line_42 $$ SoftWrap softWrap = getSoftWrapModel().getSoftWrap(start)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_112 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ FD ]
Line_54 $$ prevBackColor = color-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_39 $$ int fontType = attributes.getFontType()-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_85 $$ start = lEnd[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_4 $$ if (myEditorComponent.isOpaque()) [ CD ]
Line_50 $$ color = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null-->Line_54 $$ prevBackColor = color[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_98 $$ prevBackColor = backColor[ FD ]
Line_27 $$ int start = clipStartOffset-->Line_64 $$ FoldRegion collapsedFolderAt = myFoldingModel.getCollapsedRegionAtOffset(start)[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_93 $$ if (collapsedFolderAt != null) -->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ CD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_93 $$ if (collapsedFolderAt != null) -->Line_96 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) [ CD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_71 $$ g.setColor(backColor)[ FD ]
Line_16 $$ prevBackColor = backColor-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_106 $$ fontType = attributes.getFontType()-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_16 $$ prevBackColor = backColor-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_60 $$ while (!iterationState.atEnd() && !lIterator.atEnd()) [ FD ]
Line_88 $$ prevBackColor = backColor-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_3 $$ Color defaultBackground = getBackgroundColor()[ CD ]
Line_69 $$ if (lIterator.getLineNumber() < lastLineIndex) -->Line_78 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_31 $$ LineIterator lIterator = createLineIterator()[ CD ]
Line_4 $$ if (myEditorComponent.isOpaque()) -->Line_5 $$ g.setColor(defaultBackground)[ CD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_107 $$ start = iterationState.getStartOffset()[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_15 $$ position.x = drawBackground(g, backColor, prefixText, 0, prefixText.length(), position, myPrefixAttributes.getFontType(), defaultBackground, clip)[ FD ]
Line_14 $$ Color backColor = myPrefixAttributes.getBackgroundColor()-->Line_16 $$ prevBackColor = backColor[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_112 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_90 $$ lIterator.advance()[ FD ]
Line_98 $$ prevBackColor = backColor-->Line_101 $$ prevBackColor = backColor[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_33 $$ if (lIterator.atEnd()) [ CD ]
Line_31 $$ LineIterator lIterator = createLineIterator()-->Line_32 $$ lIterator.start(start)[ FD ]
Line_41 $$ TIntHashSet softWrapsToSkip = new TIntHashSet()-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_101 $$ prevBackColor = backColor-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_9 $$ int lineHeight = getLineHeight()-->Line_68 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ FD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_86 $$ if (collapsedFolderAt.getEndOffset() == clipEndOffset) [ CD ]
Line_111 $$ if (lIterator.getLineNumber() >= lastLineIndex && position.y <= clip.y + clip.height) -->Line_112 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ CD ]
Line_88 $$ prevBackColor = backColor-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_52 $$ if (color != null) -->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ CD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_112 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_58 $$ boolean[] caretRowPainted = new boolean[1]-->Line_112 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_8 $$ Color prevBackColor = null-->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_53 $$ drawBackground(g, color, softWrap.getIndentInPixels(), position, defaultBackground, clip)[ FD ]
Line_13 $$ if (clipStartVisualPos.line == 0 && prefixText != null) -->Line_15 $$ position.x = drawBackground(g, backColor, prefixText, 0, prefixText.length(), position, myPrefixAttributes.getFontType(), defaultBackground, clip)[ CD ]
Line_107 $$ start = iterationState.getStartOffset()-->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_78 $$ paintAfterFileEndBackground(iterationState, g, position, clip, lineHeight, defaultBackground, caretRowPainted)[ FD ]
Line_43 $$ if (softWrap != null) -->Line_56 $$ position.x = softWrap.getIndentInPixels()[ CD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_95 $$ prevBackColor = backColor[ FD ]
Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_88 $$ prevBackColor = backColor-->Line_94 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_16 $$ prevBackColor = backColor-->Line_97 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_67 $$ prevBackColor = backColor-->Line_88 $$ prevBackColor = backColor[ FD ]
Line_45 $$ Color color = null-->Line_50 $$ color = mySettings.isCaretRowShown() ? getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR) : null[ FD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_70 $$ if (backColor != null && !backColor.equals(defaultBackground)) [ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_100 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, hEnd, position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ FD ]
Line_70 $$ if (backColor != null && !backColor.equals(defaultBackground)) -->Line_72 $$ g.fillRect(position.x, position.y, clip.x + clip.width - position.x, lineHeight)[ CD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_11 $$ Point position = new Point(0, visibleLine * lineHeight)[ CD ]
Line_43 $$ if (softWrap != null) -->Line_46 $$ if (backColor != null && !backColor.equals(defaultBackground)) [ CD ]
Line_27 $$ int start = clipStartOffset-->Line_85 $$ start = lEnd[ FD ]
Line_105 $$ backColor = getBackgroundColor(attributes)-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_68 $$ paintAfterLineEndBackgroundSegments(g, iterationState, position, defaultBackground, lineHeight)[ CD ]
Line_65 $$ if (collapsedFolderAt == null) -->Line_66 $$ position.x = drawSoftWrapAwareBackground(g, backColor, prevBackColor, text, start, lEnd - lIterator.getSeparatorLength(), position, fontType, defaultBackground, clip, softWrapsToSkip, caretRowPainted)[ CD ]
Line_36 $$ IterationState iterationState = new IterationState(this, start, clipEndOffset, isPaintSelection())-->Line_104 $$ attributes = iterationState.getMergedAttributes()[ FD ]
Line_2 $$ private void paintBackgrounds(@NotNull Graphics g, @NotNull Rectangle clip, @NotNull LogicalPosition clipStartPosition, @NotNull VisualPosition clipStartVisualPos, int clipStartOffset, int clipEndOffset) -->Line_59 $$ CharSequence text = myDocument.getImmutableCharSequence()[ CD ]
Line_3 $$ Color defaultBackground = getBackgroundColor()-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
Line_54 $$ prevBackColor = color-->Line_87 $$ drawCollapsedFolderBackground(g, clip, defaultBackground, prevBackColor, position, backColor, fontType, softWrapsToSkip, caretRowPainted, text, collapsedFolderAt)[ FD ]
