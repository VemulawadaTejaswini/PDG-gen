Line_3 $$ EditorSettings settings = myEditor.getSettings()-->Line_7 $$ int x = settings.getRightMargin(myEditor.getProject()) * myView.getPlainSpaceWidth()[ FD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_9 $$ UIUtil.drawLine(g, x, clip.y, x, clip.y + clip.height)[ FD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_3 $$ EditorSettings settings = myEditor.getSettings()[ CD ]
Line_4 $$ Color rightMargin = myEditor.getColorsScheme().getColor(EditorColors.RIGHT_MARGIN_COLOR)-->Line_8 $$ g.setColor(rightMargin)[ FD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_7 $$ int x = settings.getRightMargin(myEditor.getProject()) * myView.getPlainSpaceWidth()[ CD ]
Line_5 $$ if (!settings.isRightMarginShown() || rightMargin == null)-->Line_6 $$ return[ CD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_4 $$ Color rightMargin = myEditor.getColorsScheme().getColor(EditorColors.RIGHT_MARGIN_COLOR)[ CD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_9 $$ UIUtil.drawLine(g, x, clip.y, x, clip.y + clip.height)[ CD ]
Line_7 $$ int x = settings.getRightMargin(myEditor.getProject()) * myView.getPlainSpaceWidth()-->Line_9 $$ UIUtil.drawLine(g, x, clip.y, x, clip.y + clip.height)[ FD ]
Line_3 $$ EditorSettings settings = myEditor.getSettings()-->Line_5 $$ if (!settings.isRightMarginShown() || rightMargin == null)[ FD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_5 $$ if (!settings.isRightMarginShown() || rightMargin == null)[ CD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_8 $$ g.setColor(rightMargin)[ FD ]
Line_2 $$ private void paintRightMargin(Graphics g, Rectangle clip) -->Line_8 $$ g.setColor(rightMargin)[ CD ]
