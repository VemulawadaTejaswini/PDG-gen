Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_5 $$ final Dimension size = c.getSize()[ CD ]
Line_6 $$ final Font font = c.getFont()-->Line_8 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(c, g, font)[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())[ FD ]
Line_3 $$ Graphics2D g = (Graphics2D) g2d-->Line_16 $$ g.fillRect(0, 0, size.width, size.height)[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_11 $$ Rectangle textRect = new Rectangle()[ CD ]
Line_3 $$ Graphics2D g = (Graphics2D) g2d-->Line_8 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(c, g, font)[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_8 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(c, g, font)[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_20 $$ drawCheckIcon(c, g, b, iconRect, selected, enabled)[ CD ]
Line_4 $$ JCheckBox b = (JCheckBox) c-->Line_18 $$ final boolean selected = b.isSelected()[ FD ]
Line_19 $$ final boolean enabled = b.isEnabled()-->Line_20 $$ drawCheckIcon(c, g, b, iconRect, selected, enabled)[ FD ]
Line_6 $$ final Font font = c.getFont()-->Line_7 $$ g.setFont(font)[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_12 $$ JBInsets.removeFrom(viewRect, c.getInsets())[ FD ]
Line_4 $$ JCheckBox b = (JCheckBox) c-->Line_20 $$ drawCheckIcon(c, g, b, iconRect, selected, enabled)[ FD ]
Line_3 $$ Graphics2D g = (Graphics2D) g2d-->Line_20 $$ drawCheckIcon(c, g, b, iconRect, selected, enabled)[ FD ]
Line_4 $$ JCheckBox b = (JCheckBox) c-->Line_15 $$ g.setColor(b.getBackground())[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_14 $$ if (c.isOpaque()) [ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_18 $$ final boolean selected = b.isSelected()[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_14 $$ if (c.isOpaque()) [ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_6 $$ final Font font = c.getFont()[ CD ]
Line_3 $$ Graphics2D g = (Graphics2D) g2d-->Line_21 $$ drawText(c, g, b, fm, textRect, text)[ FD ]
Line_11 $$ Rectangle textRect = new Rectangle()-->Line_21 $$ drawText(c, g, b, fm, textRect, text)[ FD ]
Line_4 $$ JCheckBox b = (JCheckBox) c-->Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_4 $$ JCheckBox b = (JCheckBox) c[ CD ]
Line_3 $$ Graphics2D g = (Graphics2D) g2d-->Line_15 $$ g.setColor(b.getBackground())[ FD ]
Line_4 $$ JCheckBox b = (JCheckBox) c-->Line_19 $$ final boolean enabled = b.isEnabled()[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_19 $$ final boolean enabled = b.isEnabled()[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_6 $$ final Font font = c.getFont()[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_9 $$ Rectangle viewRect = new Rectangle(size)[ CD ]
Line_9 $$ Rectangle viewRect = new Rectangle(size)-->Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_21 $$ drawText(c, g, b, fm, textRect, text)[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_12 $$ JBInsets.removeFrom(viewRect, c.getInsets())[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_7 $$ g.setFont(font)[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_5 $$ final Dimension size = c.getSize()[ FD ]
Line_14 $$ if (c.isOpaque()) -->Line_15 $$ g.setColor(b.getBackground())[ CD ]
Line_3 $$ Graphics2D g = (Graphics2D) g2d-->Line_7 $$ g.setFont(font)[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_10 $$ Rectangle iconRect = new Rectangle()[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_3 $$ Graphics2D g = (Graphics2D) g2d[ CD ]
Line_11 $$ Rectangle textRect = new Rectangle()-->Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_8 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(c, g, font)[ FD ]
Line_10 $$ Rectangle iconRect = new Rectangle()-->Line_20 $$ drawCheckIcon(c, g, b, iconRect, selected, enabled)[ FD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_20 $$ drawCheckIcon(c, g, b, iconRect, selected, enabled)[ FD ]
Line_8 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(c, g, font)-->Line_21 $$ drawText(c, g, b, fm, textRect, text)[ FD ]
Line_4 $$ JCheckBox b = (JCheckBox) c-->Line_21 $$ drawText(c, g, b, fm, textRect, text)[ FD ]
Line_9 $$ Rectangle viewRect = new Rectangle(size)-->Line_12 $$ JBInsets.removeFrom(viewRect, c.getInsets())[ FD ]
Line_10 $$ Rectangle iconRect = new Rectangle()-->Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())[ FD ]
Line_18 $$ final boolean selected = b.isSelected()-->Line_20 $$ drawCheckIcon(c, g, b, iconRect, selected, enabled)[ FD ]
Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())-->Line_21 $$ drawText(c, g, b, fm, textRect, text)[ FD ]
Line_14 $$ if (c.isOpaque()) -->Line_16 $$ g.fillRect(0, 0, size.width, size.height)[ CD ]
Line_2 $$ public synchronized void paint(Graphics g2d, JComponent c) -->Line_21 $$ drawText(c, g, b, fm, textRect, text)[ FD ]
Line_8 $$ FontMetrics fm = SwingUtilities2.getFontMetrics(c, g, font)-->Line_13 $$ String text = SwingUtilities.layoutCompoundLabel(c, fm, b.getText(), getDefaultIcon(), b.getVerticalAlignment(), b.getHorizontalAlignment(), b.getVerticalTextPosition(), b.getHorizontalTextPosition(), viewRect, iconRect, textRect, b.getIconTextGap())[ FD ]
