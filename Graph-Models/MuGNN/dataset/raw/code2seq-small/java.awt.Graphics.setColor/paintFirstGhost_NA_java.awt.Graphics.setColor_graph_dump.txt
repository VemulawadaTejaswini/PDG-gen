Line_5 $$ int topY = path.getY() + path.deltaY(getSelectionTabVShift())-->Line_13 $$ path.lineTo(bottomX - getArcSize(), topY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_5 $$ int topY = path.getY() + path.deltaY(getSelectionTabVShift())[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_19 $$ path.quadTo(topX + path.deltaX(getCurveArc() - 1), topY + path.deltaY(Math.abs(bottomY - topY) / 4), topX, topY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_19 $$ path.quadTo(topX + path.deltaX(getCurveArc() - 1), topY + path.deltaY(Math.abs(bottomY - topY) / 4), topX, topY)[ CD ]
Line_6 $$ int bottomX = path.getMaxX() + path.deltaX(1)-->Line_14 $$ path.quadTo(bottomX, topY, bottomX, topY + path.deltaY(getArcSize()))[ FD ]
Line_4 $$ int topX = path.getX() + path.deltaX(getCurveArc())-->Line_18 $$ path.quadTo(topX - path.deltaX(getCurveArc() * 2 - 1), bottomY - path.deltaY(Math.abs(bottomY - topY) / 4), topX, bottomY - path.deltaY(Math.abs(bottomY - topY) / 2))[ FD ]
Line_7 $$ int bottomY = path.getMaxY() + path.deltaY(1)-->Line_17 $$ path.lineTo(topX, bottomY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_21 $$ g2d.setColor(getBackground())[ FD ]
Line_5 $$ int topY = path.getY() + path.deltaY(getSelectionTabVShift())-->Line_19 $$ path.quadTo(topX + path.deltaX(getCurveArc() - 1), topY + path.deltaY(Math.abs(bottomY - topY) / 4), topX, topY)[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_24 $$ g2d.draw(path.getShape())[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_14 $$ path.quadTo(bottomX, topY, bottomX, topY + path.deltaY(getArcSize()))[ FD ]
Line_10 $$ if (isLeftFromSelection) -->Line_13 $$ path.lineTo(bottomX - getArcSize(), topY)[ CD ]
Line_6 $$ int bottomX = path.getMaxX() + path.deltaX(1)-->Line_16 $$ path.lineTo(bottomX, bottomY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_25 $$ g2d.setColor(getTopBlockColor())[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_5 $$ int topY = path.getY() + path.deltaY(getSelectionTabVShift())[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_17 $$ path.lineTo(topX, bottomY)[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_21 $$ g2d.setColor(getBackground())[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_7 $$ int bottomY = path.getMaxY() + path.deltaY(1)[ FD ]
Line_5 $$ int topY = path.getY() + path.deltaY(getSelectionTabVShift())-->Line_8 $$ path.moveTo(topX, topY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_22 $$ g2d.fill(path.getShape())[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_16 $$ path.lineTo(bottomX, bottomY)[ FD ]
Line_4 $$ int topX = path.getX() + path.deltaX(getCurveArc())-->Line_17 $$ path.lineTo(topX, bottomY)[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_22 $$ g2d.fill(path.getShape())[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_25 $$ g2d.setColor(getTopBlockColor())[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_6 $$ int bottomX = path.getMaxX() + path.deltaX(1)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_8 $$ path.moveTo(topX, topY)[ CD ]
Line_5 $$ int topY = path.getY() + path.deltaY(getSelectionTabVShift())-->Line_11 $$ path.lineTo(bottomX, topY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_26 $$ g2d.drawLine(topX + path.deltaX(1), topY + path.deltaY(1), bottomX - path.deltaX(getArcSize()), topY + path.deltaY(1))[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_20 $$ path.closePath()[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_24 $$ g2d.draw(path.getShape())[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_26 $$ g2d.drawLine(topX + path.deltaX(1), topY + path.deltaY(1), bottomX - path.deltaX(getArcSize()), topY + path.deltaY(1))[ FD ]
Line_6 $$ int bottomX = path.getMaxX() + path.deltaX(1)-->Line_11 $$ path.lineTo(bottomX, topY)[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_28 $$ g2d.drawLine(bottomX - path.deltaX(1), topY + path.deltaY(getArcSize()), bottomX - path.deltaX(1), bottomY - path.deltaY(1))[ FD ]
Line_10 $$ if (isLeftFromSelection) -->Line_11 $$ path.lineTo(bottomX, topY)[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_18 $$ path.quadTo(topX - path.deltaX(getCurveArc() * 2 - 1), bottomY - path.deltaY(Math.abs(bottomY - topY) / 4), topX, bottomY - path.deltaY(Math.abs(bottomY - topY) / 2))[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_27 $$ g2d.setColor(getRightBlockColor())[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_28 $$ g2d.drawLine(bottomX - path.deltaX(1), topY + path.deltaY(getArcSize()), bottomX - path.deltaX(1), bottomY - path.deltaY(1))[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_9 $$ final boolean isLeftFromSelection = mySingleRowLayout.myLastSingRowLayout.toLayout.indexOf(getSelectedInfo()) == 0[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_11 $$ path.lineTo(bottomX, topY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_22 $$ g2d.fill(path.getShape())[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_4 $$ int topX = path.getX() + path.deltaX(getCurveArc())[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_26 $$ g2d.drawLine(topX + path.deltaX(1), topY + path.deltaY(1), bottomX - path.deltaX(getArcSize()), topY + path.deltaY(1))[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_28 $$ g2d.drawLine(bottomX - path.deltaX(1), topY + path.deltaY(getArcSize()), bottomX - path.deltaX(1), bottomY - path.deltaY(1))[ FD ]
Line_10 $$ if (isLeftFromSelection) -->Line_14 $$ path.quadTo(bottomX, topY, bottomX, topY + path.deltaY(getArcSize()))[ CD ]
Line_5 $$ int topY = path.getY() + path.deltaY(getSelectionTabVShift())-->Line_14 $$ path.quadTo(bottomX, topY, bottomX, topY + path.deltaY(getArcSize()))[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_10 $$ if (isLeftFromSelection) [ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_6 $$ int bottomX = path.getMaxX() + path.deltaX(1)[ CD ]
Line_4 $$ int topX = path.getX() + path.deltaX(getCurveArc())-->Line_19 $$ path.quadTo(topX + path.deltaX(getCurveArc() - 1), topY + path.deltaY(Math.abs(bottomY - topY) / 4), topX, topY)[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_17 $$ path.lineTo(topX, bottomY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_27 $$ g2d.setColor(getRightBlockColor())[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_4 $$ int topX = path.getX() + path.deltaX(getCurveArc())[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_7 $$ int bottomY = path.getMaxY() + path.deltaY(1)[ CD ]
Line_4 $$ int topX = path.getX() + path.deltaX(getCurveArc())-->Line_8 $$ path.moveTo(topX, topY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_23 $$ g2d.setColor(getBoundsColor())[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_8 $$ path.moveTo(topX, topY)[ FD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_13 $$ path.lineTo(bottomX - getArcSize(), topY)[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_18 $$ path.quadTo(topX - path.deltaX(getCurveArc() * 2 - 1), bottomY - path.deltaY(Math.abs(bottomY - topY) / 4), topX, bottomY - path.deltaY(Math.abs(bottomY - topY) / 2))[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_23 $$ g2d.setColor(getBoundsColor())[ FD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_24 $$ g2d.draw(path.getShape())[ CD ]
Line_2 $$ protected void paintFirstGhost(Graphics2D g2d) -->Line_16 $$ path.lineTo(bottomX, bottomY)[ CD ]
Line_3 $$ final ShapeTransform path = getEffectiveLayout().createShapeTransform(mySingleRowLayout.myLastSingRowLayout.firstGhost)-->Line_20 $$ path.closePath()[ FD ]
Line_7 $$ int bottomY = path.getMaxY() + path.deltaY(1)-->Line_16 $$ path.lineTo(bottomX, bottomY)[ FD ]
