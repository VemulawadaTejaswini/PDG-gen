Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_10 $$ g.setColor(backColor)[ FD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_3 $$ Color backColor = iterationState.getPastFileEndBackground()[ FD ]
Line_4 $$ if (backColor == null || backColor.equals(defaultBackground)) -->Line_5 $$ return[ CD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_11 $$ g.fillRect(position.x, position.y, clip.x + clip.width - position.x, lineHeight)[ CD ]
Line_7 $$ if (caretRowPainted[0] && backColor.equals(getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR))) -->Line_8 $$ return[ CD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_4 $$ if (backColor == null || backColor.equals(defaultBackground)) [ CD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_10 $$ g.setColor(backColor)[ CD ]
Line_3 $$ Color backColor = iterationState.getPastFileEndBackground()-->Line_7 $$ if (caretRowPainted[0] && backColor.equals(getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR))) [ FD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_4 $$ if (backColor == null || backColor.equals(defaultBackground)) [ FD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_11 $$ g.fillRect(position.x, position.y, clip.x + clip.width - position.x, lineHeight)[ FD ]
Line_3 $$ Color backColor = iterationState.getPastFileEndBackground()-->Line_4 $$ if (backColor == null || backColor.equals(defaultBackground)) [ FD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_7 $$ if (caretRowPainted[0] && backColor.equals(getColorsScheme().getColor(EditorColors.CARET_ROW_COLOR))) [ CD ]
Line_2 $$ private void paintAfterFileEndBackground(@NotNull IterationState iterationState, @NotNull Graphics g, @NotNull Point position, @NotNull Rectangle clip, int lineHeight, @NotNull Color defaultBackground, @NotNull boolean[] caretRowPainted) -->Line_3 $$ Color backColor = iterationState.getPastFileEndBackground()[ CD ]
Line_3 $$ Color backColor = iterationState.getPastFileEndBackground()-->Line_10 $$ g.setColor(backColor)[ FD ]
