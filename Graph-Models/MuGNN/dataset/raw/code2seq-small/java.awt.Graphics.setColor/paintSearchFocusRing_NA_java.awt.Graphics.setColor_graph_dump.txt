Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_4 $$ final Color[] colors = new Color[] [ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_11 $$ if (maxArcSize > 0)[ FD ]
Line_12 $$ arcSize = Math.min(maxArcSize, arcSize)-->Line_20 $$ g.drawRoundRect(r.x, r.y, r.width - 1, r.height - 1, arcSize, arcSize)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_25 $$ g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, oldAntialiasingValue)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_13 $$ if (arcSize % 2 == 1)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_15 $$ g.setColor(colors[0])[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_8 $$ g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, MacUIUtil.USE_QUARTZ ? RenderingHints.VALUE_STROKE_PURE : RenderingHints.VALUE_STROKE_NORMALIZE)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_17 $$ g.setColor(colors[1])[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_18 $$ g.drawRoundRect(r.x + 1, r.y + 1, r.width - 3, r.height - 3, arcSize - 2, arcSize - 2)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_24 $$ g.drawRoundRect(r.x + 4, r.y + 4, r.width - 9, r.height - 9, arcSize - 8, arcSize - 8)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_6 $$ final Object oldStrokeControlValue = g.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_7 $$ g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_21 $$ g.setColor(colors[3])[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_23 $$ g.setColor(colors[4])[ CD ]
Line_10 $$ int arcSize = r.height - 1-->Line_14 $$ arcSize--[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_5 $$ final Object oldAntialiasingValue = g.getRenderingHint(RenderingHints.KEY_ANTIALIASING)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_17 $$ g.setColor(colors[1])[ FD ]
Line_13 $$ if (arcSize % 2 == 1)-->Line_14 $$ arcSize--[ CD ]
Line_10 $$ int arcSize = r.height - 1-->Line_20 $$ g.drawRoundRect(r.x, r.y, r.width - 1, r.height - 1, arcSize, arcSize)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_3 $$ int correction = UIUtil.isUnderAquaLookAndFeel() ? 30 : UIUtil.isUnderDarcula() ? 50 : 0[ CD ]
Line_12 $$ arcSize = Math.min(maxArcSize, arcSize)-->Line_14 $$ arcSize--[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_26 $$ g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, oldStrokeControlValue)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_9 $$ final Rectangle r = new Rectangle(bounds.x - 3, bounds.y - 3, bounds.width + 6, bounds.height + 6)[ CD ]
Line_11 $$ if (maxArcSize > 0)-->Line_12 $$ arcSize = Math.min(maxArcSize, arcSize)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_23 $$ g.setColor(colors[4])[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_7 $$ g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_6 $$ final Object oldStrokeControlValue = g.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_16 $$ g.drawRoundRect(r.x + 2, r.y + 2, r.width - 5, r.height - 5, arcSize - 4, arcSize - 4)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_20 $$ g.drawRoundRect(r.x, r.y, r.width - 1, r.height - 1, arcSize, arcSize)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_20 $$ g.drawRoundRect(r.x, r.y, r.width - 1, r.height - 1, arcSize, arcSize)[ CD ]
Line_5 $$ final Object oldAntialiasingValue = g.getRenderingHint(RenderingHints.KEY_ANTIALIASING)-->Line_25 $$ g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, oldAntialiasingValue)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_22 $$ g.drawRoundRect(r.x + 3, r.y + 3, r.width - 7, r.height - 7, arcSize - 6, arcSize - 6)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_21 $$ g.setColor(colors[3])[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_5 $$ final Object oldAntialiasingValue = g.getRenderingHint(RenderingHints.KEY_ANTIALIASING)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_19 $$ g.setColor(colors[2])[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_15 $$ g.setColor(colors[0])[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_22 $$ g.drawRoundRect(r.x + 3, r.y + 3, r.width - 7, r.height - 7, arcSize - 6, arcSize - 6)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_26 $$ g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, oldStrokeControlValue)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_18 $$ g.drawRoundRect(r.x + 1, r.y + 1, r.width - 3, r.height - 3, arcSize - 2, arcSize - 2)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_19 $$ g.setColor(colors[2])[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_11 $$ if (maxArcSize > 0)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_16 $$ g.drawRoundRect(r.x + 2, r.y + 2, r.width - 5, r.height - 5, arcSize - 4, arcSize - 4)[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_12 $$ arcSize = Math.min(maxArcSize, arcSize)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_10 $$ int arcSize = r.height - 1[ CD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_24 $$ g.drawRoundRect(r.x + 4, r.y + 4, r.width - 9, r.height - 9, arcSize - 8, arcSize - 8)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_25 $$ g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, oldAntialiasingValue)[ FD ]
Line_2 $$ public static void paintSearchFocusRing(Graphics2D g, Rectangle bounds, int maxArcSize) -->Line_8 $$ g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, MacUIUtil.USE_QUARTZ ? RenderingHints.VALUE_STROKE_PURE : RenderingHints.VALUE_STROKE_NORMALIZE)[ FD ]
Line_6 $$ final Object oldStrokeControlValue = g.getRenderingHint(RenderingHints.KEY_STROKE_CONTROL)-->Line_26 $$ g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, oldStrokeControlValue)[ FD ]
Line_10 $$ int arcSize = r.height - 1-->Line_12 $$ arcSize = Math.min(maxArcSize, arcSize)[ FD ]
