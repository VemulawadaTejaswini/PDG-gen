Line_22 $$ int[] xBottomPoints = Arrays.copyOfRange(xPoints, xPoints.length / 2, xPoints.length)-->Line_29 $$ gg.drawPolyline(xBottomPoints, yBottomPoints, xPoints.length / 2)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_15 $$ gg.setColor(color)[ FD ]
Line_12 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_28 $$ gg.setColor(color)[ FD ]
Line_21 $$ if (scheme.getColor(BOTTOM_BORDER) != null) -->Line_32 $$ gg.setTransform(oldTransform)[ CD ]
Line_10 $$ if (scheme.getColor(TOP_BORDER) != null) -->Line_19 $$ gg.setTransform(oldTransform)[ CD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_13 $$ if (color == null)[ CD ]
Line_25 $$ Color color = getBottomBorderColor(i, lineHeight, scheme)-->Line_26 $$ if (color == null)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_4 $$ if (scheme == null)[ FD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_25 $$ Color color = getBottomBorderColor(i, lineHeight, scheme)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_3 $$ int height = getHeight(lineHeight)[ FD ]
Line_24 $$ for (int i = height - 1; i >= 0; i--) -->Line_28 $$ gg.setColor(color)[ CD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_4 $$ if (scheme == null)[ CD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_16 $$ gg.drawPolyline(xPoints, yPoints, xPoints.length / 2)[ FD ]
Line_10 $$ if (scheme.getColor(TOP_BORDER) != null) -->Line_11 $$ for (int i = 0; i < height; i++) [ CD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_16 $$ gg.drawPolyline(xPoints, yPoints, xPoints.length / 2)[ FD ]
Line_21 $$ if (scheme.getColor(BOTTOM_BORDER) != null) -->Line_24 $$ for (int i = height - 1; i >= 0; i--) [ CD ]
Line_12 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_26 $$ if (color == null)[ FD ]
Line_25 $$ Color color = getBottomBorderColor(i, lineHeight, scheme)-->Line_28 $$ gg.setColor(color)[ FD ]
Line_4 $$ if (scheme == null)-->Line_5 $$ scheme = EditorColorsManager.getInstance().getGlobalScheme()[ CD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_8 $$ gg.setColor(getBackgroundColor(scheme))[ CD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_6 $$ Graphics2D gg = ((Graphics2D) g)[ CD ]
Line_21 $$ if (scheme.getColor(BOTTOM_BORDER) != null) -->Line_22 $$ int[] xBottomPoints = Arrays.copyOfRange(xPoints, xPoints.length / 2, xPoints.length)[ CD ]
Line_24 $$ for (int i = height - 1; i >= 0; i--) -->Line_25 $$ Color color = getBottomBorderColor(i, lineHeight, scheme)[ CD ]
Line_7 $$ AffineTransform oldTransform = gg.getTransform()-->Line_32 $$ gg.setTransform(oldTransform)[ FD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_24 $$ for (int i = height - 1; i >= 0; i--) [ FD ]
Line_24 $$ for (int i = height - 1; i >= 0; i--) -->Line_29 $$ gg.drawPolyline(xBottomPoints, yBottomPoints, xPoints.length / 2)[ CD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_10 $$ if (scheme.getColor(TOP_BORDER) != null) [ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_8 $$ gg.setColor(getBackgroundColor(scheme))[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_12 $$ Color color = getTopBorderColor(i, lineHeight, scheme)[ FD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_15 $$ gg.setColor(color)[ CD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_8 $$ gg.setColor(getBackgroundColor(scheme))[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_22 $$ int[] xBottomPoints = Arrays.copyOfRange(xPoints, xPoints.length / 2, xPoints.length)[ FD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_12 $$ Color color = getTopBorderColor(i, lineHeight, scheme)[ CD ]
Line_3 $$ int height = getHeight(lineHeight)-->Line_11 $$ for (int i = 0; i < height; i++) [ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_21 $$ if (scheme.getColor(BOTTOM_BORDER) != null) [ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_19 $$ gg.setTransform(oldTransform)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_3 $$ int height = getHeight(lineHeight)[ CD ]
Line_21 $$ if (scheme.getColor(BOTTOM_BORDER) != null) -->Line_23 $$ int[] yBottomPoints = Arrays.copyOfRange(yPoints, xPoints.length / 2, xPoints.length)[ CD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_17 $$ gg.translate(0, 1)[ FD ]
Line_12 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_13 $$ if (color == null)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_29 $$ gg.drawPolyline(xBottomPoints, yBottomPoints, xPoints.length / 2)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_32 $$ gg.setTransform(oldTransform)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_10 $$ if (scheme.getColor(TOP_BORDER) != null) [ CD ]
Line_12 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_15 $$ gg.setColor(color)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_28 $$ gg.setColor(color)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_9 $$ gg.fillPolygon(xPoints, yPoints, xPoints.length)[ CD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_17 $$ gg.translate(0, 1)[ CD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_23 $$ int[] yBottomPoints = Arrays.copyOfRange(yPoints, xPoints.length / 2, xPoints.length)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_25 $$ Color color = getBottomBorderColor(i, lineHeight, scheme)[ FD ]
Line_24 $$ for (int i = height - 1; i >= 0; i--) -->Line_26 $$ if (color == null)[ CD ]
Line_24 $$ for (int i = height - 1; i >= 0; i--) -->Line_25 $$ Color color = getBottomBorderColor(i, lineHeight, scheme)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_21 $$ if (scheme.getColor(BOTTOM_BORDER) != null) [ CD ]
Line_23 $$ int[] yBottomPoints = Arrays.copyOfRange(yPoints, xPoints.length / 2, xPoints.length)-->Line_29 $$ gg.drawPolyline(xBottomPoints, yBottomPoints, xPoints.length / 2)[ FD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_9 $$ gg.fillPolygon(xPoints, yPoints, xPoints.length)[ FD ]
Line_24 $$ for (int i = height - 1; i >= 0; i--) -->Line_30 $$ gg.translate(0, -1)[ CD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_16 $$ gg.drawPolyline(xPoints, yPoints, xPoints.length / 2)[ CD ]
Line_2 $$ private static void paintConnectorLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_7 $$ AffineTransform oldTransform = gg.getTransform()[ CD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_30 $$ gg.translate(0, -1)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_7 $$ AffineTransform oldTransform = gg.getTransform()[ FD ]
Line_11 $$ for (int i = 0; i < height; i++) -->Line_12 $$ Color color = getTopBorderColor(i, lineHeight, scheme)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_9 $$ gg.fillPolygon(xPoints, yPoints, xPoints.length)[ FD ]
Line_7 $$ AffineTransform oldTransform = gg.getTransform()-->Line_19 $$ gg.setTransform(oldTransform)[ FD ]
