Line_4 $$ View view = (View) c.getClientProperty(BasicHTML.propertyKey)-->Line_5 $$ if (view != null) [ FD ]
Line_5 $$ if (view != null) -->Line_8 $$ g.setColor(b.isEnabled() ? b.getForeground() : getDisabledTextColor())[ CD ]
Line_5 $$ if (view != null) -->Line_6 $$ view.paint(g, textRect)[ CD ]
Line_5 $$ if (view != null) -->Line_9 $$ SwingUtilities2.drawStringUnderlineCharAt(c, g, text, b.getDisplayedMnemonicIndex(), textRect.x, textRect.y + fm.getAscent())[ CD ]
Line_4 $$ View view = (View) c.getClientProperty(BasicHTML.propertyKey)-->Line_6 $$ view.paint(g, textRect)[ FD ]
Line_3 $$ if (text != null) -->Line_4 $$ View view = (View) c.getClientProperty(BasicHTML.propertyKey)[ CD ]
Line_2 $$ protected void drawText(JComponent c, Graphics2D g, JCheckBox b, FontMetrics fm, Rectangle textRect, String text) -->Line_8 $$ g.setColor(b.isEnabled() ? b.getForeground() : getDisabledTextColor())[ FD ]
Line_2 $$ protected void drawText(JComponent c, Graphics2D g, JCheckBox b, FontMetrics fm, Rectangle textRect, String text) -->Line_9 $$ SwingUtilities2.drawStringUnderlineCharAt(c, g, text, b.getDisplayedMnemonicIndex(), textRect.x, textRect.y + fm.getAscent())[ FD ]
Line_2 $$ protected void drawText(JComponent c, Graphics2D g, JCheckBox b, FontMetrics fm, Rectangle textRect, String text) -->Line_3 $$ if (text != null) [ CD ]
Line_2 $$ protected void drawText(JComponent c, Graphics2D g, JCheckBox b, FontMetrics fm, Rectangle textRect, String text) -->Line_4 $$ View view = (View) c.getClientProperty(BasicHTML.propertyKey)[ FD ]
Line_3 $$ if (text != null) -->Line_5 $$ if (view != null) [ CD ]
Line_2 $$ protected void drawText(JComponent c, Graphics2D g, JCheckBox b, FontMetrics fm, Rectangle textRect, String text) -->Line_6 $$ view.paint(g, textRect)[ FD ]
Line_2 $$ protected void drawText(JComponent c, Graphics2D g, JCheckBox b, FontMetrics fm, Rectangle textRect, String text) -->Line_3 $$ if (text != null) [ FD ]
