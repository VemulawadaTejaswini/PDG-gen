Line_3 $$ if (tabPlacement == BOTTOM || myPaintContentBorder) -->Line_7 $$ Rectangle selRect = selectedIndex < 0 ? null : getTabBounds(selectedIndex, calcRect)[ CD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_10 $$ UIUtil.drawLine(g, x, y + h - 1, x + w - 1, y + h - 1)[ FD ]
Line_13 $$ if (leftToRight || lastInRun) -->Line_14 $$ UIUtil.drawLine(g, x, bottom, selRect.x, bottom)[ CD ]
Line_19 $$ if (leftToRight && !lastInRun) -->Line_20 $$ UIUtil.drawLine(g, selRect.x + selRect.width, bottom, right, bottom)[ CD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_8 $$ g.setColor(darkShadow)[ FD ]
Line_3 $$ if (tabPlacement == BOTTOM || myPaintContentBorder) -->Line_9 $$ if (tabPlacement != BOTTOM || selectedIndex < 0 || (selRect.y - 1 > h) || (selRect.x < x || selRect.x > x + w)) [ CD ]
Line_18 $$ if (selRect.x + selRect.width < x + w - 2) -->Line_19 $$ if (leftToRight && !lastInRun) [ CD ]
Line_5 $$ int bottom = y + h - 1-->Line_14 $$ UIUtil.drawLine(g, x, bottom, selRect.x, bottom)[ FD ]
Line_9 $$ if (tabPlacement != BOTTOM || selectedIndex < 0 || (selRect.y - 1 > h) || (selRect.x < x || selRect.x > x + w)) -->Line_18 $$ if (selRect.x + selRect.width < x + w - 2) [ CD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_3 $$ if (tabPlacement == BOTTOM || myPaintContentBorder) [ CD ]
Line_4 $$ boolean leftToRight = isLeftToRight(tabPane)-->Line_19 $$ if (leftToRight && !lastInRun) [ FD ]
Line_9 $$ if (tabPlacement != BOTTOM || selectedIndex < 0 || (selRect.y - 1 > h) || (selRect.x < x || selRect.x > x + w)) -->Line_12 $$ boolean lastInRun = isLastInRun(selectedIndex)[ CD ]
Line_5 $$ int bottom = y + h - 1-->Line_16 $$ UIUtil.drawLine(g, x, bottom, selRect.x - 1, bottom)[ FD ]
Line_19 $$ if (leftToRight && !lastInRun) -->Line_22 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 1, bottom, right, bottom)[ CD ]
Line_3 $$ if (tabPlacement == BOTTOM || myPaintContentBorder) -->Line_5 $$ int bottom = y + h - 1[ CD ]
Line_5 $$ int bottom = y + h - 1-->Line_22 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 1, bottom, right, bottom)[ FD ]
Line_6 $$ int right = x + w - 1-->Line_22 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 1, bottom, right, bottom)[ FD ]
Line_12 $$ boolean lastInRun = isLastInRun(selectedIndex)-->Line_19 $$ if (leftToRight && !lastInRun) [ FD ]
Line_12 $$ boolean lastInRun = isLastInRun(selectedIndex)-->Line_13 $$ if (leftToRight || lastInRun) [ FD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_12 $$ boolean lastInRun = isLastInRun(selectedIndex)[ FD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_7 $$ Rectangle selRect = selectedIndex < 0 ? null : getTabBounds(selectedIndex, calcRect)[ FD ]
Line_13 $$ if (leftToRight || lastInRun) -->Line_16 $$ UIUtil.drawLine(g, x, bottom, selRect.x - 1, bottom)[ CD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_20 $$ UIUtil.drawLine(g, selRect.x + selRect.width, bottom, right, bottom)[ FD ]
Line_9 $$ if (tabPlacement != BOTTOM || selectedIndex < 0 || (selRect.y - 1 > h) || (selRect.x < x || selRect.x > x + w)) -->Line_13 $$ if (leftToRight || lastInRun) [ CD ]
Line_3 $$ if (tabPlacement == BOTTOM || myPaintContentBorder) -->Line_6 $$ int right = x + w - 1[ CD ]
Line_3 $$ if (tabPlacement == BOTTOM || myPaintContentBorder) -->Line_8 $$ g.setColor(darkShadow)[ CD ]
Line_4 $$ boolean leftToRight = isLeftToRight(tabPane)-->Line_13 $$ if (leftToRight || lastInRun) [ FD ]
Line_3 $$ if (tabPlacement == BOTTOM || myPaintContentBorder) -->Line_4 $$ boolean leftToRight = isLeftToRight(tabPane)[ CD ]
Line_6 $$ int right = x + w - 1-->Line_20 $$ UIUtil.drawLine(g, selRect.x + selRect.width, bottom, right, bottom)[ FD ]
Line_9 $$ if (tabPlacement != BOTTOM || selectedIndex < 0 || (selRect.y - 1 > h) || (selRect.x < x || selRect.x > x + w)) -->Line_10 $$ UIUtil.drawLine(g, x, y + h - 1, x + w - 1, y + h - 1)[ CD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_16 $$ UIUtil.drawLine(g, x, bottom, selRect.x - 1, bottom)[ FD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_14 $$ UIUtil.drawLine(g, x, bottom, selRect.x, bottom)[ FD ]
Line_2 $$ protected void paintContentBorderBottomEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_22 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 1, bottom, right, bottom)[ FD ]
Line_5 $$ int bottom = y + h - 1-->Line_20 $$ UIUtil.drawLine(g, selRect.x + selRect.width, bottom, right, bottom)[ FD ]
