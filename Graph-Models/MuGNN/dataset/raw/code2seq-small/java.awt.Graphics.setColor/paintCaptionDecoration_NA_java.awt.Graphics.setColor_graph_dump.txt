Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_14 $$ boolean inGroup = false[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_7 $$ if (canCellGrow(container, isRow, index)) [ CD ]
Line_23 $$ if (minMember <= index && index <= maxMember) -->Line_24 $$ if (i % 2 == 0) [ CD ]
Line_12 $$ boolean haveTopLeft = false, haveTopRight = false, haveTopLine = false-->Line_25 $$ haveTopLeft = haveTopLeft || index > minMember[ FD ]
Line_24 $$ if (i % 2 == 0) -->Line_27 $$ haveTopLine = haveTopLine || inGroup[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_35 $$ g2d.setColor(PlatformColors.BLUE)[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_8 $$ drawGrowMarker(isRow, g2d, rc)[ FD ]
Line_15 $$ for (int i = 0; i < groups.length; i++) -->Line_17 $$ int maxMember = -1[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_36 $$ drawGroupLine(rc, isRow, g2d, true, haveTopLeft, haveTopRight, haveTopLine)[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_3 $$ if (isGapCell(container, isRow, index)) [ FD ]
Line_24 $$ if (i % 2 == 0) -->Line_31 $$ haveBottomLine = haveBottomLine || inGroup[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_5 $$ g2d.fillRect(rc.x, rc.y, rc.width, rc.height)[ FD ]
Line_7 $$ if (canCellGrow(container, isRow, index)) -->Line_8 $$ drawGrowMarker(isRow, g2d, rc)[ CD ]
Line_25 $$ haveTopLeft = haveTopLeft || index > minMember-->Line_36 $$ drawGroupLine(rc, isRow, g2d, true, haveTopLeft, haveTopRight, haveTopLine)[ FD ]
Line_17 $$ int maxMember = -1-->Line_20 $$ maxMember = Math.max(member - 1, maxMember)[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_11 $$ int[][] groups = isRow ? layout.getRowGroups() : layout.getColumnGroups()[ CD ]
Line_14 $$ boolean inGroup = false-->Line_21 $$ inGroup = inGroup || (member - 1 == index)[ FD ]
Line_27 $$ haveTopLine = haveTopLine || inGroup-->Line_36 $$ drawGroupLine(rc, isRow, g2d, true, haveTopLeft, haveTopRight, haveTopLine)[ FD ]
Line_13 $$ boolean haveBottomLeft = false, haveBottomRight = false, haveBottomLine = false-->Line_30 $$ haveBottomRight = haveBottomRight || index < maxMember[ FD ]
Line_24 $$ if (i % 2 == 0) -->Line_30 $$ haveBottomRight = haveBottomRight || index < maxMember[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_13 $$ boolean haveBottomLeft = false, haveBottomRight = false, haveBottomLine = false[ CD ]
Line_24 $$ if (i % 2 == 0) -->Line_25 $$ haveTopLeft = haveTopLeft || index > minMember[ CD ]
Line_3 $$ if (isGapCell(container, isRow, index)) -->Line_4 $$ g2d.setColor(Color.LIGHT_GRAY)[ CD ]
Line_21 $$ inGroup = inGroup || (member - 1 == index)-->Line_31 $$ haveBottomLine = haveBottomLine || inGroup[ FD ]
Line_16 $$ int minMember = Integer.MAX_VALUE-->Line_19 $$ minMember = Math.min(member - 1, minMember)[ FD ]
Line_24 $$ if (i % 2 == 0) -->Line_29 $$ haveBottomLeft = haveBottomLeft || index > minMember[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_7 $$ if (canCellGrow(container, isRow, index)) [ FD ]
Line_15 $$ for (int i = 0; i < groups.length; i++) -->Line_16 $$ int minMember = Integer.MAX_VALUE[ CD ]
Line_12 $$ boolean haveTopLeft = false, haveTopRight = false, haveTopLine = false-->Line_36 $$ drawGroupLine(rc, isRow, g2d, true, haveTopLeft, haveTopRight, haveTopLine)[ FD ]
Line_14 $$ boolean inGroup = false-->Line_31 $$ haveBottomLine = haveBottomLine || inGroup[ FD ]
Line_3 $$ if (isGapCell(container, isRow, index)) -->Line_5 $$ g2d.fillRect(rc.x, rc.y, rc.width, rc.height)[ CD ]
Line_10 $$ FormLayout layout = (FormLayout) container.getLayout()-->Line_11 $$ int[][] groups = isRow ? layout.getRowGroups() : layout.getColumnGroups()[ FD ]
Line_30 $$ haveBottomRight = haveBottomRight || index < maxMember-->Line_37 $$ drawGroupLine(rc, isRow, g2d, false, haveBottomLeft, haveBottomRight, haveBottomLine)[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_10 $$ FormLayout layout = (FormLayout) container.getLayout()[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_37 $$ drawGroupLine(rc, isRow, g2d, false, haveBottomLeft, haveBottomRight, haveBottomLine)[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_15 $$ for (int i = 0; i < groups.length; i++) [ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_3 $$ if (isGapCell(container, isRow, index)) [ CD ]
Line_15 $$ for (int i = 0; i < groups.length; i++) -->Line_23 $$ if (minMember <= index && index <= maxMember) [ CD ]
Line_12 $$ boolean haveTopLeft = false, haveTopRight = false, haveTopLine = false-->Line_26 $$ haveTopRight = haveTopRight || index < maxMember[ FD ]
Line_29 $$ haveBottomLeft = haveBottomLeft || index > minMember-->Line_37 $$ drawGroupLine(rc, isRow, g2d, false, haveBottomLeft, haveBottomRight, haveBottomLine)[ FD ]
Line_12 $$ boolean haveTopLeft = false, haveTopRight = false, haveTopLine = false-->Line_27 $$ haveTopLine = haveTopLine || inGroup[ FD ]
Line_13 $$ boolean haveBottomLeft = false, haveBottomRight = false, haveBottomLine = false-->Line_31 $$ haveBottomLine = haveBottomLine || inGroup[ FD ]
Line_21 $$ inGroup = inGroup || (member - 1 == index)-->Line_27 $$ haveTopLine = haveTopLine || inGroup[ FD ]
Line_26 $$ haveTopRight = haveTopRight || index < maxMember-->Line_36 $$ drawGroupLine(rc, isRow, g2d, true, haveTopLeft, haveTopRight, haveTopLine)[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_37 $$ drawGroupLine(rc, isRow, g2d, false, haveBottomLeft, haveBottomRight, haveBottomLine)[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_12 $$ boolean haveTopLeft = false, haveTopRight = false, haveTopLine = false[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_10 $$ FormLayout layout = (FormLayout) container.getLayout()[ FD ]
Line_24 $$ if (i % 2 == 0) -->Line_26 $$ haveTopRight = haveTopRight || index < maxMember[ CD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_4 $$ g2d.setColor(Color.LIGHT_GRAY)[ FD ]
Line_14 $$ boolean inGroup = false-->Line_27 $$ haveTopLine = haveTopLine || inGroup[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_35 $$ g2d.setColor(PlatformColors.BLUE)[ CD ]
Line_31 $$ haveBottomLine = haveBottomLine || inGroup-->Line_37 $$ drawGroupLine(rc, isRow, g2d, false, haveBottomLeft, haveBottomRight, haveBottomLine)[ FD ]
Line_13 $$ boolean haveBottomLeft = false, haveBottomRight = false, haveBottomLine = false-->Line_37 $$ drawGroupLine(rc, isRow, g2d, false, haveBottomLeft, haveBottomRight, haveBottomLine)[ FD ]
Line_2 $$ public void paintCaptionDecoration(final RadContainer container, final boolean isRow, final int index, final Graphics2D g2d, final Rectangle rc) -->Line_36 $$ drawGroupLine(rc, isRow, g2d, true, haveTopLeft, haveTopRight, haveTopLine)[ CD ]
Line_13 $$ boolean haveBottomLeft = false, haveBottomRight = false, haveBottomLine = false-->Line_29 $$ haveBottomLeft = haveBottomLeft || index > minMember[ FD ]
