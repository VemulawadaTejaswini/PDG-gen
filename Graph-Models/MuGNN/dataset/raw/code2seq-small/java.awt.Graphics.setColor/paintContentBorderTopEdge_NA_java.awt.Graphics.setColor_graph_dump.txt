Line_3 $$ if (tabPlacement == TOP || myPaintContentBorder) -->Line_4 $$ boolean leftToRight = isLeftToRight(tabPane)[ CD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_17 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 2, y, right, y)[ FD ]
Line_13 $$ if (selRect.x + selRect.width < right - 1) -->Line_20 $$ UIUtil.drawLine(g, x + w - 2, y, x + w - 2, y)[ CD ]
Line_4 $$ boolean leftToRight = isLeftToRight(tabPane)-->Line_14 $$ if (leftToRight && !lastInRun) [ FD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_15 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 2, y, right, y)[ FD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_6 $$ Rectangle selRect = selectedIndex < 0 ? null : getTabBounds(selectedIndex, calcRect)[ FD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_9 $$ UIUtil.drawLine(g, x, y, x + w - 1, y)[ FD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_12 $$ UIUtil.drawLine(g, x, y, selRect.x, y)[ FD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_7 $$ g.setColor(darkShadow)[ FD ]
Line_3 $$ if (tabPlacement == TOP || myPaintContentBorder) -->Line_8 $$ if (tabPlacement != TOP || selectedIndex < 0 || (selRect.y + selRect.height + 1 < y) || (selRect.x < x || selRect.x > x + w)) [ CD ]
Line_8 $$ if (tabPlacement != TOP || selectedIndex < 0 || (selRect.y + selRect.height + 1 < y) || (selRect.x < x || selRect.x > x + w)) -->Line_12 $$ UIUtil.drawLine(g, x, y, selRect.x, y)[ CD ]
Line_3 $$ if (tabPlacement == TOP || myPaintContentBorder) -->Line_5 $$ int right = x + w - 1[ CD ]
Line_8 $$ if (tabPlacement != TOP || selectedIndex < 0 || (selRect.y + selRect.height + 1 < y) || (selRect.x < x || selRect.x > x + w)) -->Line_13 $$ if (selRect.x + selRect.width < right - 1) [ CD ]
Line_3 $$ if (tabPlacement == TOP || myPaintContentBorder) -->Line_6 $$ Rectangle selRect = selectedIndex < 0 ? null : getTabBounds(selectedIndex, calcRect)[ CD ]
Line_13 $$ if (selRect.x + selRect.width < right - 1) -->Line_14 $$ if (leftToRight && !lastInRun) [ CD ]
Line_11 $$ boolean lastInRun = isLastInRun(selectedIndex)-->Line_14 $$ if (leftToRight && !lastInRun) [ FD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_11 $$ boolean lastInRun = isLastInRun(selectedIndex)[ FD ]
Line_14 $$ if (leftToRight && !lastInRun) -->Line_17 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 2, y, right, y)[ CD ]
Line_8 $$ if (tabPlacement != TOP || selectedIndex < 0 || (selRect.y + selRect.height + 1 < y) || (selRect.x < x || selRect.x > x + w)) -->Line_9 $$ UIUtil.drawLine(g, x, y, x + w - 1, y)[ CD ]
Line_8 $$ if (tabPlacement != TOP || selectedIndex < 0 || (selRect.y + selRect.height + 1 < y) || (selRect.x < x || selRect.x > x + w)) -->Line_11 $$ boolean lastInRun = isLastInRun(selectedIndex)[ CD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_20 $$ UIUtil.drawLine(g, x + w - 2, y, x + w - 2, y)[ FD ]
Line_14 $$ if (leftToRight && !lastInRun) -->Line_15 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 2, y, right, y)[ CD ]
Line_5 $$ int right = x + w - 1-->Line_15 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 2, y, right, y)[ FD ]
Line_2 $$ protected void paintContentBorderTopEdge(Graphics g, int tabPlacement, int selectedIndex, int x, int y, int w, int h) -->Line_3 $$ if (tabPlacement == TOP || myPaintContentBorder) [ CD ]
Line_3 $$ if (tabPlacement == TOP || myPaintContentBorder) -->Line_7 $$ g.setColor(darkShadow)[ CD ]
Line_5 $$ int right = x + w - 1-->Line_17 $$ UIUtil.drawLine(g, selRect.x + selRect.width - 2, y, right, y)[ FD ]
