Line_3 $$ int startY = myStart1 - 1-->Line_11 $$ g.fillRect(startX, startY, width, height)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_4 $$ int endY = myEnd1 - 1[ CD ]
Line_10 $$ if (!myResolved) -->Line_11 $$ g.fillRect(startX, startY, width, height)[ CD ]
Line_7 $$ int endX = startX + width - 1-->Line_13 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, false, myResolved)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_8 $$ g.setColor(myColor)[ FD ]
Line_5 $$ int height = endY - startY-->Line_11 $$ g.fillRect(startX, startY, width, height)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_3 $$ int startY = myStart1 - 1[ CD ]
Line_6 $$ int startX = 0-->Line_11 $$ g.fillRect(startX, startY, width, height)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_16 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, true, myResolved)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_6 $$ int startX = 0[ CD ]
Line_3 $$ int startY = myStart1 - 1-->Line_16 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, true, myResolved)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_8 $$ g.setColor(myColor)[ CD ]
Line_3 $$ int startY = myStart1 - 1-->Line_13 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, false, myResolved)[ FD ]
Line_9 $$ if (height > 2) -->Line_10 $$ if (!myResolved) [ CD ]
Line_9 $$ if (height > 2) -->Line_13 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, false, myResolved)[ CD ]
Line_5 $$ int height = endY - startY-->Line_9 $$ if (height > 2) [ FD ]
Line_9 $$ if (height > 2) -->Line_16 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, true, myResolved)[ CD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_11 $$ g.fillRect(startX, startY, width, height)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_13 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, false, myResolved)[ FD ]
Line_4 $$ int endY = myEnd1 - 1-->Line_14 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, endY, myColor, false, myResolved)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_7 $$ int endX = startX + width - 1[ CD ]
Line_6 $$ int startX = 0-->Line_14 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, endY, myColor, false, myResolved)[ FD ]
Line_6 $$ int startX = 0-->Line_16 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, true, myResolved)[ FD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_9 $$ if (height > 2) [ CD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_14 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, endY, myColor, false, myResolved)[ FD ]
Line_7 $$ int endX = startX + width - 1-->Line_14 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, endY, myColor, false, myResolved)[ FD ]
Line_6 $$ int startX = 0-->Line_13 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, false, myResolved)[ FD ]
Line_9 $$ if (height > 2) -->Line_14 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, endY, myColor, false, myResolved)[ CD ]
Line_2 $$ public void paintOnScrollbar(Graphics2D g, int width) -->Line_5 $$ int height = endY - startY[ CD ]
Line_7 $$ int endX = startX + width - 1-->Line_16 $$ DiffDrawUtil.drawChunkBorderLine(g, startX, endX, startY, myColor, true, myResolved)[ FD ]
