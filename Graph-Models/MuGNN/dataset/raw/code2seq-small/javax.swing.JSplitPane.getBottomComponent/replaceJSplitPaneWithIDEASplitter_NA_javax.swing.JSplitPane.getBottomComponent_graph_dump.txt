Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_17 $$ if (pane.getDividerLocation() > 0) [ FD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_15 $$ splitter.setShowDividerControls(pane.isOneTouchExpandable())[ FD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_41 $$ parent.add(splitter, BorderLayout.CENTER)[ FD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_11 $$ final int orientation = pane.getOrientation()[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_44 $$ replaceJSplitPaneWithIDEASplitter((JComponent) component2)[ CD ]
Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_11 $$ final int orientation = pane.getOrientation()[ FD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_27 $$ splitter.setProportion((float) proportion)[ FD ]
Line_32 $$ if (parent instanceof Splitter) -->Line_41 $$ parent.add(splitter, BorderLayout.CENTER)[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_8 $$ final JSplitPane pane = (JSplitPane) root[ CD ]
Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_22 $$ proportion = pane.getDividerLocation() / (double) (parent.getHeight() - pane.getDividerSize())[ FD ]
Line_3 $$ final Container parent = root.getParent()-->Line_24 $$ proportion = pane.getDividerLocation() / (double) (parent.getWidth() - pane.getDividerSize())[ FD ]
Line_2 $$ public static void replaceJSplitPaneWithIDEASplitter(JComponent root) -->Line_34 $$ if (psplitter.getFirstComponent() == root)[ FD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_14 $$ splitter.setSecondComponent((JComponent) component2)[ FD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_46 $$ final Component[] components = root.getComponents()[ CD ]
Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_9 $$ final Component component1 = pane.getTopComponent()[ FD ]
Line_18 $$ SwingUtilities.invokeLater(new Runnable() -->Line_21 $$ if (pane.getOrientation() == JSplitPane.VERTICAL_SPLIT) [ CD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_35 $$ psplitter.setFirstComponent(splitter)[ FD ]
Line_2 $$ public static void replaceJSplitPaneWithIDEASplitter(JComponent root) -->Line_3 $$ final Container parent = root.getParent()[ CD ]
Line_3 $$ final Container parent = root.getParent()-->Line_41 $$ parent.add(splitter, BorderLayout.CENTER)[ FD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_9 $$ final Component component1 = pane.getTopComponent()[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_5 $$ if (parent.getComponents().length != 1 && !(parent instanceof Splitter)) [ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_16 $$ splitter.setHonorComponentsMinimumSize(true)[ CD ]
Line_3 $$ final Container parent = root.getParent()-->Line_22 $$ proportion = pane.getDividerLocation() / (double) (parent.getHeight() - pane.getDividerSize())[ FD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_16 $$ splitter.setHonorComponentsMinimumSize(true)[ FD ]
Line_34 $$ if (psplitter.getFirstComponent() == root)-->Line_35 $$ psplitter.setFirstComponent(splitter)[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_10 $$ final Component component2 = pane.getBottomComponent()[ CD ]
Line_3 $$ final Container parent = root.getParent()-->Line_32 $$ if (parent instanceof Splitter) [ FD ]
Line_32 $$ if (parent instanceof Splitter) -->Line_39 $$ parent.remove(0)[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_43 $$ replaceJSplitPaneWithIDEASplitter((JComponent) component1)[ CD ]
Line_32 $$ if (parent instanceof Splitter) -->Line_34 $$ if (psplitter.getFirstComponent() == root)[ CD ]
Line_18 $$ SwingUtilities.invokeLater(new Runnable() -->Line_20 $$ double proportion[ CD ]
Line_22 $$ proportion = pane.getDividerLocation() / (double) (parent.getHeight() - pane.getDividerSize())-->Line_24 $$ proportion = pane.getDividerLocation() / (double) (parent.getWidth() - pane.getDividerSize())[ FD ]
Line_2 $$ public static void replaceJSplitPaneWithIDEASplitter(JComponent root) -->Line_4 $$ if (root instanceof JSplitPane) [ FD ]
Line_20 $$ double proportion-->Line_22 $$ proportion = pane.getDividerLocation() / (double) (parent.getHeight() - pane.getDividerSize())[ FD ]
Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_24 $$ proportion = pane.getDividerLocation() / (double) (parent.getWidth() - pane.getDividerSize())[ FD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_37 $$ psplitter.setSecondComponent(splitter)[ FD ]
Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_15 $$ splitter.setShowDividerControls(pane.isOneTouchExpandable())[ FD ]
Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)-->Line_13 $$ splitter.setFirstComponent((JComponent) component1)[ FD ]
Line_2 $$ public static void replaceJSplitPaneWithIDEASplitter(JComponent root) -->Line_4 $$ if (root instanceof JSplitPane) [ CD ]
Line_3 $$ final Container parent = root.getParent()-->Line_5 $$ if (parent.getComponents().length != 1 && !(parent instanceof Splitter)) [ FD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_13 $$ splitter.setFirstComponent((JComponent) component1)[ CD ]
Line_34 $$ if (psplitter.getFirstComponent() == root)-->Line_37 $$ psplitter.setSecondComponent(splitter)[ CD ]
Line_26 $$ if (proportion > 0 && proportion < 1) -->Line_27 $$ splitter.setProportion((float) proportion)[ CD ]
Line_2 $$ public static void replaceJSplitPaneWithIDEASplitter(JComponent root) -->Line_46 $$ final Component[] components = root.getComponents()[ FD ]
Line_48 $$ if (component instanceof JComponent) -->Line_49 $$ replaceJSplitPaneWithIDEASplitter((JComponent) component)[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_12 $$ final Splitter splitter = new JBSplitter(orientation == JSplitPane.VERTICAL_SPLIT)[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_14 $$ splitter.setSecondComponent((JComponent) component2)[ CD ]
Line_5 $$ if (parent.getComponents().length != 1 && !(parent instanceof Splitter)) -->Line_6 $$ return[ CD ]
Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_21 $$ if (pane.getOrientation() == JSplitPane.VERTICAL_SPLIT) [ FD ]
Line_32 $$ if (parent instanceof Splitter) -->Line_40 $$ parent.setLayout(new BorderLayout())[ CD ]
Line_8 $$ final JSplitPane pane = (JSplitPane) root-->Line_10 $$ final Component component2 = pane.getBottomComponent()[ FD ]
Line_21 $$ if (pane.getOrientation() == JSplitPane.VERTICAL_SPLIT) -->Line_22 $$ proportion = pane.getDividerLocation() / (double) (parent.getHeight() - pane.getDividerSize())[ CD ]
Line_18 $$ SwingUtilities.invokeLater(new Runnable() -->Line_26 $$ if (proportion > 0 && proportion < 1) [ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_17 $$ if (pane.getDividerLocation() > 0) [ CD ]
Line_2 $$ public static void replaceJSplitPaneWithIDEASplitter(JComponent root) -->Line_3 $$ final Container parent = root.getParent()[ FD ]
Line_21 $$ if (pane.getOrientation() == JSplitPane.VERTICAL_SPLIT) -->Line_24 $$ proportion = pane.getDividerLocation() / (double) (parent.getWidth() - pane.getDividerSize())[ CD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_15 $$ splitter.setShowDividerControls(pane.isOneTouchExpandable())[ CD ]
Line_3 $$ final Container parent = root.getParent()-->Line_39 $$ parent.remove(0)[ FD ]
Line_4 $$ if (root instanceof JSplitPane) -->Line_32 $$ if (parent instanceof Splitter) [ CD ]
Line_3 $$ final Container parent = root.getParent()-->Line_40 $$ parent.setLayout(new BorderLayout())[ FD ]
Line_20 $$ double proportion-->Line_24 $$ proportion = pane.getDividerLocation() / (double) (parent.getWidth() - pane.getDividerSize())[ FD ]
Line_17 $$ if (pane.getDividerLocation() > 0) -->Line_18 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
