Line_7 $$ ReentrantLock mainLock = threadPoolExecutor.getMainLock()-->Line_26 $$ mainLock.unlock()[ FD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_4 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob(true)[ CD ]
Line_9 $$ ReentrantLock takeLock = taskQueue.getTakeLock()-->Line_13 $$ while (!takeLock.hasQueuedThreads()) [ FD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_29 $$ Assert.assertTrue(threadPoolExecutor.awaitTermination(1, TimeUnit.SECONDS))[ CD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_6 $$ markerBlockingJob.waitUntilBlock()[ CD ]
Line_3 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1)-->Line_8 $$ TaskQueue<Runnable> taskQueue = threadPoolExecutor.getTaskQueue()[ FD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_10 $$ takeLock.lock()[ CD ]
Line_3 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1)-->Line_7 $$ ReentrantLock mainLock = threadPoolExecutor.getMainLock()[ FD ]
Line_3 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1)-->Line_28 $$ Assert.assertTrue(threadPoolExecutor.isShutdown())[ FD ]
Line_13 $$ while (!takeLock.hasQueuedThreads()) -->Line_14 $$ Thread.sleep(1)[ CD ]
Line_4 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob(true)-->Line_5 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_21 $$ while (!mainLock.hasQueuedThreads()) -->Line_22 $$ Thread.sleep(1)[ CD ]
Line_3 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1)-->Line_24 $$ threadPoolExecutor.shutdownNow()[ FD ]
Line_3 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1)-->Line_29 $$ Assert.assertTrue(threadPoolExecutor.awaitTermination(1, TimeUnit.SECONDS))[ FD ]
Line_8 $$ TaskQueue<Runnable> taskQueue = threadPoolExecutor.getTaskQueue()-->Line_9 $$ ReentrantLock takeLock = taskQueue.getTakeLock()[ FD ]
Line_9 $$ ReentrantLock takeLock = taskQueue.getTakeLock()-->Line_10 $$ takeLock.lock()[ FD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_28 $$ Assert.assertTrue(threadPoolExecutor.isShutdown())[ CD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_9 $$ ReentrantLock takeLock = taskQueue.getTakeLock()[ CD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_7 $$ ReentrantLock mainLock = threadPoolExecutor.getMainLock()[ CD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_3 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1)[ CD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_8 $$ TaskQueue<Runnable> taskQueue = threadPoolExecutor.getTaskQueue()[ CD ]
Line_7 $$ ReentrantLock mainLock = threadPoolExecutor.getMainLock()-->Line_16 $$ mainLock.lock()[ FD ]
Line_9 $$ ReentrantLock takeLock = taskQueue.getTakeLock()-->Line_18 $$ takeLock.unlock()[ FD ]
Line_7 $$ ReentrantLock mainLock = threadPoolExecutor.getMainLock()-->Line_21 $$ while (!mainLock.hasQueuedThreads()) [ FD ]
Line_3 $$ ThreadPoolExecutor threadPoolExecutor = new ThreadPoolExecutor(1, 1, TestUtil.KEEPALIVE_TIME, TimeUnit.MILLISECONDS, true, 1)-->Line_5 $$ threadPoolExecutor.execute(markerBlockingJob)[ FD ]
Line_4 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob(true)-->Line_12 $$ markerBlockingJob.unBlock()[ FD ]
Line_2 $$ public void testShutdownNowAfterTaskQueuePollingTimeoutBeforeExitChecking() throws InterruptedException -->Line_5 $$ threadPoolExecutor.execute(markerBlockingJob)[ CD ]
Line_4 $$ MarkerBlockingJob markerBlockingJob = new MarkerBlockingJob(true)-->Line_6 $$ markerBlockingJob.waitUntilBlock()[ FD ]
