Line_2 $$ public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade, final boolean upgradeOnlyAncientSegments) throws EngineException, EngineClosedException, IOException -->Line_9 $$ logger.info("starting segment upgrade upgradeOnlyAncientSegments=[ FD ]
Line_2 $$ public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade, final boolean upgradeOnlyAncientSegments) throws EngineException, EngineClosedException, IOException -->Line_4 $$ ElasticsearchMergePolicy mp = (ElasticsearchMergePolicy) indexWriter.getConfig().getMergePolicy()[ CD ]
Line_2 $$ public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade, final boolean upgradeOnlyAncientSegments) throws EngineException, EngineClosedException, IOException -->Line_10 $$ mp.setUpgradeInProgress(true, upgradeOnlyAncientSegments)[ FD ]
Line_2 $$ public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade, final boolean upgradeOnlyAncientSegments) throws EngineException, EngineClosedException, IOException -->Line_21 $$ indexWriter.forceMerge(maxNumSegments, true)[ FD ]
Line_4 $$ ElasticsearchMergePolicy mp = (ElasticsearchMergePolicy) indexWriter.getConfig().getMergePolicy()-->Line_37 $$ mp.setUpgradeInProgress(false, false)[ FD ]
Line_8 $$ if (upgrade) -->Line_9 $$ logger.info("starting segment upgrade upgradeOnlyAncientSegments=[ CD ]
Line_14 $$ if (onlyExpungeDeletes) -->Line_16 $$ indexWriter.forceMergeDeletes(true)[ CD ]
Line_14 $$ if (onlyExpungeDeletes) -->Line_17 $$ if (maxNumSegments <= 0) [ CD ]
Line_4 $$ ElasticsearchMergePolicy mp = (ElasticsearchMergePolicy) indexWriter.getConfig().getMergePolicy()-->Line_10 $$ mp.setUpgradeInProgress(true, upgradeOnlyAncientSegments)[ FD ]
Line_8 $$ if (upgrade) -->Line_10 $$ mp.setUpgradeInProgress(true, upgradeOnlyAncientSegments)[ CD ]
Line_17 $$ if (maxNumSegments <= 0) -->Line_19 $$ indexWriter.maybeMerge()[ CD ]
Line_2 $$ public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade, final boolean upgradeOnlyAncientSegments) throws EngineException, EngineClosedException, IOException -->Line_17 $$ if (maxNumSegments <= 0) [ FD ]
Line_23 $$ if (flush) -->Line_24 $$ flush(true, true)[ CD ]
Line_26 $$ if (upgrade) -->Line_27 $$ logger.info("finished segment upgrade")[ CD ]
Line_17 $$ if (maxNumSegments <= 0) -->Line_21 $$ indexWriter.forceMerge(maxNumSegments, true)[ CD ]
Line_2 $$ public void forceMerge(final boolean flush, int maxNumSegments, boolean onlyExpungeDeletes, final boolean upgrade, final boolean upgradeOnlyAncientSegments) throws EngineException, EngineClosedException, IOException -->Line_5 $$ optimizeLock.lock()[ CD ]
