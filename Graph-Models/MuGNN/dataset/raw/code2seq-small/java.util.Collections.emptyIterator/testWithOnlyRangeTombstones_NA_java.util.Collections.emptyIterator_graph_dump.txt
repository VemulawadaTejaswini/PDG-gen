Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_15 $$ assertFalse(iterator.hasNext())[ CD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_13 $$ assertTrue(iterator.hasNext())[ CD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_15 $$ assertFalse(iterator.hasNext())[ FD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_9 $$ assertTrue(iterator.hasNext())[ FD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_11 $$ assertTrue(iterator.hasNext())[ CD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_8 $$ assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 1)[ FD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_13 $$ assertTrue(iterator.hasNext())[ FD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_14 $$ assertRtMarker(iterator.next(), Bound.TOP)[ CD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_10 $$ assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_END_BOUND, 3)[ FD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_14 $$ assertRtMarker(iterator.next(), Bound.TOP)[ FD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_10 $$ assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_END_BOUND, 3)[ CD ]
Line_4 $$ long timestamp = toMillis(delTime)-->Line_5 $$ Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(rt(1, false, 3, false, timestamp, delTime), atLeast(4, timestamp, delTime))[ FD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_7 $$ assertTrue(iterator.hasNext())[ CD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_12 $$ assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_START_BOUND, 4)[ FD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)[ CD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_3 $$ int delTime = nowInSeconds + 1[ CD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_5 $$ Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(rt(1, false, 3, false, timestamp, delTime), atLeast(4, timestamp, delTime))[ CD ]
Line_3 $$ int delTime = nowInSeconds + 1-->Line_4 $$ long timestamp = toMillis(delTime)[ FD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_12 $$ assertRtMarker(iterator.next(), ClusteringPrefix.Kind.INCL_START_BOUND, 4)[ CD ]
Line_3 $$ int delTime = nowInSeconds + 1-->Line_5 $$ Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(rt(1, false, 3, false, timestamp, delTime), atLeast(4, timestamp, delTime))[ FD ]
Line_5 $$ Iterator<RangeTombstone> rangeTombstoneIterator = createRangeTombstoneIterator(rt(1, false, 3, false, timestamp, delTime), atLeast(4, timestamp, delTime))-->Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)[ FD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_11 $$ assertTrue(iterator.hasNext())[ FD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_4 $$ long timestamp = toMillis(delTime)[ CD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_8 $$ assertRtMarker(iterator.next(), ClusteringPrefix.Kind.EXCL_START_BOUND, 1)[ CD ]
Line_2 $$ public void testWithOnlyRangeTombstones() -->Line_9 $$ assertTrue(iterator.hasNext())[ CD ]
Line_6 $$ UnfilteredRowIterator iterator = createMergeIterator(Collections.emptyIterator(), rangeTombstoneIterator, false)-->Line_7 $$ assertTrue(iterator.hasNext())[ FD ]
