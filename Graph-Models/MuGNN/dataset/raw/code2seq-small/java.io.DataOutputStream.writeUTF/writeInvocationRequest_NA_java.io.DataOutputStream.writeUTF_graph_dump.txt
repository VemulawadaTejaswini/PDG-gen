Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_15 $$ marshaller.writeObject(locator.getBeanName())[ CD ]
Line_11 $$ final EJBLocator locator = new StatelessEJBLocator<T>(remoteInterface, "", "ejb-invocation-compression-test", CompressingBean.class.getSimpleName(), "")-->Line_16 $$ marshaller.writeObject(locator)[ FD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_19 $$ marshaller.finish()[ CD ]
Line_11 $$ final EJBLocator locator = new StatelessEJBLocator<T>(remoteInterface, "", "ejb-invocation-compression-test", CompressingBean.class.getSimpleName(), "")-->Line_12 $$ marshaller.writeObject(locator.getAppName())[ FD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_12 $$ marshaller.writeObject(locator.getAppName())[ CD ]
Line_11 $$ final EJBLocator locator = new StatelessEJBLocator<T>(remoteInterface, "", "ejb-invocation-compression-test", CompressingBean.class.getSimpleName(), "")-->Line_15 $$ marshaller.writeObject(locator.getBeanName())[ FD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_22 $$ dataOutput.close()[ CD ]
Line_11 $$ final EJBLocator locator = new StatelessEJBLocator<T>(remoteInterface, "", "ejb-invocation-compression-test", CompressingBean.class.getSimpleName(), "")-->Line_13 $$ marshaller.writeObject(locator.getModuleName())[ FD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_22 $$ dataOutput.close()[ FD ]
Line_11 $$ final EJBLocator locator = new StatelessEJBLocator<T>(remoteInterface, "", "ejb-invocation-compression-test", CompressingBean.class.getSimpleName(), "")-->Line_14 $$ marshaller.writeObject(locator.getDistinctName())[ FD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_14 $$ marshaller.writeObject(locator.getDistinctName())[ CD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_13 $$ marshaller.writeObject(locator.getModuleName())[ CD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_16 $$ marshaller.writeObject(locator)[ CD ]
Line_2 $$ private <T> void writeInvocationRequest(DataOutputStream dataOutput, Class<T> remoteInterface, String methodName) throws IOException -->Line_11 $$ final EJBLocator locator = new StatelessEJBLocator<T>(remoteInterface, "", "ejb-invocation-compression-test", CompressingBean.class.getSimpleName(), "")[ CD ]
