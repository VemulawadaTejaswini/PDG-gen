Line_13 $$ final ContentManager contentManager = myToolWindow.getContentManager()-->Line_16 $$ contentManager.addContent(content)[ FD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_14 $$ final ContentFactory contentFactory = ContentFactory.SERVICE.getInstance()[ CD ]
Line_5 $$ final ToolWindowManagerEx toolWindowManagerEx = ToolWindowManagerEx.getInstanceEx(myProject)-->Line_7 $$ myToolWindow = toolWindow == null ? toolWindowManagerEx.registerToolWindow(getToolwindowId(), true, ToolWindowAnchor.RIGHT, myProject) : toolWindow[ FD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_11 $$ setToolwindowDefaultState()[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_5 $$ final ToolWindowManagerEx toolWindowManagerEx = ToolWindowManagerEx.getInstanceEx(myProject)[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_33 $$ doUpdateComponent(element, originalElement, component)[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_16 $$ contentManager.addContent(content)[ CD ]
Line_4 $$ final T component = createComponent()-->Line_15 $$ final Content content = contentFactory.createContent(component, getTitle(element), false)[ FD ]
Line_14 $$ final ContentFactory contentFactory = ContentFactory.SERVICE.getInstance()-->Line_15 $$ final Content content = contentFactory.createContent(component, getTitle(element), false)[ FD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_17 $$ contentManager.addContentManagerListener(new ContentManagerAdapter() [ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_15 $$ final Content content = contentFactory.createContent(component, getTitle(element), false)[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_8 $$ myToolWindow.setIcon(AllIcons.Toolwindows.Documentation)[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_13 $$ final ContentManager contentManager = myToolWindow.getContentManager()[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_12 $$ ((ToolWindowEx) myToolWindow).setTitleActions(createRestorePopupAction())[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_32 $$ restartAutoUpdate(PropertiesComponent.getInstance().getBoolean(getAutoUpdateEnabledProperty(), true))[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_33 $$ doUpdateComponent(element, originalElement, component)[ FD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_15 $$ final Content content = contentFactory.createContent(component, getTitle(element), false)[ FD ]
Line_17 $$ contentManager.addContentManagerListener(new ContentManagerAdapter() -->Line_19 $$ restorePopupBehavior()[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_6 $$ final ToolWindow toolWindow = toolWindowManagerEx.getToolWindow(getToolwindowId())[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_9 $$ myToolWindow.setAvailable(true, null)[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_31 $$ PropertiesComponent.getInstance().setValue(getShowInToolWindowProperty(), Boolean.TRUE.toString())[ CD ]
Line_22 $$ new UiNotifyConnector(component, new Activatable() -->Line_27 $$ restartAutoUpdate(false)[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_10 $$ myToolWindow.setToHideOnEmptyContent(false)[ CD ]
Line_13 $$ final ContentManager contentManager = myToolWindow.getContentManager()-->Line_17 $$ contentManager.addContentManagerListener(new ContentManagerAdapter() [ FD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_30 $$ myToolWindow.show(null)[ CD ]
Line_2 $$ public void createToolWindow(final PsiElement element, PsiElement originalElement) -->Line_4 $$ final T component = createComponent()[ CD ]
Line_15 $$ final Content content = contentFactory.createContent(component, getTitle(element), false)-->Line_16 $$ contentManager.addContent(content)[ FD ]
Line_22 $$ new UiNotifyConnector(component, new Activatable() -->Line_24 $$ restartAutoUpdate(myAutoUpdateDocumentation)[ CD ]
Line_5 $$ final ToolWindowManagerEx toolWindowManagerEx = ToolWindowManagerEx.getInstanceEx(myProject)-->Line_6 $$ final ToolWindow toolWindow = toolWindowManagerEx.getToolWindow(getToolwindowId())[ FD ]
Line_4 $$ final T component = createComponent()-->Line_33 $$ doUpdateComponent(element, originalElement, component)[ FD ]
