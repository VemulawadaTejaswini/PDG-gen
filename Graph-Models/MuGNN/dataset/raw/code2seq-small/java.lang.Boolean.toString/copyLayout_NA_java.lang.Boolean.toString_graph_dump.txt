Line_9 $$ File file = ExportImportLocalServiceUtil.exportLayoutsAsFile(exportConfiguration)-->Line_15 $$ file.delete()[ FD ]
Line_5 $$ Map<String, String[]> parameterMap = getLayoutSetPrototypeParameters(serviceContext)-->Line_6 $$ parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS, new String[] [ FD ]
Line_7 $$ Map<String, Serializable> exportLayoutSettingsMap = ExportImportConfigurationSettingsMapFactory.buildExportLayoutSettingsMap(user, sourceLayout.getGroupId(), sourceLayout.isPrivateLayout(), new long[] -->Line_8 $$ ExportImportConfiguration exportConfiguration = ExportImportConfigurationLocalServiceUtil.addDraftExportImportConfiguration(user.getUserId(), ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT, exportLayoutSettingsMap)[ FD ]
Line_12 $$ ExportImportConfiguration importConfiguration = ExportImportConfigurationLocalServiceUtil.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_IMPORT_LAYOUT, importLayoutSettingsMap)-->Line_13 $$ ExportImportLocalServiceUtil.importLayouts(importConfiguration, file)[ FD ]
Line_4 $$ User user = UserLocalServiceUtil.getUser(userId)-->Line_8 $$ ExportImportConfiguration exportConfiguration = ExportImportConfigurationLocalServiceUtil.addDraftExportImportConfiguration(user.getUserId(), ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT, exportLayoutSettingsMap)[ FD ]
Line_8 $$ ExportImportConfiguration exportConfiguration = ExportImportConfigurationLocalServiceUtil.addDraftExportImportConfiguration(user.getUserId(), ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT, exportLayoutSettingsMap)-->Line_9 $$ File file = ExportImportLocalServiceUtil.exportLayoutsAsFile(exportConfiguration)[ FD ]
Line_5 $$ Map<String, String[]> parameterMap = getLayoutSetPrototypeParameters(serviceContext)-->Line_7 $$ Map<String, Serializable> exportLayoutSettingsMap = ExportImportConfigurationSettingsMapFactory.buildExportLayoutSettingsMap(user, sourceLayout.getGroupId(), sourceLayout.isPrivateLayout(), new long[] [ FD ]
Line_5 $$ Map<String, String[]> parameterMap = getLayoutSetPrototypeParameters(serviceContext)-->Line_11 $$ Map<String, Serializable> importLayoutSettingsMap = ExportImportConfigurationSettingsMapFactory.buildImportLayoutSettingsMap(userId, targetLayout.getGroupId(), targetLayout.isPrivateLayout(), null, parameterMap, user.getLocale(), user.getTimeZone())[ FD ]
Line_4 $$ User user = UserLocalServiceUtil.getUser(userId)-->Line_11 $$ Map<String, Serializable> importLayoutSettingsMap = ExportImportConfigurationSettingsMapFactory.buildImportLayoutSettingsMap(userId, targetLayout.getGroupId(), targetLayout.isPrivateLayout(), null, parameterMap, user.getLocale(), user.getTimeZone())[ FD ]
Line_11 $$ Map<String, Serializable> importLayoutSettingsMap = ExportImportConfigurationSettingsMapFactory.buildImportLayoutSettingsMap(userId, targetLayout.getGroupId(), targetLayout.isPrivateLayout(), null, parameterMap, user.getLocale(), user.getTimeZone())-->Line_12 $$ ExportImportConfiguration importConfiguration = ExportImportConfigurationLocalServiceUtil.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_IMPORT_LAYOUT, importLayoutSettingsMap)[ FD ]
Line_9 $$ File file = ExportImportLocalServiceUtil.exportLayoutsAsFile(exportConfiguration)-->Line_13 $$ ExportImportLocalServiceUtil.importLayouts(importConfiguration, file)[ FD ]
Line_4 $$ User user = UserLocalServiceUtil.getUser(userId)-->Line_7 $$ Map<String, Serializable> exportLayoutSettingsMap = ExportImportConfigurationSettingsMapFactory.buildExportLayoutSettingsMap(user, sourceLayout.getGroupId(), sourceLayout.isPrivateLayout(), new long[] [ FD ]
