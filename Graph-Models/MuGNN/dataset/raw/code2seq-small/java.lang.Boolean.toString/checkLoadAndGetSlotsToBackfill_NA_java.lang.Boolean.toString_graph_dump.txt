Line_29 $$ if (LOG.isDebugEnabled()) -->Line_31 $$ LOG.debug("Total submitted reduce tasks: " + totalReduceTasks)[ CD ]
Line_60 $$ int noOfMaps = job.getNoOfMaps()-->Line_82 $$ incompleteMapTasks += calcEffectiveIncompleteMapTasks(mapCapacity, noOfMaps, mapProgress)[ FD ]
Line_79 $$ mapProgress = status.getMapProgress()-->Line_82 $$ incompleteMapTasks += calcEffectiveIncompleteMapTasks(mapCapacity, noOfMaps, mapProgress)[ FD ]
Line_127 $$ if (LOG.isDebugEnabled()) -->Line_128 $$ LOG.debug(System.currentTimeMillis() + " [MAP-LOAD] Overloaded is " + Boolean.TRUE.toString() + " MapSlotsBackfill is " + loadStatus.getMapLoad())[ CD ]
Line_140 $$ if (LOG.isDebugEnabled()) -->Line_141 $$ LOG.debug(System.currentTimeMillis() + " [OVERALL] Overloaded is " + Boolean.FALSE.toString() + "Current load Status is " + loadStatus)[ CD ]
Line_29 $$ if (LOG.isDebugEnabled()) -->Line_32 $$ LOG.debug("Max map load: " + maxMapLoad)[ CD ]
Line_119 $$ if (LOG.isDebugEnabled() && blacklistedJobs.size() > 0) -->Line_120 $$ LOG.debug("Blacklisted jobs count: " + blacklistedJobs.size())[ CD ]
Line_52 $$ JobID id = job.getJob().getJobID()-->Line_109 $$ blacklistedJobs.add(id)[ FD ]
Line_52 $$ JobID id = job.getJob().getJobID()-->Line_71 $$ blacklistedJobs.add(id)[ FD ]
Line_51 $$ for (JobStats job : ClusterStats.getRunningJobStats()) -->Line_60 $$ int noOfMaps = job.getNoOfMaps()[ FD ]
Line_52 $$ JobID id = job.getJob().getJobID()-->Line_53 $$ seenJobIDs.add(id)[ FD ]
Line_29 $$ if (LOG.isDebugEnabled()) -->Line_30 $$ LOG.debug("Total submitted map tasks: " + totalMapTasks)[ CD ]
Line_15 $$ int mapCapacity = loadStatus.getMapCapacity()-->Line_82 $$ incompleteMapTasks += calcEffectiveIncompleteMapTasks(mapCapacity, noOfMaps, mapProgress)[ FD ]
Line_126 $$ if (loadStatus.getMapLoad() <= 0) -->Line_127 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_85 $$ if (currentMapSlotsBackFill <= 0) -->Line_88 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_29 $$ if (LOG.isDebugEnabled()) -->Line_33 $$ LOG.debug("Max reduce load: " + maxReduceLoad)[ CD ]
Line_76 $$ float reduceProgress = 0f-->Line_95 $$ incompleteReduceTasks += calcEffectiveIncompleteReduceTasks(reduceCapacity, noOfReduces, reduceProgress)[ FD ]
Line_134 $$ if (LOG.isDebugEnabled()) -->Line_135 $$ LOG.debug(System.currentTimeMillis() + " [REDUCE-LOAD] Overloaded is " + Boolean.TRUE.toString() + " ReduceSlotsBackfill is " + loadStatus.getReduceLoad())[ CD ]
Line_102 $$ if (LOG.isDebugEnabled()) -->Line_103 $$ LOG.debug("Terminating overload check due to high reduce load.")[ CD ]
Line_16 $$ int reduceCapacity = loadStatus.getReduceCapacity()-->Line_95 $$ incompleteReduceTasks += calcEffectiveIncompleteReduceTasks(reduceCapacity, noOfReduces, reduceProgress)[ FD ]
Line_80 $$ reduceProgress = status.getReduceProgress()-->Line_95 $$ incompleteReduceTasks += calcEffectiveIncompleteReduceTasks(reduceCapacity, noOfReduces, reduceProgress)[ FD ]
Line_8 $$ if (loadStatus.getJobLoad() <= 0) -->Line_9 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_9 $$ if (LOG.isDebugEnabled()) -->Line_10 $$ LOG.debug(System.currentTimeMillis() + " [JobLoad] Overloaded is " + Boolean.TRUE.toString() + " NumJobsBackfill is " + loadStatus.getJobLoad())[ CD ]
Line_99 $$ if (currentReduceSlotsBackFill <= 0) -->Line_102 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_76 $$ float reduceProgress = 0f-->Line_80 $$ reduceProgress = status.getReduceProgress()[ FD ]
Line_88 $$ if (LOG.isDebugEnabled()) -->Line_89 $$ LOG.debug("Terminating overload check due to high map load.")[ CD ]
Line_51 $$ for (JobStats job : ClusterStats.getRunningJobStats()) -->Line_52 $$ JobID id = job.getJob().getJobID()[ FD ]
Line_133 $$ if (loadStatus.getReduceLoad() <= 0) -->Line_134 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_61 $$ int noOfReduces = job.getNoOfReds()-->Line_95 $$ incompleteReduceTasks += calcEffectiveIncompleteReduceTasks(reduceCapacity, noOfReduces, reduceProgress)[ FD ]
Line_51 $$ for (JobStats job : ClusterStats.getRunningJobStats()) -->Line_61 $$ int noOfReduces = job.getNoOfReds()[ FD ]
