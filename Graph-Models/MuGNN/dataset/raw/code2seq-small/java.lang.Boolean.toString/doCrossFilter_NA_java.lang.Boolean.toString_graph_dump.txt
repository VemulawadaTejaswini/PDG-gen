Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_18 $$ res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, origin)[ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_7 $$ if (!isOriginAllowed(origin)) [ CD ]
Line_3 $$ String origin = encodeHeader(req.getHeader(ORIGIN))-->Line_18 $$ res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, origin)[ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_22 $$ res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge)[ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_18 $$ res.setHeader(ACCESS_CONTROL_ALLOW_ORIGIN, origin)[ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_21 $$ res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader())[ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_3 $$ String origin = encodeHeader(req.getHeader(ORIGIN))[ FD ]
Line_10 $$ String accessControlRequestMethod = req.getHeader(ACCESS_CONTROL_REQUEST_METHOD)-->Line_11 $$ if (!isMethodAllowed(accessControlRequestMethod)) [ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_20 $$ res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader())[ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_10 $$ String accessControlRequestMethod = req.getHeader(ACCESS_CONTROL_REQUEST_METHOD)[ CD ]
Line_11 $$ if (!isMethodAllowed(accessControlRequestMethod)) -->Line_12 $$ return[ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_19 $$ res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString())[ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_4 $$ if (!isCrossOrigin(origin)) [ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_20 $$ res.setHeader(ACCESS_CONTROL_ALLOW_METHODS, getAllowedMethodsHeader())[ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_14 $$ String accessControlRequestHeaders = req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS)[ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_15 $$ if (!areHeadersAllowed(accessControlRequestHeaders)) [ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_22 $$ res.setHeader(ACCESS_CONTROL_MAX_AGE, maxAge)[ CD ]
Line_4 $$ if (!isCrossOrigin(origin)) -->Line_5 $$ return[ CD ]
Line_3 $$ String origin = encodeHeader(req.getHeader(ORIGIN))-->Line_4 $$ if (!isCrossOrigin(origin)) [ FD ]
Line_7 $$ if (!isOriginAllowed(origin)) -->Line_8 $$ return[ CD ]
Line_3 $$ String origin = encodeHeader(req.getHeader(ORIGIN))-->Line_7 $$ if (!isOriginAllowed(origin)) [ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_21 $$ res.setHeader(ACCESS_CONTROL_ALLOW_HEADERS, getAllowedHeadersHeader())[ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_11 $$ if (!isMethodAllowed(accessControlRequestMethod)) [ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_10 $$ String accessControlRequestMethod = req.getHeader(ACCESS_CONTROL_REQUEST_METHOD)[ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_19 $$ res.setHeader(ACCESS_CONTROL_ALLOW_CREDENTIALS, Boolean.TRUE.toString())[ CD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_3 $$ String origin = encodeHeader(req.getHeader(ORIGIN))[ CD ]
Line_14 $$ String accessControlRequestHeaders = req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS)-->Line_15 $$ if (!areHeadersAllowed(accessControlRequestHeaders)) [ FD ]
Line_2 $$ private void doCrossFilter(HttpServletRequest req, HttpServletResponse res) -->Line_14 $$ String accessControlRequestHeaders = req.getHeader(ACCESS_CONTROL_REQUEST_HEADERS)[ FD ]
Line_15 $$ if (!areHeadersAllowed(accessControlRequestHeaders)) -->Line_16 $$ return[ CD ]
