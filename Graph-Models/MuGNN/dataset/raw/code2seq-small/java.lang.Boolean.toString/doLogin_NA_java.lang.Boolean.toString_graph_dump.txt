Line_5 $$ if (!ntlmConfiguration.enabled()) -->Line_6 $$ return null[ CD ]
Line_14 $$ if (user == null) -->Line_15 $$ return null[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ long companyId = PortalUtil.getCompanyId(request)[ FD ]
Line_13 $$ User user = UserImporterUtil.importUserByScreenName(companyId, screenName)-->Line_14 $$ if (user == null) [ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ NtlmConfiguration ntlmConfiguration = _configurationFactory.getConfiguration(NtlmConfiguration.class, new CompanyServiceSettingsLocator(companyId, NtlmConstants.SERVICE_NAME))[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_12 $$ request.removeAttribute(NtlmWebKeys.NTLM_REMOTE_USER)[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_5 $$ if (!ntlmConfiguration.enabled()) [ CD ]
Line_8 $$ String screenName = (String) request.getAttribute(NtlmWebKeys.NTLM_REMOTE_USER)-->Line_9 $$ if (screenName == null) [ FD ]
Line_9 $$ if (screenName == null) -->Line_10 $$ return null[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_22 $$ return credentials[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_19 $$ credentials[0] = String.valueOf(user.getUserId())[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_14 $$ if (user == null) [ CD ]
Line_3 $$ long companyId = PortalUtil.getCompanyId(request)-->Line_13 $$ User user = UserImporterUtil.importUserByScreenName(companyId, screenName)[ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_20 $$ credentials[1] = user.getPassword()[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_21 $$ credentials[2] = Boolean.TRUE.toString()[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_18 $$ String[] credentials = new String[3][ CD ]
Line_4 $$ NtlmConfiguration ntlmConfiguration = _configurationFactory.getConfiguration(NtlmConfiguration.class, new CompanyServiceSettingsLocator(companyId, NtlmConstants.SERVICE_NAME))-->Line_5 $$ if (!ntlmConfiguration.enabled()) [ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_9 $$ if (screenName == null) [ CD ]
Line_13 $$ User user = UserImporterUtil.importUserByScreenName(companyId, screenName)-->Line_19 $$ credentials[0] = String.valueOf(user.getUserId())[ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_17 $$ addRedirect(request)[ CD ]
Line_8 $$ String screenName = (String) request.getAttribute(NtlmWebKeys.NTLM_REMOTE_USER)-->Line_13 $$ User user = UserImporterUtil.importUserByScreenName(companyId, screenName)[ FD ]
Line_13 $$ User user = UserImporterUtil.importUserByScreenName(companyId, screenName)-->Line_20 $$ credentials[1] = user.getPassword()[ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_17 $$ addRedirect(request)[ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_8 $$ String screenName = (String) request.getAttribute(NtlmWebKeys.NTLM_REMOTE_USER)[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_8 $$ String screenName = (String) request.getAttribute(NtlmWebKeys.NTLM_REMOTE_USER)[ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_12 $$ request.removeAttribute(NtlmWebKeys.NTLM_REMOTE_USER)[ FD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ long companyId = PortalUtil.getCompanyId(request)[ CD ]
Line_2 $$ protected String[] doLogin(HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_13 $$ User user = UserImporterUtil.importUserByScreenName(companyId, screenName)[ CD ]
