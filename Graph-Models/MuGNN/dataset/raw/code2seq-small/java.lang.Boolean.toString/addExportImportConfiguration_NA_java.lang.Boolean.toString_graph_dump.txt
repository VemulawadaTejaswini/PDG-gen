Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_5 $$ if (type == ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT) [ CD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_9 $$ String description = ParamUtil.getString(portletRequest, "description")[ CD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_8 $$ String name = ParamUtil.getString(portletRequest, "name")[ CD ]
Line_6 $$ groupId = ParamUtil.getLong(portletRequest, "liveGroupId")-->Line_10 $$ Map<String, Serializable> settingsMap = ExportImportConfigurationSettingsMapFactory.buildSettingsMap(portletRequest, groupId, type)[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_10 $$ Map<String, Serializable> settingsMap = ExportImportConfigurationSettingsMapFactory.buildSettingsMap(portletRequest, groupId, type)[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_4 $$ long groupId = ParamUtil.getLong(portletRequest, "groupId")[ CD ]
Line_4 $$ long groupId = ParamUtil.getLong(portletRequest, "groupId")-->Line_6 $$ groupId = ParamUtil.getLong(portletRequest, "liveGroupId")[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_5 $$ if (type == ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT) [ FD ]
Line_5 $$ if (type == ExportImportConfigurationConstants.TYPE_EXPORT_LAYOUT) -->Line_6 $$ groupId = ParamUtil.getLong(portletRequest, "liveGroupId")[ CD ]
Line_4 $$ long groupId = ParamUtil.getLong(portletRequest, "groupId")-->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ FD ]
Line_10 $$ Map<String, Serializable> settingsMap = ExportImportConfigurationSettingsMapFactory.buildSettingsMap(portletRequest, groupId, type)-->Line_11 $$ Map<String, String[]> parameterMap = (Map<String, String[]>) settingsMap.get("parameterMap")[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_11 $$ Map<String, String[]> parameterMap = (Map<String, String[]>) settingsMap.get("parameterMap")[ CD ]
Line_9 $$ String description = ParamUtil.getString(portletRequest, "description")-->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_10 $$ Map<String, Serializable> settingsMap = ExportImportConfigurationSettingsMapFactory.buildSettingsMap(portletRequest, groupId, type)[ CD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_6 $$ groupId = ParamUtil.getLong(portletRequest, "liveGroupId")[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_12 $$ if ((parameterMap != null) && (type == ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL)) [ CD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ CD ]
Line_10 $$ Map<String, Serializable> settingsMap = ExportImportConfigurationSettingsMapFactory.buildSettingsMap(portletRequest, groupId, type)-->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ FD ]
Line_11 $$ Map<String, String[]> parameterMap = (Map<String, String[]>) settingsMap.get("parameterMap")-->Line_13 $$ parameterMap.put(PortletDataHandlerKeys.PERFORM_DIRECT_BINARY_IMPORT, new String[] [ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_8 $$ String name = ParamUtil.getString(portletRequest, "name")[ FD ]
Line_8 $$ String name = ParamUtil.getString(portletRequest, "name")-->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ FD ]
Line_12 $$ if ((parameterMap != null) && (type == ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL)) -->Line_13 $$ parameterMap.put(PortletDataHandlerKeys.PERFORM_DIRECT_BINARY_IMPORT, new String[] [ CD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_4 $$ long groupId = ParamUtil.getLong(portletRequest, "groupId")[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_4 $$ long groupId = ParamUtil.getLong(portletRequest, "groupId")-->Line_10 $$ Map<String, Serializable> settingsMap = ExportImportConfigurationSettingsMapFactory.buildSettingsMap(portletRequest, groupId, type)[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_9 $$ String description = ParamUtil.getString(portletRequest, "description")[ FD ]
Line_6 $$ groupId = ParamUtil.getLong(portletRequest, "liveGroupId")-->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ FD ]
Line_2 $$ protected static ExportImportConfiguration addExportImportConfiguration(PortletRequest portletRequest, int type) throws PortalException -->Line_15 $$ return ExportImportConfigurationLocalServiceUtil.addExportImportConfiguration(themeDisplay.getUserId(), groupId, name, description, type, settingsMap, new ServiceContext())[ FD ]
