Line_7 $$ if (classElement.getAttributeValue("remove", Boolean.FALSE.toString()).equals(Boolean.TRUE.toString())) -->Line_10 $$ myCollectionClassesRequiringCapacity.add(className)[ CD ]
Line_6 $$ final String className = classElement.getText()-->Line_10 $$ myCollectionClassesRequiringCapacity.add(className)[ FD ]
Line_2 $$ public void readSettings(@NotNull Element node) throws InvalidDataException -->Line_4 $$ myCollectionClassesRequiringCapacity.addAll(getDefaultSettings())[ CD ]
Line_7 $$ if (classElement.getAttributeValue("remove", Boolean.FALSE.toString()).equals(Boolean.TRUE.toString())) -->Line_8 $$ myCollectionClassesRequiringCapacity.remove(className)[ CD ]
Line_2 $$ public void readSettings(@NotNull Element node) throws InvalidDataException -->Line_5 $$ for (Element classElement : node.getChildren("cls")) [ FD ]
Line_2 $$ public void readSettings(@NotNull Element node) throws InvalidDataException -->Line_3 $$ myCollectionClassesRequiringCapacity.clear()[ CD ]
Line_5 $$ for (Element classElement : node.getChildren("cls")) -->Line_6 $$ final String className = classElement.getText()[ FD ]
Line_5 $$ for (Element classElement : node.getChildren("cls")) -->Line_7 $$ if (classElement.getAttributeValue("remove", Boolean.FALSE.toString()).equals(Boolean.TRUE.toString())) [ FD ]
Line_6 $$ final String className = classElement.getText()-->Line_8 $$ myCollectionClassesRequiringCapacity.remove(className)[ FD ]
