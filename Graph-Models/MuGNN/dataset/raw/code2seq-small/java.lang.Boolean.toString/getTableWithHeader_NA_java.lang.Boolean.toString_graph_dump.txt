Line_3 $$ Table table = new Table()-->Line_26 $$ table.addCell(pool + ".rejected", "alias:" + poolAlias + "r;default:" + defaultDisplayVal + ";text-align:right;desc:number of rejected " + pool + " threads")[ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_9 $$ table.addCell("port", "default:false;alias:po;desc:bound transport port")[ CD ]
Line_3 $$ Table table = new Table()-->Line_7 $$ table.addCell("host", "alias:h;desc:host name")[ FD ]
Line_3 $$ Table table = new Table()-->Line_22 $$ table.addCell(pool + ".active", "alias:" + poolAlias + "a;default:" + defaultDisplayVal + ";text-align:right;desc:number of active " + pool + " threads")[ FD ]
Line_11 $$ for (String pool : SUPPORTED_NAMES) -->Line_15 $$ if (pool.equals(requestedPool)) [ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_3 $$ Table table = new Table()[ CD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_4 $$ table.startHeaders()[ CD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_5 $$ table.addCell("id", "default:false;alias:nodeId;desc:unique node id")[ CD ]
Line_3 $$ Table table = new Table()-->Line_25 $$ table.addCell(pool + ".queueSize", "alias:" + poolAlias + "qs;default:false;text-align:right;desc:maximum number of " + pool + " threads in queue")[ FD ]
Line_3 $$ Table table = new Table()-->Line_29 $$ table.addCell(pool + ".min", "alias:" + poolAlias + "mi;default:false;text-align:right;desc:minimum number of " + pool + " threads")[ FD ]
Line_13 $$ boolean display = false-->Line_16 $$ display = true[ FD ]
Line_3 $$ Table table = new Table()-->Line_23 $$ table.addCell(pool + ".size", "alias:" + poolAlias + "s;default:false;text-align:right;desc:number of " + pool + " threads")[ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_8 $$ table.addCell("ip", "alias:i;desc:ip address")[ CD ]
Line_14 $$ for (String requestedPool : requestedPools) -->Line_15 $$ if (pool.equals(requestedPool)) [ FD ]
Line_3 $$ Table table = new Table()-->Line_31 $$ table.addCell(pool + ".keepAlive", "alias:" + poolAlias + "k;default:false;text-align:right;desc:" + pool + " thread keep alive time")[ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_34 $$ return table[ CD ]
Line_3 $$ Table table = new Table()-->Line_4 $$ table.startHeaders()[ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_7 $$ table.addCell("host", "alias:h;desc:host name")[ CD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_10 $$ final String[] requestedPools = fetchSortedPools(request, DEFAULT_THREAD_POOLS)[ FD ]
Line_11 $$ for (String pool : SUPPORTED_NAMES) -->Line_12 $$ String poolAlias = THREAD_POOL_TO_ALIAS.get(pool)[ FD ]
Line_3 $$ Table table = new Table()-->Line_30 $$ table.addCell(pool + ".max", "alias:" + poolAlias + "ma;default:false;text-align:right;desc:maximum number of " + pool + " threads")[ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_33 $$ table.endHeaders()[ CD ]
Line_3 $$ Table table = new Table()-->Line_6 $$ table.addCell("pid", "default:false;alias:p;desc:process id")[ FD ]
Line_13 $$ boolean display = false-->Line_20 $$ String defaultDisplayVal = Boolean.toString(display)[ FD ]
Line_3 $$ Table table = new Table()-->Line_24 $$ table.addCell(pool + ".queue", "alias:" + poolAlias + "q;default:" + defaultDisplayVal + ";text-align:right;desc:number of " + pool + " threads in queue")[ FD ]
Line_3 $$ Table table = new Table()-->Line_9 $$ table.addCell("port", "default:false;alias:po;desc:bound transport port")[ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_6 $$ table.addCell("pid", "default:false;alias:p;desc:process id")[ CD ]
Line_15 $$ if (pool.equals(requestedPool)) -->Line_16 $$ display = true[ CD ]
Line_3 $$ Table table = new Table()-->Line_28 $$ table.addCell(pool + ".completed", "alias:" + poolAlias + "c;default:false;text-align:right;desc:number of completed " + pool + " threads")[ FD ]
Line_2 $$ protected Table getTableWithHeader(final RestRequest request) -->Line_10 $$ final String[] requestedPools = fetchSortedPools(request, DEFAULT_THREAD_POOLS)[ CD ]
Line_3 $$ Table table = new Table()-->Line_5 $$ table.addCell("id", "default:false;alias:nodeId;desc:unique node id")[ FD ]
Line_16 $$ display = true-->Line_20 $$ String defaultDisplayVal = Boolean.toString(display)[ FD ]
Line_3 $$ Table table = new Table()-->Line_33 $$ table.endHeaders()[ FD ]
Line_3 $$ Table table = new Table()-->Line_8 $$ table.addCell("ip", "alias:i;desc:ip address")[ FD ]
Line_3 $$ Table table = new Table()-->Line_21 $$ table.addCell(pool + ".type", "alias:" + poolAlias + "t;default:false;desc:" + pool + " thread pool type")[ FD ]
Line_3 $$ Table table = new Table()-->Line_27 $$ table.addCell(pool + ".largest", "alias:" + poolAlias + "l;default:false;text-align:right;desc:highest number of seen active " + pool + " threads")[ FD ]
