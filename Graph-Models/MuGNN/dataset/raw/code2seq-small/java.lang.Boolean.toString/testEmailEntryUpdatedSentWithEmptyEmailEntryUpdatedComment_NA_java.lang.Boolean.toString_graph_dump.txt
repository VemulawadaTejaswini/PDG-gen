Line_5 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_7 $$ BlogsEntry entry = BlogsEntryLocalServiceUtil.addEntry(TestPropsValues.getUserId(), RandomTestUtil.randomString(), RandomTestUtil.randomString(), serviceContext)[ FD ]
Line_5 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_9 $$ BlogsTestUtil.populateNotificationsServiceContext(serviceContext, Constants.UPDATE)[ FD ]
Line_5 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_10 $$ serviceContext.setAttribute("sendEmailEntryUpdated", Boolean.TRUE.toString())[ FD ]
Line_12 $$ MailMessage message = MailServiceTestUtil.getLastMailMessage()-->Line_13 $$ Assert.assertEquals(message.getBody(), StringPool.NEW_LINE)[ FD ]
Line_5 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_6 $$ BlogsTestUtil.populateNotificationsServiceContext(serviceContext, Constants.ADD)[ FD ]
Line_5 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_11 $$ BlogsEntryLocalServiceUtil.updateEntry(TestPropsValues.getUserId(), entry.getEntryId(), StringUtil.randomString(), StringUtil.randomString(), serviceContext)[ FD ]
Line_7 $$ BlogsEntry entry = BlogsEntryLocalServiceUtil.addEntry(TestPropsValues.getUserId(), RandomTestUtil.randomString(), RandomTestUtil.randomString(), serviceContext)-->Line_11 $$ BlogsEntryLocalServiceUtil.updateEntry(TestPropsValues.getUserId(), entry.getEntryId(), StringUtil.randomString(), StringUtil.randomString(), serviceContext)[ FD ]
