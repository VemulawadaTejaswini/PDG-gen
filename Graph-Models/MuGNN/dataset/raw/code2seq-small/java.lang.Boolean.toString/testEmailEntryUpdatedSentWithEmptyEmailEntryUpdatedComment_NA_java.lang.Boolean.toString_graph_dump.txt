Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_9 $$ serviceContext.setAttribute("sendEmailEntryUpdated", Boolean.TRUE.toString())[ CD ]
Line_11 $$ MailMessage message = MailServiceTestUtil.getLastMailMessage()-->Line_12 $$ Assert.assertEquals(message.getBody(), StringPool.NEW_LINE)[ FD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_3 $$ setUpBlogsGroupServiceSettings()[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_8 $$ BlogsTestUtil.populateNotificationsServiceContext(serviceContext, Constants.UPDATE)[ FD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_12 $$ Assert.assertEquals(message.getBody(), StringPool.NEW_LINE)[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_6 $$ BlogsEntry entry = BlogsEntryLocalServiceUtil.addEntry(TestPropsValues.getUserId(), RandomTestUtil.randomString(), RandomTestUtil.randomString(), serviceContext)[ FD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_7 $$ BlogsEntryLocalServiceUtil.subscribe(_user.getUserId(), _group.getGroupId())[ CD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_6 $$ BlogsEntry entry = BlogsEntryLocalServiceUtil.addEntry(TestPropsValues.getUserId(), RandomTestUtil.randomString(), RandomTestUtil.randomString(), serviceContext)[ CD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())[ CD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_10 $$ BlogsEntryLocalServiceUtil.updateEntry(TestPropsValues.getUserId(), entry.getEntryId(), StringUtil.randomString(), StringUtil.randomString(), serviceContext)[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_10 $$ BlogsEntryLocalServiceUtil.updateEntry(TestPropsValues.getUserId(), entry.getEntryId(), StringUtil.randomString(), StringUtil.randomString(), serviceContext)[ FD ]
Line_6 $$ BlogsEntry entry = BlogsEntryLocalServiceUtil.addEntry(TestPropsValues.getUserId(), RandomTestUtil.randomString(), RandomTestUtil.randomString(), serviceContext)-->Line_10 $$ BlogsEntryLocalServiceUtil.updateEntry(TestPropsValues.getUserId(), entry.getEntryId(), StringUtil.randomString(), StringUtil.randomString(), serviceContext)[ FD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_11 $$ MailMessage message = MailServiceTestUtil.getLastMailMessage()[ CD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_8 $$ BlogsTestUtil.populateNotificationsServiceContext(serviceContext, Constants.UPDATE)[ CD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_9 $$ serviceContext.setAttribute("sendEmailEntryUpdated", Boolean.TRUE.toString())[ FD ]
Line_4 $$ ServiceContext serviceContext = ServiceContextTestUtil.getServiceContext(_group.getGroupId(), TestPropsValues.getUserId())-->Line_5 $$ BlogsTestUtil.populateNotificationsServiceContext(serviceContext, Constants.ADD)[ FD ]
Line_2 $$ public void testEmailEntryUpdatedSentWithEmptyEmailEntryUpdatedComment() throws Exception -->Line_5 $$ BlogsTestUtil.populateNotificationsServiceContext(serviceContext, Constants.ADD)[ CD ]
