Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_12 $$ dynamicContentElement.addAttribute("title", jsonObject.getString("title"))[ CD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_13 $$ dynamicContentElement.addCDATA(fieldValue)[ FD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_16 $$ long groupId = jsonObject.getLong("groupId")[ CD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_10 $$ dynamicContentElement.addAttribute("alt", jsonObject.getString("alt"))[ FD ]
Line_4 $$ if (fieldValue.equals(Boolean.FALSE.toString())) -->Line_5 $$ fieldValue = StringPool.BLANK[ CD ]
Line_26 $$ if (group.isUser()) -->Line_29 $$ sb.append("private-group")[ CD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_38 $$ dynamicContentElement.addCDATA(sb.toString())[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_15 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)[ FD ]
Line_24 $$ if (group == null) -->Line_26 $$ if (group.isUser()) [ CD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_36 $$ sb.append(groupId)[ FD ]
Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)-->Line_17 $$ long layoutId = jsonObject.getLong("layoutId")[ FD ]
Line_16 $$ long groupId = jsonObject.getLong("groupId")-->Line_36 $$ sb.append(groupId)[ FD ]
Line_42 $$ for (int i = 0; i < jsonArray.length(); i++) -->Line_43 $$ Element optionElement = dynamicContentElement.addElement("option")[ CD ]
Line_23 $$ Group group = _groupLocalService.fetchGroup(groupId)-->Line_24 $$ if (group == null) [ FD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_39 $$ if (DDMImpl.TYPE_SELECT.equals(fieldType) && Validator.isNotNull(fieldValue)) [ CD ]
Line_3 $$ if (DDMImpl.TYPE_CHECKBOX.equals(fieldType)) -->Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) [ CD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_34 $$ if (groupId > 0) [ CD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_35 $$ sb.append(StringPool.AT)[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_50 $$ dynamicContentElement.addCDATA(fieldValue)[ FD ]
Line_42 $$ for (int i = 0; i < jsonArray.length(); i++) -->Line_44 $$ optionElement.addCDATA(jsonArray.getString(i))[ FD ]
Line_22 $$ if (privateLayout) -->Line_24 $$ if (group == null) [ CD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) [ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_11 $$ dynamicContentElement.addAttribute("name", jsonObject.getString("name"))[ FD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_50 $$ dynamicContentElement.addCDATA(fieldValue)[ FD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_32 $$ sb.append("public")[ FD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_17 $$ long layoutId = jsonObject.getLong("layoutId")[ CD ]
Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)[ CD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) [ FD ]
Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)-->Line_10 $$ dynamicContentElement.addAttribute("alt", jsonObject.getString("alt"))[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_3 $$ if (DDMImpl.TYPE_CHECKBOX.equals(fieldType)) [ CD ]
Line_41 $$ if (multiple) -->Line_42 $$ for (int i = 0; i < jsonArray.length(); i++) [ CD ]
Line_41 $$ if (multiple) -->Line_47 $$ dynamicContentElement.addCDATA(jsonArray.getString(0))[ CD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_4 $$ if (fieldValue.equals(Boolean.FALSE.toString())) [ FD ]
Line_22 $$ if (privateLayout) -->Line_23 $$ Group group = _groupLocalService.fetchGroup(groupId)[ CD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_38 $$ dynamicContentElement.addCDATA(sb.toString())[ CD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_27 $$ sb.append("private-user")[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_39 $$ if (DDMImpl.TYPE_SELECT.equals(fieldType) && Validator.isNotNull(fieldValue)) [ FD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_25 $$ sb.append("private")[ FD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_40 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray(fieldValue)[ FD ]
Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)-->Line_11 $$ dynamicContentElement.addAttribute("name", jsonObject.getString("name"))[ FD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_29 $$ sb.append("private-group")[ FD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_13 $$ dynamicContentElement.addCDATA(fieldValue)[ FD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_21 $$ sb.append(StringPool.AT)[ FD ]
Line_39 $$ if (DDMImpl.TYPE_SELECT.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_41 $$ if (multiple) [ CD ]
Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_11 $$ dynamicContentElement.addAttribute("name", jsonObject.getString("name"))[ CD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_18 $$ boolean privateLayout = jsonObject.getBoolean("privateLayout")[ CD ]
Line_24 $$ if (group == null) -->Line_25 $$ sb.append("private")[ CD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_15 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)[ FD ]
Line_39 $$ if (DDMImpl.TYPE_SELECT.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_40 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray(fieldValue)[ CD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_5 $$ fieldValue = StringPool.BLANK[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_3 $$ if (DDMImpl.TYPE_CHECKBOX.equals(fieldType)) [ FD ]
Line_23 $$ Group group = _groupLocalService.fetchGroup(groupId)-->Line_26 $$ if (group.isUser()) [ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_47 $$ dynamicContentElement.addCDATA(jsonArray.getString(0))[ FD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_7 $$ dynamicContentElement.addCDATA(fieldValue)[ FD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)[ CD ]
Line_39 $$ if (DDMImpl.TYPE_SELECT.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_50 $$ dynamicContentElement.addCDATA(fieldValue)[ CD ]
Line_26 $$ if (group.isUser()) -->Line_27 $$ sb.append("private-user")[ CD ]
Line_43 $$ Element optionElement = dynamicContentElement.addElement("option")-->Line_44 $$ optionElement.addCDATA(jsonArray.getString(i))[ FD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_20 $$ sb.append(layoutId)[ CD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)[ FD ]
Line_40 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray(fieldValue)-->Line_42 $$ for (int i = 0; i < jsonArray.length(); i++) [ FD ]
Line_40 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray(fieldValue)-->Line_44 $$ optionElement.addCDATA(jsonArray.getString(i))[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_7 $$ dynamicContentElement.addCDATA(fieldValue)[ FD ]
Line_17 $$ long layoutId = jsonObject.getLong("layoutId")-->Line_20 $$ sb.append(layoutId)[ FD ]
Line_16 $$ long groupId = jsonObject.getLong("groupId")-->Line_34 $$ if (groupId > 0) [ FD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_21 $$ sb.append(StringPool.AT)[ CD ]
Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)-->Line_18 $$ boolean privateLayout = jsonObject.getBoolean("privateLayout")[ FD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_39 $$ if (DDMImpl.TYPE_SELECT.equals(fieldType) && Validator.isNotNull(fieldValue)) [ FD ]
Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)-->Line_16 $$ long groupId = jsonObject.getLong("groupId")[ FD ]
Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_10 $$ dynamicContentElement.addAttribute("alt", jsonObject.getString("alt"))[ CD ]
Line_22 $$ if (privateLayout) -->Line_32 $$ sb.append("public")[ CD ]
Line_42 $$ for (int i = 0; i < jsonArray.length(); i++) -->Line_44 $$ optionElement.addCDATA(jsonArray.getString(i))[ CD ]
Line_40 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray(fieldValue)-->Line_47 $$ dynamicContentElement.addCDATA(jsonArray.getString(0))[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_43 $$ Element optionElement = dynamicContentElement.addElement("option")[ FD ]
Line_9 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)-->Line_12 $$ dynamicContentElement.addAttribute("title", jsonObject.getString("title"))[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) [ FD ]
Line_5 $$ fieldValue = StringPool.BLANK-->Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) [ FD ]
Line_3 $$ if (DDMImpl.TYPE_CHECKBOX.equals(fieldType)) -->Line_4 $$ if (fieldValue.equals(Boolean.FALSE.toString())) [ CD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_12 $$ dynamicContentElement.addAttribute("title", jsonObject.getString("title"))[ FD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_40 $$ JSONArray jsonArray = JSONFactoryUtil.createJSONArray(fieldValue)[ FD ]
Line_34 $$ if (groupId > 0) -->Line_36 $$ sb.append(groupId)[ CD ]
Line_19 $$ StringBundler sb = new StringBundler((groupId > 0) ? 5 : 3)-->Line_20 $$ sb.append(layoutId)[ FD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_15 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject(fieldValue)[ CD ]
Line_3 $$ if (DDMImpl.TYPE_CHECKBOX.equals(fieldType)) -->Line_7 $$ dynamicContentElement.addCDATA(fieldValue)[ CD ]
Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_13 $$ dynamicContentElement.addCDATA(fieldValue)[ CD ]
Line_2 $$ protected void updateDynamicContentValue(Element dynamicContentElement, String fieldType, boolean multiple, String fieldValue) throws Exception -->Line_38 $$ dynamicContentElement.addCDATA(sb.toString())[ FD ]
Line_34 $$ if (groupId > 0) -->Line_35 $$ sb.append(StringPool.AT)[ CD ]
Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_22 $$ if (privateLayout) [ CD ]
Line_8 $$ if (DDMImpl.TYPE_DDM_IMAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) -->Line_14 $$ if (DDMImpl.TYPE_DDM_LINK_TO_PAGE.equals(fieldType) && Validator.isNotNull(fieldValue)) [ CD ]
Line_16 $$ long groupId = jsonObject.getLong("groupId")-->Line_23 $$ Group group = _groupLocalService.fetchGroup(groupId)[ FD ]
