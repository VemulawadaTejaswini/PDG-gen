Line_31 $$ longDelayReplica = shardRouting-->Line_35 $$ assertNotNull(longDelayReplica)[ FD ]
Line_6 $$ final ThreadPool testThreadPool = new ThreadPool(getTestName())-->Line_78 $$ terminate(testThreadPool)[ FD ]
Line_20 $$ for (ShardRouting shardRouting : clusterState.getRoutingNodes().routingTable().allShards("short_delay")) -->Line_21 $$ if (shardRouting.primary() == false) [ FD ]
Line_51 $$ shortDelayUnassignedReplica = shr-->Line_56 $$ assertTrue(shortDelayReplica.isSameShard(shortDelayUnassignedReplica))[ FD ]
Line_20 $$ for (ShardRouting shardRouting : clusterState.getRoutingNodes().routingTable().allShards("short_delay")) -->Line_22 $$ shortDelayReplica = shardRouting[ FD ]
Line_48 $$ ShardRouting longDelayUnassignedReplica = null-->Line_53 $$ longDelayUnassignedReplica = shr[ FD ]
Line_30 $$ if (shardRouting.primary() == false) -->Line_31 $$ longDelayReplica = shardRouting[ CD ]
Line_50 $$ if (shr.getIndex().equals("short_delay")) -->Line_51 $$ shortDelayUnassignedReplica = shr[ CD ]
Line_10 $$ ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index("short_delay")).addAsNew(metaData.index("long_delay")).build()).nodes(DiscoveryNodes.builder().put(newNode("node0", singletonMap("data", Boolean.FALSE.toString()))).localNodeId("node0").masterNodeId("node0").put(newNode("node1")).put(newNode("node2")).put(newNode("node3")).put(newNode("node4"))).build()-->Line_20 $$ for (ShardRouting shardRouting : clusterState.getRoutingNodes().routingTable().allShards("short_delay")) [ FD ]
Line_53 $$ longDelayUnassignedReplica = shr-->Line_57 $$ assertTrue(longDelayReplica.isSameShard(longDelayUnassignedReplica))[ FD ]
Line_48 $$ ShardRouting longDelayUnassignedReplica = null-->Line_57 $$ assertTrue(longDelayReplica.isSameShard(longDelayUnassignedReplica))[ FD ]
Line_8 $$ MockAllocationService allocation = createAllocationService(Settings.EMPTY, new DelayedShardsMockGatewayAllocator())-->Line_42 $$ clusterState = ClusterState.builder(clusterState).routingResult(allocation.reroute(clusterState, "reroute")).build()[ FD ]
Line_49 $$ for (ShardRouting shr : unassigned) -->Line_51 $$ shortDelayUnassignedReplica = shr[ FD ]
Line_39 $$ clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(shortDelayReplica.currentNodeId()).remove(longDelayReplica.currentNodeId())).build()-->Line_42 $$ clusterState = ClusterState.builder(clusterState).routingResult(allocation.reroute(clusterState, "reroute")).build()[ FD ]
Line_10 $$ ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index("short_delay")).addAsNew(metaData.index("long_delay")).build()).nodes(DiscoveryNodes.builder().put(newNode("node0", singletonMap("data", Boolean.FALSE.toString()))).localNodeId("node0").masterNodeId("node0").put(newNode("node1")).put(newNode("node2")).put(newNode("node3")).put(newNode("node4"))).build()-->Line_29 $$ for (ShardRouting shardRouting : clusterState.getRoutingNodes().routingTable().allShards("long_delay")) [ FD ]
Line_50 $$ if (shr.getIndex().equals("short_delay")) -->Line_53 $$ longDelayUnassignedReplica = shr[ CD ]
Line_10 $$ ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index("short_delay")).addAsNew(metaData.index("long_delay")).build()).nodes(DiscoveryNodes.builder().put(newNode("node0", singletonMap("data", Boolean.FALSE.toString()))).localNodeId("node0").masterNodeId("node0").put(newNode("node1")).put(newNode("node2")).put(newNode("node3")).put(newNode("node4"))).build()-->Line_17 $$ assertThat("all shards should be started", clusterState.getRoutingNodes().shardsWithState(STARTED).size(), equalTo(4))[ FD ]
Line_10 $$ ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index("short_delay")).addAsNew(metaData.index("long_delay")).build()).nodes(DiscoveryNodes.builder().put(newNode("node0", singletonMap("data", Boolean.FALSE.toString()))).localNodeId("node0").masterNodeId("node0").put(newNode("node1")).put(newNode("node2")).put(newNode("node3")).put(newNode("node4"))).build()-->Line_42 $$ clusterState = ClusterState.builder(clusterState).routingResult(allocation.reroute(clusterState, "reroute")).build()[ FD ]
Line_49 $$ for (ShardRouting shr : unassigned) -->Line_50 $$ if (shr.getIndex().equals("short_delay")) [ FD ]
Line_22 $$ shortDelayReplica = shardRouting-->Line_39 $$ clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(shortDelayReplica.currentNodeId()).remove(longDelayReplica.currentNodeId())).build()[ FD ]
Line_9 $$ MetaData metaData = MetaData.builder().put(IndexMetaData.builder("short_delay").settings(settings(Version.CURRENT).put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING, "100ms")).numberOfShards(1).numberOfReplicas(1)).put(IndexMetaData.builder("long_delay").settings(settings(Version.CURRENT).put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING, "10s")).numberOfShards(1).numberOfReplicas(1)).build()-->Line_10 $$ ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index("short_delay")).addAsNew(metaData.index("long_delay")).build()).nodes(DiscoveryNodes.builder().put(newNode("node0", singletonMap("data", Boolean.FALSE.toString()))).localNodeId("node0").masterNodeId("node0").put(newNode("node1")).put(newNode("node2")).put(newNode("node3")).put(newNode("node4"))).build()[ FD ]
Line_22 $$ shortDelayReplica = shardRouting-->Line_56 $$ assertTrue(shortDelayReplica.isSameShard(shortDelayUnassignedReplica))[ FD ]
Line_31 $$ longDelayReplica = shardRouting-->Line_39 $$ clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(shortDelayReplica.currentNodeId()).remove(longDelayReplica.currentNodeId())).build()[ FD ]
Line_22 $$ shortDelayReplica = shardRouting-->Line_26 $$ assertNotNull(shortDelayReplica)[ FD ]
Line_20 $$ for (ShardRouting shardRouting : clusterState.getRoutingNodes().routingTable().allShards("short_delay")) -->Line_31 $$ longDelayReplica = shardRouting[ FD ]
Line_10 $$ ClusterState clusterState = ClusterState.builder(ClusterName.DEFAULT).metaData(metaData).routingTable(RoutingTable.builder().addAsNew(metaData.index("short_delay")).addAsNew(metaData.index("long_delay")).build()).nodes(DiscoveryNodes.builder().put(newNode("node0", singletonMap("data", Boolean.FALSE.toString()))).localNodeId("node0").masterNodeId("node0").put(newNode("node1")).put(newNode("node2")).put(newNode("node3")).put(newNode("node4"))).build()-->Line_39 $$ clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).remove(shortDelayReplica.currentNodeId()).remove(longDelayReplica.currentNodeId())).build()[ FD ]
Line_49 $$ for (ShardRouting shr : unassigned) -->Line_53 $$ longDelayUnassignedReplica = shr[ FD ]
Line_31 $$ longDelayReplica = shardRouting-->Line_57 $$ assertTrue(longDelayReplica.isSameShard(longDelayUnassignedReplica))[ FD ]
Line_21 $$ if (shardRouting.primary() == false) -->Line_22 $$ shortDelayReplica = shardRouting[ CD ]
Line_20 $$ for (ShardRouting shardRouting : clusterState.getRoutingNodes().routingTable().allShards("short_delay")) -->Line_30 $$ if (shardRouting.primary() == false) [ FD ]
