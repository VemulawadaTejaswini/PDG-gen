Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_16 $$ serviceRegistrations.addServiceRegistration(bundleContext.registerService(ServletContextListener.class, bundlePortletApp, properties))[ FD ]
Line_8 $$ bundlePortletApp = new BundlePortletApp(bundle, portalPortletModel, _httpServiceEndpoint)-->Line_9 $$ createContext(bundle, bundlePortletApp, serviceRegistrations)[ FD ]
Line_13 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_16 $$ serviceRegistrations.addServiceRegistration(bundleContext.registerService(ServletContextListener.class, bundlePortletApp, properties))[ FD ]
Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()-->Line_4 $$ if (bundlePortletApp != null) [ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_9 $$ createContext(bundle, bundlePortletApp, serviceRegistrations)[ CD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_9 $$ createContext(bundle, bundlePortletApp, serviceRegistrations)[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_12 $$ BundleContext bundleContext = bundle.getBundleContext()[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_4 $$ if (bundlePortletApp != null) [ CD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_8 $$ bundlePortletApp = new BundlePortletApp(bundle, portalPortletModel, _httpServiceEndpoint)[ CD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_12 $$ BundleContext bundleContext = bundle.getBundleContext()[ CD ]
Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()-->Line_14 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT, bundlePortletApp.getServletContextName())[ FD ]
Line_8 $$ bundlePortletApp = new BundlePortletApp(bundle, portalPortletModel, _httpServiceEndpoint)-->Line_14 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT, bundlePortletApp.getServletContextName())[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_10 $$ serviceRegistrations.setBundlePortletApp(bundlePortletApp)[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_16 $$ serviceRegistrations.addServiceRegistration(bundleContext.registerService(ServletContextListener.class, bundlePortletApp, properties))[ CD ]
Line_13 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_15 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_LISTENER, Boolean.TRUE.toString())[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_10 $$ serviceRegistrations.setBundlePortletApp(bundlePortletApp)[ CD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_13 $$ Dictionary<String, Object> properties = new HashMapDictionary()[ CD ]
Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()-->Line_10 $$ serviceRegistrations.setBundlePortletApp(bundlePortletApp)[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()[ CD ]
Line_8 $$ bundlePortletApp = new BundlePortletApp(bundle, portalPortletModel, _httpServiceEndpoint)-->Line_16 $$ serviceRegistrations.addServiceRegistration(bundleContext.registerService(ServletContextListener.class, bundlePortletApp, properties))[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_14 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT, bundlePortletApp.getServletContextName())[ CD ]
Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()-->Line_9 $$ createContext(bundle, bundlePortletApp, serviceRegistrations)[ FD ]
Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()-->Line_16 $$ serviceRegistrations.addServiceRegistration(bundleContext.registerService(ServletContextListener.class, bundlePortletApp, properties))[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_15 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_LISTENER, Boolean.TRUE.toString())[ CD ]
Line_4 $$ if (bundlePortletApp != null) -->Line_5 $$ return bundlePortletApp[ CD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_7 $$ com.liferay.portal.model.Portlet portalPortletModel = _portletLocalService.getPortletById(CompanyConstants.SYSTEM, PortletKeys.PORTAL)[ CD ]
Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()-->Line_8 $$ bundlePortletApp = new BundlePortletApp(bundle, portalPortletModel, _httpServiceEndpoint)[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_11 $$ serviceRegistrations.doConfiguration(classLoader)[ CD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_3 $$ BundlePortletApp bundlePortletApp = serviceRegistrations.getBundlePortletApp()[ FD ]
Line_13 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_14 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT, bundlePortletApp.getServletContextName())[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_17 $$ return bundlePortletApp[ CD ]
Line_8 $$ bundlePortletApp = new BundlePortletApp(bundle, portalPortletModel, _httpServiceEndpoint)-->Line_10 $$ serviceRegistrations.setBundlePortletApp(bundlePortletApp)[ FD ]
Line_12 $$ BundleContext bundleContext = bundle.getBundleContext()-->Line_16 $$ serviceRegistrations.addServiceRegistration(bundleContext.registerService(ServletContextListener.class, bundlePortletApp, properties))[ FD ]
Line_2 $$ protected BundlePortletApp createBundlePortletApp(Bundle bundle, ClassLoader classLoader, ServiceRegistrations serviceRegistrations) -->Line_11 $$ serviceRegistrations.doConfiguration(classLoader)[ FD ]
