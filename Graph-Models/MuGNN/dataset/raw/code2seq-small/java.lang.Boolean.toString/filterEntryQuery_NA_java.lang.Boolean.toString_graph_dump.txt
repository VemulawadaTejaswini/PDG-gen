Line_7 $$ if (results != null) -->Line_8 $$ return results[ CD ]
Line_24 $$ int filteredEntriesCount = 0-->Line_56 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_16 $$ int end = entryQuery.getEnd()-->Line_45 $$ end = filteredEntriesCount[ FD ]
Line_42 $$ filteredEntriesCount = filteredEntries.size()-->Line_44 $$ if (end > filteredEntriesCount) [ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_16 $$ int end = entryQuery.getEnd()[ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_25 $$ if (entryQuery.isEnablePermissions()) [ CD ]
Line_26 $$ PermissionChecker permissionChecker = getPermissionChecker()-->Line_33 $$ if (assetRendererFactory.hasPermission(permissionChecker, classPK, ActionKeys.VIEW)) [ FD ]
Line_6 $$ Object[] results = threadLocalCache.get(key)-->Line_58 $$ results = new Object[] [ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_60 $$ return results[ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_18 $$ if (entryQuery.isEnablePermissions()) [ FD ]
Line_6 $$ Object[] results = threadLocalCache.get(key)-->Line_7 $$ if (results != null) [ FD ]
Line_23 $$ List<AssetEntry> filteredEntries = null-->Line_38 $$ if ((end != QueryUtil.ALL_POS) && (filteredEntries.size() > end)) [ FD ]
Line_28 $$ for (AssetEntry entry : entries) -->Line_30 $$ long classPK = entry.getClassPK()[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_5 $$ key = key.concat(StringPool.POUND).concat(Boolean.toString(returnEntriesCountOnly))[ CD ]
Line_5 $$ key = key.concat(StringPool.POUND).concat(Boolean.toString(returnEntriesCountOnly))-->Line_59 $$ threadLocalCache.put(key, results)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_10 $$ if (returnEntriesCountOnly && !entryQuery.isEnablePermissions()) [ CD ]
Line_17 $$ int start = entryQuery.getStart()-->Line_47 $$ if (start > filteredEntriesCount) [ FD ]
Line_27 $$ filteredEntries = new ArrayList()-->Line_55 $$ filteredEntries = entries[ FD ]
Line_24 $$ int filteredEntriesCount = 0-->Line_44 $$ if (end > filteredEntriesCount) [ FD ]
Line_50 $$ filteredEntries = filteredEntries.subList(start, end)-->Line_55 $$ filteredEntries = entries[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_4 $$ String key = entryQuery.toString()[ CD ]
Line_45 $$ end = filteredEntriesCount-->Line_52 $$ entryQuery.setEnd(end)[ FD ]
Line_48 $$ start = filteredEntriesCount-->Line_53 $$ entryQuery.setStart(start)[ FD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_27 $$ filteredEntries = new ArrayList()[ CD ]
Line_43 $$ if ((end != QueryUtil.ALL_POS) && (start != QueryUtil.ALL_POS)) -->Line_44 $$ if (end > filteredEntriesCount) [ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_16 $$ int end = entryQuery.getEnd()[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_10 $$ if (returnEntriesCountOnly && !entryQuery.isEnablePermissions()) [ FD ]
Line_6 $$ Object[] results = threadLocalCache.get(key)-->Line_59 $$ threadLocalCache.put(key, results)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_18 $$ if (entryQuery.isEnablePermissions()) [ CD ]
Line_27 $$ filteredEntries = new ArrayList()-->Line_50 $$ filteredEntries = filteredEntries.subList(start, end)[ FD ]
Line_23 $$ List<AssetEntry> filteredEntries = null-->Line_50 $$ filteredEntries = filteredEntries.subList(start, end)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_22 $$ List<AssetEntry> entries = assetEntryLocalService.getEntries(entryQuery)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_5 $$ key = key.concat(StringPool.POUND).concat(Boolean.toString(returnEntriesCountOnly))[ FD ]
Line_16 $$ int end = entryQuery.getEnd()-->Line_44 $$ if (end > filteredEntriesCount) [ FD ]
Line_23 $$ List<AssetEntry> filteredEntries = null-->Line_55 $$ filteredEntries = entries[ FD ]
Line_4 $$ String key = entryQuery.toString()-->Line_13 $$ threadLocalCache.put(key, results)[ FD ]
Line_12 $$ results = new Object[] -->Line_58 $$ results = new Object[] [ FD ]
Line_16 $$ int end = entryQuery.getEnd()-->Line_52 $$ entryQuery.setEnd(end)[ FD ]
Line_3 $$ ThreadLocalCache<Object[]> threadLocalCache = ThreadLocalCacheManager.getThreadLocalCache(Lifecycle.REQUEST, AssetEntryServiceImpl.class.getName())-->Line_13 $$ threadLocalCache.put(key, results)[ FD ]
Line_27 $$ filteredEntries = new ArrayList()-->Line_56 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_4 $$ String key = entryQuery.toString()-->Line_5 $$ key = key.concat(StringPool.POUND).concat(Boolean.toString(returnEntriesCountOnly))[ FD ]
Line_18 $$ if (entryQuery.isEnablePermissions()) -->Line_19 $$ entryQuery.setEnd(end + PropsValues.ASSET_FILTER_SEARCH_LIMIT)[ CD ]
Line_16 $$ int end = entryQuery.getEnd()-->Line_50 $$ filteredEntries = filteredEntries.subList(start, end)[ FD ]
Line_10 $$ if (returnEntriesCountOnly && !entryQuery.isEnablePermissions()) -->Line_12 $$ results = new Object[] [ CD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_26 $$ PermissionChecker permissionChecker = getPermissionChecker()[ CD ]
Line_10 $$ if (returnEntriesCountOnly && !entryQuery.isEnablePermissions()) -->Line_11 $$ int entriesCount = assetEntryLocalService.getEntriesCount(entryQuery)[ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_3 $$ ThreadLocalCache<Object[]> threadLocalCache = ThreadLocalCacheManager.getThreadLocalCache(Lifecycle.REQUEST, AssetEntryServiceImpl.class.getName())[ CD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_42 $$ filteredEntriesCount = filteredEntries.size()[ CD ]
Line_58 $$ results = new Object[] -->Line_59 $$ threadLocalCache.put(key, results)[ FD ]
Line_27 $$ filteredEntries = new ArrayList()-->Line_38 $$ if ((end != QueryUtil.ALL_POS) && (filteredEntries.size() > end)) [ FD ]
Line_17 $$ int start = entryQuery.getStart()-->Line_53 $$ entryQuery.setStart(start)[ FD ]
Line_42 $$ filteredEntriesCount = filteredEntries.size()-->Line_47 $$ if (start > filteredEntriesCount) [ FD ]
Line_45 $$ end = filteredEntriesCount-->Line_50 $$ filteredEntries = filteredEntries.subList(start, end)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_23 $$ List<AssetEntry> filteredEntries = null[ CD ]
Line_24 $$ int filteredEntriesCount = 0-->Line_42 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_4 $$ String key = entryQuery.toString()[ FD ]
Line_5 $$ key = key.concat(StringPool.POUND).concat(Boolean.toString(returnEntriesCountOnly))-->Line_13 $$ threadLocalCache.put(key, results)[ FD ]
Line_42 $$ filteredEntriesCount = filteredEntries.size()-->Line_56 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_11 $$ int entriesCount = assetEntryLocalService.getEntriesCount(entryQuery)[ FD ]
Line_3 $$ ThreadLocalCache<Object[]> threadLocalCache = ThreadLocalCacheManager.getThreadLocalCache(Lifecycle.REQUEST, AssetEntryServiceImpl.class.getName())-->Line_59 $$ threadLocalCache.put(key, results)[ FD ]
Line_43 $$ if ((end != QueryUtil.ALL_POS) && (start != QueryUtil.ALL_POS)) -->Line_47 $$ if (start > filteredEntriesCount) [ CD ]
Line_42 $$ filteredEntriesCount = filteredEntries.size()-->Line_48 $$ start = filteredEntriesCount[ FD ]
Line_29 $$ String className = entry.getClassName()-->Line_31 $$ AssetRendererFactory<?> assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className)[ FD ]
Line_23 $$ List<AssetEntry> filteredEntries = null-->Line_34 $$ filteredEntries.add(entry)[ FD ]
Line_10 $$ if (returnEntriesCountOnly && !entryQuery.isEnablePermissions()) -->Line_14 $$ return results[ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_58 $$ results = new Object[] [ CD ]
Line_23 $$ List<AssetEntry> filteredEntries = null-->Line_56 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_17 $$ int start = entryQuery.getStart()-->Line_48 $$ start = filteredEntriesCount[ FD ]
Line_3 $$ ThreadLocalCache<Object[]> threadLocalCache = ThreadLocalCacheManager.getThreadLocalCache(Lifecycle.REQUEST, AssetEntryServiceImpl.class.getName())-->Line_6 $$ Object[] results = threadLocalCache.get(key)[ FD ]
Line_44 $$ if (end > filteredEntriesCount) -->Line_45 $$ end = filteredEntriesCount[ CD ]
Line_42 $$ filteredEntriesCount = filteredEntries.size()-->Line_45 $$ end = filteredEntriesCount[ FD ]
Line_4 $$ String key = entryQuery.toString()-->Line_6 $$ Object[] results = threadLocalCache.get(key)[ FD ]
Line_18 $$ if (entryQuery.isEnablePermissions()) -->Line_20 $$ entryQuery.setStart(0)[ CD ]
Line_17 $$ int start = entryQuery.getStart()-->Line_50 $$ filteredEntries = filteredEntries.subList(start, end)[ FD ]
Line_23 $$ List<AssetEntry> filteredEntries = null-->Line_42 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_27 $$ filteredEntries = new ArrayList()-->Line_34 $$ filteredEntries.add(entry)[ FD ]
Line_24 $$ int filteredEntriesCount = 0-->Line_47 $$ if (start > filteredEntriesCount) [ FD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_53 $$ entryQuery.setStart(start)[ CD ]
Line_24 $$ int filteredEntriesCount = 0-->Line_45 $$ end = filteredEntriesCount[ FD ]
Line_24 $$ int filteredEntriesCount = 0-->Line_48 $$ start = filteredEntriesCount[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_20 $$ entryQuery.setStart(0)[ FD ]
Line_30 $$ long classPK = entry.getClassPK()-->Line_33 $$ if (assetRendererFactory.hasPermission(permissionChecker, classPK, ActionKeys.VIEW)) [ FD ]
Line_43 $$ if ((end != QueryUtil.ALL_POS) && (start != QueryUtil.ALL_POS)) -->Line_50 $$ filteredEntries = filteredEntries.subList(start, end)[ CD ]
Line_12 $$ results = new Object[] -->Line_59 $$ threadLocalCache.put(key, results)[ FD ]
Line_28 $$ for (AssetEntry entry : entries) -->Line_29 $$ String className = entry.getClassName()[ FD ]
Line_23 $$ List<AssetEntry> filteredEntries = null-->Line_27 $$ filteredEntries = new ArrayList()[ FD ]
Line_6 $$ Object[] results = threadLocalCache.get(key)-->Line_12 $$ results = new Object[] [ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_24 $$ int filteredEntriesCount = 0[ CD ]
Line_12 $$ results = new Object[] -->Line_13 $$ threadLocalCache.put(key, results)[ FD ]
Line_50 $$ filteredEntries = filteredEntries.subList(start, end)-->Line_56 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_25 $$ if (entryQuery.isEnablePermissions()) [ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_17 $$ int start = entryQuery.getStart()[ FD ]
Line_28 $$ for (AssetEntry entry : entries) -->Line_34 $$ filteredEntries.add(entry)[ FD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_55 $$ filteredEntries = entries[ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_59 $$ threadLocalCache.put(key, results)[ CD ]
Line_55 $$ filteredEntries = entries-->Line_56 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_22 $$ List<AssetEntry> entries = assetEntryLocalService.getEntries(entryQuery)-->Line_55 $$ filteredEntries = entries[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_6 $$ Object[] results = threadLocalCache.get(key)[ CD ]
Line_27 $$ filteredEntries = new ArrayList()-->Line_42 $$ filteredEntriesCount = filteredEntries.size()[ FD ]
Line_4 $$ String key = entryQuery.toString()-->Line_59 $$ threadLocalCache.put(key, results)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_22 $$ List<AssetEntry> entries = assetEntryLocalService.getEntries(entryQuery)[ CD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_56 $$ filteredEntriesCount = filteredEntries.size()[ CD ]
Line_5 $$ key = key.concat(StringPool.POUND).concat(Boolean.toString(returnEntriesCountOnly))-->Line_6 $$ Object[] results = threadLocalCache.get(key)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_19 $$ entryQuery.setEnd(end + PropsValues.ASSET_FILTER_SEARCH_LIMIT)[ FD ]
Line_47 $$ if (start > filteredEntriesCount) -->Line_48 $$ start = filteredEntriesCount[ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_17 $$ int start = entryQuery.getStart()[ CD ]
Line_6 $$ Object[] results = threadLocalCache.get(key)-->Line_13 $$ threadLocalCache.put(key, results)[ FD ]
Line_33 $$ if (assetRendererFactory.hasPermission(permissionChecker, classPK, ActionKeys.VIEW)) -->Line_34 $$ filteredEntries.add(entry)[ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_53 $$ entryQuery.setStart(start)[ FD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_52 $$ entryQuery.setEnd(end)[ CD ]
Line_25 $$ if (entryQuery.isEnablePermissions()) -->Line_43 $$ if ((end != QueryUtil.ALL_POS) && (start != QueryUtil.ALL_POS)) [ CD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_7 $$ if (results != null) [ CD ]
Line_48 $$ start = filteredEntriesCount-->Line_50 $$ filteredEntries = filteredEntries.subList(start, end)[ FD ]
Line_2 $$ protected Object[] filterEntryQuery(AssetEntryQuery entryQuery, boolean returnEntriesCountOnly) throws PortalException -->Line_52 $$ entryQuery.setEnd(end)[ FD ]
Line_31 $$ AssetRendererFactory<?> assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className)-->Line_33 $$ if (assetRendererFactory.hasPermission(permissionChecker, classPK, ActionKeys.VIEW)) [ FD ]
Line_10 $$ if (returnEntriesCountOnly && !entryQuery.isEnablePermissions()) -->Line_13 $$ threadLocalCache.put(key, results)[ CD ]
