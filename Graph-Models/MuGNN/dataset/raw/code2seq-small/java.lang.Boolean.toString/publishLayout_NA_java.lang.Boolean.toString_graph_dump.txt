Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_5 $$ Layout layout = _layoutLocalService.getLayout(plid)[ FD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_14 $$ publishLayouts(userId, layout.getGroupId(), liveGroupId, layout.isPrivateLayout(), layoutIds, parameterMap)[ FD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_7 $$ layouts.add(layout)[ CD ]
Line_6 $$ List<Layout> layouts = new ArrayList()-->Line_13 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)[ FD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_3 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()[ CD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_8 $$ List<Layout> parentLayouts = ExportImportHelperUtil.getMissingParentLayouts(layout, liveGroupId)[ FD ]
Line_8 $$ List<Layout> parentLayouts = ExportImportHelperUtil.getMissingParentLayouts(layout, liveGroupId)-->Line_9 $$ layouts.addAll(parentLayouts)[ FD ]
Line_13 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)-->Line_14 $$ publishLayouts(userId, layout.getGroupId(), liveGroupId, layout.isPrivateLayout(), layoutIds, parameterMap)[ FD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_4 $$ parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS, new String[] [ CD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_10 $$ if (includeChildren) [ CD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_5 $$ Layout layout = _layoutLocalService.getLayout(plid)[ CD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_14 $$ publishLayouts(userId, layout.getGroupId(), liveGroupId, layout.isPrivateLayout(), layoutIds, parameterMap)[ CD ]
Line_6 $$ List<Layout> layouts = new ArrayList()-->Line_9 $$ layouts.addAll(parentLayouts)[ FD ]
Line_5 $$ Layout layout = _layoutLocalService.getLayout(plid)-->Line_7 $$ layouts.add(layout)[ FD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_13 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)[ CD ]
Line_10 $$ if (includeChildren) -->Line_11 $$ layouts.addAll(layout.getAllChildren())[ CD ]
Line_5 $$ Layout layout = _layoutLocalService.getLayout(plid)-->Line_8 $$ List<Layout> parentLayouts = ExportImportHelperUtil.getMissingParentLayouts(layout, liveGroupId)[ FD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_9 $$ layouts.addAll(parentLayouts)[ CD ]
Line_3 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_4 $$ parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS, new String[] [ FD ]
Line_6 $$ List<Layout> layouts = new ArrayList()-->Line_11 $$ layouts.addAll(layout.getAllChildren())[ FD ]
Line_6 $$ List<Layout> layouts = new ArrayList()-->Line_7 $$ layouts.add(layout)[ FD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_8 $$ List<Layout> parentLayouts = ExportImportHelperUtil.getMissingParentLayouts(layout, liveGroupId)[ CD ]
Line_2 $$ public void publishLayout(long userId, long plid, long liveGroupId, boolean includeChildren) throws PortalException -->Line_6 $$ List<Layout> layouts = new ArrayList()[ CD ]
Line_5 $$ Layout layout = _layoutLocalService.getLayout(plid)-->Line_14 $$ publishLayouts(userId, layout.getGroupId(), liveGroupId, layout.isPrivateLayout(), layoutIds, parameterMap)[ FD ]
Line_5 $$ Layout layout = _layoutLocalService.getLayout(plid)-->Line_11 $$ layouts.addAll(layout.getAllChildren())[ FD ]
Line_3 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_14 $$ publishLayouts(userId, layout.getGroupId(), liveGroupId, layout.isPrivateLayout(), layoutIds, parameterMap)[ FD ]
