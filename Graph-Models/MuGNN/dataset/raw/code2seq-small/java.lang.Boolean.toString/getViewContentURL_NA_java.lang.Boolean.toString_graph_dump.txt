Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_4 $$ String portletId = PortletProviderUtil.getPortletId(TrashEntry.class.getName(), PortletProvider.Action.VIEW)[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_11 $$ className = trashEntry.getClassName()[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_10 $$ TrashEntry trashEntry = trashHandler.getTrashEntry(classPK)-->Line_23 $$ if (trashEntry.getRootEntry() != null) [ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_15 $$ TrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK)[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_5 $$ if (!themeDisplay.isSignedIn() || !isTrashEnabled(themeDisplay.getScopeGroupId()) || !PortletPermissionUtil.hasControlPanelAccessPermission(themeDisplay.getPermissionChecker(), themeDisplay.getScopeGroupId(), portletId)) [ CD ]
Line_9 $$ if (trashHandler.isInTrashContainer(classPK)) -->Line_11 $$ className = trashEntry.getClassName()[ CD ]
Line_10 $$ TrashEntry trashEntry = trashHandler.getTrashEntry(classPK)-->Line_12 $$ classPK = trashEntry.getClassPK()[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_15 $$ TrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK)[ FD ]
Line_4 $$ String portletId = PortletProviderUtil.getPortletId(TrashEntry.class.getName(), PortletProvider.Action.VIEW)-->Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_9 $$ if (trashHandler.isInTrashContainer(classPK)) [ FD ]
Line_12 $$ classPK = trashEntry.getClassPK()-->Line_15 $$ TrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK)[ FD ]
Line_8 $$ TrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)-->Line_15 $$ TrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK)[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_30 $$ return portletURL[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_22 $$ TrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(className, classPK)[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_9 $$ if (trashHandler.isInTrashContainer(classPK)) [ CD ]
Line_23 $$ if (trashEntry.getRootEntry() != null) -->Line_24 $$ portletURL.setParameter("className", className)[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_24 $$ portletURL.setParameter("className", className)[ FD ]
Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)-->Line_25 $$ portletURL.setParameter("classPK", String.valueOf(classPK))[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_8 $$ TrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_23 $$ if (trashEntry.getRootEntry() != null) [ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_25 $$ portletURL.setParameter("classPK", String.valueOf(classPK))[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_16 $$ if (trashRenderer == null) [ CD ]
Line_8 $$ TrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)-->Line_9 $$ if (trashHandler.isInTrashContainer(classPK)) [ FD ]
Line_16 $$ if (trashRenderer == null) -->Line_17 $$ return null[ CD ]
Line_5 $$ if (!themeDisplay.isSignedIn() || !isTrashEnabled(themeDisplay.getScopeGroupId()) || !PortletPermissionUtil.hasControlPanelAccessPermission(themeDisplay.getPermissionChecker(), themeDisplay.getScopeGroupId(), portletId)) -->Line_6 $$ return null[ CD ]
Line_12 $$ classPK = trashEntry.getClassPK()-->Line_25 $$ portletURL.setParameter("classPK", String.valueOf(classPK))[ FD ]
Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)-->Line_27 $$ portletURL.setParameter("trashEntryId", String.valueOf(trashEntry.getEntryId()))[ FD ]
Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)-->Line_24 $$ portletURL.setParameter("className", className)[ FD ]
Line_9 $$ if (trashHandler.isInTrashContainer(classPK)) -->Line_12 $$ classPK = trashEntry.getClassPK()[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)[ FD ]
Line_10 $$ TrashEntry trashEntry = trashHandler.getTrashEntry(classPK)-->Line_11 $$ className = trashEntry.getClassName()[ FD ]
Line_11 $$ className = trashEntry.getClassName()-->Line_22 $$ TrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(className, classPK)[ FD ]
Line_10 $$ TrashEntry trashEntry = trashHandler.getTrashEntry(classPK)-->Line_27 $$ portletURL.setParameter("trashEntryId", String.valueOf(trashEntry.getEntryId()))[ FD ]
Line_23 $$ if (trashEntry.getRootEntry() != null) -->Line_25 $$ portletURL.setParameter("classPK", String.valueOf(classPK))[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_21 $$ portletURL.setParameter("redirect", themeDisplay.getURLCurrent())[ CD ]
Line_23 $$ if (trashEntry.getRootEntry() != null) -->Line_27 $$ portletURL.setParameter("trashEntryId", String.valueOf(trashEntry.getEntryId()))[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_5 $$ if (!themeDisplay.isSignedIn() || !isTrashEnabled(themeDisplay.getScopeGroupId()) || !PortletPermissionUtil.hasControlPanelAccessPermission(themeDisplay.getPermissionChecker(), themeDisplay.getScopeGroupId(), portletId)) [ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_20 $$ portletURL.setParameter("mvcPath", "/view_content.jsp")[ CD ]
Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)-->Line_20 $$ portletURL.setParameter("mvcPath", "/view_content.jsp")[ FD ]
Line_11 $$ className = trashEntry.getClassName()-->Line_13 $$ trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_13 $$ trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)[ FD ]
Line_12 $$ classPK = trashEntry.getClassPK()-->Line_22 $$ TrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(className, classPK)[ FD ]
Line_13 $$ trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)-->Line_15 $$ TrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK)[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_22 $$ TrashEntry trashEntry = TrashEntryLocalServiceUtil.getEntry(className, classPK)[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_12 $$ classPK = trashEntry.getClassPK()[ FD ]
Line_11 $$ className = trashEntry.getClassName()-->Line_24 $$ portletURL.setParameter("className", className)[ FD ]
Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)-->Line_29 $$ portletURL.setParameter("showAssetMetadata", Boolean.TRUE.toString())[ FD ]
Line_9 $$ if (trashHandler.isInTrashContainer(classPK)) -->Line_10 $$ TrashEntry trashEntry = trashHandler.getTrashEntry(classPK)[ CD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_10 $$ TrashEntry trashEntry = trashHandler.getTrashEntry(classPK)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_21 $$ portletURL.setParameter("redirect", themeDisplay.getURLCurrent())[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_29 $$ portletURL.setParameter("showAssetMetadata", Boolean.TRUE.toString())[ CD ]
Line_9 $$ if (trashHandler.isInTrashContainer(classPK)) -->Line_13 $$ trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)[ CD ]
Line_4 $$ String portletId = PortletProviderUtil.getPortletId(TrashEntry.class.getName(), PortletProvider.Action.VIEW)-->Line_5 $$ if (!themeDisplay.isSignedIn() || !isTrashEnabled(themeDisplay.getScopeGroupId()) || !PortletPermissionUtil.hasControlPanelAccessPermission(themeDisplay.getPermissionChecker(), themeDisplay.getScopeGroupId(), portletId)) [ FD ]
Line_8 $$ TrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)-->Line_10 $$ TrashEntry trashEntry = trashHandler.getTrashEntry(classPK)[ FD ]
Line_8 $$ TrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)-->Line_13 $$ trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_8 $$ TrashHandler trashHandler = TrashHandlerRegistryUtil.getTrashHandler(className)[ FD ]
Line_19 $$ PortletURL portletURL = PortalUtil.getControlPanelPortletURL(request, portletId, PortletRequest.RENDER_PHASE)-->Line_21 $$ portletURL.setParameter("redirect", themeDisplay.getURLCurrent())[ FD ]
Line_2 $$ public PortletURL getViewContentURL(HttpServletRequest request, String className, long classPK) throws PortalException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_15 $$ TrashRenderer trashRenderer = trashHandler.getTrashRenderer(classPK)-->Line_16 $$ if (trashRenderer == null) [ FD ]
