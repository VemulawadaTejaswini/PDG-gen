Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_9 $$ properties.put("com.liferay.portlet.webdav-storage-token", TestUploadPortlet.MVC_PATH)[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_4 $$ properties.put("com.liferay.portlet.private-request-attributes", Boolean.FALSE.toString())[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_6 $$ properties.put("com.liferay.portlet.scopeable", Boolean.TRUE.toString())[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_13 $$ properties.put("javax.portlet.init-param.template-path", "/")[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_14 $$ properties.put("javax.portlet.init-param.view-template", "/" + TestUploadPortlet.PORTLET_NAME + "/view.jsp")[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_17 $$ properties.put("javax.portlet.security-role-ref", "guest,power-user,user")[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_10 $$ properties.put("javax.portlet.display-name", "Test Upload Portlet")[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_5 $$ properties.put("com.liferay.portlet.private-session-attributes", Boolean.FALSE.toString())[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_7 $$ properties.put("com.liferay.portlet.struts-path", TestUploadPortlet.MVC_PATH)[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_12 $$ properties.put("javax.portlet.init-param.single-page-application-cacheable", Boolean.FALSE.toString())[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_16 $$ properties.put("javax.portlet.resource-bundle", "content.Language")[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_4 $$ properties.put("com.liferay.portlet.private-request-attributes", Boolean.FALSE.toString())[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_19 $$ setUpPortlet(portlet, properties, TestUploadPortlet.PORTLET_NAME)[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_9 $$ properties.put("com.liferay.portlet.webdav-storage-token", TestUploadPortlet.MVC_PATH)[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_5 $$ properties.put("com.liferay.portlet.private-session-attributes", Boolean.FALSE.toString())[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_11 $$ properties.put("javax.portlet.expiration-cache", "0")[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_8 $$ properties.put("com.liferay.portlet.use-default-template", Boolean.TRUE.toString())[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_11 $$ properties.put("javax.portlet.expiration-cache", "0")[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_14 $$ properties.put("javax.portlet.init-param.view-template", "/" + TestUploadPortlet.PORTLET_NAME + "/view.jsp")[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_18 $$ properties.put("javax.portlet.supports.mime-type", "text/html")[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_19 $$ setUpPortlet(portlet, properties, TestUploadPortlet.PORTLET_NAME)[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_17 $$ properties.put("javax.portlet.security-role-ref", "guest,power-user,user")[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_7 $$ properties.put("com.liferay.portlet.struts-path", TestUploadPortlet.MVC_PATH)[ CD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_6 $$ properties.put("com.liferay.portlet.scopeable", Boolean.TRUE.toString())[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_16 $$ properties.put("javax.portlet.resource-bundle", "content.Language")[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_15 $$ properties.put("javax.portlet.name", TestUploadPortlet.PORTLET_NAME)[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_10 $$ properties.put("javax.portlet.display-name", "Test Upload Portlet")[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_12 $$ properties.put("javax.portlet.init-param.single-page-application-cacheable", Boolean.FALSE.toString())[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_15 $$ properties.put("javax.portlet.name", TestUploadPortlet.PORTLET_NAME)[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_8 $$ properties.put("com.liferay.portlet.use-default-template", Boolean.TRUE.toString())[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_19 $$ setUpPortlet(portlet, properties, TestUploadPortlet.PORTLET_NAME)[ FD ]
Line_2 $$ protected void registerMVCPortlet(Portlet portlet) throws Exception -->Line_13 $$ properties.put("javax.portlet.init-param.template-path", "/")[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_18 $$ properties.put("javax.portlet.supports.mime-type", "text/html")[ FD ]
