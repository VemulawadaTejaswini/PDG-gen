Line_96 $$ if (rememberMe) -->Line_100 $$ CookieKeys.addCookie(request, response, screenNameCookie, secure)[ CD ]
Line_38 $$ Cookie passwordCookie = new Cookie(CookieKeys.PASSWORD, Encryptor.encrypt(company.getKeyObj(), password))-->Line_59 $$ passwordCookie.setMaxAge(loginMaxAge)[ FD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_52 $$ session.setAttribute(WebKeys.USER_UUID, userUUID)[ FD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_98 $$ CookieKeys.addCookie(request, response, passwordCookie, secure)[ FD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_22 $$ session.setAttribute("j_password", user.getPassword())[ FD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_94 $$ CookieKeys.addCookie(request, response, idCookie, secure)[ FD ]
Line_56 $$ if (rememberMe) -->Line_60 $$ rememberMeCookie.setMaxAge(loginMaxAge)[ CD ]
Line_53 $$ if (PropsValues.SESSION_DISABLED) -->Line_54 $$ rememberMe = true[ CD ]
Line_43 $$ Cookie rememberMeCookie = new Cookie(CookieKeys.REMEMBER_ME, Boolean.TRUE.toString())-->Line_45 $$ rememberMeCookie.setDomain(domain)[ FD ]
Line_12 $$ session = renewSession(request, session)-->Line_20 $$ session.setAttribute("j_password", password)[ FD ]
Line_81 $$ if (Validator.isNotNull(domain)) -->Line_82 $$ screenNameCookie.setDomain(domain)[ CD ]
Line_12 $$ session = renewSession(request, session)-->Line_22 $$ session.setAttribute("j_password", user.getPassword())[ FD ]
Line_75 $$ if (Validator.isNotNull(domain)) -->Line_76 $$ loginCookie.setDomain(domain)[ CD ]
Line_44 $$ if (Validator.isNotNull(domain)) -->Line_45 $$ rememberMeCookie.setDomain(domain)[ CD ]
Line_33 $$ Cookie idCookie = new Cookie(CookieKeys.ID, Encryptor.encrypt(company.getKeyObj(), userIdString))-->Line_94 $$ CookieKeys.addCookie(request, response, idCookie, secure)[ FD ]
Line_50 $$ Cookie userUUIDCookie = new Cookie(CookieKeys.USER_UUID, Encryptor.encrypt(company.getKeyObj(), userUUID))-->Line_51 $$ userUUIDCookie.setPath(StringPool.SLASH)[ FD ]
Line_49 $$ String userUUID = userIdString.concat(StringPool.PERIOD).concat(String.valueOf(System.nanoTime()))-->Line_102 $$ AuthenticatedUserUUIDStoreUtil.register(userUUID)[ FD ]
Line_80 $$ Cookie screenNameCookie = new Cookie(CookieKeys.SCREEN_NAME, Encryptor.encrypt(company.getKeyObj(), user.getScreenName()))-->Line_85 $$ screenNameCookie.setPath(StringPool.SLASH)[ FD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_90 $$ secure = false[ FD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_24 $$ session.setAttribute("j_remoteuser", userIdString)[ FD ]
Line_6 $$ Company company = PortalUtil.getCompany(request)-->Line_28 $$ Cookie companyIdCookie = new Cookie(CookieKeys.COMPANY_ID, String.valueOf(company.getCompanyId()))[ FD ]
Line_12 $$ session = renewSession(request, session)-->Line_24 $$ session.setAttribute("j_remoteuser", userIdString)[ FD ]
Line_48 $$ int loginMaxAge = PropsValues.COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE-->Line_57 $$ companyIdCookie.setMaxAge(loginMaxAge)[ FD ]
Line_17 $$ String userIdString = String.valueOf(userId)-->Line_24 $$ session.setAttribute("j_remoteuser", userIdString)[ FD ]
Line_74 $$ Cookie loginCookie = new Cookie(CookieKeys.LOGIN, login)-->Line_79 $$ loginCookie.setPath(StringPool.SLASH)[ FD ]
Line_34 $$ if (Validator.isNotNull(domain)) -->Line_35 $$ idCookie.setDomain(domain)[ CD ]
Line_48 $$ int loginMaxAge = PropsValues.COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE-->Line_59 $$ passwordCookie.setMaxAge(loginMaxAge)[ FD ]
Line_7 $$ long userId = getAuthenticatedUserId(request, login, password, authType)-->Line_16 $$ User user = UserLocalServiceUtil.getUserById(userId)[ FD ]
Line_90 $$ secure = false-->Line_100 $$ CookieKeys.addCookie(request, response, screenNameCookie, secure)[ FD ]
Line_56 $$ if (rememberMe) -->Line_59 $$ passwordCookie.setMaxAge(loginMaxAge)[ CD ]
Line_12 $$ session = renewSession(request, session)-->Line_26 $$ session.setAttribute(WebKeys.USER_PASSWORD, password)[ FD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_26 $$ session.setAttribute(WebKeys.USER_PASSWORD, password)[ FD ]
Line_11 $$ if (PropsValues.SESSION_ENABLE_PHISHING_PROTECTION) -->Line_12 $$ session = renewSession(request, session)[ CD ]
Line_12 $$ session = renewSession(request, session)-->Line_88 $$ Boolean httpsInitial = (Boolean) session.getAttribute(WebKeys.HTTPS_INITIAL)[ FD ]
Line_89 $$ if ((httpsInitial == null) || !httpsInitial.booleanValue()) -->Line_90 $$ secure = false[ CD ]
Line_19 $$ if (PropsValues.PORTAL_JAAS_PLAIN_PASSWORD) -->Line_20 $$ session.setAttribute("j_password", password)[ CD ]
Line_28 $$ Cookie companyIdCookie = new Cookie(CookieKeys.COMPANY_ID, String.valueOf(company.getCompanyId()))-->Line_93 $$ CookieKeys.addCookie(request, response, companyIdCookie, secure)[ FD ]
Line_38 $$ Cookie passwordCookie = new Cookie(CookieKeys.PASSWORD, Encryptor.encrypt(company.getKeyObj(), password))-->Line_98 $$ CookieKeys.addCookie(request, response, passwordCookie, secure)[ FD ]
Line_38 $$ Cookie passwordCookie = new Cookie(CookieKeys.PASSWORD, Encryptor.encrypt(company.getKeyObj(), password))-->Line_40 $$ passwordCookie.setDomain(domain)[ FD ]
Line_50 $$ Cookie userUUIDCookie = new Cookie(CookieKeys.USER_UUID, Encryptor.encrypt(company.getKeyObj(), userUUID))-->Line_95 $$ CookieKeys.addCookie(request, response, userUUIDCookie, secure)[ FD ]
Line_48 $$ int loginMaxAge = PropsValues.COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE-->Line_61 $$ userUUIDCookie.setMaxAge(loginMaxAge)[ FD ]
Line_28 $$ Cookie companyIdCookie = new Cookie(CookieKeys.COMPANY_ID, String.valueOf(company.getCompanyId()))-->Line_57 $$ companyIdCookie.setMaxAge(loginMaxAge)[ FD ]
Line_16 $$ User user = UserLocalServiceUtil.getUserById(userId)-->Line_22 $$ session.setAttribute("j_password", user.getPassword())[ FD ]
Line_17 $$ String userIdString = String.valueOf(userId)-->Line_33 $$ Cookie idCookie = new Cookie(CookieKeys.ID, Encryptor.encrypt(company.getKeyObj(), userIdString))[ FD ]
Line_90 $$ secure = false-->Line_99 $$ CookieKeys.addCookie(request, response, rememberMeCookie, secure)[ FD ]
Line_48 $$ int loginMaxAge = PropsValues.COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE-->Line_78 $$ loginCookie.setMaxAge(loginMaxAge)[ FD ]
Line_29 $$ if (Validator.isNotNull(domain)) -->Line_30 $$ companyIdCookie.setDomain(domain)[ CD ]
Line_38 $$ Cookie passwordCookie = new Cookie(CookieKeys.PASSWORD, Encryptor.encrypt(company.getKeyObj(), password))-->Line_42 $$ passwordCookie.setPath(StringPool.SLASH)[ FD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_100 $$ CookieKeys.addCookie(request, response, screenNameCookie, secure)[ FD ]
Line_8 $$ if (!PropsValues.AUTH_SIMULTANEOUS_LOGINS) -->Line_9 $$ signOutSimultaneousLogins(userId)[ CD ]
Line_90 $$ secure = false-->Line_93 $$ CookieKeys.addCookie(request, response, companyIdCookie, secure)[ FD ]
Line_33 $$ Cookie idCookie = new Cookie(CookieKeys.ID, Encryptor.encrypt(company.getKeyObj(), userIdString))-->Line_37 $$ idCookie.setPath(StringPool.SLASH)[ FD ]
Line_6 $$ Company company = PortalUtil.getCompany(request)-->Line_38 $$ Cookie passwordCookie = new Cookie(CookieKeys.PASSWORD, Encryptor.encrypt(company.getKeyObj(), password))[ FD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_18 $$ session.setAttribute("j_username", userIdString)[ FD ]
Line_48 $$ int loginMaxAge = PropsValues.COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE-->Line_60 $$ rememberMeCookie.setMaxAge(loginMaxAge)[ FD ]
Line_12 $$ session = renewSession(request, session)-->Line_18 $$ session.setAttribute("j_username", userIdString)[ FD ]
Line_43 $$ Cookie rememberMeCookie = new Cookie(CookieKeys.REMEMBER_ME, Boolean.TRUE.toString())-->Line_60 $$ rememberMeCookie.setMaxAge(loginMaxAge)[ FD ]
Line_48 $$ int loginMaxAge = PropsValues.COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE-->Line_58 $$ idCookie.setMaxAge(loginMaxAge)[ FD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_97 $$ CookieKeys.addCookie(request, response, loginCookie, secure)[ FD ]
Line_49 $$ String userUUID = userIdString.concat(StringPool.PERIOD).concat(String.valueOf(System.nanoTime()))-->Line_50 $$ Cookie userUUIDCookie = new Cookie(CookieKeys.USER_UUID, Encryptor.encrypt(company.getKeyObj(), userUUID))[ FD ]
Line_80 $$ Cookie screenNameCookie = new Cookie(CookieKeys.SCREEN_NAME, Encryptor.encrypt(company.getKeyObj(), user.getScreenName()))-->Line_82 $$ screenNameCookie.setDomain(domain)[ FD ]
Line_19 $$ if (PropsValues.PORTAL_JAAS_PLAIN_PASSWORD) -->Line_22 $$ session.setAttribute("j_password", user.getPassword())[ CD ]
Line_56 $$ if (rememberMe) -->Line_69 $$ idCookie.setMaxAge(-1)[ CD ]
Line_33 $$ Cookie idCookie = new Cookie(CookieKeys.ID, Encryptor.encrypt(company.getKeyObj(), userIdString))-->Line_35 $$ idCookie.setDomain(domain)[ FD ]
Line_48 $$ int loginMaxAge = PropsValues.COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE-->Line_84 $$ screenNameCookie.setMaxAge(loginMaxAge)[ FD ]
Line_56 $$ if (rememberMe) -->Line_61 $$ userUUIDCookie.setMaxAge(loginMaxAge)[ CD ]
Line_50 $$ Cookie userUUIDCookie = new Cookie(CookieKeys.USER_UUID, Encryptor.encrypt(company.getKeyObj(), userUUID))-->Line_72 $$ userUUIDCookie.setMaxAge(-1)[ FD ]
Line_6 $$ Company company = PortalUtil.getCompany(request)-->Line_33 $$ Cookie idCookie = new Cookie(CookieKeys.ID, Encryptor.encrypt(company.getKeyObj(), userIdString))[ FD ]
Line_43 $$ Cookie rememberMeCookie = new Cookie(CookieKeys.REMEMBER_ME, Boolean.TRUE.toString())-->Line_99 $$ CookieKeys.addCookie(request, response, rememberMeCookie, secure)[ FD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_99 $$ CookieKeys.addCookie(request, response, rememberMeCookie, secure)[ FD ]
Line_74 $$ Cookie loginCookie = new Cookie(CookieKeys.LOGIN, login)-->Line_97 $$ CookieKeys.addCookie(request, response, loginCookie, secure)[ FD ]
Line_6 $$ Company company = PortalUtil.getCompany(request)-->Line_50 $$ Cookie userUUIDCookie = new Cookie(CookieKeys.USER_UUID, Encryptor.encrypt(company.getKeyObj(), userUUID))[ FD ]
Line_33 $$ Cookie idCookie = new Cookie(CookieKeys.ID, Encryptor.encrypt(company.getKeyObj(), userIdString))-->Line_69 $$ idCookie.setMaxAge(-1)[ FD ]
Line_25 $$ if (PropsValues.SESSION_STORE_PASSWORD) -->Line_26 $$ session.setAttribute(WebKeys.USER_PASSWORD, password)[ CD ]
Line_43 $$ Cookie rememberMeCookie = new Cookie(CookieKeys.REMEMBER_ME, Boolean.TRUE.toString())-->Line_71 $$ rememberMeCookie.setMaxAge(0)[ FD ]
Line_74 $$ Cookie loginCookie = new Cookie(CookieKeys.LOGIN, login)-->Line_76 $$ loginCookie.setDomain(domain)[ FD ]
Line_49 $$ String userUUID = userIdString.concat(StringPool.PERIOD).concat(String.valueOf(System.nanoTime()))-->Line_52 $$ session.setAttribute(WebKeys.USER_UUID, userUUID)[ FD ]
Line_87 $$ if (secure && !PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS && !StringUtil.equalsIgnoreCase(Http.HTTPS, PropsValues.WEB_SERVER_PROTOCOL)) -->Line_89 $$ if ((httpsInitial == null) || !httpsInitial.booleanValue()) [ CD ]
Line_90 $$ secure = false-->Line_95 $$ CookieKeys.addCookie(request, response, userUUIDCookie, secure)[ FD ]
Line_90 $$ secure = false-->Line_94 $$ CookieKeys.addCookie(request, response, idCookie, secure)[ FD ]
Line_96 $$ if (rememberMe) -->Line_98 $$ CookieKeys.addCookie(request, response, passwordCookie, secure)[ CD ]
Line_43 $$ Cookie rememberMeCookie = new Cookie(CookieKeys.REMEMBER_ME, Boolean.TRUE.toString())-->Line_47 $$ rememberMeCookie.setPath(StringPool.SLASH)[ FD ]
Line_56 $$ if (rememberMe) -->Line_72 $$ userUUIDCookie.setMaxAge(-1)[ CD ]
Line_6 $$ Company company = PortalUtil.getCompany(request)-->Line_80 $$ Cookie screenNameCookie = new Cookie(CookieKeys.SCREEN_NAME, Encryptor.encrypt(company.getKeyObj(), user.getScreenName()))[ FD ]
Line_16 $$ User user = UserLocalServiceUtil.getUserById(userId)-->Line_80 $$ Cookie screenNameCookie = new Cookie(CookieKeys.SCREEN_NAME, Encryptor.encrypt(company.getKeyObj(), user.getScreenName()))[ FD ]
Line_56 $$ if (rememberMe) -->Line_58 $$ idCookie.setMaxAge(loginMaxAge)[ CD ]
Line_28 $$ Cookie companyIdCookie = new Cookie(CookieKeys.COMPANY_ID, String.valueOf(company.getCompanyId()))-->Line_32 $$ companyIdCookie.setPath(StringPool.SLASH)[ FD ]
Line_56 $$ if (rememberMe) -->Line_57 $$ companyIdCookie.setMaxAge(loginMaxAge)[ CD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_95 $$ CookieKeys.addCookie(request, response, userUUIDCookie, secure)[ FD ]
Line_28 $$ Cookie companyIdCookie = new Cookie(CookieKeys.COMPANY_ID, String.valueOf(company.getCompanyId()))-->Line_30 $$ companyIdCookie.setDomain(domain)[ FD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_20 $$ session.setAttribute("j_password", password)[ FD ]
Line_80 $$ Cookie screenNameCookie = new Cookie(CookieKeys.SCREEN_NAME, Encryptor.encrypt(company.getKeyObj(), user.getScreenName()))-->Line_84 $$ screenNameCookie.setMaxAge(loginMaxAge)[ FD ]
Line_17 $$ String userIdString = String.valueOf(userId)-->Line_18 $$ session.setAttribute("j_username", userIdString)[ FD ]
Line_56 $$ if (rememberMe) -->Line_71 $$ rememberMeCookie.setMaxAge(0)[ CD ]
Line_56 $$ if (rememberMe) -->Line_70 $$ passwordCookie.setMaxAge(-1)[ CD ]
Line_74 $$ Cookie loginCookie = new Cookie(CookieKeys.LOGIN, login)-->Line_78 $$ loginCookie.setMaxAge(loginMaxAge)[ FD ]
Line_87 $$ if (secure && !PropsValues.COMPANY_SECURITY_AUTH_REQUIRES_HTTPS && !StringUtil.equalsIgnoreCase(Http.HTTPS, PropsValues.WEB_SERVER_PROTOCOL)) -->Line_88 $$ Boolean httpsInitial = (Boolean) session.getAttribute(WebKeys.HTTPS_INITIAL)[ CD ]
Line_38 $$ Cookie passwordCookie = new Cookie(CookieKeys.PASSWORD, Encryptor.encrypt(company.getKeyObj(), password))-->Line_70 $$ passwordCookie.setMaxAge(-1)[ FD ]
Line_90 $$ secure = false-->Line_97 $$ CookieKeys.addCookie(request, response, loginCookie, secure)[ FD ]
Line_90 $$ secure = false-->Line_98 $$ CookieKeys.addCookie(request, response, passwordCookie, secure)[ FD ]
Line_7 $$ long userId = getAuthenticatedUserId(request, login, password, authType)-->Line_17 $$ String userIdString = String.valueOf(userId)[ FD ]
Line_33 $$ Cookie idCookie = new Cookie(CookieKeys.ID, Encryptor.encrypt(company.getKeyObj(), userIdString))-->Line_58 $$ idCookie.setMaxAge(loginMaxAge)[ FD ]
Line_17 $$ String userIdString = String.valueOf(userId)-->Line_49 $$ String userUUID = userIdString.concat(StringPool.PERIOD).concat(String.valueOf(System.nanoTime()))[ FD ]
Line_96 $$ if (rememberMe) -->Line_99 $$ CookieKeys.addCookie(request, response, rememberMeCookie, secure)[ CD ]
Line_96 $$ if (rememberMe) -->Line_97 $$ CookieKeys.addCookie(request, response, loginCookie, secure)[ CD ]
Line_7 $$ long userId = getAuthenticatedUserId(request, login, password, authType)-->Line_9 $$ signOutSimultaneousLogins(userId)[ FD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_12 $$ session = renewSession(request, session)[ FD ]
Line_80 $$ Cookie screenNameCookie = new Cookie(CookieKeys.SCREEN_NAME, Encryptor.encrypt(company.getKeyObj(), user.getScreenName()))-->Line_100 $$ CookieKeys.addCookie(request, response, screenNameCookie, secure)[ FD ]
Line_12 $$ session = renewSession(request, session)-->Line_52 $$ session.setAttribute(WebKeys.USER_UUID, userUUID)[ FD ]
Line_39 $$ if (Validator.isNotNull(domain)) -->Line_40 $$ passwordCookie.setDomain(domain)[ CD ]
Line_5 $$ HttpSession session = request.getSession()-->Line_88 $$ Boolean httpsInitial = (Boolean) session.getAttribute(WebKeys.HTTPS_INITIAL)[ FD ]
Line_50 $$ Cookie userUUIDCookie = new Cookie(CookieKeys.USER_UUID, Encryptor.encrypt(company.getKeyObj(), userUUID))-->Line_61 $$ userUUIDCookie.setMaxAge(loginMaxAge)[ FD ]
Line_88 $$ Boolean httpsInitial = (Boolean) session.getAttribute(WebKeys.HTTPS_INITIAL)-->Line_89 $$ if ((httpsInitial == null) || !httpsInitial.booleanValue()) [ FD ]
Line_86 $$ boolean secure = request.isSecure()-->Line_93 $$ CookieKeys.addCookie(request, response, companyIdCookie, secure)[ FD ]
