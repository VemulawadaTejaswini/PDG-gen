Line_2 $$ public void testInitParam() throws Exception -->Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()[ CD ]
Line_2 $$ public void testInitParam() throws Exception -->Line_4 $$ properties.put("javax.portlet.init-param.check-auth-token", Boolean.FALSE.toString())[ CD ]
Line_8 $$ Response response = PortletContainerTestUtil.request(portletURL.toString())-->Line_9 $$ Assert.assertEquals(200, response.getCode())[ FD ]
Line_7 $$ PortletURL portletURL = new PortletURLImpl(httpServletRequest, TEST_PORTLET_ID, layout.getPlid(), PortletRequest.ACTION_PHASE)-->Line_8 $$ Response response = PortletContainerTestUtil.request(portletURL.toString())[ FD ]
Line_2 $$ public void testInitParam() throws Exception -->Line_6 $$ HttpServletRequest httpServletRequest = PortletContainerTestUtil.getHttpServletRequest(group, layout)[ CD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_4 $$ properties.put("javax.portlet.init-param.check-auth-token", Boolean.FALSE.toString())[ FD ]
Line_3 $$ Dictionary<String, Object> properties = new HashMapDictionary()-->Line_5 $$ setUpPortlet(testPortlet, properties, TEST_PORTLET_ID)[ FD ]
Line_2 $$ public void testInitParam() throws Exception -->Line_5 $$ setUpPortlet(testPortlet, properties, TEST_PORTLET_ID)[ CD ]
Line_2 $$ public void testInitParam() throws Exception -->Line_7 $$ PortletURL portletURL = new PortletURLImpl(httpServletRequest, TEST_PORTLET_ID, layout.getPlid(), PortletRequest.ACTION_PHASE)[ CD ]
Line_2 $$ public void testInitParam() throws Exception -->Line_8 $$ Response response = PortletContainerTestUtil.request(portletURL.toString())[ CD ]
Line_2 $$ public void testInitParam() throws Exception -->Line_9 $$ Assert.assertEquals(200, response.getCode())[ CD ]
Line_2 $$ public void testInitParam() throws Exception -->Line_10 $$ Assert.assertTrue(testPortlet.isCalledAction())[ CD ]
