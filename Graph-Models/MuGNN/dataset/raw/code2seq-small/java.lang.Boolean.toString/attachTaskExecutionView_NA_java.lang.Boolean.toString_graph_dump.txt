Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()-->Line_35 $$ duplexConsoleViewRef.set(duplexConsoleView)[ FD ]
Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) -->Line_5 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.TRUE.toString())[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) [ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_37 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setIcon(AllIcons.Actions.ChangeView)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_26 $$ final AnAction[] consoleActions = consoleView.createConsoleActions()[ FD ]
Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_22 $$ e.getPresentation().setVisible(!duplexConsoleViewRef.get().isPrimaryConsoleEnabled())[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_38 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setText(GradleBundle.message("gradle.runner.toggle.tree.text.action.name"))[ CD ]
Line_43 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_45 $$ if (((ExternalSystemTaskExecutionEvent) event).getProgressEvent() instanceof ExternalSystemProgressEventUnsupported) [ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_36 $$ duplexConsoleView.setDisableSwitchConsoleActionOnProcessEnd(false)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_30 $$ final List<AnAction> anActions = ContainerUtil.newArrayList(super.createConsoleActions())[ CD ]
Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_20 $$ super.update(e)[ CD ]
Line_43 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_48 $$ gradleExecutionConsole.onStatusChange((ExternalSystemTaskExecutionEvent) event)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_12 $$ super.enableConsole(primary)[ CD ]
Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()-->Line_22 $$ e.getPresentation().setVisible(!duplexConsoleViewRef.get().isPrimaryConsoleEnabled())[ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() [ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_12 $$ super.enableConsole(primary)[ FD ]
Line_13 $$ if (stateStorageKey != null) -->Line_14 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.toString(primary))[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_71 $$ progressManager.addNotificationListener(taskId, taskListener)[ CD ]
Line_40 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_68 $$ progressManager.removeNotificationListener(this)[ CD ]
Line_45 $$ if (((ExternalSystemTaskExecutionEvent) event).getProgressEvent() instanceof ExternalSystemProgressEventUnsupported) -->Line_46 $$ duplexConsoleView.enableConsole(false)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_32 $$ return ArrayUtil.toObjectArray(anActions, AnAction.class)[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)[ CD ]
Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)-->Line_63 $$ gradleExecutionConsole.onFailure(e)[ FD ]
Line_40 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_56 $$ gradleExecutionConsole.setWorkingDir(workingDir)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_6 $$ PropertiesComponent.getInstance().setValue(stateStorageKey, Boolean.TRUE)[ FD ]
Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)-->Line_56 $$ gradleExecutionConsole.setWorkingDir(workingDir)[ FD ]
Line_54 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_56 $$ gradleExecutionConsole.setWorkingDir(workingDir)[ CD ]
Line_61 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_63 $$ gradleExecutionConsole.onFailure(e)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_26 $$ final AnAction[] consoleActions = consoleView.createConsoleActions()[ CD ]
Line_40 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_42 $$ if (event instanceof ExternalSystemTaskExecutionEvent) [ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_14 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.toString(primary))[ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_46 $$ duplexConsoleView.enableConsole(false)[ FD ]
Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_21 $$ if (duplexConsoleViewRef.get() != null) [ CD ]
Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_20 $$ super.update(e)[ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_31 $$ anActions.add(textActionGroup)[ CD ]
Line_42 $$ if (event instanceof ExternalSystemTaskExecutionEvent) -->Line_43 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null-->Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) [ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_36 $$ duplexConsoleView.setDisableSwitchConsoleActionOnProcessEnd(false)[ FD ]
Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) -->Line_6 $$ PropertiesComponent.getInstance().setValue(stateStorageKey, Boolean.TRUE)[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_35 $$ duplexConsoleViewRef.set(duplexConsoleView)[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_72 $$ return duplexConsoleView[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_35 $$ duplexConsoleViewRef.set(duplexConsoleView)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_37 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setIcon(AllIcons.Actions.ChangeView)[ CD ]
Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)-->Line_48 $$ gradleExecutionConsole.onStatusChange((ExternalSystemTaskExecutionEvent) event)[ FD ]
Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null-->Line_5 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.TRUE.toString())[ FD ]
Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_28 $$ textActionGroup.add(anAction)[ FD ]
Line_40 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_42 $$ if (event instanceof ExternalSystemTaskExecutionEvent) [ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_71 $$ progressManager.addNotificationListener(taskId, taskListener)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_39 $$ final ExternalSystemProgressNotificationManager progressManager = ServiceManager.getService(ExternalSystemProgressNotificationManager.class)[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_13 $$ if (stateStorageKey != null) [ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_38 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setText(GradleBundle.message("gradle.runner.toggle.tree.text.action.name"))[ FD ]
Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_31 $$ anActions.add(textActionGroup)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_13 $$ if (stateStorageKey != null) [ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) [ CD ]
Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()-->Line_21 $$ if (duplexConsoleViewRef.get() != null) [ FD ]
Line_18 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_63 $$ gradleExecutionConsole.onFailure(e)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()[ CD ]
Line_21 $$ if (duplexConsoleViewRef.get() != null) -->Line_22 $$ e.getPresentation().setVisible(!duplexConsoleViewRef.get().isPrimaryConsoleEnabled())[ CD ]
Line_40 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_63 $$ gradleExecutionConsole.onFailure(e)[ FD ]
Line_40 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_54 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_40 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_61 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null-->Line_14 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.toString(primary))[ FD ]
