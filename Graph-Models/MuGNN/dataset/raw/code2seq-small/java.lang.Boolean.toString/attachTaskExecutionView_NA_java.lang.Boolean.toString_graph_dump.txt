Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_43 $$ duplexConsoleView.setDisableSwitchConsoleActionOnProcessEnd(false)[ FD ]
Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null-->Line_16 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.toString(primary))[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_33 $$ final AnAction[] consoleActions = consoleView.createConsoleActions()[ FD ]
Line_47 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_67 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_43 $$ duplexConsoleView.setDisableSwitchConsoleActionOnProcessEnd(false)[ CD ]
Line_47 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_51 $$ if (event instanceof ExternalSystemTaskExecutionEvent) [ CD ]
Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)-->Line_71 $$ gradleExecutionConsole.setWorkingDir(workingDir)[ FD ]
Line_28 $$ if (duplexConsoleViewRef.get() != null) -->Line_29 $$ e.getPresentation().setVisible(!duplexConsoleViewRef.get().isPrimaryConsoleEnabled())[ CD ]
Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_38 $$ anActions.add(textActionGroup)[ FD ]
Line_15 $$ if (stateStorageKey != null) -->Line_16 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.toString(primary))[ CD ]
Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_29 $$ e.getPresentation().setVisible(!duplexConsoleViewRef.get().isPrimaryConsoleEnabled())[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_15 $$ if (stateStorageKey != null) [ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()[ CD ]
Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_35 $$ textActionGroup.add(anAction)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_92 $$ progressManager.addNotificationListener(taskId, taskListener)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_38 $$ anActions.add(textActionGroup)[ CD ]
Line_67 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_71 $$ gradleExecutionConsole.setWorkingDir(workingDir)[ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_92 $$ progressManager.addNotificationListener(taskId, taskListener)[ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_33 $$ final AnAction[] consoleActions = consoleView.createConsoleActions()[ CD ]
Line_47 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_78 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_78 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_82 $$ gradleExecutionConsole.onFailure(e)[ CD ]
Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_27 $$ super.update(e)[ CD ]
Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_82 $$ gradleExecutionConsole.onFailure(e)[ FD ]
Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_27 $$ super.update(e)[ FD ]
Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() -->Line_28 $$ if (duplexConsoleViewRef.get() != null) [ CD ]
Line_47 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_71 $$ gradleExecutionConsole.setWorkingDir(workingDir)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_44 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setIcon(AllIcons.Actions.ChangeView)[ CD ]
Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null-->Line_5 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.TRUE.toString())[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) [ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_14 $$ super.enableConsole(primary)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_45 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setText(GradleBundle.message("gradle.runner.toggle.tree.text.action.name"))[ FD ]
Line_47 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_89 $$ progressManager.removeNotificationListener(this)[ CD ]
Line_47 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_82 $$ gradleExecutionConsole.onFailure(e)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_42 $$ duplexConsoleViewRef.set(duplexConsoleView)[ CD ]
Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) -->Line_6 $$ PropertiesComponent.getInstance().setValue(stateStorageKey, Boolean.TRUE)[ CD ]
Line_52 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_59 $$ gradleExecutionConsole.onStatusChange((ExternalSystemTaskExecutionEvent) event)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_42 $$ duplexConsoleViewRef.set(duplexConsoleView)[ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_15 $$ if (stateStorageKey != null) [ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) [ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_14 $$ super.enableConsole(primary)[ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_39 $$ return ArrayUtil.toObjectArray(anActions, AnAction.class)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_57 $$ duplexConsoleView.enableConsole(false)[ FD ]
Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()-->Line_42 $$ duplexConsoleViewRef.set(duplexConsoleView)[ FD ]
Line_3 $$ final String tripleStateStorageKey = stateStorageKey != null ? stateStorageKey + "_str" : null-->Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) [ FD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_37 $$ final List<AnAction> anActions = ContainerUtil.newArrayList(super.createConsoleActions())[ CD ]
Line_52 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_56 $$ if (((ExternalSystemTaskExecutionEvent) event).getProgressEvent() instanceof ExternalSystemProgressEventUnsupported) [ CD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_6 $$ PropertiesComponent.getInstance().setValue(stateStorageKey, Boolean.TRUE)[ FD ]
Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)-->Line_59 $$ gradleExecutionConsole.onStatusChange((ExternalSystemTaskExecutionEvent) event)[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_93 $$ return duplexConsoleView[ CD ]
Line_56 $$ if (((ExternalSystemTaskExecutionEvent) event).getProgressEvent() instanceof ExternalSystemProgressEventUnsupported) -->Line_57 $$ duplexConsoleView.enableConsole(false)[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_23 $$ final DefaultActionGroup textActionGroup = new DefaultActionGroup() [ CD ]
Line_51 $$ if (event instanceof ExternalSystemTaskExecutionEvent) -->Line_52 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_16 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.toString(primary))[ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_46 $$ final ExternalSystemProgressNotificationManager progressManager = ServiceManager.getService(ExternalSystemProgressNotificationManager.class)[ CD ]
Line_47 $$ final ExternalSystemTaskNotificationListenerAdapter taskListener = new ExternalSystemTaskNotificationListenerAdapter() -->Line_51 $$ if (event instanceof ExternalSystemTaskExecutionEvent) [ FD ]
Line_8 $$ final TaskExecutionView gradleExecutionConsole = new TaskExecutionView(project)-->Line_82 $$ gradleExecutionConsole.onFailure(e)[ FD ]
Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()-->Line_28 $$ if (duplexConsoleViewRef.get() != null) [ FD ]
Line_2 $$ public static DuplexConsoleView attachTaskExecutionView(@NotNull final Project project, @NotNull final ConsoleView consoleView, final boolean isTaskConsoleEnabledByDefault, @Nullable final String stateStorageKey, @NotNull final ProcessHandler processHandler, @NotNull final ExternalSystemTaskId taskId) -->Line_45 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setText(GradleBundle.message("gradle.runner.toggle.tree.text.action.name"))[ CD ]
Line_10 $$ final DuplexConsoleView duplexConsoleView = new DuplexConsoleView<ConsoleView, ConsoleView>(gradleExecutionConsole, consoleView, stateStorageKey) -->Line_44 $$ duplexConsoleView.getSwitchConsoleActionPresentation().setIcon(AllIcons.Actions.ChangeView)[ FD ]
Line_9 $$ final Ref<DuplexConsoleView> duplexConsoleViewRef = Ref.create()-->Line_29 $$ e.getPresentation().setVisible(!duplexConsoleViewRef.get().isPrimaryConsoleEnabled())[ FD ]
Line_4 $$ if (stateStorageKey != null && isTaskConsoleEnabledByDefault && !PropertiesComponent.getInstance().isValueSet(tripleStateStorageKey)) -->Line_5 $$ PropertiesComponent.getInstance().setValue(tripleStateStorageKey, Boolean.TRUE.toString())[ CD ]
