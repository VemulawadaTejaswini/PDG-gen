Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_3 $$ parameterMap.put(PortletDataHandlerKeys.PERFORM_DIRECT_BINARY_IMPORT, new String[] [ CD ]
Line_6 $$ ExportImportConfiguration exportImportConfiguration = null-->Line_12 $$ publishLayouts(userId, exportImportConfiguration)[ FD ]
Line_8 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, name, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)-->Line_10 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ FD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_7 $$ if (Validator.isNotNull(name)) [ CD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_5 $$ Map<String, Serializable> publishLayoutLocalSettingsMap = ExportImportConfigurationSettingsMapFactory.buildPublishLayoutLocalSettingsMap(user, sourceGroupId, targetGroupId, privateLayout, layoutIds, parameterMap)[ CD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_4 $$ User user = _userLocalService.getUser(userId)[ FD ]
Line_8 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, name, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)-->Line_12 $$ publishLayouts(userId, exportImportConfiguration)[ FD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_5 $$ Map<String, Serializable> publishLayoutLocalSettingsMap = ExportImportConfigurationSettingsMapFactory.buildPublishLayoutLocalSettingsMap(user, sourceGroupId, targetGroupId, privateLayout, layoutIds, parameterMap)[ FD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_4 $$ User user = _userLocalService.getUser(userId)[ CD ]
Line_5 $$ Map<String, Serializable> publishLayoutLocalSettingsMap = ExportImportConfigurationSettingsMapFactory.buildPublishLayoutLocalSettingsMap(user, sourceGroupId, targetGroupId, privateLayout, layoutIds, parameterMap)-->Line_8 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, name, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ FD ]
Line_6 $$ ExportImportConfiguration exportImportConfiguration = null-->Line_8 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, name, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ FD ]
Line_10 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)-->Line_12 $$ publishLayouts(userId, exportImportConfiguration)[ FD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_8 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, name, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ FD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_3 $$ parameterMap.put(PortletDataHandlerKeys.PERFORM_DIRECT_BINARY_IMPORT, new String[] [ FD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_6 $$ ExportImportConfiguration exportImportConfiguration = null[ CD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_12 $$ publishLayouts(userId, exportImportConfiguration)[ CD ]
Line_5 $$ Map<String, Serializable> publishLayoutLocalSettingsMap = ExportImportConfigurationSettingsMapFactory.buildPublishLayoutLocalSettingsMap(user, sourceGroupId, targetGroupId, privateLayout, layoutIds, parameterMap)-->Line_10 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ FD ]
Line_7 $$ if (Validator.isNotNull(name)) -->Line_10 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ CD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_12 $$ publishLayouts(userId, exportImportConfiguration)[ FD ]
Line_4 $$ User user = _userLocalService.getUser(userId)-->Line_5 $$ Map<String, Serializable> publishLayoutLocalSettingsMap = ExportImportConfigurationSettingsMapFactory.buildPublishLayoutLocalSettingsMap(user, sourceGroupId, targetGroupId, privateLayout, layoutIds, parameterMap)[ FD ]
Line_7 $$ if (Validator.isNotNull(name)) -->Line_8 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, name, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ CD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_10 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ FD ]
Line_2 $$ public void publishLayouts(long userId, long sourceGroupId, long targetGroupId, boolean privateLayout, long[] layoutIds, String name, Map<String, String[]> parameterMap) throws PortalException -->Line_7 $$ if (Validator.isNotNull(name)) [ FD ]
Line_6 $$ ExportImportConfiguration exportImportConfiguration = null-->Line_10 $$ exportImportConfiguration = _exportImportConfigurationLocalService.addDraftExportImportConfiguration(userId, ExportImportConfigurationConstants.TYPE_PUBLISH_LAYOUT_LOCAL, publishLayoutLocalSettingsMap)[ FD ]
