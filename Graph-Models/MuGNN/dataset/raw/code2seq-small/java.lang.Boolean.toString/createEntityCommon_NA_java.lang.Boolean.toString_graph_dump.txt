Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_3 $$ final Element hibernateMapping = document.addElement("hibernate-mapping")[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_4 $$ hibernateMapping.addAttribute("auto-import", "false")[ CD ]
Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)-->Line_16 $$ classMapping.addAttribute("schema", auditTableData.getSchema())[ FD ]
Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)-->Line_22 $$ classMapping.addAttribute("abstract", isAbstract.toString())[ FD ]
Line_6 $$ if (auditTableData.getAuditEntityName() != null) -->Line_7 $$ classMapping.addAttribute("entity-name", auditTableData.getAuditEntityName())[ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_10 $$ classMapping.addAttribute("discriminator-value", discriminatorValue)[ FD ]
Line_9 $$ if (discriminatorValue != null) -->Line_10 $$ classMapping.addAttribute("discriminator-value", discriminatorValue)[ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_16 $$ classMapping.addAttribute("schema", auditTableData.getSchema())[ FD ]
Line_3 $$ final Element hibernateMapping = document.addElement("hibernate-mapping")-->Line_4 $$ hibernateMapping.addAttribute("auto-import", "false")[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_6 $$ if (auditTableData.getAuditEntityName() != null) [ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)[ CD ]
Line_3 $$ final Element hibernateMapping = document.addElement("hibernate-mapping")-->Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_15 $$ if (!StringTools.isEmpty(auditTableData.getSchema())) [ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_13 $$ classMapping.addAttribute("table", auditTableData.getAuditTableName())[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_12 $$ if (!StringTools.isEmpty(auditTableData.getAuditTableName())) [ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_18 $$ if (!StringTools.isEmpty(auditTableData.getCatalog())) [ CD ]
Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)-->Line_10 $$ classMapping.addAttribute("discriminator-value", discriminatorValue)[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_7 $$ classMapping.addAttribute("entity-name", auditTableData.getAuditEntityName())[ FD ]
Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)-->Line_19 $$ classMapping.addAttribute("catalog", auditTableData.getCatalog())[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_12 $$ if (!StringTools.isEmpty(auditTableData.getAuditTableName())) [ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_21 $$ if (isAbstract != null) [ FD ]
Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)-->Line_13 $$ classMapping.addAttribute("table", auditTableData.getAuditTableName())[ FD ]
Line_15 $$ if (!StringTools.isEmpty(auditTableData.getSchema())) -->Line_16 $$ classMapping.addAttribute("schema", auditTableData.getSchema())[ CD ]
Line_12 $$ if (!StringTools.isEmpty(auditTableData.getAuditTableName())) -->Line_13 $$ classMapping.addAttribute("table", auditTableData.getAuditTableName())[ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_21 $$ if (isAbstract != null) [ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_18 $$ if (!StringTools.isEmpty(auditTableData.getCatalog())) [ FD ]
Line_5 $$ final Element classMapping = hibernateMapping.addElement(type)-->Line_7 $$ classMapping.addAttribute("entity-name", auditTableData.getAuditEntityName())[ FD ]
Line_18 $$ if (!StringTools.isEmpty(auditTableData.getCatalog())) -->Line_19 $$ classMapping.addAttribute("catalog", auditTableData.getCatalog())[ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_3 $$ final Element hibernateMapping = document.addElement("hibernate-mapping")[ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_6 $$ if (auditTableData.getAuditEntityName() != null) [ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_9 $$ if (discriminatorValue != null) [ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_19 $$ classMapping.addAttribute("catalog", auditTableData.getCatalog())[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_15 $$ if (!StringTools.isEmpty(auditTableData.getSchema())) [ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_22 $$ classMapping.addAttribute("abstract", isAbstract.toString())[ FD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_24 $$ return classMapping[ CD ]
Line_2 $$ private static Element createEntityCommon(Document document, String type, AuditTableData auditTableData, String discriminatorValue, Boolean isAbstract) -->Line_9 $$ if (discriminatorValue != null) [ CD ]
Line_21 $$ if (isAbstract != null) -->Line_22 $$ classMapping.addAttribute("abstract", isAbstract.toString())[ CD ]
