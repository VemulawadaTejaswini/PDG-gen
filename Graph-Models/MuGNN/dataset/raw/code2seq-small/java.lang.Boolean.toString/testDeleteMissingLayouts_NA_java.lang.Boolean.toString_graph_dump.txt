Line_15 $$ Layout importedLayout1 = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layout1.getUuid(), importedGroup.getGroupId(), false)-->Line_16 $$ Assert.assertNotNull(importedLayout1)[ FD ]
Line_6 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)-->Line_13 $$ exportImportLayouts(layoutIds, getImportParameterMap())[ FD ]
Line_6 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)-->Line_12 $$ layoutIds = new long[] [ FD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_8 $$ Assert.assertEquals(LayoutLocalServiceUtil.getLayoutsCount(group, false), LayoutLocalServiceUtil.getLayoutsCount(importedGroup, false))[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_3 $$ Layout layout1 = LayoutTestUtil.addLayout(group)[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_13 $$ exportImportLayouts(layoutIds, getImportParameterMap())[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_7 $$ exportImportLayouts(layoutIds, getImportParameterMap())[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_6 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_5 $$ List<Layout> layouts = LayoutLocalServiceUtil.getLayouts(group.getGroupId(), false)[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_15 $$ Layout importedLayout1 = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layout1.getUuid(), importedGroup.getGroupId(), false)[ CD ]
Line_3 $$ Layout layout1 = LayoutTestUtil.addLayout(group)-->Line_15 $$ Layout importedLayout1 = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layout1.getUuid(), importedGroup.getGroupId(), false)[ FD ]
Line_5 $$ List<Layout> layouts = LayoutLocalServiceUtil.getLayouts(group.getGroupId(), false)-->Line_6 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)[ FD ]
Line_3 $$ Layout layout1 = LayoutTestUtil.addLayout(group)-->Line_12 $$ layoutIds = new long[] [ FD ]
Line_4 $$ Layout layout2 = LayoutTestUtil.addLayout(group)-->Line_17 $$ Layout importedLayout2 = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layout2.getUuid(), importedGroup.getGroupId(), false)[ FD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_12 $$ layoutIds = new long[] [ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_18 $$ Assert.assertNotNull(importedLayout2)[ CD ]
Line_12 $$ layoutIds = new long[] -->Line_13 $$ exportImportLayouts(layoutIds, getImportParameterMap())[ FD ]
Line_10 $$ Map<String, String[]> parameterMap = getImportParameterMap()-->Line_11 $$ parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS, new String[] [ FD ]
Line_17 $$ Layout importedLayout2 = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layout2.getUuid(), importedGroup.getGroupId(), false)-->Line_18 $$ Assert.assertNotNull(importedLayout2)[ FD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_11 $$ parameterMap.put(PortletDataHandlerKeys.DELETE_MISSING_LAYOUTS, new String[] [ CD ]
Line_6 $$ long[] layoutIds = ExportImportHelperUtil.getLayoutIds(layouts)-->Line_7 $$ exportImportLayouts(layoutIds, getImportParameterMap())[ FD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_14 $$ Assert.assertEquals(LayoutLocalServiceUtil.getLayoutsCount(group, false), LayoutLocalServiceUtil.getLayoutsCount(importedGroup, false))[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_9 $$ LayoutTestUtil.addLayout(importedGroup)[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_16 $$ Assert.assertNotNull(importedLayout1)[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_10 $$ Map<String, String[]> parameterMap = getImportParameterMap()[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_4 $$ Layout layout2 = LayoutTestUtil.addLayout(group)[ CD ]
Line_2 $$ public void testDeleteMissingLayouts() throws Exception -->Line_17 $$ Layout importedLayout2 = LayoutLocalServiceUtil.fetchLayoutByUuidAndGroupId(layout2.getUuid(), importedGroup.getGroupId(), false)[ CD ]
