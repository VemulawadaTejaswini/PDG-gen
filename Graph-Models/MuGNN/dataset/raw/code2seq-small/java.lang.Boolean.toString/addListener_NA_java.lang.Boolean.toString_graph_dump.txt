Line_5 $$ String[] classNames = getListenerClassNames(clazz)-->Line_9 $$ ServiceRegistration<?> serviceRegistration = bundleContext.registerService(classNames, clazz.newInstance(), properties)[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_8 $$ properties.put("osgi.http.whiteboard.listener", Boolean.TRUE.toString())[ FD ]
Line_2 $$ protected void addListener(String listenerClassName, BundleContext bundleContext, ServletContext servletContext) -->Line_7 $$ properties.put("osgi.http.whiteboard.context.select", servletContext.getServletContextName())[ FD ]
Line_2 $$ protected void addListener(String listenerClassName, BundleContext bundleContext, ServletContext servletContext) -->Line_9 $$ ServiceRegistration<?> serviceRegistration = bundleContext.registerService(classNames, clazz.newInstance(), properties)[ FD ]
Line_2 $$ protected void addListener(String listenerClassName, BundleContext bundleContext, ServletContext servletContext) -->Line_4 $$ Class<?> clazz = _bundle.loadClass(listenerClassName)[ FD ]
Line_4 $$ Class<?> clazz = _bundle.loadClass(listenerClassName)-->Line_9 $$ ServiceRegistration<?> serviceRegistration = bundleContext.registerService(classNames, clazz.newInstance(), properties)[ FD ]
Line_4 $$ Class<?> clazz = _bundle.loadClass(listenerClassName)-->Line_5 $$ String[] classNames = getListenerClassNames(clazz)[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_9 $$ ServiceRegistration<?> serviceRegistration = bundleContext.registerService(classNames, clazz.newInstance(), properties)[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_7 $$ properties.put("osgi.http.whiteboard.context.select", servletContext.getServletContextName())[ FD ]
Line_9 $$ ServiceRegistration<?> serviceRegistration = bundleContext.registerService(classNames, clazz.newInstance(), properties)-->Line_10 $$ _serviceRegistrations.add(serviceRegistration)[ FD ]
