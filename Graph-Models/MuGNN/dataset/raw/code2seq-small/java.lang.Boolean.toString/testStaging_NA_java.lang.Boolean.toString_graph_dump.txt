Line_2 $$ public void testStaging() throws Exception -->Line_3 $$ StagingLocalServiceUtil.enableLocalStaging(TestPropsValues.getUserId(), group, false, false, new ServiceContext())[ CD ]
Line_8 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_10 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL, new String[] [ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_11 $$ StagingUtil.publishLayouts(TestPropsValues.getUserId(), stagingGroup.getGroupId(), group.getGroupId(), false, parameterMap)[ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_10 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL, new String[] [ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_12 $$ JournalArticle liveJournalArticle = JournalArticleLocalServiceUtil.fetchJournalArticleByUuidAndGroupId(article.getUuid(), group.getGroupId())[ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_9 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA, new String[] [ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_5 $$ JournalArticle article = JournalTestUtil.addArticle(stagingGroup.getGroupId(), JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID)[ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_14 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA, new String[] [ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_18 $$ Assert.assertNotNull(assetEntry)[ CD ]
Line_6 $$ BookmarksEntry bookmarksEntry = BookmarksTestUtil.addEntry(stagingGroup.getGroupId(), true)-->Line_7 $$ addAssetLink(article, bookmarksEntry, 1)[ FD ]
Line_5 $$ JournalArticle article = JournalTestUtil.addArticle(stagingGroup.getGroupId(), JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID)-->Line_17 $$ AssetEntry assetEntry = AssetEntryLocalServiceUtil.fetchEntry(group.getGroupId(), article.getArticleResourceUuid())[ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_19 $$ List<AssetLink> assetLinks = AssetLinkLocalServiceUtil.getLinks(assetEntry.getEntryId())[ CD ]
Line_19 $$ List<AssetLink> assetLinks = AssetLinkLocalServiceUtil.getLinks(assetEntry.getEntryId())-->Line_20 $$ Assert.assertNotNull(assetLinks)[ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_13 $$ Assert.assertNull(liveJournalArticle)[ CD ]
Line_5 $$ JournalArticle article = JournalTestUtil.addArticle(stagingGroup.getGroupId(), JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID)-->Line_7 $$ addAssetLink(article, bookmarksEntry, 1)[ FD ]
Line_4 $$ Group stagingGroup = group.getStagingGroup()-->Line_16 $$ StagingUtil.publishLayouts(TestPropsValues.getUserId(), stagingGroup.getGroupId(), group.getGroupId(), false, parameterMap)[ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_15 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL, new String[] [ CD ]
Line_8 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_9 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA, new String[] [ FD ]
Line_8 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_16 $$ StagingUtil.publishLayouts(TestPropsValues.getUserId(), stagingGroup.getGroupId(), group.getGroupId(), false, parameterMap)[ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_20 $$ Assert.assertNotNull(assetLinks)[ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_4 $$ Group stagingGroup = group.getStagingGroup()[ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_7 $$ addAssetLink(article, bookmarksEntry, 1)[ CD ]
Line_17 $$ AssetEntry assetEntry = AssetEntryLocalServiceUtil.fetchEntry(group.getGroupId(), article.getArticleResourceUuid())-->Line_19 $$ List<AssetLink> assetLinks = AssetLinkLocalServiceUtil.getLinks(assetEntry.getEntryId())[ FD ]
Line_8 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_14 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA, new String[] [ FD ]
Line_4 $$ Group stagingGroup = group.getStagingGroup()-->Line_6 $$ BookmarksEntry bookmarksEntry = BookmarksTestUtil.addEntry(stagingGroup.getGroupId(), true)[ FD ]
Line_4 $$ Group stagingGroup = group.getStagingGroup()-->Line_11 $$ StagingUtil.publishLayouts(TestPropsValues.getUserId(), stagingGroup.getGroupId(), group.getGroupId(), false, parameterMap)[ FD ]
Line_19 $$ List<AssetLink> assetLinks = AssetLinkLocalServiceUtil.getLinks(assetEntry.getEntryId())-->Line_21 $$ Assert.assertTrue(assetLinks.size() == 2)[ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_21 $$ Assert.assertTrue(assetLinks.size() == 2)[ CD ]
Line_17 $$ AssetEntry assetEntry = AssetEntryLocalServiceUtil.fetchEntry(group.getGroupId(), article.getArticleResourceUuid())-->Line_18 $$ Assert.assertNotNull(assetEntry)[ FD ]
Line_4 $$ Group stagingGroup = group.getStagingGroup()-->Line_5 $$ JournalArticle article = JournalTestUtil.addArticle(stagingGroup.getGroupId(), JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID)[ FD ]
Line_12 $$ JournalArticle liveJournalArticle = JournalArticleLocalServiceUtil.fetchJournalArticleByUuidAndGroupId(article.getUuid(), group.getGroupId())-->Line_13 $$ Assert.assertNull(liveJournalArticle)[ FD ]
Line_5 $$ JournalArticle article = JournalTestUtil.addArticle(stagingGroup.getGroupId(), JournalFolderConstants.DEFAULT_PARENT_FOLDER_ID)-->Line_12 $$ JournalArticle liveJournalArticle = JournalArticleLocalServiceUtil.fetchJournalArticleByUuidAndGroupId(article.getUuid(), group.getGroupId())[ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_8 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()[ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_6 $$ BookmarksEntry bookmarksEntry = BookmarksTestUtil.addEntry(stagingGroup.getGroupId(), true)[ CD ]
Line_2 $$ public void testStaging() throws Exception -->Line_16 $$ StagingUtil.publishLayouts(TestPropsValues.getUserId(), stagingGroup.getGroupId(), group.getGroupId(), false, parameterMap)[ CD ]
Line_8 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_15 $$ parameterMap.put(PortletDataHandlerKeys.PORTLET_DATA_ALL, new String[] [ FD ]
Line_2 $$ public void testStaging() throws Exception -->Line_17 $$ AssetEntry assetEntry = AssetEntryLocalServiceUtil.fetchEntry(group.getGroupId(), article.getArticleResourceUuid())[ CD ]
Line_8 $$ Map<String, String[]> parameterMap = ExportImportConfigurationParameterMapFactory.buildParameterMap()-->Line_11 $$ StagingUtil.publishLayouts(TestPropsValues.getUserId(), stagingGroup.getGroupId(), group.getGroupId(), false, parameterMap)[ FD ]
