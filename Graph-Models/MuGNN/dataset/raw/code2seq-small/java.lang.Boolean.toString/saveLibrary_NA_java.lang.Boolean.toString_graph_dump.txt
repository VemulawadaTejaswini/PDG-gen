Line_12 $$ Element typeElement = new Element(serializer.getTypeId())-->Line_25 $$ libraryElement.addContent(typeElement)[ FD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_6 $$ saveProperties((JpsTypedLibrary<?>) library, libraryElement)[ FD ]
Line_16 $$ Element jarDirectoryElement = new Element(JAR_DIRECTORY_TAG).setAttribute(URL_ATTRIBUTE, root.getUrl())-->Line_20 $$ jarDirectoryElement.setAttribute(TYPE_ATTRIBUTE, serializer.getTypeId())[ FD ]
Line_16 $$ Element jarDirectoryElement = new Element(JAR_DIRECTORY_TAG).setAttribute(URL_ATTRIBUTE, root.getUrl())-->Line_22 $$ jarDirectoryElements.add(jarDirectoryElement)[ FD ]
Line_12 $$ Element typeElement = new Element(serializer.getTypeId())-->Line_14 $$ typeElement.addContent(new Element(ROOT_TAG).setAttribute(URL_ATTRIBUTE, root.getUrl()))[ FD ]
Line_13 $$ for (JpsLibraryRoot root : roots) -->Line_17 $$ boolean recursive = root.getInclusionOptions() == JpsLibraryRoot.InclusionOptions.ARCHIVES_UNDER_ROOT_RECURSIVELY[ FD ]
Line_8 $$ for (JpsLibraryRootTypeSerializer serializer : getSortedSerializers()) -->Line_12 $$ Element typeElement = new Element(serializer.getTypeId())[ FD ]
Line_15 $$ if (root.getInclusionOptions() != JpsLibraryRoot.InclusionOptions.ROOT_ITSELF) -->Line_22 $$ jarDirectoryElements.add(jarDirectoryElement)[ CD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_4 $$ libraryElement.setAttribute(NAME_ATTRIBUTE, libraryName)[ FD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_27 $$ libraryElement.addContent(jarDirectoryElements)[ CD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_9 $$ List<JpsLibraryRoot> roots = library.getRoots(serializer.getType())[ FD ]
Line_9 $$ List<JpsLibraryRoot> roots = library.getRoots(serializer.getType())-->Line_10 $$ if (roots.isEmpty() && !serializer.isWriteIfEmpty())[ FD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_27 $$ libraryElement.addContent(jarDirectoryElements)[ FD ]
Line_8 $$ for (JpsLibraryRootTypeSerializer serializer : getSortedSerializers()) -->Line_10 $$ if (roots.isEmpty() && !serializer.isWriteIfEmpty())[ FD ]
Line_15 $$ if (root.getInclusionOptions() != JpsLibraryRoot.InclusionOptions.ROOT_ITSELF) -->Line_19 $$ if (!serializer.getType().equals(JpsOrderRootType.COMPILED)) [ CD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_25 $$ libraryElement.addContent(typeElement)[ FD ]
Line_15 $$ if (root.getInclusionOptions() != JpsLibraryRoot.InclusionOptions.ROOT_ITSELF) -->Line_17 $$ boolean recursive = root.getInclusionOptions() == JpsLibraryRoot.InclusionOptions.ARCHIVES_UNDER_ROOT_RECURSIVELY[ CD ]
Line_15 $$ if (root.getInclusionOptions() != JpsLibraryRoot.InclusionOptions.ROOT_ITSELF) -->Line_16 $$ Element jarDirectoryElement = new Element(JAR_DIRECTORY_TAG).setAttribute(URL_ATTRIBUTE, root.getUrl())[ CD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_3 $$ if (libraryName != null) [ CD ]
Line_17 $$ boolean recursive = root.getInclusionOptions() == JpsLibraryRoot.InclusionOptions.ARCHIVES_UNDER_ROOT_RECURSIVELY-->Line_18 $$ jarDirectoryElement.setAttribute(RECURSIVE_ATTRIBUTE, Boolean.toString(recursive))[ FD ]
Line_7 $$ List<Element> jarDirectoryElements = new ArrayList<Element>()-->Line_27 $$ libraryElement.addContent(jarDirectoryElements)[ FD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_3 $$ if (libraryName != null) [ FD ]
Line_3 $$ if (libraryName != null) -->Line_4 $$ libraryElement.setAttribute(NAME_ATTRIBUTE, libraryName)[ CD ]
Line_8 $$ for (JpsLibraryRootTypeSerializer serializer : getSortedSerializers()) -->Line_20 $$ jarDirectoryElement.setAttribute(TYPE_ATTRIBUTE, serializer.getTypeId())[ FD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_6 $$ saveProperties((JpsTypedLibrary<?>) library, libraryElement)[ CD ]
Line_2 $$ public static void saveLibrary(JpsLibrary library, Element libraryElement, final String libraryName) -->Line_7 $$ List<Element> jarDirectoryElements = new ArrayList<Element>()[ CD ]
Line_13 $$ for (JpsLibraryRoot root : roots) -->Line_14 $$ typeElement.addContent(new Element(ROOT_TAG).setAttribute(URL_ATTRIBUTE, root.getUrl()))[ FD ]
Line_19 $$ if (!serializer.getType().equals(JpsOrderRootType.COMPILED)) -->Line_20 $$ jarDirectoryElement.setAttribute(TYPE_ATTRIBUTE, serializer.getTypeId())[ CD ]
Line_13 $$ for (JpsLibraryRoot root : roots) -->Line_15 $$ if (root.getInclusionOptions() != JpsLibraryRoot.InclusionOptions.ROOT_ITSELF) [ FD ]
Line_8 $$ for (JpsLibraryRootTypeSerializer serializer : getSortedSerializers()) -->Line_19 $$ if (!serializer.getType().equals(JpsOrderRootType.COMPILED)) [ FD ]
Line_7 $$ List<Element> jarDirectoryElements = new ArrayList<Element>()-->Line_22 $$ jarDirectoryElements.add(jarDirectoryElement)[ FD ]
Line_15 $$ if (root.getInclusionOptions() != JpsLibraryRoot.InclusionOptions.ROOT_ITSELF) -->Line_18 $$ jarDirectoryElement.setAttribute(RECURSIVE_ATTRIBUTE, Boolean.toString(recursive))[ CD ]
Line_8 $$ for (JpsLibraryRootTypeSerializer serializer : getSortedSerializers()) -->Line_9 $$ List<JpsLibraryRoot> roots = library.getRoots(serializer.getType())[ FD ]
Line_13 $$ for (JpsLibraryRoot root : roots) -->Line_16 $$ Element jarDirectoryElement = new Element(JAR_DIRECTORY_TAG).setAttribute(URL_ATTRIBUTE, root.getUrl())[ FD ]
Line_16 $$ Element jarDirectoryElement = new Element(JAR_DIRECTORY_TAG).setAttribute(URL_ATTRIBUTE, root.getUrl())-->Line_18 $$ jarDirectoryElement.setAttribute(RECURSIVE_ATTRIBUTE, Boolean.toString(recursive))[ FD ]
