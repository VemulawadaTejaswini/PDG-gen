Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_11 $$ portletRequestDispatcher.include(renderRequest, renderResponse)[ FD ]
Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_16 $$ setUpPortlet(testPortlet, properties, TEST_PORTLET_ID)[ FD ]
Line_10 $$ PortletRequestDispatcher portletRequestDispatcher = portletContext.getRequestDispatcher("/view.jsp")-->Line_11 $$ portletRequestDispatcher.include(renderRequest, renderResponse)[ FD ]
Line_9 $$ PortletContext portletContext = getPortletContext()-->Line_10 $$ PortletRequestDispatcher portletRequestDispatcher = portletContext.getRequestDispatcher("/view.jsp")[ FD ]
Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_8 $$ super.render(renderRequest, renderResponse)[ CD ]
Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_10 $$ PortletRequestDispatcher portletRequestDispatcher = portletContext.getRequestDispatcher("/view.jsp")[ CD ]
Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_8 $$ super.render(renderRequest, renderResponse)[ FD ]
Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_11 $$ portletRequestDispatcher.include(renderRequest, renderResponse)[ CD ]
Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_9 $$ PortletContext portletContext = getPortletContext()[ CD ]
Line_4 $$ TestPortlet testPortlet = new TestPortlet() -->Line_27 $$ Assert.assertTrue(testPortlet.isCalledRender())[ FD ]
