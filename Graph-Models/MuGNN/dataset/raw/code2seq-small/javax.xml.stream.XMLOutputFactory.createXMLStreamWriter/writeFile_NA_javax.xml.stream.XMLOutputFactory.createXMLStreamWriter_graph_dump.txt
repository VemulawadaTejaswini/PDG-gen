Line_2 $$ private void writeFile(TimerImpl timer) -->Line_15 $$ mapper.deparseDocument(new EjbTimerXmlPersister(factory, configuration), Collections.singletonList(timer), writer)[ FD ]
Line_11 $$ FileOutputStream out = new FileOutputStream(file)-->Line_19 $$ safeClose(out)[ FD ]
Line_2 $$ private void writeFile(TimerImpl timer) -->Line_4 $$ if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) [ CD ]
Line_14 $$ XMLMapper mapper = createMapper(timer.getTimerService())-->Line_15 $$ mapper.deparseDocument(new EjbTimerXmlPersister(factory, configuration), Collections.singletonList(timer), writer)[ FD ]
Line_2 $$ private void writeFile(TimerImpl timer) -->Line_14 $$ XMLMapper mapper = createMapper(timer.getTimerService())[ FD ]
Line_13 $$ XMLStreamWriter writer = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_16 $$ writer.flush()[ FD ]
Line_4 $$ if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) -->Line_5 $$ if (file.exists()) [ CD ]
Line_2 $$ private void writeFile(TimerImpl timer) -->Line_4 $$ if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) [ FD ]
Line_11 $$ FileOutputStream out = new FileOutputStream(file)-->Line_13 $$ XMLStreamWriter writer = XMLOutputFactory.newInstance().createXMLStreamWriter(out)[ FD ]
Line_13 $$ XMLStreamWriter writer = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_15 $$ mapper.deparseDocument(new EjbTimerXmlPersister(factory, configuration), Collections.singletonList(timer), writer)[ FD ]
Line_13 $$ XMLStreamWriter writer = XMLOutputFactory.newInstance().createXMLStreamWriter(out)-->Line_17 $$ writer.close()[ FD ]
Line_3 $$ final File file = fileName(timer.getTimedObjectId(), timer.getId())-->Line_6 $$ file.delete()[ FD ]
Line_2 $$ private void writeFile(TimerImpl timer) -->Line_3 $$ final File file = fileName(timer.getTimedObjectId(), timer.getId())[ FD ]
Line_4 $$ if (timer.getState() == TimerState.CANCELED || timer.getState() == TimerState.EXPIRED) -->Line_8 $$ return[ CD ]
Line_2 $$ private void writeFile(TimerImpl timer) -->Line_3 $$ final File file = fileName(timer.getTimedObjectId(), timer.getId())[ CD ]
Line_3 $$ final File file = fileName(timer.getTimedObjectId(), timer.getId())-->Line_5 $$ if (file.exists()) [ FD ]
Line_5 $$ if (file.exists()) -->Line_6 $$ file.delete()[ CD ]
