Line_5 $$ while (true) -->Line_7 $$ if (readyCount > 0) [ CD ]
Line_5 $$ while (true) -->Line_27 $$ cleanUpTimeoutResponseWaitingDatagrams()[ CD ]
Line_10 $$ while (iterator.hasNext()) -->Line_11 $$ SelectionKey selectionKey = iterator.next()[ CD ]
Line_9 $$ Iterator<SelectionKey> iterator = selectionKeys.iterator()-->Line_10 $$ while (iterator.hasNext()) [ FD ]
Line_9 $$ Iterator<SelectionKey> iterator = selectionKeys.iterator()-->Line_12 $$ iterator.remove()[ FD ]
Line_5 $$ while (true) -->Line_26 $$ registerChannels()[ CD ]
Line_34 $$ Thread currentThread = Thread.currentThread()-->Line_35 $$ _log.info(currentThread.getName() + " exiting gracefully on selector closure")[ FD ]
Line_9 $$ Iterator<SelectionKey> iterator = selectionKeys.iterator()-->Line_11 $$ SelectionKey selectionKey = iterator.next()[ FD ]
Line_5 $$ while (true) -->Line_6 $$ int readyCount = selector.select()[ CD ]
Line_7 $$ if (readyCount > 0) -->Line_8 $$ Set<SelectionKey> selectionKeys = selector.selectedKeys()[ CD ]
Line_11 $$ SelectionKey selectionKey = iterator.next()-->Line_17 $$ if (selectionKey.isWritable()) [ FD ]
Line_6 $$ int readyCount = selector.select()-->Line_7 $$ if (readyCount > 0) [ FD ]
Line_11 $$ SelectionKey selectionKey = iterator.next()-->Line_18 $$ _processWriting(selectionKey)[ FD ]
Line_2 $$ public void run() -->Line_43 $$ timeoutMap.clear()[ CD ]
Line_33 $$ if (_log.isInfoEnabled()) -->Line_34 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_8 $$ Set<SelectionKey> selectionKeys = selector.selectedKeys()-->Line_9 $$ Iterator<SelectionKey> iterator = selectionKeys.iterator()[ FD ]
Line_34 $$ Thread currentThread = Thread.currentThread()-->Line_39 $$ _log.error(currentThread.getName() + " exiting exceptionally", t)[ FD ]
Line_11 $$ SelectionKey selectionKey = iterator.next()-->Line_15 $$ _processReading(selectionKey)[ FD ]
Line_2 $$ public void run() -->Line_42 $$ responseWaitingMap.clear()[ CD ]
Line_33 $$ if (_log.isInfoEnabled()) -->Line_35 $$ _log.info(currentThread.getName() + " exiting gracefully on selector closure")[ CD ]
Line_10 $$ while (iterator.hasNext()) -->Line_12 $$ iterator.remove()[ CD ]
Line_2 $$ public void run() -->Line_41 $$ registerChannels()[ CD ]
Line_14 $$ if (selectionKey.isReadable()) -->Line_15 $$ _processReading(selectionKey)[ CD ]
Line_7 $$ if (readyCount > 0) -->Line_9 $$ Iterator<SelectionKey> iterator = selectionKeys.iterator()[ CD ]
Line_7 $$ if (readyCount > 0) -->Line_10 $$ while (iterator.hasNext()) [ CD ]
Line_7 $$ if (readyCount > 0) -->Line_23 $$ if (!selector.isOpen()) [ CD ]
Line_17 $$ if (selectionKey.isWritable()) -->Line_18 $$ _processWriting(selectionKey)[ CD ]
Line_11 $$ SelectionKey selectionKey = iterator.next()-->Line_14 $$ if (selectionKey.isReadable()) [ FD ]
