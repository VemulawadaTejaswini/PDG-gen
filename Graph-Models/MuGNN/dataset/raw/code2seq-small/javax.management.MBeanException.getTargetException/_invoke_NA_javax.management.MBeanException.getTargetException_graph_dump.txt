Line_48 $$ if (username.length > 0) -->Line_55 $$ credential = new String(incomingPassword, StandardCharsets.UTF_8).toCharArray()[ CD ]
Line_14 $$ SecurityContext sc = null-->Line_82 $$ if (sc != null) [ FD ]
Line_33 $$ Object credential = null-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_36 $$ if (incomingName != null && incomingName.length > 0) -->Line_48 $$ if (username.length > 0) [ CD ]
Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_21 $$ retVal = homeHandle-->Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)[ FD ]
Line_18 $$ if (!home && opName.equals("_get_handle")) -->Line_20 $$ if (home && opName.equals("_get_homeHandle")) [ CD ]
Line_32 $$ SimplePrincipal principal = null-->Line_54 $$ principal = new SimplePrincipal(name)[ FD ]
Line_34 $$ if (sasCurrent != null) -->Line_35 $$ final byte[] incomingName = sasCurrent.get_incoming_principal_name()[ CD ]
Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)-->Line_83 $$ setSecurityContextOnAssociation(sc)[ FD ]
Line_27 $$ tx = inboundTxCurrent.getCurrentTransaction()-->Line_28 $$ if (tx != null) [ FD ]
Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)-->Line_73 $$ final Object[] params = op.readParams((org.omg.CORBA_2_3.portable.InputStream) in)[ FD ]
Line_106 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createReply()-->Line_117 $$ op.writeException(out, e)[ FD ]
Line_36 $$ if (incomingName != null && incomingName.length > 0) -->Line_47 $$ final byte[] incomingPassword = sasCurrent.get_incoming_password()[ CD ]
Line_17 $$ Object retVal-->Line_23 $$ retVal = ejbMetaData[ FD ]
Line_48 $$ if (username.length > 0) -->Line_51 $$ if (domainIndex > 0) [ CD ]
Line_38 $$ String name = new String(incomingName, StandardCharsets.UTF_8)-->Line_52 $$ name = name.substring(0, domainIndex)[ FD ]
Line_61 $$ final Object finalCredential = credential-->Line_64 $$ sc1.getUtil().createSubjectInfo(finalPrincipal, finalCredential, null)[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_9 $$ final NamespaceContextSelector selector = componentView.getComponent().getNamespaceContextSelector()[ CD ]
Line_59 $$ if (WildFlySecurityManager.isChecking()) -->Line_61 $$ final Object finalCredential = credential[ CD ]
Line_17 $$ Object retVal-->Line_79 $$ retVal = false[ FD ]
Line_86 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_90 $$ prepareInterceptorContext(op, params, interceptorContext)[ FD ]
Line_32 $$ SimplePrincipal principal = null-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_73 $$ final Object[] params = op.readParams((org.omg.CORBA_2_3.portable.InputStream) in)-->Line_90 $$ prepareInterceptorContext(op, params, interceptorContext)[ FD ]
Line_23 $$ retVal = ejbMetaData-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_9 $$ final NamespaceContextSelector selector = componentView.getComponent().getNamespaceContextSelector()-->Line_11 $$ NamespaceContextSelector.pushCurrentSelector(selector)[ FD ]
Line_25 $$ Transaction tx = null-->Line_99 $$ if (tx != null) [ FD ]
Line_41 $$ name = name.substring(0, domainIndex)-->Line_50 $$ int domainIndex = name.indexOf('@')[ FD ]
Line_48 $$ if (username.length > 0) -->Line_50 $$ int domainIndex = name.indexOf('@')[ CD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_11 $$ NamespaceContextSelector.pushCurrentSelector(selector)[ CD ]
Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))-->Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)[ FD ]
Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)-->Line_90 $$ prepareInterceptorContext(op, params, interceptorContext)[ FD ]
Line_37 $$ if (incomingName.length > 0) -->Line_43 $$ credential = sasCurrent[ CD ]
Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)-->Line_117 $$ op.writeException(out, e)[ FD ]
Line_86 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_88 $$ interceptorContext.putPrivateData(SecurityContext.class, sc)[ FD ]
Line_14 $$ SecurityContext sc = null-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_93 $$ if (sc != null) -->Line_94 $$ clearSecurityContextOnAssociation()[ CD ]
Line_14 $$ SecurityContext sc = null-->Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)[ FD ]
Line_36 $$ if (incomingName != null && incomingName.length > 0) -->Line_37 $$ if (incomingName.length > 0) [ CD ]
Line_100 $$ if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) -->Line_101 $$ transactionManager.suspend()[ CD ]
Line_106 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createReply()-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))-->Line_91 $$ retVal = componentView.invoke(interceptorContext)[ FD ]
Line_37 $$ if (incomingName.length > 0) -->Line_38 $$ String name = new String(incomingName, StandardCharsets.UTF_8)[ CD ]
Line_17 $$ Object retVal-->Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))[ FD ]
Line_32 $$ SimplePrincipal principal = null-->Line_42 $$ principal = new SimplePrincipal(name)[ FD ]
Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)-->Line_79 $$ retVal = false[ FD ]
Line_59 $$ if (WildFlySecurityManager.isChecking()) -->Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> [ CD ]
Line_63 $$ SecurityContext sc1 = SecurityContextFactory.createSecurityContext(securityDomain)-->Line_64 $$ sc1.getUtil().createSubjectInfo(finalPrincipal, finalCredential, null)[ FD ]
Line_99 $$ if (tx != null) -->Line_100 $$ if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION) [ CD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_3 $$ EjbLogger.ROOT_LOGGER.tracef("EJBObject invocation: %s", opName)[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_5 $$ if (op == null) [ CD ]
Line_20 $$ if (home && opName.equals("_get_homeHandle")) -->Line_21 $$ retVal = homeHandle[ CD ]
Line_20 $$ if (home && opName.equals("_get_homeHandle")) -->Line_22 $$ if (home && opName.equals("_get_EJBMetaData")) [ CD ]
Line_21 $$ retVal = homeHandle-->Line_79 $$ retVal = false[ FD ]
Line_15 $$ org.omg.CORBA_2_3.portable.OutputStream out-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_43 $$ credential = sasCurrent-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_15 $$ org.omg.CORBA_2_3.portable.OutputStream out-->Line_106 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createReply()[ FD ]
Line_17 $$ Object retVal-->Line_21 $$ retVal = homeHandle[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_74 $$ if (!home && opName.equals("isIdentical") && params.length == 1) [ FD ]
Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)-->Line_82 $$ if (sc != null) [ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)[ FD ]
Line_38 $$ String name = new String(incomingName, StandardCharsets.UTF_8)-->Line_50 $$ int domainIndex = name.indexOf('@')[ FD ]
Line_41 $$ name = name.substring(0, domainIndex)-->Line_52 $$ name = name.substring(0, domainIndex)[ FD ]
Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))-->Line_21 $$ retVal = homeHandle[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_18 $$ if (!home && opName.equals("_get_handle")) [ FD ]
Line_112 $$ if (e instanceof MBeanException) -->Line_113 $$ e = ((MBeanException) e).getTargetException()[ CD ]
Line_60 $$ final SimplePrincipal finalPrincipal = principal-->Line_64 $$ sc1.getUtil().createSubjectInfo(finalPrincipal, finalCredential, null)[ FD ]
Line_15 $$ org.omg.CORBA_2_3.portable.OutputStream out-->Line_116 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createExceptionReply()[ FD ]
Line_18 $$ if (!home && opName.equals("_get_handle")) -->Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))[ CD ]
Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)-->Line_5 $$ if (op == null) [ FD ]
Line_55 $$ credential = new String(incomingPassword, StandardCharsets.UTF_8).toCharArray()-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_36 $$ if (incomingName != null && incomingName.length > 0) -->Line_46 $$ final byte[] username = sasCurrent.get_incoming_username()[ CD ]
Line_54 $$ principal = new SimplePrincipal(name)-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_86 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_91 $$ retVal = componentView.invoke(interceptorContext)[ FD ]
Line_34 $$ if (sasCurrent != null) -->Line_36 $$ if (incomingName != null && incomingName.length > 0) [ CD ]
Line_38 $$ String name = new String(incomingName, StandardCharsets.UTF_8)-->Line_39 $$ int domainIndex = name.indexOf('@')[ FD ]
Line_25 $$ Transaction tx = null-->Line_27 $$ tx = inboundTxCurrent.getCurrentTransaction()[ FD ]
Line_14 $$ SecurityContext sc = null-->Line_93 $$ if (sc != null) [ FD ]
Line_79 $$ retVal = false-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_14 $$ SecurityContext sc = null-->Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> [ FD ]
Line_17 $$ Object retVal-->Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)[ FD ]
Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)-->Line_91 $$ retVal = componentView.invoke(interceptorContext)[ FD ]
Line_39 $$ int domainIndex = name.indexOf('@')-->Line_40 $$ if (domainIndex > 0)[ FD ]
Line_17 $$ Object retVal-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> -->Line_88 $$ interceptorContext.putPrivateData(SecurityContext.class, sc)[ FD ]
Line_21 $$ retVal = homeHandle-->Line_91 $$ retVal = componentView.invoke(interceptorContext)[ FD ]
Line_27 $$ tx = inboundTxCurrent.getCurrentTransaction()-->Line_99 $$ if (tx != null) [ FD ]
Line_28 $$ if (tx != null) -->Line_29 $$ transactionManager.resume(tx)[ CD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_116 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createExceptionReply()[ FD ]
Line_33 $$ Object credential = null-->Line_55 $$ credential = new String(incomingPassword, StandardCharsets.UTF_8).toCharArray()[ FD ]
Line_107 $$ if (op.isNonVoid()) -->Line_108 $$ op.writeRetval(out, retVal)[ CD ]
Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)-->Line_93 $$ if (sc != null) [ FD ]
Line_21 $$ retVal = homeHandle-->Line_23 $$ retVal = ejbMetaData[ FD ]
Line_75 $$ Object val = params[0]-->Line_76 $$ if (val instanceof org.omg.CORBA.Object) [ FD ]
Line_22 $$ if (home && opName.equals("_get_EJBMetaData")) -->Line_23 $$ retVal = ejbMetaData[ CD ]
Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))-->Line_79 $$ retVal = false[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)[ CD ]
Line_22 $$ if (home && opName.equals("_get_EJBMetaData")) -->Line_28 $$ if (tx != null) [ CD ]
Line_14 $$ SecurityContext sc = null-->Line_87 $$ if (sc != null) [ FD ]
Line_40 $$ if (domainIndex > 0)-->Line_41 $$ name = name.substring(0, domainIndex)[ CD ]
Line_79 $$ retVal = false-->Line_91 $$ retVal = componentView.invoke(interceptorContext)[ FD ]
Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> -->Line_83 $$ setSecurityContextOnAssociation(sc)[ FD ]
Line_48 $$ if (username.length > 0) -->Line_54 $$ principal = new SimplePrincipal(name)[ CD ]
Line_76 $$ if (val instanceof org.omg.CORBA.Object) -->Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)[ CD ]
Line_58 $$ if (securityDomain != null) -->Line_59 $$ if (WildFlySecurityManager.isChecking()) [ CD ]
Line_37 $$ if (incomingName.length > 0) -->Line_42 $$ principal = new SimplePrincipal(name)[ CD ]
Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> -->Line_93 $$ if (sc != null) [ FD ]
Line_116 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createExceptionReply()-->Line_117 $$ op.writeException(out, e)[ FD ]
Line_33 $$ Object credential = null-->Line_43 $$ credential = sasCurrent[ FD ]
Line_5 $$ if (op == null) -->Line_6 $$ EjbLogger.ROOT_LOGGER.debugf("Unable to find opname '%s' valid operations:%s", opName, methodInvokerMap.keySet())[ CD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_20 $$ if (home && opName.equals("_get_homeHandle")) [ FD ]
Line_26 $$ if (inboundTxCurrent != null)-->Line_27 $$ tx = inboundTxCurrent.getCurrentTransaction()[ CD ]
Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)-->Line_87 $$ if (sc != null) [ FD ]
Line_25 $$ Transaction tx = null-->Line_28 $$ if (tx != null) [ FD ]
Line_39 $$ int domainIndex = name.indexOf('@')-->Line_51 $$ if (domainIndex > 0) [ FD ]
Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> -->Line_87 $$ if (sc != null) [ FD ]
Line_43 $$ credential = sasCurrent-->Line_55 $$ credential = new String(incomingPassword, StandardCharsets.UTF_8).toCharArray()[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_22 $$ if (home && opName.equals("_get_EJBMetaData")) [ FD ]
Line_76 $$ if (val instanceof org.omg.CORBA.Object) -->Line_79 $$ retVal = false[ CD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_6 $$ EjbLogger.ROOT_LOGGER.debugf("Unable to find opname '%s' valid operations:%s", opName, methodInvokerMap.keySet())[ FD ]
Line_14 $$ SecurityContext sc = null-->Line_83 $$ setSecurityContextOnAssociation(sc)[ FD ]
Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> -->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_39 $$ int domainIndex = name.indexOf('@')-->Line_52 $$ name = name.substring(0, domainIndex)[ FD ]
Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> -->Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)[ FD ]
Line_87 $$ if (sc != null) -->Line_88 $$ interceptorContext.putPrivateData(SecurityContext.class, sc)[ CD ]
Line_27 $$ tx = inboundTxCurrent.getCurrentTransaction()-->Line_29 $$ transactionManager.resume(tx)[ FD ]
Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_74 $$ if (!home && opName.equals("isIdentical") && params.length == 1) -->Line_76 $$ if (val instanceof org.omg.CORBA.Object) [ CD ]
Line_74 $$ if (!home && opName.equals("isIdentical") && params.length == 1) -->Line_75 $$ Object val = params[0][ CD ]
Line_106 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createReply()-->Line_116 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createExceptionReply()[ FD ]
Line_25 $$ Transaction tx = null-->Line_29 $$ transactionManager.resume(tx)[ FD ]
Line_82 $$ if (sc != null) -->Line_83 $$ setSecurityContextOnAssociation(sc)[ CD ]
Line_23 $$ retVal = ejbMetaData-->Line_91 $$ retVal = componentView.invoke(interceptorContext)[ FD ]
Line_59 $$ if (WildFlySecurityManager.isChecking()) -->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ CD ]
Line_42 $$ principal = new SimplePrincipal(name)-->Line_69 $$ sc.getUtil().createSubjectInfo(principal, credential, null)[ FD ]
Line_37 $$ if (incomingName.length > 0) -->Line_40 $$ if (domainIndex > 0)[ CD ]
Line_21 $$ retVal = homeHandle-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_22 $$ if (home && opName.equals("_get_EJBMetaData")) -->Line_25 $$ Transaction tx = null[ CD ]
Line_39 $$ int domainIndex = name.indexOf('@')-->Line_41 $$ name = name.substring(0, domainIndex)[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_106 $$ out = (org.omg.CORBA_2_3.portable.OutputStream) handler.createReply()[ FD ]
Line_17 $$ Object retVal-->Line_91 $$ retVal = componentView.invoke(interceptorContext)[ FD ]
Line_23 $$ retVal = ejbMetaData-->Line_77 $$ retVal = handleIsIdentical((org.omg.CORBA.Object) val)[ FD ]
Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)-->Line_88 $$ interceptorContext.putPrivateData(SecurityContext.class, sc)[ FD ]
Line_10 $$ final ClassLoader oldCl = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()-->Line_122 $$ WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldCl)[ FD ]
Line_59 $$ if (WildFlySecurityManager.isChecking()) -->Line_68 $$ sc = SecurityContextFactory.createSecurityContext(securityDomain)[ CD ]
Line_37 $$ if (incomingName.length > 0) -->Line_39 $$ int domainIndex = name.indexOf('@')[ CD ]
Line_23 $$ retVal = ejbMetaData-->Line_79 $$ retVal = false[ FD ]
Line_51 $$ if (domainIndex > 0) -->Line_52 $$ name = name.substring(0, domainIndex)[ CD ]
Line_15 $$ org.omg.CORBA_2_3.portable.OutputStream out-->Line_117 $$ op.writeException(out, e)[ FD ]
Line_91 $$ retVal = componentView.invoke(interceptorContext)-->Line_108 $$ op.writeRetval(out, retVal)[ FD ]
Line_22 $$ if (home && opName.equals("_get_EJBMetaData")) -->Line_26 $$ if (inboundTxCurrent != null)[ CD ]
Line_14 $$ SecurityContext sc = null-->Line_88 $$ interceptorContext.putPrivateData(SecurityContext.class, sc)[ FD ]
Line_34 $$ if (sasCurrent != null) -->Line_58 $$ if (securityDomain != null) [ CD ]
Line_42 $$ principal = new SimplePrincipal(name)-->Line_54 $$ principal = new SimplePrincipal(name)[ FD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_10 $$ final ClassLoader oldCl = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()[ CD ]
Line_38 $$ String name = new String(incomingName, StandardCharsets.UTF_8)-->Line_41 $$ name = name.substring(0, domainIndex)[ FD ]
Line_59 $$ if (WildFlySecurityManager.isChecking()) -->Line_60 $$ final SimplePrincipal finalPrincipal = principal[ CD ]
Line_19 $$ retVal = new HandleImplIIOP(orb.object_to_string(_this_object()))-->Line_23 $$ retVal = ejbMetaData[ FD ]
Line_4 $$ SkeletonStrategy op = methodInvokerMap.get(opName)-->Line_107 $$ if (op.isNonVoid()) [ FD ]
Line_74 $$ if (!home && opName.equals("isIdentical") && params.length == 1) -->Line_82 $$ if (sc != null) [ CD ]
Line_2 $$ public OutputStream _invoke(final String opName, final InputStream in, final ResponseHandler handler) -->Line_3 $$ EjbLogger.ROOT_LOGGER.tracef("EJBObject invocation: %s", opName)[ CD ]
Line_62 $$ sc = AccessController.doPrivileged((PrivilegedExceptionAction<SecurityContext>) () -> -->Line_82 $$ if (sc != null) [ FD ]
