Line_4 $$ Writer writer = new OutputStreamWriter(bos, FORM_CHARSET)-->Line_13 $$ writer.write('=')[ FD ]
Line_2 $$ private static InputStream getBodyFromServletRequestParameters(HttpServletRequest request) throws IOException -->Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) [ CD ]
Line_4 $$ Writer writer = new OutputStreamWriter(bos, FORM_CHARSET)-->Line_14 $$ writer.write(URLEncoder.encode(value, FORM_CHARSET))[ FD ]
Line_9 $$ for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) -->Line_15 $$ if (valueIterator.hasNext()) [ FD ]
Line_2 $$ private static InputStream getBodyFromServletRequestParameters(HttpServletRequest request) throws IOException -->Line_5 $$ Map<String, String[]> form = request.getParameterMap()[ FD ]
Line_15 $$ if (valueIterator.hasNext()) -->Line_16 $$ writer.write('&')[ CD ]
Line_4 $$ Writer writer = new OutputStreamWriter(bos, FORM_CHARSET)-->Line_16 $$ writer.write('&')[ FD ]
Line_3 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream(1024)-->Line_25 $$ return new ByteArrayInputStream(bos.toByteArray())[ FD ]
Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) -->Line_8 $$ List<String> values = Arrays.asList(form.get(name))[ CD ]
Line_2 $$ private static InputStream getBodyFromServletRequestParameters(HttpServletRequest request) throws IOException -->Line_25 $$ return new ByteArrayInputStream(bos.toByteArray())[ CD ]
Line_7 $$ String name = nameIterator.next()-->Line_8 $$ List<String> values = Arrays.asList(form.get(name))[ FD ]
Line_2 $$ private static InputStream getBodyFromServletRequestParameters(HttpServletRequest request) throws IOException -->Line_24 $$ writer.flush()[ CD ]
Line_5 $$ Map<String, String[]> form = request.getParameterMap()-->Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) [ FD ]
Line_9 $$ for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) -->Line_10 $$ String value = valueIterator.next()[ CD ]
Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) -->Line_7 $$ String name = nameIterator.next()[ FD ]
Line_2 $$ private static InputStream getBodyFromServletRequestParameters(HttpServletRequest request) throws IOException -->Line_4 $$ Writer writer = new OutputStreamWriter(bos, FORM_CHARSET)[ CD ]
Line_10 $$ String value = valueIterator.next()-->Line_12 $$ if (value != null) [ FD ]
Line_5 $$ Map<String, String[]> form = request.getParameterMap()-->Line_8 $$ List<String> values = Arrays.asList(form.get(name))[ FD ]
Line_8 $$ List<String> values = Arrays.asList(form.get(name))-->Line_9 $$ for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) [ FD ]
Line_7 $$ String name = nameIterator.next()-->Line_11 $$ writer.write(URLEncoder.encode(name, FORM_CHARSET))[ FD ]
Line_9 $$ for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) -->Line_11 $$ writer.write(URLEncoder.encode(name, FORM_CHARSET))[ CD ]
Line_12 $$ if (value != null) -->Line_15 $$ if (valueIterator.hasNext()) [ CD ]
Line_10 $$ String value = valueIterator.next()-->Line_14 $$ writer.write(URLEncoder.encode(value, FORM_CHARSET))[ FD ]
Line_2 $$ private static InputStream getBodyFromServletRequestParameters(HttpServletRequest request) throws IOException -->Line_5 $$ Map<String, String[]> form = request.getParameterMap()[ CD ]
Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) -->Line_20 $$ if (nameIterator.hasNext()) [ CD ]
Line_4 $$ Writer writer = new OutputStreamWriter(bos, FORM_CHARSET)-->Line_11 $$ writer.write(URLEncoder.encode(name, FORM_CHARSET))[ FD ]
Line_4 $$ Writer writer = new OutputStreamWriter(bos, FORM_CHARSET)-->Line_24 $$ writer.flush()[ FD ]
Line_9 $$ for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) -->Line_10 $$ String value = valueIterator.next()[ FD ]
Line_9 $$ for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) -->Line_12 $$ if (value != null) [ CD ]
Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) -->Line_7 $$ String name = nameIterator.next()[ CD ]
Line_12 $$ if (value != null) -->Line_13 $$ writer.write('=')[ CD ]
Line_4 $$ Writer writer = new OutputStreamWriter(bos, FORM_CHARSET)-->Line_21 $$ writer.append('&')[ FD ]
Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) -->Line_9 $$ for (Iterator<String> valueIterator = values.iterator(); valueIterator.hasNext(); ) [ CD ]
Line_6 $$ for (Iterator<String> nameIterator = form.keySet().iterator(); nameIterator.hasNext(); ) -->Line_20 $$ if (nameIterator.hasNext()) [ FD ]
Line_20 $$ if (nameIterator.hasNext()) -->Line_21 $$ writer.append('&')[ CD ]
Line_12 $$ if (value != null) -->Line_14 $$ writer.write(URLEncoder.encode(value, FORM_CHARSET))[ CD ]
Line_2 $$ private static InputStream getBodyFromServletRequestParameters(HttpServletRequest request) throws IOException -->Line_3 $$ ByteArrayOutputStream bos = new ByteArrayOutputStream(1024)[ CD ]
