Line_7 $$ for (char c = elem.start; c <= elem.end; c++) -->Line_9 $$ n.add(Character.toUpperCase(c))[ FD ]
Line_3 $$ IntCharSet n = copy()-->Line_10 $$ n.add(Character.toTitleCase(c))[ FD ]
Line_2 $$ public IntCharSet getCaseless() -->Line_3 $$ IntCharSet n = copy()[ CD ]
Line_2 $$ public IntCharSet getCaseless() -->Line_4 $$ int size = intervalls.size()[ CD ]
Line_3 $$ IntCharSet n = copy()-->Line_8 $$ n.add(Character.toLowerCase(c))[ FD ]
Line_7 $$ for (char c = elem.start; c <= elem.end; c++) -->Line_9 $$ n.add(Character.toUpperCase(c))[ CD ]
Line_3 $$ IntCharSet n = copy()-->Line_9 $$ n.add(Character.toUpperCase(c))[ FD ]
Line_5 $$ for (int i = 0; i < size; i++) -->Line_6 $$ Interval elem = (Interval) intervalls.elementAt(i)[ CD ]
Line_7 $$ for (char c = elem.start; c <= elem.end; c++) -->Line_8 $$ n.add(Character.toLowerCase(c))[ CD ]
Line_7 $$ for (char c = elem.start; c <= elem.end; c++) -->Line_8 $$ n.add(Character.toLowerCase(c))[ FD ]
Line_4 $$ int size = intervalls.size()-->Line_5 $$ for (int i = 0; i < size; i++) [ FD ]
Line_5 $$ for (int i = 0; i < size; i++) -->Line_7 $$ for (char c = elem.start; c <= elem.end; c++) [ CD ]
Line_2 $$ public IntCharSet getCaseless() -->Line_13 $$ return n[ CD ]
Line_7 $$ for (char c = elem.start; c <= elem.end; c++) -->Line_10 $$ n.add(Character.toTitleCase(c))[ CD ]
Line_5 $$ for (int i = 0; i < size; i++) -->Line_6 $$ Interval elem = (Interval) intervalls.elementAt(i)[ FD ]
Line_7 $$ for (char c = elem.start; c <= elem.end; c++) -->Line_10 $$ n.add(Character.toTitleCase(c))[ FD ]
Line_2 $$ public IntCharSet getCaseless() -->Line_5 $$ for (int i = 0; i < size; i++) [ CD ]
