Line_2 $$ public void testJpaUsedWithXMLXaDataSource() throws Throwable -->Line_9 $$ Assert.assertTrue(emps.contains("Sue"))[ CD ]
Line_3 $$ final JpaRemote remote = (JpaRemote) initialContext.lookup("java:module/JpaRemoteBean")-->Line_6 $$ final Set<String> emps = remote.getEmployees()[ FD ]
Line_3 $$ final JpaRemote remote = (JpaRemote) initialContext.lookup("java:module/JpaRemoteBean")-->Line_4 $$ remote.addEmployee("Bob")[ FD ]
Line_2 $$ public void testJpaUsedWithXMLXaDataSource() throws Throwable -->Line_3 $$ final JpaRemote remote = (JpaRemote) initialContext.lookup("java:module/JpaRemoteBean")[ CD ]
Line_6 $$ final Set<String> emps = remote.getEmployees()-->Line_7 $$ Assert.assertEquals(2, emps.size())[ FD ]
Line_3 $$ final JpaRemote remote = (JpaRemote) initialContext.lookup("java:module/JpaRemoteBean")-->Line_5 $$ remote.addEmployee("Sue")[ FD ]
Line_6 $$ final Set<String> emps = remote.getEmployees()-->Line_8 $$ Assert.assertTrue(emps.contains("Bob"))[ FD ]
Line_6 $$ final Set<String> emps = remote.getEmployees()-->Line_9 $$ Assert.assertTrue(emps.contains("Sue"))[ FD ]
Line_2 $$ public void testJpaUsedWithXMLXaDataSource() throws Throwable -->Line_8 $$ Assert.assertTrue(emps.contains("Bob"))[ CD ]
Line_2 $$ public void testJpaUsedWithXMLXaDataSource() throws Throwable -->Line_7 $$ Assert.assertEquals(2, emps.size())[ CD ]
Line_2 $$ public void testJpaUsedWithXMLXaDataSource() throws Throwable -->Line_6 $$ final Set<String> emps = remote.getEmployees()[ CD ]
Line_2 $$ public void testJpaUsedWithXMLXaDataSource() throws Throwable -->Line_5 $$ remote.addEmployee("Sue")[ CD ]
Line_2 $$ public void testJpaUsedWithXMLXaDataSource() throws Throwable -->Line_4 $$ remote.addEmployee("Bob")[ CD ]
