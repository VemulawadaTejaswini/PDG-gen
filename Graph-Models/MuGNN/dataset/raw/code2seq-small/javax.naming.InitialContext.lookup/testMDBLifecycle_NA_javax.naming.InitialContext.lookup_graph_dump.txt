Line_7 $$ MessageConsumer consumer = null-->Line_23 $$ Message replyMsg = consumer.receive(5000)[ FD ]
Line_17 $$ TextMessage msg = session.createTextMessage("Hello world")-->Line_19 $$ msg.setJMSReplyTo(replyQueue)[ FD ]
Line_8 $$ QueueConnection conn = null-->Line_14 $$ conn.start()[ FD ]
Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)-->Line_17 $$ TextMessage msg = session.createTextMessage("Hello world")[ FD ]
Line_22 $$ consumer = session.createConsumer(replyQueue)-->Line_30 $$ if (consumer != null) [ FD ]
Line_22 $$ consumer = session.createConsumer(replyQueue)-->Line_31 $$ consumer.close()[ FD ]
Line_8 $$ QueueConnection conn = null-->Line_39 $$ if (conn != null) [ FD ]
Line_20 $$ producer = session.createProducer(queue)-->Line_21 $$ producer.send(msg)[ FD ]
Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)-->Line_36 $$ if (session != null) [ FD ]
Line_9 $$ Session session = null-->Line_20 $$ producer = session.createProducer(queue)[ FD ]
Line_9 $$ Session session = null-->Line_37 $$ session.close()[ FD ]
Line_13 $$ conn = qcf.createQueueConnection("guest", "guest")-->Line_39 $$ if (conn != null) [ FD ]
Line_12 $$ Queue queue = (Queue) new InitialContext().lookup("java:jboss/" + QUEUE_NAME)-->Line_20 $$ producer = session.createProducer(queue)[ FD ]
Line_13 $$ conn = qcf.createQueueConnection("guest", "guest")-->Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)[ FD ]
Line_16 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()-->Line_19 $$ msg.setJMSReplyTo(replyQueue)[ FD ]
Line_6 $$ MessageProducer producer = null-->Line_20 $$ producer = session.createProducer(queue)[ FD ]
Line_6 $$ MessageProducer producer = null-->Line_21 $$ producer.send(msg)[ FD ]
Line_17 $$ TextMessage msg = session.createTextMessage("Hello world")-->Line_21 $$ producer.send(msg)[ FD ]
Line_13 $$ conn = qcf.createQueueConnection("guest", "guest")-->Line_40 $$ conn.close()[ FD ]
Line_2 $$ public void testMDBLifecycle() throws Exception -->Line_7 $$ MessageConsumer consumer = null[ CD ]
Line_7 $$ MessageConsumer consumer = null-->Line_22 $$ consumer = session.createConsumer(replyQueue)[ FD ]
Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)-->Line_16 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()[ FD ]
Line_6 $$ MessageProducer producer = null-->Line_33 $$ if (producer != null) [ FD ]
Line_36 $$ if (session != null) -->Line_37 $$ session.close()[ CD ]
Line_33 $$ if (producer != null) -->Line_34 $$ producer.close()[ CD ]
Line_22 $$ consumer = session.createConsumer(replyQueue)-->Line_23 $$ Message replyMsg = consumer.receive(5000)[ FD ]
Line_8 $$ QueueConnection conn = null-->Line_13 $$ conn = qcf.createQueueConnection("guest", "guest")[ FD ]
Line_6 $$ MessageProducer producer = null-->Line_34 $$ producer.close()[ FD ]
Line_17 $$ TextMessage msg = session.createTextMessage("Hello world")-->Line_18 $$ msg.setJMSDeliveryMode(DeliveryMode.NON_PERSISTENT)[ FD ]
Line_2 $$ public void testMDBLifecycle() throws Exception -->Line_5 $$ ITestResultsSingleton results = this.getResultsSingleton()[ CD ]
Line_9 $$ Session session = null-->Line_22 $$ consumer = session.createConsumer(replyQueue)[ FD ]
Line_9 $$ Session session = null-->Line_36 $$ if (session != null) [ FD ]
Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)-->Line_22 $$ consumer = session.createConsumer(replyQueue)[ FD ]
Line_8 $$ QueueConnection conn = null-->Line_40 $$ conn.close()[ FD ]
Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)-->Line_20 $$ producer = session.createProducer(queue)[ FD ]
Line_30 $$ if (consumer != null) -->Line_31 $$ consumer.close()[ CD ]
Line_39 $$ if (conn != null) -->Line_40 $$ conn.close()[ CD ]
Line_9 $$ Session session = null-->Line_17 $$ TextMessage msg = session.createTextMessage("Hello world")[ FD ]
Line_20 $$ producer = session.createProducer(queue)-->Line_34 $$ producer.close()[ FD ]
Line_8 $$ QueueConnection conn = null-->Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)[ FD ]
Line_2 $$ public void testMDBLifecycle() throws Exception -->Line_9 $$ Session session = null[ CD ]
Line_2 $$ public void testMDBLifecycle() throws Exception -->Line_3 $$ deployer.deploy("mdb")[ CD ]
Line_2 $$ public void testMDBLifecycle() throws Exception -->Line_4 $$ SecurityClient client = this.login()[ CD ]
Line_2 $$ public void testMDBLifecycle() throws Exception -->Line_6 $$ MessageProducer producer = null[ CD ]
Line_16 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()-->Line_22 $$ consumer = session.createConsumer(replyQueue)[ FD ]
Line_5 $$ ITestResultsSingleton results = this.getResultsSingleton()-->Line_26 $$ Assert.assertEquals(OK + "start", results.getMdb("postconstruct"))[ FD ]
Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)-->Line_37 $$ session.close()[ FD ]
Line_4 $$ SecurityClient client = this.login()-->Line_42 $$ client.logout()[ FD ]
Line_7 $$ MessageConsumer consumer = null-->Line_30 $$ if (consumer != null) [ FD ]
Line_9 $$ Session session = null-->Line_15 $$ session = conn.createQueueSession(false, QueueSession.AUTO_ACKNOWLEDGE)[ FD ]
Line_7 $$ MessageConsumer consumer = null-->Line_31 $$ consumer.close()[ FD ]
Line_13 $$ conn = qcf.createQueueConnection("guest", "guest")-->Line_14 $$ conn.start()[ FD ]
Line_5 $$ ITestResultsSingleton results = this.getResultsSingleton()-->Line_28 $$ Assert.assertEquals(OK + "stop", results.getMdb("predestroy"))[ FD ]
Line_20 $$ producer = session.createProducer(queue)-->Line_33 $$ if (producer != null) [ FD ]
Line_2 $$ public void testMDBLifecycle() throws Exception -->Line_8 $$ QueueConnection conn = null[ CD ]
Line_9 $$ Session session = null-->Line_16 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()[ FD ]
Line_11 $$ QueueConnectionFactory qcf = (QueueConnectionFactory) new InitialContext().lookup("java:/ConnectionFactory")-->Line_13 $$ conn = qcf.createQueueConnection("guest", "guest")[ FD ]
