Line_9 $$ connection = cf.createConnection("guest", "guest")-->Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)[ FD ]
Line_13 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()-->Line_18 $$ MessageConsumer consumer = session.createConsumer(replyQueue)[ FD ]
Line_4 $$ Connection connection = null-->Line_9 $$ connection = cf.createConnection("guest", "guest")[ FD ]
Line_8 $$ Queue queue = (Queue) initialContext.lookup(QUEUE_NAME)-->Line_12 $$ MessageProducer sender = session.createProducer(queue)[ FD ]
Line_5 $$ Session session = null-->Line_25 $$ if (session != null) [ FD ]
Line_9 $$ connection = cf.createConnection("guest", "guest")-->Line_28 $$ closeConnection(connection)[ FD ]
Line_5 $$ Session session = null-->Line_12 $$ MessageProducer sender = session.createProducer(queue)[ FD ]
Line_22 $$ String actual = ((TextMessage) replyMsg).getText()-->Line_23 $$ Assert.assertEquals("Howdy Fred! GoodBye user1", actual)[ FD ]
Line_12 $$ MessageProducer sender = session.createProducer(queue)-->Line_16 $$ sender.send(message)[ FD ]
Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_25 $$ if (session != null) [ FD ]
Line_25 $$ if (session != null) -->Line_26 $$ session.close()[ CD ]
Line_2 $$ public void testSendMessage() throws Exception -->Line_5 $$ Session session = null[ CD ]
Line_7 $$ cf = (ConnectionFactory) initialContext.lookup("jms/RemoteConnectionFactory")-->Line_9 $$ connection = cf.createConnection("guest", "guest")[ FD ]
Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_12 $$ MessageProducer sender = session.createProducer(queue)[ FD ]
Line_5 $$ Session session = null-->Line_18 $$ MessageConsumer consumer = session.createConsumer(replyQueue)[ FD ]
Line_4 $$ Connection connection = null-->Line_28 $$ closeConnection(connection)[ FD ]
Line_3 $$ ConnectionFactory cf = null-->Line_9 $$ connection = cf.createConnection("guest", "guest")[ FD ]
Line_14 $$ TextMessage message = session.createTextMessage("hello goodbye")-->Line_15 $$ message.setJMSReplyTo(replyQueue)[ FD ]
Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_26 $$ session.close()[ FD ]
Line_19 $$ Message replyMsg = consumer.receive(5000)-->Line_20 $$ Assert.assertNotNull(replyMsg)[ FD ]
Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_13 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()[ FD ]
Line_5 $$ Session session = null-->Line_14 $$ TextMessage message = session.createTextMessage("hello goodbye")[ FD ]
Line_18 $$ MessageConsumer consumer = session.createConsumer(replyQueue)-->Line_19 $$ Message replyMsg = consumer.receive(5000)[ FD ]
Line_2 $$ public void testSendMessage() throws Exception -->Line_4 $$ Connection connection = null[ CD ]
Line_4 $$ Connection connection = null-->Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)[ FD ]
Line_2 $$ public void testSendMessage() throws Exception -->Line_3 $$ ConnectionFactory cf = null[ CD ]
Line_5 $$ Session session = null-->Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)[ FD ]
Line_13 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()-->Line_15 $$ message.setJMSReplyTo(replyQueue)[ FD ]
Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_14 $$ TextMessage message = session.createTextMessage("hello goodbye")[ FD ]
Line_9 $$ connection = cf.createConnection("guest", "guest")-->Line_10 $$ connection.start()[ FD ]
Line_5 $$ Session session = null-->Line_26 $$ session.close()[ FD ]
Line_5 $$ Session session = null-->Line_13 $$ TemporaryQueue replyQueue = session.createTemporaryQueue()[ FD ]
Line_14 $$ TextMessage message = session.createTextMessage("hello goodbye")-->Line_16 $$ sender.send(message)[ FD ]
Line_11 $$ session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_18 $$ MessageConsumer consumer = session.createConsumer(replyQueue)[ FD ]
Line_3 $$ ConnectionFactory cf = null-->Line_7 $$ cf = (ConnectionFactory) initialContext.lookup("jms/RemoteConnectionFactory")[ FD ]
Line_4 $$ Connection connection = null-->Line_10 $$ connection.start()[ FD ]
