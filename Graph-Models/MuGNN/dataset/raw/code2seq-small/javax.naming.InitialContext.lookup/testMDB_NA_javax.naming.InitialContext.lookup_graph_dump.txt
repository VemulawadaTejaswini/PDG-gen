Line_19 $$ final String result = ((TextMessage) reply).getText()-->Line_20 $$ assertEquals("Unexpected reply messsage", Constants.REPLY_MESSAGE_PREFIX + requestMessage, result)[ FD ]
Line_10 $$ final Message message = session.createTextMessage(requestMessage)-->Line_11 $$ message.setJMSReplyTo(replyDestination)[ FD ]
Line_8 $$ final Queue replyDestination = session.createTemporaryQueue()-->Line_16 $$ final QueueReceiver receiver = session.createReceiver(replyDestination)[ FD ]
Line_7 $$ final QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_13 $$ final MessageProducer producer = session.createProducer(destination)[ FD ]
Line_7 $$ final QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_10 $$ final Message message = session.createTextMessage(requestMessage)[ FD ]
Line_13 $$ final MessageProducer producer = session.createProducer(destination)-->Line_14 $$ producer.send(message)[ FD ]
Line_7 $$ final QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_16 $$ final QueueReceiver receiver = session.createReceiver(replyDestination)[ FD ]
Line_22 $$ if (connection != null) -->Line_23 $$ safeClose(connection)[ CD ]
Line_4 $$ final QueueConnection connection = factory.createQueueConnection("guest", "guest")-->Line_23 $$ safeClose(connection)[ FD ]
Line_4 $$ final QueueConnection connection = factory.createQueueConnection("guest", "guest")-->Line_6 $$ connection.start()[ FD ]
Line_4 $$ final QueueConnection connection = factory.createQueueConnection("guest", "guest")-->Line_22 $$ if (connection != null) [ FD ]
Line_10 $$ final Message message = session.createTextMessage(requestMessage)-->Line_14 $$ producer.send(message)[ FD ]
Line_3 $$ final QueueConnectionFactory factory = (QueueConnectionFactory) context.lookup("java:/jms/RemoteConnectionFactory")-->Line_4 $$ final QueueConnection connection = factory.createQueueConnection("guest", "guest")[ FD ]
Line_12 $$ final Destination destination = (Destination) context.lookup(Constants.QUEUE_JNDI_NAME)-->Line_13 $$ final MessageProducer producer = session.createProducer(destination)[ FD ]
Line_4 $$ final QueueConnection connection = factory.createQueueConnection("guest", "guest")-->Line_7 $$ final QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE)[ FD ]
Line_17 $$ final Message reply = receiver.receive(TimeoutUtil.adjust(1000))-->Line_18 $$ assertNotNull("Did not receive a reply on the reply queue. Perhaps the original (request) message didn't make it to the MDB?", reply)[ FD ]
Line_9 $$ final String requestMessage = "test"-->Line_10 $$ final Message message = session.createTextMessage(requestMessage)[ FD ]
Line_2 $$ public void testMDB() throws Exception -->Line_4 $$ final QueueConnection connection = factory.createQueueConnection("guest", "guest")[ CD ]
Line_2 $$ public void testMDB() throws Exception -->Line_3 $$ final QueueConnectionFactory factory = (QueueConnectionFactory) context.lookup("java:/jms/RemoteConnectionFactory")[ CD ]
Line_13 $$ final MessageProducer producer = session.createProducer(destination)-->Line_15 $$ producer.close()[ FD ]
Line_7 $$ final QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE)-->Line_8 $$ final Queue replyDestination = session.createTemporaryQueue()[ FD ]
Line_16 $$ final QueueReceiver receiver = session.createReceiver(replyDestination)-->Line_17 $$ final Message reply = receiver.receive(TimeoutUtil.adjust(1000))[ FD ]
Line_8 $$ final Queue replyDestination = session.createTemporaryQueue()-->Line_11 $$ message.setJMSReplyTo(replyDestination)[ FD ]
