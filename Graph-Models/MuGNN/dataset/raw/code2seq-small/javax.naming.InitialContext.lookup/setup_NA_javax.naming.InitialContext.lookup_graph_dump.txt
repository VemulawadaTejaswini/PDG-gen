Line_11 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))-->Line_12 $$ ctx = manager.createCreationalContext(requestContextBean)[ FD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_12 $$ ctx = manager.createCreationalContext(requestContextBean)[ FD ]
Line_12 $$ ctx = manager.createCreationalContext(requestContextBean)-->Line_17 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_17 $$ ctx = manager.createCreationalContext(conversationContextBean)-->Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_21 $$ conversationContext.associate(request)[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ CD ]
Line_13 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)-->Line_14 $$ requestContext.associate(requestContexts.get())[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_9 $$ sessionContext.associate(sessionContexts.get())[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)[ CD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_17 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_12 $$ ctx = manager.createCreationalContext(requestContextBean)-->Line_13 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_14 $$ requestContext.associate(requestContexts.get())[ CD ]
Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))-->Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_15 $$ requestContext.activate()[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_13 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ CD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_13 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_17 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))-->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ FD ]
Line_13 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)-->Line_15 $$ requestContext.activate()[ FD ]
Line_11 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))-->Line_13 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_16 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))[ CD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))[ FD ]
Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)-->Line_21 $$ conversationContext.associate(request)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_22 $$ conversationContext.activate()[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_11 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))[ CD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)[ FD ]
Line_12 $$ ctx = manager.createCreationalContext(requestContextBean)-->Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_19 $$ BoundRequest request = new MutableBoundRequest(requestContexts.get(), sessionContexts.get())[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_17 $$ ctx = manager.createCreationalContext(conversationContextBean)[ CD ]
Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)-->Line_9 $$ sessionContext.associate(sessionContexts.get())[ FD ]
Line_19 $$ BoundRequest request = new MutableBoundRequest(requestContexts.get(), sessionContexts.get())-->Line_21 $$ conversationContext.associate(request)[ FD ]
Line_16 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))-->Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_13 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_10 $$ sessionContext.activate()[ CD ]
Line_19 $$ BoundRequest request = new MutableBoundRequest(requestContexts.get(), sessionContexts.get())-->Line_20 $$ boundRequests.set(request)[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_11 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))[ FD ]
Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)-->Line_10 $$ sessionContext.activate()[ FD ]
Line_16 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))-->Line_17 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_12 $$ ctx = manager.createCreationalContext(requestContextBean)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_20 $$ boundRequests.set(request)[ CD ]
Line_18 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)-->Line_22 $$ conversationContext.activate()[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup(STANDARD_BEAN_MANAGER_JNDI_NAME)-->Line_16 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_12 $$ ctx = manager.createCreationalContext(requestContextBean)[ CD ]
