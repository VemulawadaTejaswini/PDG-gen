Line_7 $$ MBeanServerConnection mconn = (MBeanServerConnection) jndiContext.lookup(MBEAN_SERVER_CONNECTION_JNDI_NAME)-->Line_9 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)[ FD ]
Line_2 $$ public static WorkManager getWorkManager(String mbeanName) -->Line_8 $$ ObjectName objectName = ObjectName.getInstance(mbeanName)[ FD ]
Line_10 $$ Method getInstanceMethod = workManagerMBean.getClass().getMethod("getInstance")-->Line_11 $$ return (WorkManager) getInstanceMethod.invoke(workManagerMBean)[ FD ]
Line_9 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)-->Line_11 $$ return (WorkManager) getInstanceMethod.invoke(workManagerMBean)[ FD ]
Line_9 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)-->Line_10 $$ Method getInstanceMethod = workManagerMBean.getClass().getMethod("getInstance")[ FD ]
Line_2 $$ public static WorkManager getWorkManager(String mbeanName) -->Line_3 $$ Assert.hasLength(mbeanName, "JBossWorkManagerMBean name must not be empty")[ FD ]
Line_5 $$ Class<?> mbeanClass = JBossWorkManagerUtils.class.getClassLoader().loadClass(JBOSS_WORK_MANAGER_MBEAN_CLASS_NAME)-->Line_9 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)[ FD ]
Line_6 $$ InitialContext jndiContext = new InitialContext()-->Line_7 $$ MBeanServerConnection mconn = (MBeanServerConnection) jndiContext.lookup(MBEAN_SERVER_CONNECTION_JNDI_NAME)[ FD ]
Line_2 $$ public static WorkManager getWorkManager(String mbeanName) -->Line_3 $$ Assert.hasLength(mbeanName, "JBossWorkManagerMBean name must not be empty")[ CD ]
Line_8 $$ ObjectName objectName = ObjectName.getInstance(mbeanName)-->Line_9 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)[ FD ]
