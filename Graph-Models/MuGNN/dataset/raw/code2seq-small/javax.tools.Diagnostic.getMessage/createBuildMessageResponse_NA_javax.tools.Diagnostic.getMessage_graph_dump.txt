Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_15 $$ msgBuilder.setLine(diagnostic.getLineNumber())[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_15 $$ msgBuilder.setLine(diagnostic.getLineNumber())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_18 $$ msgBuilder.setProblemEndOffset(diagnostic.getEndPosition())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_19 $$ msgBuilder.setProblemLocationOffset(diagnostic.getPosition())[ CD ]
Line_20 $$ final JavacRemoteProto.Message.Response.Builder builder = JavacRemoteProto.Message.Response.newBuilder()-->Line_22 $$ return builder.build()[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_12 $$ if (srcUri != null) [ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_6 $$ final JavaFileObject source = diagnostic.getSource()[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_4 $$ msgBuilder.setKind(convertKind(diagnostic.getKind()))[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_16 $$ msgBuilder.setColumn(diagnostic.getColumnNumber())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_4 $$ msgBuilder.setKind(convertKind(diagnostic.getKind()))[ FD ]
Line_7 $$ URI srcUri = null-->Line_9 $$ srcUri = source != null ? source.toUri() : null[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_18 $$ msgBuilder.setProblemEndOffset(diagnostic.getEndPosition())[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_20 $$ final JavacRemoteProto.Message.Response.Builder builder = JavacRemoteProto.Message.Response.newBuilder()[ CD ]
Line_7 $$ URI srcUri = null-->Line_12 $$ if (srcUri != null) [ FD ]
Line_20 $$ final JavacRemoteProto.Message.Response.Builder builder = JavacRemoteProto.Message.Response.newBuilder()-->Line_21 $$ builder.setResponseType(JavacRemoteProto.Message.Response.Type.BUILD_MESSAGE).setCompileMessage(msgBuilder.build())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_5 $$ msgBuilder.setText(diagnostic.getMessage(Locale.US))[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_18 $$ msgBuilder.setProblemEndOffset(diagnostic.getEndPosition())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_19 $$ msgBuilder.setProblemLocationOffset(diagnostic.getPosition())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_16 $$ msgBuilder.setColumn(diagnostic.getColumnNumber())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_5 $$ msgBuilder.setText(diagnostic.getMessage(Locale.US))[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_4 $$ msgBuilder.setKind(convertKind(diagnostic.getKind()))[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_5 $$ msgBuilder.setText(diagnostic.getMessage(Locale.US))[ FD ]
Line_7 $$ URI srcUri = null-->Line_13 $$ msgBuilder.setSourceUri(srcUri.toString())[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_19 $$ msgBuilder.setProblemLocationOffset(diagnostic.getPosition())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_21 $$ builder.setResponseType(JavacRemoteProto.Message.Response.Type.BUILD_MESSAGE).setCompileMessage(msgBuilder.build())[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_17 $$ msgBuilder.setProblemBeginOffset(diagnostic.getStartPosition())[ FD ]
Line_9 $$ srcUri = source != null ? source.toUri() : null-->Line_13 $$ msgBuilder.setSourceUri(srcUri.toString())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_7 $$ URI srcUri = null[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_17 $$ msgBuilder.setProblemBeginOffset(diagnostic.getStartPosition())[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_15 $$ msgBuilder.setLine(diagnostic.getLineNumber())[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_21 $$ builder.setResponseType(JavacRemoteProto.Message.Response.Type.BUILD_MESSAGE).setCompileMessage(msgBuilder.build())[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.CompileMessage.Builder msgBuilder = JavacRemoteProto.Message.Response.CompileMessage.newBuilder()-->Line_13 $$ msgBuilder.setSourceUri(srcUri.toString())[ FD ]
Line_6 $$ final JavaFileObject source = diagnostic.getSource()-->Line_9 $$ srcUri = source != null ? source.toUri() : null[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_16 $$ msgBuilder.setColumn(diagnostic.getColumnNumber())[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_22 $$ return builder.build()[ CD ]
Line_12 $$ if (srcUri != null) -->Line_13 $$ msgBuilder.setSourceUri(srcUri.toString())[ CD ]
Line_9 $$ srcUri = source != null ? source.toUri() : null-->Line_12 $$ if (srcUri != null) [ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_6 $$ final JavaFileObject source = diagnostic.getSource()[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createBuildMessageResponse(Diagnostic<? extends JavaFileObject> diagnostic) -->Line_17 $$ msgBuilder.setProblemBeginOffset(diagnostic.getStartPosition())[ CD ]
