Line_87 $$ if (ReflectionUtil.isAssignable(JDOMExternalizable.class, type)) -->Line_89 $$ if (!children.isEmpty()) [ CD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_17 $$ field.setAccessible(true)[ FD ]
Line_13 $$ Class type = field.getType()-->Line_70 $$ if (type.equals(boolean.class)) [ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_83 $$ field.set(data, value)[ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_83 $$ field.set(data, value)[ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_34 $$ field.setByte(data, Byte.parseByte(value))[ FD ]
Line_7 $$ String fieldName = e.getAttributeValue("name")-->Line_12 $$ Field field = data.getClass().getField(fieldName)[ FD ]
Line_44 $$ if (type.equals(int.class)) -->Line_45 $$ int i = toInt(value)[ CD ]
Line_70 $$ if (type.equals(boolean.class)) -->Line_71 $$ if (value.equals("true")) [ CD ]
Line_30 $$ if (type.isPrimitive()) -->Line_31 $$ if (value != null) [ CD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_49 $$ field.setLong(data, Long.parseLong(value))[ FD ]
Line_21 $$ final List children = e.getChildren("value")-->Line_89 $$ if (!children.isEmpty()) [ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_61 $$ field.setDouble(data, Double.parseDouble(value))[ FD ]
Line_44 $$ if (type.equals(int.class)) -->Line_47 $$ if (type.equals(long.class)) [ CD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_46 $$ field.setInt(data, i)[ FD ]
Line_93 $$ object = (JDOMExternalizable) type.newInstance()-->Line_94 $$ object.readExternal(el)[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_69 $$ field.setChar(data, value.charAt(0))[ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_69 $$ field.setChar(data, value.charAt(0))[ FD ]
Line_71 $$ if (value.equals("true")) -->Line_72 $$ field.setBoolean(data, true)[ CD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_46 $$ field.setInt(data, i)[ FD ]
Line_13 $$ Class type = field.getType()-->Line_47 $$ if (type.equals(long.class)) [ FD ]
Line_82 $$ if (type.equals(String.class)) -->Line_84 $$ if (type.equals(Color.class)) [ CD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_61 $$ field.setDouble(data, Double.parseDouble(value))[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_96 $$ field.set(data, object)[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_19 $$ Object value = field.get(data)[ FD ]
Line_13 $$ Class type = field.getType()-->Line_59 $$ if (type.equals(double.class)) [ FD ]
Line_13 $$ Class type = field.getType()-->Line_53 $$ if (type.equals(float.class)) [ FD ]
Line_13 $$ Class type = field.getType()-->Line_84 $$ if (type.equals(Color.class)) [ FD ]
Line_13 $$ Class type = field.getType()-->Line_44 $$ if (type.equals(int.class)) [ FD ]
Line_87 $$ if (ReflectionUtil.isAssignable(JDOMExternalizable.class, type)) -->Line_88 $$ final List children = e.getChildren("value")[ CD ]
Line_65 $$ if (type.equals(char.class)) -->Line_66 $$ if (value.length() != 1) [ CD ]
Line_89 $$ if (!children.isEmpty()) -->Line_90 $$ JDOMExternalizable object = null[ CD ]
Line_19 $$ Object value = field.get(data)-->Line_66 $$ if (value.length() != 1) [ FD ]
Line_84 $$ if (type.equals(Color.class)) -->Line_87 $$ if (ReflectionUtil.isAssignable(JDOMExternalizable.class, type)) [ CD ]
Line_6 $$ Element e = (Element) o-->Line_21 $$ final List children = e.getChildren("value")[ FD ]
Line_13 $$ Class type = field.getType()-->Line_87 $$ if (ReflectionUtil.isAssignable(JDOMExternalizable.class, type)) [ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_74 $$ field.setBoolean(data, false)[ FD ]
Line_18 $$ if ((modifiers & Modifier.FINAL) != 0) -->Line_20 $$ if (JDOMExternalizable.class.isInstance(value)) [ CD ]
Line_13 $$ Class type = field.getType()-->Line_82 $$ if (type.equals(String.class)) [ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_19 $$ Object value = field.get(data)[ FD ]
Line_19 $$ Object value = field.get(data)-->Line_61 $$ field.setDouble(data, Double.parseDouble(value))[ FD ]
Line_3 $$ if (parentNode == null)-->Line_4 $$ return[ CD ]
Line_47 $$ if (type.equals(long.class)) -->Line_53 $$ if (type.equals(float.class)) [ CD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_74 $$ field.setBoolean(data, false)[ FD ]
Line_44 $$ if (type.equals(int.class)) -->Line_46 $$ field.setInt(data, i)[ CD ]
Line_13 $$ Class type = field.getType()-->Line_65 $$ if (type.equals(char.class)) [ FD ]
Line_65 $$ if (type.equals(char.class)) -->Line_70 $$ if (type.equals(boolean.class)) [ CD ]
Line_93 $$ object = (JDOMExternalizable) type.newInstance()-->Line_96 $$ field.set(data, object)[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_40 $$ field.setShort(data, Short.parseShort(value))[ FD ]
Line_85 $$ Color color = toColor(value)-->Line_86 $$ field.set(data, color)[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_86 $$ field.set(data, color)[ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_72 $$ field.setBoolean(data, true)[ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_40 $$ field.setShort(data, Short.parseShort(value))[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_55 $$ field.setFloat(data, Float.parseFloat(value))[ FD ]
Line_82 $$ if (type.equals(String.class)) -->Line_83 $$ field.set(data, value)[ CD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_49 $$ field.setLong(data, Long.parseLong(value))[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_34 $$ field.setByte(data, Byte.parseByte(value))[ FD ]
Line_31 $$ if (value != null) -->Line_32 $$ if (type.equals(byte.class)) [ CD ]
Line_6 $$ Element e = (Element) o-->Line_29 $$ String value = e.getAttributeValue("value")[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_72 $$ field.setBoolean(data, true)[ FD ]
Line_92 $$ Element el = (Element) o1-->Line_94 $$ object.readExternal(el)[ FD ]
Line_19 $$ Object value = field.get(data)-->Line_71 $$ if (value.equals("true")) [ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_96 $$ field.set(data, object)[ FD ]
Line_89 $$ if (!children.isEmpty()) -->Line_96 $$ field.set(data, object)[ CD ]
Line_19 $$ Object value = field.get(data)-->Line_20 $$ if (JDOMExternalizable.class.isInstance(value)) [ FD ]
Line_7 $$ String fieldName = e.getAttributeValue("name")-->Line_8 $$ if (fieldName == null) [ FD ]
Line_59 $$ if (type.equals(double.class)) -->Line_65 $$ if (type.equals(char.class)) [ CD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_14 $$ int modifiers = field.getModifiers()[ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_13 $$ Class type = field.getType()[ FD ]
Line_19 $$ Object value = field.get(data)-->Line_45 $$ int i = toInt(value)[ FD ]
Line_19 $$ Object value = field.get(data)-->Line_69 $$ field.setChar(data, value.charAt(0))[ FD ]
Line_13 $$ Class type = field.getType()-->Line_32 $$ if (type.equals(byte.class)) [ FD ]
Line_19 $$ Object value = field.get(data)-->Line_83 $$ field.set(data, value)[ FD ]
Line_13 $$ Class type = field.getType()-->Line_93 $$ object = (JDOMExternalizable) type.newInstance()[ FD ]
Line_6 $$ Element e = (Element) o-->Line_88 $$ final List children = e.getChildren("value")[ FD ]
Line_90 $$ JDOMExternalizable object = null-->Line_93 $$ object = (JDOMExternalizable) type.newInstance()[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_12 $$ Field field = data.getClass().getField(fieldName)[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_3 $$ if (parentNode == null)[ CD ]
Line_13 $$ Class type = field.getType()-->Line_30 $$ if (type.isPrimitive()) [ FD ]
Line_71 $$ if (value.equals("true")) -->Line_73 $$ if (value.equals("false")) [ CD ]
Line_32 $$ if (type.equals(byte.class)) -->Line_38 $$ if (type.equals(short.class)) [ CD ]
Line_19 $$ Object value = field.get(data)-->Line_49 $$ field.setLong(data, Long.parseLong(value))[ FD ]
Line_90 $$ JDOMExternalizable object = null-->Line_96 $$ field.set(data, object)[ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_86 $$ field.set(data, color)[ FD ]
Line_73 $$ if (value.equals("false")) -->Line_74 $$ field.setBoolean(data, false)[ CD ]
Line_13 $$ Class type = field.getType()-->Line_38 $$ if (type.equals(short.class)) [ FD ]
Line_12 $$ Field field = data.getClass().getField(fieldName)-->Line_55 $$ field.setFloat(data, Float.parseFloat(value))[ FD ]
Line_6 $$ Element e = (Element) o-->Line_7 $$ String fieldName = e.getAttributeValue("name")[ FD ]
Line_19 $$ Object value = field.get(data)-->Line_73 $$ if (value.equals("false")) [ FD ]
Line_90 $$ JDOMExternalizable object = null-->Line_94 $$ object.readExternal(el)[ FD ]
Line_65 $$ if (type.equals(char.class)) -->Line_69 $$ field.setChar(data, value.charAt(0))[ CD ]
Line_19 $$ Object value = field.get(data)-->Line_85 $$ Color color = toColor(value)[ FD ]
Line_53 $$ if (type.equals(float.class)) -->Line_59 $$ if (type.equals(double.class)) [ CD ]
Line_19 $$ Object value = field.get(data)-->Line_34 $$ field.setByte(data, Byte.parseByte(value))[ FD ]
Line_18 $$ if ((modifiers & Modifier.FINAL) != 0) -->Line_19 $$ Object value = field.get(data)[ CD ]
Line_30 $$ if (type.isPrimitive()) -->Line_82 $$ if (type.equals(String.class)) [ CD ]
Line_19 $$ Object value = field.get(data)-->Line_55 $$ field.setFloat(data, Float.parseFloat(value))[ FD ]
Line_23 $$ Element valueTag = (Element) child-->Line_24 $$ ((JDOMExternalizable) value).readExternal(valueTag)[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_5 $$ for (final Object o : parentNode.getChildren("option")) [ FD ]
Line_38 $$ if (type.equals(short.class)) -->Line_44 $$ if (type.equals(int.class)) [ CD ]
Line_84 $$ if (type.equals(Color.class)) -->Line_85 $$ Color color = toColor(value)[ CD ]
Line_45 $$ int i = toInt(value)-->Line_46 $$ field.setInt(data, i)[ FD ]
Line_19 $$ Object value = field.get(data)-->Line_40 $$ field.setShort(data, Short.parseShort(value))[ FD ]
Line_2 $$ public static void readExternal(@NotNull Object data, Element parentNode) throws InvalidDataException -->Line_3 $$ if (parentNode == null)[ FD ]
Line_84 $$ if (type.equals(Color.class)) -->Line_86 $$ field.set(data, color)[ CD ]
Line_19 $$ Object value = field.get(data)-->Line_31 $$ if (value != null) [ FD ]
Line_20 $$ if (JDOMExternalizable.class.isInstance(value)) -->Line_21 $$ final List children = e.getChildren("value")[ CD ]
