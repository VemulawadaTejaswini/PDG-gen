Line_2 $$ public void testRemoveSelected() -->Line_24 $$ TreeUtil.removeSelected(tree)[ CD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_14 $$ TreeUtil.removeSelected(tree)[ FD ]
Line_5 $$ DefaultMutableTreeNode child1 = new DefaultMutableTreeNode("1")-->Line_6 $$ model.insertNodeInto(child1, root, 0)[ FD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_22 $$ tree.setSelectionPath(new TreePath(root))[ FD ]
Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode("root")-->Line_23 $$ assertEquals(1, model.getChildCount(root))[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_6 $$ model.insertNodeInto(child1, root, 0)[ CD ]
Line_9 $$ DefaultMutableTreeNode child11 = new DefaultMutableTreeNode("11")-->Line_17 $$ tree.setSelectionPath(TreeUtil.getPathFromRoot(child11))[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_17 $$ tree.setSelectionPath(TreeUtil.getPathFromRoot(child11))[ CD ]
Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode("root")-->Line_6 $$ model.insertNodeInto(child1, root, 0)[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_14 $$ TreeUtil.removeSelected(tree)[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_25 $$ assertSame(root, model.getRoot())[ CD ]
Line_9 $$ DefaultMutableTreeNode child11 = new DefaultMutableTreeNode("11")-->Line_10 $$ model.insertNodeInto(child11, child1, 0)[ FD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_26 $$ assertEquals(1, model.getChildCount(root))[ FD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_16 $$ assertEquals(1, model.getChildCount(child1))[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_15 $$ assertEquals(2, model.getChildCount(root))[ CD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_23 $$ assertEquals(1, model.getChildCount(root))[ FD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_19 $$ assertSame(child1, tree.getSelectionPath().getLastPathComponent())[ FD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_20 $$ TreeUtil.removeSelected(tree)[ FD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_6 $$ model.insertNodeInto(child1, root, 0)[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_18 $$ TreeUtil.removeSelected(tree)[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_7 $$ DefaultMutableTreeNode child2 = new DefaultMutableTreeNode("2")[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_19 $$ assertSame(child1, tree.getSelectionPath().getLastPathComponent())[ CD ]
Line_7 $$ DefaultMutableTreeNode child2 = new DefaultMutableTreeNode("2")-->Line_21 $$ assertSame(child2, tree.getSelectionPath().getLastPathComponent())[ FD ]
Line_5 $$ DefaultMutableTreeNode child1 = new DefaultMutableTreeNode("1")-->Line_19 $$ assertSame(child1, tree.getSelectionPath().getLastPathComponent())[ FD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_13 $$ tree.clearSelection()[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_12 $$ TreeExpandCollapse.expandAll(tree)[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_9 $$ DefaultMutableTreeNode child11 = new DefaultMutableTreeNode("11")[ CD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_8 $$ model.insertNodeInto(child2, root, 1)[ FD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_12 $$ TreeExpandCollapse.expandAll(tree)[ FD ]
Line_5 $$ DefaultMutableTreeNode child1 = new DefaultMutableTreeNode("1")-->Line_10 $$ model.insertNodeInto(child11, child1, 0)[ FD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_15 $$ assertEquals(2, model.getChildCount(root))[ FD ]
Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode("root")-->Line_26 $$ assertEquals(1, model.getChildCount(root))[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode("root")[ CD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_24 $$ TreeUtil.removeSelected(tree)[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_21 $$ assertSame(child2, tree.getSelectionPath().getLastPathComponent())[ CD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_21 $$ assertSame(child2, tree.getSelectionPath().getLastPathComponent())[ FD ]
Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode("root")-->Line_25 $$ assertSame(root, model.getRoot())[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_22 $$ tree.setSelectionPath(new TreePath(root))[ CD ]
Line_5 $$ DefaultMutableTreeNode child1 = new DefaultMutableTreeNode("1")-->Line_16 $$ assertEquals(1, model.getChildCount(child1))[ FD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_17 $$ tree.setSelectionPath(TreeUtil.getPathFromRoot(child11))[ FD ]
Line_11 $$ JTree tree = new Tree(model)-->Line_18 $$ TreeUtil.removeSelected(tree)[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_20 $$ TreeUtil.removeSelected(tree)[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_26 $$ assertEquals(1, model.getChildCount(root))[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_5 $$ DefaultMutableTreeNode child1 = new DefaultMutableTreeNode("1")[ CD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_25 $$ assertSame(root, model.getRoot())[ FD ]
Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode("root")-->Line_8 $$ model.insertNodeInto(child2, root, 1)[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_8 $$ model.insertNodeInto(child2, root, 1)[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_11 $$ JTree tree = new Tree(model)[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_23 $$ assertEquals(1, model.getChildCount(root))[ CD ]
Line_4 $$ DefaultTreeModel model = new DefaultTreeModel(root)-->Line_10 $$ model.insertNodeInto(child11, child1, 0)[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_13 $$ tree.clearSelection()[ CD ]
Line_2 $$ public void testRemoveSelected() -->Line_16 $$ assertEquals(1, model.getChildCount(child1))[ CD ]
Line_3 $$ DefaultMutableTreeNode root = new DefaultMutableTreeNode("root")-->Line_15 $$ assertEquals(2, model.getChildCount(root))[ FD ]
Line_2 $$ public void testRemoveSelected() -->Line_10 $$ model.insertNodeInto(child11, child1, 0)[ CD ]
Line_7 $$ DefaultMutableTreeNode child2 = new DefaultMutableTreeNode("2")-->Line_8 $$ model.insertNodeInto(child2, root, 1)[ FD ]
