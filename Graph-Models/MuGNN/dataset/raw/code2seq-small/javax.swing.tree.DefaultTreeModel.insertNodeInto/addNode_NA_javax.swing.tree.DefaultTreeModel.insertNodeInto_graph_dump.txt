Line_2 $$ protected void addNode(MyNode nodeToAdd, MyNode parent) -->Line_5 $$ ((DefaultTreeModel) myTree.getModel()).insertNodeInto(nodeToAdd, parent, insertionPoint)[ FD ]
Line_2 $$ protected void addNode(MyNode nodeToAdd, MyNode parent) -->Line_4 $$ int insertionPoint = i >= 0 ? i : -i - 1[ CD ]
Line_2 $$ protected void addNode(MyNode nodeToAdd, MyNode parent) -->Line_3 $$ int i = TreeUtil.indexedBinarySearch(parent, nodeToAdd, getNodeComparator())[ FD ]
Line_4 $$ int insertionPoint = i >= 0 ? i : -i - 1-->Line_5 $$ ((DefaultTreeModel) myTree.getModel()).insertNodeInto(nodeToAdd, parent, insertionPoint)[ FD ]
Line_2 $$ protected void addNode(MyNode nodeToAdd, MyNode parent) -->Line_5 $$ ((DefaultTreeModel) myTree.getModel()).insertNodeInto(nodeToAdd, parent, insertionPoint)[ CD ]
Line_3 $$ int i = TreeUtil.indexedBinarySearch(parent, nodeToAdd, getNodeComparator())-->Line_4 $$ int insertionPoint = i >= 0 ? i : -i - 1[ FD ]
Line_2 $$ protected void addNode(MyNode nodeToAdd, MyNode parent) -->Line_3 $$ int i = TreeUtil.indexedBinarySearch(parent, nodeToAdd, getNodeComparator())[ CD ]
