Line_2 $$ protected void read(String fileName) throws Exception -->Line_6 $$ Raster raster = expectedImage.getData()[ CD ]
Line_23 $$ if (expectedDataBuffer instanceof DataBufferByte) -->Line_26 $$ Assert.assertTrue(Arrays.deepEquals(expectedDataBufferByte.getBankData(), resultDataBufferByte.getBankData()))[ CD ]
Line_13 $$ byte[] bytes = new byte[(int) randomAccessFile.length()]-->Line_14 $$ randomAccessFile.readFully(bytes)[ FD ]
Line_25 $$ DataBufferByte resultDataBufferByte = (DataBufferByte) resultDataBuffer-->Line_26 $$ Assert.assertTrue(Arrays.deepEquals(expectedDataBufferByte.getBankData(), resultDataBufferByte.getBankData()))[ FD ]
Line_16 $$ RenderedImage resultImage = imageBag.getRenderedImage()-->Line_17 $$ Assert.assertNotNull(resultImage)[ FD ]
Line_6 $$ Raster raster = expectedImage.getData()-->Line_18 $$ raster = resultImage.getData()[ FD ]
Line_27 $$ if (expectedDataBuffer instanceof DataBufferInt) -->Line_29 $$ DataBufferInt resultDataBufferInt = (DataBufferInt) resultDataBuffer[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_9 $$ if (expectedType.equals("jpeg")) [ CD ]
Line_28 $$ DataBufferInt expectedDataBufferInt = (DataBufferInt) expectedDataBuffer-->Line_30 $$ Assert.assertTrue(Arrays.deepEquals(expectedDataBufferInt.getBankData(), resultDataBufferInt.getBankData()))[ FD ]
Line_6 $$ Raster raster = expectedImage.getData()-->Line_7 $$ DataBuffer expectedDataBuffer = raster.getDataBuffer()[ FD ]
Line_9 $$ if (expectedType.equals("jpeg")) -->Line_10 $$ expectedType = ImageTool.TYPE_JPEG[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_3 $$ File file = getFile(fileName)[ CD ]
Line_15 $$ ImageBag imageBag = ImageToolUtil.read(bytes)-->Line_16 $$ RenderedImage resultImage = imageBag.getRenderedImage()[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_23 $$ if (expectedDataBuffer instanceof DataBufferByte) [ CD ]
Line_20 $$ String resultType = imageBag.getType()-->Line_21 $$ Assert.assertTrue(StringUtil.equalsIgnoreCase(expectedType, resultType))[ FD ]
Line_15 $$ ImageBag imageBag = ImageToolUtil.read(bytes)-->Line_20 $$ String resultType = imageBag.getType()[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_14 $$ randomAccessFile.readFully(bytes)[ CD ]
Line_13 $$ byte[] bytes = new byte[(int) randomAccessFile.length()]-->Line_15 $$ ImageBag imageBag = ImageToolUtil.read(bytes)[ FD ]
Line_8 $$ String expectedType = FileUtil.getExtension(fileName)-->Line_9 $$ if (expectedType.equals("jpeg")) [ FD ]
Line_3 $$ File file = getFile(fileName)-->Line_4 $$ BufferedImage expectedImage = ImageIO.read(file)[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_7 $$ DataBuffer expectedDataBuffer = raster.getDataBuffer()[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_8 $$ String expectedType = FileUtil.getExtension(fileName)[ FD ]
Line_23 $$ if (expectedDataBuffer instanceof DataBufferByte) -->Line_25 $$ DataBufferByte resultDataBufferByte = (DataBufferByte) resultDataBuffer[ CD ]
Line_12 $$ RandomAccessFile randomAccessFile = new RandomAccessFile(file, "r")-->Line_14 $$ randomAccessFile.readFully(bytes)[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_8 $$ String expectedType = FileUtil.getExtension(fileName)[ CD ]
Line_18 $$ raster = resultImage.getData()-->Line_19 $$ DataBuffer resultDataBuffer = raster.getDataBuffer()[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_17 $$ Assert.assertNotNull(resultImage)[ CD ]
Line_7 $$ DataBuffer expectedDataBuffer = raster.getDataBuffer()-->Line_23 $$ if (expectedDataBuffer instanceof DataBufferByte) [ FD ]
Line_24 $$ DataBufferByte expectedDataBufferByte = (DataBufferByte) expectedDataBuffer-->Line_26 $$ Assert.assertTrue(Arrays.deepEquals(expectedDataBufferByte.getBankData(), resultDataBufferByte.getBankData()))[ FD ]
Line_29 $$ DataBufferInt resultDataBufferInt = (DataBufferInt) resultDataBuffer-->Line_30 $$ Assert.assertTrue(Arrays.deepEquals(expectedDataBufferInt.getBankData(), resultDataBufferInt.getBankData()))[ FD ]
Line_27 $$ if (expectedDataBuffer instanceof DataBufferInt) -->Line_30 $$ Assert.assertTrue(Arrays.deepEquals(expectedDataBufferInt.getBankData(), resultDataBufferInt.getBankData()))[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_13 $$ byte[] bytes = new byte[(int) randomAccessFile.length()][ CD ]
Line_8 $$ String expectedType = FileUtil.getExtension(fileName)-->Line_21 $$ Assert.assertTrue(StringUtil.equalsIgnoreCase(expectedType, resultType))[ FD ]
Line_23 $$ if (expectedDataBuffer instanceof DataBufferByte) -->Line_24 $$ DataBufferByte expectedDataBufferByte = (DataBufferByte) expectedDataBuffer[ CD ]
Line_4 $$ BufferedImage expectedImage = ImageIO.read(file)-->Line_5 $$ Assert.assertNotNull(expectedImage)[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_4 $$ BufferedImage expectedImage = ImageIO.read(file)[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_12 $$ RandomAccessFile randomAccessFile = new RandomAccessFile(file, "r")[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_16 $$ RenderedImage resultImage = imageBag.getRenderedImage()[ CD ]
Line_23 $$ if (expectedDataBuffer instanceof DataBufferByte) -->Line_27 $$ if (expectedDataBuffer instanceof DataBufferInt) [ CD ]
Line_7 $$ DataBuffer expectedDataBuffer = raster.getDataBuffer()-->Line_27 $$ if (expectedDataBuffer instanceof DataBufferInt) [ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_3 $$ File file = getFile(fileName)[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_5 $$ Assert.assertNotNull(expectedImage)[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_21 $$ Assert.assertTrue(StringUtil.equalsIgnoreCase(expectedType, resultType))[ CD ]
Line_16 $$ RenderedImage resultImage = imageBag.getRenderedImage()-->Line_18 $$ raster = resultImage.getData()[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_15 $$ ImageBag imageBag = ImageToolUtil.read(bytes)[ CD ]
Line_4 $$ BufferedImage expectedImage = ImageIO.read(file)-->Line_6 $$ Raster raster = expectedImage.getData()[ FD ]
Line_6 $$ Raster raster = expectedImage.getData()-->Line_19 $$ DataBuffer resultDataBuffer = raster.getDataBuffer()[ FD ]
Line_8 $$ String expectedType = FileUtil.getExtension(fileName)-->Line_10 $$ expectedType = ImageTool.TYPE_JPEG[ FD ]
Line_12 $$ RandomAccessFile randomAccessFile = new RandomAccessFile(file, "r")-->Line_13 $$ byte[] bytes = new byte[(int) randomAccessFile.length()][ FD ]
Line_27 $$ if (expectedDataBuffer instanceof DataBufferInt) -->Line_28 $$ DataBufferInt expectedDataBufferInt = (DataBufferInt) expectedDataBuffer[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_19 $$ DataBuffer resultDataBuffer = raster.getDataBuffer()[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_18 $$ raster = resultImage.getData()[ CD ]
Line_10 $$ expectedType = ImageTool.TYPE_JPEG-->Line_21 $$ Assert.assertTrue(StringUtil.equalsIgnoreCase(expectedType, resultType))[ FD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_20 $$ String resultType = imageBag.getType()[ CD ]
Line_2 $$ protected void read(String fileName) throws Exception -->Line_22 $$ Assert.assertTrue(expectedDataBuffer instanceof DataBufferByte || expectedDataBuffer instanceof DataBufferInt)[ CD ]
