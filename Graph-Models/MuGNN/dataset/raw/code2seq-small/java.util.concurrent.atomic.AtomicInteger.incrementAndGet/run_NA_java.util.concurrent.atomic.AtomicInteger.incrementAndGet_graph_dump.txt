Line_10 $$ String curName = names[randomInt(names.length - 1)]-->Line_20 $$ connectionLock.release(curName)[ FD ]
Line_23 $$ AtomicInteger value = safeCounter.putIfAbsent(curName, atomicInteger)-->Line_24 $$ if (value == null) [ FD ]
Line_10 $$ String curName = names[randomInt(names.length - 1)]-->Line_15 $$ counter.put(curName, 1)[ FD ]
Line_9 $$ for (int i = 0; i < numRuns; i++) -->Line_24 $$ if (value == null) [ CD ]
Line_9 $$ for (int i = 0; i < numRuns; i++) -->Line_22 $$ AtomicInteger atomicInteger = new AtomicInteger(0)[ CD ]
Line_14 $$ if (integer == null) -->Line_17 $$ counter.put(curName, integer.intValue() + 1)[ CD ]
Line_10 $$ String curName = names[randomInt(names.length - 1)]-->Line_23 $$ AtomicInteger value = safeCounter.putIfAbsent(curName, atomicInteger)[ FD ]
Line_23 $$ AtomicInteger value = safeCounter.putIfAbsent(curName, atomicInteger)-->Line_27 $$ value.incrementAndGet()[ FD ]
Line_13 $$ Integer integer = counter.get(curName)-->Line_17 $$ counter.put(curName, integer.intValue() + 1)[ FD ]
Line_10 $$ String curName = names[randomInt(names.length - 1)]-->Line_17 $$ counter.put(curName, integer.intValue() + 1)[ FD ]
Line_22 $$ AtomicInteger atomicInteger = new AtomicInteger(0)-->Line_23 $$ AtomicInteger value = safeCounter.putIfAbsent(curName, atomicInteger)[ FD ]
Line_8 $$ int numRuns = scaledRandomIntBetween(5000, 50000)-->Line_9 $$ for (int i = 0; i < numRuns; i++) [ FD ]
Line_2 $$ public void run() -->Line_8 $$ int numRuns = scaledRandomIntBetween(5000, 50000)[ CD ]
Line_24 $$ if (value == null) -->Line_25 $$ atomicInteger.incrementAndGet()[ CD ]
Line_22 $$ AtomicInteger atomicInteger = new AtomicInteger(0)-->Line_25 $$ atomicInteger.incrementAndGet()[ FD ]
Line_24 $$ if (value == null) -->Line_27 $$ value.incrementAndGet()[ CD ]
Line_2 $$ public void run() -->Line_9 $$ for (int i = 0; i < numRuns; i++) [ CD ]
Line_9 $$ for (int i = 0; i < numRuns; i++) -->Line_11 $$ connectionLock.acquire(curName)[ CD ]
Line_9 $$ for (int i = 0; i < numRuns; i++) -->Line_10 $$ String curName = names[randomInt(names.length - 1)][ CD ]
Line_9 $$ for (int i = 0; i < numRuns; i++) -->Line_23 $$ AtomicInteger value = safeCounter.putIfAbsent(curName, atomicInteger)[ CD ]
Line_13 $$ Integer integer = counter.get(curName)-->Line_14 $$ if (integer == null) [ FD ]
Line_14 $$ if (integer == null) -->Line_15 $$ counter.put(curName, 1)[ CD ]
Line_10 $$ String curName = names[randomInt(names.length - 1)]-->Line_13 $$ Integer integer = counter.get(curName)[ FD ]
Line_10 $$ String curName = names[randomInt(names.length - 1)]-->Line_11 $$ connectionLock.acquire(curName)[ FD ]
