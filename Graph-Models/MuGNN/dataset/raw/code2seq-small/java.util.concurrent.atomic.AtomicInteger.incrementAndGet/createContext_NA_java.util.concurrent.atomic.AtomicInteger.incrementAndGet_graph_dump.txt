Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_46 $$ if (!useProxy) [ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_10 $$ newEnvironment.remove(LOOKUP_BY_STRING)[ CD ]
Line_11 $$ ClassLoader loader-->Line_13 $$ loader = getClass().getClassLoader()[ FD ]
Line_6 $$ final Hashtable<?, ?> newEnvironment = new Hashtable(environment)-->Line_35 $$ loadedContext = (Context) ctor.newInstance(newEnvironment)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_5 $$ final boolean useStringLokup = useStringLookup(environment)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_3 $$ String initialContextClassName = (String) environment.get(INITIAL_CONTEXT_CLASS)[ CD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_46 $$ if (!useProxy) [ CD ]
Line_11 $$ ClassLoader loader-->Line_15 $$ loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() [ FD ]
Line_3 $$ String initialContextClassName = (String) environment.get(INITIAL_CONTEXT_CLASS)-->Line_24 $$ initialContextClass = Class.forName(initialContextClassName)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_9 $$ newEnvironment.remove(INITIAL_CONTEXT_MODULE)[ CD ]
Line_6 $$ final Hashtable<?, ?> newEnvironment = new Hashtable(environment)-->Line_10 $$ newEnvironment.remove(LOOKUP_BY_STRING)[ FD ]
Line_6 $$ final Hashtable<?, ?> newEnvironment = new Hashtable(environment)-->Line_26 $$ loadedContext = (Context) ctor.newInstance(newEnvironment)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_7 $$ newEnvironment.remove(CACHE_CONTEXT)[ CD ]
Line_12 $$ if (!WildFlySecurityManager.isChecking()) -->Line_13 $$ loader = getClass().getClassLoader()[ CD ]
Line_46 $$ if (!useProxy) -->Line_47 $$ return context[ CD ]
Line_13 $$ loader = getClass().getClassLoader()-->Line_15 $$ loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() [ FD ]
Line_23 $$ if (initialContextModule == null) -->Line_24 $$ initialContextClass = Class.forName(initialContextClassName)[ CD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_12 $$ if (!WildFlySecurityManager.isChecking()) [ CD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_6 $$ final Hashtable<?, ?> newEnvironment = new Hashtable(environment)[ CD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_11 $$ ClassLoader loader[ CD ]
Line_15 $$ loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() -->Line_50 $$ config.setClassLoader(loader)[ FD ]
Line_11 $$ ClassLoader loader-->Line_32 $$ WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_3 $$ String initialContextClassName = (String) environment.get(INITIAL_CONTEXT_CLASS)[ FD ]
Line_23 $$ if (initialContextModule == null) -->Line_29 $$ loader = module.getClassLoader()[ CD ]
Line_4 $$ String initialContextModule = (String) environment.get(INITIAL_CONTEXT_MODULE)-->Line_23 $$ if (initialContextModule == null) [ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_50 $$ config.setClassLoader(loader)[ CD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_41 $$ if (useStringLokup) [ CD ]
Line_13 $$ loader = getClass().getClassLoader()-->Line_33 $$ initialContextClass = Class.forName(initialContextClassName, true, loader)[ FD ]
Line_6 $$ final Hashtable<?, ?> newEnvironment = new Hashtable(environment)-->Line_7 $$ newEnvironment.remove(CACHE_CONTEXT)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_4 $$ String initialContextModule = (String) environment.get(INITIAL_CONTEXT_MODULE)[ CD ]
Line_23 $$ if (initialContextModule == null) -->Line_25 $$ Constructor ctor = initialContextClass.getConstructor(Hashtable.class)[ CD ]
Line_13 $$ loader = getClass().getClassLoader()-->Line_32 $$ WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_23 $$ if (initialContextModule == null) [ CD ]
Line_11 $$ ClassLoader loader-->Line_33 $$ initialContextClass = Class.forName(initialContextClassName, true, loader)[ FD ]
Line_11 $$ ClassLoader loader-->Line_50 $$ config.setClassLoader(loader)[ FD ]
Line_23 $$ if (initialContextModule == null) -->Line_28 $$ Module module = Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule))[ CD ]
Line_6 $$ final Hashtable<?, ?> newEnvironment = new Hashtable(environment)-->Line_9 $$ newEnvironment.remove(INITIAL_CONTEXT_MODULE)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_8 $$ newEnvironment.remove(INITIAL_CONTEXT_CLASS)[ CD ]
Line_23 $$ if (initialContextModule == null) -->Line_30 $$ final ClassLoader currentClassLoader = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()[ CD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_4 $$ String initialContextModule = (String) environment.get(INITIAL_CONTEXT_MODULE)[ FD ]
Line_15 $$ loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() -->Line_33 $$ initialContextClass = Class.forName(initialContextClassName, true, loader)[ FD ]
Line_4 $$ String initialContextModule = (String) environment.get(INITIAL_CONTEXT_MODULE)-->Line_28 $$ Module module = Module.getBootModuleLoader().loadModule(ModuleIdentifier.fromString(initialContextModule))[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_51 $$ config.setSuperClass(initialContextClass)[ CD ]
Line_3 $$ String initialContextClassName = (String) environment.get(INITIAL_CONTEXT_CLASS)-->Line_33 $$ initialContextClass = Class.forName(initialContextClassName, true, loader)[ FD ]
Line_15 $$ loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() -->Line_32 $$ WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(loader)[ FD ]
Line_6 $$ final Hashtable<?, ?> newEnvironment = new Hashtable(environment)-->Line_8 $$ newEnvironment.remove(INITIAL_CONTEXT_CLASS)[ FD ]
Line_12 $$ if (!WildFlySecurityManager.isChecking()) -->Line_15 $$ loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() [ CD ]
Line_15 $$ loader = AccessController.doPrivileged(new PrivilegedAction<ClassLoader>() -->Line_17 $$ return getClass().getClassLoader()[ CD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_54 $$ return (Context) factory.newInstance(new CachedContext(context))[ CD ]
Line_13 $$ loader = getClass().getClassLoader()-->Line_50 $$ config.setClassLoader(loader)[ FD ]
Line_2 $$ private Context createContext(final Hashtable<?, ?> environment, boolean useProxy) throws NamingException, ClassNotFoundException, NoSuchMethodException, InstantiationException, IllegalAccessException, InvocationTargetException, ModuleLoadException -->Line_5 $$ final boolean useStringLokup = useStringLookup(environment)[ CD ]
