Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() [ CD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_25 $$ finalizePingCycle(id, listener)[ FD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_47 $$ finalizePingCycle(id, listener)[ FD ]
Line_28 $$ PingCollection collection = receivedResponses.get(id)-->Line_29 $$ FinalizingPingCollection finalizingPingCollection = new FinalizingPingCollection(id, collection, collection.size(), listener)[ FD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_29 $$ FinalizingPingCollection finalizingPingCollection = new FinalizingPingCollection(id, collection, collection.size(), listener)[ CD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_24 $$ logger.warn("[[ CD ]
Line_3 $$ if (!pingEnabled || multicastChannel == null) -->Line_9 $$ return[ CD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() [ FD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_31 $$ logger.trace("[[ CD ]
Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_17 $$ logger.warn("[[ FD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_18 $$ finalizePingCycle(id, listener)[ FD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_6 $$ listener.onPing(PingResponse.EMPTY)[ FD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() [ FD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_33 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 4), ThreadPool.Names.GENERIC, new AbstractRunnable() [ FD ]
Line_33 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 4), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_35 $$ logger.warn("[[ CD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_24 $$ logger.warn("[[ FD ]
Line_3 $$ if (!pingEnabled || multicastChannel == null) -->Line_4 $$ threadPool.generic().execute(new Runnable() [ CD ]
Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_21 $$ sendPingRequest(id)[ CD ]
Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_24 $$ logger.warn("[[ FD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_38 $$ finalizePingCycle(id, listener)[ FD ]
Line_4 $$ threadPool.generic().execute(new Runnable() -->Line_6 $$ listener.onPing(PingResponse.EMPTY)[ CD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_11 $$ final int id = pingIdGenerator.incrementAndGet()[ CD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_30 $$ receivedResponses.put(id, finalizingPingCollection)[ CD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_33 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 4), ThreadPool.Names.GENERIC, new AbstractRunnable() [ CD ]
Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_18 $$ finalizePingCycle(id, listener)[ CD ]
Line_33 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 4), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_38 $$ finalizePingCycle(id, listener)[ CD ]
Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_35 $$ logger.warn("[[ FD ]
Line_15 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_17 $$ logger.warn("[[ CD ]
Line_2 $$ public void ping(final PingListener listener, final TimeValue timeout) -->Line_3 $$ if (!pingEnabled || multicastChannel == null) [ CD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_25 $$ finalizePingCycle(id, listener)[ CD ]
Line_29 $$ FinalizingPingCollection finalizingPingCollection = new FinalizingPingCollection(id, collection, collection.size(), listener)-->Line_30 $$ receivedResponses.put(id, finalizingPingCollection)[ FD ]
Line_33 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 4), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_35 $$ logger.warn("[[ FD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_32 $$ sendPingRequest(id)[ CD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_28 $$ PingCollection collection = receivedResponses.get(id)[ CD ]
Line_22 $$ threadPool.schedule(TimeValue.timeValueMillis(timeout.millis() / 2), ThreadPool.Names.GENERIC, new AbstractRunnable() -->Line_35 $$ logger.warn("[[ FD ]
