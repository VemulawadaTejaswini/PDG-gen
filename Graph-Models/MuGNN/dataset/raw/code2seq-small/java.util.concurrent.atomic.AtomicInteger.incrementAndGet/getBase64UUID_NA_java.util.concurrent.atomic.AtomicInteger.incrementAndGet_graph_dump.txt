Line_4 $$ long timestamp = System.currentTimeMillis()-->Line_6 $$ timestamp = Math.max(lastTimestamp, timestamp)[ FD ]
Line_7 $$ if (sequenceId == 0) -->Line_8 $$ timestamp++[ CD ]
Line_6 $$ timestamp = Math.max(lastTimestamp, timestamp)-->Line_13 $$ putLong(uuidBytes, timestamp, 0, 6)[ FD ]
Line_2 $$ public String getBase64UUID() -->Line_3 $$ final int sequenceId = sequenceNumber.incrementAndGet() & 0xffffff[ CD ]
Line_2 $$ public String getBase64UUID() -->Line_4 $$ long timestamp = System.currentTimeMillis()[ CD ]
Line_3 $$ final int sequenceId = sequenceNumber.incrementAndGet() & 0xffffff-->Line_7 $$ if (sequenceId == 0) [ FD ]
Line_4 $$ long timestamp = System.currentTimeMillis()-->Line_8 $$ timestamp++[ FD ]
Line_4 $$ long timestamp = System.currentTimeMillis()-->Line_13 $$ putLong(uuidBytes, timestamp, 0, 6)[ FD ]
Line_6 $$ timestamp = Math.max(lastTimestamp, timestamp)-->Line_8 $$ timestamp++[ FD ]
Line_3 $$ final int sequenceId = sequenceNumber.incrementAndGet() & 0xffffff-->Line_15 $$ putLong(uuidBytes, sequenceId, 12, 3)[ FD ]
Line_2 $$ public String getBase64UUID() -->Line_24 $$ return new String(encoded, 0, encoded.length, Base64.PREFERRED_ENCODING)[ CD ]
Line_2 $$ public String getBase64UUID() -->Line_13 $$ putLong(uuidBytes, timestamp, 0, 6)[ CD ]
Line_2 $$ public String getBase64UUID() -->Line_15 $$ putLong(uuidBytes, sequenceId, 12, 3)[ CD ]
Line_12 $$ final byte[] uuidBytes = new byte[15]-->Line_13 $$ putLong(uuidBytes, timestamp, 0, 6)[ FD ]
Line_12 $$ final byte[] uuidBytes = new byte[15]-->Line_19 $$ encoded = Base64.encodeBytesToBytes(uuidBytes, 0, uuidBytes.length, Base64.URL_SAFE)[ FD ]
Line_12 $$ final byte[] uuidBytes = new byte[15]-->Line_14 $$ System.arraycopy(secureMungedAddress, 0, uuidBytes, 6, secureMungedAddress.length)[ FD ]
Line_2 $$ public String getBase64UUID() -->Line_12 $$ final byte[] uuidBytes = new byte[15][ CD ]
Line_12 $$ final byte[] uuidBytes = new byte[15]-->Line_15 $$ putLong(uuidBytes, sequenceId, 12, 3)[ FD ]
Line_2 $$ public String getBase64UUID() -->Line_14 $$ System.arraycopy(secureMungedAddress, 0, uuidBytes, 6, secureMungedAddress.length)[ CD ]
Line_2 $$ public String getBase64UUID() -->Line_17 $$ byte[] encoded[ CD ]
Line_17 $$ byte[] encoded-->Line_19 $$ encoded = Base64.encodeBytesToBytes(uuidBytes, 0, uuidBytes.length, Base64.URL_SAFE)[ FD ]
