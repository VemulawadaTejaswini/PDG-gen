Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_7 $$ if (myCachePool != null && myCachingCondition != null && myCachingCondition.shouldCacheData(url)) [ FD ]
Line_3 $$ if (myCanUseCache) -->Line_4 $$ ClasspathCache.LoaderData data = myCachePool == null ? null : myCachePool.getCachedData(url)[ CD ]
Line_5 $$ if (data == null) -->Line_6 $$ data = loader.buildData()[ CD ]
Line_4 $$ ClasspathCache.LoaderData data = myCachePool == null ? null : myCachePool.getCachedData(url)-->Line_5 $$ if (data == null) [ FD ]
Line_5 $$ if (data == null) -->Line_7 $$ if (myCachePool != null && myCachingCondition != null && myCachingCondition.shouldCacheData(url)) [ CD ]
Line_6 $$ data = loader.buildData()-->Line_8 $$ myCachePool.cacheData(url, data)[ FD ]
Line_6 $$ data = loader.buildData()-->Line_11 $$ myCache.applyLoaderData(data, loader)[ FD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_19 $$ myLoadersMap.put(url, loader)[ FD ]
Line_7 $$ if (myCachePool != null && myCachingCondition != null && myCachingCondition.shouldCacheData(url)) -->Line_8 $$ myCachePool.cacheData(url, data)[ CD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_4 $$ ClasspathCache.LoaderData data = myCachePool == null ? null : myCachePool.getCachedData(url)[ FD ]
Line_3 $$ if (myCanUseCache) -->Line_11 $$ myCache.applyLoaderData(data, loader)[ CD ]
Line_3 $$ if (myCanUseCache) -->Line_5 $$ if (data == null) [ CD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_11 $$ myCache.applyLoaderData(data, loader)[ FD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_6 $$ data = loader.buildData()[ FD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_8 $$ myCachePool.cacheData(url, data)[ FD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_18 $$ myLoaders.add(loader)[ FD ]
Line_4 $$ ClasspathCache.LoaderData data = myCachePool == null ? null : myCachePool.getCachedData(url)-->Line_6 $$ data = loader.buildData()[ FD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_18 $$ myLoaders.add(loader)[ CD ]
Line_4 $$ ClasspathCache.LoaderData data = myCachePool == null ? null : myCachePool.getCachedData(url)-->Line_8 $$ myCachePool.cacheData(url, data)[ FD ]
Line_3 $$ if (myCanUseCache) -->Line_12 $$ if (lastOne) [ CD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_3 $$ if (myCanUseCache) [ CD ]
Line_2 $$ private void initLoader(URL url, boolean lastOne, Loader loader) throws IOException -->Line_19 $$ myLoadersMap.put(url, loader)[ CD ]
Line_3 $$ if (myCanUseCache) -->Line_16 $$ myLastLoaderProcessed.incrementAndGet()[ CD ]
Line_12 $$ if (lastOne) -->Line_13 $$ myCache.nameSymbolsLoaded()[ CD ]
Line_4 $$ ClasspathCache.LoaderData data = myCachePool == null ? null : myCachePool.getCachedData(url)-->Line_11 $$ myCache.applyLoaderData(data, loader)[ FD ]
