Line_6 $$ String ascii = randomAsciiOfLengthBetween(1, 50)-->Line_7 $$ locations.add(translog.add(new Translog.Index("test", "" + op, ascii.getBytes("UTF-8"))))[ FD ]
Line_11 $$ AtomicInteger corruptionsCaught = new AtomicInteger(0)-->Line_16 $$ corruptionsCaught.incrementAndGet()[ FD ]
Line_2 $$ public void testTranslogChecksums() throws Exception -->Line_19 $$ assertThat("at least one corruption was caused and caught", corruptionsCaught.get(), greaterThanOrEqualTo(1))[ CD ]
Line_2 $$ public void testTranslogChecksums() throws Exception -->Line_4 $$ int translogOperations = randomIntBetween(10, 100)[ CD ]
Line_2 $$ public void testTranslogChecksums() throws Exception -->Line_5 $$ for (int op = 0; op < translogOperations; op++) [ CD ]
Line_5 $$ for (int op = 0; op < translogOperations; op++) -->Line_6 $$ String ascii = randomAsciiOfLengthBetween(1, 50)[ CD ]
Line_2 $$ public void testTranslogChecksums() throws Exception -->Line_10 $$ corruptTranslogs(translogDir)[ CD ]
Line_2 $$ public void testTranslogChecksums() throws Exception -->Line_11 $$ AtomicInteger corruptionsCaught = new AtomicInteger(0)[ CD ]
Line_2 $$ public void testTranslogChecksums() throws Exception -->Line_9 $$ translog.sync()[ CD ]
Line_12 $$ for (Translog.Location location : locations) -->Line_14 $$ translog.read(location)[ FD ]
Line_4 $$ int translogOperations = randomIntBetween(10, 100)-->Line_5 $$ for (int op = 0; op < translogOperations; op++) [ FD ]
Line_11 $$ AtomicInteger corruptionsCaught = new AtomicInteger(0)-->Line_19 $$ assertThat("at least one corruption was caused and caught", corruptionsCaught.get(), greaterThanOrEqualTo(1))[ FD ]
Line_2 $$ public void testTranslogChecksums() throws Exception -->Line_3 $$ List<Translog.Location> locations = new ArrayList()[ CD ]
Line_5 $$ for (int op = 0; op < translogOperations; op++) -->Line_7 $$ locations.add(translog.add(new Translog.Index("test", "" + op, ascii.getBytes("UTF-8"))))[ CD ]
Line_3 $$ List<Translog.Location> locations = new ArrayList()-->Line_7 $$ locations.add(translog.add(new Translog.Index("test", "" + op, ascii.getBytes("UTF-8"))))[ FD ]
