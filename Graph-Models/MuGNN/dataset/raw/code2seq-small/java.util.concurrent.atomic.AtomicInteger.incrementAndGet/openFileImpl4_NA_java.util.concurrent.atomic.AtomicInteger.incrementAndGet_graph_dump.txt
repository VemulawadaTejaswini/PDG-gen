Line_49 $$ boolean newEditor = compositeRef.isNull()-->Line_82 $$ restoreEditorState(file, providers[i], editors[i], entry, newEditor)[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_13 $$ newProviders = FileEditorProviderManager.getInstance().getProviders(myProject, file)[ FD ]
Line_54 $$ FileEditor[] newEditors = new FileEditor[newProviders.length]-->Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)[ FD ]
Line_18 $$ for (int i = 0; i < newProviders.length; i++) -->Line_55 $$ for (int i = 0; i < newProviders.length; i++) [ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() [ CD ]
Line_84 $$ final FileEditorProvider selectedProvider-->Line_90 $$ if (selectedProvider != null) [ FD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_73 $$ composite.getFile().putUserData(EditorWindow.INITIAL_INDEX_KEY, index)[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_86 $$ selectedProvider = ((FileEditorProviderManagerImpl) FileEditorProviderManager.getInstance()).getSelectedFileEditorProvider(EditorHistoryManager.getInstance(myProject), file, providers)[ FD ]
Line_104 $$ if (focusEditor) -->Line_106 $$ ToolWindowManager.getInstance(myProject).activateEditorComponent()[ CD ]
Line_81 $$ for (int i = 0; i < editors.length; i++) -->Line_91 $$ for (int i = editors.length - 1; i >= 0; i--) [ FD ]
Line_58 $$ final FileEditor editor = builders[i] == null ? provider.createEditor(myProject, file) : builders[i].build()-->Line_60 $$ newEditors[i] = editor[ FD ]
Line_90 $$ if (selectedProvider != null) -->Line_91 $$ for (int i = editors.length - 1; i >= 0; i--) [ CD ]
Line_5 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_7 $$ compositeRef.set(window.findFileComposite(file))[ CD ]
Line_85 $$ if (entry == null) -->Line_88 $$ selectedProvider = entry.getSelectedProvider()[ CD ]
Line_57 $$ final FileEditorProvider provider = newProviders[i]-->Line_93 $$ if (provider.equals(selectedProvider)) [ FD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_94 $$ composite.setSelectedEditor(i)[ FD ]
Line_58 $$ final FileEditor editor = builders[i] == null ? provider.createEditor(myProject, file) : builders[i].build()-->Line_61 $$ editor.addPropertyChangeListener(myEditorPropertyChangeListener)[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_80 $$ window.setEditor(composite, current, focusEditor)[ CD ]
Line_86 $$ selectedProvider = ((FileEditorProviderManagerImpl) FileEditorProviderManager.getInstance()).getSelectedFileEditorProvider(EditorHistoryManager.getInstance(myProject), file, providers)-->Line_93 $$ if (provider.equals(selectedProvider)) [ FD ]
Line_18 $$ for (int i = 0; i < newProviders.length; i++) -->Line_94 $$ composite.setSelectedEditor(i)[ FD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_78 $$ FileEditor[] editors = composite.getEditors()[ FD ]
Line_20 $$ final FileEditorProvider provider = newProviders[i]-->Line_27 $$ LOG.assertTrue(provider.accept(myProject, file), "Provider " + provider + " doesn't accept file " + file)[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_27 $$ LOG.assertTrue(provider.accept(myProject, file), "Provider " + provider + " doesn't accept file " + file)[ FD ]
Line_12 $$ if (compositeRef.isNull()) -->Line_14 $$ if (newProviders.length == 0) [ CD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_70 $$ if (composite == null)[ FD ]
Line_72 $$ if (index >= 0) -->Line_73 $$ composite.getFile().putUserData(EditorWindow.INITIAL_INDEX_KEY, index)[ CD ]
Line_91 $$ for (int i = editors.length - 1; i >= 0; i--) -->Line_94 $$ composite.setSelectedEditor(i)[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_84 $$ final FileEditorProvider selectedProvider[ CD ]
Line_24 $$ if (myProject.isDisposed() || !file.isValid()) -->Line_25 $$ return null[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_80 $$ window.setEditor(composite, current, focusEditor)[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_58 $$ final FileEditor editor = builders[i] == null ? provider.createEditor(myProject, file) : builders[i].build()[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_99 $$ window.getOwner().setCurrentWindow(window, focusEditor)[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_99 $$ window.getOwner().setCurrentWindow(window, focusEditor)[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_110 $$ if (newEditor) [ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_120 $$ updateFileName(file)[ CD ]
Line_122 $$ if (pin != null) -->Line_123 $$ window.setFilePinned(file, pin)[ CD ]
Line_92 $$ final FileEditorProvider provider = providers[i]-->Line_93 $$ if (provider.equals(selectedProvider)) [ FD ]
Line_104 $$ if (focusEditor) -->Line_105 $$ window.setAsCurrentWindow(true)[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_105 $$ window.setAsCurrentWindow(true)[ FD ]
Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()-->Line_127 $$ EditorWithProviderComposite composite = compositeRef.get()[ FD ]
Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()-->Line_48 $$ compositeRef.set(window.findFileComposite(file))[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_7 $$ compositeRef.set(window.findFileComposite(file))[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_102 $$ composite.getSelectedEditor().selectNotify()[ CD ]
Line_70 $$ if (composite == null)-->Line_71 $$ return[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_73 $$ composite.getFile().putUserData(EditorWindow.INITIAL_INDEX_KEY, index)[ FD ]
Line_111 $$ notifyPublisher(new Runnable() -->Line_113 $$ if (isFileOpen(file)) [ CD ]
Line_12 $$ if (compositeRef.isNull()) -->Line_13 $$ newProviders = FileEditorProviderManager.getInstance().getProviders(myProject, file)[ CD ]
Line_50 $$ if (newEditor) -->Line_53 $$ getProject().getMessageBus().syncPublisher(FileEditorManagerListener.Before.FILE_EDITOR_MANAGER).beforeFileOpened(FileEditorManagerImpl.this, file)[ CD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_80 $$ window.setEditor(composite, current, focusEditor)[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_100 $$ window.getOwner().afterFileOpen(file)[ CD ]
Line_20 $$ final FileEditorProvider provider = newProviders[i]-->Line_58 $$ final FileEditor editor = builders[i] == null ? provider.createEditor(myProject, file) : builders[i].build()[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_78 $$ FileEditor[] editors = composite.getEditors()[ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_50 $$ if (newEditor) [ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_53 $$ getProject().getMessageBus().syncPublisher(FileEditorManagerListener.Before.FILE_EDITOR_MANAGER).beforeFileOpened(FileEditorManagerImpl.this, file)[ FD ]
Line_20 $$ final FileEditorProvider provider = newProviders[i]-->Line_59 $$ LOG.assertTrue(editor.isValid(), "Invalid editor created by provider " + (provider == null ? null : provider.getClass().getName()))[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_5 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() [ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_48 $$ compositeRef.set(window.findFileComposite(file))[ CD ]
Line_81 $$ for (int i = 0; i < editors.length; i++) -->Line_82 $$ restoreEditorState(file, providers[i], editors[i], entry, newEditor)[ CD ]
Line_55 $$ for (int i = 0; i < newProviders.length; i++) -->Line_91 $$ for (int i = editors.length - 1; i >= 0; i--) [ FD ]
Line_113 $$ if (isFileOpen(file)) -->Line_114 $$ getProject().getMessageBus().syncPublisher(FileEditorManagerListener.FILE_EDITOR_MANAGER).fileOpened(FileEditorManagerImpl.this, file)[ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_122 $$ if (pin != null) [ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_85 $$ if (entry == null) [ CD ]
Line_84 $$ final FileEditorProvider selectedProvider-->Line_86 $$ selectedProvider = ((FileEditorProviderManagerImpl) FileEditorProviderManager.getInstance()).getSelectedFileEditorProvider(EditorHistoryManager.getInstance(myProject), file, providers)[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_49 $$ boolean newEditor = compositeRef.isNull()[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_113 $$ if (isFileOpen(file)) [ FD ]
Line_50 $$ if (newEditor) -->Line_55 $$ for (int i = 0; i < newProviders.length; i++) [ CD ]
Line_91 $$ for (int i = editors.length - 1; i >= 0; i--) -->Line_93 $$ if (provider.equals(selectedProvider)) [ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_101 $$ addSelectionRecord(file, window)[ CD ]
Line_81 $$ for (int i = 0; i < editors.length; i++) -->Line_94 $$ composite.setSelectedEditor(i)[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_101 $$ addSelectionRecord(file, window)[ FD ]
Line_85 $$ if (entry == null) -->Line_86 $$ selectedProvider = ((FileEditorProviderManagerImpl) FileEditorProviderManager.getInstance()).getSelectedFileEditorProvider(EditorHistoryManager.getInstance(myProject), file, providers)[ CD ]
Line_93 $$ if (provider.equals(selectedProvider)) -->Line_94 $$ composite.setSelectedEditor(i)[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_114 $$ getProject().getMessageBus().syncPublisher(FileEditorManagerListener.FILE_EDITOR_MANAGER).fileOpened(FileEditorManagerImpl.this, file)[ FD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_75 $$ compositeRef.set(composite)[ FD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_79 $$ FileEditorProvider[] providers = composite.getProviders()[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_85 $$ if (entry == null) [ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_121 $$ IdeDocumentHistory.getInstance(myProject).includeCurrentCommandAsNavigation()[ CD ]
Line_58 $$ final FileEditor editor = builders[i] == null ? provider.createEditor(myProject, file) : builders[i].build()-->Line_62 $$ editor.putUserData(DUMB_AWARE, DumbService.isDumbAware(provider))[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_128 $$ return Pair.create(composite == null ? EMPTY_EDITOR_ARRAY : composite.getEditors(), composite == null ? EMPTY_PROVIDER_ARRAY : composite.getProviders())[ CD ]
Line_50 $$ if (newEditor) -->Line_54 $$ FileEditor[] newEditors = new FileEditor[newProviders.length][ CD ]
Line_50 $$ if (newEditor) -->Line_70 $$ if (composite == null)[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_12 $$ if (compositeRef.isNull()) [ CD ]
Line_14 $$ if (newProviders.length == 0) -->Line_15 $$ return Pair.create(EMPTY_EDITOR_ARRAY, EMPTY_PROVIDER_ARRAY)[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_123 $$ window.setFilePinned(file, pin)[ FD ]
Line_20 $$ final FileEditorProvider provider = newProviders[i]-->Line_62 $$ editor.putUserData(DUMB_AWARE, DumbService.isDumbAware(provider))[ FD ]
Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()-->Line_77 $$ final EditorWithProviderComposite composite = compositeRef.get()[ FD ]
Line_58 $$ final FileEditor editor = builders[i] == null ? provider.createEditor(myProject, file) : builders[i].build()-->Line_59 $$ LOG.assertTrue(editor.isValid(), "Invalid editor created by provider " + (provider == null ? null : provider.getClass().getName()))[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_77 $$ final EditorWithProviderComposite composite = compositeRef.get()[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_28 $$ return provider instanceof AsyncFileEditorProvider ? ((AsyncFileEditorProvider) provider).createEditorAsync(myProject, file) : null[ FD ]
Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()-->Line_7 $$ compositeRef.set(window.findFileComposite(file))[ FD ]
Line_50 $$ if (newEditor) -->Line_51 $$ clearWindowIfNeeded(window)[ CD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_128 $$ return Pair.create(composite == null ? EMPTY_EDITOR_ARRAY : composite.getEditors(), composite == null ? EMPTY_PROVIDER_ARRAY : composite.getProviders())[ FD ]
Line_103 $$ if (!ApplicationManagerEx.getApplicationEx().isUnitTestMode()) -->Line_104 $$ if (focusEditor) [ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_107 $$ IdeFocusManager.getInstance(myProject).toFront(window.getOwner())[ FD ]
Line_22 $$ builders[i] = ApplicationManager.getApplication().runReadAction(new Computable<AsyncFileEditorProvider.Builder>() -->Line_27 $$ LOG.assertTrue(provider.accept(myProject, file), "Provider " + provider + " doesn't accept file " + file)[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_72 $$ if (index >= 0) [ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_24 $$ if (myProject.isDisposed() || !file.isValid()) [ FD ]
Line_57 $$ final FileEditorProvider provider = newProviders[i]-->Line_59 $$ LOG.assertTrue(editor.isValid(), "Invalid editor created by provider " + (provider == null ? null : provider.getClass().getName()))[ FD ]
Line_18 $$ for (int i = 0; i < newProviders.length; i++) -->Line_81 $$ for (int i = 0; i < editors.length; i++) [ FD ]
Line_86 $$ selectedProvider = ((FileEditorProviderManagerImpl) FileEditorProviderManager.getInstance()).getSelectedFileEditorProvider(EditorHistoryManager.getInstance(myProject), file, providers)-->Line_88 $$ selectedProvider = entry.getSelectedProvider()[ FD ]
Line_84 $$ final FileEditorProvider selectedProvider-->Line_93 $$ if (provider.equals(selectedProvider)) [ FD ]
Line_110 $$ if (newEditor) -->Line_111 $$ notifyPublisher(new Runnable() [ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_120 $$ updateFileName(file)[ FD ]
Line_50 $$ if (newEditor) -->Line_52 $$ ourOpenFilesSetModificationCount.incrementAndGet()[ CD ]
Line_20 $$ final FileEditorProvider provider = newProviders[i]-->Line_93 $$ if (provider.equals(selectedProvider)) [ FD ]
Line_50 $$ if (newEditor) -->Line_75 $$ compositeRef.set(composite)[ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_79 $$ FileEditorProvider[] providers = composite.getProviders()[ CD ]
Line_18 $$ for (int i = 0; i < newProviders.length; i++) -->Line_91 $$ for (int i = editors.length - 1; i >= 0; i--) [ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_51 $$ clearWindowIfNeeded(window)[ FD ]
Line_50 $$ if (newEditor) -->Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)[ CD ]
Line_57 $$ final FileEditorProvider provider = newProviders[i]-->Line_58 $$ final FileEditor editor = builders[i] == null ? provider.createEditor(myProject, file) : builders[i].build()[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_45 $$ if (myProject.isDisposed() || !file.isValid()) [ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_81 $$ for (int i = 0; i < editors.length; i++) [ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_88 $$ selectedProvider = entry.getSelectedProvider()[ FD ]
Line_104 $$ if (focusEditor) -->Line_107 $$ IdeFocusManager.getInstance(myProject).toFront(window.getOwner())[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_100 $$ window.getOwner().afterFileOpen(file)[ FD ]
Line_57 $$ final FileEditorProvider provider = newProviders[i]-->Line_62 $$ editor.putUserData(DUMB_AWARE, DumbService.isDumbAware(provider))[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_45 $$ if (myProject.isDisposed() || !file.isValid()) [ CD ]
Line_45 $$ if (myProject.isDisposed() || !file.isValid()) -->Line_46 $$ return[ CD ]
Line_22 $$ builders[i] = ApplicationManager.getApplication().runReadAction(new Computable<AsyncFileEditorProvider.Builder>() -->Line_28 $$ return provider instanceof AsyncFileEditorProvider ? ((AsyncFileEditorProvider) provider).createEditorAsync(myProject, file) : null[ CD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_103 $$ if (!ApplicationManagerEx.getApplicationEx().isUnitTestMode()) [ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_127 $$ EditorWithProviderComposite composite = compositeRef.get()[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_122 $$ if (pin != null) [ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_90 $$ if (selectedProvider != null) [ CD ]
Line_22 $$ builders[i] = ApplicationManager.getApplication().runReadAction(new Computable<AsyncFileEditorProvider.Builder>() -->Line_24 $$ if (myProject.isDisposed() || !file.isValid()) [ CD ]
Line_91 $$ for (int i = editors.length - 1; i >= 0; i--) -->Line_92 $$ final FileEditorProvider provider = providers[i][ CD ]
Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)-->Line_102 $$ composite.getSelectedEditor().selectNotify()[ FD ]
Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()-->Line_49 $$ boolean newEditor = compositeRef.isNull()[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()[ CD ]
Line_88 $$ selectedProvider = entry.getSelectedProvider()-->Line_90 $$ if (selectedProvider != null) [ FD ]
Line_88 $$ selectedProvider = entry.getSelectedProvider()-->Line_93 $$ if (provider.equals(selectedProvider)) [ FD ]
Line_84 $$ final FileEditorProvider selectedProvider-->Line_88 $$ selectedProvider = entry.getSelectedProvider()[ FD ]
Line_43 $$ UIUtil.invokeAndWaitIfNeeded(new Runnable() -->Line_119 $$ ((IdeDocumentHistoryImpl) IdeDocumentHistory.getInstance(myProject)).onSelectionChanged()[ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_82 $$ restoreEditorState(file, providers[i], editors[i], entry, newEditor)[ FD ]
Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()-->Line_12 $$ if (compositeRef.isNull()) [ FD ]
Line_55 $$ for (int i = 0; i < newProviders.length; i++) -->Line_81 $$ for (int i = 0; i < editors.length; i++) [ FD ]
Line_79 $$ FileEditorProvider[] providers = composite.getProviders()-->Line_86 $$ selectedProvider = ((FileEditorProviderManagerImpl) FileEditorProviderManager.getInstance()).getSelectedFileEditorProvider(EditorHistoryManager.getInstance(myProject), file, providers)[ FD ]
Line_50 $$ if (newEditor) -->Line_72 $$ if (index >= 0) [ CD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_48 $$ compositeRef.set(window.findFileComposite(file))[ FD ]
Line_2 $$ Pair<FileEditor[], FileEditorProvider[]> openFileImpl4(@NotNull final EditorWindow window, @NotNull final VirtualFile file, @Nullable final HistoryEntry entry, final boolean current, final boolean focusEditor, final Boolean pin, final int index) -->Line_69 $$ EditorWithProviderComposite composite = createComposite(file, newEditors, newProviders)[ FD ]
Line_55 $$ for (int i = 0; i < newProviders.length; i++) -->Line_94 $$ composite.setSelectedEditor(i)[ FD ]
Line_86 $$ selectedProvider = ((FileEditorProviderManagerImpl) FileEditorProviderManager.getInstance()).getSelectedFileEditorProvider(EditorHistoryManager.getInstance(myProject), file, providers)-->Line_90 $$ if (selectedProvider != null) [ FD ]
Line_4 $$ final Ref<EditorWithProviderComposite> compositeRef = new Ref<EditorWithProviderComposite>()-->Line_75 $$ compositeRef.set(composite)[ FD ]
Line_12 $$ if (compositeRef.isNull()) -->Line_18 $$ for (int i = 0; i < newProviders.length; i++) [ CD ]
