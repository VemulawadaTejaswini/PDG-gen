Line_3 $$ Directory dir = newDirectory()-->Line_40 $$ IOUtils.close(open, writer, dir)[ FD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_13 $$ final AtomicInteger closeCalls = new AtomicInteger(0)[ CD ]
Line_14 $$ IndexSearcherWrapper wrapper = new IndexSearcherWrapper() -->Line_19 $$ return searcher[ CD ]
Line_13 $$ final AtomicInteger closeCalls = new AtomicInteger(0)-->Line_44 $$ assertEquals(1, closeCalls.get())[ FD ]
Line_29 $$ if (reader == open) -->Line_30 $$ count.incrementAndGet()[ CD ]
Line_10 $$ DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer, true), new ShardId("foo", 1))-->Line_22 $$ final int sourceRefCount = open.getRefCount()[ FD ]
Line_5 $$ IndexWriter writer = new IndexWriter(dir, iwc)-->Line_9 $$ writer.addDocument(doc)[ FD ]
Line_14 $$ IndexSearcherWrapper wrapper = new IndexSearcherWrapper() -->Line_16 $$ return new FieldMaskingReader("field", reader, closeCalls)[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_11 $$ IndexSearcher searcher = new IndexSearcher(open)[ CD ]
Line_11 $$ IndexSearcher searcher = new IndexSearcher(open)-->Line_12 $$ assertEquals(1, searcher.search(new TermQuery(new Term("field", "doc")), 1).totalHits)[ FD ]
Line_14 $$ IndexSearcherWrapper wrapper = new IndexSearcherWrapper() -->Line_29 $$ if (reader == open) [ FD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_22 $$ final int sourceRefCount = open.getRefCount()[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_41 $$ assertEquals(1, outerCount.get())[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_6 $$ Document doc = new Document()[ CD ]
Line_6 $$ Document doc = new Document()-->Line_7 $$ doc.add(new StringField("id", "1", random().nextBoolean() ? Field.Store.YES : Field.Store.NO))[ FD ]
Line_5 $$ IndexWriter writer = new IndexWriter(dir, iwc)-->Line_10 $$ DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer, true), new ShardId("foo", 1))[ FD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_40 $$ IOUtils.close(open, writer, dir)[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_5 $$ IndexWriter writer = new IndexWriter(dir, iwc)[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_14 $$ IndexSearcherWrapper wrapper = new IndexSearcherWrapper() [ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_10 $$ DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer, true), new ShardId("foo", 1))[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_12 $$ assertEquals(1, searcher.search(new TermQuery(new Term("field", "doc")), 1).totalHits)[ CD ]
Line_10 $$ DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer, true), new ShardId("foo", 1))-->Line_40 $$ IOUtils.close(open, writer, dir)[ FD ]
Line_13 $$ final AtomicInteger closeCalls = new AtomicInteger(0)-->Line_39 $$ assertEquals(1, closeCalls.get())[ FD ]
Line_10 $$ DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer, true), new ShardId("foo", 1))-->Line_29 $$ if (reader == open) [ FD ]
Line_6 $$ Document doc = new Document()-->Line_9 $$ writer.addDocument(doc)[ FD ]
Line_10 $$ DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer, true), new ShardId("foo", 1))-->Line_37 $$ assertEquals(sourceRefCount, open.getRefCount())[ FD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_7 $$ doc.add(new StringField("id", "1", random().nextBoolean() ? Field.Store.YES : Field.Store.NO))[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_39 $$ assertEquals(1, closeCalls.get())[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_3 $$ Directory dir = newDirectory()[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_43 $$ assertEquals(0, open.getRefCount())[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_42 $$ assertEquals(1, count.get())[ CD ]
Line_5 $$ IndexWriter writer = new IndexWriter(dir, iwc)-->Line_40 $$ IOUtils.close(open, writer, dir)[ FD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_8 $$ doc.add(new TextField("field", "doc", random().nextBoolean() ? Field.Store.YES : Field.Store.NO))[ CD ]
Line_14 $$ IndexSearcherWrapper wrapper = new IndexSearcherWrapper() -->Line_26 $$ final Engine.Searcher wrap = wrapper.wrap(engineSearcher)[ FD ]
Line_6 $$ Document doc = new Document()-->Line_8 $$ doc.add(new TextField("field", "doc", random().nextBoolean() ? Field.Store.YES : Field.Store.NO))[ FD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_44 $$ assertEquals(1, closeCalls.get())[ CD ]
Line_10 $$ DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer, true), new ShardId("foo", 1))-->Line_43 $$ assertEquals(0, open.getRefCount())[ FD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_9 $$ writer.addDocument(doc)[ CD ]
Line_2 $$ public void testReaderCloseListenerIsCalled() throws IOException -->Line_4 $$ IndexWriterConfig iwc = newIndexWriterConfig()[ CD ]
