Line_2 $$ private SimpleFuture joinNodeAsync(final DiscoveryNode node) throws InterruptedException -->Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() [ FD ]
Line_3 $$ final SimpleFuture future = new SimpleFuture("join of " + node + " (id [" + joinId.incrementAndGet() + "]")-->Line_4 $$ logger.debug("starting [ FD ]
Line_3 $$ final SimpleFuture future = new SimpleFuture("join of " + node + " (id [" + joinId.incrementAndGet() + "]")-->Line_8 $$ future.markAsDone()[ FD ]
Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() -->Line_7 $$ logger.debug("[ CD ]
Line_3 $$ final SimpleFuture future = new SimpleFuture("join of " + node + " (id [" + joinId.incrementAndGet() + "]")-->Line_12 $$ future.markAsFailed(t)[ FD ]
Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() -->Line_11 $$ logger.error("unexpected error for [ FD ]
Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() -->Line_12 $$ future.markAsFailed(t)[ FD ]
Line_2 $$ private SimpleFuture joinNodeAsync(final DiscoveryNode node) throws InterruptedException -->Line_15 $$ return future[ CD ]
Line_2 $$ private SimpleFuture joinNodeAsync(final DiscoveryNode node) throws InterruptedException -->Line_4 $$ logger.debug("starting [ CD ]
Line_2 $$ private SimpleFuture joinNodeAsync(final DiscoveryNode node) throws InterruptedException -->Line_3 $$ final SimpleFuture future = new SimpleFuture("join of " + node + " (id [" + joinId.incrementAndGet() + "]")[ CD ]
Line_2 $$ private SimpleFuture joinNodeAsync(final DiscoveryNode node) throws InterruptedException -->Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() [ CD ]
Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() -->Line_12 $$ future.markAsFailed(t)[ CD ]
Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() -->Line_8 $$ future.markAsDone()[ CD ]
Line_3 $$ final SimpleFuture future = new SimpleFuture("join of " + node + " (id [" + joinId.incrementAndGet() + "]")-->Line_11 $$ logger.error("unexpected error for [ FD ]
Line_5 $$ nodeJoinController.handleJoinRequest(node, new MembershipAction.JoinCallback() -->Line_11 $$ logger.error("unexpected error for [ CD ]
Line_3 $$ final SimpleFuture future = new SimpleFuture("join of " + node + " (id [" + joinId.incrementAndGet() + "]")-->Line_7 $$ logger.debug("[ FD ]
