Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_4 $$ String className = compiled.getClassName()[ CD ]
Line_5 $$ if (className == null) -->Line_8 $$ className = className.replace('.', '/')[ CD ]
Line_8 $$ className = className.replace('.', '/')-->Line_10 $$ index.update(className, reader)[ FD ]
Line_4 $$ String className = compiled.getClassName()-->Line_8 $$ className = className.replace('.', '/')[ FD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_13 $$ myMs.addAndGet(System.currentTimeMillis() - ms)[ CD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_10 $$ index.update(className, reader)[ FD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_4 $$ String className = compiled.getClassName()[ FD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_3 $$ final long ms = System.currentTimeMillis()[ CD ]
Line_9 $$ for (final ClassFilesIndexWriter index : myIndexWriters) -->Line_10 $$ index.update(className, reader)[ FD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_5 $$ if (className == null) [ CD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_15 $$ return null[ CD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_6 $$ LOG.debug("class name is empty for " + compiled.getOutputFile().getAbsolutePath())[ FD ]
Line_2 $$ protected BinaryContent instrument(final CompileContext context, final CompiledClass compiled, final ClassReader reader, final ClassWriter writer, final InstrumentationClassFinder finder) -->Line_14 $$ myFilesCount.incrementAndGet()[ CD ]
Line_4 $$ String className = compiled.getClassName()-->Line_5 $$ if (className == null) [ FD ]
Line_4 $$ String className = compiled.getClassName()-->Line_10 $$ index.update(className, reader)[ FD ]
Line_5 $$ if (className == null) -->Line_6 $$ LOG.debug("class name is empty for " + compiled.getOutputFile().getAbsolutePath())[ CD ]
