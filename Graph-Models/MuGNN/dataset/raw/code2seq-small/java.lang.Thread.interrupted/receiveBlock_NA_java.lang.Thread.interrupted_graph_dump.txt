Line_44 $$ if (responder != null) -->Line_63 $$ responder.interrupt()[ CD ]
Line_2 $$ void receiveBlock(DataOutputStream mirrOut, DataInputStream mirrIn, DataOutputStream replyOut, String mirrAddr, DataTransferThrottler throttlerArg, DatanodeInfo[] downstreams, boolean isReplaceBlock) throws IOException -->Line_11 $$ this.replyOut = replyOut[ FD ]
Line_24 $$ if (isDatanode || isTransfer) -->Line_26 $$ block.setNumBytes(replicaInfo.getNumBytes())[ CD ]
Line_72 $$ joinTimeout = joinTimeout > 1 ? joinTimeout * 8 / 10 : joinTimeout-->Line_73 $$ responder.join(joinTimeout)[ FD ]
Line_22 $$ responderClosed = true-->Line_43 $$ if (!responderClosed) [ FD ]
Line_24 $$ if (isDatanode || isTransfer) -->Line_27 $$ if (stage == BlockConstructionStage.TRANSFER_RBW) [ CD ]
Line_45 $$ if (datanode.isRestarting() && isClient && !isTransfer) -->Line_46 $$ File blockFile = ((ReplicaInPipeline) replicaInfo).getBlockFile()[ CD ]
Line_20 $$ if (responder != null) -->Line_22 $$ responderClosed = true[ CD ]
Line_24 $$ if (isDatanode || isTransfer) -->Line_25 $$ close()[ CD ]
Line_44 $$ if (responder != null) -->Line_45 $$ if (datanode.isRestarting() && isClient && !isTransfer) [ CD ]
Line_27 $$ if (stage == BlockConstructionStage.TRANSFER_RBW) -->Line_28 $$ datanode.data.convertTemporaryToRbw(block)[ CD ]
Line_46 $$ File blockFile = ((ReplicaInPipeline) replicaInfo).getBlockFile()-->Line_47 $$ File restartMeta = new File(blockFile.getParent() + File.pathSeparator + "." + blockFile.getName() + ".restart")[ FD ]
Line_27 $$ if (stage == BlockConstructionStage.TRANSFER_RBW) -->Line_30 $$ datanode.data.finalizeBlock(block)[ CD ]
Line_47 $$ File restartMeta = new File(blockFile.getParent() + File.pathSeparator + "." + blockFile.getName() + ".restart")-->Line_48 $$ if (restartMeta.exists() && !restartMeta.delete()) [ FD ]
Line_20 $$ if (responder != null) -->Line_21 $$ ((PacketResponder) responder.getRunnable()).close()[ CD ]
Line_2 $$ void receiveBlock(DataOutputStream mirrOut, DataInputStream mirrIn, DataOutputStream replyOut, String mirrAddr, DataTransferThrottler throttlerArg, DatanodeInfo[] downstreams, boolean isReplaceBlock) throws IOException -->Line_12 $$ this.isReplaceBlock = isReplaceBlock[ FD ]
Line_71 $$ long joinTimeout = datanode.getDnConf().getXceiverStopTimeout()-->Line_72 $$ joinTimeout = joinTimeout > 1 ? joinTimeout * 8 / 10 : joinTimeout[ FD ]
Line_45 $$ if (datanode.isRestarting() && isClient && !isTransfer) -->Line_48 $$ if (restartMeta.exists() && !restartMeta.delete()) [ CD ]
Line_52 $$ FileWriter out = new FileWriter(restartMeta)-->Line_55 $$ out.close()[ FD ]
Line_35 $$ if (datanode.isRestarting()) -->Line_38 $$ LOG.info("Exception for " + block, ioe)[ CD ]
Line_45 $$ if (datanode.isRestarting() && isClient && !isTransfer) -->Line_47 $$ File restartMeta = new File(blockFile.getParent() + File.pathSeparator + "." + blockFile.getName() + ".restart")[ CD ]
Line_43 $$ if (!responderClosed) -->Line_66 $$ cleanupBlock()[ CD ]
Line_43 $$ if (!responderClosed) -->Line_65 $$ IOUtils.closeStream(this)[ CD ]
Line_14 $$ if (isClient && !isTransfer) -->Line_16 $$ responder.start()[ CD ]
Line_47 $$ File restartMeta = new File(blockFile.getParent() + File.pathSeparator + "." + blockFile.getName() + ".restart")-->Line_49 $$ LOG.warn("Failed to delete restart meta file: " + restartMeta.getPath())[ FD ]
Line_7 $$ boolean responderClosed = false-->Line_22 $$ responderClosed = true[ FD ]
Line_52 $$ FileWriter out = new FileWriter(restartMeta)-->Line_53 $$ out.write(Long.toString(Time.now() + restartBudget))[ FD ]
Line_52 $$ FileWriter out = new FileWriter(restartMeta)-->Line_54 $$ out.flush()[ FD ]
Line_2 $$ void receiveBlock(DataOutputStream mirrOut, DataInputStream mirrIn, DataOutputStream replyOut, String mirrAddr, DataTransferThrottler throttlerArg, DatanodeInfo[] downstreams, boolean isReplaceBlock) throws IOException -->Line_11 $$ this.replyOut = replyOut[ CD ]
Line_2 $$ void receiveBlock(DataOutputStream mirrOut, DataInputStream mirrIn, DataOutputStream replyOut, String mirrAddr, DataTransferThrottler throttlerArg, DatanodeInfo[] downstreams, boolean isReplaceBlock) throws IOException -->Line_7 $$ boolean responderClosed = false[ CD ]
Line_74 $$ if (responder.isAlive()) -->Line_76 $$ LOG.warn(msg + "\n" + StringUtils.getStackTrace(responder))[ CD ]
Line_2 $$ void receiveBlock(DataOutputStream mirrOut, DataInputStream mirrIn, DataOutputStream replyOut, String mirrAddr, DataTransferThrottler throttlerArg, DatanodeInfo[] downstreams, boolean isReplaceBlock) throws IOException -->Line_12 $$ this.isReplaceBlock = isReplaceBlock[ CD ]
Line_71 $$ long joinTimeout = datanode.getDnConf().getXceiverStopTimeout()-->Line_73 $$ responder.join(joinTimeout)[ FD ]
Line_24 $$ if (isDatanode || isTransfer) -->Line_32 $$ datanode.metrics.incrBlocksWritten()[ CD ]
Line_48 $$ if (restartMeta.exists() && !restartMeta.delete()) -->Line_49 $$ LOG.warn("Failed to delete restart meta file: " + restartMeta.getPath())[ CD ]
Line_35 $$ if (datanode.isRestarting()) -->Line_36 $$ LOG.info("Shutting down for restart (" + block + ").")[ CD ]
Line_74 $$ if (responder.isAlive()) -->Line_75 $$ String msg = "Join on responder thread " + responder + " timed out"[ CD ]
Line_7 $$ boolean responderClosed = false-->Line_43 $$ if (!responderClosed) [ FD ]
Line_43 $$ if (!responderClosed) -->Line_44 $$ if (responder != null) [ CD ]
