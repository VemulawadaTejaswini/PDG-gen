Line_2 $$ public void startProcessing() -->Line_31 $$ processController.setFuture(ApplicationManager.getApplication().executeOnPooledThread(task))[ CD ]
Line_11 $$ SwingUtilities.invokeLater(new Runnable() -->Line_13 $$ if (!myErrorsDetected) [ CD ]
Line_2 $$ public void startProcessing() -->Line_32 $$ ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.MESSAGES_WINDOW).activate(null)[ CD ]
Line_3 $$ final Runnable task = new Runnable() -->Line_31 $$ processController.setFuture(ApplicationManager.getApplication().executeOnPooledThread(task))[ FD ]
Line_2 $$ public void startProcessing() -->Line_3 $$ final Runnable task = new Runnable() [ CD ]
Line_14 $$ SwingUtilities.invokeLater(new Runnable() -->Line_17 $$ WindowManager.getInstance().getStatusBar(myProject).setInfo(XmlBundle.message("xml.validate.no.errors.detected.status.message"))[ CD ]
Line_13 $$ if (!myErrorsDetected) -->Line_14 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_6 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_8 $$ StdErrorReporter.super.startProcessing()[ CD ]
Line_14 $$ SwingUtilities.invokeLater(new Runnable() -->Line_16 $$ removeCompileContents(null)[ CD ]
Line_2 $$ public void startProcessing() -->Line_29 $$ myErrorsView.setProcessController(processController)[ CD ]
Line_2 $$ public void startProcessing() -->Line_30 $$ openMessageView()[ CD ]
