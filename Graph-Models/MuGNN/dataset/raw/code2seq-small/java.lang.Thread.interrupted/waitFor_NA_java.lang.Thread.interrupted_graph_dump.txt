Line_2 $$ public void waitFor(Runnable r) -->Line_3 $$ Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD, getTestRootDisposable())[ CD ]
Line_8 $$ boolean b-->Line_10 $$ b = isRunning[0][ FD ]
Line_4 $$ final Thread thread = Thread.currentThread()-->Line_13 $$ thread.interrupt()[ FD ]
Line_2 $$ public void waitFor(Runnable r) -->Line_5 $$ final boolean[] isRunning = [ CD ]
Line_2 $$ public void waitFor(Runnable r) -->Line_6 $$ alarm.addRequest(new Runnable() [ CD ]
Line_2 $$ public void waitFor(Runnable r) -->Line_4 $$ final Thread thread = Thread.currentThread()[ CD ]
Line_12 $$ if (b) -->Line_13 $$ thread.interrupt()[ CD ]
Line_6 $$ alarm.addRequest(new Runnable() -->Line_12 $$ if (b) [ CD ]
Line_6 $$ alarm.addRequest(new Runnable() -->Line_8 $$ boolean b[ CD ]
Line_12 $$ if (b) -->Line_14 $$ LOG.error("test was running over " + myTimeout / 1000 + " seconds. Interrupted. ")[ CD ]
Line_2 $$ public void waitFor(Runnable r) -->Line_22 $$ Thread.interrupted()[ CD ]
Line_3 $$ Alarm alarm = new Alarm(Alarm.ThreadToUse.SHARED_THREAD, getTestRootDisposable())-->Line_6 $$ alarm.addRequest(new Runnable() [ FD ]
Line_2 $$ public void waitFor(Runnable r) -->Line_18 $$ r.run()[ CD ]
Line_2 $$ public void waitFor(Runnable r) -->Line_18 $$ r.run()[ FD ]
