Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_7 $$ supportsScrollableResults = databaseMetaData.supportsResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE)[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_11 $$ doesDataDefinitionCauseTransactionCommit = databaseMetaData.dataDefinitionCausesTransactionCommit()[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_9 $$ supportsBatchUpdates = databaseMetaData.supportsBatchUpdates()[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_8 $$ supportsGetGeneratedKeys = databaseMetaData.supportsGetGeneratedKeys()[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_6 $$ supportsNamedParameters = databaseMetaData.supportsNamedParameters()[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_3 $$ connectionCatalogName = databaseMetaData.getConnection().getCatalog()[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_13 $$ sqlStateType = SQLStateType.interpretReportedSQLStateType(databaseMetaData.getSQLStateType())[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_3 $$ connectionCatalogName = databaseMetaData.getConnection().getCatalog()[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_12 $$ extraKeywords = parseKeywords(databaseMetaData.getSQLKeywords())[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_10 $$ supportsDataDefinitionInTransaction = !databaseMetaData.dataDefinitionIgnoredInTransactions()[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_16 $$ typeInfoSet.addAll(TypeInfo.extractTypeInfo(databaseMetaData))[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_8 $$ supportsGetGeneratedKeys = databaseMetaData.supportsGetGeneratedKeys()[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_7 $$ supportsScrollableResults = databaseMetaData.supportsResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE)[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_10 $$ supportsDataDefinitionInTransaction = !databaseMetaData.dataDefinitionIgnoredInTransactions()[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_13 $$ sqlStateType = SQLStateType.interpretReportedSQLStateType(databaseMetaData.getSQLStateType())[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_16 $$ typeInfoSet.addAll(TypeInfo.extractTypeInfo(databaseMetaData))[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_14 $$ lobLocatorUpdateCopy = databaseMetaData.locatorsUpdateCopy()[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_12 $$ extraKeywords = parseKeywords(databaseMetaData.getSQLKeywords())[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_6 $$ supportsNamedParameters = databaseMetaData.supportsNamedParameters()[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_9 $$ supportsBatchUpdates = databaseMetaData.supportsBatchUpdates()[ FD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_17 $$ return this[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_11 $$ doesDataDefinitionCauseTransactionCommit = databaseMetaData.dataDefinitionCausesTransactionCommit()[ CD ]
Line_2 $$ public Builder apply(DatabaseMetaData databaseMetaData) throws SQLException -->Line_14 $$ lobLocatorUpdateCopy = databaseMetaData.locatorsUpdateCopy()[ CD ]
