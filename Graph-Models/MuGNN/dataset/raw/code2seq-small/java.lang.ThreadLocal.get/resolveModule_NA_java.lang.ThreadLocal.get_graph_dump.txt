Line_3 $$ if (qualifiedName == null || sourceFile == null) -->Line_4 $$ return Collections.emptyList()[ CD ]
Line_13 $$ final QualifiedNameResolver visitor = new QualifiedNameResolverImpl(qualifiedName).fromElement(sourceFile)-->Line_18 $$ visitor.withRelative(0)[ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_7 $$ final Set<String> beingImported = ourBeingImported.get()[ CD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_3 $$ if (qualifiedName == null || sourceFile == null) [ CD ]
Line_8 $$ if (beingImported.contains(marker)) -->Line_9 $$ return Collections.emptyList()[ CD ]
Line_7 $$ final Set<String> beingImported = ourBeingImported.get()-->Line_27 $$ beingImported.remove(marker)[ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_6 $$ final String marker = qualifiedName + "#" + Integer.toString(relativeLevel)[ CD ]
Line_14 $$ if (relativeLevel > 0) -->Line_15 $$ visitor.withRelative(relativeLevel).withoutRoots()[ CD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_6 $$ final String marker = qualifiedName + "#" + Integer.toString(relativeLevel)[ FD ]
Line_14 $$ if (relativeLevel > 0) -->Line_17 $$ if (!importIsAbsolute) [ CD ]
Line_22 $$ if (results.isEmpty() && relativeLevel == 0 && !importIsAbsolute) -->Line_23 $$ results = resolveRelativeImportAsAbsolute(sourceFile, qualifiedName)[ CD ]
Line_13 $$ final QualifiedNameResolver visitor = new QualifiedNameResolverImpl(qualifiedName).fromElement(sourceFile)-->Line_15 $$ visitor.withRelative(relativeLevel).withoutRoots()[ FD ]
Line_13 $$ final QualifiedNameResolver visitor = new QualifiedNameResolverImpl(qualifiedName).fromElement(sourceFile)-->Line_21 $$ List<PsiElement> results = visitor.resultsAsList()[ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_8 $$ if (beingImported.contains(marker)) [ CD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_13 $$ final QualifiedNameResolver visitor = new QualifiedNameResolverImpl(qualifiedName).fromElement(sourceFile)[ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_14 $$ if (relativeLevel > 0) [ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_22 $$ if (results.isEmpty() && relativeLevel == 0 && !importIsAbsolute) [ FD ]
Line_7 $$ final Set<String> beingImported = ourBeingImported.get()-->Line_12 $$ beingImported.add(marker)[ FD ]
Line_21 $$ List<PsiElement> results = visitor.resultsAsList()-->Line_22 $$ if (results.isEmpty() && relativeLevel == 0 && !importIsAbsolute) [ FD ]
Line_6 $$ final String marker = qualifiedName + "#" + Integer.toString(relativeLevel)-->Line_27 $$ beingImported.remove(marker)[ FD ]
Line_6 $$ final String marker = qualifiedName + "#" + Integer.toString(relativeLevel)-->Line_8 $$ if (beingImported.contains(marker)) [ FD ]
Line_17 $$ if (!importIsAbsolute) -->Line_18 $$ visitor.withRelative(0)[ CD ]
Line_7 $$ final Set<String> beingImported = ourBeingImported.get()-->Line_8 $$ if (beingImported.contains(marker)) [ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_23 $$ results = resolveRelativeImportAsAbsolute(sourceFile, qualifiedName)[ FD ]
Line_21 $$ List<PsiElement> results = visitor.resultsAsList()-->Line_23 $$ results = resolveRelativeImportAsAbsolute(sourceFile, qualifiedName)[ FD ]
Line_6 $$ final String marker = qualifiedName + "#" + Integer.toString(relativeLevel)-->Line_12 $$ beingImported.add(marker)[ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_17 $$ if (!importIsAbsolute) [ FD ]
Line_2 $$ public static List<PsiElement> resolveModule(@Nullable QualifiedName qualifiedName, @Nullable PsiFile sourceFile, boolean importIsAbsolute, int relativeLevel) -->Line_15 $$ visitor.withRelative(relativeLevel).withoutRoots()[ FD ]
