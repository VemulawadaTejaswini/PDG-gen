Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_7 $$ Assert.assertNotNull(serializables)[ CD ]
Line_3 $$ ThreadLocalDistributor threadLocalDistributor = new ThreadLocalDistributor()-->Line_5 $$ threadLocalDistributor.afterPropertiesSet()[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_13 $$ Assert.assertNull(agentSerializable.threadLocalDistributors)[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_15 $$ ThreadLocalDistributor[] threadLocalDistributors = agentSerializable.threadLocalDistributors[ CD ]
Line_3 $$ ThreadLocalDistributor threadLocalDistributor = new ThreadLocalDistributor()-->Line_4 $$ threadLocalDistributor.setThreadLocalSources(Arrays.asList(new KeyValuePair(SPIAgentSerializableTest.class.getName(), "_threadLocal")))[ FD ]
Line_10 $$ String threadLocalValue = "threadLocalValue"-->Line_22 $$ Assert.assertEquals(threadLocalValue, serializables[0])[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_10 $$ String threadLocalValue = "threadLocalValue"[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_4 $$ threadLocalDistributor.setThreadLocalSources(Arrays.asList(new KeyValuePair(SPIAgentSerializableTest.class.getName(), "_threadLocal")))[ CD ]
Line_12 $$ SPIAgentSerializable agentSerializable = new SPIAgentSerializable(_SERVLET_CONTEXT_NAME)-->Line_14 $$ agentSerializable.captureThreadLocals()[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_17 $$ Assert.assertEquals(1, threadLocalDistributors.length)[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_11 $$ _threadLocal.set(threadLocalValue)[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_26 $$ _threadLocal.remove()[ CD ]
Line_19 $$ serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")-->Line_20 $$ Assert.assertNotNull(serializables)[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_16 $$ Assert.assertNotNull(threadLocalDistributors)[ CD ]
Line_10 $$ String threadLocalValue = "threadLocalValue"-->Line_11 $$ _threadLocal.set(threadLocalValue)[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_19 $$ serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")[ CD ]
Line_6 $$ Serializable[] serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")-->Line_20 $$ Assert.assertNotNull(serializables)[ FD ]
Line_10 $$ String threadLocalValue = "threadLocalValue"-->Line_25 $$ Assert.assertEquals(threadLocalValue, _threadLocal.get())[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_5 $$ threadLocalDistributor.afterPropertiesSet()[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_8 $$ Assert.assertEquals(1, serializables.length)[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_24 $$ agentSerializable.restoreThreadLocals()[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_9 $$ Assert.assertNull(serializables[0])[ CD ]
Line_15 $$ ThreadLocalDistributor[] threadLocalDistributors = agentSerializable.threadLocalDistributors-->Line_16 $$ Assert.assertNotNull(threadLocalDistributors)[ FD ]
Line_12 $$ SPIAgentSerializable agentSerializable = new SPIAgentSerializable(_SERVLET_CONTEXT_NAME)-->Line_24 $$ agentSerializable.restoreThreadLocals()[ FD ]
Line_6 $$ Serializable[] serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")-->Line_19 $$ serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_20 $$ Assert.assertNotNull(serializables)[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_21 $$ Assert.assertEquals(1, serializables.length)[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_14 $$ agentSerializable.captureThreadLocals()[ CD ]
Line_3 $$ ThreadLocalDistributor threadLocalDistributor = new ThreadLocalDistributor()-->Line_6 $$ Serializable[] serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_23 $$ _threadLocal.remove()[ CD ]
Line_6 $$ Serializable[] serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")-->Line_7 $$ Assert.assertNotNull(serializables)[ FD ]
Line_3 $$ ThreadLocalDistributor threadLocalDistributor = new ThreadLocalDistributor()-->Line_18 $$ Assert.assertSame(threadLocalDistributor, threadLocalDistributors[0])[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_18 $$ Assert.assertSame(threadLocalDistributor, threadLocalDistributors[0])[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_3 $$ ThreadLocalDistributor threadLocalDistributor = new ThreadLocalDistributor()[ CD ]
Line_3 $$ ThreadLocalDistributor threadLocalDistributor = new ThreadLocalDistributor()-->Line_19 $$ serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")[ FD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_22 $$ Assert.assertEquals(threadLocalValue, serializables[0])[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_6 $$ Serializable[] serializables = ReflectionTestUtil.getFieldValue(threadLocalDistributor, "_threadLocalValues")[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_12 $$ SPIAgentSerializable agentSerializable = new SPIAgentSerializable(_SERVLET_CONTEXT_NAME)[ CD ]
Line_2 $$ public void testThreadLocalTransfer() throws Exception -->Line_25 $$ Assert.assertEquals(threadLocalValue, _threadLocal.get())[ CD ]
