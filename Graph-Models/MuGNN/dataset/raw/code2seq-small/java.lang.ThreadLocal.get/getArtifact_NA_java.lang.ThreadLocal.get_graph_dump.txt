Line_2 $$ public void getArtifact(Artifact artifact, ArtifactRepository repository) throws TransferFailedException, ResourceDoesNotExistException -->Line_13 $$ myUnresolvedCollector.collectAndSetResolved(artifact)[ FD ]
Line_2 $$ public void getArtifact(Artifact artifact, ArtifactRepository repository) throws TransferFailedException, ResourceDoesNotExistException -->Line_4 $$ super.getArtifact(artifact, repository)[ FD ]
Line_2 $$ public void getArtifact(Artifact artifact, ArtifactRepository repository) throws TransferFailedException, ResourceDoesNotExistException -->Line_12 $$ cache(artifact)[ FD ]
Line_7 $$ if (!takeFromCache(artifact)) -->Line_13 $$ myUnresolvedCollector.collectAndSetResolved(artifact)[ CD ]
Line_2 $$ public void getArtifact(Artifact artifact, ArtifactRepository repository) throws TransferFailedException, ResourceDoesNotExistException -->Line_3 $$ if (myInBatchResolve.get() == Boolean.TRUE) [ CD ]
Line_3 $$ if (myInBatchResolve.get() == Boolean.TRUE) -->Line_4 $$ super.getArtifact(artifact, repository)[ CD ]
Line_7 $$ if (!takeFromCache(artifact)) -->Line_12 $$ cache(artifact)[ CD ]
Line_2 $$ public void getArtifact(Artifact artifact, ArtifactRepository repository) throws TransferFailedException, ResourceDoesNotExistException -->Line_7 $$ if (!takeFromCache(artifact)) [ FD ]
Line_2 $$ public void getArtifact(Artifact artifact, ArtifactRepository repository) throws TransferFailedException, ResourceDoesNotExistException -->Line_7 $$ if (!takeFromCache(artifact)) [ CD ]
Line_3 $$ if (myInBatchResolve.get() == Boolean.TRUE) -->Line_5 $$ return[ CD ]
Line_2 $$ public void getArtifact(Artifact artifact, ArtifactRepository repository) throws TransferFailedException, ResourceDoesNotExistException -->Line_9 $$ super.getArtifact(artifact, repository)[ FD ]
