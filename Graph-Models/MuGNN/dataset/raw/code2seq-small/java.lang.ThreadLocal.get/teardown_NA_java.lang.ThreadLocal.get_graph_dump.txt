Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_19 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_19 $$ ctx = manager.createCreationalContext(conversationContextBean)-->Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)-->Line_23 $$ conversationContext.dissociate(boundRequests.get())[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_21 $$ conversationContext.invalidate()[ CD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))[ FD ]
Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)-->Line_17 $$ requestContext.dissociate(requestContexts.get())[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_17 $$ requestContext.dissociate(requestContexts.get())[ CD ]
Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)-->Line_11 $$ sessionContext.dissociate(sessionContexts.get())[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ FD ]
Line_18 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))-->Line_19 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_19 $$ ctx = manager.createCreationalContext(conversationContextBean)[ CD ]
Line_18 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))-->Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_9 $$ sessionContext.invalidate()[ CD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ FD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_15 $$ requestContext.invalidate()[ CD ]
Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))-->Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)[ FD ]
Line_12 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))-->Line_13 $$ ctx = manager.createCreationalContext(requestContextBean)[ FD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_13 $$ ctx = manager.createCreationalContext(requestContextBean)[ CD ]
Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)-->Line_22 $$ conversationContext.deactivate()[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_12 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ CD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_13 $$ ctx = manager.createCreationalContext(requestContextBean)-->Line_19 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)-->Line_16 $$ requestContext.deactivate()[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_19 $$ ctx = manager.createCreationalContext(conversationContextBean)[ FD ]
Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)-->Line_9 $$ sessionContext.invalidate()[ FD ]
Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))-->Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_10 $$ sessionContext.deactivate()[ CD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_22 $$ conversationContext.deactivate()[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_23 $$ conversationContext.dissociate(boundRequests.get())[ CD ]
Line_8 $$ final BoundSessionContext sessionContext = (BoundSessionContext) manager.getReference(sessionContextBean, BoundSessionContext.class, ctx)-->Line_10 $$ sessionContext.deactivate()[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_13 $$ ctx = manager.createCreationalContext(requestContextBean)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ CD ]
Line_12 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))-->Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_18 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))[ CD ]
Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)-->Line_21 $$ conversationContext.invalidate()[ FD ]
Line_4 $$ final BeanManager manager = (BeanManager) new InitialContext().lookup("java:comp/BeanManager")-->Line_18 $$ final Bean<BoundConversationContext> conversationContextBean = (Bean<BoundConversationContext>) manager.resolve(manager.getBeans(BoundConversationContext.class, BoundLiteral.INSTANCE))[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_12 $$ final Bean<BoundRequestContext> requestContextBean = (Bean<BoundRequestContext>) manager.resolve(manager.getBeans(BoundRequestContext.class, BoundLiteral.INSTANCE))[ CD ]
Line_13 $$ ctx = manager.createCreationalContext(requestContextBean)-->Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)[ FD ]
Line_14 $$ final BoundRequestContext requestContext = (BoundRequestContext) manager.getReference(requestContextBean, BoundRequestContext.class, ctx)-->Line_15 $$ requestContext.invalidate()[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_16 $$ requestContext.deactivate()[ CD ]
Line_13 $$ ctx = manager.createCreationalContext(requestContextBean)-->Line_20 $$ final BoundConversationContext conversationContext = (BoundConversationContext) manager.getReference(conversationContextBean, BoundConversationContext.class, ctx)[ FD ]
Line_7 $$ CreationalContext<?> ctx = manager.createCreationalContext(sessionContextBean)-->Line_13 $$ ctx = manager.createCreationalContext(requestContextBean)[ FD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_6 $$ final Bean<BoundSessionContext> sessionContextBean = (Bean<BoundSessionContext>) manager.resolve(manager.getBeans(BoundSessionContext.class, BoundLiteral.INSTANCE))[ CD ]
Line_5 $$ if (manager != null && Container.available()) -->Line_11 $$ sessionContext.dissociate(sessionContexts.get())[ CD ]
