Line_9 $$ if (map != null) -->Line_11 $$ if (!buses.isEmpty()) [ CD ]
Line_12 $$ for (MessageBusImpl bus : new ArrayList<MessageBusImpl>(buses)) -->Line_14 $$ map.remove(bus)[ FD ]
Line_4 $$ if (myParentBus != null) -->Line_6 $$ myParentBus.pumpMessages()[ CD ]
Line_2 $$ private void pumpMessages() -->Line_4 $$ if (myParentBus != null) [ CD ]
Line_4 $$ if (myParentBus != null) -->Line_9 $$ if (map != null) [ CD ]
Line_13 $$ if (bus.myDisposed) -->Line_15 $$ LOG.error("Accessing disposed message bus " + bus)[ CD ]
Line_10 $$ Set<MessageBusImpl> buses = map.keySet()-->Line_11 $$ if (!buses.isEmpty()) [ FD ]
Line_8 $$ Map<MessageBusImpl, Integer> map = asRoot().myWaitingBuses.get()-->Line_10 $$ Set<MessageBusImpl> buses = map.keySet()[ FD ]
Line_12 $$ for (MessageBusImpl bus : new ArrayList<MessageBusImpl>(buses)) -->Line_18 $$ bus.doPumpMessages()[ FD ]
Line_4 $$ if (myParentBus != null) -->Line_8 $$ Map<MessageBusImpl, Integer> map = asRoot().myWaitingBuses.get()[ CD ]
Line_8 $$ Map<MessageBusImpl, Integer> map = asRoot().myWaitingBuses.get()-->Line_9 $$ if (map != null) [ FD ]
Line_9 $$ if (map != null) -->Line_10 $$ Set<MessageBusImpl> buses = map.keySet()[ CD ]
Line_2 $$ private void pumpMessages() -->Line_3 $$ checkNotDisposed()[ CD ]
Line_13 $$ if (bus.myDisposed) -->Line_14 $$ map.remove(bus)[ CD ]
Line_12 $$ for (MessageBusImpl bus : new ArrayList<MessageBusImpl>(buses)) -->Line_13 $$ if (bus.myDisposed) [ FD ]
Line_8 $$ Map<MessageBusImpl, Integer> map = asRoot().myWaitingBuses.get()-->Line_14 $$ map.remove(bus)[ FD ]
Line_4 $$ if (myParentBus != null) -->Line_5 $$ LOG.assertTrue(myParentBus.myChildBuses.contains(this))[ CD ]
