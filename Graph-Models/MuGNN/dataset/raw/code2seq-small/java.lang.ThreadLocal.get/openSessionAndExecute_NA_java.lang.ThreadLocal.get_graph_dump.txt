Line_6 $$ Transaction tx = s.getTransaction()-->Line_17 $$ tx.commit()[ FD ]
Line_6 $$ Transaction tx = s.getTransaction()-->Line_15 $$ if (!rolledBack && tx.getStatus() == TransactionStatus.ACTIVE) [ FD ]
Line_2 $$ protected void openSessionAndExecute(ByRef<Session> sessionRef, Consumer<Session> consumer) -->Line_9 $$ consumer.accept(s)[ FD ]
Line_2 $$ protected void openSessionAndExecute(ByRef<Session> sessionRef, Consumer<Session> consumer) -->Line_4 $$ Session s = sessionFactory(node).openSession()[ CD ]
Line_15 $$ if (!rolledBack && tx.getStatus() == TransactionStatus.ACTIVE) -->Line_20 $$ log.trace("Hibernate rollback begin")[ CD ]
Line_15 $$ if (!rolledBack && tx.getStatus() == TransactionStatus.ACTIVE) -->Line_18 $$ log.trace("Hibernate commit end")[ CD ]
Line_2 $$ protected void openSessionAndExecute(ByRef<Session> sessionRef, Consumer<Session> consumer) -->Line_7 $$ tx.begin()[ CD ]
Line_4 $$ Session s = sessionFactory(node).openSession()-->Line_5 $$ sessionRef.set(s)[ FD ]
Line_3 $$ int node = threadNode.get()-->Line_4 $$ Session s = sessionFactory(node).openSession()[ FD ]
Line_15 $$ if (!rolledBack && tx.getStatus() == TransactionStatus.ACTIVE) -->Line_21 $$ tx.rollback()[ CD ]
Line_6 $$ Transaction tx = s.getTransaction()-->Line_11 $$ tx.markRollbackOnly()[ FD ]
Line_6 $$ Transaction tx = s.getTransaction()-->Line_7 $$ tx.begin()[ FD ]
Line_6 $$ Transaction tx = s.getTransaction()-->Line_21 $$ tx.rollback()[ FD ]
Line_15 $$ if (!rolledBack && tx.getStatus() == TransactionStatus.ACTIVE) -->Line_17 $$ tx.commit()[ CD ]
Line_2 $$ protected void openSessionAndExecute(ByRef<Session> sessionRef, Consumer<Session> consumer) -->Line_5 $$ sessionRef.set(s)[ CD ]
Line_15 $$ if (!rolledBack && tx.getStatus() == TransactionStatus.ACTIVE) -->Line_16 $$ log.trace("Hibernate commit begin")[ CD ]
Line_4 $$ Session s = sessionFactory(node).openSession()-->Line_6 $$ Transaction tx = s.getTransaction()[ FD ]
Line_2 $$ protected void openSessionAndExecute(ByRef<Session> sessionRef, Consumer<Session> consumer) -->Line_6 $$ Transaction tx = s.getTransaction()[ CD ]
Line_15 $$ if (!rolledBack && tx.getStatus() == TransactionStatus.ACTIVE) -->Line_22 $$ log.trace("Hibernate rollback end")[ CD ]
Line_2 $$ protected void openSessionAndExecute(ByRef<Session> sessionRef, Consumer<Session> consumer) -->Line_5 $$ sessionRef.set(s)[ FD ]
Line_2 $$ protected void openSessionAndExecute(ByRef<Session> sessionRef, Consumer<Session> consumer) -->Line_3 $$ int node = threadNode.get()[ CD ]
Line_4 $$ Session s = sessionFactory(node).openSession()-->Line_9 $$ consumer.accept(s)[ FD ]
