Line_3 $$ final List<String> stack = myFindExportedNameStack.get()-->Line_7 $$ stack.add(name)[ FD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_9 $$ PsiElement result = getExportedNameCache().resolve(name)[ FD ]
Line_10 $$ if (result != null) -->Line_11 $$ return result[ CD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_7 $$ stack.add(name)[ CD ]
Line_13 $$ List<String> allNames = getDunderAll()-->Line_14 $$ if (allNames != null && allNames.contains(name)) [ FD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_4 $$ if (stack.contains(name)) [ CD ]
Line_4 $$ if (stack.contains(name)) -->Line_5 $$ return null[ CD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_19 $$ stack.remove(name)[ FD ]
Line_3 $$ final List<String> stack = myFindExportedNameStack.get()-->Line_4 $$ if (stack.contains(name)) [ FD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_7 $$ stack.add(name)[ FD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_14 $$ if (allNames != null && allNames.contains(name)) [ FD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_3 $$ final List<String> stack = myFindExportedNameStack.get()[ CD ]
Line_3 $$ final List<String> stack = myFindExportedNameStack.get()-->Line_19 $$ stack.remove(name)[ FD ]
Line_2 $$ public PsiElement findExportedName(String name) -->Line_4 $$ if (stack.contains(name)) [ FD ]
Line_14 $$ if (allNames != null && allNames.contains(name)) -->Line_15 $$ return findExportedName(PyNames.ALL)[ CD ]
Line_9 $$ PsiElement result = getExportedNameCache().resolve(name)-->Line_10 $$ if (result != null) [ FD ]
