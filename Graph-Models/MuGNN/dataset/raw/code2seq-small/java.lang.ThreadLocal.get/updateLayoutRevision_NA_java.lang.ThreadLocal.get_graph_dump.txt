Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_32 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_47 $$ layoutRevision.setName(name)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_48 $$ layoutRevision.setTitle(title)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_37 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_16 $$ layoutRevision.setLayoutSetBranchId(oldLayoutRevision.getLayoutSetBranchId())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_49 $$ layoutRevision.setDescription(description)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_24 $$ layoutRevision.setDescription(description)[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_54 $$ layoutRevision.setThemeId(themeId)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_47 $$ layoutRevision.setName(name)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_28 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_36 $$ layoutRevisionPersistence.update(layoutRevision)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_39 $$ StagingUtil.setRecentLayoutBranchId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutBranchId())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_23 $$ layoutRevision.setTitle(title)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_31 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_58 $$ layoutRevision.setCss(css)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_18 $$ layoutRevision.setHead(false)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_62 $$ boolean major = ParamUtil.getBoolean(serviceContext, "major")[ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_33 $$ layoutRevision.setCss(css)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_53 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_13 $$ layoutRevision.setCompanyId(oldLayoutRevision.getCompanyId())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_25 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_57 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_14 $$ layoutRevision.setUserId(user.getUserId())[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_39 $$ StagingUtil.setRecentLayoutBranchId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutBranchId())[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(layoutRevision.getCompanyId(), layoutRevision.getGroupId(), userId, LayoutRevision.class.getName(), layoutRevision.getLayoutRevisionId(), layoutRevision, serviceContext)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_31 $$ layoutRevision.setWapThemeId(wapThemeId)[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_8 $$ boolean revisionInProgress = ParamUtil.getBoolean(serviceContext, "revisionInProgress")[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_24 $$ layoutRevision.setDescription(description)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_55 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_64 $$ updateMajor(layoutRevision)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_52 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_45 $$ layoutRevision = oldLayoutRevision[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_35 $$ layoutRevision.setStatusDate(serviceContext.getModifiedDate(now))[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_28 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(layoutRevision.getCompanyId(), layoutRevision.getGroupId(), userId, LayoutRevision.class.getName(), layoutRevision.getLayoutRevisionId(), layoutRevision, serviceContext)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_19 $$ layoutRevision.setLayoutBranchId(layoutBranchId)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_33 $$ layoutRevision.setCss(css)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_55 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_50 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_53 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_17 $$ layoutRevision.setParentLayoutRevisionId(oldLayoutRevision.getLayoutRevisionId())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_64 $$ updateMajor(layoutRevision)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_37 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_35 $$ layoutRevision.setStatusDate(serviceContext.getModifiedDate(now))[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_51 $$ layoutRevision.setRobots(robots)[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_25 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_63 $$ if (major || !isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_20 $$ layoutRevision.setPlid(oldLayoutRevision.getPlid())[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_47 $$ layoutRevision.setName(name)[ FD ]
Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)-->Line_21 $$ layoutRevision.setPrivateLayout(oldLayoutRevision.isPrivateLayout())[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_22 $$ layoutRevision.setName(name)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_24 $$ layoutRevision.setDescription(description)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_58 $$ layoutRevision.setCss(css)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_58 $$ layoutRevision.setCss(css)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_31 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_59 $$ layoutRevisionPersistence.update(layoutRevision)[ CD ]
Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)-->Line_45 $$ layoutRevision = oldLayoutRevision[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_19 $$ layoutRevision.setLayoutBranchId(layoutBranchId)[ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_56 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_50 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_25 $$ layoutRevision.setKeywords(keywords)[ CD ]
Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)-->Line_13 $$ layoutRevision.setCompanyId(oldLayoutRevision.getCompanyId())[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_23 $$ layoutRevision.setTitle(title)[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_56 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_32 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_48 $$ layoutRevision.setTitle(title)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_48 $$ layoutRevision.setTitle(title)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_7 $$ int workflowAction = serviceContext.getWorkflowAction()[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_14 $$ layoutRevision.setUserId(user.getUserId())[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_60 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_26 $$ layoutRevision.setRobots(robots)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_49 $$ layoutRevision.setDescription(description)[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_66 $$ if (isWorkflowEnabled(layoutRevision.getPlid())) [ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_35 $$ layoutRevision.setStatusDate(serviceContext.getModifiedDate(now))[ FD ]
Line_8 $$ boolean revisionInProgress = ParamUtil.getBoolean(serviceContext, "revisionInProgress")-->Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) [ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_40 $$ StagingUtil.setRecentLayoutRevisionId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutRevisionId())[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_64 $$ updateMajor(layoutRevision)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_30 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_33 $$ layoutRevision.setCss(css)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_14 $$ layoutRevision.setUserId(user.getUserId())[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_35 $$ layoutRevision.setStatusDate(serviceContext.getModifiedDate(now))[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_36 $$ layoutRevisionPersistence.update(layoutRevision)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_66 $$ if (isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_26 $$ layoutRevision.setRobots(robots)[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_37 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_34 $$ layoutRevision.setStatus(WorkflowConstants.STATUS_DRAFT)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)[ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(layoutRevision.getCompanyId(), layoutRevision.getGroupId(), userId, LayoutRevision.class.getName(), layoutRevision.getLayoutRevisionId(), layoutRevision, serviceContext)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_22 $$ layoutRevision.setName(name)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_63 $$ if (major || !isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_10 $$ long newLayoutRevisionId = counterLocalService.increment()[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(layoutRevision.getCompanyId(), layoutRevision.getGroupId(), userId, LayoutRevision.class.getName(), layoutRevision.getLayoutRevisionId(), layoutRevision, serviceContext)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_60 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_27 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_55 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_69 $$ updateStatus(userId, layoutRevision.getLayoutRevisionId(), WorkflowConstants.STATUS_APPROVED, serviceContext)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_56 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_49 $$ layoutRevision.setDescription(description)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) [ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_51 $$ layoutRevision.setRobots(robots)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_59 $$ layoutRevisionPersistence.update(layoutRevision)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_56 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_16 $$ layoutRevision.setLayoutSetBranchId(oldLayoutRevision.getLayoutSetBranchId())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(layoutRevision.getCompanyId(), layoutRevision.getGroupId(), userId, LayoutRevision.class.getName(), layoutRevision.getLayoutRevisionId(), layoutRevision, serviceContext)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_55 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_6 $$ LayoutRevision layoutRevision = null[ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_38 $$ copyPortletPreferences(layoutRevision, layoutRevision.getParentLayoutRevisionId())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_49 $$ layoutRevision.setDescription(description)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_51 $$ layoutRevision.setRobots(robots)[ FD ]
Line_63 $$ if (major || !isWorkflowEnabled(layoutRevision.getPlid())) -->Line_64 $$ updateMajor(layoutRevision)[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_53 $$ layoutRevision.setIconImageId(iconImageId)[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_16 $$ layoutRevision.setLayoutSetBranchId(oldLayoutRevision.getLayoutSetBranchId())[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_66 $$ if (isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_52 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_32 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_49 $$ layoutRevision.setDescription(description)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_48 $$ layoutRevision.setTitle(title)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_15 $$ layoutRevision.setUserName(user.getFullName())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_47 $$ layoutRevision.setName(name)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_56 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_55 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_19 $$ layoutRevision.setLayoutBranchId(layoutBranchId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_56 $$ layoutRevision.setWapThemeId(wapThemeId)[ CD ]
Line_62 $$ boolean major = ParamUtil.getBoolean(serviceContext, "major")-->Line_63 $$ if (major || !isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_29 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_20 $$ layoutRevision.setPlid(oldLayoutRevision.getPlid())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_49 $$ layoutRevision.setDescription(description)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_8 $$ boolean revisionInProgress = ParamUtil.getBoolean(serviceContext, "revisionInProgress")[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_28 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_47 $$ layoutRevision.setName(name)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_31 $$ layoutRevision.setWapThemeId(wapThemeId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_21 $$ layoutRevision.setPrivateLayout(oldLayoutRevision.isPrivateLayout())[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_57 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_38 $$ copyPortletPreferences(layoutRevision, layoutRevision.getParentLayoutRevisionId())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_25 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_59 $$ layoutRevisionPersistence.update(layoutRevision)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_66 $$ if (isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_17 $$ layoutRevision.setParentLayoutRevisionId(oldLayoutRevision.getLayoutRevisionId())[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_50 $$ layoutRevision.setKeywords(keywords)[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_21 $$ layoutRevision.setPrivateLayout(oldLayoutRevision.isPrivateLayout())[ CD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_40 $$ StagingUtil.setRecentLayoutRevisionId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutRevisionId())[ FD ]
Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)-->Line_16 $$ layoutRevision.setLayoutSetBranchId(oldLayoutRevision.getLayoutSetBranchId())[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_69 $$ updateStatus(userId, layoutRevision.getLayoutRevisionId(), WorkflowConstants.STATUS_APPROVED, serviceContext)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_13 $$ layoutRevision.setCompanyId(oldLayoutRevision.getCompanyId())[ FD ]
Line_66 $$ if (isWorkflowEnabled(layoutRevision.getPlid())) -->Line_67 $$ WorkflowHandlerRegistryUtil.startWorkflowInstance(layoutRevision.getCompanyId(), layoutRevision.getGroupId(), userId, LayoutRevision.class.getName(), layoutRevision.getLayoutRevisionId(), layoutRevision, serviceContext)[ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_57 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_54 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_58 $$ layoutRevision.setCss(css)[ CD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_59 $$ layoutRevisionPersistence.update(layoutRevision)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_7 $$ int workflowAction = serviceContext.getWorkflowAction()[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_29 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_12 $$ layoutRevision.setGroupId(oldLayoutRevision.getGroupId())[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_32 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_19 $$ layoutRevision.setLayoutBranchId(layoutBranchId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_52 $$ layoutRevision.setTypeSettings(typeSettings)[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_53 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_30 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_34 $$ layoutRevision.setStatus(WorkflowConstants.STATUS_DRAFT)[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_51 $$ layoutRevision.setRobots(robots)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_12 $$ layoutRevision.setGroupId(oldLayoutRevision.getGroupId())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_26 $$ layoutRevision.setRobots(robots)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_50 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_28 $$ layoutRevision.setIconImageId(iconImageId)[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_71 $$ return layoutRevision[ CD ]
Line_66 $$ if (isWorkflowEnabled(layoutRevision.getPlid())) -->Line_69 $$ updateStatus(userId, layoutRevision.getLayoutRevisionId(), WorkflowConstants.STATUS_APPROVED, serviceContext)[ CD ]
Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)-->Line_17 $$ layoutRevision.setParentLayoutRevisionId(oldLayoutRevision.getLayoutRevisionId())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_27 $$ layoutRevision.setTypeSettings(typeSettings)[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_30 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_50 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_60 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_53 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_62 $$ boolean major = ParamUtil.getBoolean(serviceContext, "major")[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_52 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_58 $$ layoutRevision.setCss(css)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_47 $$ layoutRevision.setName(name)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_66 $$ if (isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_26 $$ layoutRevision.setRobots(robots)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_55 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_63 $$ if (major || !isWorkflowEnabled(layoutRevision.getPlid())) [ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_60 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_45 $$ layoutRevision = oldLayoutRevision[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_54 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_54 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_13 $$ layoutRevision.setCompanyId(oldLayoutRevision.getCompanyId())[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_17 $$ layoutRevision.setParentLayoutRevisionId(oldLayoutRevision.getLayoutRevisionId())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_20 $$ layoutRevision.setPlid(oldLayoutRevision.getPlid())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_27 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_40 $$ StagingUtil.setRecentLayoutRevisionId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutRevisionId())[ CD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_40 $$ StagingUtil.setRecentLayoutRevisionId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutRevisionId())[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_50 $$ layoutRevision.setKeywords(keywords)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_54 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_33 $$ layoutRevision.setCss(css)[ CD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_52 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_63 $$ if (major || !isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_23 $$ layoutRevision.setTitle(title)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_51 $$ layoutRevision.setRobots(robots)[ FD ]
Line_5 $$ Date now = new Date()-->Line_35 $$ layoutRevision.setStatusDate(serviceContext.getModifiedDate(now))[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_57 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_18 $$ layoutRevision.setHead(false)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_69 $$ updateStatus(userId, layoutRevision.getLayoutRevisionId(), WorkflowConstants.STATUS_APPROVED, serviceContext)[ FD ]
Line_42 $$ if (_layoutRevisionId.get() > 0) -->Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())[ CD ]
Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)-->Line_20 $$ layoutRevision.setPlid(oldLayoutRevision.getPlid())[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_38 $$ copyPortletPreferences(layoutRevision, layoutRevision.getParentLayoutRevisionId())[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_12 $$ layoutRevision.setGroupId(oldLayoutRevision.getGroupId())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_30 $$ layoutRevision.setColorSchemeId(colorSchemeId)[ FD ]
Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)-->Line_12 $$ layoutRevision.setGroupId(oldLayoutRevision.getGroupId())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_39 $$ StagingUtil.setRecentLayoutBranchId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutBranchId())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_21 $$ layoutRevision.setPrivateLayout(oldLayoutRevision.isPrivateLayout())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_34 $$ layoutRevision.setStatus(WorkflowConstants.STATUS_DRAFT)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_54 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_15 $$ layoutRevision.setUserName(user.getFullName())[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_39 $$ StagingUtil.setRecentLayoutBranchId(user, layoutRevision.getLayoutSetBranchId(), layoutRevision.getPlid(), layoutRevision.getLayoutBranchId())[ CD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_45 $$ layoutRevision = oldLayoutRevision[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_57 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_59 $$ layoutRevisionPersistence.update(layoutRevision)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_69 $$ updateStatus(userId, layoutRevision.getLayoutRevisionId(), WorkflowConstants.STATUS_APPROVED, serviceContext)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_69 $$ updateStatus(userId, layoutRevision.getLayoutRevisionId(), WorkflowConstants.STATUS_APPROVED, serviceContext)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_52 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_42 $$ if (_layoutRevisionId.get() > 0) -->Line_45 $$ layoutRevision = oldLayoutRevision[ CD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_4 $$ LayoutRevision oldLayoutRevision = layoutRevisionPersistence.findByPrimaryKey(layoutRevisionId)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_18 $$ layoutRevision.setHead(false)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_22 $$ layoutRevision.setName(name)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_27 $$ layoutRevision.setTypeSettings(typeSettings)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_5 $$ Date now = new Date()[ CD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_29 $$ layoutRevision.setThemeId(themeId)[ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_29 $$ layoutRevision.setThemeId(themeId)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_36 $$ layoutRevisionPersistence.update(layoutRevision)[ CD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_51 $$ layoutRevision.setRobots(robots)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_58 $$ layoutRevision.setCss(css)[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_15 $$ layoutRevision.setUserName(user.getFullName())[ FD ]
Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)-->Line_14 $$ layoutRevision.setUserId(user.getUserId())[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_22 $$ layoutRevision.setName(name)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_63 $$ if (major || !isWorkflowEnabled(layoutRevision.getPlid())) [ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_60 $$ _layoutRevisionId.set(layoutRevision.getLayoutRevisionId())[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_57 $$ layoutRevision.setWapColorSchemeId(wapColorSchemeId)[ FD ]
Line_43 $$ layoutRevision = layoutRevisionPersistence.findByPrimaryKey(_layoutRevisionId.get())-->Line_64 $$ updateMajor(layoutRevision)[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_48 $$ layoutRevision.setTitle(title)[ FD ]
Line_3 $$ User user = userPersistence.findByPrimaryKey(userId)-->Line_15 $$ layoutRevision.setUserName(user.getFullName())[ FD ]
Line_2 $$ public LayoutRevision updateLayoutRevision(long userId, long layoutRevisionId, long layoutBranchId, String name, String title, String description, String keywords, String robots, String typeSettings, boolean iconImage, long iconImageId, String themeId, String colorSchemeId, String wapThemeId, String wapColorSchemeId, String css, ServiceContext serviceContext) throws PortalException -->Line_24 $$ layoutRevision.setDescription(description)[ FD ]
Line_9 $$ if (!MergeLayoutPrototypesThreadLocal.isInProgress() && (workflowAction != WorkflowConstants.ACTION_PUBLISH) && (_layoutRevisionId.get() <= 0) && !revisionInProgress) -->Line_42 $$ if (_layoutRevisionId.get() > 0) [ CD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_23 $$ layoutRevision.setTitle(title)[ FD ]
Line_45 $$ layoutRevision = oldLayoutRevision-->Line_53 $$ layoutRevision.setIconImageId(iconImageId)[ FD ]
Line_10 $$ long newLayoutRevisionId = counterLocalService.increment()-->Line_11 $$ layoutRevision = layoutRevisionPersistence.create(newLayoutRevisionId)[ FD ]
Line_6 $$ LayoutRevision layoutRevision = null-->Line_48 $$ layoutRevision.setTitle(title)[ FD ]
