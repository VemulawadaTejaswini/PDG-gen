Line_9 $$ int counter = 0-->Line_13 $$ counter += 1[ FD ]
Line_16 $$ if (counter <= lag) -->Line_17 $$ lagValue = Double.NaN[ CD ]
Line_11 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)-->Line_36 $$ lagWindow.add(thisBucketValue)[ FD ]
Line_12 $$ InternalHistogram.Bucket newBucket = bucket-->Line_33 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())[ FD ]
Line_7 $$ List newBuckets = new ArrayList()-->Line_35 $$ newBuckets.add(newBucket)[ FD ]
Line_10 $$ for (InternalHistogram.Bucket bucket : buckets) -->Line_29 $$ List<InternalAggregation> aggs = StreamSupport.stream(bucket.getAggregations().spliterator(), false).map(( p) -> [ FD ]
Line_33 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())-->Line_35 $$ newBuckets.add(newBucket)[ FD ]
Line_29 $$ List<InternalAggregation> aggs = StreamSupport.stream(bucket.getAggregations().spliterator(), false).map(( p) -> -->Line_32 $$ aggs.add(new InternalSimpleValue(name(), diff, formatter, new ArrayList<PipelineAggregator>(), metaData()))[ FD ]
Line_4 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_6 $$ InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory = histo.getFactory()[ FD ]
Line_13 $$ counter += 1-->Line_16 $$ if (counter <= lag) [ FD ]
Line_12 $$ InternalHistogram.Bucket newBucket = bucket-->Line_35 $$ newBuckets.add(newBucket)[ FD ]
Line_6 $$ InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory = histo.getFactory()-->Line_33 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())[ FD ]
Line_4 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_11 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)[ FD ]
Line_10 $$ for (InternalHistogram.Bucket bucket : buckets) -->Line_33 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())[ FD ]
Line_11 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)-->Line_24 $$ thisBucketValue = Double.NaN[ FD ]
Line_8 $$ EvictingQueue<Double> lagWindow = new EvictingQueue(lag)-->Line_36 $$ lagWindow.add(thisBucketValue)[ FD ]
Line_24 $$ thisBucketValue = Double.NaN-->Line_36 $$ lagWindow.add(thisBucketValue)[ FD ]
Line_6 $$ InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory = histo.getFactory()-->Line_38 $$ return factory.create(newBuckets, histo)[ FD ]
Line_9 $$ int counter = 0-->Line_16 $$ if (counter <= lag) [ FD ]
Line_4 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_38 $$ return factory.create(newBuckets, histo)[ FD ]
Line_7 $$ List newBuckets = new ArrayList()-->Line_38 $$ return factory.create(newBuckets, histo)[ FD ]
Line_4 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_5 $$ List<? extends InternalHistogram.Bucket> buckets = histo.getBuckets()[ FD ]
Line_10 $$ for (InternalHistogram.Bucket bucket : buckets) -->Line_11 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)[ FD ]
