Line_2 $$ public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) -->Line_4 $$ List<? extends InternalHistogram.Bucket> buckets = histo.getBuckets()[ CD ]
Line_13 $$ Double lagValue-->Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) [ FD ]
Line_19 $$ if (thisBucketValue == null) -->Line_20 $$ thisBucketValue = Double.NaN[ CD ]
Line_6 $$ List newBuckets = new ArrayList()-->Line_33 $$ return factory.create(newBuckets, histo)[ FD ]
Line_2 $$ public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) -->Line_33 $$ return factory.create(newBuckets, histo)[ CD ]
Line_9 $$ for (InternalHistogram.Bucket bucket : buckets) -->Line_10 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)[ FD ]
Line_8 $$ int counter = 0-->Line_14 $$ if (counter <= lag) [ FD ]
Line_9 $$ for (InternalHistogram.Bucket bucket : buckets) -->Line_24 $$ List<InternalAggregation> aggs = StreamSupport.stream(bucket.getAggregations().spliterator(), false).map(( p) -> [ FD ]
Line_3 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_5 $$ InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory = histo.getFactory()[ FD ]
Line_10 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)-->Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) [ FD ]
Line_15 $$ lagValue = Double.NaN-->Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) [ FD ]
Line_13 $$ Double lagValue-->Line_17 $$ lagValue = lagWindow.peek()[ FD ]
Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) -->Line_27 $$ aggs.add(new InternalSimpleValue(name(), diff, formatter, new ArrayList<PipelineAggregator>(), metaData()))[ CD ]
Line_11 $$ InternalHistogram.Bucket newBucket = bucket-->Line_30 $$ newBuckets.add(newBucket)[ FD ]
Line_3 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_10 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)[ FD ]
Line_11 $$ InternalHistogram.Bucket newBucket = bucket-->Line_28 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())[ FD ]
Line_15 $$ lagValue = Double.NaN-->Line_17 $$ lagValue = lagWindow.peek()[ FD ]
Line_14 $$ if (counter <= lag) -->Line_15 $$ lagValue = Double.NaN[ CD ]
Line_12 $$ counter += 1-->Line_14 $$ if (counter <= lag) [ FD ]
Line_28 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())-->Line_30 $$ newBuckets.add(newBucket)[ FD ]
Line_2 $$ public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) -->Line_7 $$ EvictingQueue<Double> lagWindow = new EvictingQueue(lag)[ CD ]
Line_7 $$ EvictingQueue<Double> lagWindow = new EvictingQueue(lag)-->Line_17 $$ lagValue = lagWindow.peek()[ FD ]
Line_20 $$ thisBucketValue = Double.NaN-->Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) [ FD ]
Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) -->Line_23 $$ double diff = thisBucketValue - lagValue[ CD ]
Line_20 $$ thisBucketValue = Double.NaN-->Line_31 $$ lagWindow.add(thisBucketValue)[ FD ]
Line_10 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)-->Line_20 $$ thisBucketValue = Double.NaN[ FD ]
Line_13 $$ Double lagValue-->Line_15 $$ lagValue = Double.NaN[ FD ]
Line_8 $$ int counter = 0-->Line_12 $$ counter += 1[ FD ]
Line_10 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)-->Line_31 $$ lagWindow.add(thisBucketValue)[ FD ]
Line_14 $$ if (counter <= lag) -->Line_17 $$ lagValue = lagWindow.peek()[ CD ]
Line_5 $$ InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory = histo.getFactory()-->Line_28 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())[ FD ]
Line_5 $$ InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory = histo.getFactory()-->Line_33 $$ return factory.create(newBuckets, histo)[ FD ]
Line_6 $$ List newBuckets = new ArrayList()-->Line_30 $$ newBuckets.add(newBucket)[ FD ]
Line_2 $$ public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) -->Line_3 $$ InternalHistogram histo = (InternalHistogram) aggregation[ CD ]
Line_2 $$ public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) -->Line_5 $$ InternalHistogram.Factory<? extends InternalHistogram.Bucket> factory = histo.getFactory()[ CD ]
Line_10 $$ Double thisBucketValue = resolveBucketValue(histo, bucket, bucketsPaths()[0], gapPolicy)-->Line_19 $$ if (thisBucketValue == null) [ FD ]
Line_9 $$ for (InternalHistogram.Bucket bucket : buckets) -->Line_28 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())[ FD ]
Line_3 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_33 $$ return factory.create(newBuckets, histo)[ FD ]
Line_2 $$ public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) -->Line_8 $$ int counter = 0[ CD ]
Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) -->Line_24 $$ List<InternalAggregation> aggs = StreamSupport.stream(bucket.getAggregations().spliterator(), false).map(( p) -> [ CD ]
Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) -->Line_28 $$ newBucket = factory.createBucket(bucket.getKey(), bucket.getDocCount(), new InternalAggregations(aggs), bucket.getKeyed(), bucket.getFormatter())[ CD ]
Line_17 $$ lagValue = lagWindow.peek()-->Line_22 $$ if (!Double.isNaN(thisBucketValue) && !Double.isNaN(lagValue)) [ FD ]
Line_2 $$ public InternalAggregation reduce(InternalAggregation aggregation, ReduceContext reduceContext) -->Line_6 $$ List newBuckets = new ArrayList()[ CD ]
Line_24 $$ List<InternalAggregation> aggs = StreamSupport.stream(bucket.getAggregations().spliterator(), false).map(( p) -> -->Line_27 $$ aggs.add(new InternalSimpleValue(name(), diff, formatter, new ArrayList<PipelineAggregator>(), metaData()))[ FD ]
Line_3 $$ InternalHistogram histo = (InternalHistogram) aggregation-->Line_4 $$ List<? extends InternalHistogram.Bucket> buckets = histo.getBuckets()[ FD ]
Line_7 $$ EvictingQueue<Double> lagWindow = new EvictingQueue(lag)-->Line_31 $$ lagWindow.add(thisBucketValue)[ FD ]
