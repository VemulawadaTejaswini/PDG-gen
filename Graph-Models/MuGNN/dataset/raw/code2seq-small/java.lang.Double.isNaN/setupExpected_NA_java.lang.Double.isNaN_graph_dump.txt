Line_30 $$ if (counter <= lag) -->Line_31 $$ lagValue = Double.NaN[ CD ]
Line_7 $$ EvictingQueue<Double> lagWindow = new EvictingQueue(lag)-->Line_48 $$ lagWindow.add(metricValue)[ FD ]
Line_6 $$ ArrayList<Double> values = new ArrayList(numBuckets)-->Line_43 $$ values.add(diff)[ FD ]
Line_8 $$ int counter = 0-->Line_27 $$ counter += 1[ FD ]
Line_42 $$ double diff = metricValue - lagValue-->Line_43 $$ values.add(diff)[ FD ]
Line_16 $$ metricValue = null-->Line_48 $$ lagWindow.add(metricValue)[ FD ]
Line_16 $$ metricValue = null-->Line_38 $$ metricValue = Double.NaN[ FD ]
Line_10 $$ Double metricValue-->Line_21 $$ metricValue = PipelineAggregationHelperTests.calculateMetric(docValues, metric)[ FD ]
Line_10 $$ Double metricValue-->Line_16 $$ metricValue = null[ FD ]
Line_17 $$ if (gapPolicy.equals(BucketHelpers.GapPolicy.INSERT_ZEROS)) -->Line_21 $$ metricValue = PipelineAggregationHelperTests.calculateMetric(docValues, metric)[ CD ]
Line_21 $$ metricValue = PipelineAggregationHelperTests.calculateMetric(docValues, metric)-->Line_38 $$ metricValue = Double.NaN[ FD ]
Line_6 $$ ArrayList<Double> values = new ArrayList(numBuckets)-->Line_50 $$ testValues.put(target.toString(), values)[ FD ]
Line_11 $$ double[] docValues = mockBucket.docValues-->Line_21 $$ metricValue = PipelineAggregationHelperTests.calculateMetric(docValues, metric)[ FD ]
Line_38 $$ metricValue = Double.NaN-->Line_48 $$ lagWindow.add(metricValue)[ FD ]
Line_10 $$ Double metricValue-->Line_38 $$ metricValue = Double.NaN[ FD ]
Line_8 $$ int counter = 0-->Line_30 $$ if (counter <= lag) [ FD ]
Line_16 $$ metricValue = null-->Line_21 $$ metricValue = PipelineAggregationHelperTests.calculateMetric(docValues, metric)[ FD ]
Line_27 $$ counter += 1-->Line_30 $$ if (counter <= lag) [ FD ]
Line_21 $$ metricValue = PipelineAggregationHelperTests.calculateMetric(docValues, metric)-->Line_48 $$ lagWindow.add(metricValue)[ FD ]
Line_10 $$ Double metricValue-->Line_48 $$ lagWindow.add(metricValue)[ FD ]
