Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_53 $$ final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(onChosen).setRequestFocus(down != 0).createPopup()[ FD ]
Line_68 $$ if (down > 0) -->Line_69 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) [ CD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_37 $$ final Object selectedValue = list.getSelectedValue()[ FD ]
Line_4 $$ final String filter = searchField.getText()-->Line_7 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)[ FD ]
Line_54 $$ list.addKeyListener(new KeyAdapter() -->Line_57 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) [ FD ]
Line_9 $$ final JList list = new JBList(model)-->Line_73 $$ if (list.getSelectedIndex() > 0) [ FD ]
Line_25 $$ if (value instanceof String) -->Line_26 $$ setText("------ " + value + " ------")[ CD ]
Line_54 $$ list.addKeyListener(new KeyAdapter() -->Line_57 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) [ CD ]
Line_69 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) -->Line_70 $$ list.setSelectedIndex(list.getSelectedIndex() + 1)[ CD ]
Line_68 $$ if (down > 0) -->Line_72 $$ if (down < 0) [ CD ]
Line_9 $$ final JList list = new JBList(model)-->Line_74 $$ list.setSelectedIndex(list.getSelectedIndex() - 1)[ FD ]
Line_12 $$ final Set<String> descriptions = hints.get(groupName)-->Line_13 $$ if (descriptions != null) [ FD ]
Line_10 $$ for (String groupName : hints.keySet()) -->Line_12 $$ final Set<String> descriptions = hints.get(groupName)[ FD ]
Line_57 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) -->Line_62 $$ if (e.getKeyChar() != KeyEvent.CHAR_UNDEFINED) [ CD ]
Line_54 $$ list.addKeyListener(new KeyAdapter() -->Line_63 $$ searchField.process(new KeyEvent(searchField, KeyEvent.KEY_TYPED, e.getWhen(), e.getModifiers(), KeyEvent.VK_UNDEFINED, e.getKeyChar()))[ FD ]
Line_34 $$ final Runnable onChosen = new Runnable() -->Line_38 $$ if (selectedValue instanceof OptionDescription) [ CD ]
Line_57 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) -->Line_59 $$ if (cancelPopups(activePopup) && e.getKeyCode() == KeyEvent.VK_ESCAPE) [ CD ]
Line_42 $$ SwingUtilities.invokeLater(new Runnable() -->Line_47 $$ selectConfigurable.consume(description.getConfigurableId())[ CD ]
Line_38 $$ if (selectedValue instanceof OptionDescription) -->Line_40 $$ searchField.setText(description.getHit())[ CD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_54 $$ list.addKeyListener(new KeyAdapter() [ FD ]
Line_9 $$ final JList list = new JBList(model)-->Line_53 $$ final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(onChosen).setRequestFocus(down != 0).createPopup()[ FD ]
Line_39 $$ final OptionDescription description = ((OptionDescription) selectedValue)-->Line_40 $$ searchField.setText(description.getHit())[ FD ]
Line_38 $$ if (selectedValue instanceof OptionDescription) -->Line_42 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_38 $$ if (selectedValue instanceof OptionDescription) -->Line_41 $$ searchField.addCurrentTextToHistory()[ CD ]
Line_8 $$ final DefaultListModel model = new DefaultListModel()-->Line_33 $$ if (model.size() > 0) [ FD ]
Line_14 $$ for (String hit : descriptions) -->Line_15 $$ if (hit == null)[ FD ]
Line_25 $$ if (value instanceof String) -->Line_27 $$ if (value instanceof OptionDescription) [ CD ]
Line_54 $$ list.addKeyListener(new KeyAdapter() -->Line_59 $$ if (cancelPopups(activePopup) && e.getKeyCode() == KeyEvent.VK_ESCAPE) [ FD ]
Line_7 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)-->Line_10 $$ for (String groupName : hints.keySet()) [ FD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_30 $$ return rendererComponent[ CD ]
Line_38 $$ if (selectedValue instanceof OptionDescription) -->Line_39 $$ final OptionDescription description = ((OptionDescription) selectedValue)[ CD ]
Line_9 $$ final JList list = new JBList(model)-->Line_24 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_33 $$ if (model.size() > 0) -->Line_54 $$ list.addKeyListener(new KeyAdapter() [ CD ]
Line_10 $$ for (String groupName : hints.keySet()) -->Line_11 $$ model.addElement(groupName)[ FD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_25 $$ if (value instanceof String) [ CD ]
Line_27 $$ if (value instanceof OptionDescription) -->Line_28 $$ setText(((OptionDescription) value).getHit())[ CD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_69 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) [ FD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_73 $$ if (list.getSelectedIndex() > 0) [ FD ]
Line_33 $$ if (model.size() > 0) -->Line_77 $$ return popup[ CD ]
Line_59 $$ if (cancelPopups(activePopup) && e.getKeyCode() == KeyEvent.VK_ESCAPE) -->Line_60 $$ return[ CD ]
Line_37 $$ final Object selectedValue = list.getSelectedValue()-->Line_38 $$ if (selectedValue instanceof OptionDescription) [ FD ]
Line_9 $$ final JList list = new JBList(model)-->Line_70 $$ list.setSelectedIndex(list.getSelectedIndex() + 1)[ FD ]
Line_54 $$ list.addKeyListener(new KeyAdapter() -->Line_62 $$ if (e.getKeyChar() != KeyEvent.CHAR_UNDEFINED) [ FD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_24 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_33 $$ if (model.size() > 0) -->Line_53 $$ final JBPopup popup = JBPopupFactory.getInstance().createListPopupBuilder(list).setItemChoosenCallback(onChosen).setRequestFocus(down != 0).createPopup()[ CD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_74 $$ list.setSelectedIndex(list.getSelectedIndex() - 1)[ FD ]
Line_9 $$ final JList list = new JBList(model)-->Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() [ FD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_27 $$ if (value instanceof OptionDescription) [ FD ]
Line_39 $$ final OptionDescription description = ((OptionDescription) selectedValue)-->Line_47 $$ selectConfigurable.consume(description.getConfigurableId())[ FD ]
Line_33 $$ if (model.size() > 0) -->Line_68 $$ if (down > 0) [ CD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_70 $$ list.setSelectedIndex(list.getSelectedIndex() + 1)[ FD ]
Line_73 $$ if (list.getSelectedIndex() > 0) -->Line_74 $$ list.setSelectedIndex(list.getSelectedIndex() - 1)[ CD ]
Line_9 $$ final JList list = new JBList(model)-->Line_69 $$ if (list.getSelectedIndex() < list.getModel().getSize() - 1) [ FD ]
Line_5 $$ if (filter == null || filter.length() == 0)-->Line_6 $$ return null[ CD ]
Line_8 $$ final DefaultListModel model = new DefaultListModel()-->Line_17 $$ model.addElement(new OptionDescription(null, groupName, hit, null))[ FD ]
Line_34 $$ final Runnable onChosen = new Runnable() -->Line_37 $$ final Object selectedValue = list.getSelectedValue()[ CD ]
Line_57 $$ if (e.getKeyCode() != KeyEvent.VK_ENTER && e.getKeyCode() != KeyEvent.VK_UP && e.getKeyCode() != KeyEvent.VK_DOWN && e.getKeyCode() != KeyEvent.VK_PAGE_UP && e.getKeyCode() != KeyEvent.VK_PAGE_DOWN) -->Line_58 $$ searchField.requestFocusInWindow()[ CD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_24 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ CD ]
Line_4 $$ final String filter = searchField.getText()-->Line_5 $$ if (filter == null || filter.length() == 0)[ FD ]
Line_7 $$ final Map<String, Set<String>> hints = SearchableOptionsRegistrar.getInstance().findPossibleExtension(filter, project)-->Line_12 $$ final Set<String> descriptions = hints.get(groupName)[ FD ]
Line_9 $$ final JList list = new JBList(model)-->Line_37 $$ final Object selectedValue = list.getSelectedValue()[ FD ]
Line_9 $$ final JList list = new JBList(model)-->Line_54 $$ list.addKeyListener(new KeyAdapter() [ FD ]
Line_62 $$ if (e.getKeyChar() != KeyEvent.CHAR_UNDEFINED) -->Line_63 $$ searchField.process(new KeyEvent(searchField, KeyEvent.KEY_TYPED, e.getWhen(), e.getModifiers(), KeyEvent.VK_UNDEFINED, e.getKeyChar()))[ CD ]
Line_72 $$ if (down < 0) -->Line_73 $$ if (list.getSelectedIndex() > 0) [ CD ]
Line_8 $$ final DefaultListModel model = new DefaultListModel()-->Line_11 $$ model.addElement(groupName)[ FD ]
Line_21 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_25 $$ if (value instanceof String) [ FD ]
