Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_3 $$ List<SvnBranchItem> branches = myConfiguration.getBranches(selectedValue)[ FD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_21 $$ loadBranches(selectedValue, new Runnable() [ FD ]
Line_12 $$ final JBPopup popup = //.setDimensionServiceKey("Svn.CompareWithBranchPopup")-->Line_16 $$ if (REFRESH_MESSAGE.equals(branchList.getSelectedValue())) [ CD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_4 $$ if (branches == null) [ CD ]
Line_17 $$ SwingUtilities.invokeLater(new Runnable() -->Line_21 $$ loadBranches(selectedValue, new Runnable() [ CD ]
Line_16 $$ if (REFRESH_MESSAGE.equals(branchList.getSelectedValue())) -->Line_30 $$ return[ CD ]
Line_10 $$ final JList branchList = new JBList(items)-->Line_12 $$ final JBPopup popup = //.setDimensionServiceKey("Svn.CompareWithBranchPopup")[ FD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_8 $$ System.arraycopy(branches.toArray(), 0, items, 0, branches.size())[ CD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_7 $$ final Object[] items = new Object[branches.size() + 1][ CD ]
Line_12 $$ final JBPopup popup = //.setDimensionServiceKey("Svn.CompareWithBranchPopup")-->Line_45 $$ showPopupAt(popup)[ FD ]
Line_3 $$ List<SvnBranchItem> branches = myConfiguration.getBranches(selectedValue)-->Line_4 $$ if (branches == null) [ FD ]
Line_10 $$ final JList branchList = new JBList(items)-->Line_32 $$ SvnBranchItem item = (SvnBranchItem) branchList.getSelectedValue()[ FD ]
Line_10 $$ final JList branchList = new JBList(items)-->Line_16 $$ if (REFRESH_MESSAGE.equals(branchList.getSelectedValue())) [ FD ]
Line_7 $$ final Object[] items = new Object[branches.size() + 1]-->Line_8 $$ System.arraycopy(branches.toArray(), 0, items, 0, branches.size())[ FD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_11 $$ branchList.setCellRenderer(new BranchRenderer())[ CD ]
Line_12 $$ final JBPopup popup = //.setDimensionServiceKey("Svn.CompareWithBranchPopup")-->Line_33 $$ if (item != null) [ CD ]
Line_10 $$ final JList branchList = new JBList(items)-->Line_11 $$ branchList.setCellRenderer(new BranchRenderer())[ FD ]
Line_21 $$ loadBranches(selectedValue, new Runnable() -->Line_25 $$ showBranchPopup(selectedValue)[ CD ]
Line_12 $$ final JBPopup popup = //.setDimensionServiceKey("Svn.CompareWithBranchPopup")-->Line_42 $$ return item instanceof SvnBranchItem ? getBranchName((SvnBranchItem) item) : null[ CD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_12 $$ final JBPopup popup = //.setDimensionServiceKey("Svn.CompareWithBranchPopup")[ CD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_12 $$ final JBPopup popup = //.setDimensionServiceKey("Svn.CompareWithBranchPopup")[ FD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_25 $$ showBranchPopup(selectedValue)[ FD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_10 $$ final JList branchList = new JBList(items)[ CD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_45 $$ showPopupAt(popup)[ CD ]
Line_3 $$ List<SvnBranchItem> branches = myConfiguration.getBranches(selectedValue)-->Line_7 $$ final Object[] items = new Object[branches.size() + 1][ FD ]
Line_16 $$ if (REFRESH_MESSAGE.equals(branchList.getSelectedValue())) -->Line_17 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_3 $$ List<SvnBranchItem> branches = myConfiguration.getBranches(selectedValue)-->Line_8 $$ System.arraycopy(branches.toArray(), 0, items, 0, branches.size())[ FD ]
Line_33 $$ if (item != null) -->Line_34 $$ myCallback.branchSelected(myProject, myConfiguration, item.getUrl(), item.getRevision())[ CD ]
Line_4 $$ if (branches == null) -->Line_5 $$ return[ CD ]
Line_2 $$ private void showBranchPopup(final String selectedValue) -->Line_3 $$ List<SvnBranchItem> branches = myConfiguration.getBranches(selectedValue)[ CD ]
