Line_2 $$ public void storePath(@NotNull ExternalSystemSourceType type, @NotNull String path, @Nullable String packagePrefix) throws IllegalArgumentException -->Line_8 $$ paths.add(new SourceRoot(ExternalSystemApiUtil.toCanonicalPath(path), StringUtil.nullize(packagePrefix, true)))[ FD ]
Line_2 $$ public void storePath(@NotNull ExternalSystemSourceType type, @NotNull String path, @Nullable String packagePrefix) throws IllegalArgumentException -->Line_6 $$ myData.put(type, paths = new TreeSet<SourceRoot>(SourceRootComparator.INSTANCE))[ FD ]
Line_3 $$ if (FileUtil.isAncestor(new File(getRootPath()), new File(path), false)) -->Line_9 $$ return[ CD ]
Line_2 $$ public void storePath(@NotNull ExternalSystemSourceType type, @NotNull String path, @Nullable String packagePrefix) throws IllegalArgumentException -->Line_11 $$ if (!ExternalSystemSourceType.EXCLUDED.equals(type)) [ CD ]
Line_2 $$ public void storePath(@NotNull ExternalSystemSourceType type, @NotNull String path, @Nullable String packagePrefix) throws IllegalArgumentException -->Line_4 $$ Collection<SourceRoot> paths = myData.get(type)[ FD ]
Line_3 $$ if (FileUtil.isAncestor(new File(getRootPath()), new File(path), false)) -->Line_8 $$ paths.add(new SourceRoot(ExternalSystemApiUtil.toCanonicalPath(path), StringUtil.nullize(packagePrefix, true)))[ CD ]
Line_4 $$ Collection<SourceRoot> paths = myData.get(type)-->Line_6 $$ myData.put(type, paths = new TreeSet<SourceRoot>(SourceRootComparator.INSTANCE))[ FD ]
Line_3 $$ if (FileUtil.isAncestor(new File(getRootPath()), new File(path), false)) -->Line_4 $$ Collection<SourceRoot> paths = myData.get(type)[ CD ]
Line_3 $$ if (FileUtil.isAncestor(new File(getRootPath()), new File(path), false)) -->Line_5 $$ if (paths == null) [ CD ]
Line_4 $$ Collection<SourceRoot> paths = myData.get(type)-->Line_5 $$ if (paths == null) [ FD ]
Line_5 $$ if (paths == null) -->Line_6 $$ myData.put(type, paths = new TreeSet<SourceRoot>(SourceRootComparator.INSTANCE))[ CD ]
Line_6 $$ myData.put(type, paths = new TreeSet<SourceRoot>(SourceRootComparator.INSTANCE))-->Line_8 $$ paths.add(new SourceRoot(ExternalSystemApiUtil.toCanonicalPath(path), StringUtil.nullize(packagePrefix, true)))[ FD ]
Line_2 $$ public void storePath(@NotNull ExternalSystemSourceType type, @NotNull String path, @Nullable String packagePrefix) throws IllegalArgumentException -->Line_3 $$ if (FileUtil.isAncestor(new File(getRootPath()), new File(path), false)) [ CD ]
Line_2 $$ public void storePath(@NotNull ExternalSystemSourceType type, @NotNull String path, @Nullable String packagePrefix) throws IllegalArgumentException -->Line_11 $$ if (!ExternalSystemSourceType.EXCLUDED.equals(type)) [ FD ]
Line_2 $$ public void storePath(@NotNull ExternalSystemSourceType type, @NotNull String path, @Nullable String packagePrefix) throws IllegalArgumentException -->Line_12 $$ throw new IllegalArgumentException(String.format("Can't register given path of type '%s' because it's out of content root.%nContent root: '%s'%nGiven path: '%s'", type, getRootPath(), new File(path).getAbsolutePath()))[ FD ]
Line_4 $$ Collection<SourceRoot> paths = myData.get(type)-->Line_8 $$ paths.add(new SourceRoot(ExternalSystemApiUtil.toCanonicalPath(path), StringUtil.nullize(packagePrefix, true)))[ FD ]
