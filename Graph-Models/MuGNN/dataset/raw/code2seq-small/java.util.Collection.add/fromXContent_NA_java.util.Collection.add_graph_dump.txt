Line_7 $$ String queryName = null-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_27 $$ while (parser.nextToken() != XContentParser.Token.END_ARRAY) -->Line_32 $$ indices.add(value)[ CD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_45 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) [ FD ]
Line_5 $$ Collection<String> indices = new ArrayList()-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_9 $$ String currentFieldName = null-->Line_13 $$ currentFieldName = parser.currentName()[ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_44 $$ noMatchQuery = parseNoMatchQuery(parser.text())[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_16 $$ innerQuery = parseContext.parseInnerQueryBuilder()[ FD ]
Line_14 $$ if (token == XContentParser.Token.START_OBJECT) -->Line_15 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, QUERY_FIELD)) [ CD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_35 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] query does not support [" + currentFieldName + "]")[ FD ]
Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_14 $$ if (token == XContentParser.Token.START_OBJECT) [ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_28 $$ String value = parser.textOrNull()[ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_13 $$ currentFieldName = parser.currentName()[ FD ]
Line_5 $$ Collection<String> indices = new ArrayList()-->Line_32 $$ indices.add(value)[ FD ]
Line_17 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) -->Line_18 $$ noMatchQuery = parseContext.parseInnerQueryBuilder()[ CD ]
Line_46 $$ queryName = parser.text()-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_9 $$ String currentFieldName = null-->Line_43 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ FD ]
Line_27 $$ while (parser.nextToken() != XContentParser.Token.END_ARRAY) -->Line_29 $$ if (value == null) [ CD ]
Line_10 $$ XContentParser.Token token-->Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ FD ]
Line_6 $$ QueryBuilder noMatchQuery = IndicesQueryBuilder.defaultNoMatchQuery()-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_43 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ FD ]
Line_9 $$ String currentFieldName = null-->Line_17 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ FD ]
Line_38 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDEX_FIELD)) -->Line_42 $$ indices.add(parser.text())[ CD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_40 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] indices or index already specified")[ FD ]
Line_4 $$ QueryBuilder innerQuery = null-->Line_54 $$ if (innerQuery == null) [ FD ]
Line_12 $$ if (token == XContentParser.Token.FIELD_NAME) -->Line_14 $$ if (token == XContentParser.Token.START_OBJECT) [ CD ]
Line_9 $$ String currentFieldName = null-->Line_23 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDICES_FIELD)) [ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_20 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] query does not support [" + currentFieldName + "]")[ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_27 $$ while (parser.nextToken() != XContentParser.Token.END_ARRAY) [ FD ]
Line_22 $$ if (token == XContentParser.Token.START_ARRAY) -->Line_37 $$ if (token.isValue()) [ CD ]
Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_37 $$ if (token.isValue()) [ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_25 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] indices or index already specified")[ FD ]
Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_12 $$ if (token == XContentParser.Token.FIELD_NAME) [ CD ]
Line_13 $$ currentFieldName = parser.currentName()-->Line_45 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) [ FD ]
Line_9 $$ String currentFieldName = null-->Line_45 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) [ FD ]
Line_8 $$ float boost = AbstractQueryBuilder.DEFAULT_BOOST-->Line_48 $$ boost = parser.floatValue()[ FD ]
Line_13 $$ currentFieldName = parser.currentName()-->Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) [ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_46 $$ queryName = parser.text()[ FD ]
Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_12 $$ if (token == XContentParser.Token.FIELD_NAME) [ FD ]
Line_38 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDEX_FIELD)) -->Line_43 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ CD ]
Line_48 $$ boost = parser.floatValue()-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_44 $$ noMatchQuery = parseNoMatchQuery(parser.text())-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_54 $$ if (innerQuery == null) [ CD ]
Line_45 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) -->Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) [ CD ]
Line_14 $$ if (token == XContentParser.Token.START_OBJECT) -->Line_22 $$ if (token == XContentParser.Token.START_ARRAY) [ CD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_58 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] requires 'indices' or 'index' element")[ FD ]
Line_13 $$ currentFieldName = parser.currentName()-->Line_38 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDEX_FIELD)) [ FD ]
Line_5 $$ Collection<String> indices = new ArrayList()-->Line_39 $$ if (indices.isEmpty() == false) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ CD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_30 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] no value specified for 'indices' entry")[ FD ]
Line_12 $$ if (token == XContentParser.Token.FIELD_NAME) -->Line_13 $$ currentFieldName = parser.currentName()[ CD ]
Line_9 $$ String currentFieldName = null-->Line_15 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, QUERY_FIELD)) [ FD ]
Line_45 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) -->Line_46 $$ queryName = parser.text()[ CD ]
Line_8 $$ float boost = AbstractQueryBuilder.DEFAULT_BOOST-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_38 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDEX_FIELD)) [ FD ]
Line_10 $$ XContentParser.Token token-->Line_22 $$ if (token == XContentParser.Token.START_ARRAY) [ FD ]
Line_6 $$ QueryBuilder noMatchQuery = IndicesQueryBuilder.defaultNoMatchQuery()-->Line_18 $$ noMatchQuery = parseContext.parseInnerQueryBuilder()[ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ FD ]
Line_28 $$ String value = parser.textOrNull()-->Line_32 $$ indices.add(value)[ FD ]
Line_5 $$ Collection<String> indices = new ArrayList()-->Line_57 $$ if (indices.isEmpty()) [ FD ]
Line_13 $$ currentFieldName = parser.currentName()-->Line_43 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ FD ]
Line_13 $$ currentFieldName = parser.currentName()-->Line_15 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, QUERY_FIELD)) [ FD ]
Line_10 $$ XContentParser.Token token-->Line_12 $$ if (token == XContentParser.Token.FIELD_NAME) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_18 $$ noMatchQuery = parseContext.parseInnerQueryBuilder()[ FD ]
Line_9 $$ String currentFieldName = null-->Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_3 $$ XContentParser parser = parseContext.parser()[ FD ]
Line_37 $$ if (token.isValue()) -->Line_38 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDEX_FIELD)) [ CD ]
Line_23 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDICES_FIELD)) -->Line_27 $$ while (parser.nextToken() != XContentParser.Token.END_ARRAY) [ CD ]
Line_6 $$ QueryBuilder noMatchQuery = IndicesQueryBuilder.defaultNoMatchQuery()-->Line_44 $$ noMatchQuery = parseNoMatchQuery(parser.text())[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_6 $$ QueryBuilder noMatchQuery = IndicesQueryBuilder.defaultNoMatchQuery()[ CD ]
Line_13 $$ currentFieldName = parser.currentName()-->Line_23 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDICES_FIELD)) [ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_50 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] query does not support [" + currentFieldName + "]")[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) [ FD ]
Line_7 $$ String queryName = null-->Line_46 $$ queryName = parser.text()[ FD ]
Line_15 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, QUERY_FIELD)) -->Line_17 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ CD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_23 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDICES_FIELD)) [ FD ]
Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) -->Line_22 $$ if (token == XContentParser.Token.START_ARRAY) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_15 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, QUERY_FIELD)) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_8 $$ float boost = AbstractQueryBuilder.DEFAULT_BOOST[ CD ]
Line_15 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, QUERY_FIELD)) -->Line_16 $$ innerQuery = parseContext.parseInnerQueryBuilder()[ CD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_42 $$ indices.add(parser.text())[ FD ]
Line_13 $$ currentFieldName = parser.currentName()-->Line_17 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ FD ]
Line_18 $$ noMatchQuery = parseContext.parseInnerQueryBuilder()-->Line_44 $$ noMatchQuery = parseNoMatchQuery(parser.text())[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_7 $$ String queryName = null[ CD ]
Line_27 $$ while (parser.nextToken() != XContentParser.Token.END_ARRAY) -->Line_28 $$ String value = parser.textOrNull()[ CD ]
Line_10 $$ XContentParser.Token token-->Line_14 $$ if (token == XContentParser.Token.START_OBJECT) [ FD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_48 $$ boost = parser.floatValue()[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_10 $$ XContentParser.Token token[ CD ]
Line_4 $$ QueryBuilder innerQuery = null-->Line_16 $$ innerQuery = parseContext.parseInnerQueryBuilder()[ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_17 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) [ FD ]
Line_10 $$ XContentParser.Token token-->Line_37 $$ if (token.isValue()) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_57 $$ if (indices.isEmpty()) [ CD ]
Line_28 $$ String value = parser.textOrNull()-->Line_29 $$ if (value == null) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_9 $$ String currentFieldName = null[ CD ]
Line_9 $$ String currentFieldName = null-->Line_38 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDEX_FIELD)) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_4 $$ QueryBuilder innerQuery = null[ CD ]
Line_16 $$ innerQuery = parseContext.parseInnerQueryBuilder()-->Line_54 $$ if (innerQuery == null) [ FD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_5 $$ Collection<String> indices = new ArrayList()[ CD ]
Line_3 $$ XContentParser parser = parseContext.parser()-->Line_55 $$ throw new ParsingException(parser.getTokenLocation(), "[indices] requires 'query' element")[ FD ]
Line_22 $$ if (token == XContentParser.Token.START_ARRAY) -->Line_23 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDICES_FIELD)) [ CD ]
Line_47 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.BOOST_FIELD)) -->Line_48 $$ boost = parser.floatValue()[ CD ]
Line_38 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDEX_FIELD)) -->Line_39 $$ if (indices.isEmpty() == false) [ CD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_3 $$ XContentParser parser = parseContext.parser()[ CD ]
Line_2 $$ public QueryBuilder fromXContent(QueryParseContext parseContext) throws IOException, ParsingException -->Line_11 $$ while ((token = parser.nextToken()) != XContentParser.Token.END_OBJECT) [ CD ]
Line_43 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) -->Line_44 $$ noMatchQuery = parseNoMatchQuery(parser.text())[ CD ]
Line_43 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, NO_MATCH_QUERY)) -->Line_45 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, AbstractQueryBuilder.NAME_FIELD)) [ CD ]
Line_23 $$ if (parseContext.parseFieldMatcher().match(currentFieldName, INDICES_FIELD)) -->Line_24 $$ if (indices.isEmpty() == false) [ CD ]
Line_5 $$ Collection<String> indices = new ArrayList()-->Line_42 $$ indices.add(parser.text())[ FD ]
Line_18 $$ noMatchQuery = parseContext.parseInnerQueryBuilder()-->Line_60 $$ return new IndicesQueryBuilder(innerQuery, indices.toArray(new String[indices.size()])).noMatchQuery(noMatchQuery).boost(boost).queryName(queryName)[ FD ]
Line_5 $$ Collection<String> indices = new ArrayList()-->Line_24 $$ if (indices.isEmpty() == false) [ FD ]
