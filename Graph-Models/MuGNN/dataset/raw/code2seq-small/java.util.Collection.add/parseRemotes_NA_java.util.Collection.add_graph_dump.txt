Line_4 $$ Collection<Url> urls = new ArrayList<Url>()-->Line_18 $$ return Pair.create(remotes, urls)[ FD ]
Line_2 $$ private static Pair<Collection<Remote>, Collection<Url>> parseRemotes(@NotNull Ini ini, @NotNull ClassLoader classLoader) -->Line_8 $$ Remote remote = parseRemoteSection(sectionName, section, classLoader)[ FD ]
Line_13 $$ if (url != null) -->Line_14 $$ urls.add(url)[ CD ]
Line_6 $$ String sectionName = stringSectionEntry.getKey()-->Line_12 $$ Url url = parseUrlSection(sectionName, section, classLoader)[ FD ]
Line_9 $$ if (remote != null) -->Line_12 $$ Url url = parseUrlSection(sectionName, section, classLoader)[ CD ]
Line_12 $$ Url url = parseUrlSection(sectionName, section, classLoader)-->Line_13 $$ if (url != null) [ FD ]
Line_3 $$ Collection<Remote> remotes = new ArrayList<Remote>()-->Line_10 $$ remotes.add(remote)[ FD ]
Line_2 $$ private static Pair<Collection<Remote>, Collection<Url>> parseRemotes(@NotNull Ini ini, @NotNull ClassLoader classLoader) -->Line_4 $$ Collection<Url> urls = new ArrayList<Url>()[ CD ]
Line_8 $$ Remote remote = parseRemoteSection(sectionName, section, classLoader)-->Line_10 $$ remotes.add(remote)[ FD ]
Line_3 $$ Collection<Remote> remotes = new ArrayList<Remote>()-->Line_18 $$ return Pair.create(remotes, urls)[ FD ]
Line_7 $$ Profile.Section section = stringSectionEntry.getValue()-->Line_12 $$ Url url = parseUrlSection(sectionName, section, classLoader)[ FD ]
Line_2 $$ private static Pair<Collection<Remote>, Collection<Url>> parseRemotes(@NotNull Ini ini, @NotNull ClassLoader classLoader) -->Line_3 $$ Collection<Remote> remotes = new ArrayList<Remote>()[ CD ]
Line_2 $$ private static Pair<Collection<Remote>, Collection<Url>> parseRemotes(@NotNull Ini ini, @NotNull ClassLoader classLoader) -->Line_18 $$ return Pair.create(remotes, urls)[ CD ]
Line_12 $$ Url url = parseUrlSection(sectionName, section, classLoader)-->Line_14 $$ urls.add(url)[ FD ]
Line_8 $$ Remote remote = parseRemoteSection(sectionName, section, classLoader)-->Line_9 $$ if (remote != null) [ FD ]
Line_5 $$ for (Map.Entry<String, Profile.Section> stringSectionEntry : ini.entrySet()) -->Line_6 $$ String sectionName = stringSectionEntry.getKey()[ FD ]
Line_5 $$ for (Map.Entry<String, Profile.Section> stringSectionEntry : ini.entrySet()) -->Line_7 $$ Profile.Section section = stringSectionEntry.getValue()[ FD ]
Line_2 $$ private static Pair<Collection<Remote>, Collection<Url>> parseRemotes(@NotNull Ini ini, @NotNull ClassLoader classLoader) -->Line_5 $$ for (Map.Entry<String, Profile.Section> stringSectionEntry : ini.entrySet()) [ FD ]
Line_7 $$ Profile.Section section = stringSectionEntry.getValue()-->Line_8 $$ Remote remote = parseRemoteSection(sectionName, section, classLoader)[ FD ]
Line_2 $$ private static Pair<Collection<Remote>, Collection<Url>> parseRemotes(@NotNull Ini ini, @NotNull ClassLoader classLoader) -->Line_12 $$ Url url = parseUrlSection(sectionName, section, classLoader)[ FD ]
Line_9 $$ if (remote != null) -->Line_13 $$ if (url != null) [ CD ]
Line_9 $$ if (remote != null) -->Line_10 $$ remotes.add(remote)[ CD ]
Line_6 $$ String sectionName = stringSectionEntry.getKey()-->Line_8 $$ Remote remote = parseRemoteSection(sectionName, section, classLoader)[ FD ]
Line_4 $$ Collection<Url> urls = new ArrayList<Url>()-->Line_14 $$ urls.add(url)[ FD ]
