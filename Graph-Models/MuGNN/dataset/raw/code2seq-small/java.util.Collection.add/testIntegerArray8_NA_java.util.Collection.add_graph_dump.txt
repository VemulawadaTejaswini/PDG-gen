Line_2 $$ public void testIntegerArray8() -->Line_5 $$ integers.add(String.valueOf(Integer.MAX_VALUE))[ CD ]
Line_2 $$ public void testIntegerArray8() -->Line_4 $$ integers.add(String.valueOf(Integer.MIN_VALUE))[ CD ]
Line_2 $$ public void testIntegerArray8() -->Line_6 $$ int[] convertedIntegers = _converter.convertType(ExpandoColumnConstants.INTEGER_ARRAY, integers)[ CD ]
Line_3 $$ Collection<String> integers = new ArrayList()-->Line_5 $$ integers.add(String.valueOf(Integer.MAX_VALUE))[ FD ]
Line_3 $$ Collection<String> integers = new ArrayList()-->Line_4 $$ integers.add(String.valueOf(Integer.MIN_VALUE))[ FD ]
Line_2 $$ public void testIntegerArray8() -->Line_9 $$ Assert.assertEquals(Integer.MAX_VALUE, convertedIntegers[1])[ CD ]
Line_2 $$ public void testIntegerArray8() -->Line_3 $$ Collection<String> integers = new ArrayList()[ CD ]
Line_2 $$ public void testIntegerArray8() -->Line_8 $$ Assert.assertEquals(Integer.MIN_VALUE, convertedIntegers[0])[ CD ]
Line_2 $$ public void testIntegerArray8() -->Line_7 $$ Assert.assertEquals(2, convertedIntegers.length)[ CD ]
Line_3 $$ Collection<String> integers = new ArrayList()-->Line_6 $$ int[] convertedIntegers = _converter.convertType(ExpandoColumnConstants.INTEGER_ARRAY, integers)[ FD ]
