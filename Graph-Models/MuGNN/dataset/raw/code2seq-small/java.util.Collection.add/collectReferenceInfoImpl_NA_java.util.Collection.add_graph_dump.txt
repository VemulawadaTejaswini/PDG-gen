Line_4 $$ GrReferenceExpression expr = (GrReferenceExpression) elem-->Line_9 $$ int offsetInMethod = expr.getTextRange().getStartOffset() - method.getTextRange().getStartOffset()[ FD ]
Line_5 $$ PsiReference ref = expr.getReference()-->Line_6 $$ if (ref != null) [ FD ]
Line_2 $$ private static void collectReferenceInfoImpl(Collection<ReferenceExpressionInfo> infos, PsiElement elem, GrMethod method) -->Line_15 $$ for (PsiElement element : elem.getChildren()) [ FD ]
Line_2 $$ private static void collectReferenceInfoImpl(Collection<ReferenceExpressionInfo> infos, PsiElement elem, GrMethod method) -->Line_11 $$ infos.add(new ReferenceExpressionInfo(expr, offsetInMethod, member, member.getContainingClass()))[ FD ]
Line_3 $$ if (elem instanceof GrReferenceExpression) -->Line_4 $$ GrReferenceExpression expr = (GrReferenceExpression) elem[ CD ]
Line_2 $$ private static void collectReferenceInfoImpl(Collection<ReferenceExpressionInfo> infos, PsiElement elem, GrMethod method) -->Line_3 $$ if (elem instanceof GrReferenceExpression) [ CD ]
Line_8 $$ if (declaration instanceof GrMember) -->Line_11 $$ infos.add(new ReferenceExpressionInfo(expr, offsetInMethod, member, member.getContainingClass()))[ CD ]
Line_7 $$ PsiElement declaration = ref.resolve()-->Line_8 $$ if (declaration instanceof GrMember) [ FD ]
Line_6 $$ if (ref != null) -->Line_7 $$ PsiElement declaration = ref.resolve()[ CD ]
Line_2 $$ private static void collectReferenceInfoImpl(Collection<ReferenceExpressionInfo> infos, PsiElement elem, GrMethod method) -->Line_9 $$ int offsetInMethod = expr.getTextRange().getStartOffset() - method.getTextRange().getStartOffset()[ FD ]
Line_10 $$ GrMember member = (GrMember) declaration-->Line_11 $$ infos.add(new ReferenceExpressionInfo(expr, offsetInMethod, member, member.getContainingClass()))[ FD ]
Line_2 $$ private static void collectReferenceInfoImpl(Collection<ReferenceExpressionInfo> infos, PsiElement elem, GrMethod method) -->Line_16 $$ collectReferenceInfoImpl(infos, element, method)[ FD ]
Line_3 $$ if (elem instanceof GrReferenceExpression) -->Line_5 $$ PsiReference ref = expr.getReference()[ CD ]
Line_4 $$ GrReferenceExpression expr = (GrReferenceExpression) elem-->Line_5 $$ PsiReference ref = expr.getReference()[ FD ]
Line_5 $$ PsiReference ref = expr.getReference()-->Line_7 $$ PsiElement declaration = ref.resolve()[ FD ]
Line_15 $$ for (PsiElement element : elem.getChildren()) -->Line_16 $$ collectReferenceInfoImpl(infos, element, method)[ FD ]
Line_2 $$ private static void collectReferenceInfoImpl(Collection<ReferenceExpressionInfo> infos, PsiElement elem, GrMethod method) -->Line_3 $$ if (elem instanceof GrReferenceExpression) [ FD ]
Line_8 $$ if (declaration instanceof GrMember) -->Line_9 $$ int offsetInMethod = expr.getTextRange().getStartOffset() - method.getTextRange().getStartOffset()[ CD ]
Line_3 $$ if (elem instanceof GrReferenceExpression) -->Line_6 $$ if (ref != null) [ CD ]
Line_6 $$ if (ref != null) -->Line_8 $$ if (declaration instanceof GrMember) [ CD ]
Line_8 $$ if (declaration instanceof GrMember) -->Line_10 $$ GrMember member = (GrMember) declaration[ CD ]
