Line_6 $$ List<ContextMapping.QueryContext> queryContexts = mapping.parseQueryContext(parser)-->Line_7 $$ assertThat(queryContexts.size(), equalTo(1 + 1 + 8 + 1 + 8 + 1 + 8))[ FD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_14 $$ Collection<String> secondLocations = new ArrayList()[ CD ]
Line_3 $$ XContentBuilder builder = jsonBuilder().startArray().startObject().startObject("context").field("lat", 23.654242).field("lon", 90.047153).endObject().field("boost", 10).array("neighbours", 1, 2).endObject().startObject().field("lat", 22.337374).field("lon", 92.112583).endObject().endArray()-->Line_4 $$ XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.bytes())[ FD ]
Line_20 $$ if (secondLocations.contains(queryContext.context)) -->Line_21 $$ assertThat(queryContext.boost, equalTo(1))[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_12 $$ firstLocations.add("wh")[ CD ]
Line_18 $$ if (firstLocations.contains(queryContext.context)) -->Line_20 $$ if (secondLocations.contains(queryContext.context)) [ CD ]
Line_14 $$ Collection<String> secondLocations = new ArrayList()-->Line_20 $$ if (secondLocations.contains(queryContext.context)) [ FD ]
Line_8 $$ Collection<String> firstLocations = new ArrayList()-->Line_9 $$ firstLocations.add("wh0n94")[ FD ]
Line_4 $$ XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.bytes())-->Line_6 $$ List<ContextMapping.QueryContext> queryContexts = mapping.parseQueryContext(parser)[ FD ]
Line_5 $$ GeoContextMapping mapping = ContextBuilder.geo("geo").build()-->Line_6 $$ List<ContextMapping.QueryContext> queryContexts = mapping.parseQueryContext(parser)[ FD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_16 $$ GeoHashUtils.addNeighbors("w5cx04", 6, secondLocations)[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_6 $$ List<ContextMapping.QueryContext> queryContexts = mapping.parseQueryContext(parser)[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_15 $$ secondLocations.add("w5cx04")[ CD ]
Line_18 $$ if (firstLocations.contains(queryContext.context)) -->Line_19 $$ assertThat(queryContext.boost, equalTo(10))[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_8 $$ Collection<String> firstLocations = new ArrayList()[ CD ]
Line_14 $$ Collection<String> secondLocations = new ArrayList()-->Line_16 $$ GeoHashUtils.addNeighbors("w5cx04", 6, secondLocations)[ FD ]
Line_8 $$ Collection<String> firstLocations = new ArrayList()-->Line_12 $$ firstLocations.add("wh")[ FD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_10 $$ firstLocations.add("w")[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_4 $$ XContentParser parser = XContentFactory.xContent(XContentType.JSON).createParser(builder.bytes())[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_3 $$ XContentBuilder builder = jsonBuilder().startArray().startObject().startObject("context").field("lat", 23.654242).field("lon", 90.047153).endObject().field("boost", 10).array("neighbours", 1, 2).endObject().startObject().field("lat", 22.337374).field("lon", 92.112583).endObject().endArray()[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_11 $$ GeoHashUtils.addNeighbors("w", 1, firstLocations)[ CD ]
Line_8 $$ Collection<String> firstLocations = new ArrayList()-->Line_11 $$ GeoHashUtils.addNeighbors("w", 1, firstLocations)[ FD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_5 $$ GeoContextMapping mapping = ContextBuilder.geo("geo").build()[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_13 $$ GeoHashUtils.addNeighbors("wh", 2, firstLocations)[ CD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_9 $$ firstLocations.add("wh0n94")[ CD ]
Line_8 $$ Collection<String> firstLocations = new ArrayList()-->Line_13 $$ GeoHashUtils.addNeighbors("wh", 2, firstLocations)[ FD ]
Line_20 $$ if (secondLocations.contains(queryContext.context)) -->Line_23 $$ fail(queryContext.context + " was not expected")[ CD ]
Line_8 $$ Collection<String> firstLocations = new ArrayList()-->Line_10 $$ firstLocations.add("w")[ FD ]
Line_8 $$ Collection<String> firstLocations = new ArrayList()-->Line_18 $$ if (firstLocations.contains(queryContext.context)) [ FD ]
Line_14 $$ Collection<String> secondLocations = new ArrayList()-->Line_15 $$ secondLocations.add("w5cx04")[ FD ]
Line_2 $$ public void testParsingQueryContextMixed() throws Exception -->Line_7 $$ assertThat(queryContexts.size(), equalTo(1 + 1 + 8 + 1 + 8 + 1 + 8))[ CD ]
