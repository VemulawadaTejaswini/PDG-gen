Line_3 $$ Collection<String> coll = new LinkedHashSet<String>()-->Line_6 $$ coll = Collections.unmodifiableCollection(coll)[ FD ]
Line_11 $$ ArrayList list = (ArrayList) value-->Line_12 $$ assertEquals("one", list.get(0))[ FD ]
Line_11 $$ ArrayList list = (ArrayList) value-->Line_13 $$ assertEquals("two", list.get(1))[ FD ]
Line_2 $$ public void SPR11348() -->Line_4 $$ coll.add("one")[ CD ]
Line_2 $$ public void SPR11348() -->Line_8 $$ Expression expr = parser.parseExpression("new java.util.ArrayList(#root)")[ CD ]
Line_2 $$ public void SPR11348() -->Line_7 $$ SpelExpressionParser parser = new SpelExpressionParser()[ CD ]
Line_7 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_8 $$ Expression expr = parser.parseExpression("new java.util.ArrayList(#root)")[ FD ]
Line_2 $$ public void SPR11348() -->Line_3 $$ Collection<String> coll = new LinkedHashSet<String>()[ CD ]
Line_8 $$ Expression expr = parser.parseExpression("new java.util.ArrayList(#root)")-->Line_9 $$ Object value = expr.getValue(coll)[ FD ]
Line_2 $$ public void SPR11348() -->Line_6 $$ coll = Collections.unmodifiableCollection(coll)[ CD ]
Line_2 $$ public void SPR11348() -->Line_11 $$ ArrayList list = (ArrayList) value[ CD ]
Line_3 $$ Collection<String> coll = new LinkedHashSet<String>()-->Line_5 $$ coll.add("two")[ FD ]
Line_2 $$ public void SPR11348() -->Line_12 $$ assertEquals("one", list.get(0))[ CD ]
Line_3 $$ Collection<String> coll = new LinkedHashSet<String>()-->Line_4 $$ coll.add("one")[ FD ]
Line_2 $$ public void SPR11348() -->Line_9 $$ Object value = expr.getValue(coll)[ CD ]
Line_6 $$ coll = Collections.unmodifiableCollection(coll)-->Line_9 $$ Object value = expr.getValue(coll)[ FD ]
Line_2 $$ public void SPR11348() -->Line_13 $$ assertEquals("two", list.get(1))[ CD ]
Line_2 $$ public void SPR11348() -->Line_10 $$ assertTrue(value instanceof ArrayList)[ CD ]
Line_2 $$ public void SPR11348() -->Line_5 $$ coll.add("two")[ CD ]
Line_3 $$ Collection<String> coll = new LinkedHashSet<String>()-->Line_9 $$ Object value = expr.getValue(coll)[ FD ]
