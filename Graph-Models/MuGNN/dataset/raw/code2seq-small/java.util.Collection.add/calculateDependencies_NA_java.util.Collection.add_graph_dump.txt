Line_3 $$ if (!bindInputs) -->Line_6 $$ return false[ CD ]
Line_11 $$ for (ModelBinding binding : binder.getInputBindings()) -->Line_12 $$ dependencies.add(graph.nodeAtState(new NodeAtState(binding.getNode().getPath(), binding.getPredicate().getState())))[ FD ]
Line_2 $$ public boolean calculateDependencies(GoalGraph graph, Collection<ModelGoal> dependencies) -->Line_4 $$ dependencies.add(new TryBindInputs(binder))[ FD ]
Line_2 $$ public boolean calculateDependencies(GoalGraph graph, Collection<ModelGoal> dependencies) -->Line_14 $$ return true[ CD ]
Line_3 $$ if (!bindInputs) -->Line_4 $$ dependencies.add(new TryBindInputs(binder))[ CD ]
Line_2 $$ public boolean calculateDependencies(GoalGraph graph, Collection<ModelGoal> dependencies) -->Line_3 $$ if (!bindInputs) [ CD ]
Line_2 $$ public boolean calculateDependencies(GoalGraph graph, Collection<ModelGoal> dependencies) -->Line_12 $$ dependencies.add(graph.nodeAtState(new NodeAtState(binding.getNode().getPath(), binding.getPredicate().getState())))[ FD ]
Line_2 $$ public boolean calculateDependencies(GoalGraph graph, Collection<ModelGoal> dependencies) -->Line_8 $$ if (!binder.isBound()) [ CD ]
