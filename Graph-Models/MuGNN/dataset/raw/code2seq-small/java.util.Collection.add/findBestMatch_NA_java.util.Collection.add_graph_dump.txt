Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_5 $$ ComponentMetaDataResolveState request = queue.removeFirst()[ FD ]
Line_3 $$ RepositoryChainModuleResolution best = null-->Line_27 $$ best = best != null ? best : moduleResolution[ FD ]
Line_6 $$ BuildableModuleComponentMetaDataResolveResult metaDataResolveResult-->Line_23 $$ RepositoryChainModuleResolution moduleResolution = new RepositoryChainModuleResolution(request.repository, metaDataResolveResult.getMetaData())[ FD ]
Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_3 $$ RepositoryChainModuleResolution best = null[ CD ]
Line_6 $$ BuildableModuleComponentMetaDataResolveResult metaDataResolveResult-->Line_15 $$ failures.add(metaDataResolveResult.getFailure())[ FD ]
Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_10 $$ failures.add(t)[ FD ]
Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_4 $$ while (!queue.isEmpty()) [ CD ]
Line_8 $$ metaDataResolveResult = request.resolve()-->Line_30 $$ throw new IllegalStateException("Unexpected state for resolution: " + metaDataResolveResult.getState())[ FD ]
Line_8 $$ metaDataResolveResult = request.resolve()-->Line_15 $$ failures.add(metaDataResolveResult.getFailure())[ FD ]
Line_5 $$ ComponentMetaDataResolveState request = queue.removeFirst()-->Line_8 $$ metaDataResolveResult = request.resolve()[ FD ]
Line_5 $$ ComponentMetaDataResolveState request = queue.removeFirst()-->Line_18 $$ if (request.canMakeFurtherAttempts()) [ FD ]
Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_15 $$ failures.add(metaDataResolveResult.getFailure())[ FD ]
Line_8 $$ metaDataResolveResult = request.resolve()-->Line_13 $$ switch(metaDataResolveResult.getState()) [ FD ]
Line_8 $$ metaDataResolveResult = request.resolve()-->Line_23 $$ RepositoryChainModuleResolution moduleResolution = new RepositoryChainModuleResolution(request.repository, metaDataResolveResult.getMetaData())[ FD ]
Line_6 $$ BuildableModuleComponentMetaDataResolveResult metaDataResolveResult-->Line_30 $$ throw new IllegalStateException("Unexpected state for resolution: " + metaDataResolveResult.getState())[ FD ]
Line_6 $$ BuildableModuleComponentMetaDataResolveResult metaDataResolveResult-->Line_13 $$ switch(metaDataResolveResult.getState()) [ FD ]
Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_19 $$ missing.add(request)[ FD ]
Line_24 $$ if (!metaDataResolveResult.getMetaData().isGenerated()) -->Line_25 $$ return moduleResolution[ CD ]
Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_33 $$ return best[ CD ]
Line_4 $$ while (!queue.isEmpty()) -->Line_6 $$ BuildableModuleComponentMetaDataResolveResult metaDataResolveResult[ CD ]
Line_4 $$ while (!queue.isEmpty()) -->Line_5 $$ ComponentMetaDataResolveState request = queue.removeFirst()[ CD ]
Line_6 $$ BuildableModuleComponentMetaDataResolveResult metaDataResolveResult-->Line_8 $$ metaDataResolveResult = request.resolve()[ FD ]
Line_5 $$ ComponentMetaDataResolveState request = queue.removeFirst()-->Line_19 $$ missing.add(request)[ FD ]
Line_18 $$ if (request.canMakeFurtherAttempts()) -->Line_19 $$ missing.add(request)[ CD ]
Line_2 $$ private RepositoryChainModuleResolution findBestMatch(LinkedList<ComponentMetaDataResolveState> queue, Collection<Throwable> failures, Collection<ComponentMetaDataResolveState> missing) -->Line_4 $$ while (!queue.isEmpty()) [ FD ]
Line_8 $$ metaDataResolveResult = request.resolve()-->Line_24 $$ if (!metaDataResolveResult.getMetaData().isGenerated()) [ FD ]
Line_6 $$ BuildableModuleComponentMetaDataResolveResult metaDataResolveResult-->Line_24 $$ if (!metaDataResolveResult.getMetaData().isGenerated()) [ FD ]
