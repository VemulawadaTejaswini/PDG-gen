Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_6 $$ if (userObject != null) [ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_15 $$ final boolean expanded = tree.isExpanded(new TreePath(defaultMutableTreeNode.getPath()))[ CD ]
Line_13 $$ final StringBuilder buff = new StringBuilder()-->Line_17 $$ buff.append(expanded ? "-" : "+")[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_23 $$ buff.append(nodeText)[ CD ]
Line_30 $$ for (int i = 0; i < childCount; i++) -->Line_31 $$ printImpl(tree, tree.getModel().getChild(root, i), strings, level + 1, withSelection, printInfo, nodePrintCondition)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_27 $$ strings.add(buff.toString())[ FD ]
Line_5 $$ String nodeText-->Line_11 $$ if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_5 $$ String nodeText[ CD ]
Line_3 $$ DefaultMutableTreeNode defaultMutableTreeNode = (DefaultMutableTreeNode) root-->Line_15 $$ final boolean expanded = tree.isExpanded(new TreePath(defaultMutableTreeNode.getPath()))[ FD ]
Line_29 $$ if (expanded) -->Line_30 $$ for (int i = 0; i < childCount; i++) [ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_19 $$ final boolean selected = tree.getSelectionModel().isPathSelected(new TreePath(defaultMutableTreeNode.getPath()))[ CD ]
Line_4 $$ final Object userObject = defaultMutableTreeNode.getUserObject()-->Line_7 $$ nodeText = toString(userObject, printInfo)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_7 $$ nodeText = toString(userObject, printInfo)[ FD ]
Line_19 $$ final boolean selected = tree.getSelectionModel().isPathSelected(new TreePath(defaultMutableTreeNode.getPath()))-->Line_24 $$ if (withSelection && selected) [ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_29 $$ if (expanded) [ CD ]
Line_30 $$ for (int i = 0; i < childCount; i++) -->Line_31 $$ printImpl(tree, tree.getModel().getChild(root, i), strings, level + 1, withSelection, printInfo, nodePrintCondition)[ CD ]
Line_24 $$ if (withSelection && selected) -->Line_25 $$ buff.append("]")[ CD ]
Line_3 $$ DefaultMutableTreeNode defaultMutableTreeNode = (DefaultMutableTreeNode) root-->Line_16 $$ if (!defaultMutableTreeNode.isLeaf()) [ FD ]
Line_4 $$ final Object userObject = defaultMutableTreeNode.getUserObject()-->Line_6 $$ if (userObject != null) [ FD ]
Line_5 $$ String nodeText-->Line_7 $$ nodeText = toString(userObject, printInfo)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_28 $$ int childCount = tree.getModel().getChildCount(root)[ FD ]
Line_13 $$ final StringBuilder buff = new StringBuilder()-->Line_21 $$ buff.append("[")[ FD ]
Line_3 $$ DefaultMutableTreeNode defaultMutableTreeNode = (DefaultMutableTreeNode) root-->Line_19 $$ final boolean selected = tree.getSelectionModel().isPathSelected(new TreePath(defaultMutableTreeNode.getPath()))[ FD ]
Line_13 $$ final StringBuilder buff = new StringBuilder()-->Line_25 $$ buff.append("]")[ FD ]
Line_13 $$ final StringBuilder buff = new StringBuilder()-->Line_23 $$ buff.append(nodeText)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_28 $$ int childCount = tree.getModel().getChildCount(root)[ CD ]
Line_28 $$ int childCount = tree.getModel().getChildCount(root)-->Line_30 $$ for (int i = 0; i < childCount; i++) [ FD ]
Line_5 $$ String nodeText-->Line_23 $$ buff.append(nodeText)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_31 $$ printImpl(tree, tree.getModel().getChild(root, i), strings, level + 1, withSelection, printInfo, nodePrintCondition)[ FD ]
Line_7 $$ nodeText = toString(userObject, printInfo)-->Line_9 $$ nodeText = "null"[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_24 $$ if (withSelection && selected) [ CD ]
Line_13 $$ final StringBuilder buff = new StringBuilder()-->Line_27 $$ strings.add(buff.toString())[ FD ]
Line_11 $$ if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))-->Line_12 $$ return[ CD ]
Line_9 $$ nodeText = "null"-->Line_23 $$ buff.append(nodeText)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_13 $$ final StringBuilder buff = new StringBuilder()[ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_11 $$ if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))[ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_14 $$ StringUtil.repeatSymbol(buff, ' ', level)[ CD ]
Line_6 $$ if (userObject != null) -->Line_9 $$ nodeText = "null"[ CD ]
Line_19 $$ final boolean selected = tree.getSelectionModel().isPathSelected(new TreePath(defaultMutableTreeNode.getPath()))-->Line_20 $$ if (withSelection && selected) [ FD ]
Line_20 $$ if (withSelection && selected) -->Line_21 $$ buff.append("[")[ CD ]
Line_7 $$ nodeText = toString(userObject, printInfo)-->Line_11 $$ if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_3 $$ DefaultMutableTreeNode defaultMutableTreeNode = (DefaultMutableTreeNode) root[ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_20 $$ if (withSelection && selected) [ FD ]
Line_7 $$ nodeText = toString(userObject, printInfo)-->Line_23 $$ buff.append(nodeText)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_19 $$ final boolean selected = tree.getSelectionModel().isPathSelected(new TreePath(defaultMutableTreeNode.getPath()))[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_24 $$ if (withSelection && selected) [ FD ]
Line_16 $$ if (!defaultMutableTreeNode.isLeaf()) -->Line_17 $$ buff.append(expanded ? "-" : "+")[ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_15 $$ final boolean expanded = tree.isExpanded(new TreePath(defaultMutableTreeNode.getPath()))[ FD ]
Line_5 $$ String nodeText-->Line_9 $$ nodeText = "null"[ FD ]
Line_13 $$ final StringBuilder buff = new StringBuilder()-->Line_14 $$ StringUtil.repeatSymbol(buff, ' ', level)[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_14 $$ StringUtil.repeatSymbol(buff, ' ', level)[ FD ]
Line_9 $$ nodeText = "null"-->Line_11 $$ if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_4 $$ final Object userObject = defaultMutableTreeNode.getUserObject()[ CD ]
Line_3 $$ DefaultMutableTreeNode defaultMutableTreeNode = (DefaultMutableTreeNode) root-->Line_4 $$ final Object userObject = defaultMutableTreeNode.getUserObject()[ FD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_16 $$ if (!defaultMutableTreeNode.isLeaf()) [ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_27 $$ strings.add(buff.toString())[ CD ]
Line_6 $$ if (userObject != null) -->Line_7 $$ nodeText = toString(userObject, printInfo)[ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_20 $$ if (withSelection && selected) [ CD ]
Line_2 $$ private static void printImpl(JTree tree, Object root, Collection<String> strings, int level, boolean withSelection, @Nullable Queryable.PrintInfo printInfo, @Nullable Condition<String> nodePrintCondition) -->Line_11 $$ if (nodePrintCondition != null && !nodePrintCondition.value(nodeText))[ FD ]
