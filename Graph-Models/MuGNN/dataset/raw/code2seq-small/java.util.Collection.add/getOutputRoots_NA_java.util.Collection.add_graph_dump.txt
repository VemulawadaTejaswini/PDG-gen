Line_12 $$ final File annotationOut = ProjectPaths.getAnnotationProcessorGeneratedSourcesOutputDir(module, isTests(), profile)-->Line_14 $$ result.add(annotationOut)[ FD ]
Line_3 $$ Collection<File> result = new SmartList<File>()-->Line_6 $$ result.add(outputDir)[ FD ]
Line_4 $$ final File outputDir = getOutputDir()-->Line_5 $$ if (outputDir != null) [ FD ]
Line_11 $$ if (profile.isEnabled()) -->Line_12 $$ final File annotationOut = ProjectPaths.getAnnotationProcessorGeneratedSourcesOutputDir(module, isTests(), profile)[ CD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_4 $$ final File outputDir = getOutputDir()[ CD ]
Line_11 $$ if (profile.isEnabled()) -->Line_13 $$ if (annotationOut != null) [ CD ]
Line_4 $$ final File outputDir = getOutputDir()-->Line_6 $$ result.add(outputDir)[ FD ]
Line_10 $$ final ProcessorConfigProfile profile = configuration.getAnnotationProcessingProfile(module)-->Line_11 $$ if (profile.isEnabled()) [ FD ]
Line_12 $$ final File annotationOut = ProjectPaths.getAnnotationProcessorGeneratedSourcesOutputDir(module, isTests(), profile)-->Line_13 $$ if (annotationOut != null) [ FD ]
Line_9 $$ final JpsJavaCompilerConfiguration configuration = JpsJavaExtensionService.getInstance().getOrCreateCompilerConfiguration(module.getProject())-->Line_10 $$ final ProcessorConfigProfile profile = configuration.getAnnotationProcessingProfile(module)[ FD ]
Line_8 $$ final JpsModule module = getModule()-->Line_9 $$ final JpsJavaCompilerConfiguration configuration = JpsJavaExtensionService.getInstance().getOrCreateCompilerConfiguration(module.getProject())[ FD ]
Line_5 $$ if (outputDir != null) -->Line_6 $$ result.add(outputDir)[ CD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_17 $$ return result[ CD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_9 $$ final JpsJavaCompilerConfiguration configuration = JpsJavaExtensionService.getInstance().getOrCreateCompilerConfiguration(module.getProject())[ CD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_8 $$ final JpsModule module = getModule()[ CD ]
Line_8 $$ final JpsModule module = getModule()-->Line_10 $$ final ProcessorConfigProfile profile = configuration.getAnnotationProcessingProfile(module)[ FD ]
Line_3 $$ Collection<File> result = new SmartList<File>()-->Line_14 $$ result.add(annotationOut)[ FD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_5 $$ if (outputDir != null) [ CD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_11 $$ if (profile.isEnabled()) [ CD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_3 $$ Collection<File> result = new SmartList<File>()[ CD ]
Line_10 $$ final ProcessorConfigProfile profile = configuration.getAnnotationProcessingProfile(module)-->Line_12 $$ final File annotationOut = ProjectPaths.getAnnotationProcessorGeneratedSourcesOutputDir(module, isTests(), profile)[ FD ]
Line_8 $$ final JpsModule module = getModule()-->Line_12 $$ final File annotationOut = ProjectPaths.getAnnotationProcessorGeneratedSourcesOutputDir(module, isTests(), profile)[ FD ]
Line_13 $$ if (annotationOut != null) -->Line_14 $$ result.add(annotationOut)[ CD ]
Line_2 $$ public Collection<File> getOutputRoots(CompileContext context) -->Line_10 $$ final ProcessorConfigProfile profile = configuration.getAnnotationProcessingProfile(module)[ CD ]
