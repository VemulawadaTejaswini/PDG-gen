Line_12 $$ if (file instanceof PsiJavaFile) -->Line_13 $$ final PsiJavaFile javaFile = (PsiJavaFile) file[ CD ]
Line_12 $$ if (file instanceof PsiJavaFile) -->Line_14 $$ final String packageName = javaFile.getPackageName()[ CD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_3 $$ final VirtualFile fileOrDir = file.getVirtualFile()[ FD ]
Line_3 $$ final VirtualFile fileOrDir = file.getVirtualFile()-->Line_8 $$ final Module module = ModuleUtilCore.findModuleForFile(fileOrDir, myPsiManager.getProject())[ FD ]
Line_8 $$ final Module module = ModuleUtilCore.findModuleForFile(fileOrDir, myPsiManager.getProject())-->Line_10 $$ myModules.add(module)[ FD ]
Line_9 $$ if (module != null) -->Line_10 $$ myModules.add(module)[ CD ]
Line_15 $$ if (containsPackagePrefix(module, packageName) || (packageName.length() == 0 && !(javaFile instanceof ServerPageFile)) || !myUsePackageNotation) -->Line_16 $$ mySourceFiles.add(FileUtil.toSystemIndependentName(fileOrDir.getPath()))[ CD ]
Line_4 $$ if (fileOrDir == null)-->Line_5 $$ return[ CD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_12 $$ if (file instanceof PsiJavaFile) [ CD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_6 $$ if (!fileOrDir.isInLocalFileSystem())[ CD ]
Line_8 $$ final Module module = ModuleUtilCore.findModuleForFile(fileOrDir, myPsiManager.getProject())-->Line_15 $$ if (containsPackagePrefix(module, packageName) || (packageName.length() == 0 && !(javaFile instanceof ServerPageFile)) || !myUsePackageNotation) [ FD ]
Line_14 $$ final String packageName = javaFile.getPackageName()-->Line_18 $$ myPackages.add(packageName)[ FD ]
Line_3 $$ final VirtualFile fileOrDir = file.getVirtualFile()-->Line_4 $$ if (fileOrDir == null)[ FD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_9 $$ if (module != null) [ CD ]
Line_13 $$ final PsiJavaFile javaFile = (PsiJavaFile) file-->Line_14 $$ final String packageName = javaFile.getPackageName()[ FD ]
Line_6 $$ if (!fileOrDir.isInLocalFileSystem())-->Line_7 $$ return[ CD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_3 $$ final VirtualFile fileOrDir = file.getVirtualFile()[ CD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_8 $$ final Module module = ModuleUtilCore.findModuleForFile(fileOrDir, myPsiManager.getProject())[ CD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_12 $$ if (file instanceof PsiJavaFile) [ FD ]
Line_8 $$ final Module module = ModuleUtilCore.findModuleForFile(fileOrDir, myPsiManager.getProject())-->Line_9 $$ if (module != null) [ FD ]
Line_12 $$ if (file instanceof PsiJavaFile) -->Line_15 $$ if (containsPackagePrefix(module, packageName) || (packageName.length() == 0 && !(javaFile instanceof ServerPageFile)) || !myUsePackageNotation) [ CD ]
Line_3 $$ final VirtualFile fileOrDir = file.getVirtualFile()-->Line_6 $$ if (!fileOrDir.isInLocalFileSystem())[ FD ]
Line_3 $$ final VirtualFile fileOrDir = file.getVirtualFile()-->Line_16 $$ mySourceFiles.add(FileUtil.toSystemIndependentName(fileOrDir.getPath()))[ FD ]
Line_14 $$ final String packageName = javaFile.getPackageName()-->Line_15 $$ if (containsPackagePrefix(module, packageName) || (packageName.length() == 0 && !(javaFile instanceof ServerPageFile)) || !myUsePackageNotation) [ FD ]
Line_15 $$ if (containsPackagePrefix(module, packageName) || (packageName.length() == 0 && !(javaFile instanceof ServerPageFile)) || !myUsePackageNotation) -->Line_18 $$ myPackages.add(packageName)[ CD ]
Line_2 $$ public void visitFile(PsiFile file) -->Line_4 $$ if (fileOrDir == null)[ CD ]
