Line_4 $$ Collection<String> res = new ArrayList<String>()-->Line_16 $$ res.add(name + index)[ FD ]
Line_2 $$ public Collection<String> getSuggestedNames(@NotNull final PyExpression expression) -->Line_19 $$ return res[ CD ]
Line_2 $$ public Collection<String> getSuggestedNames(@NotNull final PyExpression expression) -->Line_3 $$ Collection<String> candidates = generateSuggestedNames(expression)[ FD ]
Line_2 $$ public Collection<String> getSuggestedNames(@NotNull final PyExpression expression) -->Line_6 $$ if (myValidator.checkPossibleName(name, expression)) [ FD ]
Line_4 $$ Collection<String> res = new ArrayList<String>()-->Line_7 $$ res.add(name)[ FD ]
Line_6 $$ if (myValidator.checkPossibleName(name, expression)) -->Line_7 $$ res.add(name)[ CD ]
Line_5 $$ for (String name : candidates) -->Line_7 $$ res.add(name)[ FD ]
Line_12 $$ int index = 1-->Line_14 $$ index++[ FD ]
Line_2 $$ public Collection<String> getSuggestedNames(@NotNull final PyExpression expression) -->Line_10 $$ if (res.isEmpty()) [ CD ]
Line_2 $$ public Collection<String> getSuggestedNames(@NotNull final PyExpression expression) -->Line_13 $$ while (!myValidator.checkPossibleName(name + index, expression)) [ FD ]
Line_13 $$ while (!myValidator.checkPossibleName(name + index, expression)) -->Line_14 $$ index++[ CD ]
Line_2 $$ public Collection<String> getSuggestedNames(@NotNull final PyExpression expression) -->Line_3 $$ Collection<String> candidates = generateSuggestedNames(expression)[ CD ]
Line_5 $$ for (String name : candidates) -->Line_6 $$ if (myValidator.checkPossibleName(name, expression)) [ FD ]
Line_4 $$ Collection<String> res = new ArrayList<String>()-->Line_10 $$ if (res.isEmpty()) [ FD ]
Line_2 $$ public Collection<String> getSuggestedNames(@NotNull final PyExpression expression) -->Line_4 $$ Collection<String> res = new ArrayList<String>()[ CD ]
