Line_3 $$ final Collection<String> classNames = new ArrayList<String>(myTypesToMimic.size())-->Line_10 $$ classNames.add(name)[ FD ]
Line_7 $$ name = ((PyClassType) type).getPyClass().getName()-->Line_10 $$ classNames.add(name)[ FD ]
Line_6 $$ if (name == null && (type instanceof PyClassType)) -->Line_7 $$ name = ((PyClassType) type).getPyClass().getName()[ CD ]
Line_2 $$ public final String getName() -->Line_3 $$ final Collection<String> classNames = new ArrayList<String>(myTypesToMimic.size())[ CD ]
Line_7 $$ name = ((PyClassType) type).getPyClass().getName()-->Line_9 $$ if (name != null) [ FD ]
Line_3 $$ final Collection<String> classNames = new ArrayList<String>(myTypesToMimic.size())-->Line_13 $$ return PyBundle.message("custom.type.mimic.name", StringUtil.join(classNames, ","))[ FD ]
Line_2 $$ public final String getName() -->Line_13 $$ return PyBundle.message("custom.type.mimic.name", StringUtil.join(classNames, ","))[ CD ]
Line_4 $$ for (final PyClassLikeType type : myTypesToMimic) -->Line_5 $$ String name = type.getName()[ FD ]
Line_5 $$ String name = type.getName()-->Line_7 $$ name = ((PyClassType) type).getPyClass().getName()[ FD ]
Line_5 $$ String name = type.getName()-->Line_9 $$ if (name != null) [ FD ]
Line_5 $$ String name = type.getName()-->Line_10 $$ classNames.add(name)[ FD ]
Line_9 $$ if (name != null) -->Line_10 $$ classNames.add(name)[ CD ]
