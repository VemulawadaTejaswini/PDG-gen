Line_3 $$ LineTooltipRenderer bigRenderer = null-->Line_36 $$ if (bigRenderer == null) [ FD ]
Line_18 $$ if (bigRenderer == null) -->Line_19 $$ bigRenderer = new MyRenderer(text, new Object[] [ CD ]
Line_27 $$ ContainerUtil.quickSort(infos, new Comparator<HighlightInfo>() -->Line_32 $$ return o1.getToolTip().compareTo(o2.getToolTip())[ FD ]
Line_4 $$ List<HighlightInfo> infos = new SmartList<HighlightInfo>()-->Line_26 $$ if (!infos.isEmpty()) [ FD ]
Line_3 $$ LineTooltipRenderer bigRenderer = null-->Line_40 $$ renderer.addBelow(bigRenderer.getText())[ FD ]
Line_5 $$ Collection<String> tooltips = new THashSet<String>()-->Line_12 $$ if (info.getToolTip() != null && tooltips.add(info.getToolTip())) [ FD ]
Line_2 $$ public TooltipRenderer calcTooltipRenderer(@NotNull final Collection<RangeHighlighter> highlighters) -->Line_26 $$ if (!infos.isEmpty()) [ CD ]
Line_26 $$ if (!infos.isEmpty()) -->Line_27 $$ ContainerUtil.quickSort(infos, new Comparator<HighlightInfo>() [ CD ]
Line_3 $$ LineTooltipRenderer bigRenderer = null-->Line_18 $$ if (bigRenderer == null) [ FD ]
Line_4 $$ List<HighlightInfo> infos = new SmartList<HighlightInfo>()-->Line_13 $$ infos.add(info)[ FD ]
Line_18 $$ if (bigRenderer == null) -->Line_21 $$ bigRenderer.addBelow(text)[ CD ]
Line_7 $$ final Object tooltipObject = marker.getErrorStripeTooltip()-->Line_16 $$ final String text = tooltipObject.toString()[ FD ]
Line_27 $$ ContainerUtil.quickSort(infos, new Comparator<HighlightInfo>() -->Line_29 $$ int i = SeverityRegistrar.getSeverityRegistrar(myProject).compare(o2.getSeverity(), o1.getSeverity())[ FD ]
Line_10 $$ if (tooltipObject instanceof HighlightInfo) -->Line_11 $$ HighlightInfo info = (HighlightInfo) tooltipObject[ CD ]
Line_7 $$ final Object tooltipObject = marker.getErrorStripeTooltip()-->Line_8 $$ if (tooltipObject == null)[ FD ]
Line_19 $$ bigRenderer = new MyRenderer(text, new Object[] -->Line_40 $$ renderer.addBelow(bigRenderer.getText())[ FD ]
Line_11 $$ HighlightInfo info = (HighlightInfo) tooltipObject-->Line_12 $$ if (info.getToolTip() != null && tooltips.add(info.getToolTip())) [ FD ]
Line_2 $$ public TooltipRenderer calcTooltipRenderer(@NotNull final Collection<RangeHighlighter> highlighters) -->Line_44 $$ return bigRenderer[ CD ]
Line_36 $$ if (bigRenderer == null) -->Line_40 $$ renderer.addBelow(bigRenderer.getText())[ CD ]
Line_16 $$ final String text = tooltipObject.toString()-->Line_21 $$ bigRenderer.addBelow(text)[ FD ]
Line_17 $$ if (tooltips.add(text)) -->Line_18 $$ if (bigRenderer == null) [ CD ]
Line_3 $$ LineTooltipRenderer bigRenderer = null-->Line_19 $$ bigRenderer = new MyRenderer(text, new Object[] [ FD ]
Line_19 $$ bigRenderer = new MyRenderer(text, new Object[] -->Line_36 $$ if (bigRenderer == null) [ FD ]
Line_29 $$ int i = SeverityRegistrar.getSeverityRegistrar(myProject).compare(o2.getSeverity(), o1.getSeverity())-->Line_30 $$ if (i != 0)[ FD ]
Line_12 $$ if (info.getToolTip() != null && tooltips.add(info.getToolTip())) -->Line_13 $$ infos.add(info)[ CD ]
Line_11 $$ HighlightInfo info = (HighlightInfo) tooltipObject-->Line_13 $$ infos.add(info)[ FD ]
Line_27 $$ ContainerUtil.quickSort(infos, new Comparator<HighlightInfo>() -->Line_29 $$ int i = SeverityRegistrar.getSeverityRegistrar(myProject).compare(o2.getSeverity(), o1.getSeverity())[ CD ]
Line_19 $$ bigRenderer = new MyRenderer(text, new Object[] -->Line_21 $$ bigRenderer.addBelow(text)[ FD ]
Line_27 $$ ContainerUtil.quickSort(infos, new Comparator<HighlightInfo>() -->Line_30 $$ if (i != 0)[ CD ]
Line_30 $$ if (i != 0)-->Line_31 $$ return i[ CD ]
Line_7 $$ final Object tooltipObject = marker.getErrorStripeTooltip()-->Line_10 $$ if (tooltipObject instanceof HighlightInfo) [ FD ]
Line_2 $$ public TooltipRenderer calcTooltipRenderer(@NotNull final Collection<RangeHighlighter> highlighters) -->Line_4 $$ List<HighlightInfo> infos = new SmartList<HighlightInfo>()[ CD ]
Line_27 $$ ContainerUtil.quickSort(infos, new Comparator<HighlightInfo>() -->Line_32 $$ return o1.getToolTip().compareTo(o2.getToolTip())[ CD ]
Line_10 $$ if (tooltipObject instanceof HighlightInfo) -->Line_16 $$ final String text = tooltipObject.toString()[ CD ]
Line_3 $$ LineTooltipRenderer bigRenderer = null-->Line_21 $$ bigRenderer.addBelow(text)[ FD ]
Line_2 $$ public TooltipRenderer calcTooltipRenderer(@NotNull final Collection<RangeHighlighter> highlighters) -->Line_3 $$ LineTooltipRenderer bigRenderer = null[ CD ]
Line_2 $$ public TooltipRenderer calcTooltipRenderer(@NotNull final Collection<RangeHighlighter> highlighters) -->Line_5 $$ Collection<String> tooltips = new THashSet<String>()[ CD ]
Line_26 $$ if (!infos.isEmpty()) -->Line_36 $$ if (bigRenderer == null) [ CD ]
Line_6 $$ for (RangeHighlighter marker : highlighters) -->Line_7 $$ final Object tooltipObject = marker.getErrorStripeTooltip()[ FD ]
Line_10 $$ if (tooltipObject instanceof HighlightInfo) -->Line_17 $$ if (tooltips.add(text)) [ CD ]
Line_16 $$ final String text = tooltipObject.toString()-->Line_17 $$ if (tooltips.add(text)) [ FD ]
Line_10 $$ if (tooltipObject instanceof HighlightInfo) -->Line_12 $$ if (info.getToolTip() != null && tooltips.add(info.getToolTip())) [ CD ]
Line_4 $$ List<HighlightInfo> infos = new SmartList<HighlightInfo>()-->Line_27 $$ ContainerUtil.quickSort(infos, new Comparator<HighlightInfo>() [ FD ]
Line_5 $$ Collection<String> tooltips = new THashSet<String>()-->Line_17 $$ if (tooltips.add(text)) [ FD ]
