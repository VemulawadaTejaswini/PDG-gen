Line_12 $$ while (count < size) -->Line_15 $$ currentNode._element = null[ CD ]
Line_10 $$ int count = 0-->Line_12 $$ while (count < size) [ FD ]
Line_2 $$ public int drainTo(Collection<E> collection) -->Line_3 $$ if (collection == null) [ FD ]
Line_12 $$ while (count < size) -->Line_16 $$ headNode._nextNode = null[ CD ]
Line_2 $$ public int drainTo(Collection<E> collection) -->Line_14 $$ collection.add(currentNode._element)[ FD ]
Line_13 $$ Node<E> currentNode = headNode._nextNode-->Line_17 $$ headNode = currentNode[ FD ]
Line_12 $$ while (count < size) -->Line_17 $$ headNode = currentNode[ CD ]
Line_2 $$ public int drainTo(Collection<E> collection) -->Line_3 $$ if (collection == null) [ CD ]
Line_8 $$ Node<E> headNode = _headNode-->Line_17 $$ headNode = currentNode[ FD ]
Line_10 $$ int count = 0-->Line_18 $$ count++[ FD ]
Line_22 $$ if (count > 0) -->Line_24 $$ _count.getAndAdd(-count)[ CD ]
Line_10 $$ int count = 0-->Line_24 $$ _count.getAndAdd(-count)[ FD ]
Line_12 $$ while (count < size) -->Line_14 $$ collection.add(currentNode._element)[ CD ]
Line_10 $$ int count = 0-->Line_22 $$ if (count > 0) [ FD ]
Line_9 $$ int size = _count.get()-->Line_12 $$ while (count < size) [ FD ]
Line_12 $$ while (count < size) -->Line_13 $$ Node<E> currentNode = headNode._nextNode[ CD ]
Line_12 $$ while (count < size) -->Line_18 $$ count++[ CD ]
Line_2 $$ public int drainTo(Collection<E> collection) -->Line_6 $$ _takeLock.lock()[ CD ]
