Line_30 $$ if (visitedClasses == null) -->Line_31 $$ visitedClasses = new TIntHashSet()[ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_3 $$ debug("Affecting subclasses of class: ", className)[ CD ]
Line_16 $$ if (usages) -->Line_17 $$ debug("Class usages affection requested")[ CD ]
Line_16 $$ if (usages) -->Line_18 $$ final ClassRepr classRepr = reprByName(className)[ CD ]
Line_5 $$ if (allSources == null || allSources.isEmpty()) -->Line_7 $$ debug("End of affectSubclasses")[ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_16 $$ if (usages) [ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_6 $$ debug("No source file detected for class ", className)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_26 $$ addAll(dependants, depClasses)[ FD ]
Line_29 $$ if (directSubclasses != null) -->Line_35 $$ directSubclasses.forEach(new TIntProcedure() [ CD ]
Line_29 $$ if (directSubclasses != null) -->Line_30 $$ if (visitedClasses == null) [ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_4 $$ final Collection<File> allSources = myClassToSourceFile.get(className)[ CD ]
Line_18 $$ final ClassRepr classRepr = reprByName(className)-->Line_21 $$ affectedUsages.add(classRepr.createUsage())[ FD ]
Line_30 $$ if (visitedClasses == null) -->Line_32 $$ visitedClasses.add(className)[ CD ]
Line_19 $$ if (classRepr != null) -->Line_21 $$ affectedUsages.add(classRepr.createUsage())[ CD ]
Line_35 $$ directSubclasses.forEach(new TIntProcedure() -->Line_37 $$ if (_visitedClasses.add(subClass)) [ CD ]
Line_24 $$ final TIntHashSet depClasses = myClassToClassDependency.get(className)-->Line_26 $$ addAll(dependants, depClasses)[ FD ]
Line_10 $$ for (File fName : allSources) -->Line_13 $$ affectedFiles.add(fName)[ FD ]
Line_16 $$ if (usages) -->Line_19 $$ if (classRepr != null) [ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_31 $$ visitedClasses = new TIntHashSet()[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_29 $$ if (directSubclasses != null) [ CD ]
Line_31 $$ visitedClasses = new TIntHashSet()-->Line_32 $$ visitedClasses.add(className)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_28 $$ final TIntHashSet directSubclasses = myClassToSubclasses.get(className)[ CD ]
Line_25 $$ if (depClasses != null) -->Line_26 $$ addAll(dependants, depClasses)[ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_32 $$ visitedClasses.add(className)[ FD ]
Line_10 $$ for (File fName : allSources) -->Line_11 $$ debug("Source file name: ", fName)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_13 $$ affectedFiles.add(fName)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_12 $$ if (!alreadyCompiledFiles.contains(fName)) [ FD ]
Line_37 $$ if (_visitedClasses.add(subClass)) -->Line_38 $$ affectSubclasses(subClass, affectedFiles, affectedUsages, dependants, usages, alreadyCompiledFiles, _visitedClasses)[ CD ]
Line_5 $$ if (allSources == null || allSources.isEmpty()) -->Line_6 $$ debug("No source file detected for class ", className)[ CD ]
Line_19 $$ if (classRepr != null) -->Line_20 $$ debug("Added class usage for ", classRepr.name)[ CD ]
Line_28 $$ final TIntHashSet directSubclasses = myClassToSubclasses.get(className)-->Line_29 $$ if (directSubclasses != null) [ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_25 $$ if (depClasses != null) [ CD ]
Line_5 $$ if (allSources == null || allSources.isEmpty()) -->Line_8 $$ return[ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_18 $$ final ClassRepr classRepr = reprByName(className)[ FD ]
Line_18 $$ final ClassRepr classRepr = reprByName(className)-->Line_19 $$ if (classRepr != null) [ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_24 $$ final TIntHashSet depClasses = myClassToClassDependency.get(className)[ CD ]
Line_12 $$ if (!alreadyCompiledFiles.contains(fName)) -->Line_13 $$ affectedFiles.add(fName)[ CD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_38 $$ affectSubclasses(subClass, affectedFiles, affectedUsages, dependants, usages, alreadyCompiledFiles, _visitedClasses)[ FD ]
Line_28 $$ final TIntHashSet directSubclasses = myClassToSubclasses.get(className)-->Line_35 $$ directSubclasses.forEach(new TIntProcedure() [ FD ]
Line_4 $$ final Collection<File> allSources = myClassToSourceFile.get(className)-->Line_5 $$ if (allSources == null || allSources.isEmpty()) [ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_4 $$ final Collection<File> allSources = myClassToSourceFile.get(className)[ FD ]
Line_10 $$ for (File fName : allSources) -->Line_12 $$ if (!alreadyCompiledFiles.contains(fName)) [ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_28 $$ final TIntHashSet directSubclasses = myClassToSubclasses.get(className)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_24 $$ final TIntHashSet depClasses = myClassToClassDependency.get(className)[ FD ]
Line_34 $$ final TIntHashSet _visitedClasses = visitedClasses-->Line_37 $$ if (_visitedClasses.add(subClass)) [ FD ]
Line_35 $$ directSubclasses.forEach(new TIntProcedure() -->Line_40 $$ return true[ CD ]
Line_35 $$ directSubclasses.forEach(new TIntProcedure() -->Line_37 $$ if (_visitedClasses.add(subClass)) [ FD ]
Line_35 $$ directSubclasses.forEach(new TIntProcedure() -->Line_38 $$ affectSubclasses(subClass, affectedFiles, affectedUsages, dependants, usages, alreadyCompiledFiles, _visitedClasses)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_21 $$ affectedUsages.add(classRepr.createUsage())[ FD ]
Line_29 $$ if (directSubclasses != null) -->Line_34 $$ final TIntHashSet _visitedClasses = visitedClasses[ CD ]
Line_34 $$ final TIntHashSet _visitedClasses = visitedClasses-->Line_38 $$ affectSubclasses(subClass, affectedFiles, affectedUsages, dependants, usages, alreadyCompiledFiles, _visitedClasses)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_30 $$ if (visitedClasses == null) [ FD ]
Line_24 $$ final TIntHashSet depClasses = myClassToClassDependency.get(className)-->Line_25 $$ if (depClasses != null) [ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_3 $$ debug("Affecting subclasses of class: ", className)[ FD ]
Line_2 $$ void affectSubclasses(final int className, final Collection<File> affectedFiles, final Collection<UsageRepr.Usage> affectedUsages, final TIntHashSet dependants, final boolean usages, final Collection<File> alreadyCompiledFiles, TIntHashSet visitedClasses) -->Line_5 $$ if (allSources == null || allSources.isEmpty()) [ CD ]
