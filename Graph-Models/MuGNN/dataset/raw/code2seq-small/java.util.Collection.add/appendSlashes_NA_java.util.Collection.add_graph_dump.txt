Line_9 $$ prefix = prefix + "/"-->Line_11 $$ result.add(prefix)[ FD ]
Line_2 $$ private static Collection<String> appendSlashes(Collection<String> prefixes) -->Line_3 $$ if (CollectionUtils.isEmpty(prefixes)) [ FD ]
Line_3 $$ if (CollectionUtils.isEmpty(prefixes)) -->Line_4 $$ return prefixes[ CD ]
Line_2 $$ private static Collection<String> appendSlashes(Collection<String> prefixes) -->Line_6 $$ Collection<String> result = new ArrayList<String>(prefixes.size())[ CD ]
Line_6 $$ Collection<String> result = new ArrayList<String>(prefixes.size())-->Line_11 $$ result.add(prefix)[ FD ]
Line_8 $$ if (!prefix.endsWith("/")) -->Line_9 $$ prefix = prefix + "/"[ CD ]
Line_2 $$ private static Collection<String> appendSlashes(Collection<String> prefixes) -->Line_13 $$ return result[ CD ]
Line_2 $$ private static Collection<String> appendSlashes(Collection<String> prefixes) -->Line_6 $$ Collection<String> result = new ArrayList<String>(prefixes.size())[ FD ]
Line_7 $$ for (String prefix : prefixes) -->Line_8 $$ if (!prefix.endsWith("/")) [ FD ]
Line_7 $$ for (String prefix : prefixes) -->Line_11 $$ result.add(prefix)[ FD ]
Line_7 $$ for (String prefix : prefixes) -->Line_9 $$ prefix = prefix + "/"[ FD ]
Line_2 $$ private static Collection<String> appendSlashes(Collection<String> prefixes) -->Line_3 $$ if (CollectionUtils.isEmpty(prefixes)) [ CD ]
