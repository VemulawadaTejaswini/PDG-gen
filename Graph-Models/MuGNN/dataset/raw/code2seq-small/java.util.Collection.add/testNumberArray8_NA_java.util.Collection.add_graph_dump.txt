Line_3 $$ Collection<String> numbers = new ArrayList()-->Line_5 $$ numbers.add(String.valueOf(Double.MAX_VALUE))[ FD ]
Line_2 $$ public void testNumberArray8() -->Line_3 $$ Collection<String> numbers = new ArrayList()[ CD ]
Line_2 $$ public void testNumberArray8() -->Line_7 $$ Assert.assertEquals(2, convertedNumber.length)[ CD ]
Line_3 $$ Collection<String> numbers = new ArrayList()-->Line_6 $$ Number[] convertedNumber = _converter.convertType(ExpandoColumnConstants.NUMBER_ARRAY, numbers)[ FD ]
Line_2 $$ public void testNumberArray8() -->Line_5 $$ numbers.add(String.valueOf(Double.MAX_VALUE))[ CD ]
Line_2 $$ public void testNumberArray8() -->Line_8 $$ Assert.assertEquals(Double.MIN_VALUE, convertedNumber[0].doubleValue(), 0)[ CD ]
Line_2 $$ public void testNumberArray8() -->Line_4 $$ numbers.add(String.valueOf(Double.MIN_VALUE))[ CD ]
Line_2 $$ public void testNumberArray8() -->Line_6 $$ Number[] convertedNumber = _converter.convertType(ExpandoColumnConstants.NUMBER_ARRAY, numbers)[ CD ]
Line_3 $$ Collection<String> numbers = new ArrayList()-->Line_4 $$ numbers.add(String.valueOf(Double.MIN_VALUE))[ FD ]
Line_2 $$ public void testNumberArray8() -->Line_9 $$ Assert.assertEquals(Double.MAX_VALUE, convertedNumber[1].doubleValue(), 0)[ CD ]
