Line_2 $$ public void testFloatArray9() -->Line_7 $$ Assert.assertEquals(2, convertedFloats.length)[ CD ]
Line_2 $$ public void testFloatArray9() -->Line_6 $$ float[] convertedFloats = _converter.convertType(ExpandoColumnConstants.FLOAT_ARRAY, floats)[ CD ]
Line_3 $$ Collection<String> floats = new ArrayList()-->Line_5 $$ floats.add(String.valueOf(Integer.MAX_VALUE))[ FD ]
Line_2 $$ public void testFloatArray9() -->Line_5 $$ floats.add(String.valueOf(Integer.MAX_VALUE))[ CD ]
Line_2 $$ public void testFloatArray9() -->Line_9 $$ Assert.assertEquals(Integer.MAX_VALUE, convertedFloats[1], 0)[ CD ]
Line_2 $$ public void testFloatArray9() -->Line_8 $$ Assert.assertEquals(Float.POSITIVE_INFINITY, convertedFloats[0], 0)[ CD ]
Line_3 $$ Collection<String> floats = new ArrayList()-->Line_4 $$ floats.add(String.valueOf(Double.MAX_VALUE))[ FD ]
Line_2 $$ public void testFloatArray9() -->Line_3 $$ Collection<String> floats = new ArrayList()[ CD ]
Line_3 $$ Collection<String> floats = new ArrayList()-->Line_6 $$ float[] convertedFloats = _converter.convertType(ExpandoColumnConstants.FLOAT_ARRAY, floats)[ FD ]
Line_2 $$ public void testFloatArray9() -->Line_4 $$ floats.add(String.valueOf(Double.MAX_VALUE))[ CD ]
