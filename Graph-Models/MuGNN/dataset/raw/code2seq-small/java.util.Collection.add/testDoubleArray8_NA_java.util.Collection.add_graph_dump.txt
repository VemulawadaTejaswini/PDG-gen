Line_2 $$ public void testDoubleArray8() -->Line_8 $$ Assert.assertEquals(Double.MAX_VALUE, convertedDoubles[0], 0)[ CD ]
Line_3 $$ Collection<String> doubles = new ArrayList()-->Line_4 $$ doubles.add(String.valueOf(Double.MAX_VALUE))[ FD ]
Line_3 $$ Collection<String> doubles = new ArrayList()-->Line_5 $$ doubles.add(String.valueOf(Integer.MAX_VALUE))[ FD ]
Line_2 $$ public void testDoubleArray8() -->Line_9 $$ Assert.assertEquals(Integer.MAX_VALUE, convertedDoubles[1], 0)[ CD ]
Line_2 $$ public void testDoubleArray8() -->Line_6 $$ double[] convertedDoubles = _converter.convertType(ExpandoColumnConstants.DOUBLE_ARRAY, doubles)[ CD ]
Line_2 $$ public void testDoubleArray8() -->Line_7 $$ Assert.assertEquals(2, convertedDoubles.length)[ CD ]
Line_2 $$ public void testDoubleArray8() -->Line_4 $$ doubles.add(String.valueOf(Double.MAX_VALUE))[ CD ]
Line_2 $$ public void testDoubleArray8() -->Line_5 $$ doubles.add(String.valueOf(Integer.MAX_VALUE))[ CD ]
Line_2 $$ public void testDoubleArray8() -->Line_3 $$ Collection<String> doubles = new ArrayList()[ CD ]
Line_3 $$ Collection<String> doubles = new ArrayList()-->Line_6 $$ double[] convertedDoubles = _converter.convertType(ExpandoColumnConstants.DOUBLE_ARRAY, doubles)[ FD ]
