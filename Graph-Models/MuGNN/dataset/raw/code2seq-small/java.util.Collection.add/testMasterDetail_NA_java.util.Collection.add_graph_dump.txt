Line_77 $$ s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_24 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_64 $$ assertTrue(Hibernate.isInitialized(((Master) list.get(0)).getDetails()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")-->Line_124 $$ f.setParameterList("list", coll)[ FD ]
Line_5 $$ Session s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_77 $$ s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_49 $$ s = openSession()-->Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ FD ]
Line_61 $$ s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_44 $$ s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_44 $$ s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_41 $$ assertTrue("master-detail", i == 2)[ CD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ FD ]
Line_24 $$ s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_24 $$ s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_24 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_61 $$ s = openSession()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_77 $$ s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_24 $$ s = openSession()-->Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()[ FD ]
Line_69 $$ s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_66 $$ assertTrue(((Master) list.get(0)).getDetails().contains(dt))[ FD ]
Line_5 $$ Session s = openSession()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_31 $$ s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_49 $$ s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_43 $$ s.close()[ CD ]
Line_45 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_12 $$ Serializable did = s.save(d1)[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_61 $$ s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_44 $$ s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_24 $$ s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_44 $$ s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_26 $$ master = new Master()-->Line_80 $$ master = dd.getMaster()[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_77 $$ s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_118 $$ coll.add(new Integer(-666))[ CD ]
Line_10 $$ Detail d1 = new Detail()-->Line_17 $$ master.addDetail(d1)[ FD ]
Line_26 $$ master = new Master()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_5 $$ Session s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_36 $$ while (iter.hasNext()) -->Line_38 $$ assertTrue("master-detail", d.getMaster() == master)[ CD ]
Line_56 $$ Detail dt = (Detail) list.get(0)-->Line_57 $$ Serializable dtid = s.getIdentifier(dt)[ FD ]
Line_49 $$ s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ CD ]
Line_31 $$ s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ CD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_31 $$ s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_111 $$ f.setInteger("top", 100)[ CD ]
Line_31 $$ s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_69 $$ s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_94 $$ list = new ArrayList()-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_77 $$ s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_7 $$ Master master = new Master()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_44 $$ s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_52 $$ Master m = (Master) list.get(0)-->Line_53 $$ assertTrue(Hibernate.isInitialized(m.getDetails()))[ FD ]
Line_49 $$ s = openSession()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_31 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_77 $$ s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_5 $$ Session s = openSession()-->Line_16 $$ assertTrue("generated id returned", s.save(d2) != null)[ FD ]
Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")-->Line_126 $$ assertEquals(f.iterate().next(), new Integer(12))[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_59 $$ t.commit()[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_45 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_44 $$ s = openSession()[ CD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_5 $$ Session s = openSession()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ master = new Master()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_24 $$ s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_9 $$ Serializable mid = s.getIdentifier(master)[ CD ]
Line_26 $$ master = new Master()-->Line_28 $$ assertTrue(master.getDetails().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_31 $$ s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_31 $$ s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ CD ]
Line_80 $$ master = dd.getMaster()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)-->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ FD ]
Line_130 $$ Detail d = (Detail) iter.next()-->Line_132 $$ s.delete(d)[ FD ]
Line_77 $$ s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ master = new Master()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ CD ]
Line_44 $$ s = openSession()-->Line_46 $$ assertTrue(s.createQuery("select elements(master.details) from Master master").list().size() == 2)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_127 $$ iter = master.getDetails().iterator()[ FD ]
Line_77 $$ s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_24 $$ s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_7 $$ Master master = new Master()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_5 $$ Session s = openSession()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_42 $$ t.commit()[ CD ]
Line_35 $$ int i = 0-->Line_39 $$ i++[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_56 $$ Detail dt = (Detail) list.get(0)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_98 $$ assertTrue(q.list().size() == 1)[ FD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_96 $$ list.add(new Long(-1))[ FD ]
Line_69 $$ s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_24 $$ s = openSession()-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_31 $$ s = openSession()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_125 $$ f.setParameter("listy2", master.getName())[ CD ]
Line_44 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_121 $$ f.setParameterList("list", coll)[ CD ]
Line_50 $$ t = s.beginTransaction()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_35 $$ int i = 0[ CD ]
Line_31 $$ s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_5 $$ Session s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_94 $$ list = new ArrayList()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_81 $$ assertTrue("detail-master", master.getDetails().contains(dd))[ CD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ CD ]
Line_5 $$ Session s = openSession()-->Line_24 $$ s = openSession()[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_42 $$ t.commit()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_98 $$ assertTrue(q.list().size() == 1)[ CD ]
Line_26 $$ master = new Master()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_62 $$ t = s.beginTransaction()-->Line_67 $$ t.commit()[ FD ]
Line_31 $$ s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_44 $$ s = openSession()-->Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()[ FD ]
Line_9 $$ Serializable mid = s.getIdentifier(master)-->Line_27 $$ s.load(master, mid)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_77 $$ s = openSession()[ CD ]
Line_5 $$ Session s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_7 $$ Master master = new Master()-->Line_27 $$ s.load(master, mid)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_114 $$ f.setInteger("top", 2)[ CD ]
Line_26 $$ master = new Master()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_46 $$ assertTrue(s.createQuery("select elements(master.details) from Master master").list().size() == 2)[ CD ]
Line_24 $$ s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ CD ]
Line_5 $$ Session s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_44 $$ s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_25 $$ t = s.beginTransaction()[ CD ]
Line_31 $$ s = openSession()-->Line_46 $$ assertTrue(s.createQuery("select elements(master.details) from Master master").list().size() == 2)[ FD ]
Line_49 $$ s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_61 $$ s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_135 $$ assertTrue("master-detail", i == 2)[ CD ]
Line_49 $$ s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_64 $$ assertTrue(Hibernate.isInitialized(((Master) list.get(0)).getDetails()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_20 $$ assertTrue("query", s.createQuery("from Detail d, Master m where m = d.master and size(m.outgoing) = 0 and size(m.incoming) = 0").list().size() == 2)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_89 $$ q.setInteger("id2", 99999999)[ FD ]
Line_31 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")-->Line_121 $$ f.setParameterList("list", coll)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ CD ]
Line_62 $$ t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_96 $$ list.add(new Long(-1))[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_124 $$ f.setParameterList("list", coll)[ FD ]
Line_56 $$ Detail dt = (Detail) list.get(0)-->Line_66 $$ assertTrue(((Master) list.get(0)).getDetails().contains(dt))[ FD ]
Line_24 $$ s = openSession()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_129 $$ while (iter.hasNext()) -->Line_130 $$ Detail d = (Detail) iter.next()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_7 $$ Master master = new Master()[ CD ]
Line_50 $$ t = s.beginTransaction()-->Line_59 $$ t.commit()[ FD ]
Line_10 $$ Detail d1 = new Detail()-->Line_11 $$ d1.setMaster(master)[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_13 $$ Detail d2 = new Detail()-->Line_14 $$ d2.setI(12)[ FD ]
Line_129 $$ while (iter.hasNext()) -->Line_131 $$ assertTrue("master-detail", d.getMaster() == master)[ CD ]
Line_5 $$ Session s = openSession()-->Line_27 $$ s.load(master, mid)[ FD ]
Line_61 $$ s = openSession()-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_26 $$ master = new Master()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_49 $$ s = openSession()-->Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_122 $$ assertEquals(f.iterate().next(), new Integer(12))[ CD ]
Line_26 $$ master = new Master()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_66 $$ assertTrue(((Master) list.get(0)).getDetails().contains(dt))[ FD ]
Line_49 $$ s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_47 $$ t.commit()[ CD ]
Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)-->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ FD ]
Line_62 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_36 $$ while (iter.hasNext()) [ CD ]
Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_96 $$ list.add(new Long(-1))[ FD ]
Line_129 $$ while (iter.hasNext()) -->Line_132 $$ s.delete(d)[ CD ]
Line_31 $$ s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_61 $$ s = openSession()-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_5 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_14 $$ d2.setI(12)[ CD ]
Line_35 $$ int i = 0-->Line_133 $$ i++[ FD ]
Line_5 $$ Session s = openSession()-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_69 $$ s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_10 $$ Detail d1 = new Detail()-->Line_12 $$ Serializable did = s.save(d1)[ FD ]
Line_24 $$ s = openSession()-->Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()[ FD ]
Line_44 $$ s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_5 $$ Session s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_27 $$ s.load(master, mid)[ CD ]
Line_69 $$ s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_31 $$ s = openSession()-->Line_57 $$ Serializable dtid = s.getIdentifier(dt)[ FD ]
Line_24 $$ s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_61 $$ s = openSession()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_77 $$ s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_29 $$ t.commit()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_32 $$ t = s.beginTransaction()[ CD ]
Line_49 $$ s = openSession()-->Line_57 $$ Serializable dtid = s.getIdentifier(dt)[ FD ]
Line_49 $$ s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")-->Line_98 $$ assertTrue(q.list().size() == 1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_114 $$ f.setInteger("top", 2)[ FD ]
Line_24 $$ s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_92 $$ assertTrue(q.list().size() == 0)[ FD ]
Line_5 $$ Session s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_24 $$ s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_90 $$ assertTrue(q.list().size() == 2)[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_121 $$ f.setParameterList("list", coll)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_94 $$ list = new ArrayList()[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_95 $$ list.add(did)[ FD ]
Line_44 $$ s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_44 $$ s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_34 $$ Iterator iter = master.getDetails().iterator()[ FD ]
Line_94 $$ list = new ArrayList()-->Line_95 $$ list.add(did)[ FD ]
Line_49 $$ s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_24 $$ s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_96 $$ list.add(new Long(-1))[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_67 $$ t.commit()[ FD ]
Line_7 $$ Master master = new Master()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_56 $$ Detail dt = (Detail) list.get(0)-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_7 $$ Master master = new Master()-->Line_26 $$ master = new Master()[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_49 $$ s = openSession()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_7 $$ Master master = new Master()-->Line_8 $$ assertTrue("save returned native id", s.save(master) != null)[ FD ]
Line_24 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_129 $$ while (iter.hasNext()) -->Line_133 $$ i++[ CD ]
Line_77 $$ s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_76 $$ s.close()[ CD ]
Line_5 $$ Session s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_26 $$ master = new Master()-->Line_81 $$ assertTrue("detail-master", master.getDetails().contains(dd))[ FD ]
Line_49 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_44 $$ s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_24 $$ s = openSession()-->Line_45 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_6 $$ Transaction t = s.beginTransaction()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_58 $$ assertTrue(dt.getMaster() == m)[ CD ]
Line_61 $$ s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_48 $$ s.close()[ CD ]
Line_26 $$ master = new Master()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_77 $$ s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_70 $$ t = s.beginTransaction()[ CD ]
Line_7 $$ Master master = new Master()-->Line_28 $$ assertTrue(master.getDetails().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_33 $$ master = (Master) s.load(Master.class, mid)[ CD ]
Line_80 $$ master = dd.getMaster()-->Line_136 $$ s.delete(master)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_7 $$ Master master = new Master()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_49 $$ s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_5 $$ Session s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_44 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_61 $$ s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_44 $$ s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_120 $$ coll.add(new Integer(0))[ CD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_89 $$ q.setInteger("id2", 99999999)[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_7 $$ Master master = new Master()-->Line_125 $$ f.setParameter("listy2", master.getName())[ FD ]
Line_44 $$ s = openSession()-->Line_77 $$ s = openSession()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_61 $$ s = openSession()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_80 $$ master = dd.getMaster()[ CD ]
Line_61 $$ s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_117 $$ Collection coll = new ArrayList()-->Line_118 $$ coll.add(new Integer(-666))[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_61 $$ s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_23 $$ s.close()[ CD ]
Line_5 $$ Session s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_64 $$ assertTrue(Hibernate.isInitialized(((Master) list.get(0)).getDetails()))[ FD ]
Line_7 $$ Master master = new Master()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_3 $$ if (getDialect() instanceof HSQLDialect)[ CD ]
Line_7 $$ Master master = new Master()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_26 $$ master = new Master()[ CD ]
Line_7 $$ Master master = new Master()-->Line_9 $$ Serializable mid = s.getIdentifier(master)[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_29 $$ t.commit()[ FD ]
Line_49 $$ s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_61 $$ s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_26 $$ master = new Master()-->Line_136 $$ s.delete(master)[ FD ]
Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)-->Line_66 $$ assertTrue(((Master) list.get(0)).getDetails().contains(dt))[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_119 $$ coll.add(new Integer(22))[ CD ]
Line_77 $$ s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_31 $$ s = openSession()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_61 $$ s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_127 $$ iter = master.getDetails().iterator()[ FD ]
Line_61 $$ s = openSession()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_7 $$ Master master = new Master()-->Line_18 $$ master.addDetail(d2)[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_72 $$ assertTrue(Hibernate.isInitialized(((Master) ((Object[]) list.get(0))[0]).getDetails()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_57 $$ Serializable dtid = s.getIdentifier(dt)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_85 $$ q.setInteger("id", -1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_24 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_57 $$ Serializable dtid = s.getIdentifier(dt)-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_5 $$ Session s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_69 $$ s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_18 $$ master.addDetail(d2)[ CD ]
Line_5 $$ Session s = openSession()-->Line_9 $$ Serializable mid = s.getIdentifier(master)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_91 $$ q.setInteger("id2", -1)[ CD ]
Line_31 $$ s = openSession()-->Line_33 $$ master = (Master) s.load(Master.class, mid)[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_59 $$ t.commit()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_53 $$ assertTrue(Hibernate.isInitialized(m.getDetails()))[ CD ]
Line_70 $$ t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_27 $$ s.load(master, mid)[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_67 $$ t.commit()[ FD ]
Line_26 $$ master = new Master()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_24 $$ s = openSession()-->Line_77 $$ s = openSession()[ FD ]
Line_44 $$ s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_7 $$ Master master = new Master()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_13 $$ Detail d2 = new Detail()-->Line_15 $$ d2.setMaster(master)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_86 $$ assertTrue(q.list().size() == 2)[ FD ]
Line_31 $$ s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_117 $$ Collection coll = new ArrayList()[ CD ]
Line_61 $$ s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_5 $$ Session s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ CD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_9 $$ Serializable mid = s.getIdentifier(master)-->Line_33 $$ master = (Master) s.load(Master.class, mid)[ FD ]
Line_61 $$ s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_31 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_136 $$ s.delete(master)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_112 $$ f.setInteger("bottom", 0)[ FD ]
Line_13 $$ Detail d2 = new Detail()-->Line_18 $$ master.addDetail(d2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_85 $$ q.setInteger("id", -1)[ CD ]
Line_5 $$ Session s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_44 $$ s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_115 $$ assertEquals(f.iterate().next(), new Integer(0))[ CD ]
Line_127 $$ iter = master.getDetails().iterator()-->Line_129 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_127 $$ iter = master.getDetails().iterator()[ CD ]
Line_49 $$ s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_49 $$ s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_5 $$ Session s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)-->Line_80 $$ master = dd.getMaster()[ FD ]
Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_95 $$ list.add(did)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_34 $$ Iterator iter = master.getDetails().iterator()-->Line_36 $$ while (iter.hasNext()) [ FD ]
Line_49 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")-->Line_126 $$ assertEquals(f.iterate().next(), new Integer(12))[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_92 $$ assertTrue(q.list().size() == 0)[ CD ]
Line_49 $$ s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_136 $$ s.delete(master)[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_68 $$ s.close()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_72 $$ assertTrue(Hibernate.isInitialized(((Master) ((Object[]) list.get(0))[0]).getDetails()))[ CD ]
Line_44 $$ s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_5 $$ Session s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_45 $$ t = s.beginTransaction()[ CD ]
Line_61 $$ s = openSession()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_69 $$ s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_69 $$ s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_31 $$ s = openSession()-->Line_44 $$ s = openSession()[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_77 $$ s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_26 $$ master = new Master()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_44 $$ s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_78 $$ t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_126 $$ assertEquals(f.iterate().next(), new Integer(12))[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_78 $$ t = s.beginTransaction()[ CD ]
Line_26 $$ master = new Master()-->Line_125 $$ f.setParameter("listy2", master.getName())[ FD ]
Line_24 $$ s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_49 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_26 $$ master = new Master()-->Line_33 $$ master = (Master) s.load(Master.class, mid)[ FD ]
Line_56 $$ Detail dt = (Detail) list.get(0)-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_72 $$ assertTrue(Hibernate.isInitialized(((Master) ((Object[]) list.get(0))[0]).getDetails()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_45 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_42 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_10 $$ Detail d1 = new Detail()[ CD ]
Line_69 $$ s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()[ CD ]
Line_44 $$ s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ Transaction t = s.beginTransaction()[ FD ]
Line_19 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof SAPDBDialect) && !(getDialect() instanceof MckoiDialect) && !(getDialect() instanceof org.hibernate.dialect.TimesTenDialect)) -->Line_20 $$ assertTrue("query", s.createQuery("from Detail d, Master m where m = d.master and size(m.outgoing) = 0 and size(m.incoming) = 0").list().size() == 2)[ CD ]
Line_7 $$ Master master = new Master()-->Line_127 $$ iter = master.getDetails().iterator()[ FD ]
Line_24 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_31 $$ s = openSession()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_24 $$ s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_95 $$ list.add(did)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_13 $$ Detail d2 = new Detail()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_49 $$ s = openSession()[ CD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_5 $$ Session s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_44 $$ s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_12 $$ Serializable did = s.save(d1)[ CD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_99 $$ assertTrue(q.iterate().hasNext())[ FD ]
Line_61 $$ s = openSession()-->Line_77 $$ s = openSession()[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_111 $$ f.setInteger("top", 100)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_129 $$ while (iter.hasNext()) [ CD ]
Line_5 $$ Session s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ CD ]
Line_77 $$ s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_44 $$ s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_61 $$ s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_7 $$ Master master = new Master()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_44 $$ s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_69 $$ s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_113 $$ assertEquals(f.iterate().next(), new Integer(12))[ FD ]
Line_128 $$ i = 0-->Line_133 $$ i++[ FD ]
Line_5 $$ Session s = openSession()-->Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()[ FD ]
Line_24 $$ s = openSession()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_31 $$ s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_49 $$ s = openSession()-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_5 $$ Session s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_112 $$ f.setInteger("bottom", 0)[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_113 $$ assertEquals(f.iterate().next(), new Integer(12))[ CD ]
Line_5 $$ Session s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_59 $$ t.commit()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_30 $$ s.close()[ CD ]
Line_69 $$ s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_24 $$ s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_7 $$ Master master = new Master()-->Line_34 $$ Iterator iter = master.getDetails().iterator()[ FD ]
Line_130 $$ Detail d = (Detail) iter.next()-->Line_131 $$ assertTrue("master-detail", d.getMaster() == master)[ FD ]
Line_44 $$ s = openSession()-->Line_45 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_57 $$ Serializable dtid = s.getIdentifier(dt)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_81 $$ assertTrue("detail-master", master.getDetails().contains(dd))[ FD ]
Line_61 $$ s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_69 $$ s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_92 $$ assertTrue(q.list().size() == 0)[ FD ]
Line_31 $$ s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_61 $$ s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_7 $$ Master master = new Master()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_99 $$ assertTrue(q.iterate().hasNext())[ CD ]
Line_31 $$ s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_31 $$ s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_28 $$ assertTrue(master.getDetails().size() == 2)[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_64 $$ assertTrue(Hibernate.isInitialized(((Master) list.get(0)).getDetails()))[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ CD ]
Line_80 $$ master = dd.getMaster()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_56 $$ Detail dt = (Detail) list.get(0)[ CD ]
Line_61 $$ s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_61 $$ s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_31 $$ s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_117 $$ Collection coll = new ArrayList()-->Line_119 $$ coll.add(new Integer(22))[ FD ]
Line_70 $$ t = s.beginTransaction()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_56 $$ Detail dt = (Detail) list.get(0)-->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_91 $$ q.setInteger("id2", -1)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_8 $$ assertTrue("save returned native id", s.save(master) != null)[ CD ]
Line_13 $$ Detail d2 = new Detail()-->Line_16 $$ assertTrue("generated id returned", s.save(d2) != null)[ FD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_94 $$ list = new ArrayList()[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ CD ]
Line_44 $$ s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_24 $$ s = openSession()-->Line_33 $$ master = (Master) s.load(Master.class, mid)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_86 $$ assertTrue(q.list().size() == 2)[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_34 $$ Iterator iter = master.getDetails().iterator()[ CD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_5 $$ Session s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_117 $$ Collection coll = new ArrayList()-->Line_121 $$ f.setParameterList("list", coll)[ FD ]
Line_31 $$ s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_31 $$ s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_126 $$ assertEquals(f.iterate().next(), new Integer(12))[ FD ]
Line_49 $$ s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_26 $$ master = new Master()-->Line_127 $$ iter = master.getDetails().iterator()[ FD ]
Line_31 $$ s = openSession()-->Line_77 $$ s = openSession()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_17 $$ master.addDetail(d1)[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_90 $$ assertTrue(q.list().size() == 2)[ CD ]
Line_31 $$ s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_34 $$ Iterator iter = master.getDetails().iterator()-->Line_130 $$ Detail d = (Detail) iter.next()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ CD ]
Line_61 $$ s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_7 $$ Master master = new Master()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_34 $$ Iterator iter = master.getDetails().iterator()-->Line_129 $$ while (iter.hasNext()) [ FD ]
Line_24 $$ s = openSession()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_49 $$ s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_49 $$ s = openSession()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_125 $$ f.setParameter("listy2", master.getName())[ FD ]
Line_31 $$ s = openSession()-->Line_45 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_7 $$ Master master = new Master()-->Line_136 $$ s.delete(master)[ FD ]
Line_49 $$ s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ master = new Master()-->Line_27 $$ s.load(master, mid)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_50 $$ t = s.beginTransaction()[ CD ]
Line_77 $$ s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_57 $$ Serializable dtid = s.getIdentifier(dt)-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_72 $$ assertTrue(Hibernate.isInitialized(((Master) ((Object[]) list.get(0))[0]).getDetails()))[ FD ]
Line_77 $$ s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()[ FD ]
Line_61 $$ s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_49 $$ s = openSession()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_44 $$ s = openSession()-->Line_57 $$ Serializable dtid = s.getIdentifier(dt)[ FD ]
Line_5 $$ Session s = openSession()-->Line_77 $$ s = openSession()[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_44 $$ s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_77 $$ s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_31 $$ s = openSession()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ FD ]
Line_61 $$ s = openSession()-->Line_76 $$ s.close()[ FD ]
Line_94 $$ list = new ArrayList()-->Line_96 $$ list.add(new Long(-1))[ FD ]
Line_5 $$ Session s = openSession()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_61 $$ s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_26 $$ master = new Master()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_115 $$ assertEquals(f.iterate().next(), new Integer(0))[ FD ]
Line_24 $$ s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_69 $$ s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_35 $$ int i = 0-->Line_128 $$ i = 0[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()[ CD ]
Line_7 $$ Master master = new Master()-->Line_17 $$ master.addDetail(d1)[ FD ]
Line_36 $$ while (iter.hasNext()) -->Line_37 $$ Detail d = (Detail) iter.next()[ CD ]
Line_24 $$ s = openSession()-->Line_46 $$ assertTrue(s.createQuery("select elements(master.details) from Master master").list().size() == 2)[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_72 $$ assertTrue(Hibernate.isInitialized(((Master) ((Object[]) list.get(0))[0]).getDetails()))[ FD ]
Line_37 $$ Detail d = (Detail) iter.next()-->Line_131 $$ assertTrue("master-detail", d.getMaster() == master)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_97 $$ q.setParameterList("ids", list)[ CD ]
Line_31 $$ s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_44 $$ s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_61 $$ s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_95 $$ list.add(did)[ FD ]
Line_49 $$ s = openSession()-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_49 $$ s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_49 $$ s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_16 $$ assertTrue("generated id returned", s.save(d2) != null)[ CD ]
Line_24 $$ s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_5 $$ Session s = openSession()-->Line_46 $$ assertTrue(s.createQuery("select elements(master.details) from Master master").list().size() == 2)[ FD ]
Line_5 $$ Session s = openSession()-->Line_8 $$ assertTrue("save returned native id", s.save(master) != null)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_31 $$ s = openSession()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_7 $$ Master master = new Master()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_5 $$ Session s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_7 $$ Master master = new Master()-->Line_11 $$ d1.setMaster(master)[ FD ]
Line_31 $$ s = openSession()-->Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()[ FD ]
Line_44 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_19 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof SAPDBDialect) && !(getDialect() instanceof MckoiDialect) && !(getDialect() instanceof org.hibernate.dialect.TimesTenDialect)) [ CD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_88 $$ q.setInteger("id1", -1)[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_74 $$ assertTrue(((Master) ((Object[]) list.get(0))[0]).getDetails().contains(dt))[ FD ]
Line_5 $$ Session s = openSession()-->Line_33 $$ master = (Master) s.load(Master.class, mid)[ FD ]
Line_44 $$ s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_89 $$ q.setInteger("id2", 99999999)[ CD ]
Line_7 $$ Master master = new Master()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_36 $$ while (iter.hasNext()) -->Line_39 $$ i++[ CD ]
Line_31 $$ s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_31 $$ s = openSession()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_137 $$ t.commit()[ CD ]
Line_7 $$ Master master = new Master()-->Line_33 $$ master = (Master) s.load(Master.class, mid)[ FD ]
Line_31 $$ s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_81 $$ assertTrue("detail-master", master.getDetails().contains(dd))[ FD ]
Line_69 $$ s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_95 $$ list.add(did)[ CD ]
Line_5 $$ Session s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_26 $$ master = new Master()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_67 $$ t.commit()[ FD ]
Line_31 $$ s = openSession()-->Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()[ FD ]
Line_44 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_32 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ master = new Master()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_44 $$ s = openSession()-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_125 $$ f.setParameter("listy2", master.getName())[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_15 $$ d2.setMaster(master)[ CD ]
Line_44 $$ s = openSession()-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_37 $$ Detail d = (Detail) iter.next()-->Line_132 $$ s.delete(d)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_124 $$ f.setParameterList("list", coll)[ CD ]
Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)-->Line_81 $$ assertTrue("detail-master", master.getDetails().contains(dd))[ FD ]
Line_49 $$ s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_7 $$ Master master = new Master()-->Line_15 $$ d2.setMaster(master)[ FD ]
Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")-->Line_99 $$ assertTrue(q.iterate().hasNext())[ FD ]
Line_31 $$ s = openSession()-->Line_68 $$ s.close()[ FD ]
Line_69 $$ s = openSession()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_69 $$ s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_61 $$ s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_56 $$ Detail dt = (Detail) list.get(0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_94 $$ list = new ArrayList()[ CD ]
Line_80 $$ master = dd.getMaster()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_57 $$ Serializable dtid = s.getIdentifier(dt)[ CD ]
Line_44 $$ s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_26 $$ master = new Master()-->Line_34 $$ Iterator iter = master.getDetails().iterator()[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_69 $$ s = openSession()-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_69 $$ s = openSession()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_26 $$ master = new Master()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_44 $$ s = openSession()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_34 $$ Iterator iter = master.getDetails().iterator()-->Line_127 $$ iter = master.getDetails().iterator()[ FD ]
Line_61 $$ s = openSession()-->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")-->Line_122 $$ assertEquals(f.iterate().next(), new Integer(12))[ FD ]
Line_7 $$ Master master = new Master()-->Line_81 $$ assertTrue("detail-master", master.getDetails().contains(dd))[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_24 $$ s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_67 $$ t.commit()[ CD ]
Line_5 $$ Session s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_80 $$ master = dd.getMaster()[ FD ]
Line_7 $$ Master master = new Master()-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_24 $$ s = openSession()-->Line_136 $$ s.delete(master)[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_67 $$ t.commit()[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_42 $$ t.commit()[ FD ]
Line_77 $$ s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_34 $$ Iterator iter = master.getDetails().iterator()-->Line_37 $$ Detail d = (Detail) iter.next()[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
Line_7 $$ Master master = new Master()-->Line_80 $$ master = dd.getMaster()[ FD ]
Line_49 $$ s = openSession()-->Line_109 $$ assertTrue(s.createFilter(master.getIncoming(), "").list().size() == 0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_31 $$ s = openSession()[ CD ]
Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")-->Line_124 $$ f.setParameterList("list", coll)[ FD ]
Line_50 $$ t = s.beginTransaction()-->Line_137 $$ t.commit()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_11 $$ d1.setMaster(master)[ CD ]
Line_24 $$ s = openSession()-->Line_44 $$ s = openSession()[ FD ]
Line_44 $$ s = openSession()-->Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()[ FD ]
Line_117 $$ Collection coll = new ArrayList()-->Line_124 $$ f.setParameterList("list", coll)[ FD ]
Line_49 $$ s = openSession()-->Line_77 $$ s = openSession()[ FD ]
Line_24 $$ s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_5 $$ Session s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ FD ]
Line_44 $$ s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_91 $$ q.setInteger("id2", -1)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ CD ]
Line_77 $$ s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_117 $$ Collection coll = new ArrayList()-->Line_120 $$ coll.add(new Integer(0))[ FD ]
Line_7 $$ Master master = new Master()-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_127 $$ iter = master.getDetails().iterator()-->Line_130 $$ Detail d = (Detail) iter.next()[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_88 $$ q.setInteger("id1", -1)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_5 $$ Session s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ CD ]
Line_5 $$ Session s = openSession()-->Line_25 $$ t = s.beginTransaction()[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_45 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ s = openSession()-->Line_62 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ master = new Master()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_69 $$ s = openSession()[ CD ]
Line_52 $$ Master m = (Master) list.get(0)-->Line_54 $$ assertTrue(m.getDetails().size() == 2)[ FD ]
Line_62 $$ t = s.beginTransaction()-->Line_70 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ CD ]
Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")-->Line_97 $$ q.setParameterList("ids", list)[ FD ]
Line_31 $$ s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_103 $$ assertTrue(s.createFilter(master.getIncoming(), "where this.id > -1 and this.name is not null").list().size() == 0)[ CD ]
Line_77 $$ s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_31 $$ s = openSession()-->Line_93 $$ q = s.createFilter(master.getDetails(), "where this.id in (:ids)")[ FD ]
Line_45 $$ t = s.beginTransaction()-->Line_67 $$ t.commit()[ FD ]
Line_12 $$ Serializable did = s.save(d1)-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_44 $$ s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_37 $$ Detail d = (Detail) iter.next()-->Line_38 $$ assertTrue("master-detail", d.getMaster() == master)[ FD ]
Line_49 $$ s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")-->Line_125 $$ f.setParameter("listy2", master.getName())[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_88 $$ q.setInteger("id1", -1)[ CD ]
Line_5 $$ Session s = openSession()-->Line_108 $$ assertTrue(s.createFilter(master.getMoreDetails(), "").list().size() == 0)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_44 $$ s = openSession()-->Line_49 $$ s = openSession()[ FD ]
Line_44 $$ s = openSession()-->Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_26 $$ master = new Master()-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_7 $$ Master master = new Master()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_24 $$ s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_32 $$ t = s.beginTransaction()-->Line_59 $$ t.commit()[ FD ]
Line_77 $$ s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")-->Line_98 $$ assertTrue(q.list().size() == 1)[ FD ]
Line_31 $$ s = openSession()-->Line_50 $$ t = s.beginTransaction()[ FD ]
Line_31 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_24 $$ s = openSession()[ CD ]
Line_61 $$ s = openSession()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ CD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_123 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list) and this.master.name = :listy2")[ FD ]
Line_70 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ CD ]
Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()-->Line_66 $$ assertTrue(((Master) list.get(0)).getDetails().contains(dt))[ FD ]
Line_61 $$ s = openSession()-->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ FD ]
Line_44 $$ s = openSession()-->Line_71 $$ list = s.createQuery("select m, m1.name from Master m1, Master m left join fetch m.details where m.name=m1.name").list()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_5 $$ Session s = openSession()[ CD ]
Line_44 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_77 $$ s = openSession()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_54 $$ assertTrue(m.getDetails().size() == 2)[ CD ]
Line_49 $$ s = openSession()-->Line_105 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i) group by this.id").iterate().next() instanceof Integer)[ FD ]
Line_51 $$ List list = s.createQuery("from Master m left join fetch m.details").list()-->Line_52 $$ Master m = (Master) list.get(0)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_66 $$ assertTrue(((Master) list.get(0)).getDetails().contains(dt))[ CD ]
Line_31 $$ s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_7 $$ Master master = new Master()-->Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")[ FD ]
Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")-->Line_125 $$ f.setParameter("listy2", master.getName())[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_59 $$ t.commit()[ FD ]
Line_62 $$ t = s.beginTransaction()-->Line_78 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_75 $$ t.commit()[ CD ]
Line_110 $$ Query f = s.createFilter(master.getDetails(), "select max(this.i) where this.i < :top and this.i>=:bottom")-->Line_122 $$ assertEquals(f.iterate().next(), new Integer(12))[ FD ]
Line_7 $$ Master master = new Master()-->Line_107 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master").list().size() == 2)[ FD ]
Line_24 $$ s = openSession()-->Line_69 $$ s = openSession()[ FD ]
Line_63 $$ list = s.createQuery("select m from Master m1, Master m left join fetch m.details where m.name=m1.name").list()-->Line_94 $$ list = new ArrayList()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_138 $$ s.close()[ CD ]
Line_25 $$ t = s.beginTransaction()-->Line_75 $$ t.commit()[ FD ]
Line_69 $$ s = openSession()-->Line_116 $$ f = s.createFilter(master.getDetails(), "select max(this.i) where this.i not in (:list)")[ FD ]
Line_25 $$ t = s.beginTransaction()-->Line_45 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_29 $$ t.commit()[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_62 $$ t = s.beginTransaction()[ CD ]
Line_7 $$ Master master = new Master()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_96 $$ list.add(new Long(-1))[ CD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_52 $$ Master m = (Master) list.get(0)[ CD ]
Line_24 $$ s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_125 $$ f.setParameter("listy2", master.getName())[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_22 $$ t.commit()[ CD ]
Line_77 $$ s = openSession()-->Line_102 $$ assertTrue(s.createFilter(master.getDetails(), "select m from Master m where this.id > -1 and this.master=m").list().size() == 2)[ FD ]
Line_24 $$ s = openSession()-->Line_79 $$ Detail dd = (Detail) s.load(Detail.class, did)[ FD ]
Line_12 $$ Serializable did = s.save(d1)-->Line_95 $$ list.add(did)[ FD ]
Line_31 $$ s = openSession()-->Line_73 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_61 $$ s = openSession()-->Line_132 $$ s.delete(d)[ FD ]
Line_5 $$ Session s = openSession()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_128 $$ i = 0[ CD ]
Line_24 $$ s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_5 $$ Session s = openSession()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_80 $$ master = dd.getMaster()-->Line_82 $$ assertTrue(s.createFilter(master.getDetails(), "order by this.i desc").list().size() == 2)[ FD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_100 $$ assertTrue(s.createFilter(master.getDetails(), "where this.id > -1").list().size() == 2)[ FD ]
Line_26 $$ master = new Master()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_49 $$ s = openSession()-->Line_138 $$ s.close()[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_99 $$ assertTrue(q.iterate().hasNext())[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_60 $$ s.close()[ CD ]
Line_33 $$ master = (Master) s.load(Master.class, mid)-->Line_87 $$ q = s.createFilter(master.getDetails(), "where this.id > :id1 and this.id < :id2")[ FD ]
Line_5 $$ Session s = openSession()-->Line_44 $$ s = openSession()[ FD ]
Line_49 $$ s = openSession()-->Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")[ FD ]
Line_5 $$ Session s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_84 $$ Query q = s.createFilter(master.getDetails(), "where this.id > :id")-->Line_90 $$ assertTrue(q.list().size() == 2)[ FD ]
Line_69 $$ s = openSession()-->Line_77 $$ s = openSession()[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_83 $$ assertTrue(s.createFilter(master.getDetails(), "select this where this.id > -1").list().size() == 2)[ CD ]
Line_24 $$ s = openSession()-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_5 $$ Session s = openSession()-->Line_55 $$ list = s.createQuery("from Detail d inner join fetch d.master").list()[ FD ]
Line_26 $$ master = new Master()-->Line_104 $$ assertTrue(s.createFilter(master.getDetails(), "select max(this.i)").iterate().next() instanceof Integer)[ FD ]
Line_3 $$ if (getDialect() instanceof HSQLDialect)-->Line_4 $$ return[ CD ]
Line_31 $$ s = openSession()-->Line_65 $$ dt = (Detail) s.load(Detail.class, dtid)[ FD ]
Line_56 $$ Detail dt = (Detail) list.get(0)-->Line_58 $$ assertTrue(dt.getMaster() == m)[ FD ]
Line_2 $$ public void testMasterDetail() throws Exception -->Line_106 $$ assertTrue(s.createFilter(master.getDetails(), "select count(*)").iterate().next() instanceof Long)[ CD ]
Line_31 $$ s = openSession()-->Line_101 $$ assertTrue(s.createFilter(master.getDetails(), "select this.master where this.id > -1").list().size() == 2)[ FD ]
