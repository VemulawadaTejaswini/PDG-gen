Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_7 $$ accessor.setPropertyValue("collection", new int[] [ FD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_23 $$ assertEquals(1, target.getList().size())[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_16 $$ accessor.setPropertyValue("list", new int[] [ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_16 $$ accessor.setPropertyValue("list", new int[] [ FD ]
Line_5 $$ Collection<Integer> coll = new HashSet<Integer>()-->Line_6 $$ coll.add(0)[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_6 $$ coll.add(0)[ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_7 $$ accessor.setPropertyValue("collection", new int[] [ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_22 $$ assertTrue(target.getSortedSet().containsAll(sortedSet))[ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_15 $$ list.add(3)[ CD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_21 $$ assertEquals(1, target.getSortedSet().size())[ FD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_10 $$ accessor.setPropertyValue("set", new int[] [ FD ]
Line_14 $$ Set<Integer> list = new HashSet<Integer>()-->Line_15 $$ list.add(3)[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_21 $$ assertEquals(1, target.getSortedSet().size())[ CD ]
Line_11 $$ List<Integer> sortedSet = new ArrayList<Integer>()-->Line_22 $$ assertTrue(target.getSortedSet().containsAll(sortedSet))[ FD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_18 $$ assertTrue(target.getCollection().containsAll(coll))[ FD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_13 $$ accessor.setPropertyValue("sortedSet", new int[] [ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_23 $$ assertEquals(1, target.getList().size())[ CD ]
Line_11 $$ List<Integer> sortedSet = new ArrayList<Integer>()-->Line_12 $$ sortedSet.add(2)[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_18 $$ assertTrue(target.getCollection().containsAll(coll))[ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_9 $$ set.add(1)[ CD ]
Line_8 $$ List<Integer> set = new LinkedList<Integer>()-->Line_20 $$ assertTrue(target.getSet().containsAll(set))[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_17 $$ assertEquals(1, target.getCollection().size())[ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_11 $$ List<Integer> sortedSet = new ArrayList<Integer>()[ CD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_20 $$ assertTrue(target.getSet().containsAll(set))[ FD ]
Line_5 $$ Collection<Integer> coll = new HashSet<Integer>()-->Line_18 $$ assertTrue(target.getCollection().containsAll(coll))[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_14 $$ Set<Integer> list = new HashSet<Integer>()[ CD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_22 $$ assertTrue(target.getSortedSet().containsAll(sortedSet))[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_5 $$ Collection<Integer> coll = new HashSet<Integer>()[ CD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_24 $$ assertTrue(target.getList().containsAll(list))[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)[ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_24 $$ assertTrue(target.getList().containsAll(list))[ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_20 $$ assertTrue(target.getSet().containsAll(set))[ CD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_19 $$ assertEquals(1, target.getSet().size())[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_3 $$ IndexedTestBean target = new IndexedTestBean()[ CD ]
Line_8 $$ List<Integer> set = new LinkedList<Integer>()-->Line_9 $$ set.add(1)[ FD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_17 $$ assertEquals(1, target.getCollection().size())[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_13 $$ accessor.setPropertyValue("sortedSet", new int[] [ CD ]
Line_3 $$ IndexedTestBean target = new IndexedTestBean()-->Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_10 $$ accessor.setPropertyValue("set", new int[] [ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_12 $$ sortedSet.add(2)[ CD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_19 $$ assertEquals(1, target.getSet().size())[ CD ]
Line_14 $$ Set<Integer> list = new HashSet<Integer>()-->Line_24 $$ assertTrue(target.getList().containsAll(list))[ FD ]
Line_2 $$ public void setCollectionPropertyWithIntArrayValue() -->Line_8 $$ List<Integer> set = new LinkedList<Integer>()[ CD ]
