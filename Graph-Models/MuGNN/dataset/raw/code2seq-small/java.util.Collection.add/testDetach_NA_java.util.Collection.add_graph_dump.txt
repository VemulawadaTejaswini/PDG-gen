Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_13 $$ em.close()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_20 $$ em.detach(mouth)[ FD ]
Line_24 $$ em = getOrCreateEntityManager()-->Line_28 $$ em.close()[ FD ]
Line_2 $$ public void testDetach() -->Line_5 $$ Tooth tooth = new Tooth()[ CD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_26 $$ em.remove(em.find(Mouth.class, mouth.id))[ FD ]
Line_24 $$ em = getOrCreateEntityManager()-->Line_27 $$ em.getTransaction().commit()[ FD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_20 $$ em.detach(mouth)[ FD ]
Line_2 $$ public void testDetach() -->Line_25 $$ em.getTransaction().begin()[ CD ]
Line_6 $$ Mouth mouth = new Mouth()-->Line_17 $$ assertNotNull(mouth)[ FD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_28 $$ em.close()[ FD ]
Line_24 $$ em = getOrCreateEntityManager()-->Line_25 $$ em.getTransaction().begin()[ FD ]
Line_2 $$ public void testDetach() -->Line_16 $$ mouth = em.find(Mouth.class, mouth.id)[ CD ]
Line_2 $$ public void testDetach() -->Line_15 $$ em.getTransaction().begin()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_26 $$ em.remove(em.find(Mouth.class, mouth.id))[ FD ]
Line_5 $$ Tooth tooth = new Tooth()-->Line_8 $$ em.persist(tooth)[ FD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_25 $$ em.getTransaction().begin()[ FD ]
Line_16 $$ mouth = em.find(Mouth.class, mouth.id)-->Line_20 $$ em.detach(mouth)[ FD ]
Line_2 $$ public void testDetach() -->Line_23 $$ em.close()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_25 $$ em.getTransaction().begin()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_21 $$ assertFalse(em.contains(tooth))[ FD ]
Line_2 $$ public void testDetach() -->Line_26 $$ em.remove(em.find(Mouth.class, mouth.id))[ CD ]
Line_2 $$ public void testDetach() -->Line_11 $$ mouth.teeth.add(tooth)[ CD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_21 $$ assertFalse(em.contains(tooth))[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_22 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testDetach() -->Line_3 $$ EntityManager em = getOrCreateEntityManager()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_23 $$ em.close()[ FD ]
Line_2 $$ public void testDetach() -->Line_24 $$ em = getOrCreateEntityManager()[ CD ]
Line_24 $$ em = getOrCreateEntityManager()-->Line_26 $$ em.remove(em.find(Mouth.class, mouth.id))[ FD ]
Line_2 $$ public void testDetach() -->Line_13 $$ em.close()[ CD ]
Line_2 $$ public void testDetach() -->Line_27 $$ em.getTransaction().commit()[ CD ]
Line_2 $$ public void testDetach() -->Line_14 $$ em = getOrCreateEntityManager()[ CD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_24 $$ em = getOrCreateEntityManager()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_12 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testDetach() -->Line_6 $$ Mouth mouth = new Mouth()[ CD ]
Line_2 $$ public void testDetach() -->Line_21 $$ assertFalse(em.contains(tooth))[ CD ]
Line_5 $$ Tooth tooth = new Tooth()-->Line_21 $$ assertFalse(em.contains(tooth))[ FD ]
Line_5 $$ Tooth tooth = new Tooth()-->Line_11 $$ mouth.teeth.add(tooth)[ FD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_27 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testDetach() -->Line_20 $$ em.detach(mouth)[ CD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_15 $$ em.getTransaction().begin()[ FD ]
Line_6 $$ Mouth mouth = new Mouth()-->Line_9 $$ tooth.mouth = mouth[ FD ]
Line_2 $$ public void testDetach() -->Line_17 $$ assertNotNull(mouth)[ CD ]
Line_2 $$ public void testDetach() -->Line_9 $$ tooth.mouth = mouth[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_8 $$ em.persist(tooth)[ FD ]
Line_6 $$ Mouth mouth = new Mouth()-->Line_20 $$ em.detach(mouth)[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_16 $$ mouth = em.find(Mouth.class, mouth.id)[ FD ]
Line_2 $$ public void testDetach() -->Line_19 $$ tooth = mouth.teeth.iterator().next()[ CD ]
Line_2 $$ public void testDetach() -->Line_18 $$ assertEquals(1, mouth.teeth.size())[ CD ]
Line_2 $$ public void testDetach() -->Line_4 $$ em.getTransaction().begin()[ CD ]
Line_2 $$ public void testDetach() -->Line_28 $$ em.close()[ CD ]
Line_6 $$ Mouth mouth = new Mouth()-->Line_7 $$ em.persist(mouth)[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_4 $$ em.getTransaction().begin()[ FD ]
Line_16 $$ mouth = em.find(Mouth.class, mouth.id)-->Line_17 $$ assertNotNull(mouth)[ FD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_16 $$ mouth = em.find(Mouth.class, mouth.id)[ FD ]
Line_5 $$ Tooth tooth = new Tooth()-->Line_19 $$ tooth = mouth.teeth.iterator().next()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_28 $$ em.close()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_27 $$ em.getTransaction().commit()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_7 $$ em.persist(mouth)[ FD ]
Line_2 $$ public void testDetach() -->Line_8 $$ em.persist(tooth)[ CD ]
Line_2 $$ public void testDetach() -->Line_22 $$ em.getTransaction().commit()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_14 $$ em = getOrCreateEntityManager()[ FD ]
Line_19 $$ tooth = mouth.teeth.iterator().next()-->Line_21 $$ assertFalse(em.contains(tooth))[ FD ]
Line_2 $$ public void testDetach() -->Line_10 $$ mouth.teeth = new ArrayList<Tooth>()[ CD ]
Line_2 $$ public void testDetach() -->Line_7 $$ em.persist(mouth)[ CD ]
Line_6 $$ Mouth mouth = new Mouth()-->Line_16 $$ mouth = em.find(Mouth.class, mouth.id)[ FD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_22 $$ em.getTransaction().commit()[ FD ]
Line_2 $$ public void testDetach() -->Line_12 $$ em.getTransaction().commit()[ CD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_15 $$ em.getTransaction().begin()[ FD ]
Line_14 $$ em = getOrCreateEntityManager()-->Line_23 $$ em.close()[ FD ]
Line_3 $$ EntityManager em = getOrCreateEntityManager()-->Line_24 $$ em = getOrCreateEntityManager()[ FD ]
