Line_58 $$ TableColumn column = columnModel.getColumn(i)-->Line_61 $$ column.setMaxWidth(width)[ FD ]
Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) -->Line_41 $$ widths[i] = getFontMetrics(getFont()).stringWidth(maxStringValue) + columnInfo.getAdditionalWidth()[ FD ]
Line_21 $$ TableCellRenderer columnHeaderRenderer = column.getHeaderRenderer()-->Line_22 $$ if (columnHeaderRenderer == null) [ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_8 $$ TableColumnModel columnModel = getColumnModel()[ CD ]
Line_60 $$ if (sizeMode[i] == 1) -->Line_62 $$ column.setPreferredWidth(width)[ CD ]
Line_59 $$ int width = widths[i]-->Line_62 $$ column.setPreferredWidth(width)[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_6 $$ final RowSorter.SortKey sortKey = sorter == null ? null : ContainerUtil.getFirstItem(sorter.getSortKeys())[ CD ]
Line_59 $$ int width = widths[i]-->Line_63 $$ column.setMinWidth(width)[ FD ]
Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) -->Line_41 $$ widths[i] = getFontMetrics(getFont()).stringWidth(maxStringValue) + columnInfo.getAdditionalWidth()[ CD ]
Line_57 $$ for (int i = 0; i < visibleColumnCount; i++) -->Line_58 $$ TableColumn column = columnModel.getColumn(i)[ CD ]
Line_57 $$ for (int i = 0; i < visibleColumnCount; i++) -->Line_60 $$ if (sizeMode[i] == 1) [ CD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_63 $$ column.setMinWidth(width)[ FD ]
Line_15 $$ int varCount = 0-->Line_46 $$ varCount++[ FD ]
Line_23 $$ columnHeaderRenderer = defaultRenderer-->Line_25 $$ final Component headerComponent = columnHeaderRenderer == null ? null : columnHeaderRenderer.getTableCellRendererComponent(this, column.getHeaderValue(), false, false, 0, i)[ FD ]
Line_20 $$ final ColumnInfo columnInfo = columnInfos[column.getModelIndex()]-->Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) [ FD ]
Line_13 $$ int allColumnWidth = 0-->Line_48 $$ allColumnWidth += widths[i][ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_14 $$ int allColumnCurrent = 0[ CD ]
Line_57 $$ for (int i = 0; i < visibleColumnCount; i++) -->Line_59 $$ int width = widths[i][ CD ]
Line_43 $$ if ((preferredValue = columnInfo.getPreferredStringValue()) != null) -->Line_45 $$ widths[i] = getFontMetrics(getFont()).stringWidth(preferredValue) + columnInfo.getAdditionalWidth()[ CD ]
Line_8 $$ TableColumnModel columnModel = getColumnModel()-->Line_58 $$ TableColumn column = columnModel.getColumn(i)[ FD ]
Line_58 $$ TableColumn column = columnModel.getColumn(i)-->Line_72 $$ column.setPreferredWidth(width)[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_11 $$ int[] headers = new int[visibleColumnCount][ CD ]
Line_59 $$ int width = widths[i]-->Line_61 $$ column.setMaxWidth(width)[ FD ]
Line_14 $$ int allColumnCurrent = 0-->Line_49 $$ allColumnCurrent += column.getPreferredWidth()[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_57 $$ for (int i = 0; i < visibleColumnCount; i++) [ CD ]
Line_64 $$ if (sizeMode[i] == 2) -->Line_68 $$ column.setMaxWidth(width)[ CD ]
Line_33 $$ final String maxStringValue-->Line_41 $$ widths[i] = getFontMetrics(getFont()).stringWidth(maxStringValue) + columnInfo.getAdditionalWidth()[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_15 $$ int varCount = 0[ CD ]
Line_37 $$ int width = columnInfo.getWidth(this)-->Line_38 $$ widths[i] = width[ FD ]
Line_60 $$ if (sizeMode[i] == 1) -->Line_63 $$ column.setMinWidth(width)[ CD ]
Line_2 $$ public void updateColumnSizes() -->Line_13 $$ int allColumnWidth = 0[ CD ]
Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) -->Line_43 $$ if ((preferredValue = columnInfo.getPreferredStringValue()) != null) [ CD ]
Line_64 $$ if (sizeMode[i] == 2) -->Line_69 $$ if (sizeMode[i] == 3) [ CD ]
Line_37 $$ int width = columnInfo.getWidth(this)-->Line_62 $$ column.setPreferredWidth(width)[ FD ]
Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) -->Line_40 $$ sizeMode[i] = 2[ CD ]
Line_37 $$ int width = columnInfo.getWidth(this)-->Line_72 $$ column.setPreferredWidth(width)[ FD ]
Line_37 $$ int width = columnInfo.getWidth(this)-->Line_68 $$ column.setMaxWidth(width)[ FD ]
Line_23 $$ columnHeaderRenderer = defaultRenderer-->Line_22 $$ if (columnHeaderRenderer == null) [ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_12 $$ int[] widths = new int[visibleColumnCount][ CD ]
Line_2 $$ public void updateColumnSizes() -->Line_56 $$ int addendum = varCount == 0 || viewWidth < allColumnWidth ? 0 : (int) ((allColumnWidth < gold * viewWidth ? gold * viewWidth : allColumnWidth < (1 - gold) * viewWidth ? (1 - gold) * viewWidth : viewWidth) - allColumnWidth) / varCount[ CD ]
Line_64 $$ if (sizeMode[i] == 2) -->Line_67 $$ column.setPreferredWidth(width)[ CD ]
Line_9 $$ int visibleColumnCount = columnModel.getColumnCount()-->Line_57 $$ for (int i = 0; i < visibleColumnCount; i++) [ FD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_68 $$ column.setMaxWidth(width)[ FD ]
Line_35 $$ if (columnInfo.getWidth(this) > 0) -->Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) [ CD ]
Line_37 $$ int width = columnInfo.getWidth(this)-->Line_63 $$ column.setMinWidth(width)[ FD ]
Line_21 $$ TableCellRenderer columnHeaderRenderer = column.getHeaderRenderer()-->Line_25 $$ final Component headerComponent = columnHeaderRenderer == null ? null : columnHeaderRenderer.getTableCellRendererComponent(this, column.getHeaderValue(), false, false, 0, i)[ FD ]
Line_49 $$ allColumnCurrent += column.getPreferredWidth()-->Line_51 $$ allColumnWidth = Math.max(allColumnWidth, allColumnCurrent)[ FD ]
Line_34 $$ final String preferredValue-->Line_45 $$ widths[i] = getFontMetrics(getFont()).stringWidth(preferredValue) + columnInfo.getAdditionalWidth()[ FD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_21 $$ TableCellRenderer columnHeaderRenderer = column.getHeaderRenderer()[ FD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_72 $$ column.setPreferredWidth(width)[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_10 $$ int[] sizeMode = new int[visibleColumnCount][ CD ]
Line_15 $$ int varCount = 0-->Line_42 $$ varCount++[ FD ]
Line_21 $$ TableCellRenderer columnHeaderRenderer = column.getHeaderRenderer()-->Line_23 $$ columnHeaderRenderer = defaultRenderer[ FD ]
Line_57 $$ for (int i = 0; i < visibleColumnCount; i++) -->Line_58 $$ TableColumn column = columnModel.getColumn(i)[ FD ]
Line_59 $$ int width = widths[i]-->Line_67 $$ column.setPreferredWidth(width)[ FD ]
Line_58 $$ TableColumn column = columnModel.getColumn(i)-->Line_67 $$ column.setPreferredWidth(width)[ FD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_49 $$ allColumnCurrent += column.getPreferredWidth()[ FD ]
Line_20 $$ final ColumnInfo columnInfo = columnInfos[column.getModelIndex()]-->Line_41 $$ widths[i] = getFontMetrics(getFont()).stringWidth(maxStringValue) + columnInfo.getAdditionalWidth()[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_3 $$ final JTableHeader header = getTableHeader()[ CD ]
Line_58 $$ TableColumn column = columnModel.getColumn(i)-->Line_68 $$ column.setMaxWidth(width)[ FD ]
Line_37 $$ int width = columnInfo.getWidth(this)-->Line_61 $$ column.setMaxWidth(width)[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_9 $$ int visibleColumnCount = columnModel.getColumnCount()[ CD ]
Line_22 $$ if (columnHeaderRenderer == null) -->Line_23 $$ columnHeaderRenderer = defaultRenderer[ CD ]
Line_20 $$ final ColumnInfo columnInfo = columnInfos[column.getModelIndex()]-->Line_35 $$ if (columnInfo.getWidth(this) > 0) [ FD ]
Line_43 $$ if ((preferredValue = columnInfo.getPreferredStringValue()) != null) -->Line_44 $$ sizeMode[i] = 3[ CD ]
Line_59 $$ int width = widths[i]-->Line_72 $$ column.setPreferredWidth(width)[ FD ]
Line_25 $$ final Component headerComponent = columnHeaderRenderer == null ? null : columnHeaderRenderer.getTableCellRendererComponent(this, column.getHeaderValue(), false, false, 0, i)-->Line_26 $$ if (headerComponent != null) [ FD ]
Line_34 $$ final String preferredValue-->Line_43 $$ if ((preferredValue = columnInfo.getPreferredStringValue()) != null) [ FD ]
Line_58 $$ TableColumn column = columnModel.getColumn(i)-->Line_62 $$ column.setPreferredWidth(width)[ FD ]
Line_37 $$ int width = columnInfo.getWidth(this)-->Line_67 $$ column.setPreferredWidth(width)[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_51 $$ allColumnWidth = Math.max(allColumnWidth, allColumnCurrent)[ CD ]
Line_60 $$ if (sizeMode[i] == 1) -->Line_61 $$ column.setMaxWidth(width)[ CD ]
Line_35 $$ if (columnInfo.getWidth(this) > 0) -->Line_37 $$ int width = columnInfo.getWidth(this)[ CD ]
Line_20 $$ final ColumnInfo columnInfo = columnInfos[column.getModelIndex()]-->Line_37 $$ int width = columnInfo.getWidth(this)[ FD ]
Line_25 $$ final Component headerComponent = columnHeaderRenderer == null ? null : columnHeaderRenderer.getTableCellRendererComponent(this, column.getHeaderValue(), false, false, 0, i)-->Line_27 $$ headers[i] = headerComponent.getPreferredSize().width[ FD ]
Line_20 $$ final ColumnInfo columnInfo = columnInfos[column.getModelIndex()]-->Line_43 $$ if ((preferredValue = columnInfo.getPreferredStringValue()) != null) [ FD ]
Line_35 $$ if (columnInfo.getWidth(this) > 0) -->Line_36 $$ sizeMode[i] = 1[ CD ]
Line_20 $$ final ColumnInfo columnInfo = columnInfos[column.getModelIndex()]-->Line_45 $$ widths[i] = getFontMetrics(getFont()).stringWidth(preferredValue) + columnInfo.getAdditionalWidth()[ FD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_61 $$ column.setMaxWidth(width)[ FD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_25 $$ final Component headerComponent = columnHeaderRenderer == null ? null : columnHeaderRenderer.getTableCellRendererComponent(this, column.getHeaderValue(), false, false, 0, i)[ FD ]
Line_8 $$ TableColumnModel columnModel = getColumnModel()-->Line_19 $$ final TableColumn column = columnModel.getColumn(i)[ FD ]
Line_48 $$ allColumnWidth += widths[i]-->Line_51 $$ allColumnWidth = Math.max(allColumnWidth, allColumnCurrent)[ FD ]
Line_69 $$ if (sizeMode[i] == 3) -->Line_72 $$ column.setPreferredWidth(width)[ CD ]
Line_14 $$ int allColumnCurrent = 0-->Line_51 $$ allColumnWidth = Math.max(allColumnWidth, allColumnCurrent)[ FD ]
Line_43 $$ if ((preferredValue = columnInfo.getPreferredStringValue()) != null) -->Line_46 $$ varCount++[ CD ]
Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) -->Line_42 $$ varCount++[ CD ]
Line_26 $$ if (headerComponent != null) -->Line_27 $$ headers[i] = headerComponent.getPreferredSize().width[ CD ]
Line_35 $$ if (columnInfo.getWidth(this) > 0) -->Line_38 $$ widths[i] = width[ CD ]
Line_13 $$ int allColumnWidth = 0-->Line_51 $$ allColumnWidth = Math.max(allColumnWidth, allColumnCurrent)[ FD ]
Line_33 $$ final String maxStringValue-->Line_39 $$ if ((maxStringValue = columnInfo.getMaxStringValue()) != null) [ FD ]
Line_59 $$ int width = widths[i]-->Line_68 $$ column.setMaxWidth(width)[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_55 $$ double gold = 0.5 * (3 - Math.sqrt(5))[ CD ]
Line_2 $$ public void updateColumnSizes() -->Line_5 $$ final RowSorter<? extends TableModel> sorter = getRowSorter()[ CD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_67 $$ column.setPreferredWidth(width)[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_16 $$ Icon sortIcon = UIManager.getIcon("Table.ascendingSortIcon")[ CD ]
Line_16 $$ Icon sortIcon = UIManager.getIcon("Table.ascendingSortIcon")-->Line_30 $$ headers[i] += sortIcon.getIconWidth() + (headerComponent instanceof JLabel ? ((JLabel) headerComponent).getIconTextGap() : 0)[ FD ]
Line_43 $$ if ((preferredValue = columnInfo.getPreferredStringValue()) != null) -->Line_45 $$ widths[i] = getFontMetrics(getFont()).stringWidth(preferredValue) + columnInfo.getAdditionalWidth()[ FD ]
Line_60 $$ if (sizeMode[i] == 1) -->Line_64 $$ if (sizeMode[i] == 2) [ CD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_20 $$ final ColumnInfo columnInfo = columnInfos[column.getModelIndex()][ FD ]
Line_5 $$ final RowSorter<? extends TableModel> sorter = getRowSorter()-->Line_6 $$ final RowSorter.SortKey sortKey = sorter == null ? null : ContainerUtil.getFirstItem(sorter.getSortKeys())[ FD ]
Line_8 $$ TableColumnModel columnModel = getColumnModel()-->Line_9 $$ int visibleColumnCount = columnModel.getColumnCount()[ FD ]
Line_2 $$ public void updateColumnSizes() -->Line_4 $$ final TableCellRenderer defaultRenderer = header == null ? null : header.getDefaultRenderer()[ CD ]
Line_2 $$ public void updateColumnSizes() -->Line_7 $$ ColumnInfo[] columnInfos = getListTableModel().getColumnInfos()[ CD ]
Line_58 $$ TableColumn column = columnModel.getColumn(i)-->Line_63 $$ column.setMinWidth(width)[ FD ]
Line_3 $$ final JTableHeader header = getTableHeader()-->Line_4 $$ final TableCellRenderer defaultRenderer = header == null ? null : header.getDefaultRenderer()[ FD ]
Line_4 $$ final TableCellRenderer defaultRenderer = header == null ? null : header.getDefaultRenderer()-->Line_23 $$ columnHeaderRenderer = defaultRenderer[ FD ]
Line_19 $$ final TableColumn column = columnModel.getColumn(i)-->Line_62 $$ column.setPreferredWidth(width)[ FD ]
