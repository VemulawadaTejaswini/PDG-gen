Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_23 $$ paramType = constructor.getGenericParameterTypes()[3][ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_31 $$ assertThat(wildcard.getLowerBounds().length, equalTo(1))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_53 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ CD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_56 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType[ CD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_36 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_35 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_104 $$ Type exceptionType = constructor.getGenericExceptionTypes()[0]-->Line_106 $$ exceptionType = constructor.getGenericExceptionTypes()[1][ FD ]
Line_104 $$ Type exceptionType = constructor.getGenericExceptionTypes()[0]-->Line_107 $$ assertThat(exceptionType, instanceOf(TypeVariable.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_73 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_35 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_57 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_109 $$ assertThat(typeVariable.getName(), equalTo("T"))[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_34 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_52 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_15 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_21 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) String.class))[ CD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_60 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_108 $$ typeVariable = (TypeVariable) exceptionType[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_18 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_44 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_73 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_8 $$ assertThat(paramType, equalTo((Type) Callable.class))[ CD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_45 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_50 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(ParameterizedType.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_74 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(TypeVariable.class))[ FD ]
Line_83 $$ GenericArrayType arrayType-->Line_91 $$ assertThat(arrayType.getGenericComponentType(), equalTo((Type) String.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_25 $$ parameterizedType = (ParameterizedType) paramType[ CD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_45 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0][ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ CD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_33 $$ paramType = constructor.getGenericParameterTypes()[4][ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_72 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_72 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_55 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_104 $$ Type exceptionType = constructor.getGenericExceptionTypes()[0]-->Line_105 $$ assertThat(exceptionType, equalTo((Type) Exception.class))[ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_9 $$ paramType = constructor.getGenericParameterTypes()[1][ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_60 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_103 $$ assertThat(constructor.getGenericExceptionTypes().length, equalTo(2))[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ CD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_56 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_23 $$ paramType = constructor.getGenericParameterTypes()[3][ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_45 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ CD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_56 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_36 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_33 $$ paramType = constructor.getGenericParameterTypes()[4][ FD ]
Line_85 $$ if (JavaVersion.current().isJava7Compatible()) -->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ CD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ FD ]
Line_80 $$ typeVariable = (TypeVariable) paramType-->Line_109 $$ assertThat(typeVariable.getName(), equalTo("T"))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_44 $$ parameterizedType = (ParameterizedType) paramType[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_6 $$ assertThat(constructor.getGenericParameterTypes().length, equalTo(12))[ CD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_46 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_72 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_9 $$ paramType = constructor.getGenericParameterTypes()[1][ CD ]
Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_72 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_57 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_73 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_17 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_74 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(TypeVariable.class))[ FD ]
Line_85 $$ if (JavaVersion.current().isJava7Compatible()) -->Line_90 $$ arrayType = (GenericArrayType) paramType[ CD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_103 $$ assertThat(constructor.getGenericExceptionTypes().length, equalTo(2))[ FD ]
Line_85 $$ if (JavaVersion.current().isJava7Compatible()) -->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ CD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_16 $$ parameterizedType = (ParameterizedType) paramType[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_95 $$ arrayType = (GenericArrayType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_60 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_106 $$ exceptionType = constructor.getGenericExceptionTypes()[1]-->Line_107 $$ assertThat(exceptionType, instanceOf(TypeVariable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_64 $$ assertThat(typeVariable.getName(), equalTo("S"))[ CD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_80 $$ typeVariable = (TypeVariable) paramType[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_26 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_25 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_45 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ CD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_48 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ CD ]
Line_108 $$ typeVariable = (TypeVariable) exceptionType-->Line_109 $$ assertThat(typeVariable.getName(), equalTo("T"))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_95 $$ arrayType = (GenericArrayType) paramType-->Line_96 $$ assertThat(arrayType.getGenericComponentType(), instanceOf(ParameterizedType.class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_30 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_34 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_55 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ CD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_93 $$ paramType = constructor.getGenericParameterTypes()[10]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_22 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_68 $$ parameterizedType = (ParameterizedType) paramType-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_29 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ CD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_13 $$ assertThat(parameterizedType.getActualTypeArguments()[0], equalTo((Type) String.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_37 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_43 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_55 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_68 $$ parameterizedType = (ParameterizedType) paramType-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_48 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_83 $$ GenericArrayType arrayType-->Line_90 $$ arrayType = (GenericArrayType) paramType[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_12 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_81 $$ assertThat(typeVariable.getName(), equalTo("V"))[ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_48 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_34 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_68 $$ parameterizedType = (ParameterizedType) paramType-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ CD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_106 $$ exceptionType = constructor.getGenericExceptionTypes()[1][ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_52 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_40 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_90 $$ arrayType = (GenericArrayType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_26 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_24 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_42 $$ paramType = constructor.getGenericParameterTypes()[5][ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_41 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_18 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_14 $$ paramType = constructor.getGenericParameterTypes()[2][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_18 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ CD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_56 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_36 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_74 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(TypeVariable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_22 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ CD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_53 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_30 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ CD ]
Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0]-->Line_81 $$ assertThat(typeVariable.getName(), equalTo("V"))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_80 $$ typeVariable = (TypeVariable) paramType-->Line_82 $$ assertThat(typeVariable.getBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_53 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_14 $$ paramType = constructor.getGenericParameterTypes()[2][ CD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_43 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_72 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_42 $$ paramType = constructor.getGenericParameterTypes()[5][ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_48 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_26 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_50 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(ParameterizedType.class))[ CD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_10 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ CD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_106 $$ exceptionType = constructor.getGenericExceptionTypes()[1][ CD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_34 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_68 $$ parameterizedType = (ParameterizedType) paramType-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_53 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_43 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_84 $$ paramType = constructor.getGenericParameterTypes()[9]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ CD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_26 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_39 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ CD ]
Line_80 $$ typeVariable = (TypeVariable) paramType-->Line_108 $$ typeVariable = (TypeVariable) exceptionType[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ CD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_50 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(ParameterizedType.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_9 $$ paramType = constructor.getGenericParameterTypes()[1][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_46 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_45 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_84 $$ paramType = constructor.getGenericParameterTypes()[9]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_27 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_20 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ CD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_44 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_42 $$ paramType = constructor.getGenericParameterTypes()[5][ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_72 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ CD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_56 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ CD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_44 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_23 $$ paramType = constructor.getGenericParameterTypes()[3][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_81 $$ assertThat(typeVariable.getName(), equalTo("V"))[ CD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ CD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_82 $$ assertThat(typeVariable.getBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_44 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_74 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(TypeVariable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ CD ]
Line_84 $$ paramType = constructor.getGenericParameterTypes()[9]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_80 $$ typeVariable = (TypeVariable) paramType[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ CD ]
Line_83 $$ GenericArrayType arrayType-->Line_96 $$ assertThat(arrayType.getGenericComponentType(), instanceOf(ParameterizedType.class))[ FD ]
Line_101 $$ paramType = constructor.getGenericParameterTypes()[11]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_3 $$ Class<?> generatedClass = generator.generate(BeanWithComplexConstructor.class)-->Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0][ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_17 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_43 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ CD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_109 $$ assertThat(typeVariable.getName(), equalTo("T"))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_50 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(ParameterizedType.class))[ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_49 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_64 $$ assertThat(typeVariable.getName(), equalTo("S"))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_83 $$ GenericArrayType arrayType[ CD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_6 $$ assertThat(constructor.getGenericParameterTypes().length, equalTo(12))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_37 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_76 $$ assertThat(typeVariable.getName(), equalTo("T"))[ CD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_24 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_50 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(ParameterizedType.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_30 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_42 $$ paramType = constructor.getGenericParameterTypes()[5][ CD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_20 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_39 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0]-->Line_76 $$ assertThat(typeVariable.getName(), equalTo("T"))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_65 $$ assertThat(typeVariable.getBounds()[0], instanceOf(ParameterizedType.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_46 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_52 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ CD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_108 $$ typeVariable = (TypeVariable) exceptionType[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_57 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ CD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_74 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(TypeVariable.class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_52 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_74 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(TypeVariable.class))[ FD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_56 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0]-->Line_77 $$ assertThat(typeVariable.getBounds()[0], equalTo((Type) IOException.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_36 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_49 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ CD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_107 $$ assertThat(exceptionType, instanceOf(TypeVariable.class))[ CD ]
Line_68 $$ parameterizedType = (ParameterizedType) paramType-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_68 $$ parameterizedType = (ParameterizedType) paramType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_57 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_41 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_32 $$ assertThat(wildcard.getLowerBounds()[0], equalTo((Type) String.class))[ CD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_31 $$ assertThat(wildcard.getLowerBounds().length, equalTo(1))[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_10 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_77 $$ assertThat(typeVariable.getBounds()[0], equalTo((Type) IOException.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_36 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_33 $$ paramType = constructor.getGenericParameterTypes()[4][ FD ]
Line_93 $$ paramType = constructor.getGenericParameterTypes()[10]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_40 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ CD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ FD ]
Line_93 $$ paramType = constructor.getGenericParameterTypes()[10]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ CD ]
Line_90 $$ arrayType = (GenericArrayType) paramType-->Line_96 $$ assertThat(arrayType.getGenericComponentType(), instanceOf(ParameterizedType.class))[ FD ]
Line_84 $$ paramType = constructor.getGenericParameterTypes()[9]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_49 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_53 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_14 $$ paramType = constructor.getGenericParameterTypes()[2][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_27 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_5 $$ assertThat(constructor.getTypeParameters().length, equalTo(3))[ CD ]
Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0]-->Line_76 $$ assertThat(typeVariable.getName(), equalTo("T"))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_77 $$ assertThat(typeVariable.getBounds()[0], equalTo((Type) IOException.class))[ CD ]
Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0]-->Line_108 $$ typeVariable = (TypeVariable) exceptionType[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_95 $$ arrayType = (GenericArrayType) paramType[ CD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_104 $$ Type exceptionType = constructor.getGenericExceptionTypes()[0][ CD ]
Line_68 $$ parameterizedType = (ParameterizedType) paramType-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_52 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ CD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_32 $$ assertThat(wildcard.getLowerBounds()[0], equalTo((Type) String.class))[ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_53 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_46 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_73 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ CD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_68 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0]-->Line_109 $$ assertThat(typeVariable.getName(), equalTo("T"))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_43 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_37 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_13 $$ assertThat(parameterizedType.getActualTypeArguments()[0], equalTo((Type) String.class))[ CD ]
Line_84 $$ paramType = constructor.getGenericParameterTypes()[9]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_90 $$ arrayType = (GenericArrayType) paramType-->Line_91 $$ assertThat(arrayType.getGenericComponentType(), equalTo((Type) String.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_42 $$ paramType = constructor.getGenericParameterTypes()[5][ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_49 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_49 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_25 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_85 $$ if (JavaVersion.current().isJava7Compatible()) [ CD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_34 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ CD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_33 $$ paramType = constructor.getGenericParameterTypes()[4][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_33 $$ paramType = constructor.getGenericParameterTypes()[4][ CD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_42 $$ paramType = constructor.getGenericParameterTypes()[5][ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_85 $$ if (JavaVersion.current().isJava7Compatible()) -->Line_87 $$ assertThat(((Class<?>) paramType).getComponentType(), equalTo((Type) String.class))[ CD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_42 $$ paramType = constructor.getGenericParameterTypes()[5][ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_53 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_101 $$ paramType = constructor.getGenericParameterTypes()[11][ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_84 $$ paramType = constructor.getGenericParameterTypes()[9]-->Line_89 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ CD ]
Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0]-->Line_82 $$ assertThat(typeVariable.getBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_14 $$ paramType = constructor.getGenericParameterTypes()[2][ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_27 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_46 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_43 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_40 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_5 $$ assertThat(constructor.getTypeParameters().length, equalTo(3))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_37 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_41 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_3 $$ Class<?> generatedClass = generator.generate(BeanWithComplexConstructor.class)[ CD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_46 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ CD ]
Line_85 $$ if (JavaVersion.current().isJava7Compatible()) -->Line_91 $$ assertThat(arrayType.getGenericComponentType(), equalTo((Type) String.class))[ CD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_27 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_78 $$ paramType = constructor.getGenericParameterTypes()[8]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_60 $$ parameterizedType = (ParameterizedType) paramType-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_82 $$ assertThat(typeVariable.getBounds()[0], equalTo((Type) Object.class))[ CD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_98 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) List.class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ CD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_78 $$ paramType = constructor.getGenericParameterTypes()[8][ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_33 $$ paramType = constructor.getGenericParameterTypes()[4][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_52 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_105 $$ assertThat(exceptionType, equalTo((Type) Exception.class))[ CD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_72 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ FD ]
Line_83 $$ GenericArrayType arrayType-->Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_57 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_52 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_57 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_74 $$ assertThat(wildcard.getUpperBounds()[0], instanceOf(TypeVariable.class))[ CD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0][ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_55 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_45 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_32 $$ assertThat(wildcard.getLowerBounds()[0], equalTo((Type) String.class))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_39 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0]-->Line_80 $$ typeVariable = (TypeVariable) paramType[ FD ]
Line_80 $$ typeVariable = (TypeVariable) paramType-->Line_81 $$ assertThat(typeVariable.getName(), equalTo("V"))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_17 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_58 $$ paramType = constructor.getGenericParameterTypes()[6][ CD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_73 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_11 $$ ParameterizedType parameterizedType = (ParameterizedType) paramType-->Line_16 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_66 $$ paramType = constructor.getGenericParameterTypes()[7]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_104 $$ Type exceptionType = constructor.getGenericExceptionTypes()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_75 $$ typeVariable = (TypeVariable) wildcard.getUpperBounds()[0][ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_10 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ CD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ CD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_15 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_21 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) String.class))[ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_59 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_60 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_41 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_8 $$ assertThat(paramType, equalTo((Type) Callable.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_35 $$ parameterizedType = (ParameterizedType) paramType[ CD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_55 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_102 $$ assertThat(paramType, equalTo((Type) Boolean.TYPE))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_40 $$ assertThat(wildcard.getUpperBounds()[0], equalTo((Type) Object.class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_29 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_60 $$ parameterizedType = (ParameterizedType) paramType[ CD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_35 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_60 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_55 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_29 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_67 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_15 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ CD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_24 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_4 $$ Constructor<?> constructor = generatedClass.getDeclaredConstructors()[0]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_34 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_24 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_83 $$ GenericArrayType arrayType-->Line_95 $$ arrayType = (GenericArrayType) paramType[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_31 $$ assertThat(wildcard.getLowerBounds().length, equalTo(1))[ CD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_23 $$ paramType = constructor.getGenericParameterTypes()[3][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_62 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(TypeVariable.class))[ CD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_69 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_70 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_38 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_60 $$ parameterizedType = (ParameterizedType) paramType[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_16 $$ parameterizedType = (ParameterizedType) paramType-->Line_61 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ FD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_43 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0][ CD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_63 $$ TypeVariable typeVariable = (TypeVariable) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_48 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_71 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_73 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_23 $$ paramType = constructor.getGenericParameterTypes()[3][ FD ]
Line_19 $$ WildcardType wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_97 $$ parameterizedType = (ParameterizedType) arrayType.getGenericComponentType()-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_15 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_39 $$ assertThat(wildcard.getUpperBounds().length, equalTo(1))[ FD ]
Line_25 $$ parameterizedType = (ParameterizedType) paramType-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_35 $$ parameterizedType = (ParameterizedType) paramType-->Line_37 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0]-->Line_100 $$ assertThat(parameterizedType.getActualTypeArguments()[0], instanceOf(WildcardType.class))[ FD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_54 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0][ FD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_14 $$ paramType = constructor.getGenericParameterTypes()[2]-->Line_79 $$ assertThat(paramType, instanceOf(TypeVariable.class))[ FD ]
Line_23 $$ paramType = constructor.getGenericParameterTypes()[3]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ CD ]
Line_7 $$ Type paramType = constructor.getGenericParameterTypes()[0]-->Line_66 $$ paramType = constructor.getGenericParameterTypes()[7][ FD ]
Line_58 $$ paramType = constructor.getGenericParameterTypes()[6]-->Line_84 $$ paramType = constructor.getGenericParameterTypes()[9][ FD ]
Line_47 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_51 $$ parameterizedType = (ParameterizedType) wildcard.getUpperBounds()[0][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_96 $$ assertThat(arrayType.getGenericComponentType(), instanceOf(ParameterizedType.class))[ CD ]
Line_33 $$ paramType = constructor.getGenericParameterTypes()[4]-->Line_86 $$ assertThat(paramType, equalTo((Type) String[].class))[ FD ]
Line_28 $$ wildcard = (WildcardType) parameterizedType.getActualTypeArguments()[0]-->Line_73 $$ assertThat(wildcard.getLowerBounds().length, equalTo(0))[ FD ]
Line_42 $$ paramType = constructor.getGenericParameterTypes()[5]-->Line_94 $$ assertThat(paramType, instanceOf(GenericArrayType.class))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_24 $$ assertThat(paramType, instanceOf(ParameterizedType.class))[ CD ]
Line_44 $$ parameterizedType = (ParameterizedType) paramType-->Line_99 $$ assertThat(parameterizedType.getActualTypeArguments().length, equalTo(1))[ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_65 $$ assertThat(typeVariable.getBounds()[0], instanceOf(ParameterizedType.class))[ CD ]
Line_9 $$ paramType = constructor.getGenericParameterTypes()[1]-->Line_93 $$ paramType = constructor.getGenericParameterTypes()[10][ FD ]
Line_2 $$ public void includesGenericTypeInformationForOverriddenConstructor() throws Exception -->Line_12 $$ assertThat(parameterizedType.getRawType(), equalTo((Type) Callable.class))[ CD ]
Line_90 $$ arrayType = (GenericArrayType) paramType-->Line_95 $$ arrayType = (GenericArrayType) paramType[ FD ]
