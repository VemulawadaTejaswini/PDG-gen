Line_17 $$ final PsiFile containingFile = psiElement != null ? psiElement.getContainingFile() : null-->Line_20 $$ if (containingFile != null) [ FD ]
Line_18 $$ final VirtualFile virtualFile = PsiUtilCore.getVirtualFile(psiElement)-->Line_21 $$ isProblem = myWolfTheProblemSolver.isProblemFile(virtualFile)[ FD ]
Line_16 $$ if (getCurrentScope() != DefaultScopesProvider.getInstance(myProject).getProblemsScope()) -->Line_17 $$ final PsiFile containingFile = psiElement != null ? psiElement.getContainingFile() : null[ CD ]
Line_23 $$ isProblem = myWolfTheProblemSolver.hasProblemFilesBeneath(new Condition<VirtualFile>() -->Line_25 $$ return VfsUtilCore.isAncestor(virtualFile, file, false)[ FD ]
Line_2 $$ public void customizeCellRenderer(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_3 $$ if (value instanceof PackageDependenciesNode) [ CD ]
Line_12 $$ textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.DEPRECATED_ATTRIBUTES).clone()-->Line_15 $$ textAttributes.setForegroundColor(CopyPasteManager.getInstance().isCutElement(psiElement) ? CopyPasteManager.CUT_COLOR : node.getColor())[ FD ]
Line_22 $$ if (virtualFile != null) -->Line_23 $$ isProblem = myWolfTheProblemSolver.hasProblemFilesBeneath(new Condition<VirtualFile>() [ CD ]
Line_10 $$ TextAttributes textAttributes = regularAttributes.toTextAttributes()-->Line_12 $$ textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.DEPRECATED_ATTRIBUTES).clone()[ FD ]
Line_18 $$ final VirtualFile virtualFile = PsiUtilCore.getVirtualFile(psiElement)-->Line_22 $$ if (virtualFile != null) [ FD ]
Line_14 $$ final PsiElement psiElement = node.getPsiElement()-->Line_17 $$ final PsiFile containingFile = psiElement != null ? psiElement.getContainingFile() : null[ FD ]
Line_4 $$ PackageDependenciesNode node = (PackageDependenciesNode) value-->Line_41 $$ decorator.decorate(node, this)[ FD ]
Line_18 $$ final VirtualFile virtualFile = PsiUtilCore.getVirtualFile(psiElement)-->Line_25 $$ return VfsUtilCore.isAncestor(virtualFile, file, false)[ FD ]
Line_21 $$ isProblem = myWolfTheProblemSolver.isProblemFile(virtualFile)-->Line_23 $$ isProblem = myWolfTheProblemSolver.hasProblemFilesBeneath(new Condition<VirtualFile>() [ FD ]
Line_32 $$ if (isProblem) -->Line_33 $$ textAttributes.setEffectColor(JBColor.RED)[ CD ]
Line_46 $$ if (locationString != null && locationString.length() > 0) -->Line_47 $$ append(" (" + locationString + ")", SimpleTextAttributes.GRAY_ATTRIBUTES)[ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_37 $$ append(node.toString(), SimpleTextAttributes.fromTextAttributes(textAttributes))[ CD ]
Line_12 $$ textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.DEPRECATED_ATTRIBUTES).clone()-->Line_37 $$ append(node.toString(), SimpleTextAttributes.fromTextAttributes(textAttributes))[ FD ]
Line_44 $$ if (toString().equals(oldToString)) -->Line_45 $$ final String locationString = node.getComment()[ CD ]
Line_16 $$ if (getCurrentScope() != DefaultScopesProvider.getInstance(myProject).getProblemsScope()) -->Line_20 $$ if (containingFile != null) [ CD ]
Line_16 $$ if (getCurrentScope() != DefaultScopesProvider.getInstance(myProject).getProblemsScope()) -->Line_18 $$ final VirtualFile virtualFile = PsiUtilCore.getVirtualFile(psiElement)[ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_15 $$ textAttributes.setForegroundColor(CopyPasteManager.getInstance().isCutElement(psiElement) ? CopyPasteManager.CUT_COLOR : node.getColor())[ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_16 $$ if (getCurrentScope() != DefaultScopesProvider.getInstance(myProject).getProblemsScope()) [ CD ]
Line_16 $$ if (getCurrentScope() != DefaultScopesProvider.getInstance(myProject).getProblemsScope()) -->Line_19 $$ boolean isProblem[ CD ]
Line_9 $$ final SimpleTextAttributes regularAttributes = SimpleTextAttributes.REGULAR_ATTRIBUTES-->Line_10 $$ TextAttributes textAttributes = regularAttributes.toTextAttributes()[ FD ]
Line_44 $$ if (toString().equals(oldToString)) -->Line_46 $$ if (locationString != null && locationString.length() > 0) [ CD ]
Line_10 $$ TextAttributes textAttributes = regularAttributes.toTextAttributes()-->Line_33 $$ textAttributes.setEffectColor(JBColor.RED)[ FD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_10 $$ TextAttributes textAttributes = regularAttributes.toTextAttributes()[ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_38 $$ String oldToString = toString()[ CD ]
Line_4 $$ PackageDependenciesNode node = (PackageDependenciesNode) value-->Line_15 $$ textAttributes.setForegroundColor(CopyPasteManager.getInstance().isCutElement(psiElement) ? CopyPasteManager.CUT_COLOR : node.getColor())[ FD ]
Line_12 $$ textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.DEPRECATED_ATTRIBUTES).clone()-->Line_33 $$ textAttributes.setEffectColor(JBColor.RED)[ FD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_11 $$ if (node instanceof BasePsiNode && ((BasePsiNode) node).isDeprecated()) [ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_14 $$ final PsiElement psiElement = node.getPsiElement()[ CD ]
Line_10 $$ TextAttributes textAttributes = regularAttributes.toTextAttributes()-->Line_34 $$ textAttributes.setEffectType(EffectType.WAVE_UNDERSCORE)[ FD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_44 $$ if (toString().equals(oldToString)) [ CD ]
Line_14 $$ final PsiElement psiElement = node.getPsiElement()-->Line_18 $$ final VirtualFile virtualFile = PsiUtilCore.getVirtualFile(psiElement)[ FD ]
Line_16 $$ if (getCurrentScope() != DefaultScopesProvider.getInstance(myProject).getProblemsScope()) -->Line_32 $$ if (isProblem) [ CD ]
Line_32 $$ if (isProblem) -->Line_34 $$ textAttributes.setEffectType(EffectType.WAVE_UNDERSCORE)[ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_39 $$ if (!myProject.isDisposed()) [ CD ]
Line_4 $$ PackageDependenciesNode node = (PackageDependenciesNode) value-->Line_14 $$ final PsiElement psiElement = node.getPsiElement()[ FD ]
Line_2 $$ public void customizeCellRenderer(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_3 $$ if (value instanceof PackageDependenciesNode) [ FD ]
Line_10 $$ TextAttributes textAttributes = regularAttributes.toTextAttributes()-->Line_15 $$ textAttributes.setForegroundColor(CopyPasteManager.getInstance().isCutElement(psiElement) ? CopyPasteManager.CUT_COLOR : node.getColor())[ FD ]
Line_19 $$ boolean isProblem-->Line_21 $$ isProblem = myWolfTheProblemSolver.isProblemFile(virtualFile)[ FD ]
Line_20 $$ if (containingFile != null) -->Line_22 $$ if (virtualFile != null) [ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_4 $$ PackageDependenciesNode node = (PackageDependenciesNode) value[ CD ]
Line_19 $$ boolean isProblem-->Line_23 $$ isProblem = myWolfTheProblemSolver.hasProblemFilesBeneath(new Condition<VirtualFile>() [ FD ]
Line_4 $$ PackageDependenciesNode node = (PackageDependenciesNode) value-->Line_45 $$ final String locationString = node.getComment()[ FD ]
Line_4 $$ PackageDependenciesNode node = (PackageDependenciesNode) value-->Line_37 $$ append(node.toString(), SimpleTextAttributes.fromTextAttributes(textAttributes))[ FD ]
Line_12 $$ textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.DEPRECATED_ATTRIBUTES).clone()-->Line_34 $$ textAttributes.setEffectType(EffectType.WAVE_UNDERSCORE)[ FD ]
Line_10 $$ TextAttributes textAttributes = regularAttributes.toTextAttributes()-->Line_37 $$ append(node.toString(), SimpleTextAttributes.fromTextAttributes(textAttributes))[ FD ]
Line_11 $$ if (node instanceof BasePsiNode && ((BasePsiNode) node).isDeprecated()) -->Line_12 $$ textAttributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(CodeInsightColors.DEPRECATED_ATTRIBUTES).clone()[ CD ]
Line_4 $$ PackageDependenciesNode node = (PackageDependenciesNode) value-->Line_6 $$ setIcon(node.getIcon())[ FD ]
Line_20 $$ if (containingFile != null) -->Line_21 $$ isProblem = myWolfTheProblemSolver.isProblemFile(virtualFile)[ CD ]
Line_14 $$ final PsiElement psiElement = node.getPsiElement()-->Line_15 $$ textAttributes.setForegroundColor(CopyPasteManager.getInstance().isCutElement(psiElement) ? CopyPasteManager.CUT_COLOR : node.getColor())[ FD ]
Line_23 $$ isProblem = myWolfTheProblemSolver.hasProblemFilesBeneath(new Condition<VirtualFile>() -->Line_25 $$ return VfsUtilCore.isAncestor(virtualFile, file, false)[ CD ]
Line_3 $$ if (value instanceof PackageDependenciesNode) -->Line_9 $$ final SimpleTextAttributes regularAttributes = SimpleTextAttributes.REGULAR_ATTRIBUTES[ CD ]
