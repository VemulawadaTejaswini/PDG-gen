Line_3 $$ CustomVersionOneStrategy strategy = new CustomVersionOneStrategy()-->Line_5 $$ UUID uuid1 = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))[ FD ]
Line_5 $$ UUID uuid1 = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_13 $$ assertEquals(uuid1.getMostSignificantBits(), uuidX.getMostSignificantBits())[ FD ]
Line_5 $$ UUID uuid1 = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_12 $$ assertFalse(uuid1.equals(uuidX))[ FD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_9 $$ UUID uuidX = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))[ CD ]
Line_5 $$ UUID uuid1 = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_7 $$ assertEquals(1, uuid1.version())[ FD ]
Line_2 $$ public void testUniqueCounter() -->Line_4 $$ long now = System.currentTimeMillis()[ CD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_13 $$ assertEquals(uuid1.getMostSignificantBits(), uuidX.getMostSignificantBits())[ CD ]
Line_3 $$ CustomVersionOneStrategy strategy = new CustomVersionOneStrategy()-->Line_9 $$ UUID uuidX = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))[ FD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_10 $$ assertEquals(2, uuidX.variant())[ CD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_12 $$ assertFalse(uuid1.equals(uuidX))[ CD ]
Line_9 $$ UUID uuidX = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_13 $$ assertEquals(uuid1.getMostSignificantBits(), uuidX.getMostSignificantBits())[ FD ]
Line_2 $$ public void testUniqueCounter() -->Line_6 $$ assertEquals(2, uuid1.variant())[ CD ]
Line_2 $$ public void testUniqueCounter() -->Line_7 $$ assertEquals(1, uuid1.version())[ CD ]
Line_2 $$ public void testUniqueCounter() -->Line_8 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_9 $$ UUID uuidX = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_10 $$ assertEquals(2, uuidX.variant())[ FD ]
Line_4 $$ long now = System.currentTimeMillis()-->Line_9 $$ UUID uuidX = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))[ FD ]
Line_2 $$ public void testUniqueCounter() -->Line_3 $$ CustomVersionOneStrategy strategy = new CustomVersionOneStrategy()[ CD ]
Line_4 $$ long now = System.currentTimeMillis()-->Line_5 $$ UUID uuid1 = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))[ FD ]
Line_5 $$ UUID uuid1 = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_6 $$ assertEquals(2, uuid1.variant())[ FD ]
Line_2 $$ public void testUniqueCounter() -->Line_5 $$ UUID uuid1 = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))[ CD ]
Line_9 $$ UUID uuidX = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_12 $$ assertFalse(uuid1.equals(uuidX))[ FD ]
Line_9 $$ UUID uuidX = new UUID(strategy.getMostSignificantBits(), CustomVersionOneStrategy.generateLeastSignificantBits(now))-->Line_11 $$ assertEquals(1, uuidX.version())[ FD ]
Line_8 $$ for (int i = 0; i < 100; i++) -->Line_11 $$ assertEquals(1, uuidX.version())[ CD ]
