Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_10 $$ newG.drawImage(img, 2 * dx1, 2 * dy1, 2 * dx2, 2 * dy2, sx1 * 2, sy1 * 2, sx2 * 2, sy2 * 2, observer)[ CD ]
Line_4 $$ final Graphics2D newG = (Graphics2D) g.create(0, 0, image.getWidth(observer), image.getHeight(observer))-->Line_11 $$ newG.scale(1, 1)[ FD ]
Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_5 $$ newG.scale(0.5, 0.5)[ CD ]
Line_4 $$ final Graphics2D newG = (Graphics2D) g.create(0, 0, image.getWidth(observer), image.getHeight(observer))-->Line_10 $$ newG.drawImage(img, 2 * dx1, 2 * dy1, 2 * dx2, 2 * dy2, sx1 * 2, sy1 * 2, sx2 * 2, sy2 * 2, observer)[ FD ]
Line_13 $$ if (RetinaImage.isAppleHiDPIScaledImage(image)) -->Line_14 $$ g.drawImage(image, dx1, dy1, dx2, dy2, sx1 * 2, sy1 * 2, sx2 * 2, sy2 * 2, observer)[ CD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_10 $$ newG.drawImage(img, 2 * dx1, 2 * dy1, 2 * dx2, 2 * dy2, sx1 * 2, sy1 * 2, sx2 * 2, sy2 * 2, observer)[ FD ]
Line_13 $$ if (RetinaImage.isAppleHiDPIScaledImage(image)) -->Line_16 $$ g.drawImage(image, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer)[ CD ]
Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_4 $$ final Graphics2D newG = (Graphics2D) g.create(0, 0, image.getWidth(observer), image.getHeight(observer))[ CD ]
Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_13 $$ if (RetinaImage.isAppleHiDPIScaledImage(image)) [ CD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_4 $$ final Graphics2D newG = (Graphics2D) g.create(0, 0, image.getWidth(observer), image.getHeight(observer))[ FD ]
Line_6 $$ Image img = ((JBHiDPIScaledImage) image).getDelegate()-->Line_10 $$ newG.drawImage(img, 2 * dx1, 2 * dy1, 2 * dx2, 2 * dy2, sx1 * 2, sy1 * 2, sx2 * 2, sy2 * 2, observer)[ FD ]
Line_4 $$ final Graphics2D newG = (Graphics2D) g.create(0, 0, image.getWidth(observer), image.getHeight(observer))-->Line_5 $$ newG.scale(0.5, 0.5)[ FD ]
Line_8 $$ img = image-->Line_10 $$ newG.drawImage(img, 2 * dx1, 2 * dy1, 2 * dx2, 2 * dy2, sx1 * 2, sy1 * 2, sx2 * 2, sy2 * 2, observer)[ FD ]
Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_6 $$ Image img = ((JBHiDPIScaledImage) image).getDelegate()[ CD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_16 $$ g.drawImage(image, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, observer)[ FD ]
Line_7 $$ if (img == null) -->Line_8 $$ img = image[ CD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_3 $$ if (image instanceof JBHiDPIScaledImage) [ FD ]
Line_6 $$ Image img = ((JBHiDPIScaledImage) image).getDelegate()-->Line_8 $$ img = image[ FD ]
Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_12 $$ newG.dispose()[ CD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_14 $$ g.drawImage(image, dx1, dy1, dx2, dy2, sx1 * 2, sy1 * 2, sx2 * 2, sy2 * 2, observer)[ FD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_8 $$ img = image[ FD ]
Line_4 $$ final Graphics2D newG = (Graphics2D) g.create(0, 0, image.getWidth(observer), image.getHeight(observer))-->Line_12 $$ newG.dispose()[ FD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_3 $$ if (image instanceof JBHiDPIScaledImage) [ CD ]
Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_7 $$ if (img == null) [ CD ]
Line_3 $$ if (image instanceof JBHiDPIScaledImage) -->Line_11 $$ newG.scale(1, 1)[ CD ]
Line_2 $$ public static void drawImage(Graphics g, Image image, int dx1, int dy1, int dx2, int dy2, int sx1, int sy1, int sx2, int sy2, ImageObserver observer) -->Line_13 $$ if (RetinaImage.isAppleHiDPIScaledImage(image)) [ FD ]
Line_6 $$ Image img = ((JBHiDPIScaledImage) image).getDelegate()-->Line_7 $$ if (img == null) [ FD ]
