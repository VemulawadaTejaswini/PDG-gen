Line_2 $$ public void testLayout2() -->Line_16 $$ applyConversionResults(panel, converter)[ CD ]
Line_14 $$ final GridConstraints button2Constraints = new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0)-->Line_15 $$ converter.addComponent(button2, button2Constraints)[ FD ]
Line_2 $$ public void testLayout2() -->Line_4 $$ final JPanel panel = new JPanel(layoutManager)[ CD ]
Line_8 $$ final JButton button2 = new JButton()-->Line_24 $$ assertEquals(50, button2.getHeight())[ FD ]
Line_8 $$ final JButton button2 = new JButton()-->Line_10 $$ button2.setPreferredSize(new Dimension(50, 10))[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_20 $$ assertEquals(50, panel.getMinimumSize().width)[ FD ]
Line_2 $$ public void testLayout2() -->Line_21 $$ panel.setSize(new Dimension(500, 100))[ CD ]
Line_2 $$ public void testLayout2() -->Line_12 $$ final GridConstraints button1Constraints = new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK, null, null, null, 0)[ CD ]
Line_2 $$ public void testLayout2() -->Line_7 $$ button1.setPreferredSize(new Dimension(50, 10))[ CD ]
Line_2 $$ public void testLayout2() -->Line_24 $$ assertEquals(50, button2.getHeight())[ CD ]
Line_11 $$ GridBagConverter converter = new GridBagConverter()-->Line_16 $$ applyConversionResults(panel, converter)[ FD ]
Line_2 $$ public void testLayout2() -->Line_23 $$ assertEquals(50, button1.getHeight())[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_21 $$ panel.setSize(new Dimension(500, 100))[ FD ]
Line_5 $$ final JButton button1 = new JButton()-->Line_13 $$ converter.addComponent(button1, button1Constraints)[ FD ]
Line_2 $$ public void testLayout2() -->Line_14 $$ final GridConstraints button2Constraints = new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0)[ CD ]
Line_2 $$ public void testLayout2() -->Line_11 $$ GridBagConverter converter = new GridBagConverter()[ CD ]
Line_8 $$ final JButton button2 = new JButton()-->Line_15 $$ converter.addComponent(button2, button2Constraints)[ FD ]
Line_2 $$ public void testLayout2() -->Line_6 $$ button1.setMinimumSize(new Dimension(9, 7))[ CD ]
Line_2 $$ public void testLayout2() -->Line_22 $$ panel.doLayout()[ CD ]
Line_5 $$ final JButton button1 = new JButton()-->Line_6 $$ button1.setMinimumSize(new Dimension(9, 7))[ FD ]
Line_11 $$ GridBagConverter converter = new GridBagConverter()-->Line_15 $$ converter.addComponent(button2, button2Constraints)[ FD ]
Line_2 $$ public void testLayout2() -->Line_9 $$ button2.setMinimumSize(new Dimension(15, 6))[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_18 $$ assertEquals(50, panel.getPreferredSize().width)[ FD ]
Line_2 $$ public void testLayout2() -->Line_20 $$ assertEquals(50, panel.getMinimumSize().width)[ CD ]
Line_2 $$ public void testLayout2() -->Line_13 $$ converter.addComponent(button1, button1Constraints)[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_22 $$ panel.doLayout()[ FD ]
Line_2 $$ public void testLayout2() -->Line_8 $$ final JButton button2 = new JButton()[ CD ]
Line_2 $$ public void testLayout2() -->Line_15 $$ converter.addComponent(button2, button2Constraints)[ CD ]
Line_5 $$ final JButton button1 = new JButton()-->Line_23 $$ assertEquals(50, button1.getHeight())[ FD ]
Line_2 $$ public void testLayout2() -->Line_5 $$ final JButton button1 = new JButton()[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_16 $$ applyConversionResults(panel, converter)[ FD ]
Line_2 $$ public void testLayout2() -->Line_10 $$ button2.setPreferredSize(new Dimension(50, 10))[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_17 $$ assertEquals(20, panel.getPreferredSize().height)[ FD ]
Line_2 $$ public void testLayout2() -->Line_19 $$ assertEquals(17, panel.getMinimumSize().height)[ CD ]
Line_2 $$ public void testLayout2() -->Line_18 $$ assertEquals(50, panel.getPreferredSize().width)[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_19 $$ assertEquals(17, panel.getMinimumSize().height)[ FD ]
Line_12 $$ final GridConstraints button1Constraints = new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK, null, null, null, 0)-->Line_13 $$ converter.addComponent(button1, button1Constraints)[ FD ]
Line_2 $$ public void testLayout2() -->Line_17 $$ assertEquals(20, panel.getPreferredSize().height)[ CD ]
Line_2 $$ public void testLayout2() -->Line_3 $$ final GridBagLayout layoutManager = new GridBagLayout()[ CD ]
Line_11 $$ GridBagConverter converter = new GridBagConverter()-->Line_13 $$ converter.addComponent(button1, button1Constraints)[ FD ]
Line_5 $$ final JButton button1 = new JButton()-->Line_7 $$ button1.setPreferredSize(new Dimension(50, 10))[ FD ]
Line_8 $$ final JButton button2 = new JButton()-->Line_9 $$ button2.setMinimumSize(new Dimension(15, 6))[ FD ]
