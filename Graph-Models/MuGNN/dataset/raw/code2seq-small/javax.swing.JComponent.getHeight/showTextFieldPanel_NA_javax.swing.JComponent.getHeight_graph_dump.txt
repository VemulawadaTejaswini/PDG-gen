Line_2 $$ protected void showTextFieldPanel() -->Line_6 $$ final int paneHeight = layeredPane.getHeight()[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() [ CD ]
Line_17 $$ if (isDescendingFromTemporarilyFocusableToolWindow(focusManager.getFocusOwner())) -->Line_19 $$ return false[ CD ]
Line_42 $$ Disposer.register(myTextPopup, new Disposable() -->Line_44 $$ cancelListUpdater()[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_3 $$ final JLayeredPane layeredPane = getLayeredPane()[ CD ]
Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() -->Line_21 $$ myTextPopup.cancel(event)[ FD ]
Line_17 $$ if (isDescendingFromTemporarilyFocusableToolWindow(focusManager.getFocusOwner())) -->Line_21 $$ myTextPopup.cancel(event)[ CD ]
Line_39 $$ if (myProject != null && !myProject.isDefault()) -->Line_40 $$ DaemonCodeAnalyzer.getInstance(myProject).disableUpdateByTimer(myTextPopup)[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_42 $$ Disposer.register(myTextPopup, new Disposable() [ CD ]
Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() -->Line_13 $$ if (myTextPopup == null || !AbstractPopup.isCloseRequest(event) || !myTextPopup.isCancelKeyEnabled()) [ CD ]
Line_16 $$ IdeFocusManager focusManager = IdeFocusManager.getInstance(myProject)-->Line_17 $$ if (isDescendingFromTemporarilyFocusableToolWindow(focusManager.getFocusOwner())) [ FD ]
Line_48 $$ if (myTextPopup instanceof AbstractPopup) -->Line_50 $$ if (window instanceof JDialog) [ CD ]
Line_3 $$ final JLayeredPane layeredPane = getLayeredPane()-->Line_47 $$ myTextPopup.show(layeredPane)[ FD ]
Line_9 $$ ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(myTextFieldPanel, myTextField)-->Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() [ FD ]
Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() -->Line_13 $$ if (myTextPopup == null || !AbstractPopup.isCloseRequest(event) || !myTextPopup.isCancelKeyEnabled()) [ FD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_33 $$ SwingUtilities.convertPointToScreen(point, layeredPane)[ CD ]
Line_13 $$ if (myTextPopup == null || !AbstractPopup.isCloseRequest(event) || !myTextPopup.isCancelKeyEnabled()) -->Line_14 $$ return false[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_9 $$ ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(myTextFieldPanel, myTextField)[ CD ]
Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() -->Line_17 $$ if (isDescendingFromTemporarilyFocusableToolWindow(focusManager.getFocusOwner())) [ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_35 $$ myTextPopup = builder.createPopup()[ CD ]
Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() -->Line_16 $$ IdeFocusManager focusManager = IdeFocusManager.getInstance(myProject)[ CD ]
Line_3 $$ final JLayeredPane layeredPane = getLayeredPane()-->Line_33 $$ SwingUtilities.convertPointToScreen(point, layeredPane)[ FD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_8 $$ VISIBLE_LIST_SIZE_LIMIT = Math.max(10, (paneHeight - (y + preferredTextFieldPanelSize.height)) / (preferredTextFieldPanelSize.height / 2) - 1)[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_10 $$ builder.setLocateWithinScreenBounds(false)[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_48 $$ if (myTextPopup instanceof AbstractPopup) [ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_47 $$ myTextPopup.show(layeredPane)[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_38 $$ MnemonicHelper.init(myTextFieldPanel)[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_37 $$ myTextPopup.setLocation(bounds.getLocation())[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_5 $$ final int x = (layeredPane.getWidth() - preferredTextFieldPanelSize.width) / 2[ CD ]
Line_3 $$ final JLayeredPane layeredPane = getLayeredPane()-->Line_5 $$ final int x = (layeredPane.getWidth() - preferredTextFieldPanelSize.width) / 2[ FD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_39 $$ if (myProject != null && !myProject.isDefault()) [ CD ]
Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() -->Line_28 $$ close(false)[ CD ]
Line_48 $$ if (myTextPopup instanceof AbstractPopup) -->Line_49 $$ Window window = ((AbstractPopup) myTextPopup).getPopupWindow()[ CD ]
Line_17 $$ if (isDescendingFromTemporarilyFocusableToolWindow(focusManager.getFocusOwner())) -->Line_18 $$ focusManager.requestFocus(myTextField, true)[ CD ]
Line_11 $$ builder.setKeyEventHandler(new BooleanFunction<KeyEvent>() -->Line_29 $$ return Boolean.TRUE[ CD ]
Line_9 $$ ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(myTextFieldPanel, myTextField)-->Line_10 $$ builder.setLocateWithinScreenBounds(false)[ FD ]
Line_17 $$ if (isDescendingFromTemporarilyFocusableToolWindow(focusManager.getFocusOwner())) -->Line_22 $$ return true[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_36 $$ myTextPopup.setSize(bounds.getSize())[ CD ]
Line_50 $$ if (window instanceof JDialog) -->Line_51 $$ ((JDialog) window).getRootPane().putClientProperty(WindowAction.NO_WINDOW_ACTIONS, Boolean.TRUE)[ CD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_4 $$ final Dimension preferredTextFieldPanelSize = myTextFieldPanel.getPreferredSize()[ CD ]
Line_3 $$ final JLayeredPane layeredPane = getLayeredPane()-->Line_6 $$ final int paneHeight = layeredPane.getHeight()[ FD ]
Line_9 $$ ComponentPopupBuilder builder = JBPopupFactory.getInstance().createComponentPopupBuilder(myTextFieldPanel, myTextField)-->Line_35 $$ myTextPopup = builder.createPopup()[ FD ]
Line_2 $$ protected void showTextFieldPanel() -->Line_7 $$ final int y = paneHeight / 3 - preferredTextFieldPanelSize.height / 2[ CD ]
Line_16 $$ IdeFocusManager focusManager = IdeFocusManager.getInstance(myProject)-->Line_18 $$ focusManager.requestFocus(myTextField, true)[ FD ]
