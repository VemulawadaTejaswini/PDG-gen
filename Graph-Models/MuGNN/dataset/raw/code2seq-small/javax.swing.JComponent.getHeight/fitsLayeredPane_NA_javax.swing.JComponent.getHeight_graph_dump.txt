Line_9 $$ if (pos == Balloon.Position.above || pos == Balloon.Position.below) -->Line_11 $$ return heightFit && size.width + pointer < paneSize.width[ CD ]
Line_17 $$ final Rectangle lpRect = new Rectangle(pane.getLocationOnScreen().x, pane.getLocationOnScreen().y, pane.getWidth(), pane.getHeight())-->Line_19 $$ return lpRect.contains(componentRect)[ FD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_17 $$ final Rectangle lpRect = new Rectangle(pane.getLocationOnScreen().x, pane.getLocationOnScreen().y, pane.getWidth(), pane.getHeight())[ FD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_6 $$ Point target = desiredLocation.getPointOn(pane).getPoint()[ CD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_6 $$ Point target = desiredLocation.getPointOn(pane).getPoint()[ FD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_8 $$ int pointer = BalloonImpl.getPointerLength(pos, false) + BalloonImpl.getNormalInset()[ CD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_3 $$ if (hintHint.isAwtTooltip()) [ FD ]
Line_9 $$ if (pos == Balloon.Position.above || pos == Balloon.Position.below) -->Line_10 $$ boolean heightFit = target.y - size.height - pointer > 0 || target.y + size.height + pointer < paneSize.height[ CD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_18 $$ Rectangle componentRect = new Rectangle(desiredLocation.getScreenPoint().x, desiredLocation.getScreenPoint().y, component.getPreferredSize().width, component.getPreferredSize().height)[ FD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_3 $$ if (hintHint.isAwtTooltip()) [ CD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_17 $$ final Rectangle lpRect = new Rectangle(pane.getLocationOnScreen().x, pane.getLocationOnScreen().y, pane.getWidth(), pane.getHeight())[ CD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_5 $$ Dimension paneSize = pane.getSize()[ CD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_7 $$ Balloon.Position pos = hintHint.getPreferredPosition()[ CD ]
Line_9 $$ if (pos == Balloon.Position.above || pos == Balloon.Position.below) -->Line_14 $$ return widthFit && size.height + pointer < paneSize.height[ CD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_18 $$ Rectangle componentRect = new Rectangle(desiredLocation.getScreenPoint().x, desiredLocation.getScreenPoint().y, component.getPreferredSize().width, component.getPreferredSize().height)[ CD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_9 $$ if (pos == Balloon.Position.above || pos == Balloon.Position.below) [ CD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_19 $$ return lpRect.contains(componentRect)[ CD ]
Line_3 $$ if (hintHint.isAwtTooltip()) -->Line_4 $$ Dimension size = component.getPreferredSize()[ CD ]
Line_9 $$ if (pos == Balloon.Position.above || pos == Balloon.Position.below) -->Line_13 $$ boolean widthFit = target.x - size.width - pointer > 0 || target.x + size.width + pointer < paneSize.width[ CD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_4 $$ Dimension size = component.getPreferredSize()[ FD ]
Line_7 $$ Balloon.Position pos = hintHint.getPreferredPosition()-->Line_8 $$ int pointer = BalloonImpl.getPointerLength(pos, false) + BalloonImpl.getNormalInset()[ FD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_7 $$ Balloon.Position pos = hintHint.getPreferredPosition()[ FD ]
Line_2 $$ private static boolean fitsLayeredPane(JLayeredPane pane, JComponent component, RelativePoint desiredLocation, HintHint hintHint) -->Line_5 $$ Dimension paneSize = pane.getSize()[ FD ]
Line_18 $$ Rectangle componentRect = new Rectangle(desiredLocation.getScreenPoint().x, desiredLocation.getScreenPoint().y, component.getPreferredSize().width, component.getPreferredSize().height)-->Line_19 $$ return lpRect.contains(componentRect)[ FD ]
