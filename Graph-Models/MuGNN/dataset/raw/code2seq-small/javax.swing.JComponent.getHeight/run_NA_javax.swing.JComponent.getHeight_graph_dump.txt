Line_9 $$ if (component != null && !isInTree(component)) -->Line_11 $$ return[ CD ]
Line_3 $$ final AnActionEvent event = new AnActionEvent(new MouseEvent(ActionMenuItem.this, MouseEvent.MOUSE_PRESSED, 0, e.getModifiers(), getWidth() / 2, getHeight() / 2, 1, false), myContext, myPlace, myPresentation, ActionManager.getInstance(), e.getModifiers())-->Line_8 $$ Component component = PlatformDataKeys.CONTEXT_COMPONENT.getData(event.getDataContext())[ FD ]
Line_4 $$ final AnAction action = myAction.getAction()-->Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) [ FD ]
Line_2 $$ public void run() -->Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) [ CD ]
Line_6 $$ ActionManagerEx actionManager = ActionManagerEx.getInstanceEx()-->Line_23 $$ actionManager.queueActionPerformedEvent(action, myContext, event)[ FD ]
Line_4 $$ final AnAction action = myAction.getAction()-->Line_7 $$ actionManager.fireBeforeActionPerformed(action, myContext, event)[ FD ]
Line_4 $$ final AnAction action = myAction.getAction()-->Line_22 $$ ActionUtil.performActionDumbAware(action, event)[ FD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_6 $$ ActionManagerEx actionManager = ActionManagerEx.getInstanceEx()[ CD ]
Line_13 $$ SimpleTimer.getInstance().setUp(new Runnable() -->Line_15 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_23 $$ actionManager.queueActionPerformedEvent(action, myContext, event)[ CD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_22 $$ ActionUtil.performActionDumbAware(action, event)[ CD ]
Line_2 $$ public void run() -->Line_4 $$ final AnAction action = myAction.getAction()[ CD ]
Line_6 $$ ActionManagerEx actionManager = ActionManagerEx.getInstanceEx()-->Line_7 $$ actionManager.fireBeforeActionPerformed(action, myContext, event)[ FD ]
Line_3 $$ final AnActionEvent event = new AnActionEvent(new MouseEvent(ActionMenuItem.this, MouseEvent.MOUSE_PRESSED, 0, e.getModifiers(), getWidth() / 2, getHeight() / 2, 1, false), myContext, myPlace, myPresentation, ActionManager.getInstance(), e.getModifiers())-->Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) [ FD ]
Line_3 $$ final AnActionEvent event = new AnActionEvent(new MouseEvent(ActionMenuItem.this, MouseEvent.MOUSE_PRESSED, 0, e.getModifiers(), getWidth() / 2, getHeight() / 2, 1, false), myContext, myPlace, myPresentation, ActionManager.getInstance(), e.getModifiers())-->Line_23 $$ actionManager.queueActionPerformedEvent(action, myContext, event)[ FD ]
Line_2 $$ public void run() -->Line_3 $$ final AnActionEvent event = new AnActionEvent(new MouseEvent(ActionMenuItem.this, MouseEvent.MOUSE_PRESSED, 0, e.getModifiers(), getWidth() / 2, getHeight() / 2, 1, false), myContext, myPlace, myPresentation, ActionManager.getInstance(), e.getModifiers())[ CD ]
Line_8 $$ Component component = PlatformDataKeys.CONTEXT_COMPONENT.getData(event.getDataContext())-->Line_9 $$ if (component != null && !isInTree(component)) [ FD ]
Line_3 $$ final AnActionEvent event = new AnActionEvent(new MouseEvent(ActionMenuItem.this, MouseEvent.MOUSE_PRESSED, 0, e.getModifiers(), getWidth() / 2, getHeight() / 2, 1, false), myContext, myPlace, myPresentation, ActionManager.getInstance(), e.getModifiers())-->Line_22 $$ ActionUtil.performActionDumbAware(action, event)[ FD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_13 $$ SimpleTimer.getInstance().setUp(new Runnable() [ CD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_8 $$ Component component = PlatformDataKeys.CONTEXT_COMPONENT.getData(event.getDataContext())[ CD ]
Line_3 $$ final AnActionEvent event = new AnActionEvent(new MouseEvent(ActionMenuItem.this, MouseEvent.MOUSE_PRESSED, 0, e.getModifiers(), getWidth() / 2, getHeight() / 2, 1, false), myContext, myPlace, myPresentation, ActionManager.getInstance(), e.getModifiers())-->Line_7 $$ actionManager.fireBeforeActionPerformed(action, myContext, event)[ FD ]
Line_9 $$ if (component != null && !isInTree(component)) -->Line_10 $$ typeAhead.setDone()[ CD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_7 $$ actionManager.fireBeforeActionPerformed(action, myContext, event)[ CD ]
Line_15 $$ SwingUtilities.invokeLater(new Runnable() -->Line_17 $$ fm.doWhenFocusSettlesDown(typeAhead.createSetDoneRunnable())[ CD ]
Line_4 $$ final AnAction action = myAction.getAction()-->Line_23 $$ actionManager.queueActionPerformedEvent(action, myContext, event)[ FD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_25 $$ typeAhead.setDone()[ CD ]
Line_5 $$ if (ActionUtil.lastUpdateAndCheckDumb(action, event, false)) -->Line_9 $$ if (component != null && !isInTree(component)) [ CD ]
