Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_31 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_7 $$ panel.setSize(90, 200)[ FD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_23 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_2 $$ public void test1() -->Line_7 $$ panel.setSize(90, 200)[ CD ]
Line_2 $$ public void test1() -->Line_16 $$ layoutManager.invalidateLayout(panel)[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_19 $$ panel.setSize(panel.getPreferredSize())[ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_26 $$ assertEquals(new Dimension(100, 20), panel.getPreferredSize())[ CD ]
Line_2 $$ public void test1() -->Line_34 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_24 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_27 $$ panel.setSize(panel.getPreferredSize())[ CD ]
Line_2 $$ public void test1() -->Line_10 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_2 $$ public void test1() -->Line_13 $$ final JButton button = new JButton()[ CD ]
Line_2 $$ public void test1() -->Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)[ CD ]
Line_2 $$ public void test1() -->Line_15 $$ panel.add(button, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ CD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_28 $$ panel.doLayout()[ CD ]
Line_2 $$ public void test1() -->Line_35 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_20 $$ panel.doLayout()[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_20 $$ panel.doLayout()[ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_19 $$ panel.setSize(panel.getPreferredSize())[ CD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_34 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_2 $$ public void test1() -->Line_8 $$ panel.doLayout()[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_8 $$ panel.doLayout()[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_28 $$ panel.doLayout()[ FD ]
Line_13 $$ final JButton button = new JButton()-->Line_15 $$ panel.add(button, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_10 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_2 $$ public void test1() -->Line_9 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_32 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_22 $$ assertEquals(29, panel.getHeight())[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_16 $$ layoutManager.invalidateLayout(panel)[ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_29 $$ assertEquals(100, button.getWidth())[ CD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_31 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_2 $$ public void test1() -->Line_17 $$ if (SystemInfo.isMac) [ CD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_12 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_2 $$ public void test1() -->Line_12 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_32 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_16 $$ layoutManager.invalidateLayout(panel)[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_30 $$ assertEquals(20, panel.getHeight())[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_27 $$ panel.setSize(panel.getPreferredSize())[ FD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_11 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_30 $$ assertEquals(20, panel.getHeight())[ CD ]
Line_2 $$ public void test1() -->Line_4 $$ final JPanel panel = new JPanel(layoutManager)[ CD ]
Line_13 $$ final JButton button = new JButton()-->Line_14 $$ button.setPreferredSize(new Dimension(100, 20))[ FD ]
Line_2 $$ public void test1() -->Line_11 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_2 $$ public void test1() -->Line_14 $$ button.setPreferredSize(new Dimension(100, 20))[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_15 $$ panel.add(button, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_35 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_23 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_2 $$ public void test1() -->Line_6 $$ assertEquals(0, panel.getPreferredSize().height)[ CD ]
Line_13 $$ final JButton button = new JButton()-->Line_29 $$ assertEquals(100, button.getWidth())[ FD ]
Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)-->Line_9 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_26 $$ assertEquals(new Dimension(100, 20), panel.getPreferredSize())[ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_24 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_13 $$ final JButton button = new JButton()-->Line_21 $$ assertEquals(100, button.getWidth())[ FD ]
Line_2 $$ public void test1() -->Line_5 $$ assertEquals(0, panel.getPreferredSize().width)[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_22 $$ assertEquals(29, panel.getHeight())[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_6 $$ assertEquals(0, panel.getPreferredSize().height)[ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_21 $$ assertEquals(100, button.getWidth())[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_18 $$ assertEquals(new Dimension(100, 29), panel.getPreferredSize())[ FD ]
Line_17 $$ if (SystemInfo.isMac) -->Line_18 $$ assertEquals(new Dimension(100, 29), panel.getPreferredSize())[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_5 $$ assertEquals(0, panel.getPreferredSize().width)[ FD ]
