Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_50 $$ g.drawOval(0, JBUI.scale(1), w - 1, h - 1)[ FD ]
Line_23 $$ if (!UIUtil.isUnderDarcula() && selected) -->Line_29 $$ if (focus) [ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_45 $$ g.setPaint(Gray._40.withAlpha(200))[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_63 $$ g.translate(-x, -y)[ CD ]
Line_42 $$ if (UIUtil.isUnderDarcula()) -->Line_44 $$ g.drawOval(0, JBUI.scale(1) + 1, w - 1, h - 1)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_55 $$ final boolean enabled = c.isEnabled()[ FD ]
Line_42 $$ if (UIUtil.isUnderDarcula()) -->Line_46 $$ g.drawOval(0, JBUI.scale(1), w - 1, h - 1)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_30 $$ g.fillOval(0, JBUI.scale(1), w, h)[ FD ]
Line_54 $$ if (selected) -->Line_57 $$ final int yOff = 1 + JBUI.scale(1)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_21 $$ g.setPaint(ijGradient)[ FD ]
Line_12 $$ final int h = iconRect.height - rad-->Line_39 $$ DarculaUIUtil.paintFocusOval(g, 0, JBUI.scale(1), w, h)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_5 $$ viewRect.y += i.top[ CD ]
Line_23 $$ if (!UIUtil.isUnderDarcula() && selected) -->Line_26 $$ g.fillOval(0, 1, w, h)[ CD ]
Line_23 $$ if (!UIUtil.isUnderDarcula() && selected) -->Line_25 $$ g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE)[ CD ]
Line_49 $$ if (!selected) -->Line_50 $$ g.drawOval(0, JBUI.scale(1), w - 1, h - 1)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_8 $$ int rad = JBUI.scale(5)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_10 $$ final int y = iconRect.y + (rad - (rad % 2 == 1 ? 1 : 0)) / 2[ CD ]
Line_42 $$ if (UIUtil.isUnderDarcula()) -->Line_43 $$ g.setPaint(UIUtil.getGradientPaint(w / 2, 1, Gray._160.withAlpha(90), w / 2, h, Gray._100.withAlpha(90)))[ CD ]
Line_9 $$ final int x = iconRect.x + (rad - (rad % 2 == 1 ? 1 : 0)) / 2-->Line_13 $$ g.translate(x, y)[ FD ]
Line_18 $$ if (UIUtil.isUnderDarcula() || !selected) -->Line_19 $$ g.setPaint(UIUtil.getGradientPaint(0, 0, ColorUtil.shift(c.getBackground(), 1.5), 0, c.getHeight(), ColorUtil.shift(c.getBackground(), 1.2)))[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_39 $$ DarculaUIUtil.paintFocusOval(g, 0, JBUI.scale(1), w, h)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_60 $$ g.fillOval(w / 2 - rad / 2, h / 2 - rad / 2 - 1 + yOff, rad, rad)[ FD ]
Line_24 $$ final GraphicsConfig fillOvalConf = new GraphicsConfig(g)-->Line_27 $$ fillOvalConf.restore()[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_58 $$ g.fillOval(w / 2 - rad / 2, h / 2 - rad / 2 + yOff, rad, rad)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_43 $$ g.setPaint(UIUtil.getGradientPaint(w / 2, 1, Gray._160.withAlpha(90), w / 2, h, Gray._100.withAlpha(90)))[ FD ]
Line_11 $$ final int w = iconRect.width - rad-->Line_30 $$ g.fillOval(0, JBUI.scale(1), w, h)[ FD ]
Line_23 $$ if (!UIUtil.isUnderDarcula() && selected) -->Line_27 $$ fillOvalConf.restore()[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_15 $$ final GraphicsConfig config = GraphicsUtil.setupAAPainting(g)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_25 $$ g.setRenderingHint(RenderingHints.KEY_STROKE_CONTROL, RenderingHints.VALUE_STROKE_PURE)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_48 $$ g.setPaint(selected ? ijGradient : c.isEnabled() ? Gray._30 : Gray._130)[ FD ]
Line_10 $$ final int y = iconRect.y + (rad - (rad % 2 == 1 ? 1 : 0)) / 2-->Line_13 $$ g.translate(x, y)[ FD ]
Line_42 $$ if (UIUtil.isUnderDarcula()) -->Line_48 $$ g.setPaint(selected ? ijGradient : c.isEnabled() ? Gray._30 : Gray._130)[ CD ]
Line_42 $$ if (UIUtil.isUnderDarcula()) -->Line_45 $$ g.setPaint(Gray._40.withAlpha(200))[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_23 $$ if (!UIUtil.isUnderDarcula() && selected) [ CD ]
Line_17 $$ final boolean selected = ((AbstractButton) c).isSelected()-->Line_18 $$ if (UIUtil.isUnderDarcula() || !selected) [ FD ]
Line_10 $$ final int y = iconRect.y + (rad - (rad % 2 == 1 ? 1 : 0)) / 2-->Line_63 $$ g.translate(-x, -y)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_15 $$ final GraphicsConfig config = GraphicsUtil.setupAAPainting(g)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_46 $$ g.drawOval(0, JBUI.scale(1), w - 1, h - 1)[ FD ]
Line_54 $$ if (selected) -->Line_56 $$ g.setColor(UIManager.getColor(enabled ? "RadioButton.darcula.selectionEnabledShadowColor" : "RadioButton.darcula.selectionDisabledShadowColor"))[ CD ]
Line_36 $$ if (UIUtil.isRetina() || JBUI.isHiDPI()) -->Line_37 $$ DarculaUIUtil.paintFocusOval(g, JBUI.scale(1), JBUI.scale(1) + 1, w - JBUI.scale(2), h - JBUI.scale(2))[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_63 $$ g.translate(-x, -y)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_11 $$ final int w = iconRect.width - rad[ CD ]
Line_29 $$ if (focus) -->Line_30 $$ g.fillOval(0, JBUI.scale(1), w, h)[ CD ]
Line_12 $$ final int h = iconRect.height - rad-->Line_43 $$ g.setPaint(UIUtil.getGradientPaint(w / 2, 1, Gray._160.withAlpha(90), w / 2, h, Gray._100.withAlpha(90)))[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_17 $$ final boolean selected = ((AbstractButton) c).isSelected()[ CD ]
Line_17 $$ final boolean selected = ((AbstractButton) c).isSelected()-->Line_49 $$ if (!selected) [ FD ]
Line_8 $$ int rad = JBUI.scale(5)-->Line_58 $$ g.fillOval(w / 2 - rad / 2, h / 2 - rad / 2 + yOff, rad, rad)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_3 $$ Insets i = c.getInsets()[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_37 $$ DarculaUIUtil.paintFocusOval(g, JBUI.scale(1), JBUI.scale(1) + 1, w - JBUI.scale(2), h - JBUI.scale(2))[ FD ]
Line_35 $$ if (focus) -->Line_36 $$ if (UIUtil.isRetina() || JBUI.isHiDPI()) [ CD ]
Line_54 $$ if (selected) -->Line_60 $$ g.fillOval(w / 2 - rad / 2, h / 2 - rad / 2 - 1 + yOff, rad, rad)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_35 $$ if (focus) [ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_9 $$ final int x = iconRect.x + (rad - (rad % 2 == 1 ? 1 : 0)) / 2[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_3 $$ Insets i = c.getInsets()[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_12 $$ final int h = iconRect.height - rad[ CD ]
Line_11 $$ final int w = iconRect.width - rad-->Line_39 $$ DarculaUIUtil.paintFocusOval(g, 0, JBUI.scale(1), w, h)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_14 $$ final JBGradientPaint ijGradient = new JBGradientPaint(c, new Color(0x4985e4), new Color(0x4074c9))[ CD ]
Line_14 $$ final JBGradientPaint ijGradient = new JBGradientPaint(c, new Color(0x4985e4), new Color(0x4074c9))-->Line_21 $$ g.setPaint(ijGradient)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_54 $$ if (selected) [ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_32 $$ g.fillOval(0, JBUI.scale(1), w - JBUI.scale(1), h - JBUI.scale(1))[ FD ]
Line_9 $$ final int x = iconRect.x + (rad - (rad % 2 == 1 ? 1 : 0)) / 2-->Line_63 $$ g.translate(-x, -y)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_19 $$ g.setPaint(UIUtil.getGradientPaint(0, 0, ColorUtil.shift(c.getBackground(), 1.5), 0, c.getHeight(), ColorUtil.shift(c.getBackground(), 1.2)))[ FD ]
Line_54 $$ if (selected) -->Line_55 $$ final boolean enabled = c.isEnabled()[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_7 $$ viewRect.height -= (i.bottom + viewRect.y)[ CD ]
Line_42 $$ if (UIUtil.isUnderDarcula()) -->Line_49 $$ if (!selected) [ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_6 $$ viewRect.width -= (i.right + viewRect.x)[ CD ]
Line_12 $$ final int h = iconRect.height - rad-->Line_26 $$ g.fillOval(0, 1, w, h)[ FD ]
Line_36 $$ if (UIUtil.isRetina() || JBUI.isHiDPI()) -->Line_39 $$ DarculaUIUtil.paintFocusOval(g, 0, JBUI.scale(1), w, h)[ CD ]
Line_54 $$ if (selected) -->Line_59 $$ g.setColor(UIManager.getColor(enabled ? "RadioButton.darcula.selectionEnabledColor" : "RadioButton.darcula.selectionDisabledColor"))[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_44 $$ g.drawOval(0, JBUI.scale(1) + 1, w - 1, h - 1)[ FD ]
Line_35 $$ if (focus) -->Line_42 $$ if (UIUtil.isUnderDarcula()) [ CD ]
Line_18 $$ if (UIUtil.isUnderDarcula() || !selected) -->Line_21 $$ g.setPaint(ijGradient)[ CD ]
Line_11 $$ final int w = iconRect.width - rad-->Line_26 $$ g.fillOval(0, 1, w, h)[ FD ]
Line_17 $$ final boolean selected = ((AbstractButton) c).isSelected()-->Line_23 $$ if (!UIUtil.isUnderDarcula() && selected) [ FD ]
Line_23 $$ if (!UIUtil.isUnderDarcula() && selected) -->Line_24 $$ final GraphicsConfig fillOvalConf = new GraphicsConfig(g)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_16 $$ final boolean focus = c.hasFocus()[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_18 $$ if (UIUtil.isUnderDarcula() || !selected) [ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_16 $$ final boolean focus = c.hasFocus()[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_13 $$ g.translate(x, y)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_4 $$ viewRect.x += i.left[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_62 $$ config.restore()[ CD ]
Line_8 $$ int rad = JBUI.scale(5)-->Line_60 $$ g.fillOval(w / 2 - rad / 2, h / 2 - rad / 2 - 1 + yOff, rad, rad)[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_13 $$ g.translate(x, y)[ CD ]
Line_54 $$ if (selected) -->Line_58 $$ g.fillOval(w / 2 - rad / 2, h / 2 - rad / 2 + yOff, rad, rad)[ CD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_59 $$ g.setColor(UIManager.getColor(enabled ? "RadioButton.darcula.selectionEnabledColor" : "RadioButton.darcula.selectionDisabledColor"))[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_56 $$ g.setColor(UIManager.getColor(enabled ? "RadioButton.darcula.selectionEnabledShadowColor" : "RadioButton.darcula.selectionDisabledShadowColor"))[ FD ]
Line_2 $$ protected void paintIcon(JComponent c, Graphics2D g, Rectangle viewRect, Rectangle iconRect) -->Line_26 $$ g.fillOval(0, 1, w, h)[ FD ]
Line_29 $$ if (focus) -->Line_32 $$ g.fillOval(0, JBUI.scale(1), w - JBUI.scale(1), h - JBUI.scale(1))[ CD ]
Line_12 $$ final int h = iconRect.height - rad-->Line_30 $$ g.fillOval(0, JBUI.scale(1), w, h)[ FD ]
Line_15 $$ final GraphicsConfig config = GraphicsUtil.setupAAPainting(g)-->Line_62 $$ config.restore()[ FD ]
