Line_4 $$ totalLength += 2 + bb.remaining() + 1-->Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)[ FD ]
Line_4 $$ for (ByteBuffer bb : buffers) totalLength += 2 + bb.remaining() + 1-->Line_11 $$ ByteBufferUtil.arrayCopy(bb, bb.position(), out, out.position(), toCopy)[ FD ]
Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)-->Line_12 $$ out.position(out.position() + toCopy)[ FD ]
Line_10 $$ int toCopy = bb.remaining()-->Line_11 $$ ByteBufferUtil.arrayCopy(bb, bb.position(), out, out.position(), toCopy)[ FD ]
Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)-->Line_7 $$ out.putShort((short) STATIC_MARKER)[ FD ]
Line_6 $$ if (isStatic)-->Line_7 $$ out.putShort((short) STATIC_MARKER)[ CD ]
Line_3 $$ int totalLength = isStatic ? 2 : 0-->Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)[ FD ]
Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)-->Line_9 $$ ByteBufferUtil.writeShortLength(out, bb.remaining())[ FD ]
Line_2 $$ public static ByteBuffer build(boolean isStatic, ByteBuffer... buffers) -->Line_3 $$ int totalLength = isStatic ? 2 : 0[ CD ]
Line_4 $$ for (ByteBuffer bb : buffers) totalLength += 2 + bb.remaining() + 1-->Line_9 $$ ByteBufferUtil.writeShortLength(out, bb.remaining())[ FD ]
Line_2 $$ public static ByteBuffer build(boolean isStatic, ByteBuffer... buffers) -->Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)[ CD ]
Line_4 $$ for (ByteBuffer bb : buffers) totalLength += 2 + bb.remaining() + 1-->Line_10 $$ int toCopy = bb.remaining()[ FD ]
Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)-->Line_15 $$ out.flip()[ FD ]
Line_2 $$ public static ByteBuffer build(boolean isStatic, ByteBuffer... buffers) -->Line_16 $$ return out[ CD ]
Line_2 $$ public static ByteBuffer build(boolean isStatic, ByteBuffer... buffers) -->Line_15 $$ out.flip()[ CD ]
Line_2 $$ public static ByteBuffer build(boolean isStatic, ByteBuffer... buffers) -->Line_6 $$ if (isStatic)[ CD ]
Line_3 $$ int totalLength = isStatic ? 2 : 0-->Line_4 $$ totalLength += 2 + bb.remaining() + 1[ FD ]
Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)-->Line_11 $$ ByteBufferUtil.arrayCopy(bb, bb.position(), out, out.position(), toCopy)[ FD ]
Line_5 $$ ByteBuffer out = ByteBuffer.allocate(totalLength)-->Line_13 $$ out.put((byte) 0)[ FD ]
