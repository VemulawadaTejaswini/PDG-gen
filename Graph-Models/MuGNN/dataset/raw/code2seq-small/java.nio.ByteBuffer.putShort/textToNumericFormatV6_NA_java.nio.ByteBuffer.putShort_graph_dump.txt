Line_12 $$ if (parts[i].length() == 0) -->Line_13 $$ if (skipIndex >= 0) [ CD ]
Line_54 $$ for (int i = 0; i < partsSkipped; i++) -->Line_57 $$ for (int i = partsLo; i > 0; i--) [ FD ]
Line_51 $$ for (int i = 0; i < partsHi; i++) -->Line_54 $$ for (int i = 0; i < partsSkipped; i++) [ FD ]
Line_24 $$ if (skipIndex >= 0) -->Line_40 $$ partsLo = 0[ CD ]
Line_11 $$ for (int i = 1; i < parts.length - 1; i++) -->Line_51 $$ for (int i = 0; i < partsHi; i++) [ FD ]
Line_11 $$ for (int i = 1; i < parts.length - 1; i++) -->Line_17 $$ skipIndex = i[ FD ]
Line_17 $$ skipIndex = i-->Line_13 $$ if (skipIndex >= 0) [ FD ]
Line_57 $$ for (int i = partsLo; i > 0; i--) -->Line_58 $$ rawBytes.putShort(parseHextet(parts[parts.length - i]))[ CD ]
Line_54 $$ for (int i = 0; i < partsSkipped; i++) -->Line_55 $$ rawBytes.putShort((short) 0)[ CD ]
Line_2 $$ private static byte[] textToNumericFormatV6(String ipString) -->Line_5 $$ if (parts.length < 3 || parts.length > IPV6_PART_COUNT + 1) [ CD ]
Line_11 $$ for (int i = 1; i < parts.length - 1; i++) -->Line_12 $$ if (parts[i].length() == 0) [ CD ]
Line_11 $$ for (int i = 1; i < parts.length - 1; i++) -->Line_54 $$ for (int i = 0; i < partsSkipped; i++) [ FD ]
Line_2 $$ private static byte[] textToNumericFormatV6(String ipString) -->Line_11 $$ for (int i = 1; i < parts.length - 1; i++) [ CD ]
Line_24 $$ if (skipIndex >= 0) -->Line_27 $$ partsLo = parts.length - skipIndex - 1[ CD ]
Line_17 $$ skipIndex = i-->Line_24 $$ if (skipIndex >= 0) [ FD ]
Line_27 $$ partsLo = parts.length - skipIndex - 1-->Line_32 $$ if (parts[parts.length - 1].length() == 0 && --partsLo != 0) [ FD ]
Line_24 $$ if (skipIndex >= 0) -->Line_28 $$ if (parts[0].length() == 0 && --partsHi != 0) [ CD ]
Line_51 $$ for (int i = 0; i < partsHi; i++) -->Line_52 $$ rawBytes.putShort(parseHextet(parts[i]))[ CD ]
Line_27 $$ partsLo = parts.length - skipIndex - 1-->Line_40 $$ partsLo = 0[ FD ]
Line_2 $$ private static byte[] textToNumericFormatV6(String ipString) -->Line_24 $$ if (skipIndex >= 0) [ CD ]
Line_24 $$ if (skipIndex >= 0) -->Line_32 $$ if (parts[parts.length - 1].length() == 0 && --partsLo != 0) [ CD ]
Line_2 $$ private static byte[] textToNumericFormatV6(String ipString) -->Line_63 $$ return rawBytes.array()[ CD ]
Line_2 $$ private static byte[] textToNumericFormatV6(String ipString) -->Line_45 $$ if (!(skipIndex >= 0 ? partsSkipped >= 1 : partsSkipped == 0)) [ CD ]
Line_12 $$ if (parts[i].length() == 0) -->Line_17 $$ skipIndex = i[ CD ]
Line_5 $$ if (parts.length < 3 || parts.length > IPV6_PART_COUNT + 1) -->Line_6 $$ return null[ CD ]
Line_11 $$ for (int i = 1; i < parts.length - 1; i++) -->Line_57 $$ for (int i = partsLo; i > 0; i--) [ FD ]
Line_45 $$ if (!(skipIndex >= 0 ? partsSkipped >= 1 : partsSkipped == 0)) -->Line_46 $$ return null[ CD ]
Line_51 $$ for (int i = 0; i < partsHi; i++) -->Line_57 $$ for (int i = partsLo; i > 0; i--) [ FD ]
