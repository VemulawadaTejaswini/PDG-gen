Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)-->Line_19 $$ boolean corrupt = rowDecoder.decodeRow(row, null, providers, columns, buildMap(columns))[ FD ]
Line_2 $$ public void testSimple() -->Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)-->Line_7 $$ buf.put((byte) 123)[ FD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)-->Line_6 $$ buf.putShort((short) 4567)[ FD ]
Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)-->Line_21 $$ assertEquals(providers.size(), columns.size())[ FD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)-->Line_9 $$ byte[] row = new byte[buf.position()][ FD ]
Line_16 $$ DecoderTestColumnHandle row5 = new DecoderTestColumnHandle("", 4, "row5", VarcharType.VARCHAR, "15", null, null, false, false, false)-->Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)[ FD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)-->Line_10 $$ System.arraycopy(buf.array(), 0, row, 0, buf.position())[ FD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)-->Line_8 $$ buf.put("Ich bin zwei Oeltanks".getBytes(StandardCharsets.UTF_8))[ FD ]
Line_9 $$ byte[] row = new byte[buf.position()]-->Line_19 $$ boolean corrupt = rowDecoder.decodeRow(row, null, providers, columns, buildMap(columns))[ FD ]
Line_12 $$ DecoderTestColumnHandle row1 = new DecoderTestColumnHandle("", 0, "row1", BigintType.BIGINT, "0", "LONG", null, false, false, false)-->Line_22 $$ checkValue(providers, row1, 4815162342L)[ FD ]
Line_2 $$ public void testSimple() -->Line_21 $$ assertEquals(providers.size(), columns.size())[ CD ]
Line_15 $$ DecoderTestColumnHandle row4 = new DecoderTestColumnHandle("", 3, "row4", BigintType.BIGINT, "14", "BYTE", null, false, false, false)-->Line_25 $$ checkValue(providers, row4, 123)[ FD ]
Line_2 $$ public void testSimple() -->Line_24 $$ checkValue(providers, row3, 4567)[ CD ]
Line_14 $$ DecoderTestColumnHandle row3 = new DecoderTestColumnHandle("", 2, "row3", BigintType.BIGINT, "12", "SHORT", null, false, false, false)-->Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)[ FD ]
Line_2 $$ public void testSimple() -->Line_5 $$ buf.putInt(12345678)[ CD ]
Line_2 $$ public void testSimple() -->Line_9 $$ byte[] row = new byte[buf.position()][ CD ]
Line_11 $$ RawRowDecoder rowDecoder = new RawRowDecoder()-->Line_19 $$ boolean corrupt = rowDecoder.decodeRow(row, null, providers, columns, buildMap(columns))[ FD ]
Line_2 $$ public void testSimple() -->Line_16 $$ DecoderTestColumnHandle row5 = new DecoderTestColumnHandle("", 4, "row5", VarcharType.VARCHAR, "15", null, null, false, false, false)[ CD ]
Line_14 $$ DecoderTestColumnHandle row3 = new DecoderTestColumnHandle("", 2, "row3", BigintType.BIGINT, "12", "SHORT", null, false, false, false)-->Line_24 $$ checkValue(providers, row3, 4567)[ FD ]
Line_2 $$ public void testSimple() -->Line_18 $$ Set<FieldValueProvider> providers = new HashSet()[ CD ]
Line_2 $$ public void testSimple() -->Line_20 $$ assertFalse(corrupt)[ CD ]
Line_18 $$ Set<FieldValueProvider> providers = new HashSet()-->Line_26 $$ checkValue(providers, row5, "Ich bin zwei Oeltanks")[ FD ]
Line_18 $$ Set<FieldValueProvider> providers = new HashSet()-->Line_21 $$ assertEquals(providers.size(), columns.size())[ FD ]
Line_16 $$ DecoderTestColumnHandle row5 = new DecoderTestColumnHandle("", 4, "row5", VarcharType.VARCHAR, "15", null, null, false, false, false)-->Line_26 $$ checkValue(providers, row5, "Ich bin zwei Oeltanks")[ FD ]
Line_18 $$ Set<FieldValueProvider> providers = new HashSet()-->Line_24 $$ checkValue(providers, row3, 4567)[ FD ]
Line_2 $$ public void testSimple() -->Line_14 $$ DecoderTestColumnHandle row3 = new DecoderTestColumnHandle("", 2, "row3", BigintType.BIGINT, "12", "SHORT", null, false, false, false)[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)-->Line_5 $$ buf.putInt(12345678)[ FD ]
Line_2 $$ public void testSimple() -->Line_13 $$ DecoderTestColumnHandle row2 = new DecoderTestColumnHandle("", 1, "row2", BigintType.BIGINT, "8", "INT", null, false, false, false)[ CD ]
Line_13 $$ DecoderTestColumnHandle row2 = new DecoderTestColumnHandle("", 1, "row2", BigintType.BIGINT, "8", "INT", null, false, false, false)-->Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)[ FD ]
Line_2 $$ public void testSimple() -->Line_19 $$ boolean corrupt = rowDecoder.decodeRow(row, null, providers, columns, buildMap(columns))[ CD ]
Line_2 $$ public void testSimple() -->Line_22 $$ checkValue(providers, row1, 4815162342L)[ CD ]
Line_2 $$ public void testSimple() -->Line_8 $$ buf.put("Ich bin zwei Oeltanks".getBytes(StandardCharsets.UTF_8))[ CD ]
Line_2 $$ public void testSimple() -->Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)[ CD ]
Line_12 $$ DecoderTestColumnHandle row1 = new DecoderTestColumnHandle("", 0, "row1", BigintType.BIGINT, "0", "LONG", null, false, false, false)-->Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)[ FD ]
Line_2 $$ public void testSimple() -->Line_15 $$ DecoderTestColumnHandle row4 = new DecoderTestColumnHandle("", 3, "row4", BigintType.BIGINT, "14", "BYTE", null, false, false, false)[ CD ]
Line_2 $$ public void testSimple() -->Line_6 $$ buf.putShort((short) 4567)[ CD ]
Line_18 $$ Set<FieldValueProvider> providers = new HashSet()-->Line_22 $$ checkValue(providers, row1, 4815162342L)[ FD ]
Line_19 $$ boolean corrupt = rowDecoder.decodeRow(row, null, providers, columns, buildMap(columns))-->Line_20 $$ assertFalse(corrupt)[ FD ]
Line_18 $$ Set<FieldValueProvider> providers = new HashSet()-->Line_25 $$ checkValue(providers, row4, 123)[ FD ]
Line_2 $$ public void testSimple() -->Line_12 $$ DecoderTestColumnHandle row1 = new DecoderTestColumnHandle("", 0, "row1", BigintType.BIGINT, "0", "LONG", null, false, false, false)[ CD ]
Line_18 $$ Set<FieldValueProvider> providers = new HashSet()-->Line_19 $$ boolean corrupt = rowDecoder.decodeRow(row, null, providers, columns, buildMap(columns))[ FD ]
Line_2 $$ public void testSimple() -->Line_7 $$ buf.put((byte) 123)[ CD ]
Line_2 $$ public void testSimple() -->Line_25 $$ checkValue(providers, row4, 123)[ CD ]
Line_2 $$ public void testSimple() -->Line_23 $$ checkValue(providers, row2, 12345678)[ CD ]
Line_2 $$ public void testSimple() -->Line_11 $$ RawRowDecoder rowDecoder = new RawRowDecoder()[ CD ]
Line_2 $$ public void testSimple() -->Line_26 $$ checkValue(providers, row5, "Ich bin zwei Oeltanks")[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(100)-->Line_4 $$ buf.putLong(4815162342L)[ FD ]
Line_13 $$ DecoderTestColumnHandle row2 = new DecoderTestColumnHandle("", 1, "row2", BigintType.BIGINT, "8", "INT", null, false, false, false)-->Line_23 $$ checkValue(providers, row2, 12345678)[ FD ]
Line_15 $$ DecoderTestColumnHandle row4 = new DecoderTestColumnHandle("", 3, "row4", BigintType.BIGINT, "14", "BYTE", null, false, false, false)-->Line_17 $$ List<DecoderColumnHandle> columns = ImmutableList.of(row1, row2, row3, row4, row5)[ FD ]
Line_18 $$ Set<FieldValueProvider> providers = new HashSet()-->Line_23 $$ checkValue(providers, row2, 12345678)[ FD ]
Line_2 $$ public void testSimple() -->Line_10 $$ System.arraycopy(buf.array(), 0, row, 0, buf.position())[ CD ]
Line_2 $$ public void testSimple() -->Line_4 $$ buf.putLong(4815162342L)[ CD ]
Line_9 $$ byte[] row = new byte[buf.position()]-->Line_10 $$ System.arraycopy(buf.array(), 0, row, 0, buf.position())[ FD ]
