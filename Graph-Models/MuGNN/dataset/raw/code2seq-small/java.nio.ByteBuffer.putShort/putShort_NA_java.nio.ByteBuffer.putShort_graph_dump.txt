Line_2 $$ public final void putShort(long addr, short value) -->Line_9 $$ put(addr, myTypedIOBuffer, 0, 2)[ FD ]
Line_2 $$ public final void putShort(long addr, short value) -->Line_3 $$ if (myValuesAreBufferAligned) [ CD ]
Line_4 $$ long page = addr / myPageSize-->Line_6 $$ getBuffer(page).putShort(page_offset, value)[ FD ]
Line_3 $$ if (myValuesAreBufferAligned) -->Line_9 $$ put(addr, myTypedIOBuffer, 0, 2)[ CD ]
Line_2 $$ public final void putShort(long addr, short value) -->Line_6 $$ getBuffer(page).putShort(page_offset, value)[ FD ]
Line_3 $$ if (myValuesAreBufferAligned) -->Line_6 $$ getBuffer(page).putShort(page_offset, value)[ CD ]
Line_3 $$ if (myValuesAreBufferAligned) -->Line_8 $$ Bits.putShort(myTypedIOBuffer, 0, value)[ CD ]
Line_3 $$ if (myValuesAreBufferAligned) -->Line_5 $$ int page_offset = (int) (addr % myPageSize)[ CD ]
Line_5 $$ int page_offset = (int) (addr % myPageSize)-->Line_6 $$ getBuffer(page).putShort(page_offset, value)[ FD ]
Line_2 $$ public final void putShort(long addr, short value) -->Line_8 $$ Bits.putShort(myTypedIOBuffer, 0, value)[ FD ]
Line_3 $$ if (myValuesAreBufferAligned) -->Line_4 $$ long page = addr / myPageSize[ CD ]
