Line_2 $$ public void calcData(DataKey key, DataSink sink) -->Line_14 $$ sink.put(key, navigatables.toArray(new Navigatable[navigatables.size()]))[ FD ]
Line_2 $$ public void calcData(DataKey key, DataSink sink) -->Line_3 $$ if (CommonDataKeys.NAVIGATABLE_ARRAY.equals(key)) [ CD ]
Line_3 $$ if (CommonDataKeys.NAVIGATABLE_ARRAY.equals(key)) -->Line_4 $$ final TreePath[] treePaths = myJTree.getSelectionModel().getSelectionPaths()[ CD ]
Line_2 $$ public void calcData(DataKey key, DataSink sink) -->Line_3 $$ if (CommonDataKeys.NAVIGATABLE_ARRAY.equals(key)) [ FD ]
Line_3 $$ if (CommonDataKeys.NAVIGATABLE_ARRAY.equals(key)) -->Line_5 $$ final List<Navigatable> navigatables = new ArrayList<Navigatable>(treePaths.length)[ CD ]
Line_5 $$ final List<Navigatable> navigatables = new ArrayList<Navigatable>(treePaths.length)-->Line_14 $$ sink.put(key, navigatables.toArray(new Navigatable[navigatables.size()]))[ FD ]
Line_3 $$ if (CommonDataKeys.NAVIGATABLE_ARRAY.equals(key)) -->Line_14 $$ sink.put(key, navigatables.toArray(new Navigatable[navigatables.size()]))[ CD ]
Line_8 $$ for (FilePath filePath : filePaths) -->Line_10 $$ navigatables.add(new OpenFileDescriptor(myProject, filePath.getVirtualFile()))[ FD ]
Line_6 $$ for (TreePath treePath : treePaths) -->Line_7 $$ final List<FilePath> filePaths = ((ChangesBrowserNode) treePath.getLastPathComponent()).getAllFilePathsUnder()[ FD ]
Line_8 $$ for (FilePath filePath : filePaths) -->Line_9 $$ if (filePath.getVirtualFile() != null) [ FD ]
Line_5 $$ final List<Navigatable> navigatables = new ArrayList<Navigatable>(treePaths.length)-->Line_10 $$ navigatables.add(new OpenFileDescriptor(myProject, filePath.getVirtualFile()))[ FD ]
Line_9 $$ if (filePath.getVirtualFile() != null) -->Line_10 $$ navigatables.add(new OpenFileDescriptor(myProject, filePath.getVirtualFile()))[ CD ]
