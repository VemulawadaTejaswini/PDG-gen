Line_2 $$ protected JTree createTree() -->Line_13 $$ JTree tree = myFileSystemTree.getTree()[ CD ]
Line_2 $$ protected JTree createTree() -->Line_5 $$ internalTree.setRootVisible(myChooserDescriptor.isTreeRootVisible())[ CD ]
Line_23 $$ new FileDrop(tree, new FileDrop.Target() -->Line_28 $$ return myFileSystemTree.areHiddensShown()[ CD ]
Line_18 $$ myFileSystemTree.addListener(new FileSystemTree.Listener() -->Line_20 $$ updatePathFromTree(selection, false)[ CD ]
Line_2 $$ protected JTree createTree() -->Line_15 $$ tree.getSelectionModel().addTreeSelectionListener(new FileTreeSelectionListener())[ CD ]
Line_2 $$ protected JTree createTree() -->Line_18 $$ myFileSystemTree.addListener(new FileSystemTree.Listener() [ CD ]
Line_23 $$ new FileDrop(tree, new FileDrop.Target() -->Line_31 $$ if (!myChooserDescriptor.isChooseMultiple() && files.size() > 0) [ CD ]
Line_23 $$ new FileDrop(tree, new FileDrop.Target() -->Line_32 $$ selectInTree(new VirtualFile[] [ FD ]
Line_2 $$ protected JTree createTree() -->Line_3 $$ Tree internalTree = createInternalTree()[ CD ]
Line_2 $$ protected JTree createTree() -->Line_14 $$ tree.setCellRenderer(new NodeRenderer())[ CD ]
Line_2 $$ protected JTree createTree() -->Line_38 $$ return tree[ CD ]
Line_23 $$ new FileDrop(tree, new FileDrop.Target() -->Line_34 $$ selectInTree(VfsUtilCore.toVirtualFileArray(files), true)[ FD ]
Line_2 $$ protected JTree createTree() -->Line_8 $$ myFileSystemTree.addOkAction(new Runnable() [ CD ]
Line_2 $$ protected JTree createTree() -->Line_17 $$ setOKActionEnabled(false)[ CD ]
Line_18 $$ myFileSystemTree.addListener(new FileSystemTree.Listener() -->Line_20 $$ updatePathFromTree(selection, false)[ FD ]
Line_31 $$ if (!myChooserDescriptor.isChooseMultiple() && files.size() > 0) -->Line_32 $$ selectInTree(new VirtualFile[] [ CD ]
Line_2 $$ protected JTree createTree() -->Line_6 $$ internalTree.setShowsRootHandles(true)[ CD ]
Line_2 $$ protected JTree createTree() -->Line_7 $$ Disposer.register(myDisposable, myFileSystemTree)[ CD ]
Line_31 $$ if (!myChooserDescriptor.isChooseMultiple() && files.size() > 0) -->Line_34 $$ selectInTree(VfsUtilCore.toVirtualFileArray(files), true)[ CD ]
Line_8 $$ myFileSystemTree.addOkAction(new Runnable() -->Line_10 $$ doOKAction()[ CD ]
Line_3 $$ Tree internalTree = createInternalTree()-->Line_6 $$ internalTree.setShowsRootHandles(true)[ FD ]
Line_2 $$ protected JTree createTree() -->Line_16 $$ tree.addTreeExpansionListener(new FileTreeExpansionListener())[ CD ]
Line_23 $$ new FileDrop(tree, new FileDrop.Target() -->Line_31 $$ if (!myChooserDescriptor.isChooseMultiple() && files.size() > 0) [ FD ]
Line_23 $$ new FileDrop(tree, new FileDrop.Target() -->Line_25 $$ return myChooserDescriptor[ CD ]
Line_3 $$ Tree internalTree = createInternalTree()-->Line_5 $$ internalTree.setRootVisible(myChooserDescriptor.isTreeRootVisible())[ FD ]
