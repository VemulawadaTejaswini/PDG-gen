Line_4 $$ for (int i = root.getChildCount() - 1; i >= 0; i--) -->Line_5 $$ final DefaultMutableTreeNode child = (DefaultMutableTreeNode) root.getChildAt(i)[ CD ]
Line_3 $$ final DefaultMutableTreeNode root = (DefaultMutableTreeNode) myTree.getModel().getRoot()-->Line_4 $$ for (int i = root.getChildCount() - 1; i >= 0; i--) [ FD ]
Line_6 $$ if (child instanceof GroupNode) -->Line_8 $$ myTree.expandPath(treePath)[ CD ]
Line_3 $$ final DefaultMutableTreeNode root = (DefaultMutableTreeNode) myTree.getModel().getRoot()-->Line_5 $$ final DefaultMutableTreeNode child = (DefaultMutableTreeNode) root.getChildAt(i)[ FD ]
Line_5 $$ final DefaultMutableTreeNode child = (DefaultMutableTreeNode) root.getChildAt(i)-->Line_7 $$ final TreePath treePath = new TreePath(child.getPath())[ FD ]
Line_2 $$ private void restoreUsageExpandState(@NotNull Collection<UsageState> states) -->Line_3 $$ final DefaultMutableTreeNode root = (DefaultMutableTreeNode) myTree.getModel().getRoot()[ CD ]
Line_4 $$ for (int i = root.getChildCount() - 1; i >= 0; i--) -->Line_6 $$ if (child instanceof GroupNode) [ CD ]
Line_2 $$ private void restoreUsageExpandState(@NotNull Collection<UsageState> states) -->Line_11 $$ myTree.getSelectionModel().clearSelection()[ CD ]
Line_4 $$ for (int i = root.getChildCount() - 1; i >= 0; i--) -->Line_5 $$ final DefaultMutableTreeNode child = (DefaultMutableTreeNode) root.getChildAt(i)[ FD ]
Line_12 $$ for (final UsageState usageState : states) -->Line_13 $$ usageState.restore()[ FD ]
Line_7 $$ final TreePath treePath = new TreePath(child.getPath())-->Line_8 $$ myTree.expandPath(treePath)[ FD ]
Line_2 $$ private void restoreUsageExpandState(@NotNull Collection<UsageState> states) -->Line_4 $$ for (int i = root.getChildCount() - 1; i >= 0; i--) [ CD ]
Line_5 $$ final DefaultMutableTreeNode child = (DefaultMutableTreeNode) root.getChildAt(i)-->Line_6 $$ if (child instanceof GroupNode) [ FD ]
Line_6 $$ if (child instanceof GroupNode) -->Line_7 $$ final TreePath treePath = new TreePath(child.getPath())[ CD ]
