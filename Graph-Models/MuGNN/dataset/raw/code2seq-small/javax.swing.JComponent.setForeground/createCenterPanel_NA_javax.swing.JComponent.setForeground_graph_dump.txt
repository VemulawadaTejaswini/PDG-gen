Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) -->Line_42 $$ myList.setSelectedIndex(newSelectionIndex)[ CD ]
Line_33 $$ newSelectionIndex = i-->Line_42 $$ myList.setSelectedIndex(newSelectionIndex)[ FD ]
Line_30 $$ int i = ((Item) o).index-->Line_33 $$ newSelectionIndex = i[ FD ]
Line_6 $$ if (myUseIdeaEditor) -->Line_9 $$ Color fg = ObjectUtils.chooseNotNull(scheme.getDefaultForeground(), UIUtil.getListForeground())[ CD ]
Line_6 $$ if (myUseIdeaEditor) -->Line_10 $$ Color bg = ObjectUtils.chooseNotNull(scheme.getDefaultBackground(), UIUtil.getListBackground())[ CD ]
Line_58 $$ mySplitter.setFirstComponent(ListWithFilter.wrap(myList, ScrollPaneFactory.createScrollPane(myList), new Function<Object, String>() -->Line_62 $$ return ((Item) o).longText[ CD ]
Line_41 $$ newSelectionIndex = Math.min(newSelectionIndex, myAllContents.size() - 1)-->Line_42 $$ myList.setSelectedIndex(newSelectionIndex)[ FD ]
Line_28 $$ int newSelectionIndex = -1-->Line_33 $$ newSelectionIndex = i[ FD ]
Line_14 $$ new DoubleClickListener() -->Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) [ FD ]
Line_43 $$ if (e.getKeyCode() == KeyEvent.VK_ENTER) -->Line_47 $$ if (aChar >= '0' && aChar <= '9') [ CD ]
Line_6 $$ if (myUseIdeaEditor) -->Line_8 $$ myList.setFont(scheme.getFont(EditorFontType.PLAIN))[ CD ]
Line_49 $$ if (idx < myAllContents.size()) -->Line_50 $$ myList.setSelectedIndex(idx)[ CD ]
Line_37 $$ if (myAllContents.isEmpty()) -->Line_39 $$ return[ CD ]
Line_70 $$ myList.addListSelectionListener(new ListSelectionListener() -->Line_74 $$ myUpdateAlarm.cancelAllRequests()[ CD ]
Line_75 $$ myUpdateAlarm.addRequest(new Runnable() -->Line_79 $$ updateViewerForSelection()[ CD ]
Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) -->Line_36 $$ rebuildListContent()[ CD ]
Line_14 $$ new DoubleClickListener() -->Line_18 $$ close(OK_EXIT_CODE)[ CD ]
Line_47 $$ if (aChar >= '0' && aChar <= '9') -->Line_49 $$ if (idx < myAllContents.size()) [ CD ]
Line_10 $$ Color bg = ObjectUtils.chooseNotNull(scheme.getDefaultBackground(), UIUtil.getListBackground())-->Line_12 $$ myList.setBackground(bg)[ FD ]
Line_6 $$ if (myUseIdeaEditor) -->Line_7 $$ EditorColorsScheme scheme = EditorColorsManager.getInstance().getGlobalScheme()[ CD ]
Line_47 $$ if (aChar >= '0' && aChar <= '9') -->Line_48 $$ int idx = aChar == '0' ? 9 : aChar - '1'[ CD ]
Line_14 $$ new DoubleClickListener() -->Line_43 $$ if (e.getKeyCode() == KeyEvent.VK_ENTER) [ FD ]
Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) -->Line_41 $$ newSelectionIndex = Math.min(newSelectionIndex, myAllContents.size() - 1)[ CD ]
Line_9 $$ Color fg = ObjectUtils.chooseNotNull(scheme.getDefaultForeground(), UIUtil.getListForeground())-->Line_11 $$ myList.setForeground(fg)[ FD ]
Line_48 $$ int idx = aChar == '0' ? 9 : aChar - '1'-->Line_49 $$ if (idx < myAllContents.size()) [ FD ]
Line_7 $$ EditorColorsScheme scheme = EditorColorsManager.getInstance().getGlobalScheme()-->Line_8 $$ myList.setFont(scheme.getFont(EditorFontType.PLAIN))[ FD ]
Line_7 $$ EditorColorsScheme scheme = EditorColorsManager.getInstance().getGlobalScheme()-->Line_10 $$ Color bg = ObjectUtils.chooseNotNull(scheme.getDefaultBackground(), UIUtil.getListBackground())[ FD ]
Line_23 $$ myList.addKeyListener(new KeyAdapter() -->Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) [ FD ]
Line_48 $$ int idx = aChar == '0' ? 9 : aChar - '1'-->Line_50 $$ myList.setSelectedIndex(idx)[ FD ]
Line_49 $$ if (idx < myAllContents.size()) -->Line_52 $$ doOKAction()[ CD ]
Line_32 $$ if (newSelectionIndex < 0) -->Line_33 $$ newSelectionIndex = i[ CD ]
Line_23 $$ myList.addKeyListener(new KeyAdapter() -->Line_43 $$ if (e.getKeyCode() == KeyEvent.VK_ENTER) [ FD ]
Line_33 $$ newSelectionIndex = i-->Line_41 $$ newSelectionIndex = Math.min(newSelectionIndex, myAllContents.size() - 1)[ FD ]
Line_7 $$ EditorColorsScheme scheme = EditorColorsManager.getInstance().getGlobalScheme()-->Line_9 $$ Color fg = ObjectUtils.chooseNotNull(scheme.getDefaultForeground(), UIUtil.getListForeground())[ FD ]
Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) -->Line_43 $$ if (e.getKeyCode() == KeyEvent.VK_ENTER) [ CD ]
Line_28 $$ int newSelectionIndex = -1-->Line_41 $$ newSelectionIndex = Math.min(newSelectionIndex, myAllContents.size() - 1)[ FD ]
Line_30 $$ int i = ((Item) o).index-->Line_31 $$ removeContentAt(myAllContents.get(i))[ FD ]
Line_43 $$ if (e.getKeyCode() == KeyEvent.VK_ENTER) -->Line_44 $$ doOKAction()[ CD ]
Line_70 $$ myList.addListSelectionListener(new ListSelectionListener() -->Line_75 $$ myUpdateAlarm.addRequest(new Runnable() [ CD ]
Line_28 $$ int newSelectionIndex = -1-->Line_42 $$ myList.setSelectedIndex(newSelectionIndex)[ FD ]
Line_28 $$ int newSelectionIndex = -1-->Line_32 $$ if (newSelectionIndex < 0) [ FD ]
Line_14 $$ new DoubleClickListener() -->Line_51 $$ e.consume()[ FD ]
Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) -->Line_28 $$ int newSelectionIndex = -1[ CD ]
Line_23 $$ myList.addKeyListener(new KeyAdapter() -->Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) [ CD ]
Line_23 $$ myList.addKeyListener(new KeyAdapter() -->Line_46 $$ final char aChar = e.getKeyChar()[ FD ]
Line_27 $$ if (e.getKeyCode() == KeyEvent.VK_DELETE) -->Line_37 $$ if (myAllContents.isEmpty()) [ CD ]
Line_14 $$ new DoubleClickListener() -->Line_19 $$ return true[ CD ]
Line_37 $$ if (myAllContents.isEmpty()) -->Line_38 $$ close(CANCEL_EXIT_CODE)[ CD ]
Line_43 $$ if (e.getKeyCode() == KeyEvent.VK_ENTER) -->Line_46 $$ final char aChar = e.getKeyChar()[ CD ]
Line_49 $$ if (idx < myAllContents.size()) -->Line_51 $$ e.consume()[ CD ]
Line_14 $$ new DoubleClickListener() -->Line_46 $$ final char aChar = e.getKeyChar()[ FD ]
Line_6 $$ if (myUseIdeaEditor) -->Line_12 $$ myList.setBackground(bg)[ CD ]
Line_6 $$ if (myUseIdeaEditor) -->Line_11 $$ myList.setForeground(fg)[ CD ]
Line_23 $$ myList.addKeyListener(new KeyAdapter() -->Line_51 $$ e.consume()[ FD ]
Line_4 $$ final int selectionMode = myAllowMultipleSelections ? ListSelectionModel.MULTIPLE_INTERVAL_SELECTION : ListSelectionModel.SINGLE_SELECTION-->Line_5 $$ myList.setSelectionMode(selectionMode)[ FD ]
