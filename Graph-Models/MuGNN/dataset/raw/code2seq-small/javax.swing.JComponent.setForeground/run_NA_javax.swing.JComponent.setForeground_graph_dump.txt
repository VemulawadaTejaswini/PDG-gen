Line_10 $$ if (myErrorMessage == null) -->Line_12 $$ if (FilePatternPackageSet.SCOPE_FILE.equals(DependencyUISettings.getInstance().SCOPE_TYPE)) [ CD ]
Line_11 $$ String message = IdeBundle.message("label.scope.contains.files", model.getMarkedFileCount(), model.getTotalFileCount())-->Line_13 $$ message = UIUtil.toHtml(message + "<br/>(Non-project files are not shown)")[ FD ]
Line_10 $$ if (myErrorMessage == null) -->Line_11 $$ String message = IdeBundle.message("label.scope.contains.files", model.getMarkedFileCount(), model.getTotalFileCount())[ CD ]
Line_10 $$ if (myErrorMessage == null) -->Line_15 $$ myMatchingCountLabel.setText(message)[ CD ]
Line_11 $$ String message = IdeBundle.message("label.scope.contains.files", model.getMarkedFileCount(), model.getTotalFileCount())-->Line_15 $$ myMatchingCountLabel.setText(message)[ FD ]
Line_20 $$ SwingUtilities.invokeLater(new Runnable() -->Line_26 $$ myTreeExpansionMonitor.restore()[ CD ]
Line_8 $$ final TreeModel model = PatternDialectProvider.getInstance(DependencyUISettings.getInstance().SCOPE_TYPE).createTreeModel(myProject, myTreeMarker)-->Line_9 $$ ((PackageDependenciesNode) model.getRoot()).sortChildren()[ FD ]
Line_13 $$ message = UIUtil.toHtml(message + "<br/>(Non-project files are not shown)")-->Line_15 $$ myMatchingCountLabel.setText(message)[ FD ]
Line_12 $$ if (FilePatternPackageSet.SCOPE_FILE.equals(DependencyUISettings.getInstance().SCOPE_TYPE)) -->Line_13 $$ message = UIUtil.toHtml(message + "<br/>(Non-project files are not shown)")[ CD ]
Line_8 $$ final TreeModel model = PatternDialectProvider.getInstance(DependencyUISettings.getInstance().SCOPE_TYPE).createTreeModel(myProject, myTreeMarker)-->Line_11 $$ String message = IdeBundle.message("label.scope.contains.files", model.getMarkedFileCount(), model.getTotalFileCount())[ FD ]
Line_10 $$ if (myErrorMessage == null) -->Line_18 $$ showErrorMessage()[ CD ]
Line_4 $$ if (myProject.isDisposed())-->Line_5 $$ return[ CD ]
Line_10 $$ if (myErrorMessage == null) -->Line_16 $$ myMatchingCountLabel.setForeground(new JLabel().getForeground())[ CD ]
