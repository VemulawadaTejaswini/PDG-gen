Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_85 $$ ctx = executeScript(request, ctx)[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_65 $$ if (indexRequest.parent() != null) [ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_4 $$ final ShardId shardId = new ShardId(getResult.getIndex(), request.shardId())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_96 $$ if (ttl == null) [ CD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_10 $$ TimeValue ttl = indexRequest.ttl()[ FD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_21 $$ String scriptOpChoice = (String) ctx.get("op")[ CD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_17 $$ ctx = executeScript(request, ctx)[ CD ]
Line_5 $$ if (!getResult.isExists()) -->Line_34 $$ if (request.versionType() != VersionType.INTERNAL) [ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_44 $$ if (getResult.internalSourceRef() == null) [ CD ]
Line_57 $$ updatedSourceAsMap = sourceAndContent.v2()-->Line_68 $$ boolean noop = !XContentHelper.update(updatedSourceAsMap, indexRequest.sourceAsMap(), request.detectNoop())[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_61 $$ timestamp = indexRequest.timestamp()[ CD ]
Line_90 $$ if (originalTimestamp != null) -->Line_91 $$ timestamp = originalTimestamp.toString()[ CD ]
Line_49 $$ String timestamp = null-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_97 $$ Long ttlAsLong = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null[ FD ]
Line_108 $$ if ("none".equals(operation)) -->Line_115 $$ return new Result(update, Operation.NONE, updatedSourceAsMap, updateSourceContentType)[ CD ]
Line_85 $$ ctx = executeScript(request, ctx)-->Line_86 $$ operation = (String) ctx.get("op")[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_4 $$ final ShardId shardId = new ShardId(getResult.getIndex(), request.shardId())[ CD ]
Line_49 $$ String timestamp = null-->Line_91 $$ timestamp = originalTimestamp.toString()[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_49 $$ String timestamp = null[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_26 $$ UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), false)[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_86 $$ operation = (String) ctx.get("op")[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_85 $$ ctx = executeScript(request, ctx)[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")[ FD ]
Line_21 $$ String scriptOpChoice = (String) ctx.get("op")-->Line_24 $$ logger.warn("Used upsert operation [[ FD ]
Line_52 $$ final XContentType updateSourceContentType = sourceAndContent.v1()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_114 $$ UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), false)[ FD ]
Line_70 $$ operation = "none"-->Line_113 $$ logger.warn("Used update operation [[ FD ]
Line_93 $$ ttl = getTTLFromScriptContext(ctx)-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_7 $$ throw new DocumentMissingException(shardId, request.type(), request.id())[ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_58 $$ if (indexRequest.ttl() != null) [ FD ]
Line_39 $$ long updateVersion = getResult.getVersion()-->Line_42 $$ updateVersion = request.version()[ FD ]
Line_75 $$ Long originalTimestamp = getResult.getFields().containsKey(TimestampFieldMapper.NAME) ? (Long) getResult.field(TimestampFieldMapper.NAME).getValue() : null-->Line_90 $$ if (originalTimestamp != null) [ FD ]
Line_70 $$ operation = "none"-->Line_108 $$ if ("none".equals(operation)) [ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_62 $$ if (indexRequest.routing() != null) [ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_35 $$ indexRequest.version(request.version()).versionType(request.versionType())[ FD ]
Line_22 $$ if (!"create".equals(scriptOpChoice)) -->Line_28 $$ return new Result(update, Operation.NONE, upsertDoc, XContentType.JSON)[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_55 $$ if (request.script() == null && request.doc() != null) [ CD ]
Line_62 $$ if (indexRequest.routing() != null) -->Line_63 $$ routing = indexRequest.routing()[ CD ]
Line_70 $$ operation = "none"-->Line_86 $$ operation = (String) ctx.get("op")[ FD ]
Line_102 $$ if (operation == null || "index".equals(operation)) -->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ CD ]
Line_26 $$ UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), false)-->Line_27 $$ update.setGetResult(getResult)[ FD ]
Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")-->Line_110 $$ update.setGetResult(extractGetResult(request, request.index(), getResult.getVersion(), updatedSourceAsMap, updateSourceContentType, getResult.internalSourceRef()))[ FD ]
Line_86 $$ operation = (String) ctx.get("op")-->Line_108 $$ if ("none".equals(operation)) [ FD ]
Line_18 $$ if (ttl == null) -->Line_19 $$ ttl = getTTLFromScriptContext(ctx)[ CD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_21 $$ String scriptOpChoice = (String) ctx.get("op")[ FD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_96 $$ if (ttl == null) [ FD ]
Line_66 $$ parent = indexRequest.parent()-->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_48 $$ String operation = null[ CD ]
Line_97 $$ Long ttlAsLong = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null-->Line_98 $$ if (ttlAsLong != null) [ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_51 $$ final Map<String, Object> updatedSourceAsMap[ CD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_69 $$ if (request.detectNoop() && noop) [ CD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_16 $$ ctx.put("_source", upsertDoc)[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_44 $$ if (getResult.internalSourceRef() == null) [ FD ]
Line_5 $$ if (!getResult.isExists()) -->Line_10 $$ TimeValue ttl = indexRequest.ttl()[ CD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_18 $$ if (ttl == null) [ FD ]
Line_108 $$ if ("none".equals(operation)) -->Line_113 $$ logger.warn("Used update operation [[ CD ]
Line_21 $$ String scriptOpChoice = (String) ctx.get("op")-->Line_22 $$ if (!"create".equals(scriptOpChoice)) [ FD ]
Line_70 $$ operation = "none"-->Line_105 $$ if ("delete".equals(operation)) [ FD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_59 $$ ttl = indexRequest.ttl()[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_82 $$ ctx.put("_timestamp", originalTimestamp)[ CD ]
Line_19 $$ ttl = getTTLFromScriptContext(ctx)-->Line_99 $$ ttl = new TimeValue(ttlAsLong - TimeValue.nsecToMSec(System.nanoTime() - getDateNS))[ FD ]
Line_54 $$ String parent = getResult.getFields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).getValue().toString() : null-->Line_81 $$ ctx.put("_parent", parent)[ FD ]
Line_22 $$ if (!"create".equals(scriptOpChoice)) -->Line_23 $$ if (!"none".equals(scriptOpChoice)) [ CD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_14 $$ Map<String, Object> ctx = new HashMap(2)[ CD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_83 $$ ctx.put("_ttl", originalTtl)[ FD ]
Line_48 $$ String operation = null-->Line_102 $$ if (operation == null || "index".equals(operation)) [ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_41 $$ assert request.versionType() == VersionType.FORCE[ FD ]
Line_53 $$ String routing = getResult.getFields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).getValue().toString() : null-->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_56 $$ IndexRequest indexRequest = request.doc()[ FD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_32 $$ indexRequest.index(request.index()).type(request.type()).id(request.id()).create(true).ttl(ttl).refresh(request.refresh()).routing(request.routing()).parent(request.parent()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_19 $$ ttl = getTTLFromScriptContext(ctx)-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_87 $$ Object fetchedTimestamp = ctx.get("_timestamp")[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_5 $$ if (!getResult.isExists()) [ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_32 $$ indexRequest.index(request.index()).type(request.type()).id(request.id()).create(true).ttl(ttl).refresh(request.refresh()).routing(request.routing()).parent(request.parent()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_53 $$ String routing = getResult.getFields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).getValue().toString() : null-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_48 $$ String operation = null-->Line_105 $$ if ("delete".equals(operation)) [ FD ]
Line_108 $$ if ("none".equals(operation)) -->Line_110 $$ update.setGetResult(extractGetResult(request, request.index(), getResult.getVersion(), updatedSourceAsMap, updateSourceContentType, getResult.internalSourceRef()))[ CD ]
Line_85 $$ ctx = executeScript(request, ctx)-->Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")[ FD ]
Line_74 $$ Long originalTtl = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null-->Line_83 $$ ctx.put("_ttl", originalTtl)[ FD ]
Line_105 $$ if ("delete".equals(operation)) -->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ CD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_83 $$ ctx.put("_ttl", originalTtl)[ CD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_81 $$ ctx.put("_parent", parent)[ FD ]
Line_19 $$ ttl = getTTLFromScriptContext(ctx)-->Line_32 $$ indexRequest.index(request.index()).type(request.type()).id(request.id()).create(true).ttl(ttl).refresh(request.refresh()).routing(request.routing()).parent(request.parent()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_53 $$ String routing = getResult.getFields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).getValue().toString() : null[ CD ]
Line_58 $$ if (indexRequest.ttl() != null) -->Line_59 $$ ttl = indexRequest.ttl()[ CD ]
Line_51 $$ final Map<String, Object> updatedSourceAsMap-->Line_68 $$ boolean noop = !XContentHelper.update(updatedSourceAsMap, indexRequest.sourceAsMap(), request.detectNoop())[ FD ]
Line_69 $$ if (request.detectNoop() && noop) -->Line_70 $$ operation = "none"[ CD ]
Line_91 $$ timestamp = originalTimestamp.toString()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_54 $$ String parent = getResult.getFields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).getValue().toString() : null-->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_39 $$ long updateVersion = getResult.getVersion()[ CD ]
Line_48 $$ String operation = null-->Line_113 $$ logger.warn("Used update operation [[ FD ]
Line_57 $$ updatedSourceAsMap = sourceAndContent.v2()-->Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_58 $$ if (indexRequest.ttl() != null) [ CD ]
Line_39 $$ long updateVersion = getResult.getVersion()-->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_85 $$ ctx = executeScript(request, ctx)-->Line_93 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()[ FD ]
Line_22 $$ if (!"create".equals(scriptOpChoice)) -->Line_27 $$ update.setGetResult(getResult)[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_52 $$ final XContentType updateSourceContentType = sourceAndContent.v1()[ CD ]
Line_54 $$ String parent = getResult.getFields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).getValue().toString() : null-->Line_66 $$ parent = indexRequest.parent()[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_86 $$ operation = (String) ctx.get("op")[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_54 $$ String parent = getResult.getFields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).getValue().toString() : null[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_86 $$ operation = (String) ctx.get("op")-->Line_113 $$ logger.warn("Used update operation [[ FD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_13 $$ Map<String, Object> upsertDoc = upsert.sourceAsMap()[ CD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_76 $$ ctx.put("_index", getResult.getIndex())[ CD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_81 $$ ctx.put("_parent", parent)[ FD ]
Line_57 $$ updatedSourceAsMap = sourceAndContent.v2()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_51 $$ final Map<String, Object> updatedSourceAsMap-->Line_57 $$ updatedSourceAsMap = sourceAndContent.v2()[ FD ]
Line_39 $$ long updateVersion = getResult.getVersion()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_88 $$ if (fetchedTimestamp != null) -->Line_90 $$ if (originalTimestamp != null) [ CD ]
Line_66 $$ parent = indexRequest.parent()-->Line_81 $$ ctx.put("_parent", parent)[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_93 $$ ttl = getTTLFromScriptContext(ctx)[ CD ]
Line_5 $$ if (!getResult.isExists()) -->Line_37 $$ return new Result(indexRequest, Operation.UPSERT, null, null)[ CD ]
Line_88 $$ if (fetchedTimestamp != null) -->Line_89 $$ timestamp = fetchedTimestamp.toString()[ CD ]
Line_65 $$ if (indexRequest.parent() != null) -->Line_66 $$ parent = indexRequest.parent()[ CD ]
Line_48 $$ String operation = null-->Line_86 $$ operation = (String) ctx.get("op")[ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_65 $$ if (indexRequest.parent() != null) [ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_76 $$ ctx.put("_index", getResult.getIndex())[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_76 $$ ctx.put("_index", getResult.getIndex())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_5 $$ if (!getResult.isExists()) [ FD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_93 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_40 $$ if (request.versionType() != VersionType.INTERNAL) -->Line_42 $$ updateVersion = request.version()[ CD ]
Line_22 $$ if (!"create".equals(scriptOpChoice)) -->Line_26 $$ UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), false)[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_53 $$ String routing = getResult.getFields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).getValue().toString() : null[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_68 $$ boolean noop = !XContentHelper.update(updatedSourceAsMap, indexRequest.sourceAsMap(), request.detectNoop())[ FD ]
Line_89 $$ timestamp = fetchedTimestamp.toString()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_17 $$ ctx = executeScript(request, ctx)[ FD ]
Line_96 $$ if (ttl == null) -->Line_98 $$ if (ttlAsLong != null) [ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_74 $$ Long originalTtl = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_81 $$ ctx.put("_parent", parent)[ CD ]
Line_86 $$ operation = (String) ctx.get("op")-->Line_102 $$ if (operation == null || "index".equals(operation)) [ FD ]
Line_42 $$ updateVersion = request.version()-->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_105 $$ if ("delete".equals(operation)) -->Line_108 $$ if ("none".equals(operation)) [ CD ]
Line_89 $$ timestamp = fetchedTimestamp.toString()-->Line_91 $$ timestamp = originalTimestamp.toString()[ FD ]
Line_59 $$ ttl = indexRequest.ttl()-->Line_99 $$ ttl = new TimeValue(ttlAsLong - TimeValue.nsecToMSec(System.nanoTime() - getDateNS))[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_27 $$ update.setGetResult(getResult)[ FD ]
Line_108 $$ if ("none".equals(operation)) -->Line_111 $$ return new Result(update, Operation.NONE, updatedSourceAsMap, updateSourceContentType)[ CD ]
Line_87 $$ Object fetchedTimestamp = ctx.get("_timestamp")-->Line_89 $$ timestamp = fetchedTimestamp.toString()[ FD ]
Line_61 $$ timestamp = indexRequest.timestamp()-->Line_91 $$ timestamp = originalTimestamp.toString()[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_84 $$ ctx.put("_source", sourceAndContent.v2())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_47 $$ Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(getResult.internalSourceRef(), true)[ CD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_21 $$ String scriptOpChoice = (String) ctx.get("op")[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_40 $$ if (request.versionType() != VersionType.INTERNAL) [ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_69 $$ if (request.detectNoop() && noop) [ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_85 $$ ctx = executeScript(request, ctx)[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_57 $$ updatedSourceAsMap = sourceAndContent.v2()[ CD ]
Line_53 $$ String routing = getResult.getFields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).getValue().toString() : null-->Line_80 $$ ctx.put("_routing", routing)[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_86 $$ operation = (String) ctx.get("op")[ FD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_99 $$ ttl = new TimeValue(ttlAsLong - TimeValue.nsecToMSec(System.nanoTime() - getDateNS))[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_109 $$ UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), false)[ FD ]
Line_63 $$ routing = indexRequest.routing()-->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_49 $$ String timestamp = null-->Line_61 $$ timestamp = indexRequest.timestamp()[ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_30 $$ indexRequest.source((Map) ctx.get("_source"))[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_34 $$ if (request.versionType() != VersionType.INTERNAL) [ FD ]
Line_23 $$ if (!"none".equals(scriptOpChoice)) -->Line_24 $$ logger.warn("Used upsert operation [[ CD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_22 $$ if (!"create".equals(scriptOpChoice)) [ CD ]
Line_96 $$ if (ttl == null) -->Line_97 $$ Long ttlAsLong = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null[ CD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_84 $$ ctx.put("_source", sourceAndContent.v2())[ FD ]
Line_13 $$ Map<String, Object> upsertDoc = upsert.sourceAsMap()-->Line_16 $$ ctx.put("_source", upsertDoc)[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_87 $$ Object fetchedTimestamp = ctx.get("_timestamp")[ FD ]
Line_66 $$ parent = indexRequest.parent()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_48 $$ String operation = null-->Line_70 $$ operation = "none"[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_79 $$ ctx.put("_version", getResult.getVersion())[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_79 $$ ctx.put("_version", getResult.getVersion())[ CD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_85 $$ ctx = executeScript(request, ctx)[ CD ]
Line_51 $$ final Map<String, Object> updatedSourceAsMap-->Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")[ FD ]
Line_42 $$ updateVersion = request.version()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_76 $$ ctx.put("_index", getResult.getIndex())[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")[ CD ]
Line_5 $$ if (!getResult.isExists()) -->Line_11 $$ if (request.scriptedUpsert() && request.script() != null) [ CD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_68 $$ boolean noop = !XContentHelper.update(updatedSourceAsMap, indexRequest.sourceAsMap(), request.detectNoop())[ CD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_18 $$ if (ttl == null) [ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_75 $$ Long originalTimestamp = getResult.getFields().containsKey(TimestampFieldMapper.NAME) ? (Long) getResult.field(TimestampFieldMapper.NAME).getValue() : null[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_80 $$ ctx.put("_routing", routing)[ CD ]
Line_61 $$ timestamp = indexRequest.timestamp()-->Line_89 $$ timestamp = fetchedTimestamp.toString()[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_17 $$ ctx = executeScript(request, ctx)[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_93 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_51 $$ final Map<String, Object> updatedSourceAsMap-->Line_110 $$ update.setGetResult(extractGetResult(request, request.index(), getResult.getVersion(), updatedSourceAsMap, updateSourceContentType, getResult.internalSourceRef()))[ FD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_30 $$ indexRequest.source((Map) ctx.get("_source"))[ CD ]
Line_75 $$ Long originalTimestamp = getResult.getFields().containsKey(TimestampFieldMapper.NAME) ? (Long) getResult.field(TimestampFieldMapper.NAME).getValue() : null-->Line_91 $$ timestamp = originalTimestamp.toString()[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_62 $$ if (indexRequest.routing() != null) [ CD ]
Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_30 $$ indexRequest.source((Map) ctx.get("_source"))[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_87 $$ Object fetchedTimestamp = ctx.get("_timestamp")[ FD ]
Line_52 $$ final XContentType updateSourceContentType = sourceAndContent.v1()-->Line_110 $$ update.setGetResult(extractGetResult(request, request.index(), getResult.getVersion(), updatedSourceAsMap, updateSourceContentType, getResult.internalSourceRef()))[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_102 $$ if (operation == null || "index".equals(operation)) [ CD ]
Line_47 $$ Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(getResult.internalSourceRef(), true)-->Line_57 $$ updatedSourceAsMap = sourceAndContent.v2()[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_84 $$ ctx.put("_source", sourceAndContent.v2())[ CD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_19 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_59 $$ ttl = indexRequest.ttl()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_86 $$ operation = (String) ctx.get("op")-->Line_105 $$ if ("delete".equals(operation)) [ FD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_12 $$ IndexRequest upsert = request.upsertRequest()[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_77 $$ ctx.put("_type", getResult.getType())[ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_66 $$ parent = indexRequest.parent()[ FD ]
Line_105 $$ if ("delete".equals(operation)) -->Line_107 $$ return new Result(deleteRequest, Operation.DELETE, updatedSourceAsMap, updateSourceContentType)[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_39 $$ long updateVersion = getResult.getVersion()[ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_68 $$ boolean noop = !XContentHelper.update(updatedSourceAsMap, indexRequest.sourceAsMap(), request.detectNoop())[ FD ]
Line_19 $$ ttl = getTTLFromScriptContext(ctx)-->Line_59 $$ ttl = indexRequest.ttl()[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_11 $$ if (request.scriptedUpsert() && request.script() != null) [ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_15 $$ ctx.put("op", "create")[ FD ]
Line_19 $$ ttl = getTTLFromScriptContext(ctx)-->Line_93 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_70 $$ operation = "none"-->Line_102 $$ if (operation == null || "index".equals(operation)) [ FD ]
Line_48 $$ String operation = null-->Line_108 $$ if ("none".equals(operation)) [ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_88 $$ if (fetchedTimestamp != null) [ CD ]
Line_26 $$ UpdateResponse update = new UpdateResponse(shardId, getResult.getType(), getResult.getId(), getResult.getVersion(), false)-->Line_110 $$ update.setGetResult(extractGetResult(request, request.index(), getResult.getVersion(), updatedSourceAsMap, updateSourceContentType, getResult.internalSourceRef()))[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_78 $$ ctx.put("_id", getResult.getId())[ CD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_32 $$ indexRequest.index(request.index()).type(request.type()).id(request.id()).create(true).ttl(ttl).refresh(request.refresh()).routing(request.routing()).parent(request.parent()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_77 $$ ctx.put("_type", getResult.getType())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_54 $$ String parent = getResult.getFields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).getValue().toString() : null[ FD ]
Line_34 $$ if (request.versionType() != VersionType.INTERNAL) -->Line_35 $$ indexRequest.version(request.version()).versionType(request.versionType())[ CD ]
Line_102 $$ if (operation == null || "index".equals(operation)) -->Line_104 $$ return new Result(indexRequest, Operation.INDEX, updatedSourceAsMap, updateSourceContentType)[ CD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_19 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_30 $$ indexRequest.source((Map) ctx.get("_source"))[ FD ]
Line_53 $$ String routing = getResult.getFields().containsKey(RoutingFieldMapper.NAME) ? getResult.field(RoutingFieldMapper.NAME).getValue().toString() : null-->Line_63 $$ routing = indexRequest.routing()[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_6 $$ if (request.upsertRequest() == null && !request.docAsUpsert()) [ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_77 $$ ctx.put("_type", getResult.getType())[ CD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_80 $$ ctx.put("_routing", routing)[ FD ]
Line_49 $$ String timestamp = null-->Line_89 $$ timestamp = fetchedTimestamp.toString()[ FD ]
Line_54 $$ String parent = getResult.getFields().containsKey(ParentFieldMapper.NAME) ? getResult.field(ParentFieldMapper.NAME).getValue().toString() : null-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_51 $$ final Map<String, Object> updatedSourceAsMap-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_75 $$ Long originalTimestamp = getResult.getFields().containsKey(TimestampFieldMapper.NAME) ? (Long) getResult.field(TimestampFieldMapper.NAME).getValue() : null[ CD ]
Line_102 $$ if (operation == null || "index".equals(operation)) -->Line_105 $$ if ("delete".equals(operation)) [ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_55 $$ if (request.script() == null && request.doc() != null) [ FD ]
Line_21 $$ String scriptOpChoice = (String) ctx.get("op")-->Line_23 $$ if (!"none".equals(scriptOpChoice)) [ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_3 $$ long getDateNS = System.nanoTime()[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_45 $$ throw new DocumentSourceMissingException(shardId, request.type(), request.id())[ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_61 $$ timestamp = indexRequest.timestamp()[ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_63 $$ routing = indexRequest.routing()[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_78 $$ ctx.put("_id", getResult.getId())[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_80 $$ ctx.put("_routing", routing)[ FD ]
Line_63 $$ routing = indexRequest.routing()-->Line_80 $$ ctx.put("_routing", routing)[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_82 $$ ctx.put("_timestamp", originalTimestamp)[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_79 $$ ctx.put("_version", getResult.getVersion())[ FD ]
Line_75 $$ Long originalTimestamp = getResult.getFields().containsKey(TimestampFieldMapper.NAME) ? (Long) getResult.field(TimestampFieldMapper.NAME).getValue() : null-->Line_82 $$ ctx.put("_timestamp", originalTimestamp)[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_12 $$ IndexRequest upsert = request.upsertRequest()[ FD ]
Line_98 $$ if (ttlAsLong != null) -->Line_99 $$ ttl = new TimeValue(ttlAsLong - TimeValue.nsecToMSec(System.nanoTime() - getDateNS))[ CD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_110 $$ update.setGetResult(extractGetResult(request, request.index(), getResult.getVersion(), updatedSourceAsMap, updateSourceContentType, getResult.internalSourceRef()))[ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_83 $$ ctx.put("_ttl", originalTtl)[ FD ]
Line_59 $$ ttl = indexRequest.ttl()-->Line_96 $$ if (ttl == null) [ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_35 $$ indexRequest.version(request.version()).versionType(request.versionType())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_78 $$ ctx.put("_id", getResult.getId())[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_78 $$ ctx.put("_id", getResult.getId())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_47 $$ Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(getResult.internalSourceRef(), true)[ FD ]
Line_61 $$ timestamp = indexRequest.timestamp()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_42 $$ updateVersion = request.version()[ FD ]
Line_63 $$ routing = indexRequest.routing()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_40 $$ if (request.versionType() != VersionType.INTERNAL) [ FD ]
Line_5 $$ if (!getResult.isExists()) -->Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()[ CD ]
Line_59 $$ ttl = indexRequest.ttl()-->Line_93 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_79 $$ ctx.put("_version", getResult.getVersion())[ FD ]
Line_47 $$ Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(getResult.internalSourceRef(), true)-->Line_52 $$ final XContentType updateSourceContentType = sourceAndContent.v1()[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_82 $$ ctx.put("_timestamp", originalTimestamp)[ FD ]
Line_47 $$ Tuple<XContentType, Map<String, Object>> sourceAndContent = XContentHelper.convertToMap(getResult.internalSourceRef(), true)-->Line_84 $$ ctx.put("_source", sourceAndContent.v2())[ FD ]
Line_5 $$ if (!getResult.isExists()) -->Line_32 $$ indexRequest.index(request.index()).type(request.type()).id(request.id()).create(true).ttl(ttl).refresh(request.refresh()).routing(request.routing()).parent(request.parent()).consistencyLevel(request.consistencyLevel())[ CD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_93 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_19 $$ ttl = getTTLFromScriptContext(ctx)-->Line_96 $$ if (ttl == null) [ FD ]
Line_9 $$ IndexRequest indexRequest = request.docAsUpsert() ? request.doc() : request.upsertRequest()-->Line_59 $$ ttl = indexRequest.ttl()[ FD ]
Line_2 $$ protected Result prepare(UpdateRequest request, final GetResult getResult) -->Line_106 $$ DeleteRequest deleteRequest = Requests.deleteRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel())[ FD ]
Line_87 $$ Object fetchedTimestamp = ctx.get("_timestamp")-->Line_88 $$ if (fetchedTimestamp != null) [ FD ]
Line_14 $$ Map<String, Object> ctx = new HashMap(2)-->Line_94 $$ updatedSourceAsMap = (Map<String, Object>) ctx.get("_source")[ FD ]
Line_12 $$ IndexRequest upsert = request.upsertRequest()-->Line_13 $$ Map<String, Object> upsertDoc = upsert.sourceAsMap()[ FD ]
Line_17 $$ ctx = executeScript(request, ctx)-->Line_77 $$ ctx.put("_type", getResult.getType())[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_56 $$ IndexRequest indexRequest = request.doc()[ CD ]
Line_93 $$ ttl = getTTLFromScriptContext(ctx)-->Line_99 $$ ttl = new TimeValue(ttlAsLong - TimeValue.nsecToMSec(System.nanoTime() - getDateNS))[ FD ]
Line_57 $$ updatedSourceAsMap = sourceAndContent.v2()-->Line_110 $$ update.setGetResult(extractGetResult(request, request.index(), getResult.getVersion(), updatedSourceAsMap, updateSourceContentType, getResult.internalSourceRef()))[ FD ]
Line_55 $$ if (request.script() == null && request.doc() != null) -->Line_74 $$ Long originalTtl = getResult.getFields().containsKey(TTLFieldMapper.NAME) ? (Long) getResult.field(TTLFieldMapper.NAME).getValue() : null[ CD ]
Line_85 $$ ctx = executeScript(request, ctx)-->Line_87 $$ Object fetchedTimestamp = ctx.get("_timestamp")[ FD ]
Line_68 $$ boolean noop = !XContentHelper.update(updatedSourceAsMap, indexRequest.sourceAsMap(), request.detectNoop())-->Line_69 $$ if (request.detectNoop() && noop) [ FD ]
Line_5 $$ if (!getResult.isExists()) -->Line_6 $$ if (request.upsertRequest() == null && !request.docAsUpsert()) [ CD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_16 $$ ctx.put("_source", upsertDoc)[ CD ]
Line_99 $$ ttl = new TimeValue(ttlAsLong - TimeValue.nsecToMSec(System.nanoTime() - getDateNS))-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_19 $$ ttl = getTTLFromScriptContext(ctx)[ FD ]
Line_10 $$ TimeValue ttl = indexRequest.ttl()-->Line_103 $$ final IndexRequest indexRequest = Requests.indexRequest(request.index()).type(request.type()).id(request.id()).routing(routing).parent(parent).source(updatedSourceAsMap, updateSourceContentType).version(updateVersion).versionType(request.versionType()).consistencyLevel(request.consistencyLevel()).timestamp(timestamp).ttl(ttl).refresh(request.refresh())[ FD ]
Line_11 $$ if (request.scriptedUpsert() && request.script() != null) -->Line_15 $$ ctx.put("op", "create")[ CD ]
Line_93 $$ ttl = getTTLFromScriptContext(ctx)-->Line_96 $$ if (ttl == null) [ FD ]
