Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_6 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_12 $$ for (RecoveryState recoveryState : recoveryResponse.shardRecoveryStates().get("test")) -->Line_20 $$ assertTrue("relocated from: " + recoveryState.getSourceNode() + " to: " + recoveryState.getTargetNode() + "-- \nbefore: \n" + state.prettyPrint() + "\nafter: \n" + afterState.prettyPrint(), recoveryState.getType() != RecoveryState.Type.RELOCATION)[ FD ]
Line_11 $$ RecoveryResponse recoveryResponse = client().admin().indices().prepareRecoveries("test").get()-->Line_12 $$ for (RecoveryState recoveryState : recoveryResponse.shardRecoveryStates().get("test")) [ FD ]
Line_10 $$ ClusterState state = client().admin().cluster().prepareState().get().getState()-->Line_13 $$ assertTrue("relocated from: " + recoveryState.getSourceNode() + " to: " + recoveryState.getTargetNode() + "\n" + state.prettyPrint(), recoveryState.getType() != RecoveryState.Type.RELOCATION)[ FD ]
Line_10 $$ ClusterState state = client().admin().cluster().prepareState().get().getState()-->Line_20 $$ assertTrue("relocated from: " + recoveryState.getSourceNode() + " to: " + recoveryState.getTargetNode() + "-- \nbefore: \n" + state.prettyPrint() + "\nafter: \n" + afterState.prettyPrint(), recoveryState.getType() != RecoveryState.Type.RELOCATION)[ FD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_10 $$ ClusterState state = client().admin().cluster().prepareState().get().getState()[ CD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_3 $$ internalCluster().startMasterOnlyNode(Settings.EMPTY)[ CD ]
Line_11 $$ RecoveryResponse recoveryResponse = client().admin().indices().prepareRecoveries("test").get()-->Line_18 $$ recoveryResponse = client().admin().indices().prepareRecoveries("test").get()[ FD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_17 $$ ClusterState afterState = client().admin().cluster().prepareState().get().getState()[ CD ]
Line_17 $$ ClusterState afterState = client().admin().cluster().prepareState().get().getState()-->Line_20 $$ assertTrue("relocated from: " + recoveryState.getSourceNode() + " to: " + recoveryState.getTargetNode() + "-- \nbefore: \n" + state.prettyPrint() + "\nafter: \n" + afterState.prettyPrint(), recoveryState.getType() != RecoveryState.Type.RELOCATION)[ FD ]
Line_6 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ client().prepareIndex("test", "type1", Long.toString(i)).setSource(MapBuilder.<String, Object>newMapBuilder().put("test", "value" + i).map()).execute().actionGet()[ CD ]
Line_11 $$ RecoveryResponse recoveryResponse = client().admin().indices().prepareRecoveries("test").get()-->Line_19 $$ for (RecoveryState recoveryState : recoveryResponse.shardRecoveryStates().get("test")) [ FD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_9 $$ ensureGreen()[ CD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_16 $$ ensureGreen()[ CD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_15 $$ internalCluster().restartRandomDataNode()[ CD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_5 $$ prepareCreate("test").setSettings(Settings.builder().put(IndexMetaData.SETTING_NUMBER_OF_SHARDS, "6").put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS, "0").put(UnassignedInfo.INDEX_DELAYED_NODE_LEFT_TIMEOUT_SETTING, TimeValue.timeValueMinutes(1))).get()[ CD ]
Line_6 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ client().prepareIndex("test", "type1", Long.toString(i)).setSource(MapBuilder.<String, Object>newMapBuilder().put("test", "value" + i).map()).execute().actionGet()[ FD ]
Line_18 $$ recoveryResponse = client().admin().indices().prepareRecoveries("test").get()-->Line_19 $$ for (RecoveryState recoveryState : recoveryResponse.shardRecoveryStates().get("test")) [ FD ]
Line_12 $$ for (RecoveryState recoveryState : recoveryResponse.shardRecoveryStates().get("test")) -->Line_13 $$ assertTrue("relocated from: " + recoveryState.getSourceNode() + " to: " + recoveryState.getTargetNode() + "\n" + state.prettyPrint(), recoveryState.getType() != RecoveryState.Type.RELOCATION)[ FD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_11 $$ RecoveryResponse recoveryResponse = client().admin().indices().prepareRecoveries("test").get()[ CD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_4 $$ internalCluster().startDataOnlyNodesAsync(3).get()[ CD ]
Line_2 $$ public void testNoRebalanceOnRollingRestart() throws Exception -->Line_18 $$ recoveryResponse = client().admin().indices().prepareRecoveries("test").get()[ CD ]
