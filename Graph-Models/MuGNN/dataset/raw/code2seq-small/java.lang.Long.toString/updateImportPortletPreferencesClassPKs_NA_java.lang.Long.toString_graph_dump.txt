Line_3 $$ String[] oldValues = portletPreferences.getValues(key, null)-->Line_4 $$ if (oldValues == null) [ FD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_4 $$ if (oldValues == null) [ CD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_8 $$ String[] newValues = new String[oldValues.length][ CD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_22 $$ sb.append(" in company group ")[ FD ]
Line_11 $$ String newValue = oldValue-->Line_29 $$ newValue = StringUtil.replace(newValue, uuid, newPrimaryKey.toString())[ FD ]
Line_13 $$ for (String uuid : uuids) -->Line_29 $$ newValue = StringUtil.replace(newValue, uuid, newPrimaryKey.toString())[ FD ]
Line_9 $$ for (int i = 0; i < oldValues.length; i++) -->Line_32 $$ newValues[i] = newValue[ CD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_23 $$ sb.append(companyGroupId)[ FD ]
Line_14 $$ Long newPrimaryKey = getImportPortletPreferencesNewPrimaryKey(portletDataContext, clazz, companyGroupId, primaryKeys, uuid)-->Line_15 $$ if (Validator.isNull(newPrimaryKey)) [ FD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_18 $$ sb.append("Unable to get primary key for ")[ CD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_24 $$ sb.append(" or in group ")[ FD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_19 $$ sb.append(clazz)[ FD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_25 $$ sb.append(portletDataContext.getScopeGroupId())[ FD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_7 $$ Map<Long, Long> primaryKeys = (Map<Long, Long>) portletDataContext.getNewPrimaryKeysMap(clazz)[ FD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_34 $$ portletPreferences.setValues(key, newValues)[ FD ]
Line_8 $$ String[] newValues = new String[oldValues.length]-->Line_34 $$ portletPreferences.setValues(key, newValues)[ FD ]
Line_29 $$ newValue = StringUtil.replace(newValue, uuid, newPrimaryKey.toString())-->Line_32 $$ newValues[i] = newValue[ FD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_3 $$ String[] oldValues = portletPreferences.getValues(key, null)[ FD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_21 $$ sb.append(uuid)[ CD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_21 $$ sb.append(uuid)[ FD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_22 $$ sb.append(" in company group ")[ CD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_26 $$ _log.warn(sb.toString())[ FD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_18 $$ sb.append("Unable to get primary key for ")[ FD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_25 $$ sb.append(portletDataContext.getScopeGroupId())[ FD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_23 $$ sb.append(companyGroupId)[ FD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_24 $$ sb.append(" or in group ")[ CD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_19 $$ sb.append(clazz)[ CD ]
Line_15 $$ if (Validator.isNull(newPrimaryKey)) -->Line_16 $$ if (_log.isWarnEnabled()) [ CD ]
Line_14 $$ Long newPrimaryKey = getImportPortletPreferencesNewPrimaryKey(portletDataContext, clazz, companyGroupId, primaryKeys, uuid)-->Line_29 $$ newValue = StringUtil.replace(newValue, uuid, newPrimaryKey.toString())[ FD ]
Line_13 $$ for (String uuid : uuids) -->Line_21 $$ sb.append(uuid)[ FD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_26 $$ _log.warn(sb.toString())[ CD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_34 $$ portletPreferences.setValues(key, newValues)[ CD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_9 $$ for (int i = 0; i < oldValues.length; i++) [ CD ]
Line_10 $$ String oldValue = oldValues[i]-->Line_12 $$ String[] uuids = StringUtil.split(oldValue)[ FD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_19 $$ sb.append(clazz)[ FD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_23 $$ sb.append(companyGroupId)[ CD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_7 $$ Map<Long, Long> primaryKeys = (Map<Long, Long>) portletDataContext.getNewPrimaryKeysMap(clazz)[ CD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_20 $$ sb.append(" with UUID ")[ CD ]
Line_15 $$ if (Validator.isNull(newPrimaryKey)) -->Line_29 $$ newValue = StringUtil.replace(newValue, uuid, newPrimaryKey.toString())[ CD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_3 $$ String[] oldValues = portletPreferences.getValues(key, null)[ CD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_17 $$ StringBundler sb = new StringBundler(8)[ CD ]
Line_13 $$ for (String uuid : uuids) -->Line_14 $$ Long newPrimaryKey = getImportPortletPreferencesNewPrimaryKey(portletDataContext, clazz, companyGroupId, primaryKeys, uuid)[ FD ]
Line_11 $$ String newValue = oldValue-->Line_32 $$ newValues[i] = newValue[ FD ]
Line_9 $$ for (int i = 0; i < oldValues.length; i++) -->Line_10 $$ String oldValue = oldValues[i][ CD ]
Line_2 $$ protected void updateImportPortletPreferencesClassPKs(PortletDataContext portletDataContext, PortletPreferences portletPreferences, String key, Class<?> clazz, long companyGroupId) throws Exception -->Line_14 $$ Long newPrimaryKey = getImportPortletPreferencesNewPrimaryKey(portletDataContext, clazz, companyGroupId, primaryKeys, uuid)[ FD ]
Line_4 $$ if (oldValues == null) -->Line_5 $$ return[ CD ]
Line_7 $$ Map<Long, Long> primaryKeys = (Map<Long, Long>) portletDataContext.getNewPrimaryKeysMap(clazz)-->Line_14 $$ Long newPrimaryKey = getImportPortletPreferencesNewPrimaryKey(portletDataContext, clazz, companyGroupId, primaryKeys, uuid)[ FD ]
Line_9 $$ for (int i = 0; i < oldValues.length; i++) -->Line_12 $$ String[] uuids = StringUtil.split(oldValue)[ CD ]
Line_9 $$ for (int i = 0; i < oldValues.length; i++) -->Line_11 $$ String newValue = oldValue[ CD ]
Line_16 $$ if (_log.isWarnEnabled()) -->Line_25 $$ sb.append(portletDataContext.getScopeGroupId())[ CD ]
Line_17 $$ StringBundler sb = new StringBundler(8)-->Line_20 $$ sb.append(" with UUID ")[ FD ]
