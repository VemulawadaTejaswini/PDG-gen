Line_4 $$ final CachingCommittedChangesProvider provider = cacheFile.getProvider()-->Line_14 $$ if (provider.refreshCacheByNumber()) [ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_6 $$ final Pair<Long, List<CommittedChangeList>> externalLists = myExternallyLoadedChangeLists.get(location.getKey())[ CD ]
Line_8 $$ if ((externalLists != null) && (latestChangeList == externalLists.first.longValue())) -->Line_10 $$ myExternallyLoadedChangeLists.clear()[ CD ]
Line_14 $$ if (provider.refreshCacheByNumber()) -->Line_17 $$ if (number >= 0) [ CD ]
Line_3 $$ final List<CommittedChangeList> newLists = new ArrayList<CommittedChangeList>()-->Line_32 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, newChanges))[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_5 $$ final RepositoryLocation location = cacheFile.getLocation()[ FD ]
Line_5 $$ final RepositoryLocation location = cacheFile.getLocation()-->Line_9 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, externalLists.second))[ FD ]
Line_13 $$ int maxCount = 0-->Line_21 $$ maxCount = myState.getInitialCount()[ FD ]
Line_5 $$ final RepositoryLocation location = cacheFile.getLocation()-->Line_32 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, newChanges))[ FD ]
Line_14 $$ if (provider.refreshCacheByNumber()) -->Line_16 $$ debug("Refreshing cache for " + location + " since #" + number)[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_14 $$ if (provider.refreshCacheByNumber()) [ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_7 $$ final long latestChangeList = getLatestListForFile(cacheFile)[ CD ]
Line_3 $$ final List<CommittedChangeList> newLists = new ArrayList<CommittedChangeList>()-->Line_9 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, externalLists.second))[ FD ]
Line_17 $$ if (number >= 0) -->Line_18 $$ defaultSettings.CHANGE_AFTER = Long.toString(number)[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_32 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, newChanges))[ CD ]
Line_14 $$ if (provider.refreshCacheByNumber()) -->Line_24 $$ final Date date = cacheFile.getLastCachedDate()[ CD ]
Line_15 $$ final long number = cacheFile.getLastCachedChangelist()-->Line_17 $$ if (number >= 0) [ FD ]
Line_5 $$ final RepositoryLocation location = cacheFile.getLocation()-->Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_32 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, newChanges))[ FD ]
Line_12 $$ final ChangeBrowserSettings defaultSettings = provider.createDefaultSettings()-->Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)[ FD ]
Line_13 $$ int maxCount = 0-->Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)[ FD ]
Line_8 $$ if ((externalLists != null) && (latestChangeList == externalLists.first.longValue())) -->Line_9 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, externalLists.second))[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_12 $$ final ChangeBrowserSettings defaultSettings = provider.createDefaultSettings()[ CD ]
Line_17 $$ if (number >= 0) -->Line_19 $$ defaultSettings.USE_CHANGE_AFTER_FILTER = true[ CD ]
Line_15 $$ final long number = cacheFile.getLastCachedChangelist()-->Line_18 $$ defaultSettings.CHANGE_AFTER = Long.toString(number)[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_13 $$ int maxCount = 0[ CD ]
Line_12 $$ final ChangeBrowserSettings defaultSettings = provider.createDefaultSettings()-->Line_26 $$ defaultSettings.setDateAfter(date)[ FD ]
Line_14 $$ if (provider.refreshCacheByNumber()) -->Line_15 $$ final long number = cacheFile.getLastCachedChangelist()[ CD ]
Line_21 $$ maxCount = myState.getInitialCount()-->Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_31 $$ debug("Loaded " + newChanges.size() + " new changelists")[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_3 $$ final List<CommittedChangeList> newLists = new ArrayList<CommittedChangeList>()[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_29 $$ defaultSettings.STRICTLY_AFTER = true[ CD ]
Line_17 $$ if (number >= 0) -->Line_21 $$ maxCount = myState.getInitialCount()[ CD ]
Line_14 $$ if (provider.refreshCacheByNumber()) -->Line_27 $$ defaultSettings.USE_DATE_AFTER_FILTER = true[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_8 $$ if ((externalLists != null) && (latestChangeList == externalLists.first.longValue())) [ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_4 $$ final CachingCommittedChangesProvider provider = cacheFile.getProvider()[ CD ]
Line_5 $$ final RepositoryLocation location = cacheFile.getLocation()-->Line_6 $$ final Pair<Long, List<CommittedChangeList>> externalLists = myExternallyLoadedChangeLists.get(location.getKey())[ FD ]
Line_14 $$ if (provider.refreshCacheByNumber()) -->Line_25 $$ debug("Refreshing cache for " + location + " since " + date)[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_7 $$ final long latestChangeList = getLatestListForFile(cacheFile)[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_15 $$ final long number = cacheFile.getLastCachedChangelist()[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_9 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, externalLists.second))[ FD ]
Line_14 $$ if (provider.refreshCacheByNumber()) -->Line_26 $$ defaultSettings.setDateAfter(date)[ CD ]
Line_24 $$ final Date date = cacheFile.getLastCachedDate()-->Line_26 $$ defaultSettings.setDateAfter(date)[ FD ]
Line_4 $$ final CachingCommittedChangesProvider provider = cacheFile.getProvider()-->Line_12 $$ final ChangeBrowserSettings defaultSettings = provider.createDefaultSettings()[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_33 $$ return newLists[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_5 $$ final RepositoryLocation location = cacheFile.getLocation()[ CD ]
Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)-->Line_32 $$ newLists.addAll(appendLoadedChanges(cacheFile, location, newChanges))[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_4 $$ final CachingCommittedChangesProvider provider = cacheFile.getProvider()[ FD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)[ CD ]
Line_2 $$ private List<CommittedChangeList> refreshCache(final ChangesCacheFile cacheFile) throws VcsException, IOException -->Line_24 $$ final Date date = cacheFile.getLastCachedDate()[ FD ]
Line_4 $$ final CachingCommittedChangesProvider provider = cacheFile.getProvider()-->Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)[ FD ]
Line_30 $$ final List<CommittedChangeList> newChanges = provider.getCommittedChanges(defaultSettings, location, maxCount)-->Line_31 $$ debug("Loaded " + newChanges.size() + " new changelists")[ FD ]
