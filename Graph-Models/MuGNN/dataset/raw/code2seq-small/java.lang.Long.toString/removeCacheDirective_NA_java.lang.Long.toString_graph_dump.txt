Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_22 $$ String idStr = "[ FD ]
Line_22 $$ String idStr = "-->Line_23 $$ logAuditEvent(success, "removeCacheDirective", idStr, null, null)[ FD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_27 $$ getEditLog().logSync()[ CD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_3 $$ checkOperation(OperationCategory.WRITE)[ CD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_16 $$ cacheManager.removeDirective(id, pc)[ FD ]
Line_18 $$ success = true-->Line_25 $$ RetryCache.setState(cacheEntry, success)[ FD ]
Line_9 $$ boolean success = false-->Line_25 $$ RetryCache.setState(cacheEntry, success)[ FD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_4 $$ final FSPermissionChecker pc = isPermissionEnabled ? getPermissionChecker() : null[ CD ]
Line_9 $$ boolean success = false-->Line_23 $$ logAuditEvent(success, "removeCacheDirective", idStr, null, null)[ FD ]
Line_6 $$ if (cacheEntry != null && cacheEntry.isSuccess()) -->Line_7 $$ return[ CD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_6 $$ if (cacheEntry != null && cacheEntry.isSuccess()) [ CD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_17 $$ getEditLog().logRemoveCacheDirectiveInfo(id, cacheEntry != null)[ FD ]
Line_5 $$ CacheEntry cacheEntry = RetryCache.waitForCompletion(retryCache)-->Line_6 $$ if (cacheEntry != null && cacheEntry.isSuccess()) [ FD ]
Line_4 $$ final FSPermissionChecker pc = isPermissionEnabled ? getPermissionChecker() : null-->Line_16 $$ cacheManager.removeDirective(id, pc)[ FD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_10 $$ writeLock()[ CD ]
Line_21 $$ if (isAuditEnabled() && isExternalInvocation()) -->Line_23 $$ logAuditEvent(success, "removeCacheDirective", idStr, null, null)[ CD ]
Line_21 $$ if (isAuditEnabled() && isExternalInvocation()) -->Line_22 $$ String idStr = "[ CD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_5 $$ CacheEntry cacheEntry = RetryCache.waitForCompletion(retryCache)[ CD ]
Line_9 $$ boolean success = false-->Line_18 $$ success = true[ FD ]
Line_2 $$ void removeCacheDirective(Long id) throws IOException -->Line_9 $$ boolean success = false[ CD ]
Line_18 $$ success = true-->Line_23 $$ logAuditEvent(success, "removeCacheDirective", idStr, null, null)[ FD ]
Line_5 $$ CacheEntry cacheEntry = RetryCache.waitForCompletion(retryCache)-->Line_25 $$ RetryCache.setState(cacheEntry, success)[ FD ]
