Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_16 $$ assertReadFields(cursor, tableMetadata.getColumns())[ FD ]
Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)-->Line_27 $$ assertEquals(cursor.getLong(columnIndex.get("typelong")), 1000 + rowId)[ FD ]
Line_5 $$ List<ColumnHandle> columnHandles = ImmutableList.copyOf(metadata.getColumnHandles(SESSION, tableHandle).values())-->Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)[ FD ]
Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)-->Line_25 $$ assertEquals(Bytes.toHexString(cursor.getSlice(columnIndex.get("typebytes")).getBytes()), String.format("0x%08X", rowId))[ FD ]
Line_23 $$ int rowId = Integer.parseInt(keyValue.substring(4))-->Line_28 $$ assertEquals(cursor.getSlice(columnIndex.get("typeuuid")).toStringUtf8(), String.format("00000000-0000-0000-0000-%012d", rowId))[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_32 $$ completedBytes = newCompletedBytes[ CD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_22 $$ assertTrue(keyValue.startsWith("key "))[ CD ]
Line_21 $$ String keyValue = cursor.getSlice(columnIndex.get("key")).toStringUtf8()-->Line_22 $$ assertTrue(keyValue.startsWith("key "))[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_20 $$ rowNumber++[ CD ]
Line_23 $$ int rowId = Integer.parseInt(keyValue.substring(4))-->Line_24 $$ assertEquals(keyValue, String.format("key %d", rowId))[ FD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_8 $$ List<ConnectorSplit> splits = getAllSplits(splitManager.getPartitionSplits(SESSION, tableHandle, partitionResult.getPartitions()))[ CD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_26 $$ assertEquals(cursor.getSlice(columnIndex.get("typeinteger")).toStringUtf8(), String.valueOf(rowId))[ CD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_29 $$ assertEquals(cursor.getSlice(columnIndex.get("typetimestamp")).toStringUtf8(), Long.valueOf(DATE.getTime()).toString())[ FD ]
Line_11 $$ CassandraSplit cassandraSplit = (CassandraSplit) split-->Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) [ FD ]
Line_5 $$ List<ColumnHandle> columnHandles = ImmutableList.copyOf(metadata.getColumnHandles(SESSION, tableHandle).values())-->Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) [ FD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_14 $$ while (cursor.advanceNextPosition()) [ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_28 $$ assertEquals(cursor.getSlice(columnIndex.get("typeuuid")).toStringUtf8(), String.format("00000000-0000-0000-0000-%012d", rowId))[ CD ]
Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)-->Line_29 $$ assertEquals(cursor.getSlice(columnIndex.get("typetimestamp")).toStringUtf8(), Long.valueOf(DATE.getTime()).toString())[ FD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_7 $$ ConnectorPartitionResult partitionResult = splitManager.getPartitions(SESSION, tableHandle, TupleDomain.<ColumnHandle>all())[ CD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_24 $$ assertEquals(keyValue, String.format("key %d", rowId))[ CD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_28 $$ assertEquals(cursor.getSlice(columnIndex.get("typeuuid")).toStringUtf8(), String.format("00000000-0000-0000-0000-%012d", rowId))[ FD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_9 $$ long rowNumber = 0[ CD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_5 $$ List<ColumnHandle> columnHandles = ImmutableList.copyOf(metadata.getColumnHandles(SESSION, tableHandle).values())[ CD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_36 $$ assertEquals(rowNumber, 9)[ CD ]
Line_23 $$ int rowId = Integer.parseInt(keyValue.substring(4))-->Line_25 $$ assertEquals(Bytes.toHexString(cursor.getSlice(columnIndex.get("typebytes")).getBytes()), String.format("0x%08X", rowId))[ FD ]
Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)-->Line_21 $$ String keyValue = cursor.getSlice(columnIndex.get("key")).toStringUtf8()[ FD ]
Line_12 $$ long completedBytes = 0-->Line_32 $$ completedBytes = newCompletedBytes[ FD ]
Line_3 $$ ConnectorTableHandle tableHandle = getTableHandle(table)-->Line_8 $$ List<ConnectorSplit> splits = getAllSplits(splitManager.getPartitionSplits(SESSION, tableHandle, partitionResult.getPartitions()))[ FD ]
Line_9 $$ long rowNumber = 0-->Line_20 $$ rowNumber++[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_21 $$ String keyValue = cursor.getSlice(columnIndex.get("key")).toStringUtf8()[ CD ]
Line_3 $$ ConnectorTableHandle tableHandle = getTableHandle(table)-->Line_4 $$ ConnectorTableMetadata tableMetadata = metadata.getTableMetadata(SESSION, tableHandle)[ FD ]
Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)-->Line_28 $$ assertEquals(cursor.getSlice(columnIndex.get("typeuuid")).toStringUtf8(), String.format("00000000-0000-0000-0000-%012d", rowId))[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_25 $$ assertEquals(Bytes.toHexString(cursor.getSlice(columnIndex.get("typebytes")).getBytes()), String.format("0x%08X", rowId))[ CD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_27 $$ assertEquals(cursor.getLong(columnIndex.get("typelong")), 1000 + rowId)[ FD ]
Line_4 $$ ConnectorTableMetadata tableMetadata = metadata.getTableMetadata(SESSION, tableHandle)-->Line_16 $$ assertReadFields(cursor, tableMetadata.getColumns())[ FD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_30 $$ long newCompletedBytes = cursor.getCompletedBytes()[ FD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_25 $$ assertEquals(Bytes.toHexString(cursor.getSlice(columnIndex.get("typebytes")).getBytes()), String.format("0x%08X", rowId))[ FD ]
Line_21 $$ String keyValue = cursor.getSlice(columnIndex.get("key")).toStringUtf8()-->Line_24 $$ assertEquals(keyValue, String.format("key %d", rowId))[ FD ]
Line_7 $$ ConnectorPartitionResult partitionResult = splitManager.getPartitions(SESSION, tableHandle, TupleDomain.<ColumnHandle>all())-->Line_8 $$ List<ConnectorSplit> splits = getAllSplits(splitManager.getPartitionSplits(SESSION, tableHandle, partitionResult.getPartitions()))[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_23 $$ int rowId = Integer.parseInt(keyValue.substring(4))[ CD ]
Line_21 $$ String keyValue = cursor.getSlice(columnIndex.get("key")).toStringUtf8()-->Line_23 $$ int rowId = Integer.parseInt(keyValue.substring(4))[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_27 $$ assertEquals(cursor.getLong(columnIndex.get("typelong")), 1000 + rowId)[ CD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_21 $$ String keyValue = cursor.getSlice(columnIndex.get("key")).toStringUtf8()[ FD ]
Line_13 $$ try (RecordCursor cursor = recordSetProvider.getRecordSet(SESSION, cassandraSplit, columnHandles).cursor()) -->Line_26 $$ assertEquals(cursor.getSlice(columnIndex.get("typeinteger")).toStringUtf8(), String.valueOf(rowId))[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_31 $$ assertTrue(newCompletedBytes >= completedBytes)[ CD ]
Line_9 $$ long rowNumber = 0-->Line_36 $$ assertEquals(rowNumber, 9)[ FD ]
Line_3 $$ ConnectorTableHandle tableHandle = getTableHandle(table)-->Line_5 $$ List<ColumnHandle> columnHandles = ImmutableList.copyOf(metadata.getColumnHandles(SESSION, tableHandle).values())[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_29 $$ assertEquals(cursor.getSlice(columnIndex.get("typetimestamp")).toStringUtf8(), Long.valueOf(DATE.getTime()).toString())[ CD ]
Line_23 $$ int rowId = Integer.parseInt(keyValue.substring(4))-->Line_26 $$ assertEquals(cursor.getSlice(columnIndex.get("typeinteger")).toStringUtf8(), String.valueOf(rowId))[ FD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_4 $$ ConnectorTableMetadata tableMetadata = metadata.getTableMetadata(SESSION, tableHandle)[ CD ]
Line_3 $$ ConnectorTableHandle tableHandle = getTableHandle(table)-->Line_7 $$ ConnectorPartitionResult partitionResult = splitManager.getPartitions(SESSION, tableHandle, TupleDomain.<ColumnHandle>all())[ FD ]
Line_30 $$ long newCompletedBytes = cursor.getCompletedBytes()-->Line_32 $$ completedBytes = newCompletedBytes[ FD ]
Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)-->Line_26 $$ assertEquals(cursor.getSlice(columnIndex.get("typeinteger")).toStringUtf8(), String.valueOf(rowId))[ FD ]
Line_14 $$ while (cursor.advanceNextPosition()) -->Line_30 $$ long newCompletedBytes = cursor.getCompletedBytes()[ CD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_6 $$ Map<String, Integer> columnIndex = indexColumns(columnHandles)[ CD ]
Line_2 $$ public void testGetRecords() throws Exception -->Line_3 $$ ConnectorTableHandle tableHandle = getTableHandle(table)[ CD ]
