Line_18 $$ TaskInfo mockTaskInfo = mock(TaskInfo.class)-->Line_20 $$ when(mockTaskInfo.getTaskId()).thenReturn(taskID)[ FD ]
Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()-->Line_33 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_KILLED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_33 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_KILLED)[ CD ]
Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()-->Line_34 $$ jobHistoryEvents.add(EventType.TASK_FAILED)[ FD ]
Line_23 $$ ArgumentCaptor<Event> arg = ArgumentCaptor.forClass(Event.class)-->Line_35 $$ recoveryChecker(recoverMapTask, TaskState.KILLED, finalAttemptStates, arg, jobHistoryEvents, 2L, 0L)[ FD ]
Line_6 $$ MapTaskImpl recoverMapTask = getMockMapTask(clusterTimestamp, mockEventHandler)-->Line_35 $$ recoveryChecker(recoverMapTask, TaskState.KILLED, finalAttemptStates, arg, jobHistoryEvents, 2L, 0L)[ FD ]
Line_5 $$ EventHandler mockEventHandler = mock(EventHandler.class)-->Line_24 $$ verify(mockEventHandler, atLeast(1)).handle((org.apache.hadoop.yarn.event.Event) arg.capture())[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_32 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_STARTED)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_18 $$ TaskInfo mockTaskInfo = mock(TaskInfo.class)[ CD ]
Line_4 $$ long clusterTimestamp = System.currentTimeMillis()-->Line_8 $$ JobID jobID = new JobID(Long.toString(clusterTimestamp), 1)[ FD ]
Line_25 $$ Map<TaskAttemptID, TaskAttemptState> finalAttemptStates = new HashMap<TaskAttemptID, TaskAttemptState>()-->Line_35 $$ recoveryChecker(recoverMapTask, TaskState.KILLED, finalAttemptStates, arg, jobHistoryEvents, 2L, 0L)[ FD ]
Line_18 $$ TaskInfo mockTaskInfo = mock(TaskInfo.class)-->Line_21 $$ when(mockTaskInfo.getAllTaskAttempts()).thenReturn(mockTaskAttempts)[ FD ]
Line_6 $$ MapTaskImpl recoverMapTask = getMockMapTask(clusterTimestamp, mockEventHandler)-->Line_7 $$ TaskId taskId = recoverMapTask.getID()[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_14 $$ TaskAttemptID taId2 = new TaskAttemptID(taskID, 1)[ CD ]
Line_14 $$ TaskAttemptID taId2 = new TaskAttemptID(taskID, 1)-->Line_15 $$ TaskAttemptInfo mockTAinfo2 = getMockTaskAttemptInfo(taId2, TaskAttemptState.KILLED)[ FD ]
Line_10 $$ Map<TaskAttemptID, TaskAttemptInfo> mockTaskAttempts = new HashMap<TaskAttemptID, TaskAttemptInfo>()-->Line_21 $$ when(mockTaskInfo.getAllTaskAttempts()).thenReturn(mockTaskAttempts)[ FD ]
Line_23 $$ ArgumentCaptor<Event> arg = ArgumentCaptor.forClass(Event.class)-->Line_24 $$ verify(mockEventHandler, atLeast(1)).handle((org.apache.hadoop.yarn.event.Event) arg.capture())[ FD ]
Line_10 $$ Map<TaskAttemptID, TaskAttemptInfo> mockTaskAttempts = new HashMap<TaskAttemptID, TaskAttemptInfo>()-->Line_16 $$ mockTaskAttempts.put(taId2, mockTAinfo2)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_27 $$ finalAttemptStates.put(taId2, TaskAttemptState.KILLED)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_15 $$ TaskAttemptInfo mockTAinfo2 = getMockTaskAttemptInfo(taId2, TaskAttemptState.KILLED)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_21 $$ when(mockTaskInfo.getAllTaskAttempts()).thenReturn(mockTaskAttempts)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_23 $$ ArgumentCaptor<Event> arg = ArgumentCaptor.forClass(Event.class)[ CD ]
Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()-->Line_29 $$ jobHistoryEvents.add(EventType.TASK_STARTED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_30 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_STARTED)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_35 $$ recoveryChecker(recoverMapTask, TaskState.KILLED, finalAttemptStates, arg, jobHistoryEvents, 2L, 0L)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_4 $$ long clusterTimestamp = System.currentTimeMillis()[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_17 $$ OutputCommitter mockCommitter = mock(OutputCommitter.class)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_26 $$ finalAttemptStates.put(taId1, TaskAttemptState.KILLED)[ CD ]
Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()-->Line_31 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_KILLED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_25 $$ Map<TaskAttemptID, TaskAttemptState> finalAttemptStates = new HashMap<TaskAttemptID, TaskAttemptState>()[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_22 $$ recoverMapTask.handle(new TaskRecoverEvent(taskId, mockTaskInfo, mockCommitter, true))[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_3 $$ LOG.info("--- START:  testRecoveryAllAttemptsKilled ---")[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_9 $$ TaskID taskID = new TaskID(jobID, org.apache.hadoop.mapreduce.TaskType.MAP, taskId.getId())[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_7 $$ TaskId taskId = recoverMapTask.getID()[ CD ]
Line_15 $$ TaskAttemptInfo mockTAinfo2 = getMockTaskAttemptInfo(taId2, TaskAttemptState.KILLED)-->Line_16 $$ mockTaskAttempts.put(taId2, mockTAinfo2)[ FD ]
Line_14 $$ TaskAttemptID taId2 = new TaskAttemptID(taskID, 1)-->Line_27 $$ finalAttemptStates.put(taId2, TaskAttemptState.KILLED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_31 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_KILLED)[ CD ]
Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()-->Line_32 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_STARTED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_34 $$ jobHistoryEvents.add(EventType.TASK_FAILED)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_13 $$ mockTaskAttempts.put(taId1, mockTAinfo1)[ CD ]
Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()-->Line_30 $$ jobHistoryEvents.add(EventType.MAP_ATTEMPT_STARTED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_24 $$ verify(mockEventHandler, atLeast(1)).handle((org.apache.hadoop.yarn.event.Event) arg.capture())[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_19 $$ when(mockTaskInfo.getTaskStatus()).thenReturn("KILLED")[ CD ]
Line_18 $$ TaskInfo mockTaskInfo = mock(TaskInfo.class)-->Line_19 $$ when(mockTaskInfo.getTaskStatus()).thenReturn("KILLED")[ FD ]
Line_25 $$ Map<TaskAttemptID, TaskAttemptState> finalAttemptStates = new HashMap<TaskAttemptID, TaskAttemptState>()-->Line_27 $$ finalAttemptStates.put(taId2, TaskAttemptState.KILLED)[ FD ]
Line_7 $$ TaskId taskId = recoverMapTask.getID()-->Line_9 $$ TaskID taskID = new TaskID(jobID, org.apache.hadoop.mapreduce.TaskType.MAP, taskId.getId())[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_5 $$ EventHandler mockEventHandler = mock(EventHandler.class)[ CD ]
Line_5 $$ EventHandler mockEventHandler = mock(EventHandler.class)-->Line_6 $$ MapTaskImpl recoverMapTask = getMockMapTask(clusterTimestamp, mockEventHandler)[ FD ]
Line_6 $$ MapTaskImpl recoverMapTask = getMockMapTask(clusterTimestamp, mockEventHandler)-->Line_22 $$ recoverMapTask.handle(new TaskRecoverEvent(taskId, mockTaskInfo, mockCommitter, true))[ FD ]
Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()-->Line_35 $$ recoveryChecker(recoverMapTask, TaskState.KILLED, finalAttemptStates, arg, jobHistoryEvents, 2L, 0L)[ FD ]
Line_14 $$ TaskAttemptID taId2 = new TaskAttemptID(taskID, 1)-->Line_16 $$ mockTaskAttempts.put(taId2, mockTAinfo2)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_29 $$ jobHistoryEvents.add(EventType.TASK_STARTED)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_6 $$ MapTaskImpl recoverMapTask = getMockMapTask(clusterTimestamp, mockEventHandler)[ CD ]
Line_11 $$ TaskAttemptID taId1 = new TaskAttemptID(taskID, 2)-->Line_12 $$ TaskAttemptInfo mockTAinfo1 = getMockTaskAttemptInfo(taId1, TaskAttemptState.KILLED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_12 $$ TaskAttemptInfo mockTAinfo1 = getMockTaskAttemptInfo(taId1, TaskAttemptState.KILLED)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_11 $$ TaskAttemptID taId1 = new TaskAttemptID(taskID, 2)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_10 $$ Map<TaskAttemptID, TaskAttemptInfo> mockTaskAttempts = new HashMap<TaskAttemptID, TaskAttemptInfo>()[ CD ]
Line_10 $$ Map<TaskAttemptID, TaskAttemptInfo> mockTaskAttempts = new HashMap<TaskAttemptID, TaskAttemptInfo>()-->Line_13 $$ mockTaskAttempts.put(taId1, mockTAinfo1)[ FD ]
Line_12 $$ TaskAttemptInfo mockTAinfo1 = getMockTaskAttemptInfo(taId1, TaskAttemptState.KILLED)-->Line_13 $$ mockTaskAttempts.put(taId1, mockTAinfo1)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_16 $$ mockTaskAttempts.put(taId2, mockTAinfo2)[ CD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_20 $$ when(mockTaskInfo.getTaskId()).thenReturn(taskID)[ CD ]
Line_25 $$ Map<TaskAttemptID, TaskAttemptState> finalAttemptStates = new HashMap<TaskAttemptID, TaskAttemptState>()-->Line_26 $$ finalAttemptStates.put(taId1, TaskAttemptState.KILLED)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_28 $$ List<EventType> jobHistoryEvents = new ArrayList<EventType>()[ CD ]
Line_11 $$ TaskAttemptID taId1 = new TaskAttemptID(taskID, 2)-->Line_26 $$ finalAttemptStates.put(taId1, TaskAttemptState.KILLED)[ FD ]
Line_4 $$ long clusterTimestamp = System.currentTimeMillis()-->Line_6 $$ MapTaskImpl recoverMapTask = getMockMapTask(clusterTimestamp, mockEventHandler)[ FD ]
Line_9 $$ TaskID taskID = new TaskID(jobID, org.apache.hadoop.mapreduce.TaskType.MAP, taskId.getId())-->Line_20 $$ when(mockTaskInfo.getTaskId()).thenReturn(taskID)[ FD ]
Line_2 $$ public void testRecoveryAllAttemptsKilled() -->Line_8 $$ JobID jobID = new JobID(Long.toString(clusterTimestamp), 1)[ CD ]
Line_11 $$ TaskAttemptID taId1 = new TaskAttemptID(taskID, 2)-->Line_13 $$ mockTaskAttempts.put(taId1, mockTAinfo1)[ FD ]
