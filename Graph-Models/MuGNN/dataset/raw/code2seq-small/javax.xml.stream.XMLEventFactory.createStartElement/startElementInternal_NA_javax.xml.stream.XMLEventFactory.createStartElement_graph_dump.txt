Line_3 $$ List<Attribute> attributes = getAttributes(atts)-->Line_5 $$ this.eventWriter.add(this.eventFactory.createStartElement(name, attributes.iterator(), namespaces.iterator()))[ FD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes atts, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_5 $$ this.eventWriter.add(this.eventFactory.createStartElement(name, attributes.iterator(), namespaces.iterator()))[ CD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes atts, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_4 $$ List<Namespace> namespaces = getNamespaces(namespaceMapping)[ CD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes atts, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_3 $$ List<Attribute> attributes = getAttributes(atts)[ CD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes atts, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_5 $$ this.eventWriter.add(this.eventFactory.createStartElement(name, attributes.iterator(), namespaces.iterator()))[ FD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes atts, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_4 $$ List<Namespace> namespaces = getNamespaces(namespaceMapping)[ FD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes atts, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_3 $$ List<Attribute> attributes = getAttributes(atts)[ FD ]
Line_4 $$ List<Namespace> namespaces = getNamespaces(namespaceMapping)-->Line_5 $$ this.eventWriter.add(this.eventFactory.createStartElement(name, attributes.iterator(), namespaces.iterator()))[ FD ]
