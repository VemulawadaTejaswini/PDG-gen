Line_14 $$ String ref = type-->Line_19 $$ return decorateTypeText(ref, variance)[ FD ]
Line_16 $$ ref += "[]"-->Line_19 $$ return decorateTypeText(ref, variance)[ FD ]
Line_15 $$ while (arrayCount > 0) -->Line_16 $$ ref += "[]"[ CD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_3 $$ char variance = parseVariance(signature)[ CD ]
Line_3 $$ char variance = parseVariance(signature)-->Line_4 $$ if (variance == '*') [ FD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_12 $$ final String type = parseTypeWithoutVariance(signature)[ FD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_10 $$ signature.next()[ FD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_3 $$ char variance = parseVariance(signature)[ FD ]
Line_7 $$ int arrayCount = 0-->Line_17 $$ arrayCount--[ FD ]
Line_8 $$ while (signature.current() == '[') -->Line_10 $$ signature.next()[ CD ]
Line_3 $$ char variance = parseVariance(signature)-->Line_5 $$ return decorateTypeText("*", variance)[ FD ]
Line_13 $$ if (type != null) -->Line_14 $$ String ref = type[ CD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_13 $$ if (type != null) [ CD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_8 $$ while (signature.current() == '[') [ CD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_7 $$ int arrayCount = 0[ CD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_12 $$ final String type = parseTypeWithoutVariance(signature)[ CD ]
Line_4 $$ if (variance == '*') -->Line_5 $$ return decorateTypeText("*", variance)[ CD ]
Line_14 $$ String ref = type-->Line_16 $$ ref += "[]"[ FD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_4 $$ if (variance == '*') [ CD ]
Line_13 $$ if (type != null) -->Line_15 $$ while (arrayCount > 0) [ CD ]
Line_15 $$ while (arrayCount > 0) -->Line_17 $$ arrayCount--[ CD ]
Line_2 $$ public static String parseClassOrTypeVariableElement(CharacterIterator signature) throws ClsFormatException -->Line_8 $$ while (signature.current() == '[') [ FD ]
Line_7 $$ int arrayCount = 0-->Line_9 $$ arrayCount++[ FD ]
Line_3 $$ char variance = parseVariance(signature)-->Line_19 $$ return decorateTypeText(ref, variance)[ FD ]
Line_7 $$ int arrayCount = 0-->Line_15 $$ while (arrayCount > 0) [ FD ]
Line_13 $$ if (type != null) -->Line_19 $$ return decorateTypeText(ref, variance)[ CD ]
Line_8 $$ while (signature.current() == '[') -->Line_9 $$ arrayCount++[ CD ]
Line_12 $$ final String type = parseTypeWithoutVariance(signature)-->Line_13 $$ if (type != null) [ FD ]
