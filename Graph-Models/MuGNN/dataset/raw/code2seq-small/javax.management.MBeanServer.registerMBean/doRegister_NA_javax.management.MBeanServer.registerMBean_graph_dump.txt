Line_3 $$ ObjectName actualObjectName-->Line_30 $$ actualObjectName = objectName[ FD ]
Line_30 $$ actualObjectName = objectName-->Line_32 $$ this.registeredBeans.add(actualObjectName)[ FD ]
Line_9 $$ if (this.registrationPolicy == RegistrationPolicy.IGNORE_EXISTING) -->Line_10 $$ if (logger.isDebugEnabled()) [ CD ]
Line_3 $$ ObjectName actualObjectName-->Line_34 $$ onRegister(actualObjectName, mbean)[ FD ]
Line_2 $$ protected void doRegister(Object mbean, ObjectName objectName) throws JMException -->Line_18 $$ this.server.unregisterMBean(objectName)[ FD ]
Line_5 $$ ObjectInstance registeredBean = null-->Line_7 $$ registeredBean = this.server.registerMBean(mbean, objectName)[ FD ]
Line_3 $$ ObjectName actualObjectName-->Line_32 $$ this.registeredBeans.add(actualObjectName)[ FD ]
Line_29 $$ if (actualObjectName == null) -->Line_30 $$ actualObjectName = objectName[ CD ]
Line_5 $$ ObjectInstance registeredBean = null-->Line_19 $$ registeredBean = this.server.registerMBean(mbean, objectName)[ FD ]
Line_7 $$ registeredBean = this.server.registerMBean(mbean, objectName)-->Line_19 $$ registeredBean = this.server.registerMBean(mbean, objectName)[ FD ]
Line_2 $$ protected void doRegister(Object mbean, ObjectName objectName) throws JMException -->Line_34 $$ onRegister(actualObjectName, mbean)[ FD ]
Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)-->Line_29 $$ if (actualObjectName == null) [ FD ]
Line_30 $$ actualObjectName = objectName-->Line_34 $$ onRegister(actualObjectName, mbean)[ FD ]
Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)-->Line_32 $$ this.registeredBeans.add(actualObjectName)[ FD ]
Line_7 $$ registeredBean = this.server.registerMBean(mbean, objectName)-->Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)[ FD ]
Line_2 $$ protected void doRegister(Object mbean, ObjectName objectName) throws JMException -->Line_30 $$ actualObjectName = objectName[ FD ]
Line_3 $$ ObjectName actualObjectName-->Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)[ FD ]
Line_9 $$ if (this.registrationPolicy == RegistrationPolicy.IGNORE_EXISTING) -->Line_13 $$ if (this.registrationPolicy == RegistrationPolicy.REPLACE_EXISTING) [ CD ]
Line_2 $$ protected void doRegister(Object mbean, ObjectName objectName) throws JMException -->Line_19 $$ registeredBean = this.server.registerMBean(mbean, objectName)[ FD ]
Line_2 $$ protected void doRegister(Object mbean, ObjectName objectName) throws JMException -->Line_3 $$ ObjectName actualObjectName[ CD ]
Line_10 $$ if (logger.isDebugEnabled()) -->Line_11 $$ logger.debug("Ignoring existing MBean at [" + objectName + "]")[ CD ]
Line_3 $$ ObjectName actualObjectName-->Line_29 $$ if (actualObjectName == null) [ FD ]
Line_15 $$ if (logger.isDebugEnabled()) -->Line_16 $$ logger.debug("Replacing existing MBean at [" + objectName + "]")[ CD ]
Line_5 $$ ObjectInstance registeredBean = null-->Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)[ FD ]
Line_19 $$ registeredBean = this.server.registerMBean(mbean, objectName)-->Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)[ FD ]
Line_2 $$ protected void doRegister(Object mbean, ObjectName objectName) throws JMException -->Line_7 $$ registeredBean = this.server.registerMBean(mbean, objectName)[ FD ]
Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)-->Line_30 $$ actualObjectName = objectName[ FD ]
Line_2 $$ protected void doRegister(Object mbean, ObjectName objectName) throws JMException -->Line_34 $$ onRegister(actualObjectName, mbean)[ CD ]
Line_28 $$ actualObjectName = (registeredBean != null ? registeredBean.getObjectName() : null)-->Line_34 $$ onRegister(actualObjectName, mbean)[ FD ]
