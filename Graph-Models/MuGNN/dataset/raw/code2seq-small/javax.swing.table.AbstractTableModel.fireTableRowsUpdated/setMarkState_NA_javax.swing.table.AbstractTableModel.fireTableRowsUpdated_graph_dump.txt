Line_12 $$ if (!newValue.equals(prevValue)) -->Line_13 $$ notifyElementMarked(element, newValue)[ CD ]
Line_2 $$ private void setMarkState(int[] rows, final S markState) -->Line_3 $$ if (rows == null || rows.length == 0) [ CD ]
Line_3 $$ if (rows == null || rows.length == 0) -->Line_4 $$ return[ CD ]
Line_9 $$ final T element = myElements.get(row)-->Line_11 $$ final S prevValue = myMarkedMap.put(element, newValue)[ FD ]
Line_2 $$ private void setMarkState(int[] rows, final S markState) -->Line_6 $$ int firstRow = Integer.MAX_VALUE[ CD ]
Line_9 $$ final T element = myElements.get(row)-->Line_10 $$ final S newValue = notNullMarkState(element, markState)[ FD ]
Line_6 $$ int firstRow = Integer.MAX_VALUE-->Line_18 $$ fireTableRowsUpdated(firstRow, lastRow)[ FD ]
Line_10 $$ final S newValue = notNullMarkState(element, markState)-->Line_13 $$ notifyElementMarked(element, newValue)[ FD ]
Line_2 $$ private void setMarkState(int[] rows, final S markState) -->Line_7 $$ int lastRow = Integer.MIN_VALUE[ CD ]
Line_10 $$ final S newValue = notNullMarkState(element, markState)-->Line_11 $$ final S prevValue = myMarkedMap.put(element, newValue)[ FD ]
Line_15 $$ firstRow = Math.min(firstRow, row)-->Line_18 $$ fireTableRowsUpdated(firstRow, lastRow)[ FD ]
Line_10 $$ final S newValue = notNullMarkState(element, markState)-->Line_12 $$ if (!newValue.equals(prevValue)) [ FD ]
Line_16 $$ lastRow = Math.max(lastRow, row)-->Line_18 $$ fireTableRowsUpdated(firstRow, lastRow)[ FD ]
Line_2 $$ private void setMarkState(int[] rows, final S markState) -->Line_18 $$ fireTableRowsUpdated(firstRow, lastRow)[ CD ]
Line_9 $$ final T element = myElements.get(row)-->Line_13 $$ notifyElementMarked(element, newValue)[ FD ]
Line_2 $$ private void setMarkState(int[] rows, final S markState) -->Line_10 $$ final S newValue = notNullMarkState(element, markState)[ FD ]
Line_8 $$ for (final int row : rows) -->Line_15 $$ firstRow = Math.min(firstRow, row)[ FD ]
Line_11 $$ final S prevValue = myMarkedMap.put(element, newValue)-->Line_12 $$ if (!newValue.equals(prevValue)) [ FD ]
Line_8 $$ for (final int row : rows) -->Line_9 $$ final T element = myElements.get(row)[ FD ]
Line_7 $$ int lastRow = Integer.MIN_VALUE-->Line_18 $$ fireTableRowsUpdated(firstRow, lastRow)[ FD ]
Line_8 $$ for (final int row : rows) -->Line_16 $$ lastRow = Math.max(lastRow, row)[ FD ]
Line_7 $$ int lastRow = Integer.MIN_VALUE-->Line_16 $$ lastRow = Math.max(lastRow, row)[ FD ]
Line_6 $$ int firstRow = Integer.MAX_VALUE-->Line_15 $$ firstRow = Math.min(firstRow, row)[ FD ]
