Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_26 $$ if (debug)[ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_5 $$ if (!find_recovery_config(debug)) [ FD ]
Line_11 $$ for (; ; ) -->Line_17 $$ if (lookahead[0].sym == EOF_sym()) [ CD ]
Line_5 $$ if (!find_recovery_config(debug)) -->Line_6 $$ if (debug)[ CD ]
Line_26 $$ if (debug)-->Line_27 $$ debug_message("# Parse-ahead ok, going back to normal parse")[ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_29 $$ return true[ CD ]
Line_12 $$ if (debug)-->Line_13 $$ debug_message("# Trying to parse ahead")[ CD ]
Line_6 $$ if (debug)-->Line_7 $$ debug_message("# Error recovery fails")[ CD ]
Line_11 $$ for (; ; ) -->Line_22 $$ if (debug)[ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_14 $$ if (try_parse_ahead(debug)) [ FD ]
Line_5 $$ if (!find_recovery_config(debug)) -->Line_8 $$ return false[ CD ]
Line_11 $$ for (; ; ) -->Line_12 $$ if (debug)[ CD ]
Line_18 $$ if (debug)-->Line_19 $$ debug_message("# Error recovery fails at EOF")[ CD ]
Line_11 $$ for (; ; ) -->Line_24 $$ restart_lookahead()[ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_10 $$ read_lookahead()[ CD ]
Line_17 $$ if (lookahead[0].sym == EOF_sym()) -->Line_18 $$ if (debug)[ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_28 $$ parse_lookahead(debug)[ FD ]
Line_3 $$ if (debug)-->Line_4 $$ debug_message("# Attempting error recovery")[ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_3 $$ if (debug)[ CD ]
Line_17 $$ if (lookahead[0].sym == EOF_sym()) -->Line_20 $$ return false[ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_28 $$ parse_lookahead(debug)[ CD ]
Line_22 $$ if (debug)-->Line_23 $$ debug_message("# Consuming Symbol #" + lookahead[0].sym)[ CD ]
Line_11 $$ for (; ; ) -->Line_14 $$ if (try_parse_ahead(debug)) [ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_5 $$ if (!find_recovery_config(debug)) [ CD ]
Line_2 $$ protected boolean error_recovery(boolean debug) throws java.lang.Exception -->Line_11 $$ for (; ; ) [ CD ]
