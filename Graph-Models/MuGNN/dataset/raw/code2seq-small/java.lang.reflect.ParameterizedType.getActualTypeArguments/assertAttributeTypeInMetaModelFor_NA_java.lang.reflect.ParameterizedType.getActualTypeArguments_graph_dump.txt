Line_6 $$ Type actualType = type.getActualTypeArguments()[1]-->Line_9 $$ actualType = getComponentType(actualType)[ FD ]
Line_6 $$ Type actualType = type.getActualTypeArguments()[1]-->Line_11 $$ assertEquals("Types do not match: " + buildErrorString(errorString, clazz), expectedType, actualType)[ FD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_11 $$ assertEquals("Types do not match: " + buildErrorString(errorString, clazz), expectedType, actualType)[ FD ]
Line_7 $$ if (expectedType.isArray()) -->Line_8 $$ expectedType = expectedType.getComponentType()[ CD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_7 $$ if (expectedType.isArray()) [ FD ]
Line_7 $$ if (expectedType.isArray()) -->Line_9 $$ actualType = getComponentType(actualType)[ CD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_3 $$ Field field = getFieldFromMetamodelFor(clazz, fieldName)[ CD ]
Line_8 $$ expectedType = expectedType.getComponentType()-->Line_11 $$ assertEquals("Types do not match: " + buildErrorString(errorString, clazz), expectedType, actualType)[ FD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_4 $$ assertNotNull("Cannot find field '" + fieldName + "' in " + clazz.getName(), field)[ FD ]
Line_3 $$ Field field = getFieldFromMetamodelFor(clazz, fieldName)-->Line_5 $$ ParameterizedType type = (ParameterizedType) field.getGenericType()[ FD ]
Line_3 $$ Field field = getFieldFromMetamodelFor(clazz, fieldName)-->Line_4 $$ assertNotNull("Cannot find field '" + fieldName + "' in " + clazz.getName(), field)[ FD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_8 $$ expectedType = expectedType.getComponentType()[ FD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_11 $$ assertEquals("Types do not match: " + buildErrorString(errorString, clazz), expectedType, actualType)[ CD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_4 $$ assertNotNull("Cannot find field '" + fieldName + "' in " + clazz.getName(), field)[ CD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_5 $$ ParameterizedType type = (ParameterizedType) field.getGenericType()[ CD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_3 $$ Field field = getFieldFromMetamodelFor(clazz, fieldName)[ FD ]
Line_5 $$ ParameterizedType type = (ParameterizedType) field.getGenericType()-->Line_6 $$ Type actualType = type.getActualTypeArguments()[1][ FD ]
Line_9 $$ actualType = getComponentType(actualType)-->Line_11 $$ assertEquals("Types do not match: " + buildErrorString(errorString, clazz), expectedType, actualType)[ FD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_6 $$ Type actualType = type.getActualTypeArguments()[1][ CD ]
Line_2 $$ public static void assertAttributeTypeInMetaModelFor(Class<?> clazz, String fieldName, Class<?> expectedType, String errorString) -->Line_7 $$ if (expectedType.isArray()) [ CD ]
