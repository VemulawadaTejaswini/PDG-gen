Line_6 $$ for (int i = 0; i < 2; i++) -->Line_7 $$ Object key = createValue(keyType, processedTypes)[ CD ]
Line_6 $$ for (int i = 0; i < 2; i++) -->Line_8 $$ Object value = createValue(valueType, processedTypes)[ CD ]
Line_6 $$ for (int i = 0; i < 2; i++) -->Line_9 $$ if (key != null && value != null) [ CD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_4 $$ Type valueType = type.getActualTypeArguments()[1][ FD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_13 $$ return map[ CD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_8 $$ Object value = createValue(valueType, processedTypes)[ FD ]
Line_9 $$ if (key != null && value != null) -->Line_10 $$ map.put(key, value)[ CD ]
Line_3 $$ Type keyType = type.getActualTypeArguments()[0]-->Line_7 $$ Object key = createValue(keyType, processedTypes)[ FD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_5 $$ final HashMap<Object, Object> map = new HashMap<Object, Object>()[ CD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_3 $$ Type keyType = type.getActualTypeArguments()[0][ FD ]
Line_5 $$ final HashMap<Object, Object> map = new HashMap<Object, Object>()-->Line_10 $$ map.put(key, value)[ FD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_6 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_8 $$ Object value = createValue(valueType, processedTypes)-->Line_10 $$ map.put(key, value)[ FD ]
Line_4 $$ Type valueType = type.getActualTypeArguments()[1]-->Line_8 $$ Object value = createValue(valueType, processedTypes)[ FD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_3 $$ Type keyType = type.getActualTypeArguments()[0][ CD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_7 $$ Object key = createValue(keyType, processedTypes)[ FD ]
Line_2 $$ private Object createMap(ParameterizedType type, FList<Type> processedTypes) throws Exception -->Line_4 $$ Type valueType = type.getActualTypeArguments()[1][ CD ]
Line_7 $$ Object key = createValue(keyType, processedTypes)-->Line_10 $$ map.put(key, value)[ FD ]
