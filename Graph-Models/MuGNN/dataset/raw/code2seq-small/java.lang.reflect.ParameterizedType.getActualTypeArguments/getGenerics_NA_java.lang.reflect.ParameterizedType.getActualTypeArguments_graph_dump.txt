Line_10 $$ if (this.type instanceof ParameterizedType) -->Line_13 $$ for (int i = 0; i < actualTypeArguments.length; i++) [ CD ]
Line_2 $$ public ResolvableType[] getGenerics() -->Line_21 $$ return this.generics[ CD ]
Line_7 $$ if (this.type instanceof Class) -->Line_9 $$ this.generics = forTypes(SerializableTypeWrapper.forTypeParameters(typeClass), this.variableResolver)[ CD ]
Line_8 $$ Class<?> typeClass = (Class<?>) this.type-->Line_9 $$ this.generics = forTypes(SerializableTypeWrapper.forTypeParameters(typeClass), this.variableResolver)[ FD ]
Line_10 $$ if (this.type instanceof ParameterizedType) -->Line_12 $$ ResolvableType[] generics = new ResolvableType[actualTypeArguments.length][ CD ]
Line_10 $$ if (this.type instanceof ParameterizedType) -->Line_11 $$ Type[] actualTypeArguments = ((ParameterizedType) this.type).getActualTypeArguments()[ CD ]
Line_10 $$ if (this.type instanceof ParameterizedType) -->Line_18 $$ this.generics = resolveType().getGenerics()[ CD ]
Line_3 $$ if (this == NONE) -->Line_4 $$ return EMPTY_TYPES_ARRAY[ CD ]
Line_10 $$ if (this.type instanceof ParameterizedType) -->Line_16 $$ this.generics = generics[ CD ]
Line_2 $$ public ResolvableType[] getGenerics() -->Line_3 $$ if (this == NONE) [ CD ]
Line_7 $$ if (this.type instanceof Class) -->Line_10 $$ if (this.type instanceof ParameterizedType) [ CD ]
Line_12 $$ ResolvableType[] generics = new ResolvableType[actualTypeArguments.length]-->Line_16 $$ this.generics = generics[ FD ]
Line_6 $$ if (this.generics == null) -->Line_7 $$ if (this.type instanceof Class) [ CD ]
Line_2 $$ public ResolvableType[] getGenerics() -->Line_6 $$ if (this.generics == null) [ CD ]
Line_7 $$ if (this.type instanceof Class) -->Line_8 $$ Class<?> typeClass = (Class<?>) this.type[ CD ]
Line_13 $$ for (int i = 0; i < actualTypeArguments.length; i++) -->Line_14 $$ generics[i] = forType(actualTypeArguments[i], this.variableResolver)[ CD ]
