Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_3 $$ Type membersInjectorType = key.getTypeLiteral().getType()[ CD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_7 $$ TypeLiteral<T> instanceType = (TypeLiteral<T>) TypeLiteral.get(((ParameterizedType) membersInjectorType).getActualTypeArguments()[0])[ CD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_3 $$ Type membersInjectorType = key.getTypeLiteral().getType()[ FD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_5 $$ throw errors.cannotInjectRawMembersInjector().toException()[ FD ]
Line_7 $$ TypeLiteral<T> instanceType = (TypeLiteral<T>) TypeLiteral.get(((ParameterizedType) membersInjectorType).getActualTypeArguments()[0])-->Line_8 $$ MembersInjector<T> membersInjector = membersInjectorStore.get(instanceType, errors)[ FD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_10 $$ return new InstanceBindingImpl(this, key, SourceProvider.UNKNOWN_SOURCE, factory, emptySet(), membersInjector)[ CD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_9 $$ InternalFactory<MembersInjector<T>> factory = new ConstantFactory(Initializables.of(membersInjector))[ CD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_8 $$ MembersInjector<T> membersInjector = membersInjectorStore.get(instanceType, errors)[ CD ]
Line_8 $$ MembersInjector<T> membersInjector = membersInjectorStore.get(instanceType, errors)-->Line_9 $$ InternalFactory<MembersInjector<T>> factory = new ConstantFactory(Initializables.of(membersInjector))[ FD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_4 $$ if (!(membersInjectorType instanceof ParameterizedType)) [ CD ]
Line_2 $$ private <T> BindingImpl<MembersInjector<T>> createMembersInjectorBinding(Key<MembersInjector<T>> key, Errors errors) throws ErrorsException -->Line_8 $$ MembersInjector<T> membersInjector = membersInjectorStore.get(instanceType, errors)[ FD ]
