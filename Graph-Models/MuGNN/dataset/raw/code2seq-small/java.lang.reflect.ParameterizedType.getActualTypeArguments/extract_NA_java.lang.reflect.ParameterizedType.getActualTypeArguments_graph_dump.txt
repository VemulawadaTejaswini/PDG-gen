Line_19 $$ ParameterizedType parameterizedSuperType = (ParameterizedType) superType-->Line_20 $$ if (!parameterizedSuperType.getRawType().equals(ModelMap.class)) [ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_19 $$ ParameterizedType parameterizedSuperType = (ParameterizedType) superType[ CD ]
Line_26 $$ proxyImpl = generatedImplementationTypes.get(modelType)-->Line_30 $$ extractionContext.found(getModelSchema(extractionContext, elementType, proxyImpl))[ FD ]
Line_19 $$ ParameterizedType parameterizedSuperType = (ParameterizedType) superType-->Line_23 $$ ModelType<?> elementType = ModelType.of(parameterizedSuperType.getActualTypeArguments()[0])[ FD ]
Line_8 $$ Class<?> contractType = (Class<?>) type-->Line_12 $$ if (contractType.getGenericInterfaces().length != 1) [ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_24 $$ Class<?> proxyImpl[ CD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_9 $$ if (!contractType.isInterface()) [ CD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_20 $$ if (!parameterizedSuperType.getRawType().equals(ModelMap.class)) [ CD ]
Line_8 $$ Class<?> contractType = (Class<?>) type-->Line_9 $$ if (!contractType.isInterface()) [ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_12 $$ if (contractType.getGenericInterfaces().length != 1) [ CD ]
Line_8 $$ Class<?> contractType = (Class<?>) type-->Line_15 $$ Type superType = contractType.getGenericInterfaces()[0][ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_5 $$ if (!(type instanceof Class)) [ CD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_3 $$ ModelType<T> modelType = extractionContext.getType()[ CD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_15 $$ Type superType = contractType.getGenericInterfaces()[0][ CD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_30 $$ extractionContext.found(getModelSchema(extractionContext, elementType, proxyImpl))[ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_3 $$ ModelType<T> modelType = extractionContext.getType()[ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_4 $$ Type type = modelType.getType()[ CD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_8 $$ Class<?> contractType = (Class<?>) type[ CD ]
Line_5 $$ if (!(type instanceof Class)) -->Line_6 $$ return[ CD ]
Line_3 $$ ModelType<T> modelType = extractionContext.getType()-->Line_26 $$ proxyImpl = generatedImplementationTypes.get(modelType)[ FD ]
Line_16 $$ if (!(superType instanceof ParameterizedType)) -->Line_17 $$ return[ CD ]
Line_24 $$ Class<?> proxyImpl-->Line_30 $$ extractionContext.found(getModelSchema(extractionContext, elementType, proxyImpl))[ FD ]
Line_3 $$ ModelType<T> modelType = extractionContext.getType()-->Line_4 $$ Type type = modelType.getType()[ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_23 $$ ModelType<?> elementType = ModelType.of(parameterizedSuperType.getActualTypeArguments()[0])[ CD ]
Line_20 $$ if (!parameterizedSuperType.getRawType().equals(ModelMap.class)) -->Line_21 $$ return[ CD ]
Line_24 $$ Class<?> proxyImpl-->Line_26 $$ proxyImpl = generatedImplementationTypes.get(modelType)[ FD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_30 $$ extractionContext.found(getModelSchema(extractionContext, elementType, proxyImpl))[ CD ]
Line_9 $$ if (!contractType.isInterface()) -->Line_10 $$ return[ CD ]
Line_23 $$ ModelType<?> elementType = ModelType.of(parameterizedSuperType.getActualTypeArguments()[0])-->Line_30 $$ extractionContext.found(getModelSchema(extractionContext, elementType, proxyImpl))[ FD ]
Line_12 $$ if (contractType.getGenericInterfaces().length != 1) -->Line_13 $$ return[ CD ]
Line_2 $$ public <T> void extract(ModelSchemaExtractionContext<T> extractionContext) -->Line_16 $$ if (!(superType instanceof ParameterizedType)) [ CD ]
