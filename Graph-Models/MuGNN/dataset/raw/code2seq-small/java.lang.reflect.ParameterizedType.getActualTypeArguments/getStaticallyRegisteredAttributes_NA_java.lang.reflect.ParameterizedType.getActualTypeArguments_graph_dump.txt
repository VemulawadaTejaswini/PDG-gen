Line_2 $$ private static Map<String, Pair<Type, Class>> getStaticallyRegisteredAttributes(final DomGenericInfo genericInfo) -->Line_3 $$ final Map<String, Pair<Type, Class>> map = new HashMap<String, Pair<Type, Class>>()[ CD ]
Line_8 $$ if (typeArguments.length == 1) -->Line_11 $$ Class<? extends Converter> converterType = null[ CD ]
Line_9 $$ String name = description.getXmlElementName()-->Line_16 $$ map.put(name.toLowerCase(Locale.US), new Pair<Type, Class>(attribType, converterType))[ FD ]
Line_8 $$ if (typeArguments.length == 1) -->Line_10 $$ final Type attribType = typeArguments[0][ CD ]
Line_8 $$ if (typeArguments.length == 1) -->Line_12 $$ final Convert converterAnnotation = description.getAnnotation(Convert.class)[ CD ]
Line_6 $$ if (type instanceof ParameterizedType) -->Line_8 $$ if (typeArguments.length == 1) [ CD ]
Line_4 $$ for (DomAttributeChildDescription description : genericInfo.getAttributeChildrenDescriptions()) -->Line_9 $$ String name = description.getXmlElementName()[ FD ]
Line_8 $$ if (typeArguments.length == 1) -->Line_13 $$ if (converterAnnotation != null) [ CD ]
Line_4 $$ for (DomAttributeChildDescription description : genericInfo.getAttributeChildrenDescriptions()) -->Line_5 $$ final Type type = description.getType()[ FD ]
Line_4 $$ for (DomAttributeChildDescription description : genericInfo.getAttributeChildrenDescriptions()) -->Line_12 $$ final Convert converterAnnotation = description.getAnnotation(Convert.class)[ FD ]
Line_12 $$ final Convert converterAnnotation = description.getAnnotation(Convert.class)-->Line_13 $$ if (converterAnnotation != null) [ FD ]
Line_2 $$ private static Map<String, Pair<Type, Class>> getStaticallyRegisteredAttributes(final DomGenericInfo genericInfo) -->Line_20 $$ return map[ CD ]
Line_5 $$ final Type type = description.getType()-->Line_6 $$ if (type instanceof ParameterizedType) [ FD ]
Line_3 $$ final Map<String, Pair<Type, Class>> map = new HashMap<String, Pair<Type, Class>>()-->Line_16 $$ map.put(name.toLowerCase(Locale.US), new Pair<Type, Class>(attribType, converterType))[ FD ]
Line_2 $$ private static Map<String, Pair<Type, Class>> getStaticallyRegisteredAttributes(final DomGenericInfo genericInfo) -->Line_4 $$ for (DomAttributeChildDescription description : genericInfo.getAttributeChildrenDescriptions()) [ FD ]
Line_6 $$ if (type instanceof ParameterizedType) -->Line_7 $$ final Type[] typeArguments = ((ParameterizedType) type).getActualTypeArguments()[ CD ]
Line_13 $$ if (converterAnnotation != null) -->Line_14 $$ converterType = converterAnnotation.value()[ CD ]
Line_12 $$ final Convert converterAnnotation = description.getAnnotation(Convert.class)-->Line_14 $$ converterType = converterAnnotation.value()[ FD ]
Line_8 $$ if (typeArguments.length == 1) -->Line_9 $$ String name = description.getXmlElementName()[ CD ]
Line_8 $$ if (typeArguments.length == 1) -->Line_16 $$ map.put(name.toLowerCase(Locale.US), new Pair<Type, Class>(attribType, converterType))[ CD ]
Line_11 $$ Class<? extends Converter> converterType = null-->Line_14 $$ converterType = converterAnnotation.value()[ FD ]
