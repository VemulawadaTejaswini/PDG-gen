Line_10 $$ if (serviceType instanceof Class) -->Line_15 $$ if (serviceClass.isAnnotation()) [ CD ]
Line_3 $$ if (serviceType instanceof ParameterizedType) -->Line_5 $$ List<TypeSpec> paramSpecs = new ArrayList<TypeSpec>()[ CD ]
Line_3 $$ if (serviceType instanceof ParameterizedType) -->Line_4 $$ ParameterizedType parameterizedType = (ParameterizedType) serviceType[ CD ]
Line_5 $$ List<TypeSpec> paramSpecs = new ArrayList<TypeSpec>()-->Line_7 $$ paramSpecs.add(toSpec(paramType))[ FD ]
Line_3 $$ if (serviceType instanceof ParameterizedType) -->Line_9 $$ return new ParameterizedTypeSpec(serviceType, toSpec(parameterizedType.getRawType()), paramSpecs)[ CD ]
Line_4 $$ ParameterizedType parameterizedType = (ParameterizedType) serviceType-->Line_6 $$ for (Type paramType : parameterizedType.getActualTypeArguments()) [ FD ]
Line_10 $$ if (serviceType instanceof Class) -->Line_18 $$ return new ClassSpec(serviceClass)[ CD ]
Line_2 $$ static TypeSpec toSpec(Type serviceType) -->Line_10 $$ if (serviceType instanceof Class) [ FD ]
Line_11 $$ Class<?> serviceClass = (Class<?>) serviceType-->Line_15 $$ if (serviceClass.isAnnotation()) [ FD ]
Line_2 $$ static TypeSpec toSpec(Type serviceType) -->Line_20 $$ throw new ServiceValidationException(String.format("Locating services with type %s is not supported.", format(serviceType)))[ FD ]
Line_4 $$ ParameterizedType parameterizedType = (ParameterizedType) serviceType-->Line_9 $$ return new ParameterizedTypeSpec(serviceType, toSpec(parameterizedType.getRawType()), paramSpecs)[ FD ]
Line_2 $$ static TypeSpec toSpec(Type serviceType) -->Line_3 $$ if (serviceType instanceof ParameterizedType) [ FD ]
Line_3 $$ if (serviceType instanceof ParameterizedType) -->Line_10 $$ if (serviceType instanceof Class) [ CD ]
Line_10 $$ if (serviceType instanceof Class) -->Line_11 $$ Class<?> serviceClass = (Class<?>) serviceType[ CD ]
Line_2 $$ static TypeSpec toSpec(Type serviceType) -->Line_3 $$ if (serviceType instanceof ParameterizedType) [ CD ]
Line_10 $$ if (serviceType instanceof Class) -->Line_12 $$ if (serviceClass.isArray()) [ CD ]
Line_11 $$ Class<?> serviceClass = (Class<?>) serviceType-->Line_12 $$ if (serviceClass.isArray()) [ FD ]
Line_6 $$ for (Type paramType : parameterizedType.getActualTypeArguments()) -->Line_7 $$ paramSpecs.add(toSpec(paramType))[ FD ]
