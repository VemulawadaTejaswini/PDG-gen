Line_12 $$ TypeLiteral<T> value = (TypeLiteral<T>) TypeLiteral.get(innerType)-->Line_13 $$ InternalFactory<TypeLiteral<T>> factory = new ConstantFactory(Initializables.of(value))[ FD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_3 $$ Type typeLiteralType = key.getTypeLiteral().getType()[ FD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_9 $$ if (!(innerType instanceof Class) && !(innerType instanceof GenericArrayType) && !(innerType instanceof ParameterizedType)) [ CD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_4 $$ if (!(typeLiteralType instanceof ParameterizedType)) [ CD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_8 $$ Type innerType = parameterizedType.getActualTypeArguments()[0][ CD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_3 $$ Type typeLiteralType = key.getTypeLiteral().getType()[ CD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_5 $$ throw errors.cannotInjectRawTypeLiteral().toException()[ FD ]
Line_8 $$ Type innerType = parameterizedType.getActualTypeArguments()[0]-->Line_10 $$ throw errors.cannotInjectTypeLiteralOf(innerType).toException()[ FD ]
Line_8 $$ Type innerType = parameterizedType.getActualTypeArguments()[0]-->Line_12 $$ TypeLiteral<T> value = (TypeLiteral<T>) TypeLiteral.get(innerType)[ FD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_14 $$ return new InstanceBindingImpl(this, key, SourceProvider.UNKNOWN_SOURCE, factory, emptySet(), value)[ CD ]
Line_7 $$ ParameterizedType parameterizedType = (ParameterizedType) typeLiteralType-->Line_8 $$ Type innerType = parameterizedType.getActualTypeArguments()[0][ FD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_10 $$ throw errors.cannotInjectTypeLiteralOf(innerType).toException()[ FD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_7 $$ ParameterizedType parameterizedType = (ParameterizedType) typeLiteralType[ CD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_13 $$ InternalFactory<TypeLiteral<T>> factory = new ConstantFactory(Initializables.of(value))[ CD ]
Line_2 $$ private <T> BindingImpl<TypeLiteral<T>> createTypeLiteralBinding(Key<TypeLiteral<T>> key, Errors errors) throws ErrorsException -->Line_12 $$ TypeLiteral<T> value = (TypeLiteral<T>) TypeLiteral.get(innerType)[ CD ]
