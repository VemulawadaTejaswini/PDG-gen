Line_3 $$ if (serviceType instanceof ParameterizedType) -->Line_4 $$ ParameterizedType parameterizedType = (ParameterizedType) serviceType[ CD ]
Line_6 $$ final Type typeArg = parameterizedType.getActualTypeArguments()[0]-->Line_7 $$ if (typeArg instanceof Class) [ FD ]
Line_25 $$ if (wildcardType.getLowerBounds().length == 0 && wildcardType.getUpperBounds().length == 1) -->Line_26 $$ if (wildcardType.getUpperBounds()[0] instanceof Class) [ CD ]
Line_5 $$ if (parameterizedType.getRawType().equals(Factory.class)) -->Line_14 $$ if (typeArg instanceof WildcardType) [ CD ]
Line_2 $$ private static BiFunction<ServiceProvider, LookupContext, Provider> createServiceProviderFactory(final Type serviceType) -->Line_37 $$ final TypeSpec serviceTypeSpec = toSpec(serviceType)[ CD ]
Line_3 $$ if (serviceType instanceof ParameterizedType) -->Line_5 $$ if (parameterizedType.getRawType().equals(Factory.class)) [ CD ]
Line_8 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_10 $$ return provider.getFactory(lookupContext, (Class) typeArg)[ CD ]
Line_2 $$ private static BiFunction<ServiceProvider, LookupContext, Provider> createServiceProviderFactory(final Type serviceType) -->Line_3 $$ if (serviceType instanceof ParameterizedType) [ FD ]
Line_27 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_29 $$ return provider.getFactory(lookupContext, (Class<?>) wildcardType.getUpperBounds()[0])[ CD ]
Line_18 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_40 $$ return provider.getService(lookupContext, serviceTypeSpec)[ FD ]
Line_8 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_40 $$ return provider.getService(lookupContext, serviceTypeSpec)[ FD ]
Line_4 $$ ParameterizedType parameterizedType = (ParameterizedType) serviceType-->Line_6 $$ final Type typeArg = parameterizedType.getActualTypeArguments()[0][ FD ]
Line_38 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_40 $$ return provider.getService(lookupContext, serviceTypeSpec)[ CD ]
Line_7 $$ if (typeArg instanceof Class) -->Line_8 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() [ CD ]
Line_18 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_29 $$ return provider.getFactory(lookupContext, (Class<?>) wildcardType.getUpperBounds()[0])[ FD ]
Line_14 $$ if (typeArg instanceof WildcardType) -->Line_25 $$ if (wildcardType.getLowerBounds().length == 0 && wildcardType.getUpperBounds().length == 1) [ CD ]
Line_26 $$ if (wildcardType.getUpperBounds()[0] instanceof Class) -->Line_27 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() [ CD ]
Line_14 $$ if (typeArg instanceof WildcardType) -->Line_16 $$ if (wildcardType.getLowerBounds().length == 1 && wildcardType.getUpperBounds().length == 1) [ CD ]
Line_38 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_40 $$ return provider.getService(lookupContext, serviceTypeSpec)[ FD ]
Line_8 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_20 $$ return provider.getFactory(lookupContext, (Class<?>) wildcardType.getLowerBounds()[0])[ FD ]
Line_2 $$ private static BiFunction<ServiceProvider, LookupContext, Provider> createServiceProviderFactory(final Type serviceType) -->Line_37 $$ final TypeSpec serviceTypeSpec = toSpec(serviceType)[ FD ]
Line_5 $$ if (parameterizedType.getRawType().equals(Factory.class)) -->Line_6 $$ final Type typeArg = parameterizedType.getActualTypeArguments()[0][ CD ]
Line_27 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_29 $$ return provider.getFactory(lookupContext, (Class<?>) wildcardType.getUpperBounds()[0])[ FD ]
Line_18 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_20 $$ return provider.getFactory(lookupContext, (Class<?>) wildcardType.getLowerBounds()[0])[ CD ]
Line_8 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_10 $$ return provider.getFactory(lookupContext, (Class) typeArg)[ FD ]
Line_18 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_20 $$ return provider.getFactory(lookupContext, (Class<?>) wildcardType.getLowerBounds()[0])[ FD ]
Line_8 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_29 $$ return provider.getFactory(lookupContext, (Class<?>) wildcardType.getUpperBounds()[0])[ FD ]
Line_2 $$ private static BiFunction<ServiceProvider, LookupContext, Provider> createServiceProviderFactory(final Type serviceType) -->Line_38 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() [ CD ]
Line_4 $$ ParameterizedType parameterizedType = (ParameterizedType) serviceType-->Line_5 $$ if (parameterizedType.getRawType().equals(Factory.class)) [ FD ]
Line_6 $$ final Type typeArg = parameterizedType.getActualTypeArguments()[0]-->Line_14 $$ if (typeArg instanceof WildcardType) [ FD ]
Line_2 $$ private static BiFunction<ServiceProvider, LookupContext, Provider> createServiceProviderFactory(final Type serviceType) -->Line_3 $$ if (serviceType instanceof ParameterizedType) [ CD ]
Line_27 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() -->Line_40 $$ return provider.getService(lookupContext, serviceTypeSpec)[ FD ]
Line_5 $$ if (parameterizedType.getRawType().equals(Factory.class)) -->Line_7 $$ if (typeArg instanceof Class) [ CD ]
Line_16 $$ if (wildcardType.getLowerBounds().length == 1 && wildcardType.getUpperBounds().length == 1) -->Line_17 $$ if (wildcardType.getLowerBounds()[0] instanceof Class && wildcardType.getUpperBounds()[0].equals(Object.class)) [ CD ]
Line_17 $$ if (wildcardType.getLowerBounds()[0] instanceof Class && wildcardType.getUpperBounds()[0].equals(Object.class)) -->Line_18 $$ return new BiFunction<ServiceProvider, LookupContext, Provider>() [ CD ]
