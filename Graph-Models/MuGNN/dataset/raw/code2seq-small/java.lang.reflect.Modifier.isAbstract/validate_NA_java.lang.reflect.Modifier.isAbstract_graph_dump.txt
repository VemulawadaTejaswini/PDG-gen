Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_4 $$ throw new AopConfigException("[" + aspectClass.getName() + "] cannot extend concrete aspect [" + aspectClass.getSuperclass().getName() + "]")[ FD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_10 $$ if (ajType.getPerClause().getKind() == PerClauseKind.PERCFLOW) [ CD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_13 $$ if (ajType.getPerClause().getKind() == PerClauseKind.PERCFLOWBELOW) [ CD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_14 $$ throw new AopConfigException(aspectClass.getName() + " uses percflowbelow instantiation model: " + "This is not supported in Spring AOP.")[ FD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_3 $$ if (aspectClass.getSuperclass().getAnnotation(Aspect.class) != null && !Modifier.isAbstract(aspectClass.getSuperclass().getModifiers())) [ FD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_11 $$ throw new AopConfigException(aspectClass.getName() + " uses percflow instantiation model: " + "This is not supported in Spring AOP.")[ FD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_3 $$ if (aspectClass.getSuperclass().getAnnotation(Aspect.class) != null && !Modifier.isAbstract(aspectClass.getSuperclass().getModifiers())) [ CD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_6 $$ AjType<?> ajType = AjTypeSystem.getAjType(aspectClass)[ CD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_7 $$ if (!ajType.isAspect()) [ CD ]
Line_6 $$ AjType<?> ajType = AjTypeSystem.getAjType(aspectClass)-->Line_13 $$ if (ajType.getPerClause().getKind() == PerClauseKind.PERCFLOWBELOW) [ FD ]
Line_2 $$ public void validate(Class<?> aspectClass) throws AopConfigException -->Line_6 $$ AjType<?> ajType = AjTypeSystem.getAjType(aspectClass)[ FD ]
Line_6 $$ AjType<?> ajType = AjTypeSystem.getAjType(aspectClass)-->Line_7 $$ if (!ajType.isAspect()) [ FD ]
Line_6 $$ AjType<?> ajType = AjTypeSystem.getAjType(aspectClass)-->Line_10 $$ if (ajType.getPerClause().getKind() == PerClauseKind.PERCFLOW) [ FD ]
