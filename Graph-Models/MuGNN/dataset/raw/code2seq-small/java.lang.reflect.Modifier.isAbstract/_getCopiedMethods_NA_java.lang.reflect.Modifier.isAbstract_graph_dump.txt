Line_4 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_6 $$ if (!Modifier.isAbstract(method.getModifiers()) && name.startsWith("copy") && (method.getAnnotation(Id.class) == null) && (method.getAnnotation(Proxy.class) == null)) [ FD ]
Line_2 $$ private List<Method> _getCopiedMethods(Class<?> clazz) -->Line_4 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) [ FD ]
Line_4 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_7 $$ emptyMethods.add(method)[ FD ]
Line_4 $$ for (Method method : ReflectionUtil.getVisibleMethods(clazz)) -->Line_5 $$ String name = method.getName()[ FD ]
Line_2 $$ private List<Method> _getCopiedMethods(Class<?> clazz) -->Line_10 $$ return emptyMethods[ CD ]
Line_5 $$ String name = method.getName()-->Line_6 $$ if (!Modifier.isAbstract(method.getModifiers()) && name.startsWith("copy") && (method.getAnnotation(Id.class) == null) && (method.getAnnotation(Proxy.class) == null)) [ FD ]
Line_2 $$ private List<Method> _getCopiedMethods(Class<?> clazz) -->Line_3 $$ List<Method> emptyMethods = new ArrayList()[ CD ]
Line_3 $$ List<Method> emptyMethods = new ArrayList()-->Line_7 $$ emptyMethods.add(method)[ FD ]
Line_6 $$ if (!Modifier.isAbstract(method.getModifiers()) && name.startsWith("copy") && (method.getAnnotation(Id.class) == null) && (method.getAnnotation(Proxy.class) == null)) -->Line_7 $$ emptyMethods.add(method)[ CD ]
