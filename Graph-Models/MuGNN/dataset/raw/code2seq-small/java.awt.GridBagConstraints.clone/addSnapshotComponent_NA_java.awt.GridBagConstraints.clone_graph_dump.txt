Line_37 $$ if (curWidth <= 0) -->Line_39 $$ if (curWidth < 1) [ CD ]
Line_28 $$ px = 0-->Line_30 $$ px = Math.max(px, mySnapshotXMax[i])[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_81 $$ component.getConstraints().setRowSpan(curHeight)[ CD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_52 $$ if (curWidth <= 0) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_10 $$ int px[ CD ]
Line_5 $$ final GridBagConstraints constraints = gridBag.getConstraints(child)-->Line_96 $$ component.getConstraints().setFill(convertFill(constraints))[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_90 $$ component.getConstraints().setVSizePolicy(0)[ FD ]
Line_32 $$ curX = px - curX - 1-->Line_38 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_48 $$ if (curY < 0) [ FD ]
Line_25 $$ curHeight = 1-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_67 $$ for (int i = curY; i < (curY + curHeight); i++) [ CD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_11 $$ int py[ CD ]
Line_25 $$ curHeight = 1-->Line_58 $$ if (curHeight <= 0) [ FD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_60 $$ if (curHeight < 1) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_9 $$ int curHeight = constraints.gridheight[ CD ]
Line_7 $$ int curY = constraints.gridy-->Line_36 $$ if (curY < 0) [ FD ]
Line_34 $$ curX = 0-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_59 $$ curHeight += gridBagSize.height - curY-->Line_81 $$ component.getConstraints().setRowSpan(curHeight)[ FD ]
Line_18 $$ curY = 0-->Line_48 $$ if (curY < 0) [ FD ]
Line_53 $$ curWidth += gridBagSize.width - curX-->Line_54 $$ if (curWidth < 1) [ FD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_53 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_34 $$ curX = 0-->Line_53 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_47 $$ curY = py - curY - 1[ FD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_78 $$ component.getConstraints().setColumn(curX)[ FD ]
Line_25 $$ curHeight = 1-->Line_81 $$ component.getConstraints().setRowSpan(curHeight)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_83 $$ component.getConstraints().setHSizePolicy(GridConstraints.SIZEPOLICY_CAN_GROW | GridConstraints.SIZEPOLICY_WANT_GROW)[ FD ]
Line_13 $$ if (myLastSnapshotRow >= 0) -->Line_14 $$ curY = myLastSnapshotRow[ CD ]
Line_6 $$ int curX = constraints.gridx-->Line_16 $$ curX = myLastSnapshotCol[ FD ]
Line_7 $$ int curY = constraints.gridy-->Line_14 $$ curY = myLastSnapshotRow[ FD ]
Line_4 $$ GridBagLayout gridBag = (GridBagLayout) parent.getLayout()-->Line_5 $$ final GridBagConstraints constraints = gridBag.getConstraints(child)[ FD ]
Line_58 $$ if (curHeight <= 0) -->Line_60 $$ if (curHeight < 1) [ CD ]
Line_18 $$ curY = 0-->Line_47 $$ curY = py - curY - 1[ FD ]
Line_87 $$ if (constraints.weighty >= 1.0) -->Line_90 $$ component.getConstraints().setVSizePolicy(0)[ CD ]
Line_49 $$ curY = 0-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_18 $$ curY = 0-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_40 $$ curWidth = 1-->Line_52 $$ if (curWidth <= 0) [ FD ]
Line_18 $$ curY = 0-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_23 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_8 $$ int curWidth = constraints.gridwidth[ CD ]
Line_29 $$ for (int i = curY; i < (curY + curHeight); i++) -->Line_64 $$ for (int i = curX; i < (curX + curWidth); i++) [ FD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_58 $$ if (curHeight <= 0) [ FD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_54 $$ if (curWidth < 1) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_87 $$ if (constraints.weighty >= 1.0) [ CD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_40 $$ curWidth = 1[ FD ]
Line_13 $$ if (myLastSnapshotRow >= 0) -->Line_15 $$ if (myLastSnapshotCol >= 0) [ CD ]
Line_52 $$ if (curWidth <= 0) -->Line_53 $$ curWidth += gridBagSize.width - curX[ CD ]
Line_61 $$ curHeight = 1-->Line_81 $$ component.getConstraints().setRowSpan(curHeight)[ FD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_52 $$ if (curWidth <= 0) [ FD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_25 $$ curHeight = 1[ FD ]
Line_15 $$ if (myLastSnapshotCol >= 0) -->Line_16 $$ curX = myLastSnapshotCol[ CD ]
Line_7 $$ int curY = constraints.gridy-->Line_79 $$ component.getConstraints().setRow(curY)[ FD ]
Line_22 $$ if (curHeight <= 0) -->Line_24 $$ if (curHeight < 1) [ CD ]
Line_7 $$ int curY = constraints.gridy-->Line_47 $$ curY = py - curY - 1[ FD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_61 $$ curHeight = 1[ FD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_39 $$ if (curWidth < 1) [ FD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_97 $$ component.setCustomLayoutConstraints(constraints.clone())[ CD ]
Line_22 $$ if (curHeight <= 0) -->Line_23 $$ curHeight += gridBagSize.height - curY[ CD ]
Line_36 $$ if (curY < 0) -->Line_37 $$ if (curWidth <= 0) [ CD ]
Line_29 $$ for (int i = curY; i < (curY + curHeight); i++) -->Line_44 $$ for (int i = curX; i < (curX + curWidth); i++) [ FD ]
Line_21 $$ if (curX < 0) -->Line_29 $$ for (int i = curY; i < (curY + curHeight); i++) [ CD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_49 $$ curY = 0[ FD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_39 $$ if (curWidth < 1) -->Line_40 $$ curWidth = 1[ CD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_54 $$ if (curWidth < 1) [ FD ]
Line_32 $$ curX = px - curX - 1-->Line_34 $$ curX = 0[ FD ]
Line_61 $$ curHeight = 1-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_32 $$ curX = px - curX - 1-->Line_78 $$ component.getConstraints().setColumn(curX)[ FD ]
Line_59 $$ curHeight += gridBagSize.height - curY-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_92 $$ if (constraints.insets.right == 0 && constraints.insets.top == 0 && constraints.insets.bottom == 0) [ CD ]
Line_21 $$ if (curX < 0) -->Line_22 $$ if (curHeight <= 0) [ CD ]
Line_55 $$ curWidth = 1-->Line_80 $$ component.getConstraints().setColSpan(curWidth)[ FD ]
Line_18 $$ curY = 0-->Line_36 $$ if (curY < 0) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_78 $$ component.getConstraints().setColumn(curX)[ CD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_82 $$ if (constraints.weightx >= 1.0) [ CD ]
Line_21 $$ if (curX < 0) -->Line_28 $$ px = 0[ CD ]
Line_7 $$ int curY = constraints.gridy-->Line_48 $$ if (curY < 0) [ FD ]
Line_47 $$ curY = py - curY - 1-->Line_48 $$ if (curY < 0) [ FD ]
Line_36 $$ if (curY < 0) -->Line_43 $$ py = 0[ CD ]
Line_32 $$ curX = px - curX - 1-->Line_53 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_96 $$ component.getConstraints().setFill(convertFill(constraints))[ FD ]
Line_40 $$ curWidth = 1-->Line_80 $$ component.getConstraints().setColSpan(curWidth)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_6 $$ int curX = constraints.gridx[ CD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_24 $$ if (curHeight < 1) [ FD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_37 $$ if (curWidth <= 0) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_79 $$ component.getConstraints().setRow(curY)[ CD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_36 $$ if (curY < 0) [ FD ]
Line_48 $$ if (curY < 0) -->Line_49 $$ curY = 0[ CD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_81 $$ component.getConstraints().setRowSpan(curHeight)[ FD ]
Line_73 $$ if (constraints.gridheight == 0 && myLastSnapshotRow < 0) -->Line_75 $$ if (constraints.gridwidth == 0 && myLastSnapshotCol < 0) [ CD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_24 $$ if (curHeight < 1) [ FD ]
Line_32 $$ curX = px - curX - 1-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_40 $$ curWidth = 1-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_60 $$ if (curHeight < 1) [ FD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_38 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_55 $$ curWidth = 1[ FD ]
Line_18 $$ curY = 0-->Line_23 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_47 $$ curY = py - curY - 1-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_59 $$ curHeight += gridBagSize.height - curY-->Line_61 $$ curHeight = 1[ FD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_61 $$ curHeight = 1[ FD ]
Line_29 $$ for (int i = curY; i < (curY + curHeight); i++) -->Line_30 $$ px = Math.max(px, mySnapshotXMax[i])[ CD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_70 $$ if (constraints.gridheight == 0 && constraints.gridwidth == 0) [ CD ]
Line_11 $$ int py-->Line_43 $$ py = 0[ FD ]
Line_7 $$ int curY = constraints.gridy-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_6 $$ int curX = constraints.gridx-->Line_21 $$ if (curX < 0) [ FD ]
Line_82 $$ if (constraints.weightx >= 1.0) -->Line_83 $$ component.getConstraints().setHSizePolicy(GridConstraints.SIZEPOLICY_CAN_GROW | GridConstraints.SIZEPOLICY_WANT_GROW)[ CD ]
Line_21 $$ if (curX < 0) -->Line_36 $$ if (curY < 0) [ CD ]
Line_49 $$ curY = 0-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_5 $$ final GridBagConstraints constraints = gridBag.getConstraints(child)-->Line_97 $$ component.setCustomLayoutConstraints(constraints.clone())[ FD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_33 $$ if (curX < 0) [ FD ]
Line_7 $$ int curY = constraints.gridy-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_53 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_7 $$ int curY = constraints.gridy[ CD ]
Line_44 $$ for (int i = curX; i < (curX + curWidth); i++) -->Line_64 $$ for (int i = curX; i < (curX + curWidth); i++) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_85 $$ component.getConstraints().setHSizePolicy(0)[ FD ]
Line_6 $$ int curX = constraints.gridx-->Line_34 $$ curX = 0[ FD ]
Line_15 $$ if (myLastSnapshotCol >= 0) -->Line_18 $$ curY = 0[ CD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_95 $$ component.getConstraints().setAnchor(convertAnchor(constraints))[ CD ]
Line_24 $$ if (curHeight < 1) -->Line_25 $$ curHeight = 1[ CD ]
Line_34 $$ curX = 0-->Line_78 $$ component.getConstraints().setColumn(curX)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_3 $$ Dimension gridBagSize = getGridBagSize(parent)[ CD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_98 $$ container.addComponent(component)[ FD ]
Line_7 $$ int curY = constraints.gridy-->Line_18 $$ curY = 0[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_81 $$ component.getConstraints().setRowSpan(curHeight)[ FD ]
Line_34 $$ curX = 0-->Line_38 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_5 $$ final GridBagConstraints constraints = gridBag.getConstraints(child)[ CD ]
Line_6 $$ int curX = constraints.gridx-->Line_38 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_12 $$ if (curX < 0 && curY < 0) [ CD ]
Line_25 $$ curHeight = 1-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_92 $$ if (constraints.insets.right == 0 && constraints.insets.top == 0 && constraints.insets.bottom == 0) -->Line_93 $$ component.getConstraints().setIndent(constraints.insets.left / Util.DEFAULT_INDENT)[ CD ]
Line_12 $$ if (curX < 0 && curY < 0) -->Line_13 $$ if (myLastSnapshotRow >= 0) [ CD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_53 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_59 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_40 $$ curWidth = 1-->Line_53 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_23 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_97 $$ component.setCustomLayoutConstraints(constraints.clone())[ FD ]
Line_25 $$ curHeight = 1-->Line_61 $$ curHeight = 1[ FD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_44 $$ for (int i = curX; i < (curX + curWidth); i++) -->Line_67 $$ for (int i = curY; i < (curY + curHeight); i++) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_3 $$ Dimension gridBagSize = getGridBagSize(parent)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_5 $$ final GridBagConstraints constraints = gridBag.getConstraints(child)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_78 $$ component.getConstraints().setColumn(curX)[ FD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_32 $$ curX = px - curX - 1[ FD ]
Line_82 $$ if (constraints.weightx >= 1.0) -->Line_85 $$ component.getConstraints().setHSizePolicy(0)[ CD ]
Line_53 $$ curWidth += gridBagSize.width - curX-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_36 $$ if (curY < 0) -->Line_44 $$ for (int i = curX; i < (curX + curWidth); i++) [ CD ]
Line_7 $$ int curY = constraints.gridy-->Line_49 $$ curY = 0[ FD ]
Line_43 $$ py = 0-->Line_45 $$ py = Math.max(py, mySnapshotYMax[i])[ FD ]
Line_53 $$ curWidth += gridBagSize.width - curX-->Line_55 $$ curWidth = 1[ FD ]
Line_49 $$ curY = 0-->Line_79 $$ component.getConstraints().setRow(curY)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_88 $$ component.getConstraints().setVSizePolicy(GridConstraints.SIZEPOLICY_CAN_GROW | GridConstraints.SIZEPOLICY_WANT_GROW)[ FD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_47 $$ curY = py - curY - 1-->Line_49 $$ curY = 0[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_4 $$ GridBagLayout gridBag = (GridBagLayout) parent.getLayout()[ CD ]
Line_47 $$ curY = py - curY - 1-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_96 $$ component.getConstraints().setFill(convertFill(constraints))[ CD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_34 $$ curX = 0[ FD ]
Line_16 $$ curX = myLastSnapshotCol-->Line_21 $$ if (curX < 0) [ FD ]
Line_21 $$ if (curX < 0) -->Line_33 $$ if (curX < 0) [ CD ]
Line_52 $$ if (curWidth <= 0) -->Line_54 $$ if (curWidth < 1) [ CD ]
Line_6 $$ int curX = constraints.gridx-->Line_53 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_73 $$ if (constraints.gridheight == 0 && myLastSnapshotRow < 0) [ CD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_4 $$ GridBagLayout gridBag = (GridBagLayout) parent.getLayout()[ FD ]
Line_21 $$ if (curX < 0) -->Line_32 $$ curX = px - curX - 1[ CD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_81 $$ component.getConstraints().setRowSpan(curHeight)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_21 $$ if (curX < 0) [ CD ]
Line_18 $$ curY = 0-->Line_49 $$ curY = 0[ FD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_55 $$ curWidth = 1[ FD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_22 $$ if (curHeight <= 0) [ FD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_25 $$ curHeight = 1[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_80 $$ component.getConstraints().setColSpan(curWidth)[ CD ]
Line_37 $$ if (curWidth <= 0) -->Line_38 $$ curWidth += gridBagSize.width - curX[ CD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_6 $$ int curX = constraints.gridx-->Line_32 $$ curX = px - curX - 1[ FD ]
Line_44 $$ for (int i = curX; i < (curX + curWidth); i++) -->Line_45 $$ py = Math.max(py, mySnapshotYMax[i])[ CD ]
Line_64 $$ for (int i = curX; i < (curX + curWidth); i++) -->Line_67 $$ for (int i = curY; i < (curY + curHeight); i++) [ FD ]
Line_6 $$ int curX = constraints.gridx-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_36 $$ if (curY < 0) -->Line_48 $$ if (curY < 0) [ CD ]
Line_6 $$ int curX = constraints.gridx-->Line_78 $$ component.getConstraints().setColumn(curX)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_52 $$ if (curWidth <= 0) [ CD ]
Line_9 $$ int curHeight = constraints.gridheight-->Line_58 $$ if (curHeight <= 0) [ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_64 $$ for (int i = curX; i < (curX + curWidth); i++) [ CD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_80 $$ component.getConstraints().setColSpan(curWidth)[ FD ]
Line_60 $$ if (curHeight < 1) -->Line_61 $$ curHeight = 1[ CD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_80 $$ component.getConstraints().setColSpan(curWidth)[ FD ]
Line_40 $$ curWidth = 1-->Line_55 $$ curWidth = 1[ FD ]
Line_29 $$ for (int i = curY; i < (curY + curHeight); i++) -->Line_67 $$ for (int i = curY; i < (curY + curHeight); i++) [ FD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_79 $$ component.getConstraints().setRow(curY)[ FD ]
Line_67 $$ for (int i = curY; i < (curY + curHeight); i++) -->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ CD ]
Line_54 $$ if (curWidth < 1) -->Line_55 $$ curWidth = 1[ CD ]
Line_10 $$ int px-->Line_30 $$ px = Math.max(px, mySnapshotXMax[i])[ FD ]
Line_6 $$ int curX = constraints.gridx-->Line_33 $$ if (curX < 0) [ FD ]
Line_70 $$ if (constraints.gridheight == 0 && constraints.gridwidth == 0) -->Line_71 $$ myLastSnapshotRow = myLastSnapshotCol = -1[ CD ]
Line_58 $$ if (curHeight <= 0) -->Line_59 $$ curHeight += gridBagSize.height - curY[ CD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_40 $$ curWidth = 1[ FD ]
Line_53 $$ curWidth += gridBagSize.width - curX-->Line_80 $$ component.getConstraints().setColSpan(curWidth)[ FD ]
Line_10 $$ int px-->Line_28 $$ px = 0[ FD ]
Line_5 $$ final GridBagConstraints constraints = gridBag.getConstraints(child)-->Line_95 $$ component.getConstraints().setAnchor(convertAnchor(constraints))[ FD ]
Line_64 $$ for (int i = curX; i < (curX + curWidth); i++) -->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ CD ]
Line_11 $$ int py-->Line_45 $$ py = Math.max(py, mySnapshotYMax[i])[ FD ]
Line_40 $$ curWidth = 1-->Line_54 $$ if (curWidth < 1) [ FD ]
Line_59 $$ curHeight += gridBagSize.height - curY-->Line_60 $$ if (curHeight < 1) [ FD ]
Line_18 $$ curY = 0-->Line_79 $$ component.getConstraints().setRow(curY)[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_93 $$ component.getConstraints().setIndent(constraints.insets.left / Util.DEFAULT_INDENT)[ FD ]
Line_55 $$ curWidth = 1-->Line_68 $$ mySnapshotXMax[i] = curX + curWidth[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_95 $$ component.getConstraints().setAnchor(convertAnchor(constraints))[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_79 $$ component.getConstraints().setRow(curY)[ FD ]
Line_14 $$ curY = myLastSnapshotRow-->Line_18 $$ curY = 0[ FD ]
Line_33 $$ if (curX < 0) -->Line_34 $$ curX = 0[ CD ]
Line_47 $$ curY = py - curY - 1-->Line_79 $$ component.getConstraints().setRow(curY)[ FD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_38 $$ curWidth += gridBagSize.width - curX[ FD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_58 $$ if (curHeight <= 0) [ CD ]
Line_32 $$ curX = px - curX - 1-->Line_33 $$ if (curX < 0) [ FD ]
Line_23 $$ curHeight += gridBagSize.height - curY-->Line_65 $$ mySnapshotYMax[i] = curY + curHeight[ FD ]
Line_38 $$ curWidth += gridBagSize.width - curX-->Line_80 $$ component.getConstraints().setColSpan(curWidth)[ FD ]
Line_87 $$ if (constraints.weighty >= 1.0) -->Line_88 $$ component.getConstraints().setVSizePolicy(GridConstraints.SIZEPOLICY_CAN_GROW | GridConstraints.SIZEPOLICY_WANT_GROW)[ CD ]
Line_7 $$ int curY = constraints.gridy-->Line_23 $$ curHeight += gridBagSize.height - curY[ FD ]
Line_8 $$ int curWidth = constraints.gridwidth-->Line_39 $$ if (curWidth < 1) [ FD ]
Line_25 $$ curHeight = 1-->Line_60 $$ if (curHeight < 1) [ FD ]
Line_36 $$ if (curY < 0) -->Line_47 $$ curY = py - curY - 1[ CD ]
Line_2 $$ public void addSnapshotComponent(final JComponent parent, final JComponent child, final RadContainer container, final RadComponent component) -->Line_98 $$ container.addComponent(component)[ CD ]
