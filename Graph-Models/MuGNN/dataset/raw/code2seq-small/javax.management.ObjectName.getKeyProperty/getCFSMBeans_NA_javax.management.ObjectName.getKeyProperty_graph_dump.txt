Line_2 $$ private List<Entry<String, ColumnFamilyStoreMBean>> getCFSMBeans(MBeanServerConnection mbeanServerConn, String type) throws MalformedObjectNameException, IOException -->Line_4 $$ Set<ObjectName> cfObjects = mbeanServerConn.queryNames(query, null)[ FD ]
Line_3 $$ ObjectName query = new ObjectName("org.apache.cassandra.db:type=" + type + ",*")-->Line_4 $$ Set<ObjectName> cfObjects = mbeanServerConn.queryNames(query, null)[ FD ]
Line_2 $$ private List<Entry<String, ColumnFamilyStoreMBean>> getCFSMBeans(MBeanServerConnection mbeanServerConn, String type) throws MalformedObjectNameException, IOException -->Line_5 $$ List<Entry<String, ColumnFamilyStoreMBean>> mbeans = new ArrayList<Entry<String, ColumnFamilyStoreMBean>>(cfObjects.size())[ CD ]
Line_4 $$ Set<ObjectName> cfObjects = mbeanServerConn.queryNames(query, null)-->Line_5 $$ List<Entry<String, ColumnFamilyStoreMBean>> mbeans = new ArrayList<Entry<String, ColumnFamilyStoreMBean>>(cfObjects.size())[ FD ]
Line_5 $$ List<Entry<String, ColumnFamilyStoreMBean>> mbeans = new ArrayList<Entry<String, ColumnFamilyStoreMBean>>(cfObjects.size())-->Line_9 $$ mbeans.add(new AbstractMap.SimpleImmutableEntry<String, ColumnFamilyStoreMBean>(keyspaceName, cfsProxy))[ FD ]
Line_2 $$ private List<Entry<String, ColumnFamilyStoreMBean>> getCFSMBeans(MBeanServerConnection mbeanServerConn, String type) throws MalformedObjectNameException, IOException -->Line_4 $$ Set<ObjectName> cfObjects = mbeanServerConn.queryNames(query, null)[ CD ]
Line_2 $$ private List<Entry<String, ColumnFamilyStoreMBean>> getCFSMBeans(MBeanServerConnection mbeanServerConn, String type) throws MalformedObjectNameException, IOException -->Line_11 $$ return mbeans[ CD ]
Line_2 $$ private List<Entry<String, ColumnFamilyStoreMBean>> getCFSMBeans(MBeanServerConnection mbeanServerConn, String type) throws MalformedObjectNameException, IOException -->Line_3 $$ ObjectName query = new ObjectName("org.apache.cassandra.db:type=" + type + ",*")[ CD ]
Line_6 $$ for (ObjectName n : cfObjects) -->Line_8 $$ ColumnFamilyStoreMBean cfsProxy = JMX.newMBeanProxy(mbeanServerConn, n, ColumnFamilyStoreMBean.class)[ FD ]
Line_6 $$ for (ObjectName n : cfObjects) -->Line_7 $$ String keyspaceName = n.getKeyProperty("keyspace")[ FD ]
Line_2 $$ private List<Entry<String, ColumnFamilyStoreMBean>> getCFSMBeans(MBeanServerConnection mbeanServerConn, String type) throws MalformedObjectNameException, IOException -->Line_8 $$ ColumnFamilyStoreMBean cfsProxy = JMX.newMBeanProxy(mbeanServerConn, n, ColumnFamilyStoreMBean.class)[ FD ]
