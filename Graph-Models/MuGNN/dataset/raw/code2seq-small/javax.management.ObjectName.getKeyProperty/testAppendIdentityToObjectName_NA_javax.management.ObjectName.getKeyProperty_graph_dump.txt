Line_5 $$ ObjectName uniqueName = JmxUtils.appendIdentityToObjectName(objectName, managedResource)-->Line_8 $$ assertEquals("Type key is incorrect", objectName.getKeyProperty(typeProperty), uniqueName.getKeyProperty("type"))[ FD ]
Line_4 $$ Object managedResource = new Object()-->Line_5 $$ ObjectName uniqueName = JmxUtils.appendIdentityToObjectName(objectName, managedResource)[ FD ]
Line_2 $$ public void testAppendIdentityToObjectName() throws MalformedObjectNameException -->Line_7 $$ assertEquals("Domain of transformed name is incorrect", objectName.getDomain(), uniqueName.getDomain())[ CD ]
Line_3 $$ ObjectName objectName = ObjectNameManager.getInstance("spring:type=Test")-->Line_5 $$ ObjectName uniqueName = JmxUtils.appendIdentityToObjectName(objectName, managedResource)[ FD ]
Line_3 $$ ObjectName objectName = ObjectNameManager.getInstance("spring:type=Test")-->Line_7 $$ assertEquals("Domain of transformed name is incorrect", objectName.getDomain(), uniqueName.getDomain())[ FD ]
Line_2 $$ public void testAppendIdentityToObjectName() throws MalformedObjectNameException -->Line_3 $$ ObjectName objectName = ObjectNameManager.getInstance("spring:type=Test")[ CD ]
Line_5 $$ ObjectName uniqueName = JmxUtils.appendIdentityToObjectName(objectName, managedResource)-->Line_7 $$ assertEquals("Domain of transformed name is incorrect", objectName.getDomain(), uniqueName.getDomain())[ FD ]
Line_2 $$ public void testAppendIdentityToObjectName() throws MalformedObjectNameException -->Line_8 $$ assertEquals("Type key is incorrect", objectName.getKeyProperty(typeProperty), uniqueName.getKeyProperty("type"))[ CD ]
Line_3 $$ ObjectName objectName = ObjectNameManager.getInstance("spring:type=Test")-->Line_8 $$ assertEquals("Type key is incorrect", objectName.getKeyProperty(typeProperty), uniqueName.getKeyProperty("type"))[ FD ]
Line_2 $$ public void testAppendIdentityToObjectName() throws MalformedObjectNameException -->Line_5 $$ ObjectName uniqueName = JmxUtils.appendIdentityToObjectName(objectName, managedResource)[ CD ]
Line_4 $$ Object managedResource = new Object()-->Line_9 $$ assertEquals("Identity key is incorrect", ObjectUtils.getIdentityHexString(managedResource), uniqueName.getKeyProperty(JmxUtils.IDENTITY_OBJECT_NAME_KEY))[ FD ]
Line_6 $$ String typeProperty = "type"-->Line_8 $$ assertEquals("Type key is incorrect", objectName.getKeyProperty(typeProperty), uniqueName.getKeyProperty("type"))[ FD ]
Line_5 $$ ObjectName uniqueName = JmxUtils.appendIdentityToObjectName(objectName, managedResource)-->Line_9 $$ assertEquals("Identity key is incorrect", ObjectUtils.getIdentityHexString(managedResource), uniqueName.getKeyProperty(JmxUtils.IDENTITY_OBJECT_NAME_KEY))[ FD ]
Line_2 $$ public void testAppendIdentityToObjectName() throws MalformedObjectNameException -->Line_6 $$ String typeProperty = "type"[ CD ]
Line_2 $$ public void testAppendIdentityToObjectName() throws MalformedObjectNameException -->Line_4 $$ Object managedResource = new Object()[ CD ]
Line_2 $$ public void testAppendIdentityToObjectName() throws MalformedObjectNameException -->Line_9 $$ assertEquals("Identity key is incorrect", ObjectUtils.getIdentityHexString(managedResource), uniqueName.getKeyProperty(JmxUtils.IDENTITY_OBJECT_NAME_KEY))[ CD ]
