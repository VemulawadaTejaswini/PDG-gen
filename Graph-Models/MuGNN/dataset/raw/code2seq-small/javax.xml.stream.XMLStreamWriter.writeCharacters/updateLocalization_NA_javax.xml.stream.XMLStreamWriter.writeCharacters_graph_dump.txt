Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_58 $$ if (xmlStreamReader != null) [ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_32 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_42 $$ xmlStreamWriter.writeCharacters(value)[ FD ]
Line_14 $$ String availableLocales = StringPool.BLANK-->Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ FD ]
Line_48 $$ xmlStreamWriter = null-->Line_64 $$ if (xmlStreamWriter != null) [ FD ]
Line_14 $$ String availableLocales = StringPool.BLANK-->Line_19 $$ availableLocales = defaultLanguageId[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_64 $$ if (xmlStreamWriter != null) [ FD ]
Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_15 $$ if (xmlStreamReader.hasNext()) [ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_34 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_14 $$ String availableLocales = StringPool.BLANK-->Line_18 $$ if (Validator.isNull(availableLocales)) [ FD ]
Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_31 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_4 $$ XMLStreamReader xmlStreamReader = null-->Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ FD ]
Line_15 $$ if (xmlStreamReader.hasNext()) -->Line_16 $$ xmlStreamReader.nextTag()[ CD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_44 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_45 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_51 $$ if (_log.isWarnEnabled()) -->Line_52 $$ _log.warn(e, e)[ CD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_32 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_14 $$ String availableLocales = StringPool.BLANK-->Line_21 $$ if (!availableLocales.contains(requestedLanguageId)) [ FD ]
Line_18 $$ if (Validator.isNull(availableLocales)) -->Line_19 $$ availableLocales = defaultLanguageId[ CD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_29 $$ xmlStreamWriter.writeStartElement(_ROOT)[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_47 $$ xmlStreamWriter.close()[ FD ]
Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_18 $$ if (Validator.isNull(availableLocales)) [ FD ]
Line_7 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_55 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_32 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ FD ]
Line_4 $$ XMLStreamReader xmlStreamReader = null-->Line_15 $$ if (xmlStreamReader.hasNext()) [ FD ]
Line_48 $$ xmlStreamWriter = null-->Line_66 $$ xmlStreamWriter.close()[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_46 $$ xmlStreamWriter.writeEndDocument()[ FD ]
Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_21 $$ if (!availableLocales.contains(requestedLanguageId)) [ FD ]
Line_14 $$ String availableLocales = StringPool.BLANK-->Line_22 $$ availableLocales = StringUtil.add(availableLocales, requestedLanguageId, StringPool.COMMA)[ FD ]
Line_22 $$ availableLocales = StringUtil.add(availableLocales, requestedLanguageId, StringPool.COMMA)-->Line_31 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_64 $$ if (xmlStreamWriter != null) [ FD ]
Line_19 $$ availableLocales = defaultLanguageId-->Line_21 $$ if (!availableLocales.contains(requestedLanguageId)) [ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_42 $$ xmlStreamWriter.writeCharacters(value)[ FD ]
Line_25 $$ UnsyncStringWriter unsyncStringWriter = new UnsyncStringWriter()-->Line_49 $$ xml = unsyncStringWriter.toString()[ FD ]
Line_30 $$ if (localized) -->Line_32 $$ xmlStreamWriter.writeAttribute(_DEFAULT_LOCALE, defaultLanguageId)[ CD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_37 $$ xmlStreamWriter.writeAttribute(_LANGUAGE_ID, requestedLanguageId)[ FD ]
Line_12 $$ XMLInputFactory xmlInputFactory = SecureXMLFactoryProviderUtil.newXMLInputFactory()-->Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_66 $$ xmlStreamWriter.close()[ FD ]
Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_22 $$ availableLocales = StringUtil.add(availableLocales, requestedLanguageId, StringPool.COMMA)[ FD ]
Line_14 $$ String availableLocales = StringPool.BLANK-->Line_31 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_25 $$ UnsyncStringWriter unsyncStringWriter = new UnsyncStringWriter()-->Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_31 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_34 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_6 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()-->Line_55 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_6 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()-->Line_10 $$ ClassLoaderUtil.setContextClassLoader(portalClassLoader)[ FD ]
Line_9 $$ if (contextClassLoader != portalClassLoader) -->Line_10 $$ ClassLoaderUtil.setContextClassLoader(portalClassLoader)[ CD ]
Line_30 $$ if (localized) -->Line_31 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ CD ]
Line_26 $$ XMLOutputFactory xmlOutputFactory = XMLOutputFactory.newInstance()-->Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_42 $$ xmlStreamWriter.writeCharacters(value)[ FD ]
Line_55 $$ if (contextClassLoader != portalClassLoader) -->Line_56 $$ ClassLoaderUtil.setContextClassLoader(contextClassLoader)[ CD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_35 $$ xmlStreamWriter.writeStartElement(key)[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_40 $$ xmlStreamWriter.writeCData(value)[ FD ]
Line_39 $$ if (cdata) -->Line_40 $$ xmlStreamWriter.writeCData(value)[ CD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_35 $$ xmlStreamWriter.writeStartElement(key)[ FD ]
Line_7 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_9 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_71 $$ return xml[ CD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_22 $$ availableLocales = StringUtil.add(availableLocales, requestedLanguageId, StringPool.COMMA)[ FD ]
Line_15 $$ if (xmlStreamReader.hasNext()) -->Line_21 $$ if (!availableLocales.contains(requestedLanguageId)) [ CD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_35 $$ xmlStreamWriter.writeStartElement(key)[ FD ]
Line_36 $$ if (localized) -->Line_37 $$ xmlStreamWriter.writeAttribute(_LANGUAGE_ID, requestedLanguageId)[ CD ]
Line_19 $$ availableLocales = defaultLanguageId-->Line_31 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_46 $$ xmlStreamWriter.writeEndDocument()[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_6 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()[ CD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_48 $$ xmlStreamWriter = null[ FD ]
Line_39 $$ if (cdata) -->Line_42 $$ xmlStreamWriter.writeCharacters(value)[ CD ]
Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_60 $$ xmlStreamReader.close()[ FD ]
Line_3 $$ xml = _sanitizeXML(xml)-->Line_49 $$ xml = unsyncStringWriter.toString()[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_40 $$ xmlStreamWriter.writeCData(value)[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_21 $$ if (!availableLocales.contains(requestedLanguageId)) [ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_48 $$ xmlStreamWriter = null[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_31 $$ xmlStreamWriter.writeAttribute(_AVAILABLE_LOCALES, availableLocales)[ FD ]
Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_16 $$ xmlStreamReader.nextTag()[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_44 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_28 $$ xmlStreamWriter.writeStartDocument()[ FD ]
Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_28 $$ xmlStreamWriter.writeStartDocument()[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_5 $$ XMLStreamWriter xmlStreamWriter = null[ CD ]
Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)-->Line_19 $$ availableLocales = defaultLanguageId[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_29 $$ xmlStreamWriter.writeStartElement(_ROOT)[ FD ]
Line_4 $$ XMLStreamReader xmlStreamReader = null-->Line_60 $$ xmlStreamReader.close()[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_7 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()[ CD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_3 $$ xml = _sanitizeXML(xml)[ FD ]
Line_19 $$ availableLocales = defaultLanguageId-->Line_22 $$ availableLocales = StringUtil.add(availableLocales, requestedLanguageId, StringPool.COMMA)[ FD ]
Line_4 $$ XMLStreamReader xmlStreamReader = null-->Line_58 $$ if (xmlStreamReader != null) [ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_37 $$ xmlStreamWriter.writeAttribute(_LANGUAGE_ID, requestedLanguageId)[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_47 $$ xmlStreamWriter.close()[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_45 $$ xmlStreamWriter.writeEndElement()[ FD ]
Line_7 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_56 $$ ClassLoaderUtil.setContextClassLoader(contextClassLoader)[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_4 $$ XMLStreamReader xmlStreamReader = null[ CD ]
Line_4 $$ XMLStreamReader xmlStreamReader = null-->Line_34 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_21 $$ if (!availableLocales.contains(requestedLanguageId)) -->Line_22 $$ availableLocales = StringUtil.add(availableLocales, requestedLanguageId, StringPool.COMMA)[ CD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_3 $$ xml = _sanitizeXML(xml)[ CD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_19 $$ availableLocales = defaultLanguageId[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_66 $$ xmlStreamWriter.close()[ FD ]
Line_15 $$ if (xmlStreamReader.hasNext()) -->Line_18 $$ if (Validator.isNull(availableLocales)) [ CD ]
Line_6 $$ ClassLoader portalClassLoader = ClassLoaderUtil.getPortalClassLoader()-->Line_9 $$ if (contextClassLoader != portalClassLoader) [ FD ]
Line_15 $$ if (xmlStreamReader.hasNext()) -->Line_17 $$ availableLocales = xmlStreamReader.getAttributeValue(null, _AVAILABLE_LOCALES)[ CD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_40 $$ xmlStreamWriter.writeCData(value)[ FD ]
Line_5 $$ XMLStreamWriter xmlStreamWriter = null-->Line_37 $$ xmlStreamWriter.writeAttribute(_LANGUAGE_ID, requestedLanguageId)[ FD ]
Line_4 $$ XMLStreamReader xmlStreamReader = null-->Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))[ FD ]
Line_13 $$ xmlStreamReader = xmlInputFactory.createXMLStreamReader(new UnsyncStringReader(xml))-->Line_34 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
Line_4 $$ XMLStreamReader xmlStreamReader = null-->Line_16 $$ xmlStreamReader.nextTag()[ FD ]
Line_2 $$ public String updateLocalization(String xml, String key, String value, String requestedLanguageId, String defaultLanguageId, boolean cdata, boolean localized) -->Line_49 $$ xml = unsyncStringWriter.toString()[ FD ]
Line_27 $$ xmlStreamWriter = xmlOutputFactory.createXMLStreamWriter(unsyncStringWriter)-->Line_34 $$ _copyNonExempt(xmlStreamReader, xmlStreamWriter, requestedLanguageId, defaultLanguageId, cdata)[ FD ]
