Line_9 $$ int firstIndex = index-->Line_10 $$ do [ FD ]
Line_3 $$ if (buffer == null) -->Line_4 $$ return -1[ CD ]
Line_11 $$ if (buffer[2 * index] == k) -->Line_12 $$ return index[ CD ]
Line_8 $$ int index = hash % numEntries-->Line_14 $$ index = (index + 1) % numEntries[ FD ]
Line_2 $$ private int getElementIndex(K k) -->Line_9 $$ int firstIndex = index[ CD ]
Line_10 $$ do -->Line_11 $$ if (buffer[2 * index] == k) [ CD ]
Line_10 $$ do -->Line_14 $$ index = (index + 1) % numEntries[ CD ]
Line_2 $$ private int getElementIndex(K k) -->Line_11 $$ if (buffer[2 * index] == k) [ FD ]
Line_2 $$ private int getElementIndex(K k) -->Line_8 $$ int index = hash % numEntries[ CD ]
Line_14 $$ index = (index + 1) % numEntries-->Line_10 $$ do [ FD ]
Line_2 $$ private int getElementIndex(K k) -->Line_10 $$ do [ CD ]
Line_2 $$ private int getElementIndex(K k) -->Line_7 $$ int hash = System.identityHashCode(k)[ FD ]
Line_2 $$ private int getElementIndex(K k) -->Line_7 $$ int hash = System.identityHashCode(k)[ CD ]
Line_2 $$ private int getElementIndex(K k) -->Line_3 $$ if (buffer == null) [ CD ]
Line_2 $$ private int getElementIndex(K k) -->Line_6 $$ final int numEntries = buffer.length / 2[ CD ]
Line_6 $$ final int numEntries = buffer.length / 2-->Line_14 $$ index = (index + 1) % numEntries[ FD ]
Line_8 $$ int index = hash % numEntries-->Line_10 $$ do [ FD ]
Line_2 $$ private int getElementIndex(K k) -->Line_16 $$ return -1[ CD ]
