Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_16 $$ accessor.setPropertyValue("myInteger", intValue)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_30 $$ assertEquals(Long.MAX_VALUE, target.getMyLong().longValue())[ FD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_13 $$ accessor.setPropertyValue("myPrimitiveShort", shortValue)[ FD ]
Line_6 $$ String shortValue = " " + Short.MAX_VALUE + " "-->Line_13 $$ accessor.setPropertyValue("myPrimitiveShort", shortValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_20 $$ accessor.setPropertyValue("myFloat", floatValue)[ CD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_27 $$ assertEquals(Integer.MAX_VALUE, target.getMyPrimitiveInt())[ FD ]
Line_9 $$ String floatValue = " " + Float.MAX_VALUE + " "-->Line_20 $$ accessor.setPropertyValue("myFloat", floatValue)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_28 $$ assertEquals(Integer.MAX_VALUE, target.getMyInteger().intValue())[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_8 $$ String longValue = " " + Long.MAX_VALUE + " "[ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_20 $$ accessor.setPropertyValue("myFloat", floatValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_25 $$ assertEquals(Short.MAX_VALUE, target.getMyPrimitiveShort())[ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_11 $$ accessor.setPropertyValue("myPrimitiveByte", byteValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_29 $$ assertEquals(Long.MAX_VALUE, target.getMyPrimitiveLong())[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_30 $$ assertEquals(Long.MAX_VALUE, target.getMyLong().longValue())[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_31 $$ assertEquals(Float.MAX_VALUE, target.getMyPrimitiveFloat(), 0.001)[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_14 $$ accessor.setPropertyValue("myShort", shortValue)[ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_21 $$ accessor.setPropertyValue("myPrimitiveDouble", doubleValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_34 $$ assertEquals(Double.MAX_VALUE, target.getMyDouble().doubleValue(), 0.001)[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_12 $$ accessor.setPropertyValue("myByte", byteValue)[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_32 $$ assertEquals(Float.MAX_VALUE, target.getMyFloat().floatValue(), 0.001)[ CD ]
Line_10 $$ String doubleValue = " " + Double.MAX_VALUE + " "-->Line_22 $$ accessor.setPropertyValue("myDouble", doubleValue)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_34 $$ assertEquals(Double.MAX_VALUE, target.getMyDouble().doubleValue(), 0.001)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_24 $$ assertEquals(Byte.MAX_VALUE, target.getMyByte().byteValue())[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_27 $$ assertEquals(Integer.MAX_VALUE, target.getMyPrimitiveInt())[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_16 $$ accessor.setPropertyValue("myInteger", intValue)[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)[ CD ]
Line_8 $$ String longValue = " " + Long.MAX_VALUE + " "-->Line_17 $$ accessor.setPropertyValue("myPrimitiveLong", longValue)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_26 $$ assertEquals(Short.MAX_VALUE, target.getMyShort().shortValue())[ FD ]
Line_7 $$ String intValue = " " + Integer.MAX_VALUE + " "-->Line_16 $$ accessor.setPropertyValue("myInteger", intValue)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_33 $$ assertEquals(Double.MAX_VALUE, target.getMyPrimitiveDouble(), 0.001)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_32 $$ assertEquals(Float.MAX_VALUE, target.getMyFloat().floatValue(), 0.001)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_21 $$ accessor.setPropertyValue("myPrimitiveDouble", doubleValue)[ CD ]
Line_7 $$ String intValue = " " + Integer.MAX_VALUE + " "-->Line_15 $$ accessor.setPropertyValue("myPrimitiveInt", intValue)[ FD ]
Line_5 $$ String byteValue = " " + Byte.MAX_VALUE + " "-->Line_11 $$ accessor.setPropertyValue("myPrimitiveByte", byteValue)[ FD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_17 $$ accessor.setPropertyValue("myPrimitiveLong", longValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_6 $$ String shortValue = " " + Short.MAX_VALUE + " "[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_9 $$ String floatValue = " " + Float.MAX_VALUE + " "[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_7 $$ String intValue = " " + Integer.MAX_VALUE + " "[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_17 $$ accessor.setPropertyValue("myPrimitiveLong", longValue)[ CD ]
Line_10 $$ String doubleValue = " " + Double.MAX_VALUE + " "-->Line_21 $$ accessor.setPropertyValue("myPrimitiveDouble", doubleValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_22 $$ accessor.setPropertyValue("myDouble", doubleValue)[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_26 $$ assertEquals(Short.MAX_VALUE, target.getMyShort().shortValue())[ CD ]
Line_5 $$ String byteValue = " " + Byte.MAX_VALUE + " "-->Line_12 $$ accessor.setPropertyValue("myByte", byteValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_18 $$ accessor.setPropertyValue("myLong", longValue)[ CD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_29 $$ assertEquals(Long.MAX_VALUE, target.getMyPrimitiveLong())[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_31 $$ assertEquals(Float.MAX_VALUE, target.getMyPrimitiveFloat(), 0.001)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_11 $$ accessor.setPropertyValue("myPrimitiveByte", byteValue)[ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_22 $$ accessor.setPropertyValue("myDouble", doubleValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_28 $$ assertEquals(Integer.MAX_VALUE, target.getMyInteger().intValue())[ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_15 $$ accessor.setPropertyValue("myPrimitiveInt", intValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_33 $$ assertEquals(Double.MAX_VALUE, target.getMyPrimitiveDouble(), 0.001)[ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_12 $$ accessor.setPropertyValue("myByte", byteValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_10 $$ String doubleValue = " " + Double.MAX_VALUE + " "[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_15 $$ accessor.setPropertyValue("myPrimitiveInt", intValue)[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_5 $$ String byteValue = " " + Byte.MAX_VALUE + " "[ CD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_23 $$ assertEquals(Byte.MAX_VALUE, target.getMyPrimitiveByte())[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_24 $$ assertEquals(Byte.MAX_VALUE, target.getMyByte().byteValue())[ CD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_19 $$ accessor.setPropertyValue("myPrimitiveFloat", floatValue)[ CD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_19 $$ accessor.setPropertyValue("myPrimitiveFloat", floatValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_13 $$ accessor.setPropertyValue("myPrimitiveShort", shortValue)[ CD ]
Line_6 $$ String shortValue = " " + Short.MAX_VALUE + " "-->Line_14 $$ accessor.setPropertyValue("myShort", shortValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()[ CD ]
Line_8 $$ String longValue = " " + Long.MAX_VALUE + " "-->Line_18 $$ accessor.setPropertyValue("myLong", longValue)[ FD ]
Line_2 $$ public void setPrimitiveProperties() -->Line_23 $$ assertEquals(Byte.MAX_VALUE, target.getMyPrimitiveByte())[ CD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)[ FD ]
Line_9 $$ String floatValue = " " + Float.MAX_VALUE + " "-->Line_19 $$ accessor.setPropertyValue("myPrimitiveFloat", floatValue)[ FD ]
Line_3 $$ NumberPropertyBean target = new NumberPropertyBean()-->Line_25 $$ assertEquals(Short.MAX_VALUE, target.getMyPrimitiveShort())[ FD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_18 $$ accessor.setPropertyValue("myLong", longValue)[ FD ]
Line_4 $$ AbstractPropertyAccessor accessor = createAccessor(target)-->Line_14 $$ accessor.setPropertyValue("myShort", shortValue)[ FD ]
