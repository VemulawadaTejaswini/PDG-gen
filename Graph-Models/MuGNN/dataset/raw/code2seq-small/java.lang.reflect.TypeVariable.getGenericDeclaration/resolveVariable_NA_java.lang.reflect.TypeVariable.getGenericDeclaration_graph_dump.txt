Line_13 $$ anInterface = classes[i]-->Line_26 $$ index = ArrayUtilRt.find(anInterface.getTypeParameters(), typeVariable)[ FD ]
Line_11 $$ Class anInterface-->Line_20 $$ final Type resolved = resolveVariable(variable, anInterface)[ FD ]
Line_24 $$ if (resolved instanceof TypeVariable) -->Line_27 $$ if (index < 0) [ CD ]
Line_15 $$ anInterface = aClass.getSuperclass()-->Line_20 $$ final Type resolved = resolveVariable(variable, anInterface)[ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_5 $$ if (index >= 0) [ CD ]
Line_24 $$ if (resolved instanceof TypeVariable) -->Line_26 $$ index = ArrayUtilRt.find(anInterface.getTypeParameters(), typeVariable)[ CD ]
Line_24 $$ if (resolved instanceof TypeVariable) -->Line_34 $$ if (type instanceof ParameterizedType) [ CD ]
Line_10 $$ for (int i = 0; i <= classes.length; i++) -->Line_20 $$ final Type resolved = resolveVariable(variable, anInterface)[ CD ]
Line_12 $$ if (i < classes.length) -->Line_16 $$ if (resolveInInterfacesOnly || anInterface == null) [ CD ]
Line_11 $$ Class anInterface-->Line_26 $$ index = ArrayUtilRt.find(anInterface.getTypeParameters(), typeVariable)[ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_16 $$ if (resolveInInterfacesOnly || anInterface == null) [ FD ]
Line_10 $$ for (int i = 0; i <= classes.length; i++) -->Line_24 $$ if (resolved instanceof TypeVariable) [ CD ]
Line_21 $$ if (resolved instanceof Class || resolved instanceof ParameterizedType) -->Line_22 $$ return resolved[ CD ]
Line_30 $$ final Type type = i < genericInterfaces.length ? genericInterfaces[i] : aClass.getGenericSuperclass()-->Line_34 $$ if (type instanceof ParameterizedType) [ FD ]
Line_34 $$ if (type instanceof ParameterizedType) -->Line_35 $$ return getActualTypeArguments((ParameterizedType) type)[index][ CD ]
Line_3 $$ final Class aClass = getRawType(classType)-->Line_4 $$ int index = ArrayUtilRt.find(aClass.getTypeParameters(), variable)[ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_10 $$ for (int i = 0; i <= classes.length; i++) [ CD ]
Line_4 $$ int index = ArrayUtilRt.find(aClass.getTypeParameters(), variable)-->Line_26 $$ index = ArrayUtilRt.find(anInterface.getTypeParameters(), typeVariable)[ FD ]
Line_25 $$ final TypeVariable typeVariable = (TypeVariable) resolved-->Line_28 $$ LOG.error("Cannot resolve type variable:\n" + "typeVariable = " + typeVariable + "\n" + "genericDeclaration = " + declarationToString(typeVariable.getGenericDeclaration()) + "\n" + "searching in " + declarationToString(anInterface))[ FD ]
Line_3 $$ final Class aClass = getRawType(classType)-->Line_15 $$ anInterface = aClass.getSuperclass()[ FD ]
Line_31 $$ if (type instanceof Class) -->Line_32 $$ return Object.class[ CD ]
Line_4 $$ int index = ArrayUtilRt.find(aClass.getTypeParameters(), variable)-->Line_27 $$ if (index < 0) [ FD ]
Line_11 $$ Class anInterface-->Line_28 $$ LOG.error("Cannot resolve type variable:\n" + "typeVariable = " + typeVariable + "\n" + "genericDeclaration = " + declarationToString(typeVariable.getGenericDeclaration()) + "\n" + "searching in " + declarationToString(anInterface))[ FD ]
Line_13 $$ anInterface = classes[i]-->Line_20 $$ final Type resolved = resolveVariable(variable, anInterface)[ FD ]
Line_15 $$ anInterface = aClass.getSuperclass()-->Line_26 $$ index = ArrayUtilRt.find(anInterface.getTypeParameters(), typeVariable)[ FD ]
Line_30 $$ final Type type = i < genericInterfaces.length ? genericInterfaces[i] : aClass.getGenericSuperclass()-->Line_31 $$ if (type instanceof Class) [ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_40 $$ return null[ CD ]
Line_12 $$ if (i < classes.length) -->Line_15 $$ anInterface = aClass.getSuperclass()[ CD ]
Line_10 $$ for (int i = 0; i <= classes.length; i++) -->Line_21 $$ if (resolved instanceof Class || resolved instanceof ParameterizedType) [ CD ]
Line_11 $$ Class anInterface-->Line_13 $$ anInterface = classes[i][ FD ]
Line_13 $$ anInterface = classes[i]-->Line_15 $$ anInterface = aClass.getSuperclass()[ FD ]
Line_27 $$ if (index < 0) -->Line_28 $$ LOG.error("Cannot resolve type variable:\n" + "typeVariable = " + typeVariable + "\n" + "genericDeclaration = " + declarationToString(typeVariable.getGenericDeclaration()) + "\n" + "searching in " + declarationToString(anInterface))[ CD ]
Line_13 $$ anInterface = classes[i]-->Line_28 $$ LOG.error("Cannot resolve type variable:\n" + "typeVariable = " + typeVariable + "\n" + "genericDeclaration = " + declarationToString(typeVariable.getGenericDeclaration()) + "\n" + "searching in " + declarationToString(anInterface))[ FD ]
Line_15 $$ anInterface = aClass.getSuperclass()-->Line_28 $$ LOG.error("Cannot resolve type variable:\n" + "typeVariable = " + typeVariable + "\n" + "genericDeclaration = " + declarationToString(typeVariable.getGenericDeclaration()) + "\n" + "searching in " + declarationToString(anInterface))[ FD ]
Line_10 $$ for (int i = 0; i <= classes.length; i++) -->Line_12 $$ if (i < classes.length) [ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_3 $$ final Class aClass = getRawType(classType)[ CD ]
Line_11 $$ Class anInterface-->Line_15 $$ anInterface = aClass.getSuperclass()[ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_9 $$ final Type[] genericInterfaces = aClass.getGenericInterfaces()[ CD ]
Line_10 $$ for (int i = 0; i <= classes.length; i++) -->Line_12 $$ if (i < classes.length) [ CD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_4 $$ int index = ArrayUtilRt.find(aClass.getTypeParameters(), variable)[ FD ]
Line_5 $$ if (index >= 0) -->Line_6 $$ return variable[ CD ]
Line_24 $$ if (resolved instanceof TypeVariable) -->Line_25 $$ final TypeVariable typeVariable = (TypeVariable) resolved[ CD ]
Line_3 $$ final Class aClass = getRawType(classType)-->Line_30 $$ final Type type = i < genericInterfaces.length ? genericInterfaces[i] : aClass.getGenericSuperclass()[ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_20 $$ final Type resolved = resolveVariable(variable, anInterface)[ FD ]
Line_20 $$ final Type resolved = resolveVariable(variable, anInterface)-->Line_24 $$ if (resolved instanceof TypeVariable) [ FD ]
Line_3 $$ final Class aClass = getRawType(classType)-->Line_9 $$ final Type[] genericInterfaces = aClass.getGenericInterfaces()[ FD ]
Line_25 $$ final TypeVariable typeVariable = (TypeVariable) resolved-->Line_26 $$ index = ArrayUtilRt.find(anInterface.getTypeParameters(), typeVariable)[ FD ]
Line_12 $$ if (i < classes.length) -->Line_13 $$ anInterface = classes[i][ CD ]
Line_26 $$ index = ArrayUtilRt.find(anInterface.getTypeParameters(), typeVariable)-->Line_27 $$ if (index < 0) [ FD ]
Line_24 $$ if (resolved instanceof TypeVariable) -->Line_30 $$ final Type type = i < genericInterfaces.length ? genericInterfaces[i] : aClass.getGenericSuperclass()[ CD ]
Line_3 $$ final Class aClass = getRawType(classType)-->Line_8 $$ final Class[] classes = aClass.getInterfaces()[ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_3 $$ final Class aClass = getRawType(classType)[ FD ]
Line_24 $$ if (resolved instanceof TypeVariable) -->Line_31 $$ if (type instanceof Class) [ CD ]
Line_10 $$ for (int i = 0; i <= classes.length; i++) -->Line_11 $$ Class anInterface[ CD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_8 $$ final Class[] classes = aClass.getInterfaces()[ CD ]
Line_4 $$ int index = ArrayUtilRt.find(aClass.getTypeParameters(), variable)-->Line_5 $$ if (index >= 0) [ FD ]
Line_2 $$ public static Type resolveVariable(@NotNull TypeVariable variable, @NotNull Class classType, boolean resolveInInterfacesOnly) -->Line_4 $$ int index = ArrayUtilRt.find(aClass.getTypeParameters(), variable)[ CD ]
