Line_2 $$ public void test2() -->Line_14 $$ assertEquals(GridConstraints.SIZEPOLICY_CAN_SHRINK, horizontalInfo.getCellSizePolicy(0))[ CD ]
Line_2 $$ public void test2() -->Line_11 $$ final Dimension preferredSize = panel.getPreferredSize()[ CD ]
Line_2 $$ public void test2() -->Line_3 $$ final GridLayoutManager layoutManager = new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), 0, 0)[ CD ]
Line_2 $$ public void test2() -->Line_13 $$ assertEquals(3, horizontalInfo.getCellCount())[ CD ]
Line_2 $$ public void test2() -->Line_8 $$ field2.setPreferredSize(new Dimension(100, 30))[ CD ]
Line_2 $$ public void test2() -->Line_21 $$ assertEquals(400, field1.getWidth())[ CD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_20 $$ panel.doLayout()[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_10 $$ panel.add(field2, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(0, 0), null, null, 0))[ FD ]
Line_2 $$ public void test2() -->Line_4 $$ final JPanel panel = new JPanel(layoutManager)[ CD ]
Line_2 $$ public void test2() -->Line_16 $$ assertEquals(GridConstraints.SIZEPOLICY_CAN_SHRINK, horizontalInfo.getCellSizePolicy(2))[ CD ]
Line_2 $$ public void test2() -->Line_12 $$ final DimensionInfo horizontalInfo = layoutManager.myHorizontalInfo[ CD ]
Line_2 $$ public void test2() -->Line_20 $$ panel.doLayout()[ CD ]
Line_5 $$ final JTextField field1 = new JTextField()-->Line_21 $$ assertEquals(400, field1.getWidth())[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_19 $$ panel.setSize(400, 100)[ FD ]
Line_2 $$ public void test2() -->Line_10 $$ panel.add(field2, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(0, 0), null, null, 0))[ CD ]
Line_2 $$ public void test2() -->Line_5 $$ final JTextField field1 = new JTextField()[ CD ]
Line_12 $$ final DimensionInfo horizontalInfo = layoutManager.myHorizontalInfo-->Line_13 $$ assertEquals(3, horizontalInfo.getCellCount())[ FD ]
Line_12 $$ final DimensionInfo horizontalInfo = layoutManager.myHorizontalInfo-->Line_15 $$ assertEquals(GridConstraints.SIZEPOLICY_WANT_GROW, horizontalInfo.getCellSizePolicy(1))[ FD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_22 $$ assertEquals(400, field2.getWidth())[ FD ]
Line_12 $$ final DimensionInfo horizontalInfo = layoutManager.myHorizontalInfo-->Line_16 $$ assertEquals(GridConstraints.SIZEPOLICY_CAN_SHRINK, horizontalInfo.getCellSizePolicy(2))[ FD ]
Line_2 $$ public void test2() -->Line_22 $$ assertEquals(400, field2.getWidth())[ CD ]
Line_2 $$ public void test2() -->Line_15 $$ assertEquals(GridConstraints.SIZEPOLICY_WANT_GROW, horizontalInfo.getCellSizePolicy(1))[ CD ]
Line_2 $$ public void test2() -->Line_7 $$ final JTextField field2 = new JTextField()[ CD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_8 $$ field2.setPreferredSize(new Dimension(100, 30))[ FD ]
Line_12 $$ final DimensionInfo horizontalInfo = layoutManager.myHorizontalInfo-->Line_14 $$ assertEquals(GridConstraints.SIZEPOLICY_CAN_SHRINK, horizontalInfo.getCellSizePolicy(0))[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_9 $$ panel.add(field1, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(0, 0), null, null, 0))[ FD ]
Line_4 $$ final JPanel panel = new JPanel(layoutManager)-->Line_11 $$ final Dimension preferredSize = panel.getPreferredSize()[ FD ]
Line_2 $$ public void test2() -->Line_6 $$ field1.setPreferredSize(new Dimension(100, 30))[ CD ]
Line_5 $$ final JTextField field1 = new JTextField()-->Line_6 $$ field1.setPreferredSize(new Dimension(100, 30))[ FD ]
Line_2 $$ public void test2() -->Line_9 $$ panel.add(field1, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(0, 0), null, null, 0))[ CD ]
Line_2 $$ public void test2() -->Line_18 $$ assertEquals(60, preferredSize.height)[ CD ]
Line_2 $$ public void test2() -->Line_17 $$ assertEquals(100, preferredSize.width)[ CD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_10 $$ panel.add(field2, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(0, 0), null, null, 0))[ FD ]
Line_2 $$ public void test2() -->Line_19 $$ panel.setSize(400, 100)[ CD ]
Line_5 $$ final JTextField field1 = new JTextField()-->Line_9 $$ panel.add(field1, new GridConstraints(0, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(0, 0), null, null, 0))[ FD ]
