Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_11 $$ int x = insets.left + componentX + border.left[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_13 $$ int width = getWidth() - insets.left - insets.right - componentX - border.left - border.right[ CD ]
Line_5 $$ final boolean noTabsVisible = isStealthModeEffective() || isHideTabs()-->Line_15 $$ if (!noTabsVisible) [ FD ]
Line_13 $$ int width = getWidth() - insets.left - insets.right - componentX - border.left - border.right-->Line_19 $$ return layout(comp, x, y, width, height)[ FD ]
Line_14 $$ int height = getHeight() - insets.top - insets.bottom - componentY - border.top - border.bottom-->Line_17 $$ height += deltaHeight[ FD ]
Line_11 $$ int x = insets.left + componentX + border.left-->Line_19 $$ return layout(comp, x, y, width, height)[ FD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_14 $$ int height = getHeight() - insets.top - insets.bottom - componentY - border.top - border.bottom[ CD ]
Line_16 $$ width += deltaWidth-->Line_19 $$ return layout(comp, x, y, width, height)[ FD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_7 $$ border.top += inner.top[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_9 $$ border.left += inner.left[ CD ]
Line_15 $$ if (!noTabsVisible) -->Line_16 $$ width += deltaWidth[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_4 $$ final Insets border = isHideTabs() ? new Insets(0, 0, 0, 0) : myBorder.getEffectiveBorder()[ CD ]
Line_17 $$ height += deltaHeight-->Line_19 $$ return layout(comp, x, y, width, height)[ FD ]
Line_12 $$ int y = insets.top + componentY + border.top-->Line_19 $$ return layout(comp, x, y, width, height)[ FD ]
Line_14 $$ int height = getHeight() - insets.top - insets.bottom - componentY - border.top - border.bottom-->Line_19 $$ return layout(comp, x, y, width, height)[ FD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_10 $$ border.right += inner.right[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_16 $$ width += deltaWidth[ FD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_19 $$ return layout(comp, x, y, width, height)[ FD ]
Line_15 $$ if (!noTabsVisible) -->Line_17 $$ height += deltaHeight[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_17 $$ height += deltaHeight[ FD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_19 $$ return layout(comp, x, y, width, height)[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_3 $$ final Insets insets = getLayoutInsets()[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_12 $$ int y = insets.top + componentY + border.top[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_5 $$ final boolean noTabsVisible = isStealthModeEffective() || isHideTabs()[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_8 $$ border.bottom += inner.bottom[ CD ]
Line_13 $$ int width = getWidth() - insets.left - insets.right - componentX - border.left - border.right-->Line_16 $$ width += deltaWidth[ FD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_6 $$ final Insets inner = getInnerInsets()[ CD ]
Line_2 $$ public Rectangle layoutComp(int componentX, int componentY, final JComponent comp, int deltaWidth, int deltaHeight) -->Line_15 $$ if (!noTabsVisible) [ CD ]
