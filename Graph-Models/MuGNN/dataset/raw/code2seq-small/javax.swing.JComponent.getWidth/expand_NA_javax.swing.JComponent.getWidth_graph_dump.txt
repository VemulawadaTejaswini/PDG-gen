Line_2 $$ private void expand(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull Point p, @NotNull JEditorPane pane, boolean alignToRight, @NotNull TooltipGroup group, @NotNull HintHint hintHint) -->Line_7 $$ TooltipController.getInstance().showTooltip(editor, new Point(p.x - 3, p.y - 3), createRenderer(myText, myCurrentWidth > 0 ? 0 : pane.getWidth()), alignToRight, group, hintHint)[ CD ]
Line_2 $$ private void expand(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull Point p, @NotNull JEditorPane pane, boolean alignToRight, @NotNull TooltipGroup group, @NotNull HintHint hintHint) -->Line_7 $$ TooltipController.getInstance().showTooltip(editor, new Point(p.x - 3, p.y - 3), createRenderer(myText, myCurrentWidth > 0 ? 0 : pane.getWidth()), alignToRight, group, hintHint)[ FD ]
Line_4 $$ if (myCurrentWidth > 0) -->Line_5 $$ stripDescription()[ CD ]
Line_2 $$ private void expand(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull Point p, @NotNull JEditorPane pane, boolean alignToRight, @NotNull TooltipGroup group, @NotNull HintHint hintHint) -->Line_3 $$ hint.hide()[ FD ]
Line_2 $$ private void expand(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull Point p, @NotNull JEditorPane pane, boolean alignToRight, @NotNull TooltipGroup group, @NotNull HintHint hintHint) -->Line_3 $$ hint.hide()[ CD ]
Line_2 $$ private void expand(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull Point p, @NotNull JEditorPane pane, boolean alignToRight, @NotNull TooltipGroup group, @NotNull HintHint hintHint) -->Line_4 $$ if (myCurrentWidth > 0) [ CD ]
