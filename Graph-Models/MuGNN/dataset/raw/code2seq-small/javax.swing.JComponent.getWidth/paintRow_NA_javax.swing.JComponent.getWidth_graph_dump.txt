Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_40 $$ super.paintRow(g, clipBounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ FD ]
Line_11 $$ if ((row % 2) == 0 && Boolean.TRUE.equals(tree.getClientProperty(STRIPED_CLIENT_PROPERTY))) -->Line_12 $$ background = UIUtil.getDecoratedRowColor()[ CD ]
Line_26 $$ if (selected && (UIUtil.isUnderAquaBasedLookAndFeel() || UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_27 $$ Color bg = UIUtil.getTreeSelectionBackground(tree.hasFocus() || Boolean.TRUE.equals(tree.getClientProperty(TREE_TABLE_TREE_KEY)))[ CD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_6 $$ boolean selected = tree.isPathSelected(path)[ FD ]
Line_4 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0-->Line_19 $$ LIST_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_10 $$ Color background = tree.getBackground()[ CD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_21 $$ if (myWideSelectionCondition.value(row)) [ FD ]
Line_3 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()-->Line_23 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_3 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()-->Line_30 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_34 $$ if (shouldPaintExpandControl(path, row, isExpanded, hasBeenExpanded, isLeaf)) -->Line_35 $$ paintExpandControl(rowGraphics, bounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ CD ]
Line_3 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()-->Line_17 $$ LIST_FOCUSED_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_4 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0-->Line_23 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_34 $$ if (shouldPaintExpandControl(path, row, isExpanded, hasBeenExpanded, isLeaf)) [ FD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_8 $$ rowGraphics.setClip(clipBounds)[ FD ]
Line_16 $$ if (tree.hasFocus()) -->Line_17 $$ LIST_FOCUSED_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ CD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_19 $$ LIST_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_8 $$ rowGraphics.setClip(clipBounds)[ CD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_17 $$ LIST_FOCUSED_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_4 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0[ CD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_22 $$ rowGraphics.setColor(background)[ FD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_38 $$ rowGraphics.dispose()[ CD ]
Line_6 $$ boolean selected = tree.isPathSelected(path)-->Line_26 $$ if (selected && (UIUtil.isUnderAquaBasedLookAndFeel() || UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) [ FD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_35 $$ paintExpandControl(rowGraphics, bounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ FD ]
Line_3 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()-->Line_19 $$ LIST_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_14 $$ if (sourceList != null && (Boolean) sourceList) [ CD ]
Line_28 $$ if (myWideSelectionCondition.value(row)) -->Line_29 $$ rowGraphics.setColor(bg)[ CD ]
Line_15 $$ if (selected) -->Line_16 $$ if (tree.hasFocus()) [ CD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_3 $$ final int containerWidth = tree.getParent() instanceof JViewport ? tree.getParent().getWidth() : tree.getWidth()[ CD ]
Line_15 $$ if (selected) -->Line_21 $$ if (myWideSelectionCondition.value(row)) [ CD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_5 $$ if (path != null && myWideSelection) [ CD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_37 $$ super.paintRow(rowGraphics, clipBounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ CD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_6 $$ boolean selected = tree.isPathSelected(path)[ CD ]
Line_14 $$ if (sourceList != null && (Boolean) sourceList) -->Line_26 $$ if (selected && (UIUtil.isUnderAquaBasedLookAndFeel() || UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) [ CD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_9 $$ final Object sourceList = tree.getClientProperty(SOURCE_LIST_CLIENT_PROPERTY)[ CD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()[ CD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_23 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_37 $$ super.paintRow(rowGraphics, clipBounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ FD ]
Line_4 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0-->Line_30 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_11 $$ if ((row % 2) == 0 && Boolean.TRUE.equals(tree.getClientProperty(STRIPED_CLIENT_PROPERTY))) [ CD ]
Line_10 $$ Color background = tree.getBackground()-->Line_22 $$ rowGraphics.setColor(background)[ FD ]
Line_10 $$ Color background = tree.getBackground()-->Line_12 $$ background = UIUtil.getDecoratedRowColor()[ FD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_30 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_38 $$ rowGraphics.dispose()[ FD ]
Line_4 $$ final int xOffset = tree.getParent() instanceof JViewport ? ((JViewport) tree.getParent()).getViewPosition().x : 0-->Line_17 $$ LIST_FOCUSED_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ FD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_40 $$ super.paintRow(g, clipBounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ CD ]
Line_26 $$ if (selected && (UIUtil.isUnderAquaBasedLookAndFeel() || UIUtil.isUnderDarcula() || UIUtil.isUnderIntelliJLaF())) -->Line_28 $$ if (myWideSelectionCondition.value(row)) [ CD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_28 $$ if (myWideSelectionCondition.value(row)) [ FD ]
Line_28 $$ if (myWideSelectionCondition.value(row)) -->Line_30 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ CD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_37 $$ super.paintRow(rowGraphics, clipBounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ FD ]
Line_16 $$ if (tree.hasFocus()) -->Line_19 $$ LIST_SELECTION_BACKGROUND_PAINTER.paintBorder(tree, rowGraphics, xOffset, bounds.y, containerWidth, bounds.height)[ CD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_29 $$ rowGraphics.setColor(bg)[ FD ]
Line_21 $$ if (myWideSelectionCondition.value(row)) -->Line_22 $$ rowGraphics.setColor(background)[ CD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_35 $$ paintExpandControl(rowGraphics, bounds, insets, bounds, path, row, isExpanded, hasBeenExpanded, isLeaf)[ FD ]
Line_14 $$ if (sourceList != null && (Boolean) sourceList) -->Line_15 $$ if (selected) [ CD ]
Line_5 $$ if (path != null && myWideSelection) -->Line_34 $$ if (shouldPaintExpandControl(path, row, isExpanded, hasBeenExpanded, isLeaf)) [ CD ]
Line_12 $$ background = UIUtil.getDecoratedRowColor()-->Line_22 $$ rowGraphics.setColor(background)[ FD ]
Line_27 $$ Color bg = UIUtil.getTreeSelectionBackground(tree.hasFocus() || Boolean.TRUE.equals(tree.getClientProperty(TREE_TABLE_TREE_KEY)))-->Line_29 $$ rowGraphics.setColor(bg)[ FD ]
Line_21 $$ if (myWideSelectionCondition.value(row)) -->Line_23 $$ rowGraphics.fillRect(xOffset, bounds.y, containerWidth, bounds.height)[ CD ]
Line_2 $$ protected void paintRow(final Graphics g, final Rectangle clipBounds, final Insets insets, final Rectangle bounds, final TreePath path, final int row, final boolean isExpanded, final boolean hasBeenExpanded, final boolean isLeaf) -->Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()[ FD ]
Line_7 $$ Graphics2D rowGraphics = (Graphics2D) g.create()-->Line_8 $$ rowGraphics.setClip(clipBounds)[ FD ]
