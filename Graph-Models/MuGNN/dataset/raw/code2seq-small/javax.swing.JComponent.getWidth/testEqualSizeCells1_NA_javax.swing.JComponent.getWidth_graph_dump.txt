Line_4 $$ final JTextField field1 = new JTextField()-->Line_14 $$ converter.addComponent(field1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_11 $$ field3.setMinimumSize(new Dimension(70, 20))[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_24 $$ assertEquals(100, field1.getWidth())[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_20 $$ final Dimension preferredSize = panel.getPreferredSize()[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_27 $$ panel.setSize(new Dimension(1000, 1000))[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_22 $$ panel.setSize(panel.getPreferredSize())[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_20 $$ final Dimension preferredSize = panel.getPreferredSize()[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_21 $$ assertEquals(100 + 7 + 100 + 7 + 100, preferredSize.width)[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_30 $$ assertEquals(329, field2.getWidth(), 1.0)[ CD ]
Line_13 $$ GridBagConverter converter = new GridBagConverter(new Insets(0, 0, 0, 0), 7, 0, true, false)-->Line_15 $$ converter.addComponent(field2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_8 $$ field2.setMinimumSize(new Dimension(25, 20))[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_15 $$ converter.addComponent(field2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_17 $$ applyConversionResults(panel, converter)[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_25 $$ assertEquals(100, field2.getWidth())[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_26 $$ assertEquals(100, field3.getWidth())[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_12 $$ field3.setPreferredSize(new Dimension(100, 20))[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_14 $$ converter.addComponent(field1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_10 $$ final JTextField field3 = new JTextField()[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_22 $$ panel.setSize(panel.getPreferredSize())[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_27 $$ panel.setSize(new Dimension(1000, 1000))[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_4 $$ final JTextField field1 = new JTextField()[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_31 $$ assertEquals(328, field3.getWidth(), 1.0)[ CD ]
Line_10 $$ final JTextField field3 = new JTextField()-->Line_26 $$ assertEquals(100, field3.getWidth())[ FD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_30 $$ assertEquals(329, field2.getWidth(), 1.0)[ FD ]
Line_4 $$ final JTextField field1 = new JTextField()-->Line_24 $$ assertEquals(100, field1.getWidth())[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_6 $$ field1.setPreferredSize(new Dimension(10, 20))[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_7 $$ final JTextField field2 = new JTextField()[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_28 $$ panel.doLayout()[ FD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_15 $$ converter.addComponent(field2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_10 $$ final JTextField field3 = new JTextField()-->Line_31 $$ assertEquals(328, field3.getWidth(), 1.0)[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_16 $$ converter.addComponent(field3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ CD ]
Line_10 $$ final JTextField field3 = new JTextField()-->Line_12 $$ field3.setPreferredSize(new Dimension(100, 20))[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_5 $$ field1.setMinimumSize(new Dimension(5, 20))[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_23 $$ panel.doLayout()[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_8 $$ field2.setMinimumSize(new Dimension(25, 20))[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_19 $$ assertEquals(70 + 7 + 70 + 7 + 70, minimumSize.width)[ CD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_25 $$ assertEquals(100, field2.getWidth())[ FD ]
Line_10 $$ final JTextField field3 = new JTextField()-->Line_16 $$ converter.addComponent(field3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_13 $$ GridBagConverter converter = new GridBagConverter(new Insets(0, 0, 0, 0), 7, 0, true, false)[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_18 $$ final Dimension minimumSize = panel.getMinimumSize()[ FD ]
Line_4 $$ final JTextField field1 = new JTextField()-->Line_6 $$ field1.setPreferredSize(new Dimension(10, 20))[ FD ]
Line_13 $$ GridBagConverter converter = new GridBagConverter(new Insets(0, 0, 0, 0), 7, 0, true, false)-->Line_16 $$ converter.addComponent(field3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_13 $$ GridBagConverter converter = new GridBagConverter(new Insets(0, 0, 0, 0), 7, 0, true, false)-->Line_17 $$ applyConversionResults(panel, converter)[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_18 $$ final Dimension minimumSize = panel.getMinimumSize()[ CD ]
Line_4 $$ final JTextField field1 = new JTextField()-->Line_5 $$ field1.setMinimumSize(new Dimension(5, 20))[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_17 $$ applyConversionResults(panel, converter)[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_23 $$ panel.doLayout()[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_9 $$ field2.setPreferredSize(new Dimension(50, 20))[ CD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_28 $$ panel.doLayout()[ CD ]
Line_7 $$ final JTextField field2 = new JTextField()-->Line_9 $$ field2.setPreferredSize(new Dimension(50, 20))[ FD ]
Line_2 $$ public void testEqualSizeCells1() -->Line_29 $$ assertEquals(329, field1.getWidth(), 1.0)[ CD ]
Line_4 $$ final JTextField field1 = new JTextField()-->Line_29 $$ assertEquals(329, field1.getWidth(), 1.0)[ FD ]
Line_13 $$ GridBagConverter converter = new GridBagConverter(new Insets(0, 0, 0, 0), 7, 0, true, false)-->Line_14 $$ converter.addComponent(field1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_10 $$ final JTextField field3 = new JTextField()-->Line_11 $$ field3.setMinimumSize(new Dimension(70, 20))[ FD ]
