Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_18 $$ final int leftOffset = tornSeparator.getLeftOffset()[ CD ]
Line_16 $$ final FragmentSeparatorsPositionConsumer.TornSeparator tornSeparator = entry.getValue()-->Line_20 $$ final int rightOffset = tornSeparator.getRightOffset()[ FD ]
Line_23 $$ int x2 = width-->Line_48 $$ g.drawLine(x1 + dx, y1 + dy - TornLineParams.ourLight, x2, y2 - TornLineParams.ourLight)[ FD ]
Line_16 $$ final FragmentSeparatorsPositionConsumer.TornSeparator tornSeparator = entry.getValue()-->Line_19 $$ int leftBaseY = myAppender1.getEditor().logicalPositionToXY(new LogicalPosition(tornSeparator.getLeftLine(), 0)).y - lineHeight / 2 - leftScrollOffset + myDiffDividerPolygonsOffset[ FD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_19 $$ int leftBaseY = myAppender1.getEditor().logicalPositionToXY(new LogicalPosition(tornSeparator.getLeftLine(), 0)).y - lineHeight / 2 - leftScrollOffset + myDiffDividerPolygonsOffset[ CD ]
Line_23 $$ int x2 = width-->Line_34 $$ g.drawLine(x2, y2 - TornLineParams.ourDark, x2 - dx, y2 + dy - TornLineParams.ourDark)[ FD ]
Line_22 $$ int x1 = 0-->Line_32 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x2 - dx, y2 + dy - TornLineParams.ourDark)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_30 $$ g.setColor(FragmentBoundRenderer.darkerBorder())[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_35 $$ g.setColor(FragmentBoundRenderer.darkerBorder().darker())[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_49 $$ g.drawLine(x2, y2 + TornLineParams.ourLight, x2 - dx, y2 - dy + TornLineParams.ourLight)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_43 $$ g.drawLine(x1 + dx, y1 + dy - TornLineParams.ourDark, x2, y2 - TornLineParams.ourDark)[ CD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_6 $$ final int startRight = getStartVisibleLine(myAppender2.getEditor())[ CD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_22 $$ int x1 = 0[ CD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_28 $$ int dy = TornLineParams.ourLight[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_41 $$ g.setColor(FragmentBoundRenderer.darkerBorder())[ FD ]
Line_23 $$ int x2 = width-->Line_55 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x2, y2 - TornLineParams.ourDark)[ FD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_5 $$ final int startLeft = getStartVisibleLine(myAppender1.getEditor())[ CD ]
Line_29 $$ if (y2 < y1) -->Line_38 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x1 + dx, y1 - dy + TornLineParams.ourLight)[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_38 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x1 + dx, y1 - dy + TornLineParams.ourLight)[ FD ]
Line_23 $$ int x2 = width-->Line_57 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x2, y2 + TornLineParams.ourLight)[ FD ]
Line_3 $$ if (myAppender1.getEditor() == null || myAppender2.getEditor() == null)-->Line_4 $$ return[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_54 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x2, y2 + TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_46 $$ g.setColor(FragmentBoundRenderer.darkerBorder().darker())[ FD ]
Line_22 $$ int x1 = 0-->Line_33 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x1 + dx, y1 - dy + TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_63 $$ g.dispose()[ FD ]
Line_22 $$ int x1 = 0-->Line_38 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x1 + dx, y1 - dy + TornLineParams.ourLight)[ FD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_7 $$ final int width = component.getWidth()[ CD ]
Line_29 $$ if (y2 < y1) -->Line_44 $$ g.drawLine(x2, y2 + TornLineParams.ourDark, x2 - dx, y2 - dy + TornLineParams.ourDark)[ CD ]
Line_22 $$ int x1 = 0-->Line_58 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x2, y2 - TornLineParams.ourLight)[ FD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_9 $$ final TreeMap<Integer, FragmentSeparatorsPositionConsumer.TornSeparator> left = mySeparatorsPositionConsumer.getLeft()[ CD ]
Line_22 $$ int x1 = 0-->Line_45 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x1 + dx, y1 + dy - TornLineParams.ourDark)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_32 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x2 - dx, y2 + dy - TornLineParams.ourDark)[ CD ]
Line_29 $$ if (y2 < y1) -->Line_34 $$ g.drawLine(x2, y2 - TornLineParams.ourDark, x2 - dx, y2 + dy - TornLineParams.ourDark)[ CD ]
Line_29 $$ if (y2 < y1) -->Line_47 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x2 - dx, y2 - dy + TornLineParams.ourLight)[ CD ]
Line_23 $$ int x2 = width-->Line_44 $$ g.drawLine(x2, y2 + TornLineParams.ourDark, x2 - dx, y2 - dy + TornLineParams.ourDark)[ FD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_57 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x2, y2 + TornLineParams.ourLight)[ CD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_3 $$ if (myAppender1.getEditor() == null || myAppender2.getEditor() == null)[ CD ]
Line_22 $$ int x1 = 0-->Line_50 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x1 + dx, y1 + dy - TornLineParams.ourLight)[ FD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_24 $$ int y1 = leftBaseY + leftOffset[ CD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_10 $$ final int leftScrollOffset = myAppender1.getEditor().getScrollingModel().getVerticalScrollOffset()[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_33 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x1 + dx, y1 - dy + TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_55 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x2, y2 - TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_47 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x2 - dx, y2 - dy + TornLineParams.ourLight)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_31 $$ g.drawLine(x1 + dx, y1 - dy + TornLineParams.ourDark, x2, y2 + TornLineParams.ourDark)[ CD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_27 $$ int dx = TornLineParams.ourDark[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_50 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x1 + dx, y1 + dy - TornLineParams.ourLight)[ FD ]
Line_23 $$ int x2 = width-->Line_58 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x2, y2 - TornLineParams.ourLight)[ FD ]
Line_23 $$ int x2 = width-->Line_36 $$ g.drawLine(x1 + dx, y1 - dy + TornLineParams.ourLight, x2, y2 + TornLineParams.ourLight)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_39 $$ g.drawLine(x2, y2 - TornLineParams.ourLight, x2 - dx, y2 + dy - TornLineParams.ourLight)[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_57 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x2, y2 + TornLineParams.ourLight)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_36 $$ g.drawLine(x1 + dx, y1 - dy + TornLineParams.ourLight, x2, y2 + TornLineParams.ourLight)[ FD ]
Line_24 $$ int y1 = leftBaseY + leftOffset-->Line_29 $$ if (y2 < y1) [ FD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_58 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x2, y2 - TornLineParams.ourLight)[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_56 $$ g.setColor(FragmentBoundRenderer.darkerBorder().darker())[ FD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_23 $$ int x2 = width[ CD ]
Line_23 $$ int x2 = width-->Line_43 $$ g.drawLine(x1 + dx, y1 + dy - TornLineParams.ourDark, x2, y2 - TornLineParams.ourDark)[ FD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) [ CD ]
Line_23 $$ int x2 = width-->Line_54 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x2, y2 + TornLineParams.ourDark)[ FD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_20 $$ final int rightOffset = tornSeparator.getRightOffset()[ CD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_56 $$ g.setColor(FragmentBoundRenderer.darkerBorder().darker())[ CD ]
Line_29 $$ if (y2 < y1) -->Line_46 $$ g.setColor(FragmentBoundRenderer.darkerBorder().darker())[ CD ]
Line_25 $$ int y2 = rightBaseY + rightOffset-->Line_29 $$ if (y2 < y1) [ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_30 $$ g.setColor(FragmentBoundRenderer.darkerBorder())[ FD ]
Line_29 $$ if (y2 < y1) -->Line_49 $$ g.drawLine(x2, y2 + TornLineParams.ourLight, x2 - dx, y2 - dy + TornLineParams.ourLight)[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_43 $$ g.drawLine(x1 + dx, y1 + dy - TornLineParams.ourDark, x2, y2 - TornLineParams.ourDark)[ FD ]
Line_22 $$ int x1 = 0-->Line_37 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x2 - dx, y2 + dy - TornLineParams.ourLight)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_45 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x1 + dx, y1 + dy - TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_39 $$ g.drawLine(x2, y2 - TornLineParams.ourLight, x2 - dx, y2 + dy - TornLineParams.ourLight)[ FD ]
Line_22 $$ int x1 = 0-->Line_57 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x2, y2 + TornLineParams.ourLight)[ FD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_29 $$ if (y2 < y1) [ CD ]
Line_22 $$ int x1 = 0-->Line_47 $$ g.drawLine(x1, y1 + TornLineParams.ourLight, x2 - dx, y2 - dy + TornLineParams.ourLight)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_35 $$ g.setColor(FragmentBoundRenderer.darkerBorder().darker())[ CD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_7 $$ final int width = component.getWidth()[ FD ]
Line_29 $$ if (y2 < y1) -->Line_36 $$ g.drawLine(x1 + dx, y1 - dy + TornLineParams.ourLight, x2, y2 + TornLineParams.ourLight)[ CD ]
Line_29 $$ if (y2 < y1) -->Line_42 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x2 - dx, y2 - dy + TornLineParams.ourDark)[ CD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_53 $$ g.setColor(FragmentBoundRenderer.darkerBorder())[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_31 $$ g.drawLine(x1 + dx, y1 - dy + TornLineParams.ourDark, x2, y2 + TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_58 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x2, y2 - TornLineParams.ourLight)[ FD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_12 $$ final Graphics g = gr.create()[ FD ]
Line_9 $$ final TreeMap<Integer, FragmentSeparatorsPositionConsumer.TornSeparator> left = mySeparatorsPositionConsumer.getLeft()-->Line_15 $$ for (Map.Entry<Integer, FragmentSeparatorsPositionConsumer.TornSeparator> entry : left.entrySet()) [ FD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_12 $$ final Graphics g = gr.create()[ CD ]
Line_15 $$ for (Map.Entry<Integer, FragmentSeparatorsPositionConsumer.TornSeparator> entry : left.entrySet()) -->Line_16 $$ final FragmentSeparatorsPositionConsumer.TornSeparator tornSeparator = entry.getValue()[ FD ]
Line_22 $$ int x1 = 0-->Line_42 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x2 - dx, y2 - dy + TornLineParams.ourDark)[ FD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_55 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x2, y2 - TornLineParams.ourDark)[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_53 $$ g.setColor(FragmentBoundRenderer.darkerBorder())[ FD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_11 $$ final int rightScrollOffset = myAppender2.getEditor().getScrollingModel().getVerticalScrollOffset()[ CD ]
Line_22 $$ int x1 = 0-->Line_55 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x2, y2 - TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_44 $$ g.drawLine(x2, y2 + TornLineParams.ourDark, x2 - dx, y2 - dy + TornLineParams.ourDark)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_41 $$ g.setColor(FragmentBoundRenderer.darkerBorder())[ CD ]
Line_22 $$ int x1 = 0-->Line_54 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x2, y2 + TornLineParams.ourDark)[ FD ]
Line_23 $$ int x2 = width-->Line_31 $$ g.drawLine(x1 + dx, y1 - dy + TornLineParams.ourDark, x2, y2 + TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_32 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x2 - dx, y2 + dy - TornLineParams.ourDark)[ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_48 $$ g.drawLine(x1 + dx, y1 + dy - TornLineParams.ourLight, x2, y2 - TornLineParams.ourLight)[ FD ]
Line_29 $$ if (y2 < y1) -->Line_37 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x2 - dx, y2 + dy - TornLineParams.ourLight)[ CD ]
Line_29 $$ if (y2 < y1) -->Line_48 $$ g.drawLine(x1 + dx, y1 + dy - TornLineParams.ourLight, x2, y2 - TornLineParams.ourLight)[ CD ]
Line_29 $$ if (y2 < y1) -->Line_50 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x1 + dx, y1 + dy - TornLineParams.ourLight)[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_42 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x2 - dx, y2 - dy + TornLineParams.ourDark)[ FD ]
Line_26 $$ if (Math.abs(x2 - x1) < Math.abs(y2 - y1)) -->Line_54 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x2, y2 + TornLineParams.ourDark)[ CD ]
Line_29 $$ if (y2 < y1) -->Line_33 $$ g.drawLine(x1, y1 + TornLineParams.ourDark, x1 + dx, y1 - dy + TornLineParams.ourDark)[ CD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_25 $$ int y2 = rightBaseY + rightOffset[ CD ]
Line_23 $$ int x2 = width-->Line_49 $$ g.drawLine(x2, y2 + TornLineParams.ourLight, x2 - dx, y2 - dy + TornLineParams.ourLight)[ FD ]
Line_16 $$ final FragmentSeparatorsPositionConsumer.TornSeparator tornSeparator = entry.getValue()-->Line_18 $$ final int leftOffset = tornSeparator.getLeftOffset()[ FD ]
Line_16 $$ final FragmentSeparatorsPositionConsumer.TornSeparator tornSeparator = entry.getValue()-->Line_21 $$ int rightBaseY = myAppender2.getEditor().logicalPositionToXY(new LogicalPosition(tornSeparator.getRightLine(), 0)).y - lineHeight / 2 - rightScrollOffset + myDiffDividerPolygonsOffset[ FD ]
Line_23 $$ int x2 = width-->Line_39 $$ g.drawLine(x2, y2 - TornLineParams.ourLight, x2 - dx, y2 + dy - TornLineParams.ourLight)[ FD ]
Line_2 $$ public void drawOnDivider(Graphics gr, JComponent component) -->Line_8 $$ final int lineHeight = myAppender1.getEditor().getLineHeight()[ CD ]
Line_12 $$ final Graphics g = gr.create()-->Line_34 $$ g.drawLine(x2, y2 - TornLineParams.ourDark, x2 - dx, y2 + dy - TornLineParams.ourDark)[ FD ]
Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) -->Line_21 $$ int rightBaseY = myAppender2.getEditor().logicalPositionToXY(new LogicalPosition(tornSeparator.getRightLine(), 0)).y - lineHeight / 2 - rightScrollOffset + myDiffDividerPolygonsOffset[ CD ]
Line_29 $$ if (y2 < y1) -->Line_45 $$ g.drawLine(x1, y1 - TornLineParams.ourDark, x1 + dx, y1 + dy - TornLineParams.ourDark)[ CD ]
Line_16 $$ final FragmentSeparatorsPositionConsumer.TornSeparator tornSeparator = entry.getValue()-->Line_17 $$ if (tornSeparator.getLeftLine() >= startLeft || tornSeparator.getRightLine() >= startRight) [ FD ]
Line_12 $$ final Graphics g = gr.create()-->Line_37 $$ g.drawLine(x1, y1 - TornLineParams.ourLight, x2 - dx, y2 + dy - TornLineParams.ourLight)[ FD ]
