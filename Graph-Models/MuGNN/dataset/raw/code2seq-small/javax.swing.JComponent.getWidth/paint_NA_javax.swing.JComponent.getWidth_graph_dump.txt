Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_6 $$ Editor editor1 = mySide.select(getEditor(ThreeSide.LEFT), getEditor(ThreeSide.BASE))[ CD ]
Line_3 $$ Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent())-->Line_4 $$ gg.setColor(DiffDrawUtil.getDividerColor(getEditor(ThreeSide.BASE)))[ FD ]
Line_3 $$ Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent())-->Line_8 $$ DiffDividerDrawUtil.paintPolygons(gg, divider.getWidth(), editor1, editor2, myPaintable)[ FD ]
Line_3 $$ Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent())-->Line_9 $$ myFoldingModel.paintOnDivider(gg, divider, mySide)[ FD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_3 $$ Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent())[ CD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_8 $$ DiffDividerDrawUtil.paintPolygons(gg, divider.getWidth(), editor1, editor2, myPaintable)[ CD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_5 $$ gg.fill(gg.getClipBounds())[ CD ]
Line_7 $$ Editor editor2 = mySide.select(getEditor(ThreeSide.BASE), getEditor(ThreeSide.RIGHT))-->Line_8 $$ DiffDividerDrawUtil.paintPolygons(gg, divider.getWidth(), editor1, editor2, myPaintable)[ FD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_8 $$ DiffDividerDrawUtil.paintPolygons(gg, divider.getWidth(), editor1, editor2, myPaintable)[ FD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_9 $$ myFoldingModel.paintOnDivider(gg, divider, mySide)[ FD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_7 $$ Editor editor2 = mySide.select(getEditor(ThreeSide.BASE), getEditor(ThreeSide.RIGHT))[ CD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_10 $$ gg.dispose()[ CD ]
Line_3 $$ Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent())-->Line_10 $$ gg.dispose()[ FD ]
Line_6 $$ Editor editor1 = mySide.select(getEditor(ThreeSide.LEFT), getEditor(ThreeSide.BASE))-->Line_8 $$ DiffDividerDrawUtil.paintPolygons(gg, divider.getWidth(), editor1, editor2, myPaintable)[ FD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_4 $$ gg.setColor(DiffDrawUtil.getDividerColor(getEditor(ThreeSide.BASE)))[ CD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_3 $$ Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent())[ FD ]
Line_2 $$ public void paint(@NotNull Graphics g, @NotNull JComponent divider) -->Line_9 $$ myFoldingModel.paintOnDivider(gg, divider, mySide)[ CD ]
Line_3 $$ Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent())-->Line_5 $$ gg.fill(gg.getClipBounds())[ FD ]
