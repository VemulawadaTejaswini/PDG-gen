Line_2 $$ public void addRow() -->Line_18 $$ final ListPopup popup = JBPopupFactory.getInstance().createActionGroupPopup(ScopesChooser.TITLE, scopesChooser.createPopupActionGroup(myTable), dataContext, JBPopupFactory.ActionSelectionAid.SPEEDSEARCH, false)[ CD ]
Line_8 $$ final ScopesChooser scopesChooser = new ScopesChooser(descriptors, myInspectionProfile, myProject, myScopeNames) -->Line_11 $$ refreshAggregatedScopes()[ CD ]
Line_8 $$ final ScopesChooser scopesChooser = new ScopesChooser(descriptors, myInspectionProfile, myProject, myScopeNames) -->Line_10 $$ myTableSettings.onScopeAdded()[ CD ]
Line_2 $$ public void addRow() -->Line_17 $$ DataContext dataContext = DataManager.getInstance().getDataContext(myTable)[ CD ]
Line_3 $$ final List<Descriptor> descriptors = ContainerUtil.map(myTableSettings.getNodes(), new Function<InspectionConfigTreeNode, Descriptor>() -->Line_5 $$ return inspectionConfigTreeNode.getDefaultDescriptor()[ CD ]
Line_2 $$ public void addRow() -->Line_3 $$ final List<Descriptor> descriptors = ContainerUtil.map(myTableSettings.getNodes(), new Function<InspectionConfigTreeNode, Descriptor>() [ CD ]
Line_8 $$ final ScopesChooser scopesChooser = new ScopesChooser(descriptors, myInspectionProfile, myProject, myScopeNames) -->Line_14 $$ myTableSettings.onScopesOrderChanged()[ CD ]
Line_2 $$ public void addRow() -->Line_20 $$ popup.show(point)[ CD ]
Line_3 $$ final List<Descriptor> descriptors = ContainerUtil.map(myTableSettings.getNodes(), new Function<InspectionConfigTreeNode, Descriptor>() -->Line_5 $$ return inspectionConfigTreeNode.getDefaultDescriptor()[ FD ]
