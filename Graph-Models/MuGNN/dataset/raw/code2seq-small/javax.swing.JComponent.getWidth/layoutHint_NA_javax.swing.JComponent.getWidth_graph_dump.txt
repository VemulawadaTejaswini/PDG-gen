Line_6 $$ JScrollBar sb = myScrollPane.getVerticalScrollBar()-->Line_7 $$ int x = bounds.x + bounds.width - myElementHint.getWidth() + (sb.isVisible() ? sb.getWidth() : 0)[ FD ]
Line_3 $$ if (myElementHint != null && myLookup.getCurrentItem() != null) -->Line_6 $$ JScrollBar sb = myScrollPane.getVerticalScrollBar()[ CD ]
Line_3 $$ if (myElementHint != null && myLookup.getCurrentItem() != null) -->Line_5 $$ myElementHint.setSize(myElementHint.getPreferredSize())[ CD ]
Line_3 $$ if (myElementHint != null && myLookup.getCurrentItem() != null) -->Line_9 $$ myElementHint.setLocation(new Point(x, bounds.y))[ CD ]
Line_7 $$ int x = bounds.x + bounds.width - myElementHint.getWidth() + (sb.isVisible() ? sb.getWidth() : 0)-->Line_8 $$ x = Math.min(x, getWidth() - myElementHint.getWidth())[ FD ]
Line_3 $$ if (myElementHint != null && myLookup.getCurrentItem() != null) -->Line_7 $$ int x = bounds.x + bounds.width - myElementHint.getWidth() + (sb.isVisible() ? sb.getWidth() : 0)[ CD ]
Line_3 $$ if (myElementHint != null && myLookup.getCurrentItem() != null) -->Line_4 $$ final Rectangle bounds = myLookup.getCurrentItemBounds()[ CD ]
Line_3 $$ if (myElementHint != null && myLookup.getCurrentItem() != null) -->Line_8 $$ x = Math.min(x, getWidth() - myElementHint.getWidth())[ CD ]
Line_2 $$ void layoutHint() -->Line_3 $$ if (myElementHint != null && myLookup.getCurrentItem() != null) [ CD ]
