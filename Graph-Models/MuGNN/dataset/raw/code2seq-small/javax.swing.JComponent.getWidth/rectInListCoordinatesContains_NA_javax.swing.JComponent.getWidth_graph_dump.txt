Line_2 $$ private boolean rectInListCoordinatesContains(Rectangle listCellBounds, Point p) -->Line_3 $$ int realCloseButtonInset = (UIUtil.isRetina((Graphics2D) myList.getGraphics())) ? closeButtonInset * 2 : closeButtonInset[ CD ]
Line_5 $$ Rectangle rectInListCoordinates = new Rectangle(new Point(closeButtonRect.x + listCellBounds.x, closeButtonRect.y + listCellBounds.y), closeButtonRect.getSize())-->Line_6 $$ return rectInListCoordinates.contains(p)[ FD ]
Line_4 $$ Rectangle closeButtonRect = new Rectangle(myCloseButtonForEditor.getX() - realCloseButtonInset, myCloseButtonForEditor.getY() - realCloseButtonInset, myCloseButtonForEditor.getWidth() + realCloseButtonInset * 2, myCloseButtonForEditor.getHeight() + realCloseButtonInset * 2)-->Line_5 $$ Rectangle rectInListCoordinates = new Rectangle(new Point(closeButtonRect.x + listCellBounds.x, closeButtonRect.y + listCellBounds.y), closeButtonRect.getSize())[ FD ]
Line_2 $$ private boolean rectInListCoordinatesContains(Rectangle listCellBounds, Point p) -->Line_4 $$ Rectangle closeButtonRect = new Rectangle(myCloseButtonForEditor.getX() - realCloseButtonInset, myCloseButtonForEditor.getY() - realCloseButtonInset, myCloseButtonForEditor.getWidth() + realCloseButtonInset * 2, myCloseButtonForEditor.getHeight() + realCloseButtonInset * 2)[ CD ]
Line_2 $$ private boolean rectInListCoordinatesContains(Rectangle listCellBounds, Point p) -->Line_6 $$ return rectInListCoordinates.contains(p)[ CD ]
Line_2 $$ private boolean rectInListCoordinatesContains(Rectangle listCellBounds, Point p) -->Line_5 $$ Rectangle rectInListCoordinates = new Rectangle(new Point(closeButtonRect.x + listCellBounds.x, closeButtonRect.y + listCellBounds.y), closeButtonRect.getSize())[ CD ]
Line_2 $$ private boolean rectInListCoordinatesContains(Rectangle listCellBounds, Point p) -->Line_6 $$ return rectInListCoordinates.contains(p)[ FD ]
