Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_17 $$ SwingUtilities.convertPointFromScreen(p, externalComponent)[ FD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_10 $$ final Point point = new Point(p)[ CD ]
Line_10 $$ final Point point = new Point(p)-->Line_11 $$ SwingUtilities.convertPointToScreen(point, externalComponent)[ FD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_9 $$ SwingUtilities.convertPointToScreen(editorCorner, externalComponent)[ CD ]
Line_16 $$ p = rectangle.getLocation()-->Line_17 $$ SwingUtilities.convertPointFromScreen(p, externalComponent)[ FD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_12 $$ final Rectangle editorScreen = ScreenUtil.getScreenRectangle(point.x, point.y)[ CD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_18 $$ if (externalComponent.getWidth() < p.x + size.width && !hintInfo.isAwtTooltip()) [ CD ]
Line_21 $$ if (hint.isVisible()) -->Line_28 $$ hint.show(externalComponent, p.x, p.y, editor.getContentComponent(), hintInfo)[ CD ]
Line_12 $$ final Rectangle editorScreen = ScreenUtil.getScreenRectangle(point.x, point.y)-->Line_15 $$ ScreenUtil.moveToFit(rectangle, editorScreen, null)[ FD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_16 $$ p = rectangle.getLocation()[ CD ]
Line_14 $$ final Rectangle rectangle = new Rectangle(p, size)-->Line_16 $$ p = rectangle.getLocation()[ FD ]
Line_5 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_18 $$ if (externalComponent.getWidth() < p.x + size.width && !hintInfo.isAwtTooltip()) [ FD ]
Line_5 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_19 $$ p.x = Math.max(0, externalComponent.getWidth() - size.width)[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_3 $$ if (ApplicationManager.getApplication().isUnitTestMode())[ CD ]
Line_5 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_11 $$ SwingUtilities.convertPointToScreen(point, externalComponent)[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_7 $$ if (hint.isRealPopup()) [ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_16 $$ p = rectangle.getLocation()[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_13 $$ SwingUtilities.convertPointToScreen(p, externalComponent)[ FD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_17 $$ SwingUtilities.convertPointFromScreen(p, externalComponent)[ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_7 $$ if (hint.isRealPopup()) [ FD ]
Line_3 $$ if (ApplicationManager.getApplication().isUnitTestMode())-->Line_4 $$ return[ CD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_15 $$ ScreenUtil.moveToFit(rectangle, editorScreen, null)[ CD ]
Line_5 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_17 $$ SwingUtilities.convertPointFromScreen(p, externalComponent)[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_21 $$ if (hint.isVisible()) [ CD ]
Line_21 $$ if (hint.isVisible()) -->Line_25 $$ hint.updatePosition(hintInfo.getPreferredPosition())[ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_6 $$ Dimension size = updateSize ? hint.getComponent().getPreferredSize() : hint.getComponent().getSize()[ FD ]
Line_22 $$ if (updateSize) -->Line_23 $$ hint.pack()[ CD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_14 $$ final Rectangle rectangle = new Rectangle(p, size)[ CD ]
Line_21 $$ if (hint.isVisible()) -->Line_26 $$ hint.updateLocation(p.x, p.y)[ CD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_11 $$ SwingUtilities.convertPointToScreen(point, externalComponent)[ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_8 $$ final Point editorCorner = editor.getComponent().getLocation()[ FD ]
Line_14 $$ final Rectangle rectangle = new Rectangle(p, size)-->Line_15 $$ ScreenUtil.moveToFit(rectangle, editorScreen, null)[ FD ]
Line_5 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_9 $$ SwingUtilities.convertPointToScreen(editorCorner, externalComponent)[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_18 $$ if (externalComponent.getWidth() < p.x + size.width && !hintInfo.isAwtTooltip()) [ FD ]
Line_18 $$ if (externalComponent.getWidth() < p.x + size.width && !hintInfo.isAwtTooltip()) -->Line_19 $$ p.x = Math.max(0, externalComponent.getWidth() - size.width)[ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_26 $$ hint.updateLocation(p.x, p.y)[ FD ]
Line_21 $$ if (hint.isVisible()) -->Line_22 $$ if (updateSize) [ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_6 $$ Dimension size = updateSize ? hint.getComponent().getPreferredSize() : hint.getComponent().getSize()[ CD ]
Line_5 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_13 $$ SwingUtilities.convertPointToScreen(p, externalComponent)[ FD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_8 $$ final Point editorCorner = editor.getComponent().getLocation()[ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_5 $$ JComponent externalComponent = getExternalComponent(editor)[ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_25 $$ hint.updatePosition(hintInfo.getPreferredPosition())[ FD ]
Line_8 $$ final Point editorCorner = editor.getComponent().getLocation()-->Line_9 $$ SwingUtilities.convertPointToScreen(editorCorner, externalComponent)[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_23 $$ hint.pack()[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_5 $$ JComponent externalComponent = getExternalComponent(editor)[ FD ]
Line_7 $$ if (hint.isRealPopup()) -->Line_13 $$ SwingUtilities.convertPointToScreen(p, externalComponent)[ CD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_28 $$ hint.show(externalComponent, p.x, p.y, editor.getContentComponent(), hintInfo)[ FD ]
Line_5 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_28 $$ hint.show(externalComponent, p.x, p.y, editor.getContentComponent(), hintInfo)[ FD ]
Line_2 $$ private static void doShowInGivenLocation(final LightweightHint hint, final Editor editor, Point p, HintHint hintInfo, boolean updateSize) -->Line_21 $$ if (hint.isVisible()) [ FD ]
