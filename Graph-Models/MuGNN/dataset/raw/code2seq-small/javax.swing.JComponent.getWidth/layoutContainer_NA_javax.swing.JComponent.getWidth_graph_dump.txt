Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_26 $$ toMakeVerticallyInCenter(myLeft, parent)[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_27 $$ toMakeVerticallyInCenter(myRight, parent)[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_4 $$ Dimension prefSize = parent.getPreferredSize()[ FD ]
Line_16 $$ if (rightWidth < rightMinSize.width) -->Line_19 $$ if (leftSize.width - diffToRightMin >= leftMinSize.width) [ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_11 $$ Dimension rightMinSize = myRight.getMinimumSize()[ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_8 $$ myRight.setBounds(parent.getWidth() - rightSize.width, 0, rightSize.width, parent.getHeight())[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_5 $$ if (prefSize.width <= size.width) [ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_15 $$ int rightWidth = size.width - rightX[ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_16 $$ if (rightWidth < rightMinSize.width) [ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_3 $$ Dimension size = parent.getSize()[ FD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_10 $$ Dimension leftMinSize = myLeft.getMinimumSize()[ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_24 $$ myRight.setBounds((int) myLeft.getBounds().getMaxX(), 0, parent.getWidth() - myLeft.getWidth(), parent.getHeight())[ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_14 $$ int rightX = (int) myLeft.getBounds().getMaxX()[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_6 $$ myLeft.setBounds(0, 0, myLeft.getPreferredSize().width, parent.getHeight())[ FD ]
Line_17 $$ Dimension leftSize = myLeft.getSize()-->Line_21 $$ myLeft.setSize(leftSize)[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_3 $$ Dimension size = parent.getSize()[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_13 $$ myLeft.setBounds(0, 0, myLeft.getPreferredSize().width - delta, parent.getHeight())[ FD ]
Line_18 $$ int diffToRightMin = rightMinSize.width - rightWidth-->Line_20 $$ leftSize.width -= diffToRightMin[ FD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_4 $$ Dimension prefSize = parent.getPreferredSize()[ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_6 $$ myLeft.setBounds(0, 0, myLeft.getPreferredSize().width, parent.getHeight())[ CD ]
Line_19 $$ if (leftSize.width - diffToRightMin >= leftMinSize.width) -->Line_21 $$ myLeft.setSize(leftSize)[ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_13 $$ myLeft.setBounds(0, 0, myLeft.getPreferredSize().width - delta, parent.getHeight())[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_8 $$ myRight.setBounds(parent.getWidth() - rightSize.width, 0, rightSize.width, parent.getHeight())[ FD ]
Line_15 $$ int rightWidth = size.width - rightX-->Line_16 $$ if (rightWidth < rightMinSize.width) [ FD ]
Line_16 $$ if (rightWidth < rightMinSize.width) -->Line_18 $$ int diffToRightMin = rightMinSize.width - rightWidth[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_24 $$ myRight.setBounds((int) myLeft.getBounds().getMaxX(), 0, parent.getWidth() - myLeft.getWidth(), parent.getHeight())[ FD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_12 $$ int delta = 0[ CD ]
Line_16 $$ if (rightWidth < rightMinSize.width) -->Line_17 $$ Dimension leftSize = myLeft.getSize()[ CD ]
Line_5 $$ if (prefSize.width <= size.width) -->Line_7 $$ Dimension rightSize = myRight.getPreferredSize()[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_27 $$ toMakeVerticallyInCenter(myRight, parent)[ FD ]
Line_19 $$ if (leftSize.width - diffToRightMin >= leftMinSize.width) -->Line_20 $$ leftSize.width -= diffToRightMin[ CD ]
Line_2 $$ public void layoutContainer(@NotNull final Container parent) -->Line_26 $$ toMakeVerticallyInCenter(myLeft, parent)[ FD ]
