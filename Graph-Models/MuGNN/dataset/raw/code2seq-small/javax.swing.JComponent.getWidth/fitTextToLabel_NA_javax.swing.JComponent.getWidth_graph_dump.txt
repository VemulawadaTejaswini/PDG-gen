Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_5 $$ while (label.getFontMetrics(label.getFont()).stringWidth(fullText) > label.getWidth()) [ FD ]
Line_7 $$ if (sep < 0)-->Line_8 $$ return fullText[ CD ]
Line_6 $$ int sep = fullText.indexOf(File.separatorChar, 4)-->Line_9 $$ fullText = "..." + fullText.substring(sep)[ FD ]
Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_6 $$ int sep = fullText.indexOf(File.separatorChar, 4)[ FD ]
Line_6 $$ int sep = fullText.indexOf(File.separatorChar, 4)-->Line_7 $$ if (sep < 0)[ FD ]
Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_9 $$ fullText = "..." + fullText.substring(sep)[ FD ]
Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_11 $$ return fullText[ CD ]
Line_5 $$ while (label.getFontMetrics(label.getFont()).stringWidth(fullText) > label.getWidth()) -->Line_7 $$ if (sep < 0)[ CD ]
Line_5 $$ while (label.getFontMetrics(label.getFont()).stringWidth(fullText) > label.getWidth()) -->Line_6 $$ int sep = fullText.indexOf(File.separatorChar, 4)[ CD ]
Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_7 $$ if (sep < 0)[ FD ]
Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_3 $$ if (fullText == null || fullText.isEmpty())[ FD ]
Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_3 $$ if (fullText == null || fullText.isEmpty())[ CD ]
Line_3 $$ if (fullText == null || fullText.isEmpty())-->Line_4 $$ return " "[ CD ]
Line_2 $$ private static String fitTextToLabel(@Nullable String fullText, @NotNull JLabel label) -->Line_5 $$ while (label.getFontMetrics(label.getFont()).stringWidth(fullText) > label.getWidth()) [ CD ]
