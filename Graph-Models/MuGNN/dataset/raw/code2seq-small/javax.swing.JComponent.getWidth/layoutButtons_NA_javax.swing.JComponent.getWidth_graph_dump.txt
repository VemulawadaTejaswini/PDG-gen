Line_3 $$ int buttonWidth = 0-->Line_8 $$ buttonWidth += buttons[i].getWidth()[ FD ]
Line_17 $$ for (JButton button : buttons) -->Line_18 $$ Dimension size = button.getSize()[ FD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_16 $$ int buttonShift = RIGHT_OFFSET[ CD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_13 $$ int buttonsRowWidth = LEFT_SHEET_OFFSET + buttonWidth + RIGHT_OFFSET[ CD ]
Line_3 $$ int buttonWidth = 0-->Line_11 $$ buttonWidth += GAP_BETWEEN_BUTTONS[ FD ]
Line_3 $$ int buttonWidth = 0-->Line_14 $$ messageTextPane.setSize(Math.max(messageTextPane.getWidth(), buttonWidth), messageTextPane.getHeight())[ FD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_3 $$ int buttonWidth = 0[ CD ]
Line_5 $$ for (int i = 0; i < buttons.length; i++) -->Line_9 $$ if (i == buttons.length - 1)[ CD ]
Line_5 $$ for (int i = 0; i < buttons.length; i++) -->Line_11 $$ buttonWidth += GAP_BETWEEN_BUTTONS[ CD ]
Line_8 $$ buttonWidth += buttons[i].getWidth()-->Line_14 $$ messageTextPane.setSize(Math.max(messageTextPane.getWidth(), buttonWidth), messageTextPane.getHeight())[ FD ]
Line_19 $$ buttonShift += size.width-->Line_22 $$ buttonShift += GAP_BETWEEN_BUTTONS[ FD ]
Line_17 $$ for (JButton button : buttons) -->Line_20 $$ button.setBounds(SHEET_WIDTH - buttonShift, SHEET_HEIGHT, size.width, size.height)[ FD ]
Line_16 $$ int buttonShift = RIGHT_OFFSET-->Line_22 $$ buttonShift += GAP_BETWEEN_BUTTONS[ FD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_24 $$ SHEET_HEIGHT += buttons[0].getHeight()[ CD ]
Line_16 $$ int buttonShift = RIGHT_OFFSET-->Line_19 $$ buttonShift += size.width[ FD ]
Line_13 $$ int buttonsRowWidth = LEFT_SHEET_OFFSET + buttonWidth + RIGHT_OFFSET-->Line_15 $$ SHEET_WIDTH = Math.max(buttonsRowWidth, SHEET_WIDTH)[ FD ]
Line_5 $$ for (int i = 0; i < buttons.length; i++) -->Line_6 $$ buttons[i].repaint()[ CD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_15 $$ SHEET_WIDTH = Math.max(buttonsRowWidth, SHEET_WIDTH)[ CD ]
Line_5 $$ for (int i = 0; i < buttons.length; i++) -->Line_7 $$ buttons[i].setSize(buttons[i].getPreferredSize())[ CD ]
Line_5 $$ for (int i = 0; i < buttons.length; i++) -->Line_9 $$ if (i == buttons.length - 1)[ FD ]
Line_8 $$ buttonWidth += buttons[i].getWidth()-->Line_11 $$ buttonWidth += GAP_BETWEEN_BUTTONS[ FD ]
Line_11 $$ buttonWidth += GAP_BETWEEN_BUTTONS-->Line_14 $$ messageTextPane.setSize(Math.max(messageTextPane.getWidth(), buttonWidth), messageTextPane.getHeight())[ FD ]
Line_5 $$ for (int i = 0; i < buttons.length; i++) -->Line_8 $$ buttonWidth += buttons[i].getWidth()[ CD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_21 $$ panel.add(button)[ FD ]
Line_17 $$ for (JButton button : buttons) -->Line_21 $$ panel.add(button)[ FD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_14 $$ messageTextPane.setSize(Math.max(messageTextPane.getWidth(), buttonWidth), messageTextPane.getHeight())[ CD ]
Line_2 $$ private void layoutButtons(final JButton[] buttons, JPanel panel) -->Line_5 $$ for (int i = 0; i < buttons.length; i++) [ CD ]
