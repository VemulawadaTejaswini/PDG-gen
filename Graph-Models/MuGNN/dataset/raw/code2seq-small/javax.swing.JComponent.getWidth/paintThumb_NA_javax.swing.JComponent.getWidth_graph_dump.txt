Line_3 $$ if (isMacOverlayScrollbar()) -->Line_25 $$ g.translate(-shift, 0)[ CD ]
Line_3 $$ if (isMacOverlayScrollbar()) -->Line_24 $$ super.paintThumb(g, c, thumbBounds)[ CD ]
Line_4 $$ if (!isMirrored()) -->Line_8 $$ AffineTransform old = g2d.getTransform()[ CD ]
Line_4 $$ if (!isMirrored()) -->Line_7 $$ Graphics2D g2d = (Graphics2D) g[ CD ]
Line_2 $$ protected void paintThumb(@NotNull Graphics g, @NotNull JComponent c, Rectangle thumbBounds) -->Line_3 $$ if (isMacOverlayScrollbar()) [ CD ]
Line_3 $$ if (isMacOverlayScrollbar()) -->Line_4 $$ if (!isMirrored()) [ CD ]
Line_16 $$ int shift-->Line_21 $$ shift = isMirrored() ? -half + 2 : half - 1[ FD ]
Line_7 $$ Graphics2D g2d = (Graphics2D) g-->Line_8 $$ AffineTransform old = g2d.getTransform()[ FD ]
Line_4 $$ if (!isMirrored()) -->Line_5 $$ super.paintThumb(g, c, thumbBounds)[ CD ]
Line_9 $$ AffineTransform tx = AffineTransform.getScaleInstance(-1, 1)-->Line_11 $$ g2d.transform(tx)[ FD ]
Line_4 $$ if (!isMirrored()) -->Line_12 $$ super.paintThumb(g, c, thumbBounds)[ CD ]
Line_17 $$ if (Registry.is("editor.full.width.scrollbar")) -->Line_18 $$ shift = isMirrored() ? -myMinMarkHeight + 1 : myMinMarkHeight[ CD ]
Line_2 $$ protected void paintThumb(@NotNull Graphics g, @NotNull JComponent c, Rectangle thumbBounds) -->Line_12 $$ super.paintThumb(g, c, thumbBounds)[ FD ]
Line_18 $$ shift = isMirrored() ? -myMinMarkHeight + 1 : myMinMarkHeight-->Line_21 $$ shift = isMirrored() ? -half + 2 : half - 1[ FD ]
Line_4 $$ if (!isMirrored()) -->Line_11 $$ g2d.transform(tx)[ CD ]
Line_4 $$ if (!isMirrored()) -->Line_13 $$ g2d.setTransform(old)[ CD ]
Line_3 $$ if (isMacOverlayScrollbar()) -->Line_17 $$ if (Registry.is("editor.full.width.scrollbar")) [ CD ]
Line_17 $$ if (Registry.is("editor.full.width.scrollbar")) -->Line_21 $$ shift = isMirrored() ? -half + 2 : half - 1[ CD ]
Line_18 $$ shift = isMirrored() ? -myMinMarkHeight + 1 : myMinMarkHeight-->Line_23 $$ g.translate(shift, 0)[ FD ]
Line_8 $$ AffineTransform old = g2d.getTransform()-->Line_13 $$ g2d.setTransform(old)[ FD ]
Line_9 $$ AffineTransform tx = AffineTransform.getScaleInstance(-1, 1)-->Line_10 $$ tx.translate(-c.getWidth(), 0)[ FD ]
Line_16 $$ int shift-->Line_25 $$ g.translate(-shift, 0)[ FD ]
Line_2 $$ protected void paintThumb(@NotNull Graphics g, @NotNull JComponent c, Rectangle thumbBounds) -->Line_5 $$ super.paintThumb(g, c, thumbBounds)[ FD ]
Line_3 $$ if (isMacOverlayScrollbar()) -->Line_23 $$ g.translate(shift, 0)[ CD ]
Line_18 $$ shift = isMirrored() ? -myMinMarkHeight + 1 : myMinMarkHeight-->Line_25 $$ g.translate(-shift, 0)[ FD ]
Line_7 $$ Graphics2D g2d = (Graphics2D) g-->Line_11 $$ g2d.transform(tx)[ FD ]
Line_2 $$ protected void paintThumb(@NotNull Graphics g, @NotNull JComponent c, Rectangle thumbBounds) -->Line_25 $$ g.translate(-shift, 0)[ FD ]
Line_17 $$ if (Registry.is("editor.full.width.scrollbar")) -->Line_20 $$ int half = getThickness() / 2[ CD ]
Line_4 $$ if (!isMirrored()) -->Line_9 $$ AffineTransform tx = AffineTransform.getScaleInstance(-1, 1)[ CD ]
Line_21 $$ shift = isMirrored() ? -half + 2 : half - 1-->Line_23 $$ g.translate(shift, 0)[ FD ]
Line_20 $$ int half = getThickness() / 2-->Line_21 $$ shift = isMirrored() ? -half + 2 : half - 1[ FD ]
Line_7 $$ Graphics2D g2d = (Graphics2D) g-->Line_13 $$ g2d.setTransform(old)[ FD ]
Line_4 $$ if (!isMirrored()) -->Line_10 $$ tx.translate(-c.getWidth(), 0)[ CD ]
Line_2 $$ protected void paintThumb(@NotNull Graphics g, @NotNull JComponent c, Rectangle thumbBounds) -->Line_10 $$ tx.translate(-c.getWidth(), 0)[ FD ]
Line_16 $$ int shift-->Line_18 $$ shift = isMirrored() ? -myMinMarkHeight + 1 : myMinMarkHeight[ FD ]
Line_2 $$ protected void paintThumb(@NotNull Graphics g, @NotNull JComponent c, Rectangle thumbBounds) -->Line_23 $$ g.translate(shift, 0)[ FD ]
Line_2 $$ protected void paintThumb(@NotNull Graphics g, @NotNull JComponent c, Rectangle thumbBounds) -->Line_24 $$ super.paintThumb(g, c, thumbBounds)[ FD ]
Line_3 $$ if (isMacOverlayScrollbar()) -->Line_16 $$ int shift[ CD ]
Line_16 $$ int shift-->Line_23 $$ g.translate(shift, 0)[ FD ]
Line_21 $$ shift = isMirrored() ? -half + 2 : half - 1-->Line_25 $$ g.translate(-shift, 0)[ FD ]
