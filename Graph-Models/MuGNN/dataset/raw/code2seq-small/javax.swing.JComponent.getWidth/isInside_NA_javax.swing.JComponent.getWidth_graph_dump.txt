Line_2 $$ private boolean isInside(Point p) -->Line_3 $$ if (!isVisible())[ CD ]
Line_6 $$ if (myVerticalSplit) -->Line_15 $$ if (p.y >= 0 && p.y < getHeight()) [ CD ]
Line_2 $$ private boolean isInside(Point p) -->Line_23 $$ return false[ CD ]
Line_8 $$ if (getHeight() > 0) -->Line_9 $$ return p.y >= -dndOff && p.y < getHeight() + dndOff[ CD ]
Line_8 $$ if (getHeight() > 0) -->Line_11 $$ return p.y >= -myDividerZone / 2 && p.y <= myDividerZone / 2[ CD ]
Line_2 $$ private boolean isInside(Point p) -->Line_6 $$ if (myVerticalSplit) [ CD ]
Line_2 $$ private boolean isInside(Point p) -->Line_5 $$ int dndOff = myIsOnePixel ? Registry.intValue("ide.splitter.mouseZone") / 2 : 0[ CD ]
Line_5 $$ int dndOff = myIsOnePixel ? Registry.intValue("ide.splitter.mouseZone") / 2 : 0-->Line_9 $$ return p.y >= -dndOff && p.y < getHeight() + dndOff[ FD ]
Line_16 $$ if (getWidth() > 0) -->Line_17 $$ return p.x >= -dndOff && p.x < getWidth() + dndOff[ CD ]
Line_15 $$ if (p.y >= 0 && p.y < getHeight()) -->Line_16 $$ if (getWidth() > 0) [ CD ]
Line_5 $$ int dndOff = myIsOnePixel ? Registry.intValue("ide.splitter.mouseZone") / 2 : 0-->Line_17 $$ return p.x >= -dndOff && p.x < getWidth() + dndOff[ FD ]
Line_7 $$ if (p.x >= 0 && p.x < getWidth()) -->Line_8 $$ if (getHeight() > 0) [ CD ]
Line_3 $$ if (!isVisible())-->Line_4 $$ return false[ CD ]
Line_16 $$ if (getWidth() > 0) -->Line_19 $$ return p.x >= -myDividerZone / 2 && p.x <= myDividerZone / 2[ CD ]
Line_6 $$ if (myVerticalSplit) -->Line_7 $$ if (p.x >= 0 && p.x < getWidth()) [ CD ]
