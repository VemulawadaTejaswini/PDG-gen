Line_7 $$ final JLabel label2 = new JLabel()-->Line_28 $$ assertEquals(100, label2.getWidth())[ FD ]
Line_2 $$ public void testLayout8() -->Line_12 $$ converter.addComponent(label2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ CD ]
Line_2 $$ public void testLayout8() -->Line_30 $$ panel.doLayout()[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_18 $$ panel.doLayout()[ FD ]
Line_2 $$ public void testLayout8() -->Line_19 $$ assertEquals(10, label1.getWidth())[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_30 $$ panel.doLayout()[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_26 $$ panel.doLayout()[ FD ]
Line_7 $$ final JLabel label2 = new JLabel()-->Line_24 $$ assertEquals(100, label2.getWidth())[ FD ]
Line_2 $$ public void testLayout8() -->Line_25 $$ panel.setSize(201, 100)[ CD ]
Line_2 $$ public void testLayout8() -->Line_22 $$ panel.doLayout()[ CD ]
Line_10 $$ GridBagConverter converter = new GridBagConverter()-->Line_11 $$ converter.addComponent(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK + GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_2 $$ public void testLayout8() -->Line_14 $$ applyConversionResults(panel, converter)[ CD ]
Line_2 $$ public void testLayout8() -->Line_6 $$ label1.setPreferredSize(new Dimension(100, 10))[ CD ]
Line_4 $$ final JLabel label1 = new JLabel()-->Line_19 $$ assertEquals(10, label1.getWidth())[ FD ]
Line_4 $$ final JLabel label1 = new JLabel()-->Line_27 $$ assertEquals(101, label1.getWidth())[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_25 $$ panel.setSize(201, 100)[ FD ]
Line_2 $$ public void testLayout8() -->Line_9 $$ label2.setPreferredSize(new Dimension(100, 10))[ CD ]
Line_7 $$ final JLabel label2 = new JLabel()-->Line_12 $$ converter.addComponent(label2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_2 $$ public void testLayout8() -->Line_5 $$ label1.setMinimumSize(new Dimension(10, 10))[ CD ]
Line_10 $$ GridBagConverter converter = new GridBagConverter()-->Line_13 $$ converter.addComponent(new JLabel(), new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK + GridConstraints.SIZEPOLICY_CAN_GROW + GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0))[ FD ]
Line_2 $$ public void testLayout8() -->Line_10 $$ GridBagConverter converter = new GridBagConverter()[ CD ]
Line_2 $$ public void testLayout8() -->Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())[ CD ]
Line_2 $$ public void testLayout8() -->Line_17 $$ panel.setSize(20, 100)[ CD ]
Line_2 $$ public void testLayout8() -->Line_7 $$ final JLabel label2 = new JLabel()[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_22 $$ panel.doLayout()[ FD ]
Line_2 $$ public void testLayout8() -->Line_29 $$ panel.setSize(205, 100)[ CD ]
Line_2 $$ public void testLayout8() -->Line_28 $$ assertEquals(100, label2.getWidth())[ CD ]
Line_7 $$ final JLabel label2 = new JLabel()-->Line_8 $$ label2.setMinimumSize(new Dimension(10, 10))[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_15 $$ assertEquals(20, panel.getMinimumSize().width)[ FD ]
Line_2 $$ public void testLayout8() -->Line_26 $$ panel.doLayout()[ CD ]
Line_4 $$ final JLabel label1 = new JLabel()-->Line_6 $$ label1.setPreferredSize(new Dimension(100, 10))[ FD ]
Line_2 $$ public void testLayout8() -->Line_8 $$ label2.setMinimumSize(new Dimension(10, 10))[ CD ]
Line_2 $$ public void testLayout8() -->Line_11 $$ converter.addComponent(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK + GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ CD ]
Line_2 $$ public void testLayout8() -->Line_27 $$ assertEquals(101, label1.getWidth())[ CD ]
Line_2 $$ public void testLayout8() -->Line_20 $$ assertEquals(10, label2.getWidth())[ CD ]
Line_10 $$ GridBagConverter converter = new GridBagConverter()-->Line_12 $$ converter.addComponent(label2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_4 $$ final JLabel label1 = new JLabel()-->Line_31 $$ assertEquals(105, label1.getWidth())[ FD ]
Line_2 $$ public void testLayout8() -->Line_32 $$ assertEquals(100, label2.getWidth())[ CD ]
Line_7 $$ final JLabel label2 = new JLabel()-->Line_20 $$ assertEquals(10, label2.getWidth())[ FD ]
Line_2 $$ public void testLayout8() -->Line_23 $$ assertEquals(100, label1.getWidth())[ CD ]
Line_2 $$ public void testLayout8() -->Line_13 $$ converter.addComponent(new JLabel(), new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK + GridConstraints.SIZEPOLICY_CAN_GROW + GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0))[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_17 $$ panel.setSize(20, 100)[ FD ]
Line_4 $$ final JLabel label1 = new JLabel()-->Line_5 $$ label1.setMinimumSize(new Dimension(10, 10))[ FD ]
Line_2 $$ public void testLayout8() -->Line_21 $$ panel.setSize(200, 100)[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_21 $$ panel.setSize(200, 100)[ FD ]
Line_4 $$ final JLabel label1 = new JLabel()-->Line_23 $$ assertEquals(100, label1.getWidth())[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_29 $$ panel.setSize(205, 100)[ FD ]
Line_2 $$ public void testLayout8() -->Line_31 $$ assertEquals(105, label1.getWidth())[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_16 $$ assertEquals(200, panel.getPreferredSize().width)[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new GridBagLayout())-->Line_14 $$ applyConversionResults(panel, converter)[ FD ]
Line_7 $$ final JLabel label2 = new JLabel()-->Line_9 $$ label2.setPreferredSize(new Dimension(100, 10))[ FD ]
Line_2 $$ public void testLayout8() -->Line_15 $$ assertEquals(20, panel.getMinimumSize().width)[ CD ]
Line_2 $$ public void testLayout8() -->Line_16 $$ assertEquals(200, panel.getPreferredSize().width)[ CD ]
Line_7 $$ final JLabel label2 = new JLabel()-->Line_32 $$ assertEquals(100, label2.getWidth())[ FD ]
Line_4 $$ final JLabel label1 = new JLabel()-->Line_11 $$ converter.addComponent(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK + GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0))[ FD ]
Line_10 $$ GridBagConverter converter = new GridBagConverter()-->Line_14 $$ applyConversionResults(panel, converter)[ FD ]
Line_2 $$ public void testLayout8() -->Line_18 $$ panel.doLayout()[ CD ]
Line_2 $$ public void testLayout8() -->Line_4 $$ final JLabel label1 = new JLabel()[ CD ]
Line_2 $$ public void testLayout8() -->Line_24 $$ assertEquals(100, label2.getWidth())[ CD ]
