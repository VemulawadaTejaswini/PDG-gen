Line_9 $$ distance = bounds.width-->Line_11 $$ distance = bounds.height[ FD ]
Line_17 $$ while (true) -->Line_18 $$ paintImmediately(0, 0, getWidth(), getHeight())[ CD ]
Line_6 $$ final int distance-->Line_11 $$ distance = bounds.height[ FD ]
Line_2 $$ public final void runMovement() -->Line_17 $$ while (true) [ CD ]
Line_17 $$ while (true) -->Line_21 $$ if (timeSpent >= myDesiredTimeToComplete)[ CD ]
Line_19 $$ final long timeSpent = System.currentTimeMillis() - startTime-->Line_21 $$ if (timeSpent >= myDesiredTimeToComplete)[ FD ]
Line_17 $$ while (true) -->Line_23 $$ final double onePaintTime = (double) timeSpent / count[ CD ]
Line_8 $$ if (myAnchor == ToolWindowAnchor.LEFT || myAnchor == ToolWindowAnchor.RIGHT) -->Line_9 $$ distance = bounds.width[ CD ]
Line_2 $$ public final void runMovement() -->Line_6 $$ final int distance[ CD ]
Line_17 $$ while (true) -->Line_19 $$ final long timeSpent = System.currentTimeMillis() - startTime[ CD ]
Line_17 $$ while (true) -->Line_25 $$ iterations = Math.max(1, iterations)[ CD ]
Line_2 $$ public final void runMovement() -->Line_15 $$ paintImmediately(0, 0, getWidth(), getHeight())[ CD ]
Line_17 $$ while (true) -->Line_20 $$ count++[ CD ]
Line_2 $$ public final void runMovement() -->Line_3 $$ if (!isShowing()) [ CD ]
Line_6 $$ final int distance-->Line_9 $$ distance = bounds.width[ FD ]
Line_2 $$ public final void runMovement() -->Line_13 $$ int count = 0[ CD ]
Line_2 $$ public final void runMovement() -->Line_16 $$ final long startTime = System.currentTimeMillis()[ CD ]
Line_13 $$ int count = 0-->Line_20 $$ count++[ FD ]
Line_8 $$ if (myAnchor == ToolWindowAnchor.LEFT || myAnchor == ToolWindowAnchor.RIGHT) -->Line_11 $$ distance = bounds.height[ CD ]
Line_2 $$ public final void runMovement() -->Line_7 $$ final Rectangle bounds = getBounds()[ CD ]
Line_17 $$ while (true) -->Line_24 $$ int iterations = (int) ((myDesiredTimeToComplete - timeSpent) / onePaintTime)[ CD ]
Line_24 $$ int iterations = (int) ((myDesiredTimeToComplete - timeSpent) / onePaintTime)-->Line_25 $$ iterations = Math.max(1, iterations)[ FD ]
Line_3 $$ if (!isShowing()) -->Line_4 $$ return[ CD ]
Line_2 $$ public final void runMovement() -->Line_8 $$ if (myAnchor == ToolWindowAnchor.LEFT || myAnchor == ToolWindowAnchor.RIGHT) [ CD ]
