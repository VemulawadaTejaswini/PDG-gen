Line_2 $$ private void calcAnnotationExtraSize() -->Line_9 $$ EditorSettings settings = myEditor.getSettings()[ CD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_18 $$ int width = editorLocationX + editorComponent.getWidth()[ CD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_6 $$ Window frame = SwingUtilities.getWindowAncestor(myEditor.getComponent())[ CD ]
Line_6 $$ Window frame = SwingUtilities.getWindowAncestor(myEditor.getComponent())-->Line_15 $$ Point editorLocationInWindow = point.getPoint(frame)[ FD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_10 $$ int rightMargin = settings.getRightMargin(myEditor.getProject())[ CD ]
Line_6 $$ Window frame = SwingUtilities.getWindowAncestor(myEditor.getComponent())-->Line_7 $$ if (frame == null)[ FD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_4 $$ if (!myEditor.isInDistractionFreeMode() || isMirrored())[ CD ]
Line_4 $$ if (!myEditor.isInDistractionFreeMode() || isMirrored())-->Line_5 $$ return[ CD ]
Line_13 $$ JComponent editorComponent = myEditor.getComponent()-->Line_18 $$ int width = editorLocationX + editorComponent.getWidth()[ FD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_14 $$ RelativePoint point = new RelativePoint(editorComponent, new Point(0, 0))[ CD ]
Line_10 $$ int rightMargin = settings.getRightMargin(myEditor.getProject())-->Line_11 $$ if (rightMargin <= 0)[ FD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_17 $$ int rightMarginX = rightMargin * EditorUtil.getSpaceWidth(Font.PLAIN, myEditor) + editorLocationX[ CD ]
Line_19 $$ if (rightMarginX < width && editorLocationX < width - rightMarginX) -->Line_20 $$ int centeredSize = (width - rightMarginX - editorLocationX) / 2 - (getLineMarkerAreaWidth() + getLineNumberAreaWidth() + getFoldingAreaWidth() + 2 * GAP_BETWEEN_AREAS)[ CD ]
Line_15 $$ Point editorLocationInWindow = point.getPoint(frame)-->Line_16 $$ int editorLocationX = (int) editorLocationInWindow.getX()[ FD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_15 $$ Point editorLocationInWindow = point.getPoint(frame)[ CD ]
Line_11 $$ if (rightMargin <= 0)-->Line_12 $$ return[ CD ]
Line_19 $$ if (rightMarginX < width && editorLocationX < width - rightMarginX) -->Line_21 $$ myTextAnnotationExtraSize = Math.max(0, centeredSize - myTextAnnotationGuttersSize)[ CD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_13 $$ JComponent editorComponent = myEditor.getComponent()[ CD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_16 $$ int editorLocationX = (int) editorLocationInWindow.getX()[ CD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_7 $$ if (frame == null)[ CD ]
Line_7 $$ if (frame == null)-->Line_8 $$ return[ CD ]
Line_9 $$ EditorSettings settings = myEditor.getSettings()-->Line_10 $$ int rightMargin = settings.getRightMargin(myEditor.getProject())[ FD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_11 $$ if (rightMargin <= 0)[ CD ]
Line_14 $$ RelativePoint point = new RelativePoint(editorComponent, new Point(0, 0))-->Line_15 $$ Point editorLocationInWindow = point.getPoint(frame)[ FD ]
Line_2 $$ private void calcAnnotationExtraSize() -->Line_19 $$ if (rightMarginX < width && editorLocationX < width - rightMarginX) [ CD ]
