Line_17 $$ width -= scrollPane.getVerticalScrollBar().getWidth()-->Line_19 $$ editorComponent.applyAvailableWidth(width)[ FD ]
Line_7 $$ if (myEditorRow < rowToEdit) -->Line_8 $$ rowToEdit--[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_20 $$ editor.reset(rowToEdit)[ CD ]
Line_14 $$ int width = getBounds().width-->Line_17 $$ width -= scrollPane.getVerticalScrollBar().getWidth()[ FD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_32 $$ repaintRows(rowToEdit, getModel().getRowCount() - 1, false)[ FD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_15 $$ JScrollPane scrollPane = JBScrollPane.findScrollPane(getParent())[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_31 $$ editorComponent.expand()[ CD ]
Line_6 $$ if (myEditorRow >= 0) -->Line_7 $$ if (myEditorRow < rowToEdit) [ CD ]
Line_6 $$ if (myEditorRow >= 0) -->Line_10 $$ hideEditor()[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_28 $$ if (bounds != null) [ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_20 $$ editor.reset(rowToEdit)[ FD ]
Line_16 $$ if (scrollPane != null) -->Line_17 $$ width -= scrollPane.getVerticalScrollBar().getWidth()[ CD ]
Line_14 $$ int width = getBounds().width-->Line_19 $$ editorComponent.applyAvailableWidth(width)[ FD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_27 $$ Rectangle bounds = getRowsBounds(rowToEdit, myEditorRow)[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_16 $$ if (scrollPane != null) [ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_13 $$ ArrangementEditorComponent editorComponent = new ArrangementEditorComponent(this, myEditorRow, editor)[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_14 $$ int width = getBounds().width[ CD ]
Line_28 $$ if (bounds != null) -->Line_29 $$ myRepresentationCallback.ensureVisible(bounds)[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_6 $$ if (myEditorRow >= 0) [ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_19 $$ editorComponent.applyAvailableWidth(width)[ CD ]
Line_3 $$ if (myEditorRow == rowToEdit + 1) -->Line_4 $$ return[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_27 $$ Rectangle bounds = getRowsBounds(rowToEdit, myEditorRow)[ FD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_8 $$ rowToEdit--[ FD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_32 $$ repaintRows(rowToEdit, getModel().getRowCount() - 1, false)[ CD ]
Line_13 $$ ArrangementEditorComponent editorComponent = new ArrangementEditorComponent(this, myEditorRow, editor)-->Line_19 $$ editorComponent.applyAvailableWidth(width)[ FD ]
Line_13 $$ ArrangementEditorComponent editorComponent = new ArrangementEditorComponent(this, myEditorRow, editor)-->Line_31 $$ editorComponent.expand()[ FD ]
Line_15 $$ JScrollPane scrollPane = JBScrollPane.findScrollPane(getParent())-->Line_17 $$ width -= scrollPane.getVerticalScrollBar().getWidth()[ FD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_33 $$ editCellAt(myEditorRow, 0)[ CD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_7 $$ if (myEditorRow < rowToEdit) [ FD ]
Line_2 $$ public void showEditor(@NotNull ArrangementMatchingRuleEditor editor, int rowToEdit) -->Line_3 $$ if (myEditorRow == rowToEdit + 1) [ CD ]
Line_27 $$ Rectangle bounds = getRowsBounds(rowToEdit, myEditorRow)-->Line_28 $$ if (bounds != null) [ FD ]
Line_15 $$ JScrollPane scrollPane = JBScrollPane.findScrollPane(getParent())-->Line_16 $$ if (scrollPane != null) [ FD ]
Line_27 $$ Rectangle bounds = getRowsBounds(rowToEdit, myEditorRow)-->Line_29 $$ myRepresentationCallback.ensureVisible(bounds)[ FD ]
