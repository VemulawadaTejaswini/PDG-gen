Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_19 $$ if (constraint == UNDER) [ FD ]
Line_13 $$ if (!showByBalloon) -->Line_14 $$ p.y += editor.getLineHeight()[ CD ]
Line_24 $$ if (constraint == ABOVE && !showByBalloon) -->Line_27 $$ if (diff > 0) [ CD ]
Line_8 $$ Point location-->Line_22 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_11 $$ if (constraint == RIGHT_UNDER) -->Line_19 $$ if (constraint == UNDER) [ CD ]
Line_10 $$ JComponent internalComponent = editor.getContentComponent()-->Line_16 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_20 $$ p.y += editor.getLineHeight()[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_5 $$ int col1 = pos1.column[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_3 $$ Dimension hintSize = hint.getComponent().getPreferredSize()[ CD ]
Line_8 $$ Point location-->Line_16 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_19 $$ if (constraint == UNDER) -->Line_20 $$ p.y += editor.getLineHeight()[ CD ]
Line_26 $$ int diff = location.x + hintSize.width - externalComponent.getWidth()-->Line_27 $$ if (diff > 0) [ FD ]
Line_11 $$ if (constraint == RIGHT_UNDER) -->Line_22 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_24 $$ if (constraint == ABOVE && !showByBalloon) [ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_13 $$ if (!showByBalloon) [ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_24 $$ if (constraint == ABOVE && !showByBalloon) [ CD ]
Line_16 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)-->Line_22 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_31 $$ if ((constraint == LEFT || constraint == RIGHT) && !showByBalloon) [ FD ]
Line_9 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_16 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_11 $$ if (constraint == RIGHT_UNDER) -->Line_13 $$ if (!showByBalloon) [ CD ]
Line_33 $$ if (constraint == LEFT) -->Line_34 $$ location.x -= hintSize.width[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_10 $$ JComponent internalComponent = editor.getContentComponent()[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_7 $$ int col2 = pos2.column[ CD ]
Line_11 $$ if (constraint == RIGHT_UNDER) -->Line_16 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ CD ]
Line_10 $$ JComponent internalComponent = editor.getContentComponent()-->Line_22 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_9 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_22 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_31 $$ if ((constraint == LEFT || constraint == RIGHT) && !showByBalloon) -->Line_33 $$ if (constraint == LEFT) [ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_10 $$ JComponent internalComponent = editor.getContentComponent()[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_11 $$ if (constraint == RIGHT_UNDER) [ FD ]
Line_24 $$ if (constraint == ABOVE && !showByBalloon) -->Line_26 $$ int diff = location.x + hintSize.width - externalComponent.getWidth()[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_6 $$ int line2 = pos2.line[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_9 $$ JComponent externalComponent = getExternalComponent(editor)[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_12 $$ Point p = editor.logicalPositionToXY(new LogicalPosition(line2, col2))[ FD ]
Line_12 $$ Point p = editor.logicalPositionToXY(new LogicalPosition(line2, col2))-->Line_22 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_14 $$ p.y += editor.getLineHeight()[ FD ]
Line_27 $$ if (diff > 0) -->Line_28 $$ location.x = Math.max(location.x - diff, 0)[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_18 $$ Point p = editor.logicalPositionToXY(new LogicalPosition(line1, col1))[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_8 $$ Point location[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_4 $$ int line1 = pos1.line[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_37 $$ return location[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_9 $$ JComponent externalComponent = getExternalComponent(editor)[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_3 $$ Dimension hintSize = hint.getComponent().getPreferredSize()[ FD ]
Line_24 $$ if (constraint == ABOVE && !showByBalloon) -->Line_25 $$ location.y -= hintSize.height[ CD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_31 $$ if ((constraint == LEFT || constraint == RIGHT) && !showByBalloon) [ CD ]
Line_12 $$ Point p = editor.logicalPositionToXY(new LogicalPosition(line2, col2))-->Line_16 $$ location = SwingUtilities.convertPoint(internalComponent, p, externalComponent)[ FD ]
Line_9 $$ JComponent externalComponent = getExternalComponent(editor)-->Line_26 $$ int diff = location.x + hintSize.width - externalComponent.getWidth()[ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_33 $$ if (constraint == LEFT) [ FD ]
Line_2 $$ private static Point _getHintPosition(@NotNull LightweightHint hint, @NotNull Editor editor, @NotNull LogicalPosition pos1, @NotNull LogicalPosition pos2, @PositionFlags short constraint, boolean showByBalloon) -->Line_11 $$ if (constraint == RIGHT_UNDER) [ CD ]
Line_11 $$ if (constraint == RIGHT_UNDER) -->Line_12 $$ Point p = editor.logicalPositionToXY(new LogicalPosition(line2, col2))[ CD ]
Line_11 $$ if (constraint == RIGHT_UNDER) -->Line_18 $$ Point p = editor.logicalPositionToXY(new LogicalPosition(line1, col1))[ CD ]
Line_31 $$ if ((constraint == LEFT || constraint == RIGHT) && !showByBalloon) -->Line_32 $$ location.y -= hintSize.height / 2[ CD ]
