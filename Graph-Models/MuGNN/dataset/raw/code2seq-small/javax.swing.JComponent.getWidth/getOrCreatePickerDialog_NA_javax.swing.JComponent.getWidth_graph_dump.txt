Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_57 $$ pickerDialog.repaint()[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_35 $$ Point mouseLoc = updateLocation()[ CD ]
Line_58 $$ if (!newColor.equals(getColor())) -->Line_59 $$ setColor(newColor)[ CD ]
Line_39 $$ Rectangle captureRectangle = new Rectangle(mouseLoc.x - left, mouseLoc.y - left, PIXELS, PIXELS)-->Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)[ FD ]
Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() -->Line_11 $$ if (myRobot != null && location != null) [ CD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_50 $$ graphics2d.drawImage(captureScreen, offset.x, offset.y, SIZE, SIZE, this)[ FD ]
Line_11 $$ if (myRobot != null && location != null) -->Line_26 $$ updateLocation()[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_50 $$ graphics2d.drawImage(captureScreen, offset.x, offset.y, SIZE, SIZE, this)[ CD ]
Line_33 $$ Dialog pickerDialog = getPickerDialog()-->Line_57 $$ pickerDialog.repaint()[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_48 $$ graphics2d.setComposite(AlphaComposite.Src)[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_45 $$ Point offset = new Point(10, 10)[ CD ]
Line_30 $$ final JLabel label = new JLabel() -->Line_33 $$ Dialog pickerDialog = getPickerDialog()[ CD ]
Line_4 $$ if (pickerDialog == null) -->Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() [ CD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_51 $$ graphics2d.setComposite(AlphaComposite.SrcOver)[ FD ]
Line_2 $$ protected Dialog getOrCreatePickerDialog() -->Line_4 $$ if (pickerDialog == null) [ CD ]
Line_30 $$ final JLabel label = new JLabel() -->Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) [ CD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_65 $$ pickerDialog.add(label)[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_39 $$ Rectangle captureRectangle = new Rectangle(mouseLoc.x - left, mouseLoc.y - left, PIXELS, PIXELS)[ CD ]
Line_2 $$ protected Dialog getOrCreatePickerDialog() -->Line_3 $$ Dialog pickerDialog = getPickerDialog()[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_41 $$ if (captureScreen == null)[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_38 $$ int left = PIXELS / 2 + 1[ CD ]
Line_30 $$ final JLabel label = new JLabel() -->Line_32 $$ applyRenderingHints(g)[ FD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_52 $$ drawPixelGrid(graphics2d, offset)[ FD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_66 $$ pickerDialog.setSize(DIALOG_SIZE, DIALOG_SIZE)[ FD ]
Line_33 $$ Dialog pickerDialog = getPickerDialog()-->Line_66 $$ pickerDialog.setSize(DIALOG_SIZE, DIALOG_SIZE)[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_36 $$ if (mouseLoc == null)[ CD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_53 $$ drawCenterPixel(graphics2d, offset, newColor)[ CD ]
Line_4 $$ if (pickerDialog == null) -->Line_66 $$ pickerDialog.setSize(DIALOG_SIZE, DIALOG_SIZE)[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_51 $$ graphics2d.setComposite(AlphaComposite.SrcOver)[ CD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) [ FD ]
Line_41 $$ if (captureScreen == null)-->Line_42 $$ return[ CD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_53 $$ drawCenterPixel(graphics2d, offset, newColor)[ FD ]
Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() -->Line_8 $$ super.keyPressed(event)[ FD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_46 $$ graphics2d.setComposite(AlphaComposite.Clear)[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_47 $$ graphics2d.fillRect(0, 0, getWidth(), getHeight())[ CD ]
Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() -->Line_8 $$ super.keyPressed(event)[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)[ CD ]
Line_30 $$ final JLabel label = new JLabel() -->Line_32 $$ applyRenderingHints(g)[ CD ]
Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))-->Line_58 $$ if (!newColor.equals(getColor())) [ FD ]
Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)-->Line_50 $$ graphics2d.drawImage(captureScreen, offset.x, offset.y, SIZE, SIZE, this)[ FD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_65 $$ pickerDialog.add(label)[ FD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) [ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_52 $$ drawPixelGrid(graphics2d, offset)[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_56 $$ drawMagnifierBorder(newColor, graphics2d, offset)[ CD ]
Line_45 $$ Point offset = new Point(10, 10)-->Line_54 $$ drawCurrentColorRectangle(graphics2d, offset, newColor)[ FD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_57 $$ pickerDialog.repaint()[ FD ]
Line_33 $$ Dialog pickerDialog = getPickerDialog()-->Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)[ FD ]
Line_36 $$ if (mouseLoc == null)-->Line_37 $$ return[ CD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)[ CD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_58 $$ if (!newColor.equals(getColor())) [ CD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_69 $$ pickerDialog.setCursor(myParent.getToolkit().createCustomCursor(emptyImage, new Point(0, 0), "ColorPicker"))[ FD ]
Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))-->Line_59 $$ setColor(newColor)[ FD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_67 $$ pickerDialog.setBackground(myTransparentColor)[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_55 $$ graphics2d.setClip(0, 0, getWidth(), getHeight())[ CD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() [ FD ]
Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() -->Line_9 $$ int diff = BitUtil.isSet(event.getModifiers(), Event.SHIFT_MASK) ? 10 : 1[ CD ]
Line_4 $$ if (pickerDialog == null) -->Line_65 $$ pickerDialog.add(label)[ CD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_4 $$ if (pickerDialog == null) [ FD ]
Line_45 $$ Point offset = new Point(10, 10)-->Line_52 $$ drawPixelGrid(graphics2d, offset)[ FD ]
Line_4 $$ if (pickerDialog == null) -->Line_68 $$ BufferedImage emptyImage = UIUtil.createImage(1, 1, Transparency.TRANSLUCENT)[ CD ]
Line_35 $$ Point mouseLoc = updateLocation()-->Line_36 $$ if (mouseLoc == null)[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_49 $$ graphics2d.clip(new Ellipse2D.Double(offset.x, offset.y, SIZE, SIZE))[ CD ]
Line_33 $$ Dialog pickerDialog = getPickerDialog()-->Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) [ FD ]
Line_33 $$ Dialog pickerDialog = getPickerDialog()-->Line_65 $$ pickerDialog.add(label)[ FD ]
Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)-->Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))[ FD ]
Line_4 $$ if (pickerDialog == null) -->Line_69 $$ pickerDialog.setCursor(myParent.getToolkit().createCustomCursor(emptyImage, new Point(0, 0), "ColorPicker"))[ CD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_49 $$ graphics2d.clip(new Ellipse2D.Double(offset.x, offset.y, SIZE, SIZE))[ FD ]
Line_4 $$ if (pickerDialog == null) -->Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()[ CD ]
Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)-->Line_41 $$ if (captureScreen == null)[ FD ]
Line_45 $$ Point offset = new Point(10, 10)-->Line_53 $$ drawCenterPixel(graphics2d, offset, newColor)[ FD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_57 $$ pickerDialog.repaint()[ FD ]
Line_33 $$ Dialog pickerDialog = getPickerDialog()-->Line_69 $$ pickerDialog.setCursor(myParent.getToolkit().createCustomCursor(emptyImage, new Point(0, 0), "ColorPicker"))[ FD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_48 $$ graphics2d.setComposite(AlphaComposite.Src)[ FD ]
Line_45 $$ Point offset = new Point(10, 10)-->Line_56 $$ drawMagnifierBorder(newColor, graphics2d, offset)[ FD ]
Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() -->Line_10 $$ Point location = updateLocation()[ CD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_56 $$ drawMagnifierBorder(newColor, graphics2d, offset)[ FD ]
Line_2 $$ protected Dialog getOrCreatePickerDialog() -->Line_71 $$ return pickerDialog[ CD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() [ FD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_55 $$ graphics2d.setClip(0, 0, getWidth(), getHeight())[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_46 $$ graphics2d.setComposite(AlphaComposite.Clear)[ CD ]
Line_58 $$ if (!newColor.equals(getColor())) -->Line_60 $$ notifyListener(newColor, 300)[ CD ]
Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))-->Line_60 $$ notifyListener(newColor, 300)[ FD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_47 $$ graphics2d.fillRect(0, 0, getWidth(), getHeight())[ FD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_69 $$ pickerDialog.setCursor(myParent.getToolkit().createCustomCursor(emptyImage, new Point(0, 0), "ColorPicker"))[ FD ]
Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))-->Line_56 $$ drawMagnifierBorder(newColor, graphics2d, offset)[ FD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_66 $$ pickerDialog.setSize(DIALOG_SIZE, DIALOG_SIZE)[ FD ]
Line_4 $$ if (pickerDialog == null) -->Line_67 $$ pickerDialog.setBackground(myTransparentColor)[ CD ]
Line_5 $$ pickerDialog = super.getOrCreatePickerDialog()-->Line_67 $$ pickerDialog.setBackground(myTransparentColor)[ FD ]
Line_3 $$ Dialog pickerDialog = getPickerDialog()-->Line_40 $$ BufferedImage captureScreen = captureScreen(pickerDialog, captureRectangle)[ FD ]
Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() -->Line_12 $$ switch(event.getKeyCode()) [ FD ]
Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))-->Line_54 $$ drawCurrentColorRectangle(graphics2d, offset, newColor)[ FD ]
Line_6 $$ pickerDialog.addKeyListener(new KeyAdapter() -->Line_9 $$ int diff = BitUtil.isSet(event.getModifiers(), Event.SHIFT_MASK) ? 10 : 1[ FD ]
Line_43 $$ Color newColor = new Color(captureScreen.getRGB(captureRectangle.width / 2, captureRectangle.height / 2))-->Line_53 $$ drawCenterPixel(graphics2d, offset, newColor)[ FD ]
Line_33 $$ Dialog pickerDialog = getPickerDialog()-->Line_67 $$ pickerDialog.setBackground(myTransparentColor)[ FD ]
Line_34 $$ if (pickerDialog != null && pickerDialog.isShowing()) -->Line_54 $$ drawCurrentColorRectangle(graphics2d, offset, newColor)[ CD ]
Line_44 $$ Graphics2D graphics2d = ((Graphics2D) g)-->Line_54 $$ drawCurrentColorRectangle(graphics2d, offset, newColor)[ FD ]
