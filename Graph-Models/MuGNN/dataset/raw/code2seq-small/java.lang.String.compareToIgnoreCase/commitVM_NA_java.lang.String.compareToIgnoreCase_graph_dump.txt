Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ FD ]
Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS-->Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES[ FD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_11 $$ checkVirtualMachineVersion(vm)[ FD ]
Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES-->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ FD ]
Line_15 $$ StringTokenizer tokenizer = new StringTokenizer(ourTrace)-->Line_17 $$ String token = tokenizer.nextToken()[ FD ]
Line_14 $$ int mask = 0-->Line_21 $$ mask |= 0x01000000[ FD ]
Line_3 $$ if (!isInInitialState()) -->Line_4 $$ LOG.error("State is invalid " + myState.get())[ CD ]
Line_16 $$ while (tokenizer.hasMoreTokens()) -->Line_17 $$ String token = tokenizer.nextToken()[ CD ]
Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_30 $$ if ("OBJREFS".compareToIgnoreCase(token) == 0) -->Line_32 $$ if ("ALL".compareToIgnoreCase(token) == 0) [ CD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_3 $$ if (!isInInitialState()) [ CD ]
Line_14 $$ int mask = 0-->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ FD ]
Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_30 $$ if ("OBJREFS".compareToIgnoreCase(token) == 0) -->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ CD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_32 $$ if ("ALL".compareToIgnoreCase(token) == 0) [ FD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_13 $$ if (!StringUtil.isEmpty(ourTrace)) [ CD ]
Line_21 $$ mask |= 0x01000000-->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ FD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_20 $$ if ("RAW_SENDS".compareToIgnoreCase(token) == 0) [ FD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_30 $$ if ("OBJREFS".compareToIgnoreCase(token) == 0) [ FD ]
Line_13 $$ if (!StringUtil.isEmpty(ourTrace)) -->Line_36 $$ vm.setDebugTraceMode(mask)[ CD ]
Line_25 $$ mask |= 0x02000000-->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ FD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_6 $$ DebuggerManagerThreadImpl.assertIsManagerThread()[ CD ]
Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_24 $$ if ("RAW_RECEIVES".compareToIgnoreCase(token) == 0) [ FD ]
Line_14 $$ int mask = 0-->Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS[ FD ]
Line_13 $$ if (!StringUtil.isEmpty(ourTrace)) -->Line_16 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_8 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_25 $$ mask |= 0x02000000-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_25 $$ mask |= 0x02000000-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_14 $$ int mask = 0-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_22 $$ if ("RECEIVES".compareToIgnoreCase(token) == 0) -->Line_24 $$ if ("RAW_RECEIVES".compareToIgnoreCase(token) == 0) [ CD ]
Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES-->Line_25 $$ mask |= 0x02000000[ FD ]
Line_26 $$ if ("EVENTS".compareToIgnoreCase(token) == 0) -->Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS[ CD ]
Line_13 $$ if (!StringUtil.isEmpty(ourTrace)) -->Line_15 $$ StringTokenizer tokenizer = new StringTokenizer(ourTrace)[ CD ]
Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES-->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ FD ]
Line_13 $$ if (!StringUtil.isEmpty(ourTrace)) -->Line_14 $$ int mask = 0[ CD ]
Line_14 $$ int mask = 0-->Line_25 $$ mask |= 0x02000000[ FD ]
Line_22 $$ if ("RECEIVES".compareToIgnoreCase(token) == 0) -->Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES[ CD ]
Line_16 $$ while (tokenizer.hasMoreTokens()) -->Line_18 $$ if ("SENDS".compareToIgnoreCase(token) == 0) [ CD ]
Line_24 $$ if ("RAW_RECEIVES".compareToIgnoreCase(token) == 0) -->Line_25 $$ mask |= 0x02000000[ CD ]
Line_20 $$ if ("RAW_SENDS".compareToIgnoreCase(token) == 0) -->Line_21 $$ mask |= 0x01000000[ CD ]
Line_33 $$ mask |= VirtualMachine.TRACE_ALL-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_8 $$ if (LOG.isDebugEnabled()) -->Line_9 $$ LOG.debug("*******************VM attached******************")[ CD ]
Line_15 $$ StringTokenizer tokenizer = new StringTokenizer(ourTrace)-->Line_16 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_21 $$ mask |= 0x01000000-->Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES[ FD ]
Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES-->Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES[ FD ]
Line_28 $$ if ("REFTYPES".compareToIgnoreCase(token) == 0) -->Line_30 $$ if ("OBJREFS".compareToIgnoreCase(token) == 0) [ CD ]
Line_21 $$ mask |= 0x01000000-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_26 $$ if ("EVENTS".compareToIgnoreCase(token) == 0) -->Line_28 $$ if ("REFTYPES".compareToIgnoreCase(token) == 0) [ CD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_7 $$ myPositionManager = createPositionManager()[ CD ]
Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_21 $$ mask |= 0x01000000[ FD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_22 $$ if ("RECEIVES".compareToIgnoreCase(token) == 0) [ FD ]
Line_14 $$ int mask = 0-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_21 $$ mask |= 0x01000000-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ FD ]
Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES-->Line_36 $$ vm.setDebugTraceMode(mask)[ FD ]
Line_14 $$ int mask = 0-->Line_19 $$ mask |= VirtualMachine.TRACE_SENDS[ FD ]
Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES-->Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS[ FD ]
Line_32 $$ if ("ALL".compareToIgnoreCase(token) == 0) -->Line_33 $$ mask |= VirtualMachine.TRACE_ALL[ CD ]
Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS-->Line_31 $$ mask |= VirtualMachine.TRACE_OBJREFS[ FD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_26 $$ if ("EVENTS".compareToIgnoreCase(token) == 0) [ FD ]
Line_14 $$ int mask = 0-->Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES[ FD ]
Line_18 $$ if ("SENDS".compareToIgnoreCase(token) == 0) -->Line_19 $$ mask |= VirtualMachine.TRACE_SENDS[ CD ]
Line_28 $$ if ("REFTYPES".compareToIgnoreCase(token) == 0) -->Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES[ CD ]
Line_14 $$ int mask = 0-->Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES[ FD ]
Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS[ FD ]
Line_18 $$ if ("SENDS".compareToIgnoreCase(token) == 0) -->Line_20 $$ if ("RAW_SENDS".compareToIgnoreCase(token) == 0) [ CD ]
Line_21 $$ mask |= 0x01000000-->Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS[ FD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_18 $$ if ("SENDS".compareToIgnoreCase(token) == 0) [ FD ]
Line_25 $$ mask |= 0x02000000-->Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES[ FD ]
Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES[ FD ]
Line_25 $$ mask |= 0x02000000-->Line_27 $$ mask |= VirtualMachine.TRACE_EVENTS[ FD ]
Line_24 $$ if ("RAW_RECEIVES".compareToIgnoreCase(token) == 0) -->Line_26 $$ if ("EVENTS".compareToIgnoreCase(token) == 0) [ CD ]
Line_20 $$ if ("RAW_SENDS".compareToIgnoreCase(token) == 0) -->Line_22 $$ if ("RECEIVES".compareToIgnoreCase(token) == 0) [ CD ]
Line_2 $$ protected void commitVM(VirtualMachine vm) -->Line_11 $$ checkVirtualMachineVersion(vm)[ CD ]
Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_23 $$ mask |= VirtualMachine.TRACE_RECEIVES[ FD ]
Line_19 $$ mask |= VirtualMachine.TRACE_SENDS-->Line_25 $$ mask |= 0x02000000[ FD ]
Line_17 $$ String token = tokenizer.nextToken()-->Line_28 $$ if ("REFTYPES".compareToIgnoreCase(token) == 0) [ FD ]
Line_21 $$ mask |= 0x01000000-->Line_25 $$ mask |= 0x02000000[ FD ]
Line_21 $$ mask |= 0x01000000-->Line_29 $$ mask |= VirtualMachine.TRACE_REFTYPES[ FD ]
