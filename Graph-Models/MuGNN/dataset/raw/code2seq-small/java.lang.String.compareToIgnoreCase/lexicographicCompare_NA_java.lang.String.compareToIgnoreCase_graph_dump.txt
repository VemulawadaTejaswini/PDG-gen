Line_8 $$ if (o2 == null)-->Line_9 $$ return 1[ CD ]
Line_3 $$ for (int i = 0; i < Math.max(obj1.length, obj2.length); i++) -->Line_6 $$ if (o1 == null)[ CD ]
Line_4 $$ String o1 = i < obj1.length ? obj1[i] : null-->Line_6 $$ if (o1 == null)[ FD ]
Line_5 $$ String o2 = i < obj2.length ? obj2[i] : null-->Line_10 $$ int res = o1.compareToIgnoreCase(o2)[ FD ]
Line_3 $$ for (int i = 0; i < Math.max(obj1.length, obj2.length); i++) -->Line_8 $$ if (o2 == null)[ CD ]
Line_2 $$ public static int lexicographicCompare(@NotNull String[] obj1, @NotNull String[] obj2) -->Line_14 $$ return 0[ CD ]
Line_10 $$ int res = o1.compareToIgnoreCase(o2)-->Line_11 $$ if (res != 0)[ FD ]
Line_6 $$ if (o1 == null)-->Line_7 $$ return -1[ CD ]
Line_3 $$ for (int i = 0; i < Math.max(obj1.length, obj2.length); i++) -->Line_4 $$ String o1 = i < obj1.length ? obj1[i] : null[ CD ]
Line_3 $$ for (int i = 0; i < Math.max(obj1.length, obj2.length); i++) -->Line_10 $$ int res = o1.compareToIgnoreCase(o2)[ CD ]
Line_3 $$ for (int i = 0; i < Math.max(obj1.length, obj2.length); i++) -->Line_11 $$ if (res != 0)[ CD ]
Line_11 $$ if (res != 0)-->Line_12 $$ return res[ CD ]
Line_4 $$ String o1 = i < obj1.length ? obj1[i] : null-->Line_10 $$ int res = o1.compareToIgnoreCase(o2)[ FD ]
Line_3 $$ for (int i = 0; i < Math.max(obj1.length, obj2.length); i++) -->Line_5 $$ String o2 = i < obj2.length ? obj2[i] : null[ CD ]
Line_5 $$ String o2 = i < obj2.length ? obj2[i] : null-->Line_8 $$ if (o2 == null)[ FD ]
Line_2 $$ public static int lexicographicCompare(@NotNull String[] obj1, @NotNull String[] obj2) -->Line_3 $$ for (int i = 0; i < Math.max(obj1.length, obj2.length); i++) [ CD ]
