Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_38 $$ if (dialogBuilder.show() == DialogWrapper.OK_EXIT_CODE) [ CD ]
Line_3 $$ List<String> pluginIds = new ArrayList<String>(getPluginNameByIdMap().keySet())-->Line_4 $$ if (!original.getPluginId().isEmpty() && !pluginIds.contains(original.getPluginId())) [ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_30 $$ JPanel panel = FormBuilder.createFormBuilder().addLabeledComponent("Plugin:", pluginChooser).addLabeledComponent("Minimum version:", minVersionField).addLabeledComponent("Maximum version:", maxVersionField).getPanel()[ CD ]
Line_18 $$ new ComboboxSpeedSearch(pluginChooser) -->Line_20 $$ return getPluginNameById((String) element)[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_7 $$ Collections.sort(pluginIds, new Comparator<String>() [ CD ]
Line_3 $$ List<String> pluginIds = new ArrayList<String>(getPluginNameByIdMap().keySet())-->Line_5 $$ pluginIds.add(original.getPluginId())[ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_26 $$ minVersionField.getEmptyText().setText("<any>")[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_25 $$ final JBTextField maxVersionField = new JBTextField(StringUtil.notNullize(original.getMaxVersion()))[ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_4 $$ if (!original.getPluginId().isEmpty() && !pluginIds.contains(original.getPluginId())) [ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_41 $$ return null[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_33 $$ pluginChooser.addActionListener(new ActionListener() [ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_5 $$ pluginIds.add(original.getPluginId())[ FD ]
Line_7 $$ Collections.sort(pluginIds, new Comparator<String>() -->Line_9 $$ return getPluginNameById(o1).compareToIgnoreCase(getPluginNameById(o2))[ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_29 $$ maxVersionField.setColumns(10)[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_32 $$ dialogBuilder.setPreferredFocusComponent(pluginChooser)[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_23 $$ pluginChooser.setSelectedItem(original.getPluginId())[ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_31 $$ final DialogBuilder dialogBuilder = new DialogBuilder(parent).title("Required Plugin").centerPanel(panel)[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_3 $$ List<String> pluginIds = new ArrayList<String>(getPluginNameByIdMap().keySet())[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_27 $$ minVersionField.setColumns(10)[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_28 $$ maxVersionField.getEmptyText().setText("<any>")[ CD ]
Line_4 $$ if (!original.getPluginId().isEmpty() && !pluginIds.contains(original.getPluginId())) -->Line_5 $$ pluginIds.add(original.getPluginId())[ CD ]
Line_3 $$ List<String> pluginIds = new ArrayList<String>(getPluginNameByIdMap().keySet())-->Line_7 $$ Collections.sort(pluginIds, new Comparator<String>() [ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_13 $$ pluginChooser.setRenderer(new ListCellRendererWrapper<String>() [ CD ]
Line_13 $$ pluginChooser.setRenderer(new ListCellRendererWrapper<String>() -->Line_15 $$ setText(getPluginNameById(value))[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_4 $$ if (!original.getPluginId().isEmpty() && !pluginIds.contains(original.getPluginId())) [ CD ]
Line_3 $$ List<String> pluginIds = new ArrayList<String>(getPluginNameByIdMap().keySet())-->Line_12 $$ final ComboBox pluginChooser = new ComboBox(ArrayUtilRt.toStringArray(pluginIds), 250)[ FD ]
Line_7 $$ Collections.sort(pluginIds, new Comparator<String>() -->Line_9 $$ return getPluginNameById(o1).compareToIgnoreCase(getPluginNameById(o2))[ CD ]
Line_33 $$ pluginChooser.addActionListener(new ActionListener() -->Line_35 $$ dialogBuilder.setOkActionEnabled(!StringUtil.isEmpty((String) pluginChooser.getSelectedItem()))[ CD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_23 $$ pluginChooser.setSelectedItem(original.getPluginId())[ CD ]
Line_13 $$ pluginChooser.setRenderer(new ListCellRendererWrapper<String>() -->Line_15 $$ setText(getPluginNameById(value))[ FD ]
Line_2 $$ private DependencyOnPlugin editPluginDependency(@NotNull JComponent parent, @NotNull final DependencyOnPlugin original) -->Line_24 $$ final JBTextField minVersionField = new JBTextField(StringUtil.notNullize(original.getMinVersion()))[ FD ]
Line_38 $$ if (dialogBuilder.show() == DialogWrapper.OK_EXIT_CODE) -->Line_39 $$ return new DependencyOnPlugin(((String) pluginChooser.getSelectedItem()), StringUtil.nullize(minVersionField.getText().trim()), StringUtil.nullize(maxVersionField.getText().trim()))[ CD ]
