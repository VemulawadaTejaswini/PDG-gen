Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))[ FD ]
Line_28 $$ property = property.substring(0, pos)-->Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)[ FD ]
Line_11 $$ String line = null-->Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)[ FD ]
Line_28 $$ property = property.substring(0, pos)-->Line_33 $$ previousProperty = property[ FD ]
Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)-->Line_22 $$ if (pos == -1) [ FD ]
Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))-->Line_30 $$ if (Validator.isNotNull(previousProperty) && (previousProperty.compareToIgnoreCase(property) > 0)) [ FD ]
Line_10 $$ int lineCount = 0-->Line_15 $$ if (lineCount == 1) [ FD ]
Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)-->Line_28 $$ property = property.substring(0, pos)[ FD ]
Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))-->Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)[ FD ]
Line_30 $$ if (Validator.isNotNull(previousProperty) && (previousProperty.compareToIgnoreCase(property) > 0)) -->Line_31 $$ processErrorMessage(fileName, "sort: " + fileName + " " + lineCount)[ CD ]
Line_11 $$ String line = null-->Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_18 $$ if (line.startsWith(StringPool.POUND) || line.startsWith(StringPool.SPACE) || line.startsWith(StringPool.TAB)) [ FD ]
Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)-->Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))[ FD ]
Line_11 $$ String line = null-->Line_18 $$ if (line.startsWith(StringPool.POUND) || line.startsWith(StringPool.SPACE) || line.startsWith(StringPool.TAB)) [ FD ]
Line_27 $$ if (pos != -1) -->Line_28 $$ property = property.substring(0, pos)[ CD ]
Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)-->Line_22 $$ if (pos == -1) [ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_22 $$ if (pos == -1) [ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_14 $$ lineCount++[ CD ]
Line_6 $$ if (!portalSource) -->Line_7 $$ return content[ CD ]
Line_2 $$ protected String formatPortletProperties(String fileName, String content) throws Exception -->Line_3 $$ if (!content.contains("include-and-override=portlet-ext.properties")) [ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)[ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_33 $$ previousProperty = property[ CD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)[ FD ]
Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))-->Line_33 $$ previousProperty = property[ FD ]
Line_2 $$ protected String formatPortletProperties(String fileName, String content) throws Exception -->Line_36 $$ return content[ CD ]
Line_9 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(new UnsyncStringReader(content))) -->Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) [ FD ]
Line_12 $$ String previousProperty = StringPool.BLANK-->Line_33 $$ previousProperty = property[ FD ]
Line_11 $$ String line = null-->Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))[ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_27 $$ if (pos != -1) [ CD ]
Line_2 $$ protected String formatPortletProperties(String fileName, String content) throws Exception -->Line_4 $$ content = "include-and-override=portlet-ext.properties" + "\n\n" + content[ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_15 $$ if (lineCount == 1) [ CD ]
Line_10 $$ int lineCount = 0-->Line_14 $$ lineCount++[ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))[ CD ]
Line_2 $$ protected String formatPortletProperties(String fileName, String content) throws Exception -->Line_3 $$ if (!content.contains("include-and-override=portlet-ext.properties")) [ CD ]
Line_2 $$ protected String formatPortletProperties(String fileName, String content) throws Exception -->Line_6 $$ if (!portalSource) [ CD ]
Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)-->Line_27 $$ if (pos != -1) [ FD ]
Line_12 $$ String previousProperty = StringPool.BLANK-->Line_30 $$ if (Validator.isNotNull(previousProperty) && (previousProperty.compareToIgnoreCase(property) > 0)) [ FD ]
Line_33 $$ previousProperty = property-->Line_30 $$ if (Validator.isNotNull(previousProperty) && (previousProperty.compareToIgnoreCase(property) > 0)) [ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_30 $$ if (Validator.isNotNull(previousProperty) && (previousProperty.compareToIgnoreCase(property) > 0)) [ CD ]
Line_3 $$ if (!content.contains("include-and-override=portlet-ext.properties")) -->Line_4 $$ content = "include-and-override=portlet-ext.properties" + "\n\n" + content[ CD ]
Line_28 $$ property = property.substring(0, pos)-->Line_30 $$ if (Validator.isNotNull(previousProperty) && (previousProperty.compareToIgnoreCase(property) > 0)) [ FD ]
Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))-->Line_28 $$ property = property.substring(0, pos)[ FD ]
Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)-->Line_28 $$ property = property.substring(0, pos)[ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)[ CD ]
Line_2 $$ protected String formatPortletProperties(String fileName, String content) throws Exception -->Line_31 $$ processErrorMessage(fileName, "sort: " + fileName + " " + lineCount)[ FD ]
Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)-->Line_27 $$ if (pos != -1) [ FD ]
Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)-->Line_25 $$ String property = StringUtil.trim(line.substring(0, pos))[ FD ]
Line_13 $$ while ((line = unsyncBufferedReader.readLine()) != null) -->Line_18 $$ if (line.startsWith(StringPool.POUND) || line.startsWith(StringPool.SPACE) || line.startsWith(StringPool.TAB)) [ CD ]
Line_21 $$ int pos = line.indexOf(CharPool.EQUAL)-->Line_26 $$ pos = property.indexOf(CharPool.OPEN_BRACKET)[ FD ]
