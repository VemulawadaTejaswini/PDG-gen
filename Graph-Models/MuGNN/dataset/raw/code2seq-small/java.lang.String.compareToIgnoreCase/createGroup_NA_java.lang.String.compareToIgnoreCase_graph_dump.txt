Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_4 $$ if (project == null)[ CD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_17 $$ if (condition != null && !condition.value(actionManager.getActionOrStub(eachId)))[ FD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_26 $$ String goal1 = o1.getFirst()[ CD ]
Line_46 $$ ((Group) result).addHyperlink(new Hyperlink(icon, "Choose a phase/goal to assign a shortcut") -->Line_48 $$ SelectMavenGoalDialog dialog = new SelectMavenGoalDialog(project)[ CD ]
Line_46 $$ ((Group) result).addHyperlink(new Hyperlink(icon, "Choose a phase/goal to assign a shortcut") -->Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) [ CD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_64 $$ return result[ CD ]
Line_55 $$ Settings allSettings = Settings.KEY.getData(DataManager.getInstance().getDataContext(e.getComponent()))-->Line_56 $$ KeymapPanel keymapPanel = allSettings != null ? allSettings.find(KeymapPanel.class) : null[ FD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_13 $$ for (String eachId : actionManager.getActionIds(getActionPrefix(project, null))) [ FD ]
Line_22 $$ if (actions == null) -->Line_23 $$ final List<String> projectGoals = collectGoals(mavenProject)[ CD ]
Line_4 $$ if (project == null)-->Line_5 $$ return result[ CD ]
Line_57 $$ if (keymapPanel != null) -->Line_59 $$ keymapPanel.selectAction(actionId)[ CD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_29 $$ int index2 = projectGoals.indexOf(goal2)[ CD ]
Line_57 $$ if (keymapPanel != null) -->Line_58 $$ keymapPanel.showOption("")[ CD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_12 $$ ActionManager actionManager = ActionManager.getInstance()[ CD ]
Line_29 $$ int index2 = projectGoals.indexOf(goal2)-->Line_30 $$ if (index1 == index2)[ FD ]
Line_6 $$ Comparator<MavenProject> projectComparator = new Comparator<MavenProject>() -->Line_8 $$ return o1.getDisplayName().compareToIgnoreCase(o2.getDisplayName())[ FD ]
Line_27 $$ String goal2 = o2.getFirst()-->Line_29 $$ int index2 = projectGoals.indexOf(goal2)[ FD ]
Line_22 $$ if (actions == null) -->Line_35 $$ projectToActionsMapping.put(mavenProject, actions)[ CD ]
Line_48 $$ SelectMavenGoalDialog dialog = new SelectMavenGoalDialog(project)-->Line_50 $$ MavenProjectsStructure.GoalNode goalNode = dialog.getResult()[ FD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_50 $$ MavenProjectsStructure.GoalNode goalNode = dialog.getResult()[ CD ]
Line_6 $$ Comparator<MavenProject> projectComparator = new Comparator<MavenProject>() -->Line_8 $$ return o1.getDisplayName().compareToIgnoreCase(o2.getDisplayName())[ CD ]
Line_6 $$ Comparator<MavenProject> projectComparator = new Comparator<MavenProject>() -->Line_26 $$ String goal1 = o1.getFirst()[ FD ]
Line_52 $$ String actionId = MavenShortcutsManager.getInstance(project).getActionId(goalNode.getProjectPath(), goal)-->Line_59 $$ keymapPanel.selectAction(actionId)[ FD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_55 $$ Settings allSettings = Settings.KEY.getData(DataManager.getInstance().getDataContext(e.getComponent()))[ CD ]
Line_56 $$ KeymapPanel keymapPanel = allSettings != null ? allSettings.find(KeymapPanel.class) : null-->Line_59 $$ keymapPanel.selectAction(actionId)[ FD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_54 $$ ApplicationManager.getApplication().getMessageBus().syncPublisher(KeymapListener.CHANGE_TOPIC).processCurrentKeymapChanged()[ CD ]
Line_56 $$ KeymapPanel keymapPanel = allSettings != null ? allSettings.find(KeymapPanel.class) : null-->Line_58 $$ keymapPanel.showOption("")[ FD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_57 $$ if (keymapPanel != null) [ CD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_53 $$ getOrRegisterAction(goalNode.getMavenProject(), actionId, goal)[ CD ]
Line_6 $$ Comparator<MavenProject> projectComparator = new Comparator<MavenProject>() -->Line_27 $$ String goal2 = o2.getFirst()[ FD ]
Line_26 $$ String goal1 = o1.getFirst()-->Line_31 $$ return goal1.compareToIgnoreCase(goal2)[ FD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_30 $$ if (index1 == index2)[ CD ]
Line_50 $$ MavenProjectsStructure.GoalNode goalNode = dialog.getResult()-->Line_53 $$ getOrRegisterAction(goalNode.getMavenProject(), actionId, goal)[ FD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_3 $$ KeymapGroup result = KeymapGroupFactory.getInstance().createGroup(TasksBundle.message("maven.tasks.action.group.name"), MavenIcons.MavenLogo)[ CD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_27 $$ String goal2 = o2.getFirst()[ FD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_56 $$ KeymapPanel keymapPanel = allSettings != null ? allSettings.find(KeymapPanel.class) : null[ CD ]
Line_56 $$ KeymapPanel keymapPanel = allSettings != null ? allSettings.find(KeymapPanel.class) : null-->Line_57 $$ if (keymapPanel != null) [ FD ]
Line_46 $$ ((Group) result).addHyperlink(new Hyperlink(icon, "Choose a phase/goal to assign a shortcut") -->Line_55 $$ Settings allSettings = Settings.KEY.getData(DataManager.getInstance().getDataContext(e.getComponent()))[ FD ]
Line_30 $$ if (index1 == index2)-->Line_31 $$ return goal1.compareToIgnoreCase(goal2)[ CD ]
Line_50 $$ MavenProjectsStructure.GoalNode goalNode = dialog.getResult()-->Line_51 $$ String goal = goalNode.getGoal()[ FD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_32 $$ return (index1 < index2 ? -1 : 1)[ CD ]
Line_3 $$ KeymapGroup result = KeymapGroupFactory.getInstance().createGroup(TasksBundle.message("maven.tasks.action.group.name"), MavenIcons.MavenLogo)-->Line_4 $$ if (project == null)[ FD ]
Line_26 $$ String goal1 = o1.getFirst()-->Line_28 $$ int index1 = projectGoals.indexOf(goal1)[ FD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_6 $$ Comparator<MavenProject> projectComparator = new Comparator<MavenProject>() [ CD ]
Line_52 $$ String actionId = MavenShortcutsManager.getInstance(project).getActionId(goalNode.getProjectPath(), goal)-->Line_53 $$ getOrRegisterAction(goalNode.getMavenProject(), actionId, goal)[ FD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_4 $$ if (project == null)[ FD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_27 $$ String goal2 = o2.getFirst()[ CD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_52 $$ String actionId = MavenShortcutsManager.getInstance(project).getActionId(goalNode.getProjectPath(), goal)[ CD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_52 $$ String actionId = MavenShortcutsManager.getInstance(project).getActionId(goalNode.getProjectPath(), goal)[ FD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_28 $$ int index1 = projectGoals.indexOf(goal1)[ CD ]
Line_27 $$ String goal2 = o2.getFirst()-->Line_31 $$ return goal1.compareToIgnoreCase(goal2)[ FD ]
Line_50 $$ MavenProjectsStructure.GoalNode goalNode = dialog.getResult()-->Line_52 $$ String actionId = MavenShortcutsManager.getInstance(project).getActionId(goalNode.getProjectPath(), goal)[ FD ]
Line_48 $$ SelectMavenGoalDialog dialog = new SelectMavenGoalDialog(project)-->Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) [ FD ]
Line_28 $$ int index1 = projectGoals.indexOf(goal1)-->Line_30 $$ if (index1 == index2)[ FD ]
Line_49 $$ if (dialog.showAndGet() && dialog.getResult() != null) -->Line_51 $$ String goal = goalNode.getGoal()[ CD ]
Line_51 $$ String goal = goalNode.getGoal()-->Line_52 $$ String actionId = MavenShortcutsManager.getInstance(project).getActionId(goalNode.getProjectPath(), goal)[ FD ]
Line_2 $$ public KeymapGroup createGroup(Condition<AnAction> condition, final Project project) -->Line_46 $$ ((Group) result).addHyperlink(new Hyperlink(icon, "Choose a phase/goal to assign a shortcut") [ CD ]
Line_24 $$ actions = new TreeSet<Pair<String, String>>(new Comparator<Pair<String, String>>() -->Line_26 $$ String goal1 = o1.getFirst()[ FD ]
Line_51 $$ String goal = goalNode.getGoal()-->Line_53 $$ getOrRegisterAction(goalNode.getMavenProject(), actionId, goal)[ FD ]
Line_3 $$ KeymapGroup result = KeymapGroupFactory.getInstance().createGroup(TasksBundle.message("maven.tasks.action.group.name"), MavenIcons.MavenLogo)-->Line_42 $$ result.addActionId(eachGoalToActionId.getSecond())[ FD ]
