Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_3 $$ ValueAggregator retv = null[ CD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_11 $$ if (type.compareToIgnoreCase(STRING_VALUE_MAX) == 0) [ FD ]
Line_15 $$ if (type.compareToIgnoreCase(DOUBLE_VALUE_SUM) == 0) -->Line_17 $$ if (type.compareToIgnoreCase(UNIQ_VALUE_COUNT) == 0) [ CD ]
Line_8 $$ retv = new LongValueMax()-->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ FD ]
Line_3 $$ ValueAggregator retv = null-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_5 $$ retv = new LongValueSum()-->Line_8 $$ retv = new LongValueMax()[ FD ]
Line_11 $$ if (type.compareToIgnoreCase(STRING_VALUE_MAX) == 0) -->Line_12 $$ retv = new StringValueMax()[ CD ]
Line_14 $$ retv = new StringValueMin()-->Line_16 $$ retv = new DoubleValueSum()[ FD ]
Line_17 $$ if (type.compareToIgnoreCase(UNIQ_VALUE_COUNT) == 0) -->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ CD ]
Line_18 $$ retv = new UniqValueCount(maxNumItems)-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_10 $$ retv = new LongValueMin()-->Line_14 $$ retv = new StringValueMin()[ FD ]
Line_16 $$ retv = new DoubleValueSum()-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_9 $$ if (type.compareToIgnoreCase(LONG_VALUE_MIN) == 0) [ FD ]
Line_14 $$ retv = new StringValueMin()-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_13 $$ if (type.compareToIgnoreCase(STRING_VALUE_MIN) == 0) [ FD ]
Line_9 $$ if (type.compareToIgnoreCase(LONG_VALUE_MIN) == 0) -->Line_10 $$ retv = new LongValueMin()[ CD ]
Line_3 $$ ValueAggregator retv = null-->Line_8 $$ retv = new LongValueMax()[ FD ]
Line_5 $$ retv = new LongValueSum()-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_4 $$ if (type.compareToIgnoreCase(LONG_VALUE_SUM) == 0) [ CD ]
Line_5 $$ retv = new LongValueSum()-->Line_16 $$ retv = new DoubleValueSum()[ FD ]
Line_15 $$ if (type.compareToIgnoreCase(DOUBLE_VALUE_SUM) == 0) -->Line_16 $$ retv = new DoubleValueSum()[ CD ]
Line_14 $$ retv = new StringValueMin()-->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_15 $$ if (type.compareToIgnoreCase(DOUBLE_VALUE_SUM) == 0) [ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_4 $$ if (type.compareToIgnoreCase(LONG_VALUE_SUM) == 0) [ FD ]
Line_12 $$ retv = new StringValueMax()-->Line_14 $$ retv = new StringValueMin()[ FD ]
Line_8 $$ retv = new LongValueMax()-->Line_16 $$ retv = new DoubleValueSum()[ FD ]
Line_8 $$ retv = new LongValueMax()-->Line_12 $$ retv = new StringValueMax()[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_7 $$ if (type.compareToIgnoreCase(LONG_VALUE_MAX) == 0) [ FD ]
Line_3 $$ ValueAggregator retv = null-->Line_12 $$ retv = new StringValueMax()[ FD ]
Line_9 $$ if (type.compareToIgnoreCase(LONG_VALUE_MIN) == 0) -->Line_11 $$ if (type.compareToIgnoreCase(STRING_VALUE_MAX) == 0) [ CD ]
Line_16 $$ retv = new DoubleValueSum()-->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_7 $$ if (type.compareToIgnoreCase(LONG_VALUE_MAX) == 0) [ CD ]
Line_5 $$ retv = new LongValueSum()-->Line_14 $$ retv = new StringValueMin()[ FD ]
Line_5 $$ retv = new LongValueSum()-->Line_12 $$ retv = new StringValueMax()[ FD ]
Line_8 $$ retv = new LongValueMax()-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_22 $$ return retv[ CD ]
Line_10 $$ retv = new LongValueMin()-->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ FD ]
Line_3 $$ ValueAggregator retv = null-->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ FD ]
Line_10 $$ retv = new LongValueMin()-->Line_16 $$ retv = new DoubleValueSum()[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_17 $$ if (type.compareToIgnoreCase(UNIQ_VALUE_COUNT) == 0) [ FD ]
Line_17 $$ if (type.compareToIgnoreCase(UNIQ_VALUE_COUNT) == 0) -->Line_19 $$ if (type.compareToIgnoreCase(VALUE_HISTOGRAM) == 0) [ CD ]
Line_3 $$ ValueAggregator retv = null-->Line_16 $$ retv = new DoubleValueSum()[ FD ]
Line_10 $$ retv = new LongValueMin()-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_12 $$ retv = new StringValueMax()-->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ FD ]
Line_8 $$ retv = new LongValueMax()-->Line_10 $$ retv = new LongValueMin()[ FD ]
Line_3 $$ ValueAggregator retv = null-->Line_14 $$ retv = new StringValueMin()[ FD ]
Line_3 $$ ValueAggregator retv = null-->Line_5 $$ retv = new LongValueSum()[ FD ]
Line_12 $$ retv = new StringValueMax()-->Line_16 $$ retv = new DoubleValueSum()[ FD ]
Line_10 $$ retv = new LongValueMin()-->Line_12 $$ retv = new StringValueMax()[ FD ]
Line_2 $$ public static ValueAggregator generateValueAggregator(String type) -->Line_19 $$ if (type.compareToIgnoreCase(VALUE_HISTOGRAM) == 0) [ FD ]
Line_5 $$ retv = new LongValueSum()-->Line_10 $$ retv = new LongValueMin()[ FD ]
Line_13 $$ if (type.compareToIgnoreCase(STRING_VALUE_MIN) == 0) -->Line_15 $$ if (type.compareToIgnoreCase(DOUBLE_VALUE_SUM) == 0) [ CD ]
Line_8 $$ retv = new LongValueMax()-->Line_14 $$ retv = new StringValueMin()[ FD ]
Line_7 $$ if (type.compareToIgnoreCase(LONG_VALUE_MAX) == 0) -->Line_9 $$ if (type.compareToIgnoreCase(LONG_VALUE_MIN) == 0) [ CD ]
Line_3 $$ ValueAggregator retv = null-->Line_10 $$ retv = new LongValueMin()[ FD ]
Line_5 $$ retv = new LongValueSum()-->Line_18 $$ retv = new UniqValueCount(maxNumItems)[ FD ]
Line_19 $$ if (type.compareToIgnoreCase(VALUE_HISTOGRAM) == 0) -->Line_20 $$ retv = new ValueHistogram()[ CD ]
Line_4 $$ if (type.compareToIgnoreCase(LONG_VALUE_SUM) == 0) -->Line_5 $$ retv = new LongValueSum()[ CD ]
Line_7 $$ if (type.compareToIgnoreCase(LONG_VALUE_MAX) == 0) -->Line_8 $$ retv = new LongValueMax()[ CD ]
Line_12 $$ retv = new StringValueMax()-->Line_20 $$ retv = new ValueHistogram()[ FD ]
Line_13 $$ if (type.compareToIgnoreCase(STRING_VALUE_MIN) == 0) -->Line_14 $$ retv = new StringValueMin()[ CD ]
Line_11 $$ if (type.compareToIgnoreCase(STRING_VALUE_MAX) == 0) -->Line_13 $$ if (type.compareToIgnoreCase(STRING_VALUE_MIN) == 0) [ CD ]
