Line_7 $$ int y = x-->Line_9 $$ y = annotation.indexOf(CharPool.CLOSE_CURLY_BRACE, y + 1)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_14 $$ String parameterProperties = annotation.substring(x + 12, y)[ CD ]
Line_14 $$ String parameterProperties = annotation.substring(x + 12, y)-->Line_15 $$ parameterProperties = StringUtil.replace(parameterProperties, StringPool.NEW_LINE, StringPool.SPACE)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_3 $$ int x = annotation.indexOf("property = [ FD ]
Line_15 $$ parameterProperties = StringUtil.replace(parameterProperties, StringPool.NEW_LINE, StringPool.SPACE)-->Line_16 $$ String[] parameterPropertiesArray = StringUtil.split(parameterProperties, StringPool.COMMA_AND_SPACE)[ FD ]
Line_20 $$ x = parameterProperty.indexOf(CharPool.QUOTE)-->Line_21 $$ y = parameterProperty.indexOf(CharPool.EQUAL, x)[ FD ]
Line_22 $$ int z = x-->Line_25 $$ if ((z == -1) || !ToolsUtil.isInsideQuotes(parameterProperty, z)) [ FD ]
Line_21 $$ y = parameterProperty.indexOf(CharPool.EQUAL, x)-->Line_32 $$ String propertyName = parameterProperty.substring(x + 1, y)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_18 $$ String previousPropertyNameAndValue = null[ CD ]
Line_33 $$ String propertyNameAndValue = parameterProperty.substring(x + 1, z)-->Line_35 $$ content = StringUtil.replaceFirst(content, previousPropertyNameAndValue, propertyNameAndValue)[ FD ]
Line_32 $$ String propertyName = parameterProperty.substring(x + 1, y)-->Line_34 $$ if (Validator.isNotNull(previousPropertyName) && (previousPropertyName.compareToIgnoreCase(propertyName) > 0)) [ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_4 $$ if (x == -1) [ CD ]
Line_19 $$ for (String parameterProperty : parameterPropertiesArray) -->Line_21 $$ y = parameterProperty.indexOf(CharPool.EQUAL, x)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_35 $$ content = StringUtil.replaceFirst(content, previousPropertyNameAndValue, propertyNameAndValue)[ FD ]
Line_33 $$ String propertyNameAndValue = parameterProperty.substring(x + 1, z)-->Line_36 $$ content = StringUtil.replaceLast(content, propertyNameAndValue, previousPropertyNameAndValue)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_7 $$ int y = x[ CD ]
Line_3 $$ int x = annotation.indexOf("property = -->Line_4 $$ if (x == -1) [ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_16 $$ String[] parameterPropertiesArray = StringUtil.split(parameterProperties, StringPool.COMMA_AND_SPACE)[ CD ]
Line_3 $$ int x = annotation.indexOf("property = -->Line_21 $$ y = parameterProperty.indexOf(CharPool.EQUAL, x)[ FD ]
Line_23 $$ while (true) -->Line_25 $$ if ((z == -1) || !ToolsUtil.isInsideQuotes(parameterProperty, z)) [ CD ]
Line_19 $$ for (String parameterProperty : parameterPropertiesArray) -->Line_25 $$ if ((z == -1) || !ToolsUtil.isInsideQuotes(parameterProperty, z)) [ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_10 $$ if (!ToolsUtil.isInsideQuotes(annotation, y)) [ FD ]
Line_9 $$ y = annotation.indexOf(CharPool.CLOSE_CURLY_BRACE, y + 1)-->Line_32 $$ String propertyName = parameterProperty.substring(x + 1, y)[ FD ]
Line_7 $$ int y = x-->Line_14 $$ String parameterProperties = annotation.substring(x + 12, y)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_36 $$ content = StringUtil.replaceLast(content, propertyNameAndValue, previousPropertyNameAndValue)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_15 $$ parameterProperties = StringUtil.replace(parameterProperties, StringPool.NEW_LINE, StringPool.SPACE)[ CD ]
Line_4 $$ if (x == -1) -->Line_5 $$ return null[ CD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_9 $$ y = annotation.indexOf(CharPool.CLOSE_CURLY_BRACE, y + 1)[ FD ]
Line_7 $$ int y = x-->Line_10 $$ if (!ToolsUtil.isInsideQuotes(annotation, y)) [ FD ]
Line_23 $$ while (true) -->Line_24 $$ z = parameterProperty.indexOf(CharPool.QUOTE, z + 1)[ CD ]
Line_19 $$ for (String parameterProperty : parameterPropertiesArray) -->Line_32 $$ String propertyName = parameterProperty.substring(x + 1, y)[ FD ]
Line_34 $$ if (Validator.isNotNull(previousPropertyName) && (previousPropertyName.compareToIgnoreCase(propertyName) > 0)) -->Line_35 $$ content = StringUtil.replaceFirst(content, previousPropertyNameAndValue, propertyNameAndValue)[ CD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_8 $$ while (true) [ CD ]
Line_24 $$ z = parameterProperty.indexOf(CharPool.QUOTE, z + 1)-->Line_33 $$ String propertyNameAndValue = parameterProperty.substring(x + 1, z)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_42 $$ return null[ CD ]
Line_14 $$ String parameterProperties = annotation.substring(x + 12, y)-->Line_16 $$ String[] parameterPropertiesArray = StringUtil.split(parameterProperties, StringPool.COMMA_AND_SPACE)[ FD ]
Line_17 $$ String previousPropertyName = null-->Line_34 $$ if (Validator.isNotNull(previousPropertyName) && (previousPropertyName.compareToIgnoreCase(propertyName) > 0)) [ FD ]
Line_19 $$ for (String parameterProperty : parameterPropertiesArray) -->Line_33 $$ String propertyNameAndValue = parameterProperty.substring(x + 1, z)[ FD ]
Line_9 $$ y = annotation.indexOf(CharPool.CLOSE_CURLY_BRACE, y + 1)-->Line_21 $$ y = parameterProperty.indexOf(CharPool.EQUAL, x)[ FD ]
Line_8 $$ while (true) -->Line_10 $$ if (!ToolsUtil.isInsideQuotes(annotation, y)) [ CD ]
Line_32 $$ String propertyName = parameterProperty.substring(x + 1, y)-->Line_39 $$ previousPropertyName = propertyName[ FD ]
Line_19 $$ for (String parameterProperty : parameterPropertiesArray) -->Line_20 $$ x = parameterProperty.indexOf(CharPool.QUOTE)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_17 $$ String previousPropertyName = null[ CD ]
Line_18 $$ String previousPropertyNameAndValue = null-->Line_35 $$ content = StringUtil.replaceFirst(content, previousPropertyNameAndValue, propertyNameAndValue)[ FD ]
Line_9 $$ y = annotation.indexOf(CharPool.CLOSE_CURLY_BRACE, y + 1)-->Line_10 $$ if (!ToolsUtil.isInsideQuotes(annotation, y)) [ FD ]
Line_24 $$ z = parameterProperty.indexOf(CharPool.QUOTE, z + 1)-->Line_25 $$ if ((z == -1) || !ToolsUtil.isInsideQuotes(parameterProperty, z)) [ FD ]
Line_22 $$ int z = x-->Line_33 $$ String propertyNameAndValue = parameterProperty.substring(x + 1, z)[ FD ]
Line_7 $$ int y = x-->Line_21 $$ y = parameterProperty.indexOf(CharPool.EQUAL, x)[ FD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_14 $$ String parameterProperties = annotation.substring(x + 12, y)[ FD ]
Line_7 $$ int y = x-->Line_32 $$ String propertyName = parameterProperty.substring(x + 1, y)[ FD ]
Line_17 $$ String previousPropertyName = null-->Line_39 $$ previousPropertyName = propertyName[ FD ]
Line_34 $$ if (Validator.isNotNull(previousPropertyName) && (previousPropertyName.compareToIgnoreCase(propertyName) > 0)) -->Line_37 $$ return content[ CD ]
Line_18 $$ String previousPropertyNameAndValue = null-->Line_36 $$ content = StringUtil.replaceLast(content, propertyNameAndValue, previousPropertyNameAndValue)[ FD ]
Line_34 $$ if (Validator.isNotNull(previousPropertyName) && (previousPropertyName.compareToIgnoreCase(propertyName) > 0)) -->Line_36 $$ content = StringUtil.replaceLast(content, propertyNameAndValue, previousPropertyNameAndValue)[ CD ]
Line_2 $$ protected static String checkAnnotationParameterProperties(String content, String annotation) -->Line_3 $$ int x = annotation.indexOf("property = [ CD ]
Line_35 $$ content = StringUtil.replaceFirst(content, previousPropertyNameAndValue, propertyNameAndValue)-->Line_36 $$ content = StringUtil.replaceLast(content, propertyNameAndValue, previousPropertyNameAndValue)[ FD ]
Line_19 $$ for (String parameterProperty : parameterPropertiesArray) -->Line_24 $$ z = parameterProperty.indexOf(CharPool.QUOTE, z + 1)[ FD ]
Line_3 $$ int x = annotation.indexOf("property = -->Line_20 $$ x = parameterProperty.indexOf(CharPool.QUOTE)[ FD ]
Line_33 $$ String propertyNameAndValue = parameterProperty.substring(x + 1, z)-->Line_40 $$ previousPropertyNameAndValue = propertyNameAndValue[ FD ]
Line_22 $$ int z = x-->Line_24 $$ z = parameterProperty.indexOf(CharPool.QUOTE, z + 1)[ FD ]
Line_29 $$ if ((x == -1) || (y == -1) || (z == -1)) -->Line_30 $$ return null[ CD ]
Line_8 $$ while (true) -->Line_9 $$ y = annotation.indexOf(CharPool.CLOSE_CURLY_BRACE, y + 1)[ CD ]
Line_9 $$ y = annotation.indexOf(CharPool.CLOSE_CURLY_BRACE, y + 1)-->Line_14 $$ String parameterProperties = annotation.substring(x + 12, y)[ FD ]
Line_18 $$ String previousPropertyNameAndValue = null-->Line_40 $$ previousPropertyNameAndValue = propertyNameAndValue[ FD ]
