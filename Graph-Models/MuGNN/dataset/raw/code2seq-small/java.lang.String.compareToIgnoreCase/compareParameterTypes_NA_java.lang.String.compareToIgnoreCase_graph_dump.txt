Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_4 $$ if (parameterTypes2.isEmpty()) [ CD ]
Line_16 $$ String parameterType2 = parameterTypes2.get(i)-->Line_20 $$ if (parameterType1.compareToIgnoreCase(parameterType2) != 0) [ FD ]
Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_8 $$ if (parameterTypes1.isEmpty()) [ CD ]
Line_23 $$ if (parameterType1.compareTo(parameterType2) != 0) -->Line_24 $$ return -parameterType1.compareTo(parameterType2)[ CD ]
Line_15 $$ String parameterType1 = parameterTypes1.get(i)-->Line_24 $$ return -parameterType1.compareTo(parameterType2)[ FD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_17 $$ if ((parameterTypes1.size() != parameterTypes2.size()) && (parameterType1.equals(parameterType2.concat("...")) || parameterType2.equals(parameterType1.concat("...")))) [ CD ]
Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_3 $$ List<String> parameterTypes2 = javaTerm2.getParameterTypes()[ CD ]
Line_7 $$ List<String> parameterTypes1 = javaTerm1.getParameterTypes()-->Line_15 $$ String parameterType1 = parameterTypes1.get(i)[ FD ]
Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_7 $$ List<String> parameterTypes1 = javaTerm1.getParameterTypes()[ CD ]
Line_7 $$ List<String> parameterTypes1 = javaTerm1.getParameterTypes()-->Line_17 $$ if ((parameterTypes1.size() != parameterTypes2.size()) && (parameterType1.equals(parameterType2.concat("...")) || parameterType2.equals(parameterType1.concat("...")))) [ FD ]
Line_16 $$ String parameterType2 = parameterTypes2.get(i)-->Line_24 $$ return -parameterType1.compareTo(parameterType2)[ FD ]
Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_27 $$ return -1[ CD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_15 $$ String parameterType1 = parameterTypes1.get(i)[ CD ]
Line_3 $$ List<String> parameterTypes2 = javaTerm2.getParameterTypes()-->Line_16 $$ String parameterType2 = parameterTypes2.get(i)[ FD ]
Line_15 $$ String parameterType1 = parameterTypes1.get(i)-->Line_20 $$ if (parameterType1.compareToIgnoreCase(parameterType2) != 0) [ FD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_16 $$ String parameterType2 = parameterTypes2.get(i)[ CD ]
Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) [ CD ]
Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_7 $$ List<String> parameterTypes1 = javaTerm1.getParameterTypes()[ FD ]
Line_16 $$ String parameterType2 = parameterTypes2.get(i)-->Line_21 $$ return parameterType1.compareToIgnoreCase(parameterType2)[ FD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_23 $$ if (parameterType1.compareTo(parameterType2) != 0) [ CD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_15 $$ String parameterType1 = parameterTypes1.get(i)[ FD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_12 $$ if (parameterTypes2.size() < (i + 1)) [ CD ]
Line_3 $$ List<String> parameterTypes2 = javaTerm2.getParameterTypes()-->Line_12 $$ if (parameterTypes2.size() < (i + 1)) [ FD ]
Line_8 $$ if (parameterTypes1.isEmpty()) -->Line_9 $$ return -1[ CD ]
Line_15 $$ String parameterType1 = parameterTypes1.get(i)-->Line_21 $$ return parameterType1.compareToIgnoreCase(parameterType2)[ FD ]
Line_15 $$ String parameterType1 = parameterTypes1.get(i)-->Line_23 $$ if (parameterType1.compareTo(parameterType2) != 0) [ FD ]
Line_3 $$ List<String> parameterTypes2 = javaTerm2.getParameterTypes()-->Line_17 $$ if ((parameterTypes1.size() != parameterTypes2.size()) && (parameterType1.equals(parameterType2.concat("...")) || parameterType2.equals(parameterType1.concat("...")))) [ FD ]
Line_7 $$ List<String> parameterTypes1 = javaTerm1.getParameterTypes()-->Line_8 $$ if (parameterTypes1.isEmpty()) [ FD ]
Line_7 $$ List<String> parameterTypes1 = javaTerm1.getParameterTypes()-->Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) [ FD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_20 $$ if (parameterType1.compareToIgnoreCase(parameterType2) != 0) [ CD ]
Line_15 $$ String parameterType1 = parameterTypes1.get(i)-->Line_17 $$ if ((parameterTypes1.size() != parameterTypes2.size()) && (parameterType1.equals(parameterType2.concat("...")) || parameterType2.equals(parameterType1.concat("...")))) [ FD ]
Line_3 $$ List<String> parameterTypes2 = javaTerm2.getParameterTypes()-->Line_4 $$ if (parameterTypes2.isEmpty()) [ FD ]
Line_11 $$ for (int i = 0; i < parameterTypes1.size(); i++) -->Line_16 $$ String parameterType2 = parameterTypes2.get(i)[ FD ]
Line_16 $$ String parameterType2 = parameterTypes2.get(i)-->Line_23 $$ if (parameterType1.compareTo(parameterType2) != 0) [ FD ]
Line_4 $$ if (parameterTypes2.isEmpty()) -->Line_5 $$ return 1[ CD ]
Line_12 $$ if (parameterTypes2.size() < (i + 1)) -->Line_13 $$ return 1[ CD ]
Line_2 $$ protected int compareParameterTypes(JavaTerm javaTerm1, JavaTerm javaTerm2) -->Line_3 $$ List<String> parameterTypes2 = javaTerm2.getParameterTypes()[ FD ]
Line_16 $$ String parameterType2 = parameterTypes2.get(i)-->Line_17 $$ if ((parameterTypes1.size() != parameterTypes2.size()) && (parameterType1.equals(parameterType2.concat("...")) || parameterType2.equals(parameterType1.concat("...")))) [ FD ]
Line_20 $$ if (parameterType1.compareToIgnoreCase(parameterType2) != 0) -->Line_21 $$ return parameterType1.compareToIgnoreCase(parameterType2)[ CD ]
