Line_10 $$ String name1 = p1.getConfigurableDisplayName()-->Line_16 $$ return name1.compareToIgnoreCase(name2)[ FD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_8 $$ return p1.getPriority().compareTo(p2.getPriority())[ FD ]
Line_10 $$ String name1 = p1.getConfigurableDisplayName()-->Line_11 $$ if (name1 == null)[ FD ]
Line_10 $$ String name1 = p1.getConfigurableDisplayName()-->Line_12 $$ name1 = ""[ FD ]
Line_2 $$ protected Configurable[] buildConfigurables() -->Line_4 $$ final List<CodeStyleSettingsProvider> providers = Arrays.asList(Extensions.getExtensions(CodeStyleSettingsProvider.EXTENSION_POINT_NAME))[ CD ]
Line_21 $$ myPanels.add(new CodeStyleConfigurableWrapper(provider, new CodeStyleSettingsPanelFactory() -->Line_23 $$ return new NewCodeStyleSettingsPanel(provider.createSettingsPage(scheme.getCodeStyleSettings(), ensureModel().getCloneSettings(scheme)))[ CD ]
Line_13 $$ String name2 = p2.getConfigurableDisplayName()-->Line_16 $$ return name1.compareToIgnoreCase(name2)[ FD ]
Line_2 $$ protected Configurable[] buildConfigurables() -->Line_30 $$ for (int i = 0; i < result.length; i++) [ CD ]
Line_2 $$ protected Configurable[] buildConfigurables() -->Line_33 $$ return result[ CD ]
Line_14 $$ if (name2 == null)-->Line_15 $$ name2 = ""[ CD ]
Line_2 $$ protected Configurable[] buildConfigurables() -->Line_28 $$ int size = myPanels.size()[ CD ]
Line_13 $$ String name2 = p2.getConfigurableDisplayName()-->Line_15 $$ name2 = ""[ FD ]
Line_20 $$ if (provider.hasSettingsPage()) -->Line_21 $$ myPanels.add(new CodeStyleConfigurableWrapper(provider, new CodeStyleSettingsPanelFactory() [ CD ]
Line_30 $$ for (int i = 0; i < result.length; i++) -->Line_31 $$ result[i] = myPanels.get(i + 1)[ CD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_11 $$ if (name1 == null)[ CD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_10 $$ String name1 = p1.getConfigurableDisplayName()[ CD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_16 $$ return name1.compareToIgnoreCase(name2)[ CD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_7 $$ if (!p1.getPriority().equals(p2.getPriority())) [ CD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_10 $$ String name1 = p1.getConfigurableDisplayName()[ FD ]
Line_7 $$ if (!p1.getPriority().equals(p2.getPriority())) -->Line_8 $$ return p1.getPriority().compareTo(p2.getPriority())[ CD ]
Line_2 $$ protected Configurable[] buildConfigurables() -->Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() [ CD ]
Line_11 $$ if (name1 == null)-->Line_12 $$ name1 = ""[ CD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_14 $$ if (name2 == null)[ CD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_13 $$ String name2 = p2.getConfigurableDisplayName()[ CD ]
Line_12 $$ name1 = ""-->Line_16 $$ return name1.compareToIgnoreCase(name2)[ FD ]
Line_4 $$ final List<CodeStyleSettingsProvider> providers = Arrays.asList(Extensions.getExtensions(CodeStyleSettingsProvider.EXTENSION_POINT_NAME))-->Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() [ FD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_7 $$ if (!p1.getPriority().equals(p2.getPriority())) [ FD ]
Line_15 $$ name2 = ""-->Line_16 $$ return name1.compareToIgnoreCase(name2)[ FD ]
Line_21 $$ myPanels.add(new CodeStyleConfigurableWrapper(provider, new CodeStyleSettingsPanelFactory() -->Line_23 $$ return new NewCodeStyleSettingsPanel(provider.createSettingsPage(scheme.getCodeStyleSettings(), ensureModel().getCloneSettings(scheme)))[ FD ]
Line_5 $$ Collections.sort(providers, new Comparator<CodeStyleSettingsProvider>() -->Line_13 $$ String name2 = p2.getConfigurableDisplayName()[ FD ]
Line_13 $$ String name2 = p2.getConfigurableDisplayName()-->Line_14 $$ if (name2 == null)[ FD ]
