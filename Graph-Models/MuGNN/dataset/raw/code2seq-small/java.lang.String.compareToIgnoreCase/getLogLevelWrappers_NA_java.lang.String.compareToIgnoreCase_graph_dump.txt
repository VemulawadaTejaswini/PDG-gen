Line_2 $$ private Vector<LogLevelWrapper> getLogLevelWrappers() -->Line_15 $$ return wrappers[ CD ]
Line_3 $$ Collection<LogLevel> collection = new LoggingCommandLineConverter().getLogLevels()-->Line_5 $$ Iterator<LogLevel> iterator = collection.iterator()[ FD ]
Line_5 $$ Iterator<LogLevel> iterator = collection.iterator()-->Line_7 $$ LogLevel level = iterator.next()[ FD ]
Line_2 $$ private Vector<LogLevelWrapper> getLogLevelWrappers() -->Line_4 $$ Vector<LogLevelWrapper> wrappers = new Vector<LogLevelWrapper>()[ CD ]
Line_4 $$ Vector<LogLevelWrapper> wrappers = new Vector<LogLevelWrapper>()-->Line_8 $$ wrappers.add(new LogLevelWrapper(level))[ FD ]
Line_2 $$ private Vector<LogLevelWrapper> getLogLevelWrappers() -->Line_5 $$ Iterator<LogLevel> iterator = collection.iterator()[ CD ]
Line_10 $$ Collections.sort(wrappers, new Comparator<LogLevelWrapper>() -->Line_12 $$ return o1.toString().compareToIgnoreCase(o2.toString())[ CD ]
Line_2 $$ private Vector<LogLevelWrapper> getLogLevelWrappers() -->Line_6 $$ while (iterator.hasNext()) [ CD ]
Line_5 $$ Iterator<LogLevel> iterator = collection.iterator()-->Line_6 $$ while (iterator.hasNext()) [ FD ]
Line_4 $$ Vector<LogLevelWrapper> wrappers = new Vector<LogLevelWrapper>()-->Line_10 $$ Collections.sort(wrappers, new Comparator<LogLevelWrapper>() [ FD ]
Line_2 $$ private Vector<LogLevelWrapper> getLogLevelWrappers() -->Line_3 $$ Collection<LogLevel> collection = new LoggingCommandLineConverter().getLogLevels()[ CD ]
Line_6 $$ while (iterator.hasNext()) -->Line_7 $$ LogLevel level = iterator.next()[ CD ]
Line_2 $$ private Vector<LogLevelWrapper> getLogLevelWrappers() -->Line_10 $$ Collections.sort(wrappers, new Comparator<LogLevelWrapper>() [ CD ]
Line_6 $$ while (iterator.hasNext()) -->Line_8 $$ wrappers.add(new LogLevelWrapper(level))[ CD ]
Line_10 $$ Collections.sort(wrappers, new Comparator<LogLevelWrapper>() -->Line_12 $$ return o1.toString().compareToIgnoreCase(o2.toString())[ FD ]
