Line_14 $$ Object refObject = refClass-->Line_19 $$ if (!array.contains(refObject)) [ FD ]
Line_14 $$ Object refObject = refClass-->Line_18 $$ refObjects[i] = refObject[ FD ]
Line_6 $$ for (int i = 0; i < referenceData.length; i++) -->Line_8 $$ if (ref != null) [ CD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_3 $$ PsiManager manager = PsiManager.getInstance(project)[ CD ]
Line_7 $$ PsiElement ref = refs[i]-->Line_9 $$ LOG.assertTrue(ref.isValid())[ FD ]
Line_8 $$ if (ref != null) -->Line_19 $$ if (!array.contains(refObject)) [ CD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_35 $$ dialog.show()[ CD ]
Line_16 $$ refObject = refClass.getQualifiedName() + "." + data.staticMemberName-->Line_19 $$ if (!array.contains(refObject)) [ FD ]
Line_39 $$ if (ref != null) -->Line_41 $$ Object refObject = refObjects[i][ CD ]
Line_49 $$ if (!found) -->Line_50 $$ refs[i] = null[ CD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_5 $$ Object[] refObjects = new Object[refs.length][ CD ]
Line_8 $$ if (ref != null) -->Line_18 $$ refObjects[i] = refObject[ CD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_27 $$ Arrays.sort(selectedObjects, new Comparator<Object>() [ CD ]
Line_8 $$ if (ref != null) -->Line_15 $$ if (data.staticMemberName != null) [ CD ]
Line_15 $$ if (data.staticMemberName != null) -->Line_16 $$ refObject = refClass.getQualifiedName() + "." + data.staticMemberName[ CD ]
Line_37 $$ for (int i = 0; i < referenceData.length; i++) -->Line_39 $$ if (ref != null) [ CD ]
Line_11 $$ PsiClass refClass = JavaPsiFacade.getInstance(manager.getProject()).findClass(data.qClassName, ref.getResolveScope())-->Line_12 $$ if (refClass == null)[ FD ]
Line_7 $$ PsiElement ref = refs[i]-->Line_11 $$ PsiClass refClass = JavaPsiFacade.getInstance(manager.getProject()).findClass(data.qClassName, ref.getResolveScope())[ FD ]
Line_27 $$ Arrays.sort(selectedObjects, new Comparator<Object>() -->Line_31 $$ return fqName1.compareToIgnoreCase(fqName2)[ CD ]
Line_38 $$ PsiElement ref = refs[i]-->Line_39 $$ if (ref != null) [ FD ]
Line_39 $$ if (ref != null) -->Line_49 $$ if (!found) [ CD ]
Line_8 $$ if (ref != null) -->Line_11 $$ PsiClass refClass = JavaPsiFacade.getInstance(manager.getProject()).findClass(data.qClassName, ref.getResolveScope())[ CD ]
Line_4 $$ ArrayList<Object> array = new ArrayList<Object>()-->Line_26 $$ Object[] selectedObjects = ArrayUtil.toObjectArray(array)[ FD ]
Line_14 $$ Object refObject = refClass-->Line_44 $$ if (Comparing.equal(refObject, selected)) [ FD ]
Line_27 $$ Arrays.sort(selectedObjects, new Comparator<Object>() -->Line_30 $$ String fqName2 = getFQName(o2)[ FD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_36 $$ selectedObjects = dialog.getSelectedElements()[ CD ]
Line_7 $$ PsiElement ref = refs[i]-->Line_40 $$ PsiUtilCore.ensureValid(ref)[ FD ]
Line_8 $$ if (ref != null) -->Line_9 $$ LOG.assertTrue(ref.isValid())[ CD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_6 $$ for (int i = 0; i < referenceData.length; i++) [ CD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_24 $$ if (array.isEmpty())[ CD ]
Line_4 $$ ArrayList<Object> array = new ArrayList<Object>()-->Line_20 $$ array.add(refObject)[ FD ]
Line_4 $$ ArrayList<Object> array = new ArrayList<Object>()-->Line_24 $$ if (array.isEmpty())[ FD ]
Line_38 $$ PsiElement ref = refs[i]-->Line_40 $$ PsiUtilCore.ensureValid(ref)[ FD ]
Line_37 $$ for (int i = 0; i < referenceData.length; i++) -->Line_38 $$ PsiElement ref = refs[i][ CD ]
Line_14 $$ Object refObject = refClass-->Line_20 $$ array.add(refObject)[ FD ]
Line_26 $$ Object[] selectedObjects = ArrayUtil.toObjectArray(array)-->Line_27 $$ Arrays.sort(selectedObjects, new Comparator<Object>() [ FD ]
Line_42 $$ boolean found = false-->Line_49 $$ if (!found) [ FD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_37 $$ for (int i = 0; i < referenceData.length; i++) [ CD ]
Line_11 $$ PsiClass refClass = JavaPsiFacade.getInstance(manager.getProject()).findClass(data.qClassName, ref.getResolveScope())-->Line_16 $$ refObject = refClass.getQualifiedName() + "." + data.staticMemberName[ FD ]
Line_14 $$ Object refObject = refClass-->Line_16 $$ refObject = refClass.getQualifiedName() + "." + data.staticMemberName[ FD ]
Line_16 $$ refObject = refClass.getQualifiedName() + "." + data.staticMemberName-->Line_20 $$ array.add(refObject)[ FD ]
Line_27 $$ Arrays.sort(selectedObjects, new Comparator<Object>() -->Line_29 $$ String fqName1 = getFQName(o1)[ FD ]
Line_27 $$ Arrays.sort(selectedObjects, new Comparator<Object>() -->Line_30 $$ String fqName2 = getFQName(o2)[ CD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_26 $$ Object[] selectedObjects = ArrayUtil.toObjectArray(array)[ CD ]
Line_8 $$ if (ref != null) -->Line_10 $$ ReferenceData data = referenceData[i][ CD ]
Line_39 $$ if (ref != null) -->Line_42 $$ boolean found = false[ CD ]
Line_41 $$ Object refObject = refObjects[i]-->Line_44 $$ if (Comparing.equal(refObject, selected)) [ FD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_4 $$ ArrayList<Object> array = new ArrayList<Object>()[ CD ]
Line_19 $$ if (!array.contains(refObject)) -->Line_20 $$ array.add(refObject)[ CD ]
Line_6 $$ for (int i = 0; i < referenceData.length; i++) -->Line_7 $$ PsiElement ref = refs[i][ CD ]
Line_27 $$ Arrays.sort(selectedObjects, new Comparator<Object>() -->Line_29 $$ String fqName1 = getFQName(o1)[ CD ]
Line_30 $$ String fqName2 = getFQName(o2)-->Line_31 $$ return fqName1.compareToIgnoreCase(fqName2)[ FD ]
Line_4 $$ ArrayList<Object> array = new ArrayList<Object>()-->Line_19 $$ if (!array.contains(refObject)) [ FD ]
Line_24 $$ if (array.isEmpty())-->Line_25 $$ return[ CD ]
Line_29 $$ String fqName1 = getFQName(o1)-->Line_31 $$ return fqName1.compareToIgnoreCase(fqName2)[ FD ]
Line_42 $$ boolean found = false-->Line_45 $$ found = true[ FD ]
Line_3 $$ PsiManager manager = PsiManager.getInstance(project)-->Line_11 $$ PsiClass refClass = JavaPsiFacade.getInstance(manager.getProject()).findClass(data.qClassName, ref.getResolveScope())[ FD ]
Line_39 $$ if (ref != null) -->Line_40 $$ PsiUtilCore.ensureValid(ref)[ CD ]
Line_16 $$ refObject = refClass.getQualifiedName() + "." + data.staticMemberName-->Line_44 $$ if (Comparing.equal(refObject, selected)) [ FD ]
Line_2 $$ private static void askReferencesToRestore(Project project, PsiElement[] refs, ReferenceData[] referenceData) -->Line_3 $$ PsiManager manager = PsiManager.getInstance(project)[ FD ]
Line_43 $$ for (Object selected : selectedObjects) -->Line_44 $$ if (Comparing.equal(refObject, selected)) [ FD ]
Line_8 $$ if (ref != null) -->Line_14 $$ Object refObject = refClass[ CD ]
Line_7 $$ PsiElement ref = refs[i]-->Line_39 $$ if (ref != null) [ FD ]
Line_7 $$ PsiElement ref = refs[i]-->Line_8 $$ if (ref != null) [ FD ]
Line_44 $$ if (Comparing.equal(refObject, selected)) -->Line_45 $$ found = true[ CD ]
Line_45 $$ found = true-->Line_49 $$ if (!found) [ FD ]
Line_8 $$ if (ref != null) -->Line_12 $$ if (refClass == null)[ CD ]
Line_6 $$ for (int i = 0; i < referenceData.length; i++) -->Line_37 $$ for (int i = 0; i < referenceData.length; i++) [ FD ]
Line_16 $$ refObject = refClass.getQualifiedName() + "." + data.staticMemberName-->Line_18 $$ refObjects[i] = refObject[ FD ]
