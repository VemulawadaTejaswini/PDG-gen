Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_19 $$ String qname2 = o2.getQualifiedName()[ CD ]
Line_9 $$ boolean deprecated1 = o1.isDeprecated()-->Line_13 $$ if (!deprecated1 && deprecated2)[ FD ]
Line_2 $$ public static void sortIdenticalShortNameClasses(PsiClass[] classes, @NotNull PsiReference context) -->Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() [ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_9 $$ boolean deprecated1 = o1.isDeprecated()[ CD ]
Line_13 $$ if (!deprecated1 && deprecated2)-->Line_14 $$ return -1[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_15 $$ int compare = proximityComparator.compare(o1, o2)[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_10 $$ boolean deprecated2 = o2.isDeprecated()[ CD ]
Line_18 $$ String qname1 = o1.getQualifiedName()-->Line_22 $$ return qname1.compareToIgnoreCase(qname2)[ FD ]
Line_2 $$ public static void sortIdenticalShortNameClasses(PsiClass[] classes, @NotNull PsiReference context) -->Line_6 $$ final PsiProximityComparator proximityComparator = new PsiProximityComparator(leaf)[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_10 $$ boolean deprecated2 = o2.isDeprecated()[ FD ]
Line_20 $$ if (qname1 == null || qname2 == null)-->Line_21 $$ return 0[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_11 $$ if (deprecated1 && !deprecated2)[ CD ]
Line_2 $$ public static void sortIdenticalShortNameClasses(PsiClass[] classes, @NotNull PsiReference context) -->Line_5 $$ PsiElement leaf = context.getElement().getFirstChild()[ FD ]
Line_6 $$ final PsiProximityComparator proximityComparator = new PsiProximityComparator(leaf)-->Line_15 $$ int compare = proximityComparator.compare(o1, o2)[ FD ]
Line_2 $$ public static void sortIdenticalShortNameClasses(PsiClass[] classes, @NotNull PsiReference context) -->Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() [ FD ]
Line_2 $$ public static void sortIdenticalShortNameClasses(PsiClass[] classes, @NotNull PsiReference context) -->Line_5 $$ PsiElement leaf = context.getElement().getFirstChild()[ CD ]
Line_3 $$ if (classes.length <= 1)-->Line_4 $$ return[ CD ]
Line_9 $$ boolean deprecated1 = o1.isDeprecated()-->Line_11 $$ if (deprecated1 && !deprecated2)[ FD ]
Line_2 $$ public static void sortIdenticalShortNameClasses(PsiClass[] classes, @NotNull PsiReference context) -->Line_3 $$ if (classes.length <= 1)[ CD ]
Line_10 $$ boolean deprecated2 = o2.isDeprecated()-->Line_13 $$ if (!deprecated1 && deprecated2)[ FD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_15 $$ int compare = proximityComparator.compare(o1, o2)[ FD ]
Line_16 $$ if (compare != 0)-->Line_17 $$ return compare[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_18 $$ String qname1 = o1.getQualifiedName()[ FD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_22 $$ return qname1.compareToIgnoreCase(qname2)[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_18 $$ String qname1 = o1.getQualifiedName()[ CD ]
Line_19 $$ String qname2 = o2.getQualifiedName()-->Line_22 $$ return qname1.compareToIgnoreCase(qname2)[ FD ]
Line_10 $$ boolean deprecated2 = o2.isDeprecated()-->Line_11 $$ if (deprecated1 && !deprecated2)[ FD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_20 $$ if (qname1 == null || qname2 == null)[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_13 $$ if (!deprecated1 && deprecated2)[ CD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_9 $$ boolean deprecated1 = o1.isDeprecated()[ FD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_19 $$ String qname2 = o2.getQualifiedName()[ FD ]
Line_7 $$ Arrays.sort(classes, new Comparator<PsiClass>() -->Line_16 $$ if (compare != 0)[ CD ]
Line_11 $$ if (deprecated1 && !deprecated2)-->Line_12 $$ return 1[ CD ]
Line_15 $$ int compare = proximityComparator.compare(o1, o2)-->Line_16 $$ if (compare != 0)[ FD ]
