Line_17 $$ if (args.length > 3 && args[3].compareToIgnoreCase("textinputformat") == 0) -->Line_20 $$ theInputFormat = SequenceFileInputFormat.class[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_34 $$ if (userJarFile != null) [ CD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_52 $$ theJob.setCombinerClass(ValueAggregatorCombiner.class)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_53 $$ theJob.setNumReduceTasks(numOfReducers)[ CD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_48 $$ theJob.setMapOutputValueClass(Text.class)[ FD ]
Line_5 $$ if (args.length < 2) -->Line_7 $$ GenericOptionsParser.printGenericCommandUsage(System.out)[ CD ]
Line_33 $$ String userJarFile = conf.get(ValueAggregatorJobBase.USER_JAR)-->Line_38 $$ if (userJarFile == null) [ FD ]
Line_14 $$ numOfReducers = Integer.parseInt(args[2])-->Line_53 $$ theJob.setNumReduceTasks(numOfReducers)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_17 $$ if (args.length > 3 && args[3].compareToIgnoreCase("textinputformat") == 0) [ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_37 $$ Job theJob = new Job(conf)[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_38 $$ if (userJarFile == null) [ CD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_42 $$ FileInputFormat.addInputPaths(theJob, inputDir)[ FD ]
Line_26 $$ String jobName = ""-->Line_28 $$ jobName = args[5][ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_44 $$ theJob.setMapperClass(ValueAggregatorMapper.class)[ FD ]
Line_33 $$ String userJarFile = conf.get(ValueAggregatorJobBase.USER_JAR)-->Line_34 $$ if (userJarFile != null) [ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_33 $$ String userJarFile = conf.get(ValueAggregatorJobBase.USER_JAR)[ FD ]
Line_30 $$ if (specFile != null) -->Line_31 $$ conf.addResource(specFile)[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_49 $$ theJob.setOutputKeyClass(Text.class)[ CD ]
Line_5 $$ if (args.length < 2) -->Line_6 $$ System.out.println("usage: inputDirs outDir " + "[numOfReducer [textinputformat|seq [specfile [jobName]]]]")[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_43 $$ theJob.setInputFormatClass(theInputFormat)[ CD ]
Line_24 $$ specFile = new Path(args[4])-->Line_30 $$ if (specFile != null) [ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_49 $$ theJob.setOutputKeyClass(Text.class)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_45 $$ FileOutputFormat.setOutputPath(theJob, new Path(outputDir))[ CD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_43 $$ theJob.setInputFormatClass(theInputFormat)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_35 $$ conf.set(MRJobConfig.JAR, userJarFile)[ FD ]
Line_18 $$ theInputFormat = TextInputFormat.class-->Line_20 $$ theInputFormat = SequenceFileInputFormat.class[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_5 $$ if (args.length < 2) [ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_12 $$ int numOfReducers = 1[ CD ]
Line_23 $$ if (args.length > 4) -->Line_24 $$ specFile = new Path(args[4])[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_44 $$ theJob.setMapperClass(ValueAggregatorMapper.class)[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_27 $$ if (args.length > 5) [ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_46 $$ theJob.setOutputFormatClass(TextOutputFormat.class)[ CD ]
Line_16 $$ Class<? extends InputFormat> theInputFormat = null-->Line_43 $$ theJob.setInputFormatClass(theInputFormat)[ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_47 $$ theJob.setMapOutputKeyClass(Text.class)[ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_51 $$ theJob.setReducerClass(ValueAggregatorReducer.class)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_10 $$ String inputDir = args[0][ CD ]
Line_34 $$ if (userJarFile != null) -->Line_35 $$ conf.set(MRJobConfig.JAR, userJarFile)[ CD ]
Line_22 $$ Path specFile = null-->Line_30 $$ if (specFile != null) [ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_50 $$ theJob.setOutputValueClass(Text.class)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_51 $$ theJob.setReducerClass(ValueAggregatorReducer.class)[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_50 $$ theJob.setOutputValueClass(Text.class)[ CD ]
Line_22 $$ Path specFile = null-->Line_24 $$ specFile = new Path(args[4])[ FD ]
Line_33 $$ String userJarFile = conf.get(ValueAggregatorJobBase.USER_JAR)-->Line_35 $$ conf.set(MRJobConfig.JAR, userJarFile)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_16 $$ Class<? extends InputFormat> theInputFormat = null[ CD ]
Line_16 $$ Class<? extends InputFormat> theInputFormat = null-->Line_20 $$ theInputFormat = SequenceFileInputFormat.class[ FD ]
Line_20 $$ theInputFormat = SequenceFileInputFormat.class-->Line_43 $$ theJob.setInputFormatClass(theInputFormat)[ FD ]
Line_22 $$ Path specFile = null-->Line_31 $$ conf.addResource(specFile)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_42 $$ FileInputFormat.addInputPaths(theJob, inputDir)[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_3 $$ GenericOptionsParser genericParser = new GenericOptionsParser(conf, args)[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_41 $$ theJob.setJobName("ValueAggregatorJob: " + jobName)[ CD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_45 $$ FileOutputFormat.setOutputPath(theJob, new Path(outputDir))[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_26 $$ String jobName = ""[ CD ]
Line_13 $$ if (args.length > 2) -->Line_14 $$ numOfReducers = Integer.parseInt(args[2])[ CD ]
Line_12 $$ int numOfReducers = 1-->Line_14 $$ numOfReducers = Integer.parseInt(args[2])[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_23 $$ if (args.length > 4) [ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_52 $$ theJob.setCombinerClass(ValueAggregatorCombiner.class)[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_33 $$ String userJarFile = conf.get(ValueAggregatorJobBase.USER_JAR)[ CD ]
Line_3 $$ GenericOptionsParser genericParser = new GenericOptionsParser(conf, args)-->Line_4 $$ args = genericParser.getRemainingArgs()[ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_41 $$ theJob.setJobName("ValueAggregatorJob: " + jobName)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_48 $$ theJob.setMapOutputValueClass(Text.class)[ CD ]
Line_10 $$ String inputDir = args[0]-->Line_42 $$ FileInputFormat.addInputPaths(theJob, inputDir)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_11 $$ String outputDir = args[1][ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_13 $$ if (args.length > 2) [ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_31 $$ conf.addResource(specFile)[ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_39 $$ theJob.setJarByClass(ValueAggregator.class)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_54 $$ return theJob[ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_4 $$ args = genericParser.getRemainingArgs()[ FD ]
Line_27 $$ if (args.length > 5) -->Line_28 $$ jobName = args[5][ CD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_30 $$ if (specFile != null) [ CD ]
Line_24 $$ specFile = new Path(args[4])-->Line_31 $$ conf.addResource(specFile)[ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_53 $$ theJob.setNumReduceTasks(numOfReducers)[ FD ]
Line_37 $$ Job theJob = new Job(conf)-->Line_46 $$ theJob.setOutputFormatClass(TextOutputFormat.class)[ FD ]
Line_38 $$ if (userJarFile == null) -->Line_39 $$ theJob.setJarByClass(ValueAggregator.class)[ CD ]
Line_17 $$ if (args.length > 3 && args[3].compareToIgnoreCase("textinputformat") == 0) -->Line_18 $$ theInputFormat = TextInputFormat.class[ CD ]
Line_16 $$ Class<? extends InputFormat> theInputFormat = null-->Line_18 $$ theInputFormat = TextInputFormat.class[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_47 $$ theJob.setMapOutputKeyClass(Text.class)[ CD ]
Line_12 $$ int numOfReducers = 1-->Line_53 $$ theJob.setNumReduceTasks(numOfReducers)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_22 $$ Path specFile = null[ CD ]
Line_18 $$ theInputFormat = TextInputFormat.class-->Line_43 $$ theJob.setInputFormatClass(theInputFormat)[ FD ]
Line_2 $$ public static Job createValueAggregatorJob(Configuration conf, String[] args) throws IOException -->Line_4 $$ args = genericParser.getRemainingArgs()[ CD ]
Line_5 $$ if (args.length < 2) -->Line_8 $$ System.exit(2)[ CD ]
