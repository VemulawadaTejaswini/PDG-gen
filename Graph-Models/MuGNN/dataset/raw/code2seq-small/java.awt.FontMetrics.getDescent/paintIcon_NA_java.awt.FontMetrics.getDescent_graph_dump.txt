Line_19 $$ for (int i = 0; i < myStrings.length; i++) -->Line_22 $$ y += fontMetrics.getHeight()[ CD ]
Line_22 $$ y += fontMetrics.getHeight()-->Line_27 $$ y -= fontMetrics.getHeight()[ FD ]
Line_22 $$ y += fontMetrics.getHeight()-->Line_21 $$ g.drawString(string, x, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_6 $$ if (height > iconHeight) [ CD ]
Line_19 $$ for (int i = 0; i < myStrings.length; i++) -->Line_21 $$ g.drawString(string, x, y)[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_21 $$ g.drawString(string, x, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_27 $$ y -= fontMetrics.getHeight()[ FD ]
Line_18 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_27 $$ y -= fontMetrics.getHeight()[ FD ]
Line_6 $$ if (height > iconHeight) -->Line_7 $$ myIcon.paintIcon(c, g, x, y + (height - iconHeight) / 2)[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_15 $$ g.setFont(fontMetrics.getFont())[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_18 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()[ FD ]
Line_13 $$ Font font = UIUtil.getLabelFont()-->Line_14 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)[ FD ]
Line_19 $$ for (int i = 0; i < myStrings.length; i++) -->Line_20 $$ String string = myStrings[i][ CD ]
Line_17 $$ x += myIcon.getIconWidth() + 5-->Line_21 $$ g.drawString(string, x, y)[ FD ]
Line_27 $$ y -= fontMetrics.getHeight()-->Line_28 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_9 $$ myIcon.paintIcon(c, g, x, y)[ FD ]
Line_14 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_27 $$ y -= fontMetrics.getHeight()[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_17 $$ x += myIcon.getIconWidth() + 5[ FD ]
Line_18 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_28 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_22 $$ y += fontMetrics.getHeight()[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_25 $$ g.setColor(UIUtil.getInactiveTextColor())[ FD ]
Line_6 $$ if (height > iconHeight) -->Line_9 $$ myIcon.paintIcon(c, g, x, y)[ CD ]
Line_18 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_21 $$ g.drawString(string, x, y)[ FD ]
Line_24 $$ if (myMnemonic != null) -->Line_28 $$ g.drawString(myMnemonic, x + offset, y)[ CD ]
Line_24 $$ if (myMnemonic != null) -->Line_26 $$ int offset = fontMetrics.stringWidth(myStrings[myStrings.length - 1] + " ")[ CD ]
Line_24 $$ if (myMnemonic != null) -->Line_27 $$ y -= fontMetrics.getHeight()[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_7 $$ myIcon.paintIcon(c, g, x, y + (height - iconHeight) / 2)[ FD ]
Line_5 $$ int iconHeight = myIcon.getIconHeight()-->Line_6 $$ if (height > iconHeight) [ FD ]
Line_20 $$ String string = myStrings[i]-->Line_21 $$ g.drawString(string, x, y)[ FD ]
Line_18 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()-->Line_22 $$ y += fontMetrics.getHeight()[ FD ]
Line_14 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_15 $$ g.setFont(fontMetrics.getFont())[ FD ]
Line_14 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_22 $$ y += fontMetrics.getHeight()[ FD ]
Line_22 $$ y += fontMetrics.getHeight()-->Line_28 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_5 $$ int iconHeight = myIcon.getIconHeight()[ CD ]
Line_14 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_18 $$ y += (height - getTextHeight()) / 2 + fontMetrics.getHeight() - fontMetrics.getDescent()[ FD ]
Line_14 $$ FontMetrics fontMetrics = Toolkit.getDefaultToolkit().getFontMetrics(font)-->Line_26 $$ int offset = fontMetrics.stringWidth(myStrings[myStrings.length - 1] + " ")[ FD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_28 $$ g.drawString(myMnemonic, x + offset, y)[ FD ]
Line_24 $$ if (myMnemonic != null) -->Line_25 $$ g.setColor(UIUtil.getInactiveTextColor())[ CD ]
Line_2 $$ public void paintIcon(Component c, Graphics g, int x, int y) -->Line_16 $$ g.setColor(UIUtil.getLabelForeground())[ FD ]
