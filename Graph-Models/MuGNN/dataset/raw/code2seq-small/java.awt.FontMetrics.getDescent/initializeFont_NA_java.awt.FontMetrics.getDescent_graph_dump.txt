Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_11 $$ font = baseFont.deriveFont(attributes)[ FD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_3 $$ Map attributes = baseFont.getAttributes()[ CD ]
Line_3 $$ Map attributes = baseFont.getAttributes()-->Line_8 $$ attributes.put(TextAttribute.class.getDeclaredField("KERNING").get(null), TextAttribute.class.getDeclaredField("KERNING_ON").get(null))[ FD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_3 $$ Map attributes = baseFont.getAttributes()[ FD ]
Line_3 $$ Map attributes = baseFont.getAttributes()-->Line_6 $$ attributes.put(TextAttribute.POSTURE, italic ? TextAttribute.POSTURE_OBLIQUE : TextAttribute.POSTURE_REGULAR)[ FD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_13 $$ ascent = metrics.getAscent()[ CD ]
Line_3 $$ Map attributes = baseFont.getAttributes()-->Line_4 $$ attributes.put(TextAttribute.SIZE, new Float(size))[ FD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_11 $$ font = baseFont.deriveFont(attributes)[ CD ]
Line_3 $$ Map attributes = baseFont.getAttributes()-->Line_5 $$ attributes.put(TextAttribute.WEIGHT, bold ? TextAttribute.WEIGHT_BOLD : TextAttribute.WEIGHT_REGULAR)[ FD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_4 $$ attributes.put(TextAttribute.SIZE, new Float(size))[ CD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_6 $$ attributes.put(TextAttribute.POSTURE, italic ? TextAttribute.POSTURE_OBLIQUE : TextAttribute.POSTURE_REGULAR)[ CD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_14 $$ descent = metrics.getDescent()[ CD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_18 $$ GlyphVector vector = font.layoutGlyphVector(GlyphPage.renderContext, chars, 0, chars.length, Font.LAYOUT_LEFT_TO_RIGHT)[ CD ]
Line_3 $$ Map attributes = baseFont.getAttributes()-->Line_11 $$ font = baseFont.deriveFont(attributes)[ FD ]
Line_18 $$ GlyphVector vector = font.layoutGlyphVector(GlyphPage.renderContext, chars, 0, chars.length, Font.LAYOUT_LEFT_TO_RIGHT)-->Line_19 $$ spaceWidth = vector.getGlyphLogicalBounds(0).getBounds().width[ FD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_12 $$ metrics = GlyphPage.scratchGraphics.getFontMetrics(font)[ CD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_15 $$ leading = metrics.getLeading()[ CD ]
Line_2 $$ private void initializeFont(Font baseFont, int size, boolean bold, boolean italic) -->Line_5 $$ attributes.put(TextAttribute.WEIGHT, bold ? TextAttribute.WEIGHT_BOLD : TextAttribute.WEIGHT_REGULAR)[ CD ]
