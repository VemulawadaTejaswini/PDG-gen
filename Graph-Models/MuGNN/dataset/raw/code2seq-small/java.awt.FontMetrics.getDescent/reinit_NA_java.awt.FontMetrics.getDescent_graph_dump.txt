Line_7 $$ char c = entry.getValue()[0]-->Line_9 $$ if (!fontInfo.canDisplay(c)) [ FD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_17 $$ myWidths[type.ordinal()] = metrics.charWidth(c)[ CD ]
Line_18 $$ int vGap = metrics.getDescent()-->Line_19 $$ myVGaps.put(type, vGap)[ FD ]
Line_6 $$ SoftWrapDrawingType type = entry.getKey()-->Line_15 $$ myFonts.put(type, fontInfo)[ FD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_16 $$ FontMetrics metrics = component.getFontMetrics(fontInfo.getFont())[ CD ]
Line_8 $$ FontInfo fontInfo = EditorUtil.fontForChar(c, Font.PLAIN, myEditor)-->Line_16 $$ FontMetrics metrics = component.getFontMetrics(fontInfo.getFont())[ FD ]
Line_6 $$ SoftWrapDrawingType type = entry.getKey()-->Line_17 $$ myWidths[type.ordinal()] = metrics.charWidth(c)[ FD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_18 $$ int vGap = metrics.getDescent()[ CD ]
Line_6 $$ SoftWrapDrawingType type = entry.getKey()-->Line_12 $$ myVGaps.put(type, null)[ FD ]
Line_3 $$ JLabel component = new JLabel()-->Line_16 $$ FontMetrics metrics = component.getFontMetrics(fontInfo.getFont())[ FD ]
Line_16 $$ FontMetrics metrics = component.getFontMetrics(fontInfo.getFont())-->Line_17 $$ myWidths[type.ordinal()] = metrics.charWidth(c)[ FD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_12 $$ myVGaps.put(type, null)[ CD ]
Line_5 $$ for (Map.Entry<SoftWrapDrawingType, char[]> entry : mySymbols.entrySet()) -->Line_6 $$ SoftWrapDrawingType type = entry.getKey()[ FD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_15 $$ myFonts.put(type, fontInfo)[ CD ]
Line_5 $$ for (Map.Entry<SoftWrapDrawingType, char[]> entry : mySymbols.entrySet()) -->Line_7 $$ char c = entry.getValue()[0][ FD ]
Line_6 $$ SoftWrapDrawingType type = entry.getKey()-->Line_13 $$ myWidths[type.ordinal()] = 0[ FD ]
Line_7 $$ char c = entry.getValue()[0]-->Line_17 $$ myWidths[type.ordinal()] = metrics.charWidth(c)[ FD ]
Line_8 $$ FontInfo fontInfo = EditorUtil.fontForChar(c, Font.PLAIN, myEditor)-->Line_15 $$ myFonts.put(type, fontInfo)[ FD ]
Line_16 $$ FontMetrics metrics = component.getFontMetrics(fontInfo.getFont())-->Line_18 $$ int vGap = metrics.getDescent()[ FD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_11 $$ myFonts.put(type, null)[ CD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_19 $$ myVGaps.put(type, vGap)[ CD ]
Line_6 $$ SoftWrapDrawingType type = entry.getKey()-->Line_11 $$ myFonts.put(type, null)[ FD ]
Line_9 $$ if (!fontInfo.canDisplay(c)) -->Line_13 $$ myWidths[type.ordinal()] = 0[ CD ]
Line_8 $$ FontInfo fontInfo = EditorUtil.fontForChar(c, Font.PLAIN, myEditor)-->Line_9 $$ if (!fontInfo.canDisplay(c)) [ FD ]
Line_6 $$ SoftWrapDrawingType type = entry.getKey()-->Line_19 $$ myVGaps.put(type, vGap)[ FD ]
Line_2 $$ public void reinit() -->Line_3 $$ JLabel component = new JLabel()[ CD ]
Line_7 $$ char c = entry.getValue()[0]-->Line_8 $$ FontInfo fontInfo = EditorUtil.fontForChar(c, Font.PLAIN, myEditor)[ FD ]
