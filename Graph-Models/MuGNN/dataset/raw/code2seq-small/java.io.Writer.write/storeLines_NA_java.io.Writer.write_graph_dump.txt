Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_8 $$ Writer writer = new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(file)), CvsApplicationLevelConfiguration.getCharset())[ CD ]
Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_3 $$ String separator = getLineSeparatorFor(file)[ CD ]
Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_4 $$ FileUtil.createIfDoesntExist(file)[ FD ]
Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_5 $$ if (!file.canWrite()) [ FD ]
Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_4 $$ FileUtil.createIfDoesntExist(file)[ CD ]
Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_5 $$ if (!file.canWrite()) [ CD ]
Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_6 $$ new FileReadOnlyHandler().setFileReadOnly(file, false)[ FD ]
Line_8 $$ Writer writer = new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(file)), CvsApplicationLevelConfiguration.getCharset())-->Line_12 $$ writer.write(separator)[ FD ]
Line_8 $$ Writer writer = new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(file)), CvsApplicationLevelConfiguration.getCharset())-->Line_15 $$ writer.close()[ FD ]
Line_8 $$ Writer writer = new OutputStreamWriter(new BufferedOutputStream(new FileOutputStream(file)), CvsApplicationLevelConfiguration.getCharset())-->Line_11 $$ writer.write(line)[ FD ]
Line_5 $$ if (!file.canWrite()) -->Line_6 $$ new FileReadOnlyHandler().setFileReadOnly(file, false)[ CD ]
Line_2 $$ public static void storeLines(List<String> lines, File file) throws IOException -->Line_3 $$ String separator = getLineSeparatorFor(file)[ FD ]
Line_3 $$ String separator = getLineSeparatorFor(file)-->Line_12 $$ writer.write(separator)[ FD ]
Line_10 $$ for (final String line : lines) -->Line_11 $$ writer.write(line)[ FD ]
