Line_2 $$ private void processCommand(@NonNls final String command, final OutputStreamWriter writer) throws IOException -->Line_3 $$ if (command.startsWith("S")) [ FD ]
Line_2 $$ private void processCommand(@NonNls final String command, final OutputStreamWriter writer) throws IOException -->Line_6 $$ myCommandQueue.add(command)[ FD ]
Line_3 $$ if (command.startsWith("S")) -->Line_4 $$ SwingUtilities.invokeLater(new SuspendSwingRunnable())[ CD ]
Line_3 $$ if (command.startsWith("S")) -->Line_7 $$ if (command.startsWith("L") || command.startsWith("X")) [ CD ]
Line_7 $$ if (command.startsWith("L") || command.startsWith("X")) -->Line_8 $$ String response[ CD ]
Line_2 $$ private void processCommand(@NonNls final String command, final OutputStreamWriter writer) throws IOException -->Line_12 $$ writer.close()[ FD ]
Line_2 $$ private void processCommand(@NonNls final String command, final OutputStreamWriter writer) throws IOException -->Line_7 $$ if (command.startsWith("L") || command.startsWith("X")) [ FD ]
Line_7 $$ if (command.startsWith("L") || command.startsWith("X")) -->Line_15 $$ writer.write(response)[ CD ]
Line_2 $$ private void processCommand(@NonNls final String command, final OutputStreamWriter writer) throws IOException -->Line_15 $$ writer.write(response)[ FD ]
Line_8 $$ String response-->Line_15 $$ writer.write(response)[ FD ]
Line_10 $$ response = myResponseQueue.take()-->Line_15 $$ writer.write(response)[ FD ]
Line_7 $$ if (command.startsWith("L") || command.startsWith("X")) -->Line_16 $$ writer.flush()[ CD ]
Line_2 $$ private void processCommand(@NonNls final String command, final OutputStreamWriter writer) throws IOException -->Line_3 $$ if (command.startsWith("S")) [ CD ]
Line_3 $$ if (command.startsWith("S")) -->Line_6 $$ myCommandQueue.add(command)[ CD ]
Line_2 $$ private void processCommand(@NonNls final String command, final OutputStreamWriter writer) throws IOException -->Line_16 $$ writer.flush()[ FD ]
Line_8 $$ String response-->Line_10 $$ response = myResponseQueue.take()[ FD ]
