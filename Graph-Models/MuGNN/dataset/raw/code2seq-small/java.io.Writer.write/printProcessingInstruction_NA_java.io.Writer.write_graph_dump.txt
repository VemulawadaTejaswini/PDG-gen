Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_23 $$ out.write("?>")[ FD ]
Line_5 $$ if (target.equals(Result.PI_DISABLE_OUTPUT_ESCAPING)) -->Line_7 $$ piProcessed = true[ CD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_22 $$ out.write(target)[ FD ]
Line_12 $$ if (piProcessed == false) -->Line_14 $$ if (!"".equals(rawData)) [ CD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_16 $$ out.write(target)[ CD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_4 $$ boolean piProcessed = false[ CD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_17 $$ out.write(" ")[ CD ]
Line_4 $$ boolean piProcessed = false-->Line_10 $$ piProcessed = true[ FD ]
Line_3 $$ String target = pi.getTarget()-->Line_5 $$ if (target.equals(Result.PI_DISABLE_OUTPUT_ESCAPING)) [ FD ]
Line_3 $$ String target = pi.getTarget()-->Line_16 $$ out.write(target)[ FD ]
Line_3 $$ String target = pi.getTarget()-->Line_8 $$ if (target.equals(Result.PI_ENABLE_OUTPUT_ESCAPING)) [ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_12 $$ if (piProcessed == false) [ CD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_21 $$ out.write("<?")[ FD ]
Line_4 $$ boolean piProcessed = false-->Line_7 $$ piProcessed = true[ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_3 $$ String target = pi.getTarget()[ FD ]
Line_12 $$ if (piProcessed == false) -->Line_13 $$ String rawData = pi.getData()[ CD ]
Line_13 $$ String rawData = pi.getData()-->Line_18 $$ out.write(rawData)[ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_17 $$ out.write(" ")[ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_19 $$ out.write("?>")[ FD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_21 $$ out.write("<?")[ CD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_23 $$ out.write("?>")[ CD ]
Line_8 $$ if (target.equals(Result.PI_ENABLE_OUTPUT_ESCAPING)) -->Line_10 $$ piProcessed = true[ CD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_3 $$ String target = pi.getTarget()[ CD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_15 $$ out.write("<?")[ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_13 $$ String rawData = pi.getData()[ FD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_19 $$ out.write("?>")[ CD ]
Line_13 $$ String rawData = pi.getData()-->Line_14 $$ if (!"".equals(rawData)) [ FD ]
Line_7 $$ piProcessed = true-->Line_12 $$ if (piProcessed == false) [ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_18 $$ out.write(rawData)[ FD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_22 $$ out.write(target)[ CD ]
Line_4 $$ boolean piProcessed = false-->Line_12 $$ if (piProcessed == false) [ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_16 $$ out.write(target)[ FD ]
Line_7 $$ piProcessed = true-->Line_10 $$ piProcessed = true[ FD ]
Line_10 $$ piProcessed = true-->Line_12 $$ if (piProcessed == false) [ FD ]
Line_2 $$ protected void printProcessingInstruction(Writer out, ProcessingInstruction pi) throws IOException -->Line_5 $$ if (target.equals(Result.PI_DISABLE_OUTPUT_ESCAPING)) [ CD ]
Line_5 $$ if (target.equals(Result.PI_DISABLE_OUTPUT_ESCAPING)) -->Line_8 $$ if (target.equals(Result.PI_ENABLE_OUTPUT_ESCAPING)) [ CD ]
Line_3 $$ String target = pi.getTarget()-->Line_22 $$ out.write(target)[ FD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_18 $$ out.write(rawData)[ CD ]
Line_14 $$ if (!"".equals(rawData)) -->Line_15 $$ out.write("<?")[ CD ]
