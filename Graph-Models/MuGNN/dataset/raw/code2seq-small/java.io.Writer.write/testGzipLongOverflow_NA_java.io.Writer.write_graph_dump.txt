Line_20 $$ for (int i = 0; i < buf.length; i++) buf[i] = '\0'-->Line_37 $$ for (int i = 0; i < buf.length; i++) assertEquals("got wrong byte!", buf[i], '\0')[ FD ]
Line_34 $$ for (int j = 0; j < NBUF; j++) -->Line_36 $$ assertEquals("got wrong read length!", n, buf.length)[ CD ]
Line_33 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is))-->Line_35 $$ int n = br.read(buf)[ FD ]
Line_31 $$ InputStream is = fs.open(f)-->Line_32 $$ is = codec.createInputStream(is, decompressor)[ FD ]
Line_18 $$ final int NBUF = 1024 * 4 + 1-->Line_21 $$ for (int i = 0; i < NBUF; i++) [ FD ]
Line_21 $$ for (int i = 0; i < NBUF; i++) -->Line_37 $$ for (int i = 0; i < buf.length; i++) assertEquals("got wrong byte!", buf[i], '\0')[ FD ]
Line_19 $$ final char[] buf = new char[1024 * 1024]-->Line_35 $$ int n = br.read(buf)[ FD ]
Line_28 $$ CompressionCodec codec = ccf.getCodec(f)-->Line_29 $$ Decompressor decompressor = CodecPool.getDecompressor(codec)[ FD ]
Line_20 $$ for (int i = 0; i < buf.length; i++) buf[i] = '\0'-->Line_21 $$ for (int i = 0; i < NBUF; i++) [ FD ]
Line_16 $$ Path f = new Path(new Path(tmpDir), "testGzipLongOverflow.bin.gz")-->Line_31 $$ InputStream is = fs.open(f)[ FD ]
Line_18 $$ final int NBUF = 1024 * 4 + 1-->Line_34 $$ for (int j = 0; j < NBUF; j++) [ FD ]
Line_28 $$ CompressionCodec codec = ccf.getCodec(f)-->Line_32 $$ is = codec.createInputStream(is, decompressor)[ FD ]
Line_16 $$ Path f = new Path(new Path(tmpDir), "testGzipLongOverflow.bin.gz")-->Line_28 $$ CompressionCodec codec = ccf.getCodec(f)[ FD ]
Line_35 $$ int n = br.read(buf)-->Line_36 $$ assertEquals("got wrong read length!", n, buf.length)[ FD ]
Line_34 $$ for (int j = 0; j < NBUF; j++) -->Line_37 $$ for (int i = 0; i < buf.length; i++) assertEquals("got wrong byte!", buf[i], '\0')[ CD ]
Line_17 $$ BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new GZIPOutputStream(new FileOutputStream(f.toString()))))-->Line_24 $$ bw.close()[ FD ]
Line_30 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_31 $$ InputStream is = fs.open(f)[ FD ]
Line_16 $$ Path f = new Path(new Path(tmpDir), "testGzipLongOverflow.bin.gz")-->Line_17 $$ BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new GZIPOutputStream(new FileOutputStream(f.toString()))))[ FD ]
Line_21 $$ for (int i = 0; i < NBUF; i++) -->Line_22 $$ bw.write(buf)[ CD ]
Line_17 $$ BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new GZIPOutputStream(new FileOutputStream(f.toString()))))-->Line_22 $$ bw.write(buf)[ FD ]
Line_34 $$ for (int j = 0; j < NBUF; j++) -->Line_35 $$ int n = br.read(buf)[ CD ]
Line_19 $$ final char[] buf = new char[1024 * 1024]-->Line_22 $$ bw.write(buf)[ FD ]
Line_29 $$ Decompressor decompressor = CodecPool.getDecompressor(codec)-->Line_32 $$ is = codec.createInputStream(is, decompressor)[ FD ]
Line_33 $$ BufferedReader br = new BufferedReader(new InputStreamReader(is))-->Line_39 $$ br.close()[ FD ]
