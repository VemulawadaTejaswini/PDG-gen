Line_11 $$ if (rect.pads != null) -->Line_14 $$ writer.write("  pad: " + rect.pads[0] + ", " + rect.pads[1] + ", " + rect.pads[2] + ", " + rect.pads[3] + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_16 $$ writer.write("  orig: " + rect.originalWidth + ", " + rect.originalHeight + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_11 $$ if (rect.pads != null) [ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_18 $$ writer.write("  index: " + rect.index + "\n")[ FD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_5 $$ writer.write("  xy: " + (page.x + rect.x) + ", " + (page.y + page.height - rect.height - rect.y) + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_16 $$ writer.write("  orig: " + rect.originalWidth + ", " + rect.originalHeight + "\n")[ FD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_18 $$ writer.write("  index: " + rect.index + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_3 $$ writer.write(Rect.getAtlasName(name, settings.flattenPaths) + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_4 $$ writer.write("  rotate: " + rect.rotated + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_7 $$ if (rect.splits != null) [ CD ]
Line_12 $$ if (rect.splits == null)-->Line_13 $$ writer.write("  split: 0, 0, 0, 0\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_17 $$ writer.write("  offset: " + rect.offsetX + ", " + (rect.originalHeight - rect.regionHeight - rect.offsetY) + "\n")[ FD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_3 $$ writer.write(Rect.getAtlasName(name, settings.flattenPaths) + "\n")[ FD ]
Line_11 $$ if (rect.pads != null) -->Line_12 $$ if (rect.splits == null)[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_4 $$ writer.write("  rotate: " + rect.rotated + "\n")[ FD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_13 $$ writer.write("  split: 0, 0, 0, 0\n")[ FD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_6 $$ writer.write("  size: " + rect.regionWidth + ", " + rect.regionHeight + "\n")[ FD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_17 $$ writer.write("  offset: " + rect.offsetX + ", " + (rect.originalHeight - rect.regionHeight - rect.offsetY) + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_5 $$ writer.write("  xy: " + (page.x + rect.x) + ", " + (page.y + page.height - rect.height - rect.y) + "\n")[ FD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_6 $$ writer.write("  size: " + rect.regionWidth + ", " + rect.regionHeight + "\n")[ CD ]
Line_2 $$ private void writeRect(FileWriter writer, Page page, Rect rect, String name) throws IOException -->Line_14 $$ writer.write("  pad: " + rect.pads[0] + ", " + rect.pads[1] + ", " + rect.pads[2] + ", " + rect.pads[3] + "\n")[ FD ]
