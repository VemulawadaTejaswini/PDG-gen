Line_9 $$ StringBuilder sb = new StringBuilder(200)-->Line_11 $$ dumpString(sb, entry.key, true, escapeUnicode)[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_4 $$ writeComment(writer, comment)[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_8 $$ writer.write(LINE_SEPARATOR)[ CD ]
Line_9 $$ StringBuilder sb = new StringBuilder(200)-->Line_12 $$ sb.append('=')[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_15 $$ writer.write(sb.toString())[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_3 $$ if (comment != null) [ CD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_11 $$ dumpString(sb, entry.key, true, escapeUnicode)[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_10 $$ for (Entry<String, String> entry : properties.entries()) [ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_3 $$ if (comment != null) [ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder(200)-->Line_15 $$ writer.write(sb.toString())[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_6 $$ writer.write("#")[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_9 $$ StringBuilder sb = new StringBuilder(200)[ CD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_18 $$ writer.flush()[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_7 $$ writer.write(new Date().toString())[ CD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_14 $$ writer.write(LINE_SEPARATOR)[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_7 $$ writer.write(new Date().toString())[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder(200)-->Line_16 $$ sb.setLength(0)[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_18 $$ writer.flush()[ CD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_8 $$ writer.write(LINE_SEPARATOR)[ FD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_6 $$ writer.write("#")[ CD ]
Line_3 $$ if (comment != null) -->Line_4 $$ writeComment(writer, comment)[ CD ]
Line_2 $$ private static void storeImpl(ObjectMap<String, String> properties, Writer writer, String comment, boolean escapeUnicode) throws IOException -->Line_13 $$ dumpString(sb, entry.value, false, escapeUnicode)[ FD ]
Line_9 $$ StringBuilder sb = new StringBuilder(200)-->Line_13 $$ dumpString(sb, entry.value, false, escapeUnicode)[ FD ]
