Line_4 $$ File packDir = packFile.getParentFile()-->Line_5 $$ packDir.mkdirs()[ FD ]
Line_10 $$ String rectName = Rect.getAtlasName(rect.name, settings.flattenPaths)-->Line_12 $$ if (region.name.equals(rectName)) [ FD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_35 $$ writeRect(writer, page, aliasRect, alias.name)[ FD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_24 $$ writer.write("filter: " + settings.filterMin + "," + settings.filterMag + "\n")[ FD ]
Line_32 $$ Rect aliasRect = new Rect()-->Line_35 $$ writeRect(writer, page, aliasRect, alias.name)[ FD ]
Line_8 $$ for (Page page : pages) -->Line_35 $$ writeRect(writer, page, aliasRect, alias.name)[ FD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_25 $$ writer.write("repeat: " + getRepeatValue() + "\n")[ FD ]
Line_29 $$ Array<Alias> aliases = new Array(rect.aliases.toArray())-->Line_30 $$ aliases.sort()[ FD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_23 $$ writer.write("format: " + settings.format + "\n")[ FD ]
Line_3 $$ File packFile = new File(outputDir, scaledPackFileName + settings.atlasExtension)-->Line_6 $$ if (packFile.exists()) [ FD ]
Line_2 $$ private void writePackFile(File outputDir, String scaledPackFileName, Array<Page> pages) throws IOException -->Line_4 $$ File packDir = packFile.getParentFile()[ CD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_22 $$ writer.write("size: " + page.imageWidth + "," + page.imageHeight + "\n")[ FD ]
Line_9 $$ for (Rect rect : page.outputRects) -->Line_28 $$ writeRect(writer, page, rect, rect.name)[ FD ]
Line_8 $$ for (Page page : pages) -->Line_28 $$ writeRect(writer, page, rect, rect.name)[ FD ]
Line_6 $$ if (packFile.exists()) -->Line_7 $$ TextureAtlasData textureAtlasData = new TextureAtlasData(new FileHandle(packFile), new FileHandle(packFile), false)[ CD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_28 $$ writeRect(writer, page, rect, rect.name)[ FD ]
Line_2 $$ private void writePackFile(File outputDir, String scaledPackFileName, Array<Page> pages) throws IOException -->Line_19 $$ FileWriter writer = new FileWriter(packFile, true)[ CD ]
Line_2 $$ private void writePackFile(File outputDir, String scaledPackFileName, Array<Page> pages) throws IOException -->Line_39 $$ writer.close()[ CD ]
Line_32 $$ Rect aliasRect = new Rect()-->Line_34 $$ alias.apply(aliasRect)[ FD ]
Line_2 $$ private void writePackFile(File outputDir, String scaledPackFileName, Array<Page> pages) throws IOException -->Line_5 $$ packDir.mkdirs()[ CD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_39 $$ writer.close()[ FD ]
Line_3 $$ File packFile = new File(outputDir, scaledPackFileName + settings.atlasExtension)-->Line_4 $$ File packDir = packFile.getParentFile()[ FD ]
Line_2 $$ private void writePackFile(File outputDir, String scaledPackFileName, Array<Page> pages) throws IOException -->Line_6 $$ if (packFile.exists()) [ CD ]
Line_9 $$ for (Rect rect : page.outputRects) -->Line_33 $$ aliasRect.set(rect)[ FD ]
Line_31 $$ for (Alias alias : aliases) -->Line_34 $$ alias.apply(aliasRect)[ FD ]
Line_32 $$ Rect aliasRect = new Rect()-->Line_33 $$ aliasRect.set(rect)[ FD ]
Line_2 $$ private void writePackFile(File outputDir, String scaledPackFileName, Array<Page> pages) throws IOException -->Line_3 $$ File packFile = new File(outputDir, scaledPackFileName + settings.atlasExtension)[ CD ]
Line_19 $$ FileWriter writer = new FileWriter(packFile, true)-->Line_21 $$ writer.write("\n" + page.imageName + "\n")[ FD ]
Line_7 $$ TextureAtlasData textureAtlasData = new TextureAtlasData(new FileHandle(packFile), new FileHandle(packFile), false)-->Line_11 $$ for (Region region : textureAtlasData.getRegions()) [ FD ]
