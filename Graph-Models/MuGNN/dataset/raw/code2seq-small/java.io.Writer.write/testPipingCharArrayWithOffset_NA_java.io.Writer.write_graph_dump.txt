Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_16 $$ Assert.assertEquals('c', buffer[2])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_13 $$ result = reader.read(buffer, 1, 3)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_4 $$ Writer writer = charPipe.getWriter()[ CD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_9 $$ writer.write(data, 1, 2)[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_24 $$ charPipe.close()[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_14 $$ Assert.assertEquals(2, result)[ CD ]
Line_18 $$ result = reader.read(buffer, 1, 0)-->Line_20 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_6 $$ writer.write(data, 0, 0)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_23 $$ Assert.assertEquals('c', buffer[2])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_22 $$ Assert.assertEquals('b', buffer[1])[ CD ]
Line_13 $$ result = reader.read(buffer, 1, 3)-->Line_18 $$ result = reader.read(buffer, 1, 0)[ FD ]
Line_20 $$ result = reader.read(buffer, 1, 3)-->Line_21 $$ Assert.assertEquals(2, result)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_3 $$ CharPipe charPipe = new CharPipe(4)[ CD ]
Line_11 $$ int result = reader.read(buffer, 1, 0)-->Line_12 $$ Assert.assertEquals(0, result)[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_7 $$ Reader reader = charPipe.getReader()[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_12 $$ Assert.assertEquals(0, result)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_17 $$ writer.append(new String(data), 1, 3)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_19 $$ Assert.assertEquals(0, result)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_11 $$ int result = reader.read(buffer, 1, 0)[ CD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_6 $$ writer.write(data, 0, 0)[ FD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_8 $$ Assert.assertFalse(reader.ready())[ FD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_17 $$ writer.append(new String(data), 1, 3)[ FD ]
Line_11 $$ int result = reader.read(buffer, 1, 0)-->Line_14 $$ Assert.assertEquals(2, result)[ FD ]
Line_11 $$ int result = reader.read(buffer, 1, 0)-->Line_19 $$ Assert.assertEquals(0, result)[ FD ]
Line_11 $$ int result = reader.read(buffer, 1, 0)-->Line_20 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_11 $$ int result = reader.read(buffer, 1, 0)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_8 $$ Assert.assertFalse(reader.ready())[ CD ]
Line_10 $$ char[] buffer = new char[4]-->Line_20 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_13 $$ result = reader.read(buffer, 1, 3)-->Line_19 $$ Assert.assertEquals(0, result)[ FD ]
Line_10 $$ char[] buffer = new char[4]-->Line_13 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_18 $$ result = reader.read(buffer, 1, 0)-->Line_19 $$ Assert.assertEquals(0, result)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_6 $$ writer.write(data, 0, 0)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_5 $$ char[] data = "abcd".toCharArray()[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_24 $$ charPipe.close()[ CD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_9 $$ writer.write(data, 1, 2)[ FD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_18 $$ result = reader.read(buffer, 1, 0)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_10 $$ char[] buffer = new char[4][ CD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_4 $$ Writer writer = charPipe.getWriter()[ FD ]
Line_13 $$ result = reader.read(buffer, 1, 3)-->Line_14 $$ Assert.assertEquals(2, result)[ FD ]
Line_10 $$ char[] buffer = new char[4]-->Line_18 $$ result = reader.read(buffer, 1, 0)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_9 $$ writer.write(data, 1, 2)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_7 $$ Reader reader = charPipe.getReader()[ CD ]
Line_11 $$ int result = reader.read(buffer, 1, 0)-->Line_13 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_11 $$ int result = reader.read(buffer, 1, 0)-->Line_21 $$ Assert.assertEquals(2, result)[ FD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_20 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_18 $$ result = reader.read(buffer, 1, 0)[ CD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_13 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_13 $$ result = reader.read(buffer, 1, 3)-->Line_21 $$ Assert.assertEquals(2, result)[ FD ]
Line_13 $$ result = reader.read(buffer, 1, 3)-->Line_20 $$ result = reader.read(buffer, 1, 3)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_15 $$ Assert.assertEquals('b', buffer[1])[ CD ]
Line_10 $$ char[] buffer = new char[4]-->Line_11 $$ int result = reader.read(buffer, 1, 0)[ FD ]
Line_18 $$ result = reader.read(buffer, 1, 0)-->Line_21 $$ Assert.assertEquals(2, result)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_21 $$ Assert.assertEquals(2, result)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffset() throws IOException -->Line_20 $$ result = reader.read(buffer, 1, 3)[ CD ]
Line_11 $$ int result = reader.read(buffer, 1, 0)-->Line_18 $$ result = reader.read(buffer, 1, 0)[ FD ]
