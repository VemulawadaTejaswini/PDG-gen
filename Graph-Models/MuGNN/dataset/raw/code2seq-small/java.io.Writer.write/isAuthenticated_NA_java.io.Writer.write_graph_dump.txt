Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()-->Line_25 $$ setCookieProperty(request, httpURLConnection, cookieNames)[ FD ]
Line_26 $$ OutputStreamWriter outputStreamWriter = new OutputStreamWriter(httpURLConnection.getOutputStream())-->Line_27 $$ outputStreamWriter.write("dummy")[ FD ]
Line_5 $$ boolean hasCookieNames = false-->Line_13 $$ if (!hasCookieNames) [ FD ]
Line_13 $$ if (!hasCookieNames) -->Line_17 $$ return false[ CD ]
Line_14 $$ if (_log.isWarnEnabled()) -->Line_15 $$ _log.warn("User is not logged in because he has no OpenSSO cookies")[ CD ]
Line_7 $$ for (String cookieName : cookieNames) -->Line_8 $$ if (CookieKeys.getCookie(request, cookieName) != null) [ FD ]
Line_8 $$ if (CookieKeys.getCookie(request, cookieName) != null) -->Line_9 $$ hasCookieNames = true[ CD ]
Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()-->Line_26 $$ OutputStreamWriter outputStreamWriter = new OutputStreamWriter(httpURLConnection.getOutputStream())[ FD ]
Line_35 $$ if (_log.isDebugEnabled()) -->Line_36 $$ _log.debug("Authentication response code " + responseCode)[ CD ]
Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()-->Line_22 $$ httpURLConnection.setDoOutput(true)[ FD ]
Line_31 $$ String data = StringUtil.read(httpURLConnection.getInputStream())-->Line_32 $$ if (StringUtil.toLowerCase(data).contains("boolean=true")) [ FD ]
Line_4 $$ boolean authenticated = false-->Line_33 $$ authenticated = true[ FD ]
Line_5 $$ boolean hasCookieNames = false-->Line_9 $$ hasCookieNames = true[ FD ]
Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()-->Line_23 $$ httpURLConnection.setRequestMethod("POST")[ FD ]
Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()-->Line_29 $$ int responseCode = httpURLConnection.getResponseCode()[ FD ]
Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()-->Line_31 $$ String data = StringUtil.read(httpURLConnection.getInputStream())[ FD ]
Line_9 $$ hasCookieNames = true-->Line_13 $$ if (!hasCookieNames) [ FD ]
Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()-->Line_24 $$ httpURLConnection.setRequestProperty("Content-type", "application/x-www-form-urlencoded")[ FD ]
Line_6 $$ String[] cookieNames = getCookieNames(serviceUrl)-->Line_25 $$ setCookieProperty(request, httpURLConnection, cookieNames)[ FD ]
Line_26 $$ OutputStreamWriter outputStreamWriter = new OutputStreamWriter(httpURLConnection.getOutputStream())-->Line_28 $$ outputStreamWriter.flush()[ FD ]
Line_13 $$ if (!hasCookieNames) -->Line_14 $$ if (_log.isWarnEnabled()) [ CD ]
Line_30 $$ if (responseCode == HttpURLConnection.HTTP_OK) -->Line_35 $$ if (_log.isDebugEnabled()) [ CD ]
Line_30 $$ if (responseCode == HttpURLConnection.HTTP_OK) -->Line_32 $$ if (StringUtil.toLowerCase(data).contains("boolean=true")) [ CD ]
Line_20 $$ URL urlObj = new URL(url)-->Line_21 $$ HttpURLConnection httpURLConnection = (HttpURLConnection) urlObj.openConnection()[ FD ]
Line_30 $$ if (responseCode == HttpURLConnection.HTTP_OK) -->Line_31 $$ String data = StringUtil.read(httpURLConnection.getInputStream())[ CD ]
Line_29 $$ int responseCode = httpURLConnection.getResponseCode()-->Line_30 $$ if (responseCode == HttpURLConnection.HTTP_OK) [ FD ]
Line_32 $$ if (StringUtil.toLowerCase(data).contains("boolean=true")) -->Line_33 $$ authenticated = true[ CD ]
