Line_5 $$ Path file = new Path(workDir, "test_" + i + ".txt")-->Line_6 $$ Writer writer = new OutputStreamWriter(localFs.create(file))[ FD ]
Line_6 $$ Writer writer = new OutputStreamWriter(localFs.create(file))-->Line_11 $$ writer.write("\n")[ FD ]
Line_2 $$ private static void createFiles(int length, int numFiles, Random random) throws IOException -->Line_4 $$ for (int i = 0; i < numFiles; i++) [ FD ]
Line_6 $$ Writer writer = new OutputStreamWriter(localFs.create(file))-->Line_10 $$ writer.write(Integer.toString(j))[ FD ]
Line_4 $$ for (int i = 0; i < numFiles; i++) -->Line_7 $$ Range range = ranges[i][ CD ]
Line_2 $$ private static void createFiles(int length, int numFiles, Random random) throws IOException -->Line_4 $$ for (int i = 0; i < numFiles; i++) [ CD ]
Line_4 $$ for (int i = 0; i < numFiles; i++) -->Line_6 $$ Writer writer = new OutputStreamWriter(localFs.create(file))[ CD ]
Line_6 $$ Writer writer = new OutputStreamWriter(localFs.create(file))-->Line_14 $$ writer.close()[ FD ]
Line_2 $$ private static void createFiles(int length, int numFiles, Random random) throws IOException -->Line_3 $$ Range[] ranges = createRanges(length, numFiles, random)[ FD ]
Line_9 $$ for (int j = range.start; j < range.end; j++) -->Line_11 $$ writer.write("\n")[ CD ]
Line_2 $$ private static void createFiles(int length, int numFiles, Random random) throws IOException -->Line_3 $$ Range[] ranges = createRanges(length, numFiles, random)[ CD ]
Line_4 $$ for (int i = 0; i < numFiles; i++) -->Line_5 $$ Path file = new Path(workDir, "test_" + i + ".txt")[ CD ]
Line_9 $$ for (int j = range.start; j < range.end; j++) -->Line_10 $$ writer.write(Integer.toString(j))[ FD ]
Line_9 $$ for (int j = range.start; j < range.end; j++) -->Line_10 $$ writer.write(Integer.toString(j))[ CD ]
