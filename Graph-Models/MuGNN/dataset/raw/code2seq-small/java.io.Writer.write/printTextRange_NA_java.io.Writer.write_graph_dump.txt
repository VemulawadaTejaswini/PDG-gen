Line_3 $$ String previous-->Line_35 $$ previous = next[ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_10 $$ end = skipTrailingWhite(content, end)[ FD ]
Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) -->Line_25 $$ out.write(" ")[ CD ]
Line_4 $$ Object node-->Line_30 $$ if (node instanceof EntityRef) [ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_7 $$ start = skipLeadingWhite(content, start)[ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_5 $$ String next[ CD ]
Line_4 $$ Object node-->Line_15 $$ if (node instanceof EntityRef) [ FD ]
Line_11 $$ for (int i = start; i < end; i++) -->Line_35 $$ previous = next[ CD ]
Line_11 $$ for (int i = start; i < end; i++) -->Line_28 $$ if (node instanceof CDATA) [ CD ]
Line_35 $$ previous = next-->Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) [ FD ]
Line_16 $$ next = "&" + ((EntityRef) node).getValue() + ";"-->Line_33 $$ printString(out, next)[ FD ]
Line_4 $$ Object node-->Line_12 $$ node = content.get(i)[ FD ]
Line_6 $$ previous = null-->Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) [ FD ]
Line_12 $$ node = content.get(i)-->Line_30 $$ if (node instanceof EntityRef) [ FD ]
Line_12 $$ node = content.get(i)-->Line_13 $$ if (node instanceof Text) [ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_9 $$ if (start < size) [ CD ]
Line_28 $$ if (node instanceof CDATA) -->Line_30 $$ if (node instanceof EntityRef) [ CD ]
Line_11 $$ for (int i = start; i < end; i++) -->Line_12 $$ node = content.get(i)[ CD ]
Line_11 $$ for (int i = start; i < end; i++) -->Line_20 $$ if (next == null || "".equals(next)) [ CD ]
Line_5 $$ String next-->Line_20 $$ if (next == null || "".equals(next)) [ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_12 $$ node = content.get(i)[ FD ]
Line_4 $$ Object node-->Line_13 $$ if (node instanceof Text) [ FD ]
Line_11 $$ for (int i = start; i < end; i++) -->Line_23 $$ if (previous != null) [ CD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_33 $$ printString(out, next)[ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_9 $$ if (start < size) [ FD ]
Line_14 $$ next = ((Text) node).getText()-->Line_35 $$ previous = next[ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_11 $$ for (int i = start; i < end; i++) [ FD ]
Line_12 $$ node = content.get(i)-->Line_15 $$ if (node instanceof EntityRef) [ FD ]
Line_9 $$ if (start < size) -->Line_10 $$ end = skipTrailingWhite(content, end)[ CD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_6 $$ previous = null[ CD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_8 $$ int size = content.size()[ CD ]
Line_16 $$ next = "&" + ((EntityRef) node).getValue() + ";"-->Line_20 $$ if (next == null || "".equals(next)) [ FD ]
Line_14 $$ next = ((Text) node).getText()-->Line_16 $$ next = "&" + ((EntityRef) node).getValue() + ";"[ FD ]
Line_4 $$ Object node-->Line_28 $$ if (node instanceof CDATA) [ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_3 $$ String previous[ CD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_29 $$ printCDATA(out, (CDATA) node)[ FD ]
Line_30 $$ if (node instanceof EntityRef) -->Line_33 $$ printString(out, next)[ CD ]
Line_16 $$ next = "&" + ((EntityRef) node).getValue() + ";"-->Line_35 $$ previous = next[ FD ]
Line_35 $$ previous = next-->Line_23 $$ if (previous != null) [ FD ]
Line_13 $$ if (node instanceof Text) -->Line_14 $$ next = ((Text) node).getText()[ CD ]
Line_5 $$ String next-->Line_33 $$ printString(out, next)[ FD ]
Line_11 $$ for (int i = start; i < end; i++) -->Line_13 $$ if (node instanceof Text) [ CD ]
Line_5 $$ String next-->Line_14 $$ next = ((Text) node).getText()[ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_31 $$ printEntityRef(out, (EntityRef) node)[ FD ]
Line_14 $$ next = ((Text) node).getText()-->Line_33 $$ printString(out, next)[ FD ]
Line_30 $$ if (node instanceof EntityRef) -->Line_31 $$ printEntityRef(out, (EntityRef) node)[ CD ]
Line_13 $$ if (node instanceof Text) -->Line_15 $$ if (node instanceof EntityRef) [ CD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_8 $$ int size = content.size()[ FD ]
Line_14 $$ next = ((Text) node).getText()-->Line_20 $$ if (next == null || "".equals(next)) [ FD ]
Line_14 $$ next = ((Text) node).getText()-->Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) [ FD ]
Line_5 $$ String next-->Line_35 $$ previous = next[ FD ]
Line_10 $$ end = skipTrailingWhite(content, end)-->Line_11 $$ for (int i = start; i < end; i++) [ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_25 $$ out.write(" ")[ FD ]
Line_12 $$ node = content.get(i)-->Line_28 $$ if (node instanceof CDATA) [ FD ]
Line_6 $$ previous = null-->Line_35 $$ previous = next[ FD ]
Line_28 $$ if (node instanceof CDATA) -->Line_29 $$ printCDATA(out, (CDATA) node)[ CD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_4 $$ Object node[ CD ]
Line_3 $$ String previous-->Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) [ FD ]
Line_23 $$ if (previous != null) -->Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) [ CD ]
Line_8 $$ int size = content.size()-->Line_9 $$ if (start < size) [ FD ]
Line_11 $$ for (int i = start; i < end; i++) -->Line_12 $$ node = content.get(i)[ FD ]
Line_3 $$ String previous-->Line_6 $$ previous = null[ FD ]
Line_6 $$ previous = null-->Line_23 $$ if (previous != null) [ FD ]
Line_7 $$ start = skipLeadingWhite(content, start)-->Line_9 $$ if (start < size) [ FD ]
Line_2 $$ private void printTextRange(Writer out, List content, int start, int end) throws IOException -->Line_7 $$ start = skipLeadingWhite(content, start)[ CD ]
Line_15 $$ if (node instanceof EntityRef) -->Line_16 $$ next = "&" + ((EntityRef) node).getValue() + ";"[ CD ]
Line_5 $$ String next-->Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) [ FD ]
Line_16 $$ next = "&" + ((EntityRef) node).getValue() + ";"-->Line_24 $$ if ((endsWithWhite(previous)) || (startsWithWhite(next))) [ FD ]
Line_5 $$ String next-->Line_16 $$ next = "&" + ((EntityRef) node).getValue() + ";"[ FD ]
Line_3 $$ String previous-->Line_23 $$ if (previous != null) [ FD ]
Line_9 $$ if (start < size) -->Line_11 $$ for (int i = start; i < end; i++) [ CD ]
