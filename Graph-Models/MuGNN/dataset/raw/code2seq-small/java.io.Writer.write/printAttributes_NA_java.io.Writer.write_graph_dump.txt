Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_23 $$ out.write("\"")[ FD ]
Line_14 $$ Namespace ns = attribute.getNamespace()-->Line_16 $$ printNamespace(out, ns, namespaces)[ FD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_19 $$ printQualifiedName(out, attribute)[ FD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_3 $$ List<Attribute> atts = new ArrayList<Attribute>()[ CD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_7 $$ Collections.sort(atts, new Comparator<Attribute>() [ CD ]
Line_7 $$ Collections.sort(atts, new Comparator<Attribute>() -->Line_9 $$ return o1.getName().compareTo(o2.getName())[ CD ]
Line_13 $$ Attribute attribute = (Attribute) atts.get(i)-->Line_19 $$ printQualifiedName(out, attribute)[ FD ]
Line_13 $$ Attribute attribute = (Attribute) atts.get(i)-->Line_14 $$ Namespace ns = attribute.getNamespace()[ FD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_15 $$ if ((ns != Namespace.NO_NAMESPACE) && (ns != Namespace.XML_NAMESPACE)) [ CD ]
Line_7 $$ Collections.sort(atts, new Comparator<Attribute>() -->Line_9 $$ return o1.getName().compareTo(o2.getName())[ FD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_20 $$ out.write("=")[ CD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_21 $$ out.write("\"")[ FD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_13 $$ Attribute attribute = (Attribute) atts.get(i)[ CD ]
Line_3 $$ List<Attribute> atts = new ArrayList<Attribute>()-->Line_7 $$ Collections.sort(atts, new Comparator<Attribute>() [ FD ]
Line_3 $$ List<Attribute> atts = new ArrayList<Attribute>()-->Line_13 $$ Attribute attribute = (Attribute) atts.get(i)[ FD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_22 $$ out.write(escapeAttributeEntities(attribute.getValue()))[ CD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_18 $$ out.write(" ")[ CD ]
Line_13 $$ Attribute attribute = (Attribute) atts.get(i)-->Line_22 $$ out.write(escapeAttributeEntities(attribute.getValue()))[ FD ]
Line_4 $$ for (Object attribute : attributes) -->Line_22 $$ out.write(escapeAttributeEntities(attribute.getValue()))[ FD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_18 $$ out.write(" ")[ FD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_20 $$ out.write("=")[ FD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_22 $$ out.write(escapeAttributeEntities(attribute.getValue()))[ FD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_14 $$ Namespace ns = attribute.getNamespace()[ CD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_23 $$ out.write("\"")[ CD ]
Line_3 $$ List<Attribute> atts = new ArrayList<Attribute>()-->Line_12 $$ for (int i = 0; i < atts.size(); i++) [ FD ]
Line_4 $$ for (Object attribute : attributes) -->Line_14 $$ Namespace ns = attribute.getNamespace()[ FD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_12 $$ for (int i = 0; i < atts.size(); i++) [ CD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_21 $$ out.write("\"")[ CD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_13 $$ Attribute attribute = (Attribute) atts.get(i)[ FD ]
Line_4 $$ for (Object attribute : attributes) -->Line_19 $$ printQualifiedName(out, attribute)[ FD ]
Line_3 $$ List<Attribute> atts = new ArrayList<Attribute>()-->Line_5 $$ atts.add((Attribute) ((Attribute) attribute).clone())[ FD ]
Line_12 $$ for (int i = 0; i < atts.size(); i++) -->Line_19 $$ printQualifiedName(out, attribute)[ CD ]
Line_2 $$ protected void printAttributes(Writer out, List attributes, Element parent, EclipseNamespaceStack namespaces) throws IOException -->Line_16 $$ printNamespace(out, ns, namespaces)[ FD ]
Line_15 $$ if ((ns != Namespace.NO_NAMESPACE) && (ns != Namespace.XML_NAMESPACE)) -->Line_16 $$ printNamespace(out, ns, namespaces)[ CD ]
