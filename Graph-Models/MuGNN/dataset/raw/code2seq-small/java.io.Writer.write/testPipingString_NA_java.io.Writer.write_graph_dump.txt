Line_2 $$ public void testPipingString() throws IOException -->Line_9 $$ Assert.assertEquals(4, result)[ CD ]
Line_5 $$ Writer writer = charPipe.getWriter()-->Line_6 $$ writer.write("abcd")[ FD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_11 $$ charPipe.close()[ CD ]
Line_8 $$ int result = reader.read(buffer)-->Line_9 $$ Assert.assertEquals(4, result)[ FD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_3 $$ CharPipe charPipe = new CharPipe(4)[ CD ]
Line_7 $$ char[] buffer = new char[4]-->Line_8 $$ int result = reader.read(buffer)[ FD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_4 $$ Reader reader = charPipe.getReader()[ CD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_5 $$ Writer writer = charPipe.getWriter()[ CD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_10 $$ Assert.assertEquals("abcd", new String(buffer))[ CD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_11 $$ charPipe.close()[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_4 $$ Reader reader = charPipe.getReader()[ FD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_6 $$ writer.write("abcd")[ CD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_8 $$ int result = reader.read(buffer)[ CD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_5 $$ Writer writer = charPipe.getWriter()[ FD ]
Line_2 $$ public void testPipingString() throws IOException -->Line_7 $$ char[] buffer = new char[4][ CD ]
Line_4 $$ Reader reader = charPipe.getReader()-->Line_8 $$ int result = reader.read(buffer)[ FD ]
