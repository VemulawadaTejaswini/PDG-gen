Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_54 $$ writer.write(':')[ FD ]
Line_64 $$ if (groupsOk) -->Line_65 $$ doNotify("Inspection groups dumped to\n" + fqnListFile.getAbsolutePath())[ CD ]
Line_16 $$ final String group = getGroupName(toolWrapper)-->Line_17 $$ Collection<String> names = groups.get(group)[ FD ]
Line_7 $$ final Map<String, Collection<String>> groups = ContainerUtil.newTreeMap()-->Line_19 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ FD ]
Line_22 $$ if (url != null) -->Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() [ CD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_55 $$ writer.newLine()[ FD ]
Line_4 $$ final InspectionProfile profile = (InspectionProfile) InspectionProfileManager.getInstance().getRootProfile()-->Line_5 $$ final InspectionToolWrapper[] tools = (InspectionToolWrapper[]) profile.getInspectionTools(null)[ FD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_54 $$ writer.write(':')[ FD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_57 $$ writer.write("  ")[ FD ]
Line_48 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_58 $$ writer.write(name)[ FD ]
Line_14 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() [ FD ]
Line_9 $$ final File descDirectory = new File(tempDirectory, "inspections")-->Line_32 $$ doNotify("Inspection descriptions dumped to\n" + descDirectory.getAbsolutePath())[ FD ]
Line_38 $$ for (String name : classes) -->Line_39 $$ writer.write(name)[ FD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_59 $$ writer.newLine()[ FD ]
Line_16 $$ final String group = getGroupName(toolWrapper)-->Line_19 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ FD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_27 $$ writer.write(ResourceUtil.loadText(url))[ CD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_55 $$ writer.newLine()[ FD ]
Line_21 $$ final URL url = getDescriptionUrl(toolWrapper)-->Line_27 $$ writer.write(ResourceUtil.loadText(url))[ FD ]
Line_7 $$ final Map<String, Collection<String>> groups = ContainerUtil.newTreeMap()-->Line_17 $$ Collection<String> names = groups.get(group)[ FD ]
Line_48 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_53 $$ writer.write(entry.getKey())[ FD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_59 $$ writer.newLine()[ FD ]
Line_10 $$ if (!descDirectory.mkdirs() && !descDirectory.isDirectory()) -->Line_12 $$ return[ CD ]
Line_14 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_21 $$ final URL url = getDescriptionUrl(toolWrapper)[ FD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_40 $$ writer.newLine()[ FD ]
Line_38 $$ for (String name : classes) -->Line_58 $$ writer.write(name)[ FD ]
Line_19 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))-->Line_20 $$ names.add(toolWrapper.getShortName())[ FD ]
Line_48 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_59 $$ writer.newLine()[ FD ]
Line_52 $$ for (Map.Entry<String, Collection<String>> entry : groups.entrySet()) -->Line_56 $$ for (String name : entry.getValue()) [ FD ]
Line_14 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_15 $$ classes.add(getInspectionClass(toolWrapper).getName())[ FD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_57 $$ writer.write("  ")[ FD ]
Line_21 $$ final URL url = getDescriptionUrl(toolWrapper)-->Line_22 $$ if (url != null) [ FD ]
Line_14 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_16 $$ final String group = getGroupName(toolWrapper)[ FD ]
Line_48 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_57 $$ writer.write("  ")[ FD ]
Line_9 $$ final File descDirectory = new File(tempDirectory, "inspections")-->Line_10 $$ if (!descDirectory.mkdirs() && !descDirectory.isDirectory()) [ FD ]
Line_44 $$ if (fqnOk) -->Line_45 $$ doNotify("Inspection class names dumped to\n" + fqnListFile.getAbsolutePath())[ CD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_39 $$ writer.write(name)[ FD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_53 $$ writer.write(entry.getKey())[ FD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_27 $$ writer.write(ResourceUtil.loadText(url))[ FD ]
Line_17 $$ Collection<String> names = groups.get(group)-->Line_20 $$ names.add(toolWrapper.getShortName())[ FD ]
Line_17 $$ Collection<String> names = groups.get(group)-->Line_19 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ FD ]
Line_56 $$ for (String name : entry.getValue()) -->Line_58 $$ writer.write(name)[ FD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_58 $$ writer.write(name)[ FD ]
Line_48 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_54 $$ writer.write(':')[ FD ]
Line_10 $$ if (!descDirectory.mkdirs() && !descDirectory.isDirectory()) -->Line_11 $$ LOG.error("Unable to create directory: " + descDirectory.getAbsolutePath())[ CD ]
Line_6 $$ final Collection<String> classes = ContainerUtil.newTreeSet()-->Line_15 $$ classes.add(getInspectionClass(toolWrapper).getName())[ FD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_39 $$ writer.write(name)[ FD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_58 $$ writer.write(name)[ FD ]
Line_9 $$ final File descDirectory = new File(tempDirectory, "inspections")-->Line_11 $$ LOG.error("Unable to create directory: " + descDirectory.getAbsolutePath())[ FD ]
Line_34 $$ final boolean fqnOk = doDump(fqnListFile, new Processor() -->Line_40 $$ writer.newLine()[ FD ]
Line_23 $$ doDump(new File(descDirectory, toolWrapper.getShortName() + ".html"), new Processor() -->Line_53 $$ writer.write(entry.getKey())[ FD ]
Line_18 $$ if (names == null)-->Line_19 $$ groups.put(group, (names = ContainerUtil.newTreeSet()))[ CD ]
Line_14 $$ for (InspectionToolWrapper toolWrapper : tools) -->Line_20 $$ names.add(toolWrapper.getShortName())[ FD ]
Line_17 $$ Collection<String> names = groups.get(group)-->Line_18 $$ if (names == null)[ FD ]
Line_7 $$ final Map<String, Collection<String>> groups = ContainerUtil.newTreeMap()-->Line_52 $$ for (Map.Entry<String, Collection<String>> entry : groups.entrySet()) [ FD ]
Line_48 $$ final boolean groupsOk = doDump(groupsFile, new Processor() -->Line_55 $$ writer.newLine()[ FD ]
Line_52 $$ for (Map.Entry<String, Collection<String>> entry : groups.entrySet()) -->Line_53 $$ writer.write(entry.getKey())[ FD ]
