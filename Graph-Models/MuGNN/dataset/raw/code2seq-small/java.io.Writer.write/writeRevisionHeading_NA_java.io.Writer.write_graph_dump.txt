Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_9 $$ writer.write(lineSeparator)[ CD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_6 $$ if (!StringUtil.isEmptyOrSpaces(revisionName)) [ CD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_6 $$ if (!StringUtil.isEmptyOrSpaces(revisionName)) [ FD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_7 $$ writer.write(revisionName)[ FD ]
Line_6 $$ if (!StringUtil.isEmptyOrSpaces(revisionName)) -->Line_7 $$ writer.write(revisionName)[ CD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_3 $$ writer.write(prefix + " ")[ CD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_5 $$ writer.write("\t")[ CD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_3 $$ writer.write(prefix + " ")[ FD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_4 $$ writer.write(revisionPath)[ CD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_4 $$ writer.write(revisionPath)[ FD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_9 $$ writer.write(lineSeparator)[ FD ]
Line_2 $$ private static void writeRevisionHeading(final Writer writer, final String prefix, final String revisionPath, final String revisionName, final String lineSeparator) throws IOException -->Line_5 $$ writer.write("\t")[ FD ]
