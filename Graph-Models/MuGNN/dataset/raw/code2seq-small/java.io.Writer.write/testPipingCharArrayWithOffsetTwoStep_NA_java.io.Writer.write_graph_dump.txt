Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_4 $$ Writer writer = charPipe.getWriter()[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_21 $$ writer.write(data)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_9 $$ int result = reader.read(buffer, 0, 3)[ CD ]
Line_8 $$ char[] buffer = new char[4]-->Line_15 $$ result = reader.read(buffer)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_16 $$ Assert.assertEquals(4, result)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_28 $$ charPipe.close()[ CD ]
Line_15 $$ result = reader.read(buffer)-->Line_22 $$ result = reader.read(buffer)[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_7 $$ Reader reader = charPipe.getReader()[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_5 $$ char[] data = "abcd".toCharArray()[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_8 $$ char[] buffer = new char[4][ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_7 $$ Reader reader = charPipe.getReader()[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_25 $$ Assert.assertEquals('b', buffer[1])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_11 $$ Assert.assertEquals('a', buffer[0])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_3 $$ CharPipe charPipe = new CharPipe(4)[ CD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_21 $$ writer.write(data)[ FD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_9 $$ int result = reader.read(buffer, 0, 3)[ FD ]
Line_8 $$ char[] buffer = new char[4]-->Line_9 $$ int result = reader.read(buffer, 0, 3)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_18 $$ Assert.assertEquals('a', buffer[1])[ CD ]
Line_9 $$ int result = reader.read(buffer, 0, 3)-->Line_23 $$ Assert.assertEquals(4, result)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_27 $$ Assert.assertEquals('d', buffer[3])[ CD ]
Line_15 $$ result = reader.read(buffer)-->Line_16 $$ Assert.assertEquals(4, result)[ FD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_6 $$ writer.write(data)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_24 $$ Assert.assertEquals('a', buffer[0])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_17 $$ Assert.assertEquals('d', buffer[0])[ CD ]
Line_9 $$ int result = reader.read(buffer, 0, 3)-->Line_22 $$ result = reader.read(buffer)[ FD ]
Line_9 $$ int result = reader.read(buffer, 0, 3)-->Line_15 $$ result = reader.read(buffer)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_22 $$ result = reader.read(buffer)[ CD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_14 $$ writer.write(data, 0, 3)[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_28 $$ charPipe.close()[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_20 $$ Assert.assertEquals('c', buffer[3])[ CD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_4 $$ Writer writer = charPipe.getWriter()[ FD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_14 $$ writer.write(data, 0, 3)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_12 $$ Assert.assertEquals('b', buffer[1])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_15 $$ result = reader.read(buffer)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_13 $$ Assert.assertEquals('c', buffer[2])[ CD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_22 $$ result = reader.read(buffer)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_10 $$ Assert.assertEquals(3, result)[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_26 $$ Assert.assertEquals('c', buffer[2])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_19 $$ Assert.assertEquals('b', buffer[2])[ CD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_6 $$ writer.write(data)[ CD ]
Line_7 $$ Reader reader = charPipe.getReader()-->Line_15 $$ result = reader.read(buffer)[ FD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_21 $$ writer.write(data)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_14 $$ writer.write(data, 0, 3)[ CD ]
Line_22 $$ result = reader.read(buffer)-->Line_23 $$ Assert.assertEquals(4, result)[ FD ]
Line_2 $$ public void testPipingCharArrayWithOffsetTwoStep() throws IOException -->Line_23 $$ Assert.assertEquals(4, result)[ CD ]
Line_9 $$ int result = reader.read(buffer, 0, 3)-->Line_10 $$ Assert.assertEquals(3, result)[ FD ]
Line_8 $$ char[] buffer = new char[4]-->Line_22 $$ result = reader.read(buffer)[ FD ]
Line_9 $$ int result = reader.read(buffer, 0, 3)-->Line_16 $$ Assert.assertEquals(4, result)[ FD ]
Line_15 $$ result = reader.read(buffer)-->Line_23 $$ Assert.assertEquals(4, result)[ FD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_6 $$ writer.write(data)[ FD ]
