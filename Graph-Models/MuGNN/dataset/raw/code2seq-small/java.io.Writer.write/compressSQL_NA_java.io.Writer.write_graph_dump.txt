Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_7 $$ Map<String, Writer> insertSQLWriters = new HashMap()[ CD ]
Line_38 $$ for (String miscSQL : miscSQLs) -->Line_39 $$ miscSQL = db.buildSQL(miscSQL)[ FD ]
Line_9 $$ List<String> miscSQLs = new ArrayList()-->Line_18 $$ miscSQLs.add(s)[ FD ]
Line_27 $$ String tableName = entry.getKey()-->Line_33 $$ try (Writer insertSQLWriter = insertSQLWriters.remove(tableName)) [ FD ]
Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) -->Line_13 $$ s = s.trim()[ FD ]
Line_5 $$ db = new SampleMySQLDB(db.getMajorVersion(), db.getMinorVersion())-->Line_39 $$ miscSQL = db.buildSQL(miscSQL)[ FD ]
Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_3 $$ DB db = DBManagerUtil.getDB(_dbType, null)-->Line_5 $$ db = new SampleMySQLDB(db.getMajorVersion(), db.getMinorVersion())[ FD ]
Line_29 $$ if (sb.index() > 0) -->Line_31 $$ writeToInsertSQLFile(dir, tableName, insertSQLWriters, insertSQL)[ CD ]
Line_11 $$ String s = null-->Line_18 $$ miscSQLs.add(s)[ FD ]
Line_11 $$ String s = null-->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_4 $$ if (_dbType == DBType.MYSQL) [ CD ]
Line_3 $$ DB db = DBManagerUtil.getDB(_dbType, null)-->Line_39 $$ miscSQL = db.buildSQL(miscSQL)[ FD ]
Line_10 $$ try (UnsyncBufferedReader unsyncBufferedReader = new UnsyncBufferedReader(reader)) -->Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) [ FD ]
Line_7 $$ Map<String, Writer> insertSQLWriters = new HashMap()-->Line_31 $$ writeToInsertSQLFile(dir, tableName, insertSQLWriters, insertSQL)[ FD ]
Line_4 $$ if (_dbType == DBType.MYSQL) -->Line_5 $$ db = new SampleMySQLDB(db.getMajorVersion(), db.getMinorVersion())[ CD ]
Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_23 $$ if (_freeMarkerThrowable != null) [ CD ]
Line_8 $$ Map<String, StringBundler> insertSQLs = new HashMap()-->Line_26 $$ for (Map.Entry<String, StringBundler> entry : insertSQLs.entrySet()) [ FD ]
Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) -->Line_15 $$ if (s.startsWith("insert into ")) [ FD ]
Line_28 $$ StringBundler sb = entry.getValue()-->Line_30 $$ String insertSQL = db.buildSQL(sb.toString())[ FD ]
Line_33 $$ try (Writer insertSQLWriter = insertSQLWriters.remove(tableName)) -->Line_34 $$ insertSQLWriter.write(";\n")[ FD ]
Line_15 $$ if (s.startsWith("insert into ")) -->Line_18 $$ miscSQLs.add(s)[ CD ]
Line_8 $$ Map<String, StringBundler> insertSQLs = new HashMap()-->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_38 $$ for (String miscSQL : miscSQLs) -->Line_40 $$ miscSQLWriter.write(miscSQL)[ FD ]
Line_11 $$ String s = null-->Line_14 $$ if (s.length() > 0) [ FD ]
Line_11 $$ String s = null-->Line_13 $$ s = s.trim()[ FD ]
Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_31 $$ writeToInsertSQLFile(dir, tableName, insertSQLWriters, insertSQL)[ FD ]
Line_13 $$ s = s.trim()-->Line_14 $$ if (s.length() > 0) [ FD ]
Line_26 $$ for (Map.Entry<String, StringBundler> entry : insertSQLs.entrySet()) -->Line_27 $$ String tableName = entry.getKey()[ FD ]
Line_11 $$ String s = null-->Line_15 $$ if (s.startsWith("insert into ")) [ FD ]
Line_13 $$ s = s.trim()-->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_11 $$ String s = null-->Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) [ FD ]
Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) -->Line_18 $$ miscSQLs.add(s)[ FD ]
Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_8 $$ Map<String, StringBundler> insertSQLs = new HashMap()[ CD ]
Line_13 $$ s = s.trim()-->Line_18 $$ miscSQLs.add(s)[ FD ]
Line_26 $$ for (Map.Entry<String, StringBundler> entry : insertSQLs.entrySet()) -->Line_28 $$ StringBundler sb = entry.getValue()[ FD ]
Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) -->Line_14 $$ if (s.length() > 0) [ FD ]
Line_15 $$ if (s.startsWith("insert into ")) -->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ CD ]
Line_5 $$ db = new SampleMySQLDB(db.getMajorVersion(), db.getMinorVersion())-->Line_30 $$ String insertSQL = db.buildSQL(sb.toString())[ FD ]
Line_13 $$ s = s.trim()-->Line_15 $$ if (s.startsWith("insert into ")) [ FD ]
Line_14 $$ if (s.length() > 0) -->Line_15 $$ if (s.startsWith("insert into ")) [ CD ]
Line_3 $$ DB db = DBManagerUtil.getDB(_dbType, null)-->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_29 $$ if (sb.index() > 0) -->Line_30 $$ String insertSQL = db.buildSQL(sb.toString())[ CD ]
Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_3 $$ DB db = DBManagerUtil.getDB(_dbType, null)[ CD ]
Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) -->Line_13 $$ s = s.trim()[ CD ]
Line_30 $$ String insertSQL = db.buildSQL(sb.toString())-->Line_31 $$ writeToInsertSQLFile(dir, tableName, insertSQLWriters, insertSQL)[ FD ]
Line_39 $$ miscSQL = db.buildSQL(miscSQL)-->Line_40 $$ miscSQLWriter.write(miscSQL)[ FD ]
Line_5 $$ db = new SampleMySQLDB(db.getMajorVersion(), db.getMinorVersion())-->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_27 $$ String tableName = entry.getKey()-->Line_31 $$ writeToInsertSQLFile(dir, tableName, insertSQLWriters, insertSQL)[ FD ]
Line_37 $$ try (Writer miscSQLWriter = new FileWriter(new File(dir, "misc.sql"))) -->Line_41 $$ miscSQLWriter.write(StringPool.NEW_LINE)[ FD ]
Line_3 $$ DB db = DBManagerUtil.getDB(_dbType, null)-->Line_30 $$ String insertSQL = db.buildSQL(sb.toString())[ FD ]
Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) -->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_7 $$ Map<String, Writer> insertSQLWriters = new HashMap()-->Line_33 $$ try (Writer insertSQLWriter = insertSQLWriters.remove(tableName)) [ FD ]
Line_37 $$ try (Writer miscSQLWriter = new FileWriter(new File(dir, "misc.sql"))) -->Line_40 $$ miscSQLWriter.write(miscSQL)[ FD ]
Line_28 $$ StringBundler sb = entry.getValue()-->Line_29 $$ if (sb.index() > 0) [ FD ]
Line_7 $$ Map<String, Writer> insertSQLWriters = new HashMap()-->Line_16 $$ compressSQL(db, dir, insertSQLWriters, insertSQLs, s.substring(12))[ FD ]
Line_2 $$ protected void compressSQL(Reader reader, File dir) throws Exception -->Line_9 $$ List<String> miscSQLs = new ArrayList()[ CD ]
Line_12 $$ while ((_freeMarkerThrowable == null) && ((s = unsyncBufferedReader.readLine()) != null)) -->Line_14 $$ if (s.length() > 0) [ CD ]
