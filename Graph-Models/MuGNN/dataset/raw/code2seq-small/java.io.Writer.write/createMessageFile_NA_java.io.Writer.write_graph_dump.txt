Line_2 $$ private File createMessageFile(VirtualFile root, final String message) throws IOException -->Line_12 $$ return file[ CD ]
Line_6 $$ Writer out = new OutputStreamWriter(new FileOutputStream(file), encoding)-->Line_10 $$ out.close()[ FD ]
Line_2 $$ private File createMessageFile(VirtualFile root, final String message) throws IOException -->Line_5 $$ String encoding = GitConfigUtil.getCommitEncoding(myProject, root)[ FD ]
Line_2 $$ private File createMessageFile(VirtualFile root, final String message) throws IOException -->Line_3 $$ File file = FileUtil.createTempFile(GIT_COMMIT_MSG_FILE_PREFIX, GIT_COMMIT_MSG_FILE_EXT)[ CD ]
Line_3 $$ File file = FileUtil.createTempFile(GIT_COMMIT_MSG_FILE_PREFIX, GIT_COMMIT_MSG_FILE_EXT)-->Line_4 $$ file.deleteOnExit()[ FD ]
Line_6 $$ Writer out = new OutputStreamWriter(new FileOutputStream(file), encoding)-->Line_8 $$ out.write(message)[ FD ]
Line_2 $$ private File createMessageFile(VirtualFile root, final String message) throws IOException -->Line_8 $$ out.write(message)[ FD ]
Line_2 $$ private File createMessageFile(VirtualFile root, final String message) throws IOException -->Line_6 $$ Writer out = new OutputStreamWriter(new FileOutputStream(file), encoding)[ CD ]
Line_2 $$ private File createMessageFile(VirtualFile root, final String message) throws IOException -->Line_4 $$ file.deleteOnExit()[ CD ]
Line_2 $$ private File createMessageFile(VirtualFile root, final String message) throws IOException -->Line_5 $$ String encoding = GitConfigUtil.getCommitEncoding(myProject, root)[ CD ]
