Line_7 $$ final String json = gson.toJson(course)-->Line_12 $$ outputStreamWriter.write(json)[ FD ]
Line_18 $$ if (outputStreamWriter != null) -->Line_19 $$ outputStreamWriter.close()[ CD ]
Line_5 $$ final Course course = service.getCourse()-->Line_7 $$ final String json = gson.toJson(course)[ FD ]
Line_9 $$ OutputStreamWriter outputStreamWriter = null-->Line_19 $$ outputStreamWriter.close()[ FD ]
Line_11 $$ outputStreamWriter = new OutputStreamWriter(new FileOutputStream(courseJson), "UTF-8")-->Line_18 $$ if (outputStreamWriter != null) [ FD ]
Line_4 $$ final CCProjectService service = CCProjectService.getInstance(project)-->Line_5 $$ final Course course = service.getCourse()[ FD ]
Line_11 $$ outputStreamWriter = new OutputStreamWriter(new FileOutputStream(courseJson), "UTF-8")-->Line_12 $$ outputStreamWriter.write(json)[ FD ]
Line_9 $$ OutputStreamWriter outputStreamWriter = null-->Line_11 $$ outputStreamWriter = new OutputStreamWriter(new FileOutputStream(courseJson), "UTF-8")[ FD ]
Line_9 $$ OutputStreamWriter outputStreamWriter = null-->Line_12 $$ outputStreamWriter.write(json)[ FD ]
Line_9 $$ OutputStreamWriter outputStreamWriter = null-->Line_18 $$ if (outputStreamWriter != null) [ FD ]
Line_6 $$ final Gson gson = new GsonBuilder().setPrettyPrinting().excludeFieldsWithoutExposeAnnotation().create()-->Line_7 $$ final String json = gson.toJson(course)[ FD ]
Line_11 $$ outputStreamWriter = new OutputStreamWriter(new FileOutputStream(courseJson), "UTF-8")-->Line_19 $$ outputStreamWriter.close()[ FD ]
