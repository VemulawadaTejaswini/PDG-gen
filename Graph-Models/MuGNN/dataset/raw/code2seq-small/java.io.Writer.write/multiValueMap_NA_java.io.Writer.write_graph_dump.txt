Line_4 $$ Map.Entry<String, List<String>> entry = it1.next()-->Line_5 $$ writer.write(entry.getKey() + "=[")[ FD ]
Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) -->Line_4 $$ Map.Entry<String, List<String>> entry = it1.next()[ CD ]
Line_6 $$ for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext(); ) -->Line_8 $$ writer.write(value)[ CD ]
Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) -->Line_14 $$ if (it1.hasNext()) [ CD ]
Line_4 $$ Map.Entry<String, List<String>> entry = it1.next()-->Line_6 $$ for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext(); ) [ FD ]
Line_2 $$ public void multiValueMap(@RequestHeader MultiValueMap<String, String> headers, Writer writer) throws IOException -->Line_8 $$ writer.write(value)[ FD ]
Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) -->Line_4 $$ Map.Entry<String, List<String>> entry = it1.next()[ FD ]
Line_6 $$ for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext(); ) -->Line_7 $$ String value = it2.next()[ CD ]
Line_2 $$ public void multiValueMap(@RequestHeader MultiValueMap<String, String> headers, Writer writer) throws IOException -->Line_13 $$ writer.write(']')[ FD ]
Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) -->Line_14 $$ if (it1.hasNext()) [ FD ]
Line_7 $$ String value = it2.next()-->Line_8 $$ writer.write(value)[ FD ]
Line_14 $$ if (it1.hasNext()) -->Line_15 $$ writer.write(',')[ CD ]
Line_2 $$ public void multiValueMap(@RequestHeader MultiValueMap<String, String> headers, Writer writer) throws IOException -->Line_5 $$ writer.write(entry.getKey() + "=[")[ FD ]
Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) -->Line_5 $$ writer.write(entry.getKey() + "=[")[ CD ]
Line_2 $$ public void multiValueMap(@RequestHeader MultiValueMap<String, String> headers, Writer writer) throws IOException -->Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) [ FD ]
Line_9 $$ if (it2.hasNext()) -->Line_10 $$ writer.write(',')[ CD ]
Line_2 $$ public void multiValueMap(@RequestHeader MultiValueMap<String, String> headers, Writer writer) throws IOException -->Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) [ CD ]
Line_2 $$ public void multiValueMap(@RequestHeader MultiValueMap<String, String> headers, Writer writer) throws IOException -->Line_10 $$ writer.write(',')[ FD ]
Line_6 $$ for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext(); ) -->Line_7 $$ String value = it2.next()[ FD ]
Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) -->Line_13 $$ writer.write(']')[ CD ]
Line_3 $$ for (Iterator<Map.Entry<String, List<String>>> it1 = headers.entrySet().iterator(); it1.hasNext(); ) -->Line_6 $$ for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext(); ) [ CD ]
Line_2 $$ public void multiValueMap(@RequestHeader MultiValueMap<String, String> headers, Writer writer) throws IOException -->Line_15 $$ writer.write(',')[ FD ]
Line_6 $$ for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext(); ) -->Line_9 $$ if (it2.hasNext()) [ FD ]
Line_6 $$ for (Iterator<String> it2 = entry.getValue().iterator(); it2.hasNext(); ) -->Line_9 $$ if (it2.hasNext()) [ CD ]
