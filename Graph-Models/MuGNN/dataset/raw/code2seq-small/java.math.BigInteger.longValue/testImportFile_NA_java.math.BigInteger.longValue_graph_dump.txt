Line_3 $$ Session s = openSession()-->Line_5 $$ BigInteger count = (BigInteger) s.createSQLQuery("SELECT COUNT(*) FROM test_data").uniqueResult()[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_11 $$ assertNull("NULL value inserted incorrectly", empty)[ CD ]
Line_7 $$ final String multiLineText = (String) s.createSQLQuery("SELECT text FROM test_data WHERE id = 2").uniqueResult()-->Line_9 $$ assertEquals("Multi-line string inserted incorrectly", expected, multiLineText)[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ String empty = (String) s.createSQLQuery("SELECT text FROM test_data WHERE id = 3").uniqueResult()[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_6 $$ assertEquals("Incorrect row number", 3L, count.longValue())[ CD ]
Line_5 $$ BigInteger count = (BigInteger) s.createSQLQuery("SELECT COUNT(*) FROM test_data").uniqueResult()-->Line_6 $$ assertEquals("Incorrect row number", 3L, count.longValue())[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_9 $$ assertEquals("Multi-line string inserted incorrectly", expected, multiLineText)[ CD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_5 $$ BigInteger count = (BigInteger) s.createSQLQuery("SELECT COUNT(*) FROM test_data").uniqueResult()[ CD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ final String multiLineText = (String) s.createSQLQuery("SELECT text FROM test_data WHERE id = 2").uniqueResult()[ FD ]
Line_10 $$ String empty = (String) s.createSQLQuery("SELECT text FROM test_data WHERE id = 3").uniqueResult()-->Line_11 $$ assertNull("NULL value inserted incorrectly", empty)[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_8 $$ final String expected = String.format("Multi-line comment line 1\n-- line 2'\n")[ CD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_4 $$ final Transaction tx = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ final Transaction tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_13 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s.close()[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_10 $$ String empty = (String) s.createSQLQuery("SELECT text FROM test_data WHERE id = 3").uniqueResult()[ CD ]
Line_8 $$ final String expected = String.format("Multi-line comment line 1\n-- line 2'\n")-->Line_9 $$ assertEquals("Multi-line string inserted incorrectly", expected, multiLineText)[ FD ]
Line_4 $$ final Transaction tx = s.beginTransaction()-->Line_12 $$ tx.commit()[ FD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_12 $$ tx.commit()[ CD ]
Line_2 $$ public void testImportFile() throws Exception -->Line_7 $$ final String multiLineText = (String) s.createSQLQuery("SELECT text FROM test_data WHERE id = 2").uniqueResult()[ CD ]
