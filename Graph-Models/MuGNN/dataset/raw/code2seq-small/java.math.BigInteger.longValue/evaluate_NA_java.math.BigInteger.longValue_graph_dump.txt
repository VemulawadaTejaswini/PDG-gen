Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_3 $$ if (expr instanceof PyNumericLiteralExpression) [ CD ]
Line_4 $$ final PyNumericLiteralExpression numericLiteral = (PyNumericLiteralExpression) expr-->Line_5 $$ if (numericLiteral.isIntegerLiteral()) [ FD ]
Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_12 $$ if (expr instanceof PyBoolLiteralExpression) [ FD ]
Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_15 $$ if (expr instanceof PyReferenceExpression) [ FD ]
Line_15 $$ if (expr instanceof PyReferenceExpression) -->Line_17 $$ if ("true".equals(text) || "True".equals(text)) [ CD ]
Line_6 $$ final BigInteger value = numericLiteral.getBigIntegerValue()-->Line_7 $$ if ((long) value.intValue() == value.longValue()) [ FD ]
Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_16 $$ final String text = expr.getText()[ FD ]
Line_5 $$ if (numericLiteral.isIntegerLiteral()) -->Line_6 $$ final BigInteger value = numericLiteral.getBigIntegerValue()[ CD ]
Line_20 $$ if ("false".equals(text) || "False".equals(text)) -->Line_21 $$ return false[ CD ]
Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_3 $$ if (expr instanceof PyNumericLiteralExpression) [ FD ]
Line_16 $$ final String text = expr.getText()-->Line_20 $$ if ("false".equals(text) || "False".equals(text)) [ FD ]
Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_15 $$ if (expr instanceof PyReferenceExpression) [ CD ]
Line_3 $$ if (expr instanceof PyNumericLiteralExpression) -->Line_5 $$ if (numericLiteral.isIntegerLiteral()) [ CD ]
Line_6 $$ final BigInteger value = numericLiteral.getBigIntegerValue()-->Line_8 $$ return value.intValue()[ FD ]
Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_24 $$ return null[ CD ]
Line_12 $$ if (expr instanceof PyBoolLiteralExpression) -->Line_13 $$ return ((PyBoolLiteralExpression) expr).getValue()[ CD ]
Line_4 $$ final PyNumericLiteralExpression numericLiteral = (PyNumericLiteralExpression) expr-->Line_6 $$ final BigInteger value = numericLiteral.getBigIntegerValue()[ FD ]
Line_2 $$ public static Object evaluate(final PyExpression expr) -->Line_12 $$ if (expr instanceof PyBoolLiteralExpression) [ CD ]
Line_7 $$ if ((long) value.intValue() == value.longValue()) -->Line_8 $$ return value.intValue()[ CD ]
Line_15 $$ if (expr instanceof PyReferenceExpression) -->Line_20 $$ if ("false".equals(text) || "False".equals(text)) [ CD ]
Line_17 $$ if ("true".equals(text) || "True".equals(text)) -->Line_18 $$ return true[ CD ]
Line_5 $$ if (numericLiteral.isIntegerLiteral()) -->Line_7 $$ if ((long) value.intValue() == value.longValue()) [ CD ]
Line_16 $$ final String text = expr.getText()-->Line_17 $$ if ("true".equals(text) || "True".equals(text)) [ FD ]
Line_3 $$ if (expr instanceof PyNumericLiteralExpression) -->Line_4 $$ final PyNumericLiteralExpression numericLiteral = (PyNumericLiteralExpression) expr[ CD ]
Line_15 $$ if (expr instanceof PyReferenceExpression) -->Line_16 $$ final String text = expr.getText()[ CD ]
