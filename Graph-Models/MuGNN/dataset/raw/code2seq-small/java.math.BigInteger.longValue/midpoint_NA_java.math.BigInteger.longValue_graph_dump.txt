Line_10 $$ BigInteger min = BigInteger.valueOf(MINIMUM.token)-->Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)[ FD ]
Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)-->Line_12 $$ if (midpoint.compareTo(max) > 0)[ FD ]
Line_13 $$ midpoint = min.add(midpoint.subtract(max))-->Line_15 $$ return new LongToken(midpoint.longValue())[ FD ]
Line_10 $$ BigInteger min = BigInteger.valueOf(MINIMUM.token)-->Line_13 $$ midpoint = min.add(midpoint.subtract(max))[ FD ]
Line_2 $$ public Token midpoint(Token lToken, Token rToken) -->Line_4 $$ if (l.compareTo(r) < 0) [ CD ]
Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)-->Line_15 $$ return new LongToken(midpoint.longValue())[ FD ]
Line_6 $$ midpoint = sum.shiftRight(1)-->Line_12 $$ if (midpoint.compareTo(max) > 0)[ FD ]
Line_4 $$ if (l.compareTo(r) < 0) -->Line_12 $$ if (midpoint.compareTo(max) > 0)[ CD ]
Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint-->Line_12 $$ if (midpoint.compareTo(max) > 0)[ FD ]
Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint-->Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)[ FD ]
Line_6 $$ midpoint = sum.shiftRight(1)-->Line_13 $$ midpoint = min.add(midpoint.subtract(max))[ FD ]
Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)-->Line_13 $$ midpoint = min.add(midpoint.subtract(max))[ FD ]
Line_6 $$ midpoint = sum.shiftRight(1)-->Line_15 $$ return new LongToken(midpoint.longValue())[ FD ]
Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint-->Line_6 $$ midpoint = sum.shiftRight(1)[ FD ]
Line_2 $$ public Token midpoint(Token lToken, Token rToken) -->Line_15 $$ return new LongToken(midpoint.longValue())[ CD ]
Line_4 $$ if (l.compareTo(r) < 0) -->Line_10 $$ BigInteger min = BigInteger.valueOf(MINIMUM.token)[ CD ]
Line_4 $$ if (l.compareTo(r) < 0) -->Line_6 $$ midpoint = sum.shiftRight(1)[ CD ]
Line_9 $$ BigInteger max = BigInteger.valueOf(MAXIMUM)-->Line_12 $$ if (midpoint.compareTo(max) > 0)[ FD ]
Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint-->Line_5 $$ BigInteger sum = l.add(r)[ FD ]
Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint-->Line_15 $$ return new LongToken(midpoint.longValue())[ FD ]
Line_9 $$ BigInteger max = BigInteger.valueOf(MAXIMUM)-->Line_13 $$ midpoint = min.add(midpoint.subtract(max))[ FD ]
Line_6 $$ midpoint = sum.shiftRight(1)-->Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)[ FD ]
Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint-->Line_13 $$ midpoint = min.add(midpoint.subtract(max))[ FD ]
Line_12 $$ if (midpoint.compareTo(max) > 0)-->Line_13 $$ midpoint = min.add(midpoint.subtract(max))[ CD ]
Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint-->Line_4 $$ if (l.compareTo(r) < 0) [ FD ]
Line_4 $$ if (l.compareTo(r) < 0) -->Line_9 $$ BigInteger max = BigInteger.valueOf(MAXIMUM)[ CD ]
Line_2 $$ public Token midpoint(Token lToken, Token rToken) -->Line_3 $$ BigInteger l = BigInteger.valueOf(((LongToken) lToken).token), r = BigInteger.valueOf(((LongToken) rToken).token), midpoint[ CD ]
Line_4 $$ if (l.compareTo(r) < 0) -->Line_5 $$ BigInteger sum = l.add(r)[ CD ]
Line_5 $$ BigInteger sum = l.add(r)-->Line_6 $$ midpoint = sum.shiftRight(1)[ FD ]
Line_4 $$ if (l.compareTo(r) < 0) -->Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)[ CD ]
Line_9 $$ BigInteger max = BigInteger.valueOf(MAXIMUM)-->Line_11 $$ midpoint = (max.subtract(min).add(l).add(r)).shiftRight(1)[ FD ]
