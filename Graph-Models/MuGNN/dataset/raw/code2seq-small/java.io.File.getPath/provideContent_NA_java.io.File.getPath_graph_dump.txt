Line_8 $$ final Change change = myChangeListManager.getChange(filePathOn)-->Line_13 $$ final String content = change.getBeforeRevision().getContent()[ FD ]
Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) -->Line_19 $$ final Map<String, String> map = commitContext.getUserData(ourStoredTexts)[ CD ]
Line_2 $$ public CharSequence provideContent(@NotNull String path, CommitContext commitContext) -->Line_25 $$ return null[ CD ]
Line_7 $$ FilePath filePathOn = VcsContextFactory.SERVICE.getInstance().createFilePathOn(file)-->Line_8 $$ final Change change = myChangeListManager.getChange(filePathOn)[ FD ]
Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) -->Line_9 $$ List<FilePath> paths = commitContext.getUserData(ourBaseRevisionPaths)[ CD ]
Line_6 $$ final File file = new File(myBaseDir, path)-->Line_7 $$ FilePath filePathOn = VcsContextFactory.SERVICE.getInstance().createFilePathOn(file)[ FD ]
Line_3 $$ if (commitContext == null)-->Line_4 $$ return null[ CD ]
Line_10 $$ if (change == null || change.getBeforeRevision() == null || paths == null || !paths.contains(filePathOn))-->Line_11 $$ return null[ CD ]
Line_9 $$ List<FilePath> paths = commitContext.getUserData(ourBaseRevisionPaths)-->Line_10 $$ if (change == null || change.getBeforeRevision() == null || paths == null || !paths.contains(filePathOn))[ FD ]
Line_2 $$ public CharSequence provideContent(@NotNull String path, CommitContext commitContext) -->Line_3 $$ if (commitContext == null)[ FD ]
Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) -->Line_7 $$ FilePath filePathOn = VcsContextFactory.SERVICE.getInstance().createFilePathOn(file)[ CD ]
Line_2 $$ public CharSequence provideContent(@NotNull String path, CommitContext commitContext) -->Line_9 $$ List<FilePath> paths = commitContext.getUserData(ourBaseRevisionPaths)[ FD ]
Line_2 $$ public CharSequence provideContent(@NotNull String path, CommitContext commitContext) -->Line_19 $$ final Map<String, String> map = commitContext.getUserData(ourStoredTexts)[ FD ]
Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) -->Line_20 $$ if (map != null) [ CD ]
Line_2 $$ public CharSequence provideContent(@NotNull String path, CommitContext commitContext) -->Line_3 $$ if (commitContext == null)[ CD ]
Line_7 $$ FilePath filePathOn = VcsContextFactory.SERVICE.getInstance().createFilePathOn(file)-->Line_10 $$ if (change == null || change.getBeforeRevision() == null || paths == null || !paths.contains(filePathOn))[ FD ]
Line_8 $$ final Change change = myChangeListManager.getChange(filePathOn)-->Line_10 $$ if (change == null || change.getBeforeRevision() == null || paths == null || !paths.contains(filePathOn))[ FD ]
Line_6 $$ final File file = new File(myBaseDir, path)-->Line_22 $$ return map.get(file.getPath())[ FD ]
Line_19 $$ final Map<String, String> map = commitContext.getUserData(ourStoredTexts)-->Line_20 $$ if (map != null) [ FD ]
Line_19 $$ final Map<String, String> map = commitContext.getUserData(ourStoredTexts)-->Line_22 $$ return map.get(file.getPath())[ FD ]
Line_20 $$ if (map != null) -->Line_22 $$ return map.get(file.getPath())[ CD ]
Line_2 $$ public CharSequence provideContent(@NotNull String path, CommitContext commitContext) -->Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) [ FD ]
Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) -->Line_6 $$ final File file = new File(myBaseDir, path)[ CD ]
Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) -->Line_10 $$ if (change == null || change.getBeforeRevision() == null || paths == null || !paths.contains(filePathOn))[ CD ]
Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) -->Line_8 $$ final Change change = myChangeListManager.getChange(filePathOn)[ CD ]
Line_2 $$ public CharSequence provideContent(@NotNull String path, CommitContext commitContext) -->Line_5 $$ if (Boolean.TRUE.equals(commitContext.getUserData(ourPutBaseRevisionTextKey))) [ CD ]
