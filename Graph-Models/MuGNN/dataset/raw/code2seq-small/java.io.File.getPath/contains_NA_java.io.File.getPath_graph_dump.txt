Line_2 $$ public boolean contains(File file) -->Line_4 $$ String pathWithSeparator = file.getAbsolutePath() + File.separator[ CD ]
Line_6 $$ String candidateFilePathWithSeparator = candidateFile.getPath() + File.separator-->Line_7 $$ if (pathWithSeparator.startsWith(candidateFilePathWithSeparator)) [ FD ]
Line_5 $$ for (File candidateFile : files) -->Line_6 $$ String candidateFilePathWithSeparator = candidateFile.getPath() + File.separator[ FD ]
Line_3 $$ File absoluteFile = file.getAbsoluteFile()-->Line_12 $$ if (tree.getDir().getAbsoluteFile().equals(absoluteFile) || DirectoryTrees.contains(FileSystems.getDefault(), tree, absoluteFile)) [ FD ]
Line_4 $$ String pathWithSeparator = file.getAbsolutePath() + File.separator-->Line_7 $$ if (pathWithSeparator.startsWith(candidateFilePathWithSeparator)) [ FD ]
Line_7 $$ if (pathWithSeparator.startsWith(candidateFilePathWithSeparator)) -->Line_8 $$ return true[ CD ]
Line_12 $$ if (tree.getDir().getAbsoluteFile().equals(absoluteFile) || DirectoryTrees.contains(FileSystems.getDefault(), tree, absoluteFile)) -->Line_13 $$ return true[ CD ]
Line_2 $$ public boolean contains(File file) -->Line_3 $$ File absoluteFile = file.getAbsoluteFile()[ FD ]
Line_2 $$ public boolean contains(File file) -->Line_3 $$ File absoluteFile = file.getAbsoluteFile()[ CD ]
Line_2 $$ public boolean contains(File file) -->Line_4 $$ String pathWithSeparator = file.getAbsolutePath() + File.separator[ FD ]
Line_11 $$ for (DirectoryTree tree : trees) -->Line_12 $$ if (tree.getDir().getAbsoluteFile().equals(absoluteFile) || DirectoryTrees.contains(FileSystems.getDefault(), tree, absoluteFile)) [ FD ]
Line_2 $$ public boolean contains(File file) -->Line_16 $$ return false[ CD ]
