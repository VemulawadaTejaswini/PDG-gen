Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_4 $$ runHgOnProjectRepo("add", ".")[ CD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_8 $$ revertCommand.execute(myRepo.getDir(), Collections.singleton(new File(myProjectDir, "file.txt").getPath()), null, false)[ CD ]
Line_10 $$ HgCommandResult result = catCommand.execute(getHgFile("file.txt"), null, Charset.defaultCharset())-->Line_11 $$ assertNotNull(result)[ FD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_11 $$ assertNotNull(result)[ CD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_3 $$ fillFile(myProjectDir, new String[] [ CD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_12 $$ assertEquals(result.getRawOutput(), "initial contents")[ CD ]
Line_9 $$ HgCatCommand catCommand = new HgCatCommand(myProject)-->Line_10 $$ HgCommandResult result = catCommand.execute(getHgFile("file.txt"), null, Charset.defaultCharset())[ FD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_10 $$ HgCommandResult result = catCommand.execute(getHgFile("file.txt"), null, Charset.defaultCharset())[ CD ]
Line_7 $$ HgRevertCommand revertCommand = new HgRevertCommand(myProject)-->Line_8 $$ revertCommand.execute(myRepo.getDir(), Collections.singleton(new File(myProjectDir, "file.txt").getPath()), null, false)[ FD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_5 $$ runHgOnProjectRepo("commit", "-m", "initial contents")[ CD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_9 $$ HgCatCommand catCommand = new HgCatCommand(myProject)[ CD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_6 $$ fillFile(myProjectDir, new String[] [ CD ]
Line_10 $$ HgCommandResult result = catCommand.execute(getHgFile("file.txt"), null, Charset.defaultCharset())-->Line_12 $$ assertEquals(result.getRawOutput(), "initial contents")[ FD ]
Line_2 $$ public void testRevertToCurrentRevision() throws Exception -->Line_7 $$ HgRevertCommand revertCommand = new HgRevertCommand(myProject)[ CD ]
