Line_15 $$ final Set<String> libNames = new HashSet<String>(myExistingProjectLibraryNames)-->Line_18 $$ final String newName = suggestUniqueName(libNames, libJars.size() == 1 ? FileUtil.getNameWithoutExtension(libJars.iterator().next()) : library.getName())[ FD ]
Line_7 $$ for (File root : myEntryPointRoots) -->Line_8 $$ myProgress.setText("Scanning for libraries " + root.getPath())[ FD ]
Line_17 $$ final Collection<File> libJars = library.getJars()-->Line_18 $$ final String newName = suggestUniqueName(libNames, libJars.size() == 1 ? FileUtil.getNameWithoutExtension(libJars.iterator().next()) : library.getName())[ FD ]
Line_18 $$ final String newName = suggestUniqueName(libNames, libJars.size() == 1 ? FileUtil.getNameWithoutExtension(libJars.iterator().next()) : library.getName())-->Line_19 $$ library.setName(newName)[ FD ]
Line_18 $$ final String newName = suggestUniqueName(libNames, libJars.size() == 1 ? FileUtil.getNameWithoutExtension(libJars.iterator().next()) : library.getName())-->Line_20 $$ libNames.add(newName)[ FD ]
Line_16 $$ for (LibraryDescriptor library : libraries) -->Line_17 $$ final Collection<File> libJars = library.getJars()[ FD ]
Line_16 $$ for (LibraryDescriptor library : libraries) -->Line_18 $$ final String newName = suggestUniqueName(libNames, libJars.size() == 1 ? FileUtil.getNameWithoutExtension(libJars.iterator().next()) : library.getName())[ FD ]
Line_16 $$ for (LibraryDescriptor library : libraries) -->Line_19 $$ library.setName(newName)[ FD ]
Line_15 $$ final Set<String> libNames = new HashSet<String>(myExistingProjectLibraryNames)-->Line_20 $$ libNames.add(newName)[ FD ]
Line_2 $$ public void scanLibraries() -->Line_3 $$ myProgress.setIndeterminate(true)[ CD ]
Line_2 $$ public void scanLibraries() -->Line_4 $$ myProgress.pushState()[ CD ]
Line_7 $$ for (File root : myEntryPointRoots) -->Line_9 $$ scanRootForLibraries(root)[ FD ]
