Line_6 $$ final String path = file.getPath()-->Line_9 $$ final String backupPath = path.substring(0, extensionIndex) + "_" + new Date(file.lastModified()).toString().replaceAll("\\s+", "_").replaceAll(":", "-") + extension[ FD ]
Line_6 $$ final String path = file.getPath()-->Line_16 $$ Messages.showErrorDialog(project, CompilerBundle.message("error.ant.files.backup.failed", path), CompilerBundle.message("generate.ant.build.title"))[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_6 $$ final String path = file.getPath()[ CD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_9 $$ final String backupPath = path.substring(0, extensionIndex) + "_" + new Date(file.lastModified()).toString().replaceAll("\\s+", "_").replaceAll(":", "-") + extension[ CD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_19 $$ filesToRefresh.add(backupFile)[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_19 $$ filesToRefresh.add(backupFile)[ CD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_7 $$ final int extensionIndex = path.lastIndexOf(".")[ CD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_9 $$ final String backupPath = path.substring(0, extensionIndex) + "_" + new Date(file.lastModified()).toString().replaceAll("\\s+", "_").replaceAll(":", "-") + extension[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_20 $$ return ok[ CD ]
Line_11 $$ boolean ok-->Line_17 $$ ok = false[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_3 $$ if (!genOptions.backupPreviouslyGeneratedFiles || !file.exists()) [ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_3 $$ if (!genOptions.backupPreviouslyGeneratedFiles || !file.exists()) [ CD ]
Line_7 $$ final int extensionIndex = path.lastIndexOf(".")-->Line_9 $$ final String backupPath = path.substring(0, extensionIndex) + "_" + new Date(file.lastModified()).toString().replaceAll("\\s+", "_").replaceAll(":", "-") + extension[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_11 $$ boolean ok[ CD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_16 $$ Messages.showErrorDialog(project, CompilerBundle.message("error.ant.files.backup.failed", path), CompilerBundle.message("generate.ant.build.title"))[ FD ]
Line_14 $$ ok = true-->Line_17 $$ ok = false[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_6 $$ final String path = file.getPath()[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_10 $$ final File backupFile = new File(backupPath)[ CD ]
Line_3 $$ if (!genOptions.backupPreviouslyGeneratedFiles || !file.exists()) -->Line_4 $$ return true[ CD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_13 $$ FileUtil.rename(file, backupFile)[ FD ]
Line_10 $$ final File backupFile = new File(backupPath)-->Line_19 $$ filesToRefresh.add(backupFile)[ FD ]
Line_11 $$ boolean ok-->Line_14 $$ ok = true[ FD ]
Line_6 $$ final String path = file.getPath()-->Line_7 $$ final int extensionIndex = path.lastIndexOf(".")[ FD ]
Line_6 $$ final String path = file.getPath()-->Line_8 $$ final String extension = path.substring(extensionIndex, path.length())[ FD ]
Line_2 $$ private boolean backup(final File file, final Project project, GenerationOptions genOptions, List<File> filesToRefresh) -->Line_8 $$ final String extension = path.substring(extensionIndex, path.length())[ CD ]
Line_10 $$ final File backupFile = new File(backupPath)-->Line_13 $$ FileUtil.rename(file, backupFile)[ FD ]
Line_7 $$ final int extensionIndex = path.lastIndexOf(".")-->Line_8 $$ final String extension = path.substring(extensionIndex, path.length())[ FD ]
