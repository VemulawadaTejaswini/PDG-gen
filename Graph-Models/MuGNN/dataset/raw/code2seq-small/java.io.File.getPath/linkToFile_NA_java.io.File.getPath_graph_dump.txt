Line_9 $$ final File link = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link").getPath())-->Line_16 $$ final String target = FileSystemUtil.resolveSymLink(link)[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_14 $$ assertTimestampsEqual(file.lastModified(), attributes.lastModified)[ FD ]
Line_16 $$ final String target = FileSystemUtil.resolveSymLink(link)-->Line_17 $$ assertEquals(file.getPath(), target)[ FD ]
Line_10 $$ final FileAttributes attributes = getAttributes(link)-->Line_15 $$ assertFalse(attributes.isWritable())[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_8 $$ assertTrue(file.setWritable(false, false))[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_9 $$ final File link = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link").getPath())[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_17 $$ assertEquals(file.getPath(), target)[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_6 $$ FileUtil.writeToFile(file, myTestData)[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_7 $$ assertTrue(file.setLastModified(file.lastModified() - 5000))[ FD ]
Line_9 $$ final File link = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link").getPath())-->Line_10 $$ final FileAttributes attributes = getAttributes(link)[ FD ]
