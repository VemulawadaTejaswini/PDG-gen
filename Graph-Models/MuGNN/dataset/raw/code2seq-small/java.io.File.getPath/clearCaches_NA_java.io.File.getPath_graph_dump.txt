Line_2 $$ public void clearCaches(final CompileContext context) -->Line_3 $$ flushCaches()[ CD ]
Line_2 $$ public void clearCaches(final CompileContext context) -->Line_5 $$ if (children != null) [ CD ]
Line_6 $$ for (final File child : children) -->Line_7 $$ final boolean deleteOk = FileUtil.delete(child)[ FD ]
Line_8 $$ if (!deleteOk) -->Line_9 $$ context.addMessage(CompilerMessageCategory.ERROR, CompilerBundle.message("compiler.error.failed.to.delete", child.getPath()), null, -1, -1)[ CD ]
Line_6 $$ for (final File child : children) -->Line_9 $$ context.addMessage(CompilerMessageCategory.ERROR, CompilerBundle.message("compiler.error.failed.to.delete", child.getPath()), null, -1, -1)[ FD ]
Line_2 $$ public void clearCaches(final CompileContext context) -->Line_9 $$ context.addMessage(CompilerMessageCategory.ERROR, CompilerBundle.message("compiler.error.failed.to.delete", child.getPath()), null, -1, -1)[ FD ]
Line_4 $$ final File[] children = myCachesRoot.listFiles()-->Line_5 $$ if (children != null) [ FD ]
Line_7 $$ final boolean deleteOk = FileUtil.delete(child)-->Line_8 $$ if (!deleteOk) [ FD ]
Line_2 $$ public void clearCaches(final CompileContext context) -->Line_4 $$ final File[] children = myCachesRoot.listFiles()[ CD ]
