Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_5 $$ file.createNewFile()[ CD ]
Line_9 $$ final VirtualFile vf = myLocalFileSystem.refreshAndFindFileByIoFile(file)-->Line_11 $$ Assert.assertTrue(myChangeListManager.isIgnoredFile(vf))[ FD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_6 $$ final IgnoredFileBean ignoredFileBean = IgnoredBeanFactory.ignoreFile(filePath1, myProject)[ CD ]
Line_3 $$ final String filePath1 = myClientRoot.getPath() + "/a"-->Line_6 $$ final IgnoredFileBean ignoredFileBean = IgnoredBeanFactory.ignoreFile(filePath1, myProject)[ FD ]
Line_9 $$ final VirtualFile vf = myLocalFileSystem.refreshAndFindFileByIoFile(file)-->Line_10 $$ Assert.assertNotNull(vf)[ FD ]
Line_6 $$ final IgnoredFileBean ignoredFileBean = IgnoredBeanFactory.ignoreFile(filePath1, myProject)-->Line_7 $$ myChangeListManager.addFilesToIgnore(ignoredFileBean)[ FD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_8 $$ dirty()[ CD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_4 $$ final File file = new File(filePath1)[ CD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_3 $$ final String filePath1 = myClientRoot.getPath() + "/a"[ CD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_10 $$ Assert.assertNotNull(vf)[ CD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_9 $$ final VirtualFile vf = myLocalFileSystem.refreshAndFindFileByIoFile(file)[ CD ]
Line_4 $$ final File file = new File(filePath1)-->Line_9 $$ final VirtualFile vf = myLocalFileSystem.refreshAndFindFileByIoFile(file)[ FD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_7 $$ myChangeListManager.addFilesToIgnore(ignoredFileBean)[ CD ]
Line_4 $$ final File file = new File(filePath1)-->Line_5 $$ file.createNewFile()[ FD ]
Line_2 $$ public void testFileIsIgnored() throws Exception -->Line_11 $$ Assert.assertTrue(myChangeListManager.isIgnoredFile(vf))[ CD ]
