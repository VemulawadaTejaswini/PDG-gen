Line_2 $$ private static void doScheduleRestart(File restarterFile, Consumer<List<String>> argumentsBuilder) throws IOException -->Line_5 $$ argumentsBuilder.consume(commands)[ FD ]
Line_2 $$ private static void doScheduleRestart(File restarterFile, Consumer<List<String>> argumentsBuilder) throws IOException -->Line_4 $$ commands.add(createTempExecutable(restarterFile).getPath())[ CD ]
Line_2 $$ private static void doScheduleRestart(File restarterFile, Consumer<List<String>> argumentsBuilder) throws IOException -->Line_4 $$ commands.add(createTempExecutable(restarterFile).getPath())[ FD ]
Line_2 $$ private static void doScheduleRestart(File restarterFile, Consumer<List<String>> argumentsBuilder) throws IOException -->Line_6 $$ Runtime.getRuntime().exec(ArrayUtil.toStringArray(commands))[ CD ]
Line_2 $$ private static void doScheduleRestart(File restarterFile, Consumer<List<String>> argumentsBuilder) throws IOException -->Line_3 $$ List<String> commands = new ArrayList<String>()[ CD ]
Line_3 $$ List<String> commands = new ArrayList<String>()-->Line_4 $$ commands.add(createTempExecutable(restarterFile).getPath())[ FD ]
Line_3 $$ List<String> commands = new ArrayList<String>()-->Line_6 $$ Runtime.getRuntime().exec(ArrayUtil.toStringArray(commands))[ FD ]
Line_2 $$ private static void doScheduleRestart(File restarterFile, Consumer<List<String>> argumentsBuilder) throws IOException -->Line_5 $$ argumentsBuilder.consume(commands)[ CD ]
Line_3 $$ List<String> commands = new ArrayList<String>()-->Line_5 $$ argumentsBuilder.consume(commands)[ FD ]
