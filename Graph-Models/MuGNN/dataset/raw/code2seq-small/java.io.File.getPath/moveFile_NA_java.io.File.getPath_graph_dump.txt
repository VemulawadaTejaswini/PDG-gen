Line_25 $$ File ioTarget = new File(ioParent, name)-->Line_30 $$ if (!ioFile.renameTo(ioTarget)) [ FD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_31 $$ throw new IOException(VfsBundle.message("move.failed.error", ioFile.getPath(), ioParent.getPath()))[ FD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_18 $$ if (FileSystemUtil.getAttributes(ioFile) == null) [ FD ]
Line_25 $$ File ioTarget = new File(ioParent, name)-->Line_26 $$ if (ioTarget.exists()) [ FD ]
Line_29 $$ if (!auxMove(file, newParent)) -->Line_30 $$ if (!ioFile.renameTo(ioTarget)) [ CD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_30 $$ if (!ioFile.renameTo(ioTarget)) [ FD ]
Line_21 $$ File ioParent = convertToIOFile(newParent)-->Line_22 $$ if (!ioParent.isDirectory()) [ FD ]
Line_4 $$ String name = file.getName()-->Line_14 $$ if (newParent.findChild(name) != null) [ FD ]
Line_34 $$ auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler, IOException>() -->Line_38 $$ handler.move(file, newParent)[ CD ]
Line_25 $$ File ioTarget = new File(ioParent, name)-->Line_27 $$ throw new IOException(VfsBundle.message("target.already.exists.error", ioTarget.getPath()))[ FD ]
Line_21 $$ File ioParent = convertToIOFile(newParent)-->Line_31 $$ throw new IOException(VfsBundle.message("move.failed.error", ioFile.getPath(), ioParent.getPath()))[ FD ]
Line_21 $$ File ioParent = convertToIOFile(newParent)-->Line_23 $$ throw new IOException(VfsBundle.message("target.not.directory.error", ioParent.getPath()))[ FD ]
Line_34 $$ auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler, IOException>() -->Line_38 $$ handler.move(file, newParent)[ FD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_19 $$ throw new FileNotFoundException(VfsBundle.message("file.not.exist.error", ioFile.getPath()))[ FD ]
