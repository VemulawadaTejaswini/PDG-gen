Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_10 $$ final QuickMerge quickMerge = newQuickMerge(trunkUrl)[ CD ]
Line_4 $$ final File workingIoFile = new File(myWorkingCopyDir.getPath())-->Line_5 $$ runInAndVerifyIgnoreOutput(workingIoFile, "ci", "-m", "change in trunk", myTree.myS1File.getPath())[ FD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_12 $$ final WaitingTaskDescriptor descriptor = new WaitingTaskDescriptor()[ CD ]
Line_10 $$ final QuickMerge quickMerge = newQuickMerge(trunkUrl)-->Line_15 $$ quickMerge.execute(testInteraction, descriptor)[ FD ]
Line_12 $$ final WaitingTaskDescriptor descriptor = new WaitingTaskDescriptor()-->Line_15 $$ quickMerge.execute(testInteraction, descriptor)[ FD ]
Line_11 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction()-->Line_15 $$ quickMerge.execute(testInteraction, descriptor)[ FD ]
Line_11 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction()-->Line_19 $$ testInteraction.throwIfExceptions()[ FD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_4 $$ final File workingIoFile = new File(myWorkingCopyDir.getPath())[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_21 $$ VcsDirtyScopeManager.getInstance(myProject).markEverythingDirty()[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_7 $$ runInAndVerifyIgnoreOutput(workingIoFile, "switch", myBranchUrl, workingIoFile.getPath())[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_6 $$ final String trunkUrl = myRepoUrl + "/trunk"[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_25 $$ Assert.assertEquals(FileStatus.MODIFIED, fileChange.getFileStatus())[ CD ]
Line_12 $$ final WaitingTaskDescriptor descriptor = new WaitingTaskDescriptor()-->Line_20 $$ Assert.assertTrue(descriptor.isCompleted())[ FD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_20 $$ Assert.assertTrue(descriptor.isCompleted())[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_18 $$ descriptor.waitForCompletion()[ CD ]
Line_12 $$ final WaitingTaskDescriptor descriptor = new WaitingTaskDescriptor()-->Line_18 $$ descriptor.waitForCompletion()[ FD ]
Line_13 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_15 $$ quickMerge.execute(testInteraction, descriptor)[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_3 $$ VcsTestUtil.editFileInCommand(myProject, myTree.myS1File, "903403240328")[ CD ]
Line_4 $$ final File workingIoFile = new File(myWorkingCopyDir.getPath())-->Line_7 $$ runInAndVerifyIgnoreOutput(workingIoFile, "switch", myBranchUrl, workingIoFile.getPath())[ FD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_27 $$ Assert.assertNotNull(dirChange)[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_24 $$ Assert.assertNotNull(fileChange)[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_9 $$ refreshSvnMappingsSynchronously()[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_23 $$ final Change fileChange = myChangeListManager.getChange(myTree.myS1File)[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_5 $$ runInAndVerifyIgnoreOutput(workingIoFile, "ci", "-m", "change in trunk", myTree.myS1File.getPath())[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_13 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_19 $$ testInteraction.throwIfExceptions()[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_22 $$ myChangeListManager.ensureUpToDate(false)[ CD ]
Line_6 $$ final String trunkUrl = myRepoUrl + "/trunk"-->Line_10 $$ final QuickMerge quickMerge = newQuickMerge(trunkUrl)[ FD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_11 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction()[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_26 $$ final Change dirChange = myChangeListManager.getChange(myWorkingCopyDir)[ CD ]
Line_2 $$ public void testSimpleMergeFromTrunkToB1() throws Exception -->Line_28 $$ Assert.assertEquals(FileStatus.MODIFIED, dirChange.getFileStatus())[ CD ]
