Line_2 $$ public void apply() throws ConfigurationException -->Line_15 $$ myBuildProperties.setPluginXmlPathAndCreateDescriptorIfDoesntExist(newPluginPath)[ CD ]
Line_6 $$ final File plugin = new File(myBuildProperties.getPluginXmlPath())-->Line_11 $$ FileUtil.delete(plugin.getParentFile())[ FD ]
Line_7 $$ final String newPluginPath = myPluginXML.getText() + File.separator + META_INF + File.separator + PLUGIN_XML-->Line_15 $$ myBuildProperties.setPluginXmlPathAndCreateDescriptorIfDoesntExist(newPluginPath)[ FD ]
Line_8 $$ if (plugin.exists() && !plugin.getPath().equals(newPluginPath) && Messages.showYesNoDialog(myModule.getProject(), DevKitBundle.message("deployment.view.delete", plugin.getPath()), DevKitBundle.message("deployment.cleanup", META_INF), null) == Messages.YES) -->Line_9 $$ CommandProcessor.getInstance().executeCommand(myModule.getProject(), new Runnable() [ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_6 $$ final File plugin = new File(myBuildProperties.getPluginXmlPath())[ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_3 $$ if (myUseUserManifest.isSelected() && myManifest.getText() != null && !new File(myManifest.getText()).exists()) [ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_7 $$ final String newPluginPath = myPluginXML.getText() + File.separator + META_INF + File.separator + PLUGIN_XML[ CD ]
Line_9 $$ CommandProcessor.getInstance().executeCommand(myModule.getProject(), new Runnable() -->Line_11 $$ FileUtil.delete(plugin.getParentFile())[ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_8 $$ if (plugin.exists() && !plugin.getPath().equals(newPluginPath) && Messages.showYesNoDialog(myModule.getProject(), DevKitBundle.message("deployment.view.delete", plugin.getPath()), DevKitBundle.message("deployment.cleanup", META_INF), null) == Messages.YES) [ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_17 $$ myBuildProperties.setUseUserManifest(myUseUserManifest.isSelected())[ CD ]
Line_2 $$ public void apply() throws ConfigurationException -->Line_16 $$ myBuildProperties.setManifestPath(myManifest.getText())[ CD ]
Line_7 $$ final String newPluginPath = myPluginXML.getText() + File.separator + META_INF + File.separator + PLUGIN_XML-->Line_8 $$ if (plugin.exists() && !plugin.getPath().equals(newPluginPath) && Messages.showYesNoDialog(myModule.getProject(), DevKitBundle.message("deployment.view.delete", plugin.getPath()), DevKitBundle.message("deployment.cleanup", META_INF), null) == Messages.YES) [ FD ]
Line_6 $$ final File plugin = new File(myBuildProperties.getPluginXmlPath())-->Line_8 $$ if (plugin.exists() && !plugin.getPath().equals(newPluginPath) && Messages.showYesNoDialog(myModule.getProject(), DevKitBundle.message("deployment.view.delete", plugin.getPath()), DevKitBundle.message("deployment.cleanup", META_INF), null) == Messages.YES) [ FD ]
