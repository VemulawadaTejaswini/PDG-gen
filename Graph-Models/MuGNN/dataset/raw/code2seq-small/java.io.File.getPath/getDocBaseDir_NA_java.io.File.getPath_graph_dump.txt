Line_24 $$ if (_log.isDebugEnabled()) -->Line_25 $$ _log.debug(docBase + " does not exist")[ CD ]
Line_35 $$ if (!FileUtil.exists(docBase + "/" + checkXmlFile)) -->Line_39 $$ return null[ CD ]
Line_22 $$ File docBaseDir = new File(docBase)-->Line_23 $$ if (!docBaseDir.exists()) [ FD ]
Line_16 $$ if (Validator.isNull(docBase)) -->Line_17 $$ if (_log.isDebugEnabled()) [ CD ]
Line_22 $$ File docBaseDir = new File(docBase)-->Line_29 $$ if (!docBaseDir.isDirectory()) [ FD ]
Line_23 $$ if (!docBaseDir.exists()) -->Line_27 $$ return null[ CD ]
Line_23 $$ if (!docBaseDir.exists()) -->Line_24 $$ if (_log.isDebugEnabled()) [ CD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_35 $$ if (!FileUtil.exists(docBase + "/" + checkXmlFile)) [ CD ]
Line_9 $$ Document document = UnsecureSAXReaderUtil.read(content)-->Line_10 $$ Element rootElement = document.getRootElement()[ FD ]
Line_6 $$ String docBase = null-->Line_16 $$ if (Validator.isNull(docBase)) [ FD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_29 $$ if (!docBaseDir.isDirectory()) [ CD ]
Line_12 $$ docBase = String.valueOf(PropertyConverter.interpolate(docBase, _systemConfiguration))-->Line_16 $$ if (Validator.isNull(docBase)) [ FD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_41 $$ return docBaseDir[ CD ]
Line_6 $$ String docBase = null-->Line_11 $$ docBase = rootElement.attributeValue("docBase")[ FD ]
Line_17 $$ if (_log.isDebugEnabled()) -->Line_18 $$ _log.debug(file.getPath() + " does not have a docBase defined")[ CD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_23 $$ if (!docBaseDir.exists()) [ CD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_3 $$ if (!isMatchingFileExtension(file)) [ FD ]
Line_3 $$ if (!isMatchingFileExtension(file)) -->Line_4 $$ return null[ CD ]
Line_29 $$ if (!docBaseDir.isDirectory()) -->Line_33 $$ return null[ CD ]
Line_35 $$ if (!FileUtil.exists(docBase + "/" + checkXmlFile)) -->Line_36 $$ if (_log.isDebugEnabled()) [ CD ]
Line_11 $$ docBase = rootElement.attributeValue("docBase")-->Line_12 $$ docBase = String.valueOf(PropertyConverter.interpolate(docBase, _systemConfiguration))[ FD ]
Line_8 $$ String content = FileUtil.read(file)-->Line_9 $$ Document document = UnsecureSAXReaderUtil.read(content)[ FD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_16 $$ if (Validator.isNull(docBase)) [ CD ]
Line_6 $$ String docBase = null-->Line_12 $$ docBase = String.valueOf(PropertyConverter.interpolate(docBase, _systemConfiguration))[ FD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_18 $$ _log.debug(file.getPath() + " does not have a docBase defined")[ FD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_3 $$ if (!isMatchingFileExtension(file)) [ CD ]
Line_30 $$ if (_log.isDebugEnabled()) -->Line_31 $$ _log.debug(docBase + " is not a directory")[ CD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_8 $$ String content = FileUtil.read(file)[ FD ]
Line_11 $$ docBase = rootElement.attributeValue("docBase")-->Line_16 $$ if (Validator.isNull(docBase)) [ FD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_22 $$ File docBaseDir = new File(docBase)[ CD ]
Line_16 $$ if (Validator.isNull(docBase)) -->Line_20 $$ return null[ CD ]
Line_2 $$ public File getDocBaseDir(File file, String checkXmlFile) throws AutoDeployException -->Line_6 $$ String docBase = null[ CD ]
Line_29 $$ if (!docBaseDir.isDirectory()) -->Line_30 $$ if (_log.isDebugEnabled()) [ CD ]
Line_10 $$ Element rootElement = document.getRootElement()-->Line_11 $$ docBase = rootElement.attributeValue("docBase")[ FD ]
Line_36 $$ if (_log.isDebugEnabled()) -->Line_37 $$ _log.debug(docBase + " does not have " + checkXmlFile)[ CD ]
