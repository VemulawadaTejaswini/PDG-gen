Line_14 $$ if (conflictShouldBeFound) -->Line_15 $$ fail("Conflict expected.")[ CD ]
Line_11 $$ final boolean conflictShouldBeFound = !new File(testDir, afterName).exists()-->Line_30 $$ if (!conflictShouldBeFound) [ FD ]
Line_30 $$ if (!conflictShouldBeFound) -->Line_31 $$ checkResultByFile(getAfterFile(myFileSuffix))[ CD ]
Line_22 $$ if (!conflicts.exists()) -->Line_23 $$ fail("Conflict file " + conflicts.getPath() + " not found")[ CD ]
Line_18 $$ if (!conflictShouldBeFound) -->Line_21 $$ final File conflicts = new File(testDir, FileUtilRt.getNameWithoutExtension(myFileSuffix) + CONFLICTS_SUFFIX)[ CD ]
Line_25 $$ final VirtualFile conflictsFile = VfsUtil.findFileByIoFile(conflicts, false)-->Line_26 $$ assertNotNull(conflictsFile)[ FD ]
Line_11 $$ final boolean conflictShouldBeFound = !new File(testDir, afterName).exists()-->Line_18 $$ if (!conflictShouldBeFound) [ FD ]
Line_18 $$ if (!conflictShouldBeFound) -->Line_26 $$ assertNotNull(conflictsFile)[ CD ]
Line_18 $$ if (!conflictShouldBeFound) -->Line_22 $$ if (!conflicts.exists()) [ CD ]
Line_21 $$ final File conflicts = new File(testDir, FileUtilRt.getNameWithoutExtension(myFileSuffix) + CONFLICTS_SUFFIX)-->Line_23 $$ fail("Conflict file " + conflicts.getPath() + " not found")[ FD ]
Line_18 $$ if (!conflictShouldBeFound) -->Line_19 $$ fail("Conflict not expected")[ CD ]
Line_21 $$ final File conflicts = new File(testDir, FileUtilRt.getNameWithoutExtension(myFileSuffix) + CONFLICTS_SUFFIX)-->Line_22 $$ if (!conflicts.exists()) [ FD ]
Line_18 $$ if (!conflictShouldBeFound) -->Line_25 $$ final VirtualFile conflictsFile = VfsUtil.findFileByIoFile(conflicts, false)[ CD ]
Line_21 $$ final File conflicts = new File(testDir, FileUtilRt.getNameWithoutExtension(myFileSuffix) + CONFLICTS_SUFFIX)-->Line_25 $$ final VirtualFile conflictsFile = VfsUtil.findFileByIoFile(conflicts, false)[ FD ]
Line_25 $$ final VirtualFile conflictsFile = VfsUtil.findFileByIoFile(conflicts, false)-->Line_27 $$ assertEquals(LoadTextUtil.loadText(conflictsFile).toString(), exception.getMessage())[ FD ]
Line_7 $$ final String filePath = getBeforeFile(myFileSuffix)-->Line_8 $$ configureByFile(filePath)[ FD ]
Line_18 $$ if (!conflictShouldBeFound) -->Line_27 $$ assertEquals(LoadTextUtil.loadText(conflictsFile).toString(), exception.getMessage())[ CD ]
