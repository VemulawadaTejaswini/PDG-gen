Line_3 $$ File jar = IoTestUtil.createTestJar()-->Line_4 $$ final VirtualFile vFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar)[ FD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_3 $$ File jar = IoTestUtil.createTestJar()[ CD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_5 $$ assertNotNull(vFile)[ CD ]
Line_4 $$ final VirtualFile vFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar)-->Line_5 $$ assertNotNull(vFile)[ FD ]
Line_3 $$ File jar = IoTestUtil.createTestJar()-->Line_16 $$ checkMove(jar, vFile, file)[ FD ]
Line_4 $$ final VirtualFile vFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar)-->Line_16 $$ checkMove(jar, vFile, file)[ FD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_4 $$ final VirtualFile vFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar)[ CD ]
Line_4 $$ final VirtualFile vFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar)-->Line_8 $$ PsiTestUtil.addContentRoot(myModule, vFile.getParent())[ FD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_11 $$ VirtualFile jarRoot = findByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR)[ CD ]
Line_4 $$ final VirtualFile vFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar)-->Line_12 $$ final PsiFile file = getPsiManager().findFile(vFile)[ FD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_6 $$ new WriteCommandAction.Simple(myProject) [ CD ]
Line_4 $$ final VirtualFile vFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(jar)-->Line_13 $$ final String newName = vFile.getName() + ".jar"[ FD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_16 $$ checkMove(jar, vFile, file)[ CD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_14 $$ rename(file, newName)[ CD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_12 $$ final PsiFile file = getPsiManager().findFile(vFile)[ CD ]
Line_2 $$ public void testJarRefreshOnRenameOrMove() throws IOException -->Line_15 $$ assertFalse(jarRoot.isValid())[ CD ]
Line_6 $$ new WriteCommandAction.Simple(myProject) -->Line_8 $$ PsiTestUtil.addContentRoot(myModule, vFile.getParent())[ CD ]
Line_3 $$ File jar = IoTestUtil.createTestJar()-->Line_11 $$ VirtualFile jarRoot = findByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR)[ FD ]
