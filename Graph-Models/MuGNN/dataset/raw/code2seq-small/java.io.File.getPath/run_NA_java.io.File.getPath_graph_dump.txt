Line_105 $$ if (myVerboseLevel == 1) -->Line_107 $$ if (prefix == null)[ CD ]
Line_105 $$ if (myVerboseLevel == 1) -->Line_115 $$ logMessageLn(1, prefix)[ CD ]
Line_18 $$ if (myProject == null) -->Line_19 $$ logError("Unable to open project")[ CD ]
Line_18 $$ if (myProject == null) -->Line_21 $$ return[ CD ]
Line_119 $$ if (!isIndeterminate() && getFraction() > 0) -->Line_121 $$ if (myLastPercent == percent)[ CD ]
Line_3 $$ File tmpDir = null-->Line_72 $$ resultsDataPath = tmpDir.getPath()[ FD ]
Line_41 $$ if (mySourceDirectory == null) -->Line_46 $$ mySourceDirectory = mySourceDirectory.replace(File.separatorChar, '/')[ CD ]
Line_106 $$ String prefix = getPrefix(text)-->Line_109 $$ if (prefix.equals(lastPrefix)) [ FD ]
Line_41 $$ if (mySourceDirectory == null) -->Line_48 $$ if (vfsDir == null) [ CD ]
Line_105 $$ if (myVerboseLevel == 1) -->Line_106 $$ String prefix = getPrefix(text)[ CD ]
Line_41 $$ if (mySourceDirectory == null) -->Line_47 $$ VirtualFile vfsDir = LocalFileSystem.getInstance().findFileByPath(mySourceDirectory)[ CD ]
Line_105 $$ if (myVerboseLevel == 1) -->Line_116 $$ return[ CD ]
Line_118 $$ if (myVerboseLevel == 3) -->Line_119 $$ if (!isIndeterminate() && getFraction() > 0) [ CD ]
Line_124 $$ String msg = InspectionsBundle.message("inspection.display.name") + " " + percent + "%"-->Line_125 $$ logMessageLn(2, msg)[ FD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_118 $$ if (myVerboseLevel == 3) [ CD ]
Line_91 $$ if (!myErrorCodeRequired) -->Line_92 $$ closeProject()[ CD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_103 $$ if (myVerboseLevel == 0)[ CD ]
Line_41 $$ if (mySourceDirectory == null) -->Line_52 $$ PsiDirectory psiDirectory = PsiManager.getInstance(myProject).findDirectory(vfsDir)[ CD ]
Line_48 $$ if (vfsDir == null) -->Line_50 $$ printHelp()[ CD ]
Line_3 $$ File tmpDir = null-->Line_155 $$ FileUtil.delete(tmpDir)[ FD ]
Line_119 $$ if (!isIndeterminate() && getFraction() > 0) -->Line_123 $$ myLastPercent = percent[ CD ]
Line_120 $$ final int percent = (int) (getFraction() * 100)-->Line_121 $$ if (myLastPercent == percent)[ FD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_90 $$ logMessageLn(1, "\n" + InspectionsBundle.message("inspection.capitalized.done") + "\n")[ CD ]
Line_7 $$ if (vfsProject == null) -->Line_8 $$ logError(InspectionsBundle.message("inspection.application.file.cannot.be.found", myProjectPath))[ CD ]
Line_85 $$ if (!GlobalInspectionContextUtil.canRunInspections(myProject, false)) -->Line_86 $$ gracefulExit()[ CD ]
Line_103 $$ if (myVerboseLevel == 0)-->Line_104 $$ return[ CD ]
Line_85 $$ if (!GlobalInspectionContextUtil.canRunInspections(myProject, false)) -->Line_87 $$ return[ CD ]
Line_18 $$ if (myProject == null) -->Line_20 $$ gracefulExit()[ CD ]
Line_48 $$ if (vfsDir == null) -->Line_49 $$ logError(InspectionsBundle.message("inspection.application.directory.cannot.be.found", mySourceDirectory))[ CD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_91 $$ if (!myErrorCodeRequired) [ CD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_106 $$ String prefix = getPrefix(text)[ FD ]
Line_105 $$ if (myVerboseLevel == 1) -->Line_109 $$ if (prefix.equals(lastPrefix)) [ CD ]
Line_120 $$ final int percent = (int) (getFraction() * 100)-->Line_123 $$ myLastPercent = percent[ FD ]
Line_109 $$ if (prefix.equals(lastPrefix)) -->Line_110 $$ logMessage(1, ".")[ CD ]
Line_7 $$ if (vfsProject == null) -->Line_9 $$ printHelp()[ CD ]
Line_6 $$ VirtualFile vfsProject = LocalFileSystem.getInstance().findFileByPath(myProjectPath)-->Line_7 $$ if (vfsProject == null) [ FD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_129 $$ logMessageLn(2, text)[ CD ]
Line_12 $$ final ConversionService conversionService = ConversionService.getInstance()-->Line_13 $$ if (conversionService.convertSilently(myProjectPath, createConversionListener()).openingIsCanceled()) [ FD ]
Line_2 $$ private void run() -->Line_3 $$ File tmpDir = null[ CD ]
Line_105 $$ if (myVerboseLevel == 1) -->Line_114 $$ logMessageLn(1, "")[ CD ]
Line_109 $$ if (prefix.equals(lastPrefix)) -->Line_111 $$ return[ CD ]
Line_41 $$ if (mySourceDirectory == null) -->Line_42 $$ final String scopeName = System.getProperty("idea.analyze.scope")[ CD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_105 $$ if (myVerboseLevel == 1) [ CD ]
Line_119 $$ if (!isIndeterminate() && getFraction() > 0) -->Line_125 $$ logMessageLn(2, msg)[ CD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_89 $$ inspectionContext.launchInspectionsOffline(scope, resultsDataPath, myRunGlobalToolsOnly, inspectionsResults)[ CD ]
Line_34 $$ if (inspectionProfile == null)-->Line_35 $$ return[ CD ]
Line_119 $$ if (!isIndeterminate() && getFraction() > 0) -->Line_124 $$ String msg = InspectionsBundle.message("inspection.display.name") + " " + percent + "%"[ CD ]
Line_107 $$ if (prefix == null)-->Line_108 $$ return[ CD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_129 $$ logMessageLn(2, text)[ FD ]
Line_56 $$ if (!myRunWithEditorSettings) -->Line_57 $$ logMessageLn(1, InspectionsBundle.message("inspection.application.chosen.profile.log message", inspectionProfile.getName()))[ CD ]
Line_106 $$ String prefix = getPrefix(text)-->Line_107 $$ if (prefix == null)[ FD ]
Line_106 $$ String prefix = getPrefix(text)-->Line_115 $$ logMessageLn(1, prefix)[ FD ]
Line_121 $$ if (myLastPercent == percent)-->Line_122 $$ return[ CD ]
Line_23 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_27 $$ VirtualFileManager.getInstance().refreshWithoutFileWatcher(false)[ CD ]
Line_13 $$ if (conversionService.convertSilently(myProjectPath, createConversionListener()).openingIsCanceled()) -->Line_14 $$ gracefulExit()[ CD ]
Line_81 $$ ProgressManager.getInstance().runProcess(new Runnable() -->Line_85 $$ if (!GlobalInspectionContextUtil.canRunInspections(myProject, false)) [ CD ]
Line_118 $$ if (myVerboseLevel == 3) -->Line_127 $$ return[ CD ]
Line_119 $$ if (!isIndeterminate() && getFraction() > 0) -->Line_120 $$ final int percent = (int) (getFraction() * 100)[ CD ]
Line_13 $$ if (conversionService.convertSilently(myProjectPath, createConversionListener()).openingIsCanceled()) -->Line_15 $$ return[ CD ]
