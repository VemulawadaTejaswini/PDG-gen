Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_8 $$ boolean c = ioFile.createNewFile()[ CD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_5 $$ File ioFile = new File(path)[ CD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_3 $$ File dir = myTempDir.newFolder()[ CD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_12 $$ PlatformTestUtil.startPerformanceTest("VF.getPath() performance failed", 4000, () -> [ CD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_4 $$ String path = dir.getPath() + StringUtil.repeat("/xxx", 50) + "/fff.txt"[ CD ]
Line_13 $$ for (int i = 0; i < 1000000; ++i) -->Line_14 $$ file.getPath()[ CD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_6 $$ boolean b = ioFile.getParentFile().mkdirs()[ CD ]
Line_5 $$ File ioFile = new File(path)-->Line_10 $$ VirtualFile file = LocalFileSystem.getInstance().refreshAndFindFileByPath(ioFile.getPath().replace(File.separatorChar, '/'))[ FD ]
Line_3 $$ File dir = myTempDir.newFolder()-->Line_4 $$ String path = dir.getPath() + StringUtil.repeat("/xxx", 50) + "/fff.txt"[ FD ]
Line_6 $$ boolean b = ioFile.getParentFile().mkdirs()-->Line_7 $$ assertTrue(b)[ FD ]
Line_5 $$ File ioFile = new File(path)-->Line_6 $$ boolean b = ioFile.getParentFile().mkdirs()[ FD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_11 $$ assertNotNull(file)[ CD ]
Line_5 $$ File ioFile = new File(path)-->Line_8 $$ boolean c = ioFile.createNewFile()[ FD ]
Line_10 $$ VirtualFile file = LocalFileSystem.getInstance().refreshAndFindFileByPath(ioFile.getPath().replace(File.separatorChar, '/'))-->Line_14 $$ file.getPath()[ FD ]
Line_8 $$ boolean c = ioFile.createNewFile()-->Line_9 $$ assertTrue(c)[ FD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_7 $$ assertTrue(b)[ CD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_10 $$ VirtualFile file = LocalFileSystem.getInstance().refreshAndFindFileByPath(ioFile.getPath().replace(File.separatorChar, '/'))[ CD ]
Line_10 $$ VirtualFile file = LocalFileSystem.getInstance().refreshAndFindFileByPath(ioFile.getPath().replace(File.separatorChar, '/'))-->Line_11 $$ assertNotNull(file)[ FD ]
Line_2 $$ public void testGetPathPerformance() throws IOException, InterruptedException -->Line_9 $$ assertTrue(c)[ CD ]
