Line_14 $$ List<String> localDirs = dirSvc.getLocalDirs()-->Line_15 $$ Assert.assertEquals(1, localDirs.size())[ FD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_15 $$ Assert.assertEquals(1, localDirs.size())[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_16 $$ Assert.assertEquals(new Path(localDir2).toString(), localDirs.get(0))[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_6 $$ String logDir1 = new File(testDir, "logDir1").getPath()[ CD ]
Line_3 $$ Configuration conf = new YarnConfiguration()-->Line_13 $$ dirSvc.init(conf)[ FD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_13 $$ dirSvc.init(conf)[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_18 $$ Assert.assertEquals(1, logDirs.size())[ CD ]
Line_12 $$ LocalDirsHandlerService dirSvc = new LocalDirsHandlerService()-->Line_13 $$ dirSvc.init(conf)[ FD ]
Line_4 $$ String localDir1 = new File(testDir, "localDir1").getPath()-->Line_10 $$ prepareDirToFail(localDir1)[ FD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_17 $$ List<String> logDirs = dirSvc.getLogDirs()[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_4 $$ String localDir1 = new File(testDir, "localDir1").getPath()[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_7 $$ String logDir2 = new File(testDir, "logDir2").getPath()[ CD ]
Line_7 $$ String logDir2 = new File(testDir, "logDir2").getPath()-->Line_11 $$ prepareDirToFail(logDir2)[ FD ]
Line_17 $$ List<String> logDirs = dirSvc.getLogDirs()-->Line_19 $$ Assert.assertEquals(new Path(logDir1).toString(), logDirs.get(0))[ FD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_11 $$ prepareDirToFail(logDir2)[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_12 $$ LocalDirsHandlerService dirSvc = new LocalDirsHandlerService()[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_3 $$ Configuration conf = new YarnConfiguration()[ CD ]
Line_14 $$ List<String> localDirs = dirSvc.getLocalDirs()-->Line_16 $$ Assert.assertEquals(new Path(localDir2).toString(), localDirs.get(0))[ FD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_19 $$ Assert.assertEquals(new Path(logDir1).toString(), logDirs.get(0))[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_9 $$ conf.set(YarnConfiguration.NM_LOG_DIRS, logDir1 + "," + logDir2)[ CD ]
Line_3 $$ Configuration conf = new YarnConfiguration()-->Line_9 $$ conf.set(YarnConfiguration.NM_LOG_DIRS, logDir1 + "," + logDir2)[ FD ]
Line_12 $$ LocalDirsHandlerService dirSvc = new LocalDirsHandlerService()-->Line_17 $$ List<String> logDirs = dirSvc.getLogDirs()[ FD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_8 $$ conf.set(YarnConfiguration.NM_LOCAL_DIRS, localDir1 + "," + localDir2)[ CD ]
Line_12 $$ LocalDirsHandlerService dirSvc = new LocalDirsHandlerService()-->Line_14 $$ List<String> localDirs = dirSvc.getLocalDirs()[ FD ]
Line_3 $$ Configuration conf = new YarnConfiguration()-->Line_8 $$ conf.set(YarnConfiguration.NM_LOCAL_DIRS, localDir1 + "," + localDir2)[ FD ]
Line_17 $$ List<String> logDirs = dirSvc.getLogDirs()-->Line_18 $$ Assert.assertEquals(1, logDirs.size())[ FD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_14 $$ List<String> localDirs = dirSvc.getLocalDirs()[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_10 $$ prepareDirToFail(localDir1)[ CD ]
Line_2 $$ public void testDirFailuresOnStartup() throws IOException -->Line_5 $$ String localDir2 = new File(testDir, "localDir2").getPath()[ CD ]
