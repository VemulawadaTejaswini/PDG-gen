Line_11 $$ if (!descriptor.isEmpty()) -->Line_16 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_7 $$ boolean cacheCleared = false-->Line_47 $$ cacheCleared = true[ FD ]
Line_9 $$ final File file = new File(deleted)-->Line_59 $$ LOG.debug("Skipping dirty path: " + file.getPath())[ FD ]
Line_7 $$ boolean cacheCleared = false-->Line_12 $$ if (!cacheCleared) [ FD ]
Line_19 $$ for (BuildRootDescriptor rootDescriptor : descriptor) -->Line_20 $$ pd.fsState.registerDeleted(rootDescriptor.getTarget(), file, timestamps)[ FD ]
Line_9 $$ final File file = new File(deleted)-->Line_24 $$ LOG.debug("Skipping deleted path: " + file.getPath())[ FD ]
Line_37 $$ if (!descriptor.isGenerated()) -->Line_44 $$ if (stamp != fileStamp) [ CD ]
Line_12 $$ if (!cacheCleared) -->Line_13 $$ pd.getFSCache().clear()[ CD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_49 $$ pd.fsState.markDirty(null, file, descriptor, timestamps, saveEventStamp)[ FD ]
Line_30 $$ Collection<BuildRootDescriptor> descriptors = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)-->Line_31 $$ if (!descriptors.isEmpty()) [ FD ]
Line_12 $$ if (!cacheCleared) -->Line_14 $$ cacheCleared = true[ CD ]
Line_3 $$ if (event == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_28 $$ for (String changed : event.getChangedPathsList()) [ FD ]
Line_31 $$ if (!descriptors.isEmpty()) -->Line_32 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_44 $$ if (stamp != fileStamp) -->Line_45 $$ if (!cacheCleared) [ CD ]
Line_6 $$ final Timestamps timestamps = pd.timestamps.getStorage()-->Line_43 $$ final long stamp = timestamps.getStamp(file, descriptor.getTarget())[ FD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_6 $$ final Timestamps timestamps = pd.timestamps.getStorage()[ CD ]
Line_9 $$ final File file = new File(deleted)-->Line_10 $$ Collection<BuildRootDescriptor> descriptor = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)[ FD ]
Line_6 $$ final Timestamps timestamps = pd.timestamps.getStorage()-->Line_20 $$ pd.fsState.registerDeleted(rootDescriptor.getTarget(), file, timestamps)[ FD ]
Line_10 $$ Collection<BuildRootDescriptor> descriptor = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)-->Line_52 $$ LOG.debug(descriptor.getTarget() + ": Path considered up-to-date: " + changed + "; timestamp= " + stamp)[ FD ]
Line_35 $$ long fileStamp = -1L-->Line_44 $$ if (stamp != fileStamp) [ FD ]
Line_7 $$ boolean cacheCleared = false-->Line_14 $$ cacheCleared = true[ FD ]
Line_10 $$ Collection<BuildRootDescriptor> descriptor = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)-->Line_49 $$ pd.fsState.markDirty(null, file, descriptor, timestamps, saveEventStamp)[ FD ]
Line_9 $$ final File file = new File(deleted)-->Line_20 $$ pd.fsState.registerDeleted(rootDescriptor.getTarget(), file, timestamps)[ FD ]
Line_9 $$ final File file = new File(deleted)-->Line_30 $$ Collection<BuildRootDescriptor> descriptors = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)[ FD ]
Line_51 $$ if (LOG.isDebugEnabled()) -->Line_52 $$ LOG.debug(descriptor.getTarget() + ": Path considered up-to-date: " + changed + "; timestamp= " + stamp)[ CD ]
Line_23 $$ if (LOG.isDebugEnabled()) -->Line_24 $$ LOG.debug("Skipping deleted path: " + file.getPath())[ CD ]
Line_43 $$ final long stamp = timestamps.getStamp(file, descriptor.getTarget())-->Line_44 $$ if (stamp != fileStamp) [ FD ]
Line_44 $$ if (stamp != fileStamp) -->Line_51 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_16 $$ if (LOG.isDebugEnabled()) -->Line_17 $$ LOG.debug("Applying deleted path from fs event: " + file.getPath())[ CD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_3 $$ if (event == null) [ FD ]
Line_9 $$ final File file = new File(deleted)-->Line_49 $$ pd.fsState.markDirty(null, file, descriptor, timestamps, saveEventStamp)[ FD ]
Line_11 $$ if (!descriptor.isEmpty()) -->Line_23 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_44 $$ if (stamp != fileStamp) -->Line_49 $$ pd.fsState.markDirty(null, file, descriptor, timestamps, saveEventStamp)[ CD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_3 $$ if (event == null) [ CD ]
Line_58 $$ if (LOG.isDebugEnabled()) -->Line_59 $$ LOG.debug("Skipping dirty path: " + file.getPath())[ CD ]
Line_9 $$ final File file = new File(deleted)-->Line_43 $$ final long stamp = timestamps.getStamp(file, descriptor.getTarget())[ FD ]
Line_11 $$ if (!descriptor.isEmpty()) -->Line_12 $$ if (!cacheCleared) [ CD ]
Line_6 $$ final Timestamps timestamps = pd.timestamps.getStorage()-->Line_49 $$ pd.fsState.markDirty(null, file, descriptor, timestamps, saveEventStamp)[ FD ]
Line_9 $$ final File file = new File(deleted)-->Line_17 $$ LOG.debug("Applying deleted path from fs event: " + file.getPath())[ FD ]
Line_31 $$ if (!descriptors.isEmpty()) -->Line_58 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_30 $$ Collection<BuildRootDescriptor> descriptors = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)[ FD ]
Line_7 $$ boolean cacheCleared = false-->Line_45 $$ if (!cacheCleared) [ FD ]
Line_10 $$ Collection<BuildRootDescriptor> descriptor = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)-->Line_11 $$ if (!descriptor.isEmpty()) [ FD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_13 $$ pd.getFSCache().clear()[ FD ]
Line_32 $$ if (LOG.isDebugEnabled()) -->Line_33 $$ LOG.debug("Applying dirty path from fs event: " + changed)[ CD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_8 $$ for (String deleted : event.getDeletedPathsList()) [ FD ]
Line_37 $$ if (!descriptor.isGenerated()) -->Line_43 $$ final long stamp = timestamps.getStamp(file, descriptor.getTarget())[ CD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_7 $$ boolean cacheCleared = false[ CD ]
Line_10 $$ Collection<BuildRootDescriptor> descriptor = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)-->Line_37 $$ if (!descriptor.isGenerated()) [ FD ]
Line_31 $$ if (!descriptors.isEmpty()) -->Line_35 $$ long fileStamp = -1L[ CD ]
Line_10 $$ Collection<BuildRootDescriptor> descriptor = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)-->Line_43 $$ final long stamp = timestamps.getStamp(file, descriptor.getTarget())[ FD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_10 $$ Collection<BuildRootDescriptor> descriptor = pd.getBuildRootIndex().findAllParentDescriptors(file, null, null)[ FD ]
Line_14 $$ cacheCleared = true-->Line_45 $$ if (!cacheCleared) [ FD ]
Line_2 $$ private static void applyFSEvent(ProjectDescriptor pd, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent event, final boolean saveEventStamp) throws IOException -->Line_46 $$ pd.getFSCache().clear()[ FD ]
Line_14 $$ cacheCleared = true-->Line_47 $$ cacheCleared = true[ FD ]
Line_45 $$ if (!cacheCleared) -->Line_46 $$ pd.getFSCache().clear()[ CD ]
Line_45 $$ if (!cacheCleared) -->Line_47 $$ cacheCleared = true[ CD ]
