Line_3 $$ final File root = FileUtil.createTempDirectory("checkoutRoot", "")-->Line_32 $$ ProjectLevelVcsManager.getInstance(myProject).setDirectoryMapping(root.getPath(), SvnVcs.VCS_NAME)[ FD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_27 $$ myIsSecure = url.contains("https:")[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_32 $$ ProjectLevelVcsManager.getInstance(myProject).setDirectoryMapping(root.getPath(), SvnVcs.VCS_NAME)[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_34 $$ return root[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_26 $$ Assert.assertTrue(cnt[0] > 1)[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_18 $$ FileUtil.processFilesRecursively(root, new Processor<File>() [ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_6 $$ SvnCheckoutProvider.checkout(myProject, root, url, SVNRevision.HEAD, Depth.INFINITY, false, new CheckoutProvider.Listener() [ FD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_3 $$ final File root = FileUtil.createTempDirectory("checkoutRoot", "")[ CD ]
Line_3 $$ final File root = FileUtil.createTempDirectory("checkoutRoot", "")-->Line_4 $$ root.deleteOnExit()[ FD ]
Line_3 $$ final File root = FileUtil.createTempDirectory("checkoutRoot", "")-->Line_6 $$ SvnCheckoutProvider.checkout(myProject, root, url, SVNRevision.HEAD, Depth.INFINITY, false, new CheckoutProvider.Listener() [ FD ]
Line_3 $$ final File root = FileUtil.createTempDirectory("checkoutRoot", "")-->Line_18 $$ FileUtil.processFilesRecursively(root, new Processor<File>() [ FD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_5 $$ Assert.assertTrue(root.exists())[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_4 $$ root.deleteOnExit()[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_17 $$ cnt[0] = 0[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_27 $$ myIsSecure = url.contains("https:")[ FD ]
Line_18 $$ FileUtil.processFilesRecursively(root, new Processor<File>() -->Line_22 $$ ++cnt[0][ CD ]
Line_3 $$ final File root = FileUtil.createTempDirectory("checkoutRoot", "")-->Line_5 $$ Assert.assertTrue(root.exists())[ FD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_6 $$ SvnCheckoutProvider.checkout(myProject, root, url, SVNRevision.HEAD, Depth.INFINITY, false, new CheckoutProvider.Listener() [ CD ]
Line_18 $$ FileUtil.processFilesRecursively(root, new Processor<File>() -->Line_23 $$ return !(cnt[0] > 1)[ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_28 $$ if (myIsSecure) [ CD ]
Line_2 $$ private File testCheckoutImpl(final String url) throws IOException -->Line_33 $$ refreshSvnMappingsSynchronously()[ CD ]
