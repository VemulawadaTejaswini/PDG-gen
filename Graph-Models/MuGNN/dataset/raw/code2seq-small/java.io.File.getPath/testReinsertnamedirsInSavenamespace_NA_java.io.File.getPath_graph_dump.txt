Line_35 $$ fsn = FSNamesystem.loadFromDisk(conf)-->Line_43 $$ if (fsn != null) [ FD ]
Line_14 $$ Path rootPath = new Path(rootDir.getPath(), "current")-->Line_17 $$ fs.setPermission(rootPath, permissionNone)[ FD ]
Line_13 $$ File rootDir = storage.getStorageDir(0).getRoot()-->Line_14 $$ Path rootPath = new Path(rootDir.getPath(), "current")[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_16 $$ final FsPermission permissionAll = new FsPermission(FsAction.ALL, FsAction.READ_EXECUTE, FsAction.READ_EXECUTE)[ CD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_15 $$ final FsPermission permissionNone = new FsPermission((short) 0)[ CD ]
Line_40 $$ if (rootDir.exists()) -->Line_41 $$ fs.setPermission(rootPath, permissionAll)[ CD ]
Line_35 $$ fsn = FSNamesystem.loadFromDisk(conf)-->Line_45 $$ fsn.close()[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_43 $$ if (fsn != null) [ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_6 $$ DFSTestUtil.formatNameNode(conf)[ CD ]
Line_9 $$ NNStorage storage = originalImage.getStorage()-->Line_29 $$ assertTrue("Savenamespace should have been successful in removing " + " bad directories from Image." + " But found " + storage.getRemovedStorageDirs().size() + " bad directories.", storage.getRemovedStorageDirs().size() == 0)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_4 $$ conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_RESTORE_KEY, true)[ CD ]
Line_12 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_25 $$ fs.setPermission(rootPath, permissionAll)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_13 $$ File rootDir = storage.getStorageDir(0).getRoot()[ CD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_11 $$ Whitebox.setInternalState(fsn, "fsImage", spyImage)[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_33 $$ fsn = null[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_20 $$ fsn.setSafeMode(SafeModeAction.SAFEMODE_ENTER)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_12 $$ FileSystem fs = FileSystem.getLocal(conf)[ CD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)[ CD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_37 $$ checkEditExists(fsn, 1)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_14 $$ Path rootPath = new Path(rootDir.getPath(), "current")[ CD ]
Line_14 $$ Path rootPath = new Path(rootDir.getPath(), "current")-->Line_41 $$ fs.setPermission(rootPath, permissionAll)[ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_35 $$ fsn = FSNamesystem.loadFromDisk(conf)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_3 $$ Configuration conf = getConf()[ CD ]
Line_9 $$ NNStorage storage = originalImage.getStorage()-->Line_13 $$ File rootDir = storage.getStorageDir(0).getRoot()[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_27 $$ fsn.saveNamespace()[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_32 $$ fsn.close()[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_8 $$ FSImage originalImage = fsn.getFSImage()[ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_5 $$ NameNode.initMetrics(conf, NamenodeRole.NAMENODE)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_5 $$ NameNode.initMetrics(conf, NamenodeRole.NAMENODE)[ CD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_8 $$ FSImage originalImage = fsn.getFSImage()[ CD ]
Line_8 $$ FSImage originalImage = fsn.getFSImage()-->Line_31 $$ originalImage.close()[ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_6 $$ DFSTestUtil.formatNameNode(conf)[ FD ]
Line_33 $$ fsn = null-->Line_45 $$ fsn.close()[ FD ]
Line_8 $$ FSImage originalImage = fsn.getFSImage()-->Line_10 $$ FSImage spyImage = spy(originalImage)[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_35 $$ fsn = FSNamesystem.loadFromDisk(conf)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_11 $$ Whitebox.setInternalState(fsn, "fsImage", spyImage)[ CD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_10 $$ FSImage spyImage = spy(originalImage)[ CD ]
Line_9 $$ NNStorage storage = originalImage.getStorage()-->Line_24 $$ assertTrue("Savenamespace should have marked one directory as bad." + " But found " + storage.getRemovedStorageDirs().size() + " bad directories.", storage.getRemovedStorageDirs().size() == 1)[ FD ]
Line_12 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_17 $$ fs.setPermission(rootPath, permissionNone)[ FD ]
Line_8 $$ FSImage originalImage = fsn.getFSImage()-->Line_9 $$ NNStorage storage = originalImage.getStorage()[ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_4 $$ conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_RESTORE_KEY, true)[ FD ]
Line_33 $$ fsn = null-->Line_43 $$ if (fsn != null) [ FD ]
Line_15 $$ final FsPermission permissionNone = new FsPermission((short) 0)-->Line_17 $$ fs.setPermission(rootPath, permissionNone)[ FD ]
Line_33 $$ fsn = null-->Line_37 $$ checkEditExists(fsn, 1)[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_19 $$ doAnEdit(fsn, 1)[ FD ]
Line_14 $$ Path rootPath = new Path(rootDir.getPath(), "current")-->Line_25 $$ fs.setPermission(rootPath, permissionAll)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_9 $$ NNStorage storage = originalImage.getStorage()[ CD ]
Line_16 $$ final FsPermission permissionAll = new FsPermission(FsAction.ALL, FsAction.READ_EXECUTE, FsAction.READ_EXECUTE)-->Line_25 $$ fs.setPermission(rootPath, permissionAll)[ FD ]
Line_16 $$ final FsPermission permissionAll = new FsPermission(FsAction.ALL, FsAction.READ_EXECUTE, FsAction.READ_EXECUTE)-->Line_41 $$ fs.setPermission(rootPath, permissionAll)[ FD ]
Line_12 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_41 $$ fs.setPermission(rootPath, permissionAll)[ FD ]
Line_35 $$ fsn = FSNamesystem.loadFromDisk(conf)-->Line_37 $$ checkEditExists(fsn, 1)[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_45 $$ fsn.close()[ FD ]
Line_33 $$ fsn = null-->Line_35 $$ fsn = FSNamesystem.loadFromDisk(conf)[ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_12 $$ FileSystem fs = FileSystem.getLocal(conf)[ FD ]
Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)-->Line_22 $$ fsn.saveNamespace()[ FD ]
Line_3 $$ Configuration conf = getConf()-->Line_7 $$ FSNamesystem fsn = FSNamesystem.loadFromDisk(conf)[ FD ]
Line_13 $$ File rootDir = storage.getStorageDir(0).getRoot()-->Line_40 $$ if (rootDir.exists()) [ FD ]
Line_10 $$ FSImage spyImage = spy(originalImage)-->Line_11 $$ Whitebox.setInternalState(fsn, "fsImage", spyImage)[ FD ]
Line_2 $$ public void testReinsertnamedirsInSavenamespace() throws Exception -->Line_17 $$ fs.setPermission(rootPath, permissionNone)[ CD ]
