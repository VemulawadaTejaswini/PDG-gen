Line_14 $$ if (homePath2 != null) -->Line_15 $$ allowed.add(FileUtil.toSystemIndependentName(homePath2))[ CD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_49 $$ allowed.addAll(ourAdditionalRoots)[ FD ]
Line_34 $$ for (final Project project : openProjects) -->Line_45 $$ String location = project.getBasePath()[ FD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_10 $$ allowed.add(FileUtil.toSystemIndependentName(PathManager.getHomePath()))[ FD ]
Line_20 $$ String output = new File(outUrl.toURI()).getParentFile().getParentFile().getPath()-->Line_21 $$ allowed.add(FileUtil.toSystemIndependentName(output))[ FD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_33 $$ allowed.add(FileUtil.toSystemIndependentName(SystemProperties.getUserHome()))[ FD ]
Line_18 $$ URL outUrl = Application.class.getResource("/")-->Line_20 $$ String output = new File(outUrl.toURI()).getParentFile().getParentFile().getPath()[ FD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_43 $$ allowed.add(StringUtil.trimEnd(root.getPath(), JarFileSystem.JAR_SEPARATOR))[ FD ]
Line_39 $$ for (VirtualFile root : ProjectRootManager.getInstance(project).getContentRoots()) -->Line_43 $$ allowed.add(StringUtil.trimEnd(root.getPath(), JarFileSystem.JAR_SEPARATOR))[ FD ]
Line_45 $$ String location = project.getBasePath()-->Line_47 $$ allowed.add(FileUtil.toSystemIndependentName(location))[ FD ]
Line_34 $$ for (final Project project : openProjects) -->Line_35 $$ if (!project.isInitialized()) [ FD ]
Line_7 $$ if (openProjects.length == 0)-->Line_8 $$ return null[ CD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_31 $$ allowed.add(FileUtil.toSystemIndependentName(new File(FileUtil.getTempDirectory()).getParent()))[ FD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_26 $$ allowed.add(FileUtil.toSystemIndependentName(javaHome))[ FD ]
Line_18 $$ URL outUrl = Application.class.getResource("/")-->Line_19 $$ if (outUrl != null) [ FD ]
Line_34 $$ for (final Project project : openProjects) -->Line_39 $$ for (VirtualFile root : ProjectRootManager.getInstance(project).getContentRoots()) [ FD ]
Line_19 $$ if (outUrl != null) -->Line_20 $$ String output = new File(outUrl.toURI()).getParentFile().getParentFile().getPath()[ CD ]
Line_34 $$ for (final Project project : openProjects) -->Line_42 $$ for (VirtualFile root : getAllRoots(project)) [ FD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_40 $$ allowed.add(root.getPath())[ FD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_47 $$ allowed.add(FileUtil.toSystemIndependentName(location))[ FD ]
Line_4 $$ if (insideGettingRoots)-->Line_5 $$ return null[ CD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_21 $$ allowed.add(FileUtil.toSystemIndependentName(output))[ FD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_32 $$ allowed.add(FileUtil.toSystemIndependentName(System.getProperty("java.io.tmpdir")))[ FD ]
Line_25 $$ String javaHome = SystemProperties.getJavaHome()-->Line_26 $$ allowed.add(FileUtil.toSystemIndependentName(javaHome))[ FD ]
Line_19 $$ if (outUrl != null) -->Line_21 $$ allowed.add(FileUtil.toSystemIndependentName(output))[ CD ]
Line_9 $$ final Set<String> allowed = new THashSet<String>(FileUtil.PATH_HASHING_STRATEGY)-->Line_15 $$ allowed.add(FileUtil.toSystemIndependentName(homePath2))[ FD ]
Line_39 $$ for (VirtualFile root : ProjectRootManager.getInstance(project).getContentRoots()) -->Line_40 $$ allowed.add(root.getPath())[ FD ]
