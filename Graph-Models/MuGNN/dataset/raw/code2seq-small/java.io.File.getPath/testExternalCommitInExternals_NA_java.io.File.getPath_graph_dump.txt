Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_21 $$ imitateEvent(lfs.refreshAndFindFileByIoFile(externalDir))[ CD ]
Line_9 $$ final VirtualFile vfMain = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(mainFile)-->Line_11 $$ renameFileInCommand(vfMain, "ss11.txt")[ FD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_3 $$ prepareExternal()[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_7 $$ final VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file)[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_23 $$ Assert.assertEquals(0, clManager.getChangesIn(myWorkingCopyDir).size())[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_18 $$ myWorkingCopyDir.refresh(false, true)[ CD ]
Line_5 $$ final File externalDir = new File(myWorkingCopyDir.getPath(), "source/external")-->Line_21 $$ imitateEvent(lfs.refreshAndFindFileByIoFile(externalDir))[ FD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_15 $$ TimeoutUtil.sleep(100)[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_4 $$ final File sourceDir = new File(myWorkingCopyDir.getPath(), "source")[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_10 $$ renameFileInCommand(vf, "tt11.txt")[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_16 $$ runInAndVerifyIgnoreOutput("ci", "-m", "test", sourceDir.getPath())[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_17 $$ runInAndVerifyIgnoreOutput("ci", "-m", "test", externalDir.getPath())[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_14 $$ Assert.assertEquals(2, clManager.getChangesIn(myWorkingCopyDir).size())[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_6 $$ final File file = new File(externalDir, "t11.txt")[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_8 $$ final File mainFile = new File(myWorkingCopyDir.getPath(), "source/s1.txt")[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_13 $$ clManager.ensureUpToDate(false)[ CD ]
Line_19 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()-->Line_20 $$ imitateEvent(lfs.refreshAndFindFileByIoFile(sourceDir))[ FD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_5 $$ final File externalDir = new File(myWorkingCopyDir.getPath(), "source/external")[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_9 $$ final VirtualFile vfMain = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(mainFile)[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_20 $$ imitateEvent(lfs.refreshAndFindFileByIoFile(sourceDir))[ CD ]
Line_8 $$ final File mainFile = new File(myWorkingCopyDir.getPath(), "source/s1.txt")-->Line_9 $$ final VirtualFile vfMain = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(mainFile)[ FD ]
Line_4 $$ final File sourceDir = new File(myWorkingCopyDir.getPath(), "source")-->Line_20 $$ imitateEvent(lfs.refreshAndFindFileByIoFile(sourceDir))[ FD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_11 $$ renameFileInCommand(vfMain, "ss11.txt")[ CD ]
Line_5 $$ final File externalDir = new File(myWorkingCopyDir.getPath(), "source/external")-->Line_17 $$ runInAndVerifyIgnoreOutput("ci", "-m", "test", externalDir.getPath())[ FD ]
Line_6 $$ final File file = new File(externalDir, "t11.txt")-->Line_7 $$ final VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file)[ FD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_12 $$ myVcsDirtyScopeManager.markEverythingDirty()[ CD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_22 $$ clManager.ensureUpToDate(false)[ CD ]
Line_4 $$ final File sourceDir = new File(myWorkingCopyDir.getPath(), "source")-->Line_16 $$ runInAndVerifyIgnoreOutput("ci", "-m", "test", sourceDir.getPath())[ FD ]
Line_7 $$ final VirtualFile vf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(file)-->Line_10 $$ renameFileInCommand(vf, "tt11.txt")[ FD ]
Line_2 $$ public void testExternalCommitInExternals() throws Exception -->Line_19 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()[ CD ]
Line_19 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()-->Line_21 $$ imitateEvent(lfs.refreshAndFindFileByIoFile(externalDir))[ FD ]
