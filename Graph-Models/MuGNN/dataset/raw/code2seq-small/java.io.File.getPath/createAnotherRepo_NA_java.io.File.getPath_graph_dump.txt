Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_4 $$ FileUtil.delete(repo)[ CD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_7 $$ final File tmpWc = FileUtil.createTempDirectory("hhh", "")[ CD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_11 $$ final SubTree tree = new SubTree(tmpWcVf)[ CD ]
Line_3 $$ final File repo = FileUtil.createTempDirectory("anotherRepo", "")-->Line_6 $$ myAnotherRepoUrl = (SystemInfo.isWindows ? "file:///" : "file://") + FileUtil.toSystemIndependentName(repo.getPath())[ FD ]
Line_7 $$ final File tmpWc = FileUtil.createTempDirectory("hhh", "")-->Line_13 $$ runInAndVerifyIgnoreOutput(tmpWc, "ci", "-m", "fff")[ FD ]
Line_7 $$ final File tmpWc = FileUtil.createTempDirectory("hhh", "")-->Line_9 $$ final VirtualFile tmpWcVf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tmpWc)[ FD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_8 $$ runInAndVerifyIgnoreOutput("co", myAnotherRepoUrl, tmpWc.getPath())[ CD ]
Line_3 $$ final File repo = FileUtil.createTempDirectory("anotherRepo", "")-->Line_5 $$ FileUtil.copyDir(myRepoRoot, repo)[ FD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_10 $$ assertNotNull(tmpWcVf)[ CD ]
Line_3 $$ final File repo = FileUtil.createTempDirectory("anotherRepo", "")-->Line_4 $$ FileUtil.delete(repo)[ FD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_9 $$ final VirtualFile tmpWcVf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tmpWc)[ CD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_5 $$ FileUtil.copyDir(myRepoRoot, repo)[ CD ]
Line_7 $$ final File tmpWc = FileUtil.createTempDirectory("hhh", "")-->Line_8 $$ runInAndVerifyIgnoreOutput("co", myAnotherRepoUrl, tmpWc.getPath())[ FD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_13 $$ runInAndVerifyIgnoreOutput(tmpWc, "ci", "-m", "fff")[ CD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_3 $$ final File repo = FileUtil.createTempDirectory("anotherRepo", "")[ CD ]
Line_9 $$ final VirtualFile tmpWcVf = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(tmpWc)-->Line_10 $$ assertNotNull(tmpWcVf)[ FD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_14 $$ FileUtil.delete(tmpWc)[ CD ]
Line_7 $$ final File tmpWc = FileUtil.createTempDirectory("hhh", "")-->Line_12 $$ runInAndVerifyIgnoreOutput(tmpWc, "add", "root")[ FD ]
Line_2 $$ protected void createAnotherRepo() throws Exception -->Line_12 $$ runInAndVerifyIgnoreOutput(tmpWc, "add", "root")[ CD ]
Line_7 $$ final File tmpWc = FileUtil.createTempDirectory("hhh", "")-->Line_14 $$ FileUtil.delete(tmpWc)[ FD ]
