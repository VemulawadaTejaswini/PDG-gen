Line_18 $$ if (sdk != null) -->Line_20 $$ if (pythonPath != null) [ CD ]
Line_20 $$ if (pythonPath != null) -->Line_22 $$ commandLine.addParameter(testRunner.getPath())[ CD ]
Line_15 $$ if (courseDir != null) -->Line_16 $$ env.put(PYTHONPATH, courseDir.getPath())[ CD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_14 $$ final VirtualFile courseDir = project.getBaseDir()[ FD ]
Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_26 $$ return commandLine.createProcess()[ FD ]
Line_23 $$ File resourceFile = new File(course.getCourseDirectory())-->Line_24 $$ commandLine.addParameter(resourceFile.getPath())[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_5 $$ StudyLanguageManager manager = StudyUtils.getLanguageManager(course)[ CD ]
Line_18 $$ if (sdk != null) -->Line_19 $$ String pythonPath = sdk.getHomePath()[ CD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_10 $$ final File testRunner = new File(myTaskDir.getPath(), manager.getTestFileName())[ CD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_13 $$ final Map<String, String> env = commandLine.getEnvironment()[ CD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_14 $$ final VirtualFile courseDir = project.getBaseDir()[ CD ]
Line_19 $$ String pythonPath = sdk.getHomePath()-->Line_21 $$ commandLine.setExePath(pythonPath)[ FD ]
Line_4 $$ Course course = myTask.getLesson().getCourse()-->Line_7 $$ LOG.info("Language manager is null for " + course.getLanguageById().getDisplayName())[ FD ]
Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_22 $$ commandLine.addParameter(testRunner.getPath())[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()[ CD ]
Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_21 $$ commandLine.setExePath(pythonPath)[ FD ]
Line_20 $$ if (pythonPath != null) -->Line_21 $$ commandLine.setExePath(pythonPath)[ CD ]
Line_6 $$ if (manager == null) -->Line_8 $$ return null[ CD ]
Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_25 $$ commandLine.addParameter(FileUtil.toSystemDependentName(executablePath))[ FD ]
Line_4 $$ Course course = myTask.getLesson().getCourse()-->Line_23 $$ File resourceFile = new File(course.getCourseDirectory())[ FD ]
Line_20 $$ if (pythonPath != null) -->Line_25 $$ commandLine.addParameter(FileUtil.toSystemDependentName(executablePath))[ CD ]
Line_14 $$ final VirtualFile courseDir = project.getBaseDir()-->Line_16 $$ env.put(PYTHONPATH, courseDir.getPath())[ FD ]
Line_5 $$ StudyLanguageManager manager = StudyUtils.getLanguageManager(course)-->Line_10 $$ final File testRunner = new File(myTaskDir.getPath(), manager.getTestFileName())[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_29 $$ return null[ CD ]
Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_13 $$ final Map<String, String> env = commandLine.getEnvironment()[ FD ]
Line_20 $$ if (pythonPath != null) -->Line_24 $$ commandLine.addParameter(resourceFile.getPath())[ CD ]
Line_19 $$ String pythonPath = sdk.getHomePath()-->Line_20 $$ if (pythonPath != null) [ FD ]
Line_10 $$ final File testRunner = new File(myTaskDir.getPath(), manager.getTestFileName())-->Line_22 $$ commandLine.addParameter(testRunner.getPath())[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_15 $$ if (courseDir != null) [ CD ]
Line_20 $$ if (pythonPath != null) -->Line_23 $$ File resourceFile = new File(course.getCourseDirectory())[ CD ]
Line_3 $$ final Sdk sdk = PythonSdkType.findPythonSdk(ModuleManager.getInstance(project).getModules()[0])-->Line_18 $$ if (sdk != null) [ FD ]
Line_20 $$ if (pythonPath != null) -->Line_26 $$ return commandLine.createProcess()[ CD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_18 $$ if (sdk != null) [ CD ]
Line_5 $$ StudyLanguageManager manager = StudyUtils.getLanguageManager(course)-->Line_6 $$ if (manager == null) [ FD ]
Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_24 $$ commandLine.addParameter(resourceFile.getPath())[ FD ]
Line_4 $$ Course course = myTask.getLesson().getCourse()-->Line_5 $$ StudyLanguageManager manager = StudyUtils.getLanguageManager(course)[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_3 $$ final Sdk sdk = PythonSdkType.findPythonSdk(ModuleManager.getInstance(project).getModules()[0])[ CD ]
Line_13 $$ final Map<String, String> env = commandLine.getEnvironment()-->Line_16 $$ env.put(PYTHONPATH, courseDir.getPath())[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_12 $$ commandLine.withWorkDirectory(myTaskDir.getPath())[ CD ]
Line_11 $$ final GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_12 $$ commandLine.withWorkDirectory(myTaskDir.getPath())[ FD ]
Line_6 $$ if (manager == null) -->Line_7 $$ LOG.info("Language manager is null for " + course.getLanguageById().getDisplayName())[ CD ]
Line_14 $$ final VirtualFile courseDir = project.getBaseDir()-->Line_15 $$ if (courseDir != null) [ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_4 $$ Course course = myTask.getLesson().getCourse()[ CD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_25 $$ commandLine.addParameter(FileUtil.toSystemDependentName(executablePath))[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_3 $$ final Sdk sdk = PythonSdkType.findPythonSdk(ModuleManager.getInstance(project).getModules()[0])[ FD ]
Line_2 $$ public Process createCheckProcess(@NotNull final Project project, @NotNull final String executablePath) throws ExecutionException -->Line_6 $$ if (manager == null) [ CD ]
Line_3 $$ final Sdk sdk = PythonSdkType.findPythonSdk(ModuleManager.getInstance(project).getModules()[0])-->Line_19 $$ String pythonPath = sdk.getHomePath()[ FD ]
