Line_2 $$ public Process startProcessWithPty(@NotNull List<String> commands, boolean console) throws IOException -->Line_10 $$ return PtyProcess.exec(ArrayUtil.toStringArray(commands), env, workDirectory != null ? workDirectory.getPath() : null, console, cygwin, ApplicationManager.getApplication().isEAP() ? getPtyLogFile() : null)[ FD ]
Line_2 $$ public Process startProcessWithPty(@NotNull List<String> commands, boolean console) throws IOException -->Line_3 $$ Map<String, String> env = new HashMap<String, String>()[ CD ]
Line_2 $$ public Process startProcessWithPty(@NotNull List<String> commands, boolean console) throws IOException -->Line_8 $$ File workDirectory = getWorkDirectory()[ CD ]
Line_3 $$ Map<String, String> env = new HashMap<String, String>()-->Line_4 $$ setupEnvironment(env)[ FD ]
Line_8 $$ File workDirectory = getWorkDirectory()-->Line_10 $$ return PtyProcess.exec(ArrayUtil.toStringArray(commands), env, workDirectory != null ? workDirectory.getPath() : null, console, cygwin, ApplicationManager.getApplication().isEAP() ? getPtyLogFile() : null)[ FD ]
Line_2 $$ public Process startProcessWithPty(@NotNull List<String> commands, boolean console) throws IOException -->Line_5 $$ if (isRedirectErrorStream()) [ CD ]
Line_5 $$ if (isRedirectErrorStream()) -->Line_6 $$ LOG.error("Launching process with PTY and redirected error stream is unsupported yet")[ CD ]
Line_2 $$ public Process startProcessWithPty(@NotNull List<String> commands, boolean console) throws IOException -->Line_10 $$ return PtyProcess.exec(ArrayUtil.toStringArray(commands), env, workDirectory != null ? workDirectory.getPath() : null, console, cygwin, ApplicationManager.getApplication().isEAP() ? getPtyLogFile() : null)[ CD ]
Line_3 $$ Map<String, String> env = new HashMap<String, String>()-->Line_10 $$ return PtyProcess.exec(ArrayUtil.toStringArray(commands), env, workDirectory != null ? workDirectory.getPath() : null, console, cygwin, ApplicationManager.getApplication().isEAP() ? getPtyLogFile() : null)[ FD ]
Line_9 $$ boolean cygwin = myUseCygwinLaunch && SystemInfo.isWindows-->Line_10 $$ return PtyProcess.exec(ArrayUtil.toStringArray(commands), env, workDirectory != null ? workDirectory.getPath() : null, console, cygwin, ApplicationManager.getApplication().isEAP() ? getPtyLogFile() : null)[ FD ]
Line_2 $$ public Process startProcessWithPty(@NotNull List<String> commands, boolean console) throws IOException -->Line_4 $$ setupEnvironment(env)[ CD ]
Line_2 $$ public Process startProcessWithPty(@NotNull List<String> commands, boolean console) throws IOException -->Line_9 $$ boolean cygwin = myUseCygwinLaunch && SystemInfo.isWindows[ CD ]
