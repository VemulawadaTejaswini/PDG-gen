Line_8 $$ command = new ProcessBuilder("fsutil", "hardlink", "create", linkFile.getPath(), targetFile.getPath())-->Line_12 $$ final int res = runCommand(command)[ FD ]
Line_10 $$ command = new ProcessBuilder("ln", targetFile.getPath(), linkFile.getPath())-->Line_12 $$ final int res = runCommand(command)[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_14 $$ assertTrue("target=" + target + ", link=" + linkFile, linkFile.exists())[ CD ]
Line_5 $$ final File linkFile = getFullLinkPath(link)-->Line_14 $$ assertTrue("target=" + target + ", link=" + linkFile, linkFile.exists())[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_5 $$ final File linkFile = getFullLinkPath(link)[ FD ]
Line_7 $$ if (SystemInfo.isWindows) -->Line_8 $$ command = new ProcessBuilder("fsutil", "hardlink", "create", linkFile.getPath(), targetFile.getPath())[ CD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))[ CD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_15 $$ return linkFile[ CD ]
Line_6 $$ final ProcessBuilder command-->Line_10 $$ command = new ProcessBuilder("ln", targetFile.getPath(), linkFile.getPath())[ FD ]
Line_7 $$ if (SystemInfo.isWindows) -->Line_10 $$ command = new ProcessBuilder("ln", targetFile.getPath(), linkFile.getPath())[ CD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_7 $$ if (SystemInfo.isWindows) [ CD ]
Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))-->Line_10 $$ command = new ProcessBuilder("ln", targetFile.getPath(), linkFile.getPath())[ FD ]
Line_10 $$ command = new ProcessBuilder("ln", targetFile.getPath(), linkFile.getPath())-->Line_13 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))[ FD ]
Line_6 $$ final ProcessBuilder command-->Line_12 $$ final int res = runCommand(command)[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_6 $$ final ProcessBuilder command[ CD ]
Line_6 $$ final ProcessBuilder command-->Line_13 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))-->Line_8 $$ command = new ProcessBuilder("fsutil", "hardlink", "create", linkFile.getPath(), targetFile.getPath())[ FD ]
Line_6 $$ final ProcessBuilder command-->Line_8 $$ command = new ProcessBuilder("fsutil", "hardlink", "create", linkFile.getPath(), targetFile.getPath())[ FD ]
Line_5 $$ final File linkFile = getFullLinkPath(link)-->Line_10 $$ command = new ProcessBuilder("ln", targetFile.getPath(), linkFile.getPath())[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_13 $$ assertEquals(command.command().toString(), 0, res)[ CD ]
Line_5 $$ final File linkFile = getFullLinkPath(link)-->Line_8 $$ command = new ProcessBuilder("fsutil", "hardlink", "create", linkFile.getPath(), targetFile.getPath())[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_3 $$ assertTrue(SystemInfo.isWindows || SystemInfo.isUnix)[ CD ]
Line_8 $$ command = new ProcessBuilder("fsutil", "hardlink", "create", linkFile.getPath(), targetFile.getPath())-->Line_10 $$ command = new ProcessBuilder("ln", targetFile.getPath(), linkFile.getPath())[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_12 $$ final int res = runCommand(command)[ CD ]
Line_8 $$ command = new ProcessBuilder("fsutil", "hardlink", "create", linkFile.getPath(), targetFile.getPath())-->Line_13 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_12 $$ final int res = runCommand(command)-->Line_13 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_2 $$ public static File createHardLink(@NotNull String target, @NotNull String link) throws InterruptedException, IOException -->Line_5 $$ final File linkFile = getFullLinkPath(link)[ CD ]
