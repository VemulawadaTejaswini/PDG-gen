Line_4 $$ MavenIndices indicesObjectCache = getIndicesObject()-->Line_6 $$ MavenIndex localIndex = indicesObjectCache.add(LOCAL_REPOSITORY_ID, localRepository.getPath(), MavenIndex.Kind.LOCAL)[ FD ]
Line_8 $$ if (localIndex.getUpdateTimestamp() == -1) -->Line_9 $$ scheduleUpdate(project, Collections.singletonList(localIndex))[ CD ]
Line_2 $$ public synchronized List<MavenIndex> ensureIndicesExist(Project project, File localRepository, Collection<Pair<String, String>> remoteRepositoriesIdsAndUrls) -->Line_6 $$ MavenIndex localIndex = indicesObjectCache.add(LOCAL_REPOSITORY_ID, localRepository.getPath(), MavenIndex.Kind.LOCAL)[ FD ]
Line_2 $$ public synchronized List<MavenIndex> ensureIndicesExist(Project project, File localRepository, Collection<Pair<String, String>> remoteRepositoriesIdsAndUrls) -->Line_21 $$ return new ArrayList<MavenIndex>(result)[ CD ]
Line_2 $$ public synchronized List<MavenIndex> ensureIndicesExist(Project project, File localRepository, Collection<Pair<String, String>> remoteRepositoriesIdsAndUrls) -->Line_9 $$ scheduleUpdate(project, Collections.singletonList(localIndex))[ FD ]
Line_6 $$ MavenIndex localIndex = indicesObjectCache.add(LOCAL_REPOSITORY_ID, localRepository.getPath(), MavenIndex.Kind.LOCAL)-->Line_9 $$ scheduleUpdate(project, Collections.singletonList(localIndex))[ FD ]
Line_4 $$ MavenIndices indicesObjectCache = getIndicesObject()-->Line_16 $$ result.add(indicesObjectCache.add(eachIdAndUrl.first, eachIdAndUrl.second, MavenIndex.Kind.REMOTE))[ FD ]
Line_6 $$ MavenIndex localIndex = indicesObjectCache.add(LOCAL_REPOSITORY_ID, localRepository.getPath(), MavenIndex.Kind.LOCAL)-->Line_8 $$ if (localIndex.getUpdateTimestamp() == -1) [ FD ]
Line_2 $$ public synchronized List<MavenIndex> ensureIndicesExist(Project project, File localRepository, Collection<Pair<String, String>> remoteRepositoriesIdsAndUrls) -->Line_4 $$ MavenIndices indicesObjectCache = getIndicesObject()[ CD ]
Line_2 $$ public synchronized List<MavenIndex> ensureIndicesExist(Project project, File localRepository, Collection<Pair<String, String>> remoteRepositoriesIdsAndUrls) -->Line_3 $$ LinkedHashSet<MavenIndex> result = new LinkedHashSet<MavenIndex>()[ CD ]
Line_3 $$ LinkedHashSet<MavenIndex> result = new LinkedHashSet<MavenIndex>()-->Line_16 $$ result.add(indicesObjectCache.add(eachIdAndUrl.first, eachIdAndUrl.second, MavenIndex.Kind.REMOTE))[ FD ]
Line_6 $$ MavenIndex localIndex = indicesObjectCache.add(LOCAL_REPOSITORY_ID, localRepository.getPath(), MavenIndex.Kind.LOCAL)-->Line_7 $$ result.add(localIndex)[ FD ]
Line_3 $$ LinkedHashSet<MavenIndex> result = new LinkedHashSet<MavenIndex>()-->Line_7 $$ result.add(localIndex)[ FD ]
