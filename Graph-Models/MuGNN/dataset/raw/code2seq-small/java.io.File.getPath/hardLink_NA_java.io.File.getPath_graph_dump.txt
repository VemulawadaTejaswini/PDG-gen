Line_7 $$ final File link = IoTestUtil.createHardLink(target.getPath(), myTempDirectory.getPath() + "/link")-->Line_22 $$ final String resolved = FileSystemUtil.resolveSymLink(link)[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_15 $$ assertTrue(target.length() > 0)[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_13 $$ FileUtil.writeToFile(target, myTestData)[ FD ]
Line_7 $$ final File link = IoTestUtil.createHardLink(target.getPath(), myTempDirectory.getPath() + "/link")-->Line_23 $$ assertEquals(link.getPath(), resolved)[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_12 $$ assertTimestampsEqual(target.lastModified(), attributes.lastModified)[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_21 $$ assertTimestampsEqual(target.lastModified(), attributes.lastModified)[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_7 $$ final File link = IoTestUtil.createHardLink(target.getPath(), myTempDirectory.getPath() + "/link")[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_11 $$ assertEquals(target.length(), attributes.length)[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_16 $$ assertTimestampsEqual(attributes.lastModified - 5000, target.lastModified())[ FD ]
Line_22 $$ final String resolved = FileSystemUtil.resolveSymLink(link)-->Line_23 $$ assertEquals(link.getPath(), resolved)[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_14 $$ assertTrue(target.setLastModified(attributes.lastModified - 5000))[ FD ]
Line_6 $$ final File target = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_20 $$ assertEquals(target.length(), attributes.length)[ FD ]
