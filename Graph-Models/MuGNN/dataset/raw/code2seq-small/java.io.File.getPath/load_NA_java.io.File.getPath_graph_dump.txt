Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_6 $$ int deletedCount = in.readInt()[ FD ]
Line_14 $$ BuildRootDescriptor descriptor = target.findRootDescriptor(rootId, buildRootIndex)-->Line_17 $$ files = myFilesToRecompile.get(descriptor)[ FD ]
Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_13 $$ String rootId = IOUtil.readString(in)[ FD ]
Line_26 $$ int filesCount = in.readInt()-->Line_27 $$ while (filesCount-- > 0) [ FD ]
Line_12 $$ while (recompileCount-- > 0) -->Line_26 $$ int filesCount = in.readInt()[ CD ]
Line_19 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_24 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)[ FD ]
Line_13 $$ String rootId = IOUtil.readString(in)-->Line_14 $$ BuildRootDescriptor descriptor = target.findRootDescriptor(rootId, buildRootIndex)[ FD ]
Line_28 $$ final File file = new File(IOUtil.readString(in))-->Line_32 $$ files.add(file)[ FD ]
Line_12 $$ while (recompileCount-- > 0) -->Line_16 $$ if (descriptor != null) [ CD ]
Line_24 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_32 $$ files.add(file)[ FD ]
Line_18 $$ if (files == null) -->Line_19 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)[ CD ]
Line_18 $$ if (files == null) -->Line_20 $$ myFilesToRecompile.put(descriptor, files)[ CD ]
Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_3 $$ lockData()[ CD ]
Line_16 $$ if (descriptor != null) -->Line_17 $$ files = myFilesToRecompile.get(descriptor)[ CD ]
Line_17 $$ files = myFilesToRecompile.get(descriptor)-->Line_32 $$ files.add(file)[ FD ]
Line_19 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_32 $$ files.add(file)[ FD ]
Line_17 $$ files = myFilesToRecompile.get(descriptor)-->Line_18 $$ if (files == null) [ FD ]
Line_6 $$ int deletedCount = in.readInt()-->Line_7 $$ while (deletedCount-- > 0) [ FD ]
Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_28 $$ final File file = new File(IOUtil.readString(in))[ FD ]
Line_16 $$ if (descriptor != null) -->Line_23 $$ LOG.debug("Cannot find root by " + rootId + ", delta will be skipped")[ CD ]
Line_17 $$ files = myFilesToRecompile.get(descriptor)-->Line_20 $$ myFilesToRecompile.put(descriptor, files)[ FD ]
Line_27 $$ while (filesCount-- > 0) -->Line_28 $$ final File file = new File(IOUtil.readString(in))[ CD ]
Line_15 $$ Set<File> files-->Line_24 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)[ FD ]
Line_27 $$ while (filesCount-- > 0) -->Line_32 $$ files.add(file)[ CD ]
Line_24 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_20 $$ myFilesToRecompile.put(descriptor, files)[ FD ]
Line_14 $$ BuildRootDescriptor descriptor = target.findRootDescriptor(rootId, buildRootIndex)-->Line_16 $$ if (descriptor != null) [ FD ]
Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_26 $$ int filesCount = in.readInt()[ FD ]
Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_14 $$ BuildRootDescriptor descriptor = target.findRootDescriptor(rootId, buildRootIndex)[ FD ]
Line_19 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_20 $$ myFilesToRecompile.put(descriptor, files)[ FD ]
Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_8 $$ myDeletedPaths.add(IOUtil.readString(in))[ FD ]
Line_12 $$ while (recompileCount-- > 0) -->Line_15 $$ Set<File> files[ CD ]
Line_14 $$ BuildRootDescriptor descriptor = target.findRootDescriptor(rootId, buildRootIndex)-->Line_20 $$ myFilesToRecompile.put(descriptor, files)[ FD ]
Line_15 $$ Set<File> files-->Line_20 $$ myFilesToRecompile.put(descriptor, files)[ FD ]
Line_27 $$ while (filesCount-- > 0) -->Line_29 $$ if (Utils.IS_TEST_MODE) [ CD ]
Line_12 $$ while (recompileCount-- > 0) -->Line_14 $$ BuildRootDescriptor descriptor = target.findRootDescriptor(rootId, buildRootIndex)[ CD ]
Line_19 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_18 $$ if (files == null) [ FD ]
Line_2 $$ public void load(DataInput in, @NotNull BuildTarget<?> target, BuildRootIndex buildRootIndex) throws IOException -->Line_11 $$ int recompileCount = in.readInt()[ FD ]
Line_15 $$ Set<File> files-->Line_19 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)[ FD ]
Line_15 $$ Set<File> files-->Line_17 $$ files = myFilesToRecompile.get(descriptor)[ FD ]
Line_17 $$ files = myFilesToRecompile.get(descriptor)-->Line_19 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)[ FD ]
Line_17 $$ files = myFilesToRecompile.get(descriptor)-->Line_24 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)[ FD ]
Line_12 $$ while (recompileCount-- > 0) -->Line_27 $$ while (filesCount-- > 0) [ CD ]
Line_12 $$ while (recompileCount-- > 0) -->Line_13 $$ String rootId = IOUtil.readString(in)[ CD ]
Line_29 $$ if (Utils.IS_TEST_MODE) -->Line_30 $$ LOG.info("Loaded " + file.getPath())[ CD ]
Line_15 $$ Set<File> files-->Line_32 $$ files.add(file)[ FD ]
Line_7 $$ while (deletedCount-- > 0) -->Line_8 $$ myDeletedPaths.add(IOUtil.readString(in))[ CD ]
Line_28 $$ final File file = new File(IOUtil.readString(in))-->Line_30 $$ LOG.info("Loaded " + file.getPath())[ FD ]
Line_24 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)-->Line_18 $$ if (files == null) [ FD ]
Line_16 $$ if (descriptor != null) -->Line_18 $$ if (files == null) [ CD ]
Line_11 $$ int recompileCount = in.readInt()-->Line_12 $$ while (recompileCount-- > 0) [ FD ]
Line_15 $$ Set<File> files-->Line_18 $$ if (files == null) [ FD ]
Line_16 $$ if (descriptor != null) -->Line_24 $$ files = new THashSet<File>(FileUtil.FILE_HASHING_STRATEGY)[ CD ]
