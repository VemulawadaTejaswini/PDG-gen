Line_29 $$ final String relativePath = FileUtil.getRelativePath(homeDir, pathElement)-->Line_37 $$ add(new Property(BuildProperties.getJdkBinProperty(jdkName), propertyRef(jdkHomeProperty) + "/" + FileUtil.toSystemIndependentName(relativePath)), 1)[ FD ]
Line_15 $$ File homeDir-->Line_35 $$ final String relativePath = FileUtil.getRelativePath(homeDir, binPath)[ FD ]
Line_6 $$ for (final Sdk jdk : jdks) -->Line_14 $$ final File home = VfsUtil.virtualToIoFile(jdk.getHomeDirectory())[ FD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_3 $$ final Sdk[] jdks = getUsedJdks(project)[ CD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_47 $$ add(new Property(PROPERTY_PROJECT_JDK_HOME, projectJdk != null ? propertyRef(getJdkHomeProperty(projectJdk.getName())) : ""), 1)[ CD ]
Line_4 $$ if (jdks.length > 0) -->Line_5 $$ add(new Comment(CompilerBundle.message("generated.ant.build.jdk.definitions.comment")), 1)[ CD ]
Line_41 $$ final Path jdkPath = new Path(getJdkPathId(jdkName))-->Line_42 $$ jdkPath.add(fileSet)[ FD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_46 $$ final Sdk projectJdk = ProjectRootManager.getInstance(project).getProjectSdk()[ CD ]
Line_24 $$ final FileSet fileSet = new FileSet(propertyRef(jdkHomeProperty))-->Line_31 $$ fileSet.add(new Include(relativePath.replace(File.separatorChar, '/')))[ FD ]
Line_41 $$ final Path jdkPath = new Path(getJdkPathId(jdkName))-->Line_43 $$ add(jdkPath)[ FD ]
Line_30 $$ if (relativePath != null) -->Line_31 $$ fileSet.add(new Include(relativePath.replace(File.separatorChar, '/')))[ CD ]
Line_6 $$ for (final Sdk jdk : jdks) -->Line_25 $$ final String[] urls = jdk.getRootProvider().getUrls(OrderRootType.CLASSES)[ FD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_48 $$ add(new Property(PROPERTY_PROJECT_JDK_BIN, projectJdk != null ? propertyRef(getJdkBinProperty(projectJdk.getName())) : ""))[ CD ]
Line_23 $$ final String jdkHomeProperty = getJdkHomeProperty(jdkName)-->Line_37 $$ add(new Property(BuildProperties.getJdkBinProperty(jdkName), propertyRef(jdkHomeProperty) + "/" + FileUtil.toSystemIndependentName(relativePath)), 1)[ FD ]
Line_29 $$ final String relativePath = FileUtil.getRelativePath(homeDir, pathElement)-->Line_36 $$ if (relativePath != null) [ FD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_3 $$ final Sdk[] jdks = getUsedJdks(project)[ FD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_49 $$ add(new Property(PROPERTY_PROJECT_JDK_CLASSPATH, projectJdk != null ? getJdkPathId(projectJdk.getName()) : ""))[ CD ]
Line_22 $$ final String jdkName = jdk.getName()-->Line_37 $$ add(new Property(BuildProperties.getJdkBinProperty(jdkName), propertyRef(jdkHomeProperty) + "/" + FileUtil.toSystemIndependentName(relativePath)), 1)[ FD ]
Line_6 $$ for (final Sdk jdk : jdks) -->Line_22 $$ final String jdkName = jdk.getName()[ FD ]
Line_36 $$ if (relativePath != null) -->Line_39 $$ add(new Property(BuildProperties.getJdkBinProperty(jdkName), FileUtil.toSystemIndependentName(binPath.getPath())), 1)[ CD ]
Line_15 $$ File homeDir-->Line_20 $$ homeDir = home[ FD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_46 $$ final Sdk projectJdk = ProjectRootManager.getInstance(project).getProjectSdk()[ FD ]
Line_6 $$ for (final Sdk jdk : jdks) -->Line_7 $$ if (jdk.getHomeDirectory() == null) [ FD ]
Line_29 $$ final String relativePath = FileUtil.getRelativePath(homeDir, pathElement)-->Line_30 $$ if (relativePath != null) [ FD ]
Line_28 $$ final File pathElement = new File(path)-->Line_29 $$ final String relativePath = FileUtil.getRelativePath(homeDir, pathElement)[ FD ]
Line_6 $$ for (final Sdk jdk : jdks) -->Line_11 $$ if (!(sdkType instanceof JavaSdkType) || ((JavaSdkType) sdkType).getBinPath(jdk) == null) [ FD ]
Line_14 $$ final File home = VfsUtil.virtualToIoFile(jdk.getHomeDirectory())-->Line_20 $$ homeDir = home[ FD ]
Line_22 $$ final String jdkName = jdk.getName()-->Line_23 $$ final String jdkHomeProperty = getJdkHomeProperty(jdkName)[ FD ]
Line_20 $$ homeDir = home-->Line_29 $$ final String relativePath = FileUtil.getRelativePath(homeDir, pathElement)[ FD ]
Line_46 $$ final Sdk projectJdk = ProjectRootManager.getInstance(project).getProjectSdk()-->Line_47 $$ add(new Property(PROPERTY_PROJECT_JDK_HOME, projectJdk != null ? propertyRef(getJdkHomeProperty(projectJdk.getName())) : ""), 1)[ FD ]
Line_46 $$ final Sdk projectJdk = ProjectRootManager.getInstance(project).getProjectSdk()-->Line_49 $$ add(new Property(PROPERTY_PROJECT_JDK_CLASSPATH, projectJdk != null ? getJdkPathId(projectJdk.getName()) : ""))[ FD ]
Line_20 $$ homeDir = home-->Line_35 $$ final String relativePath = FileUtil.getRelativePath(homeDir, binPath)[ FD ]
Line_15 $$ File homeDir-->Line_29 $$ final String relativePath = FileUtil.getRelativePath(homeDir, pathElement)[ FD ]
Line_24 $$ final FileSet fileSet = new FileSet(propertyRef(jdkHomeProperty))-->Line_42 $$ jdkPath.add(fileSet)[ FD ]
Line_34 $$ final File binPath = toCanonicalFile(new File(((JavaSdkType) sdkType).getBinPath(jdk)))-->Line_39 $$ add(new Property(BuildProperties.getJdkBinProperty(jdkName), FileUtil.toSystemIndependentName(binPath.getPath())), 1)[ FD ]
Line_22 $$ final String jdkName = jdk.getName()-->Line_41 $$ final Path jdkPath = new Path(getJdkPathId(jdkName))[ FD ]
Line_6 $$ for (final Sdk jdk : jdks) -->Line_10 $$ final SdkTypeId sdkType = jdk.getSdkType()[ FD ]
Line_29 $$ final String relativePath = FileUtil.getRelativePath(homeDir, pathElement)-->Line_31 $$ fileSet.add(new Include(relativePath.replace(File.separatorChar, '/')))[ FD ]
Line_22 $$ final String jdkName = jdk.getName()-->Line_39 $$ add(new Property(BuildProperties.getJdkBinProperty(jdkName), FileUtil.toSystemIndependentName(binPath.getPath())), 1)[ FD ]
Line_26 $$ for (String url : urls) -->Line_27 $$ final String path = GenerationUtils.trimJarSeparator(VirtualFileManager.extractPath(url))[ FD ]
Line_36 $$ if (relativePath != null) -->Line_37 $$ add(new Property(BuildProperties.getJdkBinProperty(jdkName), propertyRef(jdkHomeProperty) + "/" + FileUtil.toSystemIndependentName(relativePath)), 1)[ CD ]
Line_23 $$ final String jdkHomeProperty = getJdkHomeProperty(jdkName)-->Line_24 $$ final FileSet fileSet = new FileSet(propertyRef(jdkHomeProperty))[ FD ]
Line_34 $$ final File binPath = toCanonicalFile(new File(((JavaSdkType) sdkType).getBinPath(jdk)))-->Line_35 $$ final String relativePath = FileUtil.getRelativePath(homeDir, binPath)[ FD ]
Line_6 $$ for (final Sdk jdk : jdks) -->Line_34 $$ final File binPath = toCanonicalFile(new File(((JavaSdkType) sdkType).getBinPath(jdk)))[ FD ]
Line_46 $$ final Sdk projectJdk = ProjectRootManager.getInstance(project).getProjectSdk()-->Line_48 $$ add(new Property(PROPERTY_PROJECT_JDK_BIN, projectJdk != null ? propertyRef(getJdkBinProperty(projectJdk.getName())) : ""))[ FD ]
Line_2 $$ protected void createJdkGenerators(final Project project) -->Line_4 $$ if (jdks.length > 0) [ CD ]
