Line_6 $$ String link = new File(TEST_DIR, "link").getPath().replaceAll("\\\\", "/")-->Line_9 $$ fail(String.format("did not receive expected failure creating symlink " + "with forward slashes in link: link = %s, target = %s", link, target))[ FD ]
Line_2 $$ public void testSymlinkRejectsForwardSlashesInLink() throws IOException -->Line_3 $$ File newFile = new File(TEST_DIR, "file")[ CD ]
Line_6 $$ String link = new File(TEST_DIR, "link").getPath().replaceAll("\\\\", "/")-->Line_8 $$ Shell.execCommand(Shell.WINUTILS, "symlink", link, target)[ FD ]
Line_5 $$ String target = newFile.getPath()-->Line_9 $$ fail(String.format("did not receive expected failure creating symlink " + "with forward slashes in link: link = %s, target = %s", link, target))[ FD ]
Line_3 $$ File newFile = new File(TEST_DIR, "file")-->Line_5 $$ String target = newFile.getPath()[ FD ]
Line_2 $$ public void testSymlinkRejectsForwardSlashesInLink() throws IOException -->Line_5 $$ String target = newFile.getPath()[ CD ]
Line_5 $$ String target = newFile.getPath()-->Line_8 $$ Shell.execCommand(Shell.WINUTILS, "symlink", link, target)[ FD ]
Line_2 $$ public void testSymlinkRejectsForwardSlashesInLink() throws IOException -->Line_6 $$ String link = new File(TEST_DIR, "link").getPath().replaceAll("\\\\", "/")[ CD ]
Line_2 $$ public void testSymlinkRejectsForwardSlashesInLink() throws IOException -->Line_4 $$ assertTrue(newFile.createNewFile())[ CD ]
Line_3 $$ File newFile = new File(TEST_DIR, "file")-->Line_4 $$ assertTrue(newFile.createNewFile())[ FD ]
