Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))-->Line_5 $$ assertTrue(targetFile.getPath(), targetFile.isDirectory())[ FD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_7 $$ final ProcessBuilder command = new ProcessBuilder("subst", substRoot, targetFile.getPath())[ CD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))[ CD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))[ FD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_10 $$ final File rootFile = new File(substRoot + "\\")[ CD ]
Line_8 $$ final int res = runCommand(command)-->Line_9 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_8 $$ final int res = runCommand(command)[ CD ]
Line_7 $$ final ProcessBuilder command = new ProcessBuilder("subst", substRoot, targetFile.getPath())-->Line_9 $$ assertEquals(command.command().toString(), 0, res)[ FD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_12 $$ return rootFile[ CD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_9 $$ assertEquals(command.command().toString(), 0, res)[ CD ]
Line_10 $$ final File rootFile = new File(substRoot + "\\")-->Line_11 $$ assertTrue("target=" + target + ", subst=" + rootFile, rootFile.isDirectory())[ FD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_11 $$ assertTrue("target=" + target + ", subst=" + rootFile, rootFile.isDirectory())[ CD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_3 $$ assertTrue(SystemInfo.isWindows)[ CD ]
Line_4 $$ final File targetFile = new File(FileUtil.toSystemDependentName(target))-->Line_7 $$ final ProcessBuilder command = new ProcessBuilder("subst", substRoot, targetFile.getPath())[ FD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_6 $$ final String substRoot = getFirstFreeDriveLetter() + ":"[ CD ]
Line_2 $$ public static File createSubst(@NotNull String target) throws InterruptedException, IOException -->Line_5 $$ assertTrue(targetFile.getPath(), targetFile.isDirectory())[ CD ]
Line_7 $$ final ProcessBuilder command = new ProcessBuilder("subst", substRoot, targetFile.getPath())-->Line_8 $$ final int res = runCommand(command)[ FD ]
