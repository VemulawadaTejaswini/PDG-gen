Line_4 $$ final File f = new File(rootPath, "excludedDir/dir/anotherContentRoot")-->Line_17 $$ assertExcluded(LocalFileSystem.getInstance().findFileByIoFile(f.getParentFile().getParentFile()), myModule)[ FD ]
Line_2 $$ public void testProcessingNestedContentRootsOfExcludedDirsOnCreation() -->Line_18 $$ assertInProject(LocalFileSystem.getInstance().findFileByIoFile(f))[ CD ]
Line_4 $$ final File f = new File(rootPath, "excludedDir/dir/anotherContentRoot")-->Line_12 $$ ModuleRootModificationUtil.addContentRoot(myModule2, FileUtil.toSystemIndependentName(f.getPath()))[ FD ]
Line_2 $$ public void testProcessingNestedContentRootsOfExcludedDirsOnCreation() -->Line_4 $$ final File f = new File(rootPath, "excludedDir/dir/anotherContentRoot")[ CD ]
Line_4 $$ final File f = new File(rootPath, "excludedDir/dir/anotherContentRoot")-->Line_10 $$ rootModel.getContentEntries()[0].addExcludeFolder(VfsUtilCore.pathToUrl(FileUtil.toSystemIndependentName(f.getParentFile().getParent())))[ FD ]
Line_5 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_12 $$ ModuleRootModificationUtil.addContentRoot(myModule2, FileUtil.toSystemIndependentName(f.getPath()))[ CD ]
Line_5 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_9 $$ ModifiableRootModel rootModel = ModuleRootManager.getInstance(myModule).getModifiableModel()[ CD ]
Line_5 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_10 $$ rootModel.getContentEntries()[0].addExcludeFolder(VfsUtilCore.pathToUrl(FileUtil.toSystemIndependentName(f.getParentFile().getParent())))[ CD ]
Line_2 $$ public void testProcessingNestedContentRootsOfExcludedDirsOnCreation() -->Line_17 $$ assertExcluded(LocalFileSystem.getInstance().findFileByIoFile(f.getParentFile().getParentFile()), myModule)[ CD ]
Line_9 $$ ModifiableRootModel rootModel = ModuleRootManager.getInstance(myModule).getModifiableModel()-->Line_10 $$ rootModel.getContentEntries()[0].addExcludeFolder(VfsUtilCore.pathToUrl(FileUtil.toSystemIndependentName(f.getParentFile().getParent())))[ FD ]
Line_2 $$ public void testProcessingNestedContentRootsOfExcludedDirsOnCreation() -->Line_3 $$ String rootPath = myModule1Dir.getPath()[ CD ]
Line_9 $$ ModifiableRootModel rootModel = ModuleRootManager.getInstance(myModule).getModifiableModel()-->Line_11 $$ rootModel.commit()[ FD ]
Line_2 $$ public void testProcessingNestedContentRootsOfExcludedDirsOnCreation() -->Line_5 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_5 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_13 $$ assertTrue(f.getPath(), f.exists() || f.mkdirs())[ CD ]
Line_4 $$ final File f = new File(rootPath, "excludedDir/dir/anotherContentRoot")-->Line_13 $$ assertTrue(f.getPath(), f.exists() || f.mkdirs())[ FD ]
Line_5 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_11 $$ rootModel.commit()[ CD ]
Line_5 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_14 $$ LocalFileSystem.getInstance().refresh(false)[ CD ]
Line_4 $$ final File f = new File(rootPath, "excludedDir/dir/anotherContentRoot")-->Line_18 $$ assertInProject(LocalFileSystem.getInstance().findFileByIoFile(f))[ FD ]
