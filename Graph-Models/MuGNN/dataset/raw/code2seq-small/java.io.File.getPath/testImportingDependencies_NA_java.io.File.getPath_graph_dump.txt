Line_3 $$ if (!hasMavenInstallation())-->Line_4 $$ return[ CD ]
Line_2 $$ public void testImportingDependencies() throws Exception -->Line_9 $$ importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>test</groupId>" + "      <artifactId>bom</artifactId>" + "      <version>1</version>" + "      <type>pom</type>" + "      <scope>import</scope>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>" + "<dependencies>" + "  <dependency>" + "    <groupId>junit</groupId>" + "    <artifactId>junit</artifactId>" + "  </dependency>" + "</dependencies>")[ CD ]
Line_2 $$ public void testImportingDependencies() throws Exception -->Line_10 $$ assertModuleLibDeps("project", "Maven: junit:junit:4.0")[ CD ]
Line_2 $$ public void testImportingDependencies() throws Exception -->Line_3 $$ if (!hasMavenInstallation())[ CD ]
Line_2 $$ public void testImportingDependencies() throws Exception -->Line_6 $$ updateSettingsXml("<localRepository>" + getRepositoryPath() + "</localRepository>")[ CD ]
Line_2 $$ public void testImportingDependencies() throws Exception -->Line_7 $$ createModulePom("__temp", "<groupId>test</groupId>" + "<artifactId>bom</artifactId>" + "<packaging>pom</packaging>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>junit</groupId>" + "      <artifactId>junit</artifactId>" + "      <version>4.0</version>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>")[ CD ]
Line_2 $$ public void testImportingDependencies() throws Exception -->Line_8 $$ executeGoal("__temp", "install")[ CD ]
Line_2 $$ public void testImportingDependencies() throws Exception -->Line_5 $$ setRepositoryPath(new File(myDir, "/repo").getPath())[ CD ]
