Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))-->Line_14 $$ dc.checkDirs()[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_17 $$ dc = new DirectoryCollection(dirs, 100.0F, 0)[ CD ]
Line_17 $$ dc = new DirectoryCollection(dirs, 100.0F, 0)-->Line_18 $$ dc.checkDirs()[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_16 $$ Assert.assertEquals(1, dc.getFailedDirs().size())[ CD ]
Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))-->Line_17 $$ dc = new DirectoryCollection(dirs, 100.0F, 0)[ FD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_17 $$ dc = new DirectoryCollection(dirs, 100.0F, 0)[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_14 $$ dc.checkDirs()[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_17 $$ dc = new DirectoryCollection(dirs, 100.0F, 0)[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_7 $$ Assert.assertEquals(0, dc.getGoodDirs().size())[ FD ]
Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))-->Line_19 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_14 $$ dc.checkDirs()[ CD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_20 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ CD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_6 $$ dc.checkDirs()[ FD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_20 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_19 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ FD ]
Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))-->Line_16 $$ Assert.assertEquals(1, dc.getFailedDirs().size())[ FD ]
Line_17 $$ dc = new DirectoryCollection(dirs, 100.0F, 0)-->Line_19 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_15 $$ Assert.assertEquals(0, dc.getGoodDirs().size())[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_10 $$ dc.checkDirs()[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)[ CD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_16 $$ Assert.assertEquals(1, dc.getFailedDirs().size())[ FD ]
Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))-->Line_20 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_18 $$ dc.checkDirs()[ CD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_19 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ CD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_6 $$ dc.checkDirs()[ CD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_11 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_12 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))[ CD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_18 $$ dc.checkDirs()[ FD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_19 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_10 $$ dc.checkDirs()[ CD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_8 $$ Assert.assertEquals(1, dc.getFailedDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_7 $$ Assert.assertEquals(0, dc.getGoodDirs().size())[ CD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_12 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ CD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_10 $$ dc.checkDirs()[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_8 $$ Assert.assertEquals(1, dc.getFailedDirs().size())[ CD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))[ FD ]
Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))-->Line_15 $$ Assert.assertEquals(0, dc.getGoodDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_11 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ CD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_18 $$ dc.checkDirs()[ FD ]
Line_17 $$ dc = new DirectoryCollection(dirs, 100.0F, 0)-->Line_20 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_15 $$ Assert.assertEquals(0, dc.getGoodDirs().size())[ CD ]
Line_13 $$ dc = new DirectoryCollection(dirs, testDir.getTotalSpace() / (1024 * 1024))-->Line_18 $$ dc.checkDirs()[ FD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_15 $$ Assert.assertEquals(0, dc.getGoodDirs().size())[ FD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_14 $$ dc.checkDirs()[ FD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_11 $$ Assert.assertEquals(1, dc.getGoodDirs().size())[ FD ]
Line_5 $$ DirectoryCollection dc = new DirectoryCollection(dirs, 0.0F)-->Line_20 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ FD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_12 $$ Assert.assertEquals(0, dc.getFailedDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_3 $$ String dirA = new File(testDir, "dirA").getPath()[ CD ]
Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)-->Line_16 $$ Assert.assertEquals(1, dc.getFailedDirs().size())[ FD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_9 $$ dc = new DirectoryCollection(dirs, 100.0F)[ CD ]
Line_2 $$ public void testDiskSpaceUtilizationLimit() throws IOException -->Line_4 $$ String[] dirs = [ CD ]
