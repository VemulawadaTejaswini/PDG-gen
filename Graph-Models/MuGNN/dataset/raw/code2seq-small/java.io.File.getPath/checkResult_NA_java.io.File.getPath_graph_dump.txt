Line_6 $$ Dimension size = editorComponent.getPreferredSize()-->Line_7 $$ editorComponent.setSize(size)[ FD ]
Line_23 $$ BufferedImage expectedResult = ImageIO.read(fileWithExpectedResult)-->Line_31 $$ for (int j = 0; j < expectedResult.getHeight(); j++) [ FD ]
Line_30 $$ for (int i = 0; i < expectedResult.getWidth(); i++) -->Line_32 $$ if (expectedResult.getRGB(i, j) != image.getRGB(i, j)) [ FD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_3 $$ myEditor.getSettings().setAdditionalLinesCount(0)[ CD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_7 $$ editorComponent.setSize(size)[ CD ]
Line_31 $$ for (int j = 0; j < expectedResult.getHeight(); j++) -->Line_32 $$ if (expectedResult.getRGB(i, j) != image.getRGB(i, j)) [ FD ]
Line_18 $$ if (OVERWRITE_TESTDATA) -->Line_20 $$ System.out.println("File " + fileWithExpectedResult.getPath() + " created.")[ CD ]
Line_5 $$ JComponent editorComponent = myEditor.getContentComponent()-->Line_6 $$ Dimension size = editorComponent.getPreferredSize()[ FD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_33 $$ fail("Unexpected image contents", fileWithExpectedResult, image)[ FD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_20 $$ System.out.println("File " + fileWithExpectedResult.getPath() + " created.")[ FD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_22 $$ if (fileWithExpectedResult.exists()) [ FD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_11 $$ MyGraphics graphics = new MyGraphics(image.createGraphics(), bitmapFont)[ CD ]
Line_23 $$ BufferedImage expectedResult = ImageIO.read(fileWithExpectedResult)-->Line_27 $$ if (expectedResult.getHeight() != image.getHeight()) [ FD ]
Line_23 $$ BufferedImage expectedResult = ImageIO.read(fileWithExpectedResult)-->Line_30 $$ for (int i = 0; i < expectedResult.getWidth(); i++) [ FD ]
Line_31 $$ for (int j = 0; j < expectedResult.getHeight(); j++) -->Line_32 $$ if (expectedResult.getRGB(i, j) != image.getRGB(i, j)) [ CD ]
Line_30 $$ for (int i = 0; i < expectedResult.getWidth(); i++) -->Line_31 $$ for (int j = 0; j < expectedResult.getHeight(); j++) [ CD ]
Line_22 $$ if (fileWithExpectedResult.exists()) -->Line_24 $$ if (expectedResult.getWidth() != image.getWidth()) [ CD ]
Line_24 $$ if (expectedResult.getWidth() != image.getWidth()) -->Line_25 $$ fail("Unexpected image width", fileWithExpectedResult, image)[ CD ]
Line_23 $$ BufferedImage expectedResult = ImageIO.read(fileWithExpectedResult)-->Line_32 $$ if (expectedResult.getRGB(i, j) != image.getRGB(i, j)) [ FD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_28 $$ fail("Unexpected image height", fileWithExpectedResult, image)[ FD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_25 $$ fail("Unexpected image width", fileWithExpectedResult, image)[ FD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_38 $$ ImageIO.write(image, "png", fileWithExpectedResult)[ FD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_39 $$ fail("Missing test data created: " + fileWithExpectedResult.getPath())[ FD ]
Line_18 $$ if (OVERWRITE_TESTDATA) -->Line_19 $$ ImageIO.write(image, "png", fileWithExpectedResult)[ CD ]
Line_22 $$ if (fileWithExpectedResult.exists()) -->Line_23 $$ BufferedImage expectedResult = ImageIO.read(fileWithExpectedResult)[ CD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)[ FD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_4 $$ myEditor.getSettings().setAdditionalColumnsCount(1)[ CD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_6 $$ Dimension size = editorComponent.getPreferredSize()[ CD ]
Line_23 $$ BufferedImage expectedResult = ImageIO.read(fileWithExpectedResult)-->Line_24 $$ if (expectedResult.getWidth() != image.getWidth()) [ FD ]
Line_11 $$ MyGraphics graphics = new MyGraphics(image.createGraphics(), bitmapFont)-->Line_13 $$ editorComponent.paint(graphics)[ FD ]
Line_22 $$ if (fileWithExpectedResult.exists()) -->Line_39 $$ fail("Missing test data created: " + fileWithExpectedResult.getPath())[ CD ]
Line_22 $$ if (fileWithExpectedResult.exists()) -->Line_38 $$ ImageIO.write(image, "png", fileWithExpectedResult)[ CD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_10 $$ BitmapFont bitmapFont = BitmapFont.loadFromFile(getFontFile())[ CD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_19 $$ ImageIO.write(image, "png", fileWithExpectedResult)[ FD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_18 $$ if (OVERWRITE_TESTDATA) [ CD ]
Line_5 $$ JComponent editorComponent = myEditor.getContentComponent()-->Line_13 $$ editorComponent.paint(graphics)[ FD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_22 $$ if (fileWithExpectedResult.exists()) [ CD ]
Line_22 $$ if (fileWithExpectedResult.exists()) -->Line_27 $$ if (expectedResult.getHeight() != image.getHeight()) [ CD ]
Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)-->Line_23 $$ BufferedImage expectedResult = ImageIO.read(fileWithExpectedResult)[ FD ]
Line_22 $$ if (fileWithExpectedResult.exists()) -->Line_30 $$ for (int i = 0; i < expectedResult.getWidth(); i++) [ CD ]
Line_11 $$ MyGraphics graphics = new MyGraphics(image.createGraphics(), bitmapFont)-->Line_15 $$ graphics.dispose()[ FD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_5 $$ JComponent editorComponent = myEditor.getContentComponent()[ CD ]
Line_2 $$ private void checkResult(@TestDataFile String expectedResultFileName) throws IOException -->Line_17 $$ File fileWithExpectedResult = getTestDataFile(expectedResultFileName)[ CD ]
Line_32 $$ if (expectedResult.getRGB(i, j) != image.getRGB(i, j)) -->Line_33 $$ fail("Unexpected image contents", fileWithExpectedResult, image)[ CD ]
Line_27 $$ if (expectedResult.getHeight() != image.getHeight()) -->Line_28 $$ fail("Unexpected image height", fileWithExpectedResult, image)[ CD ]
Line_5 $$ JComponent editorComponent = myEditor.getContentComponent()-->Line_7 $$ editorComponent.setSize(size)[ FD ]
