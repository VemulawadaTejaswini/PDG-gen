Line_10 $$ final String target = FileSystemUtil.resolveSymLink(file)-->Line_11 $$ assertEquals(file.getPath(), target)[ FD ]
Line_2 $$ public void special() throws Exception -->Line_8 $$ assertEquals(0, attributes.length)[ CD ]
Line_4 $$ final File file = new File("/dev/null")-->Line_10 $$ final String target = FileSystemUtil.resolveSymLink(file)[ FD ]
Line_2 $$ public void special() throws Exception -->Line_5 $$ final FileAttributes attributes = getAttributes(file)[ CD ]
Line_2 $$ public void special() throws Exception -->Line_4 $$ final File file = new File("/dev/null")[ CD ]
Line_2 $$ public void special() throws Exception -->Line_9 $$ assertTrue(attributes.isWritable())[ CD ]
Line_2 $$ public void special() throws Exception -->Line_11 $$ assertEquals(file.getPath(), target)[ CD ]
Line_5 $$ final FileAttributes attributes = getAttributes(file)-->Line_9 $$ assertTrue(attributes.isWritable())[ FD ]
Line_4 $$ final File file = new File("/dev/null")-->Line_11 $$ assertEquals(file.getPath(), target)[ FD ]
Line_2 $$ public void special() throws Exception -->Line_7 $$ assertEquals(0, attributes.flags)[ CD ]
Line_2 $$ public void special() throws Exception -->Line_6 $$ assertEquals(FileAttributes.Type.SPECIAL, attributes.type)[ CD ]
Line_2 $$ public void special() throws Exception -->Line_3 $$ assumeTrue(SystemInfo.isUnix)[ CD ]
Line_2 $$ public void special() throws Exception -->Line_10 $$ final String target = FileSystemUtil.resolveSymLink(file)[ CD ]
Line_4 $$ final File file = new File("/dev/null")-->Line_5 $$ final FileAttributes attributes = getAttributes(file)[ FD ]
