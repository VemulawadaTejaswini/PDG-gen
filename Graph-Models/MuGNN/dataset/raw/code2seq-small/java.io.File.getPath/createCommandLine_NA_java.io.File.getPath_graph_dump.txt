Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_4 $$ args.add("-cp")[ FD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_18 $$ args.add(option)[ FD ]
Line_10 $$ for (Iterator<String> iterator = params.iterator(); iterator.hasNext(); ) -->Line_11 $$ String option = iterator.next()[ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_5 $$ args.add(getClasspathString(chunk))[ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_26 $$ return args[ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_8 $$ args.add(mainOutputDir)[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_8 $$ args.add(mainOutputDir)[ FD ]
Line_10 $$ for (Iterator<String> iterator = params.iterator(); iterator.hasNext(); ) -->Line_18 $$ args.add(option)[ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_9 $$ List<String> params = ParametersListUtil.parse(settings.cmdLineParams)[ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_6 $$ JavaBuilder.addCompilationOptions(args, context, chunk, profile)[ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_7 $$ args.add("-d")[ CD ]
Line_11 $$ String option = iterator.next()-->Line_12 $$ if ("-target".equals(option)) [ FD ]
Line_12 $$ if ("-target".equals(option)) -->Line_15 $$ if (option.isEmpty() || "-g".equals(option) || "-verbose".equals(option)) [ CD ]
Line_11 $$ String option = iterator.next()-->Line_15 $$ if (option.isEmpty() || "-g".equals(option) || "-verbose".equals(option)) [ FD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_21 $$ args.add("-g")[ FD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_3 $$ final List<String> args = new ArrayList<String>()[ CD ]
Line_10 $$ for (Iterator<String> iterator = params.iterator(); iterator.hasNext(); ) -->Line_13 $$ iterator.next()[ FD ]
Line_11 $$ String option = iterator.next()-->Line_18 $$ args.add(option)[ FD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_7 $$ args.add("-d")[ FD ]
Line_10 $$ for (Iterator<String> iterator = params.iterator(); iterator.hasNext(); ) -->Line_12 $$ if ("-target".equals(option)) [ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_20 $$ if (settings.debugInfo) [ FD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_6 $$ JavaBuilder.addCompilationOptions(args, context, chunk, profile)[ FD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_4 $$ args.add("-cp")[ CD ]
Line_23 $$ for (File file : srcFiles) -->Line_24 $$ args.add(file.getPath())[ FD ]
Line_20 $$ if (settings.debugInfo) -->Line_21 $$ args.add("-g")[ CD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_24 $$ args.add(file.getPath())[ FD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_6 $$ JavaBuilder.addCompilationOptions(args, context, chunk, profile)[ FD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_10 $$ for (Iterator<String> iterator = params.iterator(); iterator.hasNext(); ) [ CD ]
Line_12 $$ if ("-target".equals(option)) -->Line_13 $$ iterator.next()[ CD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_5 $$ args.add(getClasspathString(chunk))[ FD ]
Line_10 $$ for (Iterator<String> iterator = params.iterator(); iterator.hasNext(); ) -->Line_11 $$ String option = iterator.next()[ FD ]
Line_3 $$ final List<String> args = new ArrayList<String>()-->Line_5 $$ args.add(getClasspathString(chunk))[ FD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_8 $$ args.add(mainOutputDir)[ FD ]
Line_2 $$ private static List<String> createCommandLine(CompileContext context, ModuleChunk chunk, List<File> srcFiles, String mainOutputDir, @Nullable ProcessorConfigProfile profile, GreclipseSettings settings) -->Line_20 $$ if (settings.debugInfo) [ CD ]
Line_9 $$ List<String> params = ParametersListUtil.parse(settings.cmdLineParams)-->Line_10 $$ for (Iterator<String> iterator = params.iterator(); iterator.hasNext(); ) [ FD ]
