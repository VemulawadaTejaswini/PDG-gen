Line_4 $$ final FilePath filePath = ChangesUtil.getFilePath(change)-->Line_6 $$ VirtualFile vFile = filePath.getVirtualFile()[ FD ]
Line_4 $$ final FilePath filePath = ChangesUtil.getFilePath(change)-->Line_5 $$ final String fileName = filePath.getName()[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_10 $$ final Color changeColor = change.getFileStatus().getColor()[ CD ]
Line_3 $$ final Change change = getUserObject()-->Line_8 $$ myDecorator.preDecorate(change, renderer, renderer.isShowFlatten())[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_6 $$ VirtualFile vFile = filePath.getVirtualFile()[ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_11 $$ renderer.appendFileName(vFile, fileName, changeColor)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_19 $$ renderer.append(spaceAndThinSpace() + FileUtil.getLocationRelativeToUserHome(parentFile.getPath()), SimpleTextAttributes.GRAYED_ATTRIBUTES)[ FD ]
Line_29 $$ if (addIcon != null) -->Line_32 $$ if (filePath.isDirectory() || !isLeaf()) [ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_14 $$ renderer.append(spaceAndThinSpace() + originText, SimpleTextAttributes.REGULAR_ATTRIBUTES)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_13 $$ if (originText != null) [ CD ]
Line_16 $$ if (renderer.isShowFlatten()) -->Line_18 $$ if (parentFile != null) [ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_11 $$ renderer.appendFileName(vFile, fileName, changeColor)[ CD ]
Line_3 $$ final Change change = getUserObject()-->Line_4 $$ final FilePath filePath = ChangesUtil.getFilePath(change)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_5 $$ final String fileName = filePath.getName()[ CD ]
Line_3 $$ final Change change = getUserObject()-->Line_28 $$ final Icon addIcon = change.getAdditionalIcon()[ FD ]
Line_3 $$ final Change change = getUserObject()-->Line_39 $$ myDecorator.decorate(change, renderer, renderer.isShowFlatten())[ FD ]
Line_12 $$ final String originText = change.getOriginText(myProject)-->Line_13 $$ if (originText != null) [ FD ]
Line_16 $$ if (renderer.isShowFlatten()) -->Line_22 $$ if (getCount() != 1 || getDirectoryCount() != 0) [ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_33 $$ renderer.setIcon(PlatformIcons.DIRECTORY_CLOSED_ICON)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_7 $$ if (myDecorator != null) [ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_8 $$ myDecorator.preDecorate(change, renderer, renderer.isShowFlatten())[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_16 $$ if (renderer.isShowFlatten()) [ CD ]
Line_22 $$ if (getCount() != 1 || getDirectoryCount() != 0) -->Line_24 $$ appendCount(renderer)[ CD ]
Line_4 $$ final FilePath filePath = ChangesUtil.getFilePath(change)-->Line_35 $$ renderer.setIcon(filePath.getFileType().getIcon())[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_28 $$ final Icon addIcon = change.getAdditionalIcon()[ CD ]
Line_28 $$ final Icon addIcon = change.getAdditionalIcon()-->Line_30 $$ renderer.setIcon(addIcon)[ FD ]
Line_38 $$ if (myDecorator != null) -->Line_39 $$ myDecorator.decorate(change, renderer, renderer.isShowFlatten())[ CD ]
Line_4 $$ final FilePath filePath = ChangesUtil.getFilePath(change)-->Line_17 $$ final File parentFile = filePath.getIOFile().getParentFile()[ FD ]
Line_16 $$ if (renderer.isShowFlatten()) -->Line_21 $$ appendSwitched(renderer)[ CD ]
Line_3 $$ final Change change = getUserObject()-->Line_10 $$ final Color changeColor = change.getFileStatus().getColor()[ FD ]
Line_10 $$ final Color changeColor = change.getFileStatus().getColor()-->Line_11 $$ renderer.appendFileName(vFile, fileName, changeColor)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_38 $$ if (myDecorator != null) [ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_30 $$ renderer.setIcon(addIcon)[ FD ]
Line_22 $$ if (getCount() != 1 || getDirectoryCount() != 0) -->Line_26 $$ appendSwitched(renderer)[ CD ]
Line_3 $$ final Change change = getUserObject()-->Line_12 $$ final String originText = change.getOriginText(myProject)[ FD ]
Line_32 $$ if (filePath.isDirectory() || !isLeaf()) -->Line_33 $$ renderer.setIcon(PlatformIcons.DIRECTORY_CLOSED_ICON)[ CD ]
Line_18 $$ if (parentFile != null) -->Line_19 $$ renderer.append(spaceAndThinSpace() + FileUtil.getLocationRelativeToUserHome(parentFile.getPath()), SimpleTextAttributes.GRAYED_ATTRIBUTES)[ CD ]
Line_16 $$ if (renderer.isShowFlatten()) -->Line_17 $$ final File parentFile = filePath.getIOFile().getParentFile()[ CD ]
Line_13 $$ if (originText != null) -->Line_14 $$ renderer.append(spaceAndThinSpace() + originText, SimpleTextAttributes.REGULAR_ATTRIBUTES)[ CD ]
Line_22 $$ if (getCount() != 1 || getDirectoryCount() != 0) -->Line_23 $$ appendSwitched(renderer)[ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_26 $$ appendSwitched(renderer)[ FD ]
Line_17 $$ final File parentFile = filePath.getIOFile().getParentFile()-->Line_18 $$ if (parentFile != null) [ FD ]
Line_7 $$ if (myDecorator != null) -->Line_8 $$ myDecorator.preDecorate(change, renderer, renderer.isShowFlatten())[ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_35 $$ renderer.setIcon(filePath.getFileType().getIcon())[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_16 $$ if (renderer.isShowFlatten()) [ FD ]
Line_29 $$ if (addIcon != null) -->Line_30 $$ renderer.setIcon(addIcon)[ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_29 $$ if (addIcon != null) [ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_24 $$ appendCount(renderer)[ FD ]
Line_32 $$ if (filePath.isDirectory() || !isLeaf()) -->Line_35 $$ renderer.setIcon(filePath.getFileType().getIcon())[ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_12 $$ final String originText = change.getOriginText(myProject)[ CD ]
Line_4 $$ final FilePath filePath = ChangesUtil.getFilePath(change)-->Line_32 $$ if (filePath.isDirectory() || !isLeaf()) [ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_4 $$ final FilePath filePath = ChangesUtil.getFilePath(change)[ CD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_39 $$ myDecorator.decorate(change, renderer, renderer.isShowFlatten())[ FD ]
Line_5 $$ final String fileName = filePath.getName()-->Line_11 $$ renderer.appendFileName(vFile, fileName, changeColor)[ FD ]
Line_6 $$ VirtualFile vFile = filePath.getVirtualFile()-->Line_11 $$ renderer.appendFileName(vFile, fileName, changeColor)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_23 $$ appendSwitched(renderer)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_3 $$ final Change change = getUserObject()[ CD ]
Line_17 $$ final File parentFile = filePath.getIOFile().getParentFile()-->Line_19 $$ renderer.append(spaceAndThinSpace() + FileUtil.getLocationRelativeToUserHome(parentFile.getPath()), SimpleTextAttributes.GRAYED_ATTRIBUTES)[ FD ]
Line_2 $$ public void render(final ChangesBrowserNodeRenderer renderer, final boolean selected, final boolean expanded, final boolean hasFocus) -->Line_21 $$ appendSwitched(renderer)[ FD ]
Line_28 $$ final Icon addIcon = change.getAdditionalIcon()-->Line_29 $$ if (addIcon != null) [ FD ]
