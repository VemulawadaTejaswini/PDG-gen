Line_7 $$ if (root != null) -->Line_8 $$ File libRoot = new File(root, "lib")[ CD ]
Line_10 $$ if (versionRoots != null && versionRoots.length == 1) -->Line_11 $$ libRoot = versionRoots[0][ CD ]
Line_5 $$ if (homePath != null) -->Line_6 $$ File root = PythonSdkType.getVirtualEnvRoot(homePath)[ CD ]
Line_2 $$ public static VirtualFile findVirtualEnvLibDir(Sdk sdk) -->Line_4 $$ String homePath = sdk.getHomePath()[ CD ]
Line_8 $$ File libRoot = new File(root, "lib")-->Line_11 $$ libRoot = versionRoots[0][ FD ]
Line_2 $$ public static VirtualFile findVirtualEnvLibDir(Sdk sdk) -->Line_4 $$ String homePath = sdk.getHomePath()[ FD ]
Line_8 $$ File libRoot = new File(root, "lib")-->Line_9 $$ File[] versionRoots = libRoot.listFiles()[ FD ]
Line_8 $$ File libRoot = new File(root, "lib")-->Line_14 $$ if (FileUtil.pathsEqual(file.getPath(), libRoot.getPath())) [ FD ]
Line_7 $$ if (root != null) -->Line_10 $$ if (versionRoots != null && versionRoots.length == 1) [ CD ]
Line_2 $$ public static VirtualFile findVirtualEnvLibDir(Sdk sdk) -->Line_3 $$ VirtualFile[] classVFiles = sdk.getRootProvider().getFiles(OrderRootType.CLASSES)[ CD ]
Line_14 $$ if (FileUtil.pathsEqual(file.getPath(), libRoot.getPath())) -->Line_15 $$ return file[ CD ]
Line_13 $$ for (VirtualFile file : classVFiles) -->Line_14 $$ if (FileUtil.pathsEqual(file.getPath(), libRoot.getPath())) [ FD ]
Line_11 $$ libRoot = versionRoots[0]-->Line_14 $$ if (FileUtil.pathsEqual(file.getPath(), libRoot.getPath())) [ FD ]
Line_2 $$ public static VirtualFile findVirtualEnvLibDir(Sdk sdk) -->Line_20 $$ return null[ CD ]
Line_2 $$ public static VirtualFile findVirtualEnvLibDir(Sdk sdk) -->Line_3 $$ VirtualFile[] classVFiles = sdk.getRootProvider().getFiles(OrderRootType.CLASSES)[ FD ]
Line_7 $$ if (root != null) -->Line_9 $$ File[] versionRoots = libRoot.listFiles()[ CD ]
Line_5 $$ if (homePath != null) -->Line_7 $$ if (root != null) [ CD ]
Line_4 $$ String homePath = sdk.getHomePath()-->Line_5 $$ if (homePath != null) [ FD ]
Line_4 $$ String homePath = sdk.getHomePath()-->Line_6 $$ File root = PythonSdkType.getVirtualEnvRoot(homePath)[ FD ]
Line_6 $$ File root = PythonSdkType.getVirtualEnvRoot(homePath)-->Line_7 $$ if (root != null) [ FD ]
Line_2 $$ public static VirtualFile findVirtualEnvLibDir(Sdk sdk) -->Line_5 $$ if (homePath != null) [ CD ]
