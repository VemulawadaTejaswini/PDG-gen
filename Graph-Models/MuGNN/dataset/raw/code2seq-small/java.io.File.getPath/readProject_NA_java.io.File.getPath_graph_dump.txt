Line_30 $$ MavenProject project = (MavenProject) p-->Line_37 $$ rootProject = project[ FD ]
Line_6 $$ MavenProject rootProject = null-->Line_37 $$ rootProject = project[ FD ]
Line_4 $$ ProfileManager globalProfileManager = request.getGlobalProfileManager()-->Line_5 $$ globalProfileManager.loadSettingsProfiles(request.getSettings())[ FD ]
Line_27 $$ if (result != null) -->Line_28 $$ MavenProjectBuilder builder = getComponent(MavenProjectBuilder.class)[ CD ]
Line_28 $$ MavenProjectBuilder builder = getComponent(MavenProjectBuilder.class)-->Line_32 $$ builder.calculateConcreteState(project, request.getProjectBuilderConfiguration(), false)[ FD ]
Line_8 $$ Object result = null-->Line_27 $$ if (result != null) [ FD ]
Line_14 $$ final Method getProjectsMethod = DefaultMaven.class.getDeclaredMethod("getProjects", MavenExecutionRequest.class)-->Line_15 $$ getProjectsMethod.setAccessible(true)[ FD ]
Line_10 $$ final File pomFile = new File(request.getPomFile())-->Line_11 $$ if (!pomFile.exists()) [ FD ]
Line_10 $$ final File pomFile = new File(request.getPomFile())-->Line_12 $$ throw new FileNotFoundException("File doesn't exist: " + pomFile.getPath())[ FD ]
Line_16 $$ Maven maven = getComponent(Maven.class)-->Line_17 $$ result = getProjectsMethod.invoke(maven, request)[ FD ]
Line_17 $$ result = getProjectsMethod.invoke(maven, request)-->Line_27 $$ if (result != null) [ FD ]
Line_30 $$ MavenProject project = (MavenProject) p-->Line_36 $$ if (project.isExecutionRoot()) [ FD ]
Line_14 $$ final Method getProjectsMethod = DefaultMaven.class.getDeclaredMethod("getProjects", MavenExecutionRequest.class)-->Line_17 $$ result = getProjectsMethod.invoke(maven, request)[ FD ]
Line_8 $$ Object result = null-->Line_17 $$ result = getProjectsMethod.invoke(maven, request)[ FD ]
Line_7 $$ final List<Exception> exceptions = new ArrayList<Exception>()-->Line_40 $$ if (rootProject == null && exceptions.isEmpty()) [ FD ]
Line_7 $$ final List<Exception> exceptions = new ArrayList<Exception>()-->Line_34 $$ exceptions.add(e)[ FD ]
Line_27 $$ if (result != null) -->Line_40 $$ if (rootProject == null && exceptions.isEmpty()) [ CD ]
Line_36 $$ if (project.isExecutionRoot()) -->Line_37 $$ rootProject = project[ CD ]
Line_30 $$ MavenProject project = (MavenProject) p-->Line_32 $$ builder.calculateConcreteState(project, request.getProjectBuilderConfiguration(), false)[ FD ]
