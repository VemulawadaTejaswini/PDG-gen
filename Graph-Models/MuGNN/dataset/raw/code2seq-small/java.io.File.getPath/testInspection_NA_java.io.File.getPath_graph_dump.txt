Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_7 $$ scope.invalidate()[ CD ]
Line_3 $$ VirtualFile sourceDir = copyDirectoryToProject(new File(testDir, "src").getPath(), "src")-->Line_4 $$ PsiDirectory psiDirectory = getPsiManager().findDirectory(sourceDir)[ FD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_6 $$ AnalysisScope scope = new AnalysisScope(psiDirectory)[ CD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_3 $$ VirtualFile sourceDir = copyDirectoryToProject(new File(testDir, "src").getPath(), "src")[ CD ]
Line_6 $$ AnalysisScope scope = new AnalysisScope(psiDirectory)-->Line_9 $$ GlobalInspectionContextForTests globalContext = createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrapper)[ FD ]
Line_6 $$ AnalysisScope scope = new AnalysisScope(psiDirectory)-->Line_10 $$ InspectionTestUtil.runTool(toolWrapper, scope, globalContext)[ FD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_10 $$ InspectionTestUtil.runTool(toolWrapper, scope, globalContext)[ CD ]
Line_6 $$ AnalysisScope scope = new AnalysisScope(psiDirectory)-->Line_7 $$ scope.invalidate()[ FD ]
Line_8 $$ InspectionManagerEx inspectionManager = (InspectionManagerEx) InspectionManager.getInstance(getProject())-->Line_9 $$ GlobalInspectionContextForTests globalContext = createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrapper)[ FD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_9 $$ GlobalInspectionContextForTests globalContext = createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrapper)[ CD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_5 $$ Assert.assertNotNull(psiDirectory)[ CD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_9 $$ GlobalInspectionContextForTests globalContext = createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrapper)[ FD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_4 $$ PsiDirectory psiDirectory = getPsiManager().findDirectory(sourceDir)[ CD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_8 $$ InspectionManagerEx inspectionManager = (InspectionManagerEx) InspectionManager.getInstance(getProject())[ CD ]
Line_9 $$ GlobalInspectionContextForTests globalContext = createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrapper)-->Line_11 $$ InspectionTestUtil.compareToolResults(globalContext, toolWrapper, false, new File(getTestDataPath(), testDir).getPath())[ FD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_11 $$ InspectionTestUtil.compareToolResults(globalContext, toolWrapper, false, new File(getTestDataPath(), testDir).getPath())[ FD ]
Line_9 $$ GlobalInspectionContextForTests globalContext = createGlobalContextForTool(scope, getProject(), inspectionManager, toolWrapper)-->Line_10 $$ InspectionTestUtil.runTool(toolWrapper, scope, globalContext)[ FD ]
Line_4 $$ PsiDirectory psiDirectory = getPsiManager().findDirectory(sourceDir)-->Line_5 $$ Assert.assertNotNull(psiDirectory)[ FD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_10 $$ InspectionTestUtil.runTool(toolWrapper, scope, globalContext)[ FD ]
Line_2 $$ public void testInspection(@NotNull String testDir, @NotNull InspectionToolWrapper toolWrapper) -->Line_11 $$ InspectionTestUtil.compareToolResults(globalContext, toolWrapper, false, new File(getTestDataPath(), testDir).getPath())[ CD ]
