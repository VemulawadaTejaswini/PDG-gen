Line_16 $$ VirtualFile target = myFS.refreshAndFindFileByIoFile(dstDir)-->Line_18 $$ myFS.moveFile(this, file, target)[ FD ]
Line_2 $$ public void testBrokenSymlinkMove() throws IOException, InterruptedException -->Line_3 $$ if (!SystemInfo.areSymLinksSupported) [ CD ]
Line_9 $$ final File dstDir = IoTestUtil.createTestDir("dst")-->Line_16 $$ VirtualFile target = myFS.refreshAndFindFileByIoFile(dstDir)[ FD ]
Line_7 $$ final File srcDir = IoTestUtil.createTestDir("src")-->Line_21 $$ assertOrderedEquals(ArrayUtil.EMPTY_STRING_ARRAY, srcDir.list())[ FD ]
Line_10 $$ new WriteAction() -->Line_18 $$ myFS.moveFile(this, file, target)[ CD ]
Line_9 $$ final File dstDir = IoTestUtil.createTestDir("dst")-->Line_22 $$ assertOrderedEquals(new String[] [ FD ]
Line_8 $$ final File link = IoTestUtil.createSymLink(srcDir.getPath() + "/missing", srcDir.getPath() + "/link", false)-->Line_22 $$ assertOrderedEquals(new String[] [ FD ]
Line_10 $$ new WriteAction() -->Line_17 $$ assertNotNull(target)[ CD ]
Line_10 $$ new WriteAction() -->Line_15 $$ assertNotNull(file)[ CD ]
Line_2 $$ public void testBrokenSymlinkMove() throws IOException, InterruptedException -->Line_22 $$ assertOrderedEquals(new String[] [ CD ]
Line_2 $$ public void testBrokenSymlinkMove() throws IOException, InterruptedException -->Line_7 $$ final File srcDir = IoTestUtil.createTestDir("src")[ CD ]
Line_2 $$ public void testBrokenSymlinkMove() throws IOException, InterruptedException -->Line_10 $$ new WriteAction() [ CD ]
Line_10 $$ new WriteAction() -->Line_14 $$ VirtualFile file = myFS.refreshAndFindFileByIoFile(link)[ CD ]
Line_8 $$ final File link = IoTestUtil.createSymLink(srcDir.getPath() + "/missing", srcDir.getPath() + "/link", false)-->Line_14 $$ VirtualFile file = myFS.refreshAndFindFileByIoFile(link)[ FD ]
Line_2 $$ public void testBrokenSymlinkMove() throws IOException, InterruptedException -->Line_8 $$ final File link = IoTestUtil.createSymLink(srcDir.getPath() + "/missing", srcDir.getPath() + "/link", false)[ CD ]
Line_2 $$ public void testBrokenSymlinkMove() throws IOException, InterruptedException -->Line_9 $$ final File dstDir = IoTestUtil.createTestDir("dst")[ CD ]
Line_2 $$ public void testBrokenSymlinkMove() throws IOException, InterruptedException -->Line_21 $$ assertOrderedEquals(ArrayUtil.EMPTY_STRING_ARRAY, srcDir.list())[ CD ]
Line_16 $$ VirtualFile target = myFS.refreshAndFindFileByIoFile(dstDir)-->Line_17 $$ assertNotNull(target)[ FD ]
Line_3 $$ if (!SystemInfo.areSymLinksSupported) -->Line_5 $$ return[ CD ]
Line_7 $$ final File srcDir = IoTestUtil.createTestDir("src")-->Line_8 $$ final File link = IoTestUtil.createSymLink(srcDir.getPath() + "/missing", srcDir.getPath() + "/link", false)[ FD ]
Line_10 $$ new WriteAction() -->Line_16 $$ VirtualFile target = myFS.refreshAndFindFileByIoFile(dstDir)[ CD ]
Line_14 $$ VirtualFile file = myFS.refreshAndFindFileByIoFile(link)-->Line_15 $$ assertNotNull(file)[ FD ]
Line_3 $$ if (!SystemInfo.areSymLinksSupported) -->Line_4 $$ System.err.println(getName() + " skipped: " + SystemInfo.OS_NAME)[ CD ]
Line_14 $$ VirtualFile file = myFS.refreshAndFindFileByIoFile(link)-->Line_18 $$ myFS.moveFile(this, file, target)[ FD ]
