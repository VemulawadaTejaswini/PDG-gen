Line_2 $$ protected String getMessage(String urlString) throws Exception -->Line_7 $$ return project.getProperty("github.post.comment.body")[ CD ]
Line_5 $$ Project project = getProject(new File(sampleDir, "sample.properties"), "", sampleDir.getPath())-->Line_6 $$ GitHubMessageUtil.getGitHubMessage(project)[ FD ]
Line_4 $$ File sampleDir = new File(localURLString.substring("file:".length()))-->Line_5 $$ Project project = getProject(new File(sampleDir, "sample.properties"), "", sampleDir.getPath())[ FD ]
Line_5 $$ Project project = getProject(new File(sampleDir, "sample.properties"), "", sampleDir.getPath())-->Line_7 $$ return project.getProperty("github.post.comment.body")[ FD ]
Line_2 $$ protected String getMessage(String urlString) throws Exception -->Line_5 $$ Project project = getProject(new File(sampleDir, "sample.properties"), "", sampleDir.getPath())[ CD ]
Line_2 $$ protected String getMessage(String urlString) throws Exception -->Line_3 $$ String localURLString = JenkinsResultsParserUtil.getLocalURL(urlString)[ CD ]
Line_2 $$ protected String getMessage(String urlString) throws Exception -->Line_6 $$ GitHubMessageUtil.getGitHubMessage(project)[ CD ]
Line_2 $$ protected String getMessage(String urlString) throws Exception -->Line_4 $$ File sampleDir = new File(localURLString.substring("file:".length()))[ CD ]
Line_3 $$ String localURLString = JenkinsResultsParserUtil.getLocalURL(urlString)-->Line_4 $$ File sampleDir = new File(localURLString.substring("file:".length()))[ FD ]
Line_2 $$ protected String getMessage(String urlString) throws Exception -->Line_3 $$ String localURLString = JenkinsResultsParserUtil.getLocalURL(urlString)[ FD ]
