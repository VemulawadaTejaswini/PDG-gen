Line_14 $$ for (File file : files) -->Line_15 $$ findModuleRoots(paths, file.getPath(), progressUpdater)[ FD ]
Line_6 $$ final String project = findProjectName(rootPath)-->Line_7 $$ if (project != null) [ FD ]
Line_11 $$ if (root.isDirectory()) -->Line_12 $$ final File[] files = root.listFiles()[ CD ]
Line_12 $$ final File[] files = root.listFiles()-->Line_13 $$ if (files != null) [ FD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_15 $$ findModuleRoots(paths, file.getPath(), progressUpdater)[ FD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_7 $$ if (project != null) [ CD ]
Line_11 $$ if (root.isDirectory()) -->Line_13 $$ if (files != null) [ CD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_6 $$ final String project = findProjectName(rootPath)[ CD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_11 $$ if (root.isDirectory()) [ CD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_4 $$ progressUpdater.process(rootPath)[ FD ]
Line_7 $$ if (project != null) -->Line_8 $$ paths.add(rootPath)[ CD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_3 $$ if (progressUpdater != null) [ CD ]
Line_3 $$ if (progressUpdater != null) -->Line_4 $$ progressUpdater.process(rootPath)[ CD ]
Line_10 $$ final File root = new File(rootPath)-->Line_11 $$ if (root.isDirectory()) [ FD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_8 $$ paths.add(rootPath)[ FD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_3 $$ if (progressUpdater != null) [ FD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_10 $$ final File root = new File(rootPath)[ CD ]
Line_2 $$ public static void findModuleRoots(final List<String> paths, final String rootPath, @Nullable Processor<String> progressUpdater) -->Line_6 $$ final String project = findProjectName(rootPath)[ FD ]
Line_10 $$ final File root = new File(rootPath)-->Line_12 $$ final File[] files = root.listFiles()[ FD ]
