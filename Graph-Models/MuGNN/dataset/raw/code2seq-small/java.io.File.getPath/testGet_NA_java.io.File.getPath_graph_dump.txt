Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_21 $$ args[args.length - 2] = remotef.toString()[ CD ]
Line_74 $$ if (null != cluster) -->Line_75 $$ cluster.shutdown()[ CD ]
Line_19 $$ String[] args = new String[options.length + 3]-->Line_28 $$ assertEquals(exitcode, shell.run(args))[ FD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_23 $$ for (int i = 0; i < options.length; i++) [ CD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_45 $$ assertEquals(localfcontent, runner.run(0, "-ignoreCrc"))[ FD ]
Line_7 $$ final Path remotef = new Path(root, fname)-->Line_42 $$ dfs.copyFromLocalFile(false, false, new Path(localf.getPath()), remotef)[ FD ]
Line_6 $$ Path root = new Path("/test/get")-->Line_41 $$ mkdir(dfs, root)[ FD ]
Line_7 $$ final Path remotef = new Path(root, fname)-->Line_21 $$ args[args.length - 2] = remotef.toString()[ FD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_63 $$ assertEquals(null, runner.run(1))[ FD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_19 $$ String[] args = new String[options.length + 3][ CD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_44 $$ assertEquals(localfcontent, runner.run(0))[ FD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_32 $$ return exitcode == 0 ? DFSTestUtil.readFile(new File(dst)) : null[ CD ]
Line_19 $$ String[] args = new String[options.length + 3]-->Line_26 $$ show("args=" + Arrays.asList(args))[ FD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_64 $$ String corruptedcontent = runner.run(0, "-ignoreCrc")[ FD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_28 $$ assertEquals(exitcode, shell.run(args))[ FD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_18 $$ String dst = new File(TEST_ROOT_DIR, fname + ++count).getAbsolutePath()[ CD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_22 $$ args[args.length - 1] = dst[ CD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_26 $$ show("args=" + Arrays.asList(args))[ CD ]
Line_11 $$ TestGetRunner runner = new TestGetRunner() -->Line_20 $$ args[0] = "-get"[ CD ]
Line_18 $$ String dst = new File(TEST_ROOT_DIR, fname + ++count).getAbsolutePath()-->Line_22 $$ args[args.length - 1] = dst[ FD ]
Line_23 $$ for (int i = 0; i < options.length; i++) -->Line_24 $$ args[i + 1] = options[i][ CD ]
