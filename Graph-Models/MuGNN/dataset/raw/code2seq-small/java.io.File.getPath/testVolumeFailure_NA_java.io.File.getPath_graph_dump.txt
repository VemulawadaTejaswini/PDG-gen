Line_47 $$ BlockListAsLongs blockList = kvPair.getValue()-->Line_48 $$ reports[reportIndex++] = new StorageBlockReport(dnStorage, blockList.getBlockListAsLongs())[ FD ]
Line_40 $$ DatanodeRegistration dnR = dn.getDNRegistrationForBP(bpid)-->Line_50 $$ cluster.getNameNodeRpc().blockReport(dnR, bpid, reports)[ FD ]
Line_9 $$ FileSystem fs = cluster.getFileSystem()-->Line_18 $$ DFSTestUtil.createFile(fs, filePath, filesize, repl, 1L)[ FD ]
Line_55 $$ Path fileName1 = new Path("/test1.txt")-->Line_59 $$ System.out.println("file " + fileName1.getName() + " is created and replicated")[ FD ]
Line_15 $$ Path filePath = new Path(filename)-->Line_19 $$ DFSTestUtil.waitReplication(fs, filePath, repl)[ FD ]
Line_39 $$ String bpid = cluster.getNamesystem().getBlockPoolId()-->Line_41 $$ Map<DatanodeStorage, BlockListAsLongs> perVolumeBlockLists = dn.getFSDataset().getBlockReports(bpid)[ FD ]
Line_45 $$ for (Map.Entry<DatanodeStorage, BlockListAsLongs> kvPair : perVolumeBlockLists.entrySet()) -->Line_47 $$ BlockListAsLongs blockList = kvPair.getValue()[ FD ]
Line_9 $$ FileSystem fs = cluster.getFileSystem()-->Line_19 $$ DFSTestUtil.waitReplication(fs, filePath, repl)[ FD ]
Line_15 $$ Path filePath = new Path(filename)-->Line_18 $$ DFSTestUtil.createFile(fs, filePath, filesize, repl, 1L)[ FD ]
Line_55 $$ Path fileName1 = new Path("/test1.txt")-->Line_56 $$ DFSTestUtil.createFile(fs, fileName1, filesize, repl, 1L)[ FD ]
Line_45 $$ for (Map.Entry<DatanodeStorage, BlockListAsLongs> kvPair : perVolumeBlockLists.entrySet()) -->Line_46 $$ DatanodeStorage dnStorage = kvPair.getKey()[ FD ]
Line_39 $$ String bpid = cluster.getNamesystem().getBlockPoolId()-->Line_40 $$ DatanodeRegistration dnR = dn.getDNRegistrationForBP(bpid)[ FD ]
Line_41 $$ Map<DatanodeStorage, BlockListAsLongs> perVolumeBlockLists = dn.getFSDataset().getBlockReports(bpid)-->Line_45 $$ for (Map.Entry<DatanodeStorage, BlockListAsLongs> kvPair : perVolumeBlockLists.entrySet()) [ FD ]
Line_39 $$ String bpid = cluster.getNamesystem().getBlockPoolId()-->Line_50 $$ cluster.getNameNodeRpc().blockReport(dnR, bpid, reports)[ FD ]
Line_44 $$ int reportIndex = 0-->Line_48 $$ reports[reportIndex++] = new StorageBlockReport(dnStorage, blockList.getBlockListAsLongs())[ FD ]
Line_9 $$ FileSystem fs = cluster.getFileSystem()-->Line_56 $$ DFSTestUtil.createFile(fs, fileName1, filesize, repl, 1L)[ FD ]
