Line_2 $$ public boolean isMatchingFile(File file, String checkXmlFile, boolean checkFileExtension) throws AutoDeployException -->Line_9 $$ if (zipFile.getEntry(checkXmlFile) == null) [ FD ]
Line_2 $$ public boolean isMatchingFile(File file, String checkXmlFile, boolean checkFileExtension) throws AutoDeployException -->Line_3 $$ if (checkFileExtension && !isMatchingFileExtension(file)) [ CD ]
Line_2 $$ public boolean isMatchingFile(File file, String checkXmlFile, boolean checkFileExtension) throws AutoDeployException -->Line_6 $$ ZipFile zipFile = null[ CD ]
Line_8 $$ zipFile = new ZipFile(file)-->Line_9 $$ if (zipFile.getEntry(checkXmlFile) == null) [ FD ]
Line_3 $$ if (checkFileExtension && !isMatchingFileExtension(file)) -->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean isMatchingFile(File file, String checkXmlFile, boolean checkFileExtension) throws AutoDeployException -->Line_3 $$ if (checkFileExtension && !isMatchingFileExtension(file)) [ FD ]
Line_8 $$ zipFile = new ZipFile(file)-->Line_20 $$ if (zipFile != null) [ FD ]
Line_6 $$ ZipFile zipFile = null-->Line_22 $$ zipFile.close()[ FD ]
Line_9 $$ if (zipFile.getEntry(checkXmlFile) == null) -->Line_10 $$ if (_log.isDebugEnabled()) [ CD ]
Line_2 $$ public boolean isMatchingFile(File file, String checkXmlFile, boolean checkFileExtension) throws AutoDeployException -->Line_11 $$ _log.debug(file.getPath() + " does not have " + checkXmlFile)[ FD ]
Line_6 $$ ZipFile zipFile = null-->Line_20 $$ if (zipFile != null) [ FD ]
Line_8 $$ zipFile = new ZipFile(file)-->Line_22 $$ zipFile.close()[ FD ]
Line_10 $$ if (_log.isDebugEnabled()) -->Line_11 $$ _log.debug(file.getPath() + " does not have " + checkXmlFile)[ CD ]
Line_6 $$ ZipFile zipFile = null-->Line_9 $$ if (zipFile.getEntry(checkXmlFile) == null) [ FD ]
Line_9 $$ if (zipFile.getEntry(checkXmlFile) == null) -->Line_13 $$ return false[ CD ]
Line_9 $$ if (zipFile.getEntry(checkXmlFile) == null) -->Line_15 $$ return true[ CD ]
Line_6 $$ ZipFile zipFile = null-->Line_8 $$ zipFile = new ZipFile(file)[ FD ]
