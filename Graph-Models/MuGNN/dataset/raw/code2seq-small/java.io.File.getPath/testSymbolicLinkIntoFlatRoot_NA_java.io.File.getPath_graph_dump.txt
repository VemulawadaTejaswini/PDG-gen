Line_3 $$ File rootDir = createTestDir("root")-->Line_10 $$ refresh(rootDir)[ FD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_5 $$ File bDir = createTestDir(aDir, "B")[ CD ]
Line_7 $$ File aLink = createSymLink(aDir.getPath(), rootDir.getPath() + "/aLink")-->Line_11 $$ LocalFileSystem.WatchRequest aLinkRequest = watch(aLink, false), cDirRequest = watch(cDir, false)[ FD ]
Line_11 $$ LocalFileSystem.WatchRequest aLinkRequest = watch(aLink, false), cDirRequest = watch(cDir, false)-->Line_20 $$ unwatch(aLinkRequest)[ FD ]
Line_4 $$ File aDir = createTestDir(rootDir, "A")-->Line_5 $$ File bDir = createTestDir(aDir, "B")[ FD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_8 $$ File flatWatchedFile = createTestFile(aLink, "test.txt")[ CD ]
Line_9 $$ File fileOutsideFlatWatchRoot = createTestFile(cDir, "test.txt")-->Line_17 $$ FileUtil.writeToFile(fileOutsideFlatWatchRoot, "new content")[ FD ]
Line_3 $$ File rootDir = createTestDir("root")-->Line_22 $$ delete(rootDir)[ FD ]
Line_6 $$ File cDir = createTestDir(bDir, "C")-->Line_11 $$ LocalFileSystem.WatchRequest aLinkRequest = watch(aLink, false), cDirRequest = watch(cDir, false)[ FD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_7 $$ File aLink = createSymLink(aDir.getPath(), rootDir.getPath() + "/aLink")[ CD ]
Line_3 $$ File rootDir = createTestDir("root")-->Line_7 $$ File aLink = createSymLink(aDir.getPath(), rootDir.getPath() + "/aLink")[ FD ]
Line_5 $$ File bDir = createTestDir(aDir, "B")-->Line_6 $$ File cDir = createTestDir(bDir, "C")[ FD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_11 $$ LocalFileSystem.WatchRequest aLinkRequest = watch(aLink, false), cDirRequest = watch(cDir, false)[ CD ]
Line_4 $$ File aDir = createTestDir(rootDir, "A")-->Line_7 $$ File aLink = createSymLink(aDir.getPath(), rootDir.getPath() + "/aLink")[ FD ]
Line_11 $$ LocalFileSystem.WatchRequest aLinkRequest = watch(aLink, false), cDirRequest = watch(cDir, false)-->Line_21 $$ unwatch(cDirRequest)[ FD ]
Line_8 $$ File flatWatchedFile = createTestFile(aLink, "test.txt")-->Line_15 $$ assertEvent(VFileContentChangeEvent.class, flatWatchedFile.getPath())[ FD ]
Line_6 $$ File cDir = createTestDir(bDir, "C")-->Line_9 $$ File fileOutsideFlatWatchRoot = createTestFile(cDir, "test.txt")[ FD ]
Line_3 $$ File rootDir = createTestDir("root")-->Line_4 $$ File aDir = createTestDir(rootDir, "A")[ FD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_6 $$ File cDir = createTestDir(bDir, "C")[ CD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_3 $$ File rootDir = createTestDir("root")[ CD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_10 $$ refresh(rootDir)[ CD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_9 $$ File fileOutsideFlatWatchRoot = createTestFile(cDir, "test.txt")[ CD ]
Line_2 $$ public void testSymbolicLinkIntoFlatRoot() throws Exception -->Line_4 $$ File aDir = createTestDir(rootDir, "A")[ CD ]
Line_8 $$ File flatWatchedFile = createTestFile(aLink, "test.txt")-->Line_14 $$ FileUtil.writeToFile(flatWatchedFile, "new content")[ FD ]
Line_7 $$ File aLink = createSymLink(aDir.getPath(), rootDir.getPath() + "/aLink")-->Line_8 $$ File flatWatchedFile = createTestFile(aLink, "test.txt")[ FD ]
Line_9 $$ File fileOutsideFlatWatchRoot = createTestFile(cDir, "test.txt")-->Line_18 $$ assertEvent(VFileContentChangeEvent.class, fileOutsideFlatWatchRoot.getPath())[ FD ]
