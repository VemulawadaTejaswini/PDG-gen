Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_33 $$ container.add(rootConfiguration)[ FD ]
Line_3 $$ if (directorySet == null)-->Line_4 $$ return[ CD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_5 $$ for (File file : directorySet.getSrcDirs()) [ FD ]
Line_28 $$ final ResourceRootFilter resourceRootFilter = new ResourceRootFilter()-->Line_31 $$ rootConfiguration.filters.add(resourceRootFilter)[ FD ]
Line_9 $$ final String target = directorySet.getOutputDir().getPath()-->Line_10 $$ rootConfiguration.targetPath = FileUtil.toSystemIndependentName(target)[ FD ]
Line_27 $$ for (ExternalFilter filter : directorySet.getFilters()) -->Line_29 $$ resourceRootFilter.filterType = filter.getFilterType()[ FD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_16 $$ for (String exclude : directorySet.getExcludes()) [ FD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_27 $$ for (ExternalFilter filter : directorySet.getFilters()) [ FD ]
Line_6 $$ final String dir = file.getPath()-->Line_8 $$ rootConfiguration.directory = FileUtil.toSystemIndependentName(dir)[ FD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_3 $$ if (directorySet == null)[ CD ]
Line_5 $$ for (File file : directorySet.getSrcDirs()) -->Line_6 $$ final String dir = file.getPath()[ FD ]
Line_7 $$ final ResourceRootConfiguration rootConfiguration = new ResourceRootConfiguration()-->Line_33 $$ container.add(rootConfiguration)[ FD ]
Line_12 $$ for (String include : directorySet.getIncludes()) -->Line_13 $$ rootConfiguration.includes.add(include.trim())[ FD ]
Line_5 $$ for (File file : directorySet.getSrcDirs()) -->Line_19 $$ if (sourcesDirectorySet != null && sourcesDirectorySet.getSrcDirs().contains(file)) [ FD ]
Line_16 $$ for (String exclude : directorySet.getExcludes()) -->Line_17 $$ rootConfiguration.excludes.add(exclude.trim())[ FD ]
Line_27 $$ for (ExternalFilter filter : directorySet.getFilters()) -->Line_30 $$ resourceRootFilter.properties = filter.getPropertiesAsJsonMap()[ FD ]
Line_19 $$ if (sourcesDirectorySet != null && sourcesDirectorySet.getSrcDirs().contains(file)) -->Line_21 $$ rootConfiguration.excludes.add("**/*.scala")[ CD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_12 $$ for (String include : directorySet.getIncludes()) [ FD ]
Line_19 $$ if (sourcesDirectorySet != null && sourcesDirectorySet.getSrcDirs().contains(file)) -->Line_23 $$ rootConfiguration.excludes.add("**/*.kt")[ CD ]
Line_19 $$ if (sourcesDirectorySet != null && sourcesDirectorySet.getSrcDirs().contains(file)) -->Line_20 $$ rootConfiguration.excludes.add("**/*.java")[ CD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_25 $$ rootConfiguration.isFiltered = !directorySet.getFilters().isEmpty()[ FD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_3 $$ if (directorySet == null)[ FD ]
Line_19 $$ if (sourcesDirectorySet != null && sourcesDirectorySet.getSrcDirs().contains(file)) -->Line_22 $$ rootConfiguration.excludes.add("**/*.groovy")[ CD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_19 $$ if (sourcesDirectorySet != null && sourcesDirectorySet.getSrcDirs().contains(file)) [ FD ]
Line_2 $$ private static void addResources(@NotNull List<ResourceRootConfiguration> container, @Nullable final ExternalSourceDirectorySet directorySet, @Nullable final ExternalSourceDirectorySet sourcesDirectorySet) -->Line_9 $$ final String target = directorySet.getOutputDir().getPath()[ FD ]
