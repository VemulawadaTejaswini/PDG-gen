Line_7 $$ final Project project = ProjectManager.getInstance().createProject("foo", foo.getPath())-->Line_11 $$ assertNotNull(FileTemplateManager.getInstance(project).getTemplate("foo.txt"))[ FD ]
Line_2 $$ public void testPreserveCustomTemplates() throws Exception -->Line_3 $$ myTemplateManager.addTemplate("foo", "txt")[ CD ]
Line_2 $$ public void testPreserveCustomTemplates() throws Exception -->Line_4 $$ myTemplateManager.setTemplates(FileTemplateManager.DEFAULT_TEMPLATES_CATEGORY, Arrays.asList(myTemplateManager.getAllTemplates()))[ CD ]
Line_7 $$ final Project project = ProjectManager.getInstance().createProject("foo", foo.getPath())-->Line_10 $$ assertNotNull(project)[ FD ]
Line_2 $$ public void testPreserveCustomTemplates() throws Exception -->Line_5 $$ assertNotNull(myTemplateManager.getTemplate("foo.txt"))[ CD ]
Line_6 $$ File foo = PlatformTestCase.createTempDir("foo")-->Line_7 $$ final Project project = ProjectManager.getInstance().createProject("foo", foo.getPath())[ FD ]
Line_2 $$ public void testPreserveCustomTemplates() throws Exception -->Line_6 $$ File foo = PlatformTestCase.createTempDir("foo")[ CD ]
Line_7 $$ final Project project = ProjectManager.getInstance().createProject("foo", foo.getPath())-->Line_13 $$ closeProject(project)[ FD ]
Line_2 $$ public void testPreserveCustomTemplates() throws Exception -->Line_7 $$ final Project project = ProjectManager.getInstance().createProject("foo", foo.getPath())[ CD ]
