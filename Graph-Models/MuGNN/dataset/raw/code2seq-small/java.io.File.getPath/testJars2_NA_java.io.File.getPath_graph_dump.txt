Line_4 $$ final File jarParent = new File(tempDir, "jarParent")-->Line_5 $$ jarParent.mkdir()[ FD ]
Line_12 $$ final VirtualFilePointerListener listener = new VirtualFilePointerListener() -->Line_16 $$ verifyPointersInCorrectState(pointersToWatch)[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_30 $$ refreshVFS()[ CD ]
Line_4 $$ final File jarParent = new File(tempDir, "jarParent")-->Line_34 $$ jarParent.mkdir()[ FD ]
Line_11 $$ final VirtualFilePointer[] pointersToWatch = new VirtualFilePointer[1]-->Line_16 $$ verifyPointersInCorrectState(pointersToWatch)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_4 $$ final File jarParent = new File(tempDir, "jarParent")[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_8 $$ FileUtil.copy(originalJar, jar)[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_42 $$ refreshVFS()[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_26 $$ final VirtualFilePointer jarPointer = myVirtualFilePointerManager.create(jarUrl, disposable, listener)[ CD ]
Line_11 $$ final VirtualFilePointer[] pointersToWatch = new VirtualFilePointer[1]-->Line_31 $$ verifyPointersInCorrectState(pointersToWatch)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_33 $$ UIUtil.dispatchAllInvocationEvents()[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_37 $$ refreshVFS()[ CD ]
Line_11 $$ final VirtualFilePointer[] pointersToWatch = new VirtualFilePointer[1]-->Line_44 $$ verifyPointersInCorrectState(pointersToWatch)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_28 $$ assertTrue(jarPointer.isValid())[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_46 $$ UIUtil.dispatchAllInvocationEvents()[ CD ]
Line_7 $$ final File originalJar = new File(PathManagerEx.getTestDataPath() + "/psi/generics22/collect-2.2.jar")-->Line_8 $$ FileUtil.copy(originalJar, jar)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_44 $$ verifyPointersInCorrectState(pointersToWatch)[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_39 $$ assertTrue(jarPointer.isValid())[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_35 $$ FileUtil.copy(originalJar, jar)[ CD ]
Line_6 $$ final File jar = new File(jarParent, "x.jar")-->Line_36 $$ assert jar.exists()[ FD ]
Line_12 $$ final VirtualFilePointerListener listener = new VirtualFilePointerListener() -->Line_21 $$ verifyPointersInCorrectState(pointersToWatch)[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_3 $$ final File tempDir = createTempDirectory()[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_34 $$ jarParent.mkdir()[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_38 $$ verifyPointersInCorrectState(pointersToWatch)[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_29 $$ jar.delete()[ CD ]
Line_6 $$ final File jar = new File(jarParent, "x.jar")-->Line_8 $$ FileUtil.copy(originalJar, jar)[ FD ]
Line_6 $$ final File jar = new File(jarParent, "x.jar")-->Line_24 $$ final String pathInJar = jar.getPath().replace(File.separatorChar, '/') + JarFileSystem.JAR_SEPARATOR[ FD ]
Line_11 $$ final VirtualFilePointer[] pointersToWatch = new VirtualFilePointer[1]-->Line_21 $$ verifyPointersInCorrectState(pointersToWatch)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_32 $$ assertFalse(jarPointer.isValid())[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_45 $$ assertFalse(jarPointer.isValid())[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_12 $$ final VirtualFilePointerListener listener = new VirtualFilePointerListener() [ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_6 $$ final File jar = new File(jarParent, "x.jar")[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_7 $$ final File originalJar = new File(PathManagerEx.getTestDataPath() + "/psi/generics22/collect-2.2.jar")[ CD ]
Line_11 $$ final VirtualFilePointer[] pointersToWatch = new VirtualFilePointer[1]-->Line_38 $$ verifyPointersInCorrectState(pointersToWatch)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_41 $$ jar.delete()[ CD ]
Line_6 $$ final File jar = new File(jarParent, "x.jar")-->Line_35 $$ FileUtil.copy(originalJar, jar)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_25 $$ final String jarUrl = VirtualFileManager.constructUrl(JarFileSystem.PROTOCOL, pathInJar)[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_11 $$ final VirtualFilePointer[] pointersToWatch = new VirtualFilePointer[1][ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_5 $$ jarParent.mkdir()[ CD ]
Line_7 $$ final File originalJar = new File(PathManagerEx.getTestDataPath() + "/psi/generics22/collect-2.2.jar")-->Line_35 $$ FileUtil.copy(originalJar, jar)[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_31 $$ verifyPointersInCorrectState(pointersToWatch)[ CD ]
Line_6 $$ final File jar = new File(jarParent, "x.jar")-->Line_41 $$ jar.delete()[ FD ]
Line_2 $$ public void testJars2() throws Exception -->Line_40 $$ UIUtil.dispatchAllInvocationEvents()[ CD ]
Line_2 $$ public void testJars2() throws Exception -->Line_43 $$ UIUtil.dispatchAllInvocationEvents()[ CD ]
Line_6 $$ final File jar = new File(jarParent, "x.jar")-->Line_29 $$ jar.delete()[ FD ]
Line_12 $$ final VirtualFilePointerListener listener = new VirtualFilePointerListener() -->Line_26 $$ final VirtualFilePointer jarPointer = myVirtualFilePointerManager.create(jarUrl, disposable, listener)[ FD ]
