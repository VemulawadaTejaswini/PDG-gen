Line_3 $$ List<String> vfsPaths = new ArrayList<String>()-->Line_5 $$ vfsPaths.add(file.getPath())[ FD ]
Line_2 $$ private static void shallowCompare(VirtualFile[] vfs, @Nullable File[] io) -->Line_7 $$ List<String> ioPaths = new ArrayList<String>()[ CD ]
Line_2 $$ private static void shallowCompare(VirtualFile[] vfs, @Nullable File[] io) -->Line_8 $$ if (io != null) [ CD ]
Line_4 $$ for (VirtualFile file : vfs) -->Line_10 $$ ioPaths.add(file.getPath().replace(File.separatorChar, '/'))[ FD ]
Line_3 $$ List<String> vfsPaths = new ArrayList<String>()-->Line_13 $$ assertEquals(sortAndJoin(vfsPaths), sortAndJoin(ioPaths))[ FD ]
Line_2 $$ private static void shallowCompare(VirtualFile[] vfs, @Nullable File[] io) -->Line_8 $$ if (io != null) [ FD ]
Line_2 $$ private static void shallowCompare(VirtualFile[] vfs, @Nullable File[] io) -->Line_3 $$ List<String> vfsPaths = new ArrayList<String>()[ CD ]
Line_7 $$ List<String> ioPaths = new ArrayList<String>()-->Line_13 $$ assertEquals(sortAndJoin(vfsPaths), sortAndJoin(ioPaths))[ FD ]
Line_4 $$ for (VirtualFile file : vfs) -->Line_5 $$ vfsPaths.add(file.getPath())[ FD ]
Line_7 $$ List<String> ioPaths = new ArrayList<String>()-->Line_10 $$ ioPaths.add(file.getPath().replace(File.separatorChar, '/'))[ FD ]
Line_2 $$ private static void shallowCompare(VirtualFile[] vfs, @Nullable File[] io) -->Line_13 $$ assertEquals(sortAndJoin(vfsPaths), sortAndJoin(ioPaths))[ CD ]
