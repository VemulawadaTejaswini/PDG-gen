Line_17 $$ if (region.page == page) -->Line_20 $$ if (region.splits == null) [ CD ]
Line_11 $$ img = ImageIO.read(page.textureFile.file())-->Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)[ FD ]
Line_20 $$ if (region.splits == null) -->Line_22 $$ extension = OUTPUT_TYPE[ CD ]
Line_4 $$ if (!outputDirFile.exists()) -->Line_5 $$ outputDirFile.mkdirs()[ CD ]
Line_4 $$ if (!outputDirFile.exists()) -->Line_6 $$ System.out.println(String.format("Creating directory: %s", outputDirFile.getPath()))[ CD ]
Line_9 $$ BufferedImage img = null-->Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)[ FD ]
Line_17 $$ if (region.page == page) -->Line_29 $$ if (!imgDir.exists()) [ CD ]
Line_18 $$ BufferedImage splitImage = null-->Line_34 $$ ImageIO.write(splitImage, OUTPUT_TYPE, imgOutput)[ FD ]
Line_28 $$ File imgDir = imgOutput.getParentFile()-->Line_30 $$ System.out.println(String.format("Creating directory: %s", imgDir.getPath()))[ FD ]
Line_18 $$ BufferedImage splitImage = null-->Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)[ FD ]
Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)-->Line_34 $$ ImageIO.write(splitImage, OUTPUT_TYPE, imgOutput)[ FD ]
Line_22 $$ extension = OUTPUT_TYPE-->Line_25 $$ extension = String.format("9.%s", OUTPUT_TYPE)[ FD ]
Line_2 $$ public void splitAtlas(TextureAtlasData atlas, String outputDir) -->Line_8 $$ for (Page page : atlas.getPages()) [ FD ]
Line_27 $$ File imgOutput = new File(outputDirFile, String.format("%s.%s", region.index == -1 ? region.name : region.name + "_" + region.index, extension))-->Line_28 $$ File imgDir = imgOutput.getParentFile()[ FD ]
Line_3 $$ File outputDirFile = new File(outputDir)-->Line_5 $$ outputDirFile.mkdirs()[ FD ]
Line_15 $$ for (Region region : atlas.getRegions()) -->Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)[ FD ]
Line_2 $$ public void splitAtlas(TextureAtlasData atlas, String outputDir) -->Line_3 $$ File outputDirFile = new File(outputDir)[ CD ]
Line_2 $$ public void splitAtlas(TextureAtlasData atlas, String outputDir) -->Line_4 $$ if (!outputDirFile.exists()) [ CD ]
Line_29 $$ if (!imgDir.exists()) -->Line_31 $$ imgDir.mkdirs()[ CD ]
Line_25 $$ extension = String.format("9.%s", OUTPUT_TYPE)-->Line_27 $$ File imgOutput = new File(outputDirFile, String.format("%s.%s", region.index == -1 ? region.name : region.name + "_" + region.index, extension))[ FD ]
Line_2 $$ public void splitAtlas(TextureAtlasData atlas, String outputDir) -->Line_15 $$ for (Region region : atlas.getRegions()) [ FD ]
Line_20 $$ if (region.splits == null) -->Line_25 $$ extension = String.format("9.%s", OUTPUT_TYPE)[ CD ]
Line_28 $$ File imgDir = imgOutput.getParentFile()-->Line_29 $$ if (!imgDir.exists()) [ FD ]
Line_28 $$ File imgDir = imgOutput.getParentFile()-->Line_31 $$ imgDir.mkdirs()[ FD ]
Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)-->Line_34 $$ ImageIO.write(splitImage, OUTPUT_TYPE, imgOutput)[ FD ]
Line_17 $$ if (region.page == page) -->Line_18 $$ BufferedImage splitImage = null[ CD ]
Line_3 $$ File outputDirFile = new File(outputDir)-->Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)[ FD ]
Line_8 $$ for (Page page : atlas.getPages()) -->Line_17 $$ if (region.page == page) [ FD ]
Line_18 $$ BufferedImage splitImage = null-->Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)[ FD ]
Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)-->Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)[ FD ]
Line_3 $$ File outputDirFile = new File(outputDir)-->Line_6 $$ System.out.println(String.format("Creating directory: %s", outputDirFile.getPath()))[ FD ]
Line_19 $$ String extension = null-->Line_22 $$ extension = OUTPUT_TYPE[ FD ]
Line_9 $$ BufferedImage img = null-->Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)[ FD ]
Line_22 $$ extension = OUTPUT_TYPE-->Line_27 $$ File imgOutput = new File(outputDirFile, String.format("%s.%s", region.index == -1 ? region.name : region.name + "_" + region.index, extension))[ FD ]
Line_20 $$ if (region.splits == null) -->Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)[ CD ]
Line_3 $$ File outputDirFile = new File(outputDir)-->Line_4 $$ if (!outputDirFile.exists()) [ FD ]
Line_20 $$ if (region.splits == null) -->Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)[ CD ]
Line_15 $$ for (Region region : atlas.getRegions()) -->Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)[ FD ]
Line_17 $$ if (region.page == page) -->Line_28 $$ File imgDir = imgOutput.getParentFile()[ CD ]
Line_3 $$ File outputDirFile = new File(outputDir)-->Line_21 $$ splitImage = extractImage(img, region, outputDirFile, 0)[ FD ]
Line_19 $$ String extension = null-->Line_27 $$ File imgOutput = new File(outputDirFile, String.format("%s.%s", region.index == -1 ? region.name : region.name + "_" + region.index, extension))[ FD ]
Line_29 $$ if (!imgDir.exists()) -->Line_30 $$ System.out.println(String.format("Creating directory: %s", imgDir.getPath()))[ CD ]
Line_17 $$ if (region.page == page) -->Line_19 $$ String extension = null[ CD ]
Line_19 $$ String extension = null-->Line_25 $$ extension = String.format("9.%s", OUTPUT_TYPE)[ FD ]
Line_27 $$ File imgOutput = new File(outputDirFile, String.format("%s.%s", region.index == -1 ? region.name : region.name + "_" + region.index, extension))-->Line_34 $$ ImageIO.write(splitImage, OUTPUT_TYPE, imgOutput)[ FD ]
Line_9 $$ BufferedImage img = null-->Line_11 $$ img = ImageIO.read(page.textureFile.file())[ FD ]
Line_17 $$ if (region.page == page) -->Line_27 $$ File imgOutput = new File(outputDirFile, String.format("%s.%s", region.index == -1 ? region.name : region.name + "_" + region.index, extension))[ CD ]
Line_11 $$ img = ImageIO.read(page.textureFile.file())-->Line_24 $$ splitImage = extractNinePatch(img, region, outputDirFile)[ FD ]
