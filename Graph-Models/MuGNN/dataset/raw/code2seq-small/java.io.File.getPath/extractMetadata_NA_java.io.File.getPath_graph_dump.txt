Line_5 $$ for (File grammarFileFile : sources) -->Line_6 $$ final String grammarFilePath = grammarFileFile.getPath()[ FD ]
Line_5 $$ for (File grammarFileFile : sources) -->Line_16 $$ final String grammarFilePath = grammarFileFile.getPath()[ FD ]
Line_18 $$ GrammarFileMetadata grammarFileMetadata = new GrammarFileMetadata(grammarFileFile, antlrGrammarFile, grammarPackageName)-->Line_19 $$ xref.addGrammarFile(grammarFileMetadata)[ FD ]
Line_2 $$ public XRef extractMetadata(Set<File> sources) -->Line_21 $$ return xref[ CD ]
Line_2 $$ public XRef extractMetadata(Set<File> sources) -->Line_13 $$ XRef xref = new XRef(hierarchy)[ CD ]
Line_4 $$ antlr.preprocessor.Hierarchy hierarchy = new antlr.preprocessor.Hierarchy(tool)-->Line_8 $$ hierarchy.readGrammarFile(grammarFilePath)[ FD ]
Line_13 $$ XRef xref = new XRef(hierarchy)-->Line_19 $$ xref.addGrammarFile(grammarFileMetadata)[ FD ]
Line_6 $$ final String grammarFilePath = grammarFileFile.getPath()-->Line_8 $$ hierarchy.readGrammarFile(grammarFilePath)[ FD ]
Line_5 $$ for (File grammarFileFile : sources) -->Line_15 $$ String grammarPackageName = getPackageName(grammarFileFile)[ FD ]
Line_2 $$ public XRef extractMetadata(Set<File> sources) -->Line_4 $$ antlr.preprocessor.Hierarchy hierarchy = new antlr.preprocessor.Hierarchy(tool)[ CD ]
Line_4 $$ antlr.preprocessor.Hierarchy hierarchy = new antlr.preprocessor.Hierarchy(tool)-->Line_17 $$ antlr.preprocessor.GrammarFile antlrGrammarFile = hierarchy.getFile(grammarFilePath)[ FD ]
Line_6 $$ final String grammarFilePath = grammarFileFile.getPath()-->Line_17 $$ antlr.preprocessor.GrammarFile antlrGrammarFile = hierarchy.getFile(grammarFilePath)[ FD ]
Line_2 $$ public XRef extractMetadata(Set<File> sources) -->Line_3 $$ antlr.Tool tool = new antlr.Tool()[ CD ]
