Line_17 $$ if (isAncestor) -->Line_18 $$ childrenOfSomebody.add(child.getPath())[ CD ]
Line_4 $$ final Set<String> childrenOfSomebody = ContainerUtil.newHashSet()-->Line_27 $$ if (!childrenOfSomebody.contains(file.getPath())) [ FD ]
Line_27 $$ if (!childrenOfSomebody.contains(file.getPath())) -->Line_28 $$ result.add(file)[ CD ]
Line_23 $$ if (!childrenOfSomebody.isEmpty()) -->Line_42 $$ return result[ CD ]
Line_4 $$ final Set<String> childrenOfSomebody = ContainerUtil.newHashSet()-->Line_23 $$ if (!childrenOfSomebody.isEmpty()) [ FD ]
Line_5 $$ new AbstractFilterChildren<File>() -->Line_9 $$ Collections.sort(list)[ FD ]
Line_5 $$ new AbstractFilterChildren<File>() -->Line_18 $$ childrenOfSomebody.add(child.getPath())[ FD ]
Line_23 $$ if (!childrenOfSomebody.isEmpty()) -->Line_24 $$ List<File> result = ContainerUtil.newArrayList()[ CD ]
Line_32 $$ if (status != null && !StatusType.STATUS_NONE.equals(status.getContentsStatus()) && !StatusType.STATUS_UNVERSIONED.equals(status.getContentsStatus())) -->Line_33 $$ result.add(file)[ CD ]
Line_5 $$ new AbstractFilterChildren<File>() -->Line_9 $$ Collections.sort(list)[ CD ]
Line_23 $$ if (!childrenOfSomebody.isEmpty()) -->Line_25 $$ StatusClient statusClient = myFactory.createStatusClient()[ CD ]
Line_5 $$ new AbstractFilterChildren<File>() -->Line_17 $$ if (isAncestor) [ CD ]
Line_4 $$ final Set<String> childrenOfSomebody = ContainerUtil.newHashSet()-->Line_18 $$ childrenOfSomebody.add(child.getPath())[ FD ]
Line_5 $$ new AbstractFilterChildren<File>() -->Line_20 $$ return isAncestor[ CD ]
