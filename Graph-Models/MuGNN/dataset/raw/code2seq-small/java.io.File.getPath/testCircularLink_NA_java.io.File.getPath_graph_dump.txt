Line_5 $$ File upLinkFile = createSymLink(upDir.getPath(), upDir.getPath() + "/up_link")-->Line_6 $$ VirtualFile upLinkVFile = refreshAndFind(upLinkFile)[ FD ]
Line_6 $$ VirtualFile upLinkVFile = refreshAndFind(upLinkFile)-->Line_7 $$ assertNotNull(upLinkVFile)[ FD ]
Line_12 $$ File repeatedLinksFile = new File(upDir.getPath() + StringUtil.repeat(File.separator + upLinkFile.getName(), 4))-->Line_14 $$ VirtualFile repeatedLinksVFile = refreshAndFind(repeatedLinksFile)[ FD ]
Line_14 $$ VirtualFile repeatedLinksVFile = refreshAndFind(repeatedLinksFile)-->Line_18 $$ assertPathsEqual(upDir.getPath(), repeatedLinksVFile.getCanonicalPath())[ FD ]
Line_4 $$ File upDir = myTempDir.newFolder("sub")-->Line_10 $$ assertPathsEqual(upDir.getPath(), upLinkVFile.getCanonicalPath())[ FD ]
Line_12 $$ File repeatedLinksFile = new File(upDir.getPath() + StringUtil.repeat(File.separator + upLinkFile.getName(), 4))-->Line_13 $$ assertTrue(repeatedLinksFile.getPath(), repeatedLinksFile.isDirectory())[ FD ]
Line_14 $$ VirtualFile repeatedLinksVFile = refreshAndFind(repeatedLinksFile)-->Line_19 $$ assertEquals(upLinkVFile.getCanonicalFile(), repeatedLinksVFile.getCanonicalFile())[ FD ]
Line_4 $$ File upDir = myTempDir.newFolder("sub")-->Line_18 $$ assertPathsEqual(upDir.getPath(), repeatedLinksVFile.getCanonicalPath())[ FD ]
Line_6 $$ VirtualFile upLinkVFile = refreshAndFind(upLinkFile)-->Line_8 $$ assertTrue(upLinkVFile.is(VFileProperty.SYMLINK))[ FD ]
Line_14 $$ VirtualFile repeatedLinksVFile = refreshAndFind(repeatedLinksFile)-->Line_15 $$ assertNotNull(repeatedLinksFile.getPath(), repeatedLinksVFile)[ FD ]
Line_5 $$ File upLinkFile = createSymLink(upDir.getPath(), upDir.getPath() + "/up_link")-->Line_12 $$ File repeatedLinksFile = new File(upDir.getPath() + StringUtil.repeat(File.separator + upLinkFile.getName(), 4))[ FD ]
Line_4 $$ File upDir = myTempDir.newFolder("sub")-->Line_11 $$ assertVisitedPaths(upDir.getPath(), upLinkVFile.getPath())[ FD ]
Line_14 $$ VirtualFile repeatedLinksVFile = refreshAndFind(repeatedLinksFile)-->Line_16 $$ assertTrue(repeatedLinksVFile.is(VFileProperty.SYMLINK))[ FD ]
Line_12 $$ File repeatedLinksFile = new File(upDir.getPath() + StringUtil.repeat(File.separator + upLinkFile.getName(), 4))-->Line_15 $$ assertNotNull(repeatedLinksFile.getPath(), repeatedLinksVFile)[ FD ]
Line_4 $$ File upDir = myTempDir.newFolder("sub")-->Line_5 $$ File upLinkFile = createSymLink(upDir.getPath(), upDir.getPath() + "/up_link")[ FD ]
Line_14 $$ VirtualFile repeatedLinksVFile = refreshAndFind(repeatedLinksFile)-->Line_17 $$ assertTrue(repeatedLinksVFile.isDirectory())[ FD ]
Line_6 $$ VirtualFile upLinkVFile = refreshAndFind(upLinkFile)-->Line_10 $$ assertPathsEqual(upDir.getPath(), upLinkVFile.getCanonicalPath())[ FD ]
Line_6 $$ VirtualFile upLinkVFile = refreshAndFind(upLinkFile)-->Line_9 $$ assertTrue(upLinkVFile.isDirectory())[ FD ]
Line_6 $$ VirtualFile upLinkVFile = refreshAndFind(upLinkFile)-->Line_11 $$ assertVisitedPaths(upDir.getPath(), upLinkVFile.getPath())[ FD ]
Line_6 $$ VirtualFile upLinkVFile = refreshAndFind(upLinkFile)-->Line_19 $$ assertEquals(upLinkVFile.getCanonicalFile(), repeatedLinksVFile.getCanonicalFile())[ FD ]
Line_4 $$ File upDir = myTempDir.newFolder("sub")-->Line_12 $$ File repeatedLinksFile = new File(upDir.getPath() + StringUtil.repeat(File.separator + upLinkFile.getName(), 4))[ FD ]
