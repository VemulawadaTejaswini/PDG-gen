Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_8 $$ if (myConfiguration.HEAP_SIZE != null && myConfiguration.HEAP_SIZE.trim().length() != 0) [ CD ]
Line_17 $$ String exePath = jdkPath.replace('/', File.separatorChar) + javadocExecutableName-->Line_19 $$ cmdLine.setExePath(exePath)[ FD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_4 $$ if (jdkPath == null) [ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_7 $$ JavaSdkVersion version = JavaSdk.getInstance().getVersion(jdk)[ FD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_17 $$ String exePath = jdkPath.replace('/', File.separatorChar) + javadocExecutableName[ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_18 $$ if (new File(exePath).exists()) [ CD ]
Line_18 $$ if (new File(exePath).exists()) -->Line_29 $$ cmdLine.setExePath(exePath)[ CD ]
Line_22 $$ if (!new File(exePath).exists()) -->Line_23 $$ final File parent = new File(System.getProperty("java.home")).getParentFile()[ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_16 $$ final String javadocExecutableName = File.separator + (SystemInfo.isWindows ? "javadoc.exe" : "javadoc")[ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_19 $$ cmdLine.setExePath(exePath)[ FD ]
Line_18 $$ if (new File(exePath).exists()) -->Line_21 $$ exePath = new File(jdkPath).getParent().replace('/', File.separatorChar) + javadocExecutableName[ CD ]
Line_18 $$ if (new File(exePath).exists()) -->Line_22 $$ if (!new File(exePath).exists()) [ CD ]
Line_22 $$ if (!new File(exePath).exists()) -->Line_24 $$ exePath = parent.getPath() + File.separator + "bin" + javadocExecutableName[ CD ]
Line_17 $$ String exePath = jdkPath.replace('/', File.separatorChar) + javadocExecutableName-->Line_29 $$ cmdLine.setExePath(exePath)[ FD ]
Line_17 $$ String exePath = jdkPath.replace('/', File.separatorChar) + javadocExecutableName-->Line_24 $$ exePath = parent.getPath() + File.separator + "bin" + javadocExecutableName[ FD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_3 $$ final String jdkPath = jdk != null && jdk.getSdkType() instanceof JavaSdkType ? ((JavaSdkType) jdk.getSdkType()).getBinPath(jdk) : null[ FD ]
Line_21 $$ exePath = new File(jdkPath).getParent().replace('/', File.separatorChar) + javadocExecutableName-->Line_29 $$ cmdLine.setExePath(exePath)[ FD ]
Line_17 $$ String exePath = jdkPath.replace('/', File.separatorChar) + javadocExecutableName-->Line_21 $$ exePath = new File(jdkPath).getParent().replace('/', File.separatorChar) + javadocExecutableName[ FD ]
Line_9 $$ if (version == null || version.isAtLeast(JavaSdkVersion.JDK_1_2)) -->Line_12 $$ cmdLine.getParametersList().prepend("-J-mx" + myConfiguration.HEAP_SIZE + "m")[ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_15 $$ cmdLine.setWorkDirectory((File) null)[ CD ]
Line_21 $$ exePath = new File(jdkPath).getParent().replace('/', File.separatorChar) + javadocExecutableName-->Line_24 $$ exePath = parent.getPath() + File.separator + "bin" + javadocExecutableName[ FD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_29 $$ cmdLine.setExePath(exePath)[ FD ]
Line_3 $$ final String jdkPath = jdk != null && jdk.getSdkType() instanceof JavaSdkType ? ((JavaSdkType) jdk.getSdkType()).getBinPath(jdk) : null-->Line_17 $$ String exePath = jdkPath.replace('/', File.separatorChar) + javadocExecutableName[ FD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_15 $$ cmdLine.setWorkDirectory((File) null)[ FD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_3 $$ final String jdkPath = jdk != null && jdk.getSdkType() instanceof JavaSdkType ? ((JavaSdkType) jdk.getSdkType()).getBinPath(jdk) : null[ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_10 $$ cmdLine.getParametersList().prepend("-J-Xmx" + myConfiguration.HEAP_SIZE + "m")[ FD ]
Line_24 $$ exePath = parent.getPath() + File.separator + "bin" + javadocExecutableName-->Line_29 $$ cmdLine.setExePath(exePath)[ FD ]
Line_16 $$ final String javadocExecutableName = File.separator + (SystemInfo.isWindows ? "javadoc.exe" : "javadoc")-->Line_21 $$ exePath = new File(jdkPath).getParent().replace('/', File.separatorChar) + javadocExecutableName[ FD ]
Line_22 $$ if (!new File(exePath).exists()) -->Line_25 $$ if (!new File(exePath).exists()) [ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_12 $$ cmdLine.getParametersList().prepend("-J-mx" + myConfiguration.HEAP_SIZE + "m")[ FD ]
Line_18 $$ if (new File(exePath).exists()) -->Line_19 $$ cmdLine.setExePath(exePath)[ CD ]
Line_9 $$ if (version == null || version.isAtLeast(JavaSdkVersion.JDK_1_2)) -->Line_10 $$ cmdLine.getParametersList().prepend("-J-Xmx" + myConfiguration.HEAP_SIZE + "m")[ CD ]
Line_7 $$ JavaSdkVersion version = JavaSdk.getInstance().getVersion(jdk)-->Line_9 $$ if (version == null || version.isAtLeast(JavaSdkVersion.JDK_1_2)) [ FD ]
Line_16 $$ final String javadocExecutableName = File.separator + (SystemInfo.isWindows ? "javadoc.exe" : "javadoc")-->Line_24 $$ exePath = parent.getPath() + File.separator + "bin" + javadocExecutableName[ FD ]
Line_23 $$ final File parent = new File(System.getProperty("java.home")).getParentFile()-->Line_24 $$ exePath = parent.getPath() + File.separator + "bin" + javadocExecutableName[ FD ]
Line_8 $$ if (myConfiguration.HEAP_SIZE != null && myConfiguration.HEAP_SIZE.trim().length() != 0) -->Line_9 $$ if (version == null || version.isAtLeast(JavaSdkVersion.JDK_1_2)) [ CD ]
Line_2 $$ private void setupExeParams(final Sdk jdk, GeneralCommandLine cmdLine) throws ExecutionException -->Line_7 $$ JavaSdkVersion version = JavaSdk.getInstance().getVersion(jdk)[ CD ]
Line_3 $$ final String jdkPath = jdk != null && jdk.getSdkType() instanceof JavaSdkType ? ((JavaSdkType) jdk.getSdkType()).getBinPath(jdk) : null-->Line_4 $$ if (jdkPath == null) [ FD ]
