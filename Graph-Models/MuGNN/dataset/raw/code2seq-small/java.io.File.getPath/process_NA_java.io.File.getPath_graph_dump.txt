Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_12 $$ if (groovy == null) [ CD ]
Line_17 $$ if (!FSOperations.isMarkedDirty(context, CompilationRound.CURRENT, groovyFile)) -->Line_18 $$ FSOperations.markDirty(context, CompilationRound.NEXT, groovyFile)[ CD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_18 $$ FSOperations.markDirty(context, CompilationRound.NEXT, groovyFile)[ FD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_11 $$ String groovy = stubToSrc.get(FileUtil.toSystemIndependentName(src.getPath()))[ CD ]
Line_3 $$ Map<String, String> stubToSrc = STUB_TO_SRC.get(context)-->Line_11 $$ String groovy = stubToSrc.get(FileUtil.toSystemIndependentName(src.getPath()))[ FD ]
Line_17 $$ if (!FSOperations.isMarkedDirty(context, CompilationRound.CURRENT, groovyFile)) -->Line_19 $$ FILES_MARKED_DIRTY_FOR_NEXT_ROUND.set(context, Boolean.TRUE)[ CD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_19 $$ FILES_MARKED_DIRTY_FOR_NEXT_ROUND.set(context, Boolean.TRUE)[ FD ]
Line_11 $$ String groovy = stubToSrc.get(FileUtil.toSystemIndependentName(src.getPath()))-->Line_12 $$ if (groovy == null) [ FD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_17 $$ if (!FSOperations.isMarkedDirty(context, CompilationRound.CURRENT, groovyFile)) [ FD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_8 $$ if (src == null) [ CD ]
Line_3 $$ Map<String, String> stubToSrc = STUB_TO_SRC.get(context)-->Line_4 $$ if (stubToSrc == null) [ FD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_7 $$ File src = out.getSourceFile()[ CD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_3 $$ Map<String, String> stubToSrc = STUB_TO_SRC.get(context)[ FD ]
Line_8 $$ if (src == null) -->Line_9 $$ return[ CD ]
Line_7 $$ File src = out.getSourceFile()-->Line_8 $$ if (src == null) [ FD ]
Line_4 $$ if (stubToSrc == null) -->Line_5 $$ return[ CD ]
Line_16 $$ final File groovyFile = new File(groovy)-->Line_18 $$ FSOperations.markDirty(context, CompilationRound.NEXT, groovyFile)[ FD ]
Line_12 $$ if (groovy == null) -->Line_13 $$ return[ CD ]
Line_16 $$ final File groovyFile = new File(groovy)-->Line_17 $$ if (!FSOperations.isMarkedDirty(context, CompilationRound.CURRENT, groovyFile)) [ FD ]
Line_7 $$ File src = out.getSourceFile()-->Line_11 $$ String groovy = stubToSrc.get(FileUtil.toSystemIndependentName(src.getPath()))[ FD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_3 $$ Map<String, String> stubToSrc = STUB_TO_SRC.get(context)[ CD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_7 $$ File src = out.getSourceFile()[ FD ]
Line_2 $$ public void process(CompileContext context, OutputFileObject out) -->Line_4 $$ if (stubToSrc == null) [ CD ]
