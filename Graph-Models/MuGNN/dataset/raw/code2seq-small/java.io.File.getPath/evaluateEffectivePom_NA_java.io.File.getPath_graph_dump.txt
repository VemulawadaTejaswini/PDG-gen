Line_2 $$ public static String evaluateEffectivePom(final Maven3ServerEmbedder embedder, @NotNull final File file, @NotNull List<String> activeProfiles, @NotNull List<String> inactiveProfiles) throws RemoteException, MavenServerProcessCanceledException -->Line_23 $$ return w.toString()[ CD ]
Line_5 $$ final MavenExecutionRequest request = embedder.createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())-->Line_6 $$ embedder.executeWithMavenSession(request, new Runnable() [ FD ]
Line_9 $$ ProjectBuilder builder = embedder.getComponent(ProjectBuilder.class)-->Line_10 $$ ProjectBuildingResult buildingResult = builder.build(new File(file.getPath()), request.getProjectBuildingRequest())[ FD ]
Line_12 $$ XMLWriter writer = new PrettyPrintXMLWriter(new PrintWriter(w), StringUtils.repeat(" ", XmlWriterUtil.DEFAULT_INDENTATION_SIZE), "\n", null, null)-->Line_13 $$ writeHeader(writer)[ FD ]
Line_10 $$ ProjectBuildingResult buildingResult = builder.build(new File(file.getPath()), request.getProjectBuildingRequest())-->Line_11 $$ MavenProject project = buildingResult.getProject()[ FD ]
Line_11 $$ MavenProject project = buildingResult.getProject()-->Line_14 $$ writeEffectivePom(project, writer)[ FD ]
Line_3 $$ final StringWriter w = new StringWriter()-->Line_23 $$ return w.toString()[ FD ]
Line_2 $$ public static String evaluateEffectivePom(final Maven3ServerEmbedder embedder, @NotNull final File file, @NotNull List<String> activeProfiles, @NotNull List<String> inactiveProfiles) throws RemoteException, MavenServerProcessCanceledException -->Line_5 $$ final MavenExecutionRequest request = embedder.createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())[ FD ]
Line_2 $$ public static String evaluateEffectivePom(final Maven3ServerEmbedder embedder, @NotNull final File file, @NotNull List<String> activeProfiles, @NotNull List<String> inactiveProfiles) throws RemoteException, MavenServerProcessCanceledException -->Line_10 $$ ProjectBuildingResult buildingResult = builder.build(new File(file.getPath()), request.getProjectBuildingRequest())[ FD ]
Line_5 $$ final MavenExecutionRequest request = embedder.createRequest(file, activeProfiles, inactiveProfiles, Collections.<String>emptyList())-->Line_10 $$ ProjectBuildingResult buildingResult = builder.build(new File(file.getPath()), request.getProjectBuildingRequest())[ FD ]
Line_2 $$ public static String evaluateEffectivePom(final Maven3ServerEmbedder embedder, @NotNull final File file, @NotNull List<String> activeProfiles, @NotNull List<String> inactiveProfiles) throws RemoteException, MavenServerProcessCanceledException -->Line_9 $$ ProjectBuilder builder = embedder.getComponent(ProjectBuilder.class)[ FD ]
Line_12 $$ XMLWriter writer = new PrettyPrintXMLWriter(new PrintWriter(w), StringUtils.repeat(" ", XmlWriterUtil.DEFAULT_INDENTATION_SIZE), "\n", null, null)-->Line_14 $$ writeEffectivePom(project, writer)[ FD ]
Line_2 $$ public static String evaluateEffectivePom(final Maven3ServerEmbedder embedder, @NotNull final File file, @NotNull List<String> activeProfiles, @NotNull List<String> inactiveProfiles) throws RemoteException, MavenServerProcessCanceledException -->Line_6 $$ embedder.executeWithMavenSession(request, new Runnable() [ FD ]
Line_2 $$ public static String evaluateEffectivePom(final Maven3ServerEmbedder embedder, @NotNull final File file, @NotNull List<String> activeProfiles, @NotNull List<String> inactiveProfiles) throws RemoteException, MavenServerProcessCanceledException -->Line_3 $$ final StringWriter w = new StringWriter()[ CD ]
