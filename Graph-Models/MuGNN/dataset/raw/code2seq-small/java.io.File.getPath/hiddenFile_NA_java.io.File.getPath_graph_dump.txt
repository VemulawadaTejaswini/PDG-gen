Line_2 $$ public void hiddenFile() throws Exception -->Line_4 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "file")[ CD ]
Line_4 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "file")-->Line_7 $$ IoTestUtil.setHidden(file.getPath(), true)[ FD ]
Line_2 $$ public void hiddenFile() throws Exception -->Line_6 $$ assertFalse(attributes.isHidden())[ CD ]
Line_4 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "file")-->Line_8 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void hiddenFile() throws Exception -->Line_8 $$ attributes = getAttributes(file)[ CD ]
Line_5 $$ FileAttributes attributes = getAttributes(file)-->Line_8 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void hiddenFile() throws Exception -->Line_5 $$ FileAttributes attributes = getAttributes(file)[ CD ]
Line_2 $$ public void hiddenFile() throws Exception -->Line_7 $$ IoTestUtil.setHidden(file.getPath(), true)[ CD ]
Line_5 $$ FileAttributes attributes = getAttributes(file)-->Line_9 $$ assertTrue(attributes.isHidden())[ FD ]
Line_2 $$ public void hiddenFile() throws Exception -->Line_9 $$ assertTrue(attributes.isHidden())[ CD ]
Line_5 $$ FileAttributes attributes = getAttributes(file)-->Line_6 $$ assertFalse(attributes.isHidden())[ FD ]
Line_2 $$ public void hiddenFile() throws Exception -->Line_3 $$ assumeTrue(SystemInfo.isWindows)[ CD ]
Line_8 $$ attributes = getAttributes(file)-->Line_9 $$ assertTrue(attributes.isHidden())[ FD ]
Line_4 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "file")-->Line_5 $$ FileAttributes attributes = getAttributes(file)[ FD ]
