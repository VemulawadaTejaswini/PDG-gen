Line_20 $$ final Writer w-->Line_46 $$ w.close()[ FD ]
Line_28 $$ for (File inspectionData : inspectionsResults) -->Line_33 $$ final String fileNameWithoutExt = FileUtil.getNameWithoutExtension(inspectionData)[ FD ]
Line_23 $$ w = new FileWriter(outputFile)-->Line_46 $$ w.close()[ FD ]
Line_7 $$ final SAXTransformerFactory transformerFactory = (SAXTransformerFactory) TransformerFactory.newInstance()-->Line_16 $$ transformer = transformerFactory.newTransformer(xslSource)[ FD ]
Line_28 $$ for (File inspectionData : inspectionsResults) -->Line_29 $$ if (inspectionData.isDirectory()) [ FD ]
Line_16 $$ transformer = transformerFactory.newTransformer(xslSource)-->Line_39 $$ transformer.transform(new StreamSource(inspectionData), new StreamResult(w))[ FD ]
Line_33 $$ final String fileNameWithoutExt = FileUtil.getNameWithoutExtension(inspectionData)-->Line_34 $$ if (InspectionApplication.DESCRIPTIONS.equals(fileNameWithoutExt)) [ FD ]
Line_20 $$ final Writer w-->Line_23 $$ w = new FileWriter(outputFile)[ FD ]
Line_15 $$ xslSource = new StreamSource(xsltSchemeFile)-->Line_16 $$ transformer = transformerFactory.newTransformer(xslSource)[ FD ]
Line_8 $$ final Source xslSource-->Line_15 $$ xslSource = new StreamSource(xsltSchemeFile)[ FD ]
Line_9 $$ final Transformer transformer-->Line_39 $$ transformer.transform(new StreamSource(inspectionData), new StreamResult(w))[ FD ]
Line_28 $$ for (File inspectionData : inspectionsResults) -->Line_30 $$ warn("Folder isn't expected here: " + inspectionData.getName())[ FD ]
Line_21 $$ final File outputFile = new File(outputPath)-->Line_25 $$ throw new ConversionException("Cannot edit file: " + outputFile.getPath())[ FD ]
Line_9 $$ final Transformer transformer-->Line_16 $$ transformer = transformerFactory.newTransformer(xslSource)[ FD ]
Line_29 $$ if (inspectionData.isDirectory()) -->Line_30 $$ warn("Folder isn't expected here: " + inspectionData.getName())[ CD ]
Line_11 $$ final File xsltSchemeFile = new File(myXSLTSchemePath)-->Line_12 $$ if (!xsltSchemeFile.exists()) [ FD ]
Line_8 $$ final Source xslSource-->Line_16 $$ transformer = transformerFactory.newTransformer(xslSource)[ FD ]
