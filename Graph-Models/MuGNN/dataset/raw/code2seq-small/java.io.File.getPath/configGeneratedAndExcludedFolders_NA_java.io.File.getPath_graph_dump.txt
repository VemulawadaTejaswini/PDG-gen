Line_3 $$ File targetDir = new File(myMavenProject.getBuildDirectory())-->Line_40 $$ if (!myModel.hasRegisteredSourceSubfolder(targetDir)) [ FD ]
Line_13 $$ for (File f : targetChildren) -->Line_17 $$ configGeneratedSourceFolder(f, JavaSourceRootType.SOURCE)[ FD ]
Line_18 $$ if (FileUtil.pathsEqual(generatedDirTest, f.getPath())) -->Line_19 $$ configGeneratedSourceFolder(f, JavaSourceRootType.TEST_SOURCE)[ CD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_4 $$ String generatedDir = myMavenProject.getGeneratedSourcesDirectory(false)[ CD ]
Line_16 $$ if (FileUtil.pathsEqual(generatedDir, f.getPath())) -->Line_17 $$ configGeneratedSourceFolder(f, JavaSourceRootType.SOURCE)[ CD ]
Line_11 $$ File[] targetChildren = targetDir.listFiles()-->Line_12 $$ if (targetChildren != null) [ FD ]
Line_7 $$ if (myImportingSettings.getGeneratedSourcesFolder() != MavenImportingSettings.GeneratedSourcesFolder.IGNORE) -->Line_9 $$ myModel.addGeneratedJavaSourceFolder(myMavenProject.getAnnotationProcessorDirectory(false), JavaSourceRootType.SOURCE)[ CD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_11 $$ File[] targetChildren = targetDir.listFiles()[ CD ]
Line_13 $$ for (File f : targetChildren) -->Line_24 $$ if (myModel.isAlreadyExcluded(f))[ FD ]
Line_35 $$ for (String eachFolder : facetExcludes) -->Line_36 $$ myModel.unregisterAll(eachFolder, true, true)[ FD ]
Line_39 $$ if (myImportingSettings.isExcludeTargetFolder()) -->Line_40 $$ if (!myModel.hasRegisteredSourceSubfolder(targetDir)) [ CD ]
Line_16 $$ if (FileUtil.pathsEqual(generatedDir, f.getPath())) -->Line_18 $$ if (FileUtil.pathsEqual(generatedDirTest, f.getPath())) [ CD ]
Line_5 $$ String generatedDirTest = myMavenProject.getGeneratedSourcesDirectory(true)-->Line_18 $$ if (FileUtil.pathsEqual(generatedDirTest, f.getPath())) [ FD ]
Line_21 $$ if (myImportingSettings.isExcludeTargetFolder()) -->Line_24 $$ if (myModel.isAlreadyExcluded(f))[ CD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_7 $$ if (myImportingSettings.getGeneratedSourcesFolder() != MavenImportingSettings.GeneratedSourcesFolder.IGNORE) [ CD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_6 $$ myModel.unregisterAll(targetDir.getPath(), false, false)[ CD ]
Line_21 $$ if (myImportingSettings.isExcludeTargetFolder()) -->Line_22 $$ if (myModel.hasRegisteredSourceSubfolder(f))[ CD ]
Line_40 $$ if (!myModel.hasRegisteredSourceSubfolder(targetDir)) -->Line_41 $$ myModel.addExcludedFolder(targetDir.getPath())[ CD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_5 $$ String generatedDirTest = myMavenProject.getGeneratedSourcesDirectory(true)[ CD ]
Line_13 $$ for (File f : targetChildren) -->Line_26 $$ myModel.addExcludedFolder(f.getPath())[ FD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_12 $$ if (targetChildren != null) [ CD ]
Line_3 $$ File targetDir = new File(myMavenProject.getBuildDirectory())-->Line_6 $$ myModel.unregisterAll(targetDir.getPath(), false, false)[ FD ]
Line_4 $$ String generatedDir = myMavenProject.getGeneratedSourcesDirectory(false)-->Line_16 $$ if (FileUtil.pathsEqual(generatedDir, f.getPath())) [ FD ]
Line_13 $$ for (File f : targetChildren) -->Line_22 $$ if (myModel.hasRegisteredSourceSubfolder(f))[ FD ]
Line_3 $$ File targetDir = new File(myMavenProject.getBuildDirectory())-->Line_41 $$ myModel.addExcludedFolder(targetDir.getPath())[ FD ]
Line_3 $$ File targetDir = new File(myMavenProject.getBuildDirectory())-->Line_11 $$ File[] targetChildren = targetDir.listFiles()[ FD ]
Line_32 $$ for (MavenImporter each : MavenImporter.getSuitableImporters(myMavenProject)) -->Line_33 $$ each.collectExcludedFolders(myMavenProject, facetExcludes)[ FD ]
Line_18 $$ if (FileUtil.pathsEqual(generatedDirTest, f.getPath())) -->Line_21 $$ if (myImportingSettings.isExcludeTargetFolder()) [ CD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_3 $$ File targetDir = new File(myMavenProject.getBuildDirectory())[ CD ]
Line_13 $$ for (File f : targetChildren) -->Line_16 $$ if (FileUtil.pathsEqual(generatedDir, f.getPath())) [ FD ]
Line_21 $$ if (myImportingSettings.isExcludeTargetFolder()) -->Line_26 $$ myModel.addExcludedFolder(f.getPath())[ CD ]
Line_31 $$ List<String> facetExcludes = new ArrayList<String>()-->Line_33 $$ each.collectExcludedFolders(myMavenProject, facetExcludes)[ FD ]
Line_13 $$ for (File f : targetChildren) -->Line_14 $$ if (!f.isDirectory())[ FD ]
Line_13 $$ for (File f : targetChildren) -->Line_18 $$ if (FileUtil.pathsEqual(generatedDirTest, f.getPath())) [ FD ]
Line_13 $$ for (File f : targetChildren) -->Line_19 $$ configGeneratedSourceFolder(f, JavaSourceRootType.TEST_SOURCE)[ FD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_31 $$ List<String> facetExcludes = new ArrayList<String>()[ CD ]
Line_35 $$ for (String eachFolder : facetExcludes) -->Line_37 $$ myModel.addExcludedFolder(eachFolder)[ FD ]
Line_2 $$ private void configGeneratedAndExcludedFolders() -->Line_39 $$ if (myImportingSettings.isExcludeTargetFolder()) [ CD ]
Line_7 $$ if (myImportingSettings.getGeneratedSourcesFolder() != MavenImportingSettings.GeneratedSourcesFolder.IGNORE) -->Line_8 $$ myModel.addGeneratedJavaSourceFolder(myMavenProject.getAnnotationProcessorDirectory(true), JavaSourceRootType.TEST_SOURCE)[ CD ]
