Line_15 $$ filePath = commit.myPath-->Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_13 $$ commits.add(modify(filePath))[ FD ]
Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")-->Line_20 $$ commits.add(commit)[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_27 $$ filePath = commit.myPath[ FD ]
Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")-->Line_28 $$ commits.add(commit)[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")-->Line_32 $$ commits.add(commit)[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_33 $$ commits.add(modify(filePath))[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_39 $$ assertEquals("History is different.", toReadable(commits), toReadable(history))[ FD ]
Line_23 $$ filePath = commit.myPath-->Line_31 $$ filePath = commit.myPath[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_25 $$ commits.add(modify(filePath))[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_33 $$ commits.add(modify(filePath))[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_17 $$ commits.add(modify(filePath))[ FD ]
Line_23 $$ filePath = commit.myPath-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_23 $$ filePath = commit.myPath-->Line_27 $$ filePath = commit.myPath[ FD ]
Line_23 $$ filePath = commit.myPath-->Line_29 $$ commits.add(modify(filePath))[ FD ]
Line_37 $$ List<VcsFileRevision> history = GitHistoryUtils.history(myProject, VcsUtil.getFilePath(vFile))-->Line_38 $$ assertEquals("History size doesn't match. Actual history: \n" + toReadable(history), commits.size(), history.size())[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_15 $$ filePath = commit.myPath[ FD ]
Line_35 $$ VirtualFile vFile = VcsUtil.getVirtualFileWithRefresh(new File(filePath))-->Line_36 $$ assertNotNull(vFile)[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_16 $$ commits.add(commit)[ FD ]
Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")-->Line_32 $$ commits.add(commit)[ FD ]
Line_23 $$ filePath = commit.myPath-->Line_33 $$ commits.add(modify(filePath))[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_33 $$ commits.add(modify(filePath))[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_24 $$ commits.add(commit)[ FD ]
Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_23 $$ filePath = commit.myPath-->Line_25 $$ commits.add(modify(filePath))[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_21 $$ commits.add(modify(filePath))[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_21 $$ commits.add(modify(filePath))[ FD ]
Line_7 $$ File initialFile = touch("source/PostHighlightingPass.java", "Initial content")-->Line_12 $$ String filePath = initialFile.getPath()[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_13 $$ commits.add(modify(filePath))[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_17 $$ commits.add(modify(filePath))[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_32 $$ commits.add(commit)[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_21 $$ commits.add(modify(filePath))[ FD ]
Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")-->Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")[ FD ]
Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")-->Line_32 $$ commits.add(commit)[ FD ]
Line_27 $$ filePath = commit.myPath-->Line_33 $$ commits.add(modify(filePath))[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_27 $$ filePath = commit.myPath[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_11 $$ commits.add(new TestCommit(hash, initMessage, initialFile.getPath()))[ FD ]
Line_8 $$ String initMessage = "Created PostHighlightingPass.java in source"-->Line_9 $$ addCommit(initMessage)[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_37 $$ List<VcsFileRevision> history = GitHistoryUtils.history(myProject, VcsUtil.getFilePath(vFile))-->Line_39 $$ assertEquals("History is different.", toReadable(commits), toReadable(history))[ FD ]
Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_29 $$ commits.add(modify(filePath))[ FD ]
Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")-->Line_28 $$ commits.add(commit)[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_31 $$ filePath = commit.myPath[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")[ FD ]
Line_27 $$ filePath = commit.myPath-->Line_29 $$ commits.add(modify(filePath))[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")-->Line_32 $$ commits.add(commit)[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_16 $$ commits.add(commit)[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_31 $$ filePath = commit.myPath[ FD ]
Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")-->Line_28 $$ commits.add(commit)[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_28 $$ commits.add(commit)[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_28 $$ commits.add(commit)[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_20 $$ commits.add(commit)[ FD ]
Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_21 $$ commits.add(modify(filePath))[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_27 $$ filePath = commit.myPath[ FD ]
Line_7 $$ File initialFile = touch("source/PostHighlightingPass.java", "Initial content")-->Line_11 $$ commits.add(new TestCommit(hash, initMessage, initialFile.getPath()))[ FD ]
Line_35 $$ VirtualFile vFile = VcsUtil.getVirtualFileWithRefresh(new File(filePath))-->Line_37 $$ List<VcsFileRevision> history = GitHistoryUtils.history(myProject, VcsUtil.getFilePath(vFile))[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_20 $$ commits.add(commit)[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_17 $$ commits.add(modify(filePath))[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_38 $$ assertEquals("History size doesn't match. Actual history: \n" + toReadable(history), commits.size(), history.size())[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_25 $$ commits.add(modify(filePath))[ FD ]
Line_31 $$ filePath = commit.myPath-->Line_33 $$ commits.add(modify(filePath))[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_29 $$ commits.add(modify(filePath))[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_25 $$ commits.add(modify(filePath))[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_29 $$ commits.add(modify(filePath))[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_34 $$ Collections.reverse(commits)[ FD ]
Line_23 $$ filePath = commit.myPath-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_19 $$ filePath = commit.myPath[ FD ]
Line_27 $$ filePath = commit.myPath-->Line_31 $$ filePath = commit.myPath[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_23 $$ filePath = commit.myPath[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_32 $$ commits.add(commit)[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_23 $$ filePath = commit.myPath[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_19 $$ filePath = commit.myPath[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_31 $$ filePath = commit.myPath[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_25 $$ commits.add(modify(filePath))[ FD ]
Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")-->Line_24 $$ commits.add(commit)[ FD ]
Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_33 $$ commits.add(modify(filePath))[ FD ]
Line_19 $$ filePath = commit.myPath-->Line_29 $$ commits.add(modify(filePath))[ FD ]
Line_27 $$ filePath = commit.myPath-->Line_30 $$ commit = move(filePath, mkdir("java"), "Moved from source to java")[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_23 $$ filePath = commit.myPath[ FD ]
Line_5 $$ List<TestCommit> commits = new ArrayList<TestCommit>()-->Line_24 $$ commits.add(commit)[ FD ]
Line_15 $$ filePath = commit.myPath-->Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")[ FD ]
Line_6 $$ File source = mkdir("source")-->Line_26 $$ commit = move(filePath, source, "Moved from lang-impl back to source")[ FD ]
Line_14 $$ TestCommit commit = move(filePath, mkdir("codeInside-impl"), "Moved from source to codeInside-impl")-->Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")[ FD ]
Line_12 $$ String filePath = initialFile.getPath()-->Line_22 $$ commit = move(filePath, mkdir("lang-impl"), "Moved from codeInside to lang-impl")[ FD ]
Line_18 $$ commit = move(filePath, mkdir("codeInside"), "Moved from codeInside-impl to codeInside")-->Line_24 $$ commits.add(commit)[ FD ]
