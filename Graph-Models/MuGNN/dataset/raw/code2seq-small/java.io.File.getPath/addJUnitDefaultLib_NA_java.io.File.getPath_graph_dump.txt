Line_5 $$ final FilenameFilter junitFilter = new FilenameFilter() -->Line_14 $$ junitJars = new File(new File(ideaHome, "community"), "lib").listFiles(junitFilter)[ FD ]
Line_5 $$ final FilenameFilter junitFilter = new FilenameFilter() -->Line_9 $$ return name.startsWith("junit")[ CD ]
Line_5 $$ final FilenameFilter junitFilter = new FilenameFilter() -->Line_9 $$ return name.startsWith("junit")[ FD ]
Line_13 $$ if (junitJars == null || junitJars.length == 0) -->Line_14 $$ junitJars = new File(new File(ideaHome, "community"), "lib").listFiles(junitFilter)[ CD ]
Line_26 $$ if (junitJar != null) -->Line_27 $$ final JpsLibrary jpsLibrary = rootModel.addModuleLibrary(junitName, JpsJavaLibraryType.INSTANCE)[ CD ]
Line_5 $$ final FilenameFilter junitFilter = new FilenameFilter() -->Line_12 $$ File[] junitJars = new File(ideaHome, "lib").listFiles(junitFilter)[ FD ]
Line_16 $$ if (junitJars != null && junitJars.length > 0) -->Line_26 $$ if (junitJar != null) [ CD ]
Line_26 $$ if (junitJar != null) -->Line_29 $$ final JpsDependenciesList dependenciesList = rootModel.getDependenciesList()[ CD ]
Line_26 $$ if (junitJar != null) -->Line_30 $$ dependenciesList.addLibraryDependency(jpsLibrary)[ CD ]
Line_26 $$ if (junitJar != null) -->Line_28 $$ jpsLibrary.addRoot(pathToUrl(junitJar.getPath()), JpsOrderRootType.COMPILED)[ CD ]
Line_16 $$ if (junitJars != null && junitJars.length > 0) -->Line_17 $$ final boolean isJUnit4 = junitName.contains("4")[ CD ]
