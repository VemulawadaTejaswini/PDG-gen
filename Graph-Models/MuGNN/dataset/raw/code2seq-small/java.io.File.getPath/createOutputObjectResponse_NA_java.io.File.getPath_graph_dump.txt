Line_6 $$ final BinaryContent content = fileObject.getContent()-->Line_7 $$ if (content != null) [ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_18 $$ final String relativePath = fileObject.getRelativePath()[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_27 $$ builder.setResponseType(JavacRemoteProto.Message.Response.Type.OUTPUT_OBJECT).setOutputObject(msgBuilder.build())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_4 $$ msgBuilder.setKind(convertKind(fileObject.getKind()))[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_14 $$ final File outputRoot = fileObject.getOutputRoot()[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_6 $$ final BinaryContent content = fileObject.getContent()[ FD ]
Line_14 $$ final File outputRoot = fileObject.getOutputRoot()-->Line_15 $$ if (outputRoot != null) [ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_18 $$ final String relativePath = fileObject.getRelativePath()[ FD ]
Line_6 $$ final BinaryContent content = fileObject.getContent()-->Line_8 $$ msgBuilder.setContent(ByteString.copyFrom(content.getBuffer(), content.getOffset(), content.getLength()))[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_7 $$ if (content != null) [ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_4 $$ msgBuilder.setKind(convertKind(fileObject.getKind()))[ CD ]
Line_22 $$ final URI srcUri = fileObject.getSourceUri()-->Line_24 $$ msgBuilder.setSourceUri(srcUri.toString())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_22 $$ final URI srcUri = fileObject.getSourceUri()[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_24 $$ msgBuilder.setSourceUri(srcUri.toString())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_5 $$ msgBuilder.setFilePath(FileUtil.toSystemIndependentName(fileObject.getFile().getPath()))[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_23 $$ if (srcUri != null) [ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_5 $$ msgBuilder.setFilePath(FileUtil.toSystemIndependentName(fileObject.getFile().getPath()))[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_4 $$ msgBuilder.setKind(convertKind(fileObject.getKind()))[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_15 $$ if (outputRoot != null) [ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_28 $$ return builder.build()[ CD ]
Line_22 $$ final URI srcUri = fileObject.getSourceUri()-->Line_23 $$ if (srcUri != null) [ FD ]
Line_19 $$ if (relativePath != null) -->Line_20 $$ msgBuilder.setRelativePath(relativePath)[ CD ]
Line_15 $$ if (outputRoot != null) -->Line_16 $$ msgBuilder.setOutputRoot(FileUtil.toSystemIndependentName(outputRoot.getPath()))[ CD ]
Line_26 $$ final JavacRemoteProto.Message.Response.Builder builder = JavacRemoteProto.Message.Response.newBuilder()-->Line_28 $$ return builder.build()[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_8 $$ msgBuilder.setContent(ByteString.copyFrom(content.getBuffer(), content.getOffset(), content.getLength()))[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_6 $$ final BinaryContent content = fileObject.getContent()[ CD ]
Line_10 $$ final String className = fileObject.getClassName()-->Line_11 $$ if (className != null) [ FD ]
Line_23 $$ if (srcUri != null) -->Line_24 $$ msgBuilder.setSourceUri(srcUri.toString())[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()[ CD ]
Line_18 $$ final String relativePath = fileObject.getRelativePath()-->Line_19 $$ if (relativePath != null) [ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_5 $$ msgBuilder.setFilePath(FileUtil.toSystemIndependentName(fileObject.getFile().getPath()))[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_12 $$ msgBuilder.setClassName(className)[ FD ]
Line_18 $$ final String relativePath = fileObject.getRelativePath()-->Line_20 $$ msgBuilder.setRelativePath(relativePath)[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_10 $$ final String className = fileObject.getClassName()[ FD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_20 $$ msgBuilder.setRelativePath(relativePath)[ FD ]
Line_11 $$ if (className != null) -->Line_12 $$ msgBuilder.setClassName(className)[ CD ]
Line_14 $$ final File outputRoot = fileObject.getOutputRoot()-->Line_16 $$ msgBuilder.setOutputRoot(FileUtil.toSystemIndependentName(outputRoot.getPath()))[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_26 $$ final JavacRemoteProto.Message.Response.Builder builder = JavacRemoteProto.Message.Response.newBuilder()[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_19 $$ if (relativePath != null) [ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_14 $$ final File outputRoot = fileObject.getOutputRoot()[ CD ]
Line_7 $$ if (content != null) -->Line_8 $$ msgBuilder.setContent(ByteString.copyFrom(content.getBuffer(), content.getOffset(), content.getLength()))[ CD ]
Line_3 $$ final JavacRemoteProto.Message.Response.OutputObject.Builder msgBuilder = JavacRemoteProto.Message.Response.OutputObject.newBuilder()-->Line_16 $$ msgBuilder.setOutputRoot(FileUtil.toSystemIndependentName(outputRoot.getPath()))[ FD ]
Line_26 $$ final JavacRemoteProto.Message.Response.Builder builder = JavacRemoteProto.Message.Response.newBuilder()-->Line_27 $$ builder.setResponseType(JavacRemoteProto.Message.Response.Type.OUTPUT_OBJECT).setOutputObject(msgBuilder.build())[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_11 $$ if (className != null) [ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_22 $$ final URI srcUri = fileObject.getSourceUri()[ CD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_10 $$ final String className = fileObject.getClassName()[ CD ]
Line_10 $$ final String className = fileObject.getClassName()-->Line_12 $$ msgBuilder.setClassName(className)[ FD ]
Line_2 $$ public static JavacRemoteProto.Message.Response createOutputObjectResponse(OutputFileObject fileObject) -->Line_27 $$ builder.setResponseType(JavacRemoteProto.Message.Response.Type.OUTPUT_OBJECT).setOutputObject(msgBuilder.build())[ CD ]
