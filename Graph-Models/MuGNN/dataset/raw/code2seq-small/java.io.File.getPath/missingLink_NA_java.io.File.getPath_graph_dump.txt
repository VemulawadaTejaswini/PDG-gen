Line_2 $$ public void missingLink() throws Exception -->Line_5 $$ final File link = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link").getPath(), false)[ CD ]
Line_2 $$ public void missingLink() throws Exception -->Line_7 $$ assertNull(attributes.type)[ CD ]
Line_2 $$ public void missingLink() throws Exception -->Line_6 $$ final FileAttributes attributes = getAttributes(link)[ CD ]
Line_10 $$ final String target = FileSystemUtil.resolveSymLink(link)-->Line_11 $$ assertNull(target, target)[ FD ]
Line_2 $$ public void missingLink() throws Exception -->Line_11 $$ assertNull(target, target)[ CD ]
Line_2 $$ public void missingLink() throws Exception -->Line_10 $$ final String target = FileSystemUtil.resolveSymLink(link)[ CD ]
Line_5 $$ final File link = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link").getPath(), false)-->Line_10 $$ final String target = FileSystemUtil.resolveSymLink(link)[ FD ]
Line_2 $$ public void missingLink() throws Exception -->Line_3 $$ assumeTrue(SystemInfo.areSymLinksSupported)[ CD ]
Line_2 $$ public void missingLink() throws Exception -->Line_8 $$ assertEquals(FileAttributes.SYM_LINK, attributes.flags)[ CD ]
Line_2 $$ public void missingLink() throws Exception -->Line_4 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt", false)[ CD ]
Line_4 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt", false)-->Line_5 $$ final File link = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link").getPath(), false)[ FD ]
Line_5 $$ final File link = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link").getPath(), false)-->Line_6 $$ final FileAttributes attributes = getAttributes(link)[ FD ]
Line_2 $$ public void missingLink() throws Exception -->Line_9 $$ assertEquals(0, attributes.length)[ CD ]
