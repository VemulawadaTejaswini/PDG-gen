Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_6 $$ updateSettingsXml("<localRepository>" + getRepositoryPath() + "</localRepository>")[ CD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_3 $$ if (ignore())[ CD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_9 $$ importProjects(bom, project)[ CD ]
Line_7 $$ VirtualFile bom = createModulePom("bom", "<groupId>test</groupId>" + "<artifactId>bom</artifactId>" + "<packaging>pom</packaging>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>junit</groupId>" + "      <artifactId>junit</artifactId>" + "      <version>4.0</version>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>")-->Line_14 $$ myProjectsManager.scheduleResolveInTests(Arrays.asList(myProjectsManager.findProject(bom), myProjectsManager.findProject(project)))[ FD ]
Line_8 $$ VirtualFile project = createModulePom("project", "<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>test</groupId>" + "      <artifactId>bom</artifactId>" + "      <version>1</version>" + "      <type>pom</type>" + "      <scope>import</scope>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>" + "<dependencies>" + "  <dependency>" + "    <groupId>junit</groupId>" + "    <artifactId>junit</artifactId>" + "  </dependency>" + "</dependencies>")-->Line_9 $$ importProjects(bom, project)[ FD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_14 $$ myProjectsManager.scheduleResolveInTests(Arrays.asList(myProjectsManager.findProject(bom), myProjectsManager.findProject(project)))[ CD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_19 $$ assertModuleLibDeps("project")[ CD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_8 $$ VirtualFile project = createModulePom("project", "<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>test</groupId>" + "      <artifactId>bom</artifactId>" + "      <version>1</version>" + "      <type>pom</type>" + "      <scope>import</scope>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>" + "<dependencies>" + "  <dependency>" + "    <groupId>junit</groupId>" + "    <artifactId>junit</artifactId>" + "  </dependency>" + "</dependencies>")[ CD ]
Line_3 $$ if (ignore())-->Line_4 $$ return[ CD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_15 $$ myProjectsManager.waitForResolvingCompletion()[ CD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_7 $$ VirtualFile bom = createModulePom("bom", "<groupId>test</groupId>" + "<artifactId>bom</artifactId>" + "<packaging>pom</packaging>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>junit</groupId>" + "      <artifactId>junit</artifactId>" + "      <version>4.0</version>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>")[ CD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_5 $$ setRepositoryPath(new File(myDir, "/repo").getPath())[ CD ]
Line_7 $$ VirtualFile bom = createModulePom("bom", "<groupId>test</groupId>" + "<artifactId>bom</artifactId>" + "<packaging>pom</packaging>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>junit</groupId>" + "      <artifactId>junit</artifactId>" + "      <version>4.0</version>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>")-->Line_9 $$ importProjects(bom, project)[ FD ]
Line_8 $$ VirtualFile project = createModulePom("project", "<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencyManagement>" + "  <dependencies>" + "    <dependency>" + "      <groupId>test</groupId>" + "      <artifactId>bom</artifactId>" + "      <version>1</version>" + "      <type>pom</type>" + "      <scope>import</scope>" + "    </dependency>" + "  </dependencies>" + "</dependencyManagement>" + "<dependencies>" + "  <dependency>" + "    <groupId>junit</groupId>" + "    <artifactId>junit</artifactId>" + "  </dependency>" + "</dependencies>")-->Line_14 $$ myProjectsManager.scheduleResolveInTests(Arrays.asList(myProjectsManager.findProject(bom), myProjectsManager.findProject(project)))[ FD ]
Line_2 $$ public void testImportingNotInstalledDependencies() throws Exception -->Line_10 $$ assertModules("bom", "project")[ CD ]
