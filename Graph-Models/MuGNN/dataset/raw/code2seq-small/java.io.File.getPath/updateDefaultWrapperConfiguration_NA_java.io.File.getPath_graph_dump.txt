Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_8 $$ if (wrapperConfiguration == null)[ FD ]
Line_15 $$ Properties wrapperProperties = new Properties()-->Line_19 $$ wrapperProperties.setProperty(WrapperExecutor.ZIP_STORE_BASE_PROPERTY, wrapperConfiguration.getZipBase())[ FD ]
Line_10 $$ String currentDistributionUri = wrapperConfiguration.getDistribution().toString()-->Line_11 $$ if (StringUtil.endsWith(currentDistributionUri, ALL_ZIP_DISTRIBUTION_URI_SUFFIX))[ FD ]
Line_2 $$ private static void updateDefaultWrapperConfiguration(@NotNull String linkedProjectPath) -->Line_4 $$ final File wrapperPropertiesFile = GradleUtil.findDefaultWrapperPropertiesFile(linkedProjectPath)[ FD ]
Line_4 $$ final File wrapperPropertiesFile = GradleUtil.findDefaultWrapperPropertiesFile(linkedProjectPath)-->Line_22 $$ LocalFileSystem.getInstance().refreshIoFiles(Collections.singletonList(wrapperPropertiesFile))[ FD ]
Line_15 $$ Properties wrapperProperties = new Properties()-->Line_21 $$ GUtil.saveProperties(wrapperProperties, new File(wrapperPropertiesFile.getPath()))[ FD ]
Line_15 $$ Properties wrapperProperties = new Properties()-->Line_16 $$ wrapperProperties.setProperty(WrapperExecutor.DISTRIBUTION_URL_PROPERTY, wrapperConfiguration.getDistribution().toString())[ FD ]
Line_11 $$ if (StringUtil.endsWith(currentDistributionUri, ALL_ZIP_DISTRIBUTION_URI_SUFFIX))-->Line_12 $$ return[ CD ]
Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_17 $$ wrapperProperties.setProperty(WrapperExecutor.DISTRIBUTION_BASE_PROPERTY, wrapperConfiguration.getDistributionBase())[ FD ]
Line_15 $$ Properties wrapperProperties = new Properties()-->Line_20 $$ wrapperProperties.setProperty(WrapperExecutor.ZIP_STORE_PATH_PROPERTY, wrapperConfiguration.getZipPath())[ FD ]
Line_4 $$ final File wrapperPropertiesFile = GradleUtil.findDefaultWrapperPropertiesFile(linkedProjectPath)-->Line_21 $$ GUtil.saveProperties(wrapperProperties, new File(wrapperPropertiesFile.getPath()))[ FD ]
Line_5 $$ if (wrapperPropertiesFile == null)-->Line_6 $$ return[ CD ]
Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_19 $$ wrapperProperties.setProperty(WrapperExecutor.ZIP_STORE_BASE_PROPERTY, wrapperConfiguration.getZipBase())[ FD ]
Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_10 $$ String currentDistributionUri = wrapperConfiguration.getDistribution().toString()[ FD ]
Line_2 $$ private static void updateDefaultWrapperConfiguration(@NotNull String linkedProjectPath) -->Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)[ FD ]
Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_14 $$ wrapperConfiguration.setDistribution(new URI(distributionUri))[ FD ]
Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_20 $$ wrapperProperties.setProperty(WrapperExecutor.ZIP_STORE_PATH_PROPERTY, wrapperConfiguration.getZipPath())[ FD ]
Line_15 $$ Properties wrapperProperties = new Properties()-->Line_18 $$ wrapperProperties.setProperty(WrapperExecutor.DISTRIBUTION_PATH_PROPERTY, wrapperConfiguration.getDistributionPath())[ FD ]
Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_18 $$ wrapperProperties.setProperty(WrapperExecutor.DISTRIBUTION_PATH_PROPERTY, wrapperConfiguration.getDistributionPath())[ FD ]
Line_7 $$ final WrapperConfiguration wrapperConfiguration = GradleUtil.getWrapperConfiguration(linkedProjectPath)-->Line_16 $$ wrapperProperties.setProperty(WrapperExecutor.DISTRIBUTION_URL_PROPERTY, wrapperConfiguration.getDistribution().toString())[ FD ]
Line_4 $$ final File wrapperPropertiesFile = GradleUtil.findDefaultWrapperPropertiesFile(linkedProjectPath)-->Line_5 $$ if (wrapperPropertiesFile == null)[ FD ]
Line_15 $$ Properties wrapperProperties = new Properties()-->Line_17 $$ wrapperProperties.setProperty(WrapperExecutor.DISTRIBUTION_BASE_PROPERTY, wrapperConfiguration.getDistributionBase())[ FD ]
Line_8 $$ if (wrapperConfiguration == null)-->Line_9 $$ return[ CD ]
Line_10 $$ String currentDistributionUri = wrapperConfiguration.getDistribution().toString()-->Line_13 $$ final String distributionUri = currentDistributionUri.substring(0, currentDistributionUri.lastIndexOf('-')) + ALL_ZIP_DISTRIBUTION_URI_SUFFIX[ FD ]
