Line_13 $$ String moduleOutputPath = FileUtil.toCanonicalPath(moduleOutputDir.getPath())-->Line_15 $$ finalOutputs.put(target, moduleOutputPath.endsWith("/") ? moduleOutputPath : moduleOutputPath + "/")[ FD ]
Line_7 $$ if (moduleOutputDir == null) -->Line_9 $$ return null[ CD ]
Line_4 $$ Map<ModuleBuildTarget, String> finalOutputs = new LinkedHashMap<ModuleBuildTarget, String>()-->Line_15 $$ finalOutputs.put(target, moduleOutputPath.endsWith("/") ? moduleOutputPath : moduleOutputPath + "/")[ FD ]
Line_6 $$ File moduleOutputDir = target.getOutputDir()-->Line_7 $$ if (moduleOutputDir == null) [ FD ]
Line_6 $$ File moduleOutputDir = target.getOutputDir()-->Line_13 $$ String moduleOutputPath = FileUtil.toCanonicalPath(moduleOutputDir.getPath())[ FD ]
Line_7 $$ if (moduleOutputDir == null) -->Line_8 $$ context.processMessage(new CompilerMessage(builder.getPresentableName(), BuildMessage.Kind.ERROR, "Output directory not specified for module " + target.getModule().getName()))[ CD ]
Line_5 $$ for (ModuleBuildTarget target : chunk.getTargets()) -->Line_15 $$ finalOutputs.put(target, moduleOutputPath.endsWith("/") ? moduleOutputPath : moduleOutputPath + "/")[ FD ]
Line_5 $$ for (ModuleBuildTarget target : chunk.getTargets()) -->Line_6 $$ File moduleOutputDir = target.getOutputDir()[ FD ]
Line_5 $$ for (ModuleBuildTarget target : chunk.getTargets()) -->Line_8 $$ context.processMessage(new CompilerMessage(builder.getPresentableName(), BuildMessage.Kind.ERROR, "Output directory not specified for module " + target.getModule().getName()))[ FD ]
