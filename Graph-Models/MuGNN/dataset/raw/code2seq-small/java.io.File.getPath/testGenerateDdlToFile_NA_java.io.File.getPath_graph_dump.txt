Line_2 $$ public void testGenerateDdlToFile() -->Line_7 $$ if (doesDialectSupportDropTableIfExist() && schemaExport.getExceptions().size() > 0) [ CD ]
Line_7 $$ if (doesDialectSupportDropTableIfExist() && schemaExport.getExceptions().size() > 0) -->Line_8 $$ assertEquals(2, schemaExport.getExceptions().size())[ CD ]
Line_4 $$ java.io.File outFile = new java.io.File("schema.ddl")-->Line_12 $$ outFile.delete()[ FD ]
Line_2 $$ public void testGenerateDdlToFile() -->Line_4 $$ java.io.File outFile = new java.io.File("schema.ddl")[ CD ]
Line_3 $$ final SchemaExport schemaExport = createSchemaExport(metadata, serviceRegistry)-->Line_8 $$ assertEquals(2, schemaExport.getExceptions().size())[ FD ]
Line_3 $$ final SchemaExport schemaExport = createSchemaExport(metadata, serviceRegistry)-->Line_6 $$ schemaExport.execute(false, false, false, true)[ FD ]
Line_4 $$ java.io.File outFile = new java.io.File("schema.ddl")-->Line_11 $$ assertTrue(outFile.length() > 0)[ FD ]
Line_2 $$ public void testGenerateDdlToFile() -->Line_11 $$ assertTrue(outFile.length() > 0)[ CD ]
Line_4 $$ java.io.File outFile = new java.io.File("schema.ddl")-->Line_5 $$ schemaExport.setOutputFile(outFile.getPath())[ FD ]
Line_2 $$ public void testGenerateDdlToFile() -->Line_6 $$ schemaExport.execute(false, false, false, true)[ CD ]
Line_3 $$ final SchemaExport schemaExport = createSchemaExport(metadata, serviceRegistry)-->Line_7 $$ if (doesDialectSupportDropTableIfExist() && schemaExport.getExceptions().size() > 0) [ FD ]
Line_4 $$ java.io.File outFile = new java.io.File("schema.ddl")-->Line_10 $$ assertTrue(outFile.exists())[ FD ]
Line_3 $$ final SchemaExport schemaExport = createSchemaExport(metadata, serviceRegistry)-->Line_5 $$ schemaExport.setOutputFile(outFile.getPath())[ FD ]
Line_2 $$ public void testGenerateDdlToFile() -->Line_12 $$ outFile.delete()[ CD ]
Line_2 $$ public void testGenerateDdlToFile() -->Line_10 $$ assertTrue(outFile.exists())[ CD ]
Line_2 $$ public void testGenerateDdlToFile() -->Line_5 $$ schemaExport.setOutputFile(outFile.getPath())[ CD ]
Line_2 $$ public void testGenerateDdlToFile() -->Line_3 $$ final SchemaExport schemaExport = createSchemaExport(metadata, serviceRegistry)[ CD ]
