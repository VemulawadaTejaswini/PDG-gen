Line_23 $$ status = localFs.getFileStatus(pathC)-->Line_24 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_21 $$ status = localFs.getFileStatus(new Path(dirB))-->Line_22 $$ Assert.assertEquals("local dir not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_10 $$ Path pathC = new Path(dirC)-->Line_12 $$ localFs.mkdir(pathC, null, true)[ FD ]
Line_19 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_20 $$ Assert.assertEquals("local dir parent not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_6 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_12 $$ localFs.mkdir(pathC, null, true)[ FD ]
Line_16 $$ FsPermission defaultPerm = FsPermission.getDefault().applyUMask(new FsPermission((short) FsPermission.DEFAULT_UMASK))-->Line_22 $$ Assert.assertEquals("local dir not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_11 $$ FsPermission permDirC = new FsPermission((short) 0710)-->Line_13 $$ localFs.setPermission(pathC, permDirC)[ FD ]
Line_21 $$ status = localFs.getFileStatus(new Path(dirB))-->Line_23 $$ status = localFs.getFileStatus(pathC)[ FD ]
Line_10 $$ Path pathC = new Path(dirC)-->Line_13 $$ localFs.setPermission(pathC, permDirC)[ FD ]
Line_19 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_24 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_16 $$ FsPermission defaultPerm = FsPermission.getDefault().applyUMask(new FsPermission((short) FsPermission.DEFAULT_UMASK))-->Line_20 $$ Assert.assertEquals("local dir parent not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_19 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_21 $$ status = localFs.getFileStatus(new Path(dirB))[ FD ]
Line_17 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)-->Line_18 $$ Assert.assertTrue(createResult)[ FD ]
Line_15 $$ DirectoryCollection dc = new DirectoryCollection(dirs, conf.getFloat(YarnConfiguration.NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE, YarnConfiguration.DEFAULT_NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE))-->Line_17 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)[ FD ]
Line_16 $$ FsPermission defaultPerm = FsPermission.getDefault().applyUMask(new FsPermission((short) FsPermission.DEFAULT_UMASK))-->Line_17 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)[ FD ]
Line_6 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_19 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))[ FD ]
Line_4 $$ Configuration conf = new Configuration()-->Line_15 $$ DirectoryCollection dc = new DirectoryCollection(dirs, conf.getFloat(YarnConfiguration.NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE, YarnConfiguration.DEFAULT_NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE))[ FD ]
Line_6 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_23 $$ status = localFs.getFileStatus(pathC)[ FD ]
Line_19 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_23 $$ status = localFs.getFileStatus(pathC)[ FD ]
Line_6 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_21 $$ status = localFs.getFileStatus(new Path(dirB))[ FD ]
Line_11 $$ FsPermission permDirC = new FsPermission((short) 0710)-->Line_24 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_6 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_13 $$ localFs.setPermission(pathC, permDirC)[ FD ]
Line_4 $$ Configuration conf = new Configuration()-->Line_6 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)[ FD ]
Line_4 $$ Configuration conf = new Configuration()-->Line_5 $$ conf.set(CommonConfigurationKeys.FS_PERMISSIONS_UMASK_KEY, "077")[ FD ]
Line_19 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_22 $$ Assert.assertEquals("local dir not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_10 $$ Path pathC = new Path(dirC)-->Line_23 $$ status = localFs.getFileStatus(pathC)[ FD ]
Line_21 $$ status = localFs.getFileStatus(new Path(dirB))-->Line_24 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_6 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_17 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)[ FD ]
