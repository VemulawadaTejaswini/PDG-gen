Line_2 $$ public void testCreateDirectories() throws IOException -->Line_21 $$ Assert.assertEquals("local dir not created with proper permissions", defaultPerm, status.getPermission())[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_6 $$ String dirA = new File(testDir, "dirA").getPath()[ CD ]
Line_15 $$ FsPermission defaultPerm = FsPermission.getDefault().applyUMask(new FsPermission((short) FsPermission.DEFAULT_UMASK))-->Line_19 $$ Assert.assertEquals("local dir parent not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_20 $$ status = localFs.getFileStatus(new Path(dirB))-->Line_22 $$ status = localFs.getFileStatus(pathC)[ FD ]
Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_18 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))[ FD ]
Line_18 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_23 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_20 $$ status = localFs.getFileStatus(new Path(dirB))-->Line_21 $$ Assert.assertEquals("local dir not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_20 $$ status = localFs.getFileStatus(new Path(dirB))[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_17 $$ Assert.assertTrue(createResult)[ CD ]
Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_12 $$ localFs.setPermission(pathC, permDirC)[ FD ]
Line_16 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)-->Line_17 $$ Assert.assertTrue(createResult)[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_19 $$ Assert.assertEquals("local dir parent not created with proper permissions", defaultPerm, status.getPermission())[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_9 $$ Path pathC = new Path(dirC)-->Line_11 $$ localFs.mkdir(pathC, null, true)[ FD ]
Line_10 $$ FsPermission permDirC = new FsPermission((short) 0710)-->Line_12 $$ localFs.setPermission(pathC, permDirC)[ FD ]
Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_22 $$ status = localFs.getFileStatus(pathC)[ FD ]
Line_14 $$ DirectoryCollection dc = new DirectoryCollection(dirs, conf.getFloat(YarnConfiguration.NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE, YarnConfiguration.DEFAULT_NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE))-->Line_16 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_23 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ CD ]
Line_10 $$ FsPermission permDirC = new FsPermission((short) 0710)-->Line_23 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_11 $$ localFs.mkdir(pathC, null, true)[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)[ CD ]
Line_20 $$ status = localFs.getFileStatus(new Path(dirB))-->Line_23 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_18 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_19 $$ Assert.assertEquals("local dir parent not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_18 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_21 $$ Assert.assertEquals("local dir not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_16 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_10 $$ FsPermission permDirC = new FsPermission((short) 0710)[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_14 $$ DirectoryCollection dc = new DirectoryCollection(dirs, conf.getFloat(YarnConfiguration.NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE, YarnConfiguration.DEFAULT_NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE))[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_15 $$ FsPermission defaultPerm = FsPermission.getDefault().applyUMask(new FsPermission((short) FsPermission.DEFAULT_UMASK))[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_12 $$ localFs.setPermission(pathC, permDirC)[ CD ]
Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_16 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_7 $$ String dirB = new File(dirA, "dirB").getPath()[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_8 $$ String dirC = new File(testDir, "dirC").getPath()[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_9 $$ Path pathC = new Path(dirC)[ CD ]
Line_9 $$ Path pathC = new Path(dirC)-->Line_22 $$ status = localFs.getFileStatus(pathC)[ FD ]
Line_18 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_20 $$ status = localFs.getFileStatus(new Path(dirB))[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_22 $$ status = localFs.getFileStatus(pathC)[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_11 $$ localFs.mkdir(pathC, null, true)[ CD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_4 $$ conf.set(CommonConfigurationKeys.FS_PERMISSIONS_UMASK_KEY, "077")[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_14 $$ DirectoryCollection dc = new DirectoryCollection(dirs, conf.getFloat(YarnConfiguration.NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE, YarnConfiguration.DEFAULT_NM_MAX_PER_DISK_UTILIZATION_PERCENTAGE))[ FD ]
Line_15 $$ FsPermission defaultPerm = FsPermission.getDefault().applyUMask(new FsPermission((short) FsPermission.DEFAULT_UMASK))-->Line_21 $$ Assert.assertEquals("local dir not created with proper permissions", defaultPerm, status.getPermission())[ FD ]
Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)-->Line_20 $$ status = localFs.getFileStatus(new Path(dirB))[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_18 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))[ CD ]
Line_22 $$ status = localFs.getFileStatus(pathC)-->Line_23 $$ Assert.assertEquals("existing local directory permissions modified", permDirC, status.getPermission())[ FD ]
Line_9 $$ Path pathC = new Path(dirC)-->Line_12 $$ localFs.setPermission(pathC, permDirC)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_5 $$ FileContext localFs = FileContext.getLocalFSFileContext(conf)[ FD ]
Line_2 $$ public void testCreateDirectories() throws IOException -->Line_13 $$ String[] dirs = [ CD ]
Line_15 $$ FsPermission defaultPerm = FsPermission.getDefault().applyUMask(new FsPermission((short) FsPermission.DEFAULT_UMASK))-->Line_16 $$ boolean createResult = dc.createNonExistentDirs(localFs, defaultPerm)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_4 $$ conf.set(CommonConfigurationKeys.FS_PERMISSIONS_UMASK_KEY, "077")[ FD ]
Line_18 $$ FileStatus status = localFs.getFileStatus(new Path(dirA))-->Line_22 $$ status = localFs.getFileStatus(pathC)[ FD ]
