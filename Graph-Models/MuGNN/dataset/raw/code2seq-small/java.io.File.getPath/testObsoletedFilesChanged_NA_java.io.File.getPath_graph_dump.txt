Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_20 $$ sstableOld.selfRef().release()[ CD ]
Line_6 $$ SSTableReader sstableNew = sstable(dataFolder, cfs, 1, 128)-->Line_24 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ FD ]
Line_4 $$ File dataFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables()-->Line_5 $$ SSTableReader sstableOld = sstable(dataFolder, cfs, 0, 128)[ FD ]
Line_3 $$ ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE)-->Line_6 $$ SSTableReader sstableNew = sstable(dataFolder, cfs, 1, 128)[ FD ]
Line_4 $$ File dataFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables()-->Line_6 $$ SSTableReader sstableNew = sstable(dataFolder, cfs, 1, 128)[ FD ]
Line_5 $$ SSTableReader sstableOld = sstable(dataFolder, cfs, 0, 128)-->Line_20 $$ sstableOld.selfRef().release()[ FD ]
Line_3 $$ ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE)-->Line_5 $$ SSTableReader sstableOld = sstable(dataFolder, cfs, 0, 128)[ FD ]
Line_5 $$ SSTableReader sstableOld = sstable(dataFolder, cfs, 0, 128)-->Line_19 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ FD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_6 $$ SSTableReader sstableNew = sstable(dataFolder, cfs, 1, 128)[ CD ]
Line_6 $$ SSTableReader sstableNew = sstable(dataFolder, cfs, 1, 128)-->Line_21 $$ sstableNew.selfRef().release()[ FD ]
Line_4 $$ File dataFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables()-->Line_24 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ FD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_19 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ CD ]
Line_5 $$ SSTableReader sstableOld = sstable(dataFolder, cfs, 0, 128)-->Line_24 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ FD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_4 $$ File dataFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables()[ CD ]
Line_4 $$ File dataFolder = new Directories(cfs.metadata).getDirectoryForNewSSTables()-->Line_19 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ FD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_9 $$ assertNotNull(log)[ CD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_24 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ CD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_21 $$ sstableNew.selfRef().release()[ CD ]
Line_6 $$ SSTableReader sstableNew = sstable(dataFolder, cfs, 1, 128)-->Line_10 $$ log.trackNew(sstableNew)[ FD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_10 $$ log.trackNew(sstableNew)[ CD ]
Line_6 $$ SSTableReader sstableNew = sstable(dataFolder, cfs, 1, 128)-->Line_19 $$ assertFiles(dataFolder.getPath(), Sets.newHashSet(Iterables.concat(sstableNew.getAllFilePaths(), sstableOld.getAllFilePaths(), log.logFilePaths())))[ FD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_5 $$ SSTableReader sstableOld = sstable(dataFolder, cfs, 0, 128)[ CD ]
Line_2 $$ private static void testObsoletedFilesChanged(Consumer<SSTableReader> modifier) throws IOException -->Line_3 $$ ColumnFamilyStore cfs = MockSchema.newCFS(KEYSPACE)[ CD ]
