Line_44 $$ if (relPath.contains("..")) -->Line_45 $$ relPath = FileUtil.getRelativePath(FileUtil.toSystemIndependentName(new File(localJavaHome).getParent()), localJarPath, '/')[ CD ]
Line_19 $$ final Class<StandardJavaFileManager> optimizedFileManagerClass = getOptimizedFileManagerClass()-->Line_20 $$ if (optimizedFileManagerClass != null) [ FD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_58 $$ cp.addAll(compilingTool.getAdditionalClasspath())[ FD ]
Line_40 $$ if (systemCompiler != null) -->Line_43 $$ if (relPath != null) [ CD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_58 $$ cp.addAll(compilingTool.getAdditionalClasspath())[ CD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_3 $$ final Set<File> cp = new LinkedHashSet<File>()[ CD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_19 $$ final Class<StandardJavaFileManager> optimizedFileManagerClass = getOptimizedFileManagerClass()[ CD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_18 $$ cp.add(getJpsPluginSystemClassesPath())[ CD ]
Line_43 $$ if (relPath != null) -->Line_44 $$ if (relPath.contains("..")) [ CD ]
Line_35 $$ if (candidate.exists()) -->Line_40 $$ if (systemCompiler != null) [ CD ]
Line_59 $$ final Class<JavaSourceTransformer> transformerClass = JavaSourceTransformer.class-->Line_60 $$ final ServiceLoader<JavaSourceTransformer> loader = ServiceLoader.load(transformerClass, transformerClass.getClassLoader())[ FD ]
Line_35 $$ if (candidate.exists()) -->Line_36 $$ cp.add(candidate)[ CD ]
Line_47 $$ if (relPath != null) -->Line_48 $$ final File targetFile = new File(sdkHome, relPath)[ CD ]
Line_3 $$ final Set<File> cp = new LinkedHashSet<File>()-->Line_8 $$ cp.add(new File(path))[ FD ]
Line_42 $$ String relPath = FileUtil.getRelativePath(localJavaHome, localJarPath, '/')-->Line_45 $$ relPath = FileUtil.getRelativePath(FileUtil.toSystemIndependentName(new File(localJavaHome).getParent()), localJarPath, '/')[ FD ]
Line_42 $$ String relPath = FileUtil.getRelativePath(localJavaHome, localJarPath, '/')-->Line_44 $$ if (relPath.contains("..")) [ FD ]
Line_3 $$ final Set<File> cp = new LinkedHashSet<File>()-->Line_58 $$ cp.addAll(compilingTool.getAdditionalClasspath())[ FD ]
Line_42 $$ String relPath = FileUtil.getRelativePath(localJavaHome, localJarPath, '/')-->Line_47 $$ if (relPath != null) [ FD ]
Line_41 $$ final String localJarPath = FileUtil.toSystemIndependentName(getResourceFile(systemCompiler.getClass()).getPath())-->Line_45 $$ relPath = FileUtil.getRelativePath(FileUtil.toSystemIndependentName(new File(localJavaHome).getParent()), localJarPath, '/')[ FD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_64 $$ return new ArrayList<File>(cp)[ CD ]
Line_61 $$ for (JavaSourceTransformer t : loader) -->Line_62 $$ cp.add(getResourceFile(t.getClass()))[ FD ]
Line_32 $$ final String localJavaHome = FileUtil.toSystemIndependentName(SystemProperties.getJavaHome())-->Line_42 $$ String relPath = FileUtil.getRelativePath(localJavaHome, localJarPath, '/')[ FD ]
Line_40 $$ if (systemCompiler != null) -->Line_41 $$ final String localJarPath = FileUtil.toSystemIndependentName(getResourceFile(systemCompiler.getClass()).getPath())[ CD ]
Line_40 $$ if (systemCompiler != null) -->Line_42 $$ String relPath = FileUtil.getRelativePath(localJavaHome, localJarPath, '/')[ CD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_20 $$ if (optimizedFileManagerClass != null) [ CD ]
Line_3 $$ final Set<File> cp = new LinkedHashSet<File>()-->Line_36 $$ cp.add(candidate)[ FD ]
Line_43 $$ if (relPath != null) -->Line_47 $$ if (relPath != null) [ CD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_60 $$ final ServiceLoader<JavaSourceTransformer> loader = ServiceLoader.load(transformerClass, transformerClass.getClassLoader())[ CD ]
Line_45 $$ relPath = FileUtil.getRelativePath(FileUtil.toSystemIndependentName(new File(localJavaHome).getParent()), localJarPath, '/')-->Line_47 $$ if (relPath != null) [ FD ]
Line_3 $$ final Set<File> cp = new LinkedHashSet<File>()-->Line_62 $$ cp.add(getResourceFile(t.getClass()))[ FD ]
Line_42 $$ String relPath = FileUtil.getRelativePath(localJavaHome, localJarPath, '/')-->Line_43 $$ if (relPath != null) [ FD ]
Line_3 $$ final Set<File> cp = new LinkedHashSet<File>()-->Line_18 $$ cp.add(getJpsPluginSystemClassesPath())[ FD ]
Line_2 $$ public static List<File> getExternalJavacProcessClasspath(String sdkHome, JavaCompilingTool compilingTool) -->Line_59 $$ final Class<JavaSourceTransformer> transformerClass = JavaSourceTransformer.class[ CD ]
Line_41 $$ final String localJarPath = FileUtil.toSystemIndependentName(getResourceFile(systemCompiler.getClass()).getPath())-->Line_42 $$ String relPath = FileUtil.getRelativePath(localJavaHome, localJarPath, '/')[ FD ]
