Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_24 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_10 $$ boolean created = child.createNewFile()[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_11 $$ assertTrue(created)[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_37 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_20 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_8 $$ assertFalse(managingFS.wereChildrenAccessed(vFile))[ CD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_20 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))-->Line_24 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_38 $$ assertTrue(managingFS.wereChildrenAccessed(subdirVFile))[ CD ]
Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))-->Line_37 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ FD ]
Line_9 $$ File child = new File(dir, "child")-->Line_18 $$ VirtualFile childVFile = myFS.refreshAndFindFileByPath(child.getPath().replace(File.separatorChar, '/'))[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_30 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_18 $$ VirtualFile childVFile = myFS.refreshAndFindFileByPath(child.getPath().replace(File.separatorChar, '/'))[ CD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_6 $$ assertNotNull(vFile)[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_8 $$ assertFalse(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_32 $$ assertFalse(managingFS.wereChildrenAccessed(subdirVFile))[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_27 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ CD ]
Line_12 $$ File subdir = new File(dir, "subdir")-->Line_13 $$ boolean subdirCreated = subdir.mkdir()[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_31 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_17 $$ assertTrue(subChildCreated)[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_21 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ CD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_26 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_14 $$ assertTrue(subdirCreated)[ CD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_32 $$ assertFalse(managingFS.wereChildrenAccessed(subdirVFile))[ FD ]
Line_18 $$ VirtualFile childVFile = myFS.refreshAndFindFileByPath(child.getPath().replace(File.separatorChar, '/'))-->Line_19 $$ assertNotNull(childVFile)[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_36 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_6 $$ assertNotNull(vFile)[ CD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_20 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))[ CD ]
Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))-->Line_32 $$ assertFalse(managingFS.wereChildrenAccessed(subdirVFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))[ CD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_28 $$ vFile.getChildren()[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_9 $$ File child = new File(dir, "child")[ CD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_36 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_13 $$ boolean subdirCreated = subdir.mkdir()[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_19 $$ assertNotNull(childVFile)[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_16 $$ boolean subChildCreated = subChild.createNewFile()[ CD ]
Line_9 $$ File child = new File(dir, "child")-->Line_10 $$ boolean created = child.createNewFile()[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_7 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_27 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_33 $$ VirtualFile subChildVFile = myFS.refreshAndFindFileByPath(subChild.getPath().replace(File.separatorChar, '/'))[ CD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_38 $$ assertTrue(managingFS.wereChildrenAccessed(subdirVFile))[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_29 $$ assertTrue(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_3 $$ File dir = createTempDirectory(false)-->Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_7 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_26 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ CD ]
Line_15 $$ File subChild = new File(subdir, "subdir")-->Line_16 $$ boolean subChildCreated = subChild.createNewFile()[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_35 $$ assertTrue(managingFS.areChildrenLoaded(vFile))[ CD ]
Line_16 $$ boolean subChildCreated = subChild.createNewFile()-->Line_17 $$ assertTrue(subChildCreated)[ FD ]
Line_10 $$ boolean created = child.createNewFile()-->Line_11 $$ assertTrue(created)[ FD ]
Line_12 $$ File subdir = new File(dir, "subdir")-->Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_25 $$ assertFalse(managingFS.wereChildrenAccessed(subdirVFile))[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_29 $$ assertTrue(managingFS.areChildrenLoaded(vFile))[ CD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_25 $$ assertFalse(managingFS.wereChildrenAccessed(subdirVFile))[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_27 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))-->Line_23 $$ assertNotNull(subdirVFile)[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_30 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_35 $$ assertTrue(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_8 $$ assertFalse(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_21 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_3 $$ File dir = createTempDirectory(false)[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_30 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_34 $$ assertNotNull(subChildVFile)[ CD ]
Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))-->Line_38 $$ assertTrue(managingFS.wereChildrenAccessed(subdirVFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_23 $$ assertNotNull(subdirVFile)[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_36 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ CD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_31 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ CD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_7 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_24 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ CD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_37 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_15 $$ File subChild = new File(subdir, "subdir")[ CD ]
Line_15 $$ File subChild = new File(subdir, "subdir")-->Line_33 $$ VirtualFile subChildVFile = myFS.refreshAndFindFileByPath(subChild.getPath().replace(File.separatorChar, '/'))[ FD ]
Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))-->Line_31 $$ assertFalse(managingFS.areChildrenLoaded(subdirVFile))[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_26 $$ assertFalse(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_21 $$ assertTrue(managingFS.wereChildrenAccessed(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_12 $$ File subdir = new File(dir, "subdir")[ CD ]
Line_5 $$ VirtualFile vFile = myFS.refreshAndFindFileByPath(dir.getPath().replace(File.separatorChar, '/'))-->Line_35 $$ assertTrue(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_22 $$ VirtualFile subdirVFile = myFS.refreshAndFindFileByPath(subdir.getPath().replace(File.separatorChar, '/'))-->Line_25 $$ assertFalse(managingFS.wereChildrenAccessed(subdirVFile))[ FD ]
Line_33 $$ VirtualFile subChildVFile = myFS.refreshAndFindFileByPath(subChild.getPath().replace(File.separatorChar, '/'))-->Line_34 $$ assertNotNull(subChildVFile)[ FD ]
Line_13 $$ boolean subdirCreated = subdir.mkdir()-->Line_14 $$ assertTrue(subdirCreated)[ FD ]
Line_4 $$ ManagingFS managingFS = ManagingFS.getInstance()-->Line_29 $$ assertTrue(managingFS.areChildrenLoaded(vFile))[ FD ]
Line_2 $$ public void testChildrenAccessedButNotCached() throws Exception -->Line_28 $$ vFile.getChildren()[ CD ]
