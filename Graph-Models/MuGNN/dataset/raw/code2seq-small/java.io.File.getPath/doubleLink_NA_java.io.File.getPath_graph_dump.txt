Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_18 $$ assertEquals(file.getPath(), target)[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_9 $$ final File link1 = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link1").getPath())[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_15 $$ assertTimestampsEqual(file.lastModified(), attributes.lastModified)[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_8 $$ assertTrue(file.setWritable(false, false))[ FD ]
Line_11 $$ final FileAttributes attributes = getAttributes(link2)-->Line_16 $$ assertFalse(attributes.isWritable())[ FD ]
Line_9 $$ final File link1 = IoTestUtil.createSymLink(file.getPath(), new File(myTempDirectory, "link1").getPath())-->Line_10 $$ final File link2 = IoTestUtil.createSymLink(link1.getPath(), new File(myTempDirectory, "link2").getPath())[ FD ]
Line_10 $$ final File link2 = IoTestUtil.createSymLink(link1.getPath(), new File(myTempDirectory, "link2").getPath())-->Line_17 $$ final String target = FileSystemUtil.resolveSymLink(link2)[ FD ]
Line_10 $$ final File link2 = IoTestUtil.createSymLink(link1.getPath(), new File(myTempDirectory, "link2").getPath())-->Line_11 $$ final FileAttributes attributes = getAttributes(link2)[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_6 $$ FileUtil.writeToFile(file, myTestData)[ FD ]
Line_17 $$ final String target = FileSystemUtil.resolveSymLink(link2)-->Line_18 $$ assertEquals(file.getPath(), target)[ FD ]
Line_5 $$ final File file = FileUtil.createTempFile(myTempDirectory, "test.", ".txt")-->Line_7 $$ assertTrue(file.setLastModified(file.lastModified() - 5000))[ FD ]
