Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_19 $$ if (cal.getComponents().isEmpty()) [ FD ]
Line_3 $$ OutputStream os = null-->Line_28 $$ StreamUtil.cleanUp(os)[ FD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_12 $$ fileName = fileName.substring(0, pos)[ FD ]
Line_19 $$ if (cal.getComponents().isEmpty()) -->Line_20 $$ calOutput.setValidating(false)[ CD ]
Line_6 $$ if (Validator.isNull(fileName)) -->Line_10 $$ if (pos != -1) [ CD ]
Line_10 $$ if (pos != -1) -->Line_11 $$ extension = fileName.substring(pos + 1)[ CD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_22 $$ calOutput.output(cal, os)[ FD ]
Line_5 $$ String extension = "ics"-->Line_16 $$ File file = FileUtil.createTempFile(fileName, extension)[ FD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_11 $$ extension = fileName.substring(pos + 1)[ FD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_7 $$ fileName = "liferay_calendar."[ FD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_15 $$ fileName = FileUtil.getShortFileName(fileName)[ FD ]
Line_7 $$ fileName = "liferay_calendar."-->Line_12 $$ fileName = fileName.substring(0, pos)[ FD ]
Line_7 $$ fileName = "liferay_calendar."-->Line_9 $$ int pos = fileName.lastIndexOf(CharPool.PERIOD)[ FD ]
Line_9 $$ int pos = fileName.lastIndexOf(CharPool.PERIOD)-->Line_10 $$ if (pos != -1) [ FD ]
Line_15 $$ fileName = FileUtil.getShortFileName(fileName)-->Line_16 $$ File file = FileUtil.createTempFile(fileName, extension)[ FD ]
Line_3 $$ OutputStream os = null-->Line_22 $$ calOutput.output(cal, os)[ FD ]
Line_12 $$ fileName = fileName.substring(0, pos)-->Line_15 $$ fileName = FileUtil.getShortFileName(fileName)[ FD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_16 $$ File file = FileUtil.createTempFile(fileName, extension)[ FD ]
Line_6 $$ if (Validator.isNull(fileName)) -->Line_9 $$ int pos = fileName.lastIndexOf(CharPool.PERIOD)[ CD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_9 $$ int pos = fileName.lastIndexOf(CharPool.PERIOD)[ FD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_6 $$ if (Validator.isNull(fileName)) [ FD ]
Line_10 $$ if (pos != -1) -->Line_12 $$ fileName = fileName.substring(0, pos)[ CD ]
Line_17 $$ os = new UnsyncBufferedOutputStream(new FileOutputStream(file.getPath()))-->Line_22 $$ calOutput.output(cal, os)[ FD ]
Line_7 $$ fileName = "liferay_calendar."-->Line_16 $$ File file = FileUtil.createTempFile(fileName, extension)[ FD ]
Line_18 $$ CalendarOutputter calOutput = new CalendarOutputter()-->Line_20 $$ calOutput.setValidating(false)[ FD ]
Line_16 $$ File file = FileUtil.createTempFile(fileName, extension)-->Line_17 $$ os = new UnsyncBufferedOutputStream(new FileOutputStream(file.getPath()))[ FD ]
Line_18 $$ CalendarOutputter calOutput = new CalendarOutputter()-->Line_22 $$ calOutput.output(cal, os)[ FD ]
Line_6 $$ if (Validator.isNull(fileName)) -->Line_7 $$ fileName = "liferay_calendar."[ CD ]
Line_2 $$ protected File exportICal4j(net.fortuna.ical4j.model.Calendar cal, String fileName) -->Line_3 $$ OutputStream os = null[ CD ]
Line_7 $$ fileName = "liferay_calendar."-->Line_15 $$ fileName = FileUtil.getShortFileName(fileName)[ FD ]
Line_12 $$ fileName = fileName.substring(0, pos)-->Line_16 $$ File file = FileUtil.createTempFile(fileName, extension)[ FD ]
Line_3 $$ OutputStream os = null-->Line_17 $$ os = new UnsyncBufferedOutputStream(new FileOutputStream(file.getPath()))[ FD ]
Line_11 $$ extension = fileName.substring(pos + 1)-->Line_16 $$ File file = FileUtil.createTempFile(fileName, extension)[ FD ]
Line_7 $$ fileName = "liferay_calendar."-->Line_11 $$ extension = fileName.substring(pos + 1)[ FD ]
Line_17 $$ os = new UnsyncBufferedOutputStream(new FileOutputStream(file.getPath()))-->Line_28 $$ StreamUtil.cleanUp(os)[ FD ]
Line_5 $$ String extension = "ics"-->Line_11 $$ extension = fileName.substring(pos + 1)[ FD ]
Line_9 $$ int pos = fileName.lastIndexOf(CharPool.PERIOD)-->Line_12 $$ fileName = fileName.substring(0, pos)[ FD ]
