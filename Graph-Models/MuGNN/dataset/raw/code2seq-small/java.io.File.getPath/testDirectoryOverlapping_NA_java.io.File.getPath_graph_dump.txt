Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")[ CD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_10 $$ refresh(sideDir)[ CD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_35 $$ FileUtil.writeToFile(fileInSubDir, "newest content")[ FD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")[ CD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_42 $$ assertEvent(VFileDeleteEvent.class, fileInTopDir.getPath(), fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_22 $$ assertEvent(VFileContentChangeEvent.class, fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_23 $$ LocalFileSystem.WatchRequest requestForTopDir = watch(topDir)[ FD ]
Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")-->Line_42 $$ assertEvent(VFileDeleteEvent.class, fileInTopDir.getPath(), fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_36 $$ FileUtil.writeToFile(fileInSideDir, "newest content")[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_17 $$ assertEvent(VFileContentChangeEvent.class, fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_21 $$ FileUtil.writeToFile(fileInSideDir, "new content")[ FD ]
Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")-->Line_39 $$ FileUtil.delete(fileInTopDir)[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_42 $$ assertEvent(VFileDeleteEvent.class, fileInTopDir.getPath(), fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_11 $$ LocalFileSystem.WatchRequest requestForSubDir = watch(subDir)[ CD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_37 $$ assertEvent(VFileContentChangeEvent.class, fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_22 $$ assertEvent(VFileContentChangeEvent.class, fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_29 $$ assertEvent(VFileContentChangeEvent.class, fileInTopDir.getPath(), fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_7 $$ File sideDir = createTestDir(myTempDirectory, "side")-->Line_10 $$ refresh(sideDir)[ FD ]
Line_7 $$ File sideDir = createTestDir(myTempDirectory, "side")-->Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_45 $$ delete(topDir)[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_37 $$ assertEvent(VFileContentChangeEvent.class, fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_5 $$ File subDir = createTestDir(topDir, "sub")[ CD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_9 $$ refresh(topDir)[ CD ]
Line_23 $$ LocalFileSystem.WatchRequest requestForTopDir = watch(topDir)-->Line_31 $$ unwatch(requestForTopDir)[ FD ]
Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")-->Line_26 $$ FileUtil.writeToFile(fileInTopDir, "newer content")[ FD ]
Line_11 $$ LocalFileSystem.WatchRequest requestForSubDir = watch(subDir)-->Line_44 $$ unwatch(requestForSubDir, requestForSideDir)[ FD ]
Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")-->Line_19 $$ FileUtil.writeToFile(fileInTopDir, "new content")[ FD ]
Line_5 $$ File subDir = createTestDir(topDir, "sub")-->Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_5 $$ File subDir = createTestDir(topDir, "sub")[ FD ]
Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")-->Line_29 $$ assertEvent(VFileContentChangeEvent.class, fileInTopDir.getPath(), fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")[ CD ]
Line_7 $$ File sideDir = createTestDir(myTempDirectory, "side")-->Line_12 $$ LocalFileSystem.WatchRequest requestForSideDir = watch(sideDir)[ FD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_7 $$ File sideDir = createTestDir(myTempDirectory, "side")[ CD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_12 $$ LocalFileSystem.WatchRequest requestForSideDir = watch(sideDir)[ CD ]
Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")-->Line_34 $$ FileUtil.writeToFile(fileInTopDir, "newest content")[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_17 $$ assertEvent(VFileContentChangeEvent.class, fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_16 $$ FileUtil.writeToFile(fileInSideDir, "first content")[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_41 $$ FileUtil.delete(fileInSideDir)[ FD ]
Line_5 $$ File subDir = createTestDir(topDir, "sub")-->Line_11 $$ LocalFileSystem.WatchRequest requestForSubDir = watch(subDir)[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_20 $$ FileUtil.writeToFile(fileInSubDir, "new content")[ FD ]
Line_8 $$ File fileInSideDir = createTestFile(sideDir, "file3.txt")-->Line_28 $$ FileUtil.writeToFile(fileInSideDir, "newer content")[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_40 $$ FileUtil.delete(fileInSubDir)[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_15 $$ FileUtil.writeToFile(fileInSubDir, "first content")[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_29 $$ assertEvent(VFileContentChangeEvent.class, fileInTopDir.getPath(), fileInSubDir.getPath(), fileInSideDir.getPath())[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_9 $$ refresh(topDir)[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_4 $$ File fileInTopDir = createTestFile(topDir, "file1.txt")[ FD ]
Line_6 $$ File fileInSubDir = createTestFile(subDir, "file2.txt")-->Line_27 $$ FileUtil.writeToFile(fileInSubDir, "newer content")[ FD ]
Line_2 $$ public void testDirectoryOverlapping() throws Exception -->Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")[ CD ]
Line_12 $$ LocalFileSystem.WatchRequest requestForSideDir = watch(sideDir)-->Line_44 $$ unwatch(requestForSubDir, requestForSideDir)[ FD ]
