Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())-->Line_15 $$ attributes = getAttributes(junction)[ FD ]
Line_4 $$ final File target = FileUtil.createTempDirectory(myTempDirectory, "temp.", ".dir")-->Line_13 $$ assertEquals(target.getPath(), resolved1)[ FD ]
Line_4 $$ final File target = FileUtil.createTempDirectory(myTempDirectory, "temp.", ".dir")-->Line_14 $$ FileUtil.delete(target)[ FD ]
Line_8 $$ FileAttributes attributes = getAttributes(junction)-->Line_11 $$ assertTrue(attributes.isWritable())[ FD ]
Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())-->Line_22 $$ IoTestUtil.deleteJunction(junction.getPath())[ FD ]
Line_4 $$ final File target = FileUtil.createTempDirectory(myTempDirectory, "temp.", ".dir")-->Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())[ FD ]
Line_8 $$ FileAttributes attributes = getAttributes(junction)-->Line_15 $$ attributes = getAttributes(junction)[ FD ]
Line_12 $$ final String resolved1 = FileSystemUtil.resolveSymLink(junction)-->Line_13 $$ assertEquals(target.getPath(), resolved1)[ FD ]
Line_5 $$ final File path = FileUtil.createTempFile(myTempDirectory, "junction.", ".dir", false)-->Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())[ FD ]
Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())-->Line_8 $$ FileAttributes attributes = getAttributes(junction)[ FD ]
Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())-->Line_12 $$ final String resolved1 = FileSystemUtil.resolveSymLink(junction)[ FD ]
Line_2 $$ public void junction() throws Exception -->Line_4 $$ final File target = FileUtil.createTempDirectory(myTempDirectory, "temp.", ".dir")[ CD ]
Line_2 $$ public void junction() throws Exception -->Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())[ CD ]
Line_19 $$ final String resolved2 = FileSystemUtil.resolveSymLink(junction)-->Line_20 $$ assertEquals(null, resolved2)[ FD ]
Line_6 $$ final File junction = IoTestUtil.createJunction(target.getPath(), path.getAbsolutePath())-->Line_19 $$ final String resolved2 = FileSystemUtil.resolveSymLink(junction)[ FD ]
Line_8 $$ FileAttributes attributes = getAttributes(junction)-->Line_18 $$ assertTrue(attributes.isWritable())[ FD ]
Line_2 $$ public void junction() throws Exception -->Line_3 $$ assumeTrue(SystemInfo.isWinVistaOrNewer)[ CD ]
Line_2 $$ public void junction() throws Exception -->Line_5 $$ final File path = FileUtil.createTempFile(myTempDirectory, "junction.", ".dir", false)[ CD ]
Line_15 $$ attributes = getAttributes(junction)-->Line_18 $$ assertTrue(attributes.isWritable())[ FD ]
