Line_11 $$ VirtualFile parent = file.getParent()-->Line_22 $$ File ioTarget = new File(convertToIOFile(parent), newName)[ FD ]
Line_31 $$ auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler, IOException>() -->Line_35 $$ handler.rename(file, newName)[ FD ]
Line_11 $$ VirtualFile parent = file.getParent()-->Line_12 $$ if (parent == null) [ FD ]
Line_11 $$ VirtualFile parent = file.getParent()-->Line_16 $$ throw new IOException(VfsBundle.message("vfs.target.already.exists.error", parent.getPath() + "/" + newName))[ FD ]
Line_11 $$ VirtualFile parent = file.getParent()-->Line_15 $$ if (!sameName && parent.findChild(newName) != null) [ FD ]
Line_18 $$ File ioFile = convertToIOFile(file)-->Line_20 $$ throw new FileNotFoundException(VfsBundle.message("file.not.exist.error", ioFile.getPath()))[ FD ]
Line_26 $$ if (!auxRename(file, newName)) -->Line_27 $$ if (!FileUtil.rename(ioFile, newName)) [ CD ]
Line_22 $$ File ioTarget = new File(convertToIOFile(parent), newName)-->Line_24 $$ throw new IOException(VfsBundle.message("target.already.exists.error", ioTarget.getPath()))[ FD ]
Line_18 $$ File ioFile = convertToIOFile(file)-->Line_27 $$ if (!FileUtil.rename(ioFile, newName)) [ FD ]
Line_18 $$ File ioFile = convertToIOFile(file)-->Line_28 $$ throw new IOException(VfsBundle.message("rename.failed.error", ioFile.getPath(), newName))[ FD ]
Line_7 $$ boolean sameName = !isCaseSensitive() && newName.equalsIgnoreCase(file.getName())-->Line_23 $$ if (!sameName && ioTarget.exists()) [ FD ]
Line_18 $$ File ioFile = convertToIOFile(file)-->Line_19 $$ if (!ioFile.exists()) [ FD ]
Line_22 $$ File ioTarget = new File(convertToIOFile(parent), newName)-->Line_23 $$ if (!sameName && ioTarget.exists()) [ FD ]
Line_31 $$ auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler, IOException>() -->Line_35 $$ handler.rename(file, newName)[ CD ]
Line_7 $$ boolean sameName = !isCaseSensitive() && newName.equalsIgnoreCase(file.getName())-->Line_15 $$ if (!sameName && parent.findChild(newName) != null) [ FD ]
