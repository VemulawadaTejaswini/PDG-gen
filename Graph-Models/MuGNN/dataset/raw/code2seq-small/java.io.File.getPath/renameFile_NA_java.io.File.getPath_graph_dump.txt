Line_25 $$ if (!auxRename(file, newName)) -->Line_26 $$ if (!FileUtil.rename(ioFile, newName)) [ CD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_6 $$ boolean sameName = !isCaseSensitive() && newName.equalsIgnoreCase(file.getName())[ CD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_11 $$ if (parent == null) [ CD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_18 $$ if (!ioFile.exists()) [ CD ]
Line_6 $$ boolean sameName = !isCaseSensitive() && newName.equalsIgnoreCase(file.getName())-->Line_22 $$ if (!sameName && ioTarget.exists()) [ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_25 $$ if (!auxRename(file, newName)) [ FD ]
Line_10 $$ VirtualFile parent = file.getParent()-->Line_14 $$ if (!sameName && parent.findChild(newName) != null) [ FD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_19 $$ throw new FileNotFoundException(VfsBundle.message("file.not.exist.error", ioFile.getPath()))[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_25 $$ if (!auxRename(file, newName)) [ CD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_32 $$ handler.rename(file, newName)[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_7 $$ if (!file.exists()) [ CD ]
Line_10 $$ VirtualFile parent = file.getParent()-->Line_21 $$ File ioTarget = new File(convertToIOFile(parent), newName)[ FD ]
Line_30 $$ auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler, IOException>() -->Line_32 $$ handler.rename(file, newName)[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_17 $$ File ioFile = convertToIOFile(file)[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_30 $$ auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler, IOException>() [ CD ]
Line_10 $$ VirtualFile parent = file.getParent()-->Line_11 $$ if (parent == null) [ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_14 $$ if (!sameName && parent.findChild(newName) != null) [ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_12 $$ throw new IOException(VfsBundle.message("cannot.rename.root.directory", file.getPath()))[ FD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_27 $$ throw new IOException(VfsBundle.message("rename.failed.error", ioFile.getPath(), newName))[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_22 $$ if (!sameName && ioTarget.exists()) [ CD ]
Line_21 $$ File ioTarget = new File(convertToIOFile(parent), newName)-->Line_22 $$ if (!sameName && ioTarget.exists()) [ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_14 $$ if (!sameName && parent.findChild(newName) != null) [ CD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_26 $$ if (!FileUtil.rename(ioFile, newName)) [ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_8 $$ throw new IOException(VfsBundle.message("vfs.file.not.exist.error", file.getPath()))[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_27 $$ throw new IOException(VfsBundle.message("rename.failed.error", ioFile.getPath(), newName))[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_17 $$ File ioFile = convertToIOFile(file)[ CD ]
Line_6 $$ boolean sameName = !isCaseSensitive() && newName.equalsIgnoreCase(file.getName())-->Line_14 $$ if (!sameName && parent.findChild(newName) != null) [ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_3 $$ if (!VirtualFile.isValidName(newName)) [ CD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_10 $$ VirtualFile parent = file.getParent()[ CD ]
Line_21 $$ File ioTarget = new File(convertToIOFile(parent), newName)-->Line_23 $$ throw new IOException(VfsBundle.message("target.already.exists.error", ioTarget.getPath()))[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_7 $$ if (!file.exists()) [ FD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_26 $$ if (!FileUtil.rename(ioFile, newName)) [ FD ]
Line_10 $$ VirtualFile parent = file.getParent()-->Line_15 $$ throw new IOException(VfsBundle.message("vfs.target.already.exists.error", parent.getPath() + "/" + newName))[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_4 $$ throw new IOException(VfsBundle.message("file.invalid.name.error", newName))[ FD ]
Line_17 $$ File ioFile = convertToIOFile(file)-->Line_18 $$ if (!ioFile.exists()) [ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_21 $$ File ioTarget = new File(convertToIOFile(parent), newName)[ CD ]
Line_30 $$ auxNotifyCompleted(new ThrowableConsumer<LocalFileOperationsHandler, IOException>() -->Line_32 $$ handler.rename(file, newName)[ CD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_6 $$ boolean sameName = !isCaseSensitive() && newName.equalsIgnoreCase(file.getName())[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_10 $$ VirtualFile parent = file.getParent()[ FD ]
Line_2 $$ public void renameFile(Object requestor, @NotNull final VirtualFile file, @NotNull final String newName) throws IOException -->Line_3 $$ if (!VirtualFile.isValidName(newName)) [ FD ]
