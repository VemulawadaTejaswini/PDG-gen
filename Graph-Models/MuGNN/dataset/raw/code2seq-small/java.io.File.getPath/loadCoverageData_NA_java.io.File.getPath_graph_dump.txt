Line_2 $$ public ProjectData loadCoverageData(@NotNull final File sessionDataFile, @Nullable final CoverageSuite coverageSuite) -->Line_3 $$ ProjectData projectData = ProjectDataLoader.load(sessionDataFile)[ CD ]
Line_2 $$ public ProjectData loadCoverageData(@NotNull final File sessionDataFile, @Nullable final CoverageSuite coverageSuite) -->Line_5 $$ if (sourceMapFile.exists()) [ CD ]
Line_2 $$ public ProjectData loadCoverageData(@NotNull final File sessionDataFile, @Nullable final CoverageSuite coverageSuite) -->Line_4 $$ File sourceMapFile = new File(JavaCoverageEnabledConfiguration.getSourceMapPath(sessionDataFile.getPath()))[ FD ]
Line_4 $$ File sourceMapFile = new File(JavaCoverageEnabledConfiguration.getSourceMapPath(sessionDataFile.getPath()))-->Line_5 $$ if (sourceMapFile.exists()) [ FD ]
Line_2 $$ public ProjectData loadCoverageData(@NotNull final File sessionDataFile, @Nullable final CoverageSuite coverageSuite) -->Line_4 $$ File sourceMapFile = new File(JavaCoverageEnabledConfiguration.getSourceMapPath(sessionDataFile.getPath()))[ CD ]
Line_4 $$ File sourceMapFile = new File(JavaCoverageEnabledConfiguration.getSourceMapPath(sessionDataFile.getPath()))-->Line_7 $$ loadSourceMap(projectData, sourceMapFile)[ FD ]
Line_3 $$ ProjectData projectData = ProjectDataLoader.load(sessionDataFile)-->Line_7 $$ loadSourceMap(projectData, sourceMapFile)[ FD ]
Line_2 $$ public ProjectData loadCoverageData(@NotNull final File sessionDataFile, @Nullable final CoverageSuite coverageSuite) -->Line_12 $$ return projectData[ CD ]
Line_2 $$ public ProjectData loadCoverageData(@NotNull final File sessionDataFile, @Nullable final CoverageSuite coverageSuite) -->Line_3 $$ ProjectData projectData = ProjectDataLoader.load(sessionDataFile)[ FD ]
