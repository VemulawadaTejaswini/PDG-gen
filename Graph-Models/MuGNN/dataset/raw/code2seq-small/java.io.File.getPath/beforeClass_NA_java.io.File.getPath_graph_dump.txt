Line_2 $$ public static void beforeClass() throws IOException -->Line_10 $$ Directories.overrideDataDirectoriesForTest(tempDataDir.getPath())[ CD ]
Line_3 $$ for (String table : TABLES) -->Line_4 $$ UUID tableID = CFMetaData.generateLegacyCfId(KS, table)[ FD ]
Line_4 $$ UUID tableID = CFMetaData.generateLegacyCfId(KS, table)-->Line_5 $$ CFM.add(CFMetaData.Builder.create(KS, table).withId(tableID).addPartitionKey("thekey", UTF8Type.instance).addClusteringColumn("thecolumn", UTF8Type.instance).build())[ FD ]
Line_2 $$ public static void beforeClass() throws IOException -->Line_7 $$ tempDataDir = File.createTempFile("cassandra", "unittest")[ CD ]
Line_2 $$ public static void beforeClass() throws IOException -->Line_9 $$ tempDataDir.mkdir()[ CD ]
Line_2 $$ public static void beforeClass() throws IOException -->Line_8 $$ tempDataDir.delete()[ CD ]
Line_2 $$ public static void beforeClass() throws IOException -->Line_11 $$ createTestFiles()[ CD ]
Line_3 $$ for (String table : TABLES) -->Line_5 $$ CFM.add(CFMetaData.Builder.create(KS, table).withId(tableID).addPartitionKey("thekey", UTF8Type.instance).addClusteringColumn("thecolumn", UTF8Type.instance).build())[ FD ]
