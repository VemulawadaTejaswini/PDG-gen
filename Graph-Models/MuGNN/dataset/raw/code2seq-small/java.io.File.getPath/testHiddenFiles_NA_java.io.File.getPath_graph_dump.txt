Line_2 $$ public void testHiddenFiles() throws Exception -->Line_11 $$ LocalFileSystem.WatchRequest request = watch(topDir)[ CD ]
Line_2 $$ public void testHiddenFiles() throws Exception -->Line_3 $$ if (!SystemInfo.isWindows) [ CD ]
Line_7 $$ File topDir = createTestDir(myTempDirectory, "topDir")-->Line_10 $$ refresh(topDir)[ FD ]
Line_2 $$ public void testHiddenFiles() throws Exception -->Line_9 $$ File testFile = createTestFile(testDir, "file", "123")[ CD ]
Line_8 $$ File testDir = createTestDir(topDir, "dir")-->Line_9 $$ File testFile = createTestFile(testDir, "file", "123")[ FD ]
Line_7 $$ File topDir = createTestDir(myTempDirectory, "topDir")-->Line_11 $$ LocalFileSystem.WatchRequest request = watch(topDir)[ FD ]
Line_2 $$ public void testHiddenFiles() throws Exception -->Line_7 $$ File topDir = createTestDir(myTempDirectory, "topDir")[ CD ]
Line_11 $$ LocalFileSystem.WatchRequest request = watch(topDir)-->Line_17 $$ unwatch(request)[ FD ]
Line_3 $$ if (!SystemInfo.isWindows) -->Line_4 $$ System.err.println("Ignored: Windows required")[ CD ]
Line_9 $$ File testFile = createTestFile(testDir, "file", "123")-->Line_14 $$ setHidden(testFile.getPath(), true)[ FD ]
Line_2 $$ public void testHiddenFiles() throws Exception -->Line_8 $$ File testDir = createTestDir(topDir, "dir")[ CD ]
Line_9 $$ File testFile = createTestFile(testDir, "file", "123")-->Line_15 $$ assertEvent(VFilePropertyChangeEvent.class, testFile.getPath())[ FD ]
Line_3 $$ if (!SystemInfo.isWindows) -->Line_5 $$ return[ CD ]
Line_2 $$ public void testHiddenFiles() throws Exception -->Line_10 $$ refresh(topDir)[ CD ]
Line_7 $$ File topDir = createTestDir(myTempDirectory, "topDir")-->Line_8 $$ File testDir = createTestDir(topDir, "dir")[ FD ]
