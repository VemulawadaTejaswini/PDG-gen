Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_5 $$ url = pathToUrl(path)[ FD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_11 $$ if (path.startsWith("/")) [ FD ]
Line_4 $$ if (new File(path).exists()) -->Line_7 $$ final String relativePath = new File(myRootPath, path).getPath()[ CD ]
Line_3 $$ String url = null-->Line_20 $$ return prepareValidUrlInsideJar(url)[ FD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_4 $$ if (new File(path).exists()) [ CD ]
Line_10 $$ url = pathToUrl(relativePath)-->Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)[ FD ]
Line_4 $$ if (new File(path).exists()) -->Line_8 $$ final File file = new File(relativePath)[ CD ]
Line_10 $$ url = pathToUrl(relativePath)-->Line_20 $$ return prepareValidUrlInsideJar(url)[ FD ]
Line_7 $$ final String relativePath = new File(myRootPath, path).getPath()-->Line_10 $$ url = pathToUrl(relativePath)[ FD ]
Line_10 $$ url = pathToUrl(relativePath)-->Line_17 $$ if (url == null) [ FD ]
Line_5 $$ url = pathToUrl(path)-->Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)[ FD ]
Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)-->Line_18 $$ url = pathToUrl(path)[ FD ]
Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)-->Line_20 $$ return prepareValidUrlInsideJar(url)[ FD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_18 $$ url = pathToUrl(path)[ FD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_20 $$ return prepareValidUrlInsideJar(url)[ CD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_3 $$ String url = null[ CD ]
Line_3 $$ String url = null-->Line_17 $$ if (url == null) [ FD ]
Line_3 $$ String url = null-->Line_5 $$ url = pathToUrl(path)[ FD ]
Line_8 $$ final File file = new File(relativePath)-->Line_9 $$ if (file.exists()) [ FD ]
Line_3 $$ String url = null-->Line_18 $$ url = pathToUrl(path)[ FD ]
Line_5 $$ url = pathToUrl(path)-->Line_20 $$ return prepareValidUrlInsideJar(url)[ FD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_17 $$ if (url == null) [ CD ]
Line_3 $$ String url = null-->Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)[ FD ]
Line_9 $$ if (file.exists()) -->Line_11 $$ if (path.startsWith("/")) [ CD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_13 $$ final String relativeToRootPath = EPathCommonUtil.getRelativeToModulePath(path)[ FD ]
Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)-->Line_17 $$ if (url == null) [ FD ]
Line_5 $$ url = pathToUrl(path)-->Line_18 $$ url = pathToUrl(path)[ FD ]
Line_11 $$ if (path.startsWith("/")) -->Line_12 $$ final String moduleName = EPathCommonUtil.getRelativeModuleName(path)[ CD ]
Line_5 $$ url = pathToUrl(path)-->Line_17 $$ if (url == null) [ FD ]
Line_13 $$ final String relativeToRootPath = EPathCommonUtil.getRelativeToModulePath(path)-->Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)[ FD ]
Line_3 $$ String url = null-->Line_10 $$ url = pathToUrl(relativePath)[ FD ]
Line_4 $$ if (new File(path).exists()) -->Line_9 $$ if (file.exists()) [ CD ]
Line_11 $$ if (path.startsWith("/")) -->Line_13 $$ final String relativeToRootPath = EPathCommonUtil.getRelativeToModulePath(path)[ CD ]
Line_18 $$ url = pathToUrl(path)-->Line_20 $$ return prepareValidUrlInsideJar(url)[ FD ]
Line_4 $$ if (new File(path).exists()) -->Line_5 $$ url = pathToUrl(path)[ CD ]
Line_9 $$ if (file.exists()) -->Line_10 $$ url = pathToUrl(relativePath)[ CD ]
Line_17 $$ if (url == null) -->Line_18 $$ url = pathToUrl(path)[ CD ]
Line_10 $$ url = pathToUrl(relativePath)-->Line_18 $$ url = pathToUrl(path)[ FD ]
Line_12 $$ final String moduleName = EPathCommonUtil.getRelativeModuleName(path)-->Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)[ FD ]
Line_11 $$ if (path.startsWith("/")) -->Line_14 $$ url = EPathCommonUtil.expandEclipseRelative2ContentRoots(myCurrentRoots, moduleName, relativeToRootPath)[ CD ]
Line_2 $$ protected String expandEclipsePath2Url(JpsModule rootModel, String path) -->Line_12 $$ final String moduleName = EPathCommonUtil.getRelativeModuleName(path)[ FD ]
Line_5 $$ url = pathToUrl(path)-->Line_10 $$ url = pathToUrl(relativePath)[ FD ]
