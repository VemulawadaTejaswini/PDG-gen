Line_2 $$ public void testMissingLink() throws Exception -->Line_9 $$ assertVisitedPaths(missingLinkVFile.getPath())[ CD ]
Line_2 $$ public void testMissingLink() throws Exception -->Line_3 $$ File missingFile = new File(myTempDir.getRoot(), "missing_file")[ CD ]
Line_5 $$ File missingLinkFile = createSymLink(missingFile.getPath(), myTempDir.getRoot() + "/missing_link", false)-->Line_6 $$ VirtualFile missingLinkVFile = refreshAndFind(missingLinkFile)[ FD ]
Line_6 $$ VirtualFile missingLinkVFile = refreshAndFind(missingLinkFile)-->Line_7 $$ assertNotNull(missingLinkVFile)[ FD ]
Line_6 $$ VirtualFile missingLinkVFile = refreshAndFind(missingLinkFile)-->Line_9 $$ assertVisitedPaths(missingLinkVFile.getPath())[ FD ]
Line_2 $$ public void testMissingLink() throws Exception -->Line_4 $$ assertTrue(missingFile.getPath(), !missingFile.exists() || missingFile.delete())[ CD ]
Line_2 $$ public void testMissingLink() throws Exception -->Line_6 $$ VirtualFile missingLinkVFile = refreshAndFind(missingLinkFile)[ CD ]
Line_2 $$ public void testMissingLink() throws Exception -->Line_8 $$ assertBrokenLink(missingLinkVFile)[ CD ]
Line_2 $$ public void testMissingLink() throws Exception -->Line_5 $$ File missingLinkFile = createSymLink(missingFile.getPath(), myTempDir.getRoot() + "/missing_link", false)[ CD ]
Line_3 $$ File missingFile = new File(myTempDir.getRoot(), "missing_file")-->Line_5 $$ File missingLinkFile = createSymLink(missingFile.getPath(), myTempDir.getRoot() + "/missing_link", false)[ FD ]
Line_6 $$ VirtualFile missingLinkVFile = refreshAndFind(missingLinkFile)-->Line_8 $$ assertBrokenLink(missingLinkVFile)[ FD ]
Line_3 $$ File missingFile = new File(myTempDir.getRoot(), "missing_file")-->Line_4 $$ assertTrue(missingFile.getPath(), !missingFile.exists() || missingFile.delete())[ FD ]
Line_2 $$ public void testMissingLink() throws Exception -->Line_7 $$ assertNotNull(missingLinkVFile)[ CD ]
