Line_17 $$ if (myRegisteredSources.add(FileUtil.toSystemIndependentName(sourcePath))) -->Line_20 $$ mapping.appendOutput(sourcePath, outputPath)[ CD ]
Line_3 $$ final String outputPath = FileUtil.toSystemIndependentName(output.getPath())-->Line_20 $$ mapping.appendOutput(sourcePath, outputPath)[ FD ]
Line_5 $$ final String outputRootPath = FileUtil.toSystemIndependentName(outputRoot.getPath())-->Line_11 $$ myFileGeneratedEvent.add(outputRootPath, relativePath)[ FD ]
Line_8 $$ if (isDirectory) -->Line_9 $$ addEventsRecursively(output, outputRootPath, relativePath)[ CD ]
Line_6 $$ final String relativePath = FileUtil.getRelativePath(outputRootPath, outputPath, '/')-->Line_7 $$ if (relativePath != null && !relativePath.startsWith("../")) [ FD ]
Line_2 $$ private void registerOutput(final File output, boolean isDirectory, Collection<String> sourcePaths) throws IOException -->Line_3 $$ final String outputPath = FileUtil.toSystemIndependentName(output.getPath())[ FD ]
Line_16 $$ for (String sourcePath : sourcePaths) -->Line_20 $$ mapping.appendOutput(sourcePath, outputPath)[ FD ]
Line_3 $$ final String outputPath = FileUtil.toSystemIndependentName(output.getPath())-->Line_6 $$ final String relativePath = FileUtil.getRelativePath(outputRootPath, outputPath, '/')[ FD ]
Line_6 $$ final String relativePath = FileUtil.getRelativePath(outputRootPath, outputPath, '/')-->Line_11 $$ myFileGeneratedEvent.add(outputRootPath, relativePath)[ FD ]
Line_2 $$ private void registerOutput(final File output, boolean isDirectory, Collection<String> sourcePaths) throws IOException -->Line_9 $$ addEventsRecursively(output, outputRootPath, relativePath)[ FD ]
Line_4 $$ for (File outputRoot : myOutputs) -->Line_5 $$ final String outputRootPath = FileUtil.toSystemIndependentName(outputRoot.getPath())[ FD ]
Line_7 $$ if (relativePath != null && !relativePath.startsWith("../")) -->Line_8 $$ if (isDirectory) [ CD ]
Line_2 $$ private void registerOutput(final File output, boolean isDirectory, Collection<String> sourcePaths) throws IOException -->Line_3 $$ final String outputPath = FileUtil.toSystemIndependentName(output.getPath())[ CD ]
Line_5 $$ final String outputRootPath = FileUtil.toSystemIndependentName(outputRoot.getPath())-->Line_6 $$ final String relativePath = FileUtil.getRelativePath(outputRootPath, outputPath, '/')[ FD ]
Line_8 $$ if (isDirectory) -->Line_11 $$ myFileGeneratedEvent.add(outputRootPath, relativePath)[ CD ]
Line_2 $$ private void registerOutput(final File output, boolean isDirectory, Collection<String> sourcePaths) throws IOException -->Line_15 $$ final SourceToOutputMapping mapping = myContext.getProjectDescriptor().dataManager.getSourceToOutputMap(myTarget)[ CD ]
Line_5 $$ final String outputRootPath = FileUtil.toSystemIndependentName(outputRoot.getPath())-->Line_9 $$ addEventsRecursively(output, outputRootPath, relativePath)[ FD ]
Line_17 $$ if (myRegisteredSources.add(FileUtil.toSystemIndependentName(sourcePath))) -->Line_18 $$ mapping.setOutput(sourcePath, outputPath)[ CD ]
Line_16 $$ for (String sourcePath : sourcePaths) -->Line_18 $$ mapping.setOutput(sourcePath, outputPath)[ FD ]
Line_6 $$ final String relativePath = FileUtil.getRelativePath(outputRootPath, outputPath, '/')-->Line_9 $$ addEventsRecursively(output, outputRootPath, relativePath)[ FD ]
Line_15 $$ final SourceToOutputMapping mapping = myContext.getProjectDescriptor().dataManager.getSourceToOutputMap(myTarget)-->Line_18 $$ mapping.setOutput(sourcePath, outputPath)[ FD ]
Line_3 $$ final String outputPath = FileUtil.toSystemIndependentName(output.getPath())-->Line_18 $$ mapping.setOutput(sourcePath, outputPath)[ FD ]
Line_15 $$ final SourceToOutputMapping mapping = myContext.getProjectDescriptor().dataManager.getSourceToOutputMap(myTarget)-->Line_20 $$ mapping.appendOutput(sourcePath, outputPath)[ FD ]
Line_16 $$ for (String sourcePath : sourcePaths) -->Line_17 $$ if (myRegisteredSources.add(FileUtil.toSystemIndependentName(sourcePath))) [ FD ]
