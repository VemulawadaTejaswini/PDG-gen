Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_4 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) [ FD ]
Line_11 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) -->Line_16 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) [ CD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_3 $$ final PyExpression[] args = call.getArguments()[ CD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_23 $$ return super.evaluateCall(call)[ FD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_9 $$ if (call.isCalleeText(PyNames.NORMPATH, PyNames.REALPATH) && args.length == 1) [ FD ]
Line_4 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) -->Line_6 $$ return argValue instanceof String ? new File((String) argValue).getParent() : null[ CD ]
Line_11 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) -->Line_12 $$ Object argValue = evaluate(args[0])[ CD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_3 $$ final PyExpression[] args = call.getArguments()[ FD ]
Line_9 $$ if (call.isCalleeText(PyNames.NORMPATH, PyNames.REALPATH) && args.length == 1) -->Line_10 $$ return evaluate(args[0])[ CD ]
Line_13 $$ if (!(argValue instanceof String)) -->Line_14 $$ return null[ CD ]
Line_9 $$ if (call.isCalleeText(PyNames.NORMPATH, PyNames.REALPATH) && args.length == 1) -->Line_11 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) [ CD ]
Line_4 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) -->Line_5 $$ Object argValue = evaluate(args[0])[ CD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_4 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) [ CD ]
Line_7 $$ if (call.isCalleeText(PyNames.JOIN) && args.length >= 1) -->Line_9 $$ if (call.isCalleeText(PyNames.NORMPATH, PyNames.REALPATH) && args.length == 1) [ CD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_7 $$ if (call.isCalleeText(PyNames.JOIN) && args.length >= 1) [ FD ]
Line_7 $$ if (call.isCalleeText(PyNames.JOIN) && args.length >= 1) -->Line_8 $$ return evaluatePathInJoin(args, args.length)[ CD ]
Line_16 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) -->Line_19 $$ String path = new File(new File(myContainingFilePath).getParent(), (String) argValue).getPath()[ CD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_11 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) [ FD ]
Line_4 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) -->Line_7 $$ if (call.isCalleeText(PyNames.JOIN) && args.length >= 1) [ CD ]
Line_16 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) -->Line_20 $$ return path.replace("\\", "/")[ CD ]
Line_2 $$ protected Object evaluateCall(PyCallExpression call) -->Line_23 $$ return super.evaluateCall(call)[ CD ]
Line_3 $$ final PyExpression[] args = call.getArguments()-->Line_8 $$ return evaluatePathInJoin(args, args.length)[ FD ]
Line_16 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) -->Line_17 $$ return argValue[ CD ]
Line_19 $$ String path = new File(new File(myContainingFilePath).getParent(), (String) argValue).getPath()-->Line_20 $$ return path.replace("\\", "/")[ FD ]
Line_11 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) -->Line_13 $$ if (!(argValue instanceof String)) [ CD ]
