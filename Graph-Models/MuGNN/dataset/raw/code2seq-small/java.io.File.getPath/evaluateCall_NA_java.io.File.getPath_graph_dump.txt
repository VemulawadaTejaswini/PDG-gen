Line_19 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) -->Line_23 $$ return path.replace("\\", "/")[ CD ]
Line_5 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) -->Line_6 $$ Object argValue = evaluate(args[0])[ CD ]
Line_19 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) -->Line_22 $$ String path = new File(new File(myContainingFilePath).getParent(), (String) argValue).getPath()[ CD ]
Line_22 $$ String path = new File(new File(myContainingFilePath).getParent(), (String) argValue).getPath()-->Line_23 $$ return path.replace("\\", "/")[ FD ]
Line_8 $$ if (call.isCalleeText(PyNames.JOIN) && args.length >= 1) -->Line_10 $$ if (call.isCalleeText(PyNames.NORMPATH, PyNames.REALPATH) && args.length == 1) [ CD ]
Line_13 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) -->Line_14 $$ Object argValue = evaluate(args[0])[ CD ]
Line_5 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) -->Line_7 $$ return argValue instanceof String ? new File((String) argValue).getParent() : null[ CD ]
Line_5 $$ if (call.isCalleeText(PyNames.DIRNAME) && args.length == 1) -->Line_8 $$ if (call.isCalleeText(PyNames.JOIN) && args.length >= 1) [ CD ]
Line_8 $$ if (call.isCalleeText(PyNames.JOIN) && args.length >= 1) -->Line_9 $$ return evaluatePathInJoin(args, args.length)[ CD ]
Line_10 $$ if (call.isCalleeText(PyNames.NORMPATH, PyNames.REALPATH) && args.length == 1) -->Line_13 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) [ CD ]
Line_13 $$ if (call.isCalleeText(PyNames.ABSPATH) && args.length == 1) -->Line_19 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) [ CD ]
Line_19 $$ if (FileUtil.isAbsolutePlatformIndependent((String) argValue)) -->Line_20 $$ return argValue[ CD ]
Line_4 $$ final PyExpression[] args = call.getArguments()-->Line_9 $$ return evaluatePathInJoin(args, args.length)[ FD ]
