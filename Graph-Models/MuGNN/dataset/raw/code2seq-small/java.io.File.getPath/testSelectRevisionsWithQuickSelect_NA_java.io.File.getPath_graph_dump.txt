Line_43 $$ if (list.size() != 2) -->Line_45 $$ if (list.get(1).getNumber() != numberBeforeCopy + 1) [ CD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_38 $$ return true[ CD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_52 $$ testInteraction.setMergeVariant(QuickMergeContentsVariants.showLatest)[ FD ]
Line_54 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_58 $$ quickMerge.execute(testInteraction, descriptor)[ CD ]
Line_11 $$ final StringBuilder sb = new StringBuilder(FileUtil.loadFile(new File(myBranchTree.myS1File.getPath())))-->Line_13 $$ sb.append("\nedited in branch ").append(i)[ FD ]
Line_45 $$ if (list.get(1).getNumber() != numberBeforeCopy + 1) -->Line_46 $$ selectionError.set("wrong revision for copy statement: " + list.get(1).getNumber())[ CD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_44 $$ selectionError.set("List size: " + list.size())[ FD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_62 $$ testInteraction.throwIfExceptions()[ FD ]
Line_12 $$ for (int i = 0; i < totalChanges; i++) -->Line_16 $$ Thread.sleep(10)[ CD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_43 $$ if (list.size() != 2) [ CD ]
Line_12 $$ for (int i = 0; i < totalChanges; i++) -->Line_13 $$ sb.append("\nedited in branch ").append(i)[ CD ]
Line_43 $$ if (list.size() != 2) -->Line_44 $$ selectionError.set("List size: " + list.size())[ CD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_58 $$ quickMerge.execute(testInteraction, descriptor)[ FD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_46 $$ selectionError.set("wrong revision for copy statement: " + list.get(1).getNumber())[ FD ]
Line_12 $$ for (int i = 0; i < totalChanges; i++) -->Line_13 $$ sb.append("\nedited in branch ").append(i)[ FD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_43 $$ if (list.size() != 2) [ FD ]
Line_12 $$ for (int i = 0; i < totalChanges; i++) -->Line_15 $$ runInAndVerifyIgnoreOutput(myBranchRoot, "ci", "-m", "change in branch " + i, myBranchTree.myS1File.getPath())[ CD ]
Line_10 $$ final int totalChanges = 3-->Line_12 $$ for (int i = 0; i < totalChanges; i++) [ FD ]
Line_11 $$ final StringBuilder sb = new StringBuilder(FileUtil.loadFile(new File(myBranchTree.myS1File.getPath())))-->Line_14 $$ VcsTestUtil.editFileInCommand(myProject, myBranchTree.myS1File, sb.toString())[ FD ]
Line_12 $$ for (int i = 0; i < totalChanges; i++) -->Line_14 $$ VcsTestUtil.editFileInCommand(myProject, myBranchTree.myS1File, sb.toString())[ CD ]
Line_34 $$ final QuickMergeTestInteraction testInteraction = new QuickMergeTestInteraction() -->Line_45 $$ if (list.get(1).getNumber() != numberBeforeCopy + 1) [ FD ]
