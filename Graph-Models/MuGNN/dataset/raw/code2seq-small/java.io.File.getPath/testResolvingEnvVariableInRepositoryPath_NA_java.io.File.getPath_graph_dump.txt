Line_2 $$ public void testResolvingEnvVariableInRepositoryPath() throws Exception -->Line_7 $$ importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<dependencies>" + "  <dependency>" + "    <groupId>junit</groupId>" + "    <artifactId>junit</artifactId>" + "    <version>4.0</version>" + "  </dependency>" + "</dependencies>")[ CD ]
Line_2 $$ public void testResolvingEnvVariableInRepositoryPath() throws Exception -->Line_4 $$ updateSettingsXml("<localRepository>$[ CD ]
Line_2 $$ public void testResolvingEnvVariableInRepositoryPath() throws Exception -->Line_8 $$ assertModuleLibDep("project", "Maven: junit:junit:4.0", "jar://" + FileUtil.toSystemIndependentName(repo.getPath()) + "/junit/junit/4.0/junit-4.0.jar!/")[ CD ]
Line_2 $$ public void testResolvingEnvVariableInRepositoryPath() throws Exception -->Line_6 $$ assertEquals(repo.getPath(), getMavenGeneralSettings().getEffectiveLocalRepository().getPath())[ CD ]
Line_2 $$ public void testResolvingEnvVariableInRepositoryPath() throws Exception -->Line_5 $$ File repo = new File(temp + "/tmpRepo").getCanonicalFile()[ CD ]
Line_2 $$ public void testResolvingEnvVariableInRepositoryPath() throws Exception -->Line_3 $$ String temp = System.getenv(getEnvVar())[ CD ]
Line_5 $$ File repo = new File(temp + "/tmpRepo").getCanonicalFile()-->Line_8 $$ assertModuleLibDep("project", "Maven: junit:junit:4.0", "jar://" + FileUtil.toSystemIndependentName(repo.getPath()) + "/junit/junit/4.0/junit-4.0.jar!/")[ FD ]
Line_5 $$ File repo = new File(temp + "/tmpRepo").getCanonicalFile()-->Line_6 $$ assertEquals(repo.getPath(), getMavenGeneralSettings().getEffectiveLocalRepository().getPath())[ FD ]
