Line_15 $$ cluster = new MiniDFSCluster.Builder(conf).manageNameDfsDirs(false).numDataNodes(3).build()-->Line_26 $$ cluster.shutdown()[ FD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_8 $$ File checkpointEditsDir2 = new File(base_dir, "chkptEdits2")[ CD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_17 $$ cluster.waitActive()[ FD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_5 $$ File checkpointNameDir1 = new File(base_dir, "chkptName1")[ CD ]
Line_18 $$ secondary = startSecondaryNameNode(conf)-->Line_25 $$ secondary.shutdown()[ FD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_9 $$ File nameDir = new File(base_dir, "name1")[ CD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_14 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY, whiteSpace + checkpointEditsDir1.getPath() + whiteSpace, whiteSpace + checkpointEditsDir2.getPath() + whiteSpace)[ CD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_25 $$ secondary.shutdown()[ FD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_13 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_DIR_KEY, whiteSpace + checkpointNameDir1.getPath() + whiteSpace, whiteSpace + checkpointNameDir2.getPath() + whiteSpace)[ CD ]
Line_5 $$ File checkpointNameDir1 = new File(base_dir, "chkptName1")-->Line_13 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_DIR_KEY, whiteSpace + checkpointNameDir1.getPath() + whiteSpace, whiteSpace + checkpointNameDir2.getPath() + whiteSpace)[ FD ]
Line_11 $$ Configuration conf = new HdfsConfiguration()-->Line_13 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_DIR_KEY, whiteSpace + checkpointNameDir1.getPath() + whiteSpace, whiteSpace + checkpointNameDir2.getPath() + whiteSpace)[ FD ]
Line_11 $$ Configuration conf = new HdfsConfiguration()-->Line_14 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY, whiteSpace + checkpointEditsDir1.getPath() + whiteSpace, whiteSpace + checkpointEditsDir2.getPath() + whiteSpace)[ FD ]
Line_8 $$ File checkpointEditsDir2 = new File(base_dir, "chkptEdits2")-->Line_14 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY, whiteSpace + checkpointEditsDir1.getPath() + whiteSpace, whiteSpace + checkpointEditsDir2.getPath() + whiteSpace)[ FD ]
Line_18 $$ secondary = startSecondaryNameNode(conf)-->Line_19 $$ secondary.doCheckpoint()[ FD ]
Line_7 $$ File checkpointNameDir2 = new File(base_dir, "chkptName2")-->Line_21 $$ assertTrue(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY + " must be trimmed ", checkpointNameDir2.exists())[ FD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_7 $$ File checkpointNameDir2 = new File(base_dir, "chkptName2")[ CD ]
Line_5 $$ File checkpointNameDir1 = new File(base_dir, "chkptName1")-->Line_20 $$ assertTrue(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY + " must be trimmed ", checkpointNameDir1.exists())[ FD ]
Line_11 $$ Configuration conf = new HdfsConfiguration()-->Line_12 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY, nameDir.getPath())[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_15 $$ cluster = new MiniDFSCluster.Builder(conf).manageNameDfsDirs(false).numDataNodes(3).build()[ FD ]
Line_9 $$ File nameDir = new File(base_dir, "name1")-->Line_12 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY, nameDir.getPath())[ FD ]
Line_11 $$ Configuration conf = new HdfsConfiguration()-->Line_18 $$ secondary = startSecondaryNameNode(conf)[ FD ]
Line_8 $$ File checkpointEditsDir2 = new File(base_dir, "chkptEdits2")-->Line_23 $$ assertTrue(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY + " must be trimmed ", checkpointEditsDir2.exists())[ FD ]
Line_6 $$ File checkpointEditsDir1 = new File(base_dir, "chkptEdits1")-->Line_22 $$ assertTrue(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY + " must be trimmed ", checkpointEditsDir1.exists())[ FD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_6 $$ File checkpointEditsDir1 = new File(base_dir, "chkptEdits1")[ CD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_11 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_3 $$ MiniDFSCluster cluster = null[ CD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_15 $$ cluster = new MiniDFSCluster.Builder(conf).manageNameDfsDirs(false).numDataNodes(3).build()[ CD ]
Line_7 $$ File checkpointNameDir2 = new File(base_dir, "chkptName2")-->Line_13 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_DIR_KEY, whiteSpace + checkpointNameDir1.getPath() + whiteSpace, whiteSpace + checkpointNameDir2.getPath() + whiteSpace)[ FD ]
Line_15 $$ cluster = new MiniDFSCluster.Builder(conf).manageNameDfsDirs(false).numDataNodes(3).build()-->Line_17 $$ cluster.waitActive()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_26 $$ cluster.shutdown()[ FD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_18 $$ secondary = startSecondaryNameNode(conf)[ FD ]
Line_6 $$ File checkpointEditsDir1 = new File(base_dir, "chkptEdits1")-->Line_14 $$ conf.setStrings(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_EDITS_DIR_KEY, whiteSpace + checkpointEditsDir1.getPath() + whiteSpace, whiteSpace + checkpointEditsDir2.getPath() + whiteSpace)[ FD ]
Line_4 $$ SecondaryNameNode secondary = null-->Line_19 $$ secondary.doCheckpoint()[ FD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_4 $$ SecondaryNameNode secondary = null[ CD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_12 $$ conf.set(DFSConfigKeys.DFS_NAMENODE_NAME_DIR_KEY, nameDir.getPath())[ CD ]
Line_2 $$ public void testCheckPointDirsAreTrimmed() throws Exception -->Line_10 $$ String whiteSpace = "  \n   \n  "[ CD ]
