Line_2 $$ public void testDeleteFail() throws Exception -->Line_5 $$ if (SystemInfo.isWindows) [ CD ]
Line_2 $$ public void testDeleteFail() throws Exception -->Line_4 $$ File file = IoTestUtil.createTestFile(targetDir, "file")[ CD ]
Line_4 $$ File file = IoTestUtil.createTestFile(targetDir, "file")-->Line_10 $$ assertFalse(FileUtil.delete(file))[ FD ]
Line_4 $$ File file = IoTestUtil.createTestFile(targetDir, "file")-->Line_18 $$ assertEquals(0, new ProcessBuilder("chmod", "a-w", file.getParentFile().getPath()).start().waitFor())[ FD ]
Line_7 $$ FileLock lock = null-->Line_12 $$ if (lock != null) [ FD ]
Line_7 $$ FileLock lock = null-->Line_13 $$ lock.release()[ FD ]
Line_3 $$ File targetDir = IoTestUtil.createTestDir(myTempDirectory, "failed_delete")-->Line_4 $$ File file = IoTestUtil.createTestFile(targetDir, "file")[ FD ]
Line_7 $$ FileLock lock = null-->Line_9 $$ lock = rw.getChannel().tryLock()[ FD ]
Line_5 $$ if (SystemInfo.isWindows) -->Line_7 $$ FileLock lock = null[ CD ]
Line_5 $$ if (SystemInfo.isWindows) -->Line_6 $$ RandomAccessFile rw = new RandomAccessFile(file, "rw")[ CD ]
Line_5 $$ if (SystemInfo.isWindows) -->Line_18 $$ assertEquals(0, new ProcessBuilder("chmod", "a-w", file.getParentFile().getPath()).start().waitFor())[ CD ]
Line_9 $$ lock = rw.getChannel().tryLock()-->Line_13 $$ lock.release()[ FD ]
Line_4 $$ File file = IoTestUtil.createTestFile(targetDir, "file")-->Line_20 $$ assertFalse(FileUtil.delete(file))[ FD ]
Line_9 $$ lock = rw.getChannel().tryLock()-->Line_12 $$ if (lock != null) [ FD ]
Line_2 $$ public void testDeleteFail() throws Exception -->Line_3 $$ File targetDir = IoTestUtil.createTestDir(myTempDirectory, "failed_delete")[ CD ]
Line_6 $$ RandomAccessFile rw = new RandomAccessFile(file, "rw")-->Line_15 $$ rw.close()[ FD ]
Line_6 $$ RandomAccessFile rw = new RandomAccessFile(file, "rw")-->Line_9 $$ lock = rw.getChannel().tryLock()[ FD ]
Line_4 $$ File file = IoTestUtil.createTestFile(targetDir, "file")-->Line_22 $$ assertEquals(0, new ProcessBuilder("chmod", "a+w", file.getParentFile().getPath()).start().waitFor())[ FD ]
Line_12 $$ if (lock != null) -->Line_13 $$ lock.release()[ CD ]
