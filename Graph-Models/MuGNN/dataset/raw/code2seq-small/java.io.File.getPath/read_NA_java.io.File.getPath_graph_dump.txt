Line_28 $$ Pair<Collection<Remote>, Collection<Url>> remotesAndUrls = parseRemotes(ini, classLoader)-->Line_30 $$ return new GitConfig(remotesAndUrls.getFirst(), remotesAndUrls.getSecond(), trackedInfos)[ FD ]
Line_26 $$ ClassLoader classLoader = // null e.g. if IDEA is started from IDEA-->Line_29 $$ Collection<BranchConfig> trackedInfos = parseTrackedInfos(ini, classLoader)[ FD ]
Line_14 $$ Ini ini = new Ini()-->Line_20 $$ ini.load(configFile)[ FD ]
Line_10 $$ if (!configFile.exists()) -->Line_11 $$ LOG.info("No .git/config file at " + configFile.getPath())[ CD ]
Line_25 $$ IdeaPluginDescriptor plugin = platformFacade.getPluginByClassName(GitConfig.class.getName())-->Line_26 $$ ClassLoader classLoader = // null e.g. if IDEA is started from IDEA[ FD ]
Line_14 $$ Ini ini = new Ini()-->Line_28 $$ Pair<Collection<Remote>, Collection<Url>> remotesAndUrls = parseRemotes(ini, classLoader)[ FD ]
Line_14 $$ Ini ini = new Ini()-->Line_29 $$ Collection<BranchConfig> trackedInfos = parseTrackedInfos(ini, classLoader)[ FD ]
Line_26 $$ ClassLoader classLoader = // null e.g. if IDEA is started from IDEA-->Line_28 $$ Pair<Collection<Remote>, Collection<Url>> remotesAndUrls = parseRemotes(ini, classLoader)[ FD ]
Line_10 $$ if (!configFile.exists()) -->Line_12 $$ return emptyConfig[ CD ]
