Line_50 $$ if (binaryCount == changes.size()) -->Line_51 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() [ CD ]
Line_77 $$ if (Boolean.TRUE.equals(configuration.SHOW_PATCH_IN_EXPLORER)) -->Line_78 $$ ShowFilePathAction.openFile(file)[ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_50 $$ if (binaryCount == changes.size()) [ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_27 $$ if (file.getParentFile() == null) [ CD ]
Line_77 $$ if (Boolean.TRUE.equals(configuration.SHOW_PATCH_IN_EXPLORER)) -->Line_79 $$ if (Boolean.FALSE.equals(configuration.SHOW_PATCH_IN_EXPLORER)) [ CD ]
Line_79 $$ if (Boolean.FALSE.equals(configuration.SHOW_PATCH_IN_EXPLORER)) -->Line_82 $$ configuration.SHOW_PATCH_IN_EXPLORER = ShowFilePathAction.showDialog(myProject, message, VcsBundle.message("create.patch.commit.action.title"), file)[ CD ]
Line_90 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() -->Line_93 $$ Messages.showErrorDialog(myProject, VcsBundle.message("create.patch.error.title", ex.getMessage()), CommonBundle.getErrorTitle())[ CD ]
Line_68 $$ if (binaryCount == 0) -->Line_69 $$ message = VcsBundle.message("create.patch.success.confirmation", file.getPath())[ CD ]
Line_24 $$ if (Messages.NO == result[0])-->Line_25 $$ return[ CD ]
Line_3 $$ if (!myPanel.isOkToExecute()) -->Line_4 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() [ CD ]
Line_79 $$ if (Boolean.FALSE.equals(configuration.SHOW_PATCH_IN_EXPLORER)) -->Line_80 $$ return[ CD ]
Line_27 $$ if (file.getParentFile() == null) -->Line_28 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() [ CD ]
Line_17 $$ WaitForProgressToShow.runOrInvokeAndWaitAboveProgress(new Runnable() -->Line_21 $$ result[0] = Messages.showYesNoDialog(myProject, "File " + file.getName() + " (" + file.getParent() + ")" + " already exists.\nDo you want to overwrite it?", CommonBundle.getWarningTitle(), Messages.getWarningIcon())[ CD ]
Line_28 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() -->Line_32 $$ Messages.showErrorDialog(myProject, VcsBundle.message("create.patch.error.title", "Can not write patch to specified file: " + file.getPath()), CommonBundle.getErrorTitle())[ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_65 $$ List<FilePatch> patches = IdeaTextPatchBuilder.buildPatch(myProject, changes, myProject.getBaseDir().getPresentableUrl(), reversePatch)[ FD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_15 $$ if (file.exists()) [ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_50 $$ if (binaryCount == changes.size()) [ FD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_13 $$ final String fileName = myPanel.getFileName()[ CD ]
Line_73 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() -->Line_76 $$ final VcsConfiguration configuration = VcsConfiguration.getInstance(myProject)[ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_38 $$ myCommitContext.putUserData(BaseRevisionTextPatchEP.ourPutBaseRevisionTextKey, myPanel.isStoreTexts())[ CD ]
Line_50 $$ if (binaryCount == changes.size()) -->Line_57 $$ return[ CD ]
Line_73 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() -->Line_77 $$ if (Boolean.TRUE.equals(configuration.SHOW_PATCH_IN_EXPLORER)) [ CD ]
Line_68 $$ if (binaryCount == 0) -->Line_71 $$ message = VcsBundle.message("create.patch.partial.success.confirmation", file.getPath(), binaryCount)[ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_3 $$ if (!myPanel.isOkToExecute()) [ CD ]
Line_27 $$ if (file.getParentFile() == null) -->Line_35 $$ return[ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_37 $$ myPanel.onOk()[ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_14 $$ final File file = new File(fileName).getAbsoluteFile()[ CD ]
Line_15 $$ if (file.exists()) -->Line_24 $$ if (Messages.NO == result[0])[ CD ]
Line_4 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() -->Line_8 $$ Messages.showErrorDialog(myProject, VcsBundle.message("create.patch.error.title", myPanel.getError()), CommonBundle.getErrorTitle())[ CD ]
Line_2 $$ public void execute(Collection<Change> changes, String commitMessage) -->Line_43 $$ myCommitContext.putUserData(BaseRevisionTextPatchEP.ourBaseRevisionPaths, list)[ CD ]
Line_15 $$ if (file.exists()) -->Line_17 $$ WaitForProgressToShow.runOrInvokeAndWaitAboveProgress(new Runnable() [ CD ]
Line_51 $$ WaitForProgressToShow.runOrInvokeLaterAboveProgress(new Runnable() -->Line_54 $$ Messages.showInfoMessage(myProject, VcsBundle.message("create.patch.all.binary"), VcsBundle.message("create.patch.commit.action.title"))[ CD ]
Line_3 $$ if (!myPanel.isOkToExecute()) -->Line_11 $$ return[ CD ]
