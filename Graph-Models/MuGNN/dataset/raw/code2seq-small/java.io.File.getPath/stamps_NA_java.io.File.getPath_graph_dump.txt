Line_2 $$ public void stamps() throws Exception -->Line_11 $$ assertTrue(attributes.lastModified + " not in " + t1 + ".." + t2, t1 <= attributes.lastModified && attributes.lastModified <= t2)[ CD ]
Line_3 $$ FileAttributes attributes = FileSystemUtil.getAttributes(myTempDirectory)-->Line_17 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_8 $$ TimeoutUtil.sleep(10)[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_12 $$ t1 = System.currentTimeMillis()[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_5 $$ long t1 = System.currentTimeMillis()[ CD ]
Line_19 $$ ProcessBuilder cmd = SystemInfo.isWindows ? new ProcessBuilder("attrib", "-A", file.getPath()) : new ProcessBuilder("chmod", "644", file.getPath())-->Line_20 $$ assertEquals(0, cmd.start().waitFor())[ FD ]
Line_7 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "test.txt")-->Line_19 $$ ProcessBuilder cmd = SystemInfo.isWindows ? new ProcessBuilder("attrib", "-A", file.getPath()) : new ProcessBuilder("chmod", "644", file.getPath())[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_4 $$ assumeTrue(attributes != null && attributes.lastModified > (attributes.lastModified / 1000) * 1000)[ CD ]
Line_3 $$ FileAttributes attributes = FileSystemUtil.getAttributes(myTempDirectory)-->Line_10 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_9 $$ long t2 = System.currentTimeMillis()[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_7 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "test.txt")[ CD ]
Line_7 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "test.txt")-->Line_14 $$ FileUtil.writeToFile(file, myTestData)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_19 $$ ProcessBuilder cmd = SystemInfo.isWindows ? new ProcessBuilder("attrib", "-A", file.getPath()) : new ProcessBuilder("chmod", "644", file.getPath())[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_20 $$ assertEquals(0, cmd.start().waitFor())[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_22 $$ assertTrue(attributes.lastModified + " not in " + t1 + ".." + t2, t1 <= attributes.lastModified && attributes.lastModified <= t2)[ CD ]
Line_10 $$ attributes = getAttributes(file)-->Line_17 $$ attributes = getAttributes(file)[ FD ]
Line_9 $$ long t2 = System.currentTimeMillis()-->Line_16 $$ t2 = System.currentTimeMillis()[ FD ]
Line_5 $$ long t1 = System.currentTimeMillis()-->Line_12 $$ t1 = System.currentTimeMillis()[ FD ]
Line_17 $$ attributes = getAttributes(file)-->Line_21 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_3 $$ FileAttributes attributes = FileSystemUtil.getAttributes(myTempDirectory)[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_16 $$ t2 = System.currentTimeMillis()[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_17 $$ attributes = getAttributes(file)[ CD ]
Line_7 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "test.txt")-->Line_21 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_18 $$ assertTrue(attributes.lastModified + " not in " + t1 + ".." + t2, t1 <= attributes.lastModified && attributes.lastModified <= t2)[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_14 $$ FileUtil.writeToFile(file, myTestData)[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_6 $$ TimeoutUtil.sleep(10)[ CD ]
Line_10 $$ attributes = getAttributes(file)-->Line_21 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_21 $$ attributes = getAttributes(file)[ CD ]
Line_7 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "test.txt")-->Line_10 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_10 $$ attributes = getAttributes(file)[ CD ]
Line_7 $$ File file = IoTestUtil.createTestFile(myTempDirectory, "test.txt")-->Line_17 $$ attributes = getAttributes(file)[ FD ]
Line_2 $$ public void stamps() throws Exception -->Line_13 $$ TimeoutUtil.sleep(10)[ CD ]
Line_2 $$ public void stamps() throws Exception -->Line_15 $$ TimeoutUtil.sleep(10)[ CD ]
Line_3 $$ FileAttributes attributes = FileSystemUtil.getAttributes(myTempDirectory)-->Line_21 $$ attributes = getAttributes(file)[ FD ]
