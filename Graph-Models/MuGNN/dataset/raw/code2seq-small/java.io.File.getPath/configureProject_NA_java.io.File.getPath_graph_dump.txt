Line_2 $$ public void configureProject(Project project, @NotNull VirtualFile baseDir, Ref<Module> moduleRef) -->Line_10 $$ final File script = BuildoutFacet.findScript(null, "buildout", project.getBaseDir())[ FD ]
Line_13 $$ final BuildoutFacetConfiguration config = facetManager.createDefaultConfiguration(BuildoutFacetType.getInstance())-->Line_15 $$ setupFacet(module, config)[ FD ]
Line_4 $$ if (modules.length > 0) -->Line_5 $$ final Module module = modules[0][ CD ]
Line_9 $$ if (runner != null) -->Line_11 $$ if (script != null) [ CD ]
Line_6 $$ if (BuildoutFacet.getInstance(module) == null) -->Line_8 $$ final VirtualFile runner = BuildoutFacet.getRunner(baseDir)[ CD ]
Line_5 $$ final Module module = modules[0]-->Line_12 $$ final ProjectFacetManager facetManager = ProjectFacetManager.getInstance(module.getProject())[ FD ]
Line_2 $$ public void configureProject(Project project, @NotNull VirtualFile baseDir, Ref<Module> moduleRef) -->Line_8 $$ final VirtualFile runner = BuildoutFacet.getRunner(baseDir)[ FD ]
Line_6 $$ if (BuildoutFacet.getInstance(module) == null) -->Line_9 $$ if (runner != null) [ CD ]
Line_11 $$ if (script != null) -->Line_13 $$ final BuildoutFacetConfiguration config = facetManager.createDefaultConfiguration(BuildoutFacetType.getInstance())[ CD ]
Line_6 $$ if (BuildoutFacet.getInstance(module) == null) -->Line_7 $$ baseDir.refresh(false, false)[ CD ]
Line_13 $$ final BuildoutFacetConfiguration config = facetManager.createDefaultConfiguration(BuildoutFacetType.getInstance())-->Line_14 $$ config.setScriptName(script.getPath())[ FD ]
Line_5 $$ final Module module = modules[0]-->Line_6 $$ if (BuildoutFacet.getInstance(module) == null) [ FD ]
Line_10 $$ final File script = BuildoutFacet.findScript(null, "buildout", project.getBaseDir())-->Line_14 $$ config.setScriptName(script.getPath())[ FD ]
Line_2 $$ public void configureProject(Project project, @NotNull VirtualFile baseDir, Ref<Module> moduleRef) -->Line_7 $$ baseDir.refresh(false, false)[ FD ]
Line_11 $$ if (script != null) -->Line_14 $$ config.setScriptName(script.getPath())[ CD ]
Line_2 $$ public void configureProject(Project project, @NotNull VirtualFile baseDir, Ref<Module> moduleRef) -->Line_3 $$ final Module[] modules = ModuleManager.getInstance(project).getModules()[ FD ]
Line_2 $$ public void configureProject(Project project, @NotNull VirtualFile baseDir, Ref<Module> moduleRef) -->Line_4 $$ if (modules.length > 0) [ CD ]
Line_10 $$ final File script = BuildoutFacet.findScript(null, "buildout", project.getBaseDir())-->Line_11 $$ if (script != null) [ FD ]
Line_11 $$ if (script != null) -->Line_12 $$ final ProjectFacetManager facetManager = ProjectFacetManager.getInstance(module.getProject())[ CD ]
Line_2 $$ public void configureProject(Project project, @NotNull VirtualFile baseDir, Ref<Module> moduleRef) -->Line_3 $$ final Module[] modules = ModuleManager.getInstance(project).getModules()[ CD ]
Line_5 $$ final Module module = modules[0]-->Line_15 $$ setupFacet(module, config)[ FD ]
Line_11 $$ if (script != null) -->Line_15 $$ setupFacet(module, config)[ CD ]
Line_8 $$ final VirtualFile runner = BuildoutFacet.getRunner(baseDir)-->Line_9 $$ if (runner != null) [ FD ]
Line_9 $$ if (runner != null) -->Line_10 $$ final File script = BuildoutFacet.findScript(null, "buildout", project.getBaseDir())[ CD ]
Line_4 $$ if (modules.length > 0) -->Line_6 $$ if (BuildoutFacet.getInstance(module) == null) [ CD ]
Line_12 $$ final ProjectFacetManager facetManager = ProjectFacetManager.getInstance(module.getProject())-->Line_13 $$ final BuildoutFacetConfiguration config = facetManager.createDefaultConfiguration(BuildoutFacetType.getInstance())[ FD ]
