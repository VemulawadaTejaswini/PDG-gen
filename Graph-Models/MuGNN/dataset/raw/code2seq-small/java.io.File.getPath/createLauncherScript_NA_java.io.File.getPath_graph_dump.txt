Line_7 $$ File scriptTarget = new File(pathName)-->Line_8 $$ File scriptTargetDir = scriptTarget.getParentFile()[ FD ]
Line_17 $$ int exitCode = result.getExitCode()-->Line_18 $$ if (exitCode != 0) [ FD ]
Line_18 $$ if (exitCode != 0) -->Line_21 $$ if (!StringUtil.isEmptyOrSpaces(output))[ CD ]
Line_5 $$ File scriptFile = createLauncherScriptFile()-->Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) [ FD ]
Line_27 $$ if (scriptFile.exists()) -->Line_28 $$ FileUtil.delete(scriptFile)[ CD ]
Line_15 $$ String prompt = ApplicationBundle.message("launcher.script.sudo.prompt", scriptTargetDirPath)-->Line_16 $$ ProcessOutput result = ExecUtil.sudoAndGetOutput(new GeneralCommandLine(installationScript.getPath()), prompt)[ FD ]
Line_14 $$ File installationScript = ExecUtil.createTempExecutableScript("launcher_installer", ".sh", installationScriptSrc)-->Line_16 $$ ProcessOutput result = ExecUtil.sudoAndGetOutput(new GeneralCommandLine(installationScript.getPath()), prompt)[ FD ]
Line_16 $$ ProcessOutput result = ExecUtil.sudoAndGetOutput(new GeneralCommandLine(installationScript.getPath()), prompt)-->Line_17 $$ int exitCode = result.getExitCode()[ FD ]
Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) -->Line_15 $$ String prompt = ApplicationBundle.message("launcher.script.sudo.prompt", scriptTargetDirPath)[ CD ]
Line_5 $$ File scriptFile = createLauncherScriptFile()-->Line_27 $$ if (scriptFile.exists()) [ FD ]
Line_21 $$ if (!StringUtil.isEmptyOrSpaces(output))-->Line_22 $$ message += "\nOutput: " + output.trim()[ CD ]
Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) -->Line_18 $$ if (exitCode != 0) [ CD ]
Line_3 $$ if (!isAvailable())-->Line_4 $$ return[ CD ]
Line_2 $$ public static void createLauncherScript(@NotNull String pathName) throws Exception -->Line_3 $$ if (!isAvailable())[ CD ]
Line_5 $$ File scriptFile = createLauncherScriptFile()-->Line_28 $$ FileUtil.delete(scriptFile)[ FD ]
Line_20 $$ String output = result.getStdout()-->Line_21 $$ if (!StringUtil.isEmptyOrSpaces(output))[ FD ]
Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) -->Line_16 $$ ProcessOutput result = ExecUtil.sudoAndGetOutput(new GeneralCommandLine(installationScript.getPath()), prompt)[ CD ]
Line_16 $$ ProcessOutput result = ExecUtil.sudoAndGetOutput(new GeneralCommandLine(installationScript.getPath()), prompt)-->Line_20 $$ String output = result.getStdout()[ FD ]
Line_8 $$ File scriptTargetDir = scriptTarget.getParentFile()-->Line_11 $$ String scriptTargetDirPath = scriptTargetDir.getCanonicalPath()[ FD ]
Line_18 $$ if (exitCode != 0) -->Line_20 $$ String output = result.getStdout()[ CD ]
Line_19 $$ String message = "Launcher script creation failed with " + exitCode-->Line_22 $$ message += "\nOutput: " + output.trim()[ FD ]
Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) -->Line_17 $$ int exitCode = result.getExitCode()[ CD ]
Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) -->Line_11 $$ String scriptTargetDirPath = scriptTargetDir.getCanonicalPath()[ CD ]
Line_8 $$ File scriptTargetDir = scriptTarget.getParentFile()-->Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) [ FD ]
Line_18 $$ if (exitCode != 0) -->Line_19 $$ String message = "Launcher script creation failed with " + exitCode[ CD ]
Line_20 $$ String output = result.getStdout()-->Line_22 $$ message += "\nOutput: " + output.trim()[ FD ]
Line_11 $$ String scriptTargetDirPath = scriptTargetDir.getCanonicalPath()-->Line_15 $$ String prompt = ApplicationBundle.message("launcher.script.sudo.prompt", scriptTargetDirPath)[ FD ]
Line_7 $$ File scriptTarget = new File(pathName)-->Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) [ FD ]
Line_2 $$ public static void createLauncherScript(@NotNull String pathName) throws Exception -->Line_5 $$ File scriptFile = createLauncherScriptFile()[ CD ]
Line_10 $$ if (!(scriptTargetDir.exists() || scriptTargetDir.mkdirs()) || !scriptFile.renameTo(scriptTarget)) -->Line_14 $$ File installationScript = ExecUtil.createTempExecutableScript("launcher_installer", ".sh", installationScriptSrc)[ CD ]
