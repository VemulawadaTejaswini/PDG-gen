Line_3 $$ File tmpFile = File.createTempFile("overflowtest", "bin")-->Line_4 $$ tmpFile.deleteOnExit()[ FD ]
Line_3 $$ File tmpFile = File.createTempFile("overflowtest", "bin")-->Line_5 $$ try (final RandomAccessReader r = RandomAccessReader.open(new File(tmpFile.getPath()))) [ FD ]
Line_5 $$ try (final RandomAccessReader r = RandomAccessReader.open(new File(tmpFile.getPath()))) -->Line_7 $$ final FileMark mark = r.mark()[ FD ]
Line_7 $$ final FileMark mark = r.mark()-->Line_8 $$ r.reset(mark)[ FD ]
Line_5 $$ try (final RandomAccessReader r = RandomAccessReader.open(new File(tmpFile.getPath()))) -->Line_6 $$ assert tmpFile.getPath().equals(r.getPath())[ FD ]
Line_5 $$ try (final RandomAccessReader r = RandomAccessReader.open(new File(tmpFile.getPath()))) -->Line_9 $$ r.bytesPastMark(mark)[ FD ]
Line_7 $$ final FileMark mark = r.mark()-->Line_9 $$ r.bytesPastMark(mark)[ FD ]
Line_2 $$ public void testBytesPastMark() throws IOException -->Line_3 $$ File tmpFile = File.createTempFile("overflowtest", "bin")[ CD ]
Line_5 $$ try (final RandomAccessReader r = RandomAccessReader.open(new File(tmpFile.getPath()))) -->Line_8 $$ r.reset(mark)[ FD ]
Line_3 $$ File tmpFile = File.createTempFile("overflowtest", "bin")-->Line_6 $$ assert tmpFile.getPath().equals(r.getPath())[ FD ]
Line_2 $$ public void testBytesPastMark() throws IOException -->Line_4 $$ tmpFile.deleteOnExit()[ CD ]
