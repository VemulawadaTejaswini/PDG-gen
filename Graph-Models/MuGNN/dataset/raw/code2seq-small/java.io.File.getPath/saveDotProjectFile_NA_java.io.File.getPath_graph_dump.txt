Line_4 $$ Document doc-->Line_6 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.project.xml"))[ FD ]
Line_11 $$ final File projectFile = new File(storageRoot, EclipseXml.PROJECT_FILE)-->Line_19 $$ LocalFileSystem.getInstance().refreshAndFindFileByPath(FileUtil.toSystemIndependentName(projectFile.getPath()))[ FD ]
Line_11 $$ final File projectFile = new File(storageRoot, EclipseXml.PROJECT_FILE)-->Line_12 $$ if (!FileUtil.createIfDoesntExist(projectFile)) [ FD ]
Line_8 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.empty.project.xml"))-->Line_15 $$ EclipseJDOMUtil.output(doc.getRootElement(), projectFile, module.getProject())[ FD ]
Line_5 $$ if (ModuleType.get(module) instanceof JavaModuleType) -->Line_6 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.project.xml"))[ CD ]
Line_6 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.project.xml"))-->Line_10 $$ doc.getRootElement().getChild(EclipseXml.NAME_TAG).setText(module.getName())[ FD ]
Line_6 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.project.xml"))-->Line_8 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.empty.project.xml"))[ FD ]
Line_4 $$ Document doc-->Line_8 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.empty.project.xml"))[ FD ]
Line_2 $$ public static void saveDotProjectFile(@NotNull Module module, @NotNull String storageRoot) throws IOException -->Line_15 $$ EclipseJDOMUtil.output(doc.getRootElement(), projectFile, module.getProject())[ FD ]
Line_11 $$ final File projectFile = new File(storageRoot, EclipseXml.PROJECT_FILE)-->Line_15 $$ EclipseJDOMUtil.output(doc.getRootElement(), projectFile, module.getProject())[ FD ]
Line_16 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_19 $$ LocalFileSystem.getInstance().refreshAndFindFileByPath(FileUtil.toSystemIndependentName(projectFile.getPath()))[ CD ]
Line_5 $$ if (ModuleType.get(module) instanceof JavaModuleType) -->Line_8 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.empty.project.xml"))[ CD ]
Line_2 $$ public static void saveDotProjectFile(@NotNull Module module, @NotNull String storageRoot) throws IOException -->Line_5 $$ if (ModuleType.get(module) instanceof JavaModuleType) [ FD ]
Line_4 $$ Document doc-->Line_15 $$ EclipseJDOMUtil.output(doc.getRootElement(), projectFile, module.getProject())[ FD ]
Line_12 $$ if (!FileUtil.createIfDoesntExist(projectFile)) -->Line_13 $$ return[ CD ]
Line_6 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.project.xml"))-->Line_15 $$ EclipseJDOMUtil.output(doc.getRootElement(), projectFile, module.getProject())[ FD ]
Line_2 $$ public static void saveDotProjectFile(@NotNull Module module, @NotNull String storageRoot) throws IOException -->Line_10 $$ doc.getRootElement().getChild(EclipseXml.NAME_TAG).setText(module.getName())[ FD ]
Line_8 $$ doc = JDOMUtil.loadDocument(DotProjectFileHelper.class.getResource("template.empty.project.xml"))-->Line_10 $$ doc.getRootElement().getChild(EclipseXml.NAME_TAG).setText(module.getName())[ FD ]
Line_4 $$ Document doc-->Line_10 $$ doc.getRootElement().getChild(EclipseXml.NAME_TAG).setText(module.getName())[ FD ]
