Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_17 $$ assertTrue(childFile.getPath(), childFile.exists() || childFile.createNewFile())[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_7 $$ new WriteAction() [ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_5 $$ VirtualFile linkVFile = refreshAndFind(linkFile)[ CD ]
Line_4 $$ File linkFile = createSymLink(targetFile.getPath(), myTempDir.getRoot() + "/link")-->Line_13 $$ assertFalse(linkFile.exists())[ FD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_18 $$ File linkDir = createSymLink(targetDir.getPath(), myTempDir.getRoot() + "/linkDir")[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_29 $$ assertTrue(childFile.exists())[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_3 $$ File targetFile = myTempDir.newFile("target")[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_21 $$ new WriteAction() [ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_27 $$ assertFalse(linkDir.exists())[ CD ]
Line_4 $$ File linkFile = createSymLink(targetFile.getPath(), myTempDir.getRoot() + "/link")-->Line_5 $$ VirtualFile linkVFile = refreshAndFind(linkFile)[ FD ]
Line_5 $$ VirtualFile linkVFile = refreshAndFind(linkFile)-->Line_9 $$ linkVFile.delete(SymlinkHandlingTest.this)[ FD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_15 $$ File targetDir = myTempDir.newFolder("targetDir")[ CD ]
Line_3 $$ File targetFile = myTempDir.newFile("target")-->Line_14 $$ assertTrue(targetFile.exists())[ FD ]
Line_5 $$ VirtualFile linkVFile = refreshAndFind(linkFile)-->Line_12 $$ assertFalse(linkVFile.toString(), linkVFile.isValid())[ FD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_19 $$ VirtualFile linkVDir = refreshAndFind(linkDir)[ CD ]
Line_5 $$ VirtualFile linkVFile = refreshAndFind(linkFile)-->Line_6 $$ assertTrue("link=" + linkFile + ", vLink=" + linkVFile, linkVFile != null && !linkVFile.isDirectory() && linkVFile.is(VFileProperty.SYMLINK))[ FD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_20 $$ assertTrue("link=" + linkDir + ", vLink=" + linkVDir, linkVDir != null && linkVDir.isDirectory() && linkVDir.is(VFileProperty.SYMLINK) && linkVDir.getChildren().length == 1)[ CD ]
Line_7 $$ new WriteAction() -->Line_9 $$ linkVFile.delete(SymlinkHandlingTest.this)[ CD ]
Line_21 $$ new WriteAction() -->Line_23 $$ linkVDir.delete(SymlinkHandlingTest.this)[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_28 $$ assertTrue(targetDir.exists())[ CD ]
Line_3 $$ File targetFile = myTempDir.newFile("target")-->Line_4 $$ File linkFile = createSymLink(targetFile.getPath(), myTempDir.getRoot() + "/link")[ FD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_4 $$ File linkFile = createSymLink(targetFile.getPath(), myTempDir.getRoot() + "/link")[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_6 $$ assertTrue("link=" + linkFile + ", vLink=" + linkVFile, linkVFile != null && !linkVFile.isDirectory() && linkVFile.is(VFileProperty.SYMLINK))[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_13 $$ assertFalse(linkFile.exists())[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_12 $$ assertFalse(linkVFile.toString(), linkVFile.isValid())[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_26 $$ assertFalse(linkVDir.toString(), linkVDir.isValid())[ CD ]
Line_2 $$ public void testLinkDeleteIsSafe() throws Exception -->Line_14 $$ assertTrue(targetFile.exists())[ CD ]
