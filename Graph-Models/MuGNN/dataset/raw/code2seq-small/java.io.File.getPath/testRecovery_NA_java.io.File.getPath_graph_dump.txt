Line_2 $$ protected Void testRecovery(CommitLogDescriptor desc, byte[] logData) throws Exception -->Line_11 $$ lout.write(logData)[ FD ]
Line_7 $$ ByteBuffer buf = ByteBuffer.allocate(1024)-->Line_10 $$ lout.write(buf.array(), 0, buf.position())[ FD ]
Line_3 $$ File logFile = tmpFile(desc.version)-->Line_4 $$ CommitLogDescriptor fromFile = CommitLogDescriptor.fromFileName(logFile.getName())[ FD ]
Line_2 $$ protected Void testRecovery(CommitLogDescriptor desc, byte[] logData) throws Exception -->Line_8 $$ CommitLogDescriptor.writeHeader(buf, desc)[ FD ]
Line_9 $$ try (OutputStream lout = new FileOutputStream(logFile)) -->Line_10 $$ lout.write(buf.array(), 0, buf.position())[ FD ]
Line_2 $$ protected Void testRecovery(CommitLogDescriptor desc, byte[] logData) throws Exception -->Line_7 $$ ByteBuffer buf = ByteBuffer.allocate(1024)[ CD ]
Line_9 $$ try (OutputStream lout = new FileOutputStream(logFile)) -->Line_11 $$ lout.write(logData)[ FD ]
Line_2 $$ protected Void testRecovery(CommitLogDescriptor desc, byte[] logData) throws Exception -->Line_8 $$ CommitLogDescriptor.writeHeader(buf, desc)[ CD ]
Line_2 $$ protected Void testRecovery(CommitLogDescriptor desc, byte[] logData) throws Exception -->Line_4 $$ CommitLogDescriptor fromFile = CommitLogDescriptor.fromFileName(logFile.getName())[ CD ]
Line_2 $$ protected Void testRecovery(CommitLogDescriptor desc, byte[] logData) throws Exception -->Line_16 $$ return null[ CD ]
Line_2 $$ protected Void testRecovery(CommitLogDescriptor desc, byte[] logData) throws Exception -->Line_3 $$ File logFile = tmpFile(desc.version)[ CD ]
Line_7 $$ ByteBuffer buf = ByteBuffer.allocate(1024)-->Line_8 $$ CommitLogDescriptor.writeHeader(buf, desc)[ FD ]
