Line_29 $$ final StringBuilder buf = new StringBuilder(length).append(fPath, startIndex, endIndex)-->Line_35 $$ return buf.toString()[ FD ]
Line_30 $$ for (int idx = 0; idx < length; idx++) -->Line_32 $$ buf.setCharAt(idx, '.')[ FD ]
Line_4 $$ final String fPath = file.getPath()-->Line_29 $$ final StringBuilder buf = new StringBuilder(length).append(fPath, startIndex, endIndex)[ FD ]
Line_4 $$ final String fPath = file.getPath()-->Line_13 $$ final int pathLength = fPath.length()[ FD ]
Line_4 $$ final String fPath = file.getPath()-->Line_24 $$ int endIndex = fPath.lastIndexOf('.')[ FD ]
Line_15 $$ if (!endsWithSeparator) -->Line_18 $$ if (pathLength <= separatorIdx || fPath.charAt(separatorIdx) != File.separatorChar) [ CD ]
Line_7 $$ if (dirPath.length() == 0) -->Line_8 $$ dirPath = System.getProperty("user.dir")[ CD ]
Line_8 $$ dirPath = System.getProperty("user.dir")-->Line_14 $$ final boolean endsWithSeparator = dirPath.endsWith(File.separator)[ FD ]
Line_31 $$ if (buf.charAt(idx) == File.separatorChar) -->Line_32 $$ buf.setCharAt(idx, '.')[ CD ]
Line_30 $$ for (int idx = 0; idx < length; idx++) -->Line_31 $$ if (buf.charAt(idx) == File.separatorChar) [ CD ]
Line_24 $$ int endIndex = fPath.lastIndexOf('.')-->Line_26 $$ endIndex = fPath.length()[ FD ]
Line_26 $$ endIndex = fPath.length()-->Line_29 $$ final StringBuilder buf = new StringBuilder(length).append(fPath, startIndex, endIndex)[ FD ]
Line_24 $$ int endIndex = fPath.lastIndexOf('.')-->Line_29 $$ final StringBuilder buf = new StringBuilder(length).append(fPath, startIndex, endIndex)[ FD ]
Line_6 $$ String dirPath = dir.getPath()-->Line_14 $$ final boolean endsWithSeparator = dirPath.endsWith(File.separator)[ FD ]
Line_4 $$ final String fPath = file.getPath()-->Line_26 $$ endIndex = fPath.length()[ FD ]
Line_6 $$ String dirPath = dir.getPath()-->Line_8 $$ dirPath = System.getProperty("user.dir")[ FD ]
Line_24 $$ int endIndex = fPath.lastIndexOf('.')-->Line_25 $$ if (endIndex <= startIndex) [ FD ]
Line_30 $$ for (int idx = 0; idx < length; idx++) -->Line_31 $$ if (buf.charAt(idx) == File.separatorChar) [ FD ]
Line_6 $$ String dirPath = dir.getPath()-->Line_7 $$ if (dirPath.length() == 0) [ FD ]
Line_4 $$ final String fPath = file.getPath()-->Line_18 $$ if (pathLength <= separatorIdx || fPath.charAt(separatorIdx) != File.separatorChar) [ FD ]
Line_29 $$ final StringBuilder buf = new StringBuilder(length).append(fPath, startIndex, endIndex)-->Line_32 $$ buf.setCharAt(idx, '.')[ FD ]
Line_14 $$ final boolean endsWithSeparator = dirPath.endsWith(File.separator)-->Line_15 $$ if (!endsWithSeparator) [ FD ]
Line_4 $$ final String fPath = file.getPath()-->Line_10 $$ if (!fPath.regionMatches(!isFileSystemCaseSensitive, 0, dirPath, 0, dirPath.length())) [ FD ]
Line_8 $$ dirPath = System.getProperty("user.dir")-->Line_10 $$ if (!fPath.regionMatches(!isFileSystemCaseSensitive, 0, dirPath, 0, dirPath.length())) [ FD ]
Line_28 $$ final int length = endIndex - startIndex-->Line_30 $$ for (int idx = 0; idx < length; idx++) [ FD ]
Line_25 $$ if (endIndex <= startIndex) -->Line_26 $$ endIndex = fPath.length()[ CD ]
Line_5 $$ for (File dir : path) -->Line_6 $$ String dirPath = dir.getPath()[ FD ]
Line_29 $$ final StringBuilder buf = new StringBuilder(length).append(fPath, startIndex, endIndex)-->Line_31 $$ if (buf.charAt(idx) == File.separatorChar) [ FD ]
Line_6 $$ String dirPath = dir.getPath()-->Line_10 $$ if (!fPath.regionMatches(!isFileSystemCaseSensitive, 0, dirPath, 0, dirPath.length())) [ FD ]
