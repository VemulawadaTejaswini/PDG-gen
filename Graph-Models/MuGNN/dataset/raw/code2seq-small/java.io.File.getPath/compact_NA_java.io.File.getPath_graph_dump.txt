Line_13 $$ final PersistentHashMapValueStorage newStorage = PersistentHashMapValueStorage.create(newPath)-->Line_30 $$ long value = newStorage.appendBytes(readResult.buffer, 0, readResult.buffer.length, 0)[ FD ]
Line_10 $$ final String oldDataFileBaseName = oldDataFile.getName()-->Line_11 $$ final File[] oldFiles = getFilesInDirectoryWithNameStartingWith(oldDataFile, oldDataFileBaseName)[ FD ]
Line_23 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_27 $$ final long record = readValueId(keyId)[ FD ]
Line_28 $$ if (record != NULL_ADDR) -->Line_29 $$ PersistentHashMapValueStorage.ReadResult readResult = myValueStorage.readBytes(record)[ CD ]
Line_23 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_31 $$ updateValueId(keyId, value, record, null, getCurrentKey())[ FD ]
Line_11 $$ final File[] oldFiles = getFilesInDirectoryWithNameStartingWith(oldDataFile, oldDataFileBaseName)-->Line_42 $$ if (oldFiles != null) [ FD ]
Line_20 $$ if (doNewCompact()) -->Line_23 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() [ CD ]
Line_13 $$ final PersistentHashMapValueStorage newStorage = PersistentHashMapValueStorage.create(newPath)-->Line_21 $$ newCompact(newStorage)[ FD ]
Line_28 $$ if (record != NULL_ADDR) -->Line_31 $$ updateValueId(keyId, value, record, null, getCurrentKey())[ CD ]
Line_28 $$ if (record != NULL_ADDR) -->Line_30 $$ long value = newStorage.appendBytes(readResult.buffer, 0, readResult.buffer.length, 0)[ CD ]
Line_51 $$ if (newFiles != null) -->Line_52 $$ File parentFile = newDataFile.getParentFile()[ CD ]
Line_12 $$ final String newPath = getDataFile(myEnumerator.myFile).getPath() + ".new"-->Line_13 $$ final PersistentHashMapValueStorage newStorage = PersistentHashMapValueStorage.create(newPath)[ FD ]
Line_27 $$ final long record = readValueId(keyId)-->Line_29 $$ PersistentHashMapValueStorage.ReadResult readResult = myValueStorage.readBytes(record)[ FD ]
Line_23 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_28 $$ if (record != NULL_ADDR) [ CD ]
Line_27 $$ final long record = readValueId(keyId)-->Line_28 $$ if (record != NULL_ADDR) [ FD ]
Line_20 $$ if (doNewCompact()) -->Line_21 $$ newCompact(newStorage)[ CD ]
Line_30 $$ long value = newStorage.appendBytes(readResult.buffer, 0, readResult.buffer.length, 0)-->Line_31 $$ updateValueId(keyId, value, record, null, getCurrentKey())[ FD ]
Line_13 $$ final PersistentHashMapValueStorage newStorage = PersistentHashMapValueStorage.create(newPath)-->Line_47 $$ final long newSize = newStorage.getSize()[ FD ]
Line_9 $$ final File oldDataFile = getDataFile(myEnumerator.myFile)-->Line_59 $$ myValueStorage = PersistentHashMapValueStorage.create(oldDataFile.getPath())[ FD ]
Line_10 $$ final String oldDataFileBaseName = oldDataFile.getName()-->Line_55 $$ String nameAfterRename = StringUtil.replace(f.getName(), newBaseName, oldDataFileBaseName)[ FD ]
Line_63 $$ if (myDoTrace)-->Line_64 $$ LOG.assertTrue(myEnumerator.isDirty())[ CD ]
Line_27 $$ final long record = readValueId(keyId)-->Line_31 $$ updateValueId(keyId, value, record, null, getCurrentKey())[ FD ]
Line_23 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_27 $$ final long record = readValueId(keyId)[ CD ]
Line_23 $$ traverseAllRecords(new PersistentEnumerator.RecordsProcessor() -->Line_34 $$ return true[ CD ]
Line_13 $$ final PersistentHashMapValueStorage newStorage = PersistentHashMapValueStorage.create(newPath)-->Line_39 $$ newStorage.dispose()[ FD ]
Line_9 $$ final File oldDataFile = getDataFile(myEnumerator.myFile)-->Line_11 $$ final File[] oldFiles = getFilesInDirectoryWithNameStartingWith(oldDataFile, oldDataFileBaseName)[ FD ]
Line_9 $$ final File oldDataFile = getDataFile(myEnumerator.myFile)-->Line_10 $$ final String oldDataFileBaseName = oldDataFile.getName()[ FD ]
