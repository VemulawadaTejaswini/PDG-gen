Line_3 $$ File realDir = myTempDir.newFolder("real")-->Line_4 $$ File symLink = IoTestUtil.createSymLink(realDir.getPath(), myTempDir.getRoot() + "/link")[ FD ]
Line_6 $$ CanonicalPathMap pathMap = new CanonicalPathMap(Collections.singletonList(symLink.getPath()), Collections.emptyList())-->Line_8 $$ Collection<String> watchedPaths = pathMap.getWatchedPaths(new File(mappedDir, "file.txt").getPath(), true, false)[ FD ]
Line_2 $$ public void testRemappedSymLinkReportsOriginalWatchedPath() throws Exception -->Line_5 $$ File mappedDir = new File(myTempDir.getRoot(), "mapped")[ CD ]
Line_2 $$ public void testRemappedSymLinkReportsOriginalWatchedPath() throws Exception -->Line_7 $$ pathMap.addMapping(Collections.singletonList(pair(mappedDir.getPath(), realDir.getPath())))[ CD ]
Line_2 $$ public void testRemappedSymLinkReportsOriginalWatchedPath() throws Exception -->Line_3 $$ File realDir = myTempDir.newFolder("real")[ CD ]
Line_2 $$ public void testRemappedSymLinkReportsOriginalWatchedPath() throws Exception -->Line_9 $$ assertThat(watchedPaths).containsExactly(new File(symLink, "file.txt").getPath())[ CD ]
Line_2 $$ public void testRemappedSymLinkReportsOriginalWatchedPath() throws Exception -->Line_8 $$ Collection<String> watchedPaths = pathMap.getWatchedPaths(new File(mappedDir, "file.txt").getPath(), true, false)[ CD ]
Line_6 $$ CanonicalPathMap pathMap = new CanonicalPathMap(Collections.singletonList(symLink.getPath()), Collections.emptyList())-->Line_7 $$ pathMap.addMapping(Collections.singletonList(pair(mappedDir.getPath(), realDir.getPath())))[ FD ]
Line_3 $$ File realDir = myTempDir.newFolder("real")-->Line_7 $$ pathMap.addMapping(Collections.singletonList(pair(mappedDir.getPath(), realDir.getPath())))[ FD ]
Line_2 $$ public void testRemappedSymLinkReportsOriginalWatchedPath() throws Exception -->Line_6 $$ CanonicalPathMap pathMap = new CanonicalPathMap(Collections.singletonList(symLink.getPath()), Collections.emptyList())[ CD ]
Line_4 $$ File symLink = IoTestUtil.createSymLink(realDir.getPath(), myTempDir.getRoot() + "/link")-->Line_6 $$ CanonicalPathMap pathMap = new CanonicalPathMap(Collections.singletonList(symLink.getPath()), Collections.emptyList())[ FD ]
Line_8 $$ Collection<String> watchedPaths = pathMap.getWatchedPaths(new File(mappedDir, "file.txt").getPath(), true, false)-->Line_9 $$ assertThat(watchedPaths).containsExactly(new File(symLink, "file.txt").getPath())[ FD ]
Line_5 $$ File mappedDir = new File(myTempDir.getRoot(), "mapped")-->Line_7 $$ pathMap.addMapping(Collections.singletonList(pair(mappedDir.getPath(), realDir.getPath())))[ FD ]
Line_2 $$ public void testRemappedSymLinkReportsOriginalWatchedPath() throws Exception -->Line_4 $$ File symLink = IoTestUtil.createSymLink(realDir.getPath(), myTempDir.getRoot() + "/link")[ CD ]
