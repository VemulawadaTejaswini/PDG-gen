Line_25 $$ settings = new Settings()-->Line_30 $$ if (settings.getLocalRepository() == null) [ FD ]
Line_9 $$ MavenSettingsBuilder builder = (MavenSettingsBuilder) container.lookup(MavenSettingsBuilder.ROLE)-->Line_15 $$ settings = builder.buildSettings()[ FD ]
Line_7 $$ Settings settings = null-->Line_25 $$ settings = new Settings()[ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_33 $$ settings.setOffline(embedderSettings.isWorkOffline())[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_27 $$ if (embedderSettings.getLocalRepository() != null) [ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_15 $$ settings = builder.buildSettings()[ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_25 $$ settings = new Settings()[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_3 $$ File file = embedderSettings.getGlobalSettingsFile()[ CD ]
Line_7 $$ Settings settings = null-->Line_24 $$ if (settings == null) [ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_38 $$ settings.setRuntimeInfo(runtimeInfo)[ CD ]
Line_7 $$ Settings settings = null-->Line_33 $$ settings.setOffline(embedderSettings.isWorkOffline())[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_27 $$ if (embedderSettings.getLocalRepository() != null) [ CD ]
Line_7 $$ Settings settings = null-->Line_28 $$ settings.setLocalRepository(embedderSettings.getLocalRepository().getPath())[ FD ]
Line_30 $$ if (settings.getLocalRepository() == null) -->Line_31 $$ settings.setLocalRepository(System.getProperty("user.home") + "/.m2/repository")[ CD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_31 $$ settings.setLocalRepository(System.getProperty("user.home") + "/.m2/repository")[ FD ]
Line_3 $$ File file = embedderSettings.getGlobalSettingsFile()-->Line_5 $$ System.setProperty(MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION, file.getPath())[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_24 $$ if (settings == null) [ CD ]
Line_25 $$ settings = new Settings()-->Line_35 $$ settings.setUsePluginRegistry(embedderSettings.isUsePluginRegistry())[ FD ]
Line_25 $$ settings = new Settings()-->Line_34 $$ settings.setInteractiveMode(false)[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_3 $$ File file = embedderSettings.getGlobalSettingsFile()[ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_14 $$ if (settings == null) [ FD ]
Line_25 $$ settings = new Settings()-->Line_38 $$ settings.setRuntimeInfo(runtimeInfo)[ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_24 $$ if (settings == null) [ FD ]
Line_36 $$ RuntimeInfo runtimeInfo = new RuntimeInfo(settings)-->Line_38 $$ settings.setRuntimeInfo(runtimeInfo)[ FD ]
Line_7 $$ Settings settings = null-->Line_15 $$ settings = builder.buildSettings()[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_33 $$ settings.setOffline(embedderSettings.isWorkOffline())[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_39 $$ return settings[ CD ]
Line_14 $$ if (settings == null) -->Line_15 $$ settings = builder.buildSettings()[ CD ]
Line_25 $$ settings = new Settings()-->Line_28 $$ settings.setLocalRepository(embedderSettings.getLocalRepository().getPath())[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_30 $$ if (settings.getLocalRepository() == null) [ CD ]
Line_25 $$ settings = new Settings()-->Line_31 $$ settings.setLocalRepository(System.getProperty("user.home") + "/.m2/repository")[ FD ]
Line_27 $$ if (embedderSettings.getLocalRepository() != null) -->Line_28 $$ settings.setLocalRepository(embedderSettings.getLocalRepository().getPath())[ CD ]
Line_4 $$ if (file != null) -->Line_5 $$ System.setProperty(MavenSettingsBuilder.ALT_GLOBAL_SETTINGS_XML_LOCATION, file.getPath())[ CD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_25 $$ settings = new Settings()[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_33 $$ settings.setOffline(embedderSettings.isWorkOffline())[ CD ]
Line_3 $$ File file = embedderSettings.getGlobalSettingsFile()-->Line_4 $$ if (file != null) [ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_34 $$ settings.setInteractiveMode(false)[ CD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_35 $$ settings.setUsePluginRegistry(embedderSettings.isUsePluginRegistry())[ CD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_9 $$ MavenSettingsBuilder builder = (MavenSettingsBuilder) container.lookup(MavenSettingsBuilder.ROLE)[ FD ]
Line_7 $$ Settings settings = null-->Line_35 $$ settings.setUsePluginRegistry(embedderSettings.isUsePluginRegistry())[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_36 $$ RuntimeInfo runtimeInfo = new RuntimeInfo(settings)[ CD ]
Line_7 $$ Settings settings = null-->Line_34 $$ settings.setInteractiveMode(false)[ FD ]
Line_25 $$ settings = new Settings()-->Line_33 $$ settings.setOffline(embedderSettings.isWorkOffline())[ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_38 $$ settings.setRuntimeInfo(runtimeInfo)[ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_31 $$ settings.setLocalRepository(System.getProperty("user.home") + "/.m2/repository")[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_37 $$ runtimeInfo.setPluginUpdateOverride(embedderSettings.getPluginUpdatePolicy() == MavenEmbedderSettings.UpdatePolicy.ALWAYS_UPDATE)[ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_30 $$ if (settings.getLocalRepository() == null) [ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_10 $$ File userSettingsFile = embedderSettings.getUserSettingsFile()[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_35 $$ settings.setUsePluginRegistry(embedderSettings.isUsePluginRegistry())[ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_38 $$ settings.setRuntimeInfo(runtimeInfo)[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_28 $$ settings.setLocalRepository(embedderSettings.getLocalRepository().getPath())[ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_35 $$ settings.setUsePluginRegistry(embedderSettings.isUsePluginRegistry())[ FD ]
Line_9 $$ MavenSettingsBuilder builder = (MavenSettingsBuilder) container.lookup(MavenSettingsBuilder.ROLE)-->Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_4 $$ if (file != null) [ CD ]
Line_11 $$ if (userSettingsFile != null && userSettingsFile.exists() && !userSettingsFile.isDirectory()) -->Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)[ CD ]
Line_10 $$ File userSettingsFile = embedderSettings.getUserSettingsFile()-->Line_11 $$ if (userSettingsFile != null && userSettingsFile.exists() && !userSettingsFile.isDirectory()) [ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_24 $$ if (settings == null) [ FD ]
Line_7 $$ Settings settings = null-->Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)[ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_34 $$ settings.setInteractiveMode(false)[ FD ]
Line_7 $$ Settings settings = null-->Line_38 $$ settings.setRuntimeInfo(runtimeInfo)[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_7 $$ Settings settings = null[ CD ]
Line_7 $$ Settings settings = null-->Line_31 $$ settings.setLocalRepository(System.getProperty("user.home") + "/.m2/repository")[ FD ]
Line_24 $$ if (settings == null) -->Line_25 $$ settings = new Settings()[ CD ]
Line_10 $$ File userSettingsFile = embedderSettings.getUserSettingsFile()-->Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)[ FD ]
Line_7 $$ Settings settings = null-->Line_30 $$ if (settings.getLocalRepository() == null) [ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_33 $$ settings.setOffline(embedderSettings.isWorkOffline())[ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_35 $$ settings.setUsePluginRegistry(embedderSettings.isUsePluginRegistry())[ FD ]
Line_2 $$ public static Settings buildSettings(PlexusContainer container, MavenEmbedderSettings embedderSettings) -->Line_37 $$ runtimeInfo.setPluginUpdateOverride(embedderSettings.getPluginUpdatePolicy() == MavenEmbedderSettings.UpdatePolicy.ALWAYS_UPDATE)[ CD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_28 $$ settings.setLocalRepository(embedderSettings.getLocalRepository().getPath())[ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_34 $$ settings.setInteractiveMode(false)[ FD ]
Line_7 $$ Settings settings = null-->Line_14 $$ if (settings == null) [ FD ]
Line_15 $$ settings = builder.buildSettings()-->Line_28 $$ settings.setLocalRepository(embedderSettings.getLocalRepository().getPath())[ FD ]
Line_12 $$ settings = builder.buildSettings(userSettingsFile, false)-->Line_30 $$ if (settings.getLocalRepository() == null) [ FD ]
Line_36 $$ RuntimeInfo runtimeInfo = new RuntimeInfo(settings)-->Line_37 $$ runtimeInfo.setPluginUpdateOverride(embedderSettings.getPluginUpdatePolicy() == MavenEmbedderSettings.UpdatePolicy.ALWAYS_UPDATE)[ FD ]
