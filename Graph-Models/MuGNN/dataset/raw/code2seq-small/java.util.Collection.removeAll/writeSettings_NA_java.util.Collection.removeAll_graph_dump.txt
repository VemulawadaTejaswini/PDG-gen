Line_7 $$ for (String className : defaultToRemoveSettings) -->Line_11 $$ node.addContent(new Element("cls").setText(className))[ FD ]
Line_2 $$ public void writeSettings(@NotNull Element node) throws WriteExternalException -->Line_4 $$ defaultToRemoveSettings.removeAll(myCollectionClassesRequiringCapacity)[ CD ]
Line_3 $$ final Collection<String> defaultToRemoveSettings = new HashSet<String>(getDefaultSettings())-->Line_4 $$ defaultToRemoveSettings.removeAll(myCollectionClassesRequiringCapacity)[ FD ]
Line_2 $$ public void writeSettings(@NotNull Element node) throws WriteExternalException -->Line_8 $$ node.addContent(new Element("cls").setText(className).setAttribute("remove", Boolean.TRUE.toString()))[ FD ]
Line_7 $$ for (String className : defaultToRemoveSettings) -->Line_8 $$ node.addContent(new Element("cls").setText(className).setAttribute("remove", Boolean.TRUE.toString()))[ FD ]
Line_2 $$ public void writeSettings(@NotNull Element node) throws WriteExternalException -->Line_3 $$ final Collection<String> defaultToRemoveSettings = new HashSet<String>(getDefaultSettings())[ CD ]
Line_2 $$ public void writeSettings(@NotNull Element node) throws WriteExternalException -->Line_5 $$ final Set<String> toAdd = new HashSet<String>(myCollectionClassesRequiringCapacity)[ CD ]
Line_2 $$ public void writeSettings(@NotNull Element node) throws WriteExternalException -->Line_6 $$ toAdd.removeAll(getDefaultSettings())[ CD ]
Line_2 $$ public void writeSettings(@NotNull Element node) throws WriteExternalException -->Line_11 $$ node.addContent(new Element("cls").setText(className))[ FD ]
Line_5 $$ final Set<String> toAdd = new HashSet<String>(myCollectionClassesRequiringCapacity)-->Line_6 $$ toAdd.removeAll(getDefaultSettings())[ FD ]
