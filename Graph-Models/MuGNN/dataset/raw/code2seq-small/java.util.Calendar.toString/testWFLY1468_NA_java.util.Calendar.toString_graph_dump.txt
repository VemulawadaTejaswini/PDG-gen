Line_2 $$ public void testWFLY1468() -->Line_4 $$ int year = 2013[ CD ]
Line_2 $$ public void testWFLY1468() -->Line_5 $$ int month = Calendar.JUNE[ CD ]
Line_2 $$ public void testWFLY1468() -->Line_13 $$ if (firstTimeout.get(Calendar.DAY_OF_MONTH) != 3 || firstTimeout.get(Calendar.HOUR_OF_DAY) != 2 || firstTimeout.get(Calendar.MINUTE) != 0 || firstTimeout.get(Calendar.SECOND) != 0) [ CD ]
Line_3 $$ ScheduleExpression schedule = new ScheduleExpression()-->Line_10 $$ schedule.hour("0-12").month("*").dayOfMonth("3").minute("0/5").second("0").start(start.getTime())[ FD ]
Line_2 $$ public void testWFLY1468() -->Line_3 $$ ScheduleExpression schedule = new ScheduleExpression()[ CD ]
Line_2 $$ public void testWFLY1468() -->Line_11 $$ CalendarBasedTimeout calendarTimeout = new CalendarBasedTimeout(schedule)[ CD ]
Line_13 $$ if (firstTimeout.get(Calendar.DAY_OF_MONTH) != 3 || firstTimeout.get(Calendar.HOUR_OF_DAY) != 2 || firstTimeout.get(Calendar.MINUTE) != 0 || firstTimeout.get(Calendar.SECOND) != 0) -->Line_14 $$ Assert.fail(firstTimeout.toString())[ CD ]
Line_12 $$ Calendar firstTimeout = calendarTimeout.getFirstTimeout()-->Line_14 $$ Assert.fail(firstTimeout.toString())[ FD ]
Line_2 $$ public void testWFLY1468() -->Line_12 $$ Calendar firstTimeout = calendarTimeout.getFirstTimeout()[ CD ]
Line_2 $$ public void testWFLY1468() -->Line_7 $$ int hourOfDay = 2[ CD ]
Line_2 $$ public void testWFLY1468() -->Line_8 $$ int minutes = 0[ CD ]
Line_12 $$ Calendar firstTimeout = calendarTimeout.getFirstTimeout()-->Line_13 $$ if (firstTimeout.get(Calendar.DAY_OF_MONTH) != 3 || firstTimeout.get(Calendar.HOUR_OF_DAY) != 2 || firstTimeout.get(Calendar.MINUTE) != 0 || firstTimeout.get(Calendar.SECOND) != 0) [ FD ]
Line_9 $$ Calendar start = new GregorianCalendar(year, month, dayOfMonth, hourOfDay, minutes)-->Line_10 $$ schedule.hour("0-12").month("*").dayOfMonth("3").minute("0/5").second("0").start(start.getTime())[ FD ]
Line_11 $$ CalendarBasedTimeout calendarTimeout = new CalendarBasedTimeout(schedule)-->Line_12 $$ Calendar firstTimeout = calendarTimeout.getFirstTimeout()[ FD ]
Line_2 $$ public void testWFLY1468() -->Line_10 $$ schedule.hour("0-12").month("*").dayOfMonth("3").minute("0/5").second("0").start(start.getTime())[ CD ]
Line_2 $$ public void testWFLY1468() -->Line_6 $$ int dayOfMonth = 3[ CD ]
Line_2 $$ public void testWFLY1468() -->Line_9 $$ Calendar start = new GregorianCalendar(year, month, dayOfMonth, hourOfDay, minutes)[ CD ]
