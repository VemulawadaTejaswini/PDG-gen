Line_30 $$ byte[] markerValue = writeReverseOrderedLong(startAndInsertTime.insertTime)-->Line_31 $$ writeBatch.put(markerKey, markerValue)[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_31 $$ writeBatch.put(markerKey, markerValue)[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_32 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, markerKey, markerValue)[ FD ]
Line_7 $$ LockMap.CountingReentrantLock<EntityIdentifier> lock = writeLocks.getLock(new EntityIdentifier(entity.getEntityId(), entity.getEntityType()))-->Line_95 $$ writeLocks.returnLock(lock)[ FD ]
Line_7 $$ LockMap.CountingReentrantLock<EntityIdentifier> lock = writeLocks.getLock(new EntityIdentifier(entity.getEntityId(), entity.getEntityType()))-->Line_99 $$ lock = writeLocks.getLock(relatedEntity)[ FD ]
Line_11 $$ byte[] revStartTime = null-->Line_102 $$ StartAndInsertTime relatedEntityStartAndInsertTime = getAndSetStartTime(relatedEntity.getId(), relatedEntity.getType(), readReverseOrderedLong(revStartTime, 0), null)[ FD ]
Line_26 $$ revStartTime = writeReverseOrderedLong(startAndInsertTime.startTime)-->Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_96 $$ IOUtils.cleanup(LOG, writeBatch)[ FD ]
Line_11 $$ byte[] revStartTime = null-->Line_26 $$ revStartTime = writeReverseOrderedLong(startAndInsertTime.startTime)[ FD ]
Line_7 $$ LockMap.CountingReentrantLock<EntityIdentifier> lock = writeLocks.getLock(new EntityIdentifier(entity.getEntityId(), entity.getEntityType()))-->Line_100 $$ lock.lock()[ FD ]
Line_26 $$ revStartTime = writeReverseOrderedLong(startAndInsertTime.startTime)-->Line_102 $$ StartAndInsertTime relatedEntityStartAndInsertTime = getAndSetStartTime(relatedEntity.getId(), relatedEntity.getType(), readReverseOrderedLong(revStartTime, 0), null)[ FD ]
Line_11 $$ byte[] revStartTime = null-->Line_79 $$ byte[] key = createOtherInfoKey(entity.getEntityId(), entity.getEntityType(), revStartTime, i.getKey())[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_39 $$ writeBatch.put(key, value)[ FD ]
Line_38 $$ byte[] value = GenericObjectMapper.write(event.getEventInfo())-->Line_82 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_67 $$ for (Entry<String, Set<Object>> primaryFilter : primaryFilters.entrySet()) -->Line_69 $$ byte[] key = createPrimaryFilterKey(entity.getEntityId(), entity.getEntityType(), revStartTime, primaryFilter.getKey(), primaryFilterValue)[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_71 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, EMPTY_BYTES)[ FD ]
Line_27 $$ Map<String, Set<Object>> primaryFilters = entity.getPrimaryFilters()-->Line_67 $$ for (Entry<String, Set<Object>> primaryFilter : primaryFilters.entrySet()) [ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_61 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_85 $$ db.write(writeBatch)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_70 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_71 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, EMPTY_BYTES)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_32 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, markerKey, markerValue)[ FD ]
Line_46 $$ for (Entry<String, Set<String>> relatedEntityList : relatedEntities.entrySet()) -->Line_48 $$ for (String relatedEntityId : relatedEntityList.getValue()) [ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_71 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, EMPTY_BYTES)[ FD ]
Line_11 $$ byte[] revStartTime = null-->Line_69 $$ byte[] key = createPrimaryFilterKey(entity.getEntityId(), entity.getEntityType(), revStartTime, primaryFilter.getKey(), primaryFilterValue)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_81 $$ writeBatch.put(key, value)[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_51 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_67 $$ for (Entry<String, Set<Object>> primaryFilter : primaryFilters.entrySet()) -->Line_68 $$ for (Object primaryFilterValue : primaryFilter.getValue()) [ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_82 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_36 $$ byte[] revts = writeReverseOrderedLong(event.getTimestamp())-->Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_39 $$ writeBatch.put(key, value)[ FD ]
Line_26 $$ revStartTime = writeReverseOrderedLong(startAndInsertTime.startTime)-->Line_69 $$ byte[] key = createPrimaryFilterKey(entity.getEntityId(), entity.getEntityType(), revStartTime, primaryFilter.getKey(), primaryFilterValue)[ FD ]
Line_11 $$ byte[] revStartTime = null-->Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())[ FD ]
Line_78 $$ for (Entry<String, Object> i : otherInfo.entrySet()) -->Line_80 $$ byte[] value = GenericObjectMapper.write(i.getValue())[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_13 $$ writeBatch = db.createWriteBatch()[ FD ]
Line_38 $$ byte[] value = GenericObjectMapper.write(event.getEventInfo())-->Line_40 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_78 $$ for (Entry<String, Object> i : otherInfo.entrySet()) -->Line_79 $$ byte[] key = createOtherInfoKey(entity.getEntityId(), entity.getEntityType(), revStartTime, i.getKey())[ FD ]
Line_35 $$ for (TimelineEvent event : events) -->Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())[ FD ]
Line_99 $$ lock = writeLocks.getLock(relatedEntity)-->Line_100 $$ lock.lock()[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_82 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_39 $$ writeBatch.put(key, value)[ FD ]
Line_17 $$ if (startAndInsertTime == null) -->Line_24 $$ return[ CD ]
Line_17 $$ if (startAndInsertTime == null) -->Line_21 $$ error.setEntityType(entity.getEntityType())[ CD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_81 $$ writeBatch.put(key, value)[ FD ]
Line_98 $$ for (EntityIdentifier relatedEntity : relatedEntitiesWithoutStartTimes) -->Line_107 $$ db.put(createRelatedEntityKey(relatedEntity.getId(), relatedEntity.getType(), relatedEntityStartTime, entity.getEntityId(), entity.getEntityType()), EMPTY_BYTES)[ FD ]
Line_98 $$ for (EntityIdentifier relatedEntity : relatedEntitiesWithoutStartTimes) -->Line_110 $$ LOG.error("Error putting related entity " + relatedEntity.getId() + " of type " + relatedEntity.getType() + " for entity " + entity.getEntityId() + " of type " + entity.getEntityType(), e)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_40 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_38 $$ byte[] value = GenericObjectMapper.write(event.getEventInfo())-->Line_39 $$ writeBatch.put(key, value)[ FD ]
Line_7 $$ LockMap.CountingReentrantLock<EntityIdentifier> lock = writeLocks.getLock(new EntityIdentifier(entity.getEntityId(), entity.getEntityType()))-->Line_117 $$ lock.unlock()[ FD ]
Line_98 $$ for (EntityIdentifier relatedEntity : relatedEntitiesWithoutStartTimes) -->Line_99 $$ lock = writeLocks.getLock(relatedEntity)[ FD ]
Line_17 $$ if (startAndInsertTime == null) -->Line_23 $$ response.addError(error)[ CD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_51 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_27 $$ Map<String, Set<Object>> primaryFilters = entity.getPrimaryFilters()-->Line_71 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, EMPTY_BYTES)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_31 $$ writeBatch.put(markerKey, markerValue)[ FD ]
Line_9 $$ WriteBatch writeBatch = null-->Line_51 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_27 $$ Map<String, Set<Object>> primaryFilters = entity.getPrimaryFilters()-->Line_32 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, markerKey, markerValue)[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_61 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_46 $$ for (Entry<String, Set<String>> relatedEntityList : relatedEntities.entrySet()) -->Line_47 $$ String relatedEntityType = relatedEntityList.getKey()[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_82 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_40 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_98 $$ for (EntityIdentifier relatedEntity : relatedEntitiesWithoutStartTimes) -->Line_102 $$ StartAndInsertTime relatedEntityStartAndInsertTime = getAndSetStartTime(relatedEntity.getId(), relatedEntity.getType(), readReverseOrderedLong(revStartTime, 0), null)[ FD ]
Line_98 $$ for (EntityIdentifier relatedEntity : relatedEntitiesWithoutStartTimes) -->Line_108 $$ db.put(createEntityMarkerKey(relatedEntity.getId(), relatedEntity.getType(), relatedEntityStartTime), writeReverseOrderedLong(relatedEntityStartAndInsertTime.insertTime))[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_61 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_30 $$ byte[] markerValue = writeReverseOrderedLong(startAndInsertTime.insertTime)-->Line_32 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, markerKey, markerValue)[ FD ]
Line_38 $$ byte[] value = GenericObjectMapper.write(event.getEventInfo())-->Line_81 $$ writeBatch.put(key, value)[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_96 $$ IOUtils.cleanup(LOG, writeBatch)[ FD ]
Line_26 $$ revStartTime = writeReverseOrderedLong(startAndInsertTime.startTime)-->Line_79 $$ byte[] key = createOtherInfoKey(entity.getEntityId(), entity.getEntityType(), revStartTime, i.getKey())[ FD ]
Line_35 $$ for (TimelineEvent event : events) -->Line_38 $$ byte[] value = GenericObjectMapper.write(event.getEventInfo())[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_70 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_68 $$ for (Object primaryFilterValue : primaryFilter.getValue()) -->Line_69 $$ byte[] key = createPrimaryFilterKey(entity.getEntityId(), entity.getEntityType(), revStartTime, primaryFilter.getKey(), primaryFilterValue)[ FD ]
Line_27 $$ Map<String, Set<Object>> primaryFilters = entity.getPrimaryFilters()-->Line_40 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_40 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_7 $$ LockMap.CountingReentrantLock<EntityIdentifier> lock = writeLocks.getLock(new EntityIdentifier(entity.getEntityId(), entity.getEntityType()))-->Line_118 $$ writeLocks.returnLock(lock)[ FD ]
Line_102 $$ StartAndInsertTime relatedEntityStartAndInsertTime = getAndSetStartTime(relatedEntity.getId(), relatedEntity.getType(), readReverseOrderedLong(revStartTime, 0), null)-->Line_103 $$ if (relatedEntityStartAndInsertTime == null) [ FD ]
Line_99 $$ lock = writeLocks.getLock(relatedEntity)-->Line_117 $$ lock.unlock()[ FD ]
Line_35 $$ for (TimelineEvent event : events) -->Line_36 $$ byte[] revts = writeReverseOrderedLong(event.getTimestamp())[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_81 $$ writeBatch.put(key, value)[ FD ]
Line_27 $$ Map<String, Set<Object>> primaryFilters = entity.getPrimaryFilters()-->Line_82 $$ writePrimaryFilterEntries(writeBatch, primaryFilters, key, value)[ FD ]
Line_13 $$ writeBatch = db.createWriteBatch()-->Line_85 $$ db.write(writeBatch)[ FD ]
Line_37 $$ byte[] key = createEntityEventKey(entity.getEntityId(), entity.getEntityType(), revStartTime, revts, event.getEventType())-->Line_70 $$ writeBatch.put(key, EMPTY_BYTES)[ FD ]
Line_17 $$ if (startAndInsertTime == null) -->Line_20 $$ error.setEntityId(entity.getEntityId())[ CD ]
Line_10 $$ List<EntityIdentifier> relatedEntitiesWithoutStartTimes = new ArrayList<EntityIdentifier>()-->Line_56 $$ relatedEntitiesWithoutStartTimes.add(new EntityIdentifier(relatedEntityId, relatedEntityType))[ FD ]
Line_17 $$ if (startAndInsertTime == null) -->Line_22 $$ error.setErrorCode(TimelinePutError.NO_START_TIME)[ CD ]
Line_7 $$ LockMap.CountingReentrantLock<EntityIdentifier> lock = writeLocks.getLock(new EntityIdentifier(entity.getEntityId(), entity.getEntityType()))-->Line_8 $$ lock.lock()[ FD ]
Line_7 $$ LockMap.CountingReentrantLock<EntityIdentifier> lock = writeLocks.getLock(new EntityIdentifier(entity.getEntityId(), entity.getEntityType()))-->Line_94 $$ lock.unlock()[ FD ]
Line_99 $$ lock = writeLocks.getLock(relatedEntity)-->Line_118 $$ writeLocks.returnLock(lock)[ FD ]
