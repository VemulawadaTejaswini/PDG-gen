Line_11 $$ if ("suite".equals(methodName)) -->Line_12 $$ return true[ CD ]
Line_9 $$ for (Iterator iterator1 = methods.iterator(); iterator1.hasNext(); ) -->Line_11 $$ if ("suite".equals(methodName)) [ CD ]
Line_2 $$ private static boolean canUseSuiteMethod(Map classMethods) -->Line_3 $$ for (Iterator iterator = classMethods.keySet().iterator(); iterator.hasNext(); ) [ FD ]
Line_3 $$ for (Iterator iterator = classMethods.keySet().iterator(); iterator.hasNext(); ) -->Line_4 $$ Object className = iterator.next()[ CD ]
Line_5 $$ Set methods = (Set) classMethods.get(className)-->Line_6 $$ if (methods == null) [ FD ]
Line_3 $$ for (Iterator iterator = classMethods.keySet().iterator(); iterator.hasNext(); ) -->Line_5 $$ Set methods = (Set) classMethods.get(className)[ CD ]
Line_5 $$ Set methods = (Set) classMethods.get(className)-->Line_9 $$ for (Iterator iterator1 = methods.iterator(); iterator1.hasNext(); ) [ FD ]
Line_9 $$ for (Iterator iterator1 = methods.iterator(); iterator1.hasNext(); ) -->Line_10 $$ String methodName = (String) iterator1.next()[ FD ]
Line_2 $$ private static boolean canUseSuiteMethod(Map classMethods) -->Line_5 $$ Set methods = (Set) classMethods.get(className)[ FD ]
Line_3 $$ for (Iterator iterator = classMethods.keySet().iterator(); iterator.hasNext(); ) -->Line_9 $$ for (Iterator iterator1 = methods.iterator(); iterator1.hasNext(); ) [ CD ]
Line_2 $$ private static boolean canUseSuiteMethod(Map classMethods) -->Line_16 $$ return classMethods.isEmpty()[ FD ]
Line_9 $$ for (Iterator iterator1 = methods.iterator(); iterator1.hasNext(); ) -->Line_10 $$ String methodName = (String) iterator1.next()[ CD ]
Line_3 $$ for (Iterator iterator = classMethods.keySet().iterator(); iterator.hasNext(); ) -->Line_4 $$ Object className = iterator.next()[ FD ]
Line_3 $$ for (Iterator iterator = classMethods.keySet().iterator(); iterator.hasNext(); ) -->Line_6 $$ if (methods == null) [ CD ]
Line_10 $$ String methodName = (String) iterator1.next()-->Line_11 $$ if ("suite".equals(methodName)) [ FD ]
Line_2 $$ private static boolean canUseSuiteMethod(Map classMethods) -->Line_3 $$ for (Iterator iterator = classMethods.keySet().iterator(); iterator.hasNext(); ) [ CD ]
Line_4 $$ Object className = iterator.next()-->Line_5 $$ Set methods = (Set) classMethods.get(className)[ FD ]
Line_2 $$ private static boolean canUseSuiteMethod(Map classMethods) -->Line_16 $$ return classMethods.isEmpty()[ CD ]
Line_6 $$ if (methods == null) -->Line_7 $$ return true[ CD ]
