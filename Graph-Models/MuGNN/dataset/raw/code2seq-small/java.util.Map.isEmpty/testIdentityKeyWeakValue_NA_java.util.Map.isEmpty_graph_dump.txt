Line_7 $$ Object testValue1 = new Object()-->Line_17 $$ Assert.assertSame(testValue1, concurrentMap.get(testKey1))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_27 $$ Assert.assertTrue(concurrentMap.isEmpty())[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_18 $$ Assert.assertSame(testValue2, concurrentMap.get(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_22 $$ Assert.assertEquals(1, concurrentMap.size())[ FD ]
Line_6 $$ String testKey2 = new String(testKey1)-->Line_23 $$ Assert.assertTrue(concurrentMap.containsKey(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_13 $$ Assert.assertTrue(concurrentMap.containsKey(testKey1))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_11 $$ Assert.assertNull(concurrentMap.put(testKey2, testValue2))[ FD ]
Line_5 $$ String testKey1 = "testKey1"-->Line_10 $$ Assert.assertNull(concurrentMap.put(testKey1, testValue1))[ FD ]
Line_7 $$ Object testValue1 = new Object()-->Line_14 $$ Assert.assertTrue(concurrentMap.containsValue(testValue1))[ FD ]
Line_7 $$ Object testValue1 = new Object()-->Line_10 $$ Assert.assertNull(concurrentMap.put(testKey1, testValue1))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_14 $$ Assert.assertTrue(concurrentMap.containsValue(testValue1))[ FD ]
Line_6 $$ String testKey2 = new String(testKey1)-->Line_18 $$ Assert.assertSame(testValue2, concurrentMap.get(testKey2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_11 $$ Assert.assertNull(concurrentMap.put(testKey2, testValue2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_17 $$ Assert.assertSame(testValue1, concurrentMap.get(testKey1))[ FD ]
Line_5 $$ String testKey1 = "testKey1"-->Line_13 $$ Assert.assertTrue(concurrentMap.containsKey(testKey1))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_12 $$ Assert.assertEquals(2, concurrentMap.size())[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_18 $$ Assert.assertSame(testValue2, concurrentMap.get(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_15 $$ Assert.assertTrue(concurrentMap.containsKey(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_16 $$ Assert.assertTrue(concurrentMap.containsValue(testValue2))[ FD ]
Line_7 $$ Object testValue1 = new Object()-->Line_19 $$ testValue1 = null[ FD ]
Line_6 $$ String testKey2 = new String(testKey1)-->Line_11 $$ Assert.assertNull(concurrentMap.put(testKey2, testValue2))[ FD ]
Line_6 $$ String testKey2 = new String(testKey1)-->Line_15 $$ Assert.assertTrue(concurrentMap.containsKey(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_10 $$ Assert.assertNull(concurrentMap.put(testKey1, testValue1))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_16 $$ Assert.assertTrue(concurrentMap.containsValue(testValue2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_24 $$ testValue2 = null[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentMap = new ConcurrentIdentityHashMap<String, Object>(new ConcurrentReferenceValueHashMap<IdentityKey<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY))-->Line_23 $$ Assert.assertTrue(concurrentMap.containsKey(testKey2))[ FD ]
Line_5 $$ String testKey1 = "testKey1"-->Line_17 $$ Assert.assertSame(testValue1, concurrentMap.get(testKey1))[ FD ]
