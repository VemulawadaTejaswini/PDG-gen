Line_26 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_27 $$ if (currentSeverityAndOccurrences == null) [ FD ]
Line_36 $$ boolean doContinue = false-->Line_43 $$ doContinue = true[ FD ]
Line_34 $$ Set<String> toolsToCheck = ContainerUtil.newHashSet(allScopes.keySet())-->Line_35 $$ toolsToCheck.removeAll(currentSeverityAndOccurrences.getOccurrences().keySet())[ FD ]
Line_25 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_32 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_40 $$ if (currentToolSeverity != null) -->Line_41 $$ if (!currentSeverity.equals(currentToolSeverity)) [ CD ]
Line_4 $$ if (myScopeToAverageSeverityMap.isEmpty()) -->Line_5 $$ return null[ CD ]
Line_25 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_42 $$ result.put(currentScope, ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY)[ FD ]
Line_26 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_35 $$ toolsToCheck.removeAll(currentSeverityAndOccurrences.getOccurrences().keySet())[ FD ]
Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_34 $$ Set<String> toolsToCheck = ContainerUtil.newHashSet(allScopes.keySet())[ CD ]
Line_13 $$ final SeverityAndOccurrences defaultSeveritiesAndOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName)-->Line_24 $$ final Map<String, HighlightSeverity> allScopes = defaultSeveritiesAndOccurrences.getOccurrences()[ FD ]
Line_7 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_32 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_36 $$ boolean doContinue = false[ CD ]
Line_7 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_51 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_10 $$ if (myScopeToAverageSeverityMap.size() == 1) -->Line_11 $$ return result[ CD ]
Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_48 $$ if (doContinue) [ CD ]
Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_37 $$ final Map<String, HighlightSeverity> lowerScopeOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName).getOccurrences()[ CD ]
Line_8 $$ final Map.Entry<String, SeverityAndOccurrences> entry = ContainerUtil.getFirstItem(myScopeToAverageSeverityMap.entrySet())-->Line_9 $$ result.put(entry.getKey(), entry.getValue().getPrimarySeverity())[ FD ]
Line_41 $$ if (!currentSeverity.equals(currentToolSeverity)) -->Line_42 $$ result.put(currentScope, ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY)[ CD ]
Line_25 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) [ FD ]
Line_26 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_30 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()[ FD ]
Line_13 $$ final SeverityAndOccurrences defaultSeveritiesAndOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName)-->Line_23 $$ final int allInspectionsCount = defaultSeveritiesAndOccurrences.getOccurrencesSize()[ FD ]
Line_30 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()-->Line_32 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_30 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()-->Line_41 $$ if (!currentSeverity.equals(currentToolSeverity)) [ FD ]
Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_35 $$ toolsToCheck.removeAll(currentSeverityAndOccurrences.getOccurrences().keySet())[ CD ]
Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_32 $$ result.put(currentScope, currentSeverity)[ CD ]
Line_37 $$ final Map<String, HighlightSeverity> lowerScopeOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName).getOccurrences()-->Line_39 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)[ FD ]
Line_7 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_18 $$ result.put(e.getKey(), primarySeverity)[ FD ]
Line_38 $$ for (String toolName : toolsToCheck) -->Line_39 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)[ FD ]
Line_16 $$ final HighlightSeverity primarySeverity = e.getValue().getPrimarySeverity()-->Line_18 $$ result.put(e.getKey(), primarySeverity)[ FD ]
Line_25 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_51 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_16 $$ final HighlightSeverity primarySeverity = e.getValue().getPrimarySeverity()-->Line_17 $$ if (primarySeverity != null) [ FD ]
Line_15 $$ for (Map.Entry<String, SeverityAndOccurrences> e : myScopeToAverageSeverityMap.entrySet()) -->Line_16 $$ final HighlightSeverity primarySeverity = e.getValue().getPrimarySeverity()[ FD ]
Line_14 $$ if (defaultSeveritiesAndOccurrences == null) -->Line_21 $$ return result[ CD ]
Line_39 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)-->Line_40 $$ if (currentToolSeverity != null) [ FD ]
Line_26 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) [ FD ]
Line_25 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_26 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)[ FD ]
Line_31 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_51 $$ result.put(currentScope, currentSeverity)[ CD ]
Line_30 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()-->Line_51 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_7 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_42 $$ result.put(currentScope, ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY)[ FD ]
Line_24 $$ final Map<String, HighlightSeverity> allScopes = defaultSeveritiesAndOccurrences.getOccurrences()-->Line_34 $$ Set<String> toolsToCheck = ContainerUtil.newHashSet(allScopes.keySet())[ FD ]
Line_41 $$ if (!currentSeverity.equals(currentToolSeverity)) -->Line_43 $$ doContinue = true[ CD ]
Line_7 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_9 $$ result.put(entry.getKey(), entry.getValue().getPrimarySeverity())[ FD ]
Line_39 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)-->Line_41 $$ if (!currentSeverity.equals(currentToolSeverity)) [ FD ]
Line_15 $$ for (Map.Entry<String, SeverityAndOccurrences> e : myScopeToAverageSeverityMap.entrySet()) -->Line_18 $$ result.put(e.getKey(), primarySeverity)[ FD ]
Line_17 $$ if (primarySeverity != null) -->Line_18 $$ result.put(e.getKey(), primarySeverity)[ CD ]
Line_13 $$ final SeverityAndOccurrences defaultSeveritiesAndOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName)-->Line_14 $$ if (defaultSeveritiesAndOccurrences == null) [ FD ]
