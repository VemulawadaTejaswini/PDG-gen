Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_12 $$ Assert.assertEquals(2, concurrentReferenceMap.size())[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_26 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_6 $$ String testKey2 = new String("testKey2")-->Line_30 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_30 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_31 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2))[ FD ]
Line_6 $$ String testKey2 = new String("testKey2")-->Line_24 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2))[ FD ]
Line_7 $$ Object testValue1 = new Object()-->Line_15 $$ Assert.assertSame(testValue1, concurrentReferenceMap.get(testKey1))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_17 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_36 $$ Assert.assertTrue(concurrentReferenceMap.isEmpty())[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_22 $$ Assert.assertEquals(2, concurrentReferenceMap.size())[ FD ]
Line_5 $$ String testKey1 = new String("testKey1")-->Line_10 $$ Assert.assertNull(concurrentReferenceMap.put(testKey1, testValue1))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_24 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_23 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue1))[ FD ]
Line_7 $$ Object testValue1 = new Object()-->Line_10 $$ Assert.assertNull(concurrentReferenceMap.put(testKey1, testValue1))[ FD ]
Line_5 $$ String testKey1 = new String("testKey1")-->Line_15 $$ Assert.assertSame(testValue1, concurrentReferenceMap.get(testKey1))[ FD ]
Line_5 $$ String testKey1 = new String("testKey1")-->Line_13 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey1))[ FD ]
Line_6 $$ String testKey2 = new String("testKey2")-->Line_26 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_6 $$ String testKey2 = new String("testKey2")-->Line_16 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_33 $$ testValue2 = null[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_10 $$ Assert.assertNull(concurrentReferenceMap.put(testKey1, testValue1))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_26 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_29 $$ Assert.assertEquals(1, concurrentReferenceMap.size())[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_16 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_32 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_15 $$ Assert.assertSame(testValue1, concurrentReferenceMap.get(testKey1))[ FD ]
Line_5 $$ String testKey1 = new String("testKey1")-->Line_19 $$ testKey1 = null[ FD ]
Line_6 $$ String testKey2 = new String("testKey2")-->Line_11 $$ Assert.assertNull(concurrentReferenceMap.put(testKey2, testValue2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_11 $$ Assert.assertNull(concurrentReferenceMap.put(testKey2, testValue2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_25 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2))[ FD ]
Line_7 $$ Object testValue1 = new Object()-->Line_14 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue1))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_18 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_31 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_25 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2))[ FD ]
Line_7 $$ Object testValue1 = new Object()-->Line_23 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue1))[ FD ]
Line_6 $$ String testKey2 = new String("testKey2")-->Line_18 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_11 $$ Assert.assertNull(concurrentReferenceMap.put(testKey2, testValue2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_32 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_14 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue1))[ FD ]
Line_6 $$ String testKey2 = new String("testKey2")-->Line_32 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_13 $$ Assert.assertTrue(concurrentReferenceMap.containsKey(testKey1))[ FD ]
Line_9 $$ ConcurrentMap<String, Object> concurrentReferenceMap = new ConcurrentReferenceKeyHashMap<String, Object>(new ConcurrentReferenceValueHashMap<Reference<String>, Object>(FinalizeManager.WEAK_REFERENCE_FACTORY), FinalizeManager.SOFT_REFERENCE_FACTORY)-->Line_17 $$ Assert.assertTrue(concurrentReferenceMap.containsValue(testValue2))[ FD ]
Line_8 $$ Object testValue2 = new Object()-->Line_18 $$ Assert.assertSame(testValue2, concurrentReferenceMap.get(testKey2))[ FD ]
