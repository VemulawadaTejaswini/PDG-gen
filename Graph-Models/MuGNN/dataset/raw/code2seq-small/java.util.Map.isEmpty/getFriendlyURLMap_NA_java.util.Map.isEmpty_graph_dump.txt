Line_4 $$ for (Locale locale : LanguageUtil.getAvailableLocales(groupId)) -->Line_5 $$ String friendlyURL = friendlyURLMap.get(locale)[ FD ]
Line_11 $$ Locale siteDefaultLocale = LocaleUtil.getSiteDefault()-->Line_12 $$ if (newFriendlyURLMap.isEmpty() || Validator.isNull(newFriendlyURLMap.get(siteDefaultLocale))) [ FD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_7 $$ friendlyURL = getFriendlyURL(groupId, privateLayout, layoutId, name, friendlyURL)[ FD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_4 $$ for (Locale locale : LanguageUtil.getAvailableLocales(groupId)) [ FD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_13 $$ String friendlyURL = getFriendlyURL(groupId, privateLayout, layoutId, name, StringPool.BLANK)[ FD ]
Line_12 $$ if (newFriendlyURLMap.isEmpty() || Validator.isNull(newFriendlyURLMap.get(siteDefaultLocale))) -->Line_13 $$ String friendlyURL = getFriendlyURL(groupId, privateLayout, layoutId, name, StringPool.BLANK)[ CD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_11 $$ Locale siteDefaultLocale = LocaleUtil.getSiteDefault()[ CD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_3 $$ Map<Locale, String> newFriendlyURLMap = new HashMap()[ CD ]
Line_12 $$ if (newFriendlyURLMap.isEmpty() || Validator.isNull(newFriendlyURLMap.get(siteDefaultLocale))) -->Line_14 $$ newFriendlyURLMap.put(siteDefaultLocale, friendlyURL)[ CD ]
Line_5 $$ String friendlyURL = friendlyURLMap.get(locale)-->Line_14 $$ newFriendlyURLMap.put(siteDefaultLocale, friendlyURL)[ FD ]
Line_5 $$ String friendlyURL = friendlyURLMap.get(locale)-->Line_7 $$ friendlyURL = getFriendlyURL(groupId, privateLayout, layoutId, name, friendlyURL)[ FD ]
Line_7 $$ friendlyURL = getFriendlyURL(groupId, privateLayout, layoutId, name, friendlyURL)-->Line_8 $$ newFriendlyURLMap.put(locale, friendlyURL)[ FD ]
Line_6 $$ if (Validator.isNotNull(friendlyURL)) -->Line_8 $$ newFriendlyURLMap.put(locale, friendlyURL)[ CD ]
Line_6 $$ if (Validator.isNotNull(friendlyURL)) -->Line_7 $$ friendlyURL = getFriendlyURL(groupId, privateLayout, layoutId, name, friendlyURL)[ CD ]
Line_3 $$ Map<Locale, String> newFriendlyURLMap = new HashMap()-->Line_8 $$ newFriendlyURLMap.put(locale, friendlyURL)[ FD ]
Line_3 $$ Map<Locale, String> newFriendlyURLMap = new HashMap()-->Line_14 $$ newFriendlyURLMap.put(siteDefaultLocale, friendlyURL)[ FD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_16 $$ return newFriendlyURLMap[ CD ]
Line_4 $$ for (Locale locale : LanguageUtil.getAvailableLocales(groupId)) -->Line_8 $$ newFriendlyURLMap.put(locale, friendlyURL)[ FD ]
Line_7 $$ friendlyURL = getFriendlyURL(groupId, privateLayout, layoutId, name, friendlyURL)-->Line_14 $$ newFriendlyURLMap.put(siteDefaultLocale, friendlyURL)[ FD ]
Line_3 $$ Map<Locale, String> newFriendlyURLMap = new HashMap()-->Line_12 $$ if (newFriendlyURLMap.isEmpty() || Validator.isNull(newFriendlyURLMap.get(siteDefaultLocale))) [ FD ]
Line_11 $$ Locale siteDefaultLocale = LocaleUtil.getSiteDefault()-->Line_14 $$ newFriendlyURLMap.put(siteDefaultLocale, friendlyURL)[ FD ]
Line_5 $$ String friendlyURL = friendlyURLMap.get(locale)-->Line_6 $$ if (Validator.isNotNull(friendlyURL)) [ FD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_5 $$ String friendlyURL = friendlyURLMap.get(locale)[ FD ]
Line_2 $$ public Map<Locale, String> getFriendlyURLMap(long groupId, boolean privateLayout, long layoutId, String name, Map<Locale, String> friendlyURLMap) throws PortalException -->Line_12 $$ if (newFriendlyURLMap.isEmpty() || Validator.isNull(newFriendlyURLMap.get(siteDefaultLocale))) [ CD ]
Line_5 $$ String friendlyURL = friendlyURLMap.get(locale)-->Line_8 $$ newFriendlyURLMap.put(locale, friendlyURL)[ FD ]
