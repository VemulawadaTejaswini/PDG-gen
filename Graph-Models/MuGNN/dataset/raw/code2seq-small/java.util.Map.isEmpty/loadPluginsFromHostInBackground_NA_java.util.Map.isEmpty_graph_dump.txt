Line_12 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_47 $$ propagateUpdates(list)[ FD ]
Line_13 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()-->Line_49 $$ if (!errors.isEmpty()) [ FD ]
Line_51 $$ String title = IdeBundle.message("title.plugins")-->Line_53 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ FD ]
Line_8 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_13 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()[ CD ]
Line_12 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_23 $$ list.add(plugin)[ FD ]
Line_17 $$ for (String host : hosts) -->Line_32 $$ errors.put(host, String.format("'%s' for '%s'", e.getMessage(), host))[ FD ]
Line_31 $$ if (host != ApplicationInfoEx.getInstanceEx().getBuiltinPluginsUrl()) -->Line_32 $$ errors.put(host, String.format("'%s' for '%s'", e.getMessage(), host))[ CD ]
Line_8 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_15 $$ List<String> hosts = RepositoryHelper.getPluginHosts()[ CD ]
Line_21 $$ for (IdeaPluginDescriptor plugin : plugins) -->Line_22 $$ if (unique.add(plugin.getPluginId())) [ FD ]
Line_8 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_14 $$ ProgressIndicator indicator = new EmptyProgressIndicator()[ CD ]
Line_17 $$ for (String host : hosts) -->Line_20 $$ List<IdeaPluginDescriptor> plugins = RepositoryHelper.loadPlugins(host, indicator)[ FD ]
Line_17 $$ for (String host : hosts) -->Line_28 $$ LOG.info(host, e)[ FD ]
Line_8 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_16 $$ Set<PluginId> unique = ContainerUtil.newHashSet()[ CD ]
Line_8 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_36 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_49 $$ if (!errors.isEmpty()) -->Line_53 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ CD ]
Line_41 $$ if (!list.isEmpty()) -->Line_42 $$ InstalledPluginsState state = InstalledPluginsState.getInstance()[ CD ]
Line_19 $$ if (host == null || acceptHost(host)) -->Line_20 $$ List<IdeaPluginDescriptor> plugins = RepositoryHelper.loadPlugins(host, indicator)[ CD ]
Line_8 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_12 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()[ CD ]
Line_17 $$ for (String host : hosts) -->Line_30 $$ LOG.info(host, e)[ FD ]
Line_36 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_41 $$ if (!list.isEmpty()) [ CD ]
Line_21 $$ for (IdeaPluginDescriptor plugin : plugins) -->Line_23 $$ list.add(plugin)[ FD ]
Line_42 $$ InstalledPluginsState state = InstalledPluginsState.getInstance()-->Line_44 $$ state.onDescriptorDownload(descriptor)[ FD ]
Line_13 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()-->Line_50 $$ String message = IdeBundle.message("error.list.of.plugins.was.not.loaded", StringUtil.join(errors.keySet(), ", "), StringUtil.join(errors.values(), ",\n"))[ FD ]
Line_36 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_40 $$ setDownloadStatus(false)[ CD ]
Line_43 $$ for (IdeaPluginDescriptor descriptor : list) -->Line_44 $$ state.onDescriptorDownload(descriptor)[ FD ]
Line_22 $$ if (unique.add(plugin.getPluginId())) -->Line_23 $$ list.add(plugin)[ CD ]
Line_49 $$ if (!errors.isEmpty()) -->Line_50 $$ String message = IdeBundle.message("error.list.of.plugins.was.not.loaded", StringUtil.join(errors.keySet(), ", "), StringUtil.join(errors.values(), ",\n"))[ CD ]
Line_49 $$ if (!errors.isEmpty()) -->Line_52 $$ String ok = CommonBundle.message("button.retry"), cancel = CommonBundle.getCancelButtonText()[ CD ]
Line_12 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_41 $$ if (!list.isEmpty()) [ FD ]
Line_17 $$ for (String host : hosts) -->Line_19 $$ if (host == null || acceptHost(host)) [ FD ]
Line_36 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_49 $$ if (!errors.isEmpty()) [ CD ]
Line_12 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_46 $$ modifyPluginsList(list)[ FD ]
Line_53 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) -->Line_54 $$ loadPluginsFromHostInBackground()[ CD ]
Line_17 $$ for (String host : hosts) -->Line_31 $$ if (host != ApplicationInfoEx.getInstanceEx().getBuiltinPluginsUrl()) [ FD ]
Line_41 $$ if (!list.isEmpty()) -->Line_47 $$ propagateUpdates(list)[ CD ]
Line_50 $$ String message = IdeBundle.message("error.list.of.plugins.was.not.loaded", StringUtil.join(errors.keySet(), ", "), StringUtil.join(errors.values(), ",\n"))-->Line_53 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ FD ]
Line_49 $$ if (!errors.isEmpty()) -->Line_51 $$ String title = IdeBundle.message("title.plugins")[ CD ]
Line_41 $$ if (!list.isEmpty()) -->Line_46 $$ modifyPluginsList(list)[ CD ]
Line_16 $$ Set<PluginId> unique = ContainerUtil.newHashSet()-->Line_22 $$ if (unique.add(plugin.getPluginId())) [ FD ]
Line_14 $$ ProgressIndicator indicator = new EmptyProgressIndicator()-->Line_20 $$ List<IdeaPluginDescriptor> plugins = RepositoryHelper.loadPlugins(host, indicator)[ FD ]
Line_52 $$ String ok = CommonBundle.message("button.retry"), cancel = CommonBundle.getCancelButtonText()-->Line_53 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ FD ]
Line_13 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()-->Line_32 $$ errors.put(host, String.format("'%s' for '%s'", e.getMessage(), host))[ FD ]
