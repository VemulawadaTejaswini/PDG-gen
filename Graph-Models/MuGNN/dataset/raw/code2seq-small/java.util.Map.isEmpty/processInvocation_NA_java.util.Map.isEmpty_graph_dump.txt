Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_33 $$ interceptorContext.setMethod(method)[ FD ]
Line_23 $$ if (invocation.getParameters() == null) -->Line_24 $$ parameters = EMPTY_OBJECT_ARRAY[ CD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_63 $$ interceptorContext.putPrivateData(ComponentView.class, view)[ FD ]
Line_73 $$ final ObjectCloner resultCloner = createCloner(config)-->Line_99 $$ return LocalEjbReceiver.clone(result.getClass(), resultCloner, result, allowPassByReference)[ FD ]
Line_24 $$ parameters = EMPTY_OBJECT_ARRAY-->Line_26 $$ parameters = new Object[invocation.getParameters().length][ FD ]
Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) -->Line_76 $$ final SessionBeanComponent component = (SessionBeanComponent) ejbComponent[ CD ]
Line_5 $$ final EjbDeploymentInformation ejb = findBean(locator.getAppName(), locator.getModuleName(), locator.getDistinctName(), locator.getBeanName())-->Line_8 $$ final ComponentView view = ejb.getView(viewClass.getName())[ FD ]
Line_16 $$ final ClonerConfiguration paramConfig = new ClonerConfiguration()-->Line_18 $$ final ObjectCloner parameterCloner = createCloner(paramConfig)[ FD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_85 $$ Object result = view.invoke(interceptorContext)[ FD ]
Line_8 $$ final ComponentView view = ejb.getView(viewClass.getName())-->Line_85 $$ Object result = view.invoke(interceptorContext)[ FD ]
Line_18 $$ final ObjectCloner parameterCloner = createCloner(paramConfig)-->Line_28 $$ parameters[i] = clone(method.getParameterTypes()[i], parameterCloner, invocation.getParameters()[i], allowPassByReference)[ FD ]
Line_8 $$ final ComponentView view = ejb.getView(viewClass.getName())-->Line_21 $$ final boolean async = view.isAsynchronous(method)[ FD ]
Line_8 $$ final ComponentView view = ejb.getView(viewClass.getName())-->Line_9 $$ if (view == null) [ FD ]
Line_38 $$ if (invocationContextData == null && privateAttachments.isEmpty()) -->Line_56 $$ if (txIdAttachmentPresent) [ CD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_34 $$ interceptorContext.setTarget(invocation.getInvokedProxy())[ FD ]
Line_79 $$ final AsyncInvocationTask task = new AsyncInvocationTask(flag) -->Line_109 $$ component.getAsynchronousExecutor().submit(task)[ FD ]
Line_42 $$ final Map<String, Object> data = new HashMap<String, Object>()-->Line_43 $$ interceptorContext.setContextData(data)[ FD ]
Line_24 $$ parameters = EMPTY_OBJECT_ARRAY-->Line_32 $$ interceptorContext.setParameters(parameters)[ FD ]
Line_73 $$ final ObjectCloner resultCloner = createCloner(config)-->Line_102 $$ throw ((Exception) LocalEjbReceiver.clone(e.getClass(), resultCloner, e, allowPassByReference))[ FD ]
Line_73 $$ final ObjectCloner resultCloner = createCloner(config)-->Line_121 $$ throw (Exception) clone(Exception.class, resultCloner, e, allowPassByReference)[ FD ]
Line_8 $$ final ComponentView view = ejb.getView(viewClass.getName())-->Line_117 $$ result = view.invoke(interceptorContext)[ FD ]
Line_67 $$ if (locator instanceof EntityEJBLocator) -->Line_68 $$ final Object primaryKey = ((EntityEJBLocator<?>) locator).getPrimaryKey()[ CD ]
Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) -->Line_108 $$ interceptorContext.putPrivateData(CancellationFlag.class, flag)[ CD ]
Line_64 $$ if (locator instanceof StatefulEJBLocator) -->Line_67 $$ if (locator instanceof EntityEJBLocator) [ CD ]
Line_7 $$ final Class<?> viewClass = invocation.getViewClass()-->Line_10 $$ throw EjbLogger.ROOT_LOGGER.viewNotFound(viewClass.getName(), ejb.getEjbName())[ FD ]
Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) -->Line_78 $$ final SecurityContext securityContext = SecurityContextAssociation.getSecurityContext()[ CD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_117 $$ result = view.invoke(interceptorContext)[ FD ]
Line_26 $$ parameters = new Object[invocation.getParameters().length]-->Line_32 $$ interceptorContext.setParameters(parameters)[ FD ]
Line_73 $$ final ObjectCloner resultCloner = createCloner(config)-->Line_97 $$ return new AsyncResult(LocalEjbReceiver.clone(asyncValue.getClass(), resultCloner, asyncValue, allowPassByReference))[ FD ]
Line_42 $$ final Map<String, Object> data = new HashMap<String, Object>()-->Line_46 $$ data.put(entry.getKey(), entry.getValue())[ FD ]
Line_67 $$ if (locator instanceof EntityEJBLocator) -->Line_69 $$ interceptorContext.putPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY, primaryKey)[ CD ]
Line_78 $$ final SecurityContext securityContext = SecurityContextAssociation.getSecurityContext()-->Line_83 $$ setSecurityContextOnAssociation(securityContext)[ FD ]
Line_6 $$ final EJBComponent ejbComponent = ejb.getEjbComponent()-->Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) [ FD ]
Line_6 $$ final EJBComponent ejbComponent = ejb.getEjbComponent()-->Line_62 $$ interceptorContext.putPrivateData(Component.class, ejbComponent)[ FD ]
Line_38 $$ if (invocationContextData == null && privateAttachments.isEmpty()) -->Line_48 $$ if (!privateAttachments.isEmpty()) [ CD ]
Line_22 $$ final Object[] parameters-->Line_26 $$ parameters = new Object[invocation.getParameters().length][ FD ]
Line_77 $$ final CancellationFlag flag = new CancellationFlag()-->Line_108 $$ interceptorContext.putPrivateData(CancellationFlag.class, flag)[ FD ]
Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) -->Line_110 $$ receiverContext.resultReady(new ImmediateResultProducer(task))[ CD ]
Line_7 $$ final Class<?> viewClass = invocation.getViewClass()-->Line_14 $$ throw EjbLogger.ROOT_LOGGER.viewNotFound(viewClass.getName(), ejb.getEjbName())[ FD ]
Line_74 $$ if (async) -->Line_127 $$ receiverContext.resultReady(new ImmediateResultProducer(clonedResult))[ CD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_69 $$ interceptorContext.putPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY, primaryKey)[ FD ]
Line_5 $$ final EjbDeploymentInformation ejb = findBean(locator.getAppName(), locator.getModuleName(), locator.getDistinctName(), locator.getBeanName())-->Line_10 $$ throw EjbLogger.ROOT_LOGGER.viewNotFound(viewClass.getName(), ejb.getEjbName())[ FD ]
Line_64 $$ if (locator instanceof StatefulEJBLocator) -->Line_66 $$ interceptorContext.putPrivateData(SessionID.class, sessionID)[ CD ]
Line_64 $$ if (locator instanceof StatefulEJBLocator) -->Line_65 $$ final SessionID sessionID = ((StatefulEJBLocator<?>) locator).getSessionId()[ CD ]
Line_27 $$ for (int i = 0; i < parameters.length; ++i) -->Line_28 $$ parameters[i] = clone(method.getParameterTypes()[i], parameterCloner, invocation.getParameters()[i], allowPassByReference)[ CD ]
Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) -->Line_77 $$ final CancellationFlag flag = new CancellationFlag()[ CD ]
Line_23 $$ if (invocation.getParameters() == null) -->Line_26 $$ parameters = new Object[invocation.getParameters().length][ CD ]
Line_71 $$ final ClonerConfiguration config = new ClonerConfiguration()-->Line_72 $$ config.setClassCloner(new LocalInvocationClassCloner(WildFlySecurityManager.getClassLoaderPrivileged(invocation.getInvokedProxy().getClass())))[ FD ]
Line_22 $$ final Object[] parameters-->Line_32 $$ interceptorContext.setParameters(parameters)[ FD ]
Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) -->Line_79 $$ final AsyncInvocationTask task = new AsyncInvocationTask(flag) [ CD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_43 $$ interceptorContext.setContextData(data)[ FD ]
Line_74 $$ if (async) -->Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) [ CD ]
Line_85 $$ Object result = view.invoke(interceptorContext)-->Line_117 $$ result = view.invoke(interceptorContext)[ FD ]
Line_16 $$ final ClonerConfiguration paramConfig = new ClonerConfiguration()-->Line_17 $$ paramConfig.setClassCloner(new ClassLoaderClassCloner(ejb.getDeploymentClassLoader()))[ FD ]
Line_23 $$ if (invocation.getParameters() == null) -->Line_27 $$ for (int i = 0; i < parameters.length; ++i) [ CD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_32 $$ interceptorContext.setParameters(parameters)[ FD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_62 $$ interceptorContext.putPrivateData(Component.class, ejbComponent)[ FD ]
Line_85 $$ Object result = view.invoke(interceptorContext)-->Line_99 $$ return LocalEjbReceiver.clone(result.getClass(), resultCloner, result, allowPassByReference)[ FD ]
Line_8 $$ final ComponentView view = ejb.getView(viewClass.getName())-->Line_63 $$ interceptorContext.putPrivateData(ComponentView.class, view)[ FD ]
Line_22 $$ final Object[] parameters-->Line_24 $$ parameters = EMPTY_OBJECT_ARRAY[ FD ]
Line_4 $$ final EJBLocator<?> locator = invocation.getLocator()-->Line_5 $$ final EjbDeploymentInformation ejb = findBean(locator.getAppName(), locator.getModuleName(), locator.getDistinctName(), locator.getBeanName())[ FD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_66 $$ interceptorContext.putPrivateData(SessionID.class, sessionID)[ FD ]
Line_5 $$ final EjbDeploymentInformation ejb = findBean(locator.getAppName(), locator.getModuleName(), locator.getDistinctName(), locator.getBeanName())-->Line_17 $$ paramConfig.setClassCloner(new ClassLoaderClassCloner(ejb.getDeploymentClassLoader()))[ FD ]
Line_76 $$ final SessionBeanComponent component = (SessionBeanComponent) ejbComponent-->Line_109 $$ component.getAsynchronousExecutor().submit(task)[ FD ]
Line_4 $$ final EJBLocator<?> locator = invocation.getLocator()-->Line_67 $$ if (locator instanceof EntityEJBLocator) [ FD ]
Line_75 $$ if (ejbComponent instanceof SessionBeanComponent) -->Line_109 $$ component.getAsynchronousExecutor().submit(task)[ CD ]
Line_5 $$ final EjbDeploymentInformation ejb = findBean(locator.getAppName(), locator.getModuleName(), locator.getDistinctName(), locator.getBeanName())-->Line_14 $$ throw EjbLogger.ROOT_LOGGER.viewNotFound(viewClass.getName(), ejb.getEjbName())[ FD ]
Line_31 $$ final InterceptorContext interceptorContext = new InterceptorContext()-->Line_108 $$ interceptorContext.putPrivateData(CancellationFlag.class, flag)[ FD ]
Line_65 $$ final SessionID sessionID = ((StatefulEJBLocator<?>) locator).getSessionId()-->Line_66 $$ interceptorContext.putPrivateData(SessionID.class, sessionID)[ FD ]
Line_7 $$ final Class<?> viewClass = invocation.getViewClass()-->Line_8 $$ final ComponentView view = ejb.getView(viewClass.getName())[ FD ]
Line_4 $$ final EJBLocator<?> locator = invocation.getLocator()-->Line_64 $$ if (locator instanceof StatefulEJBLocator) [ FD ]
Line_68 $$ final Object primaryKey = ((EntityEJBLocator<?>) locator).getPrimaryKey()-->Line_69 $$ interceptorContext.putPrivateData(EntityBeanComponent.PRIMARY_KEY_CONTEXT_KEY, primaryKey)[ FD ]
Line_92 $$ Object asyncValue = ((Future) result).get()-->Line_97 $$ return new AsyncResult(LocalEjbReceiver.clone(asyncValue.getClass(), resultCloner, asyncValue, allowPassByReference))[ FD ]
Line_79 $$ final AsyncInvocationTask task = new AsyncInvocationTask(flag) -->Line_83 $$ setSecurityContextOnAssociation(securityContext)[ CD ]
Line_38 $$ if (invocationContextData == null && privateAttachments.isEmpty()) -->Line_42 $$ final Map<String, Object> data = new HashMap<String, Object>()[ CD ]
Line_5 $$ final EjbDeploymentInformation ejb = findBean(locator.getAppName(), locator.getModuleName(), locator.getDistinctName(), locator.getBeanName())-->Line_6 $$ final EJBComponent ejbComponent = ejb.getEjbComponent()[ FD ]
Line_71 $$ final ClonerConfiguration config = new ClonerConfiguration()-->Line_73 $$ final ObjectCloner resultCloner = createCloner(config)[ FD ]
Line_38 $$ if (invocationContextData == null && privateAttachments.isEmpty()) -->Line_43 $$ interceptorContext.setContextData(data)[ CD ]
