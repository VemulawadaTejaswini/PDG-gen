Line_5 $$ Set<Serializable> primaryKeys = new HashSet<Serializable>()-->Line_8 $$ Map<Serializable, Module> modules = _persistence.fetchByPrimaryKeys(primaryKeys)[ FD ]
Line_2 $$ public void testFetchByPrimaryKeysWithMultiplePrimaryKeysWhereNoPrimaryKeysExist() throws Exception -->Line_7 $$ primaryKeys.add(pk2)[ CD ]
Line_2 $$ public void testFetchByPrimaryKeysWithMultiplePrimaryKeysWhereNoPrimaryKeysExist() throws Exception -->Line_3 $$ long pk1 = RandomTestUtil.nextLong()[ CD ]
Line_2 $$ public void testFetchByPrimaryKeysWithMultiplePrimaryKeysWhereNoPrimaryKeysExist() throws Exception -->Line_8 $$ Map<Serializable, Module> modules = _persistence.fetchByPrimaryKeys(primaryKeys)[ CD ]
Line_2 $$ public void testFetchByPrimaryKeysWithMultiplePrimaryKeysWhereNoPrimaryKeysExist() throws Exception -->Line_9 $$ Assert.assertTrue(modules.isEmpty())[ CD ]
Line_4 $$ long pk2 = RandomTestUtil.nextLong()-->Line_7 $$ primaryKeys.add(pk2)[ FD ]
Line_5 $$ Set<Serializable> primaryKeys = new HashSet<Serializable>()-->Line_6 $$ primaryKeys.add(pk1)[ FD ]
Line_8 $$ Map<Serializable, Module> modules = _persistence.fetchByPrimaryKeys(primaryKeys)-->Line_9 $$ Assert.assertTrue(modules.isEmpty())[ FD ]
Line_3 $$ long pk1 = RandomTestUtil.nextLong()-->Line_6 $$ primaryKeys.add(pk1)[ FD ]
Line_2 $$ public void testFetchByPrimaryKeysWithMultiplePrimaryKeysWhereNoPrimaryKeysExist() throws Exception -->Line_6 $$ primaryKeys.add(pk1)[ CD ]
Line_2 $$ public void testFetchByPrimaryKeysWithMultiplePrimaryKeysWhereNoPrimaryKeysExist() throws Exception -->Line_4 $$ long pk2 = RandomTestUtil.nextLong()[ CD ]
Line_5 $$ Set<Serializable> primaryKeys = new HashSet<Serializable>()-->Line_7 $$ primaryKeys.add(pk2)[ FD ]
Line_2 $$ public void testFetchByPrimaryKeysWithMultiplePrimaryKeysWhereNoPrimaryKeysExist() throws Exception -->Line_5 $$ Set<Serializable> primaryKeys = new HashSet<Serializable>()[ CD ]
