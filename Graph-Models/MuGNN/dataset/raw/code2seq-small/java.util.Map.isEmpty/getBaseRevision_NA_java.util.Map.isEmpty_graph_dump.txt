Line_7 $$ final BaseRevisionTextPatchEP baseRevisionTextPatchEP = Extensions.findExtension(PatchEP.EP_NAME, project, BaseRevisionTextPatchEP.class)-->Line_8 $$ if (baseRevisionTextPatchEP != null) [ FD ]
Line_6 $$ if (inner != null) -->Line_7 $$ final BaseRevisionTextPatchEP baseRevisionTextPatchEP = Extensions.findExtension(PatchEP.EP_NAME, project, BaseRevisionTextPatchEP.class)[ CD ]
Line_4 $$ if (!map.isEmpty()) -->Line_5 $$ final Map<String, CharSequence> inner = map.get(relativeFilePath)[ CD ]
Line_7 $$ final BaseRevisionTextPatchEP baseRevisionTextPatchEP = Extensions.findExtension(PatchEP.EP_NAME, project, BaseRevisionTextPatchEP.class)-->Line_9 $$ return inner.get(baseRevisionTextPatchEP.getName())[ FD ]
Line_2 $$ public CharSequence getBaseRevision(final Project project, final String relativeFilePath) -->Line_13 $$ return null[ CD ]
Line_4 $$ if (!map.isEmpty()) -->Line_6 $$ if (inner != null) [ CD ]
Line_3 $$ final Map<String, Map<String, CharSequence>> map = myAdditionalInfoParser.getResultMap()-->Line_4 $$ if (!map.isEmpty()) [ FD ]
Line_3 $$ final Map<String, Map<String, CharSequence>> map = myAdditionalInfoParser.getResultMap()-->Line_5 $$ final Map<String, CharSequence> inner = map.get(relativeFilePath)[ FD ]
Line_2 $$ public CharSequence getBaseRevision(final Project project, final String relativeFilePath) -->Line_5 $$ final Map<String, CharSequence> inner = map.get(relativeFilePath)[ FD ]
Line_8 $$ if (baseRevisionTextPatchEP != null) -->Line_9 $$ return inner.get(baseRevisionTextPatchEP.getName())[ CD ]
Line_2 $$ public CharSequence getBaseRevision(final Project project, final String relativeFilePath) -->Line_7 $$ final BaseRevisionTextPatchEP baseRevisionTextPatchEP = Extensions.findExtension(PatchEP.EP_NAME, project, BaseRevisionTextPatchEP.class)[ FD ]
Line_5 $$ final Map<String, CharSequence> inner = map.get(relativeFilePath)-->Line_6 $$ if (inner != null) [ FD ]
Line_2 $$ public CharSequence getBaseRevision(final Project project, final String relativeFilePath) -->Line_3 $$ final Map<String, Map<String, CharSequence>> map = myAdditionalInfoParser.getResultMap()[ CD ]
Line_2 $$ public CharSequence getBaseRevision(final Project project, final String relativeFilePath) -->Line_4 $$ if (!map.isEmpty()) [ CD ]
Line_5 $$ final Map<String, CharSequence> inner = map.get(relativeFilePath)-->Line_9 $$ return inner.get(baseRevisionTextPatchEP.getName())[ FD ]
Line_6 $$ if (inner != null) -->Line_8 $$ if (baseRevisionTextPatchEP != null) [ CD ]
