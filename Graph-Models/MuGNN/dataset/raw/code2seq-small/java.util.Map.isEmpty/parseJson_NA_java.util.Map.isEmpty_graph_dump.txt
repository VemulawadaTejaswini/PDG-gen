Line_2 $$ public static Map<ColumnIdentifier, Term> parseJson(String jsonString, Collection<ColumnDefinition> expectedReceivers) -->Line_8 $$ Map<ColumnIdentifier, Term> columnMap = new HashMap(expectedReceivers.size())[ FD ]
Line_11 $$ if (parsedJsonObject == null) -->Line_12 $$ columnMap.put(spec.name, null)[ CD ]
Line_8 $$ Map<ColumnIdentifier, Term> columnMap = new HashMap(expectedReceivers.size())-->Line_15 $$ columnMap.put(spec.name, spec.type.fromJSONObject(parsedJsonObject))[ FD ]
Line_10 $$ Object parsedJsonObject = valueMap.remove(spec.name.toString())-->Line_11 $$ if (parsedJsonObject == null) [ FD ]
Line_4 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_21 $$ if (!valueMap.isEmpty()) [ FD ]
Line_2 $$ public static Map<ColumnIdentifier, Term> parseJson(String jsonString, Collection<ColumnDefinition> expectedReceivers) -->Line_26 $$ throw new InvalidRequestException(String.format("Could not decode JSON string as a map: %s. (String was: %s)", exc.toString(), jsonString))[ FD ]
Line_4 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_10 $$ Object parsedJsonObject = valueMap.remove(spec.name.toString())[ FD ]
Line_4 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_22 $$ throw new InvalidRequestException(String.format("JSON values map contains unrecognized column: %s", valueMap.keySet().iterator().next()))[ FD ]
Line_4 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_7 $$ handleCaseSensitivity(valueMap)[ FD ]
Line_4 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_5 $$ if (valueMap == null)[ FD ]
Line_8 $$ Map<ColumnIdentifier, Term> columnMap = new HashMap(expectedReceivers.size())-->Line_12 $$ columnMap.put(spec.name, null)[ FD ]
Line_10 $$ Object parsedJsonObject = valueMap.remove(spec.name.toString())-->Line_15 $$ columnMap.put(spec.name, spec.type.fromJSONObject(parsedJsonObject))[ FD ]
Line_2 $$ public static Map<ColumnIdentifier, Term> parseJson(String jsonString, Collection<ColumnDefinition> expectedReceivers) -->Line_4 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)[ FD ]
