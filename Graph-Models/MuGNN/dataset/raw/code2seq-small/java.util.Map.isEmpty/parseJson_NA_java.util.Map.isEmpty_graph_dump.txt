Line_7 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_10 $$ handleCaseSensitivity(valueMap)[ FD ]
Line_11 $$ Map<ColumnIdentifier, Term> columnMap = new HashMap(expectedReceivers.size())-->Line_15 $$ columnMap.put(spec.name, null)[ FD ]
Line_7 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_24 $$ if (!valueMap.isEmpty()) [ FD ]
Line_13 $$ Object parsedJsonObject = valueMap.remove(spec.name.toString())-->Line_18 $$ columnMap.put(spec.name, spec.type.fromJSONObject(parsedJsonObject))[ FD ]
Line_7 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_13 $$ Object parsedJsonObject = valueMap.remove(spec.name.toString())[ FD ]
Line_14 $$ if (parsedJsonObject == null) -->Line_15 $$ columnMap.put(spec.name, null)[ CD ]
Line_7 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_25 $$ throw new InvalidRequestException(String.format("JSON values map contains unrecognized column: %s", valueMap.keySet().iterator().next()))[ FD ]
Line_13 $$ Object parsedJsonObject = valueMap.remove(spec.name.toString())-->Line_14 $$ if (parsedJsonObject == null) [ FD ]
Line_11 $$ Map<ColumnIdentifier, Term> columnMap = new HashMap(expectedReceivers.size())-->Line_18 $$ columnMap.put(spec.name, spec.type.fromJSONObject(parsedJsonObject))[ FD ]
Line_7 $$ Map<String, Object> valueMap = JSON_OBJECT_MAPPER.readValue(jsonString, Map.class)-->Line_8 $$ if (valueMap == null)[ FD ]
