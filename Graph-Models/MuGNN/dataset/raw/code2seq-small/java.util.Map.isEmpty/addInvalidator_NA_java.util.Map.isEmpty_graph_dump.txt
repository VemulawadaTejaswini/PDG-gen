Line_2 $$ public void addInvalidator(Object owner, Object valueForPFER, long now) -->Line_30 $$ invalidators.put(owner, new Invalidator(owner, now, valueForPFER))[ FD ]
Line_19 $$ long allowedRegistration = now - expirationPeriod-->Line_21 $$ if (it.next().registeredTimestamp < allowedRegistration) [ FD ]
Line_5 $$ if (singleInvalidator == null) -->Line_14 $$ invalidators.put(singleInvalidator.owner, singleInvalidator)[ CD ]
Line_4 $$ if (invalidators == null) -->Line_25 $$ if (invalidators.isEmpty()) [ CD ]
Line_9 $$ if (singleInvalidator.registeredTimestamp + expirationPeriod < now) -->Line_11 $$ put(new PendingPut(owner))[ CD ]
Line_25 $$ if (invalidators.isEmpty()) -->Line_28 $$ valueForPFER = null[ CD ]
Line_5 $$ if (singleInvalidator == null) -->Line_7 $$ put(new PendingPut(owner))[ CD ]
Line_4 $$ if (invalidators == null) -->Line_19 $$ long allowedRegistration = now - expirationPeriod[ CD ]
Line_21 $$ if (it.next().registeredTimestamp < allowedRegistration) -->Line_22 $$ it.remove()[ CD ]
Line_4 $$ if (invalidators == null) -->Line_5 $$ if (singleInvalidator == null) [ CD ]
Line_2 $$ public void addInvalidator(Object owner, Object valueForPFER, long now) -->Line_9 $$ if (singleInvalidator.registeredTimestamp + expirationPeriod < now) [ FD ]
Line_25 $$ if (invalidators.isEmpty()) -->Line_26 $$ put(new PendingPut(owner))[ CD ]
Line_2 $$ public void addInvalidator(Object owner, Object valueForPFER, long now) -->Line_15 $$ invalidators.put(owner, new Invalidator(owner, now, null))[ FD ]
Line_20 $$ for (Iterator<Invalidator> it = invalidators.values().iterator(); it.hasNext(); ) -->Line_22 $$ it.remove()[ FD ]
Line_2 $$ public void addInvalidator(Object owner, Object valueForPFER, long now) -->Line_4 $$ if (invalidators == null) [ CD ]
Line_2 $$ public void addInvalidator(Object owner, Object valueForPFER, long now) -->Line_28 $$ valueForPFER = null[ FD ]
Line_20 $$ for (Iterator<Invalidator> it = invalidators.values().iterator(); it.hasNext(); ) -->Line_21 $$ if (it.next().registeredTimestamp < allowedRegistration) [ CD ]
Line_5 $$ if (singleInvalidator == null) -->Line_15 $$ invalidators.put(owner, new Invalidator(owner, now, null))[ CD ]
Line_4 $$ if (invalidators == null) -->Line_20 $$ for (Iterator<Invalidator> it = invalidators.values().iterator(); it.hasNext(); ) [ CD ]
Line_4 $$ if (invalidators == null) -->Line_30 $$ invalidators.put(owner, new Invalidator(owner, now, valueForPFER))[ CD ]
Line_20 $$ for (Iterator<Invalidator> it = invalidators.values().iterator(); it.hasNext(); ) -->Line_21 $$ if (it.next().registeredTimestamp < allowedRegistration) [ FD ]
Line_5 $$ if (singleInvalidator == null) -->Line_9 $$ if (singleInvalidator.registeredTimestamp + expirationPeriod < now) [ CD ]
