Line_9 $$ String rootPath = request.getRootPath()-->Line_11 $$ for (String subPath : splitPath(rootPath)) [ FD ]
Line_55 $$ if (node.watchRequest != null) -->Line_56 $$ result.add(node.watchRequest)[ CD ]
Line_2 $$ private WatchRequestImpl[] normalizeRootsForRefresh() -->Line_62 $$ return result.toArray(new WatchRequestImpl[result.size()])[ CD ]
Line_11 $$ for (String subPath : splitPath(rootPath)) -->Line_12 $$ TreeNode nextNode = currentNode.nodes.get(subPath)[ FD ]
Line_14 $$ currentNode = nextNode-->Line_23 $$ currentNode = newNode[ FD ]
Line_13 $$ if (nextNode != null) -->Line_15 $$ if (currentNode.watchRequest != null && currentNode.watchRequest.isToWatchRecursively()) [ CD ]
Line_12 $$ TreeNode nextNode = currentNode.nodes.get(subPath)-->Line_13 $$ if (nextNode != null) [ FD ]
Line_7 $$ for (WatchRequestImpl request : myRootsToWatch) -->Line_9 $$ String rootPath = request.getRootPath()[ FD ]
Line_21 $$ TreeNode newNode = new TreeNode()-->Line_23 $$ currentNode = newNode[ FD ]
Line_2 $$ private WatchRequestImpl[] normalizeRootsForRefresh() -->Line_3 $$ final List<WatchRequestImpl> result = new ArrayList<WatchRequestImpl>()[ CD ]
Line_10 $$ TreeNode currentNode = rootNode-->Line_14 $$ currentNode = nextNode[ FD ]
Line_6 $$ TreeNode rootNode = new TreeNode()-->Line_51 $$ visitTree(rootNode, new Consumer<TreeNode>() [ FD ]
Line_3 $$ final List<WatchRequestImpl> result = new ArrayList<WatchRequestImpl>()-->Line_62 $$ return result.toArray(new WatchRequestImpl[result.size()])[ FD ]
Line_7 $$ for (WatchRequestImpl request : myRootsToWatch) -->Line_32 $$ currentNode.watchRequest = request[ FD ]
Line_13 $$ if (nextNode != null) -->Line_23 $$ currentNode = newNode[ CD ]
Line_51 $$ visitTree(rootNode, new Consumer<TreeNode>() -->Line_55 $$ if (node.watchRequest != null) [ CD ]
Line_13 $$ if (nextNode != null) -->Line_14 $$ currentNode = nextNode[ CD ]
Line_12 $$ TreeNode nextNode = currentNode.nodes.get(subPath)-->Line_14 $$ currentNode = nextNode[ FD ]
Line_11 $$ for (String subPath : splitPath(rootPath)) -->Line_22 $$ currentNode.nodes.put(subPath, newNode)[ FD ]
Line_10 $$ TreeNode currentNode = rootNode-->Line_23 $$ currentNode = newNode[ FD ]
Line_13 $$ if (nextNode != null) -->Line_22 $$ currentNode.nodes.put(subPath, newNode)[ CD ]
Line_37 $$ if (currentNode.watchRequest.isToWatchRecursively() && !currentNode.nodes.isEmpty()) -->Line_48 $$ currentNode.nodes.clear()[ CD ]
Line_26 $$ if (currentNode.watchRequest == null) -->Line_27 $$ currentNode.watchRequest = request[ CD ]
Line_13 $$ if (nextNode != null) -->Line_21 $$ TreeNode newNode = new TreeNode()[ CD ]
Line_21 $$ TreeNode newNode = new TreeNode()-->Line_22 $$ currentNode.nodes.put(subPath, newNode)[ FD ]
Line_7 $$ for (WatchRequestImpl request : myRootsToWatch) -->Line_27 $$ currentNode.watchRequest = request[ FD ]
Line_3 $$ final List<WatchRequestImpl> result = new ArrayList<WatchRequestImpl>()-->Line_56 $$ result.add(node.watchRequest)[ FD ]
Line_43 $$ if (node.watchRequest != null) -->Line_44 $$ node.watchRequest.myDominated = true[ CD ]
