Line_7 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_13 $$ options = optionsWithThresholds[ FD ]
Line_7 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_9 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MAX_THRESHOLD.toString(), Integer.toString(maxThreshold))[ FD ]
Line_3 $$ Class<? extends AbstractCompactionStrategy> klass = CFMetaData.createCompactionStrategy(row.getString("compaction_strategy_class"))-->Line_11 $$ Map<String, String> unrecognizedOptions = (Map<String, String>) klass.getMethod("validateOptions", Map.class).invoke(null, optionsWithThresholds)[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_17 $$ return CompactionParams.create(klass, options)[ CD ]
Line_4 $$ Map<String, String> options = fromJsonMap(row.getString("compaction_strategy_options"))-->Line_17 $$ return CompactionParams.create(klass, options)[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_5 $$ int minThreshold = row.getInt("min_compaction_threshold")[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_8 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MIN_THRESHOLD.toString(), Integer.toString(minThreshold))[ CD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_6 $$ int maxThreshold = row.getInt("max_compaction_threshold")[ CD ]
Line_13 $$ options = optionsWithThresholds-->Line_17 $$ return CompactionParams.create(klass, options)[ FD ]
Line_12 $$ if (unrecognizedOptions.isEmpty())-->Line_13 $$ options = optionsWithThresholds[ CD ]
Line_5 $$ int minThreshold = row.getInt("min_compaction_threshold")-->Line_8 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MIN_THRESHOLD.toString(), Integer.toString(minThreshold))[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_6 $$ int maxThreshold = row.getInt("max_compaction_threshold")[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_9 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MAX_THRESHOLD.toString(), Integer.toString(maxThreshold))[ CD ]
Line_6 $$ int maxThreshold = row.getInt("max_compaction_threshold")-->Line_9 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MAX_THRESHOLD.toString(), Integer.toString(maxThreshold))[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_3 $$ Class<? extends AbstractCompactionStrategy> klass = CFMetaData.createCompactionStrategy(row.getString("compaction_strategy_class"))[ FD ]
Line_7 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_11 $$ Map<String, String> unrecognizedOptions = (Map<String, String>) klass.getMethod("validateOptions", Map.class).invoke(null, optionsWithThresholds)[ FD ]
Line_7 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_8 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MIN_THRESHOLD.toString(), Integer.toString(minThreshold))[ FD ]
Line_4 $$ Map<String, String> options = fromJsonMap(row.getString("compaction_strategy_options"))-->Line_13 $$ options = optionsWithThresholds[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_4 $$ Map<String, String> options = fromJsonMap(row.getString("compaction_strategy_options"))[ CD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_7 $$ Map<String, String> optionsWithThresholds = new HashMap(options)[ CD ]
Line_3 $$ Class<? extends AbstractCompactionStrategy> klass = CFMetaData.createCompactionStrategy(row.getString("compaction_strategy_class"))-->Line_17 $$ return CompactionParams.create(klass, options)[ FD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_5 $$ int minThreshold = row.getInt("min_compaction_threshold")[ CD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_3 $$ Class<? extends AbstractCompactionStrategy> klass = CFMetaData.createCompactionStrategy(row.getString("compaction_strategy_class"))[ CD ]
Line_2 $$ private static CompactionParams compactionFromRow(UntypedResultSet.Row row) -->Line_4 $$ Map<String, String> options = fromJsonMap(row.getString("compaction_strategy_options"))[ FD ]
Line_11 $$ Map<String, String> unrecognizedOptions = (Map<String, String>) klass.getMethod("validateOptions", Map.class).invoke(null, optionsWithThresholds)-->Line_12 $$ if (unrecognizedOptions.isEmpty())[ FD ]
