Line_13 $$ int minThreshold = row.getInt("min_compaction_threshold")-->Line_16 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MIN_THRESHOLD.toString(), Integer.toString(minThreshold))[ FD ]
Line_19 $$ Map<String, String> unrecognizedOptions = (Map<String, String>) klass.getMethod("validateOptions", Map.class).invoke(null, optionsWithThresholds)-->Line_20 $$ if (unrecognizedOptions.isEmpty())[ FD ]
Line_14 $$ int maxThreshold = row.getInt("max_compaction_threshold")-->Line_17 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MAX_THRESHOLD.toString(), Integer.toString(maxThreshold))[ FD ]
Line_15 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_21 $$ options = optionsWithThresholds[ FD ]
Line_11 $$ Class<? extends AbstractCompactionStrategy> klass = CFMetaData.createCompactionStrategy(row.getString("compaction_strategy_class"))-->Line_19 $$ Map<String, String> unrecognizedOptions = (Map<String, String>) klass.getMethod("validateOptions", Map.class).invoke(null, optionsWithThresholds)[ FD ]
Line_21 $$ options = optionsWithThresholds-->Line_25 $$ return CompactionParams.create(klass, options)[ FD ]
Line_12 $$ Map<String, String> options = fromJsonMap(row.getString("compaction_strategy_options"))-->Line_21 $$ options = optionsWithThresholds[ FD ]
Line_15 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_16 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MIN_THRESHOLD.toString(), Integer.toString(minThreshold))[ FD ]
Line_20 $$ if (unrecognizedOptions.isEmpty())-->Line_21 $$ options = optionsWithThresholds[ CD ]
Line_15 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_19 $$ Map<String, String> unrecognizedOptions = (Map<String, String>) klass.getMethod("validateOptions", Map.class).invoke(null, optionsWithThresholds)[ FD ]
Line_11 $$ Class<? extends AbstractCompactionStrategy> klass = CFMetaData.createCompactionStrategy(row.getString("compaction_strategy_class"))-->Line_25 $$ return CompactionParams.create(klass, options)[ FD ]
Line_12 $$ Map<String, String> options = fromJsonMap(row.getString("compaction_strategy_options"))-->Line_25 $$ return CompactionParams.create(klass, options)[ FD ]
Line_15 $$ Map<String, String> optionsWithThresholds = new HashMap(options)-->Line_17 $$ optionsWithThresholds.putIfAbsent(CompactionParams.Option.MAX_THRESHOLD.toString(), Integer.toString(maxThreshold))[ FD ]
