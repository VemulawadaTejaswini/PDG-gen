Line_8 $$ list = (List<Object>) command-->Line_12 $$ list.add(command)[ FD ]
Line_11 $$ list = new ArrayList(1)-->Line_12 $$ list.add(command)[ FD ]
Line_23 $$ Iterator<Map.Entry<String, Map<String, Object>>> iterator = entrySet.iterator()-->Line_24 $$ Map.Entry<String, Map<String, Object>> entry = iterator.next()[ FD ]
Line_8 $$ list = (List<Object>) command-->Line_27 $$ list.set(i, result)[ FD ]
Line_8 $$ list = (List<Object>) command-->Line_31 $$ result = list.get(0)[ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_25 $$ Statement statement = _parseStatement(null, entry.getKey(), entry.getValue())[ CD ]
Line_30 $$ if (batchMode == false) -->Line_31 $$ result = list.get(0)[ CD ]
Line_8 $$ list = (List<Object>) command-->Line_33 $$ result = list[ FD ]
Line_8 $$ list = (List<Object>) command-->Line_11 $$ list = new ArrayList(1)[ FD ]
Line_11 $$ list = new ArrayList(1)-->Line_33 $$ result = list[ FD ]
Line_4 $$ Object command = JSONFactoryUtil.looseDeserialize(_command)-->Line_12 $$ list.add(command)[ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_19 $$ if (map.isEmpty()) [ CD ]
Line_24 $$ Map.Entry<String, Map<String, Object>> entry = iterator.next()-->Line_25 $$ Statement statement = _parseStatement(null, entry.getKey(), entry.getValue())[ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_27 $$ list.set(i, result)[ FD ]
Line_26 $$ Object result = _executeStatement(statement)-->Line_31 $$ result = list.get(0)[ FD ]
Line_5 $$ List<Object> list = null-->Line_8 $$ list = (List<Object>) command[ FD ]
Line_4 $$ Object command = JSONFactoryUtil.looseDeserialize(_command)-->Line_10 $$ if (command instanceof Map) [ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_27 $$ list.set(i, result)[ CD ]
Line_13 $$ batchMode = false-->Line_30 $$ if (batchMode == false) [ FD ]
Line_26 $$ Object result = _executeStatement(statement)-->Line_33 $$ result = list[ FD ]
Line_5 $$ List<Object> list = null-->Line_12 $$ list.add(command)[ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_23 $$ Iterator<Map.Entry<String, Map<String, Object>>> iterator = entrySet.iterator()[ CD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_24 $$ Map.Entry<String, Map<String, Object>> entry = iterator.next()[ CD ]
Line_5 $$ List<Object> list = null-->Line_31 $$ result = list.get(0)[ FD ]
Line_10 $$ if (command instanceof Map) -->Line_11 $$ list = new ArrayList(1)[ CD ]
Line_29 $$ Object result = null-->Line_31 $$ result = list.get(0)[ FD ]
Line_9 $$ batchMode = true-->Line_13 $$ batchMode = false[ FD ]
Line_10 $$ if (command instanceof Map) -->Line_12 $$ list.add(command)[ CD ]
Line_9 $$ batchMode = true-->Line_30 $$ if (batchMode == false) [ FD ]
Line_25 $$ Statement statement = _parseStatement(null, entry.getKey(), entry.getValue())-->Line_26 $$ Object result = _executeStatement(statement)[ FD ]
Line_8 $$ list = (List<Object>) command-->Line_17 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_18 $$ Map<String, Map<String, Object>> map = (Map<String, Map<String, Object>>) list.get(i)-->Line_19 $$ if (map.isEmpty()) [ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_26 $$ Object result = _executeStatement(statement)[ CD ]
Line_11 $$ list = new ArrayList(1)-->Line_31 $$ result = list.get(0)[ FD ]
Line_22 $$ Set<Map.Entry<String, Map<String, Object>>> entrySet = map.entrySet()-->Line_23 $$ Iterator<Map.Entry<String, Map<String, Object>>> iterator = entrySet.iterator()[ FD ]
Line_5 $$ List<Object> list = null-->Line_11 $$ list = new ArrayList(1)[ FD ]
Line_6 $$ boolean batchMode = false-->Line_9 $$ batchMode = true[ FD ]
Line_11 $$ list = new ArrayList(1)-->Line_17 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_5 $$ List<Object> list = null-->Line_27 $$ list.set(i, result)[ FD ]
Line_26 $$ Object result = _executeStatement(statement)-->Line_27 $$ list.set(i, result)[ FD ]
Line_10 $$ if (command instanceof Map) -->Line_13 $$ batchMode = false[ CD ]
Line_5 $$ List<Object> list = null-->Line_17 $$ for (int i = 0; i < list.size(); i++) [ FD ]
Line_18 $$ Map<String, Map<String, Object>> map = (Map<String, Map<String, Object>>) list.get(i)-->Line_22 $$ Set<Map.Entry<String, Map<String, Object>>> entrySet = map.entrySet()[ FD ]
Line_30 $$ if (batchMode == false) -->Line_33 $$ result = list[ CD ]
Line_29 $$ Object result = null-->Line_33 $$ result = list[ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_18 $$ Map<String, Map<String, Object>> map = (Map<String, Map<String, Object>>) list.get(i)[ FD ]
Line_11 $$ list = new ArrayList(1)-->Line_18 $$ Map<String, Map<String, Object>> map = (Map<String, Map<String, Object>>) list.get(i)[ FD ]
Line_5 $$ List<Object> list = null-->Line_18 $$ Map<String, Map<String, Object>> map = (Map<String, Map<String, Object>>) list.get(i)[ FD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_22 $$ Set<Map.Entry<String, Map<String, Object>>> entrySet = map.entrySet()[ CD ]
Line_7 $$ if (command instanceof List) -->Line_9 $$ batchMode = true[ CD ]
Line_6 $$ boolean batchMode = false-->Line_13 $$ batchMode = false[ FD ]
Line_8 $$ list = (List<Object>) command-->Line_18 $$ Map<String, Map<String, Object>> map = (Map<String, Map<String, Object>>) list.get(i)[ FD ]
Line_31 $$ result = list.get(0)-->Line_33 $$ result = list[ FD ]
Line_7 $$ if (command instanceof List) -->Line_10 $$ if (command instanceof Map) [ CD ]
Line_7 $$ if (command instanceof List) -->Line_8 $$ list = (List<Object>) command[ CD ]
Line_17 $$ for (int i = 0; i < list.size(); i++) -->Line_18 $$ Map<String, Map<String, Object>> map = (Map<String, Map<String, Object>>) list.get(i)[ CD ]
Line_4 $$ Object command = JSONFactoryUtil.looseDeserialize(_command)-->Line_7 $$ if (command instanceof List) [ FD ]
Line_6 $$ boolean batchMode = false-->Line_30 $$ if (batchMode == false) [ FD ]
Line_5 $$ List<Object> list = null-->Line_33 $$ result = list[ FD ]
Line_11 $$ list = new ArrayList(1)-->Line_27 $$ list.set(i, result)[ FD ]
