Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_16 $$ namedStrategyImplementorByStrategyMap.remove(strategy)[ FD ]
Line_9 $$ while (itr.hasNext()) -->Line_10 $$ final Class registered = (Class) itr.next()[ CD ]
Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_3 $$ final Map<String, Class> namedStrategyImplementorMap = namedStrategyImplementorByStrategyMap.get(strategy)[ FD ]
Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_9 $$ while (itr.hasNext()) [ CD ]
Line_10 $$ final Class registered = (Class) itr.next()-->Line_11 $$ if (registered.equals(implementation)) [ FD ]
Line_9 $$ while (itr.hasNext()) -->Line_11 $$ if (registered.equals(implementation)) [ CD ]
Line_8 $$ final Iterator itr = namedStrategyImplementorMap.values().iterator()-->Line_10 $$ final Class registered = (Class) itr.next()[ FD ]
Line_11 $$ if (registered.equals(implementation)) -->Line_12 $$ itr.remove()[ CD ]
Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_4 $$ if (namedStrategyImplementorMap == null) [ CD ]
Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_8 $$ final Iterator itr = namedStrategyImplementorMap.values().iterator()[ CD ]
Line_3 $$ final Map<String, Class> namedStrategyImplementorMap = namedStrategyImplementorByStrategyMap.get(strategy)-->Line_4 $$ if (namedStrategyImplementorMap == null) [ FD ]
Line_8 $$ final Iterator itr = namedStrategyImplementorMap.values().iterator()-->Line_12 $$ itr.remove()[ FD ]
Line_15 $$ if (namedStrategyImplementorMap.isEmpty()) -->Line_16 $$ namedStrategyImplementorByStrategyMap.remove(strategy)[ CD ]
Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_11 $$ if (registered.equals(implementation)) [ FD ]
Line_4 $$ if (namedStrategyImplementorMap == null) -->Line_5 $$ log.debug("Named strategy map did not exist on call to un-register")[ CD ]
Line_8 $$ final Iterator itr = namedStrategyImplementorMap.values().iterator()-->Line_9 $$ while (itr.hasNext()) [ FD ]
Line_3 $$ final Map<String, Class> namedStrategyImplementorMap = namedStrategyImplementorByStrategyMap.get(strategy)-->Line_15 $$ if (namedStrategyImplementorMap.isEmpty()) [ FD ]
Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_15 $$ if (namedStrategyImplementorMap.isEmpty()) [ CD ]
Line_4 $$ if (namedStrategyImplementorMap == null) -->Line_6 $$ return[ CD ]
Line_3 $$ final Map<String, Class> namedStrategyImplementorMap = namedStrategyImplementorByStrategyMap.get(strategy)-->Line_8 $$ final Iterator itr = namedStrategyImplementorMap.values().iterator()[ FD ]
Line_2 $$ public <T> void unRegisterStrategyImplementor(Class<T> strategy, Class<? extends T> implementation) -->Line_3 $$ final Map<String, Class> namedStrategyImplementorMap = namedStrategyImplementorByStrategyMap.get(strategy)[ CD ]
