Line_7 $$ if (accepts != ThreeState.UNSURE) -->Line_8 $$ return accepts.toBoolean()[ CD ]
Line_6 $$ ThreeState accepts = accepts(accessor.getName(), beanValue)-->Line_7 $$ if (accepts != ThreeState.UNSURE) [ FD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_7 $$ if (accepts != ThreeState.UNSURE) [ CD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_3 $$ if (beanValue == null) [ CD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_6 $$ ThreeState accepts = accepts(accessor.getName(), beanValue)[ CD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_13 $$ return true[ CD ]
Line_3 $$ if (beanValue == null) -->Line_4 $$ return false[ CD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_3 $$ if (beanValue == null) [ FD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_10 $$ if (Boolean.FALSE.equals(beanValue) || beanValue instanceof String && ((String) beanValue).isEmpty() || beanValue instanceof Collection && ((Collection) beanValue).isEmpty() || beanValue instanceof Map && ((Map) beanValue).isEmpty()) [ CD ]
Line_6 $$ ThreeState accepts = accepts(accessor.getName(), beanValue)-->Line_8 $$ return accepts.toBoolean()[ FD ]
Line_10 $$ if (Boolean.FALSE.equals(beanValue) || beanValue instanceof String && ((String) beanValue).isEmpty() || beanValue instanceof Collection && ((Collection) beanValue).isEmpty() || beanValue instanceof Map && ((Map) beanValue).isEmpty()) -->Line_11 $$ return false[ CD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_10 $$ if (Boolean.FALSE.equals(beanValue) || beanValue instanceof String && ((String) beanValue).isEmpty() || beanValue instanceof Collection && ((Collection) beanValue).isEmpty() || beanValue instanceof Map && ((Map) beanValue).isEmpty()) [ FD ]
Line_2 $$ protected boolean accepts(@NotNull Accessor accessor, @NotNull Object bean, @Nullable Object beanValue) -->Line_6 $$ ThreeState accepts = accepts(accessor.getName(), beanValue)[ FD ]
