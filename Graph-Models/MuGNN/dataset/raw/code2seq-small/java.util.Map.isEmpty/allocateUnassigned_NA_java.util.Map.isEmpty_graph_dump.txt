Line_56 $$ ShardRouting shard = primary[i]-->Line_60 $$ unassigned.ignoreShard(shard)[ FD ]
Line_140 $$ if (minNode != null) -->Line_159 $$ if (logger.isTraceEnabled()) [ CD ]
Line_152 $$ if (deciders.canAllocate(node, allocation).type() != Type.YES) -->Line_156 $$ throttledNodes.add(minNode)[ CD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_166 $$ if (!shard.primary()) [ FD ]
Line_142 $$ if (decision.type() == Type.YES) -->Line_146 $$ routingNodes.initialize(shard, routingNodes.node(minNode.getNodeId()).nodeId(), allocation.clusterInfo().getShardSize(shard, ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE))[ CD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_144 $$ logger.trace("Assigned shard [[ FD ]
Line_66 $$ while (i < primaryLength - 1 && comparator.compare(primary[i], primary[i + 1]) == 0) -->Line_67 $$ secondary[secondaryLength++] = primary[++i][ CD ]
Line_57 $$ if (!shard.primary()) -->Line_58 $$ boolean drop = deciders.canAllocate(shard, allocation).type() == Type.NO[ CD ]
Line_159 $$ if (logger.isTraceEnabled()) -->Line_160 $$ logger.trace("No eligable node found to assign shard [[ CD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_165 $$ unassigned.ignoreShard(shard)[ CD ]
Line_59 $$ if (drop) -->Line_61 $$ while (i < primaryLength - 1 && comparator.compare(primary[i], primary[i + 1]) == 0) [ CD ]
Line_140 $$ if (minNode != null) -->Line_141 $$ minNode.addShard(shard, decision)[ CD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_25 $$ if (o1.primary() ^ o2.primary()) [ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_57 $$ if (!shard.primary()) [ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_119 $$ final int minNodeHigh = minNode.highestPrimary(shard.index())[ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_89 $$ node.addShard(shard, Decision.ALWAYS)[ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_118 $$ final int nodeHigh = node.highestPrimary(shard.index())[ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_141 $$ minNode.addShard(shard, decision)[ FD ]
Line_140 $$ if (minNode != null) -->Line_162 $$ if (logger.isTraceEnabled()) [ CD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_165 $$ unassigned.ignoreShard(shard)[ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_58 $$ boolean drop = deciders.canAllocate(shard, allocation).type() == Type.NO[ FD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_66 $$ while (i < primaryLength - 1 && comparator.compare(primary[i], primary[i + 1]) == 0) [ FD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_76 $$ if (throttledNodes.size() < nodes.size()) [ CD ]
Line_25 $$ if (o1.primary() ^ o2.primary()) -->Line_26 $$ return o1.primary() ? -1 : o2.primary() ? 1 : 0[ CD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_29 $$ if ((indexCmp = o1.index().compareTo(o2.index())) == 0) [ CD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_56 $$ ShardRouting shard = primary[i][ CD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_117 $$ final int repId = shard.id()[ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_163 $$ logger.trace("No Node found to assign shard [[ FD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_25 $$ if (o1.primary() ^ o2.primary()) [ CD ]
Line_54 $$ do -->Line_55 $$ for (int i = 0; i < primaryLength; i++) [ CD ]
Line_59 $$ if (drop) -->Line_60 $$ unassigned.ignoreShard(shard)[ CD ]
Line_54 $$ do -->Line_176 $$ secondary = tmp[ CD ]
Line_28 $$ final int indexCmp-->Line_29 $$ if ((indexCmp = o1.index().compareTo(o2.index())) == 0) [ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_102 $$ Decision currentDecision = deciders.canAllocate(shard, routingNodes.node(node.getNodeId()), allocation)[ FD ]
Line_8 $$ if (logger.isTraceEnabled()) -->Line_9 $$ logger.trace("Start allocating unassigned shards")[ CD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_166 $$ if (!shard.primary()) [ CD ]
Line_11 $$ if (unassigned.isEmpty()) -->Line_12 $$ return false[ CD ]
Line_29 $$ if ((indexCmp = o1.index().compareTo(o2.index())) == 0) -->Line_30 $$ return o1.getId() - o2.getId()[ CD ]
Line_153 $$ if (logger.isTraceEnabled()) -->Line_154 $$ logger.trace("Can not allocate on node [[ CD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_26 $$ return o1.primary() ? -1 : o2.primary() ? 1 : 0[ FD ]
Line_143 $$ if (logger.isTraceEnabled()) -->Line_144 $$ logger.trace("Assigned shard [[ CD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_57 $$ if (!shard.primary()) [ CD ]
Line_61 $$ while (i < primaryLength - 1 && comparator.compare(primary[i], primary[i + 1]) == 0) -->Line_62 $$ unassigned.ignoreShard(primary[++i])[ CD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_52 $$ ArrayUtil.timSort(primary, comparator)[ FD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_28 $$ final int indexCmp[ CD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_67 $$ secondary[secondaryLength++] = primary[++i][ FD ]
Line_57 $$ if (!shard.primary()) -->Line_59 $$ if (drop) [ CD ]
Line_142 $$ if (decision.type() == Type.YES) -->Line_151 $$ final RoutingNode node = routingNodes.node(minNode.getNodeId())[ CD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_90 $$ float currentWeight = weight.weight(Operation.ALLOCATE, this, node, shard.index())[ FD ]
Line_162 $$ if (logger.isTraceEnabled()) -->Line_163 $$ logger.trace("No Node found to assign shard [[ CD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_29 $$ if ((indexCmp = o1.index().compareTo(o2.index())) == 0) [ FD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_146 $$ routingNodes.initialize(shard, routingNodes.node(minNode.getNodeId()).nodeId(), allocation.clusterInfo().getShardSize(shard, ShardRouting.UNAVAILABLE_EXPECTED_SHARD_SIZE))[ FD ]
Line_142 $$ if (decision.type() == Type.YES) -->Line_152 $$ if (deciders.canAllocate(node, allocation).type() != Type.YES) [ CD ]
Line_140 $$ if (minNode != null) -->Line_142 $$ if (decision.type() == Type.YES) [ CD ]
Line_103 $$ if (currentDecision.type() == Type.YES || currentDecision.type() == Type.THROTTLE) -->Line_104 $$ if (currentWeight == minWeight) [ CD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_160 $$ logger.trace("No eligable node found to assign shard [[ FD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_30 $$ return o1.getId() - o2.getId()[ FD ]
Line_152 $$ if (deciders.canAllocate(node, allocation).type() != Type.YES) -->Line_153 $$ if (logger.isTraceEnabled()) [ CD ]
Line_142 $$ if (decision.type() == Type.YES) -->Line_143 $$ if (logger.isTraceEnabled()) [ CD ]
Line_56 $$ ShardRouting shard = primary[i]-->Line_71 $$ assert !shard.assignedToNode() : shard[ FD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_140 $$ if (minNode != null) [ CD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_37 $$ return secondary == 0 ? indexCmp : secondary[ CD ]
Line_59 $$ if (drop) -->Line_66 $$ while (i < primaryLength - 1 && comparator.compare(primary[i], primary[i + 1]) == 0) [ CD ]
Line_55 $$ for (int i = 0; i < primaryLength; i++) -->Line_62 $$ unassigned.ignoreShard(primary[++i])[ FD ]
Line_21 $$ final Comparator<ShardRouting> comparator = new Comparator<ShardRouting>() -->Line_61 $$ while (i < primaryLength - 1 && comparator.compare(primary[i], primary[i + 1]) == 0) [ FD ]
