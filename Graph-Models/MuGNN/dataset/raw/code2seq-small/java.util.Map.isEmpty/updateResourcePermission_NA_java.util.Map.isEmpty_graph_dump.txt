Line_33 $$ if (roleIdsToActionIds.isEmpty()) -->Line_34 $$ return[ CD ]
Line_26 $$ long[] roleIds = ArrayUtil.toLongArray(roleIdsToActionIds.keySet())-->Line_27 $$ List<ResourcePermission> resourcePermissions = resourcePermissionPersistence.findByC_N_S_P_R(companyId, name, scope, primKey, roleIds)[ FD ]
Line_28 $$ for (ResourcePermission resourcePermission : resourcePermissions) -->Line_29 $$ long roleId = resourcePermission.getRoleId()[ FD ]
Line_29 $$ long roleId = resourcePermission.getRoleId()-->Line_31 $$ doUpdateResourcePermission(companyId, name, scope, primKey, ownerId, roleId, actionIds, ResourcePermissionConstants.OPERATOR_SET, true)[ FD ]
Line_30 $$ String[] actionIds = roleIdsToActionIds.remove(roleId)-->Line_39 $$ doUpdateResourcePermission(companyId, name, scope, primKey, ownerId, roleId, actionIds, ResourcePermissionConstants.OPERATOR_SET, false)[ FD ]
Line_36 $$ for (Map.Entry<Long, String[]> entry : roleIdsToActionIds.entrySet()) -->Line_38 $$ String[] actionIds = entry.getValue()[ FD ]
Line_23 $$ boolean flushResourcePermissionEnabled = PermissionThreadLocal.isFlushResourcePermissionEnabled(name, primKey)-->Line_43 $$ PermissionThreadLocal.setFlushResourcePermissionEnabled(name, primKey, flushResourcePermissionEnabled)[ FD ]
Line_30 $$ String[] actionIds = roleIdsToActionIds.remove(roleId)-->Line_31 $$ doUpdateResourcePermission(companyId, name, scope, primKey, ownerId, roleId, actionIds, ResourcePermissionConstants.OPERATOR_SET, true)[ FD ]
Line_36 $$ for (Map.Entry<Long, String[]> entry : roleIdsToActionIds.entrySet()) -->Line_37 $$ long roleId = entry.getKey()[ FD ]
Line_29 $$ long roleId = resourcePermission.getRoleId()-->Line_39 $$ doUpdateResourcePermission(companyId, name, scope, primKey, ownerId, roleId, actionIds, ResourcePermissionConstants.OPERATOR_SET, false)[ FD ]
Line_29 $$ long roleId = resourcePermission.getRoleId()-->Line_30 $$ String[] actionIds = roleIdsToActionIds.remove(roleId)[ FD ]
