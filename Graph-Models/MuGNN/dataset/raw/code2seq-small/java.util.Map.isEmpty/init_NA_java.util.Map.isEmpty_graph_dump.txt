Line_46 $$ GeneratorConfig config = new GeneratorConfig(seedStr + name, clustering, size, population)-->Line_47 $$ columnConfigs.put(name, config)[ FD ]
Line_2 $$ private void init(StressYaml yaml) throws RequestValidationException -->Line_24 $$ if (tableCql != null && tableCql.length() > 0) [ CD ]
Line_36 $$ for (Map<String, Object> spec : yaml.columnspec) -->Line_38 $$ String name = (String) spec.remove("name")[ FD ]
Line_36 $$ for (Map<String, Object> spec : yaml.columnspec) -->Line_37 $$ lowerCase(spec)[ FD ]
Line_2 $$ private void init(StressYaml yaml) throws RequestValidationException -->Line_14 $$ if (keyspaceCql != null && keyspaceCql.length() > 0) [ CD ]
Line_36 $$ for (Map<String, Object> spec : yaml.columnspec) -->Line_42 $$ if (!spec.isEmpty())[ FD ]
Line_36 $$ for (Map<String, Object> spec : yaml.columnspec) -->Line_39 $$ DistributionFactory population = !spec.containsKey("population") ? null : OptionDistribution.get((String) spec.remove("population"))[ FD ]
Line_16 $$ String name = ((CreateKeyspaceStatement) QueryProcessor.parseStatement(keyspaceCql)).keyspace()-->Line_17 $$ assert name.equalsIgnoreCase(keyspaceName) : "Name in keyspace_definition doesn't match keyspace property: '" + name + "' != '" + keyspaceName + "'"[ FD ]
Line_16 $$ String name = ((CreateKeyspaceStatement) QueryProcessor.parseStatement(keyspaceCql)).keyspace()-->Line_27 $$ assert name.equalsIgnoreCase(tableName) : "Name in table_definition doesn't match table property: '" + name + "' != '" + tableName + "'"[ FD ]
Line_2 $$ private void init(StressYaml yaml) throws RequestValidationException -->Line_35 $$ if (yaml.columnspec != null) [ CD ]
Line_36 $$ for (Map<String, Object> spec : yaml.columnspec) -->Line_41 $$ DistributionFactory clustering = !spec.containsKey("cluster") ? null : OptionDistribution.get((String) spec.remove("cluster"))[ FD ]
Line_16 $$ String name = ((CreateKeyspaceStatement) QueryProcessor.parseStatement(keyspaceCql)).keyspace()-->Line_47 $$ columnConfigs.put(name, config)[ FD ]
Line_36 $$ for (Map<String, Object> spec : yaml.columnspec) -->Line_40 $$ DistributionFactory size = !spec.containsKey("size") ? null : OptionDistribution.get((String) spec.remove("size"))[ FD ]
Line_16 $$ String name = ((CreateKeyspaceStatement) QueryProcessor.parseStatement(keyspaceCql)).keyspace()-->Line_44 $$ if (name == null)[ FD ]
