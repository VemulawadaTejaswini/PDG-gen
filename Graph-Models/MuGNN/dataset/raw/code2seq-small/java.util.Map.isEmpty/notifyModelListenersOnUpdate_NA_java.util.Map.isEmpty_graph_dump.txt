Line_11 $$ DataPersister dataPersister = fieldType.getDataPersister()-->Line_12 $$ if (!dataPersister.dataIsEqual(sourceFieldValue, targetFieldValue)) [ FD ]
Line_2 $$ protected void notifyModelListenersOnUpdate(TT sourceModel, TT targetModel) throws SQLException -->Line_20 $$ modelListener.onUpdate(targetModel, originalValues)[ FD ]
Line_3 $$ Map<String, Object> originalValues = new HashMap()-->Line_20 $$ modelListener.onUpdate(targetModel, originalValues)[ FD ]
Line_9 $$ Object sourceFieldValue = fieldType.extractJavaFieldValue(sourceModel)-->Line_13 $$ originalValues.put(fieldType.getColumnName(), sourceFieldValue)[ FD ]
Line_8 $$ FieldType fieldType = tableInfo.getFieldTypeByColumnName(syncNotificationFieldName)-->Line_11 $$ DataPersister dataPersister = fieldType.getDataPersister()[ FD ]
Line_3 $$ Map<String, Object> originalValues = new HashMap()-->Line_16 $$ if (originalValues.isEmpty()) [ FD ]
Line_4 $$ for (String syncNotificationFieldName : getSyncNotificationFieldNames(dataClass.getSimpleName())) -->Line_5 $$ if (syncNotificationFieldName.isEmpty()) [ FD ]
Line_10 $$ Object targetFieldValue = fieldType.extractJavaFieldValue(targetModel)-->Line_12 $$ if (!dataPersister.dataIsEqual(sourceFieldValue, targetFieldValue)) [ FD ]
Line_4 $$ for (String syncNotificationFieldName : getSyncNotificationFieldNames(dataClass.getSimpleName())) -->Line_8 $$ FieldType fieldType = tableInfo.getFieldTypeByColumnName(syncNotificationFieldName)[ FD ]
Line_2 $$ protected void notifyModelListenersOnUpdate(TT sourceModel, TT targetModel) throws SQLException -->Line_3 $$ Map<String, Object> originalValues = new HashMap()[ CD ]
Line_2 $$ protected void notifyModelListenersOnUpdate(TT sourceModel, TT targetModel) throws SQLException -->Line_9 $$ Object sourceFieldValue = fieldType.extractJavaFieldValue(sourceModel)[ FD ]
Line_8 $$ FieldType fieldType = tableInfo.getFieldTypeByColumnName(syncNotificationFieldName)-->Line_10 $$ Object targetFieldValue = fieldType.extractJavaFieldValue(targetModel)[ FD ]
Line_2 $$ protected void notifyModelListenersOnUpdate(TT sourceModel, TT targetModel) throws SQLException -->Line_16 $$ if (originalValues.isEmpty()) [ CD ]
Line_2 $$ protected void notifyModelListenersOnUpdate(TT sourceModel, TT targetModel) throws SQLException -->Line_10 $$ Object targetFieldValue = fieldType.extractJavaFieldValue(targetModel)[ FD ]
Line_9 $$ Object sourceFieldValue = fieldType.extractJavaFieldValue(sourceModel)-->Line_12 $$ if (!dataPersister.dataIsEqual(sourceFieldValue, targetFieldValue)) [ FD ]
Line_19 $$ for (ModelListener<TT> modelListener : _modelListeners) -->Line_20 $$ modelListener.onUpdate(targetModel, originalValues)[ FD ]
Line_12 $$ if (!dataPersister.dataIsEqual(sourceFieldValue, targetFieldValue)) -->Line_13 $$ originalValues.put(fieldType.getColumnName(), sourceFieldValue)[ CD ]
Line_3 $$ Map<String, Object> originalValues = new HashMap()-->Line_13 $$ originalValues.put(fieldType.getColumnName(), sourceFieldValue)[ FD ]
Line_16 $$ if (originalValues.isEmpty()) -->Line_17 $$ return[ CD ]
Line_8 $$ FieldType fieldType = tableInfo.getFieldTypeByColumnName(syncNotificationFieldName)-->Line_13 $$ originalValues.put(fieldType.getColumnName(), sourceFieldValue)[ FD ]
Line_8 $$ FieldType fieldType = tableInfo.getFieldTypeByColumnName(syncNotificationFieldName)-->Line_9 $$ Object sourceFieldValue = fieldType.extractJavaFieldValue(sourceModel)[ FD ]
