Line_6 $$ list = document.getUserData(ACTION_AFTER_COMMIT)-->Line_7 $$ if (list != null) [ FD ]
Line_2 $$ private void runAfterCommitActions(@NotNull Document document) -->Line_4 $$ List<Runnable> list[ CD ]
Line_4 $$ List<Runnable> list-->Line_12 $$ if (list != null) [ FD ]
Line_20 $$ for (Map.Entry<Object, Runnable> entry : entries) -->Line_21 $$ Runnable action = entry.getValue()[ FD ]
Line_6 $$ list = document.getUserData(ACTION_AFTER_COMMIT)-->Line_12 $$ if (list != null) [ FD ]
Line_17 $$ if (!hasUncommitedDocuments() && !actionsWhenAllDocumentsAreCommitted.isEmpty()) -->Line_30 $$ actionsWhenAllDocumentsAreCommitted.clear()[ CD ]
Line_4 $$ List<Runnable> list-->Line_8 $$ list = new ArrayList<Runnable>(list)[ FD ]
Line_21 $$ Runnable action = entry.getValue()-->Line_24 $$ myDocumentCommitProcessor.log("Running after commit runnable: ", null, false, key, action)[ FD ]
Line_7 $$ if (list != null) -->Line_9 $$ document.putUserData(ACTION_AFTER_COMMIT, null)[ CD ]
Line_17 $$ if (!hasUncommitedDocuments() && !actionsWhenAllDocumentsAreCommitted.isEmpty()) -->Line_19 $$ weAreInsideAfterCommitHandler()[ CD ]
Line_20 $$ for (Map.Entry<Object, Runnable> entry : entries) -->Line_22 $$ Object key = entry.getKey()[ FD ]
Line_7 $$ if (list != null) -->Line_8 $$ list = new ArrayList<Runnable>(list)[ CD ]
Line_6 $$ list = document.getUserData(ACTION_AFTER_COMMIT)-->Line_8 $$ list = new ArrayList<Runnable>(list)[ FD ]
Line_17 $$ if (!hasUncommitedDocuments() && !actionsWhenAllDocumentsAreCommitted.isEmpty()) -->Line_18 $$ List<Map.Entry<Object, Runnable>> entries = new ArrayList<Map.Entry<Object, Runnable>>(new LinkedHashMap<Object, Runnable>(actionsWhenAllDocumentsAreCommitted).entrySet())[ CD ]
Line_21 $$ Runnable action = entry.getValue()-->Line_25 $$ action.run()[ FD ]
Line_2 $$ private void runAfterCommitActions(@NotNull Document document) -->Line_12 $$ if (list != null) [ CD ]
Line_8 $$ list = new ArrayList<Runnable>(list)-->Line_12 $$ if (list != null) [ FD ]
Line_22 $$ Object key = entry.getKey()-->Line_24 $$ myDocumentCommitProcessor.log("Running after commit runnable: ", null, false, key, action)[ FD ]
Line_2 $$ private void runAfterCommitActions(@NotNull Document document) -->Line_17 $$ if (!hasUncommitedDocuments() && !actionsWhenAllDocumentsAreCommitted.isEmpty()) [ CD ]
Line_4 $$ List<Runnable> list-->Line_6 $$ list = document.getUserData(ACTION_AFTER_COMMIT)[ FD ]
Line_4 $$ List<Runnable> list-->Line_7 $$ if (list != null) [ FD ]
Line_2 $$ private void runAfterCommitActions(@NotNull Document document) -->Line_6 $$ list = document.getUserData(ACTION_AFTER_COMMIT)[ FD ]
Line_13 $$ for (final Runnable runnable : list) -->Line_14 $$ runnable.run()[ FD ]
Line_2 $$ private void runAfterCommitActions(@NotNull Document document) -->Line_9 $$ document.putUserData(ACTION_AFTER_COMMIT, null)[ FD ]
Line_2 $$ private void runAfterCommitActions(@NotNull Document document) -->Line_3 $$ ApplicationManager.getApplication().assertIsDispatchThread()[ CD ]
