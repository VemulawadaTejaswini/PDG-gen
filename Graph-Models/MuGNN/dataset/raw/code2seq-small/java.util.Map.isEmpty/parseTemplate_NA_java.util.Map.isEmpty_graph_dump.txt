Line_16 $$ if (templateKey == null) -->Line_17 $$ return null[ CD ]
Line_6 $$ String templateKey = getDefaultTemplateKey()-->Line_19 $$ TemplateImpl template = myCallback.findApplicableTemplate(templateKey)[ FD ]
Line_6 $$ String templateKey = getDefaultTemplateKey()-->Line_12 $$ return parseLorem(templateKey)[ FD ]
Line_9 $$ templateKey = ((IdentifierToken) token).getText()-->Line_16 $$ if (templateKey == null) [ FD ]
Line_8 $$ if (token instanceof IdentifierToken) -->Line_14 $$ mustHaveSelector = false[ CD ]
Line_14 $$ mustHaveSelector = false-->Line_24 $$ if (mustHaveSelector && attributes.isEmpty()) [ FD ]
Line_9 $$ templateKey = ((IdentifierToken) token).getText()-->Line_11 $$ if (startsWithIgnoreCase(templateKey, LOREM_KEYWORD) || startsWithIgnoreCase(templateKey, LIPSUM_KEYWORD)) [ FD ]
Line_7 $$ boolean mustHaveSelector = true-->Line_24 $$ if (mustHaveSelector && attributes.isEmpty()) [ FD ]
Line_11 $$ if (startsWithIgnoreCase(templateKey, LOREM_KEYWORD) || startsWithIgnoreCase(templateKey, LIPSUM_KEYWORD)) -->Line_12 $$ return parseLorem(templateKey)[ CD ]
Line_5 $$ ZenCodingToken token = getToken()-->Line_8 $$ if (token instanceof IdentifierToken) [ FD ]
Line_6 $$ String templateKey = getDefaultTemplateKey()-->Line_20 $$ if (template == null && !ZenCodingUtil.isXML11ValidQName(templateKey) && !StringUtil.containsChar(templateKey, '$')) [ FD ]
Line_9 $$ templateKey = ((IdentifierToken) token).getText()-->Line_12 $$ return parseLorem(templateKey)[ FD ]
Line_9 $$ templateKey = ((IdentifierToken) token).getText()-->Line_19 $$ TemplateImpl template = myCallback.findApplicableTemplate(templateKey)[ FD ]
Line_6 $$ String templateKey = getDefaultTemplateKey()-->Line_11 $$ if (startsWithIgnoreCase(templateKey, LOREM_KEYWORD) || startsWithIgnoreCase(templateKey, LIPSUM_KEYWORD)) [ FD ]
Line_20 $$ if (template == null && !ZenCodingUtil.isXML11ValidQName(templateKey) && !StringUtil.containsChar(templateKey, '$')) -->Line_21 $$ return null[ CD ]
Line_8 $$ if (token instanceof IdentifierToken) -->Line_11 $$ if (startsWithIgnoreCase(templateKey, LOREM_KEYWORD) || startsWithIgnoreCase(templateKey, LIPSUM_KEYWORD)) [ CD ]
Line_7 $$ boolean mustHaveSelector = true-->Line_14 $$ mustHaveSelector = false[ FD ]
Line_6 $$ String templateKey = getDefaultTemplateKey()-->Line_9 $$ templateKey = ((IdentifierToken) token).getText()[ FD ]
Line_28 $$ if (!setTemplate(templateToken, template)) -->Line_29 $$ return null[ CD ]
Line_8 $$ if (token instanceof IdentifierToken) -->Line_9 $$ templateKey = ((IdentifierToken) token).getText()[ CD ]
Line_6 $$ String templateKey = getDefaultTemplateKey()-->Line_16 $$ if (templateKey == null) [ FD ]
Line_9 $$ templateKey = ((IdentifierToken) token).getText()-->Line_20 $$ if (template == null && !ZenCodingUtil.isXML11ValidQName(templateKey) && !StringUtil.containsChar(templateKey, '$')) [ FD ]
Line_24 $$ if (mustHaveSelector && attributes.isEmpty()) -->Line_25 $$ return null[ CD ]
Line_8 $$ if (token instanceof IdentifierToken) -->Line_10 $$ advance()[ CD ]
Line_23 $$ final Map<String, String> attributes = parseSelectors()-->Line_24 $$ if (mustHaveSelector && attributes.isEmpty()) [ FD ]
Line_19 $$ TemplateImpl template = myCallback.findApplicableTemplate(templateKey)-->Line_28 $$ if (!setTemplate(templateToken, template)) [ FD ]
Line_27 $$ final TemplateToken templateToken = new TemplateToken(templateKey, attributes)-->Line_28 $$ if (!setTemplate(templateToken, template)) [ FD ]
