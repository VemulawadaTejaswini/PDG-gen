Line_33 $$ if (now > nextLogTime) -->Line_42 $$ if (successes.isEmpty() && exceptions.isEmpty()) [ CD ]
Line_33 $$ if (now > nextLogTime) -->Line_50 $$ nextLogTime = now + WAIT_PROGRESS_INTERVAL_MILLIS[ CD ]
Line_43 $$ msg += ". No responses yet."-->Line_46 $$ QuorumJournalManager.LOG.warn(msg)[ FD ]
Line_33 $$ if (now > nextLogTime) -->Line_36 $$ if (!successes.isEmpty()) [ CD ]
Line_24 $$ while (true) -->Line_52 $$ long rem = et - now[ CD ]
Line_56 $$ rem = Math.min(rem, nextLogTime - now)-->Line_53 $$ if (rem <= 0) [ FD ]
Line_24 $$ while (true) -->Line_32 $$ long now = Time.monotonicNow()[ CD ]
Line_52 $$ long rem = et - now-->Line_53 $$ if (rem <= 0) [ FD ]
Line_57 $$ rem = Math.max(rem, 1)-->Line_56 $$ rem = Math.min(rem, nextLogTime - now)[ FD ]
Line_42 $$ if (successes.isEmpty() && exceptions.isEmpty()) -->Line_43 $$ msg += ". No responses yet."[ CD ]
Line_52 $$ long rem = et - now-->Line_57 $$ rem = Math.max(rem, 1)[ FD ]
Line_57 $$ rem = Math.max(rem, 1)-->Line_53 $$ if (rem <= 0) [ FD ]
Line_24 $$ while (true) -->Line_26 $$ if (minResponses > 0 && countResponses() >= minResponses)[ CD ]
Line_56 $$ rem = Math.min(rem, nextLogTime - now)-->Line_57 $$ rem = Math.max(rem, 1)[ FD ]
Line_24 $$ while (true) -->Line_30 $$ if (maxExceptions >= 0 && countExceptions() > maxExceptions)[ CD ]
Line_37 $$ msg += ". Succeeded so far: [" + Joiner.on(",").join(successes.keySet()) + "]"-->Line_43 $$ msg += ". No responses yet."[ FD ]
Line_45 $$ if (waited > millis * WAIT_PROGRESS_WARN_THRESHOLD) -->Line_48 $$ QuorumJournalManager.LOG.info(msg)[ CD ]
Line_22 $$ long nextLogTime = st + (long) (millis * WAIT_PROGRESS_INFO_THRESHOLD)-->Line_50 $$ nextLogTime = now + WAIT_PROGRESS_INTERVAL_MILLIS[ FD ]
Line_34 $$ long waited = now - st-->Line_35 $$ String msg = String.format("Waited %s ms (timeout=%s ms) for a response for %s", waited, millis, operationName)[ FD ]
Line_33 $$ if (now > nextLogTime) -->Line_39 $$ if (!exceptions.isEmpty()) [ CD ]
Line_24 $$ while (true) -->Line_57 $$ rem = Math.max(rem, 1)[ CD ]
Line_24 $$ while (true) -->Line_58 $$ wait(rem)[ CD ]
Line_35 $$ String msg = String.format("Waited %s ms (timeout=%s ms) for a response for %s", waited, millis, operationName)-->Line_46 $$ QuorumJournalManager.LOG.warn(msg)[ FD ]
Line_24 $$ while (true) -->Line_25 $$ checkAssertionErrors()[ CD ]
Line_35 $$ String msg = String.format("Waited %s ms (timeout=%s ms) for a response for %s", waited, millis, operationName)-->Line_43 $$ msg += ". No responses yet."[ FD ]
Line_50 $$ nextLogTime = now + WAIT_PROGRESS_INTERVAL_MILLIS-->Line_33 $$ if (now > nextLogTime) [ FD ]
Line_52 $$ long rem = et - now-->Line_56 $$ rem = Math.min(rem, nextLogTime - now)[ FD ]
Line_32 $$ long now = Time.monotonicNow()-->Line_50 $$ nextLogTime = now + WAIT_PROGRESS_INTERVAL_MILLIS[ FD ]
Line_52 $$ long rem = et - now-->Line_58 $$ wait(rem)[ FD ]
Line_40 $$ msg += ". Exceptions so far: [" + getExceptionMapString() + "]"-->Line_43 $$ msg += ". No responses yet."[ FD ]
Line_35 $$ String msg = String.format("Waited %s ms (timeout=%s ms) for a response for %s", waited, millis, operationName)-->Line_40 $$ msg += ". Exceptions so far: [" + getExceptionMapString() + "]"[ FD ]
Line_33 $$ if (now > nextLogTime) -->Line_45 $$ if (waited > millis * WAIT_PROGRESS_WARN_THRESHOLD) [ CD ]
Line_22 $$ long nextLogTime = st + (long) (millis * WAIT_PROGRESS_INFO_THRESHOLD)-->Line_33 $$ if (now > nextLogTime) [ FD ]
Line_35 $$ String msg = String.format("Waited %s ms (timeout=%s ms) for a response for %s", waited, millis, operationName)-->Line_37 $$ msg += ". Succeeded so far: [" + Joiner.on(",").join(successes.keySet()) + "]"[ FD ]
Line_57 $$ rem = Math.max(rem, 1)-->Line_58 $$ wait(rem)[ FD ]
Line_56 $$ rem = Math.min(rem, nextLogTime - now)-->Line_58 $$ wait(rem)[ FD ]
Line_40 $$ msg += ". Exceptions so far: [" + getExceptionMapString() + "]"-->Line_46 $$ QuorumJournalManager.LOG.warn(msg)[ FD ]
Line_45 $$ if (waited > millis * WAIT_PROGRESS_WARN_THRESHOLD) -->Line_46 $$ QuorumJournalManager.LOG.warn(msg)[ CD ]
Line_24 $$ while (true) -->Line_28 $$ if (minSuccesses > 0 && countSuccesses() >= minSuccesses)[ CD ]
Line_33 $$ if (now > nextLogTime) -->Line_34 $$ long waited = now - st[ CD ]
Line_24 $$ while (true) -->Line_33 $$ if (now > nextLogTime) [ CD ]
Line_34 $$ long waited = now - st-->Line_45 $$ if (waited > millis * WAIT_PROGRESS_WARN_THRESHOLD) [ FD ]
Line_36 $$ if (!successes.isEmpty()) -->Line_37 $$ msg += ". Succeeded so far: [" + Joiner.on(",").join(successes.keySet()) + "]"[ CD ]
Line_43 $$ msg += ". No responses yet."-->Line_48 $$ QuorumJournalManager.LOG.info(msg)[ FD ]
Line_37 $$ msg += ". Succeeded so far: [" + Joiner.on(",").join(successes.keySet()) + "]"-->Line_48 $$ QuorumJournalManager.LOG.info(msg)[ FD ]
Line_26 $$ if (minResponses > 0 && countResponses() >= minResponses)-->Line_27 $$ return[ CD ]
Line_37 $$ msg += ". Succeeded so far: [" + Joiner.on(",").join(successes.keySet()) + "]"-->Line_40 $$ msg += ". Exceptions so far: [" + getExceptionMapString() + "]"[ FD ]
Line_24 $$ while (true) -->Line_56 $$ rem = Math.min(rem, nextLogTime - now)[ CD ]
Line_35 $$ String msg = String.format("Waited %s ms (timeout=%s ms) for a response for %s", waited, millis, operationName)-->Line_48 $$ QuorumJournalManager.LOG.info(msg)[ FD ]
Line_30 $$ if (maxExceptions >= 0 && countExceptions() > maxExceptions)-->Line_31 $$ return[ CD ]
Line_28 $$ if (minSuccesses > 0 && countSuccesses() >= minSuccesses)-->Line_29 $$ return[ CD ]
Line_39 $$ if (!exceptions.isEmpty()) -->Line_40 $$ msg += ". Exceptions so far: [" + getExceptionMapString() + "]"[ CD ]
Line_37 $$ msg += ". Succeeded so far: [" + Joiner.on(",").join(successes.keySet()) + "]"-->Line_46 $$ QuorumJournalManager.LOG.warn(msg)[ FD ]
Line_33 $$ if (now > nextLogTime) -->Line_35 $$ String msg = String.format("Waited %s ms (timeout=%s ms) for a response for %s", waited, millis, operationName)[ CD ]
Line_32 $$ long now = Time.monotonicNow()-->Line_33 $$ if (now > nextLogTime) [ FD ]
Line_24 $$ while (true) -->Line_53 $$ if (rem <= 0) [ CD ]
Line_40 $$ msg += ". Exceptions so far: [" + getExceptionMapString() + "]"-->Line_48 $$ QuorumJournalManager.LOG.info(msg)[ FD ]
