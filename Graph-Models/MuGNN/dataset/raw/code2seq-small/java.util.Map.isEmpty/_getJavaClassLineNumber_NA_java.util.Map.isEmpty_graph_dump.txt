Line_11 $$ if (propertyMap.isEmpty()) -->Line_12 $$ annotationLineNumber--[ CD ]
Line_3 $$ int lineNumber = javaClass.getLineNumber()-->Line_15 $$ lineNumber = annotationLineNumber[ FD ]
Line_3 $$ int lineNumber = javaClass.getLineNumber()-->Line_14 $$ if (annotationLineNumber < lineNumber) [ FD ]
Line_8 $$ for (Annotation annotation : annotations) -->Line_9 $$ int annotationLineNumber = annotation.getLineNumber()[ FD ]
Line_8 $$ for (Annotation annotation : annotations) -->Line_10 $$ Map<String, String> propertyMap = annotation.getPropertyMap()[ FD ]
Line_9 $$ int annotationLineNumber = annotation.getLineNumber()-->Line_15 $$ lineNumber = annotationLineNumber[ FD ]
Line_9 $$ int annotationLineNumber = annotation.getLineNumber()-->Line_12 $$ annotationLineNumber--[ FD ]
Line_9 $$ int annotationLineNumber = annotation.getLineNumber()-->Line_14 $$ if (annotationLineNumber < lineNumber) [ FD ]
Line_10 $$ Map<String, String> propertyMap = annotation.getPropertyMap()-->Line_11 $$ if (propertyMap.isEmpty()) [ FD ]
Line_2 $$ private int _getJavaClassLineNumber(JavaClass javaClass) -->Line_4 $$ Annotation[] annotations = javaClass.getAnnotations()[ FD ]
Line_2 $$ private int _getJavaClassLineNumber(JavaClass javaClass) -->Line_4 $$ Annotation[] annotations = javaClass.getAnnotations()[ CD ]
Line_2 $$ private int _getJavaClassLineNumber(JavaClass javaClass) -->Line_3 $$ int lineNumber = javaClass.getLineNumber()[ CD ]
Line_5 $$ if (annotations.length == 0) -->Line_6 $$ return lineNumber[ CD ]
Line_2 $$ private int _getJavaClassLineNumber(JavaClass javaClass) -->Line_3 $$ int lineNumber = javaClass.getLineNumber()[ FD ]
Line_14 $$ if (annotationLineNumber < lineNumber) -->Line_15 $$ lineNumber = annotationLineNumber[ CD ]
Line_2 $$ private int _getJavaClassLineNumber(JavaClass javaClass) -->Line_5 $$ if (annotations.length == 0) [ CD ]
Line_2 $$ private int _getJavaClassLineNumber(JavaClass javaClass) -->Line_18 $$ return lineNumber[ CD ]
