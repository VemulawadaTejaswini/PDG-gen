Line_9 $$ MappingMetaData mappingMetaData = mappings.get(type)-->Line_11 $$ Map<String, Object> mappingSource = mappingMetaData.getSourceAsMap()[ FD ]
Line_9 $$ MappingMetaData mappingMetaData = mappings.get(type)-->Line_10 $$ assertThat(mappingMetaData, notNullValue())[ FD ]
Line_14 $$ for (String fieldName : fieldNames) -->Line_17 $$ fieldName = fieldName.replace(".", ".properties.")[ FD ]
Line_17 $$ fieldName = fieldName.replace(".", ".properties.")-->Line_19 $$ assertThat("field " + fieldName + " doesn't exists in mapping " + mappingMetaData.source().string(), XContentMapValues.extractValue(fieldName, mappingProperties), notNullValue())[ FD ]
Line_15 $$ Map<String, Object> mappingProperties = (Map<String, Object>) mappingSource.get("properties")-->Line_19 $$ assertThat("field " + fieldName + " doesn't exists in mapping " + mappingMetaData.source().string(), XContentMapValues.extractValue(fieldName, mappingProperties), notNullValue())[ FD ]
Line_16 $$ if (fieldName.indexOf('.') != -1) -->Line_17 $$ fieldName = fieldName.replace(".", ".properties.")[ CD ]
Line_14 $$ for (String fieldName : fieldNames) -->Line_19 $$ assertThat("field " + fieldName + " doesn't exists in mapping " + mappingMetaData.source().string(), XContentMapValues.extractValue(fieldName, mappingProperties), notNullValue())[ FD ]
Line_9 $$ MappingMetaData mappingMetaData = mappings.get(type)-->Line_19 $$ assertThat("field " + fieldName + " doesn't exists in mapping " + mappingMetaData.source().string(), XContentMapValues.extractValue(fieldName, mappingProperties), notNullValue())[ FD ]
Line_6 $$ GetMappingsResponse response = client().admin().indices().prepareGetMappings(index).setTypes(type).get()-->Line_7 $$ ImmutableOpenMap<String, MappingMetaData> mappings = response.getMappings().get(index)[ FD ]
Line_7 $$ ImmutableOpenMap<String, MappingMetaData> mappings = response.getMappings().get(index)-->Line_9 $$ MappingMetaData mappingMetaData = mappings.get(type)[ FD ]
Line_11 $$ Map<String, Object> mappingSource = mappingMetaData.getSourceAsMap()-->Line_12 $$ assertFalse(mappingSource.isEmpty())[ FD ]
Line_11 $$ Map<String, Object> mappingSource = mappingMetaData.getSourceAsMap()-->Line_15 $$ Map<String, Object> mappingProperties = (Map<String, Object>) mappingSource.get("properties")[ FD ]
Line_14 $$ for (String fieldName : fieldNames) -->Line_16 $$ if (fieldName.indexOf('.') != -1) [ FD ]
Line_11 $$ Map<String, Object> mappingSource = mappingMetaData.getSourceAsMap()-->Line_13 $$ assertTrue(mappingSource.containsKey("properties"))[ FD ]
Line_7 $$ ImmutableOpenMap<String, MappingMetaData> mappings = response.getMappings().get(index)-->Line_8 $$ assertThat(mappings, notNullValue())[ FD ]
