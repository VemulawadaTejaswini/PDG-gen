Line_15 $$ final String keyTwo = "blah"-->Line_18 $$ interceptorData.put(keyTwo, valueTwo)[ FD ]
Line_24 $$ final Context jndiContext = new InitialContext(props)-->Line_25 $$ final RemoteSFSB remoteSFSB = (RemoteSFSB) jndiContext.lookup("ejb:" + APP_NAME + "/" + MODULE_NAME + "/" + DISTINCT_NAME + "/" + SimpleSFSB.class.getSimpleName() + "!" + RemoteSFSB.class.getName() + "?stateful")[ FD ]
Line_34 $$ final Object expectedValue = clientInterceptorDataEntry.getValue()-->Line_35 $$ Assert.assertEquals("Unexpected value in bean, on server side, via InvocationContext.getContextData() for key " + key, expectedValue, valuesSeenOnServerSide.get(key))[ FD ]
Line_33 $$ final String key = clientInterceptorDataEntry.getKey()-->Line_35 $$ Assert.assertEquals("Unexpected value in bean, on server side, via InvocationContext.getContextData() for key " + key, expectedValue, valuesSeenOnServerSide.get(key))[ FD ]
Line_22 $$ final Hashtable props = new Hashtable()-->Line_23 $$ props.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming")[ FD ]
Line_32 $$ for (final Map.Entry<String, Object> clientInterceptorDataEntry : interceptorData.entrySet()) -->Line_34 $$ final Object expectedValue = clientInterceptorDataEntry.getValue()[ FD ]
Line_16 $$ final Object valueTwo = new Integer("12")-->Line_18 $$ interceptorData.put(keyTwo, valueTwo)[ FD ]
Line_32 $$ for (final Map.Entry<String, Object> clientInterceptorDataEntry : interceptorData.entrySet()) -->Line_33 $$ final String key = clientInterceptorDataEntry.getKey()[ FD ]
Line_14 $$ final Object valueOne = "bar"-->Line_17 $$ interceptorData.put(keyOne, valueOne)[ FD ]
Line_13 $$ final String keyOne = "foo"-->Line_17 $$ interceptorData.put(keyOne, valueOne)[ FD ]
