Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_11 $$ Collection<CommitLogSegment> segments = commitLog.allocator.getActiveSegments()[ CD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_19 $$ Assert.assertTrue(ratios.isEmpty())[ CD ]
Line_7 $$ combinedSize += f.length()-->Line_8 $$ Assert.assertEquals(combinedSize, commitLog.getActiveOnDiskSize())[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_8 $$ Assert.assertEquals(combinedSize, commitLog.getActiveOnDiskSize())[ CD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_5 $$ commitLog.allocator.awaitManagementTasksCompletion()[ CD ]
Line_12 $$ for (CommitLogSegment segment : segments) -->Line_14 $$ Double ratio = ratios.remove(segment.getName())[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_10 $$ Map<String, Double> ratios = commitLog.getActiveSegmentCompressionRatios()[ CD ]
Line_6 $$ long combinedSize = 0-->Line_7 $$ combinedSize += f.length()[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_8 $$ Assert.assertEquals(combinedSize, commitLog.getActiveOnDiskSize())[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_9 $$ List<String> logFileNames = commitLog.getActiveSegmentNames()[ FD ]
Line_9 $$ List<String> logFileNames = commitLog.getActiveSegmentNames()-->Line_18 $$ Assert.assertTrue(logFileNames.isEmpty())[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_6 $$ long combinedSize = 0[ CD ]
Line_14 $$ Double ratio = ratios.remove(segment.getName())-->Line_16 $$ Assert.assertEquals(segment.onDiskSize() * 1.0 / segment.contentSize(), ratio, 0.01)[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_4 $$ commitLog.executor.requestExtraSync().awaitUninterruptibly()[ CD ]
Line_12 $$ for (CommitLogSegment segment : segments) -->Line_13 $$ Assert.assertTrue(logFileNames.remove(segment.getName()))[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_18 $$ Assert.assertTrue(logFileNames.isEmpty())[ CD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_3 $$ commitLog.executor.requestExtraSync().awaitUninterruptibly()[ CD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_10 $$ Map<String, Double> ratios = commitLog.getActiveSegmentCompressionRatios()[ FD ]
Line_2 $$ private void verifySizes(CommitLog commitLog) -->Line_9 $$ List<String> logFileNames = commitLog.getActiveSegmentNames()[ CD ]
Line_12 $$ for (CommitLogSegment segment : segments) -->Line_16 $$ Assert.assertEquals(segment.onDiskSize() * 1.0 / segment.contentSize(), ratio, 0.01)[ FD ]
Line_10 $$ Map<String, Double> ratios = commitLog.getActiveSegmentCompressionRatios()-->Line_19 $$ Assert.assertTrue(ratios.isEmpty())[ FD ]
Line_9 $$ List<String> logFileNames = commitLog.getActiveSegmentNames()-->Line_13 $$ Assert.assertTrue(logFileNames.remove(segment.getName()))[ FD ]
Line_6 $$ long combinedSize = 0-->Line_8 $$ Assert.assertEquals(combinedSize, commitLog.getActiveOnDiskSize())[ FD ]
Line_12 $$ for (CommitLogSegment segment : segments) -->Line_15 $$ Assert.assertEquals(segment.logFile.length(), segment.onDiskSize())[ FD ]
Line_10 $$ Map<String, Double> ratios = commitLog.getActiveSegmentCompressionRatios()-->Line_14 $$ Double ratio = ratios.remove(segment.getName())[ FD ]
