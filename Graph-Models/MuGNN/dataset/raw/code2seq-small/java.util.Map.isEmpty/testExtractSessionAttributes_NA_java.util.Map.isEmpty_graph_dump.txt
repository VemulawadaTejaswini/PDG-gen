Line_12 $$ String portletSessionAttributesName1 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName1)-->Line_90 $$ portletSessionAttributes = (Map<String, Serializable>) sessionAttributes.get(portletSessionAttributesName1)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_34 $$ Map<String, Serializable> sessionAttributes = SPIAgentSerializable.extractSessionAttributes(mockHttpServletRequest)[ FD ]
Line_8 $$ MockHttpSession mockHttpSession = new MockHttpSession()-->Line_10 $$ mockHttpSession.setAttribute(serializeableAttribute, serializeableAttribute)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_80 $$ mockHttpServletRequest.setAttribute(WebKeys.PORTLET_SESSION, portletMockHttpSession)[ FD ]
Line_8 $$ MockHttpSession mockHttpSession = new MockHttpSession()-->Line_13 $$ mockHttpSession.setAttribute(portletSessionAttributesName1, portletSessionAttributesName1)[ FD ]
Line_12 $$ String portletSessionAttributesName1 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName1)-->Line_47 $$ Map<String, Serializable> portletSessionAttributes = (Map<String, Serializable>) sessionAttributes.get(portletSessionAttributesName1)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_59 $$ mockHttpServletRequest.setAttribute(WebKeys.PORTLET_SESSION, portletMockHttpSession)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_32 $$ mockHttpServletRequest.setAttribute(WebKeys.SPI_AGENT_PORTLET, portlet)[ FD ]
Line_12 $$ String portletSessionAttributesName1 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName1)-->Line_65 $$ portletSessionAttributes = (Map<String, Serializable>) sessionAttributes.get(portletSessionAttributesName1)[ FD ]
Line_52 $$ portletMockHttpSession.setAttribute(nonserializableAttribute, new Object() -->Line_56 $$ return nonserializableAttribute[ CD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_82 $$ Assert.assertNull(mockHttpServletRequest.getAttribute(WebKeys.PORTLET_SESSION))[ FD ]
Line_8 $$ MockHttpSession mockHttpSession = new MockHttpSession()-->Line_16 $$ mockHttpSession.setAttribute(portletSessionAttributesName2, portletSessionAttributesName2)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_33 $$ mockHttpServletRequest.setSession(mockHttpSession)[ FD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_46 $$ Assert.assertEquals(serializeableAttribute, sessionAttributes.get(serializeableAttribute))[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_60 $$ sessionAttributes = SPIAgentSerializable.extractSessionAttributes(mockHttpServletRequest)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_81 $$ sessionAttributes = SPIAgentSerializable.extractSessionAttributes(mockHttpServletRequest)[ FD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_76 $$ Assert.assertEquals(serializeableAttribute, sessionAttributes.get(serializeableAttribute))[ FD ]
Line_17 $$ final String nonserializableAttribute = "nonserializableAttribute"-->Line_52 $$ portletMockHttpSession.setAttribute(nonserializableAttribute, new Object() [ FD ]
Line_17 $$ final String nonserializableAttribute = "nonserializableAttribute"-->Line_18 $$ mockHttpSession.setAttribute(nonserializableAttribute, new Object() [ FD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_93 $$ Assert.assertEquals(serializeableAttribute, portletSessionAttributes.get(serializeableAttribute))[ FD ]
Line_8 $$ MockHttpSession mockHttpSession = new MockHttpSession()-->Line_18 $$ mockHttpSession.setAttribute(nonserializableAttribute, new Object() [ FD ]
Line_18 $$ mockHttpSession.setAttribute(nonserializableAttribute, new Object() -->Line_22 $$ return nonserializableAttribute[ CD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_89 $$ Assert.assertEquals(serializeableAttribute, sessionAttributes.get(serializeableAttribute))[ FD ]
Line_12 $$ String portletSessionAttributesName1 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName1)-->Line_13 $$ mockHttpSession.setAttribute(portletSessionAttributesName1, portletSessionAttributesName1)[ FD ]
Line_25 $$ Portlet portlet = new PortletImpl() -->Line_29 $$ return servletContextName1[ CD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_43 $$ Assert.assertNull(mockHttpServletRequest.getAttribute(WebKeys.PORTLET_SESSION))[ FD ]
Line_15 $$ String portletSessionAttributesName2 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName2)-->Line_16 $$ mockHttpSession.setAttribute(portletSessionAttributesName2, portletSessionAttributesName2)[ FD ]
Line_11 $$ final String servletContextName1 = "servletContextName1"-->Line_12 $$ String portletSessionAttributesName1 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName1)[ FD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_64 $$ Assert.assertEquals(serializeableAttribute, sessionAttributes.get(serializeableAttribute))[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_42 $$ sessionAttributes = SPIAgentSerializable.extractSessionAttributes(mockHttpServletRequest)[ FD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_68 $$ Assert.assertEquals(serializeableAttribute, portletSessionAttributes.get(serializeableAttribute))[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_71 $$ sessionAttributes = SPIAgentSerializable.extractSessionAttributes(mockHttpServletRequest)[ FD ]
Line_12 $$ String portletSessionAttributesName1 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName1)-->Line_77 $$ Assert.assertEquals(portletSessionAttributesName1, sessionAttributes.get(portletSessionAttributesName1))[ FD ]
Line_14 $$ String servletContextName2 = "servletContextName2"-->Line_15 $$ String portletSessionAttributesName2 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName2)[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_61 $$ Assert.assertNull(mockHttpServletRequest.getAttribute(WebKeys.PORTLET_SESSION))[ FD ]
Line_7 $$ MockHttpServletRequest mockHttpServletRequest = new MockHttpServletRequest()-->Line_41 $$ mockHttpServletRequest.setAttribute(WebKeys.PORTLET_SESSION, portletMockHttpSession)[ FD ]
Line_12 $$ String portletSessionAttributesName1 = WebKeys.PORTLET_SESSION_ATTRIBUTES.concat(servletContextName1)-->Line_38 $$ Assert.assertEquals(portletSessionAttributesName1, sessionAttributes.get(portletSessionAttributesName1))[ FD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_37 $$ Assert.assertEquals(serializeableAttribute, sessionAttributes.get(serializeableAttribute))[ FD ]
Line_9 $$ String serializeableAttribute = "serializeableAttribute"-->Line_10 $$ mockHttpSession.setAttribute(serializeableAttribute, serializeableAttribute)[ FD ]
Line_8 $$ MockHttpSession mockHttpSession = new MockHttpSession()-->Line_33 $$ mockHttpServletRequest.setSession(mockHttpSession)[ FD ]
