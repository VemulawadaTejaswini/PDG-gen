Line_13 $$ final Context jndiContext = new InitialContext(props)-->Line_14 $$ final RemoteViewInvoker remoteViewInvokingBean = (RemoteViewInvoker) jndiContext.lookup("ejb:" + APP_NAME + "/" + MODULE_NAME + "/" + DISTINCT_NAME + "/" + RemoteViewInvokingBean.class.getSimpleName() + "!" + RemoteViewInvoker.class.getName() + "?stateful")[ FD ]
Line_11 $$ final Hashtable props = new Hashtable()-->Line_12 $$ props.put(Context.URL_PKG_PREFIXES, "org.jboss.ejb.client.naming")[ FD ]
Line_24 $$ final String key = clientInterceptorDataEntry.getKey()-->Line_26 $$ Assert.assertEquals("Unexpected value in bean, on server side, via InvocationContext.getContextData() for key " + key, expectedValue, valuesSeenOnServerSide.get(key))[ FD ]
Line_23 $$ for (final Map.Entry<String, Object> clientInterceptorDataEntry : interceptorData.entrySet()) -->Line_25 $$ final Object expectedValue = clientInterceptorDataEntry.getValue()[ FD ]
Line_25 $$ final Object expectedValue = clientInterceptorDataEntry.getValue()-->Line_26 $$ Assert.assertEquals("Unexpected value in bean, on server side, via InvocationContext.getContextData() for key " + key, expectedValue, valuesSeenOnServerSide.get(key))[ FD ]
Line_23 $$ for (final Map.Entry<String, Object> clientInterceptorDataEntry : interceptorData.entrySet()) -->Line_24 $$ final String key = clientInterceptorDataEntry.getKey()[ FD ]
