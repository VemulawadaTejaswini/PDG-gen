Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_20 $$ return null[ CD ]
Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_4 $$ if (myAlsoReverted.contains(path))[ CD ]
Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_3 $$ final String path = FilePathsHelper.convertPath(file)[ CD ]
Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_17 $$ return new ThroughRenameInfo(entry.getValue(), new File(entry.getValue(), relativePath), firstTo, file.getIOFile(), firstTo != null)[ FD ]
Line_9 $$ for (Map.Entry<String, File> entry : head.descendingMap().entrySet()) -->Line_10 $$ if (path.equals(entry.getKey()))[ FD ]
Line_12 $$ if (path.startsWith(entry.getKey())) -->Line_17 $$ return new ThroughRenameInfo(entry.getValue(), new File(entry.getValue(), relativePath), firstTo, file.getIOFile(), firstTo != null)[ CD ]
Line_12 $$ if (path.startsWith(entry.getKey())) -->Line_15 $$ final String relativePath = FileUtil.getRelativePath(convertedBase, convertedChild, '/')[ CD ]
Line_6 $$ final NavigableMap<String, File> head = myRenames.headMap(path, true)-->Line_9 $$ for (Map.Entry<String, File> entry : head.descendingMap().entrySet()) [ FD ]
Line_7 $$ if (head == null || head.isEmpty())-->Line_8 $$ return null[ CD ]
Line_9 $$ for (Map.Entry<String, File> entry : head.descendingMap().entrySet()) -->Line_12 $$ if (path.startsWith(entry.getKey())) [ FD ]
Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_3 $$ final String path = FilePathsHelper.convertPath(file)[ FD ]
Line_6 $$ final NavigableMap<String, File> head = myRenames.headMap(path, true)-->Line_7 $$ if (head == null || head.isEmpty())[ FD ]
Line_10 $$ if (path.equals(entry.getKey()))-->Line_11 $$ return null[ CD ]
Line_3 $$ final String path = FilePathsHelper.convertPath(file)-->Line_12 $$ if (path.startsWith(entry.getKey())) [ FD ]
Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_6 $$ final NavigableMap<String, File> head = myRenames.headMap(path, true)[ CD ]
Line_12 $$ if (path.startsWith(entry.getKey())) -->Line_14 $$ final String convertedChild = FileUtil.toSystemIndependentName(file.getPath())[ CD ]
Line_14 $$ final String convertedChild = FileUtil.toSystemIndependentName(file.getPath())-->Line_15 $$ final String relativePath = FileUtil.getRelativePath(convertedBase, convertedChild, '/')[ FD ]
Line_3 $$ final String path = FilePathsHelper.convertPath(file)-->Line_6 $$ final NavigableMap<String, File> head = myRenames.headMap(path, true)[ FD ]
Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_14 $$ final String convertedChild = FileUtil.toSystemIndependentName(file.getPath())[ FD ]
Line_4 $$ if (myAlsoReverted.contains(path))-->Line_5 $$ return null[ CD ]
Line_3 $$ final String path = FilePathsHelper.convertPath(file)-->Line_10 $$ if (path.equals(entry.getKey()))[ FD ]
Line_9 $$ for (Map.Entry<String, File> entry : head.descendingMap().entrySet()) -->Line_17 $$ return new ThroughRenameInfo(entry.getValue(), new File(entry.getValue(), relativePath), firstTo, file.getIOFile(), firstTo != null)[ FD ]
Line_3 $$ final String path = FilePathsHelper.convertPath(file)-->Line_4 $$ if (myAlsoReverted.contains(path))[ FD ]
Line_12 $$ if (path.startsWith(entry.getKey())) -->Line_13 $$ final String convertedBase = FileUtil.toSystemIndependentName(entry.getKey())[ CD ]
Line_9 $$ for (Map.Entry<String, File> entry : head.descendingMap().entrySet()) -->Line_13 $$ final String convertedBase = FileUtil.toSystemIndependentName(entry.getKey())[ FD ]
Line_13 $$ final String convertedBase = FileUtil.toSystemIndependentName(entry.getKey())-->Line_15 $$ final String relativePath = FileUtil.getRelativePath(convertedBase, convertedChild, '/')[ FD ]
Line_2 $$ public ThroughRenameInfo findToFile(@NotNull final FilePath file, @Nullable final File firstTo) -->Line_7 $$ if (head == null || head.isEmpty())[ CD ]
