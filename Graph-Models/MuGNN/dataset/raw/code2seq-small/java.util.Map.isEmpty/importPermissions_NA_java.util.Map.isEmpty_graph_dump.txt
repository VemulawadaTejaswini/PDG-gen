Line_14 $$ Role role = null-->Line_31 $$ role = RoleLocalServiceUtil.getRole(_companyId, roleName)[ FD ]
Line_17 $$ roleName = roleName.substring(PermissionExporter.ROLE_TEAM_PREFIX.length())-->Line_31 $$ role = RoleLocalServiceUtil.getRole(_companyId, roleName)[ FD ]
Line_4 $$ if (!MapUtil.getBoolean(_parameterMap, PortletDataHandlerKeys.PERMISSIONS)) -->Line_5 $$ return[ CD ]
Line_12 $$ for (KeyValuePair permission : permissions) -->Line_13 $$ String roleName = permission.getKey()[ FD ]
Line_11 $$ Map<Long, String[]> roleIdsToActionIds = new HashMap()-->Line_43 $$ roleIdsToActionIds.put(role.getRoleId(), actionIds)[ FD ]
Line_15 $$ Team team = null-->Line_29 $$ role = RoleLocalServiceUtil.getTeamRole(_companyId, team.getTeamId())[ FD ]
Line_48 $$ if (ResourceBlockLocalServiceUtil.isSupported(resourceName)) -->Line_49 $$ ResourceBlockLocalServiceUtil.setIndividualScopePermissions(_companyId, _groupId, resourceName, newResourcePK, roleIdsToActionIds)[ CD ]
Line_15 $$ Team team = null-->Line_19 $$ team = TeamLocalServiceUtil.getTeam(_groupId, roleName)[ FD ]
Line_13 $$ String roleName = permission.getKey()-->Line_17 $$ roleName = roleName.substring(PermissionExporter.ROLE_TEAM_PREFIX.length())[ FD ]
Line_13 $$ String roleName = permission.getKey()-->Line_16 $$ if (roleName.startsWith(PermissionExporter.ROLE_TEAM_PREFIX)) [ FD ]
Line_15 $$ Team team = null-->Line_28 $$ if (team != null) [ FD ]
Line_13 $$ String roleName = permission.getKey()-->Line_39 $$ if (isPrivateLayout() && resourceName.equals(Layout.class.getName()) && roleName.equals(RoleConstants.GUEST)) [ FD ]
Line_11 $$ Map<Long, String[]> roleIdsToActionIds = new HashMap()-->Line_45 $$ if (roleIdsToActionIds.isEmpty()) [ FD ]
Line_11 $$ Map<Long, String[]> roleIdsToActionIds = new HashMap()-->Line_51 $$ ResourcePermissionLocalServiceUtil.setResourcePermissions(_companyId, resourceName, ResourceConstants.SCOPE_INDIVIDUAL, String.valueOf(newResourcePK), roleIdsToActionIds)[ FD ]
Line_29 $$ role = RoleLocalServiceUtil.getTeamRole(_companyId, team.getTeamId())-->Line_31 $$ role = RoleLocalServiceUtil.getRole(_companyId, roleName)[ FD ]
Line_19 $$ team = TeamLocalServiceUtil.getTeam(_groupId, roleName)-->Line_29 $$ role = RoleLocalServiceUtil.getTeamRole(_companyId, team.getTeamId())[ FD ]
Line_48 $$ if (ResourceBlockLocalServiceUtil.isSupported(resourceName)) -->Line_51 $$ ResourcePermissionLocalServiceUtil.setResourcePermissions(_companyId, resourceName, ResourceConstants.SCOPE_INDIVIDUAL, String.valueOf(newResourcePK), roleIdsToActionIds)[ CD ]
Line_16 $$ if (roleName.startsWith(PermissionExporter.ROLE_TEAM_PREFIX)) -->Line_17 $$ roleName = roleName.substring(PermissionExporter.ROLE_TEAM_PREFIX.length())[ CD ]
Line_11 $$ Map<Long, String[]> roleIdsToActionIds = new HashMap()-->Line_49 $$ ResourceBlockLocalServiceUtil.setIndividualScopePermissions(_companyId, _groupId, resourceName, newResourcePK, roleIdsToActionIds)[ FD ]
Line_45 $$ if (roleIdsToActionIds.isEmpty()) -->Line_46 $$ return[ CD ]
Line_8 $$ if (permissions == null) -->Line_9 $$ return[ CD ]
Line_28 $$ if (team != null) -->Line_31 $$ role = RoleLocalServiceUtil.getRole(_companyId, roleName)[ CD ]
Line_42 $$ String[] actionIds = StringUtil.split(permission.getValue())-->Line_43 $$ roleIdsToActionIds.put(role.getRoleId(), actionIds)[ FD ]
Line_12 $$ for (KeyValuePair permission : permissions) -->Line_42 $$ String[] actionIds = StringUtil.split(permission.getValue())[ FD ]
Line_21 $$ if (_log.isWarnEnabled()) -->Line_22 $$ _log.warn("Team " + roleName + " does not exist")[ CD ]
Line_13 $$ String roleName = permission.getKey()-->Line_31 $$ role = RoleLocalServiceUtil.getRole(_companyId, roleName)[ FD ]
Line_34 $$ if (_log.isWarnEnabled()) -->Line_35 $$ _log.warn("Role " + roleName + " does not exist")[ CD ]
Line_14 $$ Role role = null-->Line_43 $$ roleIdsToActionIds.put(role.getRoleId(), actionIds)[ FD ]
Line_14 $$ Role role = null-->Line_29 $$ role = RoleLocalServiceUtil.getTeamRole(_companyId, team.getTeamId())[ FD ]
Line_31 $$ role = RoleLocalServiceUtil.getRole(_companyId, roleName)-->Line_43 $$ roleIdsToActionIds.put(role.getRoleId(), actionIds)[ FD ]
Line_17 $$ roleName = roleName.substring(PermissionExporter.ROLE_TEAM_PREFIX.length())-->Line_19 $$ team = TeamLocalServiceUtil.getTeam(_groupId, roleName)[ FD ]
Line_19 $$ team = TeamLocalServiceUtil.getTeam(_groupId, roleName)-->Line_28 $$ if (team != null) [ FD ]
Line_28 $$ if (team != null) -->Line_29 $$ role = RoleLocalServiceUtil.getTeamRole(_companyId, team.getTeamId())[ CD ]
Line_13 $$ String roleName = permission.getKey()-->Line_19 $$ team = TeamLocalServiceUtil.getTeam(_groupId, roleName)[ FD ]
Line_29 $$ role = RoleLocalServiceUtil.getTeamRole(_companyId, team.getTeamId())-->Line_43 $$ roleIdsToActionIds.put(role.getRoleId(), actionIds)[ FD ]
Line_7 $$ List<KeyValuePair> permissions = _permissionsMap.get(getPrimaryKeyString(resourceName, resourcePK))-->Line_8 $$ if (permissions == null) [ FD ]
Line_17 $$ roleName = roleName.substring(PermissionExporter.ROLE_TEAM_PREFIX.length())-->Line_39 $$ if (isPrivateLayout() && resourceName.equals(Layout.class.getName()) && roleName.equals(RoleConstants.GUEST)) [ FD ]
