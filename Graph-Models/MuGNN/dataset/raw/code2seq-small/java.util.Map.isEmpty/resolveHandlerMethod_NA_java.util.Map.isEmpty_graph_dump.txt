Line_6 $$ Set<String> allowedMethods = new LinkedHashSet<String>(7)-->Line_23 $$ allowedMethods.addAll(mappingInfo.methodNames())[ FD ]
Line_67 $$ resolvedMethodName = methodNameResolver.getHandlerMethodName(request)-->Line_72 $$ if (!resolvedMethodName.equals(handlerMethod.getName())) [ FD ]
Line_19 $$ match = true-->Line_54 $$ match = false[ FD ]
Line_16 $$ String combinedPattern = getCombinedPattern(pattern, lookupPath, request)-->Line_20 $$ mappingInfo.addMatchedPattern(combinedPattern)[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_3 $$ String lookupPath = urlPathHelper.getLookupPathForRequest(request)[ FD ]
Line_3 $$ String lookupPath = urlPathHelper.getLookupPathForRequest(request)-->Line_4 $$ Comparator<String> pathComparator = pathMatcher.getPatternComparator(lookupPath)[ FD ]
Line_67 $$ resolvedMethodName = methodNameResolver.getHandlerMethodName(request)-->Line_69 $$ if (!resolvedMethodName.equals(oldMappedMethod.getName())) [ FD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_97 $$ return targetHandlerMethods.get(bestMappingMatch)[ CD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_42 $$ if (!mappingInfo.matchesRequestMethod(request)) [ FD ]
Line_12 $$ for (String pattern : mappingInfo.getPatterns()) -->Line_14 $$ pattern = "/" + pattern[ FD ]
Line_38 $$ if (mappingInfo.matches(request)) -->Line_42 $$ if (!mappingInfo.matchesRequestMethod(request)) [ CD ]
Line_18 $$ if (mappingInfo.matches(request)) -->Line_20 $$ mappingInfo.addMatchedPattern(combinedPattern)[ CD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_99 $$ if (!allowedMethods.isEmpty()) [ CD ]
Line_32 $$ for (String typeLevelPattern : typeLevelPatterns) -->Line_37 $$ if (getMatchingPattern(typeLevelPattern, lookupPath, useSuffixPattern) != null) [ FD ]
Line_14 $$ pattern = "/" + pattern-->Line_16 $$ String combinedPattern = getCombinedPattern(pattern, lookupPath, request)[ FD ]
Line_10 $$ boolean match = false-->Line_39 $$ match = true[ FD ]
Line_7 $$ String resolvedMethodName = null-->Line_69 $$ if (!resolvedMethodName.equals(oldMappedMethod.getName())) [ FD ]
Line_5 $$ Map<RequestSpecificMappingInfo, Method> targetHandlerMethods = new LinkedHashMap<RequestSpecificMappingInfo, Method>()-->Line_88 $$ if (!targetHandlerMethods.isEmpty()) [ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_57 $$ allowedMethods.addAll(mappingInfo.methodNames())[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_49 $$ mappingInfo.sortMatchedPatterns(pathComparator)[ FD ]
Line_39 $$ match = true-->Line_54 $$ match = false[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_67 $$ resolvedMethodName = methodNameResolver.getHandlerMethodName(request)[ FD ]
Line_12 $$ for (String pattern : mappingInfo.getPatterns()) -->Line_16 $$ String combinedPattern = getCombinedPattern(pattern, lookupPath, request)[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_16 $$ String combinedPattern = getCombinedPattern(pattern, lookupPath, request)[ FD ]
Line_7 $$ String resolvedMethodName = null-->Line_66 $$ if (resolvedMethodName == null) [ FD ]
Line_69 $$ if (!resolvedMethodName.equals(oldMappedMethod.getName())) -->Line_70 $$ oldMappedMethod = null[ CD ]
Line_73 $$ if (oldMappedMethod != null) -->Line_77 $$ targetHandlerMethods.remove(mappingInfo)[ CD ]
Line_64 $$ if (methodNameResolver != null && !mappingInfo.hasPatterns()) -->Line_65 $$ if (!oldMappedMethod.getName().equals(handlerMethod.getName())) [ CD ]
Line_56 $$ if (!mappingInfo.matchesRequestMethod(request)) -->Line_57 $$ allowedMethods.addAll(mappingInfo.methodNames())[ CD ]
Line_33 $$ if (!typeLevelPattern.startsWith("/")) -->Line_34 $$ typeLevelPattern = "/" + typeLevelPattern[ CD ]
Line_7 $$ String resolvedMethodName = null-->Line_53 $$ if (match && mappingInfo.getMethodCount() == 0 && mappingInfo.getParamCount() == 0 && resolvedMethodName != null && !resolvedMethodName.equals(handlerMethod.getName())) [ FD ]
Line_11 $$ if (mappingInfo.hasPatterns()) -->Line_29 $$ mappingInfo.sortMatchedPatterns(pathComparator)[ CD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_29 $$ mappingInfo.sortMatchedPatterns(pathComparator)[ FD ]
Line_73 $$ if (oldMappedMethod != null) -->Line_75 $$ oldMappedMethod = null[ CD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_22 $$ if (!mappingInfo.matchesRequestMethod(request)) [ FD ]
Line_63 $$ if (oldMappedMethod != null && oldMappedMethod != handlerMethod) -->Line_82 $$ if (oldMappedMethod != null) [ CD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_90 $$ RequestSpecificMappingInfoComparator requestMappingInfoComparator = new RequestSpecificMappingInfoComparator(pathComparator, request)[ CD ]
Line_72 $$ if (!resolvedMethodName.equals(handlerMethod.getName())) -->Line_73 $$ if (oldMappedMethod != null) [ CD ]
Line_90 $$ RequestSpecificMappingInfoComparator requestMappingInfoComparator = new RequestSpecificMappingInfoComparator(pathComparator, request)-->Line_91 $$ Collections.sort(matches, requestMappingInfoComparator)[ FD ]
Line_32 $$ for (String typeLevelPattern : typeLevelPatterns) -->Line_33 $$ if (!typeLevelPattern.startsWith("/")) [ FD ]
Line_89 $$ List<RequestSpecificMappingInfo> matches = new ArrayList<RequestSpecificMappingInfo>(targetHandlerMethods.keySet())-->Line_92 $$ RequestSpecificMappingInfo bestMappingMatch = matches.get(0)[ FD ]
Line_65 $$ if (!oldMappedMethod.getName().equals(handlerMethod.getName())) -->Line_66 $$ if (resolvedMethodName == null) [ CD ]
Line_36 $$ boolean useSuffixPattern = useSuffixPattern(request)-->Line_37 $$ if (getMatchingPattern(typeLevelPattern, lookupPath, useSuffixPattern) != null) [ FD ]
Line_6 $$ Set<String> allowedMethods = new LinkedHashSet<String>(7)-->Line_100 $$ throw new HttpRequestMethodNotSupportedException(request.getMethod(), StringUtils.toStringArray(allowedMethods))[ FD ]
Line_93 $$ String bestMatchedPath = bestMappingMatch.bestMatchedPattern()-->Line_95 $$ extractHandlerMethodUriTemplates(bestMatchedPath, lookupPath, request)[ FD ]
Line_70 $$ oldMappedMethod = null-->Line_74 $$ targetHandlerMethods.put(mappingInfo, oldMappedMethod)[ FD ]
Line_30 $$ if (useTypeLevelMapping(request)) -->Line_31 $$ String[] typeLevelPatterns = getTypeLevelMapping().value()[ CD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_6 $$ Set<String> allowedMethods = new LinkedHashSet<String>(7)[ CD ]
Line_16 $$ String combinedPattern = getCombinedPattern(pattern, lookupPath, request)-->Line_17 $$ if (combinedPattern != null) [ FD ]
Line_18 $$ if (mappingInfo.matches(request)) -->Line_22 $$ if (!mappingInfo.matchesRequestMethod(request)) [ CD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_74 $$ targetHandlerMethods.put(mappingInfo, oldMappedMethod)[ FD ]
Line_8 $$ for (Method handlerMethod : getHandlerMethods()) -->Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)[ FD ]
Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)-->Line_73 $$ if (oldMappedMethod != null) [ FD ]
Line_42 $$ if (!mappingInfo.matchesRequestMethod(request)) -->Line_43 $$ allowedMethods.addAll(mappingInfo.methodNames())[ CD ]
Line_30 $$ if (useTypeLevelMapping(request)) -->Line_49 $$ mappingInfo.sortMatchedPatterns(pathComparator)[ CD ]
Line_8 $$ for (Method handlerMethod : getHandlerMethods()) -->Line_72 $$ if (!resolvedMethodName.equals(handlerMethod.getName())) [ FD ]
Line_5 $$ Map<RequestSpecificMappingInfo, Method> targetHandlerMethods = new LinkedHashMap<RequestSpecificMappingInfo, Method>()-->Line_97 $$ return targetHandlerMethods.get(bestMappingMatch)[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_18 $$ if (mappingInfo.matches(request)) [ FD ]
Line_66 $$ if (resolvedMethodName == null) -->Line_67 $$ resolvedMethodName = methodNameResolver.getHandlerMethodName(request)[ CD ]
Line_38 $$ if (mappingInfo.matches(request)) -->Line_39 $$ match = true[ CD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_88 $$ if (!targetHandlerMethods.isEmpty()) [ CD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_53 $$ if (match && mappingInfo.getMethodCount() == 0 && mappingInfo.getParamCount() == 0 && resolvedMethodName != null && !resolvedMethodName.equals(handlerMethod.getName())) [ FD ]
Line_6 $$ Set<String> allowedMethods = new LinkedHashSet<String>(7)-->Line_57 $$ allowedMethods.addAll(mappingInfo.methodNames())[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_23 $$ allowedMethods.addAll(mappingInfo.methodNames())[ FD ]
Line_61 $$ if (match) -->Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)[ CD ]
Line_70 $$ oldMappedMethod = null-->Line_73 $$ if (oldMappedMethod != null) [ FD ]
Line_8 $$ for (Method handlerMethod : getHandlerMethods()) -->Line_65 $$ if (!oldMappedMethod.getName().equals(handlerMethod.getName())) [ FD ]
Line_70 $$ oldMappedMethod = null-->Line_75 $$ oldMappedMethod = null[ FD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_91 $$ Collections.sort(matches, requestMappingInfoComparator)[ CD ]
Line_8 $$ for (Method handlerMethod : getHandlerMethods()) -->Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))[ FD ]
Line_63 $$ if (oldMappedMethod != null && oldMappedMethod != handlerMethod) -->Line_64 $$ if (methodNameResolver != null && !mappingInfo.hasPatterns()) [ CD ]
Line_5 $$ Map<RequestSpecificMappingInfo, Method> targetHandlerMethods = new LinkedHashMap<RequestSpecificMappingInfo, Method>()-->Line_74 $$ targetHandlerMethods.put(mappingInfo, oldMappedMethod)[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)[ FD ]
Line_32 $$ for (String typeLevelPattern : typeLevelPatterns) -->Line_34 $$ typeLevelPattern = "/" + typeLevelPattern[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_20 $$ mappingInfo.addMatchedPattern(combinedPattern)[ FD ]
Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)-->Line_82 $$ if (oldMappedMethod != null) [ FD ]
Line_17 $$ if (combinedPattern != null) -->Line_18 $$ if (mappingInfo.matches(request)) [ CD ]
Line_70 $$ oldMappedMethod = null-->Line_82 $$ if (oldMappedMethod != null) [ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_3 $$ String lookupPath = urlPathHelper.getLookupPathForRequest(request)[ CD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_93 $$ String bestMatchedPath = bestMappingMatch.bestMatchedPattern()[ CD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_77 $$ targetHandlerMethods.remove(mappingInfo)[ FD ]
Line_37 $$ if (getMatchingPattern(typeLevelPattern, lookupPath, useSuffixPattern) != null) -->Line_38 $$ if (mappingInfo.matches(request)) [ CD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_7 $$ String resolvedMethodName = null[ CD ]
Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)-->Line_75 $$ oldMappedMethod = null[ FD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_89 $$ List<RequestSpecificMappingInfo> matches = new ArrayList<RequestSpecificMappingInfo>(targetHandlerMethods.keySet())[ CD ]
Line_65 $$ if (!oldMappedMethod.getName().equals(handlerMethod.getName())) -->Line_69 $$ if (!resolvedMethodName.equals(oldMappedMethod.getName())) [ CD ]
Line_89 $$ List<RequestSpecificMappingInfo> matches = new ArrayList<RequestSpecificMappingInfo>(targetHandlerMethods.keySet())-->Line_91 $$ Collections.sort(matches, requestMappingInfoComparator)[ FD ]
Line_3 $$ String lookupPath = urlPathHelper.getLookupPathForRequest(request)-->Line_95 $$ extractHandlerMethodUriTemplates(bestMatchedPath, lookupPath, request)[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_100 $$ throw new HttpRequestMethodNotSupportedException(request.getMethod(), StringUtils.toStringArray(allowedMethods))[ FD ]
Line_53 $$ if (match && mappingInfo.getMethodCount() == 0 && mappingInfo.getParamCount() == 0 && resolvedMethodName != null && !resolvedMethodName.equals(handlerMethod.getName())) -->Line_56 $$ if (!mappingInfo.matchesRequestMethod(request)) [ CD ]
Line_94 $$ if (bestMatchedPath != null) -->Line_95 $$ extractHandlerMethodUriTemplates(bestMatchedPath, lookupPath, request)[ CD ]
Line_10 $$ boolean match = false-->Line_54 $$ match = false[ FD ]
Line_34 $$ typeLevelPattern = "/" + typeLevelPattern-->Line_37 $$ if (getMatchingPattern(typeLevelPattern, lookupPath, useSuffixPattern) != null) [ FD ]
Line_3 $$ String lookupPath = urlPathHelper.getLookupPathForRequest(request)-->Line_16 $$ String combinedPattern = getCombinedPattern(pattern, lookupPath, request)[ FD ]
Line_38 $$ if (mappingInfo.matches(request)) -->Line_40 $$ mappingInfo.addMatchedPattern(typeLevelPattern)[ CD ]
Line_7 $$ String resolvedMethodName = null-->Line_72 $$ if (!resolvedMethodName.equals(handlerMethod.getName())) [ FD ]
Line_19 $$ match = true-->Line_39 $$ match = true[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_18 $$ if (mappingInfo.matches(request)) [ FD ]
Line_53 $$ if (match && mappingInfo.getMethodCount() == 0 && mappingInfo.getParamCount() == 0 && resolvedMethodName != null && !resolvedMethodName.equals(handlerMethod.getName())) -->Line_54 $$ match = false[ CD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_102 $$ throw new NoSuchRequestHandlingMethodException(lookupPath, request.getMethod(), request.getParameterMap())[ FD ]
Line_10 $$ boolean match = false-->Line_19 $$ match = true[ FD ]
Line_8 $$ for (Method handlerMethod : getHandlerMethods()) -->Line_53 $$ if (match && mappingInfo.getMethodCount() == 0 && mappingInfo.getParamCount() == 0 && resolvedMethodName != null && !resolvedMethodName.equals(handlerMethod.getName())) [ FD ]
Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)-->Line_65 $$ if (!oldMappedMethod.getName().equals(handlerMethod.getName())) [ FD ]
Line_65 $$ if (!oldMappedMethod.getName().equals(handlerMethod.getName())) -->Line_72 $$ if (!resolvedMethodName.equals(handlerMethod.getName())) [ CD ]
Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)-->Line_69 $$ if (!resolvedMethodName.equals(oldMappedMethod.getName())) [ FD ]
Line_75 $$ oldMappedMethod = null-->Line_82 $$ if (oldMappedMethod != null) [ FD ]
Line_93 $$ String bestMatchedPath = bestMappingMatch.bestMatchedPattern()-->Line_94 $$ if (bestMatchedPath != null) [ FD ]
Line_5 $$ Map<RequestSpecificMappingInfo, Method> targetHandlerMethods = new LinkedHashMap<RequestSpecificMappingInfo, Method>()-->Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)[ FD ]
Line_32 $$ for (String typeLevelPattern : typeLevelPatterns) -->Line_40 $$ mappingInfo.addMatchedPattern(typeLevelPattern)[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_38 $$ if (mappingInfo.matches(request)) [ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_56 $$ if (!mappingInfo.matchesRequestMethod(request)) [ FD ]
Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)-->Line_74 $$ targetHandlerMethods.put(mappingInfo, oldMappedMethod)[ FD ]
Line_6 $$ Set<String> allowedMethods = new LinkedHashSet<String>(7)-->Line_99 $$ if (!allowedMethods.isEmpty()) [ FD ]
Line_92 $$ RequestSpecificMappingInfo bestMappingMatch = matches.get(0)-->Line_97 $$ return targetHandlerMethods.get(bestMappingMatch)[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_36 $$ boolean useSuffixPattern = useSuffixPattern(request)[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_12 $$ for (String pattern : mappingInfo.getPatterns()) [ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_30 $$ if (useTypeLevelMapping(request)) [ FD ]
Line_6 $$ Set<String> allowedMethods = new LinkedHashSet<String>(7)-->Line_43 $$ allowedMethods.addAll(mappingInfo.methodNames())[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_4 $$ Comparator<String> pathComparator = pathMatcher.getPatternComparator(lookupPath)[ CD ]
Line_61 $$ if (match) -->Line_63 $$ if (oldMappedMethod != null && oldMappedMethod != handlerMethod) [ CD ]
Line_22 $$ if (!mappingInfo.matchesRequestMethod(request)) -->Line_23 $$ allowedMethods.addAll(mappingInfo.methodNames())[ CD ]
Line_30 $$ if (useTypeLevelMapping(request)) -->Line_53 $$ if (match && mappingInfo.getMethodCount() == 0 && mappingInfo.getParamCount() == 0 && resolvedMethodName != null && !resolvedMethodName.equals(handlerMethod.getName())) [ CD ]
Line_13 $$ if (!hasTypeLevelMapping() && !pattern.startsWith("/")) -->Line_14 $$ pattern = "/" + pattern[ CD ]
Line_12 $$ for (String pattern : mappingInfo.getPatterns()) -->Line_13 $$ if (!hasTypeLevelMapping() && !pattern.startsWith("/")) [ FD ]
Line_18 $$ if (mappingInfo.matches(request)) -->Line_19 $$ match = true[ CD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_38 $$ if (mappingInfo.matches(request)) [ FD ]
Line_62 $$ Method oldMappedMethod = targetHandlerMethods.put(mappingInfo, handlerMethod)-->Line_70 $$ oldMappedMethod = null[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_40 $$ mappingInfo.addMatchedPattern(typeLevelPattern)[ FD ]
Line_5 $$ Map<RequestSpecificMappingInfo, Method> targetHandlerMethods = new LinkedHashMap<RequestSpecificMappingInfo, Method>()-->Line_89 $$ List<RequestSpecificMappingInfo> matches = new ArrayList<RequestSpecificMappingInfo>(targetHandlerMethods.keySet())[ FD ]
Line_73 $$ if (oldMappedMethod != null) -->Line_74 $$ targetHandlerMethods.put(mappingInfo, oldMappedMethod)[ CD ]
Line_34 $$ typeLevelPattern = "/" + typeLevelPattern-->Line_40 $$ mappingInfo.addMatchedPattern(typeLevelPattern)[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_95 $$ extractHandlerMethodUriTemplates(bestMatchedPath, lookupPath, request)[ FD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_92 $$ RequestSpecificMappingInfo bestMappingMatch = matches.get(0)[ CD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_42 $$ if (!mappingInfo.matchesRequestMethod(request)) [ FD ]
Line_7 $$ String resolvedMethodName = null-->Line_67 $$ resolvedMethodName = methodNameResolver.getHandlerMethodName(request)[ FD ]
Line_5 $$ Map<RequestSpecificMappingInfo, Method> targetHandlerMethods = new LinkedHashMap<RequestSpecificMappingInfo, Method>()-->Line_77 $$ targetHandlerMethods.remove(mappingInfo)[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_64 $$ if (methodNameResolver != null && !mappingInfo.hasPatterns()) [ FD ]
Line_92 $$ RequestSpecificMappingInfo bestMappingMatch = matches.get(0)-->Line_93 $$ String bestMatchedPath = bestMappingMatch.bestMatchedPattern()[ FD ]
Line_88 $$ if (!targetHandlerMethods.isEmpty()) -->Line_94 $$ if (bestMatchedPath != null) [ CD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_43 $$ allowedMethods.addAll(mappingInfo.methodNames())[ FD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_22 $$ if (!mappingInfo.matchesRequestMethod(request)) [ FD ]
Line_11 $$ if (mappingInfo.hasPatterns()) -->Line_30 $$ if (useTypeLevelMapping(request)) [ CD ]
Line_2 $$ public Method resolveHandlerMethod(HttpServletRequest request) throws ServletException -->Line_5 $$ Map<RequestSpecificMappingInfo, Method> targetHandlerMethods = new LinkedHashMap<RequestSpecificMappingInfo, Method>()[ CD ]
Line_3 $$ String lookupPath = urlPathHelper.getLookupPathForRequest(request)-->Line_37 $$ if (getMatchingPattern(typeLevelPattern, lookupPath, useSuffixPattern) != null) [ FD ]
Line_4 $$ Comparator<String> pathComparator = pathMatcher.getPatternComparator(lookupPath)-->Line_49 $$ mappingInfo.sortMatchedPatterns(pathComparator)[ FD ]
Line_4 $$ Comparator<String> pathComparator = pathMatcher.getPatternComparator(lookupPath)-->Line_29 $$ mappingInfo.sortMatchedPatterns(pathComparator)[ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_11 $$ if (mappingInfo.hasPatterns()) [ FD ]
Line_9 $$ RequestSpecificMappingInfo mappingInfo = new RequestSpecificMappingInfo(this.mappings.get(handlerMethod))-->Line_56 $$ if (!mappingInfo.matchesRequestMethod(request)) [ FD ]
