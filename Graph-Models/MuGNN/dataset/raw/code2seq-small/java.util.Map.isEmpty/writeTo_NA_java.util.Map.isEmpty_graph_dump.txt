Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_3 $$ totalStats.writeTo(out)[ CD ]
Line_5 $$ if (groupStats == null || groupStats.isEmpty()) -->Line_9 $$ out.writeVInt(groupStats.size())[ CD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_9 $$ out.writeVInt(groupStats.size())[ FD ]
Line_10 $$ for (Map.Entry<String, Stats> entry : groupStats.entrySet()) -->Line_11 $$ out.writeString(entry.getKey())[ FD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_3 $$ totalStats.writeTo(out)[ FD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_12 $$ entry.getValue().writeTo(out)[ FD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_5 $$ if (groupStats == null || groupStats.isEmpty()) [ CD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_4 $$ out.writeVLong(openContexts)[ CD ]
Line_5 $$ if (groupStats == null || groupStats.isEmpty()) -->Line_8 $$ out.writeBoolean(true)[ CD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_8 $$ out.writeBoolean(true)[ FD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_11 $$ out.writeString(entry.getKey())[ FD ]
Line_10 $$ for (Map.Entry<String, Stats> entry : groupStats.entrySet()) -->Line_12 $$ entry.getValue().writeTo(out)[ FD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_6 $$ out.writeBoolean(false)[ FD ]
Line_2 $$ public void writeTo(StreamOutput out) throws IOException -->Line_4 $$ out.writeVLong(openContexts)[ FD ]
Line_5 $$ if (groupStats == null || groupStats.isEmpty()) -->Line_6 $$ out.writeBoolean(false)[ CD ]
