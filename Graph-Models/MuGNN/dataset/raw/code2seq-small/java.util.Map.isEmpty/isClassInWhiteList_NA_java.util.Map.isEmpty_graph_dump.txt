Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_27 $$ return classes != null && classes.contains(name)[ CD ]
Line_21 $$ if (myClassesWhiteList.isEmpty()) -->Line_22 $$ return true[ CD ]
Line_7 $$ if (cachedWhiteList.exists()) -->Line_15 $$ myClassesWhiteList = AppEngineSdkUtil.computeWhiteList(getToolsApiJarFile())[ CD ]
Line_5 $$ if (myClassesWhiteList == null) -->Line_6 $$ File cachedWhiteList = getCachedWhiteListFile()[ CD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_3 $$ if (!isValid())[ CD ]
Line_6 $$ File cachedWhiteList = getCachedWhiteListFile()-->Line_7 $$ if (cachedWhiteList.exists()) [ FD ]
Line_5 $$ if (myClassesWhiteList == null) -->Line_7 $$ if (cachedWhiteList.exists()) [ CD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_24 $$ final String packageName = StringUtil.getPackageName(className)[ FD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_5 $$ if (myClassesWhiteList == null) [ CD ]
Line_24 $$ final String packageName = StringUtil.getPackageName(className)-->Line_26 $$ final Set<String> classes = myClassesWhiteList.get(packageName)[ FD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_21 $$ if (myClassesWhiteList.isEmpty()) [ CD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_25 $$ final String name = StringUtil.getShortName(className)[ CD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_24 $$ final String packageName = StringUtil.getPackageName(className)[ CD ]
Line_16 $$ if (!myClassesWhiteList.isEmpty()) -->Line_17 $$ AppEngineSdkUtil.saveWhiteList(cachedWhiteList, myClassesWhiteList)[ CD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_26 $$ final Set<String> classes = myClassesWhiteList.get(packageName)[ CD ]
Line_6 $$ File cachedWhiteList = getCachedWhiteListFile()-->Line_17 $$ AppEngineSdkUtil.saveWhiteList(cachedWhiteList, myClassesWhiteList)[ FD ]
Line_25 $$ final String name = StringUtil.getShortName(className)-->Line_27 $$ return classes != null && classes.contains(name)[ FD ]
Line_7 $$ if (cachedWhiteList.exists()) -->Line_16 $$ if (!myClassesWhiteList.isEmpty()) [ CD ]
Line_2 $$ public boolean isClassInWhiteList(@NotNull String className) -->Line_25 $$ final String name = StringUtil.getShortName(className)[ FD ]
Line_26 $$ final Set<String> classes = myClassesWhiteList.get(packageName)-->Line_27 $$ return classes != null && classes.contains(name)[ FD ]
Line_3 $$ if (!isValid())-->Line_4 $$ return true[ CD ]
Line_6 $$ File cachedWhiteList = getCachedWhiteListFile()-->Line_9 $$ myClassesWhiteList = AppEngineSdkUtil.loadWhiteList(cachedWhiteList)[ FD ]
