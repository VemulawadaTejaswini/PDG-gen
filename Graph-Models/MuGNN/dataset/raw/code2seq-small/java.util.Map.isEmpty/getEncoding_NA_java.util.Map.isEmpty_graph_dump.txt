Line_18 $$ String encoding = myUrlToEncoding.get(JpsPathUtil.pathToUrl(FileUtilRt.toSystemIndependentName(current.getPath())))-->Line_19 $$ if (encoding != null) [ FD ]
Line_28 $$ final JpsModel model = getModel()-->Line_30 $$ return JpsEncodingConfigurationService.getInstance().getGlobalEncoding(model.getGlobal())[ FD ]
Line_7 $$ String encoding = XmlCharsetDetector.extractXmlEncodingFromProlog(FileUtil.loadFileBytes(file))-->Line_8 $$ if (encoding != null) [ FD ]
Line_16 $$ File current = file-->Line_17 $$ while (current != null) [ FD ]
Line_25 $$ if (myProjectEncoding != null) -->Line_26 $$ return myProjectEncoding[ CD ]
Line_22 $$ current = FileUtilRt.getParentFile(current)-->Line_17 $$ while (current != null) [ FD ]
Line_17 $$ while (current != null) -->Line_22 $$ current = FileUtilRt.getParentFile(current)[ CD ]
Line_17 $$ while (current != null) -->Line_19 $$ if (encoding != null) [ CD ]
Line_8 $$ if (encoding != null) -->Line_9 $$ return encoding[ CD ]
Line_16 $$ File current = file-->Line_22 $$ current = FileUtilRt.getParentFile(current)[ FD ]
Line_7 $$ String encoding = XmlCharsetDetector.extractXmlEncodingFromProlog(FileUtil.loadFileBytes(file))-->Line_19 $$ if (encoding != null) [ FD ]
Line_22 $$ current = FileUtilRt.getParentFile(current)-->Line_18 $$ String encoding = myUrlToEncoding.get(JpsPathUtil.pathToUrl(FileUtilRt.toSystemIndependentName(current.getPath())))[ FD ]
Line_16 $$ File current = file-->Line_18 $$ String encoding = myUrlToEncoding.get(JpsPathUtil.pathToUrl(FileUtilRt.toSystemIndependentName(current.getPath())))[ FD ]
Line_17 $$ while (current != null) -->Line_18 $$ String encoding = myUrlToEncoding.get(JpsPathUtil.pathToUrl(FileUtilRt.toSystemIndependentName(current.getPath())))[ CD ]
Line_15 $$ if (!myUrlToEncoding.isEmpty()) -->Line_16 $$ File current = file[ CD ]
Line_19 $$ if (encoding != null) -->Line_20 $$ return encoding[ CD ]
Line_15 $$ if (!myUrlToEncoding.isEmpty()) -->Line_17 $$ while (current != null) [ CD ]
