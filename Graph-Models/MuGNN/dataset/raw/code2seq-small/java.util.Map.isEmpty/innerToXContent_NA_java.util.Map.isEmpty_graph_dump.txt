Line_40 $$ if (preTag != null) -->Line_43 $$ builder.field("post_tag", postTag)[ CD ]
Line_4 $$ if (realWordErrorLikelihood != null) -->Line_5 $$ builder.field("real_word_error_likelihood", realWordErrorLikelihood)[ CD ]
Line_19 $$ if (forceUnigrams != null) -->Line_20 $$ builder.field("force_unigrams", forceUnigrams)[ CD ]
Line_40 $$ if (preTag != null) -->Line_41 $$ builder.startObject("highlight")[ CD ]
Line_46 $$ if (collateQuery != null) -->Line_47 $$ builder.startObject("collate")[ CD ]
Line_16 $$ if (gramSize != null) -->Line_17 $$ builder.field("gram_size", gramSize)[ CD ]
Line_35 $$ if (model != null) -->Line_38 $$ builder.endObject()[ CD ]
Line_46 $$ if (collateQuery != null) -->Line_55 $$ builder.endObject()[ CD ]
Line_46 $$ if (collateQuery != null) -->Line_48 $$ builder.field("query", collateQuery)[ CD ]
Line_22 $$ if (tokenLimit != null) -->Line_23 $$ builder.field("token_limit", tokenLimit)[ CD ]
Line_49 $$ if (collateParams != null) -->Line_50 $$ builder.field("params", collateParams)[ CD ]
Line_46 $$ if (collateQuery != null) -->Line_52 $$ if (collatePrune != null) [ CD ]
Line_27 $$ for (Entry<String, List<CandidateGenerator>> entry : entrySet) -->Line_29 $$ for (CandidateGenerator generator : entry.getValue()) [ FD ]
Line_27 $$ for (Entry<String, List<CandidateGenerator>> entry : entrySet) -->Line_28 $$ builder.startArray(entry.getKey())[ FD ]
Line_40 $$ if (preTag != null) -->Line_44 $$ builder.endObject()[ CD ]
Line_46 $$ if (collateQuery != null) -->Line_49 $$ if (collateParams != null) [ CD ]
Line_40 $$ if (preTag != null) -->Line_42 $$ builder.field("pre_tag", preTag)[ CD ]
Line_35 $$ if (model != null) -->Line_37 $$ model.toXContent(builder, params)[ CD ]
Line_35 $$ if (model != null) -->Line_36 $$ builder.startObject("smoothing")[ CD ]
Line_29 $$ for (CandidateGenerator generator : entry.getValue()) -->Line_30 $$ generator.toXContent(builder, params)[ FD ]
Line_10 $$ if (separator != null) -->Line_11 $$ builder.field("separator", separator)[ CD ]
Line_52 $$ if (collatePrune != null) -->Line_53 $$ builder.field("prune", collatePrune.booleanValue())[ CD ]
Line_13 $$ if (maxErrors != null) -->Line_14 $$ builder.field("max_errors", maxErrors)[ CD ]
Line_25 $$ if (!generators.isEmpty()) -->Line_26 $$ Set<Entry<String, List<CandidateGenerator>>> entrySet = generators.entrySet()[ CD ]
Line_7 $$ if (confidence != null) -->Line_8 $$ builder.field("confidence", confidence)[ CD ]
