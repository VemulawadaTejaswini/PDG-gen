Line_10 $$ CustomJspBag currentCustomJspBag = entry.getValue()-->Line_11 $$ if (!currentCustomJspBag.isCustomJspGlobal()) [ FD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_4 $$ for (String customJsp : customJspBag.getCustomJsps()) [ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_31 $$ sb.append("Colliding JSP files in ")[ FD ]
Line_10 $$ CustomJspBag currentCustomJspBag = entry.getValue()-->Line_18 $$ String currentPortalJsp = getPortalJsp(currentCustomJsp, currentCustomJspBag.getCustomJspDir())[ FD ]
Line_5 $$ String portalJsp = getPortalJsp(customJsp, customJspBag.getCustomJspDir())-->Line_6 $$ customJsps.add(portalJsp)[ FD ]
Line_9 $$ for (Map.Entry<ServiceReference<CustomJspBag>, CustomJspBag> entry : _customJspBagsMap.entrySet()) -->Line_14 $$ ServiceReference<CustomJspBag> serviceReference = entry.getKey()[ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_37 $$ sb.append(" with ")[ FD ]
Line_3 $$ Set<String> customJsps = new HashSet()-->Line_19 $$ if (customJsps.contains(currentPortalJsp)) [ FD ]
Line_24 $$ if (conflictingCustomJsps.isEmpty()) -->Line_25 $$ return[ CD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_3 $$ Set<String> customJsps = new HashSet()[ CD ]
Line_9 $$ for (Map.Entry<ServiceReference<CustomJspBag>, CustomJspBag> entry : _customJspBagsMap.entrySet()) -->Line_10 $$ CustomJspBag currentCustomJspBag = entry.getValue()[ FD ]
Line_18 $$ String currentPortalJsp = getPortalJsp(currentCustomJsp, currentCustomJspBag.getCustomJspDir())-->Line_19 $$ if (customJsps.contains(currentPortalJsp)) [ FD ]
Line_8 $$ Map<String, String> conflictingCustomJsps = new HashMap()-->Line_20 $$ conflictingCustomJsps.put(currentPortalJsp, contextName)[ FD ]
Line_28 $$ if (_log.isDebugEnabled()) -->Line_34 $$ int i = 0[ CD ]
Line_14 $$ ServiceReference<CustomJspBag> serviceReference = entry.getKey()-->Line_15 $$ String contextName = GetterUtil.getString(serviceReference.getProperty("context.name"))[ FD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_5 $$ String portalJsp = getPortalJsp(customJsp, customJspBag.getCustomJspDir())[ FD ]
Line_19 $$ if (customJsps.contains(currentPortalJsp)) -->Line_20 $$ conflictingCustomJsps.put(currentPortalJsp, contextName)[ CD ]
Line_28 $$ if (_log.isDebugEnabled()) -->Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)[ CD ]
Line_34 $$ int i = 0-->Line_42 $$ i++[ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_44 $$ log.debug(sb.toString())[ FD ]
Line_28 $$ if (_log.isDebugEnabled()) -->Line_32 $$ sb.append(contextId)[ CD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_8 $$ Map<String, String> conflictingCustomJsps = new HashMap()[ CD ]
Line_17 $$ for (String currentCustomJsp : currentCustomJsps) -->Line_18 $$ String currentPortalJsp = getPortalJsp(currentCustomJsp, currentCustomJspBag.getCustomJspDir())[ FD ]
Line_28 $$ if (_log.isDebugEnabled()) -->Line_44 $$ log.debug(sb.toString())[ CD ]
Line_28 $$ if (_log.isDebugEnabled()) -->Line_29 $$ Log log = SanitizerLogWrapper.allowCRLF(_log)[ CD ]
Line_9 $$ for (Map.Entry<ServiceReference<CustomJspBag>, CustomJspBag> entry : _customJspBagsMap.entrySet()) -->Line_38 $$ sb.append(entry.getValue())[ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_40 $$ sb.append(StringPool.NEW_LINE)[ FD ]
Line_8 $$ Map<String, String> conflictingCustomJsps = new HashMap()-->Line_35 $$ for (Map.Entry<String, String> entry : conflictingCustomJsps.entrySet()) [ FD ]
Line_29 $$ Log log = SanitizerLogWrapper.allowCRLF(_log)-->Line_44 $$ log.debug(sb.toString())[ FD ]
Line_28 $$ if (_log.isDebugEnabled()) -->Line_31 $$ sb.append("Colliding JSP files in ")[ CD ]
Line_28 $$ if (_log.isDebugEnabled()) -->Line_33 $$ sb.append(StringPool.NEW_LINE)[ CD ]
Line_8 $$ Map<String, String> conflictingCustomJsps = new HashMap()-->Line_24 $$ if (conflictingCustomJsps.isEmpty()) [ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_38 $$ sb.append(entry.getValue())[ FD ]
Line_15 $$ String contextName = GetterUtil.getString(serviceReference.getProperty("context.name"))-->Line_20 $$ conflictingCustomJsps.put(currentPortalJsp, contextName)[ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_36 $$ sb.append(entry.getKey())[ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_33 $$ sb.append(StringPool.NEW_LINE)[ FD ]
Line_8 $$ Map<String, String> conflictingCustomJsps = new HashMap()-->Line_39 $$ if ((i + 1) < conflictingCustomJsps.size()) [ FD ]
Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)-->Line_32 $$ sb.append(contextId)[ FD ]
Line_10 $$ CustomJspBag currentCustomJspBag = entry.getValue()-->Line_16 $$ List<String> currentCustomJsps = currentCustomJspBag.getCustomJsps()[ FD ]
Line_18 $$ String currentPortalJsp = getPortalJsp(currentCustomJsp, currentCustomJspBag.getCustomJspDir())-->Line_20 $$ conflictingCustomJsps.put(currentPortalJsp, contextName)[ FD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_32 $$ sb.append(contextId)[ FD ]
Line_4 $$ for (String customJsp : customJspBag.getCustomJsps()) -->Line_5 $$ String portalJsp = getPortalJsp(customJsp, customJspBag.getCustomJspDir())[ FD ]
Line_39 $$ if ((i + 1) < conflictingCustomJsps.size()) -->Line_40 $$ sb.append(StringPool.NEW_LINE)[ CD ]
Line_9 $$ for (Map.Entry<ServiceReference<CustomJspBag>, CustomJspBag> entry : _customJspBagsMap.entrySet()) -->Line_36 $$ sb.append(entry.getKey())[ FD ]
Line_8 $$ Map<String, String> conflictingCustomJsps = new HashMap()-->Line_30 $$ StringBundler sb = new StringBundler(conflictingCustomJsps.size() * 4 + 2)[ FD ]
Line_3 $$ Set<String> customJsps = new HashSet()-->Line_6 $$ customJsps.add(portalJsp)[ FD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_24 $$ if (conflictingCustomJsps.isEmpty()) [ CD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_28 $$ if (_log.isDebugEnabled()) [ CD ]
Line_2 $$ protected void verifyCustomJsps(String contextId, CustomJspBag customJspBag) throws DuplicateCustomJspException -->Line_27 $$ _log.error(contextId + " conflicts with the installed hooks")[ CD ]
