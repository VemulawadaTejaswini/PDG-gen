Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_65 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_38 $$ String regularParameter = "regularParameter"-->Line_50 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_45 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_24 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, new HashMap<String, List<String>>()))-->Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_38 $$ String regularParameter = "regularParameter"-->Line_40 $$ regularParameters.put(regularParameter, parameters)[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_52 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_58 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest[ FD ]
Line_45 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_59 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()[ FD ]
Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_78 $$ Assert.assertEquals(ContentTypes.MULTIPART_FORM_DATA, populateHttpServletRequest.getContentType())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_26 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_45 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_61 $$ Assert.assertTrue(populatedFileParameters.isEmpty())[ FD ]
Line_60 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_62 $$ Assert.assertEquals(1, populatedRegularParameters.size())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_53 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_21 $$ String fileParameter = "fileParameter"-->Line_48 $$ Assert.assertSame(fileItems, populatedFileParameters.get(fileParameter))[ FD ]
Line_21 $$ String fileParameter = "fileParameter"-->Line_31 $$ Assert.assertSame(fileItems, populatedFileParameters.get(fileParameter))[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_51 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_63 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_66 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_34 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_66 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_69 $$ Random random = new Random()-->Line_70 $$ random.nextBytes(content)[ FD ]
Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_77 $$ Assert.assertEquals(content.length, populateHttpServletRequest.getContentLength())[ FD ]
Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_31 $$ Assert.assertSame(fileItems, populatedFileParameters.get(fileParameter))[ FD ]
Line_22 $$ FileItem[] fileItems = new FileItem[0]-->Line_48 $$ Assert.assertSame(fileItems, populatedFileParameters.get(fileParameter))[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_44 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_51 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_15 $$ Assert.assertSame(AgentHttpServletRequestWrapper.class, populateHttpServletRequest.getClass())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_57 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_32 $$ Assert.assertTrue(populatedRegularParameters.isEmpty())[ FD ]
Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_48 $$ Assert.assertSame(fileItems, populatedFileParameters.get(fileParameter))[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_57 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_65 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_35 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_35 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_51 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_52 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_47 $$ Assert.assertEquals(1, populatedFileParameters.size())[ FD ]
Line_22 $$ FileItem[] fileItems = new FileItem[0]-->Line_31 $$ Assert.assertSame(fileItems, populatedFileParameters.get(fileParameter))[ FD ]
Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_60 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_22 $$ FileItem[] fileItems = new FileItem[0]-->Line_23 $$ fileParameters.put(fileParameter, fileItems)[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_57 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_41 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, regularParameters))[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_77 $$ Assert.assertEquals(content.length, populateHttpServletRequest.getContentLength())[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_45 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_77 $$ Assert.assertEquals(content.length, populateHttpServletRequest.getContentLength())[ FD ]
Line_39 $$ List<String> parameters = new ArrayList()-->Line_50 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_53 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_44 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_59 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_34 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_63 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()-->Line_80 $$ Assert.assertNotNull(servletInputStream)[ FD ]
Line_24 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, new HashMap<String, List<String>>()))-->Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_43 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_24 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, new HashMap<String, List<String>>()))-->Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_45 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_48 $$ Assert.assertSame(fileItems, populatedFileParameters.get(fileParameter))[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_64 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_59 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_26 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_15 $$ Assert.assertSame(AgentHttpServletRequestWrapper.class, populateHttpServletRequest.getClass())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_18 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_43 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_17 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_52 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_44 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_60 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_26 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_41 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, regularParameters))-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_64 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_78 $$ Assert.assertEquals(ContentTypes.MULTIPART_FORM_DATA, populateHttpServletRequest.getContentType())[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_52 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_78 $$ Assert.assertEquals(ContentTypes.MULTIPART_FORM_DATA, populateHttpServletRequest.getContentType())[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_24 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, new HashMap<String, List<String>>()))[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_43 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_78 $$ Assert.assertEquals(ContentTypes.MULTIPART_FORM_DATA, populateHttpServletRequest.getContentType())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_33 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_45 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_47 $$ Assert.assertEquals(1, populatedFileParameters.size())[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_72 $$ spiAgentRequest = new SPIAgentRequest(new HttpServletRequestWrapper(_mockHttpServletRequest))[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_10 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_16 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_53 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_66 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_62 $$ Assert.assertEquals(1, populatedRegularParameters.size())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_33 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_57 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_24 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, new HashMap<String, List<String>>()))-->Line_41 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, regularParameters))[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_8 $$ Assert.assertSame(AgentHttpServletRequestWrapper.class, populateHttpServletRequest.getClass())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_24 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, new HashMap<String, List<String>>()))-->Line_72 $$ spiAgentRequest = new SPIAgentRequest(new HttpServletRequestWrapper(_mockHttpServletRequest))[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()[ FD ]
Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_30 $$ Assert.assertEquals(1, populatedFileParameters.size())[ FD ]
Line_41 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, regularParameters))-->Line_72 $$ spiAgentRequest = new SPIAgentRequest(new HttpServletRequestWrapper(_mockHttpServletRequest))[ FD ]
Line_44 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_45 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_60 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_78 $$ Assert.assertEquals(ContentTypes.MULTIPART_FORM_DATA, populateHttpServletRequest.getContentType())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_9 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_17 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_58 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_60 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_50 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_77 $$ Assert.assertEquals(content.length, populateHttpServletRequest.getContentLength())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_77 $$ Assert.assertEquals(content.length, populateHttpServletRequest.getContentLength())[ FD ]
Line_72 $$ spiAgentRequest = new SPIAgentRequest(new HttpServletRequestWrapper(_mockHttpServletRequest))-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_21 $$ String fileParameter = "fileParameter"-->Line_23 $$ fileParameters.put(fileParameter, fileItems)[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_65 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_53 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_39 $$ List<String> parameters = new ArrayList()-->Line_40 $$ regularParameters.put(regularParameter, parameters)[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_64 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_35 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_65 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_34 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_44 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_41 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, regularParameters))-->Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()-->Line_81 $$ Assert.assertArrayEquals(content, FileUtil.getBytes(servletInputStream))[ FD ]
Line_6 $$ SPIAgentRequest spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, null, null))-->Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_29 $$ Map<String, List<String>> populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_49 $$ Assert.assertEquals(1, populatedRegularParameters.size())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_16 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_50 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_57 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_66 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_18 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_49 $$ Assert.assertEquals(1, populatedRegularParameters.size())[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_43 $$ Assert.assertSame(UploadServletRequestImpl.class, populateHttpServletRequest.getClass())[ FD ]
Line_39 $$ List<String> parameters = new ArrayList()-->Line_63 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_79 $$ ServletInputStream servletInputStream = populateHttpServletRequest.getInputStream()[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_78 $$ Assert.assertEquals(ContentTypes.MULTIPART_FORM_DATA, populateHttpServletRequest.getContentType())[ FD ]
Line_38 $$ String regularParameter = "regularParameter"-->Line_63 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_33 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_66 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_44 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_58 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_41 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, regularParameters))-->Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_59 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_65 $$ Assert.assertNull(populateHttpServletRequest.getContentType())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_64 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_27 $$ UploadServletRequestImpl uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_60 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()[ FD ]
Line_46 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_62 $$ Assert.assertEquals(1, populatedRegularParameters.size())[ FD ]
Line_28 $$ Map<String, FileItem[]> populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_61 $$ Assert.assertTrue(populatedFileParameters.isEmpty())[ FD ]
Line_7 $$ HttpServletRequest populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_11 $$ Assert.assertNull(populateHttpServletRequest.getInputStream())[ FD ]
Line_59 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()-->Line_61 $$ Assert.assertTrue(populatedFileParameters.isEmpty())[ FD ]
Line_24 $$ spiAgentRequest = new SPIAgentRequest(new UploadServletRequestImpl(_mockHttpServletRequest, fileParameters, new HashMap<String, List<String>>()))-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_25 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_60 $$ populatedRegularParameters = uploadServletRequestImpl.getRegularParameterMap()-->Line_63 $$ Assert.assertSame(parameters, populatedRegularParameters.get(regularParameter))[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_64 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
Line_56 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_77 $$ Assert.assertEquals(content.length, populateHttpServletRequest.getContentLength())[ FD ]
Line_58 $$ uploadServletRequestImpl = (UploadServletRequestImpl) populateHttpServletRequest-->Line_59 $$ populatedFileParameters = uploadServletRequestImpl.getMultipartParameterMap()[ FD ]
Line_42 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_76 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())[ FD ]
Line_14 $$ populateHttpServletRequest = spiAgentRequest.populateRequest(new MockHttpServletRequest())-->Line_51 $$ Assert.assertEquals(-1, populateHttpServletRequest.getContentLength())[ FD ]
