Line_4 $$ final Ref<AWTEventListener> listener = new Ref<AWTEventListener>()-->Line_13 $$ Toolkit.getDefaultToolkit().removeAWTEventListener(listener.get())[ FD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_27 $$ SimpleTimer.getInstance().setUp(new Runnable() [ CD ]
Line_5 $$ listener.set(new AWTEventListener() -->Line_9 $$ if (event.getID() == WindowEvent.WINDOW_ACTIVATED) [ CD ]
Line_4 $$ final Ref<AWTEventListener> listener = new Ref<AWTEventListener>()-->Line_5 $$ listener.set(new AWTEventListener() [ FD ]
Line_9 $$ if (event.getID() == WindowEvent.WINDOW_ACTIVATED) -->Line_11 $$ if (wnd instanceof JDialog) [ CD ]
Line_9 $$ if (event.getID() == WindowEvent.WINDOW_ACTIVATED) -->Line_10 $$ final Window wnd = ((WindowEvent) event).getWindow()[ CD ]
Line_14 $$ SwingUtilities.invokeLater(new Runnable() -->Line_18 $$ getUiReady(context).notify(result)[ CD ]
Line_3 $$ final AsyncResult<String> result = new AsyncResult<String>()-->Line_32 $$ if (!result.isProcessed()) [ FD ]
Line_32 $$ if (!result.isProcessed()) -->Line_33 $$ result.setRejected("Timed out waiting for window: " + title)[ CD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_37 $$ return result[ CD ]
Line_11 $$ if (wnd instanceof JDialog) -->Line_12 $$ if (title.equals(((JDialog) wnd).getTitle())) [ CD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_26 $$ Toolkit.getDefaultToolkit().addAWTEventListener(listener.get(), WindowEvent.WINDOW_EVENT_MASK)[ CD ]
Line_27 $$ SimpleTimer.getInstance().setUp(new Runnable() -->Line_32 $$ if (!result.isProcessed()) [ CD ]
Line_5 $$ listener.set(new AWTEventListener() -->Line_9 $$ if (event.getID() == WindowEvent.WINDOW_ACTIVATED) [ FD ]
Line_4 $$ final Ref<AWTEventListener> listener = new Ref<AWTEventListener>()-->Line_26 $$ Toolkit.getDefaultToolkit().addAWTEventListener(listener.get(), WindowEvent.WINDOW_EVENT_MASK)[ FD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_3 $$ final AsyncResult<String> result = new AsyncResult<String>()[ CD ]
Line_3 $$ final AsyncResult<String> result = new AsyncResult<String>()-->Line_18 $$ getUiReady(context).notify(result)[ FD ]
Line_3 $$ final AsyncResult<String> result = new AsyncResult<String>()-->Line_33 $$ result.setRejected("Timed out waiting for window: " + title)[ FD ]
Line_12 $$ if (title.equals(((JDialog) wnd).getTitle())) -->Line_13 $$ Toolkit.getDefaultToolkit().removeAWTEventListener(listener.get())[ CD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_18 $$ getUiReady(context).notify(result)[ FD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_5 $$ listener.set(new AWTEventListener() [ CD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_4 $$ final Ref<AWTEventListener> listener = new Ref<AWTEventListener>()[ CD ]
Line_2 $$ public static AsyncResult<String> waitForDialog(final PlaybackContext context, final String title) -->Line_12 $$ if (title.equals(((JDialog) wnd).getTitle())) [ FD ]
Line_4 $$ final Ref<AWTEventListener> listener = new Ref<AWTEventListener>()-->Line_31 $$ Toolkit.getDefaultToolkit().removeAWTEventListener(listener.get())[ FD ]
Line_12 $$ if (title.equals(((JDialog) wnd).getTitle())) -->Line_14 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_10 $$ final Window wnd = ((WindowEvent) event).getWindow()-->Line_11 $$ if (wnd instanceof JDialog) [ FD ]
Line_27 $$ SimpleTimer.getInstance().setUp(new Runnable() -->Line_31 $$ Toolkit.getDefaultToolkit().removeAWTEventListener(listener.get())[ CD ]
