Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_21 $$ callbacks.add(new GlfwCallbackAdapter() [ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_39 $$ if (Thread.currentThread() != glThread)[ CD ]
Line_56 $$ if (shouldExit())-->Line_57 $$ exit()[ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_49 $$ graphics.foreground = focused[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_64 $$ glfwSetCallback(callbacks)[ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_34 $$ Runnable runnable = new Runnable() [ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_58 $$ return false[ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_23 $$ Runnable runnable = new Runnable() [ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_65 $$ start()[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_18 $$ Gdx.files = files = new JglfwFiles()[ CD ]
Line_28 $$ if (Thread.currentThread() != glThread)-->Line_31 $$ runnable.run()[ CD ]
Line_9 $$ final Thread glThread = Thread.currentThread()-->Line_28 $$ if (Thread.currentThread() != glThread)[ FD ]
Line_23 $$ Runnable runnable = new Runnable() -->Line_25 $$ graphics.sizeChanged(width, height)[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_20 $$ Gdx.net = net = new JglfwNet()[ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_50 $$ graphics.requestRendering()[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_10 $$ GdxNativesLoader.load()[ CD ]
Line_23 $$ Runnable runnable = new Runnable() -->Line_40 $$ postRunnable(runnable)[ FD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_45 $$ if (Thread.currentThread() == glThread)[ CD ]
Line_23 $$ Runnable runnable = new Runnable() -->Line_42 $$ runnable.run()[ FD ]
Line_34 $$ Runnable runnable = new Runnable() -->Line_36 $$ graphics.positionChanged(x, y)[ CD ]
Line_12 $$ if (inputCallbacksOnAppKitThread)-->Line_13 $$ java.awt.Toolkit.getDefaultToolkit()[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_16 $$ Gdx.app = this[ CD ]
Line_34 $$ Runnable runnable = new Runnable() -->Line_40 $$ postRunnable(runnable)[ FD ]
Line_39 $$ if (Thread.currentThread() != glThread)-->Line_40 $$ postRunnable(runnable)[ CD ]
Line_39 $$ if (Thread.currentThread() != glThread)-->Line_42 $$ runnable.run()[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_9 $$ final Thread glThread = Thread.currentThread()[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_12 $$ if (inputCallbacksOnAppKitThread)[ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_36 $$ graphics.positionChanged(x, y)[ FD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_49 $$ graphics.foreground = focused[ FD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_56 $$ if (shouldExit())[ CD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_25 $$ graphics.sizeChanged(width, height)[ FD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_14 $$ if (!glfwInit())[ CD ]
Line_23 $$ Runnable runnable = new Runnable() -->Line_31 $$ runnable.run()[ FD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_28 $$ if (Thread.currentThread() != glThread)[ CD ]
Line_34 $$ Runnable runnable = new Runnable() -->Line_42 $$ runnable.run()[ FD ]
Line_28 $$ if (Thread.currentThread() != glThread)-->Line_29 $$ postRunnable(runnable)[ CD ]
Line_9 $$ final Thread glThread = Thread.currentThread()-->Line_39 $$ if (Thread.currentThread() != glThread)[ FD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_19 $$ Gdx.input = input = new JglfwInput(this, inputCallbacksOnAppKitThread)[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_11 $$ boolean inputCallbacksOnAppKitThread = isMac[ CD ]
Line_45 $$ if (Thread.currentThread() == glThread)-->Line_46 $$ render(System.nanoTime())[ CD ]
Line_2 $$ void initialize(JglfwApplicationConfiguration config) -->Line_17 $$ Gdx.graphics = graphics = new JglfwGraphics(config)[ CD ]
Line_23 $$ Runnable runnable = new Runnable() -->Line_29 $$ postRunnable(runnable)[ FD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_53 $$ graphics.minimized = iconified[ FD ]
Line_21 $$ callbacks.add(new GlfwCallbackAdapter() -->Line_53 $$ graphics.minimized = iconified[ CD ]
Line_9 $$ final Thread glThread = Thread.currentThread()-->Line_45 $$ if (Thread.currentThread() == glThread)[ FD ]
