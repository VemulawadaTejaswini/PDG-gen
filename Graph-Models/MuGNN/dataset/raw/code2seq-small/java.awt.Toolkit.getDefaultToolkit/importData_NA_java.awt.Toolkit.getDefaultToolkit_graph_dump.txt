Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)[ CD ]
Line_4 $$ final int caretOffset = editor.getCaretModel().getOffset()-->Line_22 $$ offset = caretOffset[ FD ]
Line_20 $$ if (myDraggedRange != null) -->Line_21 $$ editor.getCaretModel().moveToOffset(caretOffset)[ CD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_19 $$ editor.getSelectionModel().removeSelection()[ FD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_21 $$ editor.getCaretModel().moveToOffset(caretOffset)[ FD ]
Line_26 $$ if (editor.getDocument().getRangeGuard(offset, offset) != null)-->Line_27 $$ return[ CD ]
Line_29 $$ Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard()-->Line_39 $$ clipboard.setContents(backup, clipboardOwner)[ FD ]
Line_5 $$ if (myDraggedRange != null && myDraggedRange.getStartOffset() <= caretOffset && caretOffset < myDraggedRange.getEndOffset()) -->Line_6 $$ return false[ CD ]
Line_18 $$ final int offset-->Line_22 $$ offset = caretOffset[ FD ]
Line_22 $$ offset = caretOffset-->Line_26 $$ if (editor.getDocument().getRangeGuard(offset, offset) != null)[ FD ]
Line_28 $$ EditorActionHandler pasteHandler = EditorActionManager.getInstance().getActionHandler(IdeActions.ACTION_EDITOR_PASTE)-->Line_38 $$ pasteHandler.execute(editor, editor.getDataContext())[ FD ]
Line_24 $$ offset = editor.getCaretModel().getOffset()-->Line_26 $$ if (editor.getDocument().getRangeGuard(offset, offset) != null)[ FD ]
Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_52 $$ return true[ CD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_9 $$ editor.getCaretModel().moveToOffset(editor.mySavedCaretOffsetForDNDUndoHack)[ FD ]
Line_29 $$ Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard()-->Line_30 $$ Transferable backup = clipboard.getContents(this)[ FD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_42 $$ editor.getCaretModel().moveToOffset(range.getStartOffset())[ FD ]
Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_36 $$ clipboard.setContents(t, clipboardOwner)[ FD ]
Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_11 $$ CommandProcessor.getInstance().executeCommand(editor.myProject, new Runnable() [ CD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_37 $$ editor.putUserData(LAST_PASTED_REGION, null)[ FD ]
Line_8 $$ if (myDraggedRange != null) -->Line_9 $$ editor.getCaretModel().moveToOffset(editor.mySavedCaretOffsetForDNDUndoHack)[ CD ]
Line_20 $$ if (myDraggedRange != null) -->Line_24 $$ offset = editor.getCaretModel().getOffset()[ CD ]
Line_31 $$ ClipboardOwner clipboardOwner = new ClipboardOwner() -->Line_36 $$ clipboard.setContents(t, clipboardOwner)[ FD ]
Line_4 $$ final int caretOffset = editor.getCaretModel().getOffset()-->Line_21 $$ editor.getCaretModel().moveToOffset(caretOffset)[ FD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_24 $$ offset = editor.getCaretModel().getOffset()[ FD ]
Line_41 $$ if (range != null) -->Line_43 $$ editor.getSelectionModel().setSelection(range.getStartOffset(), range.getEndOffset())[ CD ]
Line_18 $$ final int offset-->Line_24 $$ offset = editor.getCaretModel().getOffset()[ FD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_38 $$ pasteHandler.execute(editor, editor.getDataContext())[ FD ]
Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)[ FD ]
Line_31 $$ ClipboardOwner clipboardOwner = new ClipboardOwner() -->Line_39 $$ clipboard.setContents(backup, clipboardOwner)[ FD ]
Line_22 $$ offset = caretOffset-->Line_24 $$ offset = editor.getCaretModel().getOffset()[ FD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_26 $$ if (editor.getDocument().getRangeGuard(offset, offset) != null)[ FD ]
Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_4 $$ final int caretOffset = editor.getCaretModel().getOffset()[ CD ]
Line_30 $$ Transferable backup = clipboard.getContents(this)-->Line_39 $$ clipboard.setContents(backup, clipboardOwner)[ FD ]
Line_20 $$ if (myDraggedRange != null) -->Line_22 $$ offset = caretOffset[ CD ]
Line_11 $$ CommandProcessor.getInstance().executeCommand(editor.myProject, new Runnable() -->Line_14 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_18 $$ final int offset-->Line_26 $$ if (editor.getDocument().getRangeGuard(offset, offset) != null)[ FD ]
Line_29 $$ Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard()-->Line_36 $$ clipboard.setContents(t, clipboardOwner)[ FD ]
Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_8 $$ if (myDraggedRange != null) [ CD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_4 $$ final int caretOffset = editor.getCaretModel().getOffset()[ FD ]
Line_2 $$ public boolean importData(final JComponent comp, final Transferable t) -->Line_5 $$ if (myDraggedRange != null && myDraggedRange.getStartOffset() <= caretOffset && caretOffset < myDraggedRange.getEndOffset()) [ CD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_43 $$ editor.getSelectionModel().setSelection(range.getStartOffset(), range.getEndOffset())[ FD ]
Line_3 $$ final EditorImpl editor = (EditorImpl) getEditor(comp)-->Line_40 $$ TextRange range = editor.getUserData(LAST_PASTED_REGION)[ FD ]
Line_41 $$ if (range != null) -->Line_42 $$ editor.getCaretModel().moveToOffset(range.getStartOffset())[ CD ]
