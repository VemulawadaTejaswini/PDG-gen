Line_2 $$ private void rebuildList() -->Line_7 $$ final CheckoutStrategy[] strategies = CheckoutStrategy.createAllStrategies(mySelectedLocation, selected, forFile)[ CD ]
Line_18 $$ for (CheckoutStrategy resultMode : resultModes) -->Line_19 $$ myCheckoutModeModel.addElement(resultMode)[ FD ]
Line_12 $$ if (resultFile != null && !results.contains(resultFile)) -->Line_13 $$ results.add(resultFile)[ CD ]
Line_11 $$ final File resultFile = strategy.getResult()-->Line_13 $$ results.add(resultFile)[ FD ]
Line_8 $$ final Collection<File> results = new HashSet()-->Line_12 $$ if (resultFile != null && !results.contains(resultFile)) [ FD ]
Line_11 $$ final File resultFile = strategy.getResult()-->Line_12 $$ if (resultFile != null && !results.contains(resultFile)) [ FD ]
Line_9 $$ final List<CheckoutStrategy> resultModes = new ArrayList()-->Line_14 $$ resultModes.add(strategy)[ FD ]
Line_2 $$ private void rebuildList() -->Line_8 $$ final Collection<File> results = new HashSet()[ CD ]
Line_2 $$ private void rebuildList() -->Line_5 $$ myCheckoutModeModel.removeAllElements()[ CD ]
Line_10 $$ for (CheckoutStrategy strategy : strategies) -->Line_11 $$ final File resultFile = strategy.getResult()[ FD ]
Line_9 $$ final List<CheckoutStrategy> resultModes = new ArrayList()-->Line_17 $$ Collections.sort(resultModes)[ FD ]
Line_2 $$ private void rebuildList() -->Line_9 $$ final List<CheckoutStrategy> resultModes = new ArrayList()[ CD ]
Line_12 $$ if (resultFile != null && !results.contains(resultFile)) -->Line_14 $$ resultModes.add(strategy)[ CD ]
Line_2 $$ private void rebuildList() -->Line_6 $$ final boolean forFile = getWizard().getSelectedElements()[0] instanceof CvsFile[ CD ]
Line_2 $$ private void rebuildList() -->Line_3 $$ final File selected = myCvsPaths.iterator().next()[ CD ]
Line_10 $$ for (CheckoutStrategy strategy : strategies) -->Line_14 $$ resultModes.add(strategy)[ FD ]
Line_2 $$ private void rebuildList() -->Line_21 $$ myCheckoutModeList.setSelectedIndex(0)[ CD ]
Line_2 $$ private void rebuildList() -->Line_17 $$ Collections.sort(resultModes)[ CD ]
Line_6 $$ final boolean forFile = getWizard().getSelectedElements()[0] instanceof CvsFile-->Line_7 $$ final CheckoutStrategy[] strategies = CheckoutStrategy.createAllStrategies(mySelectedLocation, selected, forFile)[ FD ]
Line_2 $$ private void rebuildList() -->Line_4 $$ setStepTitle(CvsBundle.message("dialog.title.check.out.to", selected))[ CD ]
Line_3 $$ final File selected = myCvsPaths.iterator().next()-->Line_7 $$ final CheckoutStrategy[] strategies = CheckoutStrategy.createAllStrategies(mySelectedLocation, selected, forFile)[ FD ]
Line_3 $$ final File selected = myCvsPaths.iterator().next()-->Line_4 $$ setStepTitle(CvsBundle.message("dialog.title.check.out.to", selected))[ FD ]
Line_8 $$ final Collection<File> results = new HashSet()-->Line_13 $$ results.add(resultFile)[ FD ]
