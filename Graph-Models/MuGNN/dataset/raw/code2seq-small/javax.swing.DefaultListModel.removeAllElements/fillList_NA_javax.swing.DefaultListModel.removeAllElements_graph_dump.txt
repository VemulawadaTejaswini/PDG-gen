Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_4 $$ model.removeAllElements()[ CD ]
Line_3 $$ DefaultListModel model = new DefaultListModel()-->Line_14 $$ model.addElement(type)[ FD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_7 $$ Collections.sort(infoTypes, new Comparator<SeverityBasedTextAttributes>() [ CD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_22 $$ myOptionsList.setModel(model)[ CD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_3 $$ DefaultListModel model = new DefaultListModel()[ CD ]
Line_7 $$ Collections.sort(infoTypes, new Comparator<SeverityBasedTextAttributes>() -->Line_9 $$ return -mySeverityRegistrar.compare(attributes1.getSeverity(), attributes2.getSeverity())[ CD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_19 $$ if (preselection == null && !infoTypes.isEmpty()) [ CD ]
Line_5 $$ final List<SeverityBasedTextAttributes> infoTypes = new ArrayList<SeverityBasedTextAttributes>()-->Line_6 $$ infoTypes.addAll(SeverityUtil.getRegisteredHighlightingInfoTypes(mySeverityRegistrar))[ FD ]
Line_7 $$ Collections.sort(infoTypes, new Comparator<SeverityBasedTextAttributes>() -->Line_9 $$ return -mySeverityRegistrar.compare(attributes1.getSeverity(), attributes2.getSeverity())[ FD ]
Line_19 $$ if (preselection == null && !infoTypes.isEmpty()) -->Line_20 $$ preselection = infoTypes.get(0)[ CD ]
Line_5 $$ final List<SeverityBasedTextAttributes> infoTypes = new ArrayList<SeverityBasedTextAttributes>()-->Line_20 $$ preselection = infoTypes.get(0)[ FD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_15 $$ if (type.getSeverity().equals(severity)) [ FD ]
Line_3 $$ DefaultListModel model = new DefaultListModel()-->Line_4 $$ model.removeAllElements()[ FD ]
Line_5 $$ final List<SeverityBasedTextAttributes> infoTypes = new ArrayList<SeverityBasedTextAttributes>()-->Line_7 $$ Collections.sort(infoTypes, new Comparator<SeverityBasedTextAttributes>() [ FD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_5 $$ final List<SeverityBasedTextAttributes> infoTypes = new ArrayList<SeverityBasedTextAttributes>()[ CD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_23 $$ myOptionsList.setSelectedValue(preselection, true)[ CD ]
Line_3 $$ DefaultListModel model = new DefaultListModel()-->Line_22 $$ myOptionsList.setModel(model)[ FD ]
Line_2 $$ private void fillList(@Nullable final HighlightSeverity severity) -->Line_6 $$ infoTypes.addAll(SeverityUtil.getRegisteredHighlightingInfoTypes(mySeverityRegistrar))[ CD ]
Line_5 $$ final List<SeverityBasedTextAttributes> infoTypes = new ArrayList<SeverityBasedTextAttributes>()-->Line_19 $$ if (preselection == null && !infoTypes.isEmpty()) [ FD ]
