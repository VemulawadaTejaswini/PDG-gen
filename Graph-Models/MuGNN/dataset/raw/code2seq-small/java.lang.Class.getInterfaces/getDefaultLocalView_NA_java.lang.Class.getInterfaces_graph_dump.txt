Line_2 $$ private Class<?> getDefaultLocalView(Class<?> beanClass) -->Line_9 $$ if (filteredInterfaces.isEmpty() || filteredInterfaces.size() > 1) [ CD ]
Line_3 $$ Class<?>[] interfaces = beanClass.getInterfaces()-->Line_7 $$ List<Class<?>> implementedInterfaces = new ArrayList<Class<?>>(Arrays.asList(interfaces))[ FD ]
Line_4 $$ if (interfaces.length == 0) -->Line_5 $$ return null[ CD ]
Line_8 $$ List<Class<?>> filteredInterfaces = this.filterInterfaces(implementedInterfaces)-->Line_9 $$ if (filteredInterfaces.isEmpty() || filteredInterfaces.size() > 1) [ FD ]
Line_9 $$ if (filteredInterfaces.isEmpty() || filteredInterfaces.size() > 1) -->Line_10 $$ return null[ CD ]
Line_2 $$ private Class<?> getDefaultLocalView(Class<?> beanClass) -->Line_8 $$ List<Class<?>> filteredInterfaces = this.filterInterfaces(implementedInterfaces)[ CD ]
Line_2 $$ private Class<?> getDefaultLocalView(Class<?> beanClass) -->Line_7 $$ List<Class<?>> implementedInterfaces = new ArrayList<Class<?>>(Arrays.asList(interfaces))[ CD ]
Line_2 $$ private Class<?> getDefaultLocalView(Class<?> beanClass) -->Line_3 $$ Class<?>[] interfaces = beanClass.getInterfaces()[ CD ]
Line_7 $$ List<Class<?>> implementedInterfaces = new ArrayList<Class<?>>(Arrays.asList(interfaces))-->Line_8 $$ List<Class<?>> filteredInterfaces = this.filterInterfaces(implementedInterfaces)[ FD ]
Line_2 $$ private Class<?> getDefaultLocalView(Class<?> beanClass) -->Line_4 $$ if (interfaces.length == 0) [ CD ]
Line_2 $$ private Class<?> getDefaultLocalView(Class<?> beanClass) -->Line_12 $$ return filteredInterfaces.get(0)[ CD ]
Line_8 $$ List<Class<?>> filteredInterfaces = this.filterInterfaces(implementedInterfaces)-->Line_12 $$ return filteredInterfaces.get(0)[ FD ]
Line_2 $$ private Class<?> getDefaultLocalView(Class<?> beanClass) -->Line_3 $$ Class<?>[] interfaces = beanClass.getInterfaces()[ FD ]
