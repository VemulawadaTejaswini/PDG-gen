Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_6 $$ if (Object.class.equals(fromClass)) [ CD ]
Line_6 $$ if (Object.class.equals(fromClass)) -->Line_7 $$ return false[ CD ]
Line_3 $$ if (className.equals(fromClass.getName())) -->Line_4 $$ return true[ CD ]
Line_10 $$ if (superClass != null && isAssignableFrom(className, superClass)) -->Line_11 $$ return true[ CD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_9 $$ Class<?> superClass = fromClass.getSuperclass()[ FD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_13 $$ for (Class<?> interfaceClass : fromClass.getInterfaces()) [ FD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_14 $$ if (isAssignableFrom(className, interfaceClass)) [ FD ]
Line_13 $$ for (Class<?> interfaceClass : fromClass.getInterfaces()) -->Line_14 $$ if (isAssignableFrom(className, interfaceClass)) [ FD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_10 $$ if (superClass != null && isAssignableFrom(className, superClass)) [ FD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_3 $$ if (className.equals(fromClass.getName())) [ CD ]
Line_14 $$ if (isAssignableFrom(className, interfaceClass)) -->Line_15 $$ return true[ CD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_6 $$ if (Object.class.equals(fromClass)) [ FD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_3 $$ if (className.equals(fromClass.getName())) [ FD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_9 $$ Class<?> superClass = fromClass.getSuperclass()[ CD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_10 $$ if (superClass != null && isAssignableFrom(className, superClass)) [ CD ]
Line_9 $$ Class<?> superClass = fromClass.getSuperclass()-->Line_10 $$ if (superClass != null && isAssignableFrom(className, superClass)) [ FD ]
Line_2 $$ private boolean isAssignableFrom(String className, Class<?> fromClass) -->Line_18 $$ return false[ CD ]
