Line_8 $$ List<Class<?>> allInterfaces = new ArrayList<Class<?>>()-->Line_12 $$ allInterfaces.addAll(Arrays.asList(getSuperInterfaces(childInterface.getInterfaces())))[ FD ]
Line_10 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) -->Line_14 $$ LOG.warn("Interface " + childInterface + " ignored because it does not extend VersionedProtocol")[ CD ]
Line_10 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) -->Line_11 $$ allInterfaces.add(childInterface)[ CD ]
Line_9 $$ for (Class<?> childInterface : childInterfaces) -->Line_10 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) [ FD ]
Line_9 $$ for (Class<?> childInterface : childInterfaces) -->Line_11 $$ allInterfaces.add(childInterface)[ FD ]
Line_8 $$ List<Class<?>> allInterfaces = new ArrayList<Class<?>>()-->Line_17 $$ return allInterfaces.toArray(new Class[allInterfaces.size()])[ FD ]
Line_8 $$ List<Class<?>> allInterfaces = new ArrayList<Class<?>>()-->Line_11 $$ allInterfaces.add(childInterface)[ FD ]
Line_10 $$ if (VersionedProtocol.class.isAssignableFrom(childInterface)) -->Line_12 $$ allInterfaces.addAll(Arrays.asList(getSuperInterfaces(childInterface.getInterfaces())))[ CD ]
Line_9 $$ for (Class<?> childInterface : childInterfaces) -->Line_12 $$ allInterfaces.addAll(Arrays.asList(getSuperInterfaces(childInterface.getInterfaces())))[ FD ]
