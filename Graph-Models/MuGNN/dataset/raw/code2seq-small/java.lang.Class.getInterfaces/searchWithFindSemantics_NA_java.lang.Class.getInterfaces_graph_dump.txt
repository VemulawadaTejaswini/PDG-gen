Line_39 $$ clazz = clazz.getSuperclass()-->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ FD ]
Line_19 $$ if (result != null) -->Line_20 $$ processor.postProcess(annotation.annotationType(), annotation, result)[ CD ]
Line_58 $$ if (element instanceof Class) -->Line_67 $$ if (superclass != null && Object.class != superclass) [ CD ]
Line_25 $$ if (element instanceof Method) -->Line_27 $$ Method resolvedMethod = BridgeMethodResolver.findBridgedMethod(method)[ CD ]
Line_39 $$ clazz = clazz.getSuperclass()-->Line_66 $$ Class<?> superclass = clazz.getSuperclass()[ FD ]
Line_53 $$ if (result != null) -->Line_54 $$ return result[ CD ]
Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)-->Line_62 $$ if (result != null) [ FD ]
Line_67 $$ if (superclass != null && Object.class != superclass) -->Line_68 $$ T result = searchWithFindSemantics(superclass, annotationType, annotationName, processor, visited, metaDepth)[ CD ]
Line_38 $$ while (true) -->Line_39 $$ clazz = clazz.getSuperclass()[ CD ]
Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)-->Line_47 $$ if (result != null) [ FD ]
Line_25 $$ if (element instanceof Method) -->Line_34 $$ if (result != null) [ CD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)-->Line_53 $$ if (result != null) [ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_5 $$ if (visited.add(element)) [ FD ]
Line_8 $$ for (Annotation annotation : annotations) -->Line_9 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && ((annotationType != null ? annotation.annotationType() == annotationType : annotation.annotationType().getName().equals(annotationName)) || metaDepth > 0)) [ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_78 $$ return null[ CD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_58 $$ if (element instanceof Class) [ FD ]
Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())-->Line_47 $$ if (result != null) [ FD ]
Line_37 $$ Class<?> clazz = method.getDeclaringClass()-->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ FD ]
Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())-->Line_62 $$ if (result != null) [ FD ]
Line_26 $$ Method method = (Method) element-->Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_7 $$ Annotation[] annotations = element.getDeclaredAnnotations()[ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_69 $$ if (result != null) [ FD ]
Line_17 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)) -->Line_18 $$ T result = searchWithFindSemantics(annotation.annotationType(), annotationType, annotationName, processor, visited, metaDepth + 1)[ CD ]
Line_37 $$ Class<?> clazz = method.getDeclaringClass()-->Line_39 $$ clazz = clazz.getSuperclass()[ FD ]
Line_8 $$ for (Annotation annotation : annotations) -->Line_18 $$ T result = searchWithFindSemantics(annotation.annotationType(), annotationType, annotationName, processor, visited, metaDepth + 1)[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_61 $$ T result = searchWithFindSemantics(ifc, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_29 $$ if (result != null) -->Line_30 $$ return result[ CD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_62 $$ if (result != null) [ FD ]
Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)-->Line_69 $$ if (result != null) [ FD ]
Line_26 $$ Method method = (Method) element-->Line_27 $$ Method resolvedMethod = BridgeMethodResolver.findBridgedMethod(method)[ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ FD ]
Line_27 $$ Method resolvedMethod = BridgeMethodResolver.findBridgedMethod(method)-->Line_28 $$ T result = searchWithFindSemantics(resolvedMethod, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_25 $$ if (element instanceof Method) -->Line_32 $$ Class<?>[] ifcs = method.getDeclaringClass().getInterfaces()[ CD ]
Line_25 $$ if (element instanceof Method) -->Line_29 $$ if (result != null) [ CD ]
Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)-->Line_53 $$ if (result != null) [ FD ]
Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)-->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ FD ]
Line_32 $$ Class<?>[] ifcs = method.getDeclaringClass().getInterfaces()-->Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)[ FD ]
Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)-->Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_67 $$ if (superclass != null && Object.class != superclass) -->Line_69 $$ if (result != null) [ CD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_4 $$ Assert.hasLength(annotationName, "annotationName must not be null or empty")[ CD ]
Line_9 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && ((annotationType != null ? annotation.annotationType() == annotationType : annotation.annotationType().getName().equals(annotationName)) || metaDepth > 0)) -->Line_11 $$ if (result != null) [ CD ]
Line_8 $$ for (Annotation annotation : annotations) -->Line_17 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)) [ FD ]
Line_26 $$ Method method = (Method) element-->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_5 $$ if (visited.add(element)) [ CD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_19 $$ if (result != null) -->Line_21 $$ return result[ CD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_29 $$ if (result != null) [ FD ]
Line_58 $$ if (element instanceof Class) -->Line_66 $$ Class<?> superclass = clazz.getSuperclass()[ CD ]
Line_62 $$ if (result != null) -->Line_63 $$ return result[ CD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_18 $$ T result = searchWithFindSemantics(annotation.annotationType(), annotationType, annotationName, processor, visited, metaDepth + 1)[ FD ]
Line_25 $$ if (element instanceof Method) -->Line_38 $$ while (true) [ CD ]
Line_39 $$ clazz = clazz.getSuperclass()-->Line_44 $$ Method equivalentMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)-->Line_69 $$ if (result != null) [ FD ]
Line_25 $$ if (element instanceof Method) -->Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)[ CD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_3 $$ Assert.notNull(element, "AnnotatedElement must not be null")[ CD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_25 $$ if (element instanceof Method) [ FD ]
Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)-->Line_34 $$ if (result != null) [ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_53 $$ if (result != null) [ FD ]
Line_25 $$ if (element instanceof Method) -->Line_28 $$ T result = searchWithFindSemantics(resolvedMethod, annotationType, annotationName, processor, visited, metaDepth)[ CD ]
Line_47 $$ if (result != null) -->Line_48 $$ return result[ CD ]
Line_17 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)) -->Line_19 $$ if (result != null) [ CD ]
Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)-->Line_62 $$ if (result != null) [ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_4 $$ Assert.hasLength(annotationName, "annotationName must not be null or empty")[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_9 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && ((annotationType != null ? annotation.annotationType() == annotationType : annotation.annotationType().getName().equals(annotationName)) || metaDepth > 0)) [ FD ]
Line_37 $$ Class<?> clazz = method.getDeclaringClass()-->Line_44 $$ Method equivalentMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_60 $$ for (Class<?> ifc : clazz.getInterfaces()) -->Line_61 $$ T result = searchWithFindSemantics(ifc, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_10 $$ T result = processor.process(element, annotation, metaDepth)[ FD ]
Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())-->Line_69 $$ if (result != null) [ FD ]
Line_25 $$ if (element instanceof Method) -->Line_26 $$ Method method = (Method) element[ CD ]
Line_26 $$ Method method = (Method) element-->Line_32 $$ Class<?>[] ifcs = method.getDeclaringClass().getInterfaces()[ FD ]
Line_34 $$ if (result != null) -->Line_35 $$ return result[ CD ]
Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)-->Line_47 $$ if (result != null) [ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_20 $$ processor.postProcess(annotation.annotationType(), annotation, result)[ FD ]
Line_38 $$ while (true) -->Line_40 $$ if (clazz == null || Object.class == clazz) [ CD ]
Line_11 $$ if (result != null) -->Line_12 $$ return result[ CD ]
Line_69 $$ if (result != null) -->Line_70 $$ return result[ CD ]
Line_45 $$ Method resolvedEquivalentMethod = BridgeMethodResolver.findBridgedMethod(equivalentMethod)-->Line_46 $$ result = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_25 $$ if (element instanceof Method) -->Line_37 $$ Class<?> clazz = method.getDeclaringClass()[ CD ]
Line_38 $$ while (true) -->Line_53 $$ if (result != null) [ CD ]
Line_8 $$ for (Annotation annotation : annotations) -->Line_10 $$ T result = processor.process(element, annotation, metaDepth)[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_20 $$ processor.postProcess(annotation.annotationType(), annotation, result)[ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_34 $$ if (result != null) [ FD ]
Line_8 $$ for (Annotation annotation : annotations) -->Line_20 $$ processor.postProcess(annotation.annotationType(), annotation, result)[ FD ]
Line_38 $$ while (true) -->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ CD ]
Line_26 $$ Method method = (Method) element-->Line_44 $$ Method equivalentMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())[ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)[ FD ]
Line_37 $$ Class<?> clazz = method.getDeclaringClass()-->Line_60 $$ for (Class<?> ifc : clazz.getInterfaces()) [ FD ]
Line_33 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, ifcs)-->Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_3 $$ Assert.notNull(element, "AnnotatedElement must not be null")[ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_11 $$ if (result != null) [ FD ]
Line_39 $$ clazz = clazz.getSuperclass()-->Line_60 $$ for (Class<?> ifc : clazz.getInterfaces()) [ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_19 $$ if (result != null) [ FD ]
Line_52 $$ result = searchOnInterfaces(method, annotationType, annotationName, processor, visited, metaDepth, clazz.getInterfaces())-->Line_53 $$ if (result != null) [ FD ]
Line_9 $$ if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation) && ((annotationType != null ? annotation.annotationType() == annotationType : annotation.annotationType().getName().equals(annotationName)) || metaDepth > 0)) -->Line_10 $$ T result = processor.process(element, annotation, metaDepth)[ CD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_68 $$ T result = searchWithFindSemantics(superclass, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_26 $$ Method method = (Method) element-->Line_37 $$ Class<?> clazz = method.getDeclaringClass()[ FD ]
Line_44 $$ Method equivalentMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes())-->Line_45 $$ Method resolvedEquivalentMethod = BridgeMethodResolver.findBridgedMethod(equivalentMethod)[ FD ]
Line_10 $$ T result = processor.process(element, annotation, metaDepth)-->Line_47 $$ if (result != null) [ FD ]
Line_66 $$ Class<?> superclass = clazz.getSuperclass()-->Line_68 $$ T result = searchWithFindSemantics(superclass, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_37 $$ Class<?> clazz = method.getDeclaringClass()-->Line_66 $$ Class<?> superclass = clazz.getSuperclass()[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_28 $$ T result = searchWithFindSemantics(resolvedMethod, annotationType, annotationName, processor, visited, metaDepth)[ FD ]
Line_2 $$ private static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType, String annotationName, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) -->Line_75 $$ AnnotationUtils.handleIntrospectionFailure(element, ex)[ FD ]
