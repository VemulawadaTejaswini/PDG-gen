Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_8 $$ final Class superClass = classKey.getSuperclass()[ CD ]
Line_5 $$ for (final Class anInterface : interfaces) -->Line_6 $$ collectSupers(anInterface, allSupers)[ FD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_4 $$ final Class[] interfaces = classKey.getInterfaces()[ CD ]
Line_9 $$ if (superClass != null) -->Line_10 $$ collectSupers(superClass, allSupers)[ CD ]
Line_8 $$ final Class superClass = classKey.getSuperclass()-->Line_10 $$ collectSupers(superClass, allSupers)[ FD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_9 $$ if (superClass != null) [ CD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_3 $$ allSupers.add(classKey.getName())[ CD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_6 $$ collectSupers(anInterface, allSupers)[ FD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_8 $$ final Class superClass = classKey.getSuperclass()[ FD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_10 $$ collectSupers(superClass, allSupers)[ FD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_4 $$ final Class[] interfaces = classKey.getInterfaces()[ FD ]
Line_8 $$ final Class superClass = classKey.getSuperclass()-->Line_9 $$ if (superClass != null) [ FD ]
Line_2 $$ private static void collectSupers(@NotNull Class classKey, @NotNull Set<String> allSupers) -->Line_3 $$ allSupers.add(classKey.getName())[ FD ]
