Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_16 $$ boolean addAdvised = !advised.isOpaque() && !advised.isInterfaceProxied(Advised.class)[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_18 $$ if (addSpringProxy) [ CD ]
Line_21 $$ if (addAdvised) -->Line_22 $$ nonUserIfcCount++[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_3 $$ Class<?>[] specifiedInterfaces = advised.getProxiedInterfaces()[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_24 $$ Class<?>[] proxiedInterfaces = new Class<?>[specifiedInterfaces.length + nonUserIfcCount][ CD ]
Line_29 $$ if (addAdvised) -->Line_30 $$ proxiedInterfaces[proxiedInterfaces.length - 1] = Advised.class[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_25 $$ System.arraycopy(specifiedInterfaces, 0, proxiedInterfaces, 0, specifiedInterfaces.length)[ CD ]
Line_5 $$ Class<?> targetClass = advised.getTargetClass()-->Line_7 $$ if (targetClass.isInterface()) [ FD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_29 $$ if (addAdvised) [ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_5 $$ Class<?> targetClass = advised.getTargetClass()[ FD ]
Line_7 $$ if (targetClass.isInterface()) -->Line_8 $$ advised.setInterfaces(targetClass)[ CD ]
Line_17 $$ int nonUserIfcCount = 0-->Line_19 $$ nonUserIfcCount++[ FD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_32 $$ return proxiedInterfaces[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_4 $$ if (specifiedInterfaces.length == 0) [ CD ]
Line_5 $$ Class<?> targetClass = advised.getTargetClass()-->Line_6 $$ if (targetClass != null) [ FD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_21 $$ if (addAdvised) [ CD ]
Line_17 $$ int nonUserIfcCount = 0-->Line_22 $$ nonUserIfcCount++[ FD ]
Line_4 $$ if (specifiedInterfaces.length == 0) -->Line_5 $$ Class<?> targetClass = advised.getTargetClass()[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_17 $$ int nonUserIfcCount = 0[ CD ]
Line_12 $$ specifiedInterfaces = advised.getProxiedInterfaces()-->Line_25 $$ System.arraycopy(specifiedInterfaces, 0, proxiedInterfaces, 0, specifiedInterfaces.length)[ FD ]
Line_24 $$ Class<?>[] proxiedInterfaces = new Class<?>[specifiedInterfaces.length + nonUserIfcCount]-->Line_25 $$ System.arraycopy(specifiedInterfaces, 0, proxiedInterfaces, 0, specifiedInterfaces.length)[ FD ]
Line_6 $$ if (targetClass != null) -->Line_7 $$ if (targetClass.isInterface()) [ CD ]
Line_4 $$ if (specifiedInterfaces.length == 0) -->Line_6 $$ if (targetClass != null) [ CD ]
Line_6 $$ if (targetClass != null) -->Line_12 $$ specifiedInterfaces = advised.getProxiedInterfaces()[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_3 $$ Class<?>[] specifiedInterfaces = advised.getProxiedInterfaces()[ FD ]
Line_3 $$ Class<?>[] specifiedInterfaces = advised.getProxiedInterfaces()-->Line_12 $$ specifiedInterfaces = advised.getProxiedInterfaces()[ FD ]
Line_5 $$ Class<?> targetClass = advised.getTargetClass()-->Line_9 $$ if (Proxy.isProxyClass(targetClass)) [ FD ]
Line_7 $$ if (targetClass.isInterface()) -->Line_9 $$ if (Proxy.isProxyClass(targetClass)) [ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_10 $$ advised.setInterfaces(targetClass.getInterfaces())[ FD ]
Line_18 $$ if (addSpringProxy) -->Line_19 $$ nonUserIfcCount++[ CD ]
Line_3 $$ Class<?>[] specifiedInterfaces = advised.getProxiedInterfaces()-->Line_25 $$ System.arraycopy(specifiedInterfaces, 0, proxiedInterfaces, 0, specifiedInterfaces.length)[ FD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_16 $$ boolean addAdvised = !advised.isOpaque() && !advised.isInterfaceProxied(Advised.class)[ FD ]
Line_5 $$ Class<?> targetClass = advised.getTargetClass()-->Line_8 $$ advised.setInterfaces(targetClass)[ FD ]
Line_9 $$ if (Proxy.isProxyClass(targetClass)) -->Line_10 $$ advised.setInterfaces(targetClass.getInterfaces())[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_8 $$ advised.setInterfaces(targetClass)[ FD ]
Line_5 $$ Class<?> targetClass = advised.getTargetClass()-->Line_10 $$ advised.setInterfaces(targetClass.getInterfaces())[ FD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_12 $$ specifiedInterfaces = advised.getProxiedInterfaces()[ FD ]
Line_26 $$ if (addSpringProxy) -->Line_27 $$ proxiedInterfaces[specifiedInterfaces.length] = SpringProxy.class[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_15 $$ boolean addSpringProxy = !advised.isInterfaceProxied(SpringProxy.class)[ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_26 $$ if (addSpringProxy) [ CD ]
Line_2 $$ public static Class<?>[] completeProxiedInterfaces(AdvisedSupport advised) -->Line_15 $$ boolean addSpringProxy = !advised.isInterfaceProxied(SpringProxy.class)[ FD ]
