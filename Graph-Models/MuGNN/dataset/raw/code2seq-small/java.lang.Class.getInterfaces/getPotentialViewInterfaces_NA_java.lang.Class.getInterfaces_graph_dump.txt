Line_3 $$ Class<?>[] interfaces = beanClass.getInterfaces()-->Line_4 $$ if (interfaces == null) [ FD ]
Line_8 $$ for (Class<?> klass : interfaces) -->Line_9 $$ if (klass.equals(Serializable.class) || klass.equals(Externalizable.class) || klass.getName().startsWith("javax.ejb.") || klass.getName().startsWith("groovy.lang.")) [ FD ]
Line_2 $$ static Set<Class<?>> getPotentialViewInterfaces(Class<?> beanClass) -->Line_3 $$ Class<?>[] interfaces = beanClass.getInterfaces()[ CD ]
Line_2 $$ static Set<Class<?>> getPotentialViewInterfaces(Class<?> beanClass) -->Line_4 $$ if (interfaces == null) [ CD ]
Line_7 $$ final Set<Class<?>> potentialBusinessInterfaces = new HashSet<Class<?>>()-->Line_12 $$ potentialBusinessInterfaces.add(klass)[ FD ]
Line_2 $$ static Set<Class<?>> getPotentialViewInterfaces(Class<?> beanClass) -->Line_3 $$ Class<?>[] interfaces = beanClass.getInterfaces()[ FD ]
Line_2 $$ static Set<Class<?>> getPotentialViewInterfaces(Class<?> beanClass) -->Line_14 $$ return potentialBusinessInterfaces[ CD ]
Line_4 $$ if (interfaces == null) -->Line_5 $$ return Collections.emptySet()[ CD ]
Line_2 $$ static Set<Class<?>> getPotentialViewInterfaces(Class<?> beanClass) -->Line_7 $$ final Set<Class<?>> potentialBusinessInterfaces = new HashSet<Class<?>>()[ CD ]
Line_8 $$ for (Class<?> klass : interfaces) -->Line_12 $$ potentialBusinessInterfaces.add(klass)[ FD ]
