Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_3 $$ Method[] methods = getDeclaredMethods(clazz)[ FD ]
Line_4 $$ for (Method method : methods) -->Line_9 $$ mc.doWith(method)[ FD ]
Line_4 $$ for (Method method : methods) -->Line_11 $$ throw new IllegalStateException("Not allowed to access method '" + method.getName() + "': " + ex)[ FD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_14 $$ if (clazz.getSuperclass() != null) [ CD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_9 $$ mc.doWith(method)[ FD ]
Line_14 $$ if (clazz.getSuperclass() != null) -->Line_15 $$ doWithMethods(clazz.getSuperclass(), mc, mf)[ CD ]
Line_14 $$ if (clazz.getSuperclass() != null) -->Line_16 $$ if (clazz.isInterface()) [ CD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_16 $$ if (clazz.isInterface()) [ FD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_17 $$ for (Class<?> superIfc : clazz.getInterfaces()) [ FD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_14 $$ if (clazz.getSuperclass() != null) [ FD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_5 $$ if (mf != null && !mf.matches(method)) [ FD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_3 $$ Method[] methods = getDeclaredMethods(clazz)[ CD ]
Line_17 $$ for (Class<?> superIfc : clazz.getInterfaces()) -->Line_18 $$ doWithMethods(superIfc, mc, mf)[ FD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_18 $$ doWithMethods(superIfc, mc, mf)[ FD ]
Line_4 $$ for (Method method : methods) -->Line_5 $$ if (mf != null && !mf.matches(method)) [ FD ]
Line_2 $$ public static void doWithMethods(Class<?> clazz, MethodCallback mc, MethodFilter mf) -->Line_15 $$ doWithMethods(clazz.getSuperclass(), mc, mf)[ FD ]
