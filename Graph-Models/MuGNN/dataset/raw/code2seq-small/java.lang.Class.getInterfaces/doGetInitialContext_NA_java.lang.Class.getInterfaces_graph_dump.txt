Line_14 $$ if (environment != null) -->Line_16 $$ if (_log.isDebugEnabled()) [ CD ]
Line_26 $$ if (_log.isDebugEnabled()) -->Line_27 $$ _log.debug("Instantiating " + initialContextFactoryClassName)[ CD ]
Line_5 $$ if (_log.isDebugEnabled()) -->Line_6 $$ _log.debug("Use " + _initialContextFactoryBuilder.getClass() + " to instantiate initial context factory")[ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_44 $$ if ((context instanceof LdapContext) || ldapContext) [ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_37 $$ boolean ldapContext = false[ CD ]
Line_11 $$ environment = _environment-->Line_15 $$ initialContextFactoryClassName = (String) environment.get(Context.INITIAL_CONTEXT_FACTORY)[ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_52 $$ context = DoPrivilegedFactory.wrap(context)[ CD ]
Line_38 $$ for (Class<?> interfaceClass : interfaces) -->Line_39 $$ String interfaceClassName = interfaceClass.getName()[ FD ]
Line_47 $$ context = new SchemeAwareContextWrapper(context)-->Line_52 $$ context = DoPrivilegedFactory.wrap(context)[ FD ]
Line_40 $$ if (interfaceClassName.equals(LdapContext.class.getName())) -->Line_41 $$ ldapContext = true[ CD ]
Line_41 $$ ldapContext = true-->Line_44 $$ if ((context instanceof LdapContext) || ldapContext) [ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_3 $$ InitialContextFactory initialContextFactory = null[ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_15 $$ initialContextFactoryClassName = (String) environment.get(Context.INITIAL_CONTEXT_FACTORY)[ FD ]
Line_11 $$ environment = _environment-->Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)[ FD ]
Line_11 $$ environment = _environment-->Line_14 $$ if (environment != null) [ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_47 $$ context = new SchemeAwareContextWrapper(context)[ CD ]
Line_16 $$ if (_log.isDebugEnabled()) -->Line_17 $$ _log.debug("Environment initial context factory " + initialContextFactoryClassName)[ CD ]
Line_49 $$ if (paclPolicy == null) -->Line_50 $$ return context[ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_54 $$ return new PACLContext(context, paclPolicy)[ CD ]
Line_37 $$ boolean ldapContext = false-->Line_44 $$ if ((context instanceof LdapContext) || ldapContext) [ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_49 $$ if (paclPolicy == null) [ CD ]
Line_20 $$ if (initialContextFactoryClassName == null) -->Line_22 $$ if (_log.isDebugEnabled()) [ CD ]
Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)-->Line_52 $$ context = DoPrivilegedFactory.wrap(context)[ FD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_5 $$ if (_log.isDebugEnabled()) [ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_36 $$ Class<?>[] interfaces = clazz.getInterfaces()[ CD ]
Line_20 $$ if (initialContextFactoryClassName == null) -->Line_21 $$ initialContextFactoryClassName = System.getProperty(Context.INITIAL_CONTEXT_FACTORY)[ CD ]
Line_39 $$ String interfaceClassName = interfaceClass.getName()-->Line_40 $$ if (interfaceClassName.equals(LdapContext.class.getName())) [ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_4 $$ if (_initialContextFactoryBuilder != null) [ CD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_26 $$ if (_log.isDebugEnabled()) [ CD ]
Line_15 $$ initialContextFactoryClassName = (String) environment.get(Context.INITIAL_CONTEXT_FACTORY)-->Line_21 $$ initialContextFactoryClassName = System.getProperty(Context.INITIAL_CONTEXT_FACTORY)[ FD ]
Line_3 $$ InitialContextFactory initialContextFactory = null-->Line_29 $$ initialContextFactory = (InitialContextFactory) InstanceFactory.newInstance(initialContextFactoryClassName)[ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)[ CD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_14 $$ if (environment != null) [ CD ]
Line_3 $$ InitialContextFactory initialContextFactory = null-->Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)[ FD ]
Line_48 $$ PACLPolicy paclPolicy = PACLUtil.getPACLPolicy()-->Line_53 $$ paclPolicy = DoPrivilegedFactory.wrap(paclPolicy)[ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_11 $$ environment = _environment[ FD ]
Line_29 $$ initialContextFactory = (InitialContextFactory) InstanceFactory.newInstance(initialContextFactoryClassName)-->Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)[ FD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_20 $$ if (initialContextFactoryClassName == null) [ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_53 $$ paclPolicy = DoPrivilegedFactory.wrap(paclPolicy)[ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_8 $$ initialContextFactory = _initialContextFactoryBuilder.createInitialContextFactory(environment)[ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_10 $$ if (environment == null) [ FD ]
Line_15 $$ initialContextFactoryClassName = (String) environment.get(Context.INITIAL_CONTEXT_FACTORY)-->Line_29 $$ initialContextFactory = (InitialContextFactory) InstanceFactory.newInstance(initialContextFactoryClassName)[ FD ]
Line_44 $$ if ((context instanceof LdapContext) || ldapContext) -->Line_45 $$ return context[ CD ]
Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)-->Line_47 $$ context = new SchemeAwareContextWrapper(context)[ FD ]
Line_3 $$ InitialContextFactory initialContextFactory = null-->Line_8 $$ initialContextFactory = _initialContextFactoryBuilder.createInitialContextFactory(environment)[ FD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_13 $$ String initialContextFactoryClassName = null[ CD ]
Line_13 $$ String initialContextFactoryClassName = null-->Line_21 $$ initialContextFactoryClassName = System.getProperty(Context.INITIAL_CONTEXT_FACTORY)[ FD ]
Line_21 $$ initialContextFactoryClassName = System.getProperty(Context.INITIAL_CONTEXT_FACTORY)-->Line_29 $$ initialContextFactory = (InitialContextFactory) InstanceFactory.newInstance(initialContextFactoryClassName)[ FD ]
Line_13 $$ String initialContextFactoryClassName = null-->Line_20 $$ if (initialContextFactoryClassName == null) [ FD ]
Line_10 $$ if (environment == null) -->Line_11 $$ environment = _environment[ CD ]
Line_48 $$ PACLPolicy paclPolicy = PACLUtil.getPACLPolicy()-->Line_49 $$ if (paclPolicy == null) [ FD ]
Line_13 $$ String initialContextFactoryClassName = null-->Line_29 $$ initialContextFactory = (InitialContextFactory) InstanceFactory.newInstance(initialContextFactoryClassName)[ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_14 $$ if (environment != null) [ FD ]
Line_8 $$ initialContextFactory = _initialContextFactoryBuilder.createInitialContextFactory(environment)-->Line_29 $$ initialContextFactory = (InitialContextFactory) InstanceFactory.newInstance(initialContextFactoryClassName)[ FD ]
Line_13 $$ String initialContextFactoryClassName = null-->Line_15 $$ initialContextFactoryClassName = (String) environment.get(Context.INITIAL_CONTEXT_FACTORY)[ FD ]
Line_37 $$ boolean ldapContext = false-->Line_41 $$ ldapContext = true[ FD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_48 $$ PACLPolicy paclPolicy = PACLUtil.getPACLPolicy()[ CD ]
Line_22 $$ if (_log.isDebugEnabled()) -->Line_23 $$ _log.debug("System initial context factory " + initialContextFactoryClassName)[ CD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_29 $$ initialContextFactory = (InitialContextFactory) InstanceFactory.newInstance(initialContextFactoryClassName)[ CD ]
Line_8 $$ initialContextFactory = _initialContextFactoryBuilder.createInitialContextFactory(environment)-->Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)[ FD ]
Line_15 $$ initialContextFactoryClassName = (String) environment.get(Context.INITIAL_CONTEXT_FACTORY)-->Line_20 $$ if (initialContextFactoryClassName == null) [ FD ]
Line_14 $$ if (environment != null) -->Line_15 $$ initialContextFactoryClassName = (String) environment.get(Context.INITIAL_CONTEXT_FACTORY)[ CD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_10 $$ if (environment == null) [ CD ]
Line_2 $$ protected Context doGetInitialContext(Hashtable<?, ?> environment) throws Exception -->Line_31 $$ Context context = initialContextFactory.getInitialContext(environment)[ FD ]
Line_4 $$ if (_initialContextFactoryBuilder != null) -->Line_8 $$ initialContextFactory = _initialContextFactoryBuilder.createInitialContextFactory(environment)[ CD ]
