Line_55 $$ if (modeKeys.length == 0) -->Line_56 $$ if (typeMapping != null) [ CD ]
Line_42 $$ if (requestMapping != null) -->Line_43 $$ modeKeys = requestMapping.value()[ CD ]
Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())-->Line_64 $$ registerHandler(new PortletMode(modeKey), beanName, predicate)[ FD ]
Line_30 $$ RequestMapping requestMapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_43 $$ modeKeys = requestMapping.value()[ FD ]
Line_42 $$ if (requestMapping != null) -->Line_50 $$ if (predicate == null) [ CD ]
Line_28 $$ ResourceMapping resourceMapping = AnnotationUtils.findAnnotation(method, ResourceMapping.class)-->Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())[ FD ]
Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())-->Line_54 $$ if (predicate != null) [ FD ]
Line_34 $$ if (renderMapping != null) -->Line_35 $$ params = StringUtils.mergeStringArrays(params, renderMapping.params())[ CD ]
Line_27 $$ RenderMapping renderMapping = AnnotationUtils.findAnnotation(method, RenderMapping.class)-->Line_34 $$ if (renderMapping != null) [ FD ]
Line_34 $$ if (renderMapping != null) -->Line_37 $$ if (resourceMapping != null) [ CD ]
Line_35 $$ params = StringUtils.mergeStringArrays(params, renderMapping.params())-->Line_49 $$ params = StringUtils.mergeStringArrays(params, requestMapping.params())[ FD ]
Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)-->Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_22 $$ String[] params = new String[0][ CD ]
Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)-->Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())[ FD ]
Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())-->Line_54 $$ if (predicate != null) [ FD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_50 $$ if (predicate == null) [ FD ]
Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())-->Line_51 $$ predicate = new MethodLevelMappingPredicate(params)[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_26 $$ ActionMapping actionMapping = AnnotationUtils.findAnnotation(method, ActionMapping.class)[ CD ]
Line_37 $$ if (resourceMapping != null) -->Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())[ CD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())[ FD ]
Line_29 $$ EventMapping eventMapping = AnnotationUtils.findAnnotation(method, EventMapping.class)-->Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())[ FD ]
Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)-->Line_54 $$ if (predicate != null) [ FD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_64 $$ registerHandler(new PortletMode(modeKey), beanName, predicate)[ FD ]
Line_21 $$ String[] modeKeys = new String[0]-->Line_43 $$ modeKeys = requestMapping.value()[ FD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())[ FD ]
Line_26 $$ ActionMapping actionMapping = AnnotationUtils.findAnnotation(method, ActionMapping.class)-->Line_31 $$ if (actionMapping != null) [ FD ]
Line_15 $$ for (Class<?> currentHandlerType : handlerTypes) -->Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() [ FD ]
Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)-->Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_21 $$ String[] modeKeys = new String[0][ CD ]
Line_43 $$ modeKeys = requestMapping.value()-->Line_57 $$ modeKeys = typeMapping.value()[ FD ]
Line_26 $$ ActionMapping actionMapping = AnnotationUtils.findAnnotation(method, ActionMapping.class)-->Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)[ FD ]
Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)-->Line_64 $$ registerHandler(new PortletMode(modeKey), beanName, predicate)[ FD ]
Line_21 $$ String[] modeKeys = new String[0]-->Line_46 $$ throw new IllegalStateException("Mode mappings conflict between method and type level: " + Arrays.asList(modeKeys) + " versus " + Arrays.asList(typeMapping.value()))[ FD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)[ FD ]
Line_39 $$ if (eventMapping != null) -->Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())[ CD ]
Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())-->Line_50 $$ if (predicate == null) [ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_54 $$ if (predicate != null) [ CD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_27 $$ RenderMapping renderMapping = AnnotationUtils.findAnnotation(method, RenderMapping.class)[ CD ]
Line_31 $$ if (actionMapping != null) -->Line_32 $$ params = StringUtils.mergeStringArrays(params, actionMapping.params())[ CD ]
Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)-->Line_54 $$ if (predicate != null) [ FD ]
Line_24 $$ params = StringUtils.mergeStringArrays(typeMapping.params(), params)-->Line_49 $$ params = StringUtils.mergeStringArrays(params, requestMapping.params())[ FD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_51 $$ predicate = new MethodLevelMappingPredicate(params)[ FD ]
Line_22 $$ String[] params = new String[0]-->Line_49 $$ params = StringUtils.mergeStringArrays(params, requestMapping.params())[ FD ]
Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)-->Line_51 $$ predicate = new MethodLevelMappingPredicate(params)[ FD ]
Line_12 $$ Set<Class<?>> handlerTypes = new LinkedHashSet<Class<?>>()-->Line_13 $$ handlerTypes.add(handlerType)[ FD ]
Line_37 $$ if (resourceMapping != null) -->Line_39 $$ if (eventMapping != null) [ CD ]
Line_27 $$ RenderMapping renderMapping = AnnotationUtils.findAnnotation(method, RenderMapping.class)-->Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)[ FD ]
Line_31 $$ if (actionMapping != null) -->Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)[ CD ]
Line_26 $$ ActionMapping actionMapping = AnnotationUtils.findAnnotation(method, ActionMapping.class)-->Line_32 $$ params = StringUtils.mergeStringArrays(params, actionMapping.params())[ FD ]
Line_21 $$ String[] modeKeys = new String[0]-->Line_45 $$ if (!PortletAnnotationMappingUtils.validateModeMapping(modeKeys, typeMapping.value())) [ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_20 $$ PortletRequestMappingPredicate predicate = null[ CD ]
Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)-->Line_51 $$ predicate = new MethodLevelMappingPredicate(params)[ FD ]
Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)-->Line_50 $$ if (predicate == null) [ FD ]
Line_32 $$ params = StringUtils.mergeStringArrays(params, actionMapping.params())-->Line_35 $$ params = StringUtils.mergeStringArrays(params, renderMapping.params())[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_28 $$ ResourceMapping resourceMapping = AnnotationUtils.findAnnotation(method, ResourceMapping.class)[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_23 $$ if (typeMapping != null) [ CD ]
Line_50 $$ if (predicate == null) -->Line_51 $$ predicate = new MethodLevelMappingPredicate(params)[ CD ]
Line_24 $$ params = StringUtils.mergeStringArrays(typeMapping.params(), params)-->Line_35 $$ params = StringUtils.mergeStringArrays(params, renderMapping.params())[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_29 $$ EventMapping eventMapping = AnnotationUtils.findAnnotation(method, EventMapping.class)[ CD ]
Line_56 $$ if (typeMapping != null) -->Line_57 $$ modeKeys = typeMapping.value()[ CD ]
Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)-->Line_64 $$ registerHandler(new PortletMode(modeKey), beanName, predicate)[ FD ]
Line_42 $$ if (requestMapping != null) -->Line_44 $$ if (typeMapping != null) [ CD ]
Line_54 $$ if (predicate != null) -->Line_55 $$ if (modeKeys.length == 0) [ CD ]
Line_43 $$ modeKeys = requestMapping.value()-->Line_45 $$ if (!PortletAnnotationMappingUtils.validateModeMapping(modeKeys, typeMapping.value())) [ FD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)[ FD ]
Line_23 $$ if (typeMapping != null) -->Line_24 $$ params = StringUtils.mergeStringArrays(typeMapping.params(), params)[ CD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_42 $$ if (requestMapping != null) [ CD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_31 $$ if (actionMapping != null) [ CD ]
Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)-->Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())[ FD ]
Line_51 $$ predicate = new MethodLevelMappingPredicate(params)-->Line_54 $$ if (predicate != null) [ FD ]
Line_27 $$ RenderMapping renderMapping = AnnotationUtils.findAnnotation(method, RenderMapping.class)-->Line_35 $$ params = StringUtils.mergeStringArrays(params, renderMapping.params())[ FD ]
Line_20 $$ PortletRequestMappingPredicate predicate = null-->Line_54 $$ if (predicate != null) [ FD ]
Line_30 $$ RequestMapping requestMapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_49 $$ params = StringUtils.mergeStringArrays(params, requestMapping.params())[ FD ]
Line_24 $$ params = StringUtils.mergeStringArrays(typeMapping.params(), params)-->Line_32 $$ params = StringUtils.mergeStringArrays(params, actionMapping.params())[ FD ]
Line_12 $$ Set<Class<?>> handlerTypes = new LinkedHashSet<Class<?>>()-->Line_14 $$ handlerTypes.addAll(Arrays.asList(handlerType.getInterfaces()))[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_29 $$ EventMapping eventMapping = AnnotationUtils.findAnnotation(method, EventMapping.class)[ FD ]
Line_21 $$ String[] modeKeys = new String[0]-->Line_57 $$ modeKeys = typeMapping.value()[ FD ]
Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)-->Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_26 $$ ActionMapping actionMapping = AnnotationUtils.findAnnotation(method, ActionMapping.class)[ FD ]
Line_28 $$ ResourceMapping resourceMapping = AnnotationUtils.findAnnotation(method, ResourceMapping.class)-->Line_37 $$ if (resourceMapping != null) [ FD ]
Line_11 $$ final Set<Boolean> handlersRegistered = new HashSet<Boolean>(1)-->Line_71 $$ return !handlersRegistered.isEmpty()[ FD ]
Line_43 $$ modeKeys = requestMapping.value()-->Line_46 $$ throw new IllegalStateException("Mode mappings conflict between method and type level: " + Arrays.asList(modeKeys) + " versus " + Arrays.asList(typeMapping.value()))[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_30 $$ RequestMapping requestMapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)[ CD ]
Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())-->Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())[ FD ]
Line_51 $$ predicate = new MethodLevelMappingPredicate(params)-->Line_64 $$ registerHandler(new PortletMode(modeKey), beanName, predicate)[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_30 $$ RequestMapping requestMapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)[ FD ]
Line_32 $$ params = StringUtils.mergeStringArrays(params, actionMapping.params())-->Line_49 $$ params = StringUtils.mergeStringArrays(params, requestMapping.params())[ FD ]
Line_44 $$ if (typeMapping != null) -->Line_45 $$ if (!PortletAnnotationMappingUtils.validateModeMapping(modeKeys, typeMapping.value())) [ CD ]
Line_29 $$ EventMapping eventMapping = AnnotationUtils.findAnnotation(method, EventMapping.class)-->Line_39 $$ if (eventMapping != null) [ FD ]
Line_11 $$ final Set<Boolean> handlersRegistered = new HashSet<Boolean>(1)-->Line_65 $$ handlersRegistered.add(Boolean.TRUE)[ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_28 $$ ResourceMapping resourceMapping = AnnotationUtils.findAnnotation(method, ResourceMapping.class)[ CD ]
Line_34 $$ if (renderMapping != null) -->Line_36 $$ predicate = new RenderMappingPredicate(renderMapping.windowState(), params)[ CD ]
Line_22 $$ String[] params = new String[0]-->Line_35 $$ params = StringUtils.mergeStringArrays(params, renderMapping.params())[ FD ]
Line_31 $$ if (actionMapping != null) -->Line_34 $$ if (renderMapping != null) [ CD ]
Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())-->Line_50 $$ if (predicate == null) [ FD ]
Line_16 $$ ReflectionUtils.doWithMethods(currentHandlerType, new ReflectionUtils.MethodCallback() -->Line_27 $$ RenderMapping renderMapping = AnnotationUtils.findAnnotation(method, RenderMapping.class)[ FD ]
Line_33 $$ predicate = new ActionMappingPredicate(actionMapping.name(), params)-->Line_50 $$ if (predicate == null) [ FD ]
Line_22 $$ String[] params = new String[0]-->Line_32 $$ params = StringUtils.mergeStringArrays(params, actionMapping.params())[ FD ]
Line_38 $$ predicate = new ResourceMappingPredicate(resourceMapping.value())-->Line_51 $$ predicate = new MethodLevelMappingPredicate(params)[ FD ]
Line_40 $$ predicate = new EventMappingPredicate(eventMapping.value())-->Line_64 $$ registerHandler(new PortletMode(modeKey), beanName, predicate)[ FD ]
Line_22 $$ String[] params = new String[0]-->Line_24 $$ params = StringUtils.mergeStringArrays(typeMapping.params(), params)[ FD ]
Line_42 $$ if (requestMapping != null) -->Line_49 $$ params = StringUtils.mergeStringArrays(params, requestMapping.params())[ CD ]
Line_30 $$ RequestMapping requestMapping = AnnotationUtils.findAnnotation(method, RequestMapping.class)-->Line_42 $$ if (requestMapping != null) [ FD ]
Line_55 $$ if (modeKeys.length == 0) -->Line_59 $$ if (modeKeys.length == 0) [ CD ]
