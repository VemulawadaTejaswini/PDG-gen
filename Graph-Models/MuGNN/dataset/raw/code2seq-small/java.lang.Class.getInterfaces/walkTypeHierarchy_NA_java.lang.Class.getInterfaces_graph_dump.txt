Line_13 $$ while ((type = queue.poll()) != null) -->Line_19 $$ Class<? super T> superclass = type.getSuperclass()[ FD ]
Line_13 $$ while ((type = queue.poll()) != null) -->Line_19 $$ Class<? super T> superclass = type.getSuperclass()[ CD ]
Line_19 $$ Class<? super T> superclass = type.getSuperclass()-->Line_21 $$ queue.add(superclass)[ FD ]
Line_13 $$ while ((type = queue.poll()) != null) -->Line_18 $$ visitor.visitType(type)[ FD ]
Line_12 $$ Class<? super T> type-->Line_13 $$ while ((type = queue.poll()) != null) [ FD ]
Line_10 $$ Queue<Class<? super T>> queue = new ArrayDeque<Class<? super T>>()-->Line_25 $$ queue.add(Cast.<Class<? super T>>uncheckedCast(iface))[ FD ]
Line_20 $$ if (superclass != null) -->Line_21 $$ queue.add(superclass)[ CD ]
Line_10 $$ Queue<Class<? super T>> queue = new ArrayDeque<Class<? super T>>()-->Line_13 $$ while ((type = queue.poll()) != null) [ FD ]
Line_12 $$ Class<? super T> type-->Line_19 $$ Class<? super T> superclass = type.getSuperclass()[ FD ]
Line_19 $$ Class<? super T> superclass = type.getSuperclass()-->Line_20 $$ if (superclass != null) [ FD ]
Line_23 $$ for (Class<?> iface : type.getInterfaces()) -->Line_24 $$ if (seenInterfaces.add(iface)) [ FD ]
Line_24 $$ if (seenInterfaces.add(iface)) -->Line_25 $$ queue.add(Cast.<Class<? super T>>uncheckedCast(iface))[ CD ]
Line_13 $$ while ((type = queue.poll()) != null) -->Line_23 $$ for (Class<?> iface : type.getInterfaces()) [ FD ]
Line_12 $$ Class<? super T> type-->Line_18 $$ visitor.visitType(type)[ FD ]
Line_13 $$ while ((type = queue.poll()) != null) -->Line_20 $$ if (superclass != null) [ CD ]
Line_12 $$ Class<? super T> type-->Line_23 $$ for (Class<?> iface : type.getInterfaces()) [ FD ]
Line_13 $$ while ((type = queue.poll()) != null) -->Line_18 $$ visitor.visitType(type)[ CD ]
Line_9 $$ Set<Class<?>> seenInterfaces = Sets.newHashSet()-->Line_24 $$ if (seenInterfaces.add(iface)) [ FD ]
Line_10 $$ Queue<Class<? super T>> queue = new ArrayDeque<Class<? super T>>()-->Line_21 $$ queue.add(superclass)[ FD ]
Line_10 $$ Queue<Class<? super T>> queue = new ArrayDeque<Class<? super T>>()-->Line_11 $$ queue.add(clazz)[ FD ]
Line_23 $$ for (Class<?> iface : type.getInterfaces()) -->Line_25 $$ queue.add(Cast.<Class<? super T>>uncheckedCast(iface))[ FD ]
