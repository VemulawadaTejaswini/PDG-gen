Line_12 $$ A annotation = findAnnotation(ann.annotationType(), annotationType, visited)-->Line_24 $$ if (annotation != null) [ FD ]
Line_11 $$ if (!isInJavaLangAnnotationPackage(ann) && visited.add(ann)) -->Line_13 $$ if (annotation != null) [ CD ]
Line_5 $$ for (Annotation ann : anns) -->Line_6 $$ if (ann.annotationType() == annotationType) [ FD ]
Line_22 $$ for (Class<?> ifc : clazz.getInterfaces()) -->Line_23 $$ A annotation = findAnnotation(ifc, annotationType, visited)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_23 $$ A annotation = findAnnotation(ifc, annotationType, visited)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_28 $$ Class<?> superclass = clazz.getSuperclass()[ CD ]
Line_11 $$ if (!isInJavaLangAnnotationPackage(ann) && visited.add(ann)) -->Line_12 $$ A annotation = findAnnotation(ann.annotationType(), annotationType, visited)[ CD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_32 $$ return findAnnotation(superclass, annotationType, visited)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_12 $$ A annotation = findAnnotation(ann.annotationType(), annotationType, visited)[ FD ]
Line_6 $$ if (ann.annotationType() == annotationType) -->Line_7 $$ return (A) ann[ CD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_19 $$ handleIntrospectionFailure(clazz, ex)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_32 $$ return findAnnotation(superclass, annotationType, visited)[ CD ]
Line_5 $$ for (Annotation ann : anns) -->Line_11 $$ if (!isInJavaLangAnnotationPackage(ann) && visited.add(ann)) [ FD ]
Line_13 $$ if (annotation != null) -->Line_14 $$ return annotation[ CD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_4 $$ Annotation[] anns = clazz.getDeclaredAnnotations()[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_28 $$ Class<?> superclass = clazz.getSuperclass()[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_11 $$ if (!isInJavaLangAnnotationPackage(ann) && visited.add(ann)) [ FD ]
Line_12 $$ A annotation = findAnnotation(ann.annotationType(), annotationType, visited)-->Line_13 $$ if (annotation != null) [ FD ]
Line_28 $$ Class<?> superclass = clazz.getSuperclass()-->Line_32 $$ return findAnnotation(superclass, annotationType, visited)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_6 $$ if (ann.annotationType() == annotationType) [ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_29 $$ if (superclass == null || Object.class == superclass) [ CD ]
Line_29 $$ if (superclass == null || Object.class == superclass) -->Line_30 $$ return null[ CD ]
Line_5 $$ for (Annotation ann : anns) -->Line_12 $$ A annotation = findAnnotation(ann.annotationType(), annotationType, visited)[ FD ]
Line_2 $$ private static <A extends Annotation> A findAnnotation(Class<?> clazz, Class<A> annotationType, Set<Annotation> visited) -->Line_22 $$ for (Class<?> ifc : clazz.getInterfaces()) [ FD ]
Line_24 $$ if (annotation != null) -->Line_25 $$ return annotation[ CD ]
