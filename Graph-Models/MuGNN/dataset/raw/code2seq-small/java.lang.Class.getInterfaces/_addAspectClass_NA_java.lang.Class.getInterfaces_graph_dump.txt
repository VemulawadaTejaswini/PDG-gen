Line_25 $$ if (resolvedType.isAspect()) -->Line_27 $$ crosscuttingMembersSet.addOrReplaceAspect(resolvedType)[ CD ]
Line_2 $$ private void _addAspectClass(Class<?> aspectClass) -->Line_4 $$ while (true) [ CD ]
Line_4 $$ while (true) -->Line_5 $$ Class<?>[] interfaceClasses = currentClass.getInterfaces()[ CD ]
Line_2 $$ private void _addAspectClass(Class<?> aspectClass) -->Line_25 $$ if (resolvedType.isAspect()) [ CD ]
Line_7 $$ JavaClass javaClass = _classToJavaClass(interfaceClass)-->Line_15 $$ if (javaClass != null) [ FD ]
Line_8 $$ if (javaClass != null) -->Line_9 $$ bcelWorld.addSourceObjectType(javaClass, false)[ CD ]
Line_7 $$ JavaClass javaClass = _classToJavaClass(interfaceClass)-->Line_8 $$ if (javaClass != null) [ FD ]
Line_22 $$ JavaClass javaClass = _classToJavaClass(aspectClass)-->Line_23 $$ BcelObjectType bcelObjectType = bcelWorld.addSourceObjectType(javaClass, false)[ FD ]
Line_4 $$ while (true) -->Line_12 $$ currentClass = currentClass.getSuperclass()[ CD ]
Line_3 $$ Class<?> currentClass = aspectClass-->Line_13 $$ if (currentClass != null) [ FD ]
Line_2 $$ private void _addAspectClass(Class<?> aspectClass) -->Line_24 $$ ResolvedType resolvedType = bcelObjectType.getResolvedTypeX()[ CD ]
Line_13 $$ if (currentClass != null) -->Line_15 $$ if (javaClass != null) [ CD ]
Line_3 $$ Class<?> currentClass = aspectClass-->Line_14 $$ JavaClass javaClass = _classToJavaClass(currentClass)[ FD ]
Line_3 $$ Class<?> currentClass = aspectClass-->Line_5 $$ Class<?>[] interfaceClasses = currentClass.getInterfaces()[ FD ]
Line_2 $$ private void _addAspectClass(Class<?> aspectClass) -->Line_22 $$ JavaClass javaClass = _classToJavaClass(aspectClass)[ FD ]
Line_4 $$ while (true) -->Line_13 $$ if (currentClass != null) [ CD ]
Line_23 $$ BcelObjectType bcelObjectType = bcelWorld.addSourceObjectType(javaClass, false)-->Line_24 $$ ResolvedType resolvedType = bcelObjectType.getResolvedTypeX()[ FD ]
Line_25 $$ if (resolvedType.isAspect()) -->Line_26 $$ CrosscuttingMembersSet crosscuttingMembersSet = bcelWorld.getCrosscuttingMembersSet()[ CD ]
Line_12 $$ currentClass = currentClass.getSuperclass()-->Line_13 $$ if (currentClass != null) [ FD ]
Line_15 $$ if (javaClass != null) -->Line_16 $$ bcelWorld.addSourceObjectType(javaClass, false)[ CD ]
Line_2 $$ private void _addAspectClass(Class<?> aspectClass) -->Line_3 $$ Class<?> currentClass = aspectClass[ CD ]
Line_24 $$ ResolvedType resolvedType = bcelObjectType.getResolvedTypeX()-->Line_27 $$ crosscuttingMembersSet.addOrReplaceAspect(resolvedType)[ FD ]
Line_2 $$ private void _addAspectClass(Class<?> aspectClass) -->Line_22 $$ JavaClass javaClass = _classToJavaClass(aspectClass)[ CD ]
Line_3 $$ Class<?> currentClass = aspectClass-->Line_12 $$ currentClass = currentClass.getSuperclass()[ FD ]
Line_24 $$ ResolvedType resolvedType = bcelObjectType.getResolvedTypeX()-->Line_25 $$ if (resolvedType.isAspect()) [ FD ]
Line_7 $$ JavaClass javaClass = _classToJavaClass(interfaceClass)-->Line_23 $$ BcelObjectType bcelObjectType = bcelWorld.addSourceObjectType(javaClass, false)[ FD ]
Line_26 $$ CrosscuttingMembersSet crosscuttingMembersSet = bcelWorld.getCrosscuttingMembersSet()-->Line_27 $$ crosscuttingMembersSet.addOrReplaceAspect(resolvedType)[ FD ]
Line_6 $$ for (Class<?> interfaceClass : interfaceClasses) -->Line_7 $$ JavaClass javaClass = _classToJavaClass(interfaceClass)[ FD ]
Line_13 $$ if (currentClass != null) -->Line_14 $$ JavaClass javaClass = _classToJavaClass(currentClass)[ CD ]
Line_7 $$ JavaClass javaClass = _classToJavaClass(interfaceClass)-->Line_16 $$ bcelWorld.addSourceObjectType(javaClass, false)[ FD ]
Line_2 $$ private void _addAspectClass(Class<?> aspectClass) -->Line_23 $$ BcelObjectType bcelObjectType = bcelWorld.addSourceObjectType(javaClass, false)[ CD ]
Line_12 $$ currentClass = currentClass.getSuperclass()-->Line_14 $$ JavaClass javaClass = _classToJavaClass(currentClass)[ FD ]
Line_7 $$ JavaClass javaClass = _classToJavaClass(interfaceClass)-->Line_9 $$ bcelWorld.addSourceObjectType(javaClass, false)[ FD ]
Line_12 $$ currentClass = currentClass.getSuperclass()-->Line_5 $$ Class<?>[] interfaceClasses = currentClass.getInterfaces()[ FD ]
