Line_5 $$ final Method superMethod = BasicLookAndFeel.class.getDeclaredMethod("getDefaults")-->Line_6 $$ superMethod.setAccessible(true)[ FD ]
Line_11 $$ Font font = findFont("DejaVu Sans")-->Line_23 $$ if (font != null) [ FD ]
Line_11 $$ Font font = findFont("DejaVu Sans")-->Line_24 $$ defaults.put(key, new FontUIResource("Dialog", font.getStyle(), font.getSize()))[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_42 $$ applySystemFonts(defaults)[ FD ]
Line_14 $$ if (key instanceof String && ((String) key).endsWith(".font")) -->Line_15 $$ defaults.put(key, new FontUIResource(font.deriveFont(13f)))[ CD ]
Line_5 $$ final Method superMethod = BasicLookAndFeel.class.getDeclaredMethod("getDefaults")-->Line_7 $$ final UIDefaults metalDefaults = (UIDefaults) superMethod.invoke(new MetalLookAndFeel())[ FD ]
Line_10 $$ if (!Registry.is("darcula.use.native.fonts.on.linux")) -->Line_19 $$ if (Arrays.asList("CN", "JP", "KR", "TW").contains(Locale.getDefault().getCountry())) [ CD ]
Line_5 $$ final Method superMethod = BasicLookAndFeel.class.getDeclaredMethod("getDefaults")-->Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_35 $$ defaults.put("Spinner.arrowButtonSize", JBUI.size(16, 5).asUIResource())[ FD ]
Line_37 $$ if (SystemInfo.isWindows && Registry.is("ide.win.frame.decoration")) -->Line_39 $$ JDialog.setDefaultLookAndFeelDecorated(true)[ CD ]
Line_13 $$ for (Object key : defaults.keySet()) -->Line_22 $$ final Font font = defaults.getFont(key)[ FD ]
Line_21 $$ if (key instanceof String && ((String) key).endsWith(".font")) -->Line_22 $$ final Font font = defaults.getFont(key)[ CD ]
Line_41 $$ if (SystemInfo.isLinux && JBUI.isHiDPI()) -->Line_42 $$ applySystemFonts(defaults)[ CD ]
Line_13 $$ for (Object key : defaults.keySet()) -->Line_24 $$ defaults.put(key, new FontUIResource("Dialog", font.getStyle(), font.getSize()))[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_33 $$ patchComboBox(metalDefaults, defaults)[ FD ]
Line_37 $$ if (SystemInfo.isWindows && Registry.is("ide.win.frame.decoration")) -->Line_38 $$ JFrame.setDefaultLookAndFeelDecorated(true)[ CD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_44 $$ defaults.put("EditorPane.font", defaults.getFont("TextField.font"))[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_15 $$ defaults.put(key, new FontUIResource(font.deriveFont(13f)))[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_24 $$ defaults.put(key, new FontUIResource("Dialog", font.getStyle(), font.getSize()))[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_34 $$ defaults.remove("Spinner.arrowButtonBorder")[ FD ]
Line_10 $$ if (!Registry.is("darcula.use.native.fonts.on.linux")) -->Line_11 $$ Font font = findFont("DejaVu Sans")[ CD ]
Line_10 $$ if (!Registry.is("darcula.use.native.fonts.on.linux")) -->Line_12 $$ if (font != null) [ CD ]
Line_11 $$ Font font = findFont("DejaVu Sans")-->Line_12 $$ if (font != null) [ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_32 $$ patchStyledEditorKit(defaults)[ FD ]
Line_13 $$ for (Object key : defaults.keySet()) -->Line_15 $$ defaults.put(key, new FontUIResource(font.deriveFont(13f)))[ FD ]
Line_7 $$ final UIDefaults metalDefaults = (UIDefaults) superMethod.invoke(new MetalLookAndFeel())-->Line_33 $$ patchComboBox(metalDefaults, defaults)[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_20 $$ for (Object key : defaults.keySet()) [ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_30 $$ LafManagerImpl.initInputMapDefaults(defaults)[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_31 $$ initIdeaDefaults(defaults)[ FD ]
Line_21 $$ if (key instanceof String && ((String) key).endsWith(".font")) -->Line_23 $$ if (font != null) [ CD ]
Line_23 $$ if (font != null) -->Line_24 $$ defaults.put(key, new FontUIResource("Dialog", font.getStyle(), font.getSize()))[ CD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_22 $$ final Font font = defaults.getFont(key)[ FD ]
Line_8 $$ final UIDefaults defaults = (UIDefaults) superMethod.invoke(base)-->Line_13 $$ for (Object key : defaults.keySet()) [ FD ]
Line_11 $$ Font font = findFont("DejaVu Sans")-->Line_15 $$ defaults.put(key, new FontUIResource(font.deriveFont(13f)))[ FD ]
Line_9 $$ if (SystemInfo.isLinux) -->Line_10 $$ if (!Registry.is("darcula.use.native.fonts.on.linux")) [ CD ]
