Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_11 $$ assertEquals("Bingo", method.invoke("Bingo"))[ CD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_8 $$ assertNotNull(result)[ CD ]
Line_10 $$ Method method = (Method) result-->Line_11 $$ assertEquals("Bingo", method.invoke("Bingo"))[ FD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_9 $$ assertTrue(result instanceof Method)[ CD ]
Line_7 $$ Object result = factory.getObject()-->Line_8 $$ assertNotNull(result)[ FD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_3 $$ given(beanFactory.getType(BEAN_NAME)).willReturn((Class) String.class)[ CD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_6 $$ factory.setBeanFactory(beanFactory)[ CD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_5 $$ factory.setMethodName("toString()")[ CD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_4 $$ factory.setTargetBeanName(BEAN_NAME)[ CD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_7 $$ Object result = factory.getObject()[ CD ]
Line_2 $$ public void testSunnyDayPath() throws Exception -->Line_10 $$ Method method = (Method) result[ CD ]
