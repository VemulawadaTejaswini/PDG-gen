Line_11 $$ Class<?> httpAdaptorClass = Class.forName("mx4j.tools.adaptor.http.HttpAdaptor")-->Line_21 $$ httpAdaptorClass.getMethod("start").invoke(httpAdaptor)[ FD ]
Line_12 $$ Object httpAdaptor = httpAdaptorClass.newInstance()-->Line_14 $$ httpAdaptorClass.getMethod("setPort", Integer.TYPE).invoke(httpAdaptor, getPort())[ FD ]
Line_11 $$ Class<?> httpAdaptorClass = Class.forName("mx4j.tools.adaptor.http.HttpAdaptor")-->Line_12 $$ Object httpAdaptor = httpAdaptorClass.newInstance()[ FD ]
Line_11 $$ Class<?> httpAdaptorClass = Class.forName("mx4j.tools.adaptor.http.HttpAdaptor")-->Line_19 $$ httpAdaptorClass.getMethod("setProcessor", Class.forName("mx4j.tools.adaptor.http.ProcessorMBean")).invoke(httpAdaptor, xsltProcessor)[ FD ]
Line_9 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_20 $$ mbs.registerMBean(xsltProcessor, processorName)[ FD ]
Line_15 $$ ObjectName httpName = new ObjectName("system:name=http")-->Line_16 $$ mbs.registerMBean(httpAdaptor, httpName)[ FD ]
Line_11 $$ Class<?> httpAdaptorClass = Class.forName("mx4j.tools.adaptor.http.HttpAdaptor")-->Line_13 $$ httpAdaptorClass.getMethod("setHost", String.class).invoke(httpAdaptor, getAddress())[ FD ]
Line_11 $$ Class<?> httpAdaptorClass = Class.forName("mx4j.tools.adaptor.http.HttpAdaptor")-->Line_14 $$ httpAdaptorClass.getMethod("setPort", Integer.TYPE).invoke(httpAdaptor, getPort())[ FD ]
Line_10 $$ ObjectName processorName = new ObjectName("Server:name=XSLTProcessor")-->Line_20 $$ mbs.registerMBean(xsltProcessor, processorName)[ FD ]
Line_12 $$ Object httpAdaptor = httpAdaptorClass.newInstance()-->Line_13 $$ httpAdaptorClass.getMethod("setHost", String.class).invoke(httpAdaptor, getAddress())[ FD ]
Line_18 $$ Object xsltProcessor = xsltProcessorClass.newInstance()-->Line_20 $$ mbs.registerMBean(xsltProcessor, processorName)[ FD ]
Line_12 $$ Object httpAdaptor = httpAdaptorClass.newInstance()-->Line_21 $$ httpAdaptorClass.getMethod("start").invoke(httpAdaptor)[ FD ]
Line_18 $$ Object xsltProcessor = xsltProcessorClass.newInstance()-->Line_19 $$ httpAdaptorClass.getMethod("setProcessor", Class.forName("mx4j.tools.adaptor.http.ProcessorMBean")).invoke(httpAdaptor, xsltProcessor)[ FD ]
Line_12 $$ Object httpAdaptor = httpAdaptorClass.newInstance()-->Line_19 $$ httpAdaptorClass.getMethod("setProcessor", Class.forName("mx4j.tools.adaptor.http.ProcessorMBean")).invoke(httpAdaptor, xsltProcessor)[ FD ]
Line_17 $$ Class<?> xsltProcessorClass = Class.forName("mx4j.tools.adaptor.http.XSLTProcessor")-->Line_18 $$ Object xsltProcessor = xsltProcessorClass.newInstance()[ FD ]
Line_12 $$ Object httpAdaptor = httpAdaptorClass.newInstance()-->Line_16 $$ mbs.registerMBean(httpAdaptor, httpName)[ FD ]
Line_9 $$ MBeanServer mbs = ManagementFactory.getPlatformMBeanServer()-->Line_16 $$ mbs.registerMBean(httpAdaptor, httpName)[ FD ]
