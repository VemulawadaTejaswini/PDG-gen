Line_13 $$ if (each.isShowing()) -->Line_14 $$ showingWindow = each[ CD ]
Line_3 $$ Window showingWindow = wnd-->Line_14 $$ showingWindow = each[ FD ]
Line_2 $$ private static void fixStickyWindow(KeyboardFocusManager mgr, Window wnd, String resetMethod) -->Line_20 $$ final Method setActive = ReflectionUtil.findMethod(ReflectionUtil.getClassDeclaredMethods(KeyboardFocusManager.class, false), resetMethod, Window.class)[ FD ]
Line_10 $$ if (showingWindow == null) -->Line_11 $$ final Frame[] allFrames = Frame.getFrames()[ CD ]
Line_8 $$ showingWindow = (Window) showingWindow.getParent()-->Line_5 $$ while (showingWindow != null) [ FD ]
Line_19 $$ if (showingWindow != null && showingWindow != wnd) -->Line_21 $$ if (setActive != null) [ CD ]
Line_2 $$ private static void fixStickyWindow(KeyboardFocusManager mgr, Window wnd, String resetMethod) -->Line_4 $$ if (wnd != null && !wnd.isShowing()) [ FD ]
Line_19 $$ if (showingWindow != null && showingWindow != wnd) -->Line_20 $$ final Method setActive = ReflectionUtil.findMethod(ReflectionUtil.getClassDeclaredMethods(KeyboardFocusManager.class, false), resetMethod, Window.class)[ CD ]
Line_2 $$ private static void fixStickyWindow(KeyboardFocusManager mgr, Window wnd, String resetMethod) -->Line_23 $$ setActive.invoke(mgr, (Window) showingWindow)[ FD ]
Line_4 $$ if (wnd != null && !wnd.isShowing()) -->Line_19 $$ if (showingWindow != null && showingWindow != wnd) [ CD ]
Line_3 $$ Window showingWindow = wnd-->Line_5 $$ while (showingWindow != null) [ FD ]
Line_12 $$ for (Frame each : allFrames) -->Line_13 $$ if (each.isShowing()) [ FD ]
Line_3 $$ Window showingWindow = wnd-->Line_10 $$ if (showingWindow == null) [ FD ]
Line_2 $$ private static void fixStickyWindow(KeyboardFocusManager mgr, Window wnd, String resetMethod) -->Line_4 $$ if (wnd != null && !wnd.isShowing()) [ CD ]
Line_3 $$ Window showingWindow = wnd-->Line_8 $$ showingWindow = (Window) showingWindow.getParent()[ FD ]
Line_8 $$ showingWindow = (Window) showingWindow.getParent()-->Line_10 $$ if (showingWindow == null) [ FD ]
Line_4 $$ if (wnd != null && !wnd.isShowing()) -->Line_5 $$ while (showingWindow != null) [ CD ]
Line_20 $$ final Method setActive = ReflectionUtil.findMethod(ReflectionUtil.getClassDeclaredMethods(KeyboardFocusManager.class, false), resetMethod, Window.class)-->Line_23 $$ setActive.invoke(mgr, (Window) showingWindow)[ FD ]
Line_8 $$ showingWindow = (Window) showingWindow.getParent()-->Line_6 $$ if (showingWindow.isShowing())[ FD ]
Line_12 $$ for (Frame each : allFrames) -->Line_14 $$ showingWindow = each[ FD ]
Line_8 $$ showingWindow = (Window) showingWindow.getParent()-->Line_14 $$ showingWindow = each[ FD ]
Line_2 $$ private static void fixStickyWindow(KeyboardFocusManager mgr, Window wnd, String resetMethod) -->Line_3 $$ Window showingWindow = wnd[ CD ]
Line_20 $$ final Method setActive = ReflectionUtil.findMethod(ReflectionUtil.getClassDeclaredMethods(KeyboardFocusManager.class, false), resetMethod, Window.class)-->Line_21 $$ if (setActive != null) [ FD ]
Line_3 $$ Window showingWindow = wnd-->Line_6 $$ if (showingWindow.isShowing())[ FD ]
Line_4 $$ if (wnd != null && !wnd.isShowing()) -->Line_10 $$ if (showingWindow == null) [ CD ]
Line_5 $$ while (showingWindow != null) -->Line_8 $$ showingWindow = (Window) showingWindow.getParent()[ CD ]
Line_5 $$ while (showingWindow != null) -->Line_6 $$ if (showingWindow.isShowing())[ CD ]
