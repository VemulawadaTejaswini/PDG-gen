Line_23 $$ Field field = display.getClass().getDeclaredField(IS_WINDOWS ? "hwnd" : "parent_window")-->Line_25 $$ return (Long) field.get(display)[ FD ]
Line_14 $$ if (Gdx.app.getClass().getName().equals("com.badlogic.gdx.backends.lwjgl.LwjglCanvas")) -->Line_15 $$ Class canvasClass = Class.forName("com.badlogic.gdx.backends.lwjgl.LwjglCanvas")[ CD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_25 $$ return (Long) field.get(display)[ CD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_21 $$ getImplementation.setAccessible(true)[ CD ]
Line_14 $$ if (Gdx.app.getClass().getName().equals("com.badlogic.gdx.backends.lwjgl.LwjglCanvas")) -->Line_17 $$ return (Long) invokeMethod(invokeMethod(SwingUtilities.windowForComponent((Component) canvas), "getPeer"), "getHWnd")[ CD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_24 $$ field.setAccessible(true)[ CD ]
Line_15 $$ Class canvasClass = Class.forName("com.badlogic.gdx.backends.lwjgl.LwjglCanvas")-->Line_16 $$ Object canvas = canvasClass.getDeclaredMethod("getCanvas").invoke(Gdx.app)[ FD ]
Line_23 $$ Field field = display.getClass().getDeclaredField(IS_WINDOWS ? "hwnd" : "parent_window")-->Line_24 $$ field.setAccessible(true)[ FD ]
Line_14 $$ if (Gdx.app.getClass().getName().equals("com.badlogic.gdx.backends.lwjgl.LwjglCanvas")) -->Line_16 $$ Object canvas = canvasClass.getDeclaredMethod("getCanvas").invoke(Gdx.app)[ CD ]
Line_20 $$ Method getImplementation = displayClass.getDeclaredMethod("getImplementation", new Class[0])-->Line_21 $$ getImplementation.setAccessible(true)[ FD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_14 $$ if (Gdx.app.getClass().getName().equals("com.badlogic.gdx.backends.lwjgl.LwjglCanvas")) [ CD ]
Line_11 $$ if (Gdx.graphics.getType() == GraphicsType.JGLFW)-->Line_12 $$ return (Long) Gdx.graphics.getClass().getDeclaredMethod("getWindow").invoke(null)[ CD ]
Line_22 $$ Object display = getImplementation.invoke(null, (Object[]) null)-->Line_23 $$ Field field = display.getClass().getDeclaredField(IS_WINDOWS ? "hwnd" : "parent_window")[ FD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_22 $$ Object display = getImplementation.invoke(null, (Object[]) null)[ CD ]
Line_20 $$ Method getImplementation = displayClass.getDeclaredMethod("getImplementation", new Class[0])-->Line_22 $$ Object display = getImplementation.invoke(null, (Object[]) null)[ FD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_19 $$ Class displayClass = Class.forName("org.lwjgl.opengl.Display")[ CD ]
Line_19 $$ Class displayClass = Class.forName("org.lwjgl.opengl.Display")-->Line_20 $$ Method getImplementation = displayClass.getDeclaredMethod("getImplementation", new Class[0])[ FD ]
Line_22 $$ Object display = getImplementation.invoke(null, (Object[]) null)-->Line_25 $$ return (Long) field.get(display)[ FD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_20 $$ Method getImplementation = displayClass.getDeclaredMethod("getImplementation", new Class[0])[ CD ]
Line_13 $$ if (Gdx.graphics.getType() == GraphicsType.LWJGL) -->Line_23 $$ Field field = display.getClass().getDeclaredField(IS_WINDOWS ? "hwnd" : "parent_window")[ CD ]
