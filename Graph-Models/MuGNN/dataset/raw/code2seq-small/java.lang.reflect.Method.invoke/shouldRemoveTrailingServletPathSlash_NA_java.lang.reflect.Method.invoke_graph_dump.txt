Line_9 $$ if (websphereComplianceFlag == null) -->Line_11 $$ String className = "com.ibm.ws.webcontainer.WebContainer"[ CD ]
Line_14 $$ boolean flag = false-->Line_18 $$ flag = Boolean.parseBoolean(prop.getProperty(propName))[ FD ]
Line_17 $$ Properties prop = (Properties) cl.getMethod(methodName).invoke(null)-->Line_18 $$ flag = Boolean.parseBoolean(prop.getProperty(propName))[ FD ]
Line_2 $$ private boolean shouldRemoveTrailingServletPathSlash(HttpServletRequest request) -->Line_3 $$ if (request.getAttribute(WEBSPHERE_URI_ATTRIBUTE) == null) [ FD ]
Line_11 $$ String className = "com.ibm.ws.webcontainer.WebContainer"-->Line_16 $$ Class<?> cl = classLoader.loadClass(className)[ FD ]
Line_20 $$ if (logger.isDebugEnabled()) -->Line_21 $$ logger.debug("Could not introspect WebSphere web container properties: " + ex)[ CD ]
Line_2 $$ private boolean shouldRemoveTrailingServletPathSlash(HttpServletRequest request) -->Line_3 $$ if (request.getAttribute(WEBSPHERE_URI_ATTRIBUTE) == null) [ CD ]
Line_9 $$ if (websphereComplianceFlag == null) -->Line_14 $$ boolean flag = false[ CD ]
Line_9 $$ if (websphereComplianceFlag == null) -->Line_12 $$ String methodName = "getWebContainerProperties"[ CD ]
Line_2 $$ private boolean shouldRemoveTrailingServletPathSlash(HttpServletRequest request) -->Line_9 $$ if (websphereComplianceFlag == null) [ CD ]
Line_12 $$ String methodName = "getWebContainerProperties"-->Line_17 $$ Properties prop = (Properties) cl.getMethod(methodName).invoke(null)[ FD ]
Line_13 $$ String propName = "com.ibm.ws.webcontainer.removetrailingservletpathslash"-->Line_18 $$ flag = Boolean.parseBoolean(prop.getProperty(propName))[ FD ]
Line_9 $$ if (websphereComplianceFlag == null) -->Line_13 $$ String propName = "com.ibm.ws.webcontainer.removetrailingservletpathslash"[ CD ]
Line_10 $$ ClassLoader classLoader = UrlPathHelper.class.getClassLoader()-->Line_16 $$ Class<?> cl = classLoader.loadClass(className)[ FD ]
Line_9 $$ if (websphereComplianceFlag == null) -->Line_10 $$ ClassLoader classLoader = UrlPathHelper.class.getClassLoader()[ CD ]
Line_16 $$ Class<?> cl = classLoader.loadClass(className)-->Line_17 $$ Properties prop = (Properties) cl.getMethod(methodName).invoke(null)[ FD ]
