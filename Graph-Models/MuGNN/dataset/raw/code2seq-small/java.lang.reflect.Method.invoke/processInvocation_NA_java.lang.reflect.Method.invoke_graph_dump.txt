Line_7 $$ final Object instance = reference.getInstance()-->Line_16 $$ return method.invoke(instance, context.getInvocationContext())[ FD ]
Line_17 $$ if (this.changeMethod) -->Line_19 $$ return method.invoke(instance, context.getInvocationContext())[ CD ]
Line_7 $$ final Object instance = reference.getInstance()-->Line_21 $$ return method.invoke(instance, context.getInvocationContext())[ FD ]
Line_32 $$ final IllegalAccessError n = new IllegalAccessError(e.getMessage())-->Line_33 $$ n.setStackTrace(e.getStackTrace())[ FD ]
Line_13 $$ if (this.lifecycleMethod) -->Line_17 $$ if (this.changeMethod) [ CD ]
Line_9 $$ final Method method = this.method-->Line_18 $$ context.setMethod(method)[ FD ]
Line_17 $$ if (this.changeMethod) -->Line_18 $$ context.setMethod(method)[ CD ]
Line_9 $$ final Method method = this.method-->Line_21 $$ return method.invoke(instance, context.getInvocationContext())[ FD ]
Line_7 $$ final Object instance = reference.getInstance()-->Line_28 $$ method.invoke(instance)[ FD ]
Line_13 $$ if (this.lifecycleMethod) -->Line_16 $$ return method.invoke(instance, context.getInvocationContext())[ CD ]
Line_10 $$ if (withContext) -->Line_11 $$ final Method oldMethod = context.getMethod()[ CD ]
Line_10 $$ if (withContext) -->Line_28 $$ method.invoke(instance)[ CD ]
Line_9 $$ final Method method = this.method-->Line_19 $$ return method.invoke(instance, context.getInvocationContext())[ FD ]
Line_9 $$ final Method method = this.method-->Line_16 $$ return method.invoke(instance, context.getInvocationContext())[ FD ]
Line_6 $$ final ManagedReference reference = (ManagedReference) context.getPrivateData(ComponentInstance.class).getInstanceData(contextKey)-->Line_7 $$ final Object instance = reference.getInstance()[ FD ]
Line_7 $$ final Object instance = reference.getInstance()-->Line_19 $$ return method.invoke(instance, context.getInvocationContext())[ FD ]
Line_9 $$ final Method method = this.method-->Line_28 $$ method.invoke(instance)[ FD ]
Line_10 $$ if (withContext) -->Line_29 $$ return context.proceed()[ CD ]
Line_17 $$ if (this.changeMethod) -->Line_21 $$ return method.invoke(instance, context.getInvocationContext())[ CD ]
