Line_5 $$ final int flags = (Integer) myGetBooleanAttributes.invoke(myFileSystem, file)-->Line_8 $$ boolean isSpecial = notSet(flags, BA_REGULAR | BA_DIRECTORY)[ FD ]
Line_3 $$ final File file = new File(path)-->Line_17 $$ boolean isWritable = SystemInfo.isWindows && isDirectory || file.canWrite()[ FD ]
Line_2 $$ protected FileAttributes getAttributes(@NotNull final String path) throws Exception -->Line_4 $$ if (myFileSystem != null) [ CD ]
Line_6 $$ if (flags != 0) -->Line_11 $$ return new FileAttributes(isDirectory, isSpecial, false, isHidden, file.length(), file.lastModified(), isWritable)[ CD ]
Line_3 $$ final File file = new File(path)-->Line_14 $$ boolean isDirectory = file.isDirectory()[ FD ]
Line_3 $$ final File file = new File(path)-->Line_16 $$ boolean isHidden = file.isHidden()[ FD ]
Line_13 $$ if (file.exists()) -->Line_16 $$ boolean isHidden = file.isHidden()[ CD ]
Line_4 $$ if (myFileSystem != null) -->Line_5 $$ final int flags = (Integer) myGetBooleanAttributes.invoke(myFileSystem, file)[ CD ]
Line_6 $$ if (flags != 0) -->Line_7 $$ boolean isDirectory = isSet(flags, BA_DIRECTORY)[ CD ]
Line_13 $$ if (file.exists()) -->Line_14 $$ boolean isDirectory = file.isDirectory()[ CD ]
Line_6 $$ if (flags != 0) -->Line_9 $$ boolean isHidden = isSet(flags, BA_HIDDEN)[ CD ]
Line_6 $$ if (flags != 0) -->Line_8 $$ boolean isSpecial = notSet(flags, BA_REGULAR | BA_DIRECTORY)[ CD ]
Line_4 $$ if (myFileSystem != null) -->Line_13 $$ if (file.exists()) [ CD ]
Line_5 $$ final int flags = (Integer) myGetBooleanAttributes.invoke(myFileSystem, file)-->Line_7 $$ boolean isDirectory = isSet(flags, BA_DIRECTORY)[ FD ]
Line_5 $$ final int flags = (Integer) myGetBooleanAttributes.invoke(myFileSystem, file)-->Line_6 $$ if (flags != 0) [ FD ]
Line_2 $$ protected FileAttributes getAttributes(@NotNull final String path) throws Exception -->Line_3 $$ final File file = new File(path)[ CD ]
Line_2 $$ protected FileAttributes getAttributes(@NotNull final String path) throws Exception -->Line_20 $$ return null[ CD ]
Line_3 $$ final File file = new File(path)-->Line_5 $$ final int flags = (Integer) myGetBooleanAttributes.invoke(myFileSystem, file)[ FD ]
Line_3 $$ final File file = new File(path)-->Line_15 $$ boolean isSpecial = !isDirectory && !file.isFile()[ FD ]
Line_3 $$ final File file = new File(path)-->Line_13 $$ if (file.exists()) [ FD ]
Line_3 $$ final File file = new File(path)-->Line_18 $$ return new FileAttributes(isDirectory, isSpecial, false, isHidden, file.length(), file.lastModified(), isWritable)[ FD ]
Line_5 $$ final int flags = (Integer) myGetBooleanAttributes.invoke(myFileSystem, file)-->Line_9 $$ boolean isHidden = isSet(flags, BA_HIDDEN)[ FD ]
Line_3 $$ final File file = new File(path)-->Line_10 $$ boolean isWritable = SystemInfo.isWindows && isDirectory || file.canWrite()[ FD ]
Line_4 $$ if (myFileSystem != null) -->Line_6 $$ if (flags != 0) [ CD ]
Line_7 $$ boolean isDirectory = isSet(flags, BA_DIRECTORY)-->Line_15 $$ boolean isSpecial = !isDirectory && !file.isFile()[ FD ]
Line_6 $$ if (flags != 0) -->Line_10 $$ boolean isWritable = SystemInfo.isWindows && isDirectory || file.canWrite()[ CD ]
Line_3 $$ final File file = new File(path)-->Line_11 $$ return new FileAttributes(isDirectory, isSpecial, false, isHidden, file.length(), file.lastModified(), isWritable)[ FD ]
Line_13 $$ if (file.exists()) -->Line_18 $$ return new FileAttributes(isDirectory, isSpecial, false, isHidden, file.length(), file.lastModified(), isWritable)[ CD ]
