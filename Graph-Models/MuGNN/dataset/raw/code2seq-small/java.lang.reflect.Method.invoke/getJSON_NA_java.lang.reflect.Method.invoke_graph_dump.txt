Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_12 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_20 $$ args[i] = getArgValue(request, clazz, methodName, serviceParameters[i], parameterTypes[i])[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_7 $$ if (!isValidRequest(request)) [ FD ]
Line_11 $$ Class<?> clazz = contextClassLoader.loadClass(className)-->Line_20 $$ args[i] = getArgValue(request, clazz, methodName, serviceParameters[i], parameterTypes[i])[ FD ]
Line_26 $$ Object returnObj = null-->Line_30 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ String methodName = ParamUtil.getString(request, "serviceMethodName")[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_13 $$ if (methodAndParameterTypes == null) [ CD ]
Line_34 $$ if (returnObj != null) -->Line_35 $$ return getReturnValue(returnObj)[ CD ]
Line_18 $$ Object[] args = new Object[serviceParameters.length]-->Line_24 $$ _log.debug("Invoking " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args))[ FD ]
Line_5 $$ String[] serviceParameters = getStringArrayFromJSON(request, "serviceParameters")-->Line_12 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
Line_16 $$ Method method = (Method) methodAndParameterTypes[0]-->Line_41 $$ _log.debug("Invoked " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args), e)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ String className = ParamUtil.getString(request, "serviceClassName")[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_3 $$ String className = ParamUtil.getString(request, "serviceClassName")[ FD ]
Line_11 $$ Class<?> clazz = contextClassLoader.loadClass(className)-->Line_12 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_6 $$ String[] serviceParameterTypes = getStringArrayFromJSON(request, "serviceParameterTypes")[ FD ]
Line_19 $$ for (int i = 0; i < serviceParameters.length; i++) -->Line_20 $$ args[i] = getArgValue(request, clazz, methodName, serviceParameters[i], parameterTypes[i])[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_10 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()[ CD ]
Line_16 $$ Method method = (Method) methodAndParameterTypes[0]-->Line_24 $$ _log.debug("Invoking " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args))[ FD ]
Line_11 $$ Class<?> clazz = contextClassLoader.loadClass(className)-->Line_30 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_5 $$ String[] serviceParameters = getStringArrayFromJSON(request, "serviceParameters")[ CD ]
Line_18 $$ Object[] args = new Object[serviceParameters.length]-->Line_30 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_23 $$ if (_log.isDebugEnabled()) -->Line_24 $$ _log.debug("Invoking " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args))[ CD ]
Line_16 $$ Method method = (Method) methodAndParameterTypes[0]-->Line_30 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_34 $$ if (returnObj != null) -->Line_37 $$ return JSONFactoryUtil.getNullJSON()[ CD ]
Line_26 $$ Object returnObj = null-->Line_34 $$ if (returnObj != null) [ FD ]
Line_27 $$ boolean remoteAccess = AccessControlThreadLocal.isRemoteAccess()-->Line_32 $$ AccessControlThreadLocal.setRemoteAccess(remoteAccess)[ FD ]
Line_18 $$ Object[] args = new Object[serviceParameters.length]-->Line_41 $$ _log.debug("Invoked " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args), e)[ FD ]
Line_26 $$ Object returnObj = null-->Line_35 $$ return getReturnValue(returnObj)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_7 $$ if (!isValidRequest(request)) [ CD ]
Line_30 $$ returnObj = method.invoke(clazz, args)-->Line_35 $$ return getReturnValue(returnObj)[ FD ]
Line_4 $$ String methodName = ParamUtil.getString(request, "serviceMethodName")-->Line_20 $$ args[i] = getArgValue(request, clazz, methodName, serviceParameters[i], parameterTypes[i])[ FD ]
Line_3 $$ String className = ParamUtil.getString(request, "serviceClassName")-->Line_11 $$ Class<?> clazz = contextClassLoader.loadClass(className)[ FD ]
Line_40 $$ if (_log.isDebugEnabled()) -->Line_41 $$ _log.debug("Invoked " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args), e)[ CD ]
Line_10 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_11 $$ Class<?> clazz = contextClassLoader.loadClass(className)[ FD ]
Line_7 $$ if (!isValidRequest(request)) -->Line_8 $$ return null[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_5 $$ String[] serviceParameters = getStringArrayFromJSON(request, "serviceParameters")[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_6 $$ String[] serviceParameterTypes = getStringArrayFromJSON(request, "serviceParameterTypes")[ CD ]
Line_30 $$ returnObj = method.invoke(clazz, args)-->Line_34 $$ if (returnObj != null) [ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_18 $$ Object[] args = new Object[serviceParameters.length][ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_16 $$ Method method = (Method) methodAndParameterTypes[0][ CD ]
Line_13 $$ if (methodAndParameterTypes == null) -->Line_14 $$ return null[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_4 $$ String methodName = ParamUtil.getString(request, "serviceMethodName")[ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_19 $$ for (int i = 0; i < serviceParameters.length; i++) [ CD ]
Line_6 $$ String[] serviceParameterTypes = getStringArrayFromJSON(request, "serviceParameterTypes")-->Line_12 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_17 $$ Type[] parameterTypes = (Type[]) methodAndParameterTypes[1][ CD ]
Line_2 $$ public String getJSON(ActionMapping actionMapping, ActionForm actionForm, HttpServletRequest request, HttpServletResponse response) throws Exception -->Line_11 $$ Class<?> clazz = contextClassLoader.loadClass(className)[ CD ]
Line_4 $$ String methodName = ParamUtil.getString(request, "serviceMethodName")-->Line_12 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
Line_12 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)-->Line_13 $$ if (methodAndParameterTypes == null) [ FD ]
