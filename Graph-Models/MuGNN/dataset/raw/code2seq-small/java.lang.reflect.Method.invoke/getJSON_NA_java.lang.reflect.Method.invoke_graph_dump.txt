Line_12 $$ Class<?> clazz = contextClassLoader.loadClass(className)-->Line_13 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
Line_5 $$ String methodName = ParamUtil.getString(request, "serviceMethodName")-->Line_21 $$ args[i] = getArgValue(request, clazz, methodName, serviceParameters[i], parameterTypes[i])[ FD ]
Line_31 $$ returnObj = method.invoke(clazz, args)-->Line_35 $$ if (returnObj != null) [ FD ]
Line_8 $$ if (!isValidRequest(request)) -->Line_9 $$ return null[ CD ]
Line_7 $$ String[] serviceParameterTypes = getStringArrayFromJSON(request, "serviceParameterTypes")-->Line_13 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
Line_31 $$ returnObj = method.invoke(clazz, args)-->Line_36 $$ return getReturnValue(returnObj)[ FD ]
Line_19 $$ Object[] args = new Object[serviceParameters.length]-->Line_31 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_13 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)-->Line_14 $$ if (methodAndParameterTypes == null) [ FD ]
Line_35 $$ if (returnObj != null) -->Line_38 $$ return JSONFactoryUtil.getNullJSON()[ CD ]
Line_35 $$ if (returnObj != null) -->Line_36 $$ return getReturnValue(returnObj)[ CD ]
Line_11 $$ ClassLoader contextClassLoader = ClassLoaderUtil.getContextClassLoader()-->Line_12 $$ Class<?> clazz = contextClassLoader.loadClass(className)[ FD ]
Line_27 $$ Object returnObj = null-->Line_31 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_17 $$ Method method = (Method) methodAndParameterTypes[0]-->Line_31 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_17 $$ Method method = (Method) methodAndParameterTypes[0]-->Line_25 $$ _log.debug("Invoking " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args))[ FD ]
Line_41 $$ if (_log.isDebugEnabled()) -->Line_42 $$ _log.debug("Invoked " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args), e)[ CD ]
Line_27 $$ Object returnObj = null-->Line_36 $$ return getReturnValue(returnObj)[ FD ]
Line_19 $$ Object[] args = new Object[serviceParameters.length]-->Line_42 $$ _log.debug("Invoked " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args), e)[ FD ]
Line_12 $$ Class<?> clazz = contextClassLoader.loadClass(className)-->Line_31 $$ returnObj = method.invoke(clazz, args)[ FD ]
Line_4 $$ String className = ParamUtil.getString(request, "serviceClassName")-->Line_12 $$ Class<?> clazz = contextClassLoader.loadClass(className)[ FD ]
Line_12 $$ Class<?> clazz = contextClassLoader.loadClass(className)-->Line_21 $$ args[i] = getArgValue(request, clazz, methodName, serviceParameters[i], parameterTypes[i])[ FD ]
Line_24 $$ if (_log.isDebugEnabled()) -->Line_25 $$ _log.debug("Invoking " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args))[ CD ]
Line_28 $$ boolean remoteAccess = AccessControlThreadLocal.isRemoteAccess()-->Line_33 $$ AccessControlThreadLocal.setRemoteAccess(remoteAccess)[ FD ]
Line_20 $$ for (int i = 0; i < serviceParameters.length; i++) -->Line_21 $$ args[i] = getArgValue(request, clazz, methodName, serviceParameters[i], parameterTypes[i])[ CD ]
Line_27 $$ Object returnObj = null-->Line_35 $$ if (returnObj != null) [ FD ]
Line_14 $$ if (methodAndParameterTypes == null) -->Line_15 $$ return null[ CD ]
Line_19 $$ Object[] args = new Object[serviceParameters.length]-->Line_25 $$ _log.debug("Invoking " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args))[ FD ]
Line_17 $$ Method method = (Method) methodAndParameterTypes[0]-->Line_42 $$ _log.debug("Invoked " + clazz + " on method " + method.getName() + " with args " + Arrays.toString(args), e)[ FD ]
Line_5 $$ String methodName = ParamUtil.getString(request, "serviceMethodName")-->Line_13 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
Line_6 $$ String[] serviceParameters = getStringArrayFromJSON(request, "serviceParameters")-->Line_13 $$ Object[] methodAndParameterTypes = getMethodAndParameterTypes(clazz, methodName, serviceParameters, serviceParameterTypes)[ FD ]
