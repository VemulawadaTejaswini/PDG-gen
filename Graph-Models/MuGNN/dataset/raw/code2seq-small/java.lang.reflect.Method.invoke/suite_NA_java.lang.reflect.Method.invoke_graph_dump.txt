Line_5 $$ TestSuite suite = new TestSuite()-->Line_11 $$ suite.addTestSuite(testClass)[ FD ]
Line_3 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_7 $$ final Class<?> aClass = Class.forName(s, true, cl)[ FD ]
Line_2 $$ public static Test suite() throws Throwable -->Line_4 $$ String[] classes = System.getProperty("bootstrap.testcases").split(",")[ CD ]
Line_2 $$ public static Test suite() throws Throwable -->Line_5 $$ TestSuite suite = new TestSuite()[ CD ]
Line_7 $$ final Class<?> aClass = Class.forName(s, true, cl)-->Line_8 $$ if (TestCase.class.isAssignableFrom(aClass)) [ FD ]
Line_5 $$ TestSuite suite = new TestSuite()-->Line_13 $$ suite.addTest((Test) aClass.getMethod("suite").invoke(null))[ FD ]
Line_6 $$ for (String s : classes) -->Line_7 $$ final Class<?> aClass = Class.forName(s, true, cl)[ FD ]
Line_8 $$ if (TestCase.class.isAssignableFrom(aClass)) -->Line_13 $$ suite.addTest((Test) aClass.getMethod("suite").invoke(null))[ CD ]
Line_2 $$ public static Test suite() throws Throwable -->Line_3 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public static Test suite() throws Throwable -->Line_16 $$ return suite[ CD ]
Line_7 $$ final Class<?> aClass = Class.forName(s, true, cl)-->Line_13 $$ suite.addTest((Test) aClass.getMethod("suite").invoke(null))[ FD ]
Line_8 $$ if (TestCase.class.isAssignableFrom(aClass)) -->Line_11 $$ suite.addTestSuite(testClass)[ CD ]
