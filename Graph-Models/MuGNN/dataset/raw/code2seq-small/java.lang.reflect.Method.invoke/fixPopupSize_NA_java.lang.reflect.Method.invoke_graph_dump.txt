Line_2 $$ private static void fixPopupSize(final Popup popup, final Component contents) -->Line_5 $$ for (Class<?> aClass = popup.getClass(); aClass != null && Popup.class.isAssignableFrom(aClass); aClass = aClass.getSuperclass()) [ CD ]
Line_3 $$ if (!UIUtil.isUnderGTKLookAndFeel() || !(contents instanceof JPopupMenu))-->Line_4 $$ return[ CD ]
Line_2 $$ private static void fixPopupSize(final Popup popup, final Component contents) -->Line_9 $$ final Object component = getComponent.invoke(popup)[ FD ]
Line_9 $$ final Object component = getComponent.invoke(popup)-->Line_10 $$ if (component instanceof JWindow) [ FD ]
Line_5 $$ for (Class<?> aClass = popup.getClass(); aClass != null && Popup.class.isAssignableFrom(aClass); aClass = aClass.getSuperclass()) -->Line_7 $$ final Method getComponent = aClass.getDeclaredMethod("getComponent")[ FD ]
Line_2 $$ private static void fixPopupSize(final Popup popup, final Component contents) -->Line_3 $$ if (!UIUtil.isUnderGTKLookAndFeel() || !(contents instanceof JPopupMenu))[ CD ]
Line_7 $$ final Method getComponent = aClass.getDeclaredMethod("getComponent")-->Line_8 $$ getComponent.setAccessible(true)[ FD ]
Line_2 $$ private static void fixPopupSize(final Popup popup, final Component contents) -->Line_5 $$ for (Class<?> aClass = popup.getClass(); aClass != null && Popup.class.isAssignableFrom(aClass); aClass = aClass.getSuperclass()) [ FD ]
Line_10 $$ if (component instanceof JWindow) -->Line_11 $$ ((JWindow) component).setSize(new Dimension(0, 0))[ CD ]
Line_7 $$ final Method getComponent = aClass.getDeclaredMethod("getComponent")-->Line_9 $$ final Object component = getComponent.invoke(popup)[ FD ]
