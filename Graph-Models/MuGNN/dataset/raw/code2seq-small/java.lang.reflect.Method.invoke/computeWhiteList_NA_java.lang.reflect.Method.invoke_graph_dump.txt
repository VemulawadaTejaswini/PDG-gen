Line_8 $$ for (String qualifiedName : classes) -->Line_9 $$ final String packageName = StringUtil.getPackageName(qualifiedName)[ FD ]
Line_9 $$ final String packageName = StringUtil.getPackageName(qualifiedName)-->Line_13 $$ map.put(packageName, classNames)[ FD ]
Line_10 $$ Set<String> classNames = map.get(packageName)-->Line_12 $$ classNames = new THashSet<String>()[ FD ]
Line_5 $$ final ClassLoader loader = UrlClassLoader.build().urls(toolsApiJarFile.toURI().toURL()).parent(AppEngineSdkUtil.class.getClassLoader()).get()-->Line_6 $$ final Class<?> whiteListClass = Class.forName("com.google.apphosting.runtime.security.WhiteList", true, loader)[ FD ]
Line_8 $$ for (String qualifiedName : classes) -->Line_15 $$ classNames.add(StringUtil.getShortName(qualifiedName))[ FD ]
Line_12 $$ classNames = new THashSet<String>()-->Line_15 $$ classNames.add(StringUtil.getShortName(qualifiedName))[ FD ]
Line_9 $$ final String packageName = StringUtil.getPackageName(qualifiedName)-->Line_10 $$ Set<String> classNames = map.get(packageName)[ FD ]
Line_10 $$ Set<String> classNames = map.get(packageName)-->Line_11 $$ if (classNames == null) [ FD ]
Line_10 $$ Set<String> classNames = map.get(packageName)-->Line_15 $$ classNames.add(StringUtil.getShortName(qualifiedName))[ FD ]
Line_4 $$ final THashMap<String, Set<String>> map = new THashMap<String, Set<String>>()-->Line_10 $$ Set<String> classNames = map.get(packageName)[ FD ]
Line_11 $$ if (classNames == null) -->Line_13 $$ map.put(packageName, classNames)[ CD ]
Line_4 $$ final THashMap<String, Set<String>> map = new THashMap<String, Set<String>>()-->Line_13 $$ map.put(packageName, classNames)[ FD ]
Line_6 $$ final Class<?> whiteListClass = Class.forName("com.google.apphosting.runtime.security.WhiteList", true, loader)-->Line_7 $$ final Set<String> classes = (Set<String>) whiteListClass.getMethod("getWhiteList").invoke(null)[ FD ]
Line_10 $$ Set<String> classNames = map.get(packageName)-->Line_13 $$ map.put(packageName, classNames)[ FD ]
Line_2 $$ public static Map<String, Set<String>> computeWhiteList(final File toolsApiJarFile) -->Line_5 $$ final ClassLoader loader = UrlClassLoader.build().urls(toolsApiJarFile.toURI().toURL()).parent(AppEngineSdkUtil.class.getClassLoader()).get()[ FD ]
Line_12 $$ classNames = new THashSet<String>()-->Line_13 $$ map.put(packageName, classNames)[ FD ]
Line_11 $$ if (classNames == null) -->Line_12 $$ classNames = new THashSet<String>()[ CD ]
