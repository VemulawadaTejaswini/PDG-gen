Line_8 $$ if ("equals".equals(method.getName()))-->Line_9 $$ return Boolean.FALSE[ CD ]
Line_4 $$ InvocationHandler handler = new InvocationHandler() -->Line_7 $$ if (o == null) [ CD ]
Line_2 $$ public static <T extends EventListener> T createWeakListener(final Class<T> listenerClass, T listener) -->Line_3 $$ final WeakReference reference = new WeakReference(listener)[ CD ]
Line_7 $$ if (o == null) -->Line_10 $$ return null[ CD ]
Line_7 $$ if (o == null) -->Line_8 $$ if ("equals".equals(method.getName()))[ CD ]
Line_6 $$ Object o = reference.get()-->Line_13 $$ Object result = method.invoke(o, args)[ FD ]
Line_4 $$ InvocationHandler handler = new InvocationHandler() -->Line_8 $$ if ("equals".equals(method.getName()))[ FD ]
Line_4 $$ InvocationHandler handler = new InvocationHandler() -->Line_25 $$ return (T) Proxy.newProxyInstance(listenerClass.getClassLoader(), new Class[] [ FD ]
Line_4 $$ InvocationHandler handler = new InvocationHandler() -->Line_22 $$ return null[ CD ]
Line_4 $$ InvocationHandler handler = new InvocationHandler() -->Line_13 $$ Object result = method.invoke(o, args)[ FD ]
Line_6 $$ Object o = reference.get()-->Line_7 $$ if (o == null) [ FD ]
Line_2 $$ public static <T extends EventListener> T createWeakListener(final Class<T> listenerClass, T listener) -->Line_25 $$ return (T) Proxy.newProxyInstance(listenerClass.getClassLoader(), new Class[] [ CD ]
Line_3 $$ final WeakReference reference = new WeakReference(listener)-->Line_6 $$ Object o = reference.get()[ FD ]
Line_2 $$ public static <T extends EventListener> T createWeakListener(final Class<T> listenerClass, T listener) -->Line_4 $$ InvocationHandler handler = new InvocationHandler() [ CD ]
Line_4 $$ InvocationHandler handler = new InvocationHandler() -->Line_6 $$ Object o = reference.get()[ CD ]
Line_2 $$ public static <T extends EventListener> T createWeakListener(final Class<T> listenerClass, T listener) -->Line_25 $$ return (T) Proxy.newProxyInstance(listenerClass.getClassLoader(), new Class[] [ FD ]
