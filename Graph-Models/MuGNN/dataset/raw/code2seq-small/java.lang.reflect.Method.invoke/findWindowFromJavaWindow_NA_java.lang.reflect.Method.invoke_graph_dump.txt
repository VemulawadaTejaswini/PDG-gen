Line_4 $$ ID windowId = null-->Line_23 $$ windowId = findWindowForTitle(foremostWindowTitle)[ FD ]
Line_22 $$ String foremostWindowTitle = getWindowTitle(w)-->Line_23 $$ windowId = findWindowForTitle(foremostWindowTitle)[ FD ]
Line_11 $$ Class<?> cPlatformWindowClass = cPlatformWindow.getClass()-->Line_12 $$ Method getNSWindowPtrMethod = cPlatformWindowClass.getDeclaredMethod("getNSWindowPtr")[ FD ]
Line_5 $$ if (SystemInfo.isJavaVersionAtLeast("1.7") && Registry.is("skip.untitled.windows.for.mac.messages")) -->Line_22 $$ String foremostWindowTitle = getWindowTitle(w)[ CD ]
Line_4 $$ ID windowId = null-->Line_13 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))[ FD ]
Line_10 $$ Object cPlatformWindow = getPlatformWindowMethod.invoke(w.getPeer())-->Line_11 $$ Class<?> cPlatformWindowClass = cPlatformWindow.getClass()[ FD ]
Line_5 $$ if (SystemInfo.isJavaVersionAtLeast("1.7") && Registry.is("skip.untitled.windows.for.mac.messages")) -->Line_23 $$ windowId = findWindowForTitle(foremostWindowTitle)[ CD ]
Line_13 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))-->Line_23 $$ windowId = findWindowForTitle(foremostWindowTitle)[ FD ]
Line_12 $$ Method getNSWindowPtrMethod = cPlatformWindowClass.getDeclaredMethod("getNSWindowPtr")-->Line_13 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))[ FD ]
Line_10 $$ Object cPlatformWindow = getPlatformWindowMethod.invoke(w.getPeer())-->Line_13 $$ windowId = new ID((Long) getNSWindowPtrMethod.invoke(cPlatformWindow))[ FD ]
Line_9 $$ Method getPlatformWindowMethod = cWindowPeerClass.getDeclaredMethod("getPlatformWindow")-->Line_10 $$ Object cPlatformWindow = getPlatformWindowMethod.invoke(w.getPeer())[ FD ]
