Line_11 $$ if (member instanceof Method) -->Line_14 $$ if (!Modifier.isStatic(method.getModifiers())) [ CD ]
Line_12 $$ Method method = (Method) member-->Line_14 $$ if (!Modifier.isStatic(method.getModifiers())) [ FD ]
Line_11 $$ if (member instanceof Method) -->Line_19 $$ if (member instanceof Constructor) [ CD ]
Line_19 $$ if (member instanceof Constructor) -->Line_21 $$ return ctor.newInstance(source)[ CD ]
Line_12 $$ Method method = (Method) member-->Line_15 $$ return method.invoke(source)[ FD ]
Line_4 $$ if (source == null) -->Line_5 $$ return null[ CD ]
Line_20 $$ Constructor<?> ctor = (Constructor<?>) member-->Line_21 $$ return ctor.newInstance(source)[ FD ]
Line_14 $$ if (!Modifier.isStatic(method.getModifiers())) -->Line_17 $$ return method.invoke(null, source)[ CD ]
Line_19 $$ if (member instanceof Constructor) -->Line_20 $$ Constructor<?> ctor = (Constructor<?>) member[ CD ]
Line_12 $$ Method method = (Method) member-->Line_13 $$ ReflectionUtils.makeAccessible(method)[ FD ]
Line_14 $$ if (!Modifier.isStatic(method.getModifiers())) -->Line_15 $$ return method.invoke(source)[ CD ]
Line_9 $$ Member member = getValidatedMember(targetClass, sourceClass)-->Line_19 $$ if (member instanceof Constructor) [ FD ]
Line_8 $$ Class<?> targetClass = targetType.getType()-->Line_9 $$ Member member = getValidatedMember(targetClass, sourceClass)[ FD ]
Line_12 $$ Method method = (Method) member-->Line_17 $$ return method.invoke(null, source)[ FD ]
Line_11 $$ if (member instanceof Method) -->Line_12 $$ Method method = (Method) member[ CD ]
Line_7 $$ Class<?> sourceClass = sourceType.getType()-->Line_9 $$ Member member = getValidatedMember(targetClass, sourceClass)[ FD ]
Line_11 $$ if (member instanceof Method) -->Line_13 $$ ReflectionUtils.makeAccessible(method)[ CD ]
Line_9 $$ Member member = getValidatedMember(targetClass, sourceClass)-->Line_11 $$ if (member instanceof Method) [ FD ]
