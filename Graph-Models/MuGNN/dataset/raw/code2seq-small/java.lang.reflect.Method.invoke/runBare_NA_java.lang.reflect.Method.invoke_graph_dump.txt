Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_23 $$ Thread.currentThread().setContextClassLoader(shadowingClassLoader)[ FD ]
Line_30 $$ Constructor constructor = shadowingLoadTimeWeaverClass.getConstructor(ClassLoader.class)-->Line_32 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ FD ]
Line_56 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)-->Line_76 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_74 $$ Method addContextMethod = shadowedTestClass.getMethod("addContext", String[].class, applicationContextClass)-->Line_75 $$ ReflectionUtils.makeAccessible(addContextMethod)[ FD ]
Line_10 $$ ClassLoader classLoaderForThisTestClass = getClass().getClassLoader()-->Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_38 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())[ CD ]
Line_27 $$ if (cachedContext == null) -->Line_31 $$ constructor.setAccessible(true)[ CD ]
Line_27 $$ if (cachedContext == null) -->Line_35 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)[ CD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)[ FD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_23 $$ Thread.currentThread().setContextClassLoader(shadowingClassLoader)[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_39 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)[ CD ]
Line_32 $$ Object ltw = constructor.newInstance(shadowingClassLoader)-->Line_48 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)[ FD ]
Line_55 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())-->Line_56 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ FD ]
Line_18 $$ if (shadowingClassLoader == null) -->Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)[ CD ]
Line_35 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)-->Line_56 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ FD ]
Line_69 $$ Field shadowed = thisShadowedClass.getDeclaredField("shadowParent")-->Line_71 $$ shadowed.set(shadowedTestCase, this)[ FD ]
Line_48 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)-->Line_52 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ FD ]
Line_30 $$ Constructor constructor = shadowingLoadTimeWeaverClass.getConstructor(ClassLoader.class)-->Line_31 $$ constructor.setAccessible(true)[ FD ]
Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_55 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ FD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_45 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())[ FD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_55 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ FD ]
Line_46 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)-->Line_47 $$ bppConstructor.setAccessible(true)[ FD ]
Line_13 $$ if (this.shadowParent != null) -->Line_18 $$ if (shadowingClassLoader == null) [ CD ]
Line_27 $$ if (cachedContext == null) -->Line_42 $$ loadBeanDefinitions.invoke(reader, new Object[] [ CD ]
Line_27 $$ if (cachedContext == null) -->Line_52 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ CD ]
Line_13 $$ if (this.shadowParent != null) -->Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)[ CD ]
Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_32 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_32 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ CD ]
Line_9 $$ String combinationOfContextLocationsForThisTestClass = cacheKeys()-->Line_20 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ FD ]
Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_45 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_47 $$ bppConstructor.setAccessible(true)[ CD ]
Line_18 $$ if (shadowingClassLoader == null) -->Line_20 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ CD ]
Line_13 $$ if (this.shadowParent != null) -->Line_15 $$ super.runBare()[ CD ]
Line_35 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)-->Line_52 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ FD ]
Line_51 $$ Method addBeanPostProcessor = beanFactoryClass.getMethod("addBeanPostProcessor", beanPostProcessorClass)-->Line_52 $$ addBeanPostProcessor.invoke(beanFactory, beanPostProcessor)[ FD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_32 $$ Object ltw = constructor.newInstance(shadowingClassLoader)[ FD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_20 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_55 $$ Class defaultListableBeanFactoryClass = shadowingClassLoader.loadClass(DefaultListableBeanFactory.class.getName())[ CD ]
Line_69 $$ Field shadowed = thisShadowedClass.getDeclaredField("shadowParent")-->Line_70 $$ shadowed.setAccessible(true)[ FD ]
Line_10 $$ ClassLoader classLoaderForThisTestClass = getClass().getClassLoader()-->Line_14 $$ Thread.currentThread().setContextClassLoader(classLoaderForThisTestClass)[ FD ]
Line_35 $$ Object beanFactory = BeanUtils.instantiateClass(beanFactoryClass)-->Line_39 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)[ FD ]
Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_38 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_51 $$ Method addBeanPostProcessor = beanFactoryClass.getMethod("addBeanPostProcessor", beanPostProcessorClass)[ CD ]
Line_5 $$ if (!shouldUseShadowLoader()) -->Line_6 $$ super.runBare()[ CD ]
Line_9 $$ String combinationOfContextLocationsForThisTestClass = cacheKeys()-->Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_48 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)[ CD ]
Line_45 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())-->Line_46 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)[ FD ]
Line_24 $$ String[] configLocations = getConfigLocations()-->Line_76 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_5 $$ if (!shouldUseShadowLoader()) -->Line_7 $$ return[ CD ]
Line_27 $$ if (cachedContext == null) -->Line_56 $$ cachedContext = genericApplicationContextClass.getConstructor(defaultListableBeanFactoryClass).newInstance(beanFactory)[ CD ]
Line_27 $$ if (cachedContext == null) -->Line_45 $$ Class loadTimeWeaverClass = shadowingClassLoader.loadClass(LoadTimeWeaver.class.getName())[ CD ]
Line_74 $$ Method addContextMethod = shadowedTestClass.getMethod("addContext", String[].class, applicationContextClass)-->Line_76 $$ addContextMethod.invoke(shadowedTestCase, configLocations, cachedContext)[ FD ]
Line_27 $$ if (cachedContext == null) -->Line_46 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)[ CD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_38 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())[ FD ]
Line_38 $$ Class beanDefinitionRegistryClass = shadowingClassLoader.loadClass(BeanDefinitionRegistry.class.getName())-->Line_39 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)[ FD ]
Line_19 $$ shadowingClassLoader = (ShadowingClassLoader) createShadowingClassLoader(classLoaderForThisTestClass)-->Line_20 $$ classLoaderCache.put(combinationOfContextLocationsForThisTestClass, shadowingClassLoader)[ FD ]
Line_39 $$ Object reader = beanDefinitionReaderClass.getConstructor(beanDefinitionRegistryClass).newInstance(beanFactory)-->Line_42 $$ loadBeanDefinitions.invoke(reader, new Object[] [ FD ]
Line_46 $$ Constructor bppConstructor = loadTimeWeaverInjectingBeanPostProcessorClass.getConstructor(loadTimeWeaverClass)-->Line_48 $$ Object beanPostProcessor = bppConstructor.newInstance(ltw)[ FD ]
Line_13 $$ if (this.shadowParent != null) -->Line_14 $$ Thread.currentThread().setContextClassLoader(classLoaderForThisTestClass)[ CD ]
Line_17 $$ ShadowingClassLoader shadowingClassLoader = (ShadowingClassLoader) classLoaderCache.get(combinationOfContextLocationsForThisTestClass)-->Line_18 $$ if (shadowingClassLoader == null) [ FD ]
Line_27 $$ if (cachedContext == null) -->Line_30 $$ Constructor constructor = shadowingLoadTimeWeaverClass.getConstructor(ClassLoader.class)[ CD ]
