Line_2 $$ public GroovySystemLoader forClassLoader(ClassLoader classLoader) -->Line_6 $$ groovySystem = classLoader.loadClass("groovy.lang.GroovySystem")[ FD ]
Line_2 $$ public GroovySystemLoader forClassLoader(ClassLoader classLoader) -->Line_11 $$ if (groovySystem.getClassLoader() != classLoader) [ FD ]
Line_15 $$ String versionString-->Line_22 $$ VersionNumber groovyVersion = VersionNumber.parse(versionString)[ FD ]
Line_6 $$ groovySystem = classLoader.loadClass("groovy.lang.GroovySystem")-->Line_17 $$ Method getVersion = groovySystem.getDeclaredMethod("getVersion")[ FD ]
Line_15 $$ String versionString-->Line_18 $$ versionString = (String) getVersion.invoke(null)[ FD ]
Line_4 $$ Class<?> groovySystem-->Line_17 $$ Method getVersion = groovySystem.getDeclaredMethod("getVersion")[ FD ]
Line_17 $$ Method getVersion = groovySystem.getDeclaredMethod("getVersion")-->Line_18 $$ versionString = (String) getVersion.invoke(null)[ FD ]
Line_22 $$ VersionNumber groovyVersion = VersionNumber.parse(versionString)-->Line_23 $$ boolean isFaultyGroovy = groovyVersion.getMajor() == 2 && groovyVersion.getMinor() == 4[ FD ]
Line_4 $$ Class<?> groovySystem-->Line_6 $$ groovySystem = classLoader.loadClass("groovy.lang.GroovySystem")[ FD ]
Line_4 $$ Class<?> groovySystem-->Line_11 $$ if (groovySystem.getClassLoader() != classLoader) [ FD ]
Line_6 $$ groovySystem = classLoader.loadClass("groovy.lang.GroovySystem")-->Line_11 $$ if (groovySystem.getClassLoader() != classLoader) [ FD ]
Line_18 $$ versionString = (String) getVersion.invoke(null)-->Line_22 $$ VersionNumber groovyVersion = VersionNumber.parse(versionString)[ FD ]
