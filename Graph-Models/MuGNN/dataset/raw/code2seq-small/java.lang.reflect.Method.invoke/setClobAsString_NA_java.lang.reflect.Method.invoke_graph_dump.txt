Line_4 $$ if (content != null) -->Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() [ CD ]
Line_4 $$ if (content != null) -->Line_19 $$ ps.setClob(paramIndex, (Clob) null)[ CD ]
Line_4 $$ if (content != null) -->Line_15 $$ if (logger.isDebugEnabled()) [ CD ]
Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() -->Line_9 $$ Method methodToInvoke = lob.getClass().getMethod("getCharacterOutputStream", (Class[]) null)[ CD ]
Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() -->Line_16 $$ logger.debug("Set string for Oracle CLOB with length " + clob.length())[ FD ]
Line_15 $$ if (logger.isDebugEnabled()) -->Line_16 $$ logger.debug("Set string for Oracle CLOB with length " + clob.length())[ CD ]
Line_10 $$ Writer writer = (Writer) methodToInvoke.invoke(lob, (Object[]) null)-->Line_11 $$ FileCopyUtils.copy(content, writer)[ FD ]
Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() -->Line_10 $$ Writer writer = (Writer) methodToInvoke.invoke(lob, (Object[]) null)[ FD ]
Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() -->Line_14 $$ ps.setClob(paramIndex, clob)[ FD ]
Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() -->Line_11 $$ FileCopyUtils.copy(content, writer)[ CD ]
Line_4 $$ if (content != null) -->Line_20 $$ logger.debug("Set Oracle CLOB to null")[ CD ]
Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() -->Line_9 $$ Method methodToInvoke = lob.getClass().getMethod("getCharacterOutputStream", (Class[]) null)[ FD ]
Line_9 $$ Method methodToInvoke = lob.getClass().getMethod("getCharacterOutputStream", (Class[]) null)-->Line_10 $$ Writer writer = (Writer) methodToInvoke.invoke(lob, (Object[]) null)[ FD ]
Line_4 $$ if (content != null) -->Line_14 $$ ps.setClob(paramIndex, clob)[ CD ]
Line_5 $$ Clob clob = (Clob) createLob(ps, true, new LobCallback() -->Line_10 $$ Writer writer = (Writer) methodToInvoke.invoke(lob, (Object[]) null)[ CD ]
