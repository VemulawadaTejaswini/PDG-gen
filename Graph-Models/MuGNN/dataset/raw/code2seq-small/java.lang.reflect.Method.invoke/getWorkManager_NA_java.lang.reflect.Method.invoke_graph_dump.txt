Line_14 $$ ObjectName objectName = ObjectName.getInstance(mbeanName)-->Line_15 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)[ FD ]
Line_13 $$ MBeanServerConnection mconn = (MBeanServerConnection) jndiContext.lookup(MBEAN_SERVER_CONNECTION_JNDI_NAME)-->Line_15 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)[ FD ]
Line_11 $$ Class<?> mbeanClass = JBossWorkManagerUtils.class.getClassLoader().loadClass(JBOSS_WORK_MANAGER_MBEAN_CLASS_NAME)-->Line_15 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)[ FD ]
Line_15 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)-->Line_17 $$ return (WorkManager) getInstanceMethod.invoke(workManagerMBean)[ FD ]
Line_12 $$ InitialContext jndiContext = new InitialContext()-->Line_13 $$ MBeanServerConnection mconn = (MBeanServerConnection) jndiContext.lookup(MBEAN_SERVER_CONNECTION_JNDI_NAME)[ FD ]
Line_16 $$ Method getInstanceMethod = workManagerMBean.getClass().getMethod("getInstance")-->Line_17 $$ return (WorkManager) getInstanceMethod.invoke(workManagerMBean)[ FD ]
Line_15 $$ Object workManagerMBean = MBeanServerInvocationHandler.newProxyInstance(mconn, objectName, mbeanClass, false)-->Line_16 $$ Method getInstanceMethod = workManagerMBean.getClass().getMethod("getInstance")[ FD ]
