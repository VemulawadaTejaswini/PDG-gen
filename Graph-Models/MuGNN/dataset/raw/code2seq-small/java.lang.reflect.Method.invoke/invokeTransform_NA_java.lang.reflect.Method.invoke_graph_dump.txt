Line_2 $$ private Object invokeTransform(final ParserRuleContext source, final Transform transform, final Object object) -->Line_5 $$ final int modifiers = jmethod.getModifiers()[ CD ]
Line_2 $$ private Object invokeTransform(final ParserRuleContext source, final Transform transform, final Object object) -->Line_10 $$ return jmethod.invoke(object)[ FD ]
Line_4 $$ final java.lang.reflect.Method jmethod = method.reflect-->Line_10 $$ return jmethod.invoke(object)[ FD ]
Line_2 $$ private Object invokeTransform(final ParserRuleContext source, final Transform transform, final Object object) -->Line_13 $$ throw new IllegalStateException(error(source) + "Unable to invoke transform to cast constant from " + "[" + transform.from.name + "] to [" + transform.to.name + "].")[ FD ]
Line_5 $$ final int modifiers = jmethod.getModifiers()-->Line_7 $$ if (java.lang.reflect.Modifier.isStatic(modifiers)) [ FD ]
Line_2 $$ private Object invokeTransform(final ParserRuleContext source, final Transform transform, final Object object) -->Line_4 $$ final java.lang.reflect.Method jmethod = method.reflect[ CD ]
Line_4 $$ final java.lang.reflect.Method jmethod = method.reflect-->Line_5 $$ final int modifiers = jmethod.getModifiers()[ FD ]
Line_7 $$ if (java.lang.reflect.Modifier.isStatic(modifiers)) -->Line_8 $$ return jmethod.invoke(null, object)[ CD ]
Line_2 $$ private Object invokeTransform(final ParserRuleContext source, final Transform transform, final Object object) -->Line_8 $$ return jmethod.invoke(null, object)[ FD ]
Line_2 $$ private Object invokeTransform(final ParserRuleContext source, final Transform transform, final Object object) -->Line_3 $$ final Method method = transform.method[ CD ]
Line_7 $$ if (java.lang.reflect.Modifier.isStatic(modifiers)) -->Line_10 $$ return jmethod.invoke(object)[ CD ]
Line_4 $$ final java.lang.reflect.Method jmethod = method.reflect-->Line_8 $$ return jmethod.invoke(null, object)[ FD ]
