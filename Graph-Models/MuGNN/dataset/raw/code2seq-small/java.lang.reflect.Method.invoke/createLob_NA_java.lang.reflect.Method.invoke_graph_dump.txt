Line_9 $$ con = getOracleConnection(ps)-->Line_10 $$ initOracleDriverClasses(con)[ FD ]
Line_22 $$ if (ex.getTargetException() instanceof SQLException) -->Line_24 $$ if (con != null && ex.getTargetException() instanceof ClassCastException) [ CD ]
Line_7 $$ Connection con = null-->Line_11 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)[ FD ]
Line_9 $$ con = getOracleConnection(ps)-->Line_25 $$ throw new InvalidDataAccessApiUsageException("OracleLobCreator needs to work on [oracle.jdbc.OracleConnection], not on [" + con.getClass().getName() + "]: specify a corresponding NativeJdbcExtractor", ex.getTargetException())[ FD ]
Line_11 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)-->Line_14 $$ this.temporaryLobs.add(lob)[ FD ]
Line_9 $$ con = getOracleConnection(ps)-->Line_11 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)[ FD ]
Line_7 $$ Connection con = null-->Line_25 $$ throw new InvalidDataAccessApiUsageException("OracleLobCreator needs to work on [oracle.jdbc.OracleConnection], not on [" + con.getClass().getName() + "]: specify a corresponding NativeJdbcExtractor", ex.getTargetException())[ FD ]
Line_7 $$ Connection con = null-->Line_9 $$ con = getOracleConnection(ps)[ FD ]
Line_11 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)-->Line_12 $$ callback.populateLob(lob)[ FD ]
Line_15 $$ if (logger.isDebugEnabled()) -->Line_16 $$ logger.debug("Created new Oracle " + (clob ? "CLOB" : "BLOB"))[ CD ]
Line_11 $$ Object lob = prepareLob(con, clob ? clobClass : blobClass)-->Line_13 $$ lob.getClass().getMethod("close", (Class[]) null).invoke(lob, (Object[]) null)[ FD ]
Line_7 $$ Connection con = null-->Line_10 $$ initOracleDriverClasses(con)[ FD ]
