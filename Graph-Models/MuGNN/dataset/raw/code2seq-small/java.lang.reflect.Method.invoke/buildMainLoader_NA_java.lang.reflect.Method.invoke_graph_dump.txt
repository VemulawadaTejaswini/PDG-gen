Line_6 $$ Method method = ClassLoader.class.getDeclaredMethod("getBootstrapClassPath")-->Line_8 $$ URLClassPath ucp = (URLClassPath) method.invoke(null)[ FD ]
Line_6 $$ Method method = ClassLoader.class.getDeclaredMethod("getBootstrapClassPath")-->Line_7 $$ method.setAccessible(true)[ FD ]
Line_13 $$ final List<URL> urls = new ArrayList<URL>()-->Line_21 $$ urls.add(url)[ FD ]
Line_19 $$ URL url = new File(s).toURI().toURL()-->Line_21 $$ urls.add(url)[ FD ]
Line_4 $$ Set<URL> bootstrapUrls = new HashSet<URL>()-->Line_20 $$ if (!bootstrapUrls.contains(url)) [ FD ]
Line_30 $$ new Runnable() -->Line_33 $$ ref[0] = UrlClassLoader.build().urls(urls).useCache().get()[ CD ]
Line_8 $$ URLClassPath ucp = (URLClassPath) method.invoke(null)-->Line_9 $$ Collections.addAll(bootstrapUrls, ucp.getURLs())[ FD ]
Line_17 $$ String classpath = reader.readLine()-->Line_18 $$ for (String s : classpath.split(File.pathSeparator)) [ FD ]
Line_13 $$ final List<URL> urls = new ArrayList<URL>()-->Line_33 $$ ref[0] = UrlClassLoader.build().urls(urls).useCache().get()[ FD ]
Line_4 $$ Set<URL> bootstrapUrls = new HashSet<URL>()-->Line_9 $$ Collections.addAll(bootstrapUrls, ucp.getURLs())[ FD ]
Line_20 $$ if (!bootstrapUrls.contains(url)) -->Line_21 $$ urls.add(url)[ CD ]
Line_19 $$ URL url = new File(s).toURI().toURL()-->Line_20 $$ if (!bootstrapUrls.contains(url)) [ FD ]
