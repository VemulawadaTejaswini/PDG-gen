Line_30 $$ if (sourcePd != null) -->Line_32 $$ if (readMethod != null && ClassUtils.isAssignable(writeMethod.getParameterTypes()[0], readMethod.getReturnType())) [ CD ]
Line_34 $$ if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers())) -->Line_35 $$ readMethod.setAccessible(true)[ CD ]
Line_30 $$ if (sourcePd != null) -->Line_31 $$ Method readMethod = sourcePd.getReadMethod()[ CD ]
Line_29 $$ PropertyDescriptor sourcePd = getPropertyDescriptor(source.getClass(), targetPd.getName())-->Line_31 $$ Method readMethod = sourcePd.getReadMethod()[ FD ]
Line_22 $$ actualEditable = editable-->Line_24 $$ PropertyDescriptor[] targetPds = getPropertyDescriptors(actualEditable)[ FD ]
Line_26 $$ for (PropertyDescriptor targetPd : targetPds) -->Line_28 $$ if (writeMethod != null && (ignoreList == null || !ignoreList.contains(targetPd.getName()))) [ FD ]
Line_31 $$ Method readMethod = sourcePd.getReadMethod()-->Line_34 $$ if (!Modifier.isPublic(readMethod.getDeclaringClass().getModifiers())) [ FD ]
Line_31 $$ Method readMethod = sourcePd.getReadMethod()-->Line_32 $$ if (readMethod != null && ClassUtils.isAssignable(writeMethod.getParameterTypes()[0], readMethod.getReturnType())) [ FD ]
Line_18 $$ if (editable != null) -->Line_22 $$ actualEditable = editable[ CD ]
Line_31 $$ Method readMethod = sourcePd.getReadMethod()-->Line_37 $$ Object value = readMethod.invoke(source)[ FD ]
Line_28 $$ if (writeMethod != null && (ignoreList == null || !ignoreList.contains(targetPd.getName()))) -->Line_29 $$ PropertyDescriptor sourcePd = getPropertyDescriptor(source.getClass(), targetPd.getName())[ CD ]
Line_26 $$ for (PropertyDescriptor targetPd : targetPds) -->Line_27 $$ Method writeMethod = targetPd.getWriteMethod()[ FD ]
Line_25 $$ List<String> ignoreList = (ignoreProperties != null ? Arrays.asList(ignoreProperties) : null)-->Line_28 $$ if (writeMethod != null && (ignoreList == null || !ignoreList.contains(targetPd.getName()))) [ FD ]
Line_28 $$ if (writeMethod != null && (ignoreList == null || !ignoreList.contains(targetPd.getName()))) -->Line_30 $$ if (sourcePd != null) [ CD ]
Line_27 $$ Method writeMethod = targetPd.getWriteMethod()-->Line_38 $$ if (!Modifier.isPublic(writeMethod.getDeclaringClass().getModifiers())) [ FD ]
Line_29 $$ PropertyDescriptor sourcePd = getPropertyDescriptor(source.getClass(), targetPd.getName())-->Line_30 $$ if (sourcePd != null) [ FD ]
Line_17 $$ Class<?> actualEditable = target.getClass()-->Line_24 $$ PropertyDescriptor[] targetPds = getPropertyDescriptors(actualEditable)[ FD ]
Line_27 $$ Method writeMethod = targetPd.getWriteMethod()-->Line_39 $$ writeMethod.setAccessible(true)[ FD ]
Line_31 $$ Method readMethod = sourcePd.getReadMethod()-->Line_35 $$ readMethod.setAccessible(true)[ FD ]
Line_27 $$ Method writeMethod = targetPd.getWriteMethod()-->Line_41 $$ writeMethod.invoke(target, value)[ FD ]
Line_27 $$ Method writeMethod = targetPd.getWriteMethod()-->Line_32 $$ if (readMethod != null && ClassUtils.isAssignable(writeMethod.getParameterTypes()[0], readMethod.getReturnType())) [ FD ]
Line_17 $$ Class<?> actualEditable = target.getClass()-->Line_22 $$ actualEditable = editable[ FD ]
Line_37 $$ Object value = readMethod.invoke(source)-->Line_41 $$ writeMethod.invoke(target, value)[ FD ]
Line_38 $$ if (!Modifier.isPublic(writeMethod.getDeclaringClass().getModifiers())) -->Line_39 $$ writeMethod.setAccessible(true)[ CD ]
Line_26 $$ for (PropertyDescriptor targetPd : targetPds) -->Line_43 $$ throw new FatalBeanException("Could not copy property '" + targetPd.getName() + "' from source to target", ex)[ FD ]
Line_26 $$ for (PropertyDescriptor targetPd : targetPds) -->Line_29 $$ PropertyDescriptor sourcePd = getPropertyDescriptor(source.getClass(), targetPd.getName())[ FD ]
Line_18 $$ if (editable != null) -->Line_19 $$ if (!editable.isInstance(target)) [ CD ]
