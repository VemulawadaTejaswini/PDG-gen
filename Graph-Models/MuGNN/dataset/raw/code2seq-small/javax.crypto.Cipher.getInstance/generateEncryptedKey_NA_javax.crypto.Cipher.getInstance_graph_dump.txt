Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_4 $$ Preconditions.checkNotNull(encryptionKey, "No KeyVersion exists for key '%s' ", encryptionKeyName)[ FD ]
Line_5 $$ Cipher cipher = Cipher.getInstance("AES/CTR/NoPadding")-->Line_8 $$ final byte[] iv = new byte[cipher.getBlockSize()][ FD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_4 $$ Preconditions.checkNotNull(encryptionKey, "No KeyVersion exists for key '%s' ", encryptionKeyName)[ CD ]
Line_3 $$ KeyVersion encryptionKey = keyProvider.getCurrentKey(encryptionKeyName)-->Line_11 $$ cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(encryptionKey.getMaterial(), "AES"), new IvParameterSpec(encryptionIV))[ FD ]
Line_6 $$ final byte[] newKey = new byte[encryptionKey.getMaterial().length]-->Line_12 $$ final byte[] encryptedKey = cipher.doFinal(newKey)[ FD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_7 $$ RANDOM.get().nextBytes(newKey)[ CD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_9 $$ RANDOM.get().nextBytes(iv)[ CD ]
Line_3 $$ KeyVersion encryptionKey = keyProvider.getCurrentKey(encryptionKeyName)-->Line_4 $$ Preconditions.checkNotNull(encryptionKey, "No KeyVersion exists for key '%s' ", encryptionKeyName)[ FD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_12 $$ final byte[] encryptedKey = cipher.doFinal(newKey)[ CD ]
Line_8 $$ final byte[] iv = new byte[cipher.getBlockSize()]-->Line_10 $$ final byte[] encryptionIV = EncryptedKeyVersion.deriveIV(iv)[ FD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_11 $$ cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(encryptionKey.getMaterial(), "AES"), new IvParameterSpec(encryptionIV))[ CD ]
Line_3 $$ KeyVersion encryptionKey = keyProvider.getCurrentKey(encryptionKeyName)-->Line_13 $$ return new EncryptedKeyVersion(encryptionKeyName, encryptionKey.getVersionName(), iv, new KeyVersion(encryptionKey.getName(), EEK, encryptedKey))[ FD ]
Line_8 $$ final byte[] iv = new byte[cipher.getBlockSize()]-->Line_9 $$ RANDOM.get().nextBytes(iv)[ FD ]
Line_5 $$ Cipher cipher = Cipher.getInstance("AES/CTR/NoPadding")-->Line_12 $$ final byte[] encryptedKey = cipher.doFinal(newKey)[ FD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_8 $$ final byte[] iv = new byte[cipher.getBlockSize()][ CD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_3 $$ KeyVersion encryptionKey = keyProvider.getCurrentKey(encryptionKeyName)[ FD ]
Line_3 $$ KeyVersion encryptionKey = keyProvider.getCurrentKey(encryptionKeyName)-->Line_6 $$ final byte[] newKey = new byte[encryptionKey.getMaterial().length][ FD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_3 $$ KeyVersion encryptionKey = keyProvider.getCurrentKey(encryptionKeyName)[ CD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_13 $$ return new EncryptedKeyVersion(encryptionKeyName, encryptionKey.getVersionName(), iv, new KeyVersion(encryptionKey.getName(), EEK, encryptedKey))[ CD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_6 $$ final byte[] newKey = new byte[encryptionKey.getMaterial().length][ CD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_5 $$ Cipher cipher = Cipher.getInstance("AES/CTR/NoPadding")[ CD ]
Line_5 $$ Cipher cipher = Cipher.getInstance("AES/CTR/NoPadding")-->Line_11 $$ cipher.init(Cipher.ENCRYPT_MODE, new SecretKeySpec(encryptionKey.getMaterial(), "AES"), new IvParameterSpec(encryptionIV))[ FD ]
Line_2 $$ public EncryptedKeyVersion generateEncryptedKey(String encryptionKeyName) throws IOException, GeneralSecurityException -->Line_10 $$ final byte[] encryptionIV = EncryptedKeyVersion.deriveIV(iv)[ CD ]
Line_6 $$ final byte[] newKey = new byte[encryptionKey.getMaterial().length]-->Line_7 $$ RANDOM.get().nextBytes(newKey)[ FD ]
