Line_2 $$ public Collection<Module> modulesInGroup(Project project, boolean recursively) -->Line_3 $$ final Module[] allModules = ModuleManager.getInstance(project).getModules()[ CD ]
Line_5 $$ for (final Module module : allModules) -->Line_6 $$ String[] group = ModuleManager.getInstance(project).getModuleGroupPath(module)[ FD ]
Line_2 $$ public Collection<Module> modulesInGroup(Project project, boolean recursively) -->Line_3 $$ final Module[] allModules = ModuleManager.getInstance(project).getModules()[ FD ]
Line_2 $$ public Collection<Module> modulesInGroup(Project project, boolean recursively) -->Line_6 $$ String[] group = ModuleManager.getInstance(project).getModuleGroupPath(module)[ FD ]
Line_2 $$ public Collection<Module> modulesInGroup(Project project, boolean recursively) -->Line_4 $$ List<Module> result = new ArrayList<Module>()[ CD ]
Line_6 $$ String[] group = ModuleManager.getInstance(project).getModuleGroupPath(module)-->Line_7 $$ if (group == null)[ FD ]
Line_6 $$ String[] group = ModuleManager.getInstance(project).getModuleGroupPath(module)-->Line_9 $$ if (Arrays.equals(myGroupPath, group) || (recursively && isChild(myGroupPath, group))) [ FD ]
Line_4 $$ List<Module> result = new ArrayList<Module>()-->Line_10 $$ result.add(module)[ FD ]
Line_5 $$ for (final Module module : allModules) -->Line_10 $$ result.add(module)[ FD ]
Line_2 $$ public Collection<Module> modulesInGroup(Project project, boolean recursively) -->Line_13 $$ return result[ CD ]
Line_9 $$ if (Arrays.equals(myGroupPath, group) || (recursively && isChild(myGroupPath, group))) -->Line_10 $$ result.add(module)[ CD ]
