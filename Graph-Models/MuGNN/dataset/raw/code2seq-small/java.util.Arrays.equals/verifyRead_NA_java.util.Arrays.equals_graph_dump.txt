Line_6 $$ byte[] expected = Arrays.copyOfRange(fileContents, seekOff, seekOff + toRead)-->Line_8 $$ String s = "\nExpected: " + StringUtils.byteToHexString(expected) + "\ngot:      " + StringUtils.byteToHexString(out) + "\noff=" + seekOff + " len=" + toRead[ FD ]
Line_7 $$ if (!Arrays.equals(out, expected)) -->Line_8 $$ String s = "\nExpected: " + StringUtils.byteToHexString(expected) + "\ngot:      " + StringUtils.byteToHexString(out) + "\noff=" + seekOff + " len=" + toRead[ CD ]
Line_7 $$ if (!Arrays.equals(out, expected)) -->Line_9 $$ fail(s)[ CD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_5 $$ stm.readFully(out)[ FD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_5 $$ stm.readFully(out)[ CD ]
Line_3 $$ byte[] out = new byte[toRead]-->Line_5 $$ stm.readFully(out)[ FD ]
Line_3 $$ byte[] out = new byte[toRead]-->Line_8 $$ String s = "\nExpected: " + StringUtils.byteToHexString(expected) + "\ngot:      " + StringUtils.byteToHexString(out) + "\noff=" + seekOff + " len=" + toRead[ FD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_4 $$ stm.seek(seekOff)[ CD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_6 $$ byte[] expected = Arrays.copyOfRange(fileContents, seekOff, seekOff + toRead)[ FD ]
Line_6 $$ byte[] expected = Arrays.copyOfRange(fileContents, seekOff, seekOff + toRead)-->Line_7 $$ if (!Arrays.equals(out, expected)) [ FD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_4 $$ stm.seek(seekOff)[ FD ]
Line_8 $$ String s = "\nExpected: " + StringUtils.byteToHexString(expected) + "\ngot:      " + StringUtils.byteToHexString(out) + "\noff=" + seekOff + " len=" + toRead-->Line_9 $$ fail(s)[ FD ]
Line_3 $$ byte[] out = new byte[toRead]-->Line_7 $$ if (!Arrays.equals(out, expected)) [ FD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_3 $$ byte[] out = new byte[toRead][ CD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_7 $$ if (!Arrays.equals(out, expected)) [ CD ]
Line_2 $$ private void verifyRead(FSDataInputStream stm, byte[] fileContents, int seekOff, int toRead) throws IOException -->Line_6 $$ byte[] expected = Arrays.copyOfRange(fileContents, seekOff, seekOff + toRead)[ CD ]
