Line_3 $$ byte[][] pathComponents-->Line_19 $$ if (isRoot(pathComponents)) [ FD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_4 $$ byte[][] parentPath = [ CD ]
Line_7 $$ for (long i = 0; i < numFiles; i++) -->Line_9 $$ for (int j = 0; j < pathComponents.length; j++) [ CD ]
Line_25 $$ parentINode = getParentINodeDirectory(pathComponents)-->Line_28 $$ addToParent(parentINode, newNode)[ FD ]
Line_3 $$ byte[][] pathComponents-->Line_12 $$ String oldPath = DFSUtil.byteArray2PathString(pathComponents)[ FD ]
Line_11 $$ if (!Arrays.equals(newComponent, pathComponents[j])) -->Line_15 $$ LOG.info("Renaming reserved path " + oldPath + " to " + newPath)[ CD ]
Line_10 $$ byte[] newComponent = renameReservedComponentOnUpgrade(pathComponents[j], getLayoutVersion())-->Line_11 $$ if (!Arrays.equals(newComponent, pathComponents[j])) [ FD ]
Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)-->Line_24 $$ if (!isParent(pathComponents, parentPath)) [ FD ]
Line_4 $$ byte[][] parentPath = -->Line_24 $$ if (!isParent(pathComponents, parentPath)) [ FD ]
Line_24 $$ if (!isParent(pathComponents, parentPath)) -->Line_26 $$ parentPath = getParent(pathComponents)[ CD ]
Line_3 $$ byte[][] pathComponents-->Line_14 $$ String newPath = DFSUtil.byteArray2PathString(pathComponents)[ FD ]
Line_9 $$ for (int j = 0; j < pathComponents.length; j++) -->Line_10 $$ byte[] newComponent = renameReservedComponentOnUpgrade(pathComponents[j], getLayoutVersion())[ CD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_7 $$ for (long i = 0; i < numFiles; i++) [ CD ]
Line_3 $$ byte[][] pathComponents-->Line_25 $$ parentINode = getParentINodeDirectory(pathComponents)[ FD ]
Line_11 $$ if (!Arrays.equals(newComponent, pathComponents[j])) -->Line_12 $$ String oldPath = DFSUtil.byteArray2PathString(pathComponents)[ CD ]
Line_24 $$ if (!isParent(pathComponents, parentPath)) -->Line_25 $$ parentINode = getParentINodeDirectory(pathComponents)[ CD ]
Line_3 $$ byte[][] pathComponents-->Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)[ FD ]
Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)-->Line_25 $$ parentINode = getParentINodeDirectory(pathComponents)[ FD ]
Line_7 $$ for (long i = 0; i < numFiles; i++) -->Line_18 $$ final INode newNode = loadINode(pathComponents[pathComponents.length - 1], false, in, counter)[ CD ]
Line_7 $$ for (long i = 0; i < numFiles; i++) -->Line_19 $$ if (isRoot(pathComponents)) [ CD ]
Line_19 $$ if (isRoot(pathComponents)) -->Line_20 $$ updateRootAttr(newNode.asDirectory())[ CD ]
Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)-->Line_19 $$ if (isRoot(pathComponents)) [ FD ]
Line_6 $$ INodeDirectory parentINode = fsDir.rootDir-->Line_28 $$ addToParent(parentINode, newNode)[ FD ]
Line_6 $$ INodeDirectory parentINode = fsDir.rootDir-->Line_25 $$ parentINode = getParentINodeDirectory(pathComponents)[ FD ]
Line_7 $$ for (long i = 0; i < numFiles; i++) -->Line_28 $$ addToParent(parentINode, newNode)[ CD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_6 $$ INodeDirectory parentINode = fsDir.rootDir[ CD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_18 $$ final INode newNode = loadINode(pathComponents[pathComponents.length - 1], false, in, counter)[ FD ]
Line_3 $$ byte[][] pathComponents-->Line_24 $$ if (!isParent(pathComponents, parentPath)) [ FD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)[ FD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_3 $$ byte[][] pathComponents[ CD ]
Line_7 $$ for (long i = 0; i < numFiles; i++) -->Line_23 $$ namesystem.dir.addToInodeMap(newNode)[ CD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_7 $$ for (long i = 0; i < numFiles; i++) [ FD ]
Line_26 $$ parentPath = getParent(pathComponents)-->Line_24 $$ if (!isParent(pathComponents, parentPath)) [ FD ]
Line_4 $$ byte[][] parentPath = -->Line_26 $$ parentPath = getParent(pathComponents)[ FD ]
Line_3 $$ byte[][] pathComponents-->Line_26 $$ parentPath = getParent(pathComponents)[ FD ]
Line_11 $$ if (!Arrays.equals(newComponent, pathComponents[j])) -->Line_13 $$ pathComponents[j] = newComponent[ CD ]
Line_11 $$ if (!Arrays.equals(newComponent, pathComponents[j])) -->Line_14 $$ String newPath = DFSUtil.byteArray2PathString(pathComponents)[ CD ]
Line_7 $$ for (long i = 0; i < numFiles; i++) -->Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)[ CD ]
Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)-->Line_12 $$ String oldPath = DFSUtil.byteArray2PathString(pathComponents)[ FD ]
Line_10 $$ byte[] newComponent = renameReservedComponentOnUpgrade(pathComponents[j], getLayoutVersion())-->Line_13 $$ pathComponents[j] = newComponent[ FD ]
Line_2 $$ private void loadFullNameINodes(long numFiles, DataInput in, Counter counter) throws IOException -->Line_5 $$ FSDirectory fsDir = namesystem.dir[ CD ]
Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)-->Line_26 $$ parentPath = getParent(pathComponents)[ FD ]
Line_8 $$ pathComponents = FSImageSerialization.readPathComponents(in)-->Line_14 $$ String newPath = DFSUtil.byteArray2PathString(pathComponents)[ FD ]
Line_9 $$ for (int j = 0; j < pathComponents.length; j++) -->Line_11 $$ if (!Arrays.equals(newComponent, pathComponents[j])) [ CD ]
Line_7 $$ for (long i = 0; i < numFiles; i++) -->Line_24 $$ if (!isParent(pathComponents, parentPath)) [ CD ]
