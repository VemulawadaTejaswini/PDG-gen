Line_3 $$ String resourcePath = name.replace('.', '/') + ".class"-->Line_4 $$ InputStream inputStream = getResourceAsStream(resourcePath)[ FD ]
Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)-->Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)[ FD ]
Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)-->Line_26 $$ return _generateClass(name, data)[ FD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_3 $$ String resourcePath = name.replace('.', '/') + ".class"[ FD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_5 $$ byte[] data = null[ CD ]
Line_32 $$ try (FileOutputStream fileOutputStream = new FileOutputStream(dumpFile)) -->Line_33 $$ fileOutputStream.write(data)[ FD ]
Line_4 $$ InputStream inputStream = getResourceAsStream(resourcePath)-->Line_7 $$ if (inputStream == null) [ FD ]
Line_5 $$ byte[] data = null-->Line_25 $$ if (Arrays.equals(oldData, data)) [ FD ]
Line_21 $$ if (_log.isWarnEnabled()) -->Line_22 $$ _log.warn("Abort weaving class " + name, ae)[ CD ]
Line_29 $$ File dumpFile = new File(_dumpDir, resourcePath)-->Line_30 $$ File dumpDir = dumpFile.getParentFile()[ FD ]
Line_28 $$ if (_dumpDir != null) -->Line_35 $$ if (_log.isInfoEnabled()) [ CD ]
Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)-->Line_33 $$ fileOutputStream.write(data)[ FD ]
Line_17 $$ byte[] oldData = data-->Line_25 $$ if (Arrays.equals(oldData, data)) [ FD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_43 $$ return _generateClass(name, data)[ FD ]
Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)-->Line_43 $$ return _generateClass(name, data)[ FD ]
Line_28 $$ if (_dumpDir != null) -->Line_30 $$ File dumpDir = dumpFile.getParentFile()[ CD ]
Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()-->Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)[ FD ]
Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()-->Line_25 $$ if (Arrays.equals(oldData, data)) [ FD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_4 $$ InputStream inputStream = getResourceAsStream(resourcePath)[ CD ]
Line_28 $$ if (_dumpDir != null) -->Line_29 $$ File dumpFile = new File(_dumpDir, resourcePath)[ CD ]
Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()-->Line_33 $$ fileOutputStream.write(data)[ FD ]
Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)-->Line_25 $$ if (Arrays.equals(oldData, data)) [ FD ]
Line_5 $$ byte[] data = null-->Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)[ FD ]
Line_7 $$ if (inputStream == null) -->Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)[ CD ]
Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)-->Line_26 $$ return _generateClass(name, data)[ FD ]
Line_28 $$ if (_dumpDir != null) -->Line_39 $$ if (_log.isInfoEnabled()) [ CD ]
Line_7 $$ if (inputStream == null) -->Line_11 $$ StreamUtil.transfer(inputStream, unsyncByteArrayOutputStream)[ CD ]
Line_5 $$ byte[] data = null-->Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)[ FD ]
Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()-->Line_14 $$ if (data == null) [ FD ]
Line_5 $$ byte[] data = null-->Line_26 $$ return _generateClass(name, data)[ FD ]
Line_30 $$ File dumpDir = dumpFile.getParentFile()-->Line_31 $$ dumpDir.mkdirs()[ FD ]
Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)-->Line_33 $$ fileOutputStream.write(data)[ FD ]
Line_5 $$ byte[] data = null-->Line_43 $$ return _generateClass(name, data)[ FD ]
Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)-->Line_25 $$ if (Arrays.equals(oldData, data)) [ FD ]
Line_39 $$ if (_log.isInfoEnabled()) -->Line_40 $$ _log.info("Woven class " + name)[ CD ]
Line_4 $$ InputStream inputStream = getResourceAsStream(resourcePath)-->Line_11 $$ StreamUtil.transfer(inputStream, unsyncByteArrayOutputStream)[ FD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_26 $$ return _generateClass(name, data)[ FD ]
Line_25 $$ if (Arrays.equals(oldData, data)) -->Line_26 $$ return _generateClass(name, data)[ CD ]
Line_5 $$ byte[] data = null-->Line_33 $$ fileOutputStream.write(data)[ FD ]
Line_5 $$ byte[] data = null-->Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()[ FD ]
Line_5 $$ byte[] data = null-->Line_14 $$ if (data == null) [ FD ]
Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)-->Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()[ FD ]
Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()-->Line_43 $$ return _generateClass(name, data)[ FD ]
Line_10 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()-->Line_11 $$ StreamUtil.transfer(inputStream, unsyncByteArrayOutputStream)[ FD ]
Line_10 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()-->Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()[ FD ]
Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)-->Line_14 $$ if (data == null) [ FD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_3 $$ String resourcePath = name.replace('.', '/') + ".class"[ CD ]
Line_35 $$ if (_log.isInfoEnabled()) -->Line_36 $$ _log.info("Woven class " + name + " result in " + dumpFile.getCanonicalPath())[ CD ]
Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)-->Line_43 $$ return _generateClass(name, data)[ FD ]
Line_29 $$ File dumpFile = new File(_dumpDir, resourcePath)-->Line_36 $$ _log.info("Woven class " + name + " result in " + dumpFile.getCanonicalPath())[ FD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_8 $$ data = _urlWeavingAdapter.removeGeneratedClassDate(name)[ FD ]
Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()-->Line_26 $$ return _generateClass(name, data)[ FD ]
Line_7 $$ if (inputStream == null) -->Line_12 $$ data = unsyncByteArrayOutputStream.toByteArray()[ CD ]
Line_2 $$ protected Class<?> findClass(String name) throws ClassNotFoundException -->Line_19 $$ data = _urlWeavingAdapter.weaveClass(name, data, false)[ FD ]
Line_7 $$ if (inputStream == null) -->Line_10 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()[ CD ]
Line_28 $$ if (_dumpDir != null) -->Line_31 $$ dumpDir.mkdirs()[ CD ]
