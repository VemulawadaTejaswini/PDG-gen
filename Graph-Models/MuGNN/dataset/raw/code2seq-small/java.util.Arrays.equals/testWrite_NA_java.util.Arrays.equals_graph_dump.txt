Line_2 $$ public void testWrite() throws IOException -->Line_3 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()[ CD ]
Line_2 $$ public void testWrite() throws IOException -->Line_11 $$ Assert.assertTrue(Arrays.equals(_BUFFER, byteArrayOutputStream.toByteArray()))[ CD ]
Line_2 $$ public void testWrite() throws IOException -->Line_6 $$ for (int i = 0; i < _SIZE; i++) [ CD ]
Line_6 $$ for (int i = 0; i < _SIZE; i++) -->Line_8 $$ Assert.assertEquals(i, unsyncBufferedOutputStream.buffer[i])[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_10 $$ unsyncBufferedOutputStream.flush()[ CD ]
Line_3 $$ ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()-->Line_11 $$ Assert.assertTrue(Arrays.equals(_BUFFER, byteArrayOutputStream.toByteArray()))[ FD ]
Line_4 $$ UnsyncBufferedOutputStream unsyncBufferedOutputStream = new UnsyncBufferedOutputStream(byteArrayOutputStream, _SIZE * 2)-->Line_10 $$ unsyncBufferedOutputStream.flush()[ FD ]
Line_6 $$ for (int i = 0; i < _SIZE; i++) -->Line_8 $$ Assert.assertEquals(i, unsyncBufferedOutputStream.buffer[i])[ CD ]
Line_2 $$ public void testWrite() throws IOException -->Line_4 $$ UnsyncBufferedOutputStream unsyncBufferedOutputStream = new UnsyncBufferedOutputStream(byteArrayOutputStream, _SIZE * 2)[ CD ]
Line_6 $$ for (int i = 0; i < _SIZE; i++) -->Line_7 $$ unsyncBufferedOutputStream.write(i)[ CD ]
Line_6 $$ for (int i = 0; i < _SIZE; i++) -->Line_7 $$ unsyncBufferedOutputStream.write(i)[ FD ]
Line_4 $$ UnsyncBufferedOutputStream unsyncBufferedOutputStream = new UnsyncBufferedOutputStream(byteArrayOutputStream, _SIZE * 2)-->Line_7 $$ unsyncBufferedOutputStream.write(i)[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_5 $$ Assert.assertEquals(_SIZE * 2, unsyncBufferedOutputStream.buffer.length)[ CD ]
