Line_3 $$ WritableRaster raster = image.getRaster()-->Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_9 $$ int endY = 0[ CD ]
Line_23 $$ if (startX > 0) -->Line_25 $$ endX = raster.getWidth() - 2 - (endX - 1)[ CD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_38 $$ endY = raster.getHeight() - 2[ FD ]
Line_20 $$ startX = -1-->Line_23 $$ if (startX > 0) [ FD ]
Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)-->Line_31 $$ startY = -1[ FD ]
Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)-->Line_24 $$ startX--[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_51 $$ return pads[ CD ]
Line_21 $$ endX = -1-->Line_43 $$ endX = (int) Math.round(endX * scale)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_8 $$ int endX = 0[ CD ]
Line_21 $$ endX = -1-->Line_27 $$ endX = raster.getWidth() - 2[ FD ]
Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)-->Line_12 $$ if (startY != 0)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_14 $$ getSplitPoint(raster, name, endX + 1, bottom, true, true)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)[ FD ]
Line_31 $$ startY = -1-->Line_35 $$ startY--[ FD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_3 $$ WritableRaster raster = image.getRaster()[ FD ]
Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)-->Line_27 $$ endX = raster.getWidth() - 2[ FD ]
Line_5 $$ int right = raster.getWidth() - 1-->Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_30 $$ if (startY == 0 && endY == 0) [ CD ]
Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)-->Line_45 $$ endY = (int) Math.round(endY * scale)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_3 $$ WritableRaster raster = image.getRaster()[ CD ]
Line_4 $$ int bottom = raster.getHeight() - 1-->Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)[ FD ]
Line_48 $$ if (splits != null && Arrays.equals(pads, splits)) -->Line_49 $$ return null[ CD ]
Line_41 $$ if (scale != 1) -->Line_42 $$ startX = (int) Math.round(startX * scale)[ CD ]
Line_10 $$ if (startX != 0)-->Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)[ CD ]
Line_20 $$ startX = -1-->Line_42 $$ startX = (int) Math.round(startX * scale)[ FD ]
Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)-->Line_21 $$ endX = -1[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)[ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_4 $$ int bottom = raster.getHeight() - 1[ CD ]
Line_41 $$ if (scale != 1) -->Line_44 $$ startY = (int) Math.round(startY * scale)[ CD ]
Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)-->Line_44 $$ startY = (int) Math.round(startY * scale)[ FD ]
Line_23 $$ if (startX > 0) -->Line_27 $$ endX = raster.getWidth() - 2[ CD ]
Line_21 $$ endX = -1-->Line_25 $$ endX = raster.getWidth() - 2 - (endX - 1)[ FD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_48 $$ if (splits != null && Arrays.equals(pads, splits)) [ CD ]
Line_27 $$ endX = raster.getWidth() - 2-->Line_43 $$ endX = (int) Math.round(endX * scale)[ FD ]
Line_12 $$ if (startY != 0)-->Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)[ CD ]
Line_19 $$ if (startX == 0 && endX == 0) -->Line_20 $$ startX = -1[ CD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_4 $$ int bottom = raster.getHeight() - 1[ FD ]
Line_36 $$ endY = raster.getHeight() - 2 - (endY - 1)-->Line_45 $$ endY = (int) Math.round(endY * scale)[ FD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_15 $$ getSplitPoint(raster, name, right, endY + 1, true, false)[ FD ]
Line_34 $$ if (startY > 0) -->Line_35 $$ startY--[ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)[ FD ]
Line_30 $$ if (startY == 0 && endY == 0) -->Line_31 $$ startY = -1[ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_5 $$ int right = raster.getWidth() - 1[ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_48 $$ if (splits != null && Arrays.equals(pads, splits)) [ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_47 $$ int[] pads = new int[] [ CD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_5 $$ int right = raster.getWidth() - 1[ FD ]
Line_8 $$ int endX = 0-->Line_27 $$ endX = raster.getWidth() - 2[ FD ]
Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)-->Line_43 $$ endX = (int) Math.round(endX * scale)[ FD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_16 $$ if (startX == 0 && endX == 0 && startY == 0 && endY == 0) [ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_15 $$ getSplitPoint(raster, name, right, endY + 1, true, false)[ FD ]
Line_9 $$ int endY = 0-->Line_45 $$ endY = (int) Math.round(endY * scale)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_10 $$ if (startX != 0)[ CD ]
Line_19 $$ if (startX == 0 && endX == 0) -->Line_21 $$ endX = -1[ CD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_25 $$ endX = raster.getWidth() - 2 - (endX - 1)[ FD ]
Line_4 $$ int bottom = raster.getHeight() - 1-->Line_14 $$ getSplitPoint(raster, name, endX + 1, bottom, true, true)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_15 $$ getSplitPoint(raster, name, right, endY + 1, true, false)[ CD ]
Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)-->Line_34 $$ if (startY > 0) [ FD ]
Line_31 $$ startY = -1-->Line_44 $$ startY = (int) Math.round(startY * scale)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)[ FD ]
Line_8 $$ int endX = 0-->Line_43 $$ endX = (int) Math.round(endX * scale)[ FD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_14 $$ getSplitPoint(raster, name, endX + 1, bottom, true, true)[ FD ]
Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)-->Line_20 $$ startX = -1[ FD ]
Line_8 $$ int endX = 0-->Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)[ FD ]
Line_32 $$ endY = -1-->Line_45 $$ endY = (int) Math.round(endY * scale)[ FD ]
Line_8 $$ int endX = 0-->Line_21 $$ endX = -1[ FD ]
Line_9 $$ int endY = 0-->Line_38 $$ endY = raster.getHeight() - 2[ FD ]
Line_5 $$ int right = raster.getWidth() - 1-->Line_15 $$ getSplitPoint(raster, name, right, endY + 1, true, false)[ FD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_36 $$ endY = raster.getHeight() - 2 - (endY - 1)[ FD ]
Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)-->Line_35 $$ startY--[ FD ]
Line_25 $$ endX = raster.getWidth() - 2 - (endX - 1)-->Line_27 $$ endX = raster.getWidth() - 2[ FD ]
Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)-->Line_42 $$ startX = (int) Math.round(startX * scale)[ FD ]
Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)-->Line_38 $$ endY = raster.getHeight() - 2[ FD ]
Line_30 $$ if (startY == 0 && endY == 0) -->Line_32 $$ endY = -1[ CD ]
Line_4 $$ int bottom = raster.getHeight() - 1-->Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_41 $$ if (scale != 1) [ CD ]
Line_25 $$ endX = raster.getWidth() - 2 - (endX - 1)-->Line_43 $$ endX = (int) Math.round(endX * scale)[ FD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_19 $$ if (startX == 0 && endX == 0) [ CD ]
Line_38 $$ endY = raster.getHeight() - 2-->Line_45 $$ endY = (int) Math.round(endY * scale)[ FD ]
Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)-->Line_10 $$ if (startX != 0)[ FD ]
Line_30 $$ if (startY == 0 && endY == 0) -->Line_34 $$ if (startY > 0) [ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_12 $$ if (startY != 0)[ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)[ CD ]
Line_9 $$ int endY = 0-->Line_32 $$ endY = -1[ FD ]
Line_9 $$ int endY = 0-->Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)[ FD ]
Line_6 $$ int startX = getSplitPoint(raster, name, 1, bottom, true, true)-->Line_23 $$ if (startX > 0) [ FD ]
Line_31 $$ startY = -1-->Line_34 $$ if (startY > 0) [ FD ]
Line_9 $$ int endY = 0-->Line_36 $$ endY = raster.getHeight() - 2 - (endY - 1)[ FD ]
Line_32 $$ endY = -1-->Line_38 $$ endY = raster.getHeight() - 2[ FD ]
Line_41 $$ if (scale != 1) -->Line_45 $$ endY = (int) Math.round(endY * scale)[ CD ]
Line_2 $$ private int[] getPads(BufferedImage image, String name, int[] splits) -->Line_14 $$ getSplitPoint(raster, name, endX + 1, bottom, true, true)[ CD ]
Line_47 $$ int[] pads = new int[] -->Line_48 $$ if (splits != null && Arrays.equals(pads, splits)) [ FD ]
Line_34 $$ if (startY > 0) -->Line_36 $$ endY = raster.getHeight() - 2 - (endY - 1)[ CD ]
Line_16 $$ if (startX == 0 && endX == 0 && startY == 0 && endY == 0) -->Line_17 $$ return null[ CD ]
Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)-->Line_32 $$ endY = -1[ FD ]
Line_34 $$ if (startY > 0) -->Line_38 $$ endY = raster.getHeight() - 2[ CD ]
Line_20 $$ startX = -1-->Line_24 $$ startX--[ FD ]
Line_3 $$ WritableRaster raster = image.getRaster()-->Line_27 $$ endX = raster.getWidth() - 2[ FD ]
Line_36 $$ endY = raster.getHeight() - 2 - (endY - 1)-->Line_38 $$ endY = raster.getHeight() - 2[ FD ]
Line_5 $$ int right = raster.getWidth() - 1-->Line_7 $$ int startY = getSplitPoint(raster, name, right, 1, true, false)[ FD ]
Line_8 $$ int endX = 0-->Line_25 $$ endX = raster.getWidth() - 2 - (endX - 1)[ FD ]
Line_11 $$ endX = getSplitPoint(raster, name, startX + 1, bottom, false, true)-->Line_25 $$ endX = raster.getWidth() - 2 - (endX - 1)[ FD ]
Line_41 $$ if (scale != 1) -->Line_43 $$ endX = (int) Math.round(endX * scale)[ CD ]
Line_23 $$ if (startX > 0) -->Line_24 $$ startX--[ CD ]
Line_32 $$ endY = -1-->Line_36 $$ endY = raster.getHeight() - 2 - (endY - 1)[ FD ]
Line_13 $$ endY = getSplitPoint(raster, name, right, startY + 1, false, false)-->Line_36 $$ endY = raster.getHeight() - 2 - (endY - 1)[ FD ]
Line_19 $$ if (startX == 0 && endX == 0) -->Line_23 $$ if (startX > 0) [ CD ]
