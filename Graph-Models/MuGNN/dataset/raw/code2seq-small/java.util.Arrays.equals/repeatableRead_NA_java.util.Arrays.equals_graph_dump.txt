Line_2 $$ public void repeatableRead() throws Exception -->Line_11 $$ request.getHeaders().setContentLength(body.length)[ CD ]
Line_5 $$ String headerName = "MyHeader"-->Line_19 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_17 $$ assertTrue("Header not found", response.getHeaders().containsKey(headerName))[ FD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_8 $$ String headerValue2 = "value2"[ CD ]
Line_21 $$ byte[] result = FileCopyUtils.copyToByteArray(response.getBody())-->Line_24 $$ assertTrue("Invalid body", Arrays.equals(body, result))[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_15 $$ assertEquals("Invalid status code", HttpStatus.OK, response.getStatusCode())[ FD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_13 $$ ClientHttpResponse response = request.execute()[ CD ]
Line_6 $$ String headerValue1 = "value1"-->Line_19 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_8 $$ String headerValue2 = "value2"-->Line_20 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_6 $$ String headerValue1 = "value1"[ CD ]
Line_6 $$ String headerValue1 = "value1"-->Line_7 $$ request.getHeaders().add(headerName, headerValue1)[ FD ]
Line_3 $$ ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.PUT)-->Line_13 $$ ClientHttpResponse response = request.execute()[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_23 $$ FileCopyUtils.copyToByteArray(response.getBody())[ FD ]
Line_5 $$ String headerName = "MyHeader"-->Line_18 $$ assertTrue("Header not found", response.getHeaders().containsKey(headerName))[ FD ]
Line_5 $$ String headerName = "MyHeader"-->Line_17 $$ assertTrue("Header not found", response.getHeaders().containsKey(headerName))[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_19 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_21 $$ byte[] result = FileCopyUtils.copyToByteArray(response.getBody())-->Line_22 $$ assertTrue("Invalid body", Arrays.equals(body, result))[ FD ]
Line_8 $$ String headerValue2 = "value2"-->Line_9 $$ request.getHeaders().add(headerName, headerValue2)[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_16 $$ assertEquals("Invalid status code", HttpStatus.OK, response.getStatusCode())[ FD ]
Line_6 $$ String headerValue1 = "value1"-->Line_20 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_10 $$ byte[] body = "Hello World".getBytes("UTF-8")-->Line_12 $$ FileCopyUtils.copy(body, request.getBody())[ FD ]
Line_5 $$ String headerName = "MyHeader"-->Line_9 $$ request.getHeaders().add(headerName, headerValue2)[ FD ]
Line_10 $$ byte[] body = "Hello World".getBytes("UTF-8")-->Line_24 $$ assertTrue("Invalid body", Arrays.equals(body, result))[ FD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_4 $$ assertEquals("Invalid HTTP method", HttpMethod.PUT, request.getMethod())[ CD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_21 $$ byte[] result = FileCopyUtils.copyToByteArray(response.getBody())[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_18 $$ assertTrue("Header not found", response.getHeaders().containsKey(headerName))[ FD ]
Line_3 $$ ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.PUT)-->Line_9 $$ request.getHeaders().add(headerName, headerValue2)[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_20 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_3 $$ ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.PUT)[ CD ]
Line_3 $$ ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.PUT)-->Line_11 $$ request.getHeaders().setContentLength(body.length)[ FD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_12 $$ FileCopyUtils.copy(body, request.getBody())[ CD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_5 $$ String headerName = "MyHeader"[ CD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_9 $$ request.getHeaders().add(headerName, headerValue2)[ CD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_7 $$ request.getHeaders().add(headerName, headerValue1)[ CD ]
Line_8 $$ String headerValue2 = "value2"-->Line_19 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_2 $$ public void repeatableRead() throws Exception -->Line_10 $$ byte[] body = "Hello World".getBytes("UTF-8")[ CD ]
Line_3 $$ ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.PUT)-->Line_7 $$ request.getHeaders().add(headerName, headerValue1)[ FD ]
Line_3 $$ ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.PUT)-->Line_4 $$ assertEquals("Invalid HTTP method", HttpMethod.PUT, request.getMethod())[ FD ]
Line_3 $$ ClientHttpRequest request = factory.createRequest(new URI(baseUrl + "/echo"), HttpMethod.PUT)-->Line_12 $$ FileCopyUtils.copy(body, request.getBody())[ FD ]
Line_5 $$ String headerName = "MyHeader"-->Line_20 $$ assertEquals("Header value not found", Arrays.asList(headerValue1, headerValue2), response.getHeaders().get(headerName))[ FD ]
Line_10 $$ byte[] body = "Hello World".getBytes("UTF-8")-->Line_22 $$ assertTrue("Invalid body", Arrays.equals(body, result))[ FD ]
Line_13 $$ ClientHttpResponse response = request.execute()-->Line_26 $$ response.close()[ FD ]
Line_5 $$ String headerName = "MyHeader"-->Line_7 $$ request.getHeaders().add(headerName, headerValue1)[ FD ]
