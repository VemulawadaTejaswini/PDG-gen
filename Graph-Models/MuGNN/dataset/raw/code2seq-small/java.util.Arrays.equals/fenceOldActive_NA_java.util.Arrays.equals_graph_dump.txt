Line_2 $$ private Stat fenceOldActive() throws InterruptedException, KeeperException -->Line_25 $$ return stat[ CD ]
Line_20 $$ if (Arrays.equals(data, appData)) -->Line_21 $$ LOG.info("But old node has our own data, so don't need to fence it.")[ CD ]
Line_7 $$ data = zkDoWithRetries(new ZKAction<byte[]>() -->Line_19 $$ LOG.info("Old node exists: " + StringUtils.byteToHexString(data))[ FD ]
Line_2 $$ private Stat fenceOldActive() throws InterruptedException, KeeperException -->Line_4 $$ byte[] data[ CD ]
Line_2 $$ private Stat fenceOldActive() throws InterruptedException, KeeperException -->Line_5 $$ LOG.info("Checking for any old active which needs to be fenced...")[ CD ]
Line_2 $$ private Stat fenceOldActive() throws InterruptedException, KeeperException -->Line_3 $$ final Stat stat = new Stat()[ CD ]
Line_4 $$ byte[] data-->Line_7 $$ data = zkDoWithRetries(new ZKAction<byte[]>() [ FD ]
Line_7 $$ data = zkDoWithRetries(new ZKAction<byte[]>() -->Line_20 $$ if (Arrays.equals(data, appData)) [ FD ]
Line_2 $$ private Stat fenceOldActive() throws InterruptedException, KeeperException -->Line_20 $$ if (Arrays.equals(data, appData)) [ CD ]
Line_7 $$ data = zkDoWithRetries(new ZKAction<byte[]>() -->Line_9 $$ return zkClient.getData(zkBreadCrumbPath, false, stat)[ CD ]
Line_13 $$ if (isNodeDoesNotExist(ke.code())) -->Line_14 $$ LOG.info("No old node to fence")[ CD ]
Line_7 $$ data = zkDoWithRetries(new ZKAction<byte[]>() -->Line_23 $$ appClient.fenceOldActive(data)[ FD ]
Line_4 $$ byte[] data-->Line_23 $$ appClient.fenceOldActive(data)[ FD ]
Line_3 $$ final Stat stat = new Stat()-->Line_9 $$ return zkClient.getData(zkBreadCrumbPath, false, stat)[ FD ]
Line_20 $$ if (Arrays.equals(data, appData)) -->Line_23 $$ appClient.fenceOldActive(data)[ CD ]
Line_2 $$ private Stat fenceOldActive() throws InterruptedException, KeeperException -->Line_19 $$ LOG.info("Old node exists: " + StringUtils.byteToHexString(data))[ CD ]
Line_13 $$ if (isNodeDoesNotExist(ke.code())) -->Line_15 $$ return null[ CD ]
Line_4 $$ byte[] data-->Line_20 $$ if (Arrays.equals(data, appData)) [ FD ]
Line_4 $$ byte[] data-->Line_19 $$ LOG.info("Old node exists: " + StringUtils.byteToHexString(data))[ FD ]
