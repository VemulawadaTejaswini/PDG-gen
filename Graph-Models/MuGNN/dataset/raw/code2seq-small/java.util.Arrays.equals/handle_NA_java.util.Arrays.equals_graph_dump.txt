Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_21 $$ Arrays.sort(wrkflowAdj)[ CD ]
Line_11 $$ if (!workflowName.equals(jsEvent.getWorkflowName())) -->Line_12 $$ setAssertValue(false)[ CD ]
Line_15 $$ if (!workflowNodeName.equals(jsEvent.getWorkflowNodeName())) -->Line_17 $$ return[ CD ]
Line_19 $$ String[] wrkflowAdj = workflowAdjacencies.split(" ")-->Line_23 $$ if (!Arrays.equals(wrkflowAdj, jswrkflowAdj)) [ FD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_11 $$ if (!workflowName.equals(jsEvent.getWorkflowName())) [ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_27 $$ if (!workflowTags.equals(jsEvent.getWorkflowTags())) [ CD ]
Line_15 $$ if (!workflowNodeName.equals(jsEvent.getWorkflowNodeName())) -->Line_16 $$ setAssertValue(false)[ CD ]
Line_6 $$ JobSubmittedEvent jsEvent = (JobSubmittedEvent) jhEvent.getHistoryEvent()-->Line_11 $$ if (!workflowName.equals(jsEvent.getWorkflowName())) [ FD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_15 $$ if (!workflowNodeName.equals(jsEvent.getWorkflowNodeName())) [ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_23 $$ if (!Arrays.equals(wrkflowAdj, jswrkflowAdj)) [ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_20 $$ String[] jswrkflowAdj = jsEvent.getWorkflowAdjacencies().split(" ")[ CD ]
Line_19 $$ String[] wrkflowAdj = workflowAdjacencies.split(" ")-->Line_21 $$ Arrays.sort(wrkflowAdj)[ FD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_3 $$ if (jhEvent.getType() != EventType.JOB_SUBMITTED) [ CD ]
Line_7 $$ if (!workflowId.equals(jsEvent.getWorkflowId())) -->Line_8 $$ setAssertValue(false)[ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_31 $$ setAssertValue(true)[ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_6 $$ JobSubmittedEvent jsEvent = (JobSubmittedEvent) jhEvent.getHistoryEvent()[ CD ]
Line_27 $$ if (!workflowTags.equals(jsEvent.getWorkflowTags())) -->Line_29 $$ return[ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_7 $$ if (!workflowId.equals(jsEvent.getWorkflowId())) [ CD ]
Line_11 $$ if (!workflowName.equals(jsEvent.getWorkflowName())) -->Line_13 $$ return[ CD ]
Line_20 $$ String[] jswrkflowAdj = jsEvent.getWorkflowAdjacencies().split(" ")-->Line_22 $$ Arrays.sort(jswrkflowAdj)[ FD ]
Line_20 $$ String[] jswrkflowAdj = jsEvent.getWorkflowAdjacencies().split(" ")-->Line_23 $$ if (!Arrays.equals(wrkflowAdj, jswrkflowAdj)) [ FD ]
Line_6 $$ JobSubmittedEvent jsEvent = (JobSubmittedEvent) jhEvent.getHistoryEvent()-->Line_15 $$ if (!workflowNodeName.equals(jsEvent.getWorkflowNodeName())) [ FD ]
Line_3 $$ if (jhEvent.getType() != EventType.JOB_SUBMITTED) -->Line_4 $$ return[ CD ]
Line_6 $$ JobSubmittedEvent jsEvent = (JobSubmittedEvent) jhEvent.getHistoryEvent()-->Line_7 $$ if (!workflowId.equals(jsEvent.getWorkflowId())) [ FD ]
Line_7 $$ if (!workflowId.equals(jsEvent.getWorkflowId())) -->Line_9 $$ return[ CD ]
Line_23 $$ if (!Arrays.equals(wrkflowAdj, jswrkflowAdj)) -->Line_24 $$ setAssertValue(false)[ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_3 $$ if (jhEvent.getType() != EventType.JOB_SUBMITTED) [ FD ]
Line_6 $$ JobSubmittedEvent jsEvent = (JobSubmittedEvent) jhEvent.getHistoryEvent()-->Line_27 $$ if (!workflowTags.equals(jsEvent.getWorkflowTags())) [ FD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_19 $$ String[] wrkflowAdj = workflowAdjacencies.split(" ")[ CD ]
Line_6 $$ JobSubmittedEvent jsEvent = (JobSubmittedEvent) jhEvent.getHistoryEvent()-->Line_20 $$ String[] jswrkflowAdj = jsEvent.getWorkflowAdjacencies().split(" ")[ FD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_22 $$ Arrays.sort(jswrkflowAdj)[ CD ]
Line_27 $$ if (!workflowTags.equals(jsEvent.getWorkflowTags())) -->Line_28 $$ setAssertValue(false)[ CD ]
Line_23 $$ if (!Arrays.equals(wrkflowAdj, jswrkflowAdj)) -->Line_25 $$ return[ CD ]
Line_2 $$ public void handle(JobHistoryEvent jhEvent) -->Line_6 $$ JobSubmittedEvent jsEvent = (JobSubmittedEvent) jhEvent.getHistoryEvent()[ FD ]
