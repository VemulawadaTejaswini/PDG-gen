Line_9 $$ int result = reader.read(buffer)-->Line_10 $$ Assert.assertEquals(4, result)[ FD ]
Line_8 $$ Reader reader = charPipe.getReader()-->Line_9 $$ int result = reader.read(buffer)[ FD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_6 $$ writer.write(data)[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_16 $$ charPipe.close()[ FD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_10 $$ Assert.assertEquals(4, result)[ CD ]
Line_13 $$ result = reader.read(buffer)-->Line_14 $$ Assert.assertEquals(4, result)[ FD ]
Line_9 $$ int result = reader.read(buffer)-->Line_14 $$ Assert.assertEquals(4, result)[ FD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_15 $$ Assert.assertTrue(Arrays.equals(data, buffer))[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_8 $$ Reader reader = charPipe.getReader()[ FD ]
Line_7 $$ char[] buffer = new char[4]-->Line_9 $$ int result = reader.read(buffer)[ FD ]
Line_8 $$ Reader reader = charPipe.getReader()-->Line_13 $$ result = reader.read(buffer)[ FD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_12 $$ writer.append(new String(data))[ FD ]
Line_9 $$ int result = reader.read(buffer)-->Line_13 $$ result = reader.read(buffer)[ FD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_15 $$ Assert.assertTrue(Arrays.equals(data, buffer))[ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_6 $$ writer.write(data)[ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_5 $$ char[] data = "abcd".toCharArray()[ CD ]
Line_7 $$ char[] buffer = new char[4]-->Line_15 $$ Assert.assertTrue(Arrays.equals(data, buffer))[ FD ]
Line_4 $$ Writer writer = charPipe.getWriter()-->Line_6 $$ writer.write(data)[ FD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_14 $$ Assert.assertEquals(4, result)[ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_12 $$ writer.append(new String(data))[ CD ]
Line_7 $$ char[] buffer = new char[4]-->Line_13 $$ result = reader.read(buffer)[ FD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_11 $$ Assert.assertTrue(Arrays.equals(data, buffer))[ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_8 $$ Reader reader = charPipe.getReader()[ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_4 $$ Writer writer = charPipe.getWriter()[ CD ]
Line_5 $$ char[] data = "abcd".toCharArray()-->Line_11 $$ Assert.assertTrue(Arrays.equals(data, buffer))[ FD ]
Line_3 $$ CharPipe charPipe = new CharPipe(4)-->Line_4 $$ Writer writer = charPipe.getWriter()[ FD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_16 $$ charPipe.close()[ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_3 $$ CharPipe charPipe = new CharPipe(4)[ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_9 $$ int result = reader.read(buffer)[ CD ]
Line_7 $$ char[] buffer = new char[4]-->Line_11 $$ Assert.assertTrue(Arrays.equals(data, buffer))[ FD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_7 $$ char[] buffer = new char[4][ CD ]
Line_2 $$ public void testPipingCharArray() throws IOException -->Line_13 $$ result = reader.read(buffer)[ CD ]
