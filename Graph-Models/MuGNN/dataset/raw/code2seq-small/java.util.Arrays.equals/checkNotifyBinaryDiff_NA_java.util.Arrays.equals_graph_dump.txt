Line_2 $$ private static boolean checkNotifyBinaryDiff(final Change selectedChange) -->Line_3 $$ final ContentRevision beforeRevision = selectedChange.getBeforeRevision()[ FD ]
Line_9 $$ if (Arrays.equals(beforeContent, afterContent)) -->Line_12 $$ Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.are.different"), VcsBundle.message("message.title.diff"))[ CD ]
Line_9 $$ if (Arrays.equals(beforeContent, afterContent)) -->Line_10 $$ Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.are.identical"), VcsBundle.message("message.title.diff"))[ CD ]
Line_2 $$ private static boolean checkNotifyBinaryDiff(final Change selectedChange) -->Line_4 $$ final ContentRevision afterRevision = selectedChange.getAfterRevision()[ FD ]
Line_2 $$ private static boolean checkNotifyBinaryDiff(final Change selectedChange) -->Line_5 $$ if (beforeRevision instanceof BinaryContentRevision && afterRevision instanceof BinaryContentRevision) [ CD ]
Line_7 $$ byte[] beforeContent = ((BinaryContentRevision) beforeRevision).getBinaryContent()-->Line_9 $$ if (Arrays.equals(beforeContent, afterContent)) [ FD ]
Line_8 $$ byte[] afterContent = ((BinaryContentRevision) afterRevision).getBinaryContent()-->Line_9 $$ if (Arrays.equals(beforeContent, afterContent)) [ FD ]
Line_2 $$ private static boolean checkNotifyBinaryDiff(final Change selectedChange) -->Line_19 $$ return false[ CD ]
Line_5 $$ if (beforeRevision instanceof BinaryContentRevision && afterRevision instanceof BinaryContentRevision) -->Line_17 $$ return true[ CD ]
Line_2 $$ private static boolean checkNotifyBinaryDiff(final Change selectedChange) -->Line_4 $$ final ContentRevision afterRevision = selectedChange.getAfterRevision()[ CD ]
Line_2 $$ private static boolean checkNotifyBinaryDiff(final Change selectedChange) -->Line_3 $$ final ContentRevision beforeRevision = selectedChange.getBeforeRevision()[ CD ]
