Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_4 $$ if (bom != null && !CharsetToolkit.canHaveBom(charset, bom))[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_16 $$ byte[] bytesToSave[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_4 $$ if (bom != null && !CharsetToolkit.canHaveBom(charset, bom))[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_3 $$ byte[] bom = virtualFile.getBOM()[ FD ]
Line_7 $$ if (mandatoryBom != null && !ArrayUtil.startsWith(bytes, mandatoryBom))-->Line_8 $$ return Magic8.NO_WAY[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_6 $$ byte[] mandatoryBom = CharsetToolkit.getMandatoryBom(charset)[ FD ]
Line_18 $$ bytesToSave = toSave.getBytes(charset)-->Line_25 $$ return !Arrays.equals(bytesToSave, bytes) ? Magic8.NO_WAY : loaded.equals(text) ? Magic8.ABSOLUTELY : Magic8.WELL_IF_YOU_INSIST[ FD ]
Line_4 $$ if (bom != null && !CharsetToolkit.canHaveBom(charset, bom))-->Line_5 $$ return Magic8.NO_WAY[ CD ]
Line_9 $$ String loaded = LoadTextUtil.getTextByBinaryPresentation(bytes, charset).toString()-->Line_11 $$ String toSave = StringUtil.convertLineSeparators(loaded, separator)[ FD ]
Line_13 $$ if (failReason != null && CharsetToolkit.UTF8_CHARSET.equals(virtualFile.getCharset()) && !CharsetToolkit.UTF8_CHARSET.equals(charset)) -->Line_14 $$ return Magic8.NO_WAY[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_3 $$ byte[] bom = virtualFile.getBOM()[ CD ]
Line_10 $$ String separator = FileDocumentManager.getInstance().getLineSeparator(virtualFile, null)-->Line_11 $$ String toSave = StringUtil.convertLineSeparators(loaded, separator)[ FD ]
Line_16 $$ byte[] bytesToSave-->Line_22 $$ if (bom != null && !ArrayUtil.startsWith(bytesToSave, bom)) [ FD ]
Line_18 $$ bytesToSave = toSave.getBytes(charset)-->Line_23 $$ bytesToSave = ArrayUtil.mergeArrays(bom, bytesToSave)[ FD ]
Line_3 $$ byte[] bom = virtualFile.getBOM()-->Line_22 $$ if (bom != null && !ArrayUtil.startsWith(bytesToSave, bom)) [ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_6 $$ byte[] mandatoryBom = CharsetToolkit.getMandatoryBom(charset)[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_7 $$ if (mandatoryBom != null && !ArrayUtil.startsWith(bytes, mandatoryBom))[ CD ]
Line_22 $$ if (bom != null && !ArrayUtil.startsWith(bytesToSave, bom)) -->Line_23 $$ bytesToSave = ArrayUtil.mergeArrays(bom, bytesToSave)[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_9 $$ String loaded = LoadTextUtil.getTextByBinaryPresentation(bytes, charset).toString()[ FD ]
Line_18 $$ bytesToSave = toSave.getBytes(charset)-->Line_22 $$ if (bom != null && !ArrayUtil.startsWith(bytesToSave, bom)) [ FD ]
Line_3 $$ byte[] bom = virtualFile.getBOM()-->Line_4 $$ if (bom != null && !CharsetToolkit.canHaveBom(charset, bom))[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_18 $$ bytesToSave = toSave.getBytes(charset)[ FD ]
Line_16 $$ byte[] bytesToSave-->Line_25 $$ return !Arrays.equals(bytesToSave, bytes) ? Magic8.NO_WAY : loaded.equals(text) ? Magic8.ABSOLUTELY : Magic8.WELL_IF_YOU_INSIST[ FD ]
Line_3 $$ byte[] bom = virtualFile.getBOM()-->Line_23 $$ bytesToSave = ArrayUtil.mergeArrays(bom, bytesToSave)[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_25 $$ return !Arrays.equals(bytesToSave, bytes) ? Magic8.NO_WAY : loaded.equals(text) ? Magic8.ABSOLUTELY : Magic8.WELL_IF_YOU_INSIST[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_13 $$ if (failReason != null && CharsetToolkit.UTF8_CHARSET.equals(virtualFile.getCharset()) && !CharsetToolkit.UTF8_CHARSET.equals(charset)) [ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_12 $$ String failReason = LoadTextUtil.wasCharsetDetectedFromBytes(virtualFile)[ FD ]
Line_16 $$ byte[] bytesToSave-->Line_18 $$ bytesToSave = toSave.getBytes(charset)[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_7 $$ if (mandatoryBom != null && !ArrayUtil.startsWith(bytes, mandatoryBom))[ FD ]
Line_11 $$ String toSave = StringUtil.convertLineSeparators(loaded, separator)-->Line_18 $$ bytesToSave = toSave.getBytes(charset)[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_12 $$ String failReason = LoadTextUtil.wasCharsetDetectedFromBytes(virtualFile)[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_22 $$ if (bom != null && !ArrayUtil.startsWith(bytesToSave, bom)) [ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_25 $$ return !Arrays.equals(bytesToSave, bytes) ? Magic8.NO_WAY : loaded.equals(text) ? Magic8.ABSOLUTELY : Magic8.WELL_IF_YOU_INSIST[ CD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_13 $$ if (failReason != null && CharsetToolkit.UTF8_CHARSET.equals(virtualFile.getCharset()) && !CharsetToolkit.UTF8_CHARSET.equals(charset)) [ CD ]
Line_23 $$ bytesToSave = ArrayUtil.mergeArrays(bom, bytesToSave)-->Line_25 $$ return !Arrays.equals(bytesToSave, bytes) ? Magic8.NO_WAY : loaded.equals(text) ? Magic8.ABSOLUTELY : Magic8.WELL_IF_YOU_INSIST[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_10 $$ String separator = FileDocumentManager.getInstance().getLineSeparator(virtualFile, null)[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_11 $$ String toSave = StringUtil.convertLineSeparators(loaded, separator)[ CD ]
Line_16 $$ byte[] bytesToSave-->Line_23 $$ bytesToSave = ArrayUtil.mergeArrays(bom, bytesToSave)[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_9 $$ String loaded = LoadTextUtil.getTextByBinaryPresentation(bytes, charset).toString()[ CD ]
Line_9 $$ String loaded = LoadTextUtil.getTextByBinaryPresentation(bytes, charset).toString()-->Line_25 $$ return !Arrays.equals(bytesToSave, bytes) ? Magic8.NO_WAY : loaded.equals(text) ? Magic8.ABSOLUTELY : Magic8.WELL_IF_YOU_INSIST[ FD ]
Line_2 $$ static Magic8 isSafeToReloadIn(@NotNull VirtualFile virtualFile, @NotNull String text, @NotNull byte[] bytes, @NotNull Charset charset) -->Line_10 $$ String separator = FileDocumentManager.getInstance().getLineSeparator(virtualFile, null)[ CD ]
Line_6 $$ byte[] mandatoryBom = CharsetToolkit.getMandatoryBom(charset)-->Line_7 $$ if (mandatoryBom != null && !ArrayUtil.startsWith(bytes, mandatoryBom))[ FD ]
