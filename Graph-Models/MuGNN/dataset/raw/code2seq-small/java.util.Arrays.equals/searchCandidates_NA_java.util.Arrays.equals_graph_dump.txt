Line_2 $$ private static Method searchCandidates(List<Method> candidateMethods, Method bridgeMethod) -->Line_3 $$ if (candidateMethods.isEmpty()) [ CD ]
Line_2 $$ private static Method searchCandidates(List<Method> candidateMethods, Method bridgeMethod) -->Line_6 $$ Method previousMethod = null[ CD ]
Line_7 $$ boolean sameSig = true-->Line_12 $$ sameSig = sameSig && Arrays.equals(candidateMethod.getGenericParameterTypes(), previousMethod.getGenericParameterTypes())[ FD ]
Line_8 $$ for (Method candidateMethod : candidateMethods) -->Line_14 $$ previousMethod = candidateMethod[ FD ]
Line_2 $$ private static Method searchCandidates(List<Method> candidateMethods, Method bridgeMethod) -->Line_16 $$ return (sameSig ? candidateMethods.get(0) : null)[ FD ]
Line_9 $$ if (isBridgeMethodFor(bridgeMethod, candidateMethod, bridgeMethod.getDeclaringClass())) -->Line_11 $$ if (previousMethod != null) [ CD ]
Line_9 $$ if (isBridgeMethodFor(bridgeMethod, candidateMethod, bridgeMethod.getDeclaringClass())) -->Line_10 $$ return candidateMethod[ CD ]
Line_6 $$ Method previousMethod = null-->Line_11 $$ if (previousMethod != null) [ FD ]
Line_8 $$ for (Method candidateMethod : candidateMethods) -->Line_9 $$ if (isBridgeMethodFor(bridgeMethod, candidateMethod, bridgeMethod.getDeclaringClass())) [ FD ]
Line_6 $$ Method previousMethod = null-->Line_14 $$ previousMethod = candidateMethod[ FD ]
Line_2 $$ private static Method searchCandidates(List<Method> candidateMethods, Method bridgeMethod) -->Line_3 $$ if (candidateMethods.isEmpty()) [ FD ]
Line_6 $$ Method previousMethod = null-->Line_12 $$ sameSig = sameSig && Arrays.equals(candidateMethod.getGenericParameterTypes(), previousMethod.getGenericParameterTypes())[ FD ]
Line_2 $$ private static Method searchCandidates(List<Method> candidateMethods, Method bridgeMethod) -->Line_16 $$ return (sameSig ? candidateMethods.get(0) : null)[ CD ]
Line_2 $$ private static Method searchCandidates(List<Method> candidateMethods, Method bridgeMethod) -->Line_9 $$ if (isBridgeMethodFor(bridgeMethod, candidateMethod, bridgeMethod.getDeclaringClass())) [ FD ]
Line_8 $$ for (Method candidateMethod : candidateMethods) -->Line_12 $$ sameSig = sameSig && Arrays.equals(candidateMethod.getGenericParameterTypes(), previousMethod.getGenericParameterTypes())[ FD ]
Line_11 $$ if (previousMethod != null) -->Line_12 $$ sameSig = sameSig && Arrays.equals(candidateMethod.getGenericParameterTypes(), previousMethod.getGenericParameterTypes())[ CD ]
Line_3 $$ if (candidateMethods.isEmpty()) -->Line_4 $$ return null[ CD ]
Line_2 $$ private static Method searchCandidates(List<Method> candidateMethods, Method bridgeMethod) -->Line_7 $$ boolean sameSig = true[ CD ]
