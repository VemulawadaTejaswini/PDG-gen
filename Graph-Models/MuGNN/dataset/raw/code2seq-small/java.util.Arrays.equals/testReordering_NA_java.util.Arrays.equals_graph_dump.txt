Line_17 $$ byte[] data-->Line_40 $$ assertTrue(Arrays.equals(data, bytes))[ FD ]
Line_15 $$ File file = files[0]-->Line_16 $$ assertEquals("annotations.jar", file.getName())[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_11 $$ ReorderJarsMain.main(new String[] [ CD ]
Line_4 $$ JBZipFile zipFile1 = new JBZipFile(path + "/annotations.jar")-->Line_9 $$ zipFile1.close()[ FD ]
Line_15 $$ File file = files[0]-->Line_34 $$ JarMemoryLoader loader = JarMemoryLoader.load(zipFile3, file.toURI().toURL(), null)[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_17 $$ byte[] data[ CD ]
Line_36 $$ Resource resource = loader.getResource("org/jetbrains/annotations/Nullable.class")-->Line_37 $$ assertNotNull(resource)[ FD ]
Line_4 $$ JBZipFile zipFile1 = new JBZipFile(path + "/annotations.jar")-->Line_6 $$ List<JBZipEntry> entries = zipFile1.getEntries()[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_18 $$ JBZipFile zipFile2 = new JBZipFile(file)[ CD ]
Line_6 $$ List<JBZipEntry> entries = zipFile1.getEntries()-->Line_23 $$ JBZipEntry entry = entries.get(1)[ FD ]
Line_18 $$ JBZipFile zipFile2 = new JBZipFile(file)-->Line_30 $$ zipFile2.close()[ FD ]
Line_32 $$ ZipFile zipFile3 = new ZipFile(file)-->Line_42 $$ zipFile3.close()[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_13 $$ assertNotNull(files)[ CD ]
Line_12 $$ File[] files = myTempDirectory.listFiles()-->Line_13 $$ assertNotNull(files)[ FD ]
Line_36 $$ Resource resource = loader.getResource("org/jetbrains/annotations/Nullable.class")-->Line_38 $$ byte[] bytes = resource.getBytes()[ FD ]
Line_24 $$ data = entry.getData()-->Line_40 $$ assertTrue(Arrays.equals(data, bytes))[ FD ]
Line_6 $$ List<JBZipEntry> entries = zipFile1.getEntries()-->Line_27 $$ assertEquals("org/jetbrains/annotations/NotNull.class", entries.get(2).getName())[ FD ]
Line_6 $$ List<JBZipEntry> entries = zipFile1.getEntries()-->Line_28 $$ assertEquals("META-INF/", entries.get(3).getName())[ FD ]
Line_18 $$ JBZipFile zipFile2 = new JBZipFile(file)-->Line_20 $$ List<JBZipEntry> entries = zipFile2.getEntries()[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_16 $$ assertEquals("annotations.jar", file.getName())[ CD ]
Line_23 $$ JBZipEntry entry = entries.get(1)-->Line_24 $$ data = entry.getData()[ FD ]
Line_34 $$ JarMemoryLoader loader = JarMemoryLoader.load(zipFile3, file.toURI().toURL(), null)-->Line_35 $$ assertNotNull(loader)[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_3 $$ String path = getTestDataPath() + "/ide/plugins/reorderJars"[ CD ]
Line_2 $$ public void testReordering() throws IOException -->Line_15 $$ File file = files[0][ CD ]
Line_32 $$ ZipFile zipFile3 = new ZipFile(file)-->Line_34 $$ JarMemoryLoader loader = JarMemoryLoader.load(zipFile3, file.toURI().toURL(), null)[ FD ]
Line_38 $$ byte[] bytes = resource.getBytes()-->Line_40 $$ assertTrue(Arrays.equals(data, bytes))[ FD ]
Line_6 $$ List<JBZipEntry> entries = zipFile1.getEntries()-->Line_21 $$ System.out.println(entries)[ FD ]
Line_6 $$ List<JBZipEntry> entries = zipFile1.getEntries()-->Line_22 $$ assertEquals(JarMemoryLoader.SIZE_ENTRY, entries.get(0).getName())[ FD ]
Line_17 $$ byte[] data-->Line_24 $$ data = entry.getData()[ FD ]
Line_6 $$ List<JBZipEntry> entries = zipFile1.getEntries()-->Line_7 $$ System.out.println(entries)[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_12 $$ File[] files = myTempDirectory.listFiles()[ CD ]
Line_2 $$ public void testReordering() throws IOException -->Line_32 $$ ZipFile zipFile3 = new ZipFile(file)[ CD ]
Line_2 $$ public void testReordering() throws IOException -->Line_4 $$ JBZipFile zipFile1 = new JBZipFile(path + "/annotations.jar")[ CD ]
Line_23 $$ JBZipEntry entry = entries.get(1)-->Line_26 $$ assertEquals("org/jetbrains/annotations/Nullable.class", entry.getName())[ FD ]
Line_2 $$ public void testReordering() throws IOException -->Line_14 $$ assertEquals(1, files.length)[ CD ]
Line_34 $$ JarMemoryLoader loader = JarMemoryLoader.load(zipFile3, file.toURI().toURL(), null)-->Line_36 $$ Resource resource = loader.getResource("org/jetbrains/annotations/Nullable.class")[ FD ]
