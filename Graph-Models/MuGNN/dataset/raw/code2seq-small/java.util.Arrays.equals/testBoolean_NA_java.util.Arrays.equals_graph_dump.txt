Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_19 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_2 $$ public void testBoolean() -->Line_18 $$ boolean[] newBooleans = new boolean[_COUNT][ CD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ if (booleans[i]) [ CD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_11 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_12 $$ if (booleans[i]) -->Line_13 $$ Assert.assertEquals(1, bytes[i])[ CD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_9 $$ BigEndianCodec.putBoolean(bytes, i, booleans[i])[ CD ]
Line_12 $$ if (booleans[i]) -->Line_15 $$ Assert.assertEquals(0, bytes[i])[ CD ]
Line_2 $$ public void testBoolean() -->Line_22 $$ Assert.assertTrue(Arrays.equals(booleans, newBooleans))[ CD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_9 $$ BigEndianCodec.putBoolean(bytes, i, booleans[i])[ FD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_8 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_19 $$ for (int i = 0; i < _COUNT; i++) -->Line_20 $$ newBooleans[i] = BigEndianCodec.getBoolean(bytes, i)[ CD ]
Line_18 $$ boolean[] newBooleans = new boolean[_COUNT]-->Line_22 $$ Assert.assertTrue(Arrays.equals(booleans, newBooleans))[ FD ]
Line_2 $$ public void testBoolean() -->Line_7 $$ byte[] bytes = new byte[_COUNT][ CD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_19 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_7 $$ byte[] bytes = new byte[_COUNT]-->Line_9 $$ BigEndianCodec.putBoolean(bytes, i, booleans[i])[ FD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_11 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_20 $$ newBooleans[i] = BigEndianCodec.getBoolean(bytes, i)[ FD ]
Line_2 $$ public void testBoolean() -->Line_8 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_2 $$ public void testBoolean() -->Line_4 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ if (booleans[i]) [ FD ]
Line_3 $$ boolean[] booleans = new boolean[_COUNT]-->Line_22 $$ Assert.assertTrue(Arrays.equals(booleans, newBooleans))[ FD ]
Line_3 $$ boolean[] booleans = new boolean[_COUNT]-->Line_12 $$ if (booleans[i]) [ FD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_5 $$ booleans[i] = _random.nextBoolean()[ CD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_19 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_8 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ if (booleans[i]) [ FD ]
Line_2 $$ public void testBoolean() -->Line_3 $$ boolean[] booleans = new boolean[_COUNT][ CD ]
Line_7 $$ byte[] bytes = new byte[_COUNT]-->Line_20 $$ newBooleans[i] = BigEndianCodec.getBoolean(bytes, i)[ FD ]
Line_2 $$ public void testBoolean() -->Line_19 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_20 $$ newBooleans[i] = BigEndianCodec.getBoolean(bytes, i)[ FD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ if (booleans[i]) [ FD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_20 $$ newBooleans[i] = BigEndianCodec.getBoolean(bytes, i)[ FD ]
Line_2 $$ public void testBoolean() -->Line_11 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_9 $$ BigEndianCodec.putBoolean(bytes, i, booleans[i])[ FD ]
Line_19 $$ for (int i = 0; i < _COUNT; i++) -->Line_20 $$ newBooleans[i] = BigEndianCodec.getBoolean(bytes, i)[ FD ]
