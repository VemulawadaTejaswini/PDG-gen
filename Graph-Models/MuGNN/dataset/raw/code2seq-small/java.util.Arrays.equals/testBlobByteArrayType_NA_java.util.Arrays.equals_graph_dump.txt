Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_23 $$ verify(lobCreator).setBlobAsBytes(ps, 1, content)[ CD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_9 $$ assertTrue(type.equals(new byte[] [ CD ]
Line_16 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_17 $$ assertEquals(1, synchs.size())[ FD ]
Line_3 $$ byte[] content = "content".getBytes()-->Line_15 $$ type.nullSafeSet(ps, content, 1)[ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_6 $$ assertEquals(1, type.sqlTypes().length)[ CD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_12 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ FD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_11 $$ assertTrue(type.isMutable())[ FD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_9 $$ assertTrue(type.equals(new byte[] [ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_8 $$ assertEquals(byte[].class, type.returnedClass())[ CD ]
Line_3 $$ byte[] content = "content".getBytes()-->Line_23 $$ verify(lobCreator).setBlobAsBytes(ps, 1, content)[ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_12 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ CD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_8 $$ assertEquals(byte[].class, type.returnedClass())[ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_11 $$ assertTrue(type.isMutable())[ CD ]
Line_3 $$ byte[] content = "content".getBytes()-->Line_12 $$ assertEquals(content, type.nullSafeGet(rs, new String[] [ FD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_7 $$ assertEquals(Types.BLOB, type.sqlTypes()[0])[ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)[ CD ]
Line_16 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_18 $$ ((TransactionSynchronization) synchs.get(0)).beforeCompletion()[ FD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_6 $$ assertEquals(1, type.sqlTypes().length)[ FD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_15 $$ type.nullSafeSet(ps, content, 1)[ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_13 $$ TransactionSynchronizationManager.initSynchronization()[ CD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_10 $$ assertTrue(Arrays.equals(new byte[] [ CD ]
Line_3 $$ byte[] content = "content".getBytes()-->Line_4 $$ given(lobHandler.getBlobAsBytes(rs, "column")).willReturn(content)[ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_7 $$ assertEquals(Types.BLOB, type.sqlTypes()[0])[ CD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_3 $$ byte[] content = "content".getBytes()[ CD ]
Line_16 $$ List synchs = TransactionSynchronizationManager.getSynchronizations()-->Line_19 $$ ((TransactionSynchronization) synchs.get(0)).afterCompletion(TransactionSynchronization.STATUS_COMMITTED)[ FD ]
Line_5 $$ BlobByteArrayType type = new BlobByteArrayType(lobHandler, null)-->Line_10 $$ assertTrue(Arrays.equals(new byte[] [ FD ]
Line_2 $$ public void testBlobByteArrayType() throws Exception -->Line_4 $$ given(lobHandler.getBlobAsBytes(rs, "column")).willReturn(content)[ CD ]
