Line_4 $$ int[] indecies = enumerator.enumerate(new Object[] -->Line_5 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_2 $$ public void test() -->Line_7 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_4 $$ int[] indecies = enumerator.enumerate(new Object[] -->Line_7 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_2 $$ public void test() -->Line_6 $$ indecies = enumerator.enumerate(new Object[] [ CD ]
Line_2 $$ public void test() -->Line_5 $$ assertTrue(Arrays.equals(new int[] [ CD ]
Line_3 $$ Enumerator enumerator = new Enumerator(10, ContainerUtil.canonicalStrategy())-->Line_4 $$ int[] indecies = enumerator.enumerate(new Object[] [ FD ]
Line_6 $$ indecies = enumerator.enumerate(new Object[] -->Line_7 $$ assertTrue(Arrays.equals(new int[] [ FD ]
Line_3 $$ Enumerator enumerator = new Enumerator(10, ContainerUtil.canonicalStrategy())-->Line_6 $$ indecies = enumerator.enumerate(new Object[] [ FD ]
Line_4 $$ int[] indecies = enumerator.enumerate(new Object[] -->Line_6 $$ indecies = enumerator.enumerate(new Object[] [ FD ]
Line_2 $$ public void test() -->Line_4 $$ int[] indecies = enumerator.enumerate(new Object[] [ CD ]
Line_2 $$ public void test() -->Line_3 $$ Enumerator enumerator = new Enumerator(10, ContainerUtil.canonicalStrategy())[ CD ]
