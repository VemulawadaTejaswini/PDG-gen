Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_13 $$ BigEndianCodec.putFloat(bytes, i * 4, floats[i])[ CD ]
Line_2 $$ public void testFloat() -->Line_7 $$ byte[] bytes = new byte[_COUNT * 4][ CD ]
Line_7 $$ byte[] bytes = new byte[_COUNT * 4]-->Line_18 $$ newFloats[i] = BigEndianCodec.getFloat(bytes, i * 4)[ FD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_11 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_2 $$ public void testFloat() -->Line_16 $$ float[] newFloats = new float[_COUNT][ CD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_12 $$ floatBuffer.put(floats[i])[ CD ]
Line_2 $$ public void testFloat() -->Line_11 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_2 $$ public void testFloat() -->Line_4 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_7 $$ byte[] bytes = new byte[_COUNT * 4]-->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_11 $$ for (int i = 0; i < _COUNT; i++) -->Line_17 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)-->Line_9 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ FD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)-->Line_10 $$ FloatBuffer floatBuffer = byteBuffer.asFloatBuffer()[ FD ]
Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)-->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ FD ]
Line_2 $$ public void testFloat() -->Line_20 $$ Assert.assertTrue(Arrays.equals(floats, newFloats))[ CD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_17 $$ for (int i = 0; i < _COUNT; i++) [ FD ]
Line_3 $$ float[] floats = new float[_COUNT]-->Line_20 $$ Assert.assertTrue(Arrays.equals(floats, newFloats))[ FD ]
Line_2 $$ public void testFloat() -->Line_9 $$ byteBuffer.order(ByteOrder.BIG_ENDIAN)[ CD ]
Line_17 $$ for (int i = 0; i < _COUNT; i++) -->Line_18 $$ newFloats[i] = BigEndianCodec.getFloat(bytes, i * 4)[ CD ]
Line_2 $$ public void testFloat() -->Line_8 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(bytes.length)[ CD ]
Line_4 $$ for (int i = 0; i < _COUNT; i++) -->Line_5 $$ floats[i] = _random.nextFloat()[ CD ]
Line_2 $$ public void testFloat() -->Line_10 $$ FloatBuffer floatBuffer = byteBuffer.asFloatBuffer()[ CD ]
Line_7 $$ byte[] bytes = new byte[_COUNT * 4]-->Line_13 $$ BigEndianCodec.putFloat(bytes, i * 4, floats[i])[ FD ]
Line_16 $$ float[] newFloats = new float[_COUNT]-->Line_20 $$ Assert.assertTrue(Arrays.equals(floats, newFloats))[ FD ]
Line_2 $$ public void testFloat() -->Line_17 $$ for (int i = 0; i < _COUNT; i++) [ CD ]
Line_2 $$ public void testFloat() -->Line_3 $$ float[] floats = new float[_COUNT][ CD ]
Line_2 $$ public void testFloat() -->Line_15 $$ Assert.assertArrayEquals(byteBuffer.array(), bytes)[ CD ]
Line_10 $$ FloatBuffer floatBuffer = byteBuffer.asFloatBuffer()-->Line_12 $$ floatBuffer.put(floats[i])[ FD ]
