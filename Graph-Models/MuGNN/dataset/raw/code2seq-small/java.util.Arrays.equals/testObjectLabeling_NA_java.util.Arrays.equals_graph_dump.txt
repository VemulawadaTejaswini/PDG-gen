Line_2 $$ public void testObjectLabeling() throws IOException -->Line_20 $$ assertTrue("The int[] written by ObjectWritable as " + "ArrayPrimitiveWritable was corrupted", Arrays.equals(i, (int[]) (apw2.get())))[ CD ]
Line_7 $$ String className = UTF8.readString(in)-->Line_15 $$ className = UTF8.readString(in)[ FD ]
Line_7 $$ String className = UTF8.readString(in)-->Line_16 $$ assertEquals("The APW written by ObjectWritable was not labelled as " + "class ArrayPrimitiveWritable", ArrayPrimitiveWritable.class.getName(), className)[ FD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_7 $$ String className = UTF8.readString(in)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_12 $$ assertTrue("The int[] written by ObjectWritable as " + "ArrayPrimitiveWritable.Internal was corrupted", Arrays.equals(i, (int[]) (apwi.get())))[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_4 $$ ArrayPrimitiveWritable apw = new ArrayPrimitiveWritable(i)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_17 $$ ArrayPrimitiveWritable apw2 = new ArrayPrimitiveWritable()[ CD ]
Line_15 $$ className = UTF8.readString(in)-->Line_16 $$ assertEquals("The APW written by ObjectWritable was not labelled as " + "class ArrayPrimitiveWritable", ArrayPrimitiveWritable.class.getName(), className)[ FD ]
Line_4 $$ ArrayPrimitiveWritable apw = new ArrayPrimitiveWritable(i)-->Line_5 $$ ObjectWritable.writeObject(out, apw, apw.getClass(), null, true)[ FD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_16 $$ assertEquals("The APW written by ObjectWritable was not labelled as " + "class ArrayPrimitiveWritable", ArrayPrimitiveWritable.class.getName(), className)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_15 $$ className = UTF8.readString(in)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_18 $$ apw2.readFields(in)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_3 $$ ObjectWritable.writeObject(out, i, i.getClass(), null, true)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_5 $$ ObjectWritable.writeObject(out, apw, apw.getClass(), null, true)[ CD ]
Line_13 $$ String declaredClassName = UTF8.readString(in)-->Line_14 $$ assertEquals("The APW written by ObjectWritable was not labelled as " + "declaredClass ArrayPrimitiveWritable", ArrayPrimitiveWritable.class.getName(), declaredClassName)[ FD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_14 $$ assertEquals("The APW written by ObjectWritable was not labelled as " + "declaredClass ArrayPrimitiveWritable", ArrayPrimitiveWritable.class.getName(), declaredClassName)[ CD ]
Line_17 $$ ArrayPrimitiveWritable apw2 = new ArrayPrimitiveWritable()-->Line_19 $$ assertEquals("The ArrayPrimitiveWritable component type was corrupted", int.class, apw2.getComponentType())[ FD ]
Line_9 $$ ArrayPrimitiveWritable.Internal apwi = new ArrayPrimitiveWritable.Internal()-->Line_12 $$ assertTrue("The int[] written by ObjectWritable as " + "ArrayPrimitiveWritable.Internal was corrupted", Arrays.equals(i, (int[]) (apwi.get())))[ FD ]
Line_17 $$ ArrayPrimitiveWritable apw2 = new ArrayPrimitiveWritable()-->Line_20 $$ assertTrue("The int[] written by ObjectWritable as " + "ArrayPrimitiveWritable was corrupted", Arrays.equals(i, (int[]) (apw2.get())))[ FD ]
Line_7 $$ String className = UTF8.readString(in)-->Line_8 $$ assertEquals("The int[] written by ObjectWritable was not labelled as " + "an ArrayPrimitiveWritable.Internal", ArrayPrimitiveWritable.Internal.class.getName(), className)[ FD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_13 $$ String declaredClassName = UTF8.readString(in)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_6 $$ in.reset(out.getData(), out.getLength())[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_10 $$ apwi.readFields(in)[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_11 $$ assertEquals("The ArrayPrimitiveWritable.Internal component type was corrupted", int.class, apw.getComponentType())[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_8 $$ assertEquals("The int[] written by ObjectWritable was not labelled as " + "an ArrayPrimitiveWritable.Internal", ArrayPrimitiveWritable.Internal.class.getName(), className)[ CD ]
Line_4 $$ ArrayPrimitiveWritable apw = new ArrayPrimitiveWritable(i)-->Line_11 $$ assertEquals("The ArrayPrimitiveWritable.Internal component type was corrupted", int.class, apw.getComponentType())[ FD ]
Line_17 $$ ArrayPrimitiveWritable apw2 = new ArrayPrimitiveWritable()-->Line_18 $$ apw2.readFields(in)[ FD ]
Line_9 $$ ArrayPrimitiveWritable.Internal apwi = new ArrayPrimitiveWritable.Internal()-->Line_10 $$ apwi.readFields(in)[ FD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_9 $$ ArrayPrimitiveWritable.Internal apwi = new ArrayPrimitiveWritable.Internal()[ CD ]
Line_2 $$ public void testObjectLabeling() throws IOException -->Line_19 $$ assertEquals("The ArrayPrimitiveWritable component type was corrupted", int.class, apw2.getComponentType())[ CD ]
