Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_5 $$ while (len < headerBytes.length) [ CD ]
Line_16 $$ final Inflater inflater = new Inflater(nowrap)-->Line_26 $$ inflater.end()[ FD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_18 $$ decompressedIn = new BufferedInputStream(decompressedIn, BUFFER_SIZE)[ CD ]
Line_25 $$ if (closed == false) -->Line_26 $$ inflater.end()[ CD ]
Line_5 $$ while (len < headerBytes.length) -->Line_6 $$ final int read = in.read(headerBytes, len, headerBytes.length - len)[ CD ]
Line_6 $$ final int read = in.read(headerBytes, len, headerBytes.length - len)-->Line_10 $$ len += read[ FD ]
Line_5 $$ while (len < headerBytes.length) -->Line_7 $$ if (read == -1) [ CD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_17 $$ InputStream decompressedIn = new InflaterInputStream(in, inflater, BUFFER_SIZE)[ CD ]
Line_10 $$ len += read-->Line_5 $$ while (len < headerBytes.length) [ FD ]
Line_17 $$ InputStream decompressedIn = new InflaterInputStream(in, inflater, BUFFER_SIZE)-->Line_18 $$ decompressedIn = new BufferedInputStream(decompressedIn, BUFFER_SIZE)[ FD ]
Line_4 $$ int len = 0-->Line_6 $$ final int read = in.read(headerBytes, len, headerBytes.length - len)[ FD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_3 $$ final byte[] headerBytes = new byte[HEADER.length][ CD ]
Line_25 $$ if (closed == false) -->Line_27 $$ closed = true[ CD ]
Line_4 $$ int len = 0-->Line_5 $$ while (len < headerBytes.length) [ FD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_12 $$ if (len != HEADER.length || Arrays.equals(headerBytes, HEADER) == false) [ CD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_6 $$ final int read = in.read(headerBytes, len, headerBytes.length - len)[ FD ]
Line_10 $$ len += read-->Line_6 $$ final int read = in.read(headerBytes, len, headerBytes.length - len)[ FD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_19 $$ return new InputStreamStreamInput(decompressedIn) [ CD ]
Line_3 $$ final byte[] headerBytes = new byte[HEADER.length]-->Line_12 $$ if (len != HEADER.length || Arrays.equals(headerBytes, HEADER) == false) [ FD ]
Line_5 $$ while (len < headerBytes.length) -->Line_10 $$ len += read[ CD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_15 $$ final boolean nowrap = true[ CD ]
Line_3 $$ final byte[] headerBytes = new byte[HEADER.length]-->Line_6 $$ final int read = in.read(headerBytes, len, headerBytes.length - len)[ FD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_4 $$ int len = 0[ CD ]
Line_2 $$ public StreamInput streamInput(StreamInput in) throws IOException -->Line_16 $$ final Inflater inflater = new Inflater(nowrap)[ CD ]
Line_6 $$ final int read = in.read(headerBytes, len, headerBytes.length - len)-->Line_7 $$ if (read == -1) [ FD ]
Line_4 $$ int len = 0-->Line_10 $$ len += read[ FD ]
