Line_8 $$ for (int i = 0; i < 3; i++) -->Line_9 $$ assertEquals(i, myReindexer.restoreIndex(i, 0))[ CD ]
Line_2 $$ public void testNoUnique() -->Line_6 $$ assertTrue(Arrays.equals(ints1, reindexed[0]))[ CD ]
Line_3 $$ int[] ints1 = new int[] -->Line_6 $$ assertTrue(Arrays.equals(ints1, reindexed[0]))[ FD ]
Line_8 $$ for (int i = 0; i < 3; i++) -->Line_9 $$ assertEquals(i, myReindexer.restoreIndex(i, 0))[ FD ]
Line_8 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ assertEquals(i, myReindexer.restoreIndex(i, 1))[ FD ]
Line_2 $$ public void testNoUnique() -->Line_4 $$ int[] ints2 = new int[] [ CD ]
Line_3 $$ int[] ints1 = new int[] -->Line_5 $$ int[][] reindexed = myReindexer.discardUnique(ints1, ints2)[ FD ]
Line_2 $$ public void testNoUnique() -->Line_12 $$ assertEquals(3, myReindexer.restoreIndex(3, 1))[ CD ]
Line_4 $$ int[] ints2 = new int[] -->Line_5 $$ int[][] reindexed = myReindexer.discardUnique(ints1, ints2)[ FD ]
Line_2 $$ public void testNoUnique() -->Line_5 $$ int[][] reindexed = myReindexer.discardUnique(ints1, ints2)[ CD ]
Line_2 $$ public void testNoUnique() -->Line_13 $$ assertEquals(4, myReindexer.restoreIndex(4, 1))[ CD ]
Line_2 $$ public void testNoUnique() -->Line_3 $$ int[] ints1 = new int[] [ CD ]
Line_2 $$ public void testNoUnique() -->Line_7 $$ assertTrue(Arrays.equals(ints2, reindexed[1]))[ CD ]
Line_4 $$ int[] ints2 = new int[] -->Line_7 $$ assertTrue(Arrays.equals(ints2, reindexed[1]))[ FD ]
Line_8 $$ for (int i = 0; i < 3; i++) -->Line_10 $$ assertEquals(i, myReindexer.restoreIndex(i, 1))[ CD ]
Line_2 $$ public void testNoUnique() -->Line_8 $$ for (int i = 0; i < 3; i++) [ CD ]
