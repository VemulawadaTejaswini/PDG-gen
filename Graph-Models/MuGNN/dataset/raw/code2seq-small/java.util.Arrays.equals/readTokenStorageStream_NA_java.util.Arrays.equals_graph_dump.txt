Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_5 $$ if (!Arrays.equals(magic, TOKEN_STORAGE_MAGIC)) [ CD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_12 $$ readFields(in)[ FD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_8 $$ byte version = in.readByte()[ CD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_4 $$ in.readFully(magic)[ CD ]
Line_3 $$ byte[] magic = new byte[TOKEN_STORAGE_MAGIC.length]-->Line_4 $$ in.readFully(magic)[ FD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_8 $$ byte version = in.readByte()[ FD ]
Line_8 $$ byte version = in.readByte()-->Line_9 $$ if (version != TOKEN_STORAGE_VERSION) [ FD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_4 $$ in.readFully(magic)[ FD ]
Line_3 $$ byte[] magic = new byte[TOKEN_STORAGE_MAGIC.length]-->Line_5 $$ if (!Arrays.equals(magic, TOKEN_STORAGE_MAGIC)) [ FD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_3 $$ byte[] magic = new byte[TOKEN_STORAGE_MAGIC.length][ CD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_9 $$ if (version != TOKEN_STORAGE_VERSION) [ CD ]
Line_2 $$ public void readTokenStorageStream(DataInputStream in) throws IOException -->Line_12 $$ readFields(in)[ CD ]
