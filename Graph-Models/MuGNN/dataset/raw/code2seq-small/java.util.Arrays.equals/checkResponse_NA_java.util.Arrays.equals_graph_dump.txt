Line_6 $$ if (header.hasClientId()) -->Line_8 $$ if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) [ CD ]
Line_2 $$ void checkResponse(RpcResponseHeaderProto header) throws IOException -->Line_3 $$ if (header == null) [ CD ]
Line_2 $$ void checkResponse(RpcResponseHeaderProto header) throws IOException -->Line_6 $$ if (header.hasClientId()) [ CD ]
Line_2 $$ void checkResponse(RpcResponseHeaderProto header) throws IOException -->Line_6 $$ if (header.hasClientId()) [ FD ]
Line_7 $$ final byte[] id = header.getClientId().toByteArray()-->Line_9 $$ if (!Arrays.equals(id, clientId)) [ FD ]
Line_2 $$ void checkResponse(RpcResponseHeaderProto header) throws IOException -->Line_7 $$ final byte[] id = header.getClientId().toByteArray()[ FD ]
Line_2 $$ void checkResponse(RpcResponseHeaderProto header) throws IOException -->Line_3 $$ if (header == null) [ FD ]
Line_8 $$ if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) -->Line_9 $$ if (!Arrays.equals(id, clientId)) [ CD ]
Line_2 $$ void checkResponse(RpcResponseHeaderProto header) throws IOException -->Line_10 $$ throw new IOException("Client IDs not matched: local ID=" + StringUtils.byteToHexString(clientId) + ", ID in response=" + StringUtils.byteToHexString(header.getClientId().toByteArray()))[ FD ]
Line_7 $$ final byte[] id = header.getClientId().toByteArray()-->Line_8 $$ if (!Arrays.equals(id, RpcConstants.DUMMY_CLIENT_ID)) [ FD ]
Line_6 $$ if (header.hasClientId()) -->Line_7 $$ final byte[] id = header.getClientId().toByteArray()[ CD ]
