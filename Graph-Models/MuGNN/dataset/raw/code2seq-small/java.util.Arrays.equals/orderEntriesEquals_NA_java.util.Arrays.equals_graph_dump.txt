Line_26 $$ if (!(((ExportableOrderEntry) orderEntry1).getScope() == ((ExportableOrderEntry) orderEntry2).getScope())) -->Line_27 $$ return false[ CD ]
Line_32 $$ ModuleOrderEntryImpl entry1 = (ModuleOrderEntryImpl) orderEntry1-->Line_34 $$ return entry1.isProductionOnTestDependency() == entry2.isProductionOnTestDependency() && Comparing.equal(entry1.getModuleName(), entry2.getModuleName())[ FD ]
Line_5 $$ if (orderEntry1 instanceof JdkOrderEntry) -->Line_11 $$ if (orderEntry2 instanceof InheritedJdkOrderEntry && orderEntry1 instanceof ModuleJdkOrderEntry) [ CD ]
Line_14 $$ if (orderEntry1 instanceof ModuleJdkOrderEntry && orderEntry2 instanceof ModuleJdkOrderEntry) -->Line_16 $$ String name2 = ((ModuleJdkOrderEntry) orderEntry2).getJdkName()[ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_5 $$ if (orderEntry1 instanceof JdkOrderEntry) [ FD ]
Line_30 $$ if (orderEntry1 instanceof ModuleOrderEntry) -->Line_34 $$ return entry1.isProductionOnTestDependency() == entry2.isProductionOnTestDependency() && Comparing.equal(entry1.getModuleName(), entry2.getModuleName())[ CD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_37 $$ LOG.assertTrue(orderEntry2 instanceof LibraryOrderEntry)[ CD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_45 $$ if (library1 != null && library2 != null) [ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_51 $$ final OrderRootType[] allTypes = OrderRootType.getAllTypes()[ CD ]
Line_5 $$ if (orderEntry1 instanceof JdkOrderEntry) -->Line_6 $$ if (!(orderEntry2 instanceof JdkOrderEntry))[ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_54 $$ final String[] orderedRootUrls2 = orderEntry2.getUrls(type)[ FD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_30 $$ if (orderEntry1 instanceof ModuleOrderEntry) [ FD ]
Line_14 $$ if (orderEntry1 instanceof ModuleJdkOrderEntry && orderEntry2 instanceof ModuleJdkOrderEntry) -->Line_15 $$ String name1 = ((ModuleJdkOrderEntry) orderEntry1).getJdkName()[ CD ]
Line_14 $$ if (orderEntry1 instanceof ModuleJdkOrderEntry && orderEntry2 instanceof ModuleJdkOrderEntry) -->Line_17 $$ if (!Comparing.strEqual(name1, name2)) [ CD ]
Line_52 $$ for (OrderRootType type : allTypes) -->Line_54 $$ final String[] orderedRootUrls2 = orderEntry2.getUrls(type)[ FD ]
Line_22 $$ if (orderEntry1 instanceof ExportableOrderEntry) -->Line_23 $$ if (!(((ExportableOrderEntry) orderEntry1).isExported() == ((ExportableOrderEntry) orderEntry2).isExported())) [ CD ]
Line_30 $$ if (orderEntry1 instanceof ModuleOrderEntry) -->Line_33 $$ ModuleOrderEntryImpl entry2 = (ModuleOrderEntryImpl) orderEntry2[ CD ]
Line_38 $$ LibraryOrderEntry libraryOrderEntry1 = (LibraryOrderEntry) orderEntry1-->Line_43 $$ Library library1 = libraryOrderEntry1.getLibrary()[ FD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_22 $$ if (orderEntry1 instanceof ExportableOrderEntry) [ CD ]
Line_16 $$ String name2 = ((ModuleJdkOrderEntry) orderEntry2).getJdkName()-->Line_17 $$ if (!Comparing.strEqual(name1, name2)) [ FD ]
Line_22 $$ if (orderEntry1 instanceof ExportableOrderEntry) -->Line_26 $$ if (!(((ExportableOrderEntry) orderEntry1).getScope() == ((ExportableOrderEntry) orderEntry2).getScope())) [ CD ]
Line_55 $$ if (!Arrays.equals(orderedRootUrls1, orderedRootUrls2)) -->Line_56 $$ return false[ CD ]
Line_11 $$ if (orderEntry2 instanceof InheritedJdkOrderEntry && orderEntry1 instanceof ModuleJdkOrderEntry) -->Line_12 $$ return false[ CD ]
Line_40 $$ boolean equal = Comparing.equal(libraryOrderEntry1.getLibraryName(), libraryOrderEntry2.getLibraryName()) && Comparing.equal(libraryOrderEntry1.getLibraryLevel(), libraryOrderEntry2.getLibraryLevel())-->Line_41 $$ if (!equal)[ FD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_38 $$ LibraryOrderEntry libraryOrderEntry1 = (LibraryOrderEntry) orderEntry1[ CD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_41 $$ if (!equal)[ CD ]
Line_38 $$ LibraryOrderEntry libraryOrderEntry1 = (LibraryOrderEntry) orderEntry1-->Line_40 $$ boolean equal = Comparing.equal(libraryOrderEntry1.getLibraryName(), libraryOrderEntry2.getLibraryName()) && Comparing.equal(libraryOrderEntry1.getLibraryLevel(), libraryOrderEntry2.getLibraryLevel())[ FD ]
Line_41 $$ if (!equal)-->Line_42 $$ return false[ CD ]
Line_39 $$ LibraryOrderEntry libraryOrderEntry2 = (LibraryOrderEntry) orderEntry2-->Line_44 $$ Library library2 = libraryOrderEntry2.getLibrary()[ FD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_5 $$ if (orderEntry1 instanceof JdkOrderEntry) [ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_3 $$ if (!((OrderEntryBaseImpl) orderEntry1).sameType(orderEntry2))[ CD ]
Line_15 $$ String name1 = ((ModuleJdkOrderEntry) orderEntry1).getJdkName()-->Line_17 $$ if (!Comparing.strEqual(name1, name2)) [ FD ]
Line_46 $$ if (!Arrays.equals(((LibraryEx) library1).getExcludedRootUrls(), ((LibraryEx) library2).getExcludedRootUrls())) -->Line_47 $$ return false[ CD ]
Line_52 $$ for (OrderRootType type : allTypes) -->Line_53 $$ final String[] orderedRootUrls1 = orderEntry1.getUrls(type)[ FD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_59 $$ return true[ CD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_43 $$ Library library1 = libraryOrderEntry1.getLibrary()[ CD ]
Line_17 $$ if (!Comparing.strEqual(name1, name2)) -->Line_18 $$ return false[ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) [ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) [ FD ]
Line_5 $$ if (orderEntry1 instanceof JdkOrderEntry) -->Line_14 $$ if (orderEntry1 instanceof ModuleJdkOrderEntry && orderEntry2 instanceof ModuleJdkOrderEntry) [ CD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_39 $$ LibraryOrderEntry libraryOrderEntry2 = (LibraryOrderEntry) orderEntry2[ CD ]
Line_39 $$ LibraryOrderEntry libraryOrderEntry2 = (LibraryOrderEntry) orderEntry2-->Line_40 $$ boolean equal = Comparing.equal(libraryOrderEntry1.getLibraryName(), libraryOrderEntry2.getLibraryName()) && Comparing.equal(libraryOrderEntry1.getLibraryLevel(), libraryOrderEntry2.getLibraryLevel())[ FD ]
Line_5 $$ if (orderEntry1 instanceof JdkOrderEntry) -->Line_8 $$ if (orderEntry1 instanceof InheritedJdkOrderEntry && orderEntry2 instanceof ModuleJdkOrderEntry) [ CD ]
Line_3 $$ if (!((OrderEntryBaseImpl) orderEntry1).sameType(orderEntry2))-->Line_4 $$ return false[ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_53 $$ final String[] orderedRootUrls1 = orderEntry1.getUrls(type)[ FD ]
Line_53 $$ final String[] orderedRootUrls1 = orderEntry1.getUrls(type)-->Line_55 $$ if (!Arrays.equals(orderedRootUrls1, orderedRootUrls2)) [ FD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_3 $$ if (!((OrderEntryBaseImpl) orderEntry1).sameType(orderEntry2))[ FD ]
Line_54 $$ final String[] orderedRootUrls2 = orderEntry2.getUrls(type)-->Line_55 $$ if (!Arrays.equals(orderedRootUrls1, orderedRootUrls2)) [ FD ]
Line_30 $$ if (orderEntry1 instanceof ModuleOrderEntry) -->Line_31 $$ LOG.assertTrue(orderEntry2 instanceof ModuleOrderEntry)[ CD ]
Line_30 $$ if (orderEntry1 instanceof ModuleOrderEntry) -->Line_32 $$ ModuleOrderEntryImpl entry1 = (ModuleOrderEntryImpl) orderEntry1[ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_22 $$ if (orderEntry1 instanceof ExportableOrderEntry) [ FD ]
Line_45 $$ if (library1 != null && library2 != null) -->Line_46 $$ if (!Arrays.equals(((LibraryEx) library1).getExcludedRootUrls(), ((LibraryEx) library2).getExcludedRootUrls())) [ CD ]
Line_23 $$ if (!(((ExportableOrderEntry) orderEntry1).isExported() == ((ExportableOrderEntry) orderEntry2).isExported())) -->Line_24 $$ return false[ CD ]
Line_2 $$ private static boolean orderEntriesEquals(@NotNull OrderEntry orderEntry1, @NotNull OrderEntry orderEntry2) -->Line_30 $$ if (orderEntry1 instanceof ModuleOrderEntry) [ CD ]
Line_6 $$ if (!(orderEntry2 instanceof JdkOrderEntry))-->Line_7 $$ return false[ CD ]
Line_33 $$ ModuleOrderEntryImpl entry2 = (ModuleOrderEntryImpl) orderEntry2-->Line_34 $$ return entry1.isProductionOnTestDependency() == entry2.isProductionOnTestDependency() && Comparing.equal(entry1.getModuleName(), entry2.getModuleName())[ FD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_40 $$ boolean equal = Comparing.equal(libraryOrderEntry1.getLibraryName(), libraryOrderEntry2.getLibraryName()) && Comparing.equal(libraryOrderEntry1.getLibraryLevel(), libraryOrderEntry2.getLibraryLevel())[ CD ]
Line_8 $$ if (orderEntry1 instanceof InheritedJdkOrderEntry && orderEntry2 instanceof ModuleJdkOrderEntry) -->Line_9 $$ return false[ CD ]
Line_36 $$ if (orderEntry1 instanceof LibraryOrderEntry) -->Line_44 $$ Library library2 = libraryOrderEntry2.getLibrary()[ CD ]
