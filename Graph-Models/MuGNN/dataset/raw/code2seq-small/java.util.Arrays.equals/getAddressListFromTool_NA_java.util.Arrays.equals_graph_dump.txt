Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_7 $$ String s = tokenizer.nextToken().trim()[ CD ]
Line_12 $$ String[] expectedHosts = new String[expected.size()]-->Line_21 $$ assertTrue(Arrays.equals(expectedHosts, actual))[ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_6 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_10 $$ String[] actual = values.toArray(new String[values.size()])-->Line_21 $$ assertTrue(Arrays.equals(expectedHosts, actual))[ FD ]
Line_14 $$ InetSocketAddress addr = cnn.getAddress()-->Line_16 $$ expectedHosts[i++] = addr.getHostName()[ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_11 $$ int i = 0[ CD ]
Line_11 $$ int i = 0-->Line_16 $$ expectedHosts[i++] = addr.getHostName()[ FD ]
Line_11 $$ int i = 0-->Line_18 $$ expectedHosts[i++] = addr.getHostName() + ":" + addr.getPort()[ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_12 $$ String[] expectedHosts = new String[expected.size()][ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_4 $$ List<String> values = new ArrayList<String>()[ CD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_10 $$ String[] actual = values.toArray(new String[values.size()])[ CD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_12 $$ String[] expectedHosts = new String[expected.size()][ CD ]
Line_15 $$ if (!checkPort) -->Line_16 $$ expectedHosts[i++] = addr.getHostName()[ CD ]
Line_6 $$ while (tokenizer.hasMoreTokens()) -->Line_8 $$ values.add(s)[ CD ]
Line_15 $$ if (!checkPort) -->Line_18 $$ expectedHosts[i++] = addr.getHostName() + ":" + addr.getPort()[ CD ]
Line_5 $$ StringTokenizer tokenizer = new StringTokenizer(out)-->Line_6 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_21 $$ assertTrue(Arrays.equals(expectedHosts, actual))[ CD ]
Line_4 $$ List<String> values = new ArrayList<String>()-->Line_10 $$ String[] actual = values.toArray(new String[values.size()])[ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_5 $$ StringTokenizer tokenizer = new StringTokenizer(out)[ CD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_15 $$ if (!checkPort) [ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_3 $$ String out = getAddressListFromTool(type, conf, expected.size() != 0)[ CD ]
Line_7 $$ String s = tokenizer.nextToken().trim()-->Line_8 $$ values.add(s)[ FD ]
Line_14 $$ InetSocketAddress addr = cnn.getAddress()-->Line_18 $$ expectedHosts[i++] = addr.getHostName() + ":" + addr.getPort()[ FD ]
Line_2 $$ private void getAddressListFromTool(TestType type, HdfsConfiguration conf, boolean checkPort, List<ConfiguredNNAddress> expected) throws Exception -->Line_3 $$ String out = getAddressListFromTool(type, conf, expected.size() != 0)[ FD ]
Line_13 $$ for (ConfiguredNNAddress cnn : expected) -->Line_14 $$ InetSocketAddress addr = cnn.getAddress()[ FD ]
Line_5 $$ StringTokenizer tokenizer = new StringTokenizer(out)-->Line_7 $$ String s = tokenizer.nextToken().trim()[ FD ]
Line_4 $$ List<String> values = new ArrayList<String>()-->Line_8 $$ values.add(s)[ FD ]
