Line_2 $$ public void stopRandomNonMasterNode() throws IOException -->Line_4 $$ if (nodeAndClient != null) [ CD ]
Line_4 $$ if (nodeAndClient != null) -->Line_6 $$ removeDisruptionSchemeFromNode(nodeAndClient)[ CD ]
Line_2 $$ public void stopRandomNonMasterNode() throws IOException -->Line_3 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new MasterNodePredicate(getMasterName()).negate())[ CD ]
Line_3 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new MasterNodePredicate(getMasterName()).negate())-->Line_4 $$ if (nodeAndClient != null) [ FD ]
Line_3 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new MasterNodePredicate(getMasterName()).negate())-->Line_6 $$ removeDisruptionSchemeFromNode(nodeAndClient)[ FD ]
Line_4 $$ if (nodeAndClient != null) -->Line_7 $$ nodes.remove(nodeAndClient.name)[ CD ]
Line_3 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new MasterNodePredicate(getMasterName()).negate())-->Line_8 $$ nodeAndClient.close()[ FD ]
Line_4 $$ if (nodeAndClient != null) -->Line_8 $$ nodeAndClient.close()[ CD ]
Line_4 $$ if (nodeAndClient != null) -->Line_5 $$ logger.info("Closing random non master node [[ CD ]
