Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) -->Line_24 $$ Map.Entry<String, ExternalProjectBuildClasspathPojo> entry = it.next()[ CD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_25 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ FD ]
Line_12 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) -->Line_13 $$ it.remove()[ CD ]
Line_6 $$ if (linkedProjectPathsToForget.contains(entry.getKey().getPath())) -->Line_7 $$ it.remove()[ CD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_20 $$ it.remove()[ FD ]
Line_18 $$ String path = taskInfo.getSettings().getExternalProjectPath()-->Line_31 $$ modificationStamps.remove(path)[ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_26 $$ it.remove()[ FD ]
Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) -->Line_24 $$ Map.Entry<String, ExternalProjectBuildClasspathPojo> entry = it.next()[ FD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_26 $$ it.remove()[ FD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_17 $$ ExternalTaskExecutionInfo taskInfo = it.next()[ CD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) [ FD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_19 $$ if (linkedProjectPathsToForget.contains(path) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(path, myExternalSystemId, myProject))) [ CD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_17 $$ ExternalTaskExecutionInfo taskInfo = it.next()[ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_29 $$ Map<String, Long> modificationStamps = myExternalConfigModificationStamps.get()[ CD ]
Line_3 $$ Map<ExternalProjectPojo, Collection<ExternalProjectPojo>> projects = myAvailableProjects.get()-->Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) [ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_12 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ CD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_24 $$ Map.Entry<String, ExternalProjectBuildClasspathPojo> entry = it.next()[ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_5 $$ Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>> entry = it.next()[ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) [ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) [ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_6 $$ if (linkedProjectPathsToForget.contains(entry.getKey().getPath())) [ CD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_18 $$ String path = taskInfo.getSettings().getExternalProjectPath()[ CD ]
Line_17 $$ ExternalTaskExecutionInfo taskInfo = it.next()-->Line_18 $$ String path = taskInfo.getSettings().getExternalProjectPath()[ FD ]
Line_11 $$ Map.Entry<String, Collection<ExternalTaskPojo>> entry = it.next()-->Line_12 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_6 $$ if (linkedProjectPathsToForget.contains(entry.getKey().getPath())) [ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_17 $$ ExternalTaskExecutionInfo taskInfo = it.next()[ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_24 $$ Map.Entry<String, ExternalProjectBuildClasspathPojo> entry = it.next()[ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_12 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_7 $$ it.remove()[ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_20 $$ it.remove()[ FD ]
Line_5 $$ Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>> entry = it.next()-->Line_25 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_26 $$ it.remove()[ FD ]
Line_5 $$ Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>> entry = it.next()-->Line_12 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_5 $$ Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>> entry = it.next()[ CD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_17 $$ ExternalTaskExecutionInfo taskInfo = it.next()[ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_19 $$ if (linkedProjectPathsToForget.contains(path) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(path, myExternalSystemId, myProject))) [ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) [ CD ]
Line_18 $$ String path = taskInfo.getSettings().getExternalProjectPath()-->Line_19 $$ if (linkedProjectPathsToForget.contains(path) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(path, myExternalSystemId, myProject))) [ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_24 $$ Map.Entry<String, ExternalProjectBuildClasspathPojo> entry = it.next()[ FD ]
Line_24 $$ Map.Entry<String, ExternalProjectBuildClasspathPojo> entry = it.next()-->Line_25 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_13 $$ it.remove()[ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_3 $$ Map<ExternalProjectPojo, Collection<ExternalProjectPojo>> projects = myAvailableProjects.get()[ CD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_20 $$ it.remove()[ FD ]
Line_25 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) -->Line_26 $$ it.remove()[ CD ]
Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) -->Line_26 $$ it.remove()[ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) [ CD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) [ FD ]
Line_11 $$ Map.Entry<String, Collection<ExternalTaskPojo>> entry = it.next()-->Line_25 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ FD ]
Line_30 $$ for (String path : linkedProjectPathsToForget) -->Line_31 $$ modificationStamps.remove(path)[ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) [ FD ]
Line_19 $$ if (linkedProjectPathsToForget.contains(path) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(path, myExternalSystemId, myProject))) -->Line_20 $$ it.remove()[ CD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_11 $$ Map.Entry<String, Collection<ExternalTaskPojo>> entry = it.next()[ CD ]
Line_5 $$ Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>> entry = it.next()-->Line_6 $$ if (linkedProjectPathsToForget.contains(entry.getKey().getPath())) [ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_11 $$ Map.Entry<String, Collection<ExternalTaskPojo>> entry = it.next()[ FD ]
Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) -->Line_13 $$ it.remove()[ FD ]
Line_16 $$ for (Iterator<ExternalTaskExecutionInfo> it = myRecentTasks.get().iterator(); it.hasNext(); ) -->Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) [ FD ]
Line_29 $$ Map<String, Long> modificationStamps = myExternalConfigModificationStamps.get()-->Line_31 $$ modificationStamps.remove(path)[ FD ]
Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) -->Line_11 $$ Map.Entry<String, Collection<ExternalTaskPojo>> entry = it.next()[ FD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_4 $$ for (Iterator<Map.Entry<ExternalProjectPojo, Collection<ExternalProjectPojo>>> it = projects.entrySet().iterator(); it.hasNext(); ) [ CD ]
Line_23 $$ for (Iterator<Map.Entry<String, ExternalProjectBuildClasspathPojo>> it = myProjectBuildClasspath.get().entrySet().iterator(); it.hasNext(); ) -->Line_25 $$ if (linkedProjectPathsToForget.contains(entry.getKey()) || linkedProjectPathsToForget.contains(ExternalSystemApiUtil.getRootProjectPath(entry.getKey(), myExternalSystemId, myProject))) [ CD ]
Line_2 $$ public void forgetExternalProjects(@NotNull Set<String> linkedProjectPathsToForget) -->Line_10 $$ for (Iterator<Map.Entry<String, Collection<ExternalTaskPojo>>> it = myAvailableTasks.get().entrySet().iterator(); it.hasNext(); ) [ CD ]
