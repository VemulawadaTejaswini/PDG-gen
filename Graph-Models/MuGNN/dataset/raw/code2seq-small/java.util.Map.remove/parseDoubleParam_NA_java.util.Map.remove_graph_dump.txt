Line_2 $$ protected double parseDoubleParam(@Nullable Map<String, Object> settings, String name, double defaultValue) throws ParseException -->Line_3 $$ if (settings == null) [ CD ]
Line_7 $$ if (value == null) -->Line_8 $$ return defaultValue[ CD ]
Line_2 $$ protected double parseDoubleParam(@Nullable Map<String, Object> settings, String name, double defaultValue) throws ParseException -->Line_7 $$ if (value == null) [ CD ]
Line_7 $$ if (value == null) -->Line_9 $$ if (value instanceof Number) [ CD ]
Line_9 $$ if (value instanceof Number) -->Line_11 $$ if (v >= 0 && v <= 1) [ CD ]
Line_6 $$ Object value = settings.get(name)-->Line_9 $$ if (value instanceof Number) [ FD ]
Line_6 $$ Object value = settings.get(name)-->Line_17 $$ throw new ParseException("Parameter [" + name + "] must be a double, type `" + value.getClass().getSimpleName() + "` provided instead", 0)[ FD ]
Line_2 $$ protected double parseDoubleParam(@Nullable Map<String, Object> settings, String name, double defaultValue) throws ParseException -->Line_6 $$ Object value = settings.get(name)[ CD ]
Line_2 $$ protected double parseDoubleParam(@Nullable Map<String, Object> settings, String name, double defaultValue) throws ParseException -->Line_6 $$ Object value = settings.get(name)[ FD ]
Line_6 $$ Object value = settings.get(name)-->Line_7 $$ if (value == null) [ FD ]
Line_9 $$ if (value instanceof Number) -->Line_10 $$ double v = ((Number) value).doubleValue()[ CD ]
Line_2 $$ protected double parseDoubleParam(@Nullable Map<String, Object> settings, String name, double defaultValue) throws ParseException -->Line_12 $$ settings.remove(name)[ FD ]
Line_11 $$ if (v >= 0 && v <= 1) -->Line_12 $$ settings.remove(name)[ CD ]
Line_11 $$ if (v >= 0 && v <= 1) -->Line_13 $$ return v[ CD ]
Line_3 $$ if (settings == null) -->Line_4 $$ return defaultValue[ CD ]
Line_2 $$ protected double parseDoubleParam(@Nullable Map<String, Object> settings, String name, double defaultValue) throws ParseException -->Line_3 $$ if (settings == null) [ FD ]
