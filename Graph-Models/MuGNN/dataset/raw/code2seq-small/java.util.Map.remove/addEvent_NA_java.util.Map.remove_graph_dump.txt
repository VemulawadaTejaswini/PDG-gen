Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_34 $$ return true[ CD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_23 $$ if ((boolean) parameters.get("patch")) [ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_29 $$ _batchParameters.add(parameters)[ CD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_21 $$ parameters.put("groupId", syncFile.getRepositoryId())[ FD ]
Line_9 $$ long size = 0-->Line_13 $$ size = syncFile.getSize()[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_10 $$ if ((boolean) parameters.get("patch")) [ CD ]
Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")-->Line_22 $$ parameters.put("uuid", syncFile.getTypeUuid())[ FD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_22 $$ parameters.put("uuid", syncFile.getTypeUuid())[ FD ]
Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")-->Line_24 $$ parameters.put("version", syncFile.getVersion())[ FD ]
Line_11 $$ size = syncFile.getSize() * (1 / PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)-->Line_13 $$ size = syncFile.getSize()[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_30 $$ _handlers.put(zipFileId, (DownloadFileHandler) downloadFileEvent.getHandler())[ FD ]
Line_10 $$ if ((boolean) parameters.get("patch")) -->Line_13 $$ size = syncFile.getSize()[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_28 $$ parameters.remove("syncFile")[ CD ]
Line_27 $$ parameters = new HashMap(parameters)-->Line_29 $$ _batchParameters.add(parameters)[ FD ]
Line_15 $$ if (size >= (syncAccount.getBatchFileMaxSize() / 10)) -->Line_16 $$ return false[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_9 $$ long size = 0[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_22 $$ parameters.put("uuid", syncFile.getTypeUuid())[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_26 $$ parameters.put("zipFileId", zipFileId)[ CD ]
Line_4 $$ if (syncAccount.getBatchFileMaxSize() <= 0) -->Line_5 $$ return false[ CD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_26 $$ parameters.put("zipFileId", zipFileId)[ FD ]
Line_3 $$ SyncAccount syncAccount = SyncAccountService.fetchSyncAccount(_syncAccountId)-->Line_31 $$ if ((_eventCount >= 250) || (_totalFileSize >= syncAccount.getBatchFileMaxSize())) [ FD ]
Line_11 $$ size = syncFile.getSize() * (1 / PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)-->Line_15 $$ if (size >= (syncAccount.getBatchFileMaxSize() / 10)) [ FD ]
Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")-->Line_20 $$ String zipFileId = syncFile.getSyncFileId() + "_" + System.currentTimeMillis()[ FD ]
Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")-->Line_13 $$ size = syncFile.getSize()[ FD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_23 $$ if ((boolean) parameters.get("patch")) [ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_30 $$ _handlers.put(zipFileId, (DownloadFileHandler) downloadFileEvent.getHandler())[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")[ CD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_27 $$ parameters = new HashMap(parameters)[ FD ]
Line_9 $$ long size = 0-->Line_11 $$ size = syncFile.getSize() * (1 / PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_21 $$ parameters.put("groupId", syncFile.getRepositoryId())[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_20 $$ String zipFileId = syncFile.getSyncFileId() + "_" + System.currentTimeMillis()[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()[ FD ]
Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")-->Line_21 $$ parameters.put("groupId", syncFile.getRepositoryId())[ FD ]
Line_31 $$ if ((_eventCount >= 250) || (_totalFileSize >= syncAccount.getBatchFileMaxSize())) -->Line_32 $$ fireBatchEvent()[ CD ]
Line_20 $$ String zipFileId = syncFile.getSyncFileId() + "_" + System.currentTimeMillis()-->Line_26 $$ parameters.put("zipFileId", zipFileId)[ FD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_10 $$ if ((boolean) parameters.get("patch")) [ FD ]
Line_8 $$ SyncFile syncFile = (SyncFile) parameters.get("syncFile")-->Line_11 $$ size = syncFile.getSize() * (1 / PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)[ FD ]
Line_20 $$ String zipFileId = syncFile.getSyncFileId() + "_" + System.currentTimeMillis()-->Line_30 $$ _handlers.put(zipFileId, (DownloadFileHandler) downloadFileEvent.getHandler())[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_3 $$ SyncAccount syncAccount = SyncAccountService.fetchSyncAccount(_syncAccountId)[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_31 $$ if ((_eventCount >= 250) || (_totalFileSize >= syncAccount.getBatchFileMaxSize())) [ CD ]
Line_3 $$ SyncAccount syncAccount = SyncAccountService.fetchSyncAccount(_syncAccountId)-->Line_4 $$ if (syncAccount.getBatchFileMaxSize() <= 0) [ FD ]
Line_3 $$ SyncAccount syncAccount = SyncAccountService.fetchSyncAccount(_syncAccountId)-->Line_15 $$ if (size >= (syncAccount.getBatchFileMaxSize() / 10)) [ FD ]
Line_13 $$ size = syncFile.getSize()-->Line_15 $$ if (size >= (syncAccount.getBatchFileMaxSize() / 10)) [ FD ]
Line_23 $$ if ((boolean) parameters.get("patch")) -->Line_24 $$ parameters.put("version", syncFile.getVersion())[ CD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_28 $$ parameters.remove("syncFile")[ FD ]
Line_27 $$ parameters = new HashMap(parameters)-->Line_28 $$ parameters.remove("syncFile")[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()[ CD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_24 $$ parameters.put("version", syncFile.getVersion())[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_27 $$ parameters = new HashMap(parameters)[ CD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_4 $$ if (syncAccount.getBatchFileMaxSize() <= 0) [ CD ]
Line_7 $$ Map<String, Object> parameters = downloadFileEvent.getParameters()-->Line_29 $$ _batchParameters.add(parameters)[ FD ]
Line_2 $$ public synchronized boolean addEvent(DownloadFileEvent downloadFileEvent) -->Line_15 $$ if (size >= (syncAccount.getBatchFileMaxSize() / 10)) [ CD ]
Line_10 $$ if ((boolean) parameters.get("patch")) -->Line_11 $$ size = syncFile.getSize() * (1 / PropsValues.SYNC_FILE_PATCHING_THRESHOLD_SIZE_RATIO)[ CD ]
Line_9 $$ long size = 0-->Line_15 $$ if (size >= (syncAccount.getBatchFileMaxSize() / 10)) [ FD ]
