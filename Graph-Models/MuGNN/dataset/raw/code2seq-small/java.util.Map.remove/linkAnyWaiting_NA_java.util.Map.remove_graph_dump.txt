Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_11 $$ if (StringHelper.isNotEmpty(entitySource.jaxbEntityMapping().getName())) [ CD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_12 $$ final String entityClassName = entitySource.jaxbEntityMapping().getName()[ FD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_3 $$ if (toBeLinkedQueue == null) [ CD ]
Line_18 $$ final String qualifiedEntityClassName = mappingDocument.qualifyClassName(entityClassName)-->Line_20 $$ waitingList = toBeLinkedQueue.remove(qualifiedEntityClassName)[ FD ]
Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)-->Line_23 $$ waitingList.clear()[ FD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_16 $$ waitingList.clear()[ FD ]
Line_11 $$ if (StringHelper.isNotEmpty(entitySource.jaxbEntityMapping().getName())) -->Line_14 $$ if (waitingList != null) [ CD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_21 $$ if (waitingList != null) [ FD ]
Line_7 $$ if (waitingList != null) -->Line_9 $$ waitingList.clear()[ CD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_22 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_12 $$ final String entityClassName = entitySource.jaxbEntityMapping().getName()-->Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)[ FD ]
Line_11 $$ if (StringHelper.isNotEmpty(entitySource.jaxbEntityMapping().getName())) -->Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)[ CD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_7 $$ if (waitingList != null) [ FD ]
Line_11 $$ if (StringHelper.isNotEmpty(entitySource.jaxbEntityMapping().getName())) -->Line_12 $$ final String entityClassName = entitySource.jaxbEntityMapping().getName()[ CD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_14 $$ if (waitingList != null) [ FD ]
Line_11 $$ if (StringHelper.isNotEmpty(entitySource.jaxbEntityMapping().getName())) -->Line_19 $$ if (!entityClassName.equals(qualifiedEntityClassName)) [ CD ]
Line_19 $$ if (!entityClassName.equals(qualifiedEntityClassName)) -->Line_20 $$ waitingList = toBeLinkedQueue.remove(qualifiedEntityClassName)[ CD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)[ FD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_20 $$ waitingList = toBeLinkedQueue.remove(qualifiedEntityClassName)[ FD ]
Line_14 $$ if (waitingList != null) -->Line_15 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ CD ]
Line_11 $$ if (StringHelper.isNotEmpty(entitySource.jaxbEntityMapping().getName())) -->Line_18 $$ final String qualifiedEntityClassName = mappingDocument.qualifyClassName(entityClassName)[ CD ]
Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)-->Line_20 $$ waitingList = toBeLinkedQueue.remove(qualifiedEntityClassName)[ FD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_23 $$ waitingList.clear()[ FD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_8 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_12 $$ final String entityClassName = entitySource.jaxbEntityMapping().getName()-->Line_18 $$ final String qualifiedEntityClassName = mappingDocument.qualifyClassName(entityClassName)[ FD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())[ CD ]
Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)-->Line_16 $$ waitingList.clear()[ FD ]
Line_21 $$ if (waitingList != null) -->Line_22 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ CD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_11 $$ if (StringHelper.isNotEmpty(entitySource.jaxbEntityMapping().getName())) [ FD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_15 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_20 $$ waitingList = toBeLinkedQueue.remove(qualifiedEntityClassName)-->Line_22 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_19 $$ if (!entityClassName.equals(qualifiedEntityClassName)) -->Line_21 $$ if (waitingList != null) [ CD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_18 $$ final String qualifiedEntityClassName = mappingDocument.qualifyClassName(entityClassName)[ FD ]
Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())-->Line_9 $$ waitingList.clear()[ FD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_6 $$ List<ExtendsQueueEntry> waitingList = toBeLinkedQueue.remove(entitySource.jaxbEntityMapping().getEntityName())[ FD ]
Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)-->Line_15 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_20 $$ waitingList = toBeLinkedQueue.remove(qualifiedEntityClassName)-->Line_23 $$ waitingList.clear()[ FD ]
Line_14 $$ if (waitingList != null) -->Line_16 $$ waitingList.clear()[ CD ]
Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)-->Line_22 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_12 $$ final String entityClassName = entitySource.jaxbEntityMapping().getName()-->Line_19 $$ if (!entityClassName.equals(qualifiedEntityClassName)) [ FD ]
Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)-->Line_14 $$ if (waitingList != null) [ FD ]
Line_3 $$ if (toBeLinkedQueue == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_8 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_18 $$ final String qualifiedEntityClassName = mappingDocument.qualifyClassName(entityClassName)-->Line_19 $$ if (!entityClassName.equals(qualifiedEntityClassName)) [ FD ]
Line_7 $$ if (waitingList != null) -->Line_8 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ CD ]
Line_13 $$ waitingList = toBeLinkedQueue.remove(entityClassName)-->Line_21 $$ if (waitingList != null) [ FD ]
Line_21 $$ if (waitingList != null) -->Line_23 $$ waitingList.clear()[ CD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_22 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_7 $$ if (waitingList != null) [ CD ]
Line_20 $$ waitingList = toBeLinkedQueue.remove(qualifiedEntityClassName)-->Line_21 $$ if (waitingList != null) [ FD ]
Line_2 $$ private void linkAnyWaiting(MappingDocument mappingDocument, AbstractEntitySourceImpl entitySource) -->Line_15 $$ processWaitingSubEntityMappings(entitySource, waitingList)[ FD ]
