Line_9 $$ ReentrantLock lock = lockGroup.remove(key)-->Line_15 $$ lock.unlock()[ FD ]
Line_5 $$ if (lockGroup == null) -->Line_7 $$ return null[ CD ]
Line_9 $$ ReentrantLock lock = lockGroup.remove(key)-->Line_10 $$ if (lock == null) [ FD ]
Line_10 $$ if (lock == null) -->Line_12 $$ return null[ CD ]
Line_14 $$ if (unlock) -->Line_15 $$ lock.unlock()[ CD ]
Line_3 $$ Map<String, ReentrantLock> lockGroup = _lockGroupMap.get(groupName)-->Line_9 $$ ReentrantLock lock = lockGroup.remove(key)[ FD ]
Line_5 $$ if (lockGroup == null) -->Line_6 $$ _prematureLockReleases.put(prematureLockReleasesKey, _dummyValue)[ CD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_4 $$ String prematureLockReleasesKey = groupName + key[ CD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_9 $$ ReentrantLock lock = lockGroup.remove(key)[ FD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_18 $$ return lock[ CD ]
Line_14 $$ if (unlock) -->Line_16 $$ _prematureLockReleases.remove(prematureLockReleasesKey)[ CD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_3 $$ Map<String, ReentrantLock> lockGroup = _lockGroupMap.get(groupName)[ CD ]
Line_3 $$ Map<String, ReentrantLock> lockGroup = _lockGroupMap.get(groupName)-->Line_5 $$ if (lockGroup == null) [ FD ]
Line_4 $$ String prematureLockReleasesKey = groupName + key-->Line_11 $$ _prematureLockReleases.put(prematureLockReleasesKey, _dummyValue)[ FD ]
Line_10 $$ if (lock == null) -->Line_11 $$ _prematureLockReleases.put(prematureLockReleasesKey, _dummyValue)[ CD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_5 $$ if (lockGroup == null) [ CD ]
Line_4 $$ String prematureLockReleasesKey = groupName + key-->Line_16 $$ _prematureLockReleases.remove(prematureLockReleasesKey)[ FD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_14 $$ if (unlock) [ CD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_3 $$ Map<String, ReentrantLock> lockGroup = _lockGroupMap.get(groupName)[ FD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_10 $$ if (lock == null) [ CD ]
Line_4 $$ String prematureLockReleasesKey = groupName + key-->Line_6 $$ _prematureLockReleases.put(prematureLockReleasesKey, _dummyValue)[ FD ]
Line_2 $$ public static ReentrantLock freeLock(String groupName, String key, boolean unlock) -->Line_9 $$ ReentrantLock lock = lockGroup.remove(key)[ CD ]
