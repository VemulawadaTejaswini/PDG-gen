Line_43 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_60 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ FD ]
Line_14 $$ final String cfgXmlResourceName2 = (String) integrationSettings.get(CFG_FILE)-->Line_15 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) [ FD ]
Line_48 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) -->Line_50 $$ final String valueString = (String) entry.getValue()[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_8 $$ final ConfigLoader configLoader = new ConfigLoader(ssrBuilder.getBootstrapServiceRegistry())[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_9 $$ final String cfgXmlResourceName1 = (String) mergedSettings.configurationValues.remove(CFG_FILE)[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_41 $$ Iterator itr = mergedSettings.configurationValues.entrySet().iterator()[ CD ]
Line_42 $$ while (itr.hasNext()) -->Line_48 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) [ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_16 $$ integrationSettings.remove(CFG_FILE)[ FD ]
Line_3 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_58 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ FD ]
Line_15 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) -->Line_18 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ CD ]
Line_51 $$ if (keyString.startsWith(JACC_PREFIX)) -->Line_52 $$ if (jaccContextId == null) [ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_31 $$ if (persistenceUnit.getValidationMode() != null) [ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_4 $$ if (persistenceUnit.getProperties() != null) [ FD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_25 $$ mergedSettings.configurationValues.remove(entry.getKey())[ FD ]
Line_41 $$ Iterator itr = mergedSettings.configurationValues.entrySet().iterator()-->Line_45 $$ itr.remove()[ FD ]
Line_49 $$ final String keyString = (String) entry.getKey()-->Line_59 $$ if (keyString.startsWith(COLLECTION_CACHE_PREFIX)) [ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_42 $$ while (itr.hasNext()) [ CD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_44 $$ if (entry.getValue() == null) [ FD ]
Line_57 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) -->Line_59 $$ if (keyString.startsWith(COLLECTION_CACHE_PREFIX)) [ CD ]
Line_9 $$ final String cfgXmlResourceName1 = (String) mergedSettings.configurationValues.remove(CFG_FILE)-->Line_10 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName1)) [ FD ]
Line_43 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_50 $$ final String valueString = (String) entry.getValue()[ FD ]
Line_11 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)-->Line_18 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_18 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_49 $$ final String keyString = (String) entry.getKey()-->Line_55 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_43 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_48 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) [ FD ]
Line_40 $$ final String jaccContextId = (String) mergedSettings.configurationValues.get(JACC_CONTEXT_ID)-->Line_55 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_42 $$ while (itr.hasNext()) -->Line_43 $$ final Map.Entry entry = (Map.Entry) itr.next()[ CD ]
Line_3 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_12 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_43 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_49 $$ final String keyString = (String) entry.getKey()[ FD ]
Line_24 $$ if (entry.getValue() == null) -->Line_27 $$ mergedSettings.configurationValues.put(entry.getKey(), entry.getValue())[ CD ]
Line_51 $$ if (keyString.startsWith(JACC_PREFIX)) -->Line_57 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) [ CD ]
Line_10 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName1)) -->Line_11 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)[ CD ]
Line_24 $$ if (entry.getValue() == null) -->Line_25 $$ mergedSettings.configurationValues.remove(entry.getKey())[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_64 $$ return mergedSettings[ CD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_50 $$ final String valueString = (String) entry.getValue()[ FD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_24 $$ if (entry.getValue() == null) [ FD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_60 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_14 $$ final String cfgXmlResourceName2 = (String) integrationSettings.get(CFG_FILE)[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_32 $$ mergedSettings.configurationValues.put(VALIDATION_MODE, persistenceUnit.getValidationMode())[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_14 $$ final String cfgXmlResourceName2 = (String) integrationSettings.get(CFG_FILE)[ FD ]
Line_41 $$ Iterator itr = mergedSettings.configurationValues.entrySet().iterator()-->Line_42 $$ while (itr.hasNext()) [ FD ]
Line_50 $$ final String valueString = (String) entry.getValue()-->Line_55 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_21 $$ if (entry.getKey() == null) [ FD ]
Line_41 $$ Iterator itr = mergedSettings.configurationValues.entrySet().iterator()-->Line_43 $$ final Map.Entry entry = (Map.Entry) itr.next()[ FD ]
Line_59 $$ if (keyString.startsWith(COLLECTION_CACHE_PREFIX)) -->Line_60 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ CD ]
Line_3 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_55 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_49 $$ final String keyString = (String) entry.getKey()-->Line_51 $$ if (keyString.startsWith(JACC_PREFIX)) [ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_30 $$ if (!mergedSettings.configurationValues.containsKey(VALIDATION_MODE)) [ CD ]
Line_14 $$ final String cfgXmlResourceName2 = (String) integrationSettings.get(CFG_FILE)-->Line_17 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName2)[ FD ]
Line_43 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_44 $$ if (entry.getValue() == null) [ FD ]
Line_42 $$ while (itr.hasNext()) -->Line_44 $$ if (entry.getValue() == null) [ CD ]
Line_35 $$ if (!mergedSettings.configurationValues.containsKey(SHARED_CACHE_MODE)) -->Line_36 $$ if (persistenceUnit.getSharedCacheMode() != null) [ CD ]
Line_49 $$ final String keyString = (String) entry.getKey()-->Line_60 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ FD ]
Line_57 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) -->Line_58 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_5 $$ mergedSettings.configurationValues.putAll(persistenceUnit.getProperties())[ FD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_27 $$ mergedSettings.configurationValues.put(entry.getKey(), entry.getValue())[ FD ]
Line_3 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_60 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) [ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_40 $$ final String jaccContextId = (String) mergedSettings.configurationValues.get(JACC_CONTEXT_ID)[ CD ]
Line_31 $$ if (persistenceUnit.getValidationMode() != null) -->Line_32 $$ mergedSettings.configurationValues.put(VALIDATION_MODE, persistenceUnit.getValidationMode())[ CD ]
Line_36 $$ if (persistenceUnit.getSharedCacheMode() != null) -->Line_37 $$ mergedSettings.configurationValues.put(SHARED_CACHE_MODE, persistenceUnit.getSharedCacheMode())[ CD ]
Line_49 $$ final String keyString = (String) entry.getKey()-->Line_58 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_10 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName1)) [ CD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_48 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) [ FD ]
Line_52 $$ if (jaccContextId == null) -->Line_53 $$ LOG.debug("Found JACC permission grant [%s] in properties, but no JACC context id was specified; ignoring")[ CD ]
Line_49 $$ final String keyString = (String) entry.getKey()-->Line_57 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) [ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_4 $$ if (persistenceUnit.getProperties() != null) [ CD ]
Line_30 $$ if (!mergedSettings.configurationValues.containsKey(VALIDATION_MODE)) -->Line_31 $$ if (persistenceUnit.getValidationMode() != null) [ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_15 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) [ CD ]
Line_48 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) -->Line_51 $$ if (keyString.startsWith(JACC_PREFIX)) [ CD ]
Line_4 $$ if (persistenceUnit.getProperties() != null) -->Line_5 $$ mergedSettings.configurationValues.putAll(persistenceUnit.getProperties())[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_7 $$ mergedSettings.configurationValues.put(PERSISTENCE_UNIT_NAME, persistenceUnit.getName())[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_37 $$ mergedSettings.configurationValues.put(SHARED_CACHE_MODE, persistenceUnit.getSharedCacheMode())[ FD ]
Line_8 $$ final ConfigLoader configLoader = new ConfigLoader(ssrBuilder.getBootstrapServiceRegistry())-->Line_11 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)[ FD ]
Line_3 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_18 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_35 $$ if (!mergedSettings.configurationValues.containsKey(SHARED_CACHE_MODE)) [ CD ]
Line_50 $$ final String valueString = (String) entry.getValue()-->Line_58 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ FD ]
Line_52 $$ if (jaccContextId == null) -->Line_55 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_8 $$ final ConfigLoader configLoader = new ConfigLoader(ssrBuilder.getBootstrapServiceRegistry())[ CD ]
Line_8 $$ final ConfigLoader configLoader = new ConfigLoader(ssrBuilder.getBootstrapServiceRegistry())-->Line_17 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName2)[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_3 $$ final MergedSettings mergedSettings = new MergedSettings()[ CD ]
Line_48 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) -->Line_49 $$ final String keyString = (String) entry.getKey()[ CD ]
Line_9 $$ final String cfgXmlResourceName1 = (String) mergedSettings.configurationValues.remove(CFG_FILE)-->Line_11 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)[ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_36 $$ if (persistenceUnit.getSharedCacheMode() != null) [ FD ]
Line_10 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName1)) -->Line_12 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ CD ]
Line_11 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)-->Line_12 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_15 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) -->Line_16 $$ integrationSettings.remove(CFG_FILE)[ CD ]
Line_44 $$ if (entry.getValue() == null) -->Line_45 $$ itr.remove()[ CD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_12 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_15 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) -->Line_17 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName2)[ CD ]
Line_40 $$ final String jaccContextId = (String) mergedSettings.configurationValues.get(JACC_CONTEXT_ID)-->Line_52 $$ if (jaccContextId == null) [ FD ]
Line_2 $$ private MergedSettings mergeSettings(PersistenceUnitDescriptor persistenceUnit, Map<?, ?> integrationSettings, StandardServiceRegistryBuilder ssrBuilder) -->Line_7 $$ mergedSettings.configurationValues.put(PERSISTENCE_UNIT_NAME, persistenceUnit.getName())[ CD ]
Line_20 $$ for (Map.Entry<?, ?> entry : integrationSettings.entrySet()) -->Line_49 $$ final String keyString = (String) entry.getKey()[ FD ]
