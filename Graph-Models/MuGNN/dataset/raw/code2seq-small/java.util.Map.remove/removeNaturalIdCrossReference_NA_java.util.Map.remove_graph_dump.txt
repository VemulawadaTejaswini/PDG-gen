Line_14 $$ if (persister.hasNaturalIdCache()) -->Line_16 $$ final Object naturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(naturalIdValues, persister, session())[ CD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_18 $$ if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues, naturalIdValues)) [ FD ]
Line_7 $$ if (entityNaturalIdResolutionCache != null) -->Line_8 $$ final CachedNaturalId cachedNaturalId = entityNaturalIdResolutionCache.pkToNaturalIdMap.remove(pk)[ CD ]
Line_15 $$ final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy = persister.getNaturalIdCacheAccessStrategy()-->Line_16 $$ final Object naturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(naturalIdValues, persister, session())[ FD ]
Line_15 $$ final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy = persister.getNaturalIdCacheAccessStrategy()-->Line_20 $$ naturalIdCacheAccessStrategy.evict(sessionNaturalIdCacheKey)[ FD ]
Line_8 $$ final CachedNaturalId cachedNaturalId = entityNaturalIdResolutionCache.pkToNaturalIdMap.remove(pk)-->Line_9 $$ if (cachedNaturalId != null) [ FD ]
Line_9 $$ if (cachedNaturalId != null) -->Line_11 $$ sessionCachedNaturalIdValues = cachedNaturalId.getValues()[ CD ]
Line_6 $$ Object[] sessionCachedNaturalIdValues = null-->Line_11 $$ sessionCachedNaturalIdValues = cachedNaturalId.getValues()[ FD ]
Line_14 $$ if (persister.hasNaturalIdCache()) -->Line_15 $$ final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy = persister.getNaturalIdCacheAccessStrategy()[ CD ]
Line_16 $$ final Object naturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(naturalIdValues, persister, session())-->Line_17 $$ naturalIdCacheAccessStrategy.evict(naturalIdCacheKey)[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_14 $$ if (persister.hasNaturalIdCache()) [ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_8 $$ final CachedNaturalId cachedNaturalId = entityNaturalIdResolutionCache.pkToNaturalIdMap.remove(pk)[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_3 $$ persister = locatePersisterForKey(persister)[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_16 $$ final Object naturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(naturalIdValues, persister, session())[ FD ]
Line_9 $$ if (cachedNaturalId != null) -->Line_10 $$ entityNaturalIdResolutionCache.naturalIdToPkMap.remove(cachedNaturalId)[ CD ]
Line_14 $$ if (persister.hasNaturalIdCache()) -->Line_18 $$ if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues, naturalIdValues)) [ CD ]
Line_18 $$ if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues, naturalIdValues)) -->Line_19 $$ final Object sessionNaturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(sessionCachedNaturalIdValues, persister, session())[ CD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_6 $$ Object[] sessionCachedNaturalIdValues = null[ CD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_5 $$ final NaturalIdResolutionCache entityNaturalIdResolutionCache = naturalIdResolutionCacheMap.get(persister)[ CD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_5 $$ final NaturalIdResolutionCache entityNaturalIdResolutionCache = naturalIdResolutionCacheMap.get(persister)[ FD ]
Line_3 $$ persister = locatePersisterForKey(persister)-->Line_14 $$ if (persister.hasNaturalIdCache()) [ FD ]
Line_14 $$ if (persister.hasNaturalIdCache()) -->Line_17 $$ naturalIdCacheAccessStrategy.evict(naturalIdCacheKey)[ CD ]
Line_11 $$ sessionCachedNaturalIdValues = cachedNaturalId.getValues()-->Line_18 $$ if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues, naturalIdValues)) [ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_4 $$ validateNaturalId(persister, naturalIdValues)[ FD ]
Line_3 $$ persister = locatePersisterForKey(persister)-->Line_4 $$ validateNaturalId(persister, naturalIdValues)[ FD ]
Line_15 $$ final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy = persister.getNaturalIdCacheAccessStrategy()-->Line_17 $$ naturalIdCacheAccessStrategy.evict(naturalIdCacheKey)[ FD ]
Line_6 $$ Object[] sessionCachedNaturalIdValues = null-->Line_19 $$ final Object sessionNaturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(sessionCachedNaturalIdValues, persister, session())[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_4 $$ validateNaturalId(persister, naturalIdValues)[ CD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_19 $$ final Object sessionNaturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(sessionCachedNaturalIdValues, persister, session())[ FD ]
Line_3 $$ persister = locatePersisterForKey(persister)-->Line_19 $$ final Object sessionNaturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(sessionCachedNaturalIdValues, persister, session())[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_23 $$ return sessionCachedNaturalIdValues[ CD ]
Line_8 $$ final CachedNaturalId cachedNaturalId = entityNaturalIdResolutionCache.pkToNaturalIdMap.remove(pk)-->Line_10 $$ entityNaturalIdResolutionCache.naturalIdToPkMap.remove(cachedNaturalId)[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_3 $$ persister = locatePersisterForKey(persister)[ CD ]
Line_8 $$ final CachedNaturalId cachedNaturalId = entityNaturalIdResolutionCache.pkToNaturalIdMap.remove(pk)-->Line_11 $$ sessionCachedNaturalIdValues = cachedNaturalId.getValues()[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_14 $$ if (persister.hasNaturalIdCache()) [ CD ]
Line_18 $$ if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues, naturalIdValues)) -->Line_20 $$ naturalIdCacheAccessStrategy.evict(sessionNaturalIdCacheKey)[ CD ]
Line_15 $$ final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy = persister.getNaturalIdCacheAccessStrategy()-->Line_19 $$ final Object sessionNaturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(sessionCachedNaturalIdValues, persister, session())[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_15 $$ final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy = persister.getNaturalIdCacheAccessStrategy()[ FD ]
Line_3 $$ persister = locatePersisterForKey(persister)-->Line_16 $$ final Object naturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(naturalIdValues, persister, session())[ FD ]
Line_7 $$ if (entityNaturalIdResolutionCache != null) -->Line_9 $$ if (cachedNaturalId != null) [ CD ]
Line_3 $$ persister = locatePersisterForKey(persister)-->Line_5 $$ final NaturalIdResolutionCache entityNaturalIdResolutionCache = naturalIdResolutionCacheMap.get(persister)[ FD ]
Line_2 $$ public Object[] removeNaturalIdCrossReference(EntityPersister persister, Serializable pk, Object[] naturalIdValues) -->Line_7 $$ if (entityNaturalIdResolutionCache != null) [ CD ]
Line_3 $$ persister = locatePersisterForKey(persister)-->Line_15 $$ final NaturalIdRegionAccessStrategy naturalIdCacheAccessStrategy = persister.getNaturalIdCacheAccessStrategy()[ FD ]
Line_6 $$ Object[] sessionCachedNaturalIdValues = null-->Line_18 $$ if (sessionCachedNaturalIdValues != null && !Arrays.equals(sessionCachedNaturalIdValues, naturalIdValues)) [ FD ]
Line_5 $$ final NaturalIdResolutionCache entityNaturalIdResolutionCache = naturalIdResolutionCacheMap.get(persister)-->Line_7 $$ if (entityNaturalIdResolutionCache != null) [ FD ]
Line_19 $$ final Object sessionNaturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(sessionCachedNaturalIdValues, persister, session())-->Line_20 $$ naturalIdCacheAccessStrategy.evict(sessionNaturalIdCacheKey)[ FD ]
Line_11 $$ sessionCachedNaturalIdValues = cachedNaturalId.getValues()-->Line_19 $$ final Object sessionNaturalIdCacheKey = naturalIdCacheAccessStrategy.generateCacheKey(sessionCachedNaturalIdValues, persister, session())[ FD ]
