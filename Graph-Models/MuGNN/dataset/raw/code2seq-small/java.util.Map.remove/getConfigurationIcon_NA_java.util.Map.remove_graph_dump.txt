Line_8 $$ Long calcTime = myIconCalcTime.get(uniqueID)-->Line_10 $$ calcTime = 150L[ FD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_16 $$ if (icon == null) [ CD ]
Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)-->Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)[ FD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_21 $$ myIconCalcTime.remove(uniqueID)[ FD ]
Line_6 $$ if (selectedId.equals(uniqueID)) -->Line_8 $$ Long calcTime = myIconCalcTime.get(uniqueID)[ CD ]
Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))-->Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)[ FD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)[ FD ]
Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))-->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))-->Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)[ FD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_38 $$ return icon[ CD ]
Line_16 $$ if (icon == null) -->Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() [ CD ]
Line_4 $$ RunnerAndConfigurationSettings selectedConfiguration = getSelectedConfiguration()-->Line_5 $$ String selectedId = selectedConfiguration != null ? selectedConfiguration.getUniqueID() : ""[ FD ]
Line_5 $$ String selectedId = selectedConfiguration != null ? selectedConfiguration.getUniqueID() : ""-->Line_6 $$ if (selectedId.equals(uniqueID)) [ FD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))[ FD ]
Line_6 $$ if (selectedId.equals(uniqueID)) -->Line_11 $$ if (lastCheckTime == null || System.currentTimeMillis() - lastCheckTime > calcTime * 10) [ CD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)[ FD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_19 $$ if (myProject.isDisposed())[ CD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_21 $$ myIconCalcTime.remove(uniqueID)[ CD ]
Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)-->Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)[ FD ]
Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))-->Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)[ FD ]
Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)-->Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)[ FD ]
Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)-->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_4 $$ RunnerAndConfigurationSettings selectedConfiguration = getSelectedConfiguration()[ CD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_44 $$ return icon[ CD ]
Line_26 $$ if (settings.isTemporary()) -->Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)[ CD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() [ FD ]
Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)-->Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)[ FD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_37 $$ myIconCalcTime.put(uniqueID, System.currentTimeMillis() - startTime)[ FD ]
Line_24 $$ if (DumbService.isDumb(myProject)) -->Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))[ CD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_7 $$ Long lastCheckTime = myIconCheckTimes.get(uniqueID)[ FD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_31 $$ settings.checkSettings()[ FD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_8 $$ Long calcTime = myIconCalcTime.get(uniqueID)[ FD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_23 $$ Icon icon[ CD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_12 $$ myIdToIcon.remove(uniqueID)[ FD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_37 $$ myIconCalcTime.put(uniqueID, System.currentTimeMillis() - startTime)[ CD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)[ CD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_6 $$ if (selectedId.equals(uniqueID)) [ FD ]
Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)-->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_16 $$ if (icon == null) -->Line_42 $$ myIconCheckTimes.put(uniqueID, System.currentTimeMillis())[ CD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)[ FD ]
Line_6 $$ if (selectedId.equals(uniqueID)) -->Line_9 $$ if (calcTime == null || calcTime < 150)[ CD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_3 $$ final String uniqueID = settings.getUniqueID()[ FD ]
Line_11 $$ if (lastCheckTime == null || System.currentTimeMillis() - lastCheckTime > calcTime * 10) -->Line_12 $$ myIdToIcon.remove(uniqueID)[ CD ]
Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)-->Line_16 $$ if (icon == null) [ FD ]
Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)-->Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() [ FD ]
Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)-->Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))[ FD ]
Line_19 $$ if (myProject.isDisposed())-->Line_20 $$ return null[ CD ]
Line_23 $$ Icon icon-->Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)[ FD ]
Line_23 $$ Icon icon-->Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)[ FD ]
Line_23 $$ Icon icon-->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)-->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)-->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_26 $$ if (settings.isTemporary()) [ FD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_22 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_5 $$ String selectedId = selectedConfiguration != null ? selectedConfiguration.getUniqueID() : ""[ CD ]
Line_23 $$ Icon icon-->Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))[ FD ]
Line_9 $$ if (calcTime == null || calcTime < 150)-->Line_10 $$ calcTime = 150L[ CD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_3 $$ final String uniqueID = settings.getUniqueID()[ CD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)[ FD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_42 $$ myIconCheckTimes.put(uniqueID, System.currentTimeMillis())[ FD ]
Line_6 $$ if (selectedId.equals(uniqueID)) -->Line_7 $$ Long lastCheckTime = myIconCheckTimes.get(uniqueID)[ CD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_24 $$ if (DumbService.isDumb(myProject)) [ CD ]
Line_15 $$ Icon icon = myIdToIcon.get(uniqueID)-->Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)[ FD ]
Line_24 $$ if (DumbService.isDumb(myProject)) -->Line_26 $$ if (settings.isTemporary()) [ CD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)[ FD ]
Line_32 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, false)-->Line_34 $$ icon = ProgramRunnerUtil.getConfigurationIcon(settings, true)[ FD ]
Line_3 $$ final String uniqueID = settings.getUniqueID()-->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ FD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_25 $$ icon = IconLoader.getDisabledIcon(ProgramRunnerUtil.getRawIcon(settings))[ FD ]
Line_2 $$ public Icon getConfigurationIcon(@NotNull final RunnerAndConfigurationSettings settings) -->Line_6 $$ if (selectedId.equals(uniqueID)) [ CD ]
Line_17 $$ icon = IconDeferrer.getInstance().deferAutoUpdatable(settings.getConfiguration().getIcon(), myProject.hashCode() ^ settings.hashCode(), new Function<Integer, Icon>() -->Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)[ FD ]
Line_16 $$ if (icon == null) -->Line_41 $$ myIdToIcon.put(uniqueID, icon)[ CD ]
Line_23 $$ Icon icon-->Line_27 $$ icon = ProgramRunnerUtil.getTemporaryIcon(icon)[ FD ]
