Line_2 $$ private void zipAndWrite(ByteSequence bytes, int record, boolean fixedSize) throws IOException -->Line_6 $$ out.write(bytes.getBytes(), bytes.getOffset(), bytes.getLength())[ FD ]
Line_2 $$ private void zipAndWrite(ByteSequence bytes, int record, boolean fixedSize) throws IOException -->Line_12 $$ myPendingWriteRequestsSize -= bytes.getLength()[ FD ]
Line_4 $$ DeflaterOutputStream out = new DeflaterOutputStream(s)-->Line_6 $$ out.write(bytes.getBytes(), bytes.getOffset(), bytes.getLength())[ FD ]
Line_4 $$ DeflaterOutputStream out = new DeflaterOutputStream(s)-->Line_8 $$ out.close()[ FD ]
Line_2 $$ private void zipAndWrite(ByteSequence bytes, int record, boolean fixedSize) throws IOException -->Line_3 $$ BufferExposingByteArrayOutputStream s = new BufferExposingByteArrayOutputStream()[ CD ]
Line_2 $$ private void zipAndWrite(ByteSequence bytes, int record, boolean fixedSize) throws IOException -->Line_4 $$ DeflaterOutputStream out = new DeflaterOutputStream(s)[ CD ]
Line_2 $$ private void zipAndWrite(ByteSequence bytes, int record, boolean fixedSize) throws IOException -->Line_11 $$ doWrite(record, fixedSize, s)[ FD ]
Line_2 $$ private void zipAndWrite(ByteSequence bytes, int record, boolean fixedSize) throws IOException -->Line_13 $$ myPendingWriteRequests.remove(record)[ FD ]
Line_3 $$ BufferExposingByteArrayOutputStream s = new BufferExposingByteArrayOutputStream()-->Line_11 $$ doWrite(record, fixedSize, s)[ FD ]
