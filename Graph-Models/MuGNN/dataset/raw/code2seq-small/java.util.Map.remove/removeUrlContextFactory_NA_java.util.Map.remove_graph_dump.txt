Line_2 $$ public static synchronized void removeUrlContextFactory(final String scheme, ObjectFactory factory) -->Line_4 $$ ObjectFactory f = factories.get(scheme)[ FD ]
Line_2 $$ public static synchronized void removeUrlContextFactory(final String scheme, ObjectFactory factory) -->Line_3 $$ Map<String, ObjectFactory> factories = new HashMap<String, ObjectFactory>(urlContextFactories)[ CD ]
Line_5 $$ if (f == factory) -->Line_7 $$ urlContextFactories = Collections.unmodifiableMap(factories)[ CD ]
Line_5 $$ if (f == factory) -->Line_8 $$ return[ CD ]
Line_4 $$ ObjectFactory f = factories.get(scheme)-->Line_5 $$ if (f == factory) [ FD ]
Line_2 $$ public static synchronized void removeUrlContextFactory(final String scheme, ObjectFactory factory) -->Line_5 $$ if (f == factory) [ CD ]
Line_2 $$ public static synchronized void removeUrlContextFactory(final String scheme, ObjectFactory factory) -->Line_6 $$ factories.remove(scheme)[ FD ]
Line_3 $$ Map<String, ObjectFactory> factories = new HashMap<String, ObjectFactory>(urlContextFactories)-->Line_4 $$ ObjectFactory f = factories.get(scheme)[ FD ]
Line_2 $$ public static synchronized void removeUrlContextFactory(final String scheme, ObjectFactory factory) -->Line_4 $$ ObjectFactory f = factories.get(scheme)[ CD ]
Line_5 $$ if (f == factory) -->Line_6 $$ factories.remove(scheme)[ CD ]
Line_2 $$ public static synchronized void removeUrlContextFactory(final String scheme, ObjectFactory factory) -->Line_5 $$ if (f == factory) [ FD ]
Line_3 $$ Map<String, ObjectFactory> factories = new HashMap<String, ObjectFactory>(urlContextFactories)-->Line_6 $$ factories.remove(scheme)[ FD ]
Line_3 $$ Map<String, ObjectFactory> factories = new HashMap<String, ObjectFactory>(urlContextFactories)-->Line_7 $$ urlContextFactories = Collections.unmodifiableMap(factories)[ FD ]
