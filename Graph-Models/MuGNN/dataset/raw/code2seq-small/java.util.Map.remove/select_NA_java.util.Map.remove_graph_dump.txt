Line_3 $$ String val = map.remove(key)-->Line_6 $$ if (val != null && val.trim().length() > 0)[ FD ]
Line_4 $$ if (first != null)-->Line_5 $$ return first[ CD ]
Line_6 $$ if (val != null && val.trim().length() > 0)-->Line_7 $$ return builder.apply(val)[ CD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_8 $$ return builder.apply(defValue)[ FD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_4 $$ if (first != null)[ CD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_6 $$ if (val != null && val.trim().length() > 0)[ CD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_7 $$ return builder.apply(val)[ FD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_3 $$ String val = map.remove(key)[ FD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_4 $$ if (first != null)[ FD ]
Line_3 $$ String val = map.remove(key)-->Line_7 $$ return builder.apply(val)[ FD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_8 $$ return builder.apply(defValue)[ CD ]
Line_2 $$ private static <E> E select(E first, String key, String defValue, Map<String, String> map, Function<String, E> builder) -->Line_3 $$ String val = map.remove(key)[ CD ]
