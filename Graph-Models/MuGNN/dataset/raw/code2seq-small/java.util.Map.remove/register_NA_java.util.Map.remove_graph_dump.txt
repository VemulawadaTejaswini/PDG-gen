Line_2 $$ public final void register(@NotNull T parent, @NotNull T child) -->Line_9 $$ ObjectNode<T> parentNode = getNode(parent)[ FD ]
Line_16 $$ ObjectNode<T> oldParent = childNode.getParent()-->Line_17 $$ if (oldParent != null) [ FD ]
Line_12 $$ ObjectNode<T> childNode = getNode(child)-->Line_13 $$ if (childNode == null) [ FD ]
Line_12 $$ ObjectNode<T> childNode = getNode(child)-->Line_18 $$ oldParent.removeChild(childNode)[ FD ]
Line_12 $$ ObjectNode<T> childNode = getNode(child)-->Line_23 $$ parentNode.addChild(childNode)[ FD ]
Line_14 $$ childNode = createNodeFor(child, parentNode)-->Line_16 $$ ObjectNode<T> oldParent = childNode.getParent()[ FD ]
Line_11 $$ parentNode = createNodeFor(parent, null)-->Line_23 $$ parentNode.addChild(childNode)[ FD ]
Line_2 $$ public final void register(@NotNull T parent, @NotNull T child) -->Line_14 $$ childNode = createNodeFor(child, parentNode)[ FD ]
Line_9 $$ ObjectNode<T> parentNode = getNode(parent)-->Line_14 $$ childNode = createNodeFor(child, parentNode)[ FD ]
Line_2 $$ public final void register(@NotNull T parent, @NotNull T child) -->Line_4 $$ Object wasDisposed = myDisposedObjects.get(parent)[ FD ]
Line_13 $$ if (childNode == null) -->Line_14 $$ childNode = createNodeFor(child, parentNode)[ CD ]
Line_2 $$ public final void register(@NotNull T parent, @NotNull T child) -->Line_11 $$ parentNode = createNodeFor(parent, null)[ FD ]
Line_9 $$ ObjectNode<T> parentNode = getNode(parent)-->Line_22 $$ checkWasNotAddedAlready(parentNode, childNode)[ FD ]
Line_14 $$ childNode = createNodeFor(child, parentNode)-->Line_23 $$ parentNode.addChild(childNode)[ FD ]
Line_10 $$ if (parentNode == null)-->Line_11 $$ parentNode = createNodeFor(parent, null)[ CD ]
Line_14 $$ childNode = createNodeFor(child, parentNode)-->Line_22 $$ checkWasNotAddedAlready(parentNode, childNode)[ FD ]
Line_12 $$ ObjectNode<T> childNode = getNode(child)-->Line_24 $$ fireRegistered(childNode.getObject())[ FD ]
Line_14 $$ childNode = createNodeFor(child, parentNode)-->Line_24 $$ fireRegistered(childNode.getObject())[ FD ]
Line_11 $$ parentNode = createNodeFor(parent, null)-->Line_22 $$ checkWasNotAddedAlready(parentNode, childNode)[ FD ]
Line_17 $$ if (oldParent != null) -->Line_18 $$ oldParent.removeChild(childNode)[ CD ]
Line_2 $$ public final void register(@NotNull T parent, @NotNull T child) -->Line_12 $$ ObjectNode<T> childNode = getNode(child)[ FD ]
Line_13 $$ if (childNode == null) -->Line_17 $$ if (oldParent != null) [ CD ]
Line_13 $$ if (childNode == null) -->Line_16 $$ ObjectNode<T> oldParent = childNode.getParent()[ CD ]
Line_2 $$ public final void register(@NotNull T parent, @NotNull T child) -->Line_21 $$ myRootObjects.remove(child)[ FD ]
Line_9 $$ ObjectNode<T> parentNode = getNode(parent)-->Line_10 $$ if (parentNode == null)[ FD ]
Line_9 $$ ObjectNode<T> parentNode = getNode(parent)-->Line_11 $$ parentNode = createNodeFor(parent, null)[ FD ]
Line_12 $$ ObjectNode<T> childNode = getNode(child)-->Line_22 $$ checkWasNotAddedAlready(parentNode, childNode)[ FD ]
Line_9 $$ ObjectNode<T> parentNode = getNode(parent)-->Line_23 $$ parentNode.addChild(childNode)[ FD ]
Line_2 $$ public final void register(@NotNull T parent, @NotNull T child) -->Line_8 $$ myDisposedObjects.remove(child)[ FD ]
Line_4 $$ Object wasDisposed = myDisposedObjects.get(parent)-->Line_5 $$ if (wasDisposed != null) [ FD ]
Line_11 $$ parentNode = createNodeFor(parent, null)-->Line_14 $$ childNode = createNodeFor(child, parentNode)[ FD ]
Line_14 $$ childNode = createNodeFor(child, parentNode)-->Line_18 $$ oldParent.removeChild(childNode)[ FD ]
Line_12 $$ ObjectNode<T> childNode = getNode(child)-->Line_14 $$ childNode = createNodeFor(child, parentNode)[ FD ]
Line_12 $$ ObjectNode<T> childNode = getNode(child)-->Line_16 $$ ObjectNode<T> oldParent = childNode.getParent()[ FD ]
Line_16 $$ ObjectNode<T> oldParent = childNode.getParent()-->Line_18 $$ oldParent.removeChild(childNode)[ FD ]
