Line_2 $$ private boolean removeAssociationsFromMap(@NotNull Map<CharSequence, T> extensionMappings, @NotNull T type, boolean changed) -->Line_6 $$ if (extensionMappings.get(s) == type) [ FD ]
Line_6 $$ if (extensionMappings.get(s) == type) -->Line_7 $$ extensionMappings.remove(s)[ CD ]
Line_5 $$ for (CharSequence s : extsStrings) -->Line_7 $$ extensionMappings.remove(s)[ FD ]
Line_2 $$ private boolean removeAssociationsFromMap(@NotNull Map<CharSequence, T> extensionMappings, @NotNull T type, boolean changed) -->Line_11 $$ return changed[ CD ]
Line_2 $$ private boolean removeAssociationsFromMap(@NotNull Map<CharSequence, T> extensionMappings, @NotNull T type, boolean changed) -->Line_8 $$ changed = true[ FD ]
Line_2 $$ private boolean removeAssociationsFromMap(@NotNull Map<CharSequence, T> extensionMappings, @NotNull T type, boolean changed) -->Line_4 $$ CharSequence[] extsStrings = exts.toArray(new CharSequence[exts.size()])[ CD ]
Line_6 $$ if (extensionMappings.get(s) == type) -->Line_8 $$ changed = true[ CD ]
Line_3 $$ Set<CharSequence> exts = extensionMappings.keySet()-->Line_4 $$ CharSequence[] extsStrings = exts.toArray(new CharSequence[exts.size()])[ FD ]
Line_2 $$ private boolean removeAssociationsFromMap(@NotNull Map<CharSequence, T> extensionMappings, @NotNull T type, boolean changed) -->Line_7 $$ extensionMappings.remove(s)[ FD ]
Line_5 $$ for (CharSequence s : extsStrings) -->Line_6 $$ if (extensionMappings.get(s) == type) [ FD ]
Line_2 $$ private boolean removeAssociationsFromMap(@NotNull Map<CharSequence, T> extensionMappings, @NotNull T type, boolean changed) -->Line_3 $$ Set<CharSequence> exts = extensionMappings.keySet()[ CD ]
Line_2 $$ private boolean removeAssociationsFromMap(@NotNull Map<CharSequence, T> extensionMappings, @NotNull T type, boolean changed) -->Line_3 $$ Set<CharSequence> exts = extensionMappings.keySet()[ FD ]
