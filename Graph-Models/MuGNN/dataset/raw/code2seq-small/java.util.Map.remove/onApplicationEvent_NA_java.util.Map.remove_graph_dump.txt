Line_6 $$ String sessionId = accessor.getSessionId()-->Line_31 $$ this.sessions.put(sessionId, (DefaultSimpSession) simpUser.getSession(sessionId))[ FD ]
Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)-->Line_36 $$ if (session != null) [ FD ]
Line_7 $$ if (event instanceof SessionSubscribeEvent) -->Line_9 $$ if (session != null) [ CD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_5 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class)[ CD ]
Line_20 $$ if (user instanceof DestinationUserNameProvider) -->Line_21 $$ name = ((DestinationUserNameProvider) user).getDestinationUserName()[ CD ]
Line_7 $$ if (event instanceof SessionSubscribeEvent) -->Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)[ CD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_14 $$ if (event instanceof SessionConnectedEvent) [ FD ]
Line_15 $$ Principal user = subProtocolEvent.getUser()-->Line_19 $$ String name = user.getName()[ FD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_4 $$ Message<?> message = subProtocolEvent.getMessage()[ CD ]
Line_6 $$ String sessionId = accessor.getSessionId()-->Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)[ FD ]
Line_21 $$ name = ((DestinationUserNameProvider) user).getDestinationUserName()-->Line_27 $$ this.users.put(name, simpUser)[ FD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_44 $$ if (event instanceof SessionUnsubscribeEvent) [ FD ]
Line_25 $$ if (simpUser == null) -->Line_27 $$ this.users.put(name, simpUser)[ CD ]
Line_6 $$ String sessionId = accessor.getSessionId()-->Line_45 $$ DefaultSimpSession session = this.sessions.get(sessionId)[ FD ]
Line_14 $$ if (event instanceof SessionConnectedEvent) -->Line_19 $$ String name = user.getName()[ CD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_33 $$ if (event instanceof SessionDisconnectEvent) [ FD ]
Line_47 $$ String subscriptionId = accessor.getSubscriptionId()-->Line_48 $$ session.removeSubscription(subscriptionId)[ FD ]
Line_9 $$ if (session != null) -->Line_10 $$ String id = accessor.getSubscriptionId()[ CD ]
Line_14 $$ if (event instanceof SessionConnectedEvent) -->Line_33 $$ if (event instanceof SessionDisconnectEvent) [ CD ]
Line_25 $$ if (simpUser == null) -->Line_29 $$ simpUser.addSession(sessionId)[ CD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_6 $$ String sessionId = accessor.getSessionId()[ CD ]
Line_26 $$ simpUser = new DefaultSimpUser(name, sessionId)-->Line_29 $$ simpUser.addSession(sessionId)[ FD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_7 $$ if (event instanceof SessionSubscribeEvent) [ FD ]
Line_24 $$ DefaultSimpUser simpUser = this.users.get(name)-->Line_25 $$ if (simpUser == null) [ FD ]
Line_3 $$ AbstractSubProtocolEvent subProtocolEvent = (AbstractSubProtocolEvent) event-->Line_4 $$ Message<?> message = subProtocolEvent.getMessage()[ FD ]
Line_33 $$ if (event instanceof SessionDisconnectEvent) -->Line_44 $$ if (event instanceof SessionUnsubscribeEvent) [ CD ]
Line_11 $$ String destination = accessor.getDestination()-->Line_12 $$ session.addSubscription(id, destination)[ FD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_3 $$ AbstractSubProtocolEvent subProtocolEvent = (AbstractSubProtocolEvent) event[ CD ]
Line_19 $$ String name = user.getName()-->Line_27 $$ this.users.put(name, simpUser)[ FD ]
Line_19 $$ String name = user.getName()-->Line_21 $$ name = ((DestinationUserNameProvider) user).getDestinationUserName()[ FD ]
Line_46 $$ if (session != null) -->Line_47 $$ String subscriptionId = accessor.getSubscriptionId()[ CD ]
Line_46 $$ if (session != null) -->Line_48 $$ session.removeSubscription(subscriptionId)[ CD ]
Line_24 $$ DefaultSimpUser simpUser = this.users.get(name)-->Line_27 $$ this.users.put(name, simpUser)[ FD ]
Line_15 $$ Principal user = subProtocolEvent.getUser()-->Line_38 $$ user.removeSession(sessionId)[ FD ]
Line_6 $$ String sessionId = accessor.getSessionId()-->Line_35 $$ DefaultSimpSession session = this.sessions.remove(sessionId)[ FD ]
Line_19 $$ String name = user.getName()-->Line_24 $$ DefaultSimpUser simpUser = this.users.get(name)[ FD ]
Line_5 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class)-->Line_47 $$ String subscriptionId = accessor.getSubscriptionId()[ FD ]
Line_4 $$ Message<?> message = subProtocolEvent.getMessage()-->Line_5 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class)[ FD ]
Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)-->Line_9 $$ if (session != null) [ FD ]
Line_7 $$ if (event instanceof SessionSubscribeEvent) -->Line_14 $$ if (event instanceof SessionConnectedEvent) [ CD ]
Line_24 $$ DefaultSimpUser simpUser = this.users.get(name)-->Line_26 $$ simpUser = new DefaultSimpUser(name, sessionId)[ FD ]
Line_26 $$ simpUser = new DefaultSimpUser(name, sessionId)-->Line_31 $$ this.sessions.put(sessionId, (DefaultSimpSession) simpUser.getSession(sessionId))[ FD ]
Line_6 $$ String sessionId = accessor.getSessionId()-->Line_38 $$ user.removeSession(sessionId)[ FD ]
Line_36 $$ if (session != null) -->Line_39 $$ if (!user.hasSessions()) [ CD ]
Line_44 $$ if (event instanceof SessionUnsubscribeEvent) -->Line_45 $$ DefaultSimpSession session = this.sessions.get(sessionId)[ CD ]
Line_15 $$ Principal user = subProtocolEvent.getUser()-->Line_40 $$ this.users.remove(user.getName())[ FD ]
Line_5 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class)-->Line_6 $$ String sessionId = accessor.getSessionId()[ FD ]
Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)-->Line_12 $$ session.addSubscription(id, destination)[ FD ]
Line_9 $$ if (session != null) -->Line_12 $$ session.addSubscription(id, destination)[ CD ]
Line_9 $$ if (session != null) -->Line_11 $$ String destination = accessor.getDestination()[ CD ]
Line_15 $$ Principal user = subProtocolEvent.getUser()-->Line_20 $$ if (user instanceof DestinationUserNameProvider) [ FD ]
Line_25 $$ if (simpUser == null) -->Line_26 $$ simpUser = new DefaultSimpUser(name, sessionId)[ CD ]
Line_5 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class)-->Line_11 $$ String destination = accessor.getDestination()[ FD ]
Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)-->Line_48 $$ session.removeSubscription(subscriptionId)[ FD ]
Line_21 $$ name = ((DestinationUserNameProvider) user).getDestinationUserName()-->Line_24 $$ DefaultSimpUser simpUser = this.users.get(name)[ FD ]
Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)-->Line_37 $$ DefaultSimpUser user = session.getUser()[ FD ]
Line_36 $$ if (session != null) -->Line_37 $$ DefaultSimpUser user = session.getUser()[ CD ]
Line_14 $$ if (event instanceof SessionConnectedEvent) -->Line_15 $$ Principal user = subProtocolEvent.getUser()[ CD ]
Line_44 $$ if (event instanceof SessionUnsubscribeEvent) -->Line_46 $$ if (session != null) [ CD ]
Line_10 $$ String id = accessor.getSubscriptionId()-->Line_12 $$ session.addSubscription(id, destination)[ FD ]
Line_14 $$ if (event instanceof SessionConnectedEvent) -->Line_20 $$ if (user instanceof DestinationUserNameProvider) [ CD ]
Line_26 $$ simpUser = new DefaultSimpUser(name, sessionId)-->Line_27 $$ this.users.put(name, simpUser)[ FD ]
Line_15 $$ Principal user = subProtocolEvent.getUser()-->Line_39 $$ if (!user.hasSessions()) [ FD ]
Line_2 $$ public void onApplicationEvent(ApplicationEvent event) -->Line_7 $$ if (event instanceof SessionSubscribeEvent) [ CD ]
Line_6 $$ String sessionId = accessor.getSessionId()-->Line_29 $$ simpUser.addSession(sessionId)[ FD ]
Line_24 $$ DefaultSimpUser simpUser = this.users.get(name)-->Line_31 $$ this.sessions.put(sessionId, (DefaultSimpSession) simpUser.getSession(sessionId))[ FD ]
Line_15 $$ Principal user = subProtocolEvent.getUser()-->Line_16 $$ if (user == null) [ FD ]
Line_14 $$ if (event instanceof SessionConnectedEvent) -->Line_16 $$ if (user == null) [ CD ]
Line_36 $$ if (session != null) -->Line_38 $$ user.removeSession(sessionId)[ CD ]
Line_39 $$ if (!user.hasSessions()) -->Line_40 $$ this.users.remove(user.getName())[ CD ]
Line_24 $$ DefaultSimpUser simpUser = this.users.get(name)-->Line_29 $$ simpUser.addSession(sessionId)[ FD ]
Line_8 $$ DefaultSimpSession session = this.sessions.get(sessionId)-->Line_46 $$ if (session != null) [ FD ]
Line_5 $$ SimpMessageHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, SimpMessageHeaderAccessor.class)-->Line_10 $$ String id = accessor.getSubscriptionId()[ FD ]
Line_3 $$ AbstractSubProtocolEvent subProtocolEvent = (AbstractSubProtocolEvent) event-->Line_15 $$ Principal user = subProtocolEvent.getUser()[ FD ]
Line_16 $$ if (user == null) -->Line_17 $$ return[ CD ]
