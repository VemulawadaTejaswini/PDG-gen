Line_2 $$ public synchronized void stopCurrentMasterNode() throws IOException -->Line_8 $$ removeDisruptionSchemeFromNode(nodes.get(masterNodeName))[ CD ]
Line_2 $$ public synchronized void stopCurrentMasterNode() throws IOException -->Line_3 $$ ensureOpen()[ CD ]
Line_5 $$ String masterNodeName = getMasterName()-->Line_6 $$ assert nodes.containsKey(masterNodeName)[ FD ]
Line_2 $$ public synchronized void stopCurrentMasterNode() throws IOException -->Line_9 $$ NodeAndClient remove = nodes.remove(masterNodeName)[ CD ]
Line_2 $$ public synchronized void stopCurrentMasterNode() throws IOException -->Line_10 $$ remove.close()[ CD ]
Line_2 $$ public synchronized void stopCurrentMasterNode() throws IOException -->Line_5 $$ String masterNodeName = getMasterName()[ CD ]
Line_5 $$ String masterNodeName = getMasterName()-->Line_8 $$ removeDisruptionSchemeFromNode(nodes.get(masterNodeName))[ FD ]
Line_5 $$ String masterNodeName = getMasterName()-->Line_9 $$ NodeAndClient remove = nodes.remove(masterNodeName)[ FD ]
Line_5 $$ String masterNodeName = getMasterName()-->Line_7 $$ logger.info("Closing master node [[ FD ]
Line_2 $$ public synchronized void stopCurrentMasterNode() throws IOException -->Line_7 $$ logger.info("Closing master node [[ CD ]
Line_9 $$ NodeAndClient remove = nodes.remove(masterNodeName)-->Line_10 $$ remove.close()[ FD ]
