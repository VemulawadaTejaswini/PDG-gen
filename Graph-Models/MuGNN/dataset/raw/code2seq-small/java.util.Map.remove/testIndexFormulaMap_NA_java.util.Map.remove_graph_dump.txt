Line_6 $$ User turin = new User("turin", "tiger")-->Line_9 $$ g.getUsers().put("turin", turin)[ FD ]
Line_15 $$ s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_36 $$ s = openSession()-->Line_45 $$ s.delete(turin)[ FD ]
Line_36 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_19 $$ g.getUsers().remove("turin")[ FD ]
Line_15 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_11 $$ gavin.getSession().put("foo", new SessionAttribute("foo", "foo bar baz"))[ CD ]
Line_16 $$ t = s.beginTransaction()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_27 $$ g = (Group) s.get(Group.class, "developers")-->Line_44 $$ s.delete(g)[ FD ]
Line_15 $$ s = openSession()-->Line_33 $$ assertEquals(s.createQuery("select count(*) from SessionAttribute").uniqueResult(), new Long(0))[ FD ]
Line_25 $$ s = openSession()-->Line_45 $$ s.delete(turin)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_21 $$ assertEquals(smap.size(), 2)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_13 $$ t.commit()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_17 $$ g = (Group) s.get(Group.class, "developers")[ CD ]
Line_25 $$ s = openSession()-->Line_43 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(1))[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_10 $$ s.persist(g)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_28 $$ assertEquals(g.getUsers().size(), 1)[ CD ]
Line_26 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_27 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_48 $$ s.close()[ CD ]
Line_7 $$ Group g = new Group("developers")-->Line_39 $$ assertEquals(g.getUsers().size(), 1)[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_31 $$ gavin = (User) g.getUsers().put("gavin", turin)[ FD ]
Line_25 $$ s = openSession()-->Line_46 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(0))[ FD ]
Line_25 $$ s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_31 $$ gavin = (User) g.getUsers().put("gavin", turin)[ CD ]
Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_22 $$ smap.remove("bar")[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_40 $$ turin = (User) g.getUsers().get("turin")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_18 $$ assertEquals(g.getUsers().size(), 2)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_34 $$ t.commit()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_34 $$ t.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ s.delete(g)[ FD ]
Line_25 $$ s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_6 $$ User turin = new User("turin", "tiger")-->Line_45 $$ s.delete(turin)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_23 $$ t.commit()[ CD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_31 $$ gavin = (User) g.getUsers().put("gavin", turin)-->Line_32 $$ s.delete(gavin)[ FD ]
Line_5 $$ User gavin = new User("gavin", "secret")-->Line_12 $$ gavin.getSession().put("bar", new SessionAttribute("bar", "foo bar baz 2"))[ FD ]
Line_15 $$ s = openSession()-->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ s = openSession()-->Line_27 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_13 $$ t.commit()[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_14 $$ s.close()[ CD ]
Line_15 $$ s = openSession()-->Line_32 $$ s.delete(gavin)[ FD ]
Line_5 $$ User gavin = new User("gavin", "secret")-->Line_11 $$ gavin.getSession().put("foo", new SessionAttribute("foo", "foo bar baz"))[ FD ]
Line_40 $$ turin = (User) g.getUsers().get("turin")-->Line_45 $$ s.delete(turin)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_16 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_10 $$ s.persist(g)[ CD ]
Line_25 $$ s = openSession()-->Line_36 $$ s = openSession()[ FD ]
Line_6 $$ User turin = new User("turin", "tiger")-->Line_40 $$ turin = (User) g.getUsers().get("turin")[ FD ]
Line_27 $$ g = (Group) s.get(Group.class, "developers")-->Line_31 $$ gavin = (User) g.getUsers().put("gavin", turin)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_22 $$ smap.remove("bar")[ CD ]
Line_25 $$ s = openSession()-->Line_27 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_36 $$ s = openSession()-->Line_43 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(1))[ FD ]
Line_38 $$ g = (Group) s.get(Group.class, "developers")-->Line_44 $$ s.delete(g)[ FD ]
Line_37 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_18 $$ assertEquals(g.getUsers().size(), 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.persist(g)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_27 $$ g = (Group) s.get(Group.class, "developers")[ CD ]
Line_6 $$ User turin = new User("turin", "tiger")-->Line_41 $$ smap = turin.getSession()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_8 $$ g.getUsers().put("gavin", gavin)[ CD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s = openSession()[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_47 $$ t.commit()[ FD ]
Line_41 $$ smap = turin.getSession()-->Line_42 $$ assertEquals(smap.size(), 0)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_41 $$ smap = turin.getSession()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_43 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(1))[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_7 $$ Group g = new Group("developers")[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_5 $$ User gavin = new User("gavin", "secret")[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_25 $$ s = openSession()[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_3 $$ Session s = openSession()[ CD ]
Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_42 $$ assertEquals(smap.size(), 0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_14 $$ s.close()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_44 $$ s.delete(g)[ CD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_41 $$ smap = turin.getSession()[ CD ]
Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_42 $$ assertEquals(smap.size(), 0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_26 $$ t = s.beginTransaction()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_27 $$ g = (Group) s.get(Group.class, "developers")-->Line_39 $$ assertEquals(g.getUsers().size(), 1)[ FD ]
Line_36 $$ s = openSession()-->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_19 $$ g.getUsers().remove("turin")[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_35 $$ s.close()[ CD ]
Line_15 $$ s = openSession()-->Line_45 $$ s.delete(turin)[ FD ]
Line_3 $$ Session s = openSession()-->Line_46 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(0))[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_28 $$ assertEquals(g.getUsers().size(), 1)[ FD ]
Line_25 $$ s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ s = openSession()-->Line_36 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_48 $$ s.close()[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_27 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_37 $$ t = s.beginTransaction()[ CD ]
Line_15 $$ s = openSession()-->Line_44 $$ s.delete(g)[ FD ]
Line_15 $$ s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_15 $$ s = openSession()-->Line_17 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_30 $$ assertEquals(smap.size(), 1)[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_46 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(0))[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_9 $$ g.getUsers().put("turin", turin)[ CD ]
Line_27 $$ g = (Group) s.get(Group.class, "developers")-->Line_28 $$ assertEquals(g.getUsers().size(), 1)[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_44 $$ s.delete(g)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_39 $$ assertEquals(g.getUsers().size(), 1)[ CD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ s.delete(turin)[ FD ]
Line_25 $$ s = openSession()-->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_6 $$ User turin = new User("turin", "tiger")[ CD ]
Line_7 $$ Group g = new Group("developers")-->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_32 $$ s.delete(gavin)[ CD ]
Line_25 $$ s = openSession()-->Line_33 $$ assertEquals(s.createQuery("select count(*) from SessionAttribute").uniqueResult(), new Long(0))[ FD ]
Line_5 $$ User gavin = new User("gavin", "secret")-->Line_31 $$ gavin = (User) g.getUsers().put("gavin", turin)[ FD ]
Line_27 $$ g = (Group) s.get(Group.class, "developers")-->Line_40 $$ turin = (User) g.getUsers().get("turin")[ FD ]
Line_15 $$ s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_27 $$ g = (Group) s.get(Group.class, "developers")-->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_38 $$ g = (Group) s.get(Group.class, "developers")-->Line_39 $$ assertEquals(g.getUsers().size(), 1)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_40 $$ turin = (User) g.getUsers().get("turin")[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_15 $$ s = openSession()[ CD ]
Line_5 $$ User gavin = new User("gavin", "secret")-->Line_8 $$ g.getUsers().put("gavin", gavin)[ FD ]
Line_26 $$ t = s.beginTransaction()-->Line_34 $$ t.commit()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_38 $$ g = (Group) s.get(Group.class, "developers")[ CD ]
Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_21 $$ assertEquals(smap.size(), 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ s = openSession()[ FD ]
Line_36 $$ s = openSession()-->Line_46 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(0))[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_17 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_19 $$ g.getUsers().remove("turin")[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_47 $$ t.commit()[ CD ]
Line_15 $$ s = openSession()-->Line_25 $$ s = openSession()[ FD ]
Line_15 $$ s = openSession()-->Line_46 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(0))[ FD ]
Line_6 $$ User turin = new User("turin", "tiger")-->Line_31 $$ gavin = (User) g.getUsers().put("gavin", turin)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_42 $$ assertEquals(smap.size(), 0)[ CD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_12 $$ gavin.getSession().put("bar", new SessionAttribute("bar", "foo bar baz 2"))[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_23 $$ t.commit()[ FD ]
Line_36 $$ s = openSession()-->Line_44 $$ s.delete(g)[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_44 $$ s.delete(g)[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_8 $$ g.getUsers().put("gavin", gavin)[ FD ]
Line_15 $$ s = openSession()-->Line_43 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(1))[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_18 $$ assertEquals(g.getUsers().size(), 2)[ FD ]
Line_15 $$ s = openSession()-->Line_24 $$ s.close()[ FD ]
Line_25 $$ s = openSession()-->Line_32 $$ s.delete(gavin)[ FD ]
Line_15 $$ s = openSession()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_25 $$ s = openSession()-->Line_44 $$ s.delete(g)[ FD ]
Line_3 $$ Session s = openSession()-->Line_43 $$ assertEquals(s.createQuery("select count(*) from User").uniqueResult(), new Long(1))[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_36 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ assertEquals(s.createQuery("select count(*) from SessionAttribute").uniqueResult(), new Long(0))[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ s.delete(gavin)[ FD ]
Line_3 $$ Session s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_45 $$ s.delete(turin)[ CD ]
Line_36 $$ s = openSession()-->Line_37 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_26 $$ t = s.beginTransaction()[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_24 $$ s.close()[ CD ]
Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_34 $$ t.commit()[ FD ]
Line_17 $$ g = (Group) s.get(Group.class, "developers")-->Line_39 $$ assertEquals(g.getUsers().size(), 1)[ FD ]
Line_20 $$ Map smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_30 $$ assertEquals(smap.size(), 1)[ FD ]
Line_27 $$ g = (Group) s.get(Group.class, "developers")-->Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ g = (Group) s.get(Group.class, "developers")[ FD ]
Line_5 $$ User gavin = new User("gavin", "secret")-->Line_32 $$ s.delete(gavin)[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ s = openSession()[ FD ]
Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_41 $$ smap = turin.getSession()[ FD ]
Line_40 $$ turin = (User) g.getUsers().get("turin")-->Line_41 $$ smap = turin.getSession()[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_28 $$ assertEquals(g.getUsers().size(), 1)[ FD ]
Line_29 $$ smap = ((User) g.getUsers().get("gavin")).getSession()-->Line_30 $$ assertEquals(smap.size(), 1)[ FD ]
Line_2 $$ public void testIndexFormulaMap() -->Line_33 $$ assertEquals(s.createQuery("select count(*) from SessionAttribute").uniqueResult(), new Long(0))[ CD ]
Line_7 $$ Group g = new Group("developers")-->Line_9 $$ g.getUsers().put("turin", turin)[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_31 $$ gavin = (User) g.getUsers().put("gavin", turin)[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_23 $$ t.commit()[ FD ]
Line_7 $$ Group g = new Group("developers")-->Line_40 $$ turin = (User) g.getUsers().get("turin")[ FD ]
Line_16 $$ t = s.beginTransaction()-->Line_26 $$ t = s.beginTransaction()[ FD ]
Line_38 $$ g = (Group) s.get(Group.class, "developers")-->Line_40 $$ turin = (User) g.getUsers().get("turin")[ FD ]
