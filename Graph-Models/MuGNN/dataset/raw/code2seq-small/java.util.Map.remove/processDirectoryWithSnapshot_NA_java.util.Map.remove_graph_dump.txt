Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_16 $$ final int numSubTree = in.readInt()[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_5 $$ Boolean visitedRef = subtreeMap.get(inodeId)[ CD ]
Line_5 $$ Boolean visitedRef = subtreeMap.get(inodeId)-->Line_7 $$ if (visitedRef.booleanValue()) [ FD ]
Line_4 $$ String dirName = dirNodeMap.remove(inodeId)-->Line_13 $$ processSnapshots(in, v, dirName)[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_13 $$ processSnapshots(in, v, dirName)[ FD ]
Line_3 $$ long inodeId = in.readLong()-->Line_5 $$ Boolean visitedRef = subtreeMap.get(inodeId)[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_6 $$ if (visitedRef != null) [ CD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_17 $$ for (int i = 0; i < numSubTree; i++) [ CD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_14 $$ processChildren(in, v, skipBlocks, dirName)[ CD ]
Line_3 $$ long inodeId = in.readLong()-->Line_4 $$ String dirName = dirNodeMap.remove(inodeId)[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_18 $$ processDirectoryWithSnapshot(in, v, skipBlocks)[ FD ]
Line_4 $$ String dirName = dirNodeMap.remove(inodeId)-->Line_14 $$ processChildren(in, v, skipBlocks, dirName)[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_3 $$ long inodeId = in.readLong()[ CD ]
Line_3 $$ long inodeId = in.readLong()-->Line_10 $$ subtreeMap.put(inodeId, true)[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_15 $$ processDirectoryDiffList(in, v, dirName)[ CD ]
Line_4 $$ String dirName = dirNodeMap.remove(inodeId)-->Line_15 $$ processDirectoryDiffList(in, v, dirName)[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_14 $$ processChildren(in, v, skipBlocks, dirName)[ FD ]
Line_6 $$ if (visitedRef != null) -->Line_7 $$ if (visitedRef.booleanValue()) [ CD ]
Line_7 $$ if (visitedRef.booleanValue()) -->Line_8 $$ return[ CD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_13 $$ processSnapshots(in, v, dirName)[ CD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_4 $$ String dirName = dirNodeMap.remove(inodeId)[ CD ]
Line_17 $$ for (int i = 0; i < numSubTree; i++) -->Line_18 $$ processDirectoryWithSnapshot(in, v, skipBlocks)[ CD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_15 $$ processDirectoryDiffList(in, v, dirName)[ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_16 $$ final int numSubTree = in.readInt()[ CD ]
Line_5 $$ Boolean visitedRef = subtreeMap.get(inodeId)-->Line_6 $$ if (visitedRef != null) [ FD ]
Line_16 $$ final int numSubTree = in.readInt()-->Line_17 $$ for (int i = 0; i < numSubTree; i++) [ FD ]
Line_2 $$ private void processDirectoryWithSnapshot(DataInputStream in, ImageVisitor v, boolean skipBlocks) throws IOException -->Line_3 $$ long inodeId = in.readLong()[ FD ]
Line_7 $$ if (visitedRef.booleanValue()) -->Line_10 $$ subtreeMap.put(inodeId, true)[ CD ]
