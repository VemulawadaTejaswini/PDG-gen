Line_7 $$ Iterator<Entry<K, ValueWrapper>> itr = valueWrappers.iterator()-->Line_9 $$ Entry<K, ValueWrapper> entry = itr.next()[ FD ]
Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) -->Line_13 $$ onRemove(key, value)[ CD ]
Line_5 $$ int cleanUpSize = _cache.size() - _expectedSize-->Line_6 $$ _evictCount.getAndAdd(cleanUpSize)[ FD ]
Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) -->Line_12 $$ _cache.remove(key)[ CD ]
Line_3 $$ List<Entry<K, ValueWrapper>> valueWrappers = new ArrayList(_cache.entrySet())-->Line_4 $$ Collections.sort(valueWrappers, _entryComparator)[ FD ]
Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) -->Line_14 $$ itr.remove()[ CD ]
Line_2 $$ private void _cleanUp() -->Line_6 $$ _evictCount.getAndAdd(cleanUpSize)[ CD ]
Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) -->Line_9 $$ Entry<K, ValueWrapper> entry = itr.next()[ CD ]
Line_2 $$ private void _cleanUp() -->Line_5 $$ int cleanUpSize = _cache.size() - _expectedSize[ CD ]
Line_10 $$ K key = entry.getKey()-->Line_13 $$ onRemove(key, value)[ FD ]
Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) -->Line_10 $$ K key = entry.getKey()[ CD ]
Line_9 $$ Entry<K, ValueWrapper> entry = itr.next()-->Line_10 $$ K key = entry.getKey()[ FD ]
Line_2 $$ private void _cleanUp() -->Line_3 $$ List<Entry<K, ValueWrapper>> valueWrappers = new ArrayList(_cache.entrySet())[ CD ]
Line_2 $$ private void _cleanUp() -->Line_4 $$ Collections.sort(valueWrappers, _entryComparator)[ CD ]
Line_3 $$ List<Entry<K, ValueWrapper>> valueWrappers = new ArrayList(_cache.entrySet())-->Line_7 $$ Iterator<Entry<K, ValueWrapper>> itr = valueWrappers.iterator()[ FD ]
Line_7 $$ Iterator<Entry<K, ValueWrapper>> itr = valueWrappers.iterator()-->Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) [ FD ]
Line_11 $$ V value = entry.getValue()._value-->Line_13 $$ onRemove(key, value)[ FD ]
Line_7 $$ Iterator<Entry<K, ValueWrapper>> itr = valueWrappers.iterator()-->Line_14 $$ itr.remove()[ FD ]
Line_2 $$ private void _cleanUp() -->Line_7 $$ Iterator<Entry<K, ValueWrapper>> itr = valueWrappers.iterator()[ CD ]
Line_9 $$ Entry<K, ValueWrapper> entry = itr.next()-->Line_11 $$ V value = entry.getValue()._value[ FD ]
Line_2 $$ private void _cleanUp() -->Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) [ CD ]
Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) -->Line_11 $$ V value = entry.getValue()._value[ CD ]
Line_10 $$ K key = entry.getKey()-->Line_12 $$ _cache.remove(key)[ FD ]
Line_5 $$ int cleanUpSize = _cache.size() - _expectedSize-->Line_8 $$ while ((cleanUpSize-- > 0) && itr.hasNext()) [ FD ]
