Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_38 $$ updateFileLastModified(path, servlet)[ FD ]
Line_21 $$ for (String dependant : dependants) -->Line_25 $$ _dependantTimestamps.put(dependant, lastModified)[ FD ]
Line_31 $$ if (_log.isDebugEnabled()) -->Line_32 $$ _log.debug("Reload dependant " + dependant)[ CD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_10 $$ Map<String, ?> dependantsMap = (Map<String, ?>) method.invoke(servlet)[ FD ]
Line_24 $$ if (previousLastModified == null) -->Line_26 $$ previousLastModified = lastModified[ CD ]
Line_10 $$ Map<String, ?> dependantsMap = (Map<String, ?>) method.invoke(servlet)-->Line_11 $$ if (dependantsMap != null) [ FD ]
Line_11 $$ if (dependantsMap != null) -->Line_12 $$ dependants = dependantsMap.keySet()[ CD ]
Line_22 $$ long lastModified = getFileLastModified(dependant, servlet)-->Line_26 $$ previousLastModified = lastModified[ FD ]
Line_42 $$ if (_log.isWarnEnabled()) -->Line_43 $$ _log.warn("Reloading of dependant JSP is disabled because your " + "Servlet container is not a variant of Jasper")[ CD ]
Line_20 $$ boolean reloadServlet = false-->Line_29 $$ reloadServlet = true[ FD ]
Line_24 $$ if (previousLastModified == null) -->Line_25 $$ _dependantTimestamps.put(dependant, lastModified)[ CD ]
Line_15 $$ dependants = (List<String>) method.invoke(servlet)-->Line_17 $$ if (dependants == null) [ FD ]
Line_9 $$ if (JasperVersionDetector.hasJspServletDependantsMap()) -->Line_15 $$ dependants = (List<String>) method.invoke(servlet)[ CD ]
Line_23 $$ Long previousLastModified = _dependantTimestamps.get(dependant)-->Line_28 $$ if ((lastModified == 0) || (lastModified != previousLastModified.longValue())) [ FD ]
Line_8 $$ Collection<String> dependants = null-->Line_17 $$ if (dependants == null) [ FD ]
Line_3 $$ if (!_reloadDependants) -->Line_4 $$ return servlet[ CD ]
Line_28 $$ if ((lastModified == 0) || (lastModified != previousLastModified.longValue())) -->Line_31 $$ if (_log.isDebugEnabled()) [ CD ]
Line_36 $$ if (reloadServlet) -->Line_37 $$ _servletInfos.remove(path)[ CD ]
Line_21 $$ for (String dependant : dependants) -->Line_22 $$ long lastModified = getFileLastModified(dependant, servlet)[ FD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_3 $$ if (!_reloadDependants) [ CD ]
Line_7 $$ Method method = ReflectionUtil.getDeclaredMethod(servlet.getClass(), "getDependants")-->Line_10 $$ Map<String, ?> dependantsMap = (Map<String, ?>) method.invoke(servlet)[ FD ]
Line_7 $$ Method method = ReflectionUtil.getDeclaredMethod(servlet.getClass(), "getDependants")-->Line_15 $$ dependants = (List<String>) method.invoke(servlet)[ FD ]
Line_23 $$ Long previousLastModified = _dependantTimestamps.get(dependant)-->Line_26 $$ previousLastModified = lastModified[ FD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_7 $$ Method method = ReflectionUtil.getDeclaredMethod(servlet.getClass(), "getDependants")[ FD ]
Line_9 $$ if (JasperVersionDetector.hasJspServletDependantsMap()) -->Line_10 $$ Map<String, ?> dependantsMap = (Map<String, ?>) method.invoke(servlet)[ CD ]
Line_23 $$ Long previousLastModified = _dependantTimestamps.get(dependant)-->Line_24 $$ if (previousLastModified == null) [ FD ]
Line_8 $$ Collection<String> dependants = null-->Line_12 $$ dependants = dependantsMap.keySet()[ FD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_22 $$ long lastModified = getFileLastModified(dependant, servlet)[ FD ]
Line_22 $$ long lastModified = getFileLastModified(dependant, servlet)-->Line_25 $$ _dependantTimestamps.put(dependant, lastModified)[ FD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_15 $$ dependants = (List<String>) method.invoke(servlet)[ FD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_37 $$ _servletInfos.remove(path)[ FD ]
Line_12 $$ dependants = dependantsMap.keySet()-->Line_15 $$ dependants = (List<String>) method.invoke(servlet)[ FD ]
Line_9 $$ if (JasperVersionDetector.hasJspServletDependantsMap()) -->Line_11 $$ if (dependantsMap != null) [ CD ]
Line_21 $$ for (String dependant : dependants) -->Line_30 $$ _dependantTimestamps.put(dependant, lastModified)[ FD ]
Line_22 $$ long lastModified = getFileLastModified(dependant, servlet)-->Line_30 $$ _dependantTimestamps.put(dependant, lastModified)[ FD ]
Line_8 $$ Collection<String> dependants = null-->Line_15 $$ dependants = (List<String>) method.invoke(servlet)[ FD ]
Line_21 $$ for (String dependant : dependants) -->Line_23 $$ Long previousLastModified = _dependantTimestamps.get(dependant)[ FD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_39 $$ servlet = null[ FD ]
Line_28 $$ if ((lastModified == 0) || (lastModified != previousLastModified.longValue())) -->Line_30 $$ _dependantTimestamps.put(dependant, lastModified)[ CD ]
Line_36 $$ if (reloadServlet) -->Line_39 $$ servlet = null[ CD ]
Line_28 $$ if ((lastModified == 0) || (lastModified != previousLastModified.longValue())) -->Line_29 $$ reloadServlet = true[ CD ]
Line_26 $$ previousLastModified = lastModified-->Line_28 $$ if ((lastModified == 0) || (lastModified != previousLastModified.longValue())) [ FD ]
Line_10 $$ Map<String, ?> dependantsMap = (Map<String, ?>) method.invoke(servlet)-->Line_12 $$ dependants = dependantsMap.keySet()[ FD ]
Line_36 $$ if (reloadServlet) -->Line_38 $$ updateFileLastModified(path, servlet)[ CD ]
Line_17 $$ if (dependants == null) -->Line_18 $$ return servlet[ CD ]
Line_12 $$ dependants = dependantsMap.keySet()-->Line_17 $$ if (dependants == null) [ FD ]
Line_2 $$ protected Servlet reloadDependants(String path, Servlet servlet, ServletInfo servletInfo) -->Line_49 $$ return servlet[ CD ]
