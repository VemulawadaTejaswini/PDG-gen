Line_33 $$ if (numBlocks == -1) -->Line_50 $$ if (numBlocks == -2) [ CD ]
Line_21 $$ if (supportSnapshot) -->Line_24 $$ if (isSnapshotCopy) [ CD ]
Line_62 $$ if (firstReferred) -->Line_64 $$ v.visitEnclosingElement(ImageElement.SNAPSHOT_REF_INODE)[ CD ]
Line_33 $$ if (numBlocks == -1) -->Line_34 $$ if (supportSnapshot && supportInodeId) [ CD ]
Line_53 $$ if (numBlocks == -3) -->Line_61 $$ final boolean firstReferred = in.readBoolean()[ CD ]
Line_21 $$ if (supportSnapshot) -->Line_23 $$ processFileDiffList(in, v, parentName)[ CD ]
Line_8 $$ long inodeId = INodeId.GRANDFATHER_INODE_ID-->Line_10 $$ inodeId = in.readLong()[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_16 $$ v.visit(ImageElement.ACCESS_TIME, formatDate(in.readLong()))[ FD ]
Line_53 $$ if (numBlocks == -3) -->Line_55 $$ int snapshotId = in.readInt()[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_68 $$ v.visit(ImageElement.SNAPSHOT_REF_INODE_ID, in.readLong())[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_11 $$ v.visit(ImageElement.INODE_ID, inodeId)[ FD ]
Line_9 $$ if (supportInodeId) -->Line_10 $$ inodeId = in.readLong()[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_65 $$ processINode(in, v, skipBlocks, parentName, isSnapshotCopy)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_54 $$ final boolean isWithName = in.readBoolean()[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_13 $$ v.visit(ImageElement.REPLICATION, in.readShort())[ CD ]
Line_4 $$ boolean supportInodeId = NameNodeLayoutVersion.supports(Feature.ADD_INODE_ID, imageVersion)-->Line_34 $$ if (supportSnapshot && supportInodeId) [ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_37 $$ v.visit(ImageElement.NS_QUOTA, numBlocks == -1 ? in.readLong() : -1)[ FD ]
Line_8 $$ long inodeId = INodeId.GRANDFATHER_INODE_ID-->Line_35 $$ dirNodeMap.put(inodeId, pathName)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_14 $$ v.visit(ImageElement.MODIFICATION_TIME, formatDate(in.readLong()))[ CD ]
Line_18 $$ int numBlocks = in.readInt()-->Line_50 $$ if (numBlocks == -2) [ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_19 $$ processBlocks(in, v, numBlocks, skipBlocks)[ FD ]
Line_18 $$ int numBlocks = in.readInt()-->Line_19 $$ processBlocks(in, v, numBlocks, skipBlocks)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_55 $$ int snapshotId = in.readInt()[ FD ]
Line_42 $$ if (!snapshottable) -->Line_46 $$ v.visit(ImageElement.IS_SNAPSHOTTABLE_DIR, Boolean.toString(snapshottable))[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_10 $$ inodeId = in.readLong()[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_18 $$ int numBlocks = in.readInt()[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_4 $$ boolean supportInodeId = NameNodeLayoutVersion.supports(Feature.ADD_INODE_ID, imageVersion)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_46 $$ v.visit(ImageElement.IS_SNAPSHOTTABLE_DIR, Boolean.toString(snapshottable))[ FD ]
Line_6 $$ final String pathName = readINodePath(in, parentName)-->Line_35 $$ dirNodeMap.put(inodeId, pathName)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_41 $$ boolean snapshottable = in.readBoolean()[ FD ]
Line_55 $$ int snapshotId = in.readInt()-->Line_59 $$ v.visit(ImageElement.SNAPSHOT_DST_SNAPSHOT_ID, snapshotId)[ FD ]
Line_10 $$ inodeId = in.readLong()-->Line_63 $$ subtreeMap.put(inodeId, false)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_5 $$ v.visitEnclosingElement(ImageElement.INODE)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_13 $$ v.visit(ImageElement.REPLICATION, in.readShort())[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_25 $$ boolean underConstruction = in.readBoolean()[ FD ]
Line_55 $$ int snapshotId = in.readInt()-->Line_57 $$ v.visit(ImageElement.SNAPSHOT_LAST_SNAPSHOT_ID, snapshotId)[ FD ]
Line_33 $$ if (numBlocks == -1) -->Line_40 $$ if (supportSnapshot) [ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_49 $$ processPermission(in, v)[ FD ]
Line_40 $$ if (supportSnapshot) -->Line_42 $$ if (!snapshottable) [ CD ]
Line_3 $$ boolean supportSnapshot = NameNodeLayoutVersion.supports(Feature.SNAPSHOT, imageVersion)-->Line_34 $$ if (supportSnapshot && supportInodeId) [ FD ]
Line_24 $$ if (isSnapshotCopy) -->Line_26 $$ if (underConstruction) [ CD ]
Line_8 $$ long inodeId = INodeId.GRANDFATHER_INODE_ID-->Line_11 $$ v.visit(ImageElement.INODE_ID, inodeId)[ FD ]
Line_8 $$ long inodeId = INodeId.GRANDFATHER_INODE_ID-->Line_22 $$ subtreeMap.remove(inodeId)[ FD ]
Line_50 $$ if (numBlocks == -2) -->Line_52 $$ processPermission(in, v)[ CD ]
Line_53 $$ if (numBlocks == -3) -->Line_62 $$ if (firstReferred) [ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_51 $$ v.visit(ImageElement.SYMLINK, Text.readString(in))[ FD ]
Line_26 $$ if (underConstruction) -->Line_28 $$ v.visit(ImageElement.CLIENT_MACHINE, FSImageSerialization.readString(in))[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_7 $$ v.visit(ImageElement.INODE_PATH, pathName)[ FD ]
Line_10 $$ inodeId = in.readLong()-->Line_11 $$ v.visit(ImageElement.INODE_ID, inodeId)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_23 $$ processFileDiffList(in, v, parentName)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_44 $$ v.visit(ImageElement.IS_WITHSNAPSHOT_DIR, Boolean.toString(withSnapshot))[ FD ]
Line_56 $$ if (isWithName) -->Line_57 $$ v.visit(ImageElement.SNAPSHOT_LAST_SNAPSHOT_ID, snapshotId)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_6 $$ final String pathName = readINodePath(in, parentName)[ CD ]
Line_42 $$ if (!snapshottable) -->Line_43 $$ boolean withSnapshot = in.readBoolean()[ CD ]
Line_50 $$ if (numBlocks == -2) -->Line_53 $$ if (numBlocks == -3) [ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_6 $$ final String pathName = readINodePath(in, parentName)[ FD ]
Line_33 $$ if (numBlocks == -1) -->Line_49 $$ processPermission(in, v)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_27 $$ v.visit(ImageElement.CLIENT_NAME, FSImageSerialization.readString(in))[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_57 $$ v.visit(ImageElement.SNAPSHOT_LAST_SNAPSHOT_ID, snapshotId)[ FD ]
Line_56 $$ if (isWithName) -->Line_59 $$ v.visit(ImageElement.SNAPSHOT_DST_SNAPSHOT_ID, snapshotId)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_71 $$ v.leaveEnclosingElement()[ CD ]
Line_9 $$ if (supportInodeId) -->Line_11 $$ v.visit(ImageElement.INODE_ID, inodeId)[ CD ]
Line_8 $$ long inodeId = INodeId.GRANDFATHER_INODE_ID-->Line_63 $$ subtreeMap.put(inodeId, false)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_71 $$ v.leaveEnclosingElement()[ FD ]
Line_38 $$ if (NameNodeLayoutVersion.supports(Feature.DISKSPACE_QUOTA, imageVersion))-->Line_39 $$ v.visit(ImageElement.DS_QUOTA, numBlocks == -1 ? in.readLong() : -1)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_8 $$ long inodeId = INodeId.GRANDFATHER_INODE_ID[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_18 $$ int numBlocks = in.readInt()[ CD ]
Line_20 $$ if (numBlocks >= 0) -->Line_33 $$ if (numBlocks == -1) [ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_17 $$ v.visit(ImageElement.BLOCK_SIZE, in.readLong())[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_14 $$ v.visit(ImageElement.MODIFICATION_TIME, formatDate(in.readLong()))[ FD ]
Line_53 $$ if (numBlocks == -3) -->Line_54 $$ final boolean isWithName = in.readBoolean()[ CD ]
Line_10 $$ inodeId = in.readLong()-->Line_22 $$ subtreeMap.remove(inodeId)[ FD ]
Line_15 $$ if (NameNodeLayoutVersion.supports(Feature.FILE_ACCESS_TIME, imageVersion))-->Line_16 $$ v.visit(ImageElement.ACCESS_TIME, formatDate(in.readLong()))[ CD ]
Line_18 $$ int numBlocks = in.readInt()-->Line_20 $$ if (numBlocks >= 0) [ FD ]
Line_53 $$ if (numBlocks == -3) -->Line_56 $$ if (isWithName) [ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_20 $$ if (numBlocks >= 0) [ CD ]
Line_6 $$ final String pathName = readINodePath(in, parentName)-->Line_7 $$ v.visit(ImageElement.INODE_PATH, pathName)[ FD ]
Line_34 $$ if (supportSnapshot && supportInodeId) -->Line_35 $$ dirNodeMap.put(inodeId, pathName)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_66 $$ v.leaveEnclosingElement()[ FD ]
Line_40 $$ if (supportSnapshot) -->Line_41 $$ boolean snapshottable = in.readBoolean()[ CD ]
Line_41 $$ boolean snapshottable = in.readBoolean()-->Line_42 $$ if (!snapshottable) [ FD ]
Line_42 $$ if (!snapshottable) -->Line_44 $$ v.visit(ImageElement.IS_WITHSNAPSHOT_DIR, Boolean.toString(withSnapshot))[ CD ]
Line_62 $$ if (firstReferred) -->Line_63 $$ subtreeMap.put(inodeId, false)[ CD ]
Line_43 $$ boolean withSnapshot = in.readBoolean()-->Line_44 $$ v.visit(ImageElement.IS_WITHSNAPSHOT_DIR, Boolean.toString(withSnapshot))[ FD ]
Line_24 $$ if (isSnapshotCopy) -->Line_25 $$ boolean underConstruction = in.readBoolean()[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_32 $$ processPermission(in, v)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_5 $$ v.visitEnclosingElement(ImageElement.INODE)[ FD ]
Line_62 $$ if (firstReferred) -->Line_65 $$ processINode(in, v, skipBlocks, parentName, isSnapshotCopy)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_3 $$ boolean supportSnapshot = NameNodeLayoutVersion.supports(Feature.SNAPSHOT, imageVersion)[ CD ]
Line_50 $$ if (numBlocks == -2) -->Line_51 $$ v.visit(ImageElement.SYMLINK, Text.readString(in))[ CD ]
Line_33 $$ if (numBlocks == -1) -->Line_38 $$ if (NameNodeLayoutVersion.supports(Feature.DISKSPACE_QUOTA, imageVersion))[ CD ]
Line_41 $$ boolean snapshottable = in.readBoolean()-->Line_46 $$ v.visit(ImageElement.IS_SNAPSHOTTABLE_DIR, Boolean.toString(snapshottable))[ FD ]
Line_62 $$ if (firstReferred) -->Line_66 $$ v.leaveEnclosingElement()[ CD ]
Line_20 $$ if (numBlocks >= 0) -->Line_32 $$ processPermission(in, v)[ CD ]
Line_21 $$ if (supportSnapshot) -->Line_22 $$ subtreeMap.remove(inodeId)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_19 $$ processBlocks(in, v, numBlocks, skipBlocks)[ CD ]
Line_20 $$ if (numBlocks >= 0) -->Line_21 $$ if (supportSnapshot) [ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_61 $$ final boolean firstReferred = in.readBoolean()[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_17 $$ v.visit(ImageElement.BLOCK_SIZE, in.readLong())[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_39 $$ v.visit(ImageElement.DS_QUOTA, numBlocks == -1 ? in.readLong() : -1)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_9 $$ if (supportInodeId) [ CD ]
Line_10 $$ inodeId = in.readLong()-->Line_35 $$ dirNodeMap.put(inodeId, pathName)[ FD ]
Line_62 $$ if (firstReferred) -->Line_68 $$ v.visit(ImageElement.SNAPSHOT_REF_INODE_ID, in.readLong())[ CD ]
Line_18 $$ int numBlocks = in.readInt()-->Line_33 $$ if (numBlocks == -1) [ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_59 $$ v.visit(ImageElement.SNAPSHOT_DST_SNAPSHOT_ID, snapshotId)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_28 $$ v.visit(ImageElement.CLIENT_MACHINE, FSImageSerialization.readString(in))[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_43 $$ boolean withSnapshot = in.readBoolean()[ FD ]
Line_18 $$ int numBlocks = in.readInt()-->Line_53 $$ if (numBlocks == -3) [ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_52 $$ processPermission(in, v)[ FD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_7 $$ v.visit(ImageElement.INODE_PATH, pathName)[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_15 $$ if (NameNodeLayoutVersion.supports(Feature.FILE_ACCESS_TIME, imageVersion))[ CD ]
Line_33 $$ if (numBlocks == -1) -->Line_37 $$ v.visit(ImageElement.NS_QUOTA, numBlocks == -1 ? in.readLong() : -1)[ CD ]
Line_26 $$ if (underConstruction) -->Line_27 $$ v.visit(ImageElement.CLIENT_NAME, FSImageSerialization.readString(in))[ CD ]
Line_2 $$ private void processINode(DataInputStream in, ImageVisitor v, boolean skipBlocks, String parentName, boolean isSnapshotCopy) throws IOException -->Line_64 $$ v.visitEnclosingElement(ImageElement.SNAPSHOT_REF_INODE)[ FD ]
