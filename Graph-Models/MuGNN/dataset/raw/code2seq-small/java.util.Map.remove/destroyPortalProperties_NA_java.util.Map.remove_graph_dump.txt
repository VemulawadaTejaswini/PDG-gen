Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_25 $$ if (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) [ FD ]
Line_4 $$ if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) -->Line_7 $$ _log.debug("Original locales array length " + PropsUtil.getArray(LOCALES).length)[ CD ]
Line_26 $$ DLRepositoryContainer dlRepositoryContainer = _dlRepositoryContainerMap.remove(servletContextName)-->Line_27 $$ dlRepositoryContainer.unregisterRepositoryFactories()[ FD ]
Line_11 $$ CaptchaImpl captchaImpl = null-->Line_19 $$ captchaImpl.setCaptcha(null)[ FD ]
Line_13 $$ if (captcha instanceof DoPrivilegedBean) -->Line_17 $$ captchaImpl = (CaptchaImpl) captcha[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_5 $$ _log.debug("Portlet locales " + portalProperties.getProperty(LOCALES))[ FD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_9 $$ resetPortalProperties(servletContextName, portalProperties, false)[ CD ]
Line_15 $$ captchaImpl = (CaptchaImpl) doPrivilegedBean.getActualBean()-->Line_17 $$ captchaImpl = (CaptchaImpl) captcha[ FD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_4 $$ if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) [ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_22 $$ DLFileEntryProcessorContainer dlFileEntryProcessorContainer = _dlFileEntryProcessorContainerMap.remove(servletContextName)[ FD ]
Line_10 $$ if (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) -->Line_11 $$ CaptchaImpl captchaImpl = null[ CD ]
Line_38 $$ for (String liferayFilterClassName : liferayFilterClassNames) -->Line_43 $$ Set<LiferayFilter> liferayFilters = LiferayFilterTracker.getLiferayFilters(liferayFilterClassName)[ FD ]
Line_25 $$ if (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) -->Line_27 $$ dlRepositoryContainer.unregisterRepositoryFactories()[ CD ]
Line_38 $$ for (String liferayFilterClassName : liferayFilterClassNames) -->Line_39 $$ if (!portalProperties.containsKey(liferayFilterClassName)) [ FD ]
Line_29 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) -->Line_31 $$ antivirusScannerWrapper.setAntivirusScanner(null)[ CD ]
Line_44 $$ for (LiferayFilter liferayFilter : liferayFilters) -->Line_45 $$ liferayFilter.setFilterEnabled(filterEnabled)[ FD ]
Line_25 $$ if (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) -->Line_26 $$ DLRepositoryContainer dlRepositoryContainer = _dlRepositoryContainerMap.remove(servletContextName)[ CD ]
Line_33 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) -->Line_35 $$ storeFactory.setStore(null)[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_3 $$ PropsUtil.removeProperties(portalProperties)[ CD ]
Line_13 $$ if (captcha instanceof DoPrivilegedBean) -->Line_15 $$ captchaImpl = (CaptchaImpl) doPrivilegedBean.getActualBean()[ CD ]
Line_10 $$ if (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) -->Line_19 $$ captchaImpl.setCaptcha(null)[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_9 $$ resetPortalProperties(servletContextName, portalProperties, false)[ FD ]
Line_15 $$ captchaImpl = (CaptchaImpl) doPrivilegedBean.getActualBean()-->Line_19 $$ captchaImpl.setCaptcha(null)[ FD ]
Line_10 $$ if (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) -->Line_13 $$ if (captcha instanceof DoPrivilegedBean) [ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_10 $$ if (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) [ FD ]
Line_34 $$ StoreFactory storeFactory = StoreFactory.getInstance()-->Line_35 $$ storeFactory.setStore(null)[ FD ]
Line_14 $$ DoPrivilegedBean doPrivilegedBean = (DoPrivilegedBean) captcha-->Line_15 $$ captchaImpl = (CaptchaImpl) doPrivilegedBean.getActualBean()[ FD ]
Line_33 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) -->Line_34 $$ StoreFactory storeFactory = StoreFactory.getInstance()[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_39 $$ if (!portalProperties.containsKey(liferayFilterClassName)) [ FD ]
Line_10 $$ if (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) -->Line_12 $$ Captcha captcha = CaptchaUtil.getCaptcha()[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_21 $$ if (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) [ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_33 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) [ FD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_26 $$ DLRepositoryContainer dlRepositoryContainer = _dlRepositoryContainerMap.remove(servletContextName)[ FD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_29 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) [ CD ]
Line_12 $$ Captcha captcha = CaptchaUtil.getCaptcha()-->Line_13 $$ if (captcha instanceof DoPrivilegedBean) [ FD ]
Line_13 $$ if (captcha instanceof DoPrivilegedBean) -->Line_14 $$ DoPrivilegedBean doPrivilegedBean = (DoPrivilegedBean) captcha[ CD ]
Line_38 $$ for (String liferayFilterClassName : liferayFilterClassNames) -->Line_42 $$ boolean filterEnabled = GetterUtil.getBoolean(PropsUtil.get(liferayFilterClassName))[ FD ]
Line_30 $$ AntivirusScannerWrapper antivirusScannerWrapper = (AntivirusScannerWrapper) AntivirusScannerUtil.getAntivirusScanner()-->Line_31 $$ antivirusScannerWrapper.setAntivirusScanner(null)[ FD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_33 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_IMPL)) [ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_4 $$ if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) [ FD ]
Line_4 $$ if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) -->Line_5 $$ _log.debug("Portlet locales " + portalProperties.getProperty(LOCALES))[ CD ]
Line_21 $$ if (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) -->Line_23 $$ dlFileEntryProcessorContainer.unregisterDLProcessors()[ CD ]
Line_17 $$ captchaImpl = (CaptchaImpl) captcha-->Line_19 $$ captchaImpl.setCaptcha(null)[ FD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_21 $$ if (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) [ FD ]
Line_11 $$ CaptchaImpl captchaImpl = null-->Line_17 $$ captchaImpl = (CaptchaImpl) captcha[ FD ]
Line_21 $$ if (portalProperties.containsKey(PropsKeys.DL_FILE_ENTRY_PROCESSORS)) -->Line_22 $$ DLFileEntryProcessorContainer dlFileEntryProcessorContainer = _dlFileEntryProcessorContainerMap.remove(servletContextName)[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_25 $$ if (portalProperties.containsKey(PropsKeys.DL_REPOSITORY_IMPL)) [ CD ]
Line_4 $$ if (_log.isDebugEnabled() && portalProperties.containsKey(LOCALES)) -->Line_6 $$ _log.debug("Original locales " + PropsUtil.get(LOCALES))[ CD ]
Line_29 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) -->Line_30 $$ AntivirusScannerWrapper antivirusScannerWrapper = (AntivirusScannerWrapper) AntivirusScannerUtil.getAntivirusScanner()[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_29 $$ if (portalProperties.containsKey(PropsKeys.DL_STORE_ANTIVIRUS_IMPL)) [ FD ]
Line_11 $$ CaptchaImpl captchaImpl = null-->Line_15 $$ captchaImpl = (CaptchaImpl) doPrivilegedBean.getActualBean()[ FD ]
Line_22 $$ DLFileEntryProcessorContainer dlFileEntryProcessorContainer = _dlFileEntryProcessorContainerMap.remove(servletContextName)-->Line_23 $$ dlFileEntryProcessorContainer.unregisterDLProcessors()[ FD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_37 $$ Set<String> liferayFilterClassNames = LiferayFilterTracker.getClassNames()[ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_10 $$ if (portalProperties.containsKey(PropsKeys.CAPTCHA_ENGINE_IMPL)) [ CD ]
Line_2 $$ protected void destroyPortalProperties(String servletContextName, Properties portalProperties) throws Exception -->Line_3 $$ PropsUtil.removeProperties(portalProperties)[ FD ]
Line_42 $$ boolean filterEnabled = GetterUtil.getBoolean(PropsUtil.get(liferayFilterClassName))-->Line_45 $$ liferayFilter.setFilterEnabled(filterEnabled)[ FD ]
