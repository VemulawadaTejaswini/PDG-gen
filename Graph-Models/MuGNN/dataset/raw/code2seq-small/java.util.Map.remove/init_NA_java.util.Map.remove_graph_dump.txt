Line_12 $$ Properties properties = PropsUtil.getProperties(portalPropertyPrefix, true)-->Line_14 $$ Object value = properties.get(name)[ FD ]
Line_18 $$ if (_initParametersMap.containsKey("hosts.allowed")) -->Line_24 $$ _initParametersMap.remove("hosts.allowed")[ CD ]
Line_21 $$ for (String hostAllowed : hostsAllowed) -->Line_22 $$ _hostsAllowed.add(hostAllowed)[ FD ]
Line_30 $$ if (_initParametersMap.containsKey("use_permission_checker")) -->Line_31 $$ _initParametersMap.remove("use_permission_checker")[ CD ]
Line_26 $$ if (_initParametersMap.containsKey("https.required")) -->Line_28 $$ _initParametersMap.remove("https.required")[ CD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_3 $$ super.init(filterConfig)[ CD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_5 $$ while (enu.hasMoreElements()) [ CD ]
Line_10 $$ String portalPropertyPrefix = GetterUtil.getString(_initParametersMap.get("portal_property_prefix"))-->Line_11 $$ if (Validator.isNotNull(portalPropertyPrefix)) [ FD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_7 $$ String value = filterConfig.getInitParameter(name)[ FD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_26 $$ if (_initParametersMap.containsKey("https.required")) [ CD ]
Line_32 $$ if (_log.isWarnEnabled()) -->Line_33 $$ _log.warn("use_permission_checker is deprecated")[ CD ]
Line_6 $$ String name = enu.nextElement()-->Line_8 $$ _initParametersMap.put(name, value)[ FD ]
Line_11 $$ if (Validator.isNotNull(portalPropertyPrefix)) -->Line_12 $$ Properties properties = PropsUtil.getProperties(portalPropertyPrefix, true)[ CD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_4 $$ Enumeration<String> enu = filterConfig.getInitParameterNames()[ CD ]
Line_26 $$ if (_initParametersMap.containsKey("https.required")) -->Line_27 $$ _httpsRequired = GetterUtil.getBoolean(_initParametersMap.get("https.required"))[ CD ]
Line_4 $$ Enumeration<String> enu = filterConfig.getInitParameterNames()-->Line_6 $$ String name = enu.nextElement()[ FD ]
Line_7 $$ String value = filterConfig.getInitParameter(name)-->Line_15 $$ _initParametersMap.put((String) name, value)[ FD ]
Line_6 $$ String name = enu.nextElement()-->Line_14 $$ Object value = properties.get(name)[ FD ]
Line_14 $$ Object value = properties.get(name)-->Line_15 $$ _initParametersMap.put((String) name, value)[ FD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_11 $$ if (Validator.isNotNull(portalPropertyPrefix)) [ CD ]
Line_5 $$ while (enu.hasMoreElements()) -->Line_7 $$ String value = filterConfig.getInitParameter(name)[ CD ]
Line_13 $$ for (Object name : properties.keySet()) -->Line_14 $$ Object value = properties.get(name)[ FD ]
Line_7 $$ String value = filterConfig.getInitParameter(name)-->Line_8 $$ _initParametersMap.put(name, value)[ FD ]
Line_30 $$ if (_initParametersMap.containsKey("use_permission_checker")) -->Line_32 $$ if (_log.isWarnEnabled()) [ CD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_18 $$ if (_initParametersMap.containsKey("hosts.allowed")) [ CD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_3 $$ super.init(filterConfig)[ FD ]
Line_4 $$ Enumeration<String> enu = filterConfig.getInitParameterNames()-->Line_5 $$ while (enu.hasMoreElements()) [ FD ]
Line_5 $$ while (enu.hasMoreElements()) -->Line_8 $$ _initParametersMap.put(name, value)[ CD ]
Line_19 $$ String hostsAllowedString = (String) _initParametersMap.get("hosts.allowed")-->Line_20 $$ String[] hostsAllowed = StringUtil.split(hostsAllowedString)[ FD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_4 $$ Enumeration<String> enu = filterConfig.getInitParameterNames()[ FD ]
Line_6 $$ String name = enu.nextElement()-->Line_7 $$ String value = filterConfig.getInitParameter(name)[ FD ]
Line_18 $$ if (_initParametersMap.containsKey("hosts.allowed")) -->Line_19 $$ String hostsAllowedString = (String) _initParametersMap.get("hosts.allowed")[ CD ]
Line_10 $$ String portalPropertyPrefix = GetterUtil.getString(_initParametersMap.get("portal_property_prefix"))-->Line_12 $$ Properties properties = PropsUtil.getProperties(portalPropertyPrefix, true)[ FD ]
Line_18 $$ if (_initParametersMap.containsKey("hosts.allowed")) -->Line_20 $$ String[] hostsAllowed = StringUtil.split(hostsAllowedString)[ CD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_10 $$ String portalPropertyPrefix = GetterUtil.getString(_initParametersMap.get("portal_property_prefix"))[ CD ]
Line_12 $$ Properties properties = PropsUtil.getProperties(portalPropertyPrefix, true)-->Line_13 $$ for (Object name : properties.keySet()) [ FD ]
Line_2 $$ public void init(FilterConfig filterConfig) -->Line_30 $$ if (_initParametersMap.containsKey("use_permission_checker")) [ CD ]
Line_5 $$ while (enu.hasMoreElements()) -->Line_6 $$ String name = enu.nextElement()[ CD ]
