Line_17 $$ fieldNode = node.get("include_in_parent")-->Line_23 $$ if (fieldNode != null) [ FD ]
Line_18 $$ if (fieldNode != null) -->Line_19 $$ nestedIncludeInParent = nodeBooleanValue(fieldNode)[ CD ]
Line_7 $$ if (fieldNode != null) -->Line_8 $$ String type = fieldNode.toString()[ CD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_22 $$ fieldNode = node.get("include_in_root")[ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_23 $$ if (fieldNode != null) [ CD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_17 $$ fieldNode = node.get("include_in_parent")[ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_17 $$ fieldNode = node.get("include_in_parent")[ CD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_23 $$ if (fieldNode != null) [ FD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_18 $$ if (fieldNode != null) [ FD ]
Line_9 $$ if (type.equals(CONTENT_TYPE)) -->Line_11 $$ if (type.equals(NESTED_CONTENT_TYPE)) [ CD ]
Line_17 $$ fieldNode = node.get("include_in_parent")-->Line_19 $$ nestedIncludeInParent = nodeBooleanValue(fieldNode)[ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_7 $$ if (fieldNode != null) [ CD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_3 $$ boolean nested = false[ CD ]
Line_5 $$ boolean nestedIncludeInRoot = false-->Line_24 $$ nestedIncludeInRoot = nodeBooleanValue(fieldNode)[ FD ]
Line_9 $$ if (type.equals(CONTENT_TYPE)) -->Line_10 $$ builder.nested = Nested.NO[ CD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_7 $$ if (fieldNode != null) [ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_5 $$ boolean nestedIncludeInRoot = false[ CD ]
Line_23 $$ if (fieldNode != null) -->Line_24 $$ nestedIncludeInRoot = nodeBooleanValue(fieldNode)[ CD ]
Line_18 $$ if (fieldNode != null) -->Line_20 $$ node.remove("include_in_parent")[ CD ]
Line_24 $$ nestedIncludeInRoot = nodeBooleanValue(fieldNode)-->Line_28 $$ builder.nested = Nested.newNested(nestedIncludeInParent, nestedIncludeInRoot)[ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_25 $$ node.remove("include_in_root")[ FD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_19 $$ nestedIncludeInParent = nodeBooleanValue(fieldNode)[ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_6 $$ Object fieldNode = node.get("type")[ CD ]
Line_11 $$ if (type.equals(NESTED_CONTENT_TYPE)) -->Line_12 $$ nested = true[ CD ]
Line_8 $$ String type = fieldNode.toString()-->Line_11 $$ if (type.equals(NESTED_CONTENT_TYPE)) [ FD ]
Line_19 $$ nestedIncludeInParent = nodeBooleanValue(fieldNode)-->Line_28 $$ builder.nested = Nested.newNested(nestedIncludeInParent, nestedIncludeInRoot)[ FD ]
Line_22 $$ fieldNode = node.get("include_in_root")-->Line_24 $$ nestedIncludeInRoot = nodeBooleanValue(fieldNode)[ FD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_17 $$ fieldNode = node.get("include_in_parent")[ FD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_22 $$ fieldNode = node.get("include_in_root")[ FD ]
Line_17 $$ fieldNode = node.get("include_in_parent")-->Line_24 $$ nestedIncludeInRoot = nodeBooleanValue(fieldNode)[ FD ]
Line_4 $$ boolean nestedIncludeInParent = false-->Line_19 $$ nestedIncludeInParent = nodeBooleanValue(fieldNode)[ FD ]
Line_17 $$ fieldNode = node.get("include_in_parent")-->Line_18 $$ if (fieldNode != null) [ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_22 $$ fieldNode = node.get("include_in_root")[ CD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_24 $$ nestedIncludeInRoot = nodeBooleanValue(fieldNode)[ FD ]
Line_23 $$ if (fieldNode != null) -->Line_25 $$ node.remove("include_in_root")[ CD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_6 $$ Object fieldNode = node.get("type")[ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_4 $$ boolean nestedIncludeInParent = false[ CD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_18 $$ if (fieldNode != null) [ CD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_20 $$ node.remove("include_in_parent")[ FD ]
Line_3 $$ boolean nested = false-->Line_12 $$ nested = true[ FD ]
Line_27 $$ if (nested) -->Line_28 $$ builder.nested = Nested.newNested(nestedIncludeInParent, nestedIncludeInRoot)[ CD ]
Line_8 $$ String type = fieldNode.toString()-->Line_9 $$ if (type.equals(CONTENT_TYPE)) [ FD ]
Line_2 $$ protected static void parseNested(String name, Map<String, Object> node, ObjectMapper.Builder builder) -->Line_27 $$ if (nested) [ CD ]
Line_22 $$ fieldNode = node.get("include_in_root")-->Line_23 $$ if (fieldNode != null) [ FD ]
Line_5 $$ boolean nestedIncludeInRoot = false-->Line_28 $$ builder.nested = Nested.newNested(nestedIncludeInParent, nestedIncludeInRoot)[ FD ]
Line_17 $$ fieldNode = node.get("include_in_parent")-->Line_22 $$ fieldNode = node.get("include_in_root")[ FD ]
Line_6 $$ Object fieldNode = node.get("type")-->Line_8 $$ String type = fieldNode.toString()[ FD ]
Line_4 $$ boolean nestedIncludeInParent = false-->Line_28 $$ builder.nested = Nested.newNested(nestedIncludeInParent, nestedIncludeInRoot)[ FD ]
Line_7 $$ if (fieldNode != null) -->Line_9 $$ if (type.equals(CONTENT_TYPE)) [ CD ]
