Line_6 $$ String path = file.getPath()-->Line_10 $$ myConflicts.remove(path)[ FD ]
Line_8 $$ if (conflict != null && !conflict.ignored) -->Line_9 $$ if (isFromActiveChangelist(file)) [ CD ]
Line_2 $$ public boolean hasConflict(@NotNull VirtualFile file) -->Line_7 $$ Conflict conflict = myConflicts.get(path)[ CD ]
Line_8 $$ if (conflict != null && !conflict.ignored) -->Line_13 $$ return true[ CD ]
Line_6 $$ String path = file.getPath()-->Line_7 $$ Conflict conflict = myConflicts.get(path)[ FD ]
Line_2 $$ public boolean hasConflict(@NotNull VirtualFile file) -->Line_6 $$ String path = file.getPath()[ CD ]
Line_9 $$ if (isFromActiveChangelist(file)) -->Line_10 $$ myConflicts.remove(path)[ CD ]
Line_2 $$ public boolean hasConflict(@NotNull VirtualFile file) -->Line_6 $$ String path = file.getPath()[ FD ]
Line_2 $$ public boolean hasConflict(@NotNull VirtualFile file) -->Line_8 $$ if (conflict != null && !conflict.ignored) [ CD ]
Line_2 $$ public boolean hasConflict(@NotNull VirtualFile file) -->Line_3 $$ if (!myOptions.TRACKING_ENABLED) [ CD ]
Line_9 $$ if (isFromActiveChangelist(file)) -->Line_11 $$ return false[ CD ]
Line_2 $$ public boolean hasConflict(@NotNull VirtualFile file) -->Line_9 $$ if (isFromActiveChangelist(file)) [ FD ]
Line_3 $$ if (!myOptions.TRACKING_ENABLED) -->Line_4 $$ return false[ CD ]
Line_8 $$ if (conflict != null && !conflict.ignored) -->Line_15 $$ return false[ CD ]
