Line_4 $$ SortedMap<MessageBusImpl, Integer> map = ref.get()-->Line_6 $$ ref.set(map = new TreeMap<MessageBusImpl, Integer>(MESSAGE_BUS_COMPARATOR))[ FD ]
Line_2 $$ private void notifyPendingJobChange(int delta) -->Line_4 $$ SortedMap<MessageBusImpl, Integer> map = ref.get()[ CD ]
Line_10 $$ int newCount = count + delta-->Line_13 $$ map.put(this, newCount)[ FD ]
Line_2 $$ private void notifyPendingJobChange(int delta) -->Line_5 $$ if (map == null) [ CD ]
Line_2 $$ private void notifyPendingJobChange(int delta) -->Line_11 $$ if (newCount > 0) [ CD ]
Line_11 $$ if (newCount > 0) -->Line_12 $$ checkNotDisposed()[ CD ]
Line_4 $$ SortedMap<MessageBusImpl, Integer> map = ref.get()-->Line_5 $$ if (map == null) [ FD ]
Line_10 $$ int newCount = count + delta-->Line_11 $$ if (newCount > 0) [ FD ]
Line_6 $$ ref.set(map = new TreeMap<MessageBusImpl, Integer>(MESSAGE_BUS_COMPARATOR))-->Line_8 $$ Integer countObject = map.get(this)[ FD ]
Line_4 $$ SortedMap<MessageBusImpl, Integer> map = ref.get()-->Line_8 $$ Integer countObject = map.get(this)[ FD ]
Line_4 $$ SortedMap<MessageBusImpl, Integer> map = ref.get()-->Line_13 $$ map.put(this, newCount)[ FD ]
Line_11 $$ if (newCount > 0) -->Line_14 $$ if (newCount == 0) [ CD ]
Line_10 $$ int newCount = count + delta-->Line_14 $$ if (newCount == 0) [ FD ]
Line_4 $$ SortedMap<MessageBusImpl, Integer> map = ref.get()-->Line_15 $$ map.remove(this)[ FD ]
Line_14 $$ if (newCount == 0) -->Line_17 $$ LOG.error("Negative job count: " + this)[ CD ]
Line_6 $$ ref.set(map = new TreeMap<MessageBusImpl, Integer>(MESSAGE_BUS_COMPARATOR))-->Line_15 $$ map.remove(this)[ FD ]
Line_11 $$ if (newCount > 0) -->Line_13 $$ map.put(this, newCount)[ CD ]
Line_5 $$ if (map == null) -->Line_6 $$ ref.set(map = new TreeMap<MessageBusImpl, Integer>(MESSAGE_BUS_COMPARATOR))[ CD ]
Line_2 $$ private void notifyPendingJobChange(int delta) -->Line_9 $$ int count = countObject == null ? 0 : countObject[ CD ]
Line_2 $$ private void notifyPendingJobChange(int delta) -->Line_3 $$ ThreadLocal<SortedMap<MessageBusImpl, Integer>> ref = getRootBus().myWaitingBuses[ CD ]
Line_2 $$ private void notifyPendingJobChange(int delta) -->Line_10 $$ int newCount = count + delta[ CD ]
Line_14 $$ if (newCount == 0) -->Line_15 $$ map.remove(this)[ CD ]
Line_3 $$ ThreadLocal<SortedMap<MessageBusImpl, Integer>> ref = getRootBus().myWaitingBuses-->Line_6 $$ ref.set(map = new TreeMap<MessageBusImpl, Integer>(MESSAGE_BUS_COMPARATOR))[ FD ]
Line_6 $$ ref.set(map = new TreeMap<MessageBusImpl, Integer>(MESSAGE_BUS_COMPARATOR))-->Line_13 $$ map.put(this, newCount)[ FD ]
Line_3 $$ ThreadLocal<SortedMap<MessageBusImpl, Integer>> ref = getRootBus().myWaitingBuses-->Line_4 $$ SortedMap<MessageBusImpl, Integer> map = ref.get()[ FD ]
Line_2 $$ private void notifyPendingJobChange(int delta) -->Line_8 $$ Integer countObject = map.get(this)[ CD ]
