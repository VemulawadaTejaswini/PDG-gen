Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() -->Line_7 $$ final T value = allModels.getExtraProject(module, aClass)[ CD ]
Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() -->Line_8 $$ final String key = value != null ? module.getGradleProject().getPath() : filterKey[ FD ]
Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() -->Line_8 $$ final String key = value != null ? module.getGradleProject().getPath() : filterKey[ CD ]
Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() -->Line_7 $$ final T value = allModels.getExtraProject(module, aClass)[ FD ]
Line_7 $$ final T value = allModels.getExtraProject(module, aClass)-->Line_9 $$ return Pair.create(key, value)[ FD ]
Line_2 $$ protected <T> Map<String, T> getModulesMap(final Class<T> aClass) -->Line_4 $$ final String filterKey = "to_filter"[ CD ]
Line_4 $$ final String filterKey = "to_filter"-->Line_12 $$ map.remove(filterKey)[ FD ]
Line_3 $$ final DomainObjectSet<? extends IdeaModule> ideaModules = allModels.getIdeaProject().getModules()-->Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() [ FD ]
Line_2 $$ protected <T> Map<String, T> getModulesMap(final Class<T> aClass) -->Line_12 $$ map.remove(filterKey)[ CD ]
Line_8 $$ final String key = value != null ? module.getGradleProject().getPath() : filterKey-->Line_9 $$ return Pair.create(key, value)[ FD ]
Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() -->Line_12 $$ map.remove(filterKey)[ FD ]
Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() -->Line_9 $$ return Pair.create(key, value)[ CD ]
Line_2 $$ protected <T> Map<String, T> getModulesMap(final Class<T> aClass) -->Line_3 $$ final DomainObjectSet<? extends IdeaModule> ideaModules = allModels.getIdeaProject().getModules()[ CD ]
Line_2 $$ protected <T> Map<String, T> getModulesMap(final Class<T> aClass) -->Line_7 $$ final T value = allModels.getExtraProject(module, aClass)[ FD ]
Line_2 $$ protected <T> Map<String, T> getModulesMap(final Class<T> aClass) -->Line_13 $$ return map[ CD ]
Line_2 $$ protected <T> Map<String, T> getModulesMap(final Class<T> aClass) -->Line_5 $$ final Map<String, T> map = ContainerUtil.map2Map(ideaModules, new Function<IdeaModule, Pair<String, T>>() [ CD ]
