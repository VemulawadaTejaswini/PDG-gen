Line_5 $$ if (nodeAndClient != null) -->Line_8 $$ nodes.remove(nodeAndClient.name)[ CD ]
Line_4 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new DataNodePredicate())-->Line_9 $$ nodeAndClient.close()[ FD ]
Line_5 $$ if (nodeAndClient != null) -->Line_10 $$ return true[ CD ]
Line_5 $$ if (nodeAndClient != null) -->Line_6 $$ logger.info("Closing random node [[ CD ]
Line_2 $$ public synchronized boolean stopRandomDataNode() throws IOException -->Line_5 $$ if (nodeAndClient != null) [ CD ]
Line_2 $$ public synchronized boolean stopRandomDataNode() throws IOException -->Line_3 $$ ensureOpen()[ CD ]
Line_5 $$ if (nodeAndClient != null) -->Line_7 $$ removeDisruptionSchemeFromNode(nodeAndClient)[ CD ]
Line_2 $$ public synchronized boolean stopRandomDataNode() throws IOException -->Line_4 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new DataNodePredicate())[ CD ]
Line_5 $$ if (nodeAndClient != null) -->Line_9 $$ nodeAndClient.close()[ CD ]
Line_2 $$ public synchronized boolean stopRandomDataNode() throws IOException -->Line_12 $$ return false[ CD ]
Line_4 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new DataNodePredicate())-->Line_5 $$ if (nodeAndClient != null) [ FD ]
Line_4 $$ NodeAndClient nodeAndClient = getRandomNodeAndClient(new DataNodePredicate())-->Line_7 $$ removeDisruptionSchemeFromNode(nodeAndClient)[ FD ]
