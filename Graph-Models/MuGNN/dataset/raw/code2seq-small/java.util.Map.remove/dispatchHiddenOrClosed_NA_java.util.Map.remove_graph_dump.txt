Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) -->Line_29 $$ i.remove()[ FD ]
Line_28 $$ final Window newActiveWindow = activeWindow.getOwner()-->Line_31 $$ myFocusedWindows.add(newActiveWindow)[ FD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_4 $$ LOG.debug("enter: dispatchClosed(" + window + ")")[ CD ]
Line_16 $$ if (myFocusedWindow == window) -->Line_21 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_17 $$ if (LOG.isDebugEnabled()) -->Line_18 $$ LOG.debug("currently active window should be closed")[ CD ]
Line_28 $$ final Window newActiveWindow = activeWindow.getOwner()-->Line_30 $$ if (newActiveWindow != null) [ FD ]
Line_30 $$ if (newActiveWindow != null) -->Line_31 $$ myFocusedWindows.add(newActiveWindow)[ CD ]
Line_16 $$ if (myFocusedWindow == window) -->Line_20 $$ myFocusedWindow = myFocusedWindow.getOwner()[ CD ]
Line_8 $$ if (info != null) -->Line_13 $$ myWindow2Info.remove(window)[ CD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) [ CD ]
Line_26 $$ final Window activeWindow = (Window) i.next()-->Line_28 $$ final Window newActiveWindow = activeWindow.getOwner()[ FD ]
Line_27 $$ if (activeWindow == window) -->Line_30 $$ if (newActiveWindow != null) [ CD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_16 $$ if (myFocusedWindow == window) [ CD ]
Line_27 $$ if (activeWindow == window) -->Line_29 $$ i.remove()[ CD ]
Line_8 $$ if (info != null) -->Line_10 $$ if (focusWatcher != null) [ CD ]
Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) -->Line_37 $$ final WindowInfo info = (WindowInfo) i.next()[ FD ]
Line_10 $$ if (focusWatcher != null) -->Line_11 $$ focusWatcher.deinstall(window)[ CD ]
Line_36 $$ for (Iterator i = myWindow2Info.values().iterator(); i.hasNext(); ) -->Line_37 $$ final WindowInfo info = (WindowInfo) i.next()[ FD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_27 $$ if (activeWindow == window) [ FD ]
Line_27 $$ if (activeWindow == window) -->Line_28 $$ final Window newActiveWindow = activeWindow.getOwner()[ CD ]
Line_26 $$ final Window activeWindow = (Window) i.next()-->Line_27 $$ if (activeWindow == window) [ FD ]
Line_38 $$ if (info.myFocusWatcherRef.get() == null) -->Line_42 $$ i.remove()[ CD ]
Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) -->Line_27 $$ if (activeWindow == window) [ CD ]
Line_8 $$ if (info != null) -->Line_9 $$ final FocusWatcher focusWatcher = info.myFocusWatcherRef.get()[ CD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_9 $$ final FocusWatcher focusWatcher = info.myFocusWatcherRef.get()-->Line_11 $$ focusWatcher.deinstall(window)[ FD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_11 $$ focusWatcher.deinstall(window)[ FD ]
Line_21 $$ if (LOG.isDebugEnabled()) -->Line_22 $$ LOG.debug("new active window is " + myFocusedWindow)[ CD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_7 $$ final WindowInfo info = myWindow2Info.get(window)[ FD ]
Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) -->Line_26 $$ final Window activeWindow = (Window) i.next()[ FD ]
Line_39 $$ if (LOG.isDebugEnabled()) -->Line_40 $$ LOG.debug("remove collected info")[ CD ]
Line_36 $$ for (Iterator i = myWindow2Info.values().iterator(); i.hasNext(); ) -->Line_37 $$ final WindowInfo info = (WindowInfo) i.next()[ CD ]
Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) -->Line_42 $$ i.remove()[ FD ]
Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) -->Line_36 $$ for (Iterator i = myWindow2Info.values().iterator(); i.hasNext(); ) [ FD ]
Line_36 $$ for (Iterator i = myWindow2Info.values().iterator(); i.hasNext(); ) -->Line_42 $$ i.remove()[ FD ]
Line_9 $$ final FocusWatcher focusWatcher = info.myFocusWatcherRef.get()-->Line_10 $$ if (focusWatcher != null) [ FD ]
Line_38 $$ if (info.myFocusWatcherRef.get() == null) -->Line_39 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_36 $$ for (Iterator i = myWindow2Info.values().iterator(); i.hasNext(); ) [ CD ]
Line_16 $$ if (myFocusedWindow == window) -->Line_17 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_7 $$ final WindowInfo info = myWindow2Info.get(window)-->Line_8 $$ if (info != null) [ FD ]
Line_25 $$ for (Iterator i = myFocusedWindows.iterator(); i.hasNext(); ) -->Line_26 $$ final Window activeWindow = (Window) i.next()[ CD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_16 $$ if (myFocusedWindow == window) [ FD ]
Line_36 $$ for (Iterator i = myWindow2Info.values().iterator(); i.hasNext(); ) -->Line_38 $$ if (info.myFocusWatcherRef.get() == null) [ CD ]
Line_2 $$ private void dispatchHiddenOrClosed(final Window window) -->Line_13 $$ myWindow2Info.remove(window)[ FD ]
