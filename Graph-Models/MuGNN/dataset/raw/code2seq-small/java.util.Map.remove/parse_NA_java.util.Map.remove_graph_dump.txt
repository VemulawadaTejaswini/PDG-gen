Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_6 $$ String key = settings.get(Storage.KEY)[ CD ]
Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()-->Line_27 $$ secondaryStorage.put(storage.getKey(), current)[ FD ]
Line_36 $$ primaryStorage = fallback.getValue()-->Line_41 $$ return Tuple.tuple(primaryStorage, secondaryStorage)[ FD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_11 $$ Settings storageSettings = settings.getByPrefix(Storage.PREFIX)[ FD ]
Line_15 $$ if (storage.getValue() instanceof Map) -->Line_18 $$ boolean activeByDefault = Boolean.parseBoolean(map.getOrDefault("default", "false"))[ CD ]
Line_17 $$ AzureStorageSettings current = new AzureStorageSettings(storage.getKey(), map.get("account"), map.get("key"))-->Line_24 $$ secondaryStorage.put(storage.getKey(), current)[ FD ]
Line_9 $$ primaryStorage = new AzureStorageSettings(null, account, key)-->Line_36 $$ primaryStorage = fallback.getValue()[ FD ]
Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()-->Line_41 $$ return Tuple.tuple(primaryStorage, secondaryStorage)[ FD ]
Line_20 $$ if (primaryStorage == null) -->Line_23 $$ logger.warn("default storage settings has already been defined. You can not define it to [[ CD ]
Line_15 $$ if (storage.getValue() instanceof Map) -->Line_17 $$ AzureStorageSettings current = new AzureStorageSettings(storage.getKey(), map.get("account"), map.get("key"))[ CD ]
Line_9 $$ primaryStorage = new AzureStorageSettings(null, account, key)-->Line_41 $$ return Tuple.tuple(primaryStorage, secondaryStorage)[ FD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_5 $$ String account = settings.get(Storage.ACCOUNT)[ FD ]
Line_3 $$ AzureStorageSettings primaryStorage = null-->Line_21 $$ primaryStorage = current[ FD ]
Line_14 $$ for (Map.Entry<String, Object> storage : asMap.entrySet()) -->Line_24 $$ secondaryStorage.put(storage.getKey(), current)[ FD ]
Line_31 $$ if (primaryStorage == null && secondaryStorage.isEmpty() == false) -->Line_33 $$ if (secondaryStorage.size() > 1) [ CD ]
Line_32 $$ Map.Entry<String, AzureStorageSettings> fallback = secondaryStorage.entrySet().iterator().next()-->Line_34 $$ logger.warn("no default storage settings has been defined. " + "Add \"default\": true to the settings you want to activate by default. " + "Forcing default to [[ FD ]
Line_16 $$ Map<String, String> map = (Map) storage.getValue()-->Line_18 $$ boolean activeByDefault = Boolean.parseBoolean(map.getOrDefault("default", "false"))[ FD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_3 $$ AzureStorageSettings primaryStorage = null[ CD ]
Line_32 $$ Map.Entry<String, AzureStorageSettings> fallback = secondaryStorage.entrySet().iterator().next()-->Line_37 $$ secondaryStorage.remove(fallback.getKey())[ FD ]
Line_3 $$ AzureStorageSettings primaryStorage = null-->Line_20 $$ if (primaryStorage == null) [ FD ]
Line_14 $$ for (Map.Entry<String, Object> storage : asMap.entrySet()) -->Line_16 $$ Map<String, String> map = (Map) storage.getValue()[ FD ]
Line_9 $$ primaryStorage = new AzureStorageSettings(null, account, key)-->Line_21 $$ primaryStorage = current[ FD ]
Line_20 $$ if (primaryStorage == null) -->Line_24 $$ secondaryStorage.put(storage.getKey(), current)[ CD ]
Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()-->Line_31 $$ if (primaryStorage == null && secondaryStorage.isEmpty() == false) [ FD ]
Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()-->Line_33 $$ if (secondaryStorage.size() > 1) [ FD ]
Line_12 $$ if (storageSettings != null) -->Line_31 $$ if (primaryStorage == null && secondaryStorage.isEmpty() == false) [ CD ]
Line_7 $$ if (account != null) -->Line_12 $$ if (storageSettings != null) [ CD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_6 $$ String key = settings.get(Storage.KEY)[ FD ]
Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()-->Line_32 $$ Map.Entry<String, AzureStorageSettings> fallback = secondaryStorage.entrySet().iterator().next()[ FD ]
Line_33 $$ if (secondaryStorage.size() > 1) -->Line_34 $$ logger.warn("no default storage settings has been defined. " + "Add \"default\": true to the settings you want to activate by default. " + "Forcing default to [[ CD ]
Line_7 $$ if (account != null) -->Line_9 $$ primaryStorage = new AzureStorageSettings(null, account, key)[ CD ]
Line_31 $$ if (primaryStorage == null && secondaryStorage.isEmpty() == false) -->Line_37 $$ secondaryStorage.remove(fallback.getKey())[ CD ]
Line_14 $$ for (Map.Entry<String, Object> storage : asMap.entrySet()) -->Line_23 $$ logger.warn("default storage settings has already been defined. You can not define it to [[ FD ]
Line_7 $$ if (account != null) -->Line_8 $$ logger.warn("[[ CD ]
Line_17 $$ AzureStorageSettings current = new AzureStorageSettings(storage.getKey(), map.get("account"), map.get("key"))-->Line_21 $$ primaryStorage = current[ FD ]
Line_21 $$ primaryStorage = current-->Line_36 $$ primaryStorage = fallback.getValue()[ FD ]
Line_31 $$ if (primaryStorage == null && secondaryStorage.isEmpty() == false) -->Line_36 $$ primaryStorage = fallback.getValue()[ CD ]
Line_20 $$ if (primaryStorage == null) -->Line_21 $$ primaryStorage = current[ CD ]
Line_13 $$ Map<String, Object> asMap = storageSettings.getAsStructuredMap()-->Line_14 $$ for (Map.Entry<String, Object> storage : asMap.entrySet()) [ FD ]
Line_19 $$ if (activeByDefault) -->Line_27 $$ secondaryStorage.put(storage.getKey(), current)[ CD ]
Line_3 $$ AzureStorageSettings primaryStorage = null-->Line_36 $$ primaryStorage = fallback.getValue()[ FD ]
Line_3 $$ AzureStorageSettings primaryStorage = null-->Line_9 $$ primaryStorage = new AzureStorageSettings(null, account, key)[ FD ]
Line_9 $$ primaryStorage = new AzureStorageSettings(null, account, key)-->Line_20 $$ if (primaryStorage == null) [ FD ]
Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()-->Line_24 $$ secondaryStorage.put(storage.getKey(), current)[ FD ]
Line_7 $$ if (account != null) -->Line_11 $$ Settings storageSettings = settings.getByPrefix(Storage.PREFIX)[ CD ]
Line_11 $$ Settings storageSettings = settings.getByPrefix(Storage.PREFIX)-->Line_12 $$ if (storageSettings != null) [ FD ]
Line_32 $$ Map.Entry<String, AzureStorageSettings> fallback = secondaryStorage.entrySet().iterator().next()-->Line_36 $$ primaryStorage = fallback.getValue()[ FD ]
Line_17 $$ AzureStorageSettings current = new AzureStorageSettings(storage.getKey(), map.get("account"), map.get("key"))-->Line_27 $$ secondaryStorage.put(storage.getKey(), current)[ FD ]
Line_15 $$ if (storage.getValue() instanceof Map) -->Line_19 $$ if (activeByDefault) [ CD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_41 $$ return Tuple.tuple(primaryStorage, secondaryStorage)[ CD ]
Line_5 $$ String account = settings.get(Storage.ACCOUNT)-->Line_7 $$ if (account != null) [ FD ]
Line_16 $$ Map<String, String> map = (Map) storage.getValue()-->Line_17 $$ AzureStorageSettings current = new AzureStorageSettings(storage.getKey(), map.get("account"), map.get("key"))[ FD ]
Line_11 $$ Settings storageSettings = settings.getByPrefix(Storage.PREFIX)-->Line_13 $$ Map<String, Object> asMap = storageSettings.getAsStructuredMap()[ FD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()[ CD ]
Line_31 $$ if (primaryStorage == null && secondaryStorage.isEmpty() == false) -->Line_32 $$ Map.Entry<String, AzureStorageSettings> fallback = secondaryStorage.entrySet().iterator().next()[ CD ]
Line_14 $$ for (Map.Entry<String, Object> storage : asMap.entrySet()) -->Line_17 $$ AzureStorageSettings current = new AzureStorageSettings(storage.getKey(), map.get("account"), map.get("key"))[ FD ]
Line_19 $$ if (activeByDefault) -->Line_20 $$ if (primaryStorage == null) [ CD ]
Line_15 $$ if (storage.getValue() instanceof Map) -->Line_16 $$ Map<String, String> map = (Map) storage.getValue()[ CD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_5 $$ String account = settings.get(Storage.ACCOUNT)[ CD ]
Line_2 $$ public static Tuple<AzureStorageSettings, Map<String, AzureStorageSettings>> parse(Settings settings) -->Line_7 $$ if (account != null) [ CD ]
Line_21 $$ primaryStorage = current-->Line_41 $$ return Tuple.tuple(primaryStorage, secondaryStorage)[ FD ]
Line_12 $$ if (storageSettings != null) -->Line_13 $$ Map<String, Object> asMap = storageSettings.getAsStructuredMap()[ CD ]
Line_14 $$ for (Map.Entry<String, Object> storage : asMap.entrySet()) -->Line_15 $$ if (storage.getValue() instanceof Map) [ FD ]
Line_3 $$ AzureStorageSettings primaryStorage = null-->Line_41 $$ return Tuple.tuple(primaryStorage, secondaryStorage)[ FD ]
Line_4 $$ Map<String, AzureStorageSettings> secondaryStorage = new HashMap()-->Line_37 $$ secondaryStorage.remove(fallback.getKey())[ FD ]
Line_14 $$ for (Map.Entry<String, Object> storage : asMap.entrySet()) -->Line_27 $$ secondaryStorage.put(storage.getKey(), current)[ FD ]
