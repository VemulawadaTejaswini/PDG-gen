Line_7 $$ TableCellEditor editor = getCellEditor()-->Line_8 $$ if (editor != null) [ FD ]
Line_2 $$ public void hideEditor() -->Line_6 $$ if (isEditing()) [ CD ]
Line_14 $$ ArrangementMatchingRulesModel model = getModel()-->Line_17 $$ model.removeRow(myEditorRow - 1)[ FD ]
Line_14 $$ ArrangementMatchingRulesModel model = getModel()-->Line_16 $$ if (myEditorRow > 0 && model.getElementAt(myEditorRow - 1) instanceof EmptyArrangementRuleComponent) [ FD ]
Line_2 $$ public void hideEditor() -->Line_22 $$ myEditorRow = -1[ CD ]
Line_6 $$ if (isEditing()) -->Line_8 $$ if (editor != null) [ CD ]
Line_16 $$ if (myEditorRow > 0 && model.getElementAt(myEditorRow - 1) instanceof EmptyArrangementRuleComponent) -->Line_17 $$ model.removeRow(myEditorRow - 1)[ CD ]
Line_14 $$ ArrangementMatchingRulesModel model = getModel()-->Line_15 $$ model.removeRow(myEditorRow)[ FD ]
Line_6 $$ if (isEditing()) -->Line_7 $$ TableCellEditor editor = getCellEditor()[ CD ]
Line_2 $$ public void hideEditor() -->Line_3 $$ if (myEditorRow < 0) [ CD ]
Line_3 $$ if (myEditorRow < 0) -->Line_4 $$ return[ CD ]
Line_7 $$ TableCellEditor editor = getCellEditor()-->Line_9 $$ editor.stopCellEditing()[ FD ]
Line_8 $$ if (editor != null) -->Line_9 $$ editor.stopCellEditing()[ CD ]
