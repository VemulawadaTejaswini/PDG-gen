Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_16 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx - checkBoxWidth)[ FD ]
Line_5 $$ final TreePath path = tree.getPathForLocation(e.getX(), e.getY())-->Line_7 $$ final Rectangle rectangle = tree.getPathBounds(path)[ FD ]
Line_16 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx - checkBoxWidth)-->Line_18 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx)[ FD ]
Line_4 $$ Object tag = null-->Line_18 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx)[ FD ]
Line_11 $$ final int row = tree.getRowForLocation(e.getX(), e.getY())-->Line_12 $$ tree.getCellRenderer().getTreeCellRendererComponent(tree, treeNode, false, false, true, row, true)[ FD ]
Line_13 $$ if (treeNode instanceof RepositoryNode) -->Line_14 $$ RepositoryNode repositoryNode = (RepositoryNode) treeNode[ CD ]
Line_5 $$ final TreePath path = tree.getPathForLocation(e.getX(), e.getY())-->Line_6 $$ if (path != null) [ FD ]
Line_3 $$ JTree tree = (JTree) e.getSource()-->Line_11 $$ final int row = tree.getRowForLocation(e.getX(), e.getY())[ FD ]
Line_4 $$ Object tag = null-->Line_16 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx - checkBoxWidth)[ FD ]
Line_3 $$ JTree tree = (JTree) e.getSource()-->Line_7 $$ final Rectangle rectangle = tree.getPathBounds(path)[ FD ]
Line_10 $$ final TreeNode treeNode = (TreeNode) path.getLastPathComponent()-->Line_13 $$ if (treeNode instanceof RepositoryNode) [ FD ]
Line_3 $$ JTree tree = (JTree) e.getSource()-->Line_12 $$ tree.getCellRenderer().getTreeCellRendererComponent(tree, treeNode, false, false, true, row, true)[ FD ]
Line_6 $$ if (path != null) -->Line_10 $$ final TreeNode treeNode = (TreeNode) path.getLastPathComponent()[ CD ]
Line_13 $$ if (treeNode instanceof RepositoryNode) -->Line_15 $$ int checkBoxWidth = repositoryNode.isCheckboxVisible() ? renderer.getCheckbox().getWidth() : 0[ CD ]
Line_6 $$ if (path != null) -->Line_9 $$ int dx = e.getX() - rectangle.x[ CD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_9 $$ int dx = e.getX() - rectangle.x[ FD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_3 $$ JTree tree = (JTree) e.getSource()[ FD ]
Line_10 $$ final TreeNode treeNode = (TreeNode) path.getLastPathComponent()-->Line_12 $$ tree.getCellRenderer().getTreeCellRendererComponent(tree, treeNode, false, false, true, row, true)[ FD ]
Line_6 $$ if (path != null) -->Line_12 $$ tree.getCellRenderer().getTreeCellRendererComponent(tree, treeNode, false, false, true, row, true)[ CD ]
Line_6 $$ if (path != null) -->Line_7 $$ final Rectangle rectangle = tree.getPathBounds(path)[ CD ]
Line_13 $$ if (treeNode instanceof RepositoryNode) -->Line_18 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx)[ CD ]
Line_6 $$ if (path != null) -->Line_11 $$ final int row = tree.getRowForLocation(e.getX(), e.getY())[ CD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_5 $$ final TreePath path = tree.getPathForLocation(e.getX(), e.getY())[ FD ]
Line_3 $$ JTree tree = (JTree) e.getSource()-->Line_5 $$ final TreePath path = tree.getPathForLocation(e.getX(), e.getY())[ FD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_11 $$ final int row = tree.getRowForLocation(e.getX(), e.getY())[ FD ]
Line_13 $$ if (treeNode instanceof RepositoryNode) -->Line_16 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx - checkBoxWidth)[ CD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_4 $$ Object tag = null[ CD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_15 $$ int checkBoxWidth = repositoryNode.isCheckboxVisible() ? renderer.getCheckbox().getWidth() : 0[ FD ]
Line_9 $$ int dx = e.getX() - rectangle.x-->Line_18 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx)[ FD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_6 $$ if (path != null) [ CD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_5 $$ final TreePath path = tree.getPathForLocation(e.getX(), e.getY())[ CD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_18 $$ tag = renderer.getTextRenderer().getFragmentTagAt(dx)[ FD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_21 $$ return tag[ CD ]
Line_14 $$ RepositoryNode repositoryNode = (RepositoryNode) treeNode-->Line_15 $$ int checkBoxWidth = repositoryNode.isCheckboxVisible() ? renderer.getCheckbox().getWidth() : 0[ FD ]
Line_5 $$ final TreePath path = tree.getPathForLocation(e.getX(), e.getY())-->Line_10 $$ final TreeNode treeNode = (TreeNode) path.getLastPathComponent()[ FD ]
Line_6 $$ if (path != null) -->Line_13 $$ if (treeNode instanceof RepositoryNode) [ CD ]
Line_2 $$ public static Object getTagAtForRenderer(CheckboxTree.CheckboxTreeCellRenderer renderer, MouseEvent e) -->Line_3 $$ JTree tree = (JTree) e.getSource()[ CD ]
