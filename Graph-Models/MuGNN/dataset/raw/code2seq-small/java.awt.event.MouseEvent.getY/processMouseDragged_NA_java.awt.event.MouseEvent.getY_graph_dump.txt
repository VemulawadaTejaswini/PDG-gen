Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_6 $$ if (getMouseEventArea(e) == EditorMouseEventArea.LINE_MARKERS_AREA) [ CD ]
Line_86 $$ newSelection = newCaretOffset-->Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_108 $$ if (newCaretOffset >= selectionModel.getSelectionEnd()) [ FD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_17 $$ if (!columnSelectionDragEvent && toggleCaretEvent && !myLastPressCreatedCaret) [ CD ]
Line_106 $$ if (!myMousePressedInsideSelection) -->Line_123 $$ if (caretShift != 0) [ CD ]
Line_52 $$ if (multiCaretSelection) -->Line_57 $$ if (myUseNewRendering) [ CD ]
Line_75 $$ if (getMouseSelectionState() != MOUSE_SELECTION_STATE_NONE) -->Line_103 $$ cancelAutoResetForMouseSelectionState()[ CD ]
Line_25 $$ int dx = 0-->Line_27 $$ dx = x - visibleArea.x[ FD ]
Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)-->Line_72 $$ blockActionsIfNeeded(e, myLastMousePressedLocation, newLogicalCaret)[ FD ]
Line_47 $$ VisualPosition oldVisLeadSelectionStart = leadCaret.getLeadSelectionPosition()-->Line_116 $$ if (oldVisLeadSelectionStart != null) [ FD ]
Line_69 $$ if (multiCaretSelection) -->Line_70 $$ if (myLastMousePressedLocation != null && (myCurrentDragIsSubstantial || !newLogicalCaret.equals(myLastMousePressedLocation))) [ CD ]
Line_94 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_LINE_SELECTED) -->Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))[ CD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_86 $$ newSelection = newCaretOffset[ FD ]
Line_75 $$ if (getMouseSelectionState() != MOUSE_SELECTION_STATE_NONE) -->Line_104 $$ return[ CD ]
Line_86 $$ newSelection = newCaretOffset-->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_42 $$ if (dx == 0 && dy == 0) [ CD ]
Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()-->Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))[ FD ]
Line_23 $$ x = 0-->Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)[ FD ]
Line_86 $$ newSelection = newCaretOffset-->Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))[ FD ]
Line_46 $$ int oldSelectionStart = leadCaret.getLeadSelectionOffset()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_15 $$ boolean addRectangularSelectionEvent = isAddRectangularSelectionEvent(e)[ FD ]
Line_112 $$ oldSelectionStart = selectionModel.getSelectionEnd()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_63 $$ int newCaretOffset = getCaretModel().getOffset()-->Line_108 $$ if (newCaretOffset >= selectionModel.getSelectionEnd()) [ FD ]
Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))-->Line_99 $$ newSelection = newCaretOffset[ FD ]
Line_70 $$ if (myLastMousePressedLocation != null && (myCurrentDragIsSubstantial || !newLogicalCaret.equals(myLastMousePressedLocation))) -->Line_71 $$ createSelectionTill(newLogicalCaret)[ CD ]
Line_76 $$ if (caretShift < 0) -->Line_78 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_WORD_SELECTED) [ CD ]
Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))-->Line_98 $$ if (newSelection < 0)[ FD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_85 $$ if (newSelection < 0)[ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_46 $$ int oldSelectionStart = leadCaret.getLeadSelectionOffset()[ CD ]
Line_99 $$ newSelection = newCaretOffset-->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_76 $$ if (caretShift < 0) -->Line_91 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_WORD_SELECTED) [ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_3 $$ if (!JBSwingUtilities.isLeftMouseButton(e) && !JBSwingUtilities.isMiddleMouseButton(e)) [ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_13 $$ boolean columnSelectionDragEvent = isColumnSelectionDragEvent(e)[ CD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_64 $$ newVisualCaret = getCaretModel().getVisualPosition()[ CD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_26 $$ if (x < visibleArea.x && visibleArea.x > 0) [ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_21 $$ int x = e.getX()[ CD ]
Line_98 $$ if (newSelection < 0)-->Line_99 $$ newSelection = newCaretOffset[ CD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_110 $$ oldVisLeadSelectionStart = selectionModel.getSelectionStartPosition()[ FD ]
Line_109 $$ oldSelectionStart = selectionModel.getSelectionStart()-->Line_112 $$ oldSelectionStart = selectionModel.getSelectionEnd()[ FD ]
Line_49 $$ boolean multiCaretSelection = columnSelectionDrag || toggleCaretEvent-->Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_72 $$ blockActionsIfNeeded(e, myLastMousePressedLocation, newLogicalCaret)[ FD ]
Line_65 $$ int caretShift = newCaretOffset - mySavedSelectionStart-->Line_76 $$ if (caretShift < 0) [ FD ]
Line_108 $$ if (newCaretOffset >= selectionModel.getSelectionEnd()) -->Line_111 $$ if (newCaretOffset <= selectionModel.getSelectionStart()) [ CD ]
Line_110 $$ oldVisLeadSelectionStart = selectionModel.getSelectionStartPosition()-->Line_116 $$ if (oldVisLeadSelectionStart != null) [ FD ]
Line_64 $$ newVisualCaret = getCaretModel().getVisualPosition()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_86 $$ newSelection = newCaretOffset-->Line_98 $$ if (newSelection < 0)[ FD ]
Line_30 $$ dx = x - visibleArea.x - visibleArea.width-->Line_140 $$ myScrollingTimer.start(dx, dy)[ FD ]
Line_21 $$ int x = e.getX()-->Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)[ FD ]
Line_34 $$ int y = e.getY()-->Line_55 $$ myTargetMultiSelectionPosition = xyToVisualPosition(new Point(Math.max(x, 0), Math.max(y, 0)))[ FD ]
Line_57 $$ if (myUseNewRendering) -->Line_58 $$ getCaretModel().moveToVisualPosition(newVisualCaret)[ CD ]
Line_69 $$ if (multiCaretSelection) -->Line_106 $$ if (!myMousePressedInsideSelection) [ CD ]
Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)-->Line_60 $$ getCaretModel().moveToLogicalPosition(newLogicalCaret)[ FD ]
Line_109 $$ oldSelectionStart = selectionModel.getSelectionStart()-->Line_119 $$ setSelectionAndBlockActions(e, oldSelectionStart, newCaretOffset)[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_107 $$ if ((myMousePressArea == EditorMouseEventArea.LINE_NUMBERS_AREA || myMousePressArea == EditorMouseEventArea.LINE_MARKERS_AREA) && selectionModel.hasSelection()) [ FD ]
Line_63 $$ int newCaretOffset = getCaretModel().getOffset()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_78 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_WORD_SELECTED) -->Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()[ CD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_112 $$ oldSelectionStart = selectionModel.getSelectionEnd()[ FD ]
Line_46 $$ int oldSelectionStart = leadCaret.getLeadSelectionOffset()-->Line_119 $$ setSelectionAndBlockActions(e, oldSelectionStart, newCaretOffset)[ FD ]
Line_66 $$ if (myMousePressedEvent != null && getMouseEventArea(myMousePressedEvent) != EditorMouseEventArea.EDITING_AREA && getMouseEventArea(myMousePressedEvent) != EditorMouseEventArea.LINE_NUMBERS_AREA) -->Line_69 $$ if (multiCaretSelection) [ CD ]
Line_34 $$ int y = e.getY()-->Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)[ FD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_98 $$ if (newSelection < 0)[ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_45 $$ Caret leadCaret = getLeadCaret()[ CD ]
Line_91 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_WORD_SELECTED) -->Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()[ CD ]
Line_23 $$ x = 0-->Line_55 $$ myTargetMultiSelectionPosition = xyToVisualPosition(new Point(Math.max(x, 0), Math.max(y, 0)))[ FD ]
Line_17 $$ if (!columnSelectionDragEvent && toggleCaretEvent && !myLastPressCreatedCaret) -->Line_18 $$ return[ CD ]
Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null-->Line_58 $$ getCaretModel().moveToVisualPosition(newVisualCaret)[ FD ]
Line_108 $$ if (newCaretOffset >= selectionModel.getSelectionEnd()) -->Line_110 $$ oldVisLeadSelectionStart = selectionModel.getSelectionStartPosition()[ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_6 $$ if (getMouseEventArea(e) == EditorMouseEventArea.LINE_MARKERS_AREA) [ FD ]
Line_70 $$ if (myLastMousePressedLocation != null && (myCurrentDragIsSubstantial || !newLogicalCaret.equals(myLastMousePressedLocation))) -->Line_72 $$ blockActionsIfNeeded(e, myLastMousePressedLocation, newLogicalCaret)[ CD ]
Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_87 $$ selectionModel.setSelection(mySavedSelectionEnd, newSelection)[ FD ]
Line_86 $$ newSelection = newCaretOffset-->Line_87 $$ selectionModel.setSelection(mySavedSelectionEnd, newSelection)[ FD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_76 $$ if (caretShift < 0) -->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ CD ]
Line_6 $$ if (getMouseEventArea(e) == EditorMouseEventArea.LINE_MARKERS_AREA) -->Line_7 $$ if (myDragOnGutterSelectionStartLine >= 0) [ CD ]
Line_34 $$ int y = e.getY()-->Line_36 $$ dy = y - visibleArea.y[ FD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_98 $$ if (newSelection < 0)[ FD ]
Line_108 $$ if (newCaretOffset >= selectionModel.getSelectionEnd()) -->Line_109 $$ oldSelectionStart = selectionModel.getSelectionStart()[ CD ]
Line_126 $$ if (myDraggedRange == null) -->Line_127 $$ boolean isCopy = UIUtil.isControlKeyDown(e) || isViewer() || !getDocument().isWritable()[ CD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_85 $$ if (newSelection < 0)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_20 $$ Rectangle visibleArea = getScrollingModel().getVisibleArea()[ CD ]
Line_21 $$ int x = e.getX()-->Line_27 $$ dx = x - visibleArea.x[ FD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_88 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_86 $$ newSelection = newCaretOffset-->Line_88 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_76 $$ if (caretShift < 0) -->Line_87 $$ selectionModel.setSelection(mySavedSelectionEnd, newSelection)[ CD ]
Line_75 $$ if (getMouseSelectionState() != MOUSE_SELECTION_STATE_NONE) -->Line_76 $$ if (caretShift < 0) [ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_15 $$ boolean addRectangularSelectionEvent = isAddRectangularSelectionEvent(e)[ CD ]
Line_35 $$ if (y < visibleArea.y && visibleArea.y > 0) -->Line_38 $$ if (y > visibleArea.y + visibleArea.height) [ CD ]
Line_113 $$ oldVisLeadSelectionStart = selectionModel.getSelectionEndPosition()-->Line_116 $$ if (oldVisLeadSelectionStart != null) [ FD ]
Line_45 $$ Caret leadCaret = getLeadCaret()-->Line_46 $$ int oldSelectionStart = leadCaret.getLeadSelectionOffset()[ FD ]
Line_86 $$ newSelection = newCaretOffset-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_21 $$ int x = e.getX()-->Line_23 $$ x = 0[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_22 $$ if (e.getSource() == myGutterComponent) [ FD ]
Line_76 $$ if (caretShift < 0) -->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ CD ]
Line_116 $$ if (oldVisLeadSelectionStart != null) -->Line_119 $$ setSelectionAndBlockActions(e, oldSelectionStart, newCaretOffset)[ CD ]
Line_125 $$ if (mySettings.isDndEnabled()) -->Line_126 $$ if (myDraggedRange == null) [ CD ]
Line_21 $$ int x = e.getX()-->Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null[ FD ]
Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null-->Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)[ FD ]
Line_85 $$ if (newSelection < 0)-->Line_86 $$ newSelection = newCaretOffset[ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_16 $$ boolean columnSelectionDrag = isColumnMode() && !myLastPressCreatedCaret || columnSelectionDragEvent[ CD ]
Line_107 $$ if ((myMousePressArea == EditorMouseEventArea.LINE_NUMBERS_AREA || myMousePressArea == EditorMouseEventArea.LINE_MARKERS_AREA) && selectionModel.hasSelection()) -->Line_108 $$ if (newCaretOffset >= selectionModel.getSelectionEnd()) [ CD ]
Line_63 $$ int newCaretOffset = getCaretModel().getOffset()-->Line_99 $$ newSelection = newCaretOffset[ FD ]
Line_25 $$ int dx = 0-->Line_30 $$ dx = x - visibleArea.x - visibleArea.width[ FD ]
Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)-->Line_71 $$ createSelectionTill(newLogicalCaret)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_13 $$ boolean columnSelectionDragEvent = isColumnSelectionDragEvent(e)[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_132 $$ selectionModel.removeSelection()[ FD ]
Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()-->Line_98 $$ if (newSelection < 0)[ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_63 $$ int newCaretOffset = getCaretModel().getOffset()[ CD ]
Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))-->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_106 $$ if (!myMousePressedInsideSelection) -->Line_116 $$ if (oldVisLeadSelectionStart != null) [ CD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_99 $$ newSelection = newCaretOffset[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_21 $$ int x = e.getX()[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_109 $$ oldSelectionStart = selectionModel.getSelectionStart()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_112 $$ oldSelectionStart = selectionModel.getSelectionEnd()-->Line_119 $$ setSelectionAndBlockActions(e, oldSelectionStart, newCaretOffset)[ FD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_86 $$ newSelection = newCaretOffset[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_14 $$ boolean toggleCaretEvent = isToggleCaretEvent(e)[ FD ]
Line_125 $$ if (mySettings.isDndEnabled()) -->Line_132 $$ selectionModel.removeSelection()[ CD ]
Line_66 $$ if (myMousePressedEvent != null && getMouseEventArea(myMousePressedEvent) != EditorMouseEventArea.EDITING_AREA && getMouseEventArea(myMousePressedEvent) != EditorMouseEventArea.LINE_NUMBERS_AREA) -->Line_67 $$ selectionModel.setSelection(oldSelectionStart, newCaretOffset)[ CD ]
Line_29 $$ if (x > visibleArea.x + visibleArea.width) -->Line_30 $$ dx = x - visibleArea.x - visibleArea.width[ CD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_140 $$ myScrollingTimer.start(dx, dy)[ CD ]
Line_69 $$ if (multiCaretSelection) -->Line_75 $$ if (getMouseSelectionState() != MOUSE_SELECTION_STATE_NONE) [ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_3 $$ if (!JBSwingUtilities.isLeftMouseButton(e) && !JBSwingUtilities.isMiddleMouseButton(e)) [ CD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))[ FD ]
Line_86 $$ newSelection = newCaretOffset-->Line_99 $$ newSelection = newCaretOffset[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_76 $$ if (caretShift < 0) -->Line_88 $$ getCaretModel().moveToOffset(newSelection)[ CD ]
Line_76 $$ if (caretShift < 0) -->Line_85 $$ if (newSelection < 0)[ CD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_85 $$ if (newSelection < 0)[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_111 $$ if (newCaretOffset <= selectionModel.getSelectionStart()) [ FD ]
Line_63 $$ int newCaretOffset = getCaretModel().getOffset()-->Line_67 $$ selectionModel.setSelection(oldSelectionStart, newCaretOffset)[ FD ]
Line_6 $$ if (getMouseEventArea(e) == EditorMouseEventArea.LINE_MARKERS_AREA) -->Line_11 $$ myDragOnGutterSelectionStartLine = -1[ CD ]
Line_124 $$ if (myMousePressedEvent != null) -->Line_125 $$ if (mySettings.isDndEnabled()) [ CD ]
Line_47 $$ VisualPosition oldVisLeadSelectionStart = leadCaret.getLeadSelectionPosition()-->Line_113 $$ oldVisLeadSelectionStart = selectionModel.getSelectionEndPosition()[ FD ]
Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null-->Line_64 $$ newVisualCaret = getCaretModel().getVisualPosition()[ FD ]
Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_25 $$ int dx = 0[ CD ]
Line_35 $$ if (y < visibleArea.y && visibleArea.y > 0) -->Line_36 $$ dy = y - visibleArea.y[ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_34 $$ int y = e.getY()[ CD ]
Line_111 $$ if (newCaretOffset <= selectionModel.getSelectionStart()) -->Line_112 $$ oldSelectionStart = selectionModel.getSelectionEnd()[ CD ]
Line_99 $$ newSelection = newCaretOffset-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_65 $$ int caretShift = newCaretOffset - mySavedSelectionStart-->Line_123 $$ if (caretShift != 0) [ FD ]
Line_123 $$ if (caretShift != 0) -->Line_124 $$ if (myMousePressedEvent != null) [ CD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()[ FD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))[ FD ]
Line_27 $$ dx = x - visibleArea.x-->Line_30 $$ dx = x - visibleArea.x - visibleArea.width[ FD ]
Line_116 $$ if (oldVisLeadSelectionStart != null) -->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_14 $$ boolean toggleCaretEvent = isToggleCaretEvent(e)[ CD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_88 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_26 $$ if (x < visibleArea.x && visibleArea.x > 0) -->Line_27 $$ dx = x - visibleArea.x[ CD ]
Line_23 $$ x = 0-->Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_119 $$ setSelectionAndBlockActions(e, oldSelectionStart, newCaretOffset)[ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_43 $$ myScrollingTimer.stop()[ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_34 $$ int y = e.getY()[ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_49 $$ boolean multiCaretSelection = columnSelectionDrag || toggleCaretEvent[ CD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null[ CD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_46 $$ int oldSelectionStart = leadCaret.getLeadSelectionOffset()-->Line_112 $$ oldSelectionStart = selectionModel.getSelectionEnd()[ FD ]
Line_33 $$ int dy = 0-->Line_36 $$ dy = y - visibleArea.y[ FD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_87 $$ selectionModel.setSelection(mySavedSelectionEnd, newSelection)[ FD ]
Line_38 $$ if (y > visibleArea.y + visibleArea.height) -->Line_39 $$ dy = y - visibleArea.y - visibleArea.height[ CD ]
Line_36 $$ dy = y - visibleArea.y-->Line_39 $$ dy = y - visibleArea.y - visibleArea.height[ FD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()[ FD ]
Line_13 $$ boolean columnSelectionDragEvent = isColumnSelectionDragEvent(e)-->Line_17 $$ if (!columnSelectionDragEvent && toggleCaretEvent && !myLastPressCreatedCaret) [ FD ]
Line_21 $$ int x = e.getX()-->Line_29 $$ if (x > visibleArea.x + visibleArea.width) [ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_127 $$ boolean isCopy = UIUtil.isControlKeyDown(e) || isViewer() || !getDocument().isWritable()[ FD ]
Line_34 $$ int y = e.getY()-->Line_50 $$ VisualPosition newVisualCaret = myUseNewRendering ? getTargetPosition(x, y, !multiCaretSelection) : null[ FD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_113 $$ oldVisLeadSelectionStart = selectionModel.getSelectionEndPosition()[ FD ]
Line_7 $$ if (myDragOnGutterSelectionStartLine >= 0) -->Line_9 $$ myCaretModel.moveToOffset(myDragOnGutterSelectionStartLine < myDocument.getLineCount() ? myDocument.getLineStartOffset(myDragOnGutterSelectionStartLine) : myDocument.getTextLength())[ CD ]
Line_33 $$ int dy = 0-->Line_140 $$ myScrollingTimer.start(dx, dy)[ FD ]
Line_45 $$ Caret leadCaret = getLeadCaret()-->Line_47 $$ VisualPosition oldVisLeadSelectionStart = leadCaret.getLeadSelectionPosition()[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_33 $$ int dy = 0[ CD ]
Line_57 $$ if (myUseNewRendering) -->Line_60 $$ getCaretModel().moveToLogicalPosition(newLogicalCaret)[ CD ]
Line_47 $$ VisualPosition oldVisLeadSelectionStart = leadCaret.getLeadSelectionPosition()-->Line_110 $$ oldVisLeadSelectionStart = selectionModel.getSelectionStartPosition()[ FD ]
Line_26 $$ if (x < visibleArea.x && visibleArea.x > 0) -->Line_29 $$ if (x > visibleArea.x + visibleArea.width) [ CD ]
Line_106 $$ if (!myMousePressedInsideSelection) -->Line_107 $$ if ((myMousePressArea == EditorMouseEventArea.LINE_NUMBERS_AREA || myMousePressArea == EditorMouseEventArea.LINE_MARKERS_AREA) && selectionModel.hasSelection()) [ CD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_98 $$ if (newSelection < 0)[ FD ]
Line_52 $$ if (multiCaretSelection) -->Line_55 $$ myTargetMultiSelectionPosition = xyToVisualPosition(new Point(Math.max(x, 0), Math.max(y, 0)))[ CD ]
Line_23 $$ x = 0-->Line_27 $$ dx = x - visibleArea.x[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_35 $$ if (y < visibleArea.y && visibleArea.y > 0) [ CD ]
Line_25 $$ int dx = 0-->Line_140 $$ myScrollingTimer.start(dx, dy)[ FD ]
Line_110 $$ oldVisLeadSelectionStart = selectionModel.getSelectionStartPosition()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_99 $$ newSelection = newCaretOffset[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_87 $$ selectionModel.setSelection(mySavedSelectionEnd, newSelection)[ FD ]
Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_3 $$ if (!JBSwingUtilities.isLeftMouseButton(e) && !JBSwingUtilities.isMiddleMouseButton(e)) -->Line_4 $$ return[ CD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)[ CD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_141 $$ onSubstantialDrag(e)[ CD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_47 $$ VisualPosition oldVisLeadSelectionStart = leadCaret.getLeadSelectionPosition()[ CD ]
Line_21 $$ int x = e.getX()-->Line_55 $$ myTargetMultiSelectionPosition = xyToVisualPosition(new Point(Math.max(x, 0), Math.max(y, 0)))[ FD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))[ FD ]
Line_46 $$ int oldSelectionStart = leadCaret.getLeadSelectionOffset()-->Line_67 $$ selectionModel.setSelection(oldSelectionStart, newCaretOffset)[ FD ]
Line_27 $$ dx = x - visibleArea.x-->Line_140 $$ myScrollingTimer.start(dx, dy)[ FD ]
Line_39 $$ dy = y - visibleArea.y - visibleArea.height-->Line_140 $$ myScrollingTimer.start(dx, dy)[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_67 $$ selectionModel.setSelection(oldSelectionStart, newCaretOffset)[ FD ]
Line_22 $$ if (e.getSource() == myGutterComponent) -->Line_23 $$ x = 0[ CD ]
Line_36 $$ dy = y - visibleArea.y-->Line_140 $$ myScrollingTimer.start(dx, dy)[ FD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_141 $$ onSubstantialDrag(e)[ FD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_99 $$ newSelection = newCaretOffset[ FD ]
Line_49 $$ boolean multiCaretSelection = columnSelectionDrag || toggleCaretEvent-->Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)[ FD ]
Line_7 $$ if (myDragOnGutterSelectionStartLine >= 0) -->Line_8 $$ mySelectionModel.removeSelection()[ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_129 $$ getContentComponent().getTransferHandler().exportAsDrag(getContentComponent(), e, isCopy ? TransferHandler.COPY : TransferHandler.MOVE)[ FD ]
Line_46 $$ int oldSelectionStart = leadCaret.getLeadSelectionOffset()-->Line_109 $$ oldSelectionStart = selectionModel.getSelectionStart()[ FD ]
Line_33 $$ int dy = 0-->Line_39 $$ dy = y - visibleArea.y - visibleArea.height[ FD ]
Line_63 $$ int newCaretOffset = getCaretModel().getOffset()-->Line_111 $$ if (newCaretOffset <= selectionModel.getSelectionStart()) [ FD ]
Line_78 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_WORD_SELECTED) -->Line_81 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_LINE_SELECTED) [ CD ]
Line_2 $$ private void processMouseDragged(@NotNull MouseEvent e) -->Line_22 $$ if (e.getSource() == myGutterComponent) [ CD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_66 $$ if (myMousePressedEvent != null && getMouseEventArea(myMousePressedEvent) != EditorMouseEventArea.EDITING_AREA && getMouseEventArea(myMousePressedEvent) != EditorMouseEventArea.LINE_NUMBERS_AREA) [ CD ]
Line_76 $$ if (caretShift < 0) -->Line_77 $$ int newSelection = newCaretOffset[ CD ]
Line_63 $$ int newCaretOffset = getCaretModel().getOffset()-->Line_86 $$ newSelection = newCaretOffset[ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_44 $$ SelectionModel selectionModel = getSelectionModel()[ CD ]
Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()-->Line_86 $$ newSelection = newCaretOffset[ FD ]
Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()-->Line_99 $$ newSelection = newCaretOffset[ FD ]
Line_111 $$ if (newCaretOffset <= selectionModel.getSelectionStart()) -->Line_113 $$ oldVisLeadSelectionStart = selectionModel.getSelectionEndPosition()[ CD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))[ FD ]
Line_44 $$ SelectionModel selectionModel = getSelectionModel()-->Line_109 $$ oldSelectionStart = selectionModel.getSelectionStart()[ FD ]
Line_34 $$ int y = e.getY()-->Line_38 $$ if (y > visibleArea.y + visibleArea.height) [ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_48 $$ int oldCaretOffset = getCaretModel().getOffset()[ CD ]
Line_110 $$ oldVisLeadSelectionStart = selectionModel.getSelectionStartPosition()-->Line_113 $$ oldVisLeadSelectionStart = selectionModel.getSelectionEndPosition()[ FD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_87 $$ selectionModel.setSelection(mySavedSelectionEnd, newSelection)[ FD ]
Line_76 $$ if (caretShift < 0) -->Line_98 $$ if (newSelection < 0)[ CD ]
Line_91 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_WORD_SELECTED) -->Line_94 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_LINE_SELECTED) [ CD ]
Line_51 $$ LogicalPosition newLogicalCaret = myUseNewRendering ? visualToLogicalPosition(newVisualCaret) : getLogicalPositionForScreenPos(x, y, !multiCaretSelection)-->Line_70 $$ if (myLastMousePressedLocation != null && (myCurrentDragIsSubstantial || !newLogicalCaret.equals(myLastMousePressedLocation))) [ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_65 $$ int caretShift = newCaretOffset - mySavedSelectionStart[ CD ]
Line_23 $$ x = 0-->Line_29 $$ if (x > visibleArea.x + visibleArea.width) [ FD ]
Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))-->Line_95 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line + 1, 0)))[ FD ]
Line_47 $$ VisualPosition oldVisLeadSelectionStart = leadCaret.getLeadSelectionPosition()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
Line_81 $$ if (getMouseSelectionState() == MOUSE_SELECTION_STATE_LINE_SELECTED) -->Line_82 $$ newSelection = logicalPositionToOffset(visualToLogicalPosition(new VisualPosition(getCaretModel().getVisualPosition().line, 0)))[ CD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_79 $$ newSelection = myCaretModel.getWordAtCaretStart()[ FD ]
Line_42 $$ if (dx == 0 && dy == 0) -->Line_52 $$ if (multiCaretSelection) [ CD ]
Line_63 $$ int newCaretOffset = getCaretModel().getOffset()-->Line_119 $$ setSelectionAndBlockActions(e, oldSelectionStart, newCaretOffset)[ FD ]
Line_126 $$ if (myDraggedRange == null) -->Line_129 $$ getContentComponent().getTransferHandler().exportAsDrag(getContentComponent(), e, isCopy ? TransferHandler.COPY : TransferHandler.MOVE)[ CD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_100 $$ selectionModel.setSelection(mySavedSelectionStart, newSelection)[ FD ]
Line_92 $$ newSelection = myCaretModel.getWordAtCaretEnd()-->Line_101 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_106 $$ if (!myMousePressedInsideSelection) -->Line_121 $$ cancelAutoResetForMouseSelectionState()[ CD ]
Line_77 $$ int newSelection = newCaretOffset-->Line_88 $$ getCaretModel().moveToOffset(newSelection)[ FD ]
Line_113 $$ oldVisLeadSelectionStart = selectionModel.getSelectionEndPosition()-->Line_117 $$ setSelectionAndBlockActions(e, oldVisLeadSelectionStart, oldSelectionStart, newVisualCaret, newCaretOffset)[ FD ]
