Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_6 $$ RangeHighlighter nearestMarker = null[ CD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_5 $$ getNearestHighlighters((MarkupModelEx) DocumentMarkupModel.forDocument(myEditor.getDocument(), myEditor.getProject(), true), e.getY(), highlighters)[ CD ]
Line_6 $$ RangeHighlighter nearestMarker = null-->Line_11 $$ nearestMarker = highlighter[ FD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_7 $$ int yPos = 0[ CD ]
Line_8 $$ for (RangeHighlighter highlighter : highlighters) -->Line_9 $$ final int newYPos = offsetsToYPositions(highlighter.getStartOffset(), highlighter.getEndOffset()).getStartOffset()[ FD ]
Line_8 $$ for (RangeHighlighter highlighter : highlighters) -->Line_11 $$ nearestMarker = highlighter[ FD ]
Line_7 $$ int yPos = 0-->Line_12 $$ yPos = newYPos[ FD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_5 $$ getNearestHighlighters((MarkupModelEx) DocumentMarkupModel.forDocument(myEditor.getDocument(), myEditor.getProject(), true), e.getY(), highlighters)[ FD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_3 $$ List<RangeHighlighter> highlighters = new ArrayList<RangeHighlighter>()[ CD ]
Line_3 $$ List<RangeHighlighter> highlighters = new ArrayList<RangeHighlighter>()-->Line_4 $$ getNearestHighlighters(this, e.getY(), highlighters)[ FD ]
Line_10 $$ if (nearestMarker == null || Math.abs(yPos - e.getY()) > Math.abs(newYPos - e.getY())) -->Line_11 $$ nearestMarker = highlighter[ CD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_15 $$ return nearestMarker[ CD ]
Line_3 $$ List<RangeHighlighter> highlighters = new ArrayList<RangeHighlighter>()-->Line_5 $$ getNearestHighlighters((MarkupModelEx) DocumentMarkupModel.forDocument(myEditor.getDocument(), myEditor.getProject(), true), e.getY(), highlighters)[ FD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_10 $$ if (nearestMarker == null || Math.abs(yPos - e.getY()) > Math.abs(newYPos - e.getY())) [ FD ]
Line_10 $$ if (nearestMarker == null || Math.abs(yPos - e.getY()) > Math.abs(newYPos - e.getY())) -->Line_12 $$ yPos = newYPos[ CD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_4 $$ getNearestHighlighters(this, e.getY(), highlighters)[ CD ]
Line_2 $$ private RangeHighlighter getNearestRangeHighlighter(@NotNull final MouseEvent e) -->Line_4 $$ getNearestHighlighters(this, e.getY(), highlighters)[ FD ]
Line_9 $$ final int newYPos = offsetsToYPositions(highlighter.getStartOffset(), highlighter.getEndOffset()).getStartOffset()-->Line_12 $$ yPos = newYPos[ FD ]
