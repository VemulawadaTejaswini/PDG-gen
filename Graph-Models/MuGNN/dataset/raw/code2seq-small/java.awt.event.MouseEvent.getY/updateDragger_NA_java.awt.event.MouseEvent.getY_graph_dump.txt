Line_32 $$ if (shouldRepaint) -->Line_33 $$ myEditor.repaintLayeredPane()[ CD ]
Line_5 $$ final RadComponent oldDraggerHost = FormEditingUtil.getDraggerHost(myEditor)-->Line_18 $$ if (deltaX > -DRAGGER_SIZE && deltaX < oldDraggerHost.getWidth() && deltaY > -DRAGGER_SIZE && deltaY < oldDraggerHost.getHeight()) [ FD ]
Line_6 $$ RadComponent newDraggerHost = null-->Line_20 $$ newDraggerHost = null[ FD ]
Line_14 $$ if (oldDraggerHost != null && oldDraggerHost.isSelected()) -->Line_16 $$ final int deltaX = e.getX() - p.x[ CD ]
Line_19 $$ keepOldHost = true-->Line_24 $$ if (oldDraggerHost != null && !keepOldHost && oldDraggerHost != newDraggerHost) [ FD ]
Line_24 $$ if (oldDraggerHost != null && !keepOldHost && oldDraggerHost != newDraggerHost) -->Line_26 $$ shouldRepaint = true[ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_16 $$ final int deltaX = e.getX() - p.x[ FD ]
Line_23 $$ boolean shouldRepaint = false-->Line_30 $$ shouldRepaint = true[ FD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_6 $$ RadComponent newDraggerHost = null[ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_32 $$ if (shouldRepaint) [ CD ]
Line_14 $$ if (oldDraggerHost != null && oldDraggerHost.isSelected()) -->Line_17 $$ final int deltaY = e.getY() - p.y[ CD ]
Line_6 $$ RadComponent newDraggerHost = null-->Line_9 $$ newDraggerHost = c[ FD ]
Line_5 $$ final RadComponent oldDraggerHost = FormEditingUtil.getDraggerHost(myEditor)-->Line_25 $$ oldDraggerHost.setDragger(false)[ FD ]
Line_14 $$ if (oldDraggerHost != null && oldDraggerHost.isSelected()) -->Line_18 $$ if (deltaX > -DRAGGER_SIZE && deltaX < oldDraggerHost.getWidth() && deltaY > -DRAGGER_SIZE && deltaY < oldDraggerHost.getHeight()) [ CD ]
Line_9 $$ newDraggerHost = c-->Line_28 $$ if (newDraggerHost != null) [ FD ]
Line_20 $$ newDraggerHost = null-->Line_29 $$ newDraggerHost.setDragger(true)[ FD ]
Line_5 $$ final RadComponent oldDraggerHost = FormEditingUtil.getDraggerHost(myEditor)-->Line_15 $$ final Point p = SwingUtilities.convertPoint(oldDraggerHost.getDelegee(), 0, 0, e.getComponent())[ FD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_23 $$ boolean shouldRepaint = false[ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_28 $$ if (newDraggerHost != null) [ CD ]
Line_7 $$ for (RadComponent c = component; c != null && !(c instanceof RadRootContainer); c = c.getParent()) -->Line_8 $$ if (c.isSelected()) [ FD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_3 $$ final RadComponent component = FormEditingUtil.getRadComponentAt(myEditor.getRootContainer(), e.getX(), e.getY())[ FD ]
Line_9 $$ newDraggerHost = c-->Line_20 $$ newDraggerHost = null[ FD ]
Line_8 $$ if (c.isSelected()) -->Line_9 $$ newDraggerHost = c[ CD ]
Line_7 $$ for (RadComponent c = component; c != null && !(c instanceof RadRootContainer); c = c.getParent()) -->Line_9 $$ newDraggerHost = c[ FD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_7 $$ for (RadComponent c = component; c != null && !(c instanceof RadRootContainer); c = c.getParent()) [ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_4 $$ LOG.assertTrue(component != null)[ CD ]
Line_26 $$ shouldRepaint = true-->Line_30 $$ shouldRepaint = true[ FD ]
Line_24 $$ if (oldDraggerHost != null && !keepOldHost && oldDraggerHost != newDraggerHost) -->Line_25 $$ oldDraggerHost.setDragger(false)[ CD ]
Line_13 $$ boolean keepOldHost = false-->Line_19 $$ keepOldHost = true[ FD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_5 $$ final RadComponent oldDraggerHost = FormEditingUtil.getDraggerHost(myEditor)[ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_17 $$ final int deltaY = e.getY() - p.y[ FD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_24 $$ if (oldDraggerHost != null && !keepOldHost && oldDraggerHost != newDraggerHost) [ CD ]
Line_6 $$ RadComponent newDraggerHost = null-->Line_28 $$ if (newDraggerHost != null) [ FD ]
Line_5 $$ final RadComponent oldDraggerHost = FormEditingUtil.getDraggerHost(myEditor)-->Line_14 $$ if (oldDraggerHost != null && oldDraggerHost.isSelected()) [ FD ]
Line_20 $$ newDraggerHost = null-->Line_28 $$ if (newDraggerHost != null) [ FD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_13 $$ boolean keepOldHost = false[ CD ]
Line_28 $$ if (newDraggerHost != null) -->Line_29 $$ newDraggerHost.setDragger(true)[ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_14 $$ if (oldDraggerHost != null && oldDraggerHost.isSelected()) [ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_3 $$ final RadComponent component = FormEditingUtil.getRadComponentAt(myEditor.getRootContainer(), e.getX(), e.getY())[ CD ]
Line_14 $$ if (oldDraggerHost != null && oldDraggerHost.isSelected()) -->Line_15 $$ final Point p = SwingUtilities.convertPoint(oldDraggerHost.getDelegee(), 0, 0, e.getComponent())[ CD ]
Line_6 $$ RadComponent newDraggerHost = null-->Line_29 $$ newDraggerHost.setDragger(true)[ FD ]
Line_28 $$ if (newDraggerHost != null) -->Line_30 $$ shouldRepaint = true[ CD ]
Line_23 $$ boolean shouldRepaint = false-->Line_26 $$ shouldRepaint = true[ FD ]
Line_9 $$ newDraggerHost = c-->Line_29 $$ newDraggerHost.setDragger(true)[ FD ]
Line_18 $$ if (deltaX > -DRAGGER_SIZE && deltaX < oldDraggerHost.getWidth() && deltaY > -DRAGGER_SIZE && deltaY < oldDraggerHost.getHeight()) -->Line_20 $$ newDraggerHost = null[ CD ]
Line_2 $$ private void updateDragger(final MouseEvent e) -->Line_15 $$ final Point p = SwingUtilities.convertPoint(oldDraggerHost.getDelegee(), 0, 0, e.getComponent())[ FD ]
Line_18 $$ if (deltaX > -DRAGGER_SIZE && deltaX < oldDraggerHost.getWidth() && deltaY > -DRAGGER_SIZE && deltaY < oldDraggerHost.getHeight()) -->Line_19 $$ keepOldHost = true[ CD ]
Line_13 $$ boolean keepOldHost = false-->Line_24 $$ if (oldDraggerHost != null && !keepOldHost && oldDraggerHost != newDraggerHost) [ FD ]
Line_7 $$ for (RadComponent c = component; c != null && !(c instanceof RadRootContainer); c = c.getParent()) -->Line_8 $$ if (c.isSelected()) [ CD ]
