Line_7 $$ if (isSelected) -->Line_8 $$ myList.addSelectionInterval(index, index)[ CD ]
Line_6 $$ final int index = getModel().toListIndex(row, column)-->Line_12 $$ return myRenderer.getListCellRendererComponent(myList, value, index, isSelected, hasFocus)[ FD ]
Line_4 $$ setDefaultRenderer(Object.class, new TableCellRenderer() -->Line_7 $$ if (isSelected) [ CD ]
Line_6 $$ final int index = getModel().toListIndex(row, column)-->Line_8 $$ myList.addSelectionInterval(index, index)[ FD ]
Line_6 $$ final int index = getModel().toListIndex(row, column)-->Line_10 $$ myList.removeSelectionInterval(index, index)[ FD ]
Line_2 $$ public void setCellRenderer(ListCellRenderer renderer) -->Line_4 $$ setDefaultRenderer(Object.class, new TableCellRenderer() [ CD ]
Line_4 $$ setDefaultRenderer(Object.class, new TableCellRenderer() -->Line_6 $$ final int index = getModel().toListIndex(row, column)[ FD ]
Line_7 $$ if (isSelected) -->Line_10 $$ myList.removeSelectionInterval(index, index)[ CD ]
Line_4 $$ setDefaultRenderer(Object.class, new TableCellRenderer() -->Line_12 $$ return myRenderer.getListCellRendererComponent(myList, value, index, isSelected, hasFocus)[ CD ]
Line_4 $$ setDefaultRenderer(Object.class, new TableCellRenderer() -->Line_6 $$ final int index = getModel().toListIndex(row, column)[ CD ]
Line_4 $$ setDefaultRenderer(Object.class, new TableCellRenderer() -->Line_12 $$ return myRenderer.getListCellRendererComponent(myList, value, index, isSelected, hasFocus)[ FD ]
