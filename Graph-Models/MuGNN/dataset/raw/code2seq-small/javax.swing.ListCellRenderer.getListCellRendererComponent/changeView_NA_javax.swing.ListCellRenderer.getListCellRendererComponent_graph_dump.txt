Line_2 $$ public void changeView() -->Line_5 $$ Collections.sort(views, PANE_WEIGHT_COMPARATOR)[ CD ]
Line_10 $$ AbstractProjectViewPane pane = (AbstractProjectViewPane) value-->Line_23 $$ changeView(pane.getId())[ FD ]
Line_6 $$ final JList list = new JBList(ArrayUtil.toObjectArray(views))-->Line_9 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_2 $$ public void changeView() -->Line_6 $$ final JList list = new JBList(ArrayUtil.toObjectArray(views))[ CD ]
Line_18 $$ Runnable runnable = new Runnable() -->Line_20 $$ if (list.getSelectedIndex() < 0)[ CD ]
Line_6 $$ final JList list = new JBList(ArrayUtil.toObjectArray(views))-->Line_22 $$ AbstractProjectViewPane pane = (AbstractProjectViewPane) list.getSelectedValue()[ FD ]
Line_2 $$ public void changeView() -->Line_4 $$ views.remove(getCurrentProjectViewPane())[ CD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_11 $$ setText(pane.getTitle())[ CD ]
Line_10 $$ AbstractProjectViewPane pane = (AbstractProjectViewPane) value-->Line_11 $$ setText(pane.getTitle())[ FD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_9 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ CD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_9 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_6 $$ final JList list = new JBList(ArrayUtil.toObjectArray(views))-->Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() [ FD ]
Line_20 $$ if (list.getSelectedIndex() < 0)-->Line_21 $$ return[ CD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_12 $$ return this[ CD ]
Line_3 $$ final List<AbstractProjectViewPane> views = new ArrayList<AbstractProjectViewPane>(myId2Pane.values())-->Line_16 $$ list.setSelectedValue(views.get(0), true)[ FD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_20 $$ if (list.getSelectedIndex() < 0)[ FD ]
Line_2 $$ public void changeView() -->Line_3 $$ final List<AbstractProjectViewPane> views = new ArrayList<AbstractProjectViewPane>(myId2Pane.values())[ CD ]
Line_18 $$ Runnable runnable = new Runnable() -->Line_23 $$ changeView(pane.getId())[ CD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_10 $$ AbstractProjectViewPane pane = (AbstractProjectViewPane) value[ CD ]
Line_2 $$ public void changeView() -->Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() [ CD ]
Line_18 $$ Runnable runnable = new Runnable() -->Line_22 $$ AbstractProjectViewPane pane = (AbstractProjectViewPane) list.getSelectedValue()[ CD ]
Line_15 $$ if (!views.isEmpty()) -->Line_16 $$ list.setSelectedValue(views.get(0), true)[ CD ]
Line_2 $$ public void changeView() -->Line_26 $$ new PopupChooserBuilder(list).setTitle(IdeBundle.message("title.popup.views")).setItemChoosenCallback(runnable).createPopup().showInCenterOf(getComponent())[ CD ]
Line_2 $$ public void changeView() -->Line_15 $$ if (!views.isEmpty()) [ CD ]
Line_6 $$ final JList list = new JBList(ArrayUtil.toObjectArray(views))-->Line_16 $$ list.setSelectedValue(views.get(0), true)[ FD ]
Line_6 $$ final JList list = new JBList(ArrayUtil.toObjectArray(views))-->Line_20 $$ if (list.getSelectedIndex() < 0)[ FD ]
Line_3 $$ final List<AbstractProjectViewPane> views = new ArrayList<AbstractProjectViewPane>(myId2Pane.values())-->Line_6 $$ final JList list = new JBList(ArrayUtil.toObjectArray(views))[ FD ]
Line_3 $$ final List<AbstractProjectViewPane> views = new ArrayList<AbstractProjectViewPane>(myId2Pane.values())-->Line_4 $$ views.remove(getCurrentProjectViewPane())[ FD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_16 $$ list.setSelectedValue(views.get(0), true)[ FD ]
Line_3 $$ final List<AbstractProjectViewPane> views = new ArrayList<AbstractProjectViewPane>(myId2Pane.values())-->Line_5 $$ Collections.sort(views, PANE_WEIGHT_COMPARATOR)[ FD ]
Line_3 $$ final List<AbstractProjectViewPane> views = new ArrayList<AbstractProjectViewPane>(myId2Pane.values())-->Line_15 $$ if (!views.isEmpty()) [ FD ]
Line_7 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_22 $$ AbstractProjectViewPane pane = (AbstractProjectViewPane) list.getSelectedValue()[ FD ]
Line_22 $$ AbstractProjectViewPane pane = (AbstractProjectViewPane) list.getSelectedValue()-->Line_23 $$ changeView(pane.getId())[ FD ]
