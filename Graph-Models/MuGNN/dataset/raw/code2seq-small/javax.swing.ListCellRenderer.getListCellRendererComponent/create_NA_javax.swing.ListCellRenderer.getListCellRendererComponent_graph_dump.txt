Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_8 $$ list.setVisibleRowCount(5)[ CD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_25 $$ setText(text)[ CD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_11 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_58 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null-->Line_62 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_33 $$ list.addListSelectionListener(new ListSelectionListener() [ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_45 $$ panel.add(scrollPane, BorderLayout.CENTER)[ CD ]
Line_12 $$ final String text-->Line_23 $$ text = "[ FD ]
Line_23 $$ text = "-->Line_25 $$ setText(text)[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_30 $$ list.setSelectedIndex(0)[ CD ]
Line_46 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_60 $$ IdeFocusManager.findInstance().doWhenFocusSettlesDown(new Runnable() [ CD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_6 $$ panel.add(superMethod, BorderLayout.SOUTH)[ FD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_17 $$ final Icon icon = method.getIcon(flags)[ CD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_13 $$ if (value instanceof PsiMethod) [ CD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_8 $$ list.setVisibleRowCount(5)[ FD ]
Line_54 $$ if (ToSearchIn instanceof GrMethod) -->Line_56 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_32 $$ final TextAttributes attributes = EditorColorsManager.getInstance().getGlobalScheme().getAttributes(EditorColors.SEARCH_RESULT_ATTRIBUTES)[ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_7 $$ final JBList list = new JBList(scopes.toArray())[ CD ]
Line_56 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method-->Line_62 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_42 $$ updateView(scopes.get(0), editor, attributes, highlighters, superMethod)[ CD ]
Line_50 $$ if (popup != null && popup.isVisible()) -->Line_51 $$ popup.cancel()[ CD ]
Line_17 $$ final Icon icon = method.getIcon(flags)-->Line_19 $$ setIcon(icon)[ FD ]
Line_18 $$ if (icon != null)-->Line_19 $$ setIcon(icon)[ CD ]
Line_33 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_35 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()[ CD ]
Line_46 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_49 $$ final JBPopup popup = popupRef.get()[ CD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_48 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_53 $$ final PsiElement toSearchFor-->Line_58 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_42 $$ updateView(scopes.get(0), editor, attributes, highlighters, superMethod)[ FD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_30 $$ list.setSelectedIndex(0)[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_67 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() [ CD ]
Line_4 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_6 $$ panel.add(superMethod, BorderLayout.SOUTH)[ FD ]
Line_46 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_54 $$ if (ToSearchIn instanceof GrMethod) [ CD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_30 $$ list.setSelectedIndex(0)[ FD ]
Line_46 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_50 $$ if (popup != null && popup.isVisible()) [ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_4 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)[ CD ]
Line_33 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_38 $$ dropHighlighters(highlighters)[ CD ]
Line_12 $$ final String text-->Line_25 $$ setText(text)[ FD ]
Line_4 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_58 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() [ FD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_33 $$ list.addListSelectionListener(new ListSelectionListener() [ FD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_15 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)[ CD ]
Line_14 $$ final PsiMethod method = (PsiMethod) value-->Line_15 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)[ FD ]
Line_36 $$ if (selectedMethod == null)-->Line_37 $$ return[ CD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_43 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list)[ FD ]
Line_54 $$ if (ToSearchIn instanceof GrMethod) -->Line_55 $$ final GrMethod method = (GrMethod) ToSearchIn[ CD ]
Line_53 $$ final PsiElement toSearchFor-->Line_62 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_48 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()-->Line_54 $$ if (ToSearchIn instanceof GrMethod) [ FD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_18 $$ if (icon != null)[ CD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_29 $$ list.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION)[ FD ]
Line_55 $$ final GrMethod method = (GrMethod) ToSearchIn-->Line_56 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())[ CD ]
Line_46 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_53 $$ final PsiElement toSearchFor[ CD ]
Line_16 $$ final int flags = Iconable.ICON_FLAG_VISIBILITY-->Line_17 $$ final Icon icon = method.getIcon(flags)[ FD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_11 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_49 $$ final JBPopup popup = popupRef.get()[ FD ]
Line_14 $$ final PsiMethod method = (PsiMethod) value-->Line_17 $$ final Icon icon = method.getIcon(flags)[ FD ]
Line_49 $$ final JBPopup popup = popupRef.get()-->Line_51 $$ popup.cancel()[ FD ]
Line_53 $$ final PsiElement toSearchFor-->Line_56 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_60 $$ IdeFocusManager.findInstance().doWhenFocusSettlesDown(new Runnable() -->Line_62 $$ callback.fun(ToSearchIn, toSearchFor)[ CD ]
Line_15 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)-->Line_23 $$ text = "[ FD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_48 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() [ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_62 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_17 $$ final Icon icon = method.getIcon(flags)-->Line_18 $$ if (icon != null)[ FD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_14 $$ final PsiMethod method = (PsiMethod) value[ CD ]
Line_35 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()-->Line_36 $$ if (selectedMethod == null)[ FD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_33 $$ list.addListSelectionListener(new ListSelectionListener() [ FD ]
Line_15 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)-->Line_25 $$ setText(text)[ FD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_22 $$ setIcon(JetgroovyIcons.Groovy.Groovy_16x16)[ CD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_23 $$ text = "[ CD ]
Line_35 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()-->Line_39 $$ updateView(selectedMethod, editor, attributes, highlighters, superMethod)[ FD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_45 $$ panel.add(scrollPane, BorderLayout.CENTER)[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_44 $$ scrollPane.setBorder(null)[ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_39 $$ updateView(selectedMethod, editor, attributes, highlighters, superMethod)[ FD ]
Line_48 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()-->Line_58 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_6 $$ panel.add(superMethod, BorderLayout.SOUTH)[ CD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_7 $$ final JBList list = new JBList(scopes.toArray())[ FD ]
Line_48 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()-->Line_62 $$ callback.fun(ToSearchIn, toSearchFor)[ FD ]
Line_33 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_36 $$ if (selectedMethod == null)[ CD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_11 $$ super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_33 $$ list.addListSelectionListener(new ListSelectionListener() -->Line_39 $$ updateView(selectedMethod, editor, attributes, highlighters, superMethod)[ CD ]
Line_3 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_67 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() [ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_46 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() [ CD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_26 $$ return this[ CD ]
Line_4 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_5 $$ superMethod.setMnemonic('U')[ FD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_67 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() [ FD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_35 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_4 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_42 $$ updateView(scopes.get(0), editor, attributes, highlighters, superMethod)[ FD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_12 $$ final String text[ CD ]
Line_4 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_56 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_67 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() [ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_5 $$ superMethod.setMnemonic('U')[ CD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_43 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list)[ FD ]
Line_49 $$ final JBPopup popup = popupRef.get()-->Line_50 $$ if (popup != null && popup.isVisible()) [ FD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_21 $$ LOG.assertTrue(value instanceof GrClosableBlock)[ CD ]
Line_67 $$ return JBPopupFactory.getInstance().createComponentPopupBuilder(panel, list).setTitle("Introduce parameter to").setMovable(false).setResizable(false).setRequestFocus(true).setKeyboardActions(keyboardActions).addListener(new JBPopupAdapter() -->Line_69 $$ dropHighlighters(highlighters)[ CD ]
Line_46 $$ final List<Pair<ActionListener, KeyStroke>> keyboardActions = Collections.singletonList(Pair.<ActionListener, KeyStroke>create(new ActionListener() -->Line_48 $$ final GrParametersOwner ToSearchIn = (GrParametersOwner) list.getSelectedValue()[ CD ]
Line_12 $$ final String text-->Line_15 $$ text = PsiFormatUtil.formatMethod(method, PsiSubstitutor.EMPTY, PsiFormatUtilBase.SHOW_CONTAINING_CLASS | PsiFormatUtilBase.SHOW_NAME | PsiFormatUtilBase.SHOW_PARAMETERS, PsiFormatUtilBase.SHOW_TYPE)[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_29 $$ list.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION)[ CD ]
Line_14 $$ final PsiMethod method = (PsiMethod) value-->Line_56 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method[ FD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_35 $$ final GrParametersOwner selectedMethod = (GrParametersOwner) list.getSelectedValue()[ FD ]
Line_2 $$ public static JBPopup create(List<? extends GrParametersOwner> scopes, final Editor editor, final JBPopupOwner popupRef, final PairFunction<GrParametersOwner, PsiElement, Object> callback) -->Line_43 $$ final JScrollPane scrollPane = ScrollPaneFactory.createScrollPane(list)[ CD ]
Line_54 $$ if (ToSearchIn instanceof GrMethod) -->Line_58 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ CD ]
Line_13 $$ if (value instanceof PsiMethod) -->Line_16 $$ final int flags = Iconable.ICON_FLAG_VISIBILITY[ CD ]
Line_4 $$ final JCheckBox superMethod = new JCheckBox(USE_SUPER_METHOD_OF, true)-->Line_39 $$ updateView(selectedMethod, editor, attributes, highlighters, superMethod)[ FD ]
Line_9 $$ list.setCellRenderer(new DefaultListCellRenderer() -->Line_13 $$ if (value instanceof PsiMethod) [ FD ]
Line_56 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? method.findDeepestSuperMethod() : method-->Line_58 $$ toSearchFor = superMethod.isEnabled() && superMethod.isSelected() ? ToSearchIn.getParent() : null[ FD ]
Line_7 $$ final JBList list = new JBList(scopes.toArray())-->Line_29 $$ list.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION)[ FD ]
