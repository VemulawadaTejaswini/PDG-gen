Line_2 $$ protected Shape getPointingShape(final Rectangle bounds, final Point pointTarget, final BalloonImpl balloon) -->Line_6 $$ return shaper.getShape()[ CD ]
Line_3 $$ final Shaper shaper = new Shaper(balloon, bounds, pointTarget, SwingConstants.RIGHT)-->Line_6 $$ return shaper.getShape()[ FD ]
Line_2 $$ protected Shape getPointingShape(final Rectangle bounds, final Point pointTarget, final BalloonImpl balloon) -->Line_4 $$ shaper.lineTo((int) bounds.getMaxX() - shaper.getTargetDelta(SwingConstants.RIGHT) - 1, pointTarget.y + balloon.getPointerWidth(this) / 2)[ CD ]
Line_2 $$ protected Shape getPointingShape(final Rectangle bounds, final Point pointTarget, final BalloonImpl balloon) -->Line_5 $$ shaper.toBottomCurve().roundLeftDown().toLeftCurve().roundLeftUp().toTopCurve().roundUpRight().toRightCurve().roundRightDown().lineTo(shaper.getCurrent().x, pointTarget.y - balloon.getPointerWidth(this) / 2).lineTo(pointTarget.x, pointTarget.y).close()[ CD ]
Line_3 $$ final Shaper shaper = new Shaper(balloon, bounds, pointTarget, SwingConstants.RIGHT)-->Line_5 $$ shaper.toBottomCurve().roundLeftDown().toLeftCurve().roundLeftUp().toTopCurve().roundUpRight().toRightCurve().roundRightDown().lineTo(shaper.getCurrent().x, pointTarget.y - balloon.getPointerWidth(this) / 2).lineTo(pointTarget.x, pointTarget.y).close()[ FD ]
Line_2 $$ protected Shape getPointingShape(final Rectangle bounds, final Point pointTarget, final BalloonImpl balloon) -->Line_5 $$ shaper.toBottomCurve().roundLeftDown().toLeftCurve().roundLeftUp().toTopCurve().roundUpRight().toRightCurve().roundRightDown().lineTo(shaper.getCurrent().x, pointTarget.y - balloon.getPointerWidth(this) / 2).lineTo(pointTarget.x, pointTarget.y).close()[ FD ]
Line_3 $$ final Shaper shaper = new Shaper(balloon, bounds, pointTarget, SwingConstants.RIGHT)-->Line_4 $$ shaper.lineTo((int) bounds.getMaxX() - shaper.getTargetDelta(SwingConstants.RIGHT) - 1, pointTarget.y + balloon.getPointerWidth(this) / 2)[ FD ]
Line_2 $$ protected Shape getPointingShape(final Rectangle bounds, final Point pointTarget, final BalloonImpl balloon) -->Line_3 $$ final Shaper shaper = new Shaper(balloon, bounds, pointTarget, SwingConstants.RIGHT)[ CD ]
Line_2 $$ protected Shape getPointingShape(final Rectangle bounds, final Point pointTarget, final BalloonImpl balloon) -->Line_4 $$ shaper.lineTo((int) bounds.getMaxX() - shaper.getTargetDelta(SwingConstants.RIGHT) - 1, pointTarget.y + balloon.getPointerWidth(this) / 2)[ FD ]
