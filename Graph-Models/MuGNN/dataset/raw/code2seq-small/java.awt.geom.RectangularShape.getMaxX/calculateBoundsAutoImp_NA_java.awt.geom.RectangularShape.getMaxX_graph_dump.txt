Line_46 $$ if (full) -->Line_51 $$ eachBound.x = Integer.MAX_VALUE[ CD ]
Line_28 $$ if (inside) -->Line_43 $$ full = true[ CD ]
Line_69 $$ outside = eachY + eachBound.height + autoButtonSize < sizeToFit.height-->Line_71 $$ outside = eachY + eachBound.height < sizeToFit.height[ FD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_18 $$ final boolean isLast = i == componentCount - 1[ CD ]
Line_33 $$ eachX = (int) eachBound.getMaxX()-->Line_35 $$ eachBound.x = eachX[ FD ]
Line_10 $$ boolean full = false-->Line_66 $$ if (!full) [ FD ]
Line_64 $$ for (int i = 0; i < componentCount; i++) -->Line_89 $$ bounds.get(i).setBounds(eachBound)[ CD ]
Line_19 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))-->Line_54 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_6 $$ if (actualLayout) [ CD ]
Line_15 $$ int maxHeight = sizeToFit.height-->Line_57 $$ if (r.height < maxHeight) [ FD ]
Line_64 $$ for (int i = 0; i < componentCount; i++) -->Line_89 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_3 $$ final int componentCount = getComponentCount()-->Line_16 $$ for (int i = 0; i < componentCount; i++) [ FD ]
Line_33 $$ eachX = (int) eachBound.getMaxX()-->Line_74 $$ eachBound.x = eachX[ FD ]
Line_33 $$ eachX = (int) eachBound.getMaxX()-->Line_39 $$ eachX += eachBound.width[ FD ]
Line_64 $$ for (int i = 0; i < componentCount; i++) -->Line_65 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))[ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_4 $$ LOG.assertTrue(componentCount <= bounds.size())[ FD ]
Line_13 $$ int eachX = insets.left-->Line_39 $$ eachX += eachBound.width[ FD ]
Line_78 $$ full = true-->Line_66 $$ if (!full) [ FD ]
Line_57 $$ if (r.height < maxHeight) -->Line_58 $$ r.y += (maxHeight - r.height) / 2[ CD ]
Line_67 $$ boolean outside-->Line_69 $$ outside = eachY + eachBound.height + autoButtonSize < sizeToFit.height[ FD ]
Line_29 $$ if (eachComp == mySecondaryActionsButton) -->Line_39 $$ eachX += eachBound.width[ CD ]
Line_12 $$ if (myOrientation == SwingConstants.HORIZONTAL) -->Line_15 $$ int maxHeight = sizeToFit.height[ CD ]
Line_3 $$ final int componentCount = getComponentCount()-->Line_64 $$ for (int i = 0; i < componentCount; i++) [ FD ]
Line_13 $$ int eachX = insets.left-->Line_74 $$ eachBound.x = eachX[ FD ]
Line_28 $$ if (inside) -->Line_41 $$ eachBound.y = eachY[ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_54 $$ bounds.get(i).setBounds(eachBound)[ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_19 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))[ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_5 $$ final boolean actualLayout = bounds == myComponentBounds[ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_12 $$ if (myOrientation == SwingConstants.HORIZONTAL) [ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_89 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_46 $$ if (full) -->Line_47 $$ if (myAutoPopupRec == null) [ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_19 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))[ FD ]
Line_64 $$ for (int i = 0; i < componentCount; i++) -->Line_66 $$ if (!full) [ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_54 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_89 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_64 $$ for (int i = 0; i < componentCount; i++) -->Line_68 $$ if (i < componentCount - 1) [ FD ]
Line_39 $$ eachX += eachBound.width-->Line_38 $$ eachBound.x = eachX[ FD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_9 $$ int autoButtonSize = AllIcons.Ide.Link.getIconWidth()[ CD ]
Line_81 $$ if (full) -->Line_82 $$ if (myAutoPopupRec == null) [ CD ]
Line_12 $$ if (myOrientation == SwingConstants.HORIZONTAL) -->Line_13 $$ int eachX = insets.left[ CD ]
Line_43 $$ full = true-->Line_66 $$ if (!full) [ FD ]
Line_12 $$ if (myOrientation == SwingConstants.HORIZONTAL) -->Line_16 $$ for (int i = 0; i < componentCount; i++) [ CD ]
Line_66 $$ if (!full) -->Line_68 $$ if (i < componentCount - 1) [ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_21 $$ if (!full) [ CD ]
Line_81 $$ if (full) -->Line_86 $$ eachBound.x = Integer.MAX_VALUE[ CD ]
Line_43 $$ full = true-->Line_78 $$ full = true[ FD ]
Line_81 $$ if (full) -->Line_87 $$ eachBound.y = Integer.MAX_VALUE[ CD ]
Line_76 $$ eachY += eachBound.height-->Line_75 $$ eachBound.y = eachY[ FD ]
Line_15 $$ int maxHeight = sizeToFit.height-->Line_20 $$ maxHeight = Math.max(eachBound.height, maxHeight)[ FD ]
Line_68 $$ if (i < componentCount - 1) -->Line_69 $$ outside = eachY + eachBound.height + autoButtonSize < sizeToFit.height[ CD ]
Line_14 $$ int eachY = insets.top-->Line_41 $$ eachBound.y = eachY[ FD ]
Line_43 $$ full = true-->Line_21 $$ if (!full) [ FD ]
Line_67 $$ boolean outside-->Line_71 $$ outside = eachY + eachBound.height < sizeToFit.height[ FD ]
Line_31 $$ if (sizeToFit.width != Integer.MAX_VALUE) -->Line_35 $$ eachBound.x = eachX[ CD ]
Line_22 $$ boolean inside-->Line_26 $$ inside = eachX + eachBound.width + autoButtonSize <= sizeToFit.width[ FD ]
Line_39 $$ eachX += eachBound.width-->Line_35 $$ eachBound.x = eachX[ FD ]
Line_28 $$ if (inside) -->Line_29 $$ if (eachComp == mySecondaryActionsButton) [ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_68 $$ if (i < componentCount - 1) [ FD ]
Line_10 $$ boolean full = false-->Line_43 $$ full = true[ FD ]
Line_21 $$ if (!full) -->Line_22 $$ boolean inside[ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_54 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_68 $$ if (i < componentCount - 1) -->Line_71 $$ outside = eachY + eachBound.height < sizeToFit.height[ CD ]
Line_29 $$ if (eachComp == mySecondaryActionsButton) -->Line_31 $$ if (sizeToFit.width != Integer.MAX_VALUE) [ CD ]
Line_23 $$ if (isLast) -->Line_26 $$ inside = eachX + eachBound.width + autoButtonSize <= sizeToFit.width[ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_4 $$ LOG.assertTrue(componentCount <= bounds.size())[ CD ]
Line_29 $$ if (eachComp == mySecondaryActionsButton) -->Line_38 $$ eachBound.x = eachX[ CD ]
Line_33 $$ eachX = (int) eachBound.getMaxX()-->Line_38 $$ eachBound.x = eachX[ FD ]
Line_19 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))-->Line_89 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_65 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))-->Line_89 $$ bounds.get(i).setBounds(eachBound)[ FD ]
Line_17 $$ final Component eachComp = getComponent(i)-->Line_29 $$ if (eachComp == mySecondaryActionsButton) [ FD ]
Line_20 $$ maxHeight = Math.max(eachBound.height, maxHeight)-->Line_57 $$ if (r.height < maxHeight) [ FD ]
Line_66 $$ if (!full) -->Line_73 $$ if (outside) [ CD ]
Line_14 $$ int eachY = insets.top-->Line_76 $$ eachY += eachBound.height[ FD ]
Line_12 $$ if (myOrientation == SwingConstants.HORIZONTAL) -->Line_64 $$ for (int i = 0; i < componentCount; i++) [ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_17 $$ final Component eachComp = getComponent(i)[ FD ]
Line_31 $$ if (sizeToFit.width != Integer.MAX_VALUE) -->Line_33 $$ eachX = (int) eachBound.getMaxX()[ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_17 $$ final Component eachComp = getComponent(i)[ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_11 $$ final Insets insets = getInsets()[ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_20 $$ maxHeight = Math.max(eachBound.height, maxHeight)[ CD ]
Line_14 $$ int eachY = insets.top-->Line_75 $$ eachBound.y = eachY[ FD ]
Line_24 $$ inside = eachX + eachBound.width <= sizeToFit.width-->Line_26 $$ inside = eachX + eachBound.width + autoButtonSize <= sizeToFit.width[ FD ]
Line_22 $$ boolean inside-->Line_24 $$ inside = eachX + eachBound.width <= sizeToFit.width[ FD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_65 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))[ FD ]
Line_39 $$ eachX += eachBound.width-->Line_74 $$ eachBound.x = eachX[ FD ]
Line_13 $$ int eachX = insets.left-->Line_33 $$ eachX = (int) eachBound.getMaxX()[ FD ]
Line_73 $$ if (outside) -->Line_75 $$ eachBound.y = eachY[ CD ]
Line_46 $$ if (full) -->Line_52 $$ eachBound.y = Integer.MAX_VALUE[ CD ]
Line_23 $$ if (isLast) -->Line_24 $$ inside = eachX + eachBound.width <= sizeToFit.width[ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_64 $$ for (int i = 0; i < componentCount; i++) [ FD ]
Line_31 $$ if (sizeToFit.width != Integer.MAX_VALUE) -->Line_32 $$ eachBound.x = sizeToFit.width - eachBound.width[ CD ]
Line_64 $$ for (int i = 0; i < componentCount; i++) -->Line_81 $$ if (full) [ CD ]
Line_66 $$ if (!full) -->Line_67 $$ boolean outside[ CD ]
Line_73 $$ if (outside) -->Line_78 $$ full = true[ CD ]
Line_19 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))-->Line_33 $$ eachX = (int) eachBound.getMaxX()[ FD ]
Line_12 $$ if (myOrientation == SwingConstants.HORIZONTAL) -->Line_14 $$ int eachY = insets.top[ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_3 $$ final int componentCount = getComponentCount()[ CD ]
Line_2 $$ private void calculateBoundsAutoImp(Dimension sizeToFit, List<Rectangle> bounds) -->Line_10 $$ boolean full = false[ CD ]
Line_16 $$ for (int i = 0; i < componentCount; i++) -->Line_46 $$ if (full) [ CD ]
Line_73 $$ if (outside) -->Line_74 $$ eachBound.x = eachX[ CD ]
Line_10 $$ boolean full = false-->Line_78 $$ full = true[ FD ]
Line_73 $$ if (outside) -->Line_76 $$ eachY += eachBound.height[ CD ]
Line_13 $$ int eachX = insets.left-->Line_38 $$ eachBound.x = eachX[ FD ]
Line_21 $$ if (!full) -->Line_23 $$ if (isLast) [ CD ]
Line_64 $$ for (int i = 0; i < componentCount; i++) -->Line_65 $$ final Rectangle eachBound = new Rectangle(getChildPreferredSize(i))[ FD ]
Line_13 $$ int eachX = insets.left-->Line_35 $$ eachBound.x = eachX[ FD ]
Line_21 $$ if (!full) -->Line_28 $$ if (inside) [ CD ]
Line_10 $$ boolean full = false-->Line_21 $$ if (!full) [ FD ]
