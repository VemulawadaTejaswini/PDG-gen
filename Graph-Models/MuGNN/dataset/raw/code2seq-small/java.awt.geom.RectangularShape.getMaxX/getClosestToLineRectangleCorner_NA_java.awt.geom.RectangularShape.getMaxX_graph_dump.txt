Line_7 $$ TreeMap sorter = new TreeMap()-->Line_8 $$ sorter.put(getDistance(aSegment, northWest), northWest)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_6 $$ Point southWest = new OrientedPoint(aRectange.getX(), aRectange.getMaxY(), SOUTH_WEST)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_4 $$ Point northEast = new OrientedPoint(aRectange.getMaxX(), aRectange.getY(), NORTH_EAST)[ CD ]
Line_7 $$ TreeMap sorter = new TreeMap()-->Line_10 $$ sorter.put(getDistance(aSegment, southEast), southEast)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_8 $$ sorter.put(getDistance(aSegment, northWest), northWest)[ CD ]
Line_3 $$ Point northWest = new OrientedPoint(aRectange.getX(), aRectange.getY(), NORTH_WEST)-->Line_8 $$ sorter.put(getDistance(aSegment, northWest), northWest)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_7 $$ TreeMap sorter = new TreeMap()[ CD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_11 $$ sorter.put(getDistance(aSegment, northEast), northEast)[ CD ]
Line_5 $$ Point southEast = new OrientedPoint(aRectange.getMaxX(), aRectange.getMaxY(), SOUTH_EAST)-->Line_10 $$ sorter.put(getDistance(aSegment, southEast), southEast)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_6 $$ Point southWest = new OrientedPoint(aRectange.getX(), aRectange.getMaxY(), SOUTH_WEST)[ CD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_11 $$ sorter.put(getDistance(aSegment, northEast), northEast)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_5 $$ Point southEast = new OrientedPoint(aRectange.getMaxX(), aRectange.getMaxY(), SOUTH_EAST)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_3 $$ Point northWest = new OrientedPoint(aRectange.getX(), aRectange.getY(), NORTH_WEST)[ CD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_10 $$ sorter.put(getDistance(aSegment, southEast), southEast)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_10 $$ sorter.put(getDistance(aSegment, southEast), southEast)[ CD ]
Line_6 $$ Point southWest = new OrientedPoint(aRectange.getX(), aRectange.getMaxY(), SOUTH_WEST)-->Line_9 $$ sorter.put(getDistance(aSegment, southWest), southWest)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_5 $$ Point southEast = new OrientedPoint(aRectange.getMaxX(), aRectange.getMaxY(), SOUTH_EAST)[ CD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_12 $$ return ((OrientedPoint) sorter.get(sorter.firstKey())).getOrientation()[ CD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_4 $$ Point northEast = new OrientedPoint(aRectange.getMaxX(), aRectange.getY(), NORTH_EAST)[ FD ]
Line_7 $$ TreeMap sorter = new TreeMap()-->Line_11 $$ sorter.put(getDistance(aSegment, northEast), northEast)[ FD ]
Line_4 $$ Point northEast = new OrientedPoint(aRectange.getMaxX(), aRectange.getY(), NORTH_EAST)-->Line_11 $$ sorter.put(getDistance(aSegment, northEast), northEast)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_9 $$ sorter.put(getDistance(aSegment, southWest), southWest)[ CD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_8 $$ sorter.put(getDistance(aSegment, northWest), northWest)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_3 $$ Point northWest = new OrientedPoint(aRectange.getX(), aRectange.getY(), NORTH_WEST)[ FD ]
Line_2 $$ public static int getClosestToLineRectangleCorner(Rectangle aRectange, Line2D aSegment) -->Line_9 $$ sorter.put(getDistance(aSegment, southWest), southWest)[ FD ]
Line_7 $$ TreeMap sorter = new TreeMap()-->Line_12 $$ return ((OrientedPoint) sorter.get(sorter.firstKey())).getOrientation()[ FD ]
Line_7 $$ TreeMap sorter = new TreeMap()-->Line_9 $$ sorter.put(getDistance(aSegment, southWest), southWest)[ FD ]
