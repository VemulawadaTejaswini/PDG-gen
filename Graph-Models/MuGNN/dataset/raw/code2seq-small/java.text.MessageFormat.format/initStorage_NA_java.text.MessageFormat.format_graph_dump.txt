Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_6 $$ long fsTimestamp = getVFSTimestamp()[ CD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_7 $$ int storedVersion = result.getVersion()[ CD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_26 $$ myLastId = result.getLastId()[ CD ]
Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)-->Line_7 $$ int storedVersion = result.getVersion()[ FD ]
Line_11 $$ if (!fromScratch) -->Line_12 $$ if (versionMismatch) [ CD ]
Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)-->Line_17 $$ result.dispose()[ FD ]
Line_10 $$ if (versionMismatch || timestampMismatch) -->Line_24 $$ result.setFSTimestamp(fsTimestamp)[ CD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_10 $$ if (versionMismatch || timestampMismatch) [ CD ]
Line_9 $$ boolean timestampMismatch = result.getFSTimestamp() != fsTimestamp-->Line_10 $$ if (versionMismatch || timestampMismatch) [ FD ]
Line_7 $$ int storedVersion = result.getVersion()-->Line_13 $$ LocalHistoryLog.LOG.info(MessageFormat.format("local history version mismatch (was: [ FD ]
Line_11 $$ if (!fromScratch) -->Line_17 $$ result.dispose()[ CD ]
Line_4 $$ boolean fromScratch = ApplicationManager.getApplication().isUnitTestMode() && !new File(path).exists()-->Line_11 $$ if (!fromScratch) [ FD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)[ CD ]
Line_21 $$ result = new LocalHistoryStorage(path)-->Line_24 $$ result.setFSTimestamp(fsTimestamp)[ FD ]
Line_21 $$ result = new LocalHistoryStorage(path)-->Line_23 $$ result.setVersion(VERSION)[ FD ]
Line_15 $$ if (timestampMismatch)-->Line_16 $$ LocalHistoryLog.LOG.info("FS has been rebuild, rebuilding local history...")[ CD ]
Line_6 $$ long fsTimestamp = getVFSTimestamp()-->Line_24 $$ result.setFSTimestamp(fsTimestamp)[ FD ]
Line_12 $$ if (versionMismatch) -->Line_13 $$ LocalHistoryLog.LOG.info(MessageFormat.format("local history version mismatch (was: [ CD ]
Line_21 $$ result = new LocalHistoryStorage(path)-->Line_26 $$ myLastId = result.getLastId()[ FD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_9 $$ boolean timestampMismatch = result.getFSTimestamp() != fsTimestamp[ CD ]
Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)-->Line_9 $$ boolean timestampMismatch = result.getFSTimestamp() != fsTimestamp[ FD ]
Line_11 $$ if (!fromScratch) -->Line_18 $$ if (!FileUtil.delete(storageDir)) [ CD ]
Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)-->Line_24 $$ result.setFSTimestamp(fsTimestamp)[ FD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_4 $$ boolean fromScratch = ApplicationManager.getApplication().isUnitTestMode() && !new File(path).exists()[ CD ]
Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)-->Line_21 $$ result = new LocalHistoryStorage(path)[ FD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_8 $$ boolean versionMismatch = storedVersion != VERSION[ CD ]
Line_10 $$ if (versionMismatch || timestampMismatch) -->Line_11 $$ if (!fromScratch) [ CD ]
Line_11 $$ if (!fromScratch) -->Line_21 $$ result = new LocalHistoryStorage(path)[ CD ]
Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)-->Line_26 $$ myLastId = result.getLastId()[ FD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_3 $$ String path = storageDir.getPath() + "/" + STORAGE_FILE[ CD ]
Line_5 $$ LocalHistoryStorage result = new LocalHistoryStorage(path)-->Line_23 $$ result.setVersion(VERSION)[ FD ]
Line_11 $$ if (!fromScratch) -->Line_15 $$ if (timestampMismatch)[ CD ]
Line_8 $$ boolean versionMismatch = storedVersion != VERSION-->Line_10 $$ if (versionMismatch || timestampMismatch) [ FD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_18 $$ if (!FileUtil.delete(storageDir)) [ FD ]
Line_2 $$ private synchronized void initStorage(File storageDir) throws IOException -->Line_3 $$ String path = storageDir.getPath() + "/" + STORAGE_FILE[ FD ]
Line_10 $$ if (versionMismatch || timestampMismatch) -->Line_23 $$ result.setVersion(VERSION)[ CD ]
