Line_2 $$ private MyNavigationGutterIconRenderer createGutterIconRenderer(@NotNull final Project project) -->Line_5 $$ final boolean empty = isEmpty()[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder("<html><body>")-->Line_21 $$ sb.append("</body></html>")[ FD ]
Line_24 $$ Computable<PsiElementListCellRenderer> renderer = myCellRenderer == null ? new Computable<PsiElementListCellRenderer>() -->Line_26 $$ return new DefaultPsiElementCellRenderer()[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder("<html><body>")-->Line_16 $$ sb.append(myTooltipTitle).append("<br>")[ FD ]
Line_2 $$ private MyNavigationGutterIconRenderer createGutterIconRenderer(@NotNull final Project project) -->Line_3 $$ checkBuilt()[ CD ]
Line_8 $$ for (T t : myTargets.getValue()) -->Line_9 $$ final String text = myNamer.fun(t)[ FD ]
Line_9 $$ final String text = myNamer.fun(t)-->Line_11 $$ names.add(MessageFormat.format(PATTERN, text))[ FD ]
Line_6 $$ if (myTooltipText == null && !myLazy) -->Line_7 $$ final SortedSet<String> names = new TreeSet<String>()[ CD ]
Line_10 $$ if (text != null) -->Line_11 $$ names.add(MessageFormat.format(PATTERN, text))[ CD ]
Line_2 $$ private MyNavigationGutterIconRenderer createGutterIconRenderer(@NotNull final Project project) -->Line_4 $$ NotNullLazyValue<List<SmartPsiElementPointer>> pointers = createPointersThunk(myLazy, project, evaluateAndForget(myTargets), myConverter)[ CD ]
Line_18 $$ for (String name : names) -->Line_19 $$ sb.append(name).append("<br>")[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder("<html><body>")-->Line_22 $$ myTooltipText = sb.toString()[ FD ]
Line_7 $$ final SortedSet<String> names = new TreeSet<String>()-->Line_11 $$ names.add(MessageFormat.format(PATTERN, text))[ FD ]
Line_2 $$ private MyNavigationGutterIconRenderer createGutterIconRenderer(@NotNull final Project project) -->Line_4 $$ NotNullLazyValue<List<SmartPsiElementPointer>> pointers = createPointersThunk(myLazy, project, evaluateAndForget(myTargets), myConverter)[ FD ]
Line_2 $$ private MyNavigationGutterIconRenderer createGutterIconRenderer(@NotNull final Project project) -->Line_24 $$ Computable<PsiElementListCellRenderer> renderer = myCellRenderer == null ? new Computable<PsiElementListCellRenderer>() [ CD ]
Line_9 $$ final String text = myNamer.fun(t)-->Line_10 $$ if (text != null) [ FD ]
Line_6 $$ if (myTooltipText == null && !myLazy) -->Line_21 $$ sb.append("</body></html>")[ CD ]
Line_2 $$ private MyNavigationGutterIconRenderer createGutterIconRenderer(@NotNull final Project project) -->Line_6 $$ if (myTooltipText == null && !myLazy) [ CD ]
Line_2 $$ private MyNavigationGutterIconRenderer createGutterIconRenderer(@NotNull final Project project) -->Line_29 $$ return new MyNavigationGutterIconRenderer(this, myAlignment, myIcon, myTooltipText, pointers, renderer, empty)[ CD ]
Line_6 $$ if (myTooltipText == null && !myLazy) -->Line_14 $$ StringBuilder sb = new StringBuilder("<html><body>")[ CD ]
Line_6 $$ if (myTooltipText == null && !myLazy) -->Line_22 $$ myTooltipText = sb.toString()[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder("<html><body>")-->Line_19 $$ sb.append(name).append("<br>")[ FD ]
Line_6 $$ if (myTooltipText == null && !myLazy) -->Line_15 $$ if (myTooltipTitle != null) [ CD ]
Line_15 $$ if (myTooltipTitle != null) -->Line_16 $$ sb.append(myTooltipTitle).append("<br>")[ CD ]
