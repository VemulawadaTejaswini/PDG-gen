Line_2 $$ public void testGlobFilter() throws Exception -->Line_3 $$ createHttpFSServer(false)[ CD ]
Line_7 $$ String user = HadoopUsersConfTestHelper.getHadoopUsers()[0]-->Line_8 $$ URL url = new URL(TestJettyHelper.getJettyURL(), MessageFormat.format("/webhdfs/v1/tmp?user.name=[ FD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_12 $$ reader.readLine()[ FD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_5 $$ fs.mkdirs(new Path("/tmp"))[ CD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_10 $$ Assert.assertEquals(conn.getResponseCode(), HttpURLConnection.HTTP_OK)[ CD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ CD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_8 $$ URL url = new URL(TestJettyHelper.getJettyURL(), MessageFormat.format("/webhdfs/v1/tmp?user.name=[ CD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_10 $$ Assert.assertEquals(conn.getResponseCode(), HttpURLConnection.HTTP_OK)[ FD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_6 $$ fs.create(new Path("/tmp/foo.txt")).close()[ CD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_7 $$ String user = HadoopUsersConfTestHelper.getHadoopUsers()[0][ CD ]
Line_4 $$ FileSystem fs = FileSystem.get(TestHdfsHelper.getHdfsConf())-->Line_6 $$ fs.create(new Path("/tmp/foo.txt")).close()[ FD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_4 $$ FileSystem fs = FileSystem.get(TestHdfsHelper.getHdfsConf())[ CD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_13 $$ reader.close()[ CD ]
Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))-->Line_13 $$ reader.close()[ FD ]
Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_11 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_8 $$ URL url = new URL(TestJettyHelper.getJettyURL(), MessageFormat.format("/webhdfs/v1/tmp?user.name=-->Line_9 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_4 $$ FileSystem fs = FileSystem.get(TestHdfsHelper.getHdfsConf())-->Line_5 $$ fs.mkdirs(new Path("/tmp"))[ FD ]
Line_2 $$ public void testGlobFilter() throws Exception -->Line_12 $$ reader.readLine()[ CD ]
