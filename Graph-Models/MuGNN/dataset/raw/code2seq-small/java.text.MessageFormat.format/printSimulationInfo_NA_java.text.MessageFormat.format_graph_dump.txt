Line_3 $$ if (printSimulation) -->Line_7 $$ LOG.info(MessageFormat.format("# applications = [ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_28 $$ simulateInfoMap.put("Estimated simulate time (s)", (long) (Math.ceil(maxRuntime / 1000.0)))[ CD ]
Line_3 $$ if (printSimulation) -->Line_13 $$ LOG.info("------------------------------------")[ CD ]
Line_3 $$ if (printSimulation) -->Line_8 $$ LOG.info("JobId\tQueue\tAMType\tDuration\t#Tasks")[ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_25 $$ simulateInfoMap.put("Average tasks per applicaion", (int) (Math.ceil((numTasks + 0.0) / numAMs)))[ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_24 $$ simulateInfoMap.put("Number of tasks", numTasks)[ CD ]
Line_3 $$ if (printSimulation) -->Line_14 $$ LOG.info(MessageFormat.format("number of queues = [ CD ]
Line_3 $$ if (printSimulation) -->Line_16 $$ LOG.info(MessageFormat.format("estimated simulation time is [ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_22 $$ simulateInfoMap.put("Node VCores", nmVCores)[ CD ]
Line_3 $$ if (printSimulation) -->Line_6 $$ LOG.info("------------------------------------")[ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_21 $$ simulateInfoMap.put("Node memory (MB)", nmMemoryMB)[ CD ]
Line_3 $$ if (printSimulation) -->Line_17 $$ LOG.info("------------------------------------")[ CD ]
Line_3 $$ if (printSimulation) -->Line_4 $$ LOG.info("------------------------------------")[ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_27 $$ simulateInfoMap.put("Average applications per queue", (int) (Math.ceil((numAMs + 0.0) / queueAppNumMap.size())))[ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_3 $$ if (printSimulation) [ CD ]
Line_3 $$ if (printSimulation) -->Line_15 $$ LOG.info("------------------------------------")[ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_20 $$ simulateInfoMap.put("Number of nodes", numNMs)[ CD ]
Line_10 $$ AMSimulator am = entry.getValue()-->Line_11 $$ LOG.info(entry.getKey() + "\t" + am.getQueue() + "\t" + am.getAMType() + "\t" + am.getDuration() + "\t" + am.getNumTasks())[ FD ]
Line_9 $$ for (Map.Entry<String, AMSimulator> entry : amMap.entrySet()) -->Line_10 $$ AMSimulator am = entry.getValue()[ FD ]
Line_2 $$ private void printSimulationInfo() -->Line_23 $$ simulateInfoMap.put("Number of applications", numAMs)[ CD ]
Line_2 $$ private void printSimulationInfo() -->Line_19 $$ simulateInfoMap.put("Number of racks", numRacks)[ CD ]
Line_3 $$ if (printSimulation) -->Line_5 $$ LOG.info(MessageFormat.format("# nodes = [ CD ]
Line_9 $$ for (Map.Entry<String, AMSimulator> entry : amMap.entrySet()) -->Line_11 $$ LOG.info(entry.getKey() + "\t" + am.getQueue() + "\t" + am.getAMType() + "\t" + am.getDuration() + "\t" + am.getNumTasks())[ FD ]
Line_2 $$ private void printSimulationInfo() -->Line_26 $$ simulateInfoMap.put("Number of queues", queueAppNumMap.size())[ CD ]
