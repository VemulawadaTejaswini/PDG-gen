Line_7 $$ if (choices == ReplaceChoice.ALL) -->Line_8 $$ text = MessageFormat.format(text, occurrencesMap.get(choices).size())[ CD ]
Line_5 $$ if (choices != null) -->Line_7 $$ if (choices == ReplaceChoice.ALL) [ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_12 $$ return rendererComponent[ CD ]
Line_4 $$ final ReplaceChoice choices = (ReplaceChoice) value-->Line_7 $$ if (choices == ReplaceChoice.ALL) [ FD ]
Line_4 $$ final ReplaceChoice choices = (ReplaceChoice) value-->Line_6 $$ String text = choices.getDescription()[ FD ]
Line_4 $$ final ReplaceChoice choices = (ReplaceChoice) value-->Line_5 $$ if (choices != null) [ FD ]
Line_6 $$ String text = choices.getDescription()-->Line_8 $$ text = MessageFormat.format(text, occurrencesMap.get(choices).size())[ FD ]
Line_4 $$ final ReplaceChoice choices = (ReplaceChoice) value-->Line_8 $$ text = MessageFormat.format(text, occurrencesMap.get(choices).size())[ FD ]
Line_6 $$ String text = choices.getDescription()-->Line_10 $$ setText(text)[ FD ]
Line_5 $$ if (choices != null) -->Line_6 $$ String text = choices.getDescription()[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_4 $$ final ReplaceChoice choices = (ReplaceChoice) value[ CD ]
Line_5 $$ if (choices != null) -->Line_10 $$ setText(text)[ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_5 $$ if (choices != null) [ CD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_3 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ FD ]
Line_8 $$ text = MessageFormat.format(text, occurrencesMap.get(choices).size())-->Line_10 $$ setText(text)[ FD ]
Line_2 $$ public Component getListCellRendererComponent(final JList list, final Object value, final int index, final boolean isSelected, final boolean cellHasFocus) -->Line_3 $$ final Component rendererComponent = super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus)[ CD ]
