Line_5 $$ if (qName != null) -->Line_12 $$ name = MessageFormat.format(pattern, qName.getLocalPart(), qName.getNamespaceURI())[ CD ]
Line_4 $$ final String name-->Line_12 $$ name = MessageFormat.format(pattern, qName.getLocalPart(), qName.getNamespaceURI())[ FD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_5 $$ if (qName != null) [ CD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_16 $$ final LocalQuickFix[] fixes = contextProvider.getQuickFixFactory().createUnknownNodeTestFixes(nodeTest)[ FD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_17 $$ addProblem(myManager.createProblemDescriptor(nodeTest, "<html>Unknown " + type + " name " + name + "</html>", myOnTheFly, fixes, ProblemHighlightType.GENERIC_ERROR_OR_WARNING))[ FD ]
Line_16 $$ final LocalQuickFix[] fixes = contextProvider.getQuickFixFactory().createUnknownNodeTestFixes(nodeTest)-->Line_17 $$ addProblem(myManager.createProblemDescriptor(nodeTest, "<html>Unknown " + type + " name " + name + "</html>", myOnTheFly, fixes, ProblemHighlightType.GENERIC_ERROR_OR_WARNING))[ FD ]
Line_12 $$ name = MessageFormat.format(pattern, qName.getLocalPart(), qName.getNamespaceURI())-->Line_14 $$ name = MessageFormat.format("''<b>[ FD ]
Line_3 $$ final QName qName = contextProvider.getQName(prefixedName, nodeTest)-->Line_5 $$ if (qName != null) [ FD ]
Line_8 $$ pattern = "''<b>-->Line_12 $$ name = MessageFormat.format(pattern, qName.getLocalPart(), qName.getNamespaceURI())[ FD ]
Line_3 $$ final QName qName = contextProvider.getQName(prefixedName, nodeTest)-->Line_7 $$ if (!"".equals(qName.getNamespaceURI())) [ FD ]
Line_5 $$ if (qName != null) -->Line_14 $$ name = MessageFormat.format("''<b>[ CD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_4 $$ final String name[ CD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_3 $$ final QName qName = contextProvider.getQName(prefixedName, nodeTest)[ FD ]
Line_6 $$ final String pattern-->Line_12 $$ name = MessageFormat.format(pattern, qName.getLocalPart(), qName.getNamespaceURI())[ FD ]
Line_10 $$ pattern = "''<b>-->Line_12 $$ name = MessageFormat.format(pattern, qName.getLocalPart(), qName.getNamespaceURI())[ FD ]
Line_7 $$ if (!"".equals(qName.getNamespaceURI())) -->Line_8 $$ pattern = "''<b>[ CD ]
Line_6 $$ final String pattern-->Line_8 $$ pattern = "''<b>[ FD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_3 $$ final QName qName = contextProvider.getQName(prefixedName, nodeTest)[ CD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_17 $$ addProblem(myManager.createProblemDescriptor(nodeTest, "<html>Unknown " + type + " name " + name + "</html>", myOnTheFly, fixes, ProblemHighlightType.GENERIC_ERROR_OR_WARNING))[ CD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_16 $$ final LocalQuickFix[] fixes = contextProvider.getQuickFixFactory().createUnknownNodeTestFixes(nodeTest)[ CD ]
Line_7 $$ if (!"".equals(qName.getNamespaceURI())) -->Line_10 $$ pattern = "''<b>[ CD ]
Line_5 $$ if (qName != null) -->Line_7 $$ if (!"".equals(qName.getNamespaceURI())) [ CD ]
Line_5 $$ if (qName != null) -->Line_6 $$ final String pattern[ CD ]
Line_8 $$ pattern = "''<b>-->Line_10 $$ pattern = "''<b>[ FD ]
Line_2 $$ private void registerProblem(ContextProvider contextProvider, PrefixedName prefixedName, XPathNodeTest nodeTest, String type) -->Line_14 $$ name = MessageFormat.format("''<b>[ FD ]
Line_4 $$ final String name-->Line_14 $$ name = MessageFormat.format("''<b>[ FD ]
Line_3 $$ final QName qName = contextProvider.getQName(prefixedName, nodeTest)-->Line_12 $$ name = MessageFormat.format(pattern, qName.getLocalPart(), qName.getNamespaceURI())[ FD ]
Line_6 $$ final String pattern-->Line_10 $$ pattern = "''<b>[ FD ]
