Line_6 $$ String text = getString(component, "text", "")-->Line_18 $$ int caret = //java[ FD ]
Line_26 $$ off = Math.max(0, Math.min(off, (hidden ? (fm.charWidth('*') * text.length()) : fm.stringWidth(text)) - width + 4))-->Line_27 $$ if (off != offset) [ FD ]
Line_7 $$ int start = getInteger(component, "start", 0)-->Line_9 $$ setInteger(component, "start", start = text.length(), 0)[ FD ]
Line_22 $$ off = caret-->Line_23 $$ if (off < caret - width + 4) [ FD ]
Line_6 $$ String text = getString(component, "text", "")-->Line_8 $$ if (start > text.length()) [ FD ]
Line_22 $$ off = caret-->Line_26 $$ off = Math.max(0, Math.min(off, (hidden ? (fm.charWidth('*') * text.length()) : fm.stringWidth(text)) - width + 4))[ FD ]
Line_7 $$ int start = getInteger(component, "start", 0)-->Line_8 $$ if (start > text.length()) [ FD ]
Line_13 $$ setInteger(component, "end", end = text.length(), 0)-->Line_18 $$ int caret = //java[ FD ]
Line_27 $$ if (off != offset) -->Line_28 $$ setInteger(component, "offset", off, 0)[ CD ]
Line_16 $$ int off = offset-->Line_24 $$ off = caret - width + 4[ FD ]
Line_16 $$ int off = offset-->Line_27 $$ if (off != offset) [ FD ]
Line_23 $$ if (off < caret - width + 4) -->Line_24 $$ off = caret - width + 4[ CD ]
Line_11 $$ int end = getInteger(component, "end", 0)-->Line_12 $$ if (end > text.length()) [ FD ]
Line_17 $$ FontMetrics fm = getFontMetrics(getFont())-->Line_26 $$ off = Math.max(0, Math.min(off, (hidden ? (fm.charWidth('*') * text.length()) : fm.stringWidth(text)) - width + 4))[ FD ]
Line_16 $$ int off = offset-->Line_23 $$ if (off < caret - width + 4) [ FD ]
Line_22 $$ off = caret-->Line_28 $$ setInteger(component, "offset", off, 0)[ FD ]
Line_6 $$ String text = getString(component, "text", "")-->Line_13 $$ setInteger(component, "end", end = text.length(), 0)[ FD ]
Line_22 $$ off = caret-->Line_27 $$ if (off != offset) [ FD ]
Line_16 $$ int off = offset-->Line_22 $$ off = caret[ FD ]
Line_24 $$ off = caret - width + 4-->Line_28 $$ setInteger(component, "offset", off, 0)[ FD ]
Line_12 $$ if (end > text.length()) -->Line_13 $$ setInteger(component, "end", end = text.length(), 0)[ CD ]
Line_18 $$ int caret = //java-->Line_22 $$ off = caret[ FD ]
Line_24 $$ off = caret - width + 4-->Line_27 $$ if (off != offset) [ FD ]
Line_26 $$ off = Math.max(0, Math.min(off, (hidden ? (fm.charWidth('*') * text.length()) : fm.stringWidth(text)) - width + 4))-->Line_28 $$ setInteger(component, "offset", off, 0)[ FD ]
Line_17 $$ FontMetrics fm = getFontMetrics(getFont())-->Line_18 $$ int caret = //java[ FD ]
Line_11 $$ int end = getInteger(component, "end", 0)-->Line_18 $$ int caret = //java[ FD ]
Line_6 $$ String text = getString(component, "text", "")-->Line_9 $$ setInteger(component, "start", start = text.length(), 0)[ FD ]
Line_11 $$ int end = getInteger(component, "end", 0)-->Line_13 $$ setInteger(component, "end", end = text.length(), 0)[ FD ]
Line_16 $$ int off = offset-->Line_28 $$ setInteger(component, "offset", off, 0)[ FD ]
Line_16 $$ int off = offset-->Line_26 $$ off = Math.max(0, Math.min(off, (hidden ? (fm.charWidth('*') * text.length()) : fm.stringWidth(text)) - width + 4))[ FD ]
Line_6 $$ String text = getString(component, "text", "")-->Line_26 $$ off = Math.max(0, Math.min(off, (hidden ? (fm.charWidth('*') * text.length()) : fm.stringWidth(text)) - width + 4))[ FD ]
Line_24 $$ off = caret - width + 4-->Line_26 $$ off = Math.max(0, Math.min(off, (hidden ? (fm.charWidth('*') * text.length()) : fm.stringWidth(text)) - width + 4))[ FD ]
Line_15 $$ int offset = getInteger(component, "offset", 0)-->Line_27 $$ if (off != offset) [ FD ]
Line_22 $$ off = caret-->Line_24 $$ off = caret - width + 4[ FD ]
Line_6 $$ String text = getString(component, "text", "")-->Line_12 $$ if (end > text.length()) [ FD ]
Line_8 $$ if (start > text.length()) -->Line_9 $$ setInteger(component, "start", start = text.length(), 0)[ CD ]
