Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_4 $$ final int maxWidth = fontMetrics.stringWidth(path)[ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_18 $$ if (width <= length) [ FD ]
Line_15 $$ for (int i = 1; i < strings.length; i++) -->Line_18 $$ if (width <= length) [ CD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_5 $$ if (maxWidth <= length) [ FD ]
Line_18 $$ if (width <= length) -->Line_19 $$ myMaxWidth = Math.max(width, myMaxWidth)[ CD ]
Line_4 $$ final int maxWidth = fontMetrics.stringWidth(path)-->Line_6 $$ myMaxWidth = Math.max(maxWidth, myMaxWidth)[ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_3 $$ final FontMetrics fontMetrics = component.getFontMetrics(component.getFont())[ CD ]
Line_9 $$ final StringBuilder result = new StringBuilder(path)-->Line_22 $$ result.delete(4, 5 + strings[i].length())[ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_10 $$ if (path.startsWith(separator)) [ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_13 $$ final String[] strings = result.toString().split(separator)[ CD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_24 $$ return result.toString()[ CD ]
Line_18 $$ if (width <= length) -->Line_20 $$ return clipped[ CD ]
Line_3 $$ final FontMetrics fontMetrics = component.getFontMetrics(component.getFont())-->Line_4 $$ final int maxWidth = fontMetrics.stringWidth(path)[ FD ]
Line_16 $$ final String clipped = result.toString()-->Line_17 $$ final int width = fontMetrics.stringWidth(clipped)[ FD ]
Line_9 $$ final StringBuilder result = new StringBuilder(path)-->Line_24 $$ return result.toString()[ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_13 $$ final String[] strings = result.toString().split(separator)[ FD ]
Line_9 $$ final StringBuilder result = new StringBuilder(path)-->Line_16 $$ final String clipped = result.toString()[ FD ]
Line_15 $$ for (int i = 1; i < strings.length; i++) -->Line_17 $$ final int width = fontMetrics.stringWidth(clipped)[ CD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_5 $$ if (maxWidth <= length) [ CD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_4 $$ final int maxWidth = fontMetrics.stringWidth(path)[ CD ]
Line_5 $$ if (maxWidth <= length) -->Line_7 $$ return path[ CD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_3 $$ final FontMetrics fontMetrics = component.getFontMetrics(component.getFont())[ FD ]
Line_10 $$ if (path.startsWith(separator)) -->Line_11 $$ result.delete(0, 1)[ CD ]
Line_15 $$ for (int i = 1; i < strings.length; i++) -->Line_22 $$ result.delete(4, 5 + strings[i].length())[ CD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_14 $$ result.replace(0, strings[0].length(), "...")[ CD ]
Line_3 $$ final FontMetrics fontMetrics = component.getFontMetrics(component.getFont())-->Line_17 $$ final int width = fontMetrics.stringWidth(clipped)[ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_9 $$ final StringBuilder result = new StringBuilder(path)[ CD ]
Line_5 $$ if (maxWidth <= length) -->Line_6 $$ myMaxWidth = Math.max(maxWidth, myMaxWidth)[ CD ]
Line_17 $$ final int width = fontMetrics.stringWidth(clipped)-->Line_19 $$ myMaxWidth = Math.max(width, myMaxWidth)[ FD ]
Line_9 $$ final StringBuilder result = new StringBuilder(path)-->Line_14 $$ result.replace(0, strings[0].length(), "...")[ FD ]
Line_4 $$ final int maxWidth = fontMetrics.stringWidth(path)-->Line_5 $$ if (maxWidth <= length) [ FD ]
Line_9 $$ final StringBuilder result = new StringBuilder(path)-->Line_13 $$ final String[] strings = result.toString().split(separator)[ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_15 $$ for (int i = 1; i < strings.length; i++) [ CD ]
Line_15 $$ for (int i = 1; i < strings.length; i++) -->Line_16 $$ final String clipped = result.toString()[ CD ]
Line_9 $$ final StringBuilder result = new StringBuilder(path)-->Line_11 $$ result.delete(0, 1)[ FD ]
Line_2 $$ private String trimPath(String path, Component component, String separator, int length) -->Line_10 $$ if (path.startsWith(separator)) [ CD ]
Line_17 $$ final int width = fontMetrics.stringWidth(clipped)-->Line_18 $$ if (width <= length) [ FD ]
