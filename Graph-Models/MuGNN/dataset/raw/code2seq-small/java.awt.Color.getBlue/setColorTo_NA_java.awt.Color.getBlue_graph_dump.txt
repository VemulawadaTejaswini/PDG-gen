Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_6 $$ ColorConstructors type = getConstructorType(argumentList.getExpressionTypes())[ CD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_25 $$ float[] rgba = color.getColorComponents(null)[ FD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_15 $$ replaceInt(expr[0], color.getRed())[ FD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_20 $$ if (color.getAlpha() != 255) [ FD ]
Line_6 $$ ColorConstructors type = getConstructorType(argumentList.getExpressionTypes())-->Line_29 $$ if (type == ColorConstructors.FLOAT_x4) [ FD ]
Line_29 $$ if (type == ColorConstructors.FLOAT_x4) -->Line_31 $$ if (color.getAlpha() != 255) [ CD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_31 $$ if (color.getAlpha() != 255) [ FD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_17 $$ replaceInt(expr[2], color.getBlue())[ FD ]
Line_18 $$ if (type == ColorConstructors.INT_x4) -->Line_19 $$ replaceInt(expr[3], color.getAlpha())[ CD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_3 $$ PsiExpressionList argumentList = ((PsiNewExpression) element).getArgumentList()[ CD ]
Line_6 $$ ColorConstructors type = getConstructorType(argumentList.getExpressionTypes())-->Line_18 $$ if (type == ColorConstructors.INT_x4) [ FD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_19 $$ replaceInt(expr[3], color.getAlpha())[ FD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_11 $$ replaceInt(expr[0], color.getRGB(), true)[ FD ]
Line_3 $$ PsiExpressionList argumentList = ((PsiNewExpression) element).getArgumentList()-->Line_5 $$ PsiExpression[] expr = argumentList.getExpressions()[ FD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_5 $$ PsiExpression[] expr = argumentList.getExpressions()[ CD ]
Line_18 $$ if (type == ColorConstructors.INT_x4) -->Line_20 $$ if (color.getAlpha() != 255) [ CD ]
Line_29 $$ if (type == ColorConstructors.FLOAT_x4) -->Line_30 $$ replaceFloat(expr[3], rgba.length == 4 ? rgba[3] : 0f)[ CD ]
Line_2 $$ public void setColorTo(@NotNull PsiElement element, @NotNull Color color) -->Line_16 $$ replaceInt(expr[1], color.getGreen())[ FD ]
Line_3 $$ PsiExpressionList argumentList = ((PsiNewExpression) element).getArgumentList()-->Line_6 $$ ColorConstructors type = getConstructorType(argumentList.getExpressionTypes())[ FD ]
