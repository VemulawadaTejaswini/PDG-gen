Line_2 $$ public static String[] splitTrimmingTokens(String separators, String list, boolean include) -->Line_6 $$ while (tokens.hasMoreTokens()) [ CD ]
Line_2 $$ public static String[] splitTrimmingTokens(String separators, String list, boolean include) -->Line_5 $$ int i = 0[ CD ]
Line_3 $$ StringTokenizer tokens = new StringTokenizer(list, separators, include)-->Line_6 $$ while (tokens.hasMoreTokens()) [ FD ]
Line_2 $$ public static String[] splitTrimmingTokens(String separators, String list, boolean include) -->Line_3 $$ StringTokenizer tokens = new StringTokenizer(list, separators, include)[ CD ]
Line_2 $$ public static String[] splitTrimmingTokens(String separators, String list, boolean include) -->Line_4 $$ String[] result = new String[tokens.countTokens()][ CD ]
Line_6 $$ while (tokens.hasMoreTokens()) -->Line_7 $$ result[i++] = tokens.nextToken().trim()[ CD ]
Line_3 $$ StringTokenizer tokens = new StringTokenizer(list, separators, include)-->Line_4 $$ String[] result = new String[tokens.countTokens()][ FD ]
Line_3 $$ StringTokenizer tokens = new StringTokenizer(list, separators, include)-->Line_7 $$ result[i++] = tokens.nextToken().trim()[ FD ]
Line_2 $$ public static String[] splitTrimmingTokens(String separators, String list, boolean include) -->Line_9 $$ return result[ CD ]
Line_5 $$ int i = 0-->Line_7 $$ result[i++] = tokens.nextToken().trim()[ FD ]
