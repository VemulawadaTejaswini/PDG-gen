Line_2 $$ private ArrayList<LoggedLocation> preferredLocationForSplits(String splits) -->Line_3 $$ if (splits != null) [ CD ]
Line_8 $$ while (tok.hasMoreTokens()) -->Line_9 $$ String nextSplit = tok.nextToken()[ CD ]
Line_5 $$ StringTokenizer tok = new StringTokenizer(splits, ",", false)-->Line_6 $$ if (tok.countTokens() <= MAXIMUM_PREFERRED_LOCATIONS) [ FD ]
Line_3 $$ if (splits != null) -->Line_6 $$ if (tok.countTokens() <= MAXIMUM_PREFERRED_LOCATIONS) [ CD ]
Line_8 $$ while (tok.hasMoreTokens()) -->Line_10 $$ ParsedHost node = getAndRecordParsedHost(nextSplit)[ CD ]
Line_4 $$ ArrayList<LoggedLocation> locations = null-->Line_12 $$ locations.add(node.makeLoggedLocation())[ FD ]
Line_5 $$ StringTokenizer tok = new StringTokenizer(splits, ",", false)-->Line_9 $$ String nextSplit = tok.nextToken()[ FD ]
Line_7 $$ locations = new ArrayList<LoggedLocation>()-->Line_12 $$ locations.add(node.makeLoggedLocation())[ FD ]
Line_6 $$ if (tok.countTokens() <= MAXIMUM_PREFERRED_LOCATIONS) -->Line_15 $$ return locations[ CD ]
Line_8 $$ while (tok.hasMoreTokens()) -->Line_11 $$ if (locations != null && node != null) [ CD ]
Line_9 $$ String nextSplit = tok.nextToken()-->Line_10 $$ ParsedHost node = getAndRecordParsedHost(nextSplit)[ FD ]
Line_5 $$ StringTokenizer tok = new StringTokenizer(splits, ",", false)-->Line_8 $$ while (tok.hasMoreTokens()) [ FD ]
Line_10 $$ ParsedHost node = getAndRecordParsedHost(nextSplit)-->Line_12 $$ locations.add(node.makeLoggedLocation())[ FD ]
Line_3 $$ if (splits != null) -->Line_4 $$ ArrayList<LoggedLocation> locations = null[ CD ]
Line_2 $$ private ArrayList<LoggedLocation> preferredLocationForSplits(String splits) -->Line_3 $$ if (splits != null) [ FD ]
Line_6 $$ if (tok.countTokens() <= MAXIMUM_PREFERRED_LOCATIONS) -->Line_8 $$ while (tok.hasMoreTokens()) [ CD ]
Line_3 $$ if (splits != null) -->Line_5 $$ StringTokenizer tok = new StringTokenizer(splits, ",", false)[ CD ]
Line_2 $$ private ArrayList<LoggedLocation> preferredLocationForSplits(String splits) -->Line_18 $$ return null[ CD ]
Line_6 $$ if (tok.countTokens() <= MAXIMUM_PREFERRED_LOCATIONS) -->Line_7 $$ locations = new ArrayList<LoggedLocation>()[ CD ]
Line_4 $$ ArrayList<LoggedLocation> locations = null-->Line_7 $$ locations = new ArrayList<LoggedLocation>()[ FD ]
Line_11 $$ if (locations != null && node != null) -->Line_12 $$ locations.add(node.makeLoggedLocation())[ CD ]
