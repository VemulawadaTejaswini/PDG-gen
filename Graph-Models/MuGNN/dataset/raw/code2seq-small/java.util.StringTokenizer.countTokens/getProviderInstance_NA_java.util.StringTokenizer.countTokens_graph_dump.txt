Line_7 $$ Object instance-->Line_13 $$ if (instance instanceof MavenParamReferenceProvider) [ FD ]
Line_3 $$ if (!myProviderInitialized) -->Line_5 $$ if (myParam.refProvider != null) [ CD ]
Line_3 $$ if (!myProviderInitialized) -->Line_29 $$ if (res != null && myParam.soft != null) [ CD ]
Line_18 $$ if (myParam.values != null) -->Line_21 $$ if (n == 0)[ CD ]
Line_20 $$ int n = st.countTokens()-->Line_21 $$ if (n == 0)[ FD ]
Line_18 $$ if (myParam.values != null) -->Line_27 $$ res = new MavenFixedValueReferenceProvider(values)[ CD ]
Line_18 $$ if (myParam.values != null) -->Line_19 $$ StringTokenizer st = new StringTokenizer(myParam.values, " ,;")[ CD ]
Line_2 $$ public MavenParamReferenceProvider getProviderInstance() -->Line_3 $$ if (!myProviderInitialized) [ CD ]
Line_18 $$ if (myParam.values != null) -->Line_20 $$ int n = st.countTokens()[ CD ]
Line_2 $$ public MavenParamReferenceProvider getProviderInstance() -->Line_35 $$ return myProviderInstance[ CD ]
Line_4 $$ MavenParamReferenceProvider res = null-->Line_27 $$ res = new MavenFixedValueReferenceProvider(values)[ FD ]
Line_5 $$ if (myParam.refProvider != null) -->Line_18 $$ if (myParam.values != null) [ CD ]
Line_29 $$ if (res != null && myParam.soft != null) -->Line_30 $$ ((MavenSoftAwareReferenceProvider) res).setSoft(myParam.soft)[ CD ]
Line_5 $$ if (myParam.refProvider != null) -->Line_13 $$ if (instance instanceof MavenParamReferenceProvider) [ CD ]
Line_7 $$ Object instance-->Line_9 $$ instance = myClassLoader.loadClass(myParam.refProvider).newInstance()[ FD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(myParam.values, " ,;")-->Line_25 $$ values[i] = st.nextToken()[ FD ]
Line_4 $$ MavenParamReferenceProvider res = null-->Line_14 $$ res = (MavenParamReferenceProvider) instance[ FD ]
Line_13 $$ if (instance instanceof MavenParamReferenceProvider) -->Line_16 $$ res = new PsiReferenceProviderWrapper((PsiReferenceProvider) instance)[ CD ]
Line_5 $$ if (myParam.refProvider != null) -->Line_7 $$ Object instance[ CD ]
Line_9 $$ instance = myClassLoader.loadClass(myParam.refProvider).newInstance()-->Line_13 $$ if (instance instanceof MavenParamReferenceProvider) [ FD ]
Line_20 $$ int n = st.countTokens()-->Line_24 $$ for (int i = 0; i < n; i++) [ FD ]
Line_14 $$ res = (MavenParamReferenceProvider) instance-->Line_16 $$ res = new PsiReferenceProviderWrapper((PsiReferenceProvider) instance)[ FD ]
Line_13 $$ if (instance instanceof MavenParamReferenceProvider) -->Line_14 $$ res = (MavenParamReferenceProvider) instance[ CD ]
Line_3 $$ if (!myProviderInitialized) -->Line_4 $$ MavenParamReferenceProvider res = null[ CD ]
Line_4 $$ MavenParamReferenceProvider res = null-->Line_16 $$ res = new PsiReferenceProviderWrapper((PsiReferenceProvider) instance)[ FD ]
Line_18 $$ if (myParam.values != null) -->Line_23 $$ String[] values = new String[n][ CD ]
Line_16 $$ res = new PsiReferenceProviderWrapper((PsiReferenceProvider) instance)-->Line_27 $$ res = new MavenFixedValueReferenceProvider(values)[ FD ]
Line_19 $$ StringTokenizer st = new StringTokenizer(myParam.values, " ,;")-->Line_20 $$ int n = st.countTokens()[ FD ]
Line_18 $$ if (myParam.values != null) -->Line_24 $$ for (int i = 0; i < n; i++) [ CD ]
Line_24 $$ for (int i = 0; i < n; i++) -->Line_25 $$ values[i] = st.nextToken()[ CD ]
Line_14 $$ res = (MavenParamReferenceProvider) instance-->Line_27 $$ res = new MavenFixedValueReferenceProvider(values)[ FD ]
