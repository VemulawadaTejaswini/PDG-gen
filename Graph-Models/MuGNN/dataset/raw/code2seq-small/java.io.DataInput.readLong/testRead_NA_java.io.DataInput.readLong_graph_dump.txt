Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_12 $$ assert test.readByte() == canon.readByte()[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_8 $$ Assert.assertEquals(ByteBufferUtil.readWithShortLength(canon), ByteBufferUtil.readWithShortLength(test))[ CD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_3 $$ Assert.assertEquals(ByteBufferUtil.readWithLength(canon), ByteBufferUtil.readWithLength(test))[ CD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_11 $$ assert test.readShort() == canon.readShort()[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_13 $$ assert test.readDouble() == canon.readDouble()[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_8 $$ Assert.assertEquals(ByteBufferUtil.readWithShortLength(canon), ByteBufferUtil.readWithShortLength(test))[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_7 $$ Assert.assertEquals(ByteBufferUtil.readWithShortLength(canon), ByteBufferUtil.readWithShortLength(test))[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_4 $$ Assert.assertEquals(ByteBufferUtil.readWithLength(canon), ByteBufferUtil.readWithLength(test))[ CD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_14 $$ assert test.readFloat() == canon.readFloat()[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_6 $$ Assert.assertEquals(ByteBufferUtil.readWithShortLength(canon), ByteBufferUtil.readWithShortLength(test))[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_5 $$ Assert.assertEquals(ByteBufferUtil.readWithLength(canon), ByteBufferUtil.readWithLength(test))[ CD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_7 $$ Assert.assertEquals(ByteBufferUtil.readWithShortLength(canon), ByteBufferUtil.readWithShortLength(test))[ CD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_4 $$ Assert.assertEquals(ByteBufferUtil.readWithLength(canon), ByteBufferUtil.readWithLength(test))[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_16 $$ test.readInt()[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_3 $$ Assert.assertEquals(ByteBufferUtil.readWithLength(canon), ByteBufferUtil.readWithLength(test))[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_6 $$ Assert.assertEquals(ByteBufferUtil.readWithShortLength(canon), ByteBufferUtil.readWithShortLength(test))[ CD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_9 $$ assert test.readLong() == canon.readLong()[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_5 $$ Assert.assertEquals(ByteBufferUtil.readWithLength(canon), ByteBufferUtil.readWithLength(test))[ FD ]
Line_2 $$ private void testRead(DataInput test, DataInput canon) throws IOException -->Line_10 $$ assert test.readInt() == canon.readInt()[ FD ]
