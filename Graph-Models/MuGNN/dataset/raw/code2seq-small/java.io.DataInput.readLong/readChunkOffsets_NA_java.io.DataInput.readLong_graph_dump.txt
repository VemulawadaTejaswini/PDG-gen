Line_29 $$ if (e instanceof EOFException) -->Line_30 $$ String msg = String.format("Corrupted Index File %s: read %d but expected %d chunks.", indexFilePath, i, chunkCount)[ CD ]
Line_20 $$ int i = 0-->Line_30 $$ String msg = String.format("Corrupted Index File %s: read %d but expected %d chunks.", indexFilePath, i, chunkCount)[ FD ]
Line_12 $$ chunkCount = input.readInt()-->Line_30 $$ String msg = String.format("Corrupted Index File %s: read %d but expected %d chunks.", indexFilePath, i, chunkCount)[ FD ]
Line_10 $$ final int chunkCount-->Line_22 $$ for (i = 0; i < chunkCount; i++) [ FD ]
Line_27 $$ if (offsets != null)-->Line_28 $$ offsets.close()[ CD ]
Line_12 $$ chunkCount = input.readInt()-->Line_22 $$ for (i = 0; i < chunkCount; i++) [ FD ]
Line_12 $$ chunkCount = input.readInt()-->Line_13 $$ if (chunkCount <= 0)[ FD ]
Line_10 $$ final int chunkCount-->Line_12 $$ chunkCount = input.readInt()[ FD ]
Line_20 $$ int i = 0-->Line_22 $$ for (i = 0; i < chunkCount; i++) [ FD ]
Line_10 $$ final int chunkCount-->Line_13 $$ if (chunkCount <= 0)[ FD ]
Line_22 $$ for (i = 0; i < chunkCount; i++) -->Line_23 $$ offsets.setLong(i * 8L, input.readLong())[ CD ]
Line_10 $$ final int chunkCount-->Line_30 $$ String msg = String.format("Corrupted Index File %s: read %d but expected %d chunks.", indexFilePath, i, chunkCount)[ FD ]
Line_22 $$ for (i = 0; i < chunkCount; i++) -->Line_30 $$ String msg = String.format("Corrupted Index File %s: read %d but expected %d chunks.", indexFilePath, i, chunkCount)[ FD ]
