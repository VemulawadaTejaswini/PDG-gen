Line_5 $$ while (size-- > 0) -->Line_8 $$ state.addDependency(s, timestamp)[ CD ]
Line_5 $$ while (size-- > 0) -->Line_6 $$ final String s = CompilerIOUtil.readString(input)[ CD ]
Line_7 $$ final long timestamp = input.readLong()-->Line_8 $$ state.addDependency(s, timestamp)[ FD ]
Line_3 $$ int size = input.readInt()-->Line_5 $$ while (size-- > 0) [ FD ]
Line_2 $$ public static PsiElementsValidityState load(DataInput input) throws IOException -->Line_3 $$ int size = input.readInt()[ FD ]
Line_2 $$ public static PsiElementsValidityState load(DataInput input) throws IOException -->Line_3 $$ int size = input.readInt()[ CD ]
Line_2 $$ public static PsiElementsValidityState load(DataInput input) throws IOException -->Line_10 $$ return state[ CD ]
Line_2 $$ public static PsiElementsValidityState load(DataInput input) throws IOException -->Line_5 $$ while (size-- > 0) [ CD ]
Line_2 $$ public static PsiElementsValidityState load(DataInput input) throws IOException -->Line_6 $$ final String s = CompilerIOUtil.readString(input)[ FD ]
Line_5 $$ while (size-- > 0) -->Line_7 $$ final long timestamp = input.readLong()[ CD ]
Line_4 $$ final PsiElementsValidityState state = new PsiElementsValidityState()-->Line_8 $$ state.addDependency(s, timestamp)[ FD ]
Line_6 $$ final String s = CompilerIOUtil.readString(input)-->Line_8 $$ state.addDependency(s, timestamp)[ FD ]
Line_2 $$ public static PsiElementsValidityState load(DataInput input) throws IOException -->Line_7 $$ final long timestamp = input.readLong()[ FD ]
Line_2 $$ public static PsiElementsValidityState load(DataInput input) throws IOException -->Line_4 $$ final PsiElementsValidityState state = new PsiElementsValidityState()[ CD ]
