Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_3 $$ JmxTestBean bean = new JmxTestBean()[ CD ]
Line_5 $$ ProxyFactory factory = new ProxyFactory()-->Line_9 $$ IJmxTestBean proxy = (IJmxTestBean) factory.getProxy()[ FD ]
Line_18 $$ Object nameValue = server.getAttribute(oname, "Name")-->Line_19 $$ assertEquals("Rob Harrop", nameValue)[ FD ]
Line_13 $$ MBeanExporter exporter = new MBeanExporter()-->Line_14 $$ exporter.setServer(server)[ FD ]
Line_13 $$ MBeanExporter exporter = new MBeanExporter()-->Line_16 $$ exporter.registerBeans()[ FD ]
Line_10 $$ String name = "bean:mmm=whatever"-->Line_12 $$ beans.put(name, proxy)[ FD ]
Line_11 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_12 $$ beans.put(name, proxy)[ FD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_9 $$ IJmxTestBean proxy = (IJmxTestBean) factory.getProxy()[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_15 $$ exporter.setBeans(beans)[ CD ]
Line_5 $$ ProxyFactory factory = new ProxyFactory()-->Line_6 $$ factory.setTarget(bean)[ FD ]
Line_9 $$ IJmxTestBean proxy = (IJmxTestBean) factory.getProxy()-->Line_12 $$ beans.put(name, proxy)[ FD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_13 $$ MBeanExporter exporter = new MBeanExporter()[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_11 $$ Map<String, Object> beans = new HashMap<String, Object>()[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_19 $$ assertEquals("Rob Harrop", nameValue)[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_17 $$ ObjectName oname = ObjectName.getInstance(name)[ CD ]
Line_5 $$ ProxyFactory factory = new ProxyFactory()-->Line_8 $$ factory.setInterfaces(IJmxTestBean.class)[ FD ]
Line_13 $$ MBeanExporter exporter = new MBeanExporter()-->Line_15 $$ exporter.setBeans(beans)[ FD ]
Line_17 $$ ObjectName oname = ObjectName.getInstance(name)-->Line_18 $$ Object nameValue = server.getAttribute(oname, "Name")[ FD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_7 $$ factory.addAdvice(new NopInterceptor())[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_12 $$ beans.put(name, proxy)[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_10 $$ String name = "bean:mmm=whatever"[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_16 $$ exporter.registerBeans()[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_8 $$ factory.setInterfaces(IJmxTestBean.class)[ CD ]
Line_10 $$ String name = "bean:mmm=whatever"-->Line_17 $$ ObjectName oname = ObjectName.getInstance(name)[ FD ]
Line_11 $$ Map<String, Object> beans = new HashMap<String, Object>()-->Line_15 $$ exporter.setBeans(beans)[ FD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_4 $$ bean.setName("Rob Harrop")[ CD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_18 $$ Object nameValue = server.getAttribute(oname, "Name")[ CD ]
Line_3 $$ JmxTestBean bean = new JmxTestBean()-->Line_6 $$ factory.setTarget(bean)[ FD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_14 $$ exporter.setServer(server)[ CD ]
Line_5 $$ ProxyFactory factory = new ProxyFactory()-->Line_7 $$ factory.addAdvice(new NopInterceptor())[ FD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_5 $$ ProxyFactory factory = new ProxyFactory()[ CD ]
Line_3 $$ JmxTestBean bean = new JmxTestBean()-->Line_4 $$ bean.setName("Rob Harrop")[ FD ]
Line_2 $$ public void testExportJdkProxy() throws Exception -->Line_6 $$ factory.setTarget(bean)[ CD ]
