Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)[ FD ]
Line_7 $$ AffineTransform oldTransform = gg.getTransform()-->Line_18 $$ gg.setTransform(oldTransform)[ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_6 $$ Graphics2D gg = ((Graphics2D) g)[ CD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)[ CD ]
Line_3 $$ int height = getHeight(lineHeight)-->Line_8 $$ for (int i = 0; i < height; i++) [ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_8 $$ for (int i = 0; i < height; i++) [ CD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_12 $$ if (color == null)[ CD ]
Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)-->Line_10 $$ if (color == null)[ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_3 $$ int height = getHeight(lineHeight)[ FD ]
Line_4 $$ if (scheme == null)-->Line_5 $$ scheme = EditorColorsManager.getInstance().getGlobalScheme()[ CD ]
Line_10 $$ if (color == null)-->Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)[ CD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_4 $$ if (scheme == null)[ CD ]
Line_13 $$ color = getBackgroundColor(scheme)-->Line_12 $$ if (color == null)[ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_7 $$ AffineTransform oldTransform = gg.getTransform()[ CD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)[ FD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_14 $$ gg.setColor(color)[ CD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_3 $$ int height = getHeight(lineHeight)[ CD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_16 $$ gg.translate(0, 1)[ FD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)[ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_18 $$ gg.setTransform(oldTransform)[ CD ]
Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_12 $$ if (color == null)[ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_13 $$ color = getBackgroundColor(scheme)[ FD ]
Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_14 $$ gg.setColor(color)[ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)[ FD ]
Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_13 $$ color = getBackgroundColor(scheme)[ FD ]
Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)-->Line_13 $$ color = getBackgroundColor(scheme)[ FD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_16 $$ gg.translate(0, 1)[ CD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_10 $$ if (color == null)[ CD ]
Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)-->Line_12 $$ if (color == null)[ FD ]
Line_8 $$ for (int i = 0; i < height; i++) -->Line_15 $$ gg.drawPolyline(xPoints, yPoints, xPoints.length)[ CD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_15 $$ gg.drawPolyline(xPoints, yPoints, xPoints.length)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_15 $$ gg.drawPolyline(xPoints, yPoints, xPoints.length)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_14 $$ gg.setColor(color)[ FD ]
Line_13 $$ color = getBackgroundColor(scheme)-->Line_14 $$ gg.setColor(color)[ FD ]
Line_12 $$ if (color == null)-->Line_13 $$ color = getBackgroundColor(scheme)[ CD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_4 $$ if (scheme == null)[ FD ]
Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)-->Line_10 $$ if (color == null)[ FD ]
Line_11 $$ color = getBottomBorderColor(i, lineHeight, scheme)-->Line_14 $$ gg.setColor(color)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_18 $$ gg.setTransform(oldTransform)[ FD ]
Line_2 $$ private static void paintLine(@NotNull Graphics g, @NotNull int[] xPoints, @NotNull int[] yPoints, int lineHeight, @Nullable EditorColorsScheme scheme) -->Line_9 $$ Color color = getTopBorderColor(i, lineHeight, scheme)[ FD ]
Line_13 $$ color = getBackgroundColor(scheme)-->Line_10 $$ if (color == null)[ FD ]
Line_6 $$ Graphics2D gg = ((Graphics2D) g)-->Line_7 $$ AffineTransform oldTransform = gg.getTransform()[ FD ]
