Line_16 $$ AffineTransform transform = AffineTransform.getScaleInstance(scale, scale)-->Line_18 $$ g2d.setTransform(transform)[ FD ]
Line_4 $$ if (source instanceof ImageIcon) -->Line_8 $$ hiDPIscale = 1[ CD ]
Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_15 $$ g2d.translate(x, y)[ FD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_4 $$ if (source instanceof ImageIcon) [ CD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_29 $$ return (int) (source.getIconHeight() * scale) / hiDPIscale[ FD ]
Line_11 $$ return new Icon() -->Line_15 $$ g2d.translate(x, y)[ FD ]
Line_16 $$ AffineTransform transform = AffineTransform.getScaleInstance(scale, scale)-->Line_17 $$ transform.preConcatenate(g2d.getTransform())[ FD ]
Line_6 $$ hiDPIscale = RetinaImage.isAppleHiDPIScaledImage(image) || image instanceof JBHiDPIScaledImage ? 2 : 1-->Line_8 $$ hiDPIscale = 1[ FD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_3 $$ final int hiDPIscale[ CD ]
Line_11 $$ return new Icon() -->Line_29 $$ return (int) (source.getIconHeight() * scale) / hiDPIscale[ CD ]
Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_22 $$ g2d.dispose()[ FD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_11 $$ return new Icon() [ CD ]
Line_3 $$ final int hiDPIscale-->Line_6 $$ hiDPIscale = RetinaImage.isAppleHiDPIScaledImage(image) || image instanceof JBHiDPIScaledImage ? 2 : 1[ FD ]
Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_19 $$ g2d.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC)[ FD ]
Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_18 $$ g2d.setTransform(transform)[ FD ]
Line_11 $$ return new Icon() -->Line_20 $$ source.paintIcon(c, g2d, 0, 0)[ FD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_4 $$ if (source instanceof ImageIcon) [ FD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_10 $$ final double scale = Math.min(32, Math.max(.1, _scale))[ CD ]
Line_11 $$ return new Icon() -->Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()[ CD ]
Line_4 $$ if (source instanceof ImageIcon) -->Line_6 $$ hiDPIscale = RetinaImage.isAppleHiDPIScaledImage(image) || image instanceof JBHiDPIScaledImage ? 2 : 1[ CD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_20 $$ source.paintIcon(c, g2d, 0, 0)[ FD ]
Line_5 $$ Image image = ((ImageIcon) source).getImage()-->Line_6 $$ hiDPIscale = RetinaImage.isAppleHiDPIScaledImage(image) || image instanceof JBHiDPIScaledImage ? 2 : 1[ FD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_10 $$ final double scale = Math.min(32, Math.max(.1, _scale))[ FD ]
Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_17 $$ transform.preConcatenate(g2d.getTransform())[ FD ]
Line_2 $$ public static Icon scale(@NotNull final Icon source, double _scale) -->Line_26 $$ return (int) (source.getIconWidth() * scale) / hiDPIscale[ FD ]
Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_20 $$ source.paintIcon(c, g2d, 0, 0)[ FD ]
Line_11 $$ return new Icon() -->Line_13 $$ Graphics2D g2d = (Graphics2D) g.create()[ FD ]
Line_4 $$ if (source instanceof ImageIcon) -->Line_5 $$ Image image = ((ImageIcon) source).getImage()[ CD ]
Line_10 $$ final double scale = Math.min(32, Math.max(.1, _scale))-->Line_16 $$ AffineTransform transform = AffineTransform.getScaleInstance(scale, scale)[ FD ]
Line_3 $$ final int hiDPIscale-->Line_8 $$ hiDPIscale = 1[ FD ]
Line_11 $$ return new Icon() -->Line_26 $$ return (int) (source.getIconWidth() * scale) / hiDPIscale[ CD ]
