Line_19 $$ if (nodeEnvironment.nodeDataPaths().length == 1) -->Line_21 $$ assertFalse(helper.needsUpgrading(shardId))[ CD ]
Line_4 $$ try (DirectoryStream<Path> stream = Files.newDirectoryStream(getBwcIndicesPath(), "index-*.zip")) -->Line_27 $$ TestUtil.unzip(stream, unzipDir)[ FD ]
Line_2 $$ public void testUpgradeRealIndex() throws IOException, URISyntaxException -->Line_9 $$ CollectionUtil.introSort(indexes, new Comparator<Path>() [ CD ]
Line_9 $$ CollectionUtil.introSort(indexes, new Comparator<Path>() -->Line_11 $$ return o1.getFileName().compareTo(o2.getFileName())[ FD ]
Line_2 $$ public void testUpgradeRealIndex() throws IOException, URISyntaxException -->Line_3 $$ List<Path> indexes = new ArrayList()[ CD ]
Line_5 $$ for (Path path : stream) -->Line_6 $$ indexes.add(path)[ FD ]
Line_3 $$ List<Path> indexes = new ArrayList()-->Line_9 $$ CollectionUtil.introSort(indexes, new Comparator<Path>() [ FD ]
Line_3 $$ List<Path> indexes = new ArrayList()-->Line_15 $$ final Path path = randomFrom(indexes)[ FD ]
Line_2 $$ public void testUpgradeRealIndex() throws IOException, URISyntaxException -->Line_17 $$ final String indexName = indexFile.getFileName().toString().replace(".zip", "").toLowerCase(Locale.ROOT)[ CD ]
Line_2 $$ public void testUpgradeRealIndex() throws IOException, URISyntaxException -->Line_15 $$ final Path path = randomFrom(indexes)[ CD ]
Line_9 $$ CollectionUtil.introSort(indexes, new Comparator<Path>() -->Line_11 $$ return o1.getFileName().compareTo(o2.getFileName())[ CD ]
Line_19 $$ if (nodeEnvironment.nodeDataPaths().length == 1) -->Line_22 $$ return[ CD ]
Line_3 $$ List<Path> indexes = new ArrayList()-->Line_6 $$ indexes.add(path)[ FD ]
