Line_8 $$ String variableBlock = matcher.group(1)-->Line_10 $$ Matcher variableLineMatcher = _poshiVariableLinePattern.matcher(variableBlock)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_11 $$ boolean hasUnsortedVariables = false[ CD ]
Line_10 $$ Matcher variableLineMatcher = _poshiVariableLinePattern.matcher(variableBlock)-->Line_12 $$ while (variableLineMatcher.find()) [ FD ]
Line_12 $$ while (variableLineMatcher.find()) -->Line_16 $$ String variableLine = variableLineMatcher.group(2)[ CD ]
Line_4 $$ while (matcher.find()) -->Line_6 $$ String tabs = StringPool.BLANK[ CD ]
Line_20 $$ hasUnsortedVariables = true-->Line_24 $$ if (!hasUnsortedVariables) [ FD ]
Line_19 $$ if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) -->Line_20 $$ hasUnsortedVariables = true[ CD ]
Line_2 $$ protected String sortPoshiVariables(String content) -->Line_35 $$ content = StringUtil.replaceFirst(content, variableBlock, newVariableBlock)[ FD ]
Line_2 $$ protected String sortPoshiVariables(String content) -->Line_3 $$ Matcher matcher = _poshiVariablesBlockPattern.matcher(content)[ CD ]
Line_12 $$ while (variableLineMatcher.find()) -->Line_17 $$ String variableName = variableLineMatcher.group(3)[ CD ]
Line_10 $$ Matcher variableLineMatcher = _poshiVariableLinePattern.matcher(variableBlock)-->Line_17 $$ String variableName = variableLineMatcher.group(3)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_24 $$ if (!hasUnsortedVariables) [ CD ]
Line_3 $$ Matcher matcher = _poshiVariablesBlockPattern.matcher(content)-->Line_8 $$ String variableBlock = matcher.group(1)[ FD ]
Line_17 $$ String variableName = variableLineMatcher.group(3)-->Line_19 $$ if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) [ FD ]
Line_8 $$ String variableBlock = matcher.group(1)-->Line_9 $$ variableBlock = variableBlock.trim()[ FD ]
Line_11 $$ boolean hasUnsortedVariables = false-->Line_19 $$ if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) [ FD ]
Line_4 $$ while (matcher.find()) -->Line_33 $$ String newVariableBlock = sb.toString()[ CD ]
Line_4 $$ while (matcher.find()) -->Line_5 $$ String previousName = StringPool.BLANK[ CD ]
Line_4 $$ while (matcher.find()) -->Line_35 $$ content = StringUtil.replaceFirst(content, variableBlock, newVariableBlock)[ CD ]
Line_11 $$ boolean hasUnsortedVariables = false-->Line_20 $$ hasUnsortedVariables = true[ FD ]
Line_14 $$ tabs = variableLineMatcher.group(1)-->Line_13 $$ if (tabs.equals(StringPool.BLANK)) [ FD ]
Line_14 $$ tabs = variableLineMatcher.group(1)-->Line_29 $$ sb.append(tabs)[ FD ]
Line_2 $$ protected String sortPoshiVariables(String content) -->Line_3 $$ Matcher matcher = _poshiVariablesBlockPattern.matcher(content)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_12 $$ while (variableLineMatcher.find()) [ CD ]
Line_22 $$ previousName = variableName-->Line_19 $$ if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) [ FD ]
Line_17 $$ String variableName = variableLineMatcher.group(3)-->Line_18 $$ variableLinesMap.put(variableName, variableLine)[ FD ]
Line_16 $$ String variableLine = variableLineMatcher.group(2)-->Line_18 $$ variableLinesMap.put(variableName, variableLine)[ FD ]
Line_6 $$ String tabs = StringPool.BLANK-->Line_14 $$ tabs = variableLineMatcher.group(1)[ FD ]
Line_6 $$ String tabs = StringPool.BLANK-->Line_13 $$ if (tabs.equals(StringPool.BLANK)) [ FD ]
Line_10 $$ Matcher variableLineMatcher = _poshiVariableLinePattern.matcher(variableBlock)-->Line_16 $$ String variableLine = variableLineMatcher.group(2)[ FD ]
Line_5 $$ String previousName = StringPool.BLANK-->Line_22 $$ previousName = variableName[ FD ]
Line_4 $$ while (matcher.find()) -->Line_7 $$ Map<String, String> variableLinesMap = new TreeMap(String.CASE_INSENSITIVE_ORDER)[ CD ]
Line_7 $$ Map<String, String> variableLinesMap = new TreeMap(String.CASE_INSENSITIVE_ORDER)-->Line_18 $$ variableLinesMap.put(variableName, variableLine)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_34 $$ newVariableBlock = newVariableBlock.trim()[ CD ]
Line_2 $$ protected String sortPoshiVariables(String content) -->Line_37 $$ return content[ CD ]
Line_4 $$ while (matcher.find()) -->Line_10 $$ Matcher variableLineMatcher = _poshiVariableLinePattern.matcher(variableBlock)[ CD ]
Line_12 $$ while (variableLineMatcher.find()) -->Line_19 $$ if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) [ CD ]
Line_3 $$ Matcher matcher = _poshiVariablesBlockPattern.matcher(content)-->Line_4 $$ while (matcher.find()) [ FD ]
Line_17 $$ String variableName = variableLineMatcher.group(3)-->Line_22 $$ previousName = variableName[ FD ]
Line_8 $$ String variableBlock = matcher.group(1)-->Line_35 $$ content = StringUtil.replaceFirst(content, variableBlock, newVariableBlock)[ FD ]
Line_12 $$ while (variableLineMatcher.find()) -->Line_13 $$ if (tabs.equals(StringPool.BLANK)) [ CD ]
Line_9 $$ variableBlock = variableBlock.trim()-->Line_35 $$ content = StringUtil.replaceFirst(content, variableBlock, newVariableBlock)[ FD ]
Line_13 $$ if (tabs.equals(StringPool.BLANK)) -->Line_14 $$ tabs = variableLineMatcher.group(1)[ CD ]
Line_12 $$ while (variableLineMatcher.find()) -->Line_18 $$ variableLinesMap.put(variableName, variableLine)[ CD ]
Line_10 $$ Matcher variableLineMatcher = _poshiVariableLinePattern.matcher(variableBlock)-->Line_14 $$ tabs = variableLineMatcher.group(1)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_9 $$ variableBlock = variableBlock.trim()[ CD ]
Line_6 $$ String tabs = StringPool.BLANK-->Line_29 $$ sb.append(tabs)[ FD ]
Line_11 $$ boolean hasUnsortedVariables = false-->Line_24 $$ if (!hasUnsortedVariables) [ FD ]
Line_9 $$ variableBlock = variableBlock.trim()-->Line_10 $$ Matcher variableLineMatcher = _poshiVariableLinePattern.matcher(variableBlock)[ FD ]
Line_12 $$ while (variableLineMatcher.find()) -->Line_22 $$ previousName = variableName[ CD ]
Line_20 $$ hasUnsortedVariables = true-->Line_19 $$ if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) [ FD ]
Line_2 $$ protected String sortPoshiVariables(String content) -->Line_4 $$ while (matcher.find()) [ CD ]
Line_5 $$ String previousName = StringPool.BLANK-->Line_19 $$ if (!hasUnsortedVariables && (variableName.compareToIgnoreCase(previousName) < 0)) [ FD ]
Line_7 $$ Map<String, String> variableLinesMap = new TreeMap(String.CASE_INSENSITIVE_ORDER)-->Line_28 $$ for (Map.Entry<String, String> entry : variableLinesMap.entrySet()) [ FD ]
Line_4 $$ while (matcher.find()) -->Line_8 $$ String variableBlock = matcher.group(1)[ CD ]
