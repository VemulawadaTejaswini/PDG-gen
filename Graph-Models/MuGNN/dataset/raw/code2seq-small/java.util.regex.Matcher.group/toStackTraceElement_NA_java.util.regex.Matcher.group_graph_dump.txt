Line_4 $$ if (matcher.matches()) -->Line_8 $$ int number = -1[ CD ]
Line_9 $$ if (fileName.equals("Native Method")) -->Line_11 $$ number = -2[ CD ]
Line_4 $$ if (matcher.matches()) -->Line_6 $$ String methodName = matcher.group(2)[ CD ]
Line_4 $$ if (matcher.matches()) -->Line_9 $$ if (fileName.equals("Native Method")) [ CD ]
Line_12 $$ if (matcher.group(4) != null) -->Line_13 $$ number = Integer.parseInt(matcher.group(4))[ CD ]
Line_2 $$ public static StackTraceElement toStackTraceElement(String stack) -->Line_17 $$ return new StackTraceElement("Unknown", stack, null, -1)[ CD ]
Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)-->Line_6 $$ String methodName = matcher.group(2)[ FD ]
Line_7 $$ String fileName = matcher.group(3)-->Line_9 $$ if (fileName.equals("Native Method")) [ FD ]
Line_8 $$ int number = -1-->Line_13 $$ number = Integer.parseInt(matcher.group(4))[ FD ]
Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)-->Line_4 $$ if (matcher.matches()) [ FD ]
Line_7 $$ String fileName = matcher.group(3)-->Line_10 $$ fileName = null[ FD ]
Line_9 $$ if (fileName.equals("Native Method")) -->Line_10 $$ fileName = null[ CD ]
Line_8 $$ int number = -1-->Line_11 $$ number = -2[ FD ]
Line_2 $$ public static StackTraceElement toStackTraceElement(String stack) -->Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)[ CD ]
Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)-->Line_7 $$ String fileName = matcher.group(3)[ FD ]
Line_2 $$ public static StackTraceElement toStackTraceElement(String stack) -->Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)[ FD ]
Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)-->Line_13 $$ number = Integer.parseInt(matcher.group(4))[ FD ]
Line_4 $$ if (matcher.matches()) -->Line_7 $$ String fileName = matcher.group(3)[ CD ]
Line_4 $$ if (matcher.matches()) -->Line_15 $$ return new StackTraceElement(declaringClass, methodName, fileName, number)[ CD ]
Line_4 $$ if (matcher.matches()) -->Line_5 $$ String declaringClass = matcher.group(1)[ CD ]
Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)-->Line_5 $$ String declaringClass = matcher.group(1)[ FD ]
Line_11 $$ number = -2-->Line_13 $$ number = Integer.parseInt(matcher.group(4))[ FD ]
Line_9 $$ if (fileName.equals("Native Method")) -->Line_12 $$ if (matcher.group(4) != null) [ CD ]
Line_2 $$ public static StackTraceElement toStackTraceElement(String stack) -->Line_4 $$ if (matcher.matches()) [ CD ]
Line_3 $$ Matcher matcher = STACK_TRACE_PATTERN.matcher(stack)-->Line_12 $$ if (matcher.group(4) != null) [ FD ]
