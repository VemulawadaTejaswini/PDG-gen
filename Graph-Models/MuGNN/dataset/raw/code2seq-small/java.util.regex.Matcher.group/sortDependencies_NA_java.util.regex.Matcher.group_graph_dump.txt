Line_2 $$ protected String sortDependencies(String content) -->Line_4 $$ if (!matcher.find()) [ CD ]
Line_17 $$ String previousConfiguration = null-->Line_21 $$ if ((previousConfiguration == null) || !previousConfiguration.equals(configuration)) [ FD ]
Line_3 $$ Matcher matcher = _dependenciesPattern.matcher(content)-->Line_7 $$ String dependencies = matcher.group(1)[ FD ]
Line_10 $$ dependency = dependency.trim()-->Line_19 $$ int pos = dependency.indexOf(StringPool.SPACE)[ FD ]
Line_9 $$ for (String dependency : StringUtil.splitLines(dependencies)) -->Line_19 $$ int pos = dependency.indexOf(StringPool.SPACE)[ FD ]
Line_10 $$ dependency = dependency.trim()-->Line_14 $$ uniqueDependencies.add(dependency)[ FD ]
Line_9 $$ for (String dependency : StringUtil.splitLines(dependencies)) -->Line_11 $$ if (Validator.isNull(dependency)) [ FD ]
Line_8 $$ Set<String> uniqueDependencies = new TreeSet()-->Line_14 $$ uniqueDependencies.add(dependency)[ FD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_29 $$ return StringUtil.replace(content, dependencies, sb.toString())[ CD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_27 $$ sb.append("\n")[ FD ]
Line_9 $$ for (String dependency : StringUtil.splitLines(dependencies)) -->Line_26 $$ sb.append(dependency)[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_25 $$ sb.append("\t")[ FD ]
Line_3 $$ Matcher matcher = _dependenciesPattern.matcher(content)-->Line_4 $$ if (!matcher.find()) [ FD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_3 $$ Matcher matcher = _dependenciesPattern.matcher(content)[ CD ]
Line_4 $$ if (!matcher.find()) -->Line_5 $$ return content[ CD ]
Line_19 $$ int pos = dependency.indexOf(StringPool.SPACE)-->Line_20 $$ String configuration = dependency.substring(0, pos)[ FD ]
Line_7 $$ String dependencies = matcher.group(1)-->Line_29 $$ return StringUtil.replace(content, dependencies, sb.toString())[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_23 $$ sb.append("\n")[ FD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_3 $$ Matcher matcher = _dependenciesPattern.matcher(content)[ FD ]
Line_21 $$ if ((previousConfiguration == null) || !previousConfiguration.equals(configuration)) -->Line_22 $$ previousConfiguration = configuration[ CD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_7 $$ String dependencies = matcher.group(1)[ CD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_29 $$ return StringUtil.replace(content, dependencies, sb.toString())[ FD ]
Line_16 $$ StringBundler sb = new StringBundler()-->Line_26 $$ sb.append(dependency)[ FD ]
Line_9 $$ for (String dependency : StringUtil.splitLines(dependencies)) -->Line_14 $$ uniqueDependencies.add(dependency)[ FD ]
Line_10 $$ dependency = dependency.trim()-->Line_26 $$ sb.append(dependency)[ FD ]
Line_9 $$ for (String dependency : StringUtil.splitLines(dependencies)) -->Line_20 $$ String configuration = dependency.substring(0, pos)[ FD ]
Line_21 $$ if ((previousConfiguration == null) || !previousConfiguration.equals(configuration)) -->Line_23 $$ sb.append("\n")[ CD ]
Line_10 $$ dependency = dependency.trim()-->Line_11 $$ if (Validator.isNull(dependency)) [ FD ]
Line_9 $$ for (String dependency : StringUtil.splitLines(dependencies)) -->Line_10 $$ dependency = dependency.trim()[ FD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_17 $$ String previousConfiguration = null[ CD ]
Line_20 $$ String configuration = dependency.substring(0, pos)-->Line_21 $$ if ((previousConfiguration == null) || !previousConfiguration.equals(configuration)) [ FD ]
Line_7 $$ String dependencies = matcher.group(1)-->Line_9 $$ for (String dependency : StringUtil.splitLines(dependencies)) [ FD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_8 $$ Set<String> uniqueDependencies = new TreeSet()[ CD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_16 $$ StringBundler sb = new StringBundler()[ CD ]
Line_2 $$ protected String sortDependencies(String content) -->Line_29 $$ return StringUtil.replace(content, dependencies, sb.toString())[ FD ]
Line_17 $$ String previousConfiguration = null-->Line_22 $$ previousConfiguration = configuration[ FD ]
Line_20 $$ String configuration = dependency.substring(0, pos)-->Line_22 $$ previousConfiguration = configuration[ FD ]
Line_10 $$ dependency = dependency.trim()-->Line_20 $$ String configuration = dependency.substring(0, pos)[ FD ]
