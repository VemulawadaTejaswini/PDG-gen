Line_2 $$ private static void extractHostAndPort(Matcher matcher, CvsRootParser cvsRoot) -->Line_4 $$ final String port = matcher.group(GROUP_PORT)[ CD ]
Line_5 $$ if (port != null) -->Line_11 $$ cvsRoot.HOST = host[ CD ]
Line_2 $$ private static void extractHostAndPort(Matcher matcher, CvsRootParser cvsRoot) -->Line_4 $$ final String port = matcher.group(GROUP_PORT)[ FD ]
Line_5 $$ if (port != null) -->Line_8 $$ if (StringUtil.endsWithChar(host, ':')) [ CD ]
Line_3 $$ String host = matcher.group(GROUP_HOST)-->Line_6 $$ cvsRoot.HOST = host + port[ FD ]
Line_3 $$ String host = matcher.group(GROUP_HOST)-->Line_8 $$ if (StringUtil.endsWithChar(host, ':')) [ FD ]
Line_5 $$ if (port != null) -->Line_6 $$ cvsRoot.HOST = host + port[ CD ]
Line_4 $$ final String port = matcher.group(GROUP_PORT)-->Line_6 $$ cvsRoot.HOST = host + port[ FD ]
Line_8 $$ if (StringUtil.endsWithChar(host, ':')) -->Line_9 $$ host = host.substring(0, host.length() - 1)[ CD ]
Line_9 $$ host = host.substring(0, host.length() - 1)-->Line_11 $$ cvsRoot.HOST = host[ FD ]
Line_3 $$ String host = matcher.group(GROUP_HOST)-->Line_11 $$ cvsRoot.HOST = host[ FD ]
Line_2 $$ private static void extractHostAndPort(Matcher matcher, CvsRootParser cvsRoot) -->Line_3 $$ String host = matcher.group(GROUP_HOST)[ FD ]
Line_4 $$ final String port = matcher.group(GROUP_PORT)-->Line_5 $$ if (port != null) [ FD ]
Line_2 $$ private static void extractHostAndPort(Matcher matcher, CvsRootParser cvsRoot) -->Line_5 $$ if (port != null) [ CD ]
Line_2 $$ private static void extractHostAndPort(Matcher matcher, CvsRootParser cvsRoot) -->Line_3 $$ String host = matcher.group(GROUP_HOST)[ CD ]
Line_3 $$ String host = matcher.group(GROUP_HOST)-->Line_9 $$ host = host.substring(0, host.length() - 1)[ FD ]
