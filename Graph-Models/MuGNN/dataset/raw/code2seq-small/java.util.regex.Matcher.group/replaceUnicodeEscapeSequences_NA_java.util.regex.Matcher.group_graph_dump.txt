Line_9 $$ int lastEnd = 0-->Line_17 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_17 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_8 $$ matcher.reset()[ CD ]
Line_11 $$ while (matcher.find()) -->Line_12 $$ sb.append(text.substring(lastEnd, matcher.start()))[ CD ]
Line_10 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_12 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_6 $$ if (!matcher.find())-->Line_7 $$ return text[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_17 $$ sb.append(text.substring(lastEnd, text.length()))[ CD ]
Line_11 $$ while (matcher.find()) -->Line_14 $$ sb.append(c)[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_12 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_10 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_18 $$ return sb.toString()[ FD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_12 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_6 $$ if (!matcher.find())[ CD ]
Line_13 $$ final char c = (char) Integer.parseInt(matcher.group().substring(2), 16)-->Line_14 $$ sb.append(c)[ FD ]
Line_10 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_17 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_15 $$ lastEnd = matcher.end()-->Line_17 $$ sb.append(text.substring(lastEnd, text.length()))[ FD ]
Line_10 $$ final StringBuilder sb = new StringBuilder(text.length())-->Line_14 $$ sb.append(c)[ FD ]
Line_11 $$ while (matcher.find()) -->Line_15 $$ lastEnd = matcher.end()[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_11 $$ while (matcher.find()) [ CD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_11 $$ while (matcher.find()) [ FD ]
Line_9 $$ int lastEnd = 0-->Line_12 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_8 $$ matcher.reset()[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_3 $$ if (text == null)[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_18 $$ return sb.toString()[ CD ]
Line_3 $$ if (text == null)-->Line_4 $$ return null[ CD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_13 $$ final char c = (char) Integer.parseInt(matcher.group().substring(2), 16)[ FD ]
Line_15 $$ lastEnd = matcher.end()-->Line_12 $$ sb.append(text.substring(lastEnd, matcher.start()))[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_3 $$ if (text == null)[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_10 $$ final StringBuilder sb = new StringBuilder(text.length())[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_9 $$ int lastEnd = 0[ CD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_6 $$ if (!matcher.find())[ FD ]
Line_2 $$ public static String replaceUnicodeEscapeSequences(String text) -->Line_10 $$ final StringBuilder sb = new StringBuilder(text.length())[ CD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_6 $$ if (!matcher.find())[ FD ]
Line_11 $$ while (matcher.find()) -->Line_13 $$ final char c = (char) Integer.parseInt(matcher.group().substring(2), 16)[ CD ]
Line_5 $$ final Matcher matcher = UNICODE_CHAR.matcher(text)-->Line_15 $$ lastEnd = matcher.end()[ FD ]
Line_9 $$ int lastEnd = 0-->Line_15 $$ lastEnd = matcher.end()[ FD ]
