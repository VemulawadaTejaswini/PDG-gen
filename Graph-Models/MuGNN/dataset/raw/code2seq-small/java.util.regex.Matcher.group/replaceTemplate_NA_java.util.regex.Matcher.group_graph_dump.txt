Line_5 $$ while (matcher.find()) -->Line_10 $$ matcher.appendReplacement(sb, "VARCHAR2(" + size + " CHAR)")[ CD ]
Line_5 $$ while (matcher.find()) -->Line_6 $$ int size = GetterUtil.getInteger(matcher.group(1))[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_12 $$ matcher.appendTail(sb)[ FD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_14 $$ return super.replaceTemplate(template, actual)[ FD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_4 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_7 $$ if (size > 4000) -->Line_8 $$ size = 4000[ CD ]
Line_3 $$ Matcher matcher = _varcharPattern.matcher(template)-->Line_10 $$ matcher.appendReplacement(sb, "VARCHAR2(" + size + " CHAR)")[ FD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_5 $$ while (matcher.find()) [ CD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_12 $$ matcher.appendTail(sb)[ CD ]
Line_5 $$ while (matcher.find()) -->Line_7 $$ if (size > 4000) [ CD ]
Line_13 $$ template = sb.toString()-->Line_14 $$ return super.replaceTemplate(template, actual)[ FD ]
Line_8 $$ size = 4000-->Line_7 $$ if (size > 4000) [ FD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_14 $$ return super.replaceTemplate(template, actual)[ CD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_13 $$ template = sb.toString()[ FD ]
Line_3 $$ Matcher matcher = _varcharPattern.matcher(template)-->Line_12 $$ matcher.appendTail(sb)[ FD ]
Line_6 $$ int size = GetterUtil.getInteger(matcher.group(1))-->Line_7 $$ if (size > 4000) [ FD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_3 $$ Matcher matcher = _varcharPattern.matcher(template)[ CD ]
Line_3 $$ Matcher matcher = _varcharPattern.matcher(template)-->Line_6 $$ int size = GetterUtil.getInteger(matcher.group(1))[ FD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_13 $$ template = sb.toString()[ CD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_3 $$ Matcher matcher = _varcharPattern.matcher(template)[ FD ]
Line_3 $$ Matcher matcher = _varcharPattern.matcher(template)-->Line_5 $$ while (matcher.find()) [ FD ]
Line_2 $$ protected String replaceTemplate(String template, String[] actual) -->Line_13 $$ template = sb.toString()[ FD ]
Line_4 $$ StringBuffer sb = new StringBuffer()-->Line_10 $$ matcher.appendReplacement(sb, "VARCHAR2(" + size + " CHAR)")[ FD ]
Line_6 $$ int size = GetterUtil.getInteger(matcher.group(1))-->Line_8 $$ size = 4000[ FD ]
