Line_2 $$ public void setJdkVersion(@Nullable String jdk) -->Line_3 $$ if (jdk == null) [ CD ]
Line_2 $$ public void setJdkVersion(@Nullable String jdk) -->Line_13 $$ Matcher matcher = JDK_VERSION_PATTERN.matcher(jdk)[ FD ]
Line_13 $$ Matcher matcher = JDK_VERSION_PATTERN.matcher(jdk)-->Line_17 $$ String versionAsString = matcher.group(1)[ FD ]
Line_17 $$ String versionAsString = matcher.group(1)-->Line_19 $$ applyJdkVersion(Integer.parseInt(versionAsString))[ FD ]
Line_2 $$ public void setJdkVersion(@Nullable String jdk) -->Line_3 $$ if (jdk == null) [ FD ]
Line_13 $$ Matcher matcher = JDK_VERSION_PATTERN.matcher(jdk)-->Line_14 $$ if (!matcher.matches()) [ FD ]
Line_14 $$ if (!matcher.matches()) -->Line_15 $$ return[ CD ]
Line_8 $$ if (applyJdkVersion(version)) -->Line_9 $$ return[ CD ]
Line_2 $$ public void setJdkVersion(@Nullable String jdk) -->Line_17 $$ String versionAsString = matcher.group(1)[ CD ]
Line_2 $$ public void setJdkVersion(@Nullable String jdk) -->Line_7 $$ int version = Integer.parseInt(jdk.trim())[ FD ]
Line_7 $$ int version = Integer.parseInt(jdk.trim())-->Line_8 $$ if (applyJdkVersion(version)) [ FD ]
Line_2 $$ public void setJdkVersion(@Nullable String jdk) -->Line_14 $$ if (!matcher.matches()) [ CD ]
Line_2 $$ public void setJdkVersion(@Nullable String jdk) -->Line_13 $$ Matcher matcher = JDK_VERSION_PATTERN.matcher(jdk)[ CD ]
Line_3 $$ if (jdk == null) -->Line_4 $$ return[ CD ]
