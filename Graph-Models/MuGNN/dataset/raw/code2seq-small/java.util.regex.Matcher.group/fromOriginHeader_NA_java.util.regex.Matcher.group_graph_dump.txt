Line_7 $$ String host = matcher.group(6)-->Line_12 $$ builder.host(host)[ FD ]
Line_5 $$ UriComponentsBuilder builder = new UriComponentsBuilder()-->Line_12 $$ builder.host(host)[ FD ]
Line_6 $$ String scheme = matcher.group(2)-->Line_9 $$ if (StringUtils.hasLength(scheme)) [ FD ]
Line_4 $$ if (matcher.matches()) -->Line_13 $$ if (StringUtils.hasLength(port)) [ CD ]
Line_4 $$ if (matcher.matches()) -->Line_16 $$ return builder[ CD ]
Line_9 $$ if (StringUtils.hasLength(scheme)) -->Line_10 $$ builder.scheme(scheme)[ CD ]
Line_5 $$ UriComponentsBuilder builder = new UriComponentsBuilder()-->Line_10 $$ builder.scheme(scheme)[ FD ]
Line_4 $$ if (matcher.matches()) -->Line_8 $$ String port = matcher.group(8)[ CD ]
Line_3 $$ Matcher matcher = URI_PATTERN.matcher(origin)-->Line_7 $$ String host = matcher.group(6)[ FD ]
Line_4 $$ if (matcher.matches()) -->Line_5 $$ UriComponentsBuilder builder = new UriComponentsBuilder()[ CD ]
Line_8 $$ String port = matcher.group(8)-->Line_14 $$ builder.port(port)[ FD ]
Line_5 $$ UriComponentsBuilder builder = new UriComponentsBuilder()-->Line_14 $$ builder.port(port)[ FD ]
Line_4 $$ if (matcher.matches()) -->Line_9 $$ if (StringUtils.hasLength(scheme)) [ CD ]
Line_8 $$ String port = matcher.group(8)-->Line_13 $$ if (StringUtils.hasLength(port)) [ FD ]
Line_3 $$ Matcher matcher = URI_PATTERN.matcher(origin)-->Line_8 $$ String port = matcher.group(8)[ FD ]
Line_2 $$ public static UriComponentsBuilder fromOriginHeader(String origin) -->Line_3 $$ Matcher matcher = URI_PATTERN.matcher(origin)[ FD ]
Line_4 $$ if (matcher.matches()) -->Line_6 $$ String scheme = matcher.group(2)[ CD ]
Line_2 $$ public static UriComponentsBuilder fromOriginHeader(String origin) -->Line_4 $$ if (matcher.matches()) [ CD ]
Line_6 $$ String scheme = matcher.group(2)-->Line_10 $$ builder.scheme(scheme)[ FD ]
Line_4 $$ if (matcher.matches()) -->Line_12 $$ builder.host(host)[ CD ]
Line_3 $$ Matcher matcher = URI_PATTERN.matcher(origin)-->Line_6 $$ String scheme = matcher.group(2)[ FD ]
Line_4 $$ if (matcher.matches()) -->Line_7 $$ String host = matcher.group(6)[ CD ]
Line_3 $$ Matcher matcher = URI_PATTERN.matcher(origin)-->Line_4 $$ if (matcher.matches()) [ FD ]
Line_2 $$ public static UriComponentsBuilder fromOriginHeader(String origin) -->Line_3 $$ Matcher matcher = URI_PATTERN.matcher(origin)[ CD ]
Line_13 $$ if (StringUtils.hasLength(port)) -->Line_14 $$ builder.port(port)[ CD ]
