Line_2 $$ public final boolean execute(String line, final OutputParser.Callback callback) -->Line_9 $$ return true[ CD ]
Line_7 $$ final String parsed = myMatcher.groupCount() >= 1 ? myMatcher.group(1).replace(File.separatorChar, '/') : null-->Line_8 $$ doExecute(line, parsed, callback)[ FD ]
Line_4 $$ if (!myMatcher.matches()) -->Line_5 $$ return false[ CD ]
Line_2 $$ public final boolean execute(String line, final OutputParser.Callback callback) -->Line_3 $$ myMatcher.reset(line)[ FD ]
Line_2 $$ public final boolean execute(String line, final OutputParser.Callback callback) -->Line_8 $$ doExecute(line, parsed, callback)[ FD ]
Line_2 $$ public final boolean execute(String line, final OutputParser.Callback callback) -->Line_8 $$ doExecute(line, parsed, callback)[ CD ]
Line_2 $$ public final boolean execute(String line, final OutputParser.Callback callback) -->Line_7 $$ final String parsed = myMatcher.groupCount() >= 1 ? myMatcher.group(1).replace(File.separatorChar, '/') : null[ CD ]
Line_2 $$ public final boolean execute(String line, final OutputParser.Callback callback) -->Line_3 $$ myMatcher.reset(line)[ CD ]
Line_2 $$ public final boolean execute(String line, final OutputParser.Callback callback) -->Line_4 $$ if (!myMatcher.matches()) [ CD ]
