Line_7 $$ final Matcher nameMatcher = NAME.matcher(line)-->Line_8 $$ if (!nameMatcher.matches()) [ FD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_4 $$ if (editableEgg != null) [ CD ]
Line_16 $$ while (versionSpecMatcher.find()) -->Line_20 $$ if (relation == null) [ CD ]
Line_4 $$ if (editableEgg != null) -->Line_5 $$ return editableEgg[ CD ]
Line_13 $$ final List<VersionSpec> versionSpecs = new ArrayList<VersionSpec>()-->Line_23 $$ versionSpecs.add(new VersionSpec(relation, version))[ FD ]
Line_7 $$ final Matcher nameMatcher = NAME.matcher(line)-->Line_12 $$ final String rest = nameMatcher.group(3)[ FD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_11 $$ final String name = nameMatcher.group(1)[ CD ]
Line_16 $$ while (versionSpecMatcher.find()) -->Line_23 $$ versionSpecs.add(new VersionSpec(relation, version))[ CD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_26 $$ return new PyRequirement(name, versionSpecs)[ CD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_8 $$ if (!nameMatcher.matches()) [ CD ]
Line_16 $$ while (versionSpecMatcher.find()) -->Line_17 $$ final String rel = versionSpecMatcher.group(1)[ CD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_12 $$ final String rest = nameMatcher.group(3)[ CD ]
Line_15 $$ final Matcher versionSpecMatcher = VERSION_SPEC.matcher(rest)-->Line_16 $$ while (versionSpecMatcher.find()) [ FD ]
Line_17 $$ final String rel = versionSpecMatcher.group(1)-->Line_19 $$ final Relation relation = Relation.fromString(rel)[ FD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_3 $$ final PyRequirement editableEgg = parseEditableEgg(line)[ CD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_14 $$ if (!rest.trim().isEmpty()) [ CD ]
Line_3 $$ final PyRequirement editableEgg = parseEditableEgg(line)-->Line_4 $$ if (editableEgg != null) [ FD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_7 $$ final Matcher nameMatcher = NAME.matcher(line)[ FD ]
Line_20 $$ if (relation == null) -->Line_21 $$ return null[ CD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_13 $$ final List<VersionSpec> versionSpecs = new ArrayList<VersionSpec>()[ CD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_7 $$ final Matcher nameMatcher = NAME.matcher(line)[ CD ]
Line_15 $$ final Matcher versionSpecMatcher = VERSION_SPEC.matcher(rest)-->Line_17 $$ final String rel = versionSpecMatcher.group(1)[ FD ]
Line_16 $$ while (versionSpecMatcher.find()) -->Line_18 $$ final String version = versionSpecMatcher.group(2)[ CD ]
Line_14 $$ if (!rest.trim().isEmpty()) -->Line_15 $$ final Matcher versionSpecMatcher = VERSION_SPEC.matcher(rest)[ CD ]
Line_14 $$ if (!rest.trim().isEmpty()) -->Line_16 $$ while (versionSpecMatcher.find()) [ CD ]
Line_2 $$ public static PyRequirement fromString(@NotNull String line) -->Line_3 $$ final PyRequirement editableEgg = parseEditableEgg(line)[ FD ]
Line_12 $$ final String rest = nameMatcher.group(3)-->Line_15 $$ final Matcher versionSpecMatcher = VERSION_SPEC.matcher(rest)[ FD ]
Line_15 $$ final Matcher versionSpecMatcher = VERSION_SPEC.matcher(rest)-->Line_18 $$ final String version = versionSpecMatcher.group(2)[ FD ]
Line_16 $$ while (versionSpecMatcher.find()) -->Line_19 $$ final Relation relation = Relation.fromString(rel)[ CD ]
Line_12 $$ final String rest = nameMatcher.group(3)-->Line_14 $$ if (!rest.trim().isEmpty()) [ FD ]
Line_19 $$ final Relation relation = Relation.fromString(rel)-->Line_20 $$ if (relation == null) [ FD ]
Line_7 $$ final Matcher nameMatcher = NAME.matcher(line)-->Line_11 $$ final String name = nameMatcher.group(1)[ FD ]
Line_8 $$ if (!nameMatcher.matches()) -->Line_9 $$ return null[ CD ]
