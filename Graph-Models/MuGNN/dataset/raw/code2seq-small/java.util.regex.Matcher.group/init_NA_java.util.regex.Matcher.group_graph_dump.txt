Line_3 $$ String patternString = conf.getString(INCLUDE_KEY)-->Line_9 $$ setExcludePattern(compile(patternString))[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_21 $$ patternStrings = conf.getStringArray(EXCLUDE_TAGS_KEY)[ CD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_3 $$ String patternString = conf.getString(INCLUDE_KEY)[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_8 $$ if (patternString != null && !patternString.isEmpty()) [ CD ]
Line_14 $$ Matcher matcher = tagPattern.matcher(pstr)-->Line_28 $$ setExcludeTagPattern(matcher.group(1), compile(matcher.group(2)))[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_7 $$ patternString = conf.getString(EXCLUDE_KEY)[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_11 $$ String[] patternStrings = conf.getStringArray(INCLUDE_TAGS_KEY)[ CD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_12 $$ if (patternStrings != null && patternStrings.length != 0) [ CD ]
Line_7 $$ patternString = conf.getString(EXCLUDE_KEY)-->Line_8 $$ if (patternString != null && !patternString.isEmpty()) [ FD ]
Line_11 $$ String[] patternStrings = conf.getStringArray(INCLUDE_TAGS_KEY)-->Line_21 $$ patternStrings = conf.getStringArray(EXCLUDE_TAGS_KEY)[ FD ]
Line_14 $$ Matcher matcher = tagPattern.matcher(pstr)-->Line_18 $$ setIncludeTagPattern(matcher.group(1), compile(matcher.group(2)))[ FD ]
Line_4 $$ if (patternString != null && !patternString.isEmpty()) -->Line_5 $$ setIncludePattern(compile(patternString))[ CD ]
Line_14 $$ Matcher matcher = tagPattern.matcher(pstr)-->Line_15 $$ if (!matcher.matches()) [ FD ]
Line_14 $$ Matcher matcher = tagPattern.matcher(pstr)-->Line_25 $$ if (!matcher.matches()) [ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_22 $$ if (patternStrings != null && patternStrings.length != 0) [ CD ]
Line_8 $$ if (patternString != null && !patternString.isEmpty()) -->Line_9 $$ setExcludePattern(compile(patternString))[ CD ]
Line_3 $$ String patternString = conf.getString(INCLUDE_KEY)-->Line_5 $$ setIncludePattern(compile(patternString))[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_3 $$ String patternString = conf.getString(INCLUDE_KEY)[ CD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_7 $$ patternString = conf.getString(EXCLUDE_KEY)[ CD ]
Line_3 $$ String patternString = conf.getString(INCLUDE_KEY)-->Line_4 $$ if (patternString != null && !patternString.isEmpty()) [ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_11 $$ String[] patternStrings = conf.getStringArray(INCLUDE_TAGS_KEY)[ FD ]
Line_7 $$ patternString = conf.getString(EXCLUDE_KEY)-->Line_9 $$ setExcludePattern(compile(patternString))[ FD ]
Line_13 $$ for (String pstr : patternStrings) -->Line_24 $$ Matcher matcher = tagPattern.matcher(pstr)[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_4 $$ if (patternString != null && !patternString.isEmpty()) [ CD ]
Line_3 $$ String patternString = conf.getString(INCLUDE_KEY)-->Line_7 $$ patternString = conf.getString(EXCLUDE_KEY)[ FD ]
Line_3 $$ String patternString = conf.getString(INCLUDE_KEY)-->Line_8 $$ if (patternString != null && !patternString.isEmpty()) [ FD ]
Line_13 $$ for (String pstr : patternStrings) -->Line_14 $$ Matcher matcher = tagPattern.matcher(pstr)[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_21 $$ patternStrings = conf.getStringArray(EXCLUDE_TAGS_KEY)[ FD ]
