Line_8 $$ String linePart = matcher.group(1)-->Line_15 $$ line = formatWhitespace(line, linePart)[ FD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_13 $$ return StringUtil.replace(line, matcher.group(), "<%=" + linePart + " %>")[ FD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_3 $$ if (javaSource) [ CD ]
Line_7 $$ while (matcher.find()) -->Line_9 $$ if (!linePart.startsWith(StringPool.SPACE)) [ CD ]
Line_6 $$ Matcher matcher = javaSourceInsideJSPTagPattern.matcher(line)-->Line_7 $$ while (matcher.find()) [ FD ]
Line_3 $$ if (javaSource) -->Line_4 $$ return formatWhitespace(line, trimmedLine)[ CD ]
Line_6 $$ Matcher matcher = javaSourceInsideJSPTagPattern.matcher(line)-->Line_10 $$ return StringUtil.replace(line, matcher.group(), "<%= " + linePart + "%>")[ FD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_15 $$ line = formatWhitespace(line, linePart)[ FD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_7 $$ while (matcher.find()) [ CD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_10 $$ return StringUtil.replace(line, matcher.group(), "<%= " + linePart + "%>")[ FD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_4 $$ return formatWhitespace(line, trimmedLine)[ FD ]
Line_15 $$ line = formatWhitespace(line, linePart)-->Line_10 $$ return StringUtil.replace(line, matcher.group(), "<%= " + linePart + "%>")[ FD ]
Line_7 $$ while (matcher.find()) -->Line_15 $$ line = formatWhitespace(line, linePart)[ CD ]
Line_7 $$ while (matcher.find()) -->Line_8 $$ String linePart = matcher.group(1)[ CD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_6 $$ Matcher matcher = javaSourceInsideJSPTagPattern.matcher(line)[ FD ]
Line_9 $$ if (!linePart.startsWith(StringPool.SPACE)) -->Line_10 $$ return StringUtil.replace(line, matcher.group(), "<%= " + linePart + "%>")[ CD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_17 $$ return line[ CD ]
Line_15 $$ line = formatWhitespace(line, linePart)-->Line_13 $$ return StringUtil.replace(line, matcher.group(), "<%=" + linePart + " %>")[ FD ]
Line_8 $$ String linePart = matcher.group(1)-->Line_9 $$ if (!linePart.startsWith(StringPool.SPACE)) [ FD ]
Line_8 $$ String linePart = matcher.group(1)-->Line_12 $$ if (!linePart.endsWith(StringPool.SPACE)) [ FD ]
Line_6 $$ Matcher matcher = javaSourceInsideJSPTagPattern.matcher(line)-->Line_13 $$ return StringUtil.replace(line, matcher.group(), "<%=" + linePart + " %>")[ FD ]
Line_6 $$ Matcher matcher = javaSourceInsideJSPTagPattern.matcher(line)-->Line_8 $$ String linePart = matcher.group(1)[ FD ]
Line_7 $$ while (matcher.find()) -->Line_12 $$ if (!linePart.endsWith(StringPool.SPACE)) [ CD ]
Line_12 $$ if (!linePart.endsWith(StringPool.SPACE)) -->Line_13 $$ return StringUtil.replace(line, matcher.group(), "<%=" + linePart + " %>")[ CD ]
Line_2 $$ protected String formatWhitespace(String line, String trimmedLine, boolean javaSource) -->Line_6 $$ Matcher matcher = javaSourceInsideJSPTagPattern.matcher(line)[ CD ]
