Line_8 $$ if (BRANCH_COMMON_PARAMS_SECTION.matcher(sectionName).matches()) -->Line_9 $$ LOG.debug(String.format("Common branch option(s) defined .git/config. sectionName: %s%n section: %s", sectionName, section))[ CD ]
Line_8 $$ if (BRANCH_COMMON_PARAMS_SECTION.matcher(sectionName).matches()) -->Line_10 $$ return null[ CD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_12 $$ LOG.error(String.format("Invalid branch section format in .git/config. sectionName: %s%n section: %s", sectionName, section))[ CD ]
Line_5 $$ if (matcher.matches()) -->Line_6 $$ return new BranchConfig(matcher.group(1), branchBean)[ CD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_9 $$ LOG.debug(String.format("Common branch option(s) defined .git/config. sectionName: %s%n section: %s", sectionName, section))[ FD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_4 $$ Matcher matcher = BRANCH_INFO_SECTION.matcher(sectionName)[ FD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_3 $$ BranchBean branchBean = section.as(BranchBean.class, classLoader)[ FD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_4 $$ Matcher matcher = BRANCH_INFO_SECTION.matcher(sectionName)[ CD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_13 $$ return null[ CD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_3 $$ BranchBean branchBean = section.as(BranchBean.class, classLoader)[ CD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_5 $$ if (matcher.matches()) [ CD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_12 $$ LOG.error(String.format("Invalid branch section format in .git/config. sectionName: %s%n section: %s", sectionName, section))[ FD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_8 $$ if (BRANCH_COMMON_PARAMS_SECTION.matcher(sectionName).matches()) [ CD ]
Line_4 $$ Matcher matcher = BRANCH_INFO_SECTION.matcher(sectionName)-->Line_5 $$ if (matcher.matches()) [ FD ]
Line_2 $$ private static BranchConfig parseBranchSection(String sectionName, Profile.Section section, @NotNull ClassLoader classLoader) -->Line_8 $$ if (BRANCH_COMMON_PARAMS_SECTION.matcher(sectionName).matches()) [ FD ]
Line_4 $$ Matcher matcher = BRANCH_INFO_SECTION.matcher(sectionName)-->Line_6 $$ return new BranchConfig(matcher.group(1), branchBean)[ FD ]
