Line_3 $$ Matcher m = myPattern.matcher(getText())-->Line_6 $$ int l = StringUtil.parseInt(m.group(1), -1)[ FD ]
Line_2 $$ private LogicalPosition getLogicalPosition() -->Line_8 $$ return l > 0 ? new LogicalPosition(l - 1, Math.max(0, c - 1)) : null[ CD ]
Line_2 $$ private LogicalPosition getLogicalPosition() -->Line_4 $$ if (!m.matches())[ CD ]
Line_3 $$ Matcher m = myPattern.matcher(getText())-->Line_7 $$ int c = StringUtil.parseInt(m.group(2), -1)[ FD ]
Line_2 $$ private LogicalPosition getLogicalPosition() -->Line_6 $$ int l = StringUtil.parseInt(m.group(1), -1)[ CD ]
Line_2 $$ private LogicalPosition getLogicalPosition() -->Line_3 $$ Matcher m = myPattern.matcher(getText())[ CD ]
Line_2 $$ private LogicalPosition getLogicalPosition() -->Line_7 $$ int c = StringUtil.parseInt(m.group(2), -1)[ CD ]
Line_3 $$ Matcher m = myPattern.matcher(getText())-->Line_4 $$ if (!m.matches())[ FD ]
Line_4 $$ if (!m.matches())-->Line_5 $$ return null[ CD ]
