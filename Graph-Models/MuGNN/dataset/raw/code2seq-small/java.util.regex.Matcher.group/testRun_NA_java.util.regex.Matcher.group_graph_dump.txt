Line_13 $$ if (idx == null) -->Line_14 $$ idx = new Idx(index)[ CD ]
Line_58 $$ if (balanceFirst()) -->Line_59 $$ clusterState = rebalance(clusterState)[ CD ]
Line_32 $$ RoutingTable.Builder routingTableBuilder = RoutingTable.builder()-->Line_49 $$ routingTableBuilder.add(table)[ FD ]
Line_59 $$ clusterState = rebalance(clusterState)-->Line_61 $$ clusterState = allocateNew(clusterState)[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_18 $$ final boolean primary = matcher.group(3).equals("p")[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_23 $$ idx.add(routing)[ CD ]
Line_53 $$ DiscoveryNodes.Builder builderDiscoNodes = DiscoveryNodes.builder()-->Line_57 $$ ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).nodes(builderDiscoNodes.build()).build()[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_20 $$ String ip = matcher.group(5)[ FD ]
Line_14 $$ idx = new Idx(index)-->Line_15 $$ indices.put(index, idx)[ FD ]
Line_9 $$ final Matcher matcher-->Line_18 $$ final boolean primary = matcher.group(3).equals("p")[ FD ]
Line_37 $$ Map<Integer, IndexShardRoutingTable> shardIdToRouting = new HashMap()-->Line_41 $$ refData = new IndexShardRoutingTable.Builder(shardIdToRouting.get(r.getId())).addShard(r).build()[ FD ]
Line_2 $$ public void testRun() throws IOException -->Line_4 $$ Map<String, Idx> indices = new HashMap()[ CD ]
Line_17 $$ final int shard = Integer.parseInt(matcher.group(2))-->Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)[ FD ]
Line_9 $$ final Matcher matcher-->Line_17 $$ final int shard = Integer.parseInt(matcher.group(2))[ FD ]
Line_14 $$ idx = new Idx(index)-->Line_23 $$ idx.add(routing)[ FD ]
Line_2 $$ public void testRun() throws IOException -->Line_61 $$ clusterState = allocateNew(clusterState)[ CD ]
Line_18 $$ final boolean primary = matcher.group(3).equals("p")-->Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)[ FD ]
Line_6 $$ String line = null-->Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) [ FD ]
Line_11 $$ final String index = matcher.group(1)-->Line_15 $$ indices.put(index, idx)[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_21 $$ nodes.add(ip)[ CD ]
Line_6 $$ String line = null-->Line_8 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_9 $$ final Matcher matcher-->Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) [ FD ]
Line_8 $$ while ((line = reader.readLine()) != null) -->Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) [ FD ]
Line_38 $$ for (ShardRouting r : idx.routing) -->Line_41 $$ refData = new IndexShardRoutingTable.Builder(shardIdToRouting.get(r.getId())).addShard(r).build()[ FD ]
Line_14 $$ idx = new Idx(index)-->Line_34 $$ IndexMetaData idxMeta = IndexMetaData.builder(idx.name).settings(settings(Version.CURRENT)).numberOfShards(idx.numShards()).numberOfReplicas(idx.numReplicas()).build()[ FD ]
Line_2 $$ public void testRun() throws IOException -->Line_51 $$ MetaData metaData = builder.build()[ CD ]
Line_2 $$ public void testRun() throws IOException -->Line_57 $$ ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).nodes(builderDiscoNodes.build()).build()[ CD ]
Line_31 $$ MetaData.Builder builder = MetaData.builder()-->Line_51 $$ MetaData metaData = builder.build()[ FD ]
Line_4 $$ Map<String, Idx> indices = new HashMap()-->Line_15 $$ indices.put(index, idx)[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_17 $$ final int shard = Integer.parseInt(matcher.group(2))[ CD ]
Line_12 $$ Idx idx = indices.get(index)-->Line_34 $$ IndexMetaData idxMeta = IndexMetaData.builder(idx.name).settings(settings(Version.CURRENT)).numberOfShards(idx.numShards()).numberOfReplicas(idx.numReplicas()).build()[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_12 $$ Idx idx = indices.get(index)[ CD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_19 $$ ShardRoutingState state = ShardRoutingState.valueOf(matcher.group(4))[ CD ]
Line_9 $$ final Matcher matcher-->Line_11 $$ final String index = matcher.group(1)[ FD ]
Line_45 $$ for (IndexShardRoutingTable t : shardIdToRouting.values()) -->Line_46 $$ tableBuilder.addIndexShard(t)[ FD ]
Line_52 $$ RoutingTable routingTable = routingTableBuilder.build()-->Line_57 $$ ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).nodes(builderDiscoNodes.build()).build()[ FD ]
Line_2 $$ public void testRun() throws IOException -->Line_3 $$ Set<String> nodes = new HashSet()[ CD ]
Line_39 $$ IndexShardRoutingTable refData = new IndexShardRoutingTable.Builder(new ShardId(idx.name, r.id())).addShard(r).build()-->Line_43 $$ shardIdToRouting.put(r.getId(), refData)[ FD ]
Line_9 $$ final Matcher matcher-->Line_20 $$ String ip = matcher.group(5)[ FD ]
Line_12 $$ Idx idx = indices.get(index)-->Line_15 $$ indices.put(index, idx)[ FD ]
Line_5 $$ try (BufferedReader reader = Files.newBufferedReader(getCatPath(), StandardCharsets.UTF_8)) -->Line_8 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_41 $$ refData = new IndexShardRoutingTable.Builder(shardIdToRouting.get(r.getId())).addShard(r).build()-->Line_43 $$ shardIdToRouting.put(r.getId(), refData)[ FD ]
Line_2 $$ public void testRun() throws IOException -->Line_30 $$ logger.info("Building initial routing table")[ CD ]
Line_2 $$ public void testRun() throws IOException -->Line_31 $$ MetaData.Builder builder = MetaData.builder()[ CD ]
Line_14 $$ idx = new Idx(index)-->Line_13 $$ if (idx == null) [ FD ]
Line_57 $$ ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).nodes(builderDiscoNodes.build()).build()-->Line_59 $$ clusterState = rebalance(clusterState)[ FD ]
Line_12 $$ Idx idx = indices.get(index)-->Line_14 $$ idx = new Idx(index)[ FD ]
Line_2 $$ public void testRun() throws IOException -->Line_52 $$ RoutingTable routingTable = routingTableBuilder.build()[ CD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_17 $$ final int shard = Integer.parseInt(matcher.group(2))[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_13 $$ if (idx == null) [ CD ]
Line_36 $$ IndexRoutingTable.Builder tableBuilder = new IndexRoutingTable.Builder(idx.name).initializeAsRecovery(idxMeta)-->Line_46 $$ tableBuilder.addIndexShard(t)[ FD ]
Line_8 $$ while ((line = reader.readLine()) != null) -->Line_9 $$ final Matcher matcher[ CD ]
Line_37 $$ Map<Integer, IndexShardRoutingTable> shardIdToRouting = new HashMap()-->Line_43 $$ shardIdToRouting.put(r.getId(), refData)[ FD ]
Line_20 $$ String ip = matcher.group(5)-->Line_21 $$ nodes.add(ip)[ FD ]
Line_11 $$ final String index = matcher.group(1)-->Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)[ FD ]
Line_34 $$ IndexMetaData idxMeta = IndexMetaData.builder(idx.name).settings(settings(Version.CURRENT)).numberOfShards(idx.numShards()).numberOfReplicas(idx.numReplicas()).build()-->Line_36 $$ IndexRoutingTable.Builder tableBuilder = new IndexRoutingTable.Builder(idx.name).initializeAsRecovery(idxMeta)[ FD ]
Line_37 $$ Map<Integer, IndexShardRoutingTable> shardIdToRouting = new HashMap()-->Line_45 $$ for (IndexShardRoutingTable t : shardIdToRouting.values()) [ FD ]
Line_2 $$ public void testRun() throws IOException -->Line_53 $$ DiscoveryNodes.Builder builderDiscoNodes = DiscoveryNodes.builder()[ CD ]
Line_8 $$ while ((line = reader.readLine()) != null) -->Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) [ CD ]
Line_2 $$ public void testRun() throws IOException -->Line_58 $$ if (balanceFirst()) [ CD ]
Line_57 $$ ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).nodes(builderDiscoNodes.build()).build()-->Line_61 $$ clusterState = allocateNew(clusterState)[ FD ]
Line_36 $$ IndexRoutingTable.Builder tableBuilder = new IndexRoutingTable.Builder(idx.name).initializeAsRecovery(idxMeta)-->Line_48 $$ IndexRoutingTable table = tableBuilder.build()[ FD ]
Line_4 $$ Map<String, Idx> indices = new HashMap()-->Line_33 $$ for (Idx idx : indices.values()) [ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_20 $$ String ip = matcher.group(5)[ CD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)[ CD ]
Line_54 $$ for (String node : nodes) -->Line_55 $$ builderDiscoNodes.put(newNode(node))[ FD ]
Line_7 $$ Pattern pattern = Pattern.compile("^(.+)\\s+(\\d)\\s+([rp])\\s+(STARTED|RELOCATING|INITIALIZING|UNASSIGNED)\\s+\\d+\\s+[0-9.a-z]+\\s+(\\d+\\.\\d+\\.\\d+\\.\\d+).*$")-->Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) [ FD ]
Line_37 $$ Map<Integer, IndexShardRoutingTable> shardIdToRouting = new HashMap()-->Line_40 $$ if (shardIdToRouting.containsKey(r.getId())) [ FD ]
Line_12 $$ Idx idx = indices.get(index)-->Line_13 $$ if (idx == null) [ FD ]
Line_20 $$ String ip = matcher.group(5)-->Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_18 $$ final boolean primary = matcher.group(3).equals("p")[ CD ]
Line_51 $$ MetaData metaData = builder.build()-->Line_57 $$ ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).nodes(builderDiscoNodes.build()).build()[ FD ]
Line_38 $$ for (ShardRouting r : idx.routing) -->Line_43 $$ shardIdToRouting.put(r.getId(), refData)[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_11 $$ final String index = matcher.group(1)[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_19 $$ ShardRoutingState state = ShardRoutingState.valueOf(matcher.group(4))[ FD ]
Line_32 $$ RoutingTable.Builder routingTableBuilder = RoutingTable.builder()-->Line_52 $$ RoutingTable routingTable = routingTableBuilder.build()[ FD ]
Line_31 $$ MetaData.Builder builder = MetaData.builder()-->Line_35 $$ builder.put(idxMeta, false)[ FD ]
Line_39 $$ IndexShardRoutingTable refData = new IndexShardRoutingTable.Builder(new ShardId(idx.name, r.id())).addShard(r).build()-->Line_41 $$ refData = new IndexShardRoutingTable.Builder(shardIdToRouting.get(r.getId())).addShard(r).build()[ FD ]
Line_4 $$ Map<String, Idx> indices = new HashMap()-->Line_12 $$ Idx idx = indices.get(index)[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_24 $$ logger.debug("Add routing [ CD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_26 $$ fail("can't read line: " + line)[ CD ]
Line_3 $$ Set<String> nodes = new HashSet()-->Line_21 $$ nodes.add(ip)[ FD ]
Line_12 $$ Idx idx = indices.get(index)-->Line_23 $$ idx.add(routing)[ FD ]
Line_38 $$ for (ShardRouting r : idx.routing) -->Line_40 $$ if (shardIdToRouting.containsKey(r.getId())) [ FD ]
Line_34 $$ IndexMetaData idxMeta = IndexMetaData.builder(idx.name).settings(settings(Version.CURRENT)).numberOfShards(idx.numShards()).numberOfReplicas(idx.numReplicas()).build()-->Line_35 $$ builder.put(idxMeta, false)[ FD ]
Line_9 $$ final Matcher matcher-->Line_19 $$ ShardRoutingState state = ShardRoutingState.valueOf(matcher.group(4))[ FD ]
Line_10 $$ if ((matcher = pattern.matcher(line)).matches()) -->Line_11 $$ final String index = matcher.group(1)[ CD ]
Line_38 $$ for (ShardRouting r : idx.routing) -->Line_39 $$ IndexShardRoutingTable refData = new IndexShardRoutingTable.Builder(new ShardId(idx.name, r.id())).addShard(r).build()[ FD ]
Line_33 $$ for (Idx idx : indices.values()) -->Line_34 $$ IndexMetaData idxMeta = IndexMetaData.builder(idx.name).settings(settings(Version.CURRENT)).numberOfShards(idx.numShards()).numberOfReplicas(idx.numReplicas()).build()[ FD ]
Line_48 $$ IndexRoutingTable table = tableBuilder.build()-->Line_49 $$ routingTableBuilder.add(table)[ FD ]
Line_40 $$ if (shardIdToRouting.containsKey(r.getId())) -->Line_41 $$ refData = new IndexShardRoutingTable.Builder(shardIdToRouting.get(r.getId())).addShard(r).build()[ CD ]
Line_11 $$ final String index = matcher.group(1)-->Line_12 $$ Idx idx = indices.get(index)[ FD ]
Line_19 $$ ShardRoutingState state = ShardRoutingState.valueOf(matcher.group(4))-->Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)[ FD ]
Line_13 $$ if (idx == null) -->Line_15 $$ indices.put(index, idx)[ CD ]
Line_2 $$ public void testRun() throws IOException -->Line_32 $$ RoutingTable.Builder routingTableBuilder = RoutingTable.builder()[ CD ]
Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)-->Line_24 $$ logger.debug("Add routing [ FD ]
Line_53 $$ DiscoveryNodes.Builder builderDiscoNodes = DiscoveryNodes.builder()-->Line_55 $$ builderDiscoNodes.put(newNode(node))[ FD ]
Line_22 $$ ShardRouting routing = TestShardRouting.newShardRouting(index, shard, ip, null, null, primary, state, 1)-->Line_23 $$ idx.add(routing)[ FD ]
