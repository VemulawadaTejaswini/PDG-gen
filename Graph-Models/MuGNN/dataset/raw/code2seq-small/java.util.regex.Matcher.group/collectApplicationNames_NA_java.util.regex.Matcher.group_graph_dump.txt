Line_3 $$ List<String> result = new ArrayList<String>()-->Line_8 $$ result.add(matcher.group(1))[ FD ]
Line_2 $$ public List<String> collectApplicationNames(@NotNull GitRepository repository) -->Line_4 $$ for (GitRemote remote : repository.getRemotes()) [ FD ]
Line_2 $$ public List<String> collectApplicationNames(@NotNull GitRepository repository) -->Line_12 $$ return result[ CD ]
Line_4 $$ for (GitRemote remote : repository.getRemotes()) -->Line_5 $$ for (String url : remote.getUrls()) [ FD ]
Line_6 $$ Matcher matcher = myGitUrlPattern.matcher(url)-->Line_8 $$ result.add(matcher.group(1))[ FD ]
Line_7 $$ if (matcher.matches()) -->Line_8 $$ result.add(matcher.group(1))[ CD ]
Line_2 $$ public List<String> collectApplicationNames(@NotNull GitRepository repository) -->Line_3 $$ List<String> result = new ArrayList<String>()[ CD ]
Line_5 $$ for (String url : remote.getUrls()) -->Line_6 $$ Matcher matcher = myGitUrlPattern.matcher(url)[ FD ]
Line_6 $$ Matcher matcher = myGitUrlPattern.matcher(url)-->Line_7 $$ if (matcher.matches()) [ FD ]
