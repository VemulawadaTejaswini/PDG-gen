Line_6 $$ Matcher matcher = JDK_DIR.matcher(file.getName())-->Line_17 $$ String version = matcher.group(1)[ FD ]
Line_17 $$ String version = matcher.group(1)-->Line_18 $$ jvms.add(new JvmInstallation(JavaVersion.toVersion(version), version, file, true, JvmInstallation.Arch.Unknown))[ FD ]
Line_2 $$ public List<JvmInstallation> findJvms() -->Line_3 $$ Set<File> javaHomes = new HashSet<File>()[ CD ]
Line_6 $$ Matcher matcher = JDK_DIR.matcher(file.getName())-->Line_7 $$ if (!matcher.matches()) [ FD ]
Line_5 $$ for (File file : new File(SystemProperties.getInstance().getUserHome()).listFiles()) -->Line_6 $$ Matcher matcher = JDK_DIR.matcher(file.getName())[ FD ]
Line_2 $$ public List<JvmInstallation> findJvms() -->Line_4 $$ List<JvmInstallation> jvms = new ArrayList<JvmInstallation>()[ CD ]
Line_5 $$ for (File file : new File(SystemProperties.getInstance().getUserHome()).listFiles()) -->Line_10 $$ File javaHome = fileCanonicalizer.canonicalize(file)[ FD ]
Line_2 $$ public List<JvmInstallation> findJvms() -->Line_20 $$ return jvms[ CD ]
Line_3 $$ Set<File> javaHomes = new HashSet<File>()-->Line_11 $$ if (!javaHomes.add(javaHome)) [ FD ]
Line_4 $$ List<JvmInstallation> jvms = new ArrayList<JvmInstallation>()-->Line_18 $$ jvms.add(new JvmInstallation(JavaVersion.toVersion(version), version, file, true, JvmInstallation.Arch.Unknown))[ FD ]
Line_10 $$ File javaHome = fileCanonicalizer.canonicalize(file)-->Line_11 $$ if (!javaHomes.add(javaHome)) [ FD ]
