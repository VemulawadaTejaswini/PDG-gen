Line_9 $$ if (!isEnglishOutput(versionOutput.getStdout())) -->Line_10 $$ LOG.info("\"svn --version\" command contains non-English output " + versionOutput.getStdout())[ CD ]
Line_8 $$ result = new ExecutableNotValidNotification(prepareDescription(UIUtil.getHtmlBody(matcher.group()), false), NotificationType.WARNING)-->Line_11 $$ result = new ExecutableNotValidNotification(prepareDescription(SvnBundle.message("non.english.locale.detected.warning"), false), NotificationType.WARNING)[ FD ]
Line_3 $$ ProcessOutput versionOutput = getVersionClient().runCommand(false)-->Line_9 $$ if (!isEnglishOutput(versionOutput.getStdout())) [ FD ]
Line_2 $$ private Notification validateLocale() throws SvnBindException -->Line_3 $$ ProcessOutput versionOutput = getVersionClient().runCommand(false)[ CD ]
Line_2 $$ private Notification validateLocale() throws SvnBindException -->Line_6 $$ if (matcher.find()) [ CD ]
Line_6 $$ if (matcher.find()) -->Line_8 $$ result = new ExecutableNotValidNotification(prepareDescription(UIUtil.getHtmlBody(matcher.group()), false), NotificationType.WARNING)[ CD ]
Line_2 $$ private Notification validateLocale() throws SvnBindException -->Line_4 $$ Notification result = null[ CD ]
Line_2 $$ private Notification validateLocale() throws SvnBindException -->Line_13 $$ return result[ CD ]
Line_6 $$ if (matcher.find()) -->Line_7 $$ LOG.info(matcher.group())[ CD ]
Line_9 $$ if (!isEnglishOutput(versionOutput.getStdout())) -->Line_11 $$ result = new ExecutableNotValidNotification(prepareDescription(SvnBundle.message("non.english.locale.detected.warning"), false), NotificationType.WARNING)[ CD ]
Line_6 $$ if (matcher.find()) -->Line_9 $$ if (!isEnglishOutput(versionOutput.getStdout())) [ CD ]
Line_5 $$ Matcher matcher = INVALID_LOCALE_WARNING_PATTERN.matcher(versionOutput.getStderr())-->Line_6 $$ if (matcher.find()) [ FD ]
Line_5 $$ Matcher matcher = INVALID_LOCALE_WARNING_PATTERN.matcher(versionOutput.getStderr())-->Line_8 $$ result = new ExecutableNotValidNotification(prepareDescription(UIUtil.getHtmlBody(matcher.group()), false), NotificationType.WARNING)[ FD ]
Line_3 $$ ProcessOutput versionOutput = getVersionClient().runCommand(false)-->Line_10 $$ LOG.info("\"svn --version\" command contains non-English output " + versionOutput.getStdout())[ FD ]
Line_3 $$ ProcessOutput versionOutput = getVersionClient().runCommand(false)-->Line_5 $$ Matcher matcher = INVALID_LOCALE_WARNING_PATTERN.matcher(versionOutput.getStderr())[ FD ]
Line_2 $$ private Notification validateLocale() throws SvnBindException -->Line_5 $$ Matcher matcher = INVALID_LOCALE_WARNING_PATTERN.matcher(versionOutput.getStderr())[ CD ]
Line_5 $$ Matcher matcher = INVALID_LOCALE_WARNING_PATTERN.matcher(versionOutput.getStderr())-->Line_7 $$ LOG.info(matcher.group())[ FD ]
Line_4 $$ Notification result = null-->Line_11 $$ result = new ExecutableNotValidNotification(prepareDescription(SvnBundle.message("non.english.locale.detected.warning"), false), NotificationType.WARNING)[ FD ]
Line_4 $$ Notification result = null-->Line_8 $$ result = new ExecutableNotValidNotification(prepareDescription(UIUtil.getHtmlBody(matcher.group()), false), NotificationType.WARNING)[ FD ]
