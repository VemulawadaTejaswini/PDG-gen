Line_5 $$ while (st.hasMoreTokens()) -->Line_6 $$ final Matcher matcher = WORDS_SPLITTER.matcher(st.nextToken())[ CD ]
Line_2 $$ static List<String> splitVersionString(final String ver) -->Line_5 $$ while (st.hasMoreTokens()) [ CD ]
Line_3 $$ StringTokenizer st = new StringTokenizer(ver.trim(), "()._-;:/, +~")-->Line_6 $$ final Matcher matcher = WORDS_SPLITTER.matcher(st.nextToken())[ FD ]
Line_2 $$ static List<String> splitVersionString(final String ver) -->Line_3 $$ StringTokenizer st = new StringTokenizer(ver.trim(), "()._-;:/, +~")[ CD ]
Line_2 $$ static List<String> splitVersionString(final String ver) -->Line_4 $$ List<String> result = new ArrayList<String>()[ CD ]
Line_5 $$ while (st.hasMoreTokens()) -->Line_7 $$ while (matcher.find()) [ CD ]
Line_2 $$ static List<String> splitVersionString(final String ver) -->Line_11 $$ return result[ CD ]
Line_3 $$ StringTokenizer st = new StringTokenizer(ver.trim(), "()._-;:/, +~")-->Line_5 $$ while (st.hasMoreTokens()) [ FD ]
Line_2 $$ static List<String> splitVersionString(final String ver) -->Line_3 $$ StringTokenizer st = new StringTokenizer(ver.trim(), "()._-;:/, +~")[ FD ]
Line_6 $$ final Matcher matcher = WORDS_SPLITTER.matcher(st.nextToken())-->Line_7 $$ while (matcher.find()) [ FD ]
Line_7 $$ while (matcher.find()) -->Line_8 $$ result.add(matcher.group())[ CD ]
Line_4 $$ List<String> result = new ArrayList<String>()-->Line_8 $$ result.add(matcher.group())[ FD ]
Line_6 $$ final Matcher matcher = WORDS_SPLITTER.matcher(st.nextToken())-->Line_8 $$ result.add(matcher.group())[ FD ]
