Line_24 $$ if (scale != 1) -->Line_26 $$ width = Math.round(width * scale)[ CD ]
Line_29 $$ if (scale < 1) -->Line_34 $$ g.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC)[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_11 $$ boolean isPatch = name.endsWith(".9")[ CD ]
Line_5 $$ int width = image.getWidth(), height = image.getHeight()-->Line_27 $$ height = Math.round(height * scale)[ FD ]
Line_17 $$ pads = getPads(image, name, splits)-->Line_42 $$ rect.pads = pads[ FD ]
Line_15 $$ name = name.substring(0, name.length() - 2)-->Line_53 $$ name = matcher.group(1)[ FD ]
Line_19 $$ height -= 2-->Line_21 $$ newImage.getGraphics().drawImage(image, 0, 0, width, height, 1, 1, width + 1, height + 1, null)[ FD ]
Line_9 $$ image = newImage-->Line_37 $$ image = newImage[ FD ]
Line_18 $$ width -= 2-->Line_26 $$ width = Math.round(width * scale)[ FD ]
Line_24 $$ if (scale != 1) -->Line_37 $$ image = newImage[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_15 $$ name = name.substring(0, name.length() - 2)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_6 $$ if (image.getType() != BufferedImage.TYPE_4BYTE_ABGR) [ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_13 $$ Rect rect = null[ CD ]
Line_19 $$ height -= 2-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_26 $$ width = Math.round(width * scale)-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_52 $$ if (matcher.matches()) -->Line_54 $$ index = Integer.parseInt(matcher.group(2))[ CD ]
Line_51 $$ Matcher matcher = indexPattern.matcher(name)-->Line_54 $$ index = Integer.parseInt(matcher.group(2))[ FD ]
Line_15 $$ name = name.substring(0, name.length() - 2)-->Line_51 $$ Matcher matcher = indexPattern.matcher(name)[ FD ]
Line_12 $$ int[] splits = null, pads = null-->Line_42 $$ rect.pads = pads[ FD ]
Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)-->Line_22 $$ image = newImage[ FD ]
Line_14 $$ if (isPatch) -->Line_17 $$ pads = getPads(image, name, splits)[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_11 $$ boolean isPatch = name.endsWith(".9")[ FD ]
Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)-->Line_32 $$ Graphics2D g = (Graphics2D) newImage.getGraphics()[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_50 $$ if (settings.useIndexes) [ CD ]
Line_5 $$ int width = image.getWidth(), height = image.getHeight()-->Line_19 $$ height -= 2[ FD ]
Line_29 $$ if (scale < 1) -->Line_32 $$ Graphics2D g = (Graphics2D) newImage.getGraphics()[ CD ]
Line_39 $$ if (isPatch) -->Line_41 $$ rect.splits = splits[ CD ]
Line_51 $$ Matcher matcher = indexPattern.matcher(name)-->Line_52 $$ if (matcher.matches()) [ FD ]
Line_54 $$ index = Integer.parseInt(matcher.group(2))-->Line_58 $$ rect.index = index[ FD ]
Line_46 $$ if (rect == null)-->Line_47 $$ return null[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_53 $$ name = matcher.group(1)[ FD ]
Line_22 $$ image = newImage-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_45 $$ rect = stripWhitespace(image)[ FD ]
Line_9 $$ image = newImage-->Line_22 $$ image = newImage[ FD ]
Line_14 $$ if (isPatch) -->Line_15 $$ name = name.substring(0, name.length() - 2)[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_19 $$ height -= 2-->Line_27 $$ height = Math.round(height * scale)[ FD ]
Line_27 $$ height = Math.round(height * scale)-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_53 $$ name = matcher.group(1)-->Line_57 $$ rect.name = name[ FD ]
Line_12 $$ int[] splits = null, pads = null-->Line_41 $$ rect.splits = splits[ FD ]
Line_13 $$ Rect rect = null-->Line_40 $$ rect = new Rect(image, 0, 0, width, height, true)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_16 $$ splits = getSplits(image, name)[ FD ]
Line_12 $$ int[] splits = null, pads = null-->Line_17 $$ pads = getPads(image, name, splits)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_6 $$ if (image.getType() != BufferedImage.TYPE_4BYTE_ABGR) [ FD ]
Line_13 $$ Rect rect = null-->Line_46 $$ if (rect == null)[ FD ]
Line_32 $$ Graphics2D g = (Graphics2D) newImage.getGraphics()-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_3 $$ if (scale <= 0)[ CD ]
Line_32 $$ Graphics2D g = (Graphics2D) newImage.getGraphics()-->Line_33 $$ g.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY)[ FD ]
Line_52 $$ if (matcher.matches()) -->Line_53 $$ name = matcher.group(1)[ CD ]
Line_14 $$ if (isPatch) -->Line_18 $$ width -= 2[ CD ]
Line_12 $$ int[] splits = null, pads = null-->Line_16 $$ splits = getSplits(image, name)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_8 $$ newImage.getGraphics().drawImage(image, 0, 0, null)[ FD ]
Line_29 $$ if (scale < 1) -->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ CD ]
Line_39 $$ if (isPatch) -->Line_45 $$ rect = stripWhitespace(image)[ CD ]
Line_19 $$ height -= 2-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_5 $$ int width = image.getWidth(), height = image.getHeight()[ FD ]
Line_22 $$ image = newImage-->Line_37 $$ image = newImage[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_14 $$ if (isPatch) [ CD ]
Line_45 $$ rect = stripWhitespace(image)-->Line_46 $$ if (rect == null)[ FD ]
Line_51 $$ Matcher matcher = indexPattern.matcher(name)-->Line_53 $$ name = matcher.group(1)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_21 $$ newImage.getGraphics().drawImage(image, 0, 0, width, height, 1, 1, width + 1, height + 1, null)[ FD ]
Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_17 $$ pads = getPads(image, name, splits)[ FD ]
Line_9 $$ image = newImage-->Line_17 $$ pads = getPads(image, name, splits)[ FD ]
Line_15 $$ name = name.substring(0, name.length() - 2)-->Line_57 $$ rect.name = name[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_24 $$ if (scale != 1) [ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_37 $$ image = newImage[ FD ]
Line_50 $$ if (settings.useIndexes) -->Line_52 $$ if (matcher.matches()) [ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_57 $$ rect.name = name[ FD ]
Line_15 $$ name = name.substring(0, name.length() - 2)-->Line_17 $$ pads = getPads(image, name, splits)[ FD ]
Line_29 $$ if (scale < 1) -->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ CD ]
Line_5 $$ int width = image.getWidth(), height = image.getHeight()-->Line_26 $$ width = Math.round(width * scale)[ FD ]
Line_50 $$ if (settings.useIndexes) -->Line_51 $$ Matcher matcher = indexPattern.matcher(name)[ CD ]
Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)-->Line_9 $$ image = newImage[ FD ]
Line_15 $$ name = name.substring(0, name.length() - 2)-->Line_16 $$ splits = getSplits(image, name)[ FD ]
Line_49 $$ int index = -1-->Line_54 $$ index = Integer.parseInt(matcher.group(2))[ FD ]
Line_16 $$ splits = getSplits(image, name)-->Line_17 $$ pads = getPads(image, name, splits)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_22 $$ image = newImage[ FD ]
Line_9 $$ image = newImage-->Line_21 $$ newImage.getGraphics().drawImage(image, 0, 0, width, height, 1, 1, width + 1, height + 1, null)[ FD ]
Line_40 $$ rect = new Rect(image, 0, 0, width, height, true)-->Line_46 $$ if (rect == null)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_57 $$ rect.name = name[ CD ]
Line_5 $$ int width = image.getWidth(), height = image.getHeight()-->Line_21 $$ newImage.getGraphics().drawImage(image, 0, 0, width, height, 1, 1, width + 1, height + 1, null)[ FD ]
Line_6 $$ if (image.getType() != BufferedImage.TYPE_4BYTE_ABGR) -->Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_39 $$ if (isPatch) -->Line_40 $$ rect = new Rect(image, 0, 0, width, height, true)[ CD ]
Line_24 $$ if (scale != 1) -->Line_27 $$ height = Math.round(height * scale)[ CD ]
Line_18 $$ width -= 2-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_13 $$ Rect rect = null-->Line_45 $$ rect = stripWhitespace(image)[ FD ]
Line_9 $$ image = newImage-->Line_16 $$ splits = getSplits(image, name)[ FD ]
Line_5 $$ int width = image.getWidth(), height = image.getHeight()-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_37 $$ image = newImage-->Line_45 $$ rect = stripWhitespace(image)[ FD ]
Line_9 $$ image = newImage-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_22 $$ image = newImage-->Line_45 $$ rect = stripWhitespace(image)[ FD ]
Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)-->Line_21 $$ newImage.getGraphics().drawImage(image, 0, 0, width, height, 1, 1, width + 1, height + 1, null)[ FD ]
Line_9 $$ image = newImage-->Line_45 $$ rect = stripWhitespace(image)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_59 $$ return rect[ CD ]
Line_24 $$ if (scale != 1) -->Line_29 $$ if (scale < 1) [ CD ]
Line_32 $$ Graphics2D g = (Graphics2D) newImage.getGraphics()-->Line_34 $$ g.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_39 $$ if (isPatch) [ CD ]
Line_14 $$ if (isPatch) -->Line_21 $$ newImage.getGraphics().drawImage(image, 0, 0, width, height, 1, 1, width + 1, height + 1, null)[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_5 $$ int width = image.getWidth(), height = image.getHeight()[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_51 $$ Matcher matcher = indexPattern.matcher(name)[ FD ]
Line_18 $$ width -= 2-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_18 $$ width -= 2-->Line_21 $$ newImage.getGraphics().drawImage(image, 0, 0, width, height, 1, 1, width + 1, height + 1, null)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_58 $$ rect.index = index[ CD ]
Line_14 $$ if (isPatch) -->Line_22 $$ image = newImage[ CD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_49 $$ int index = -1[ CD ]
Line_27 $$ height = Math.round(height * scale)-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_39 $$ if (isPatch) -->Line_46 $$ if (rect == null)[ CD ]
Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)-->Line_37 $$ image = newImage[ FD ]
Line_24 $$ if (scale != 1) -->Line_25 $$ int originalWidth = width, originalHeight = height[ CD ]
Line_7 $$ BufferedImage newImage = new BufferedImage(width, height, BufferedImage.TYPE_4BYTE_ABGR)-->Line_8 $$ newImage.getGraphics().drawImage(image, 0, 0, null)[ FD ]
Line_6 $$ if (image.getType() != BufferedImage.TYPE_4BYTE_ABGR) -->Line_9 $$ image = newImage[ CD ]
Line_26 $$ width = Math.round(width * scale)-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_39 $$ if (isPatch) -->Line_42 $$ rect.pads = pads[ CD ]
Line_29 $$ if (scale < 1) -->Line_33 $$ g.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY)[ CD ]
Line_39 $$ if (isPatch) -->Line_43 $$ rect.canRotate = false[ CD ]
Line_16 $$ splits = getSplits(image, name)-->Line_41 $$ rect.splits = splits[ FD ]
Line_9 $$ image = newImage-->Line_30 $$ newImage.getGraphics().drawImage(image.getScaledInstance(width, height, Image.SCALE_AREA_AVERAGING), 0, 0, null)[ FD ]
Line_5 $$ int width = image.getWidth(), height = image.getHeight()-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_22 $$ image = newImage-->Line_35 $$ g.drawImage(image, 0, 0, width, height, null)[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_12 $$ int[] splits = null, pads = null[ CD ]
Line_49 $$ int index = -1-->Line_58 $$ rect.index = index[ FD ]
Line_14 $$ if (isPatch) -->Line_16 $$ splits = getSplits(image, name)[ CD ]
Line_5 $$ int width = image.getWidth(), height = image.getHeight()-->Line_18 $$ width -= 2[ FD ]
Line_2 $$ Rect processImage(BufferedImage image, String name) -->Line_9 $$ image = newImage[ FD ]
Line_14 $$ if (isPatch) -->Line_19 $$ height -= 2[ CD ]
Line_40 $$ rect = new Rect(image, 0, 0, width, height, true)-->Line_45 $$ rect = stripWhitespace(image)[ FD ]
Line_6 $$ if (image.getType() != BufferedImage.TYPE_4BYTE_ABGR) -->Line_8 $$ newImage.getGraphics().drawImage(image, 0, 0, null)[ CD ]
