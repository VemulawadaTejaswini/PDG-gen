Line_17 $$ String path = uri.getPath()-->Line_21 $$ final Matcher vcsPathMatcher = VCS_PATH.matcher(path)[ FD ]
Line_17 $$ String path = uri.getPath()-->Line_20 $$ path = split[0][ FD ]
Line_17 $$ String path = uri.getPath()-->Line_19 $$ final String[] split = path.split("@", 2)[ FD ]
Line_9 $$ String egg = editableEggMatcher.group(4)-->Line_25 $$ egg = vcsPathMatcher.group(1)[ FD ]
Line_9 $$ String egg = editableEggMatcher.group(4)-->Line_27 $$ egg = StringUtil.trimEnd(egg, gitSuffix)[ FD ]
Line_9 $$ String egg = editableEggMatcher.group(4)-->Line_34 $$ if (egg == null) [ FD ]
Line_44 $$ if (isName) -->Line_47 $$ versionParts.add(part)[ CD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_7 $$ final boolean editable = editableEggMatcher.group(1) != null[ CD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_8 $$ final String url = editableEggMatcher.group(2)[ CD ]
Line_25 $$ egg = vcsPathMatcher.group(1)-->Line_40 $$ for (String part : StringUtil.split(egg, "-")) [ FD ]
Line_17 $$ String path = uri.getPath()-->Line_18 $$ if (path != null) [ FD ]
Line_3 $$ final Matcher editableEggMatcher = EDITABLE_EGG.matcher(line)-->Line_9 $$ String egg = editableEggMatcher.group(4)[ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_37 $$ boolean isName = true[ CD ]
Line_18 $$ if (path != null) -->Line_26 $$ final String gitSuffix = ".git"[ CD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_51 $$ final String version = !versionParts.isEmpty() ? normalizeVersion(StringUtil.join(versionParts, "-")) : null[ CD ]
Line_40 $$ for (String part : StringUtil.split(egg, "-")) -->Line_41 $$ if (part.matches("[0-9].*") || "dev".equals(part)) [ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_39 $$ final List<String> versionParts = new ArrayList<String>()[ CD ]
Line_3 $$ final Matcher editableEggMatcher = EDITABLE_EGG.matcher(line)-->Line_8 $$ final String url = editableEggMatcher.group(2)[ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_38 $$ final List<String> nameParts = new ArrayList<String>()[ CD ]
Line_8 $$ final String url = editableEggMatcher.group(2)-->Line_10 $$ if (url == null) [ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_50 $$ final String name = normalizeName(StringUtil.join(nameParts, "-"))[ CD ]
Line_27 $$ egg = StringUtil.trimEnd(egg, gitSuffix)-->Line_34 $$ if (egg == null) [ FD ]
Line_40 $$ for (String part : StringUtil.split(egg, "-")) -->Line_45 $$ nameParts.add(part)[ FD ]
Line_37 $$ boolean isName = true-->Line_42 $$ isName = false[ FD ]
Line_20 $$ path = split[0]-->Line_21 $$ final Matcher vcsPathMatcher = VCS_PATH.matcher(path)[ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_10 $$ if (url == null) [ CD ]
Line_18 $$ if (path != null) -->Line_20 $$ path = split[0][ CD ]
Line_16 $$ if (uri.getScheme() != null) -->Line_18 $$ if (path != null) [ CD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_3 $$ final Matcher editableEggMatcher = EDITABLE_EGG.matcher(line)[ CD ]
Line_25 $$ egg = vcsPathMatcher.group(1)-->Line_27 $$ egg = StringUtil.trimEnd(egg, gitSuffix)[ FD ]
Line_25 $$ egg = vcsPathMatcher.group(1)-->Line_34 $$ if (egg == null) [ FD ]
Line_9 $$ String egg = editableEggMatcher.group(4)-->Line_13 $$ if (egg == null) [ FD ]
Line_18 $$ if (path != null) -->Line_21 $$ final Matcher vcsPathMatcher = VCS_PATH.matcher(path)[ CD ]
Line_34 $$ if (egg == null) -->Line_35 $$ return null[ CD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_9 $$ String egg = editableEggMatcher.group(4)[ CD ]
Line_21 $$ final Matcher vcsPathMatcher = VCS_PATH.matcher(path)-->Line_25 $$ egg = vcsPathMatcher.group(1)[ FD ]
Line_39 $$ final List<String> versionParts = new ArrayList<String>()-->Line_51 $$ final String version = !versionParts.isEmpty() ? normalizeVersion(StringUtil.join(versionParts, "-")) : null[ FD ]
Line_18 $$ if (path != null) -->Line_22 $$ if (!vcsPathMatcher.matches()) [ CD ]
Line_21 $$ final Matcher vcsPathMatcher = VCS_PATH.matcher(path)-->Line_22 $$ if (!vcsPathMatcher.matches()) [ FD ]
Line_41 $$ if (part.matches("[0-9].*") || "dev".equals(part)) -->Line_42 $$ isName = false[ CD ]
Line_10 $$ if (url == null) -->Line_11 $$ return null[ CD ]
Line_18 $$ if (path != null) -->Line_27 $$ egg = StringUtil.trimEnd(egg, gitSuffix)[ CD ]
Line_40 $$ for (String part : StringUtil.split(egg, "-")) -->Line_47 $$ versionParts.add(part)[ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_52 $$ return new PyRequirement(name, version, url, editable)[ CD ]
Line_15 $$ final URI uri = new URI(url)-->Line_16 $$ if (uri.getScheme() != null) [ FD ]
Line_38 $$ final List<String> nameParts = new ArrayList<String>()-->Line_45 $$ nameParts.add(part)[ FD ]
Line_3 $$ final Matcher editableEggMatcher = EDITABLE_EGG.matcher(line)-->Line_7 $$ final boolean editable = editableEggMatcher.group(1) != null[ FD ]
Line_15 $$ final URI uri = new URI(url)-->Line_17 $$ String path = uri.getPath()[ FD ]
Line_38 $$ final List<String> nameParts = new ArrayList<String>()-->Line_50 $$ final String name = normalizeName(StringUtil.join(nameParts, "-"))[ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_3 $$ final Matcher editableEggMatcher = EDITABLE_EGG.matcher(line)[ FD ]
Line_26 $$ final String gitSuffix = ".git"-->Line_27 $$ egg = StringUtil.trimEnd(egg, gitSuffix)[ FD ]
Line_9 $$ String egg = editableEggMatcher.group(4)-->Line_40 $$ for (String part : StringUtil.split(egg, "-")) [ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_4 $$ if (!editableEggMatcher.matches()) [ CD ]
Line_39 $$ final List<String> versionParts = new ArrayList<String>()-->Line_47 $$ versionParts.add(part)[ FD ]
Line_3 $$ final Matcher editableEggMatcher = EDITABLE_EGG.matcher(line)-->Line_4 $$ if (!editableEggMatcher.matches()) [ FD ]
Line_4 $$ if (!editableEggMatcher.matches()) -->Line_5 $$ return null[ CD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_34 $$ if (egg == null) [ CD ]
Line_27 $$ egg = StringUtil.trimEnd(egg, gitSuffix)-->Line_40 $$ for (String part : StringUtil.split(egg, "-")) [ FD ]
Line_2 $$ private static PyRequirement parseEditableEgg(@NotNull String line) -->Line_13 $$ if (egg == null) [ CD ]
Line_18 $$ if (path != null) -->Line_19 $$ final String[] split = path.split("@", 2)[ CD ]
Line_22 $$ if (!vcsPathMatcher.matches()) -->Line_23 $$ return null[ CD ]
Line_18 $$ if (path != null) -->Line_25 $$ egg = vcsPathMatcher.group(1)[ CD ]
Line_16 $$ if (uri.getScheme() != null) -->Line_17 $$ String path = uri.getPath()[ CD ]
Line_44 $$ if (isName) -->Line_45 $$ nameParts.add(part)[ CD ]
