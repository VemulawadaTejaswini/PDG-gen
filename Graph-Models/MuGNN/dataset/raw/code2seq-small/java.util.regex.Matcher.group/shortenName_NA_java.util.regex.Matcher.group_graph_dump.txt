Line_6 $$ if (path != null) -->Line_11 $$ if (index > 0) [ CD ]
Line_5 $$ String path = matcher.group(2)-->Line_6 $$ if (path != null) [ FD ]
Line_2 $$ private String shortenName(@NotNull String name) -->Line_3 $$ final Matcher matcher = PYTHON_PATTERN.matcher(name)[ CD ]
Line_5 $$ String path = matcher.group(2)-->Line_10 $$ final int index = path.lastIndexOf(File.separator)[ FD ]
Line_5 $$ String path = matcher.group(2)-->Line_9 $$ path = matcher.group(4)[ FD ]
Line_10 $$ final int index = path.lastIndexOf(File.separator)-->Line_12 $$ path = path.substring(index)[ FD ]
Line_3 $$ final Matcher matcher = PYTHON_PATTERN.matcher(name)-->Line_5 $$ String path = matcher.group(2)[ FD ]
Line_2 $$ private String shortenName(@NotNull String name) -->Line_4 $$ if (matcher.matches()) [ CD ]
Line_3 $$ final Matcher matcher = PYTHON_PATTERN.matcher(name)-->Line_9 $$ path = matcher.group(4)[ FD ]
Line_5 $$ String path = matcher.group(2)-->Line_12 $$ path = path.substring(index)[ FD ]
Line_3 $$ final Matcher matcher = PYTHON_PATTERN.matcher(name)-->Line_14 $$ name = matcher.group(3) + " at ..." + path[ FD ]
Line_2 $$ private String shortenName(@NotNull String name) -->Line_17 $$ name = FileUtil.getLocationRelativeToUserHome(name)[ FD ]
Line_2 $$ private String shortenName(@NotNull String name) -->Line_19 $$ return name[ CD ]
Line_4 $$ if (matcher.matches()) -->Line_6 $$ if (path != null) [ CD ]
Line_11 $$ if (index > 0) -->Line_12 $$ path = path.substring(index)[ CD ]
Line_3 $$ final Matcher matcher = PYTHON_PATTERN.matcher(name)-->Line_7 $$ name = matcher.group(1) + " at " + path[ FD ]
Line_9 $$ path = matcher.group(4)-->Line_12 $$ path = path.substring(index)[ FD ]
Line_6 $$ if (path != null) -->Line_10 $$ final int index = path.lastIndexOf(File.separator)[ CD ]
Line_2 $$ private String shortenName(@NotNull String name) -->Line_3 $$ final Matcher matcher = PYTHON_PATTERN.matcher(name)[ FD ]
Line_16 $$ if (new File(name).exists()) -->Line_17 $$ name = FileUtil.getLocationRelativeToUserHome(name)[ CD ]
Line_10 $$ final int index = path.lastIndexOf(File.separator)-->Line_11 $$ if (index > 0) [ FD ]
Line_4 $$ if (matcher.matches()) -->Line_5 $$ String path = matcher.group(2)[ CD ]
Line_4 $$ if (matcher.matches()) -->Line_16 $$ if (new File(name).exists()) [ CD ]
Line_9 $$ path = matcher.group(4)-->Line_10 $$ final int index = path.lastIndexOf(File.separator)[ FD ]
Line_6 $$ if (path != null) -->Line_9 $$ path = matcher.group(4)[ CD ]
Line_3 $$ final Matcher matcher = PYTHON_PATTERN.matcher(name)-->Line_4 $$ if (matcher.matches()) [ FD ]
