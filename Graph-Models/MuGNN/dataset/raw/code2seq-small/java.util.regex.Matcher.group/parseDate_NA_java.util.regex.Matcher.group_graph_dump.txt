Line_3 $$ final Matcher m = DATE_PATTERN.matcher(element.getChildText(name))-->Line_5 $$ return DATE_FORMAT.parse(m.group(1) + " " + m.group(2))[ FD ]
Line_2 $$ private static Date parseDate(Element element, String name) throws ParseException -->Line_3 $$ final Matcher m = DATE_PATTERN.matcher(element.getChildText(name))[ FD ]
Line_2 $$ private static Date parseDate(Element element, String name) throws ParseException -->Line_7 $$ return null[ CD ]
Line_3 $$ final Matcher m = DATE_PATTERN.matcher(element.getChildText(name))-->Line_4 $$ if (m.find()) [ FD ]
Line_4 $$ if (m.find()) -->Line_5 $$ return DATE_FORMAT.parse(m.group(1) + " " + m.group(2))[ CD ]
Line_2 $$ private static Date parseDate(Element element, String name) throws ParseException -->Line_4 $$ if (m.find()) [ CD ]
Line_2 $$ private static Date parseDate(Element element, String name) throws ParseException -->Line_3 $$ final Matcher m = DATE_PATTERN.matcher(element.getChildText(name))[ CD ]
