Line_9 $$ comparatorSet = comparatorSet.trim()-->Line_10 $$ if ((comparatorSet.length() == 0) || comparatorSet.equals("*")) [ FD ]
Line_10 $$ if ((comparatorSet.length() == 0) || comparatorSet.equals("*")) -->Line_11 $$ comparatorSet = ">=0"[ CD ]
Line_2 $$ protected String getBowerVersionFilter(String version) -->Line_4 $$ String[] comparatorSets = version.split("\\|\\|")[ CD ]
Line_14 $$ Matcher rangeMatcher = _versionRangePattern.matcher(comparatorSet)-->Line_20 $$ appendRange(sb, rangeMatcher.group(1), rangeMatcher.group(11))[ FD ]
Line_11 $$ comparatorSet = ">=0"-->Line_15 $$ Matcher prefixRangeMatcher = _versionPrefixRangePattern.matcher(comparatorSet)[ FD ]
Line_11 $$ comparatorSet = ">=0"-->Line_14 $$ Matcher rangeMatcher = _versionRangePattern.matcher(comparatorSet)[ FD ]
Line_2 $$ protected String getBowerVersionFilter(String version) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_6 $$ sb.append("(|")[ FD ]
Line_14 $$ Matcher rangeMatcher = _versionRangePattern.matcher(comparatorSet)-->Line_19 $$ if (rangeMatcher.matches()) [ FD ]
Line_9 $$ comparatorSet = comparatorSet.trim()-->Line_15 $$ Matcher prefixRangeMatcher = _versionPrefixRangePattern.matcher(comparatorSet)[ FD ]
Line_16 $$ Matcher versionMatcher = _versionNamedPattern.matcher(comparatorSet)-->Line_23 $$ if (versionMatcher.matches()) [ FD ]
Line_8 $$ for (String comparatorSet : comparatorSets) -->Line_13 $$ Matcher inclusiveMatcher = _versionInclusiveRangePattern.matcher(comparatorSet)[ FD ]
Line_11 $$ comparatorSet = ">=0"-->Line_13 $$ Matcher inclusiveMatcher = _versionInclusiveRangePattern.matcher(comparatorSet)[ FD ]
Line_9 $$ comparatorSet = comparatorSet.trim()-->Line_16 $$ Matcher versionMatcher = _versionNamedPattern.matcher(comparatorSet)[ FD ]
Line_17 $$ if (inclusiveMatcher.matches()) -->Line_19 $$ if (rangeMatcher.matches()) [ CD ]
Line_13 $$ Matcher inclusiveMatcher = _versionInclusiveRangePattern.matcher(comparatorSet)-->Line_17 $$ if (inclusiveMatcher.matches()) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ sb.append(")")[ FD ]
Line_15 $$ Matcher prefixRangeMatcher = _versionPrefixRangePattern.matcher(comparatorSet)-->Line_21 $$ if (prefixRangeMatcher.matches()) [ FD ]
Line_9 $$ comparatorSet = comparatorSet.trim()-->Line_11 $$ comparatorSet = ">=0"[ FD ]
Line_8 $$ for (String comparatorSet : comparatorSets) -->Line_10 $$ if ((comparatorSet.length() == 0) || comparatorSet.equals("*")) [ FD ]
Line_5 $$ if (comparatorSets.length > 1) -->Line_6 $$ sb.append("(|")[ CD ]
Line_2 $$ protected String getBowerVersionFilter(String version) -->Line_5 $$ if (comparatorSets.length > 1) [ CD ]
Line_19 $$ if (rangeMatcher.matches()) -->Line_20 $$ appendRange(sb, rangeMatcher.group(1), rangeMatcher.group(11))[ CD ]
Line_8 $$ for (String comparatorSet : comparatorSets) -->Line_15 $$ Matcher prefixRangeMatcher = _versionPrefixRangePattern.matcher(comparatorSet)[ FD ]
Line_15 $$ Matcher prefixRangeMatcher = _versionPrefixRangePattern.matcher(comparatorSet)-->Line_22 $$ appendPrefixRange(sb, prefixRangeMatcher.group(1), prefixRangeMatcher.group(2))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_22 $$ appendPrefixRange(sb, prefixRangeMatcher.group(1), prefixRangeMatcher.group(2))[ FD ]
Line_13 $$ Matcher inclusiveMatcher = _versionInclusiveRangePattern.matcher(comparatorSet)-->Line_18 $$ appendInclusive(sb, inclusiveMatcher.group(1), inclusiveMatcher.group(9))[ FD ]
Line_19 $$ if (rangeMatcher.matches()) -->Line_21 $$ if (prefixRangeMatcher.matches()) [ CD ]
Line_21 $$ if (prefixRangeMatcher.matches()) -->Line_22 $$ appendPrefixRange(sb, prefixRangeMatcher.group(1), prefixRangeMatcher.group(2))[ CD ]
Line_8 $$ for (String comparatorSet : comparatorSets) -->Line_14 $$ Matcher rangeMatcher = _versionRangePattern.matcher(comparatorSet)[ FD ]
Line_8 $$ for (String comparatorSet : comparatorSets) -->Line_16 $$ Matcher versionMatcher = _versionNamedPattern.matcher(comparatorSet)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_18 $$ appendInclusive(sb, inclusiveMatcher.group(1), inclusiveMatcher.group(9))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_20 $$ appendRange(sb, rangeMatcher.group(1), rangeMatcher.group(11))[ FD ]
Line_9 $$ comparatorSet = comparatorSet.trim()-->Line_14 $$ Matcher rangeMatcher = _versionRangePattern.matcher(comparatorSet)[ FD ]
Line_2 $$ protected String getBowerVersionFilter(String version) -->Line_27 $$ if (comparatorSets.length > 1) [ CD ]
Line_23 $$ if (versionMatcher.matches()) -->Line_24 $$ appendVersion(sb, versionMatcher)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ appendVersion(sb, versionMatcher)[ FD ]
Line_16 $$ Matcher versionMatcher = _versionNamedPattern.matcher(comparatorSet)-->Line_24 $$ appendVersion(sb, versionMatcher)[ FD ]
Line_8 $$ for (String comparatorSet : comparatorSets) -->Line_9 $$ comparatorSet = comparatorSet.trim()[ FD ]
Line_21 $$ if (prefixRangeMatcher.matches()) -->Line_23 $$ if (versionMatcher.matches()) [ CD ]
Line_2 $$ protected String getBowerVersionFilter(String version) -->Line_4 $$ String[] comparatorSets = version.split("\\|\\|")[ FD ]
Line_27 $$ if (comparatorSets.length > 1) -->Line_28 $$ sb.append(")")[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ return sb.toString()[ FD ]
Line_17 $$ if (inclusiveMatcher.matches()) -->Line_18 $$ appendInclusive(sb, inclusiveMatcher.group(1), inclusiveMatcher.group(9))[ CD ]
Line_9 $$ comparatorSet = comparatorSet.trim()-->Line_13 $$ Matcher inclusiveMatcher = _versionInclusiveRangePattern.matcher(comparatorSet)[ FD ]
Line_11 $$ comparatorSet = ">=0"-->Line_16 $$ Matcher versionMatcher = _versionNamedPattern.matcher(comparatorSet)[ FD ]
Line_2 $$ protected String getBowerVersionFilter(String version) -->Line_30 $$ return sb.toString()[ CD ]
Line_8 $$ for (String comparatorSet : comparatorSets) -->Line_11 $$ comparatorSet = ">=0"[ FD ]
