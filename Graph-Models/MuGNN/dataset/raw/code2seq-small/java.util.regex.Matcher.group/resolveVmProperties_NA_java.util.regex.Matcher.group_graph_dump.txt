Line_5 $$ while (matcher.find()) -->Line_10 $$ toReplace.put(finding, propertyValue)[ CD ]
Line_2 $$ private static String resolveVmProperties(@NotNull ParametersList vmParameters, @NotNull String value) -->Line_7 $$ final String propertyValue = vmParameters.getPropertyValue(finding.substring(2, finding.length() - 1))[ FD ]
Line_12 $$ for (Map.Entry<String, String> entry : toReplace.entrySet()) -->Line_13 $$ value = value.replace(entry.getKey(), entry.getValue())[ FD ]
Line_6 $$ String finding = matcher.group()-->Line_10 $$ toReplace.put(finding, propertyValue)[ FD ]
Line_7 $$ final String propertyValue = vmParameters.getPropertyValue(finding.substring(2, finding.length() - 1))-->Line_10 $$ toReplace.put(finding, propertyValue)[ FD ]
Line_5 $$ while (matcher.find()) -->Line_7 $$ final String propertyValue = vmParameters.getPropertyValue(finding.substring(2, finding.length() - 1))[ CD ]
Line_4 $$ Map<String, String> toReplace = ContainerUtil.newHashMap()-->Line_12 $$ for (Map.Entry<String, String> entry : toReplace.entrySet()) [ FD ]
Line_4 $$ Map<String, String> toReplace = ContainerUtil.newHashMap()-->Line_10 $$ toReplace.put(finding, propertyValue)[ FD ]
Line_3 $$ Matcher matcher = PROPERTY_PATTERN.matcher(value)-->Line_6 $$ String finding = matcher.group()[ FD ]
Line_2 $$ private static String resolveVmProperties(@NotNull ParametersList vmParameters, @NotNull String value) -->Line_15 $$ return value[ CD ]
Line_2 $$ private static String resolveVmProperties(@NotNull ParametersList vmParameters, @NotNull String value) -->Line_3 $$ Matcher matcher = PROPERTY_PATTERN.matcher(value)[ FD ]
Line_2 $$ private static String resolveVmProperties(@NotNull ParametersList vmParameters, @NotNull String value) -->Line_3 $$ Matcher matcher = PROPERTY_PATTERN.matcher(value)[ CD ]
Line_5 $$ while (matcher.find()) -->Line_8 $$ if (propertyValue == null)[ CD ]
Line_2 $$ private static String resolveVmProperties(@NotNull ParametersList vmParameters, @NotNull String value) -->Line_5 $$ while (matcher.find()) [ CD ]
Line_2 $$ private static String resolveVmProperties(@NotNull ParametersList vmParameters, @NotNull String value) -->Line_4 $$ Map<String, String> toReplace = ContainerUtil.newHashMap()[ CD ]
Line_6 $$ String finding = matcher.group()-->Line_7 $$ final String propertyValue = vmParameters.getPropertyValue(finding.substring(2, finding.length() - 1))[ FD ]
Line_5 $$ while (matcher.find()) -->Line_6 $$ String finding = matcher.group()[ CD ]
Line_3 $$ Matcher matcher = PROPERTY_PATTERN.matcher(value)-->Line_5 $$ while (matcher.find()) [ FD ]
Line_2 $$ private static String resolveVmProperties(@NotNull ParametersList vmParameters, @NotNull String value) -->Line_13 $$ value = value.replace(entry.getKey(), entry.getValue())[ FD ]
Line_7 $$ final String propertyValue = vmParameters.getPropertyValue(finding.substring(2, finding.length() - 1))-->Line_8 $$ if (propertyValue == null)[ FD ]
