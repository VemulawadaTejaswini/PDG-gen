Line_5 $$ Matcher matcher = pattern.matcher(html)-->Line_7 $$ stats = (JSONObject) JSONValue.parse(matcher.group(1))[ FD ]
Line_2 $$ private JSONObject parseExistingStats(String html) -->Line_5 $$ Matcher matcher = pattern.matcher(html)[ FD ]
Line_2 $$ private JSONObject parseExistingStats(String html) -->Line_6 $$ matcher.matches()[ CD ]
Line_2 $$ private JSONObject parseExistingStats(String html) -->Line_7 $$ stats = (JSONObject) JSONValue.parse(matcher.group(1))[ CD ]
Line_2 $$ private JSONObject parseExistingStats(String html) -->Line_3 $$ JSONObject stats[ CD ]
Line_2 $$ private JSONObject parseExistingStats(String html) -->Line_4 $$ Pattern pattern = Pattern.compile("(?s).*/\\* stats start \\*/\\nstats = (.*);\\n/\\* stats end \\*/.*")[ CD ]
Line_2 $$ private JSONObject parseExistingStats(String html) -->Line_8 $$ return stats[ CD ]
Line_2 $$ private JSONObject parseExistingStats(String html) -->Line_5 $$ Matcher matcher = pattern.matcher(html)[ CD ]
Line_4 $$ Pattern pattern = Pattern.compile("(?s).*/\\* stats start \\*/\\nstats = (.*);\\n/\\* stats end \\*/.*")-->Line_5 $$ Matcher matcher = pattern.matcher(html)[ FD ]
Line_3 $$ JSONObject stats-->Line_7 $$ stats = (JSONObject) JSONValue.parse(matcher.group(1))[ FD ]
Line_5 $$ Matcher matcher = pattern.matcher(html)-->Line_6 $$ matcher.matches()[ FD ]
