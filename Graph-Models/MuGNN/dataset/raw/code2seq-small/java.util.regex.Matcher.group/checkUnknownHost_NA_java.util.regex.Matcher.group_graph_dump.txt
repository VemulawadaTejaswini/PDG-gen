Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_4 $$ Matcher hostFingerPrintMatcher = HOST_FINGERPRINT_MESSAGE.matcher(line)[ CD ]
Line_3 $$ Matcher unknownHostMatcher = UNKNOWN_HOST_MESSAGE.matcher(line)-->Line_14 $$ return unknownHostMatcher.matches() || hostFingerPrintMatcher.matches() || acceptHostMatcher.matches()[ FD ]
Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_14 $$ return unknownHostMatcher.matches() || hostFingerPrintMatcher.matches() || acceptHostMatcher.matches()[ CD ]
Line_4 $$ Matcher hostFingerPrintMatcher = HOST_FINGERPRINT_MESSAGE.matcher(line)-->Line_9 $$ fingerprintAlgorithm = hostFingerPrintMatcher.group(1)[ FD ]
Line_4 $$ Matcher hostFingerPrintMatcher = HOST_FINGERPRINT_MESSAGE.matcher(line)-->Line_8 $$ if (hostFingerPrintMatcher.matches()) [ FD ]
Line_8 $$ if (hostFingerPrintMatcher.matches()) -->Line_11 $$ if (acceptHostMatcher.matches()) [ CD ]
Line_3 $$ Matcher unknownHostMatcher = UNKNOWN_HOST_MESSAGE.matcher(line)-->Line_6 $$ if (unknownHostMatcher.matches()) [ FD ]
Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_4 $$ Matcher hostFingerPrintMatcher = HOST_FINGERPRINT_MESSAGE.matcher(line)[ FD ]
Line_6 $$ if (unknownHostMatcher.matches()) -->Line_8 $$ if (hostFingerPrintMatcher.matches()) [ CD ]
Line_4 $$ Matcher hostFingerPrintMatcher = HOST_FINGERPRINT_MESSAGE.matcher(line)-->Line_10 $$ hostFingerprint = hostFingerPrintMatcher.group(2)[ FD ]
Line_4 $$ Matcher hostFingerPrintMatcher = HOST_FINGERPRINT_MESSAGE.matcher(line)-->Line_14 $$ return unknownHostMatcher.matches() || hostFingerPrintMatcher.matches() || acceptHostMatcher.matches()[ FD ]
Line_5 $$ Matcher acceptHostMatcher = ACCEPT_HOST_PROMPT.matcher(line)-->Line_11 $$ if (acceptHostMatcher.matches()) [ FD ]
Line_11 $$ if (acceptHostMatcher.matches()) -->Line_12 $$ handleUnknownHost()[ CD ]
Line_8 $$ if (hostFingerPrintMatcher.matches()) -->Line_10 $$ hostFingerprint = hostFingerPrintMatcher.group(2)[ CD ]
Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_3 $$ Matcher unknownHostMatcher = UNKNOWN_HOST_MESSAGE.matcher(line)[ FD ]
Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_5 $$ Matcher acceptHostMatcher = ACCEPT_HOST_PROMPT.matcher(line)[ CD ]
Line_8 $$ if (hostFingerPrintMatcher.matches()) -->Line_9 $$ fingerprintAlgorithm = hostFingerPrintMatcher.group(1)[ CD ]
Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_6 $$ if (unknownHostMatcher.matches()) [ CD ]
Line_6 $$ if (unknownHostMatcher.matches()) -->Line_7 $$ unknownHost = unknownHostMatcher.group(1)[ CD ]
Line_3 $$ Matcher unknownHostMatcher = UNKNOWN_HOST_MESSAGE.matcher(line)-->Line_7 $$ unknownHost = unknownHostMatcher.group(1)[ FD ]
Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_5 $$ Matcher acceptHostMatcher = ACCEPT_HOST_PROMPT.matcher(line)[ FD ]
Line_2 $$ private boolean checkUnknownHost(@NotNull String line) -->Line_3 $$ Matcher unknownHostMatcher = UNKNOWN_HOST_MESSAGE.matcher(line)[ CD ]
Line_5 $$ Matcher acceptHostMatcher = ACCEPT_HOST_PROMPT.matcher(line)-->Line_14 $$ return unknownHostMatcher.matches() || hostFingerPrintMatcher.matches() || acceptHostMatcher.matches()[ FD ]
