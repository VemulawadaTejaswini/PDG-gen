Line_2 $$ public static byte[] getBytesFromDataUri(@NotNull String dataUrl) -->Line_12 $$ return null[ CD ]
Line_6 $$ String content = matcher.group(4)-->Line_7 $$ return ";base64".equalsIgnoreCase(matcher.group(3)) ? Base64Converter.decode(content.getBytes(CharsetToolkit.UTF8_CHARSET)) : content.getBytes(CharsetToolkit.UTF8_CHARSET)[ FD ]
Line_2 $$ public static byte[] getBytesFromDataUri(@NotNull String dataUrl) -->Line_3 $$ Matcher matcher = DATA_URI_PATTERN.matcher(StringUtil.unquoteString(dataUrl))[ FD ]
Line_2 $$ public static byte[] getBytesFromDataUri(@NotNull String dataUrl) -->Line_4 $$ if (matcher.matches()) [ CD ]
Line_3 $$ Matcher matcher = DATA_URI_PATTERN.matcher(StringUtil.unquoteString(dataUrl))-->Line_7 $$ return ";base64".equalsIgnoreCase(matcher.group(3)) ? Base64Converter.decode(content.getBytes(CharsetToolkit.UTF8_CHARSET)) : content.getBytes(CharsetToolkit.UTF8_CHARSET)[ FD ]
Line_3 $$ Matcher matcher = DATA_URI_PATTERN.matcher(StringUtil.unquoteString(dataUrl))-->Line_6 $$ String content = matcher.group(4)[ FD ]
Line_2 $$ public static byte[] getBytesFromDataUri(@NotNull String dataUrl) -->Line_3 $$ Matcher matcher = DATA_URI_PATTERN.matcher(StringUtil.unquoteString(dataUrl))[ CD ]
Line_3 $$ Matcher matcher = DATA_URI_PATTERN.matcher(StringUtil.unquoteString(dataUrl))-->Line_4 $$ if (matcher.matches()) [ FD ]
