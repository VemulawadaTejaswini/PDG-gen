Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_13 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_9 $$ if (source.indexOf(':') != -1) [ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_9 $$ if (source.indexOf(':') != -1) [ CD ]
Line_17 $$ Object variableValue = uriVariables.getValue(variableName)-->Line_18 $$ if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) [ FD ]
Line_14 $$ while (matcher.find()) -->Line_16 $$ String variableName = getVariableName(match)[ CD ]
Line_10 $$ source = sanitizeSource(source)-->Line_12 $$ Matcher matcher = NAMES_PATTERN.matcher(source)[ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_12 $$ Matcher matcher = NAMES_PATTERN.matcher(source)[ FD ]
Line_14 $$ while (matcher.find()) -->Line_18 $$ if (UriTemplateVariables.SKIP_VALUE.equals(variableValue)) [ CD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_26 $$ return sb.toString()[ FD ]
Line_14 $$ while (matcher.find()) -->Line_15 $$ String match = matcher.group(1)[ CD ]
Line_22 $$ String replacement = Matcher.quoteReplacement(variableValueString)-->Line_23 $$ matcher.appendReplacement(sb, replacement)[ FD ]
Line_14 $$ while (matcher.find()) -->Line_22 $$ String replacement = Matcher.quoteReplacement(variableValueString)[ CD ]
Line_6 $$ if (source.indexOf('-->Line_7 $$ return source[ CD ]
Line_17 $$ Object variableValue = uriVariables.getValue(variableName)-->Line_21 $$ String variableValueString = getVariableValueAsString(variableValue)[ FD ]
Line_14 $$ while (matcher.find()) -->Line_23 $$ matcher.appendReplacement(sb, replacement)[ CD ]
Line_12 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_14 $$ while (matcher.find()) [ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_10 $$ source = sanitizeSource(source)[ FD ]
Line_16 $$ String variableName = getVariableName(match)-->Line_17 $$ Object variableValue = uriVariables.getValue(variableName)[ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_6 $$ if (source.indexOf('[ CD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_3 $$ if (source == null) [ CD ]
Line_3 $$ if (source == null) -->Line_4 $$ return null[ CD ]
Line_9 $$ if (source.indexOf(':') != -1) -->Line_10 $$ source = sanitizeSource(source)[ CD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_23 $$ matcher.appendReplacement(sb, replacement)[ FD ]
Line_12 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_23 $$ matcher.appendReplacement(sb, replacement)[ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_25 $$ matcher.appendTail(sb)[ CD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_12 $$ Matcher matcher = NAMES_PATTERN.matcher(source)[ CD ]
Line_15 $$ String match = matcher.group(1)-->Line_16 $$ String variableName = getVariableName(match)[ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_14 $$ while (matcher.find()) [ CD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_26 $$ return sb.toString()[ CD ]
Line_14 $$ while (matcher.find()) -->Line_17 $$ Object variableValue = uriVariables.getValue(variableName)[ CD ]
Line_14 $$ while (matcher.find()) -->Line_21 $$ String variableValueString = getVariableValueAsString(variableValue)[ CD ]
Line_21 $$ String variableValueString = getVariableValueAsString(variableValue)-->Line_22 $$ String replacement = Matcher.quoteReplacement(variableValueString)[ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_17 $$ Object variableValue = uriVariables.getValue(variableName)[ FD ]
Line_12 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_25 $$ matcher.appendTail(sb)[ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_3 $$ if (source == null) [ FD ]
Line_2 $$ static String expandUriComponent(String source, UriTemplateVariables uriVariables) -->Line_6 $$ if (source.indexOf('[ FD ]
Line_12 $$ Matcher matcher = NAMES_PATTERN.matcher(source)-->Line_15 $$ String match = matcher.group(1)[ FD ]
Line_13 $$ StringBuffer sb = new StringBuffer()-->Line_25 $$ matcher.appendTail(sb)[ FD ]
