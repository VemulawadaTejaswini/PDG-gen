Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_6 $$ String arg = null[ CD ]
Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)-->Line_11 $$ arg = matcher.group(2)[ FD ]
Line_15 $$ arg = arg.replaceAll(masterKey, master)-->Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))[ FD ]
Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_7 $$ while (matcher.find()) [ CD ]
Line_11 $$ arg = matcher.group(2)-->Line_18 $$ args.add(arg)[ FD ]
Line_11 $$ arg = matcher.group(2)-->Line_13 $$ arg = matcher.group(3)[ FD ]
Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)[ CD ]
Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)-->Line_13 $$ arg = matcher.group(3)[ FD ]
Line_8 $$ if (matcher.group(1) != null) -->Line_9 $$ arg = matcher.group(1)[ CD ]
Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))-->Line_18 $$ args.add(arg)[ FD ]
Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_20 $$ return args.toArray(new String[0])[ CD ]
Line_9 $$ arg = matcher.group(1)-->Line_11 $$ arg = matcher.group(2)[ FD ]
Line_8 $$ if (matcher.group(1) != null) -->Line_10 $$ if (matcher.group(2) != null) [ CD ]
Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))-->Line_18 $$ args.add(arg)[ FD ]
Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))-->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ FD ]
Line_13 $$ arg = matcher.group(3)-->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ FD ]
Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))-->Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))[ FD ]
Line_7 $$ while (matcher.find()) -->Line_18 $$ args.add(arg)[ CD ]
Line_13 $$ arg = matcher.group(3)-->Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))[ FD ]
Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)-->Line_9 $$ arg = matcher.group(1)[ FD ]
Line_6 $$ String arg = null-->Line_18 $$ args.add(arg)[ FD ]
Line_7 $$ while (matcher.find()) -->Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))[ CD ]
Line_9 $$ arg = matcher.group(1)-->Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))[ FD ]
Line_13 $$ arg = matcher.group(3)-->Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))[ FD ]
Line_6 $$ String arg = null-->Line_13 $$ arg = matcher.group(3)[ FD ]
Line_3 $$ String regex = "\'([^\']*)\'|\"([^\"]*)\"|(\\S+)"-->Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)[ FD ]
Line_7 $$ while (matcher.find()) -->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ CD ]
Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))-->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ FD ]
Line_6 $$ String arg = null-->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ FD ]
Line_6 $$ String arg = null-->Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))[ FD ]
Line_11 $$ arg = matcher.group(2)-->Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))[ FD ]
Line_9 $$ arg = matcher.group(1)-->Line_13 $$ arg = matcher.group(3)[ FD ]
Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_5 $$ ArrayList<String> args = new ArrayList<String>()[ CD ]
Line_10 $$ if (matcher.group(2) != null) -->Line_13 $$ arg = matcher.group(3)[ CD ]
Line_9 $$ arg = matcher.group(1)-->Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))[ FD ]
Line_7 $$ while (matcher.find()) -->Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))[ CD ]
Line_15 $$ arg = arg.replaceAll(masterKey, master)-->Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))[ FD ]
Line_11 $$ arg = matcher.group(2)-->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ FD ]
Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ FD ]
Line_5 $$ ArrayList<String> args = new ArrayList<String>()-->Line_20 $$ return args.toArray(new String[0])[ FD ]
Line_10 $$ if (matcher.group(2) != null) -->Line_11 $$ arg = matcher.group(2)[ CD ]
Line_6 $$ String arg = null-->Line_9 $$ arg = matcher.group(1)[ FD ]
Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))-->Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))[ FD ]
Line_9 $$ arg = matcher.group(1)-->Line_15 $$ arg = arg.replaceAll(masterKey, master)[ FD ]
Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)-->Line_8 $$ if (matcher.group(1) != null) [ FD ]
Line_5 $$ ArrayList<String> args = new ArrayList<String>()-->Line_18 $$ args.add(arg)[ FD ]
Line_13 $$ arg = matcher.group(3)-->Line_18 $$ args.add(arg)[ FD ]
Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_3 $$ String regex = "\'([^\']*)\'|\"([^\"]*)\"|(\\S+)"[ CD ]
Line_6 $$ String arg = null-->Line_11 $$ arg = matcher.group(2)[ FD ]
Line_7 $$ while (matcher.find()) -->Line_8 $$ if (matcher.group(1) != null) [ CD ]
Line_2 $$ protected String[] getCommandAsArgs(final String cmd, final String masterKey, final String master) -->Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)[ FD ]
Line_6 $$ String arg = null-->Line_17 $$ arg = arg.replaceAll("USERNAME", System.getProperty("user.name"))[ FD ]
Line_11 $$ arg = matcher.group(2)-->Line_16 $$ arg = arg.replaceAll("CLITEST_DATA", new File(CLITestHelper.TEST_CACHE_DATA_DIR).toURI().toString().replace(' ', '+'))[ FD ]
Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)-->Line_7 $$ while (matcher.find()) [ FD ]
Line_4 $$ Matcher matcher = Pattern.compile(regex).matcher(cmd)-->Line_10 $$ if (matcher.group(2) != null) [ FD ]
Line_9 $$ arg = matcher.group(1)-->Line_18 $$ args.add(arg)[ FD ]
Line_15 $$ arg = arg.replaceAll(masterKey, master)-->Line_18 $$ args.add(arg)[ FD ]
