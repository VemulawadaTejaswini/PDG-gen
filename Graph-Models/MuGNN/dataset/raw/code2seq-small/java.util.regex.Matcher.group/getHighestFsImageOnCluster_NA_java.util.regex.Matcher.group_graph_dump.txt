Line_2 $$ private static File getHighestFsImageOnCluster(MiniDFSCluster cluster) -->Line_4 $$ File highestImageOnNn = null[ CD ]
Line_7 $$ Matcher imageMatch = IMAGE_REGEX.matcher(imageFile.getName())-->Line_8 $$ if (imageMatch.matches()) [ FD ]
Line_8 $$ if (imageMatch.matches()) -->Line_10 $$ if (imageTxId > highestImageTxId) [ CD ]
Line_9 $$ long imageTxId = Long.parseLong(imageMatch.group(1))-->Line_11 $$ highestImageTxId = imageTxId[ FD ]
Line_2 $$ private static File getHighestFsImageOnCluster(MiniDFSCluster cluster) -->Line_5 $$ for (URI nameDir : cluster.getNameDirs(0)) [ FD ]
Line_2 $$ private static File getHighestFsImageOnCluster(MiniDFSCluster cluster) -->Line_3 $$ long highestImageTxId = -1[ CD ]
Line_7 $$ Matcher imageMatch = IMAGE_REGEX.matcher(imageFile.getName())-->Line_9 $$ long imageTxId = Long.parseLong(imageMatch.group(1))[ FD ]
Line_8 $$ if (imageMatch.matches()) -->Line_9 $$ long imageTxId = Long.parseLong(imageMatch.group(1))[ CD ]
Line_3 $$ long highestImageTxId = -1-->Line_11 $$ highestImageTxId = imageTxId[ FD ]
Line_3 $$ long highestImageTxId = -1-->Line_10 $$ if (imageTxId > highestImageTxId) [ FD ]
Line_10 $$ if (imageTxId > highestImageTxId) -->Line_12 $$ highestImageOnNn = imageFile[ CD ]
Line_6 $$ for (File imageFile : new File(new File(nameDir), "current").listFiles()) -->Line_12 $$ highestImageOnNn = imageFile[ FD ]
Line_2 $$ private static File getHighestFsImageOnCluster(MiniDFSCluster cluster) -->Line_17 $$ return highestImageOnNn[ CD ]
Line_4 $$ File highestImageOnNn = null-->Line_12 $$ highestImageOnNn = imageFile[ FD ]
Line_9 $$ long imageTxId = Long.parseLong(imageMatch.group(1))-->Line_10 $$ if (imageTxId > highestImageTxId) [ FD ]
Line_10 $$ if (imageTxId > highestImageTxId) -->Line_11 $$ highestImageTxId = imageTxId[ CD ]
Line_6 $$ for (File imageFile : new File(new File(nameDir), "current").listFiles()) -->Line_7 $$ Matcher imageMatch = IMAGE_REGEX.matcher(imageFile.getName())[ FD ]
