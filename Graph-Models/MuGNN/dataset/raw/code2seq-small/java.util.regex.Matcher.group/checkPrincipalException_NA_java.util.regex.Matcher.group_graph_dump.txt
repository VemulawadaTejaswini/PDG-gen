Line_2 $$ protected String checkPrincipalException(String content) -->Line_3 $$ String newContent = content[ CD ]
Line_2 $$ protected String checkPrincipalException(String content) -->Line_4 $$ Matcher matcher = principalExceptionPattern.matcher(content)[ CD ]
Line_2 $$ protected String checkPrincipalException(String content) -->Line_4 $$ Matcher matcher = principalExceptionPattern.matcher(content)[ FD ]
Line_5 $$ while (matcher.find()) -->Line_7 $$ String replacement = StringUtil.replace(match, "class.getName", "getNestedClasses")[ CD ]
Line_2 $$ protected String checkPrincipalException(String content) -->Line_10 $$ return newContent[ CD ]
Line_5 $$ while (matcher.find()) -->Line_8 $$ newContent = StringUtil.replace(newContent, match, replacement)[ CD ]
Line_7 $$ String replacement = StringUtil.replace(match, "class.getName", "getNestedClasses")-->Line_8 $$ newContent = StringUtil.replace(newContent, match, replacement)[ FD ]
Line_6 $$ String match = matcher.group()-->Line_8 $$ newContent = StringUtil.replace(newContent, match, replacement)[ FD ]
Line_6 $$ String match = matcher.group()-->Line_7 $$ String replacement = StringUtil.replace(match, "class.getName", "getNestedClasses")[ FD ]
Line_4 $$ Matcher matcher = principalExceptionPattern.matcher(content)-->Line_5 $$ while (matcher.find()) [ FD ]
Line_2 $$ protected String checkPrincipalException(String content) -->Line_5 $$ while (matcher.find()) [ CD ]
Line_3 $$ String newContent = content-->Line_8 $$ newContent = StringUtil.replace(newContent, match, replacement)[ FD ]
Line_5 $$ while (matcher.find()) -->Line_6 $$ String match = matcher.group()[ CD ]
Line_4 $$ Matcher matcher = principalExceptionPattern.matcher(content)-->Line_6 $$ String match = matcher.group()[ FD ]
