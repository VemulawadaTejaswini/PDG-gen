Line_2 $$ public GridmixJob createGridmixJob(Configuration conf, long submissionMillis, JobStory jobdesc, Path outRoot, UserGroupInformation ugi, int seq) throws IOException -->Line_4 $$ if (numLocations < 0)[ CD ]
Line_6 $$ if (hosts == null) -->Line_21 $$ hosts = hostList.toArray(new String[hostList.size()])[ CD ]
Line_6 $$ if (hosts == null) -->Line_8 $$ ClusterStatus stat = client.getClusterStatus(true)[ CD ]
Line_2 $$ public GridmixJob createGridmixJob(Configuration conf, long submissionMillis, JobStory jobdesc, Path outRoot, UserGroupInformation ugi, int seq) throws IOException -->Line_6 $$ if (hosts == null) [ CD ]
Line_6 $$ if (hosts == null) -->Line_10 $$ final ArrayList<String> hostList = new ArrayList<String>(nTrackers)[ CD ]
Line_6 $$ if (hosts == null) -->Line_11 $$ final Pattern trackerPattern = Pattern.compile("tracker_([^:]*):.*")[ CD ]
Line_8 $$ ClusterStatus stat = client.getClusterStatus(true)-->Line_9 $$ final int nTrackers = stat.getTaskTrackers()[ FD ]
Line_4 $$ if (numLocations < 0)-->Line_5 $$ numLocations = 0[ CD ]
Line_10 $$ final ArrayList<String> hostList = new ArrayList<String>(nTrackers)-->Line_21 $$ hosts = hostList.toArray(new String[hostList.size()])[ FD ]
Line_2 $$ public GridmixJob createGridmixJob(Configuration conf, long submissionMillis, JobStory jobdesc, Path outRoot, UserGroupInformation ugi, int seq) throws IOException -->Line_3 $$ int numLocations = conf.getInt(SLEEPJOB_RANDOM_LOCATIONS, 0)[ CD ]
Line_8 $$ ClusterStatus stat = client.getClusterStatus(true)-->Line_13 $$ for (String tracker : stat.getActiveTrackerNames()) [ FD ]
Line_3 $$ int numLocations = conf.getInt(SLEEPJOB_RANDOM_LOCATIONS, 0)-->Line_5 $$ numLocations = 0[ FD ]
Line_12 $$ final Matcher m = trackerPattern.matcher("")-->Line_14 $$ m.reset(tracker)[ FD ]
Line_6 $$ if (hosts == null) -->Line_12 $$ final Matcher m = trackerPattern.matcher("")[ CD ]
Line_3 $$ int numLocations = conf.getInt(SLEEPJOB_RANDOM_LOCATIONS, 0)-->Line_4 $$ if (numLocations < 0)[ FD ]
Line_2 $$ public GridmixJob createGridmixJob(Configuration conf, long submissionMillis, JobStory jobdesc, Path outRoot, UserGroupInformation ugi, int seq) throws IOException -->Line_23 $$ return new SleepJob(conf, submissionMillis, jobdesc, outRoot, ugi, seq, numLocations, hosts)[ CD ]
Line_6 $$ if (hosts == null) -->Line_9 $$ final int nTrackers = stat.getTaskTrackers()[ CD ]
Line_12 $$ final Matcher m = trackerPattern.matcher("")-->Line_15 $$ if (!m.find()) [ FD ]
Line_12 $$ final Matcher m = trackerPattern.matcher("")-->Line_18 $$ final String name = m.group(1)[ FD ]
Line_2 $$ public GridmixJob createGridmixJob(Configuration conf, long submissionMillis, JobStory jobdesc, Path outRoot, UserGroupInformation ugi, int seq) throws IOException -->Line_3 $$ int numLocations = conf.getInt(SLEEPJOB_RANDOM_LOCATIONS, 0)[ FD ]
Line_13 $$ for (String tracker : stat.getActiveTrackerNames()) -->Line_14 $$ m.reset(tracker)[ FD ]
Line_7 $$ final JobClient client = new JobClient(new JobConf(conf))-->Line_8 $$ ClusterStatus stat = client.getClusterStatus(true)[ FD ]
Line_11 $$ final Pattern trackerPattern = Pattern.compile("tracker_([^:]*):.*")-->Line_12 $$ final Matcher m = trackerPattern.matcher("")[ FD ]
Line_6 $$ if (hosts == null) -->Line_7 $$ final JobClient client = new JobClient(new JobConf(conf))[ CD ]
Line_10 $$ final ArrayList<String> hostList = new ArrayList<String>(nTrackers)-->Line_19 $$ hostList.add(name)[ FD ]
Line_18 $$ final String name = m.group(1)-->Line_19 $$ hostList.add(name)[ FD ]
