Line_12 $$ Matcher matcher = Pattern.compile("(?is)\\b(?<column>\\w+\\.\\w+)\\s+as\\s+(?<alias>\\w+)\\b.*\\k<column>\\s+as\\s+\\k<alias>").matcher(sqlQuery)-->Line_14 $$ fail(format("Column %s mapped to alias %s twice in generated SQL: %s", matcher.group("column"), matcher.group("alias"), sqlQuery))[ FD ]
Line_5 $$ String hql = "SELECT b, 1 FROM DataMetaPoint b inner join fetch b.dataPoint dp"-->Line_6 $$ session.createQuery(hql).setMaxResults(3).list()[ FD ]
Line_3 $$ Session session = openSession()-->Line_6 $$ session.createQuery(hql).setMaxResults(3).list()[ FD ]
Line_9 $$ String sqlQuery = queryPlan.getTranslators()[0].collectSqlStrings().get(0)-->Line_12 $$ Matcher matcher = Pattern.compile("(?is)\\b(?<column>\\w+\\.\\w+)\\s+as\\s+(?<alias>\\w+)\\b.*\\k<column>\\s+as\\s+\\k<alias>").matcher(sqlQuery)[ FD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_4 $$ session.beginTransaction()[ CD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_11 $$ session.close()[ CD ]
Line_3 $$ Session session = openSession()-->Line_10 $$ session.getTransaction().commit()[ FD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_12 $$ Matcher matcher = Pattern.compile("(?is)\\b(?<column>\\w+\\.\\w+)\\s+as\\s+(?<alias>\\w+)\\b.*\\k<column>\\s+as\\s+\\k<alias>").matcher(sqlQuery)[ CD ]
Line_3 $$ Session session = openSession()-->Line_11 $$ session.close()[ FD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_9 $$ String sqlQuery = queryPlan.getTranslators()[0].collectSqlStrings().get(0)[ CD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_3 $$ Session session = openSession()[ CD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.beginTransaction()[ FD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_13 $$ if (matcher.find()) [ CD ]
Line_13 $$ if (matcher.find()) -->Line_14 $$ fail(format("Column %s mapped to alias %s twice in generated SQL: %s", matcher.group("column"), matcher.group("alias"), sqlQuery))[ CD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_10 $$ session.getTransaction().commit()[ CD ]
Line_12 $$ Matcher matcher = Pattern.compile("(?is)\\b(?<column>\\w+\\.\\w+)\\s+as\\s+(?<alias>\\w+)\\b.*\\k<column>\\s+as\\s+\\k<alias>").matcher(sqlQuery)-->Line_13 $$ if (matcher.find()) [ FD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_6 $$ session.createQuery(hql).setMaxResults(3).list()[ CD ]
Line_8 $$ HQLQueryPlan queryPlan = new HQLQueryPlan(hql, false, Collections.EMPTY_MAP, sessionFactory())-->Line_9 $$ String sqlQuery = queryPlan.getTranslators()[0].collectSqlStrings().get(0)[ FD ]
Line_9 $$ String sqlQuery = queryPlan.getTranslators()[0].collectSqlStrings().get(0)-->Line_14 $$ fail(format("Column %s mapped to alias %s twice in generated SQL: %s", matcher.group("column"), matcher.group("alias"), sqlQuery))[ FD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_8 $$ HQLQueryPlan queryPlan = new HQLQueryPlan(hql, false, Collections.EMPTY_MAP, sessionFactory())[ CD ]
Line_2 $$ public void testLimitWithExpreesionAndFetchJoin() -->Line_5 $$ String hql = "SELECT b, 1 FROM DataMetaPoint b inner join fetch b.dataPoint dp"[ CD ]
