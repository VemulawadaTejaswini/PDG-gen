Line_3 $$ final Matcher m = PATTERN_ERROR_LINE.matcher(output)-->Line_5 $$ final String result = m.group()[ FD ]
Line_4 $$ if (m.find()) -->Line_6 $$ return result != null ? result.trim() : null[ CD ]
Line_2 $$ private static String findErrorCause(@NotNull String output) -->Line_8 $$ return null[ CD ]
Line_5 $$ final String result = m.group()-->Line_6 $$ return result != null ? result.trim() : null[ FD ]
Line_3 $$ final Matcher m = PATTERN_ERROR_LINE.matcher(output)-->Line_4 $$ if (m.find()) [ FD ]
Line_2 $$ private static String findErrorCause(@NotNull String output) -->Line_3 $$ final Matcher m = PATTERN_ERROR_LINE.matcher(output)[ FD ]
Line_4 $$ if (m.find()) -->Line_5 $$ final String result = m.group()[ CD ]
Line_2 $$ private static String findErrorCause(@NotNull String output) -->Line_3 $$ final Matcher m = PATTERN_ERROR_LINE.matcher(output)[ CD ]
Line_2 $$ private static String findErrorCause(@NotNull String output) -->Line_4 $$ if (m.find()) [ CD ]
