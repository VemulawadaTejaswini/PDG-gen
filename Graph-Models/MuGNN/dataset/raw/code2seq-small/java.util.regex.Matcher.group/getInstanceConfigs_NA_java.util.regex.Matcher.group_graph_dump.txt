Line_7 $$ if (matcher.matches()) -->Line_8 $$ String instance = matcher.group(1)[ CD ]
Line_2 $$ Map<String, MetricsConfig> getInstanceConfigs(String type) -->Line_14 $$ return map[ CD ]
Line_4 $$ MetricsConfig sub = subset(type)-->Line_5 $$ for (String key : sub.keys()) [ FD ]
Line_6 $$ Matcher matcher = INSTANCE_REGEX.matcher(key)-->Line_7 $$ if (matcher.matches()) [ FD ]
Line_2 $$ Map<String, MetricsConfig> getInstanceConfigs(String type) -->Line_3 $$ Map<String, MetricsConfig> map = Maps.newHashMap()[ CD ]
Line_3 $$ Map<String, MetricsConfig> map = Maps.newHashMap()-->Line_9 $$ if (!map.containsKey(instance)) [ FD ]
Line_8 $$ String instance = matcher.group(1)-->Line_9 $$ if (!map.containsKey(instance)) [ FD ]
Line_4 $$ MetricsConfig sub = subset(type)-->Line_10 $$ map.put(instance, sub.subset(instance))[ FD ]
Line_5 $$ for (String key : sub.keys()) -->Line_6 $$ Matcher matcher = INSTANCE_REGEX.matcher(key)[ FD ]
Line_2 $$ Map<String, MetricsConfig> getInstanceConfigs(String type) -->Line_4 $$ MetricsConfig sub = subset(type)[ CD ]
Line_6 $$ Matcher matcher = INSTANCE_REGEX.matcher(key)-->Line_8 $$ String instance = matcher.group(1)[ FD ]
Line_9 $$ if (!map.containsKey(instance)) -->Line_10 $$ map.put(instance, sub.subset(instance))[ CD ]
Line_3 $$ Map<String, MetricsConfig> map = Maps.newHashMap()-->Line_10 $$ map.put(instance, sub.subset(instance))[ FD ]
Line_2 $$ Map<String, MetricsConfig> getInstanceConfigs(String type) -->Line_4 $$ MetricsConfig sub = subset(type)[ FD ]
Line_8 $$ String instance = matcher.group(1)-->Line_10 $$ map.put(instance, sub.subset(instance))[ FD ]
Line_7 $$ if (matcher.matches()) -->Line_9 $$ if (!map.containsKey(instance)) [ CD ]
