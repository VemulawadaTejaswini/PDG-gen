Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_6 $$ Pattern p = Pattern.compile("[0-9]+")[ CD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_7 $$ Matcher m = p.matcher(newValue)[ CD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_3 $$ ModelNode another = mn.clone()[ FD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_11 $$ ++n[ CD ]
Line_5 $$ int n = 0-->Line_11 $$ ++n[ FD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_5 $$ int n = 0[ CD ]
Line_7 $$ Matcher m = p.matcher(newValue)-->Line_9 $$ n = Integer.parseInt(m.group())[ FD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_8 $$ while (m.find()) [ CD ]
Line_5 $$ int n = 0-->Line_9 $$ n = Integer.parseInt(m.group())[ FD ]
Line_4 $$ String newValue = mn.get(4).get("connection-definitions").asString()-->Line_7 $$ Matcher m = p.matcher(newValue)[ FD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_13 $$ return another[ CD ]
Line_7 $$ Matcher m = p.matcher(newValue)-->Line_8 $$ while (m.find()) [ FD ]
Line_6 $$ Pattern p = Pattern.compile("[0-9]+")-->Line_7 $$ Matcher m = p.matcher(newValue)[ FD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_12 $$ another.get(4).get("connection-definitions").set(fact + n)[ CD ]
Line_9 $$ n = Integer.parseInt(m.group())-->Line_11 $$ ++n[ FD ]
Line_8 $$ while (m.find()) -->Line_9 $$ n = Integer.parseInt(m.group())[ CD ]
Line_3 $$ ModelNode another = mn.clone()-->Line_12 $$ another.get(4).get("connection-definitions").set(fact + n)[ FD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_3 $$ ModelNode another = mn.clone()[ CD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_4 $$ String newValue = mn.get(4).get("connection-definitions").asString()[ FD ]
Line_2 $$ private ModelNode getAnotherConnection(ModelNode mn) -->Line_4 $$ String newValue = mn.get(4).get("connection-definitions").asString()[ CD ]
