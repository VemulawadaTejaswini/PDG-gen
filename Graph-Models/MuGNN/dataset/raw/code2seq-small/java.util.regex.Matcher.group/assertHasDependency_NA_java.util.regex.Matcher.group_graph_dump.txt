Line_2 $$ private String assertHasDependency(VirtualFile pom, final String groupId, final String artifactId) -->Line_5 $$ Matcher matcher = pattern.matcher(pomText)[ CD ]
Line_5 $$ Matcher matcher = pattern.matcher(pomText)-->Line_6 $$ assertTrue(matcher.matches())[ FD ]
Line_2 $$ private String assertHasDependency(VirtualFile pom, final String groupId, final String artifactId) -->Line_7 $$ return matcher.group(1)[ CD ]
Line_5 $$ Matcher matcher = pattern.matcher(pomText)-->Line_7 $$ return matcher.group(1)[ FD ]
Line_2 $$ private String assertHasDependency(VirtualFile pom, final String groupId, final String artifactId) -->Line_3 $$ String pomText = PsiManager.getInstance(myProject).findFile(pom).getText()[ FD ]
Line_3 $$ String pomText = PsiManager.getInstance(myProject).findFile(pom).getText()-->Line_5 $$ Matcher matcher = pattern.matcher(pomText)[ FD ]
Line_2 $$ private String assertHasDependency(VirtualFile pom, final String groupId, final String artifactId) -->Line_6 $$ assertTrue(matcher.matches())[ CD ]
Line_2 $$ private String assertHasDependency(VirtualFile pom, final String groupId, final String artifactId) -->Line_4 $$ Pattern pattern = Pattern.compile("(?s).*<dependency>\\s*<groupId>" + groupId + "</groupId>\\s*<artifactId>" + artifactId + "</artifactId>\\s*<version>(.*)</version>\\s*</dependency>.*")[ CD ]
Line_2 $$ private String assertHasDependency(VirtualFile pom, final String groupId, final String artifactId) -->Line_3 $$ String pomText = PsiManager.getInstance(myProject).findFile(pom).getText()[ CD ]
Line_4 $$ Pattern pattern = Pattern.compile("(?s).*<dependency>\\s*<groupId>" + groupId + "</groupId>\\s*<artifactId>" + artifactId + "</artifactId>\\s*<version>(.*)</version>\\s*</dependency>.*")-->Line_5 $$ Matcher matcher = pattern.matcher(pomText)[ FD ]
