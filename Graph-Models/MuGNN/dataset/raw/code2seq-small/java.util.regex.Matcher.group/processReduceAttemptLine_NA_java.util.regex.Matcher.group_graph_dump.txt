Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_11 $$ String hostName = line.get("HOSTNAME")[ CD ]
Line_64 $$ if (hostName != null) -->Line_65 $$ ParsedHost host = getAndRecordParsedHost(hostName)[ CD ]
Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_17 $$ if (task == null) [ FD ]
Line_9 $$ String attemptSortFinished = line.get("SORT_FINISHED")-->Line_52 $$ if (attemptSortFinished != null) [ FD ]
Line_85 $$ long startTimeValue = Long.parseLong(attemptStartTime)-->Line_87 $$ taskAttemptStartTimes.put(attemptID, startTimeValue)[ FD ]
Line_30 $$ if (!attemptAlreadyExists) -->Line_32 $$ task.getAttempts().add(attempt)[ CD ]
Line_36 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_57 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_44 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ FD ]
Line_55 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) -->Line_56 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()[ CD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_23 $$ task.setTaskID(taskID)[ FD ]
Line_9 $$ String attemptSortFinished = line.get("SORT_FINISHED")-->Line_53 $$ attempt.setSortFinished(Long.parseLong(attemptSortFinished))[ FD ]
Line_74 $$ if (matcher.matches()) -->Line_76 $$ if (attemptNumberString != null) [ CD ]
Line_36 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_42 $$ attempt.setResult(stat)[ FD ]
Line_49 $$ if (attemptShuffleFinished != null) -->Line_50 $$ attempt.setShuffleFinished(Long.parseLong(attemptShuffleFinished))[ CD ]
Line_18 $$ task = new LoggedTask()-->Line_23 $$ task.setTaskID(taskID)[ FD ]
Line_12 $$ if (hostName != null && !hostNames.contains(hostName)) -->Line_13 $$ hostNames.add(hostName)[ CD ]
Line_72 $$ if (attemptID != null) -->Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)[ CD ]
Line_10 $$ String counters = line.get("COUNTERS")-->Line_41 $$ incorporateCounters(attempt, counters)[ FD ]
Line_56 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()-->Line_58 $$ successfulReduceAttemptTimes.enter(runtime)[ FD ]
Line_95 $$ if (attemptSortFinished != null) -->Line_96 $$ taskReduceAttemptSortEndTimes.put(attemptID, Long.parseLong(attemptSortFinished))[ CD ]
Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)-->Line_75 $$ String attemptNumberString = matcher.group(1)[ FD ]
Line_66 $$ if (host != null) -->Line_67 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_31 $$ attemptsInCurrentJob.put(attemptID, attempt)[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_8 $$ String attemptShuffleFinished = line.get("SHUFFLE_FINISHED")[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_9 $$ String attemptSortFinished = line.get("SORT_FINISHED")[ CD ]
Line_8 $$ String attemptShuffleFinished = line.get("SHUFFLE_FINISHED")-->Line_49 $$ if (attemptShuffleFinished != null) [ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_41 $$ incorporateCounters(attempt, counters)[ CD ]
Line_84 $$ if (attemptStartTime != null) -->Line_89 $$ if (status != null && status.equals("SUCCESS") && attemptFinishTime != null) [ CD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_15 $$ if (jobBeingTraced != null && taskID != null) [ CD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_55 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) [ CD ]
Line_90 $$ long finishTime = Long.parseLong(attemptFinishTime)-->Line_91 $$ taskReduceAttemptFinishTimes.put(attemptID, finishTime)[ FD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_44 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_26 $$ if (attempt == null) [ CD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_25 $$ boolean attemptAlreadyExists = attempt != null[ CD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_30 $$ if (!attemptAlreadyExists) [ CD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_47 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_72 $$ if (attemptID != null) [ CD ]
Line_43 $$ if (attemptStartTime != null) -->Line_44 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ CD ]
Line_77 $$ int attemptNumber = Integer.parseInt(attemptNumberString)-->Line_78 $$ successfulNthReducerAttempts.enter(attemptNumber)[ FD ]
Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_23 $$ task.setTaskID(taskID)[ FD ]
Line_11 $$ String hostName = line.get("HOSTNAME")-->Line_12 $$ if (hostName != null && !hostNames.contains(hostName)) [ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_11 $$ String hostName = line.get("HOSTNAME")[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_5 $$ String status = line.get("TASK_STATUS")[ FD ]
Line_39 $$ stat = null-->Line_60 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_69 $$ attempt.setHostName(hostName, null)[ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_46 $$ if (attemptFinishTime != null) [ CD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_9 $$ String attemptSortFinished = line.get("SORT_FINISHED")[ FD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_19 $$ task.setTaskID(taskID)[ FD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_84 $$ if (attemptStartTime != null) [ FD ]
Line_11 $$ String hostName = line.get("HOSTNAME")-->Line_65 $$ ParsedHost host = getAndRecordParsedHost(hostName)[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_41 $$ incorporateCounters(attempt, counters)[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_6 $$ String attemptStartTime = line.get("START_TIME")[ CD ]
Line_18 $$ task = new LoggedTask()-->Line_21 $$ tasksInCurrentJob.put(taskID, task)[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_4 $$ String taskID = line.get("TASKID")[ FD ]
Line_36 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_39 $$ stat = null[ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_26 $$ if (attempt == null) [ FD ]
Line_25 $$ boolean attemptAlreadyExists = attempt != null-->Line_30 $$ if (!attemptAlreadyExists) [ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_4 $$ String taskID = line.get("TASKID")[ CD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_27 $$ attempt = new LoggedTaskAttempt()[ FD ]
Line_75 $$ String attemptNumberString = matcher.group(1)-->Line_77 $$ int attemptNumber = Integer.parseInt(attemptNumberString)[ FD ]
Line_17 $$ if (task == null) -->Line_18 $$ task = new LoggedTask()[ CD ]
Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_21 $$ tasksInCurrentJob.put(taskID, task)[ FD ]
Line_74 $$ if (matcher.matches()) -->Line_75 $$ String attemptNumberString = matcher.group(1)[ CD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_52 $$ if (attemptSortFinished != null) [ CD ]
Line_26 $$ if (attempt == null) -->Line_28 $$ attempt.setAttemptID(attemptID)[ CD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")[ FD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_72 $$ if (attemptID != null) [ FD ]
Line_11 $$ String hostName = line.get("HOSTNAME")-->Line_13 $$ hostNames.add(hostName)[ FD ]
Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")-->Line_46 $$ if (attemptFinishTime != null) [ FD ]
Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")-->Line_90 $$ long finishTime = Long.parseLong(attemptFinishTime)[ FD ]
Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_18 $$ task = new LoggedTask()[ FD ]
Line_34 $$ Pre21JobHistoryConstants.Values stat = null-->Line_57 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ FD ]
Line_89 $$ if (status != null && status.equals("SUCCESS") && attemptFinishTime != null) -->Line_95 $$ if (attemptSortFinished != null) [ CD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_64 $$ if (hostName != null) [ CD ]
Line_18 $$ task = new LoggedTask()-->Line_19 $$ task.setTaskID(taskID)[ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_53 $$ attempt.setSortFinished(Long.parseLong(attemptSortFinished))[ FD ]
Line_84 $$ if (attemptStartTime != null) -->Line_86 $$ if (startTimeValue != 0 && startTimeValue + MAXIMUM_CLOCK_SKEW >= launchTimeCurrentJob) [ CD ]
Line_65 $$ ParsedHost host = getAndRecordParsedHost(hostName)-->Line_67 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_17 $$ if (task == null) [ CD ]
Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_32 $$ task.getAttempts().add(attempt)[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_50 $$ attempt.setShuffleFinished(Long.parseLong(attemptShuffleFinished))[ FD ]
Line_60 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) -->Line_61 $$ failedReduceAttemptTimes.enter(runtime)[ CD ]
Line_26 $$ if (attempt == null) -->Line_27 $$ attempt = new LoggedTaskAttempt()[ CD ]
Line_34 $$ Pre21JobHistoryConstants.Values stat = null-->Line_39 $$ stat = null[ FD ]
Line_17 $$ if (task == null) -->Line_20 $$ jobBeingTraced.getReduceTasks().add(task)[ CD ]
Line_76 $$ if (attemptNumberString != null) -->Line_77 $$ int attemptNumber = Integer.parseInt(attemptNumberString)[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)[ FD ]
Line_17 $$ if (task == null) -->Line_21 $$ tasksInCurrentJob.put(taskID, task)[ CD ]
Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")-->Line_47 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ FD ]
Line_39 $$ stat = null-->Line_42 $$ attempt.setResult(stat)[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")[ CD ]
Line_56 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()-->Line_61 $$ failedReduceAttemptTimes.enter(runtime)[ FD ]
Line_89 $$ if (status != null && status.equals("SUCCESS") && attemptFinishTime != null) -->Line_92 $$ if (attemptShuffleFinished != null) [ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_96 $$ taskReduceAttemptSortEndTimes.put(attemptID, Long.parseLong(attemptSortFinished))[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_32 $$ task.getAttempts().add(attempt)[ FD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_93 $$ taskReduceAttemptShuffleEndTimes.put(attemptID, Long.parseLong(attemptShuffleFinished))[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_12 $$ if (hostName != null && !hostNames.contains(hostName)) [ CD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_43 $$ if (attemptStartTime != null) [ CD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_56 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()[ FD ]
Line_34 $$ Pre21JobHistoryConstants.Values stat = null-->Line_36 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_53 $$ attempt.setSortFinished(Long.parseLong(attemptSortFinished))[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_44 $$ attempt.setStartTime(Long.parseLong(attemptStartTime))[ FD ]
Line_39 $$ stat = null-->Line_57 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ FD ]
Line_17 $$ if (task == null) -->Line_19 $$ task.setTaskID(taskID)[ CD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_31 $$ attemptsInCurrentJob.put(attemptID, attempt)[ FD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_42 $$ attempt.setResult(stat)[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_55 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) [ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_23 $$ task.setTaskID(taskID)[ CD ]
Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_19 $$ task.setTaskID(taskID)[ FD ]
Line_9 $$ String attemptSortFinished = line.get("SORT_FINISHED")-->Line_96 $$ taskReduceAttemptSortEndTimes.put(attemptID, Long.parseLong(attemptSortFinished))[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_10 $$ String counters = line.get("COUNTERS")[ CD ]
Line_30 $$ if (!attemptAlreadyExists) -->Line_31 $$ attemptsInCurrentJob.put(attemptID, attempt)[ CD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_43 $$ if (attemptStartTime != null) [ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_28 $$ attempt.setAttemptID(attemptID)[ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_69 $$ attempt.setHostName(hostName, null)[ FD ]
Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)-->Line_74 $$ if (matcher.matches()) [ FD ]
Line_89 $$ if (status != null && status.equals("SUCCESS") && attemptFinishTime != null) -->Line_90 $$ long finishTime = Long.parseLong(attemptFinishTime)[ CD ]
Line_76 $$ if (attemptNumberString != null) -->Line_78 $$ successfulNthReducerAttempts.enter(attemptNumber)[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_87 $$ taskAttemptStartTimes.put(attemptID, startTimeValue)[ FD ]
Line_65 $$ ParsedHost host = getAndRecordParsedHost(hostName)-->Line_66 $$ if (host != null) [ FD ]
Line_11 $$ String hostName = line.get("HOSTNAME")-->Line_64 $$ if (hostName != null) [ FD ]
Line_52 $$ if (attemptSortFinished != null) -->Line_53 $$ attempt.setSortFinished(Long.parseLong(attemptSortFinished))[ CD ]
Line_84 $$ if (attemptStartTime != null) -->Line_85 $$ long startTimeValue = Long.parseLong(attemptStartTime)[ CD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_7 $$ String attemptFinishTime = line.get("FINISH_TIME")[ CD ]
Line_75 $$ String attemptNumberString = matcher.group(1)-->Line_76 $$ if (attemptNumberString != null) [ FD ]
Line_92 $$ if (attemptShuffleFinished != null) -->Line_93 $$ taskReduceAttemptShuffleEndTimes.put(attemptID, Long.parseLong(attemptShuffleFinished))[ CD ]
Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)-->Line_20 $$ jobBeingTraced.getReduceTasks().add(task)[ FD ]
Line_55 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) -->Line_60 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ CD ]
Line_86 $$ if (startTimeValue != 0 && startTimeValue + MAXIMUM_CLOCK_SKEW >= launchTimeCurrentJob) -->Line_87 $$ taskAttemptStartTimes.put(attemptID, startTimeValue)[ CD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_47 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ FD ]
Line_89 $$ if (status != null && status.equals("SUCCESS") && attemptFinishTime != null) -->Line_91 $$ taskReduceAttemptFinishTimes.put(attemptID, finishTime)[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_28 $$ attempt.setAttemptID(attemptID)[ FD ]
Line_9 $$ String attemptSortFinished = line.get("SORT_FINISHED")-->Line_95 $$ if (attemptSortFinished != null) [ FD ]
Line_72 $$ if (attemptID != null) -->Line_74 $$ if (matcher.matches()) [ CD ]
Line_4 $$ String taskID = line.get("TASKID")-->Line_21 $$ tasksInCurrentJob.put(taskID, task)[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_31 $$ attemptsInCurrentJob.put(attemptID, attempt)[ FD ]
Line_46 $$ if (attemptFinishTime != null) -->Line_47 $$ attempt.setFinishTime(Long.parseLong(attemptFinishTime))[ CD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_91 $$ taskReduceAttemptFinishTimes.put(attemptID, finishTime)[ FD ]
Line_8 $$ String attemptShuffleFinished = line.get("SHUFFLE_FINISHED")-->Line_92 $$ if (attemptShuffleFinished != null) [ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_42 $$ attempt.setResult(stat)[ CD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_67 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ FD ]
Line_3 $$ String attemptID = line.get("TASK_ATTEMPT_ID")-->Line_73 $$ Matcher matcher = taskAttemptIDPattern.matcher(attemptID)[ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_16 $$ LoggedTask task = tasksInCurrentJob.get(taskID)[ CD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_34 $$ Pre21JobHistoryConstants.Values stat = null[ CD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_42 $$ attempt.setResult(stat)[ FD ]
Line_11 $$ String hostName = line.get("HOSTNAME")-->Line_69 $$ attempt.setHostName(hostName, null)[ FD ]
Line_66 $$ if (host != null) -->Line_69 $$ attempt.setHostName(hostName, null)[ CD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_10 $$ String counters = line.get("COUNTERS")[ FD ]
Line_64 $$ if (hostName != null) -->Line_66 $$ if (host != null) [ CD ]
Line_34 $$ Pre21JobHistoryConstants.Values stat = null-->Line_60 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_56 $$ long runtime = attempt.getFinishTime() - attempt.getStartTime()[ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_55 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) [ FD ]
Line_57 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) -->Line_58 $$ successfulReduceAttemptTimes.enter(runtime)[ CD ]
Line_8 $$ String attemptShuffleFinished = line.get("SHUFFLE_FINISHED")-->Line_93 $$ taskReduceAttemptShuffleEndTimes.put(attemptID, Long.parseLong(attemptShuffleFinished))[ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_32 $$ task.getAttempts().add(attempt)[ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_41 $$ incorporateCounters(attempt, counters)[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_8 $$ String attemptShuffleFinished = line.get("SHUFFLE_FINISHED")[ CD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_28 $$ attempt.setAttemptID(attemptID)[ FD ]
Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)-->Line_50 $$ attempt.setShuffleFinished(Long.parseLong(attemptShuffleFinished))[ FD ]
Line_18 $$ task = new LoggedTask()-->Line_32 $$ task.getAttempts().add(attempt)[ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_49 $$ if (attemptShuffleFinished != null) [ CD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_5 $$ String status = line.get("TASK_STATUS")[ CD ]
Line_5 $$ String status = line.get("TASK_STATUS")-->Line_36 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)[ FD ]
Line_2 $$ private void processReduceAttemptLine(ParsedLine line) -->Line_6 $$ String attemptStartTime = line.get("START_TIME")[ FD ]
Line_15 $$ if (jobBeingTraced != null && taskID != null) -->Line_24 $$ LoggedTaskAttempt attempt = attemptsInCurrentJob.get(attemptID)[ CD ]
Line_18 $$ task = new LoggedTask()-->Line_20 $$ jobBeingTraced.getReduceTasks().add(task)[ FD ]
Line_8 $$ String attemptShuffleFinished = line.get("SHUFFLE_FINISHED")-->Line_50 $$ attempt.setShuffleFinished(Long.parseLong(attemptShuffleFinished))[ FD ]
Line_36 $$ stat = status == null ? null : Pre21JobHistoryConstants.Values.valueOf(status)-->Line_60 $$ if (stat == Pre21JobHistoryConstants.Values.FAILED) [ FD ]
Line_5 $$ String status = line.get("TASK_STATUS")-->Line_89 $$ if (status != null && status.equals("SUCCESS") && attemptFinishTime != null) [ FD ]
Line_34 $$ Pre21JobHistoryConstants.Values stat = null-->Line_42 $$ attempt.setResult(stat)[ FD ]
Line_27 $$ attempt = new LoggedTaskAttempt()-->Line_67 $$ attempt.setHostName(host.getNodeName(), host.getRackName())[ FD ]
Line_6 $$ String attemptStartTime = line.get("START_TIME")-->Line_85 $$ long startTimeValue = Long.parseLong(attemptStartTime)[ FD ]
Line_55 $$ if (attempt.getStartTime() > 0 && attempt.getFinishTime() > 0) -->Line_57 $$ if (stat == Pre21JobHistoryConstants.Values.SUCCESS) [ CD ]
