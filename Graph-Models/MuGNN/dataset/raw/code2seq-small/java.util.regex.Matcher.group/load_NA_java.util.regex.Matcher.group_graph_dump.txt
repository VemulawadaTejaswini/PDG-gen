Line_7 $$ LineNumberReader lines = new LineNumberReader(input)-->Line_28 $$ LOG.warn(REQUIRED_VERSION_FNAME + ":" + lines.getLineNumber() + " Incorrect line, ignored")[ FD ]
Line_13 $$ Matcher matcher = ONE_LINE.matcher(line)-->Line_16 $$ String ver = matcher.group(2)[ FD ]
Line_7 $$ LineNumberReader lines = new LineNumberReader(input)-->Line_37 $$ lines.close()[ FD ]
Line_9 $$ String line-->Line_13 $$ Matcher matcher = ONE_LINE.matcher(line)[ FD ]
Line_15 $$ String package_name = matcher.group(1)-->Line_24 $$ myExplicitVersion.put(QualifiedName.fromDottedString(package_name), version)[ FD ]
Line_9 $$ String line-->Line_10 $$ do [ FD ]
Line_31 $$ if (myBuiltinsVersion == null) -->Line_33 $$ LOG.warn("Assuming default version for built-ins")[ CD ]
Line_11 $$ line = lines.readLine()-->Line_10 $$ do [ FD ]
Line_15 $$ String package_name = matcher.group(1)-->Line_21 $$ if (BUILTIN_NAME.equals(package_name)) [ FD ]
Line_15 $$ String package_name = matcher.group(1)-->Line_17 $$ if (package_name != null) [ FD ]
Line_21 $$ if (BUILTIN_NAME.equals(package_name)) -->Line_24 $$ myExplicitVersion.put(QualifiedName.fromDottedString(package_name), version)[ CD ]
Line_12 $$ if (line != null) -->Line_13 $$ Matcher matcher = ONE_LINE.matcher(line)[ CD ]
Line_19 $$ if (DEFAULT_NAME.equals(package_name)) -->Line_21 $$ if (BUILTIN_NAME.equals(package_name)) [ CD ]
Line_10 $$ do -->Line_12 $$ if (line != null) [ CD ]
Line_3 $$ File infile = PythonHelpersLocator.getHelperFile(REQUIRED_VERSION_FNAME)-->Line_5 $$ if (infile.canRead()) [ FD ]
Line_15 $$ String package_name = matcher.group(1)-->Line_19 $$ if (DEFAULT_NAME.equals(package_name)) [ FD ]
Line_7 $$ LineNumberReader lines = new LineNumberReader(input)-->Line_11 $$ line = lines.readLine()[ FD ]
Line_14 $$ if (matcher.matches()) -->Line_28 $$ LOG.warn(REQUIRED_VERSION_FNAME + ":" + lines.getLineNumber() + " Incorrect line, ignored")[ CD ]
Line_13 $$ Matcher matcher = ONE_LINE.matcher(line)-->Line_15 $$ String package_name = matcher.group(1)[ FD ]
Line_12 $$ if (line != null) -->Line_14 $$ if (matcher.matches()) [ CD ]
Line_9 $$ String line-->Line_12 $$ if (line != null) [ FD ]
Line_2 $$ private void load() -->Line_3 $$ File infile = PythonHelpersLocator.getHelperFile(REQUIRED_VERSION_FNAME)[ CD ]
Line_11 $$ line = lines.readLine()-->Line_12 $$ if (line != null) [ FD ]
Line_14 $$ if (matcher.matches()) -->Line_15 $$ String package_name = matcher.group(1)[ CD ]
Line_11 $$ line = lines.readLine()-->Line_13 $$ Matcher matcher = ONE_LINE.matcher(line)[ FD ]
Line_18 $$ final int version = fromVersionString(ver)-->Line_24 $$ myExplicitVersion.put(QualifiedName.fromDottedString(package_name), version)[ FD ]
Line_17 $$ if (package_name != null) -->Line_18 $$ final int version = fromVersionString(ver)[ CD ]
Line_16 $$ String ver = matcher.group(2)-->Line_18 $$ final int version = fromVersionString(ver)[ FD ]
Line_14 $$ if (matcher.matches()) -->Line_16 $$ String ver = matcher.group(2)[ CD ]
Line_9 $$ String line-->Line_11 $$ line = lines.readLine()[ FD ]
Line_17 $$ if (package_name != null) -->Line_19 $$ if (DEFAULT_NAME.equals(package_name)) [ CD ]
Line_14 $$ if (matcher.matches()) -->Line_17 $$ if (package_name != null) [ CD ]
Line_10 $$ do -->Line_11 $$ line = lines.readLine()[ CD ]
Line_5 $$ if (infile.canRead()) -->Line_6 $$ Reader input = new FileReader(infile)[ CD ]
Line_5 $$ if (infile.canRead()) -->Line_7 $$ LineNumberReader lines = new LineNumberReader(input)[ CD ]
Line_13 $$ Matcher matcher = ONE_LINE.matcher(line)-->Line_14 $$ if (matcher.matches()) [ FD ]
