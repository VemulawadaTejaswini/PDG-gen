Line_2 $$ private String getJavaDocCommentsBeforeNode(GroovySourceAST t) -->Line_5 $$ String text = sourceBuffer.getSnippet(lastLineCol, thisLineCol)[ CD ]
Line_2 $$ private String getJavaDocCommentsBeforeNode(GroovySourceAST t) -->Line_4 $$ LineColumn thisLineCol = new LineColumn(t.getLine(), t.getColumn())[ CD ]
Line_5 $$ String text = sourceBuffer.getSnippet(lastLineCol, thisLineCol)-->Line_7 $$ Matcher m = PREV_JAVADOC_COMMENT_PATTERN.matcher(text)[ FD ]
Line_5 $$ String text = sourceBuffer.getSnippet(lastLineCol, thisLineCol)-->Line_6 $$ if (text != null) [ FD ]
Line_2 $$ private String getJavaDocCommentsBeforeNode(GroovySourceAST t) -->Line_4 $$ LineColumn thisLineCol = new LineColumn(t.getLine(), t.getColumn())[ FD ]
Line_2 $$ private String getJavaDocCommentsBeforeNode(GroovySourceAST t) -->Line_13 $$ return result[ CD ]
Line_4 $$ LineColumn thisLineCol = new LineColumn(t.getLine(), t.getColumn())-->Line_5 $$ String text = sourceBuffer.getSnippet(lastLineCol, thisLineCol)[ FD ]
Line_7 $$ Matcher m = PREV_JAVADOC_COMMENT_PATTERN.matcher(text)-->Line_9 $$ result = m.group(1)[ FD ]
Line_2 $$ private String getJavaDocCommentsBeforeNode(GroovySourceAST t) -->Line_3 $$ String result = ""[ CD ]
Line_6 $$ if (text != null) -->Line_7 $$ Matcher m = PREV_JAVADOC_COMMENT_PATTERN.matcher(text)[ CD ]
Line_6 $$ if (text != null) -->Line_8 $$ if (m.find()) [ CD ]
Line_8 $$ if (m.find()) -->Line_9 $$ result = m.group(1)[ CD ]
Line_2 $$ private String getJavaDocCommentsBeforeNode(GroovySourceAST t) -->Line_6 $$ if (text != null) [ CD ]
Line_7 $$ Matcher m = PREV_JAVADOC_COMMENT_PATTERN.matcher(text)-->Line_8 $$ if (m.find()) [ FD ]
Line_3 $$ String result = ""-->Line_9 $$ result = m.group(1)[ FD ]
