Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_28 $$ sb.append(quote.substring(index, quote.length()))[ FD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_4 $$ int index = 0[ CD ]
Line_4 $$ int index = 0-->Line_17 $$ index = matchStartIndex + value.length()[ FD ]
Line_7 $$ while (matcher.find()) -->Line_9 $$ int matchStartIndex = matcher.start()[ CD ]
Line_8 $$ String match = matcher.group()-->Line_22 $$ String escapedValue = _bbCodeCharacters.get(match)[ FD ]
Line_9 $$ int matchStartIndex = matcher.start()-->Line_17 $$ index = matchStartIndex + value.length()[ FD ]
Line_18 $$ entityFound = true-->Line_21 $$ if (!entityFound) [ FD ]
Line_13 $$ if (nextSemicolonIndex >= 0) -->Line_14 $$ String value = quote.substring(matchStartIndex, nextSemicolonIndex + 1)[ CD ]
Line_14 $$ String value = quote.substring(matchStartIndex, nextSemicolonIndex + 1)-->Line_16 $$ sb.append(value)[ FD ]
Line_9 $$ int matchStartIndex = matcher.start()-->Line_14 $$ String value = quote.substring(matchStartIndex, nextSemicolonIndex + 1)[ FD ]
Line_17 $$ index = matchStartIndex + value.length()-->Line_27 $$ if (index < quote.length()) [ FD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_11 $$ sb.append(quote.substring(index, matchStartIndex))[ FD ]
Line_27 $$ if (index < quote.length()) -->Line_28 $$ sb.append(quote.substring(index, quote.length()))[ CD ]
Line_17 $$ index = matchStartIndex + value.length()-->Line_24 $$ index = matchStartIndex + match.length()[ FD ]
Line_5 $$ Matcher matcher = _bbCodePattern.matcher(quote)-->Line_8 $$ String match = matcher.group()[ FD ]
Line_21 $$ if (!entityFound) -->Line_23 $$ sb.append(escapedValue)[ CD ]
Line_14 $$ String value = quote.substring(matchStartIndex, nextSemicolonIndex + 1)-->Line_17 $$ index = matchStartIndex + value.length()[ FD ]
Line_5 $$ Matcher matcher = _bbCodePattern.matcher(quote)-->Line_9 $$ int matchStartIndex = matcher.start()[ FD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_7 $$ while (matcher.find()) [ CD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_10 $$ int nextSemicolonIndex = quote.indexOf(StringPool.SEMICOLON, matchStartIndex)[ FD ]
Line_6 $$ Collection<String> values = _bbCodeCharacters.values()-->Line_15 $$ if (values.contains(value)) [ FD ]
Line_4 $$ int index = 0-->Line_24 $$ index = matchStartIndex + match.length()[ FD ]
Line_24 $$ index = matchStartIndex + match.length()-->Line_27 $$ if (index < quote.length()) [ FD ]
Line_12 $$ boolean entityFound = false-->Line_18 $$ entityFound = true[ FD ]
Line_7 $$ while (matcher.find()) -->Line_10 $$ int nextSemicolonIndex = quote.indexOf(StringPool.SEMICOLON, matchStartIndex)[ CD ]
Line_7 $$ while (matcher.find()) -->Line_12 $$ boolean entityFound = false[ CD ]
Line_21 $$ if (!entityFound) -->Line_24 $$ index = matchStartIndex + match.length()[ CD ]
Line_17 $$ index = matchStartIndex + value.length()-->Line_28 $$ sb.append(quote.substring(index, quote.length()))[ FD ]
Line_22 $$ String escapedValue = _bbCodeCharacters.get(match)-->Line_23 $$ sb.append(escapedValue)[ FD ]
Line_4 $$ int index = 0-->Line_27 $$ if (index < quote.length()) [ FD ]
Line_9 $$ int matchStartIndex = matcher.start()-->Line_10 $$ int nextSemicolonIndex = quote.indexOf(StringPool.SEMICOLON, matchStartIndex)[ FD ]
Line_9 $$ int matchStartIndex = matcher.start()-->Line_11 $$ sb.append(quote.substring(index, matchStartIndex))[ FD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_28 $$ sb.append(quote.substring(index, quote.length()))[ FD ]
Line_17 $$ index = matchStartIndex + value.length()-->Line_11 $$ sb.append(quote.substring(index, matchStartIndex))[ FD ]
Line_7 $$ while (matcher.find()) -->Line_21 $$ if (!entityFound) [ CD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_27 $$ if (index < quote.length()) [ FD ]
Line_14 $$ String value = quote.substring(matchStartIndex, nextSemicolonIndex + 1)-->Line_15 $$ if (values.contains(value)) [ FD ]
Line_15 $$ if (values.contains(value)) -->Line_17 $$ index = matchStartIndex + value.length()[ CD ]
Line_9 $$ int matchStartIndex = matcher.start()-->Line_24 $$ index = matchStartIndex + match.length()[ FD ]
Line_13 $$ if (nextSemicolonIndex >= 0) -->Line_15 $$ if (values.contains(value)) [ CD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_14 $$ String value = quote.substring(matchStartIndex, nextSemicolonIndex + 1)[ FD ]
Line_7 $$ while (matcher.find()) -->Line_13 $$ if (nextSemicolonIndex >= 0) [ CD ]
Line_15 $$ if (values.contains(value)) -->Line_18 $$ entityFound = true[ CD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_6 $$ Collection<String> values = _bbCodeCharacters.values()[ CD ]
Line_7 $$ while (matcher.find()) -->Line_11 $$ sb.append(quote.substring(index, matchStartIndex))[ CD ]
Line_21 $$ if (!entityFound) -->Line_22 $$ String escapedValue = _bbCodeCharacters.get(match)[ CD ]
Line_12 $$ boolean entityFound = false-->Line_21 $$ if (!entityFound) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_23 $$ sb.append(escapedValue)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_11 $$ sb.append(quote.substring(index, matchStartIndex))[ FD ]
Line_15 $$ if (values.contains(value)) -->Line_16 $$ sb.append(value)[ CD ]
Line_24 $$ index = matchStartIndex + match.length()-->Line_28 $$ sb.append(quote.substring(index, quote.length()))[ FD ]
Line_8 $$ String match = matcher.group()-->Line_24 $$ index = matchStartIndex + match.length()[ FD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_27 $$ if (index < quote.length()) [ CD ]
Line_7 $$ while (matcher.find()) -->Line_8 $$ String match = matcher.group()[ CD ]
Line_4 $$ int index = 0-->Line_28 $$ sb.append(quote.substring(index, quote.length()))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_30 $$ return sb.toString()[ FD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_5 $$ Matcher matcher = _bbCodePattern.matcher(quote)[ FD ]
Line_5 $$ Matcher matcher = _bbCodePattern.matcher(quote)-->Line_7 $$ while (matcher.find()) [ FD ]
Line_4 $$ int index = 0-->Line_11 $$ sb.append(quote.substring(index, matchStartIndex))[ FD ]
Line_24 $$ index = matchStartIndex + match.length()-->Line_11 $$ sb.append(quote.substring(index, matchStartIndex))[ FD ]
Line_10 $$ int nextSemicolonIndex = quote.indexOf(StringPool.SEMICOLON, matchStartIndex)-->Line_13 $$ if (nextSemicolonIndex >= 0) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(value)[ FD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_5 $$ Matcher matcher = _bbCodePattern.matcher(quote)[ CD ]
Line_2 $$ protected String escapeQuote(String quote) -->Line_30 $$ return sb.toString()[ CD ]
