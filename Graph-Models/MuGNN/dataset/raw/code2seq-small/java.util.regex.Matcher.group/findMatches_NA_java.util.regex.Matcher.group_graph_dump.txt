Line_7 $$ if (group != null) -->Line_8 $$ result.add(group)[ CD ]
Line_5 $$ while (m.find()) -->Line_7 $$ if (group != null) [ CD ]
Line_4 $$ Matcher m = pattern.matcher(s)-->Line_6 $$ String group = m.group(groupIndex)[ FD ]
Line_2 $$ public static List<String> findMatches(@NotNull String s, @NotNull Pattern pattern, int groupIndex) -->Line_6 $$ String group = m.group(groupIndex)[ FD ]
Line_2 $$ public static List<String> findMatches(@NotNull String s, @NotNull Pattern pattern, int groupIndex) -->Line_11 $$ return result[ CD ]
Line_6 $$ String group = m.group(groupIndex)-->Line_7 $$ if (group != null) [ FD ]
Line_2 $$ public static List<String> findMatches(@NotNull String s, @NotNull Pattern pattern, int groupIndex) -->Line_4 $$ Matcher m = pattern.matcher(s)[ FD ]
Line_2 $$ public static List<String> findMatches(@NotNull String s, @NotNull Pattern pattern, int groupIndex) -->Line_3 $$ List<String> result = new SmartList<String>()[ CD ]
Line_3 $$ List<String> result = new SmartList<String>()-->Line_8 $$ result.add(group)[ FD ]
Line_5 $$ while (m.find()) -->Line_6 $$ String group = m.group(groupIndex)[ CD ]
Line_2 $$ public static List<String> findMatches(@NotNull String s, @NotNull Pattern pattern, int groupIndex) -->Line_5 $$ while (m.find()) [ CD ]
Line_4 $$ Matcher m = pattern.matcher(s)-->Line_5 $$ while (m.find()) [ FD ]
Line_2 $$ public static List<String> findMatches(@NotNull String s, @NotNull Pattern pattern, int groupIndex) -->Line_4 $$ Matcher m = pattern.matcher(s)[ CD ]
Line_6 $$ String group = m.group(groupIndex)-->Line_8 $$ result.add(group)[ FD ]
