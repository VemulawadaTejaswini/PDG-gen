Line_2 $$ public static PsiElement getStatementToolSuppressedIn(@NotNull PsiElement place, @NotNull String toolId, @NotNull Class<? extends PsiElement> statementClass, @NotNull Pattern suppressInLineCommentPattern) -->Line_4 $$ if (statement != null) [ CD ]
Line_6 $$ if (prev instanceof PsiComment) -->Line_7 $$ String text = prev.getText()[ CD ]
Line_6 $$ if (prev instanceof PsiComment) -->Line_8 $$ Matcher matcher = suppressInLineCommentPattern.matcher(text)[ CD ]
Line_2 $$ public static PsiElement getStatementToolSuppressedIn(@NotNull PsiElement place, @NotNull String toolId, @NotNull Class<? extends PsiElement> statementClass, @NotNull Pattern suppressInLineCommentPattern) -->Line_3 $$ PsiElement statement = PsiTreeUtil.getNonStrictParentOfType(place, statementClass)[ CD ]
Line_2 $$ public static PsiElement getStatementToolSuppressedIn(@NotNull PsiElement place, @NotNull String toolId, @NotNull Class<? extends PsiElement> statementClass, @NotNull Pattern suppressInLineCommentPattern) -->Line_3 $$ PsiElement statement = PsiTreeUtil.getNonStrictParentOfType(place, statementClass)[ FD ]
Line_7 $$ String text = prev.getText()-->Line_8 $$ Matcher matcher = suppressInLineCommentPattern.matcher(text)[ FD ]
Line_3 $$ PsiElement statement = PsiTreeUtil.getNonStrictParentOfType(place, statementClass)-->Line_4 $$ if (statement != null) [ FD ]
Line_3 $$ PsiElement statement = PsiTreeUtil.getNonStrictParentOfType(place, statementClass)-->Line_5 $$ PsiElement prev = PsiTreeUtil.skipSiblingsBackward(statement, PsiWhiteSpace.class)[ FD ]
Line_6 $$ if (prev instanceof PsiComment) -->Line_9 $$ if (matcher.matches() && isInspectionToolIdMentioned(matcher.group(1), toolId)) [ CD ]
Line_8 $$ Matcher matcher = suppressInLineCommentPattern.matcher(text)-->Line_9 $$ if (matcher.matches() && isInspectionToolIdMentioned(matcher.group(1), toolId)) [ FD ]
Line_5 $$ PsiElement prev = PsiTreeUtil.skipSiblingsBackward(statement, PsiWhiteSpace.class)-->Line_7 $$ String text = prev.getText()[ FD ]
Line_5 $$ PsiElement prev = PsiTreeUtil.skipSiblingsBackward(statement, PsiWhiteSpace.class)-->Line_6 $$ if (prev instanceof PsiComment) [ FD ]
Line_2 $$ public static PsiElement getStatementToolSuppressedIn(@NotNull PsiElement place, @NotNull String toolId, @NotNull Class<? extends PsiElement> statementClass, @NotNull Pattern suppressInLineCommentPattern) -->Line_8 $$ Matcher matcher = suppressInLineCommentPattern.matcher(text)[ FD ]
Line_4 $$ if (statement != null) -->Line_6 $$ if (prev instanceof PsiComment) [ CD ]
Line_2 $$ public static PsiElement getStatementToolSuppressedIn(@NotNull PsiElement place, @NotNull String toolId, @NotNull Class<? extends PsiElement> statementClass, @NotNull Pattern suppressInLineCommentPattern) -->Line_14 $$ return null[ CD ]
Line_2 $$ public static PsiElement getStatementToolSuppressedIn(@NotNull PsiElement place, @NotNull String toolId, @NotNull Class<? extends PsiElement> statementClass, @NotNull Pattern suppressInLineCommentPattern) -->Line_9 $$ if (matcher.matches() && isInspectionToolIdMentioned(matcher.group(1), toolId)) [ FD ]
Line_4 $$ if (statement != null) -->Line_5 $$ PsiElement prev = PsiTreeUtil.skipSiblingsBackward(statement, PsiWhiteSpace.class)[ CD ]
Line_9 $$ if (matcher.matches() && isInspectionToolIdMentioned(matcher.group(1), toolId)) -->Line_10 $$ return prev[ CD ]
