Line_5 $$ String name = property.getName()-->Line_22 $$ model.get(name).set(legacyValue)[ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_54 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) [ FD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_14 $$ if (legacyValue.getType() == ModelType.EXPRESSION) -->Line_16 $$ final Matcher matcher = Pattern.compile("\\A\\$\\[ CD ]
Line_3 $$ final ModelNode model = new ModelNode()-->Line_22 $$ model.get(name).set(legacyValue)[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_46 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_7 $$ if (legacyValue.isDefined()) [ FD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_61 $$ value = legacyValue[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_41 $$ value = legacyValue-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_55 $$ value = new ModelNode(true)[ FD ]
Line_17 $$ if (matcher.find()) -->Line_19 $$ String abc = matcher.group(2)[ CD ]
Line_7 $$ if (legacyValue.isDefined()) -->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ CD ]
Line_12 $$ final boolean expression-->Line_26 $$ expression = false[ FD ]
Line_57 $$ value = new ModelNode(false)-->Line_61 $$ value = legacyValue[ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_36 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) [ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_61 $$ value = legacyValue[ FD ]
Line_64 $$ if (expression) -->Line_65 $$ String newExpression = "$[ CD ]
Line_55 $$ value = new ModelNode(true)-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) -->Line_72 $$ model.get(name).set(value)[ CD ]
Line_48 $$ value = legacyValue-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_48 $$ value = legacyValue-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_8 $$ if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) -->Line_9 $$ transformIorSettings(model, legacyValue)[ CD ]
Line_64 $$ if (expression) -->Line_66 $$ if (expressionVariable != null) [ CD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_20 $$ legacyValue = new ModelNode(abc)[ FD ]
Line_55 $$ value = new ModelNode(true)-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_22 $$ model.get(name).set(legacyValue)[ FD ]
Line_45 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) -->Line_48 $$ value = legacyValue[ CD ]
Line_38 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) -->Line_39 $$ value = new ModelNode(Constants.NONE)[ CD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_61 $$ value = legacyValue-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_14 $$ if (legacyValue.getType() == ModelType.EXPRESSION) -->Line_27 $$ expressionVariable = null[ CD ]
Line_2 $$ static ModelNode transformModel(final ModelNode legacyModel) -->Line_3 $$ final ModelNode model = new ModelNode()[ CD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_41 $$ value = legacyValue[ FD ]
Line_57 $$ value = new ModelNode(false)-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_61 $$ value = legacyValue-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_2 $$ static ModelNode transformModel(final ModelNode legacyModel) -->Line_76 $$ return model[ CD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_7 $$ if (legacyValue.isDefined()) -->Line_12 $$ final boolean expression[ CD ]
Line_48 $$ value = legacyValue-->Line_61 $$ value = legacyValue[ FD ]
Line_29 $$ ModelNode value-->Line_41 $$ value = legacyValue[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_17 $$ if (matcher.find()) -->Line_20 $$ legacyValue = new ModelNode(abc)[ CD ]
Line_7 $$ if (legacyValue.isDefined()) -->Line_13 $$ final String expressionVariable[ CD ]
Line_17 $$ if (matcher.find()) -->Line_22 $$ model.get(name).set(legacyValue)[ CD ]
Line_29 $$ ModelNode value-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_55 $$ value = new ModelNode(true)-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_57 $$ value = new ModelNode(false)-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_41 $$ value = legacyValue-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_54 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) -->Line_57 $$ value = new ModelNode(false)[ CD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_61 $$ value = legacyValue[ FD ]
Line_64 $$ if (expression) -->Line_69 $$ newExpression += "}"[ CD ]
Line_3 $$ final ModelNode model = new ModelNode()-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_41 $$ value = legacyValue[ FD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_45 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_29 $$ ModelNode value-->Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())[ FD ]
Line_3 $$ final ModelNode model = new ModelNode()-->Line_9 $$ transformIorSettings(model, legacyValue)[ FD ]
Line_14 $$ if (legacyValue.getType() == ModelType.EXPRESSION) -->Line_17 $$ if (matcher.find()) [ CD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_61 $$ value = legacyValue-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_29 $$ ModelNode value-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_64 $$ if (expression) -->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ CD ]
Line_15 $$ expression = true-->Line_26 $$ expression = false[ FD ]
Line_18 $$ expressionVariable = matcher.group(1)-->Line_27 $$ expressionVariable = null[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_41 $$ value = legacyValue[ FD ]
Line_54 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) -->Line_55 $$ value = new ModelNode(true)[ CD ]
Line_41 $$ value = legacyValue-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_38 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) -->Line_41 $$ value = legacyValue[ CD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_54 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) [ FD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_55 $$ value = new ModelNode(true)[ FD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_48 $$ value = legacyValue[ FD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_22 $$ model.get(name).set(legacyValue)[ FD ]
Line_41 $$ value = legacyValue-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_67 $$ newExpression += (":" + value.asString())-->Line_69 $$ newExpression += "}"[ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_14 $$ if (legacyValue.getType() == ModelType.EXPRESSION) [ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_5 $$ String name = property.getName()-->Line_8 $$ if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) [ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_16 $$ final Matcher matcher = Pattern.compile("\\A\\$\\[ FD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_48 $$ value = legacyValue[ FD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_29 $$ ModelNode value-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_5 $$ String name = property.getName()-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_4 $$ for (Property property : legacyModel.asPropertyList()) -->Line_5 $$ String name = property.getName()[ FD ]
Line_7 $$ if (legacyValue.isDefined()) -->Line_14 $$ if (legacyValue.getType() == ModelType.EXPRESSION) [ CD ]
Line_14 $$ if (legacyValue.getType() == ModelType.EXPRESSION) -->Line_15 $$ expression = true[ CD ]
Line_13 $$ final String expressionVariable-->Line_66 $$ if (expressionVariable != null) [ FD ]
Line_17 $$ if (matcher.find()) -->Line_18 $$ expressionVariable = matcher.group(1)[ CD ]
Line_29 $$ ModelNode value-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_61 $$ value = legacyValue[ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_38 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_41 $$ value = legacyValue[ FD ]
Line_16 $$ final Matcher matcher = Pattern.compile("\\A\\$\\-->Line_17 $$ if (matcher.find()) [ FD ]
Line_16 $$ final Matcher matcher = Pattern.compile("\\A\\$\\-->Line_18 $$ expressionVariable = matcher.group(1)[ FD ]
Line_45 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) -->Line_46 $$ value = new ModelNode(Constants.NONE)[ CD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_45 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_4 $$ for (Property property : legacyModel.asPropertyList()) -->Line_6 $$ ModelNode legacyValue = property.getValue()[ FD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_38 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_2 $$ static ModelNode transformModel(final ModelNode legacyModel) -->Line_4 $$ for (Property property : legacyModel.asPropertyList()) [ FD ]
Line_29 $$ ModelNode value-->Line_39 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_57 $$ value = new ModelNode(false)-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) -->Line_64 $$ if (expression) [ CD ]
Line_13 $$ final String expressionVariable-->Line_18 $$ expressionVariable = matcher.group(1)[ FD ]
Line_41 $$ value = legacyValue-->Line_46 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_55 $$ value = new ModelNode(true)-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_66 $$ if (expressionVariable != null) -->Line_67 $$ newExpression += (":" + value.asString())[ CD ]
Line_29 $$ ModelNode value-->Line_48 $$ value = legacyValue[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_48 $$ value = legacyValue[ FD ]
Line_12 $$ final boolean expression-->Line_15 $$ expression = true[ FD ]
Line_7 $$ if (legacyValue.isDefined()) -->Line_8 $$ if (name.equals(JacORBSubsystemConstants.IOR_SETTINGS)) [ CD ]
Line_48 $$ value = legacyValue-->Line_55 $$ value = new ModelNode(true)[ FD ]
Line_29 $$ ModelNode value-->Line_61 $$ value = legacyValue[ FD ]
Line_32 $$ name = Constants.ORB_GIOP_VERSION-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_48 $$ value = legacyValue[ FD ]
Line_61 $$ value = legacyValue-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_9 $$ transformIorSettings(model, legacyValue)[ FD ]
Line_18 $$ expressionVariable = matcher.group(1)-->Line_66 $$ if (expressionVariable != null) [ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())[ FD ]
Line_7 $$ if (legacyValue.isDefined()) -->Line_29 $$ ModelNode value[ CD ]
Line_57 $$ value = new ModelNode(false)-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_48 $$ value = legacyValue[ FD ]
Line_27 $$ expressionVariable = null-->Line_66 $$ if (expressionVariable != null) [ FD ]
Line_55 $$ value = new ModelNode(true)-->Line_61 $$ value = legacyValue[ FD ]
Line_36 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) -->Line_37 $$ value = new ModelNode(Constants.FULL)[ CD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_46 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_41 $$ value = legacyValue-->Line_55 $$ value = new ModelNode(true)[ FD ]
Line_5 $$ String name = property.getName()-->Line_32 $$ name = Constants.ORB_GIOP_VERSION[ FD ]
Line_41 $$ value = legacyValue-->Line_61 $$ value = legacyValue[ FD ]
Line_46 $$ value = new ModelNode(Constants.NONE)-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_48 $$ value = legacyValue-->Line_63 $$ if (!value.asString().equals(JacORBSubsystemConstants.OFF)) [ FD ]
Line_65 $$ String newExpression = "$-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_29 $$ ModelNode value-->Line_37 $$ value = new ModelNode(Constants.FULL)[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_37 $$ value = new ModelNode(Constants.FULL)[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_55 $$ value = new ModelNode(true)[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_13 $$ final String expressionVariable-->Line_27 $$ expressionVariable = null[ FD ]
Line_6 $$ ModelNode legacyValue = property.getValue()-->Line_61 $$ value = legacyValue[ FD ]
Line_29 $$ ModelNode value-->Line_55 $$ value = new ModelNode(true)[ FD ]
Line_29 $$ ModelNode value-->Line_57 $$ value = new ModelNode(false)[ FD ]
Line_16 $$ final Matcher matcher = Pattern.compile("\\A\\$\\-->Line_19 $$ String abc = matcher.group(2)[ FD ]
Line_39 $$ value = new ModelNode(Constants.NONE)-->Line_41 $$ value = legacyValue[ FD ]
Line_55 $$ value = new ModelNode(true)-->Line_67 $$ newExpression += (":" + value.asString())[ FD ]
Line_29 $$ ModelNode value-->Line_46 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_39 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_39 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_41 $$ value = legacyValue-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_55 $$ value = new ModelNode(true)[ FD ]
Line_48 $$ value = legacyValue-->Line_70 $$ value = new ModelNode(new ValueExpression(newExpression))[ FD ]
Line_14 $$ if (legacyValue.getType() == ModelType.EXPRESSION) -->Line_26 $$ expression = false[ CD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_36 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) [ FD ]
Line_65 $$ String newExpression = "$-->Line_69 $$ newExpression += "}"[ FD ]
Line_48 $$ value = legacyValue-->Line_72 $$ model.get(name).set(value)[ FD ]
Line_37 $$ value = new ModelNode(Constants.FULL)-->Line_46 $$ value = new ModelNode(Constants.NONE)[ FD ]
Line_20 $$ legacyValue = new ModelNode(abc)-->Line_61 $$ value = legacyValue[ FD ]
Line_33 $$ value = new ModelNode(new StringBuilder().append("1.").append(legacyValue.asString()).toString())-->Line_48 $$ value = legacyValue[ FD ]
Line_36 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.ON)) -->Line_38 $$ if (legacyValue.asString().equals(JacORBSubsystemConstants.OFF)) [ CD ]
Line_41 $$ value = legacyValue-->Line_48 $$ value = legacyValue[ FD ]
