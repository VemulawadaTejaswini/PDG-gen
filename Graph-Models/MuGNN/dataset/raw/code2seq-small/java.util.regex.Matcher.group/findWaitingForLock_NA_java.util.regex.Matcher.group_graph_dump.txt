Line_3 $$ Matcher m = ourWaitingForLockPattern.matcher(stackTrace)-->Line_7 $$ m = ourParkingToWaitForLockPattern.matcher(stackTrace)[ FD ]
Line_7 $$ m = ourParkingToWaitForLockPattern.matcher(stackTrace)-->Line_9 $$ return m.group(1)[ FD ]
Line_2 $$ private static String findWaitingForLock(final String stackTrace) -->Line_3 $$ Matcher m = ourWaitingForLockPattern.matcher(stackTrace)[ FD ]
Line_2 $$ private static String findWaitingForLock(final String stackTrace) -->Line_7 $$ m = ourParkingToWaitForLockPattern.matcher(stackTrace)[ FD ]
Line_7 $$ m = ourParkingToWaitForLockPattern.matcher(stackTrace)-->Line_8 $$ if (m.find()) [ FD ]
Line_2 $$ private static String findWaitingForLock(final String stackTrace) -->Line_7 $$ m = ourParkingToWaitForLockPattern.matcher(stackTrace)[ CD ]
Line_2 $$ private static String findWaitingForLock(final String stackTrace) -->Line_4 $$ if (m.find()) [ CD ]
Line_3 $$ Matcher m = ourWaitingForLockPattern.matcher(stackTrace)-->Line_9 $$ return m.group(1)[ FD ]
Line_2 $$ private static String findWaitingForLock(final String stackTrace) -->Line_11 $$ return null[ CD ]
Line_2 $$ private static String findWaitingForLock(final String stackTrace) -->Line_8 $$ if (m.find()) [ CD ]
Line_2 $$ private static String findWaitingForLock(final String stackTrace) -->Line_3 $$ Matcher m = ourWaitingForLockPattern.matcher(stackTrace)[ CD ]
Line_3 $$ Matcher m = ourWaitingForLockPattern.matcher(stackTrace)-->Line_8 $$ if (m.find()) [ FD ]
Line_8 $$ if (m.find()) -->Line_9 $$ return m.group(1)[ CD ]
Line_3 $$ Matcher m = ourWaitingForLockPattern.matcher(stackTrace)-->Line_4 $$ if (m.find()) [ FD ]
Line_3 $$ Matcher m = ourWaitingForLockPattern.matcher(stackTrace)-->Line_5 $$ return m.group(2)[ FD ]
Line_4 $$ if (m.find()) -->Line_5 $$ return m.group(2)[ CD ]
