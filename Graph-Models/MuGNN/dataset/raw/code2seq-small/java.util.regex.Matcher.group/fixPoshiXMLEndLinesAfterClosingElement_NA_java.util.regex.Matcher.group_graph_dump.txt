Line_2 $$ protected String fixPoshiXMLEndLinesAfterClosingElement(String content) -->Line_15 $$ return content[ CD ]
Line_7 $$ if (StringUtil.equalsIgnoreCase("</and>", closingElementName) || StringUtil.equalsIgnoreCase("</elseif>", closingElementName) || StringUtil.equalsIgnoreCase("</not>", closingElementName) || StringUtil.equalsIgnoreCase("</or>", closingElementName) || StringUtil.equalsIgnoreCase("</then>", closingElementName)) -->Line_8 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n")[ CD ]
Line_10 $$ if (!StringUtil.equalsIgnoreCase("</var>", closingElementName)) -->Line_12 $$ content = StringUtil.replace(content, statement, newStatement)[ CD ]
Line_5 $$ String statement = matcher.group()-->Line_11 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n\n")[ FD ]
Line_3 $$ Matcher matcher = _poshiEndLinesAfterClosingElementPattern.matcher(content)-->Line_4 $$ while (matcher.find()) [ FD ]
Line_3 $$ Matcher matcher = _poshiEndLinesAfterClosingElementPattern.matcher(content)-->Line_6 $$ String closingElementName = matcher.group(1)[ FD ]
Line_5 $$ String statement = matcher.group()-->Line_9 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_8 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n")-->Line_9 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_9 $$ content = StringUtil.replace(content, statement, newStatement)-->Line_12 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_2 $$ protected String fixPoshiXMLEndLinesAfterClosingElement(String content) -->Line_3 $$ Matcher matcher = _poshiEndLinesAfterClosingElementPattern.matcher(content)[ CD ]
Line_4 $$ while (matcher.find()) -->Line_5 $$ String statement = matcher.group()[ CD ]
Line_10 $$ if (!StringUtil.equalsIgnoreCase("</var>", closingElementName)) -->Line_11 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n\n")[ CD ]
Line_5 $$ String statement = matcher.group()-->Line_12 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_6 $$ String closingElementName = matcher.group(1)-->Line_10 $$ if (!StringUtil.equalsIgnoreCase("</var>", closingElementName)) [ FD ]
Line_2 $$ protected String fixPoshiXMLEndLinesAfterClosingElement(String content) -->Line_3 $$ Matcher matcher = _poshiEndLinesAfterClosingElementPattern.matcher(content)[ FD ]
Line_3 $$ Matcher matcher = _poshiEndLinesAfterClosingElementPattern.matcher(content)-->Line_5 $$ String statement = matcher.group()[ FD ]
Line_2 $$ protected String fixPoshiXMLEndLinesAfterClosingElement(String content) -->Line_12 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_7 $$ if (StringUtil.equalsIgnoreCase("</and>", closingElementName) || StringUtil.equalsIgnoreCase("</elseif>", closingElementName) || StringUtil.equalsIgnoreCase("</not>", closingElementName) || StringUtil.equalsIgnoreCase("</or>", closingElementName) || StringUtil.equalsIgnoreCase("</then>", closingElementName)) [ CD ]
Line_6 $$ String closingElementName = matcher.group(1)-->Line_7 $$ if (StringUtil.equalsIgnoreCase("</and>", closingElementName) || StringUtil.equalsIgnoreCase("</elseif>", closingElementName) || StringUtil.equalsIgnoreCase("</not>", closingElementName) || StringUtil.equalsIgnoreCase("</or>", closingElementName) || StringUtil.equalsIgnoreCase("</then>", closingElementName)) [ FD ]
Line_7 $$ if (StringUtil.equalsIgnoreCase("</and>", closingElementName) || StringUtil.equalsIgnoreCase("</elseif>", closingElementName) || StringUtil.equalsIgnoreCase("</not>", closingElementName) || StringUtil.equalsIgnoreCase("</or>", closingElementName) || StringUtil.equalsIgnoreCase("</then>", closingElementName)) -->Line_10 $$ if (!StringUtil.equalsIgnoreCase("</var>", closingElementName)) [ CD ]
Line_2 $$ protected String fixPoshiXMLEndLinesAfterClosingElement(String content) -->Line_4 $$ while (matcher.find()) [ CD ]
Line_8 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n")-->Line_12 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_3 $$ Matcher matcher = _poshiEndLinesAfterClosingElementPattern.matcher(content)-->Line_11 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n\n")[ FD ]
Line_3 $$ Matcher matcher = _poshiEndLinesAfterClosingElementPattern.matcher(content)-->Line_8 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n")[ FD ]
Line_12 $$ content = StringUtil.replace(content, statement, newStatement)-->Line_9 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_4 $$ while (matcher.find()) -->Line_6 $$ String closingElementName = matcher.group(1)[ CD ]
Line_2 $$ protected String fixPoshiXMLEndLinesAfterClosingElement(String content) -->Line_9 $$ content = StringUtil.replace(content, statement, newStatement)[ FD ]
Line_5 $$ String statement = matcher.group()-->Line_8 $$ String newStatement = StringUtil.replace(statement, matcher.group(2), "\n")[ FD ]
Line_7 $$ if (StringUtil.equalsIgnoreCase("</and>", closingElementName) || StringUtil.equalsIgnoreCase("</elseif>", closingElementName) || StringUtil.equalsIgnoreCase("</not>", closingElementName) || StringUtil.equalsIgnoreCase("</or>", closingElementName) || StringUtil.equalsIgnoreCase("</then>", closingElementName)) -->Line_9 $$ content = StringUtil.replace(content, statement, newStatement)[ CD ]
