Line_5 $$ Matcher m = x.matcher(kv.getKey())-->Line_10 $$ throw (IOException) new IOException("Invalid define for " + m.group(1)).initCause(e)[ FD ]
Line_2 $$ private void addUserIdentifiers(JobConf job) throws IOException -->Line_8 $$ Parser.CNode.addIdentifier(m.group(1), job.getClass(m.group(0), null, ComposableRecordReader.class))[ FD ]
Line_3 $$ Pattern x = Pattern.compile("^mapred\\.join\\.define\\.(\\w+)$")-->Line_5 $$ Matcher m = x.matcher(kv.getKey())[ FD ]
Line_5 $$ Matcher m = x.matcher(kv.getKey())-->Line_6 $$ if (m.matches()) [ FD ]
Line_5 $$ Matcher m = x.matcher(kv.getKey())-->Line_8 $$ Parser.CNode.addIdentifier(m.group(1), job.getClass(m.group(0), null, ComposableRecordReader.class))[ FD ]
Line_2 $$ private void addUserIdentifiers(JobConf job) throws IOException -->Line_3 $$ Pattern x = Pattern.compile("^mapred\\.join\\.define\\.(\\w+)$")[ CD ]
Line_4 $$ for (Map.Entry<String, String> kv : job) -->Line_5 $$ Matcher m = x.matcher(kv.getKey())[ FD ]
