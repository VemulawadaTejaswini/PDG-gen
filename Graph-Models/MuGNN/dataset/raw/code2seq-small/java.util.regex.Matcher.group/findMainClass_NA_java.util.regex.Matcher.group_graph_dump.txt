Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_25 $$ if (script != null) [ CD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_24 $$ final PsiFile grFile[ CD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_25 $$ if (script != null) [ FD ]
Line_14 $$ final Matcher matcher = MAIN_CLASS_NAME_PATTERN.matcher(text)-->Line_15 $$ if (matcher.find()) [ FD ]
Line_15 $$ if (matcher.find()) -->Line_16 $$ String candidate = matcher.group(1)[ CD ]
Line_16 $$ String candidate = matcher.group(1)-->Line_17 $$ if (StringUtil.isNotEmpty(candidate)) [ FD ]
Line_25 $$ if (script != null) -->Line_27 $$ if (grFile != null && JavaPsiFacade.getInstance(project).findClass("org.gradle.BootstrapMain", grFile.getResolveScope()) != null) [ CD ]
Line_4 $$ if (StringUtil.isNotEmpty(userDefined)) -->Line_5 $$ return userDefined[ CD ]
Line_3 $$ final String userDefined = System.getProperty("gradle.launcher.class")-->Line_4 $$ if (StringUtil.isNotEmpty(userDefined)) [ FD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_9 $$ launcher = gradleHome.findFileByRelativePath("bin/gradle.bat")[ FD ]
Line_15 $$ if (matcher.find()) -->Line_17 $$ if (StringUtil.isNotEmpty(candidate)) [ CD ]
Line_25 $$ if (script != null) -->Line_26 $$ grFile = PsiManager.getInstance(project).findFile(script)[ CD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_31 $$ return "org.gradle.launcher.GradleMain"[ CD ]
Line_8 $$ if (launcher == null) -->Line_9 $$ launcher = gradleHome.findFileByRelativePath("bin/gradle.bat")[ CD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_8 $$ if (launcher == null) [ CD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_4 $$ if (StringUtil.isNotEmpty(userDefined)) [ CD ]
Line_13 $$ final String text = StringUtil.convertLineSeparators(VfsUtilCore.loadText(launcher))-->Line_14 $$ final Matcher matcher = MAIN_CLASS_NAME_PATTERN.matcher(text)[ FD ]
Line_7 $$ VirtualFile launcher = gradleHome.findFileByRelativePath("bin/gradle")-->Line_9 $$ launcher = gradleHome.findFileByRelativePath("bin/gradle.bat")[ FD ]
Line_17 $$ if (StringUtil.isNotEmpty(candidate)) -->Line_18 $$ return candidate[ CD ]
Line_24 $$ final PsiFile grFile-->Line_27 $$ if (grFile != null && JavaPsiFacade.getInstance(project).findClass("org.gradle.BootstrapMain", grFile.getResolveScope()) != null) [ FD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_7 $$ VirtualFile launcher = gradleHome.findFileByRelativePath("bin/gradle")[ FD ]
Line_7 $$ VirtualFile launcher = gradleHome.findFileByRelativePath("bin/gradle")-->Line_11 $$ if (launcher != null) [ FD ]
Line_26 $$ grFile = PsiManager.getInstance(project).findFile(script)-->Line_27 $$ if (grFile != null && JavaPsiFacade.getInstance(project).findClass("org.gradle.BootstrapMain", grFile.getResolveScope()) != null) [ FD ]
Line_7 $$ VirtualFile launcher = gradleHome.findFileByRelativePath("bin/gradle")-->Line_8 $$ if (launcher == null) [ FD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_7 $$ VirtualFile launcher = gradleHome.findFileByRelativePath("bin/gradle")[ CD ]
Line_7 $$ VirtualFile launcher = gradleHome.findFileByRelativePath("bin/gradle")-->Line_13 $$ final String text = StringUtil.convertLineSeparators(VfsUtilCore.loadText(launcher))[ FD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_11 $$ if (launcher != null) [ CD ]
Line_27 $$ if (grFile != null && JavaPsiFacade.getInstance(project).findClass("org.gradle.BootstrapMain", grFile.getResolveScope()) != null) -->Line_28 $$ return "org.gradle.BootstrapMain"[ CD ]
Line_9 $$ launcher = gradleHome.findFileByRelativePath("bin/gradle.bat")-->Line_11 $$ if (launcher != null) [ FD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_27 $$ if (grFile != null && JavaPsiFacade.getInstance(project).findClass("org.gradle.BootstrapMain", grFile.getResolveScope()) != null) [ FD ]
Line_24 $$ final PsiFile grFile-->Line_26 $$ grFile = PsiManager.getInstance(project).findFile(script)[ FD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_26 $$ grFile = PsiManager.getInstance(project).findFile(script)[ FD ]
Line_9 $$ launcher = gradleHome.findFileByRelativePath("bin/gradle.bat")-->Line_13 $$ final String text = StringUtil.convertLineSeparators(VfsUtilCore.loadText(launcher))[ FD ]
Line_14 $$ final Matcher matcher = MAIN_CLASS_NAME_PATTERN.matcher(text)-->Line_16 $$ String candidate = matcher.group(1)[ FD ]
Line_2 $$ private static String findMainClass(VirtualFile gradleHome, @Nullable VirtualFile script, Project project) -->Line_3 $$ final String userDefined = System.getProperty("gradle.launcher.class")[ CD ]
