Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)-->Line_14 $$ prev = matcher.end()[ FD ]
Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)-->Line_13 $$ objects.add(new HyperlinkListenerDelegator(matcher.group(2), matcher.group(1), hyperlinkListener))[ FD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_8 $$ int prev = 0[ CD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)[ CD ]
Line_8 $$ int prev = 0-->Line_16 $$ if (prev < message.length()) [ FD ]
Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)-->Line_10 $$ if (matcher.start() != prev) [ FD ]
Line_7 $$ List<Object> objects = new ArrayList<Object>()-->Line_11 $$ objects.add(message.substring(prev, matcher.start()))[ FD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)[ FD ]
Line_9 $$ do -->Line_14 $$ prev = matcher.end()[ CD ]
Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)-->Line_11 $$ objects.add(message.substring(prev, matcher.start()))[ FD ]
Line_8 $$ int prev = 0-->Line_11 $$ objects.add(message.substring(prev, matcher.start()))[ FD ]
Line_8 $$ int prev = 0-->Line_14 $$ prev = matcher.end()[ FD ]
Line_14 $$ prev = matcher.end()-->Line_10 $$ if (matcher.start() != prev) [ FD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_19 $$ return new MessageTreeNodeWithLinks(tree, objects)[ CD ]
Line_8 $$ int prev = 0-->Line_10 $$ if (matcher.start() != prev) [ FD ]
Line_8 $$ int prev = 0-->Line_17 $$ objects.add(message.substring(prev))[ FD ]
Line_9 $$ do -->Line_13 $$ objects.add(new HyperlinkListenerDelegator(matcher.group(2), matcher.group(1), hyperlinkListener))[ CD ]
Line_14 $$ prev = matcher.end()-->Line_11 $$ objects.add(message.substring(prev, matcher.start()))[ FD ]
Line_9 $$ do -->Line_10 $$ if (matcher.start() != prev) [ CD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_11 $$ objects.add(message.substring(prev, matcher.start()))[ FD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_4 $$ if (hyperlinkListener == null || !matcher.find()) [ CD ]
Line_7 $$ List<Object> objects = new ArrayList<Object>()-->Line_13 $$ objects.add(new HyperlinkListenerDelegator(matcher.group(2), matcher.group(1), hyperlinkListener))[ FD ]
Line_7 $$ List<Object> objects = new ArrayList<Object>()-->Line_17 $$ objects.add(message.substring(prev))[ FD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_9 $$ do [ CD ]
Line_14 $$ prev = matcher.end()-->Line_16 $$ if (prev < message.length()) [ FD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_7 $$ List<Object> objects = new ArrayList<Object>()[ CD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_16 $$ if (prev < message.length()) [ CD ]
Line_10 $$ if (matcher.start() != prev) -->Line_11 $$ objects.add(message.substring(prev, matcher.start()))[ CD ]
Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)-->Line_4 $$ if (hyperlinkListener == null || !matcher.find()) [ FD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_16 $$ if (prev < message.length()) [ FD ]
Line_3 $$ Matcher matcher = MessageTreeNodeWithLinks.HREF_PATTERN.matcher(message)-->Line_9 $$ do [ FD ]
Line_16 $$ if (prev < message.length()) -->Line_17 $$ objects.add(message.substring(prev))[ CD ]
Line_14 $$ prev = matcher.end()-->Line_17 $$ objects.add(message.substring(prev))[ FD ]
Line_4 $$ if (hyperlinkListener == null || !matcher.find()) -->Line_5 $$ return new MessageTreeNode(tree, null, message, SimpleTextAttributes.REGULAR_ATTRIBUTES, XDebuggerUIConstants.INFORMATION_MESSAGE_ICON)[ CD ]
Line_2 $$ public static MessageTreeNode createInfoMessage(XDebuggerTree tree, @NotNull String message, @Nullable HyperlinkListener hyperlinkListener) -->Line_17 $$ objects.add(message.substring(prev))[ FD ]
