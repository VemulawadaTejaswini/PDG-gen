Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_3 $$ StringBuffer sb = new StringBuffer()[ CD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_7 $$ regexSB.append(exclude)[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_5 $$ regexSB.append(exclude)[ CD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_16 $$ matcher.appendTail(sb)[ CD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_6 $$ regexSB.append(">).+?(?=$|<")[ CD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_7 $$ regexSB.append(exclude)[ CD ]
Line_9 $$ Pattern pattern = Pattern.compile(regexSB.toString(), Pattern.DOTALL)-->Line_10 $$ Matcher matcher = pattern.matcher(text)[ FD ]
Line_12 $$ String wrapped = _formatInlines(matcher.group())-->Line_13 $$ wrapped = StringUtil.wrap(wrapped, 80 - indentLength, "\n")[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_10 $$ Matcher matcher = pattern.matcher(text)[ FD ]
Line_4 $$ StringBundler regexSB = new StringBundler("(?<=^|</")-->Line_6 $$ regexSB.append(">).+?(?=$|<")[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_8 $$ regexSB.append(">)")[ CD ]
Line_4 $$ StringBundler regexSB = new StringBundler("(?<=^|</")-->Line_8 $$ regexSB.append(">)")[ FD ]
Line_10 $$ Matcher matcher = pattern.matcher(text)-->Line_16 $$ matcher.appendTail(sb)[ FD ]
Line_12 $$ String wrapped = _formatInlines(matcher.group())-->Line_14 $$ matcher.appendReplacement(sb, wrapped)[ FD ]
Line_4 $$ StringBundler regexSB = new StringBundler("(?<=^|</")-->Line_9 $$ Pattern pattern = Pattern.compile(regexSB.toString(), Pattern.DOTALL)[ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_17 $$ return sb.toString()[ FD ]
Line_10 $$ Matcher matcher = pattern.matcher(text)-->Line_11 $$ while (matcher.find()) [ FD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_16 $$ matcher.appendTail(sb)[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_17 $$ return sb.toString()[ CD ]
Line_13 $$ wrapped = StringUtil.wrap(wrapped, 80 - indentLength, "\n")-->Line_14 $$ matcher.appendReplacement(sb, wrapped)[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_9 $$ Pattern pattern = Pattern.compile(regexSB.toString(), Pattern.DOTALL)[ CD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_5 $$ regexSB.append(exclude)[ FD ]
Line_4 $$ StringBundler regexSB = new StringBundler("(?<=^|</")-->Line_5 $$ regexSB.append(exclude)[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_4 $$ StringBundler regexSB = new StringBundler("(?<=^|</")[ CD ]
Line_11 $$ while (matcher.find()) -->Line_13 $$ wrapped = StringUtil.wrap(wrapped, 80 - indentLength, "\n")[ CD ]
Line_11 $$ while (matcher.find()) -->Line_14 $$ matcher.appendReplacement(sb, wrapped)[ CD ]
Line_11 $$ while (matcher.find()) -->Line_12 $$ String wrapped = _formatInlines(matcher.group())[ CD ]
Line_10 $$ Matcher matcher = pattern.matcher(text)-->Line_12 $$ String wrapped = _formatInlines(matcher.group())[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_10 $$ Matcher matcher = pattern.matcher(text)[ CD ]
Line_3 $$ StringBuffer sb = new StringBuffer()-->Line_14 $$ matcher.appendReplacement(sb, wrapped)[ FD ]
Line_2 $$ private String _wrapText(String text, int indentLength, String exclude) -->Line_11 $$ while (matcher.find()) [ CD ]
Line_10 $$ Matcher matcher = pattern.matcher(text)-->Line_14 $$ matcher.appendReplacement(sb, wrapped)[ FD ]
Line_4 $$ StringBundler regexSB = new StringBundler("(?<=^|</")-->Line_7 $$ regexSB.append(exclude)[ FD ]
