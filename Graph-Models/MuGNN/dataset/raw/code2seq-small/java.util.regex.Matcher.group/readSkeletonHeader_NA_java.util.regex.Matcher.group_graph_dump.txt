Line_22 $$ final Matcher byMatcher = BY_LINE_V2.matcher(line)-->Line_24 $$ final int version = fromVersionString(byMatcher.group(1))[ FD ]
Line_8 $$ line = reader.readLine()-->Line_22 $$ final Matcher byMatcher = BY_LINE_V2.matcher(line)[ FD ]
Line_18 $$ if (fromMatcher.matches()) -->Line_19 $$ final String binaryFile = fromMatcher.group(1)[ CD ]
Line_6 $$ String line = null-->Line_13 $$ final Matcher v1Matcher = VERSION_LINE_V1.matcher(line)[ FD ]
Line_8 $$ line = reader.readLine()-->Line_17 $$ final Matcher fromMatcher = FROM_LINE_V2.matcher(line)[ FD ]
Line_23 $$ if (byMatcher.matches()) -->Line_24 $$ final int version = fromVersionString(byMatcher.group(1))[ CD ]
Line_9 $$ if (line == null) -->Line_10 $$ return null[ CD ]
Line_7 $$ for (int i = 0; i < 3; i++) -->Line_8 $$ line = reader.readLine()[ CD ]
Line_8 $$ line = reader.readLine()-->Line_21 $$ if (line != null) [ FD ]
Line_6 $$ String line = null-->Line_21 $$ if (line != null) [ FD ]
Line_8 $$ line = reader.readLine()-->Line_20 $$ line = reader.readLine()[ FD ]
Line_6 $$ String line = null-->Line_17 $$ final Matcher fromMatcher = FROM_LINE_V2.matcher(line)[ FD ]
Line_23 $$ if (byMatcher.matches()) -->Line_25 $$ return new SkeletonHeader(binaryFile, version)[ CD ]
Line_4 $$ final LineNumberReader reader = new LineNumberReader(new FileReader(file))-->Line_20 $$ line = reader.readLine()[ FD ]
Line_17 $$ final Matcher fromMatcher = FROM_LINE_V2.matcher(line)-->Line_18 $$ if (fromMatcher.matches()) [ FD ]
Line_18 $$ if (fromMatcher.matches()) -->Line_20 $$ line = reader.readLine()[ CD ]
Line_22 $$ final Matcher byMatcher = BY_LINE_V2.matcher(line)-->Line_23 $$ if (byMatcher.matches()) [ FD ]
Line_6 $$ String line = null-->Line_22 $$ final Matcher byMatcher = BY_LINE_V2.matcher(line)[ FD ]
Line_21 $$ if (line != null) -->Line_22 $$ final Matcher byMatcher = BY_LINE_V2.matcher(line)[ CD ]
Line_21 $$ if (line != null) -->Line_23 $$ if (byMatcher.matches()) [ CD ]
Line_13 $$ final Matcher v1Matcher = VERSION_LINE_V1.matcher(line)-->Line_15 $$ return new SkeletonHeader(v1Matcher.group(1), fromVersionString(v1Matcher.group(2)))[ FD ]
Line_14 $$ if (v1Matcher.matches()) -->Line_15 $$ return new SkeletonHeader(v1Matcher.group(1), fromVersionString(v1Matcher.group(2)))[ CD ]
Line_2 $$ public static SkeletonHeader readSkeletonHeader(@NotNull File file) -->Line_34 $$ return null[ CD ]
Line_8 $$ line = reader.readLine()-->Line_13 $$ final Matcher v1Matcher = VERSION_LINE_V1.matcher(line)[ FD ]
Line_8 $$ line = reader.readLine()-->Line_9 $$ if (line == null) [ FD ]
Line_7 $$ for (int i = 0; i < 3; i++) -->Line_9 $$ if (line == null) [ CD ]
Line_18 $$ if (fromMatcher.matches()) -->Line_21 $$ if (line != null) [ CD ]
Line_4 $$ final LineNumberReader reader = new LineNumberReader(new FileReader(file))-->Line_8 $$ line = reader.readLine()[ FD ]
Line_13 $$ final Matcher v1Matcher = VERSION_LINE_V1.matcher(line)-->Line_14 $$ if (v1Matcher.matches()) [ FD ]
Line_6 $$ String line = null-->Line_9 $$ if (line == null) [ FD ]
Line_6 $$ String line = null-->Line_8 $$ line = reader.readLine()[ FD ]
Line_17 $$ final Matcher fromMatcher = FROM_LINE_V2.matcher(line)-->Line_19 $$ final String binaryFile = fromMatcher.group(1)[ FD ]
Line_20 $$ line = reader.readLine()-->Line_21 $$ if (line != null) [ FD ]
Line_4 $$ final LineNumberReader reader = new LineNumberReader(new FileReader(file))-->Line_30 $$ reader.close()[ FD ]
Line_6 $$ String line = null-->Line_20 $$ line = reader.readLine()[ FD ]
Line_20 $$ line = reader.readLine()-->Line_22 $$ final Matcher byMatcher = BY_LINE_V2.matcher(line)[ FD ]
