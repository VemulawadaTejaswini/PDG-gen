Line_8 $$ while (true) -->Line_9 $$ final String newName = String.format("%s (%d)", originalName, i)[ CD ]
Line_8 $$ while (true) -->Line_10 $$ if (!currentNames.contains(newName))[ CD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_6 $$ final String originalName = (matcher.matches()) ? matcher.group(1) : str[ CD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_7 $$ int i = 1[ CD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_3 $$ if (!currentNames.contains(str))[ CD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_5 $$ final Matcher matcher = Pattern.compile("(.*?)\\s*\\(\\d+\\)").matcher(str)[ FD ]
Line_3 $$ if (!currentNames.contains(str))-->Line_4 $$ return str[ CD ]
Line_5 $$ final Matcher matcher = Pattern.compile("(.*?)\\s*\\(\\d+\\)").matcher(str)-->Line_6 $$ final String originalName = (matcher.matches()) ? matcher.group(1) : str[ FD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_8 $$ while (true) [ CD ]
Line_10 $$ if (!currentNames.contains(newName))-->Line_11 $$ return newName[ CD ]
Line_9 $$ final String newName = String.format("%s (%d)", originalName, i)-->Line_10 $$ if (!currentNames.contains(newName))[ FD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_10 $$ if (!currentNames.contains(newName))[ FD ]
Line_8 $$ while (true) -->Line_12 $$ i++[ CD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_3 $$ if (!currentNames.contains(str))[ FD ]
Line_2 $$ public static String suggestUniqueName(@NotNull String str, @NotNull Collection<String> currentNames) -->Line_5 $$ final Matcher matcher = Pattern.compile("(.*?)\\s*\\(\\d+\\)").matcher(str)[ CD ]
Line_7 $$ int i = 1-->Line_12 $$ i++[ FD ]
Line_6 $$ final String originalName = (matcher.matches()) ? matcher.group(1) : str-->Line_9 $$ final String newName = String.format("%s (%d)", originalName, i)[ FD ]
Line_7 $$ int i = 1-->Line_9 $$ final String newName = String.format("%s (%d)", originalName, i)[ FD ]
