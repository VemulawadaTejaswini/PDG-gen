Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_24 $$ if (Validator.isNull(version)) [ CD ]
Line_3 $$ Attributes attributes = null-->Line_32 $$ String shortDescription = attributes.getValue("Bundle-Description")[ FD ]
Line_19 $$ String artifactId = attributes.getValue("Implementation-Title")-->Line_31 $$ pluginPackage.setName(artifactId)[ FD ]
Line_10 $$ attributes = new Attributes()-->Line_14 $$ artifactGroupId = attributes.getValue("Implementation-Vendor")[ FD ]
Line_14 $$ artifactGroupId = attributes.getValue("Implementation-Vendor")-->Line_17 $$ artifactGroupId = GetterUtil.getString(attributes.getValue("Bundle-Vendor"), servletContextName)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_32 $$ String shortDescription = attributes.getValue("Bundle-Description")[ CD ]
Line_23 $$ String version = attributes.getValue("Implementation-Version")-->Line_24 $$ if (Validator.isNull(version)) [ FD ]
Line_16 $$ if (Validator.isNull(artifactGroupId)) -->Line_17 $$ artifactGroupId = GetterUtil.getString(attributes.getValue("Bundle-Vendor"), servletContextName)[ CD ]
Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")-->Line_17 $$ artifactGroupId = GetterUtil.getString(attributes.getValue("Bundle-Vendor"), servletContextName)[ FD ]
Line_10 $$ attributes = new Attributes()-->Line_25 $$ version = GetterUtil.getString(attributes.getValue("Bundle-Version"), Version.UNKNOWN)[ FD ]
Line_4 $$ String servletContextName = servletContext.getServletContextName()-->Line_17 $$ artifactGroupId = GetterUtil.getString(attributes.getValue("Bundle-Vendor"), servletContextName)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_19 $$ String artifactId = attributes.getValue("Implementation-Title")[ CD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_21 $$ artifactId = GetterUtil.getString(attributes.getValue("Bundle-Name"), servletContextName)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_40 $$ return pluginPackage[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")[ CD ]
Line_10 $$ attributes = new Attributes()-->Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_20 $$ if (Validator.isNull(artifactId)) [ CD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_3 $$ Attributes attributes = null[ CD ]
Line_23 $$ String version = attributes.getValue("Implementation-Version")-->Line_25 $$ version = GetterUtil.getString(attributes.getValue("Bundle-Version"), Version.UNKNOWN)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_4 $$ String servletContextName = servletContext.getServletContextName()[ CD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_19 $$ String artifactId = attributes.getValue("Implementation-Title")[ FD ]
Line_3 $$ Attributes attributes = null-->Line_10 $$ attributes = new Attributes()[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_5 $$ InputStream inputStream = servletContext.getResourceAsStream("/META-INF/MANIFEST.MF")[ FD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_25 $$ version = GetterUtil.getString(attributes.getValue("Bundle-Version"), Version.UNKNOWN)[ FD ]
Line_21 $$ artifactId = GetterUtil.getString(attributes.getValue("Bundle-Name"), servletContextName)-->Line_31 $$ pluginPackage.setName(artifactId)[ FD ]
Line_25 $$ version = GetterUtil.getString(attributes.getValue("Bundle-Version"), Version.UNKNOWN)-->Line_27 $$ if (version.equals(Version.UNKNOWN) && _log.isWarnEnabled()) [ FD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_36 $$ String pageURL = attributes.getValue("Bundle-DocURL")[ FD ]
Line_14 $$ artifactGroupId = attributes.getValue("Implementation-Vendor")-->Line_16 $$ if (Validator.isNull(artifactGroupId)) [ FD ]
Line_37 $$ if (Validator.isNotNull(pageURL)) -->Line_38 $$ pluginPackage.setPageURL(pageURL)[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_13 $$ if (Validator.isNull(artifactGroupId)) [ CD ]
Line_33 $$ if (Validator.isNotNull(shortDescription)) -->Line_34 $$ pluginPackage.setShortDescription(shortDescription)[ CD ]
Line_30 $$ PluginPackage pluginPackage = new PluginPackageImpl(artifactGroupId + StringPool.SLASH + artifactId + StringPool.SLASH + version + StringPool.SLASH + "war")-->Line_31 $$ pluginPackage.setName(artifactId)[ FD ]
Line_10 $$ attributes = new Attributes()-->Line_23 $$ String version = attributes.getValue("Implementation-Version")[ FD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_10 $$ attributes = new Attributes()[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_30 $$ PluginPackage pluginPackage = new PluginPackageImpl(artifactGroupId + StringPool.SLASH + artifactId + StringPool.SLASH + version + StringPool.SLASH + "war")[ CD ]
Line_30 $$ PluginPackage pluginPackage = new PluginPackageImpl(artifactGroupId + StringPool.SLASH + artifactId + StringPool.SLASH + version + StringPool.SLASH + "war")-->Line_34 $$ pluginPackage.setShortDescription(shortDescription)[ FD ]
Line_5 $$ InputStream inputStream = servletContext.getResourceAsStream("/META-INF/MANIFEST.MF")-->Line_6 $$ if (inputStream != null) [ FD ]
Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")-->Line_16 $$ if (Validator.isNull(artifactGroupId)) [ FD ]
Line_3 $$ Attributes attributes = null-->Line_19 $$ String artifactId = attributes.getValue("Implementation-Title")[ FD ]
Line_23 $$ String version = attributes.getValue("Implementation-Version")-->Line_27 $$ if (version.equals(Version.UNKNOWN) && _log.isWarnEnabled()) [ FD ]
Line_10 $$ attributes = new Attributes()-->Line_21 $$ artifactId = GetterUtil.getString(attributes.getValue("Bundle-Name"), servletContextName)[ FD ]
Line_27 $$ if (version.equals(Version.UNKNOWN) && _log.isWarnEnabled()) -->Line_28 $$ _log.warn("Plugin package on context " + servletContextName + " cannot be tracked because this WAR does not contain a " + "liferay-plugin-package.xml file")[ CD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_32 $$ String shortDescription = attributes.getValue("Bundle-Description")[ FD ]
Line_3 $$ Attributes attributes = null-->Line_36 $$ String pageURL = attributes.getValue("Bundle-DocURL")[ FD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_23 $$ String version = attributes.getValue("Implementation-Version")[ FD ]
Line_13 $$ if (Validator.isNull(artifactGroupId)) -->Line_14 $$ artifactGroupId = attributes.getValue("Implementation-Vendor")[ CD ]
Line_10 $$ attributes = new Attributes()-->Line_19 $$ String artifactId = attributes.getValue("Implementation-Title")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_36 $$ String pageURL = attributes.getValue("Bundle-DocURL")[ CD ]
Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")-->Line_13 $$ if (Validator.isNull(artifactGroupId)) [ FD ]
Line_6 $$ if (inputStream != null) -->Line_7 $$ Manifest manifest = new Manifest(inputStream)[ CD ]
Line_3 $$ Attributes attributes = null-->Line_17 $$ artifactGroupId = GetterUtil.getString(attributes.getValue("Bundle-Vendor"), servletContextName)[ FD ]
Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")-->Line_14 $$ artifactGroupId = attributes.getValue("Implementation-Vendor")[ FD ]
Line_7 $$ Manifest manifest = new Manifest(inputStream)-->Line_8 $$ attributes = manifest.getMainAttributes()[ FD ]
Line_6 $$ if (inputStream != null) -->Line_10 $$ attributes = new Attributes()[ CD ]
Line_24 $$ if (Validator.isNull(version)) -->Line_25 $$ version = GetterUtil.getString(attributes.getValue("Bundle-Version"), Version.UNKNOWN)[ CD ]
Line_3 $$ Attributes attributes = null-->Line_8 $$ attributes = manifest.getMainAttributes()[ FD ]
Line_19 $$ String artifactId = attributes.getValue("Implementation-Title")-->Line_20 $$ if (Validator.isNull(artifactId)) [ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_31 $$ pluginPackage.setName(artifactId)[ CD ]
Line_32 $$ String shortDescription = attributes.getValue("Bundle-Description")-->Line_33 $$ if (Validator.isNotNull(shortDescription)) [ FD ]
Line_10 $$ attributes = new Attributes()-->Line_36 $$ String pageURL = attributes.getValue("Bundle-DocURL")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_5 $$ InputStream inputStream = servletContext.getResourceAsStream("/META-INF/MANIFEST.MF")[ CD ]
Line_19 $$ String artifactId = attributes.getValue("Implementation-Title")-->Line_21 $$ artifactId = GetterUtil.getString(attributes.getValue("Bundle-Name"), servletContextName)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_4 $$ String servletContextName = servletContext.getServletContextName()[ FD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_14 $$ artifactGroupId = attributes.getValue("Implementation-Vendor")[ FD ]
Line_6 $$ if (inputStream != null) -->Line_8 $$ attributes = manifest.getMainAttributes()[ CD ]
Line_4 $$ String servletContextName = servletContext.getServletContextName()-->Line_21 $$ artifactId = GetterUtil.getString(attributes.getValue("Bundle-Name"), servletContextName)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_23 $$ String version = attributes.getValue("Implementation-Version")[ CD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_33 $$ if (Validator.isNotNull(shortDescription)) [ CD ]
Line_32 $$ String shortDescription = attributes.getValue("Bundle-Description")-->Line_34 $$ pluginPackage.setShortDescription(shortDescription)[ FD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_17 $$ artifactGroupId = GetterUtil.getString(attributes.getValue("Bundle-Vendor"), servletContextName)[ FD ]
Line_30 $$ PluginPackage pluginPackage = new PluginPackageImpl(artifactGroupId + StringPool.SLASH + artifactId + StringPool.SLASH + version + StringPool.SLASH + "war")-->Line_38 $$ pluginPackage.setPageURL(pageURL)[ FD ]
Line_36 $$ String pageURL = attributes.getValue("Bundle-DocURL")-->Line_37 $$ if (Validator.isNotNull(pageURL)) [ FD ]
Line_10 $$ attributes = new Attributes()-->Line_17 $$ artifactGroupId = GetterUtil.getString(attributes.getValue("Bundle-Vendor"), servletContextName)[ FD ]
Line_3 $$ Attributes attributes = null-->Line_14 $$ artifactGroupId = attributes.getValue("Implementation-Vendor")[ FD ]
Line_3 $$ Attributes attributes = null-->Line_21 $$ artifactId = GetterUtil.getString(attributes.getValue("Bundle-Name"), servletContextName)[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_37 $$ if (Validator.isNotNull(pageURL)) [ CD ]
Line_36 $$ String pageURL = attributes.getValue("Bundle-DocURL")-->Line_38 $$ pluginPackage.setPageURL(pageURL)[ FD ]
Line_8 $$ attributes = manifest.getMainAttributes()-->Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_6 $$ if (inputStream != null) [ CD ]
Line_3 $$ Attributes attributes = null-->Line_23 $$ String version = attributes.getValue("Implementation-Version")[ FD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_27 $$ if (version.equals(Version.UNKNOWN) && _log.isWarnEnabled()) [ CD ]
Line_2 $$ private PluginPackage _readPluginPackageServletManifest(ServletContext servletContext) throws IOException -->Line_16 $$ if (Validator.isNull(artifactGroupId)) [ CD ]
Line_3 $$ Attributes attributes = null-->Line_12 $$ String artifactGroupId = attributes.getValue("Implementation-Vendor-Id")[ FD ]
Line_3 $$ Attributes attributes = null-->Line_25 $$ version = GetterUtil.getString(attributes.getValue("Bundle-Version"), Version.UNKNOWN)[ FD ]
Line_10 $$ attributes = new Attributes()-->Line_32 $$ String shortDescription = attributes.getValue("Bundle-Description")[ FD ]
Line_20 $$ if (Validator.isNull(artifactId)) -->Line_21 $$ artifactId = GetterUtil.getString(attributes.getValue("Bundle-Name"), servletContextName)[ CD ]
