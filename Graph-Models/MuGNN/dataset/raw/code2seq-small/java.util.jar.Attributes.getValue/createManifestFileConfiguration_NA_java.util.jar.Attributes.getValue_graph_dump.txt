Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_8 $$ if (classpathText != null) [ CD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_6 $$ final String classpathText = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)[ CD ]
Line_4 $$ Manifest manifest = readManifest(manifestFile)-->Line_6 $$ final String classpathText = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)[ FD ]
Line_8 $$ if (classpathText != null) -->Line_9 $$ classpath.addAll(StringUtil.split(classpathText, " "))[ CD ]
Line_6 $$ final String classpathText = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)-->Line_9 $$ classpath.addAll(StringUtil.split(classpathText, " "))[ FD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_11 $$ return new ManifestFileConfiguration(path, classpath, mainClass, manifestFile.isWritable())[ CD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_3 $$ final String path = manifestFile.getPath()[ FD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_4 $$ Manifest manifest = readManifest(manifestFile)[ FD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_5 $$ String mainClass = manifest.getMainAttributes().getValue(Attributes.Name.MAIN_CLASS)[ CD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_4 $$ Manifest manifest = readManifest(manifestFile)[ CD ]
Line_4 $$ Manifest manifest = readManifest(manifestFile)-->Line_5 $$ String mainClass = manifest.getMainAttributes().getValue(Attributes.Name.MAIN_CLASS)[ FD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_7 $$ final List<String> classpath = new ArrayList<String>()[ CD ]
Line_7 $$ final List<String> classpath = new ArrayList<String>()-->Line_9 $$ classpath.addAll(StringUtil.split(classpathText, " "))[ FD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_3 $$ final String path = manifestFile.getPath()[ CD ]
Line_6 $$ final String classpathText = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)-->Line_8 $$ if (classpathText != null) [ FD ]
Line_2 $$ public static ManifestFileConfiguration createManifestFileConfiguration(@NotNull VirtualFile manifestFile) -->Line_11 $$ return new ManifestFileConfiguration(path, classpath, mainClass, manifestFile.isWritable())[ FD ]
