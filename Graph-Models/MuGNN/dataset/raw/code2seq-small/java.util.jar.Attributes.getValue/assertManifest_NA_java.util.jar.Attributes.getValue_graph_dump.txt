Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_3 $$ final VirtualFile file = ManifestFileUtil.findManifestFile(rootElement, context, type)[ CD ]
Line_5 $$ final Manifest manifest = ManifestFileUtil.readManifest(file)-->Line_7 $$ assertEquals(classpath, manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH))[ FD ]
Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_3 $$ final VirtualFile file = ManifestFileUtil.findManifestFile(rootElement, context, type)[ FD ]
Line_3 $$ final VirtualFile file = ManifestFileUtil.findManifestFile(rootElement, context, type)-->Line_5 $$ final Manifest manifest = ManifestFileUtil.readManifest(file)[ FD ]
Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_4 $$ assertNotNull(file)[ CD ]
Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_7 $$ assertEquals(classpath, manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH))[ CD ]
Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_6 $$ assertEquals(mainClass, manifest.getMainAttributes().getValue(Attributes.Name.MAIN_CLASS))[ FD ]
Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_7 $$ assertEquals(classpath, manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH))[ FD ]
Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_6 $$ assertEquals(mainClass, manifest.getMainAttributes().getValue(Attributes.Name.MAIN_CLASS))[ CD ]
Line_3 $$ final VirtualFile file = ManifestFileUtil.findManifestFile(rootElement, context, type)-->Line_4 $$ assertNotNull(file)[ FD ]
Line_5 $$ final Manifest manifest = ManifestFileUtil.readManifest(file)-->Line_6 $$ assertEquals(mainClass, manifest.getMainAttributes().getValue(Attributes.Name.MAIN_CLASS))[ FD ]
Line_2 $$ public static void assertManifest(CompositePackagingElement<?> rootElement, PackagingElementResolvingContext context, ArtifactType type, @Nullable String mainClass, @Nullable String classpath) -->Line_5 $$ final Manifest manifest = ManifestFileUtil.readManifest(file)[ CD ]
