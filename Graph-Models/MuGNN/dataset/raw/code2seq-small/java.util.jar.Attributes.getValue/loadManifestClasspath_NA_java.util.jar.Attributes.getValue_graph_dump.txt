Line_9 $$ if (classPath != null) -->Line_10 $$ return classPath.split(" ")[ CD ]
Line_6 $$ final Manifest manifest = inputStream.getManifest()-->Line_8 $$ final String classPath = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)[ FD ]
Line_7 $$ if (manifest != null) -->Line_9 $$ if (classPath != null) [ CD ]
Line_8 $$ final String classPath = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)-->Line_10 $$ return classPath.split(" ")[ FD ]
Line_4 $$ JarInputStream inputStream = new JarInputStream(new FileInputStream(file))-->Line_14 $$ inputStream.close()[ FD ]
Line_2 $$ public static String[] loadManifestClasspath(File file) -->Line_18 $$ return null[ CD ]
Line_4 $$ JarInputStream inputStream = new JarInputStream(new FileInputStream(file))-->Line_6 $$ final Manifest manifest = inputStream.getManifest()[ FD ]
Line_7 $$ if (manifest != null) -->Line_8 $$ final String classPath = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)[ CD ]
Line_8 $$ final String classPath = manifest.getMainAttributes().getValue(Attributes.Name.CLASS_PATH)-->Line_9 $$ if (classPath != null) [ FD ]
Line_6 $$ final Manifest manifest = inputStream.getManifest()-->Line_7 $$ if (manifest != null) [ FD ]
