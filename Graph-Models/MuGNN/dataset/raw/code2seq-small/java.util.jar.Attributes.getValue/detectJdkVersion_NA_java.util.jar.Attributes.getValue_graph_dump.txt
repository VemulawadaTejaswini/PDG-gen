Line_3 $$ final File path = new File(homePath, "jre/lib/rt.jar")-->Line_10 $$ runtimeArchive = new JarFile(path.getParentFile(), false)[ FD ]
Line_10 $$ runtimeArchive = new JarFile(path.getParentFile(), false)-->Line_16 $$ final Manifest manifest = runtimeArchive.getManifest()[ FD ]
Line_5 $$ JarFile runtimeArchive-->Line_24 $$ runtimeArchive.close()[ FD ]
Line_7 $$ runtimeArchive = new JarFile(path, false)-->Line_24 $$ runtimeArchive.close()[ FD ]
Line_10 $$ runtimeArchive = new JarFile(path.getParentFile(), false)-->Line_12 $$ runtimeArchive = new JarFile(new File(homePath, "jrt-fs.jar"))[ FD ]
Line_12 $$ runtimeArchive = new JarFile(new File(homePath, "jrt-fs.jar"))-->Line_24 $$ runtimeArchive.close()[ FD ]
Line_2 $$ public String detectJdkVersion(@NotNull String homePath, @NotNull final ActionRunner actionRunner) -->Line_32 $$ return null[ CD ]
Line_2 $$ public String detectJdkVersion(@NotNull String homePath, @NotNull final ActionRunner actionRunner) -->Line_28 $$ JdkVersionInfo info = detectJdkVersionInfo(homePath, actionRunner)[ CD ]
Line_2 $$ public String detectJdkVersion(@NotNull String homePath, @NotNull final ActionRunner actionRunner) -->Line_28 $$ JdkVersionInfo info = detectJdkVersionInfo(homePath, actionRunner)[ FD ]
Line_10 $$ runtimeArchive = new JarFile(path.getParentFile(), false)-->Line_24 $$ runtimeArchive.close()[ FD ]
Line_2 $$ public String detectJdkVersion(@NotNull String homePath, @NotNull final ActionRunner actionRunner) -->Line_29 $$ if (info != null) [ CD ]
Line_28 $$ JdkVersionInfo info = detectJdkVersionInfo(homePath, actionRunner)-->Line_29 $$ if (info != null) [ FD ]
Line_16 $$ final Manifest manifest = runtimeArchive.getManifest()-->Line_18 $$ final String version = manifest.getMainAttributes().getValue("Implementation-Version")[ FD ]
Line_5 $$ JarFile runtimeArchive-->Line_16 $$ final Manifest manifest = runtimeArchive.getManifest()[ FD ]
Line_17 $$ if (manifest != null) -->Line_18 $$ final String version = manifest.getMainAttributes().getValue("Implementation-Version")[ CD ]
Line_16 $$ final Manifest manifest = runtimeArchive.getManifest()-->Line_17 $$ if (manifest != null) [ FD ]
Line_7 $$ runtimeArchive = new JarFile(path, false)-->Line_10 $$ runtimeArchive = new JarFile(path.getParentFile(), false)[ FD ]
Line_18 $$ final String version = manifest.getMainAttributes().getValue("Implementation-Version")-->Line_19 $$ if (version != null) [ FD ]
Line_5 $$ JarFile runtimeArchive-->Line_7 $$ runtimeArchive = new JarFile(path, false)[ FD ]
Line_7 $$ runtimeArchive = new JarFile(path, false)-->Line_12 $$ runtimeArchive = new JarFile(new File(homePath, "jrt-fs.jar"))[ FD ]
Line_28 $$ JdkVersionInfo info = detectJdkVersionInfo(homePath, actionRunner)-->Line_30 $$ return info.getVersion()[ FD ]
Line_17 $$ if (manifest != null) -->Line_19 $$ if (version != null) [ CD ]
Line_2 $$ public String detectJdkVersion(@NotNull String homePath, @NotNull final ActionRunner actionRunner) -->Line_3 $$ final File path = new File(homePath, "jre/lib/rt.jar")[ CD ]
Line_29 $$ if (info != null) -->Line_30 $$ return info.getVersion()[ CD ]
Line_12 $$ runtimeArchive = new JarFile(new File(homePath, "jrt-fs.jar"))-->Line_16 $$ final Manifest manifest = runtimeArchive.getManifest()[ FD ]
Line_7 $$ runtimeArchive = new JarFile(path, false)-->Line_16 $$ final Manifest manifest = runtimeArchive.getManifest()[ FD ]
Line_5 $$ JarFile runtimeArchive-->Line_12 $$ runtimeArchive = new JarFile(new File(homePath, "jrt-fs.jar"))[ FD ]
Line_19 $$ if (version != null) -->Line_20 $$ return "java version \"" + version + "\""[ CD ]
Line_5 $$ JarFile runtimeArchive-->Line_10 $$ runtimeArchive = new JarFile(path.getParentFile(), false)[ FD ]
