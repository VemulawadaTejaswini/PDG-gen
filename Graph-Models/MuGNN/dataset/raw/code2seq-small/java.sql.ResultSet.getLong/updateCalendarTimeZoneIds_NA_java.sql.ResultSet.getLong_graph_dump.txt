Line_16 $$ while (rs.next()) -->Line_20 $$ if (classNameId == userClassNameId) [ CD ]
Line_14 $$ rs = ps.executeQuery()-->Line_28 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_16 $$ while (rs.next()) -->Line_19 $$ String timeZoneId = null[ CD ]
Line_21 $$ timeZoneId = rs.getString(3)-->Line_25 $$ updateCalendarTimeZoneId(calendarId, timeZoneId)[ FD ]
Line_20 $$ if (classNameId == userClassNameId) -->Line_21 $$ timeZoneId = rs.getString(3)[ CD ]
Line_2 $$ protected void updateCalendarTimeZoneIds() throws Exception -->Line_4 $$ ResultSet rs = null[ CD ]
Line_4 $$ ResultSet rs = null-->Line_21 $$ timeZoneId = rs.getString(3)[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_14 $$ rs = ps.executeQuery()[ FD ]
Line_19 $$ String timeZoneId = null-->Line_21 $$ timeZoneId = rs.getString(3)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(6)-->Line_13 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_20 $$ if (classNameId == userClassNameId) -->Line_23 $$ timeZoneId = PropsUtil.get(PropsKeys.COMPANY_DEFAULT_TIME_ZONE)[ CD ]
Line_4 $$ ResultSet rs = null-->Line_16 $$ while (rs.next()) [ FD ]
Line_4 $$ ResultSet rs = null-->Line_28 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(6)-->Line_7 $$ sb.append("select Calendar.calendarId, CalendarResource.")[ FD ]
Line_13 $$ ps = connection.prepareStatement(sb.toString())-->Line_28 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(6)-->Line_9 $$ sb.append("inner join CalendarResource on Calendar.")[ FD ]
Line_13 $$ ps = connection.prepareStatement(sb.toString())-->Line_14 $$ rs = ps.executeQuery()[ FD ]
Line_19 $$ String timeZoneId = null-->Line_23 $$ timeZoneId = PropsUtil.get(PropsKeys.COMPANY_DEFAULT_TIME_ZONE)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(6)-->Line_12 $$ sb.append("CalendarResource.userId = User_.userId")[ FD ]
Line_14 $$ rs = ps.executeQuery()-->Line_18 $$ long classNameId = rs.getLong(2)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(6)-->Line_10 $$ sb.append("calendarResourceId = CalendarResource.")[ FD ]
Line_18 $$ long classNameId = rs.getLong(2)-->Line_20 $$ if (classNameId == userClassNameId) [ FD ]
Line_16 $$ while (rs.next()) -->Line_17 $$ long calendarId = rs.getLong(1)[ CD ]
Line_4 $$ ResultSet rs = null-->Line_17 $$ long calendarId = rs.getLong(1)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(6)-->Line_8 $$ sb.append("classNameId, User_.timeZoneId from Calendar ")[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_28 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_15 $$ long userClassNameId = PortalUtil.getClassNameId(User.class)-->Line_20 $$ if (classNameId == userClassNameId) [ FD ]
Line_14 $$ rs = ps.executeQuery()-->Line_21 $$ timeZoneId = rs.getString(3)[ FD ]
Line_21 $$ timeZoneId = rs.getString(3)-->Line_23 $$ timeZoneId = PropsUtil.get(PropsKeys.COMPANY_DEFAULT_TIME_ZONE)[ FD ]
Line_14 $$ rs = ps.executeQuery()-->Line_16 $$ while (rs.next()) [ FD ]
Line_17 $$ long calendarId = rs.getLong(1)-->Line_25 $$ updateCalendarTimeZoneId(calendarId, timeZoneId)[ FD ]
Line_4 $$ ResultSet rs = null-->Line_18 $$ long classNameId = rs.getLong(2)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(6)-->Line_11 $$ sb.append("calendarResourceId inner join User_ on ")[ FD ]
Line_19 $$ String timeZoneId = null-->Line_25 $$ updateCalendarTimeZoneId(calendarId, timeZoneId)[ FD ]
Line_14 $$ rs = ps.executeQuery()-->Line_17 $$ long calendarId = rs.getLong(1)[ FD ]
Line_23 $$ timeZoneId = PropsUtil.get(PropsKeys.COMPANY_DEFAULT_TIME_ZONE)-->Line_25 $$ updateCalendarTimeZoneId(calendarId, timeZoneId)[ FD ]
Line_2 $$ protected void updateCalendarTimeZoneIds() throws Exception -->Line_3 $$ PreparedStatement ps = null[ CD ]
Line_4 $$ ResultSet rs = null-->Line_14 $$ rs = ps.executeQuery()[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_13 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_16 $$ while (rs.next()) -->Line_25 $$ updateCalendarTimeZoneId(calendarId, timeZoneId)[ CD ]
Line_16 $$ while (rs.next()) -->Line_18 $$ long classNameId = rs.getLong(2)[ CD ]
