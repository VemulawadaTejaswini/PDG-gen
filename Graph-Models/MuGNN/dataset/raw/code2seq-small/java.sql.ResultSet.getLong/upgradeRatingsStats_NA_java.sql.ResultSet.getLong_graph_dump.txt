Line_2 $$ protected void upgradeRatingsStats() throws Exception -->Line_4 $$ sb.append("select classNameId, classPK, count(1) as totalEntries, ")[ CD ]
Line_13 $$ while (rs.next()) -->Line_19 $$ ps2.addBatch()[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(4)-->Line_5 $$ sb.append("sum(RatingsEntry.score) as totalScore, ")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(4)-->Line_6 $$ sb.append("sum(RatingsEntry.score) / count(1) as averageScore from ")[ FD ]
Line_2 $$ protected void upgradeRatingsStats() throws Exception -->Line_9 $$ String updateSQL = "update RatingsStats set totalEntries = ?, totalScore = ?, " + "averageScore = ? where classNameId = ? and classPK = ?"[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(4)-->Line_8 $$ String selectSQL = sb.toString()[ FD ]
Line_13 $$ while (rs.next()) -->Line_14 $$ ps2.setInt(1, rs.getInt("totalEntries"))[ CD ]
Line_2 $$ protected void upgradeRatingsStats() throws Exception -->Line_6 $$ sb.append("sum(RatingsEntry.score) / count(1) as averageScore from ")[ CD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_17 $$ ps2.setLong(4, rs.getLong("classNameId"))[ FD ]
Line_2 $$ protected void upgradeRatingsStats() throws Exception -->Line_5 $$ sb.append("sum(RatingsEntry.score) as totalScore, ")[ CD ]
Line_2 $$ protected void upgradeRatingsStats() throws Exception -->Line_8 $$ String selectSQL = sb.toString()[ CD ]
Line_8 $$ String selectSQL = sb.toString()-->Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);[ FD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_19 $$ ps2.addBatch()[ FD ]
Line_2 $$ protected void upgradeRatingsStats() throws Exception -->Line_7 $$ sb.append("RatingsEntry group by classNameId, classPK")[ CD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_21 $$ ps2.executeBatch()[ FD ]
Line_2 $$ protected void upgradeRatingsStats() throws Exception -->Line_3 $$ StringBundler sb = new StringBundler(4)[ CD ]
Line_9 $$ String updateSQL = "update RatingsStats set totalEntries = ?, totalScore = ?, " + "averageScore = ? where classNameId = ? and classPK = ?"-->Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);[ FD ]
Line_13 $$ while (rs.next()) -->Line_17 $$ ps2.setLong(4, rs.getLong("classNameId"))[ CD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_13 $$ while (rs.next()) [ FD ]
Line_13 $$ while (rs.next()) -->Line_16 $$ ps2.setDouble(3, rs.getDouble("averageScore"))[ CD ]
Line_13 $$ while (rs.next()) -->Line_18 $$ ps2.setLong(5, rs.getLong("classPK"))[ CD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_15 $$ ps2.setDouble(2, rs.getDouble("totalScore"))[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(4)-->Line_4 $$ sb.append("select classNameId, classPK, count(1) as totalEntries, ")[ FD ]
Line_13 $$ while (rs.next()) -->Line_15 $$ ps2.setDouble(2, rs.getDouble("totalScore"))[ CD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_16 $$ ps2.setDouble(3, rs.getDouble("averageScore"))[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(4)-->Line_7 $$ sb.append("RatingsEntry group by classNameId, classPK")[ FD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_14 $$ ps2.setInt(1, rs.getInt("totalEntries"))[ FD ]
Line_10 $$ try (PreparedStatement ps1 = connection.prepareStatement(selectSQL);-->Line_18 $$ ps2.setLong(5, rs.getLong("classPK"))[ FD ]
