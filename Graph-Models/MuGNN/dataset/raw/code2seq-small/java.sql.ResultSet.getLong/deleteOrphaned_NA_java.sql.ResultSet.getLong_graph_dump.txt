Line_13 $$ while (rs.next()) -->Line_21 $$ if (!classNameValue.equals(orphanedClassName)) [ CD ]
Line_15 $$ ClassName className = ClassNameLocalServiceUtil.fetchClassName(classNameId)-->Line_19 $$ String classNameValue = className.getValue()[ FD ]
Line_13 $$ while (rs.next()) -->Line_24 $$ String orphanedTableName = orphanedAttachedModel[2][ CD ]
Line_13 $$ while (rs.next()) -->Line_25 $$ String orphanedColumnName = orphanedAttachedModel[3][ CD ]
Line_13 $$ while (rs.next()) -->Line_26 $$ if (!hasTable(orphanedTableName)) [ CD ]
Line_11 $$ ps = connection.prepareStatement("select distinct classNameId from " + tableName)-->Line_32 $$ DataAccess.cleanUp(null, ps, rs)[ FD ]
Line_15 $$ ClassName className = ClassNameLocalServiceUtil.fetchClassName(classNameId)-->Line_16 $$ if (className == null) [ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_32 $$ DataAccess.cleanUp(null, ps, rs)[ FD ]
Line_13 $$ while (rs.next()) -->Line_19 $$ String classNameValue = className.getValue()[ CD ]
Line_13 $$ while (rs.next()) -->Line_14 $$ long classNameId = rs.getLong("classNameId")[ CD ]
Line_14 $$ long classNameId = rs.getLong("classNameId")-->Line_15 $$ ClassName className = ClassNameLocalServiceUtil.fetchClassName(classNameId)[ FD ]
Line_13 $$ while (rs.next()) -->Line_20 $$ String orphanedClassName = orphanedAttachedModel[1][ CD ]
Line_25 $$ String orphanedColumnName = orphanedAttachedModel[3]-->Line_29 $$ deleteOrphaned(tableName, orphanedTableName, orphanedColumnName)[ FD ]
Line_6 $$ String tableName = orphanedAttachedModel[0]-->Line_7 $$ if (!hasTable(tableName) || !hasColumn(tableName, "classNameId")) [ FD ]
Line_4 $$ ResultSet rs = null-->Line_13 $$ while (rs.next()) [ FD ]
Line_4 $$ ResultSet rs = null-->Line_32 $$ DataAccess.cleanUp(null, ps, rs)[ FD ]
Line_13 $$ while (rs.next()) -->Line_16 $$ if (className == null) [ CD ]
Line_2 $$ protected void deleteOrphaned() throws Exception -->Line_3 $$ PreparedStatement ps = null[ CD ]
Line_13 $$ while (rs.next()) -->Line_29 $$ deleteOrphaned(tableName, orphanedTableName, orphanedColumnName)[ CD ]
Line_3 $$ PreparedStatement ps = null-->Line_12 $$ rs = ps.executeQuery()[ FD ]
Line_19 $$ String classNameValue = className.getValue()-->Line_21 $$ if (!classNameValue.equals(orphanedClassName)) [ FD ]
Line_24 $$ String orphanedTableName = orphanedAttachedModel[2]-->Line_29 $$ deleteOrphaned(tableName, orphanedTableName, orphanedColumnName)[ FD ]
Line_12 $$ rs = ps.executeQuery()-->Line_13 $$ while (rs.next()) [ FD ]
Line_2 $$ protected void deleteOrphaned() throws Exception -->Line_4 $$ ResultSet rs = null[ CD ]
Line_4 $$ ResultSet rs = null-->Line_12 $$ rs = ps.executeQuery()[ FD ]
Line_24 $$ String orphanedTableName = orphanedAttachedModel[2]-->Line_26 $$ if (!hasTable(orphanedTableName)) [ FD ]
Line_12 $$ rs = ps.executeQuery()-->Line_32 $$ DataAccess.cleanUp(null, ps, rs)[ FD ]
Line_6 $$ String tableName = orphanedAttachedModel[0]-->Line_29 $$ deleteOrphaned(tableName, orphanedTableName, orphanedColumnName)[ FD ]
Line_20 $$ String orphanedClassName = orphanedAttachedModel[1]-->Line_21 $$ if (!classNameValue.equals(orphanedClassName)) [ FD ]
Line_13 $$ while (rs.next()) -->Line_15 $$ ClassName className = ClassNameLocalServiceUtil.fetchClassName(classNameId)[ CD ]
Line_3 $$ PreparedStatement ps = null-->Line_11 $$ ps = connection.prepareStatement("select distinct classNameId from " + tableName)[ FD ]
Line_4 $$ ResultSet rs = null-->Line_14 $$ long classNameId = rs.getLong("classNameId")[ FD ]
Line_12 $$ rs = ps.executeQuery()-->Line_14 $$ long classNameId = rs.getLong("classNameId")[ FD ]
Line_11 $$ ps = connection.prepareStatement("select distinct classNameId from " + tableName)-->Line_12 $$ rs = ps.executeQuery()[ FD ]
