Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_4 $$ given(resultSet.next()).willReturn(true, false)[ CD ]
Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_5 $$ given(resultSet.getLong(1)).willReturn(87L)[ CD ]
Line_6 $$ BeanPropertySqlParameterSource parms = new BeanPropertySqlParameterSource(new ParameterBean(3))-->Line_7 $$ long l = template.queryForObject("SELECT AGE FROM CUSTMR WHERE ID = :id", parms, Long.class).longValue()[ FD ]
Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_6 $$ BeanPropertySqlParameterSource parms = new BeanPropertySqlParameterSource(new ParameterBean(3))[ CD ]
Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_9 $$ verify(connection).prepareStatement("SELECT AGE FROM CUSTMR WHERE ID = ?")[ CD ]
Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_10 $$ verify(preparedStatement).setObject(1, 3, Types.INTEGER)[ CD ]
Line_7 $$ long l = template.queryForObject("SELECT AGE FROM CUSTMR WHERE ID = :id", parms, Long.class).longValue()-->Line_8 $$ assertEquals("Return of a long", 87, l)[ FD ]
Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_8 $$ assertEquals("Return of a long", 87, l)[ CD ]
Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_3 $$ given(resultSet.getMetaData()).willReturn(resultSetMetaData)[ CD ]
Line_2 $$ public void testQueryForLongWithParamBean() throws Exception -->Line_7 $$ long l = template.queryForObject("SELECT AGE FROM CUSTMR WHERE ID = :id", parms, Long.class).longValue()[ CD ]
