Line_5 $$ ResultSet rs = null-->Line_16 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_17 $$ while (rs.next()) [ FD ]
Line_7 $$ StringBundler sb = new StringBundler(6)-->Line_12 $$ sb.append("JournalArticle.ddmTemplateKey and ")[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_15 $$ ps.setLong(1, classNameId)[ FD ]
Line_14 $$ ps = connection.prepareStatement(sb.toString())-->Line_23 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_14 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_16 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_23 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_3 $$ long classNameId = PortalUtil.getClassNameId(DDMStructure.class.getName())-->Line_20 $$ _ddmTemplateLinkLocalService.addTemplateLink(classNameId, id, templateId)[ FD ]
Line_14 $$ ps = connection.prepareStatement(sb.toString())-->Line_16 $$ rs = ps.executeQuery()[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(6)-->Line_11 $$ sb.append("DDMTemplate.templateKey = ")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_19 $$ long id = rs.getLong("id_")[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(6)-->Line_9 $$ sb.append("from JournalArticle inner join DDMTemplate on (")[ FD ]
Line_14 $$ ps = connection.prepareStatement(sb.toString())-->Line_15 $$ ps.setLong(1, classNameId)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_23 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_16 $$ rs = ps.executeQuery()-->Line_18 $$ long templateId = rs.getLong("templateId")[ FD ]
Line_17 $$ while (rs.next()) -->Line_19 $$ long id = rs.getLong("id_")[ CD ]
Line_7 $$ StringBundler sb = new StringBundler(6)-->Line_13 $$ sb.append("JournalArticle.classNameId != ?)")[ FD ]
Line_18 $$ long templateId = rs.getLong("templateId")-->Line_20 $$ _ddmTemplateLinkLocalService.addTemplateLink(classNameId, id, templateId)[ FD ]
Line_17 $$ while (rs.next()) -->Line_18 $$ long templateId = rs.getLong("templateId")[ CD ]
Line_2 $$ protected void addDDMTemplateLinks() throws Exception -->Line_3 $$ long classNameId = PortalUtil.getClassNameId(DDMStructure.class.getName())[ CD ]
Line_3 $$ long classNameId = PortalUtil.getClassNameId(DDMStructure.class.getName())-->Line_15 $$ ps.setLong(1, classNameId)[ FD ]
Line_16 $$ rs = ps.executeQuery()-->Line_23 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_19 $$ long id = rs.getLong("id_")-->Line_20 $$ _ddmTemplateLinkLocalService.addTemplateLink(classNameId, id, templateId)[ FD ]
Line_2 $$ protected void addDDMTemplateLinks() throws Exception -->Line_5 $$ ResultSet rs = null[ CD ]
Line_5 $$ ResultSet rs = null-->Line_18 $$ long templateId = rs.getLong("templateId")[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(6)-->Line_8 $$ sb.append("select DDMTemplate.templateId, JournalArticle.id_ ")[ FD ]
Line_16 $$ rs = ps.executeQuery()-->Line_19 $$ long id = rs.getLong("id_")[ FD ]
Line_2 $$ protected void addDDMTemplateLinks() throws Exception -->Line_4 $$ PreparedStatement ps = null[ CD ]
Line_7 $$ StringBundler sb = new StringBundler(6)-->Line_14 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_16 $$ rs = ps.executeQuery()-->Line_17 $$ while (rs.next()) [ FD ]
Line_7 $$ StringBundler sb = new StringBundler(6)-->Line_10 $$ sb.append("DDMTemplate.groupId = JournalArticle.groupId and ")[ FD ]
Line_17 $$ while (rs.next()) -->Line_20 $$ _ddmTemplateLinkLocalService.addTemplateLink(classNameId, id, templateId)[ CD ]
