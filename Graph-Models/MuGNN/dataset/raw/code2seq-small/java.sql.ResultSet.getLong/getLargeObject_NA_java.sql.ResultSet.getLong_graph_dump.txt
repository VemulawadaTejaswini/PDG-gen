Line_2 $$ public static byte[] getLargeObject(ResultSet resultSet, String name) throws SQLException -->Line_3 $$ Statement statement = resultSet.getStatement()[ CD ]
Line_10 $$ LargeObject largeObject = largeObjectManager.open(id, LargeObjectManager.READ)-->Line_12 $$ largeObject.read(bytes, 0, largeObject.size())[ FD ]
Line_3 $$ Statement statement = resultSet.getStatement()-->Line_4 $$ Connection connection = statement.getConnection()[ FD ]
Line_4 $$ Connection connection = statement.getConnection()-->Line_5 $$ connection.setAutoCommit(false)[ FD ]
Line_2 $$ public static byte[] getLargeObject(ResultSet resultSet, String name) throws SQLException -->Line_9 $$ long id = resultSet.getLong(name)[ FD ]
Line_4 $$ Connection connection = statement.getConnection()-->Line_16 $$ connection.setAutoCommit(true)[ FD ]
Line_2 $$ public static byte[] getLargeObject(ResultSet resultSet, String name) throws SQLException -->Line_5 $$ connection.setAutoCommit(false)[ CD ]
Line_7 $$ PGConnection pgConnection = connection.unwrap(PGConnection.class)-->Line_8 $$ LargeObjectManager largeObjectManager = pgConnection.getLargeObjectAPI()[ FD ]
Line_10 $$ LargeObject largeObject = largeObjectManager.open(id, LargeObjectManager.READ)-->Line_13 $$ largeObject.close()[ FD ]
Line_4 $$ Connection connection = statement.getConnection()-->Line_7 $$ PGConnection pgConnection = connection.unwrap(PGConnection.class)[ FD ]
Line_8 $$ LargeObjectManager largeObjectManager = pgConnection.getLargeObjectAPI()-->Line_10 $$ LargeObject largeObject = largeObjectManager.open(id, LargeObjectManager.READ)[ FD ]
Line_2 $$ public static byte[] getLargeObject(ResultSet resultSet, String name) throws SQLException -->Line_4 $$ Connection connection = statement.getConnection()[ CD ]
Line_10 $$ LargeObject largeObject = largeObjectManager.open(id, LargeObjectManager.READ)-->Line_11 $$ byte[] bytes = new byte[largeObject.size()][ FD ]
Line_11 $$ byte[] bytes = new byte[largeObject.size()]-->Line_12 $$ largeObject.read(bytes, 0, largeObject.size())[ FD ]
Line_2 $$ public static byte[] getLargeObject(ResultSet resultSet, String name) throws SQLException -->Line_3 $$ Statement statement = resultSet.getStatement()[ FD ]
Line_9 $$ long id = resultSet.getLong(name)-->Line_10 $$ LargeObject largeObject = largeObjectManager.open(id, LargeObjectManager.READ)[ FD ]
