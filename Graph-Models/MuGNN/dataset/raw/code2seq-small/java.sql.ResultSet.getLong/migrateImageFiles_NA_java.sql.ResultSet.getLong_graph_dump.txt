Line_24 $$ String name = rs.getString("name")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_39 $$ ps = con.prepareStatement("select imageId from Image")[ FD ]
Line_25 $$ long smallImageId = rs.getLong("smallImageId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_5 $$ ResultSet rs = null-->Line_26 $$ long largeImageId = rs.getLong("largeImageId")[ FD ]
Line_22 $$ long groupId = rs.getLong("groupId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_9 $$ sb.append("select fileEntryId, companyId, groupId, folderId, ")[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_41 $$ while (rs.next()) [ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_28 $$ long custom2ImageId = rs.getLong("custom2ImageId")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_40 $$ rs = ps.executeQuery()[ FD ]
Line_2 $$ protected void migrateImageFiles() throws Exception -->Line_4 $$ PreparedStatement ps = null[ CD ]
Line_5 $$ ResultSet rs = null-->Line_27 $$ long custom1ImageId = rs.getLong("custom1ImageId")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_24 $$ String name = rs.getString("name")[ FD ]
Line_17 $$ ps = con.prepareStatement(sb.toString())-->Line_39 $$ ps = con.prepareStatement("select imageId from Image")[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_19 $$ while (rs.next()) -->Line_28 $$ long custom2ImageId = rs.getLong("custom2ImageId")[ CD ]
Line_19 $$ while (rs.next()) -->Line_20 $$ long fileEntryId = rs.getLong("fileEntryId")[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_25 $$ long smallImageId = rs.getLong("smallImageId")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_20 $$ long fileEntryId = rs.getLong("fileEntryId")[ FD ]
Line_17 $$ ps = con.prepareStatement(sb.toString())-->Line_18 $$ rs = ps.executeQuery()[ FD ]
Line_2 $$ protected void migrateImageFiles() throws Exception -->Line_5 $$ ResultSet rs = null[ CD ]
Line_19 $$ while (rs.next()) -->Line_23 $$ long folderId = rs.getLong("folderId")[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_41 $$ while (rs.next()) -->Line_42 $$ long imageId = rs.getLong("imageId")[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_21 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_10 $$ sb.append("name, smallImageId, largeImageId, custom1ImageId, ")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_42 $$ long imageId = rs.getLong("imageId")[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_15 $$ sb.append("!= 0)) or ((custom2ImageId is not null) and ")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_19 $$ while (rs.next()) [ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_17 $$ ps = con.prepareStatement(sb.toString())[ FD ]
Line_5 $$ ResultSet rs = null-->Line_23 $$ long folderId = rs.getLong("folderId")[ FD ]
Line_19 $$ while (rs.next()) -->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_22 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_38 $$ con = DataAccess.getUpgradeOptimizedConnection()[ FD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_5 $$ ResultSet rs = null-->Line_41 $$ while (rs.next()) [ FD ]
Line_17 $$ ps = con.prepareStatement(sb.toString())-->Line_40 $$ rs = ps.executeQuery()[ FD ]
Line_17 $$ ps = con.prepareStatement(sb.toString())-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_19 $$ while (rs.next()) -->Line_21 $$ long companyId = rs.getLong("companyId")[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_11 $$ sb.append("custom2ImageId from DLFileEntry where ((smallImageId ")[ FD ]
Line_48 $$ if (_sourceHookClassName.equals(DatabaseHook.class.getName())) -->Line_49 $$ runSQL("update Image set text_ = ''")[ CD ]
Line_5 $$ ResultSet rs = null-->Line_18 $$ rs = ps.executeQuery()[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_23 $$ long folderId = rs.getLong("folderId")[ FD ]
Line_41 $$ while (rs.next()) -->Line_43 $$ migrateImage(imageId)[ CD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_17 $$ ps = con.prepareStatement(sb.toString())[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_27 $$ long custom1ImageId = rs.getLong("custom1ImageId")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_40 $$ rs = ps.executeQuery()[ FD ]
Line_3 $$ Connection con = null-->Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_20 $$ long fileEntryId = rs.getLong("fileEntryId")[ FD ]
Line_19 $$ while (rs.next()) -->Line_25 $$ long smallImageId = rs.getLong("smallImageId")[ CD ]
Line_3 $$ Connection con = null-->Line_17 $$ ps = con.prepareStatement(sb.toString())[ FD ]
Line_21 $$ long companyId = rs.getLong("companyId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_16 $$ sb.append("(custom2ImageId != 0))")[ FD ]
Line_3 $$ Connection con = null-->Line_38 $$ con = DataAccess.getUpgradeOptimizedConnection()[ FD ]
Line_38 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_2 $$ protected void migrateImageFiles() throws Exception -->Line_48 $$ if (_sourceHookClassName.equals(DatabaseHook.class.getName())) [ CD ]
Line_5 $$ ResultSet rs = null-->Line_25 $$ long smallImageId = rs.getLong("smallImageId")[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_19 $$ while (rs.next()) [ FD ]
Line_5 $$ ResultSet rs = null-->Line_28 $$ long custom2ImageId = rs.getLong("custom2ImageId")[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_18 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_21 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_12 $$ sb.append("is not null) and (smallImageId != 0)) or ")[ FD ]
Line_27 $$ long custom1ImageId = rs.getLong("custom1ImageId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_14 $$ sb.append("or ((custom1ImageId is not null) and (custom1ImageId ")[ FD ]
Line_17 $$ ps = con.prepareStatement(sb.toString())-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_17 $$ ps = con.prepareStatement(sb.toString())[ FD ]
Line_2 $$ protected void migrateImageFiles() throws Exception -->Line_3 $$ Connection con = null[ CD ]
Line_3 $$ Connection con = null-->Line_39 $$ ps = con.prepareStatement("select imageId from Image")[ FD ]
Line_39 $$ ps = con.prepareStatement("select imageId from Image")-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_42 $$ long imageId = rs.getLong("imageId")-->Line_43 $$ migrateImage(imageId)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(8)-->Line_13 $$ sb.append("((largeImageId is not null) and (largeImageId != 0)) ")[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_24 $$ String name = rs.getString("name")[ FD ]
Line_19 $$ while (rs.next()) -->Line_24 $$ String name = rs.getString("name")[ CD ]
Line_28 $$ long custom2ImageId = rs.getLong("custom2ImageId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_40 $$ rs = ps.executeQuery()-->Line_42 $$ long imageId = rs.getLong("imageId")[ FD ]
Line_26 $$ long largeImageId = rs.getLong("largeImageId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_40 $$ rs = ps.executeQuery()-->Line_41 $$ while (rs.next()) [ FD ]
Line_23 $$ long folderId = rs.getLong("folderId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_40 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_22 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_26 $$ long largeImageId = rs.getLong("largeImageId")[ FD ]
Line_20 $$ long fileEntryId = rs.getLong("fileEntryId")-->Line_29 $$ migrateImage(fileEntryId, companyId, groupId, folderId, name, smallImageId, largeImageId, custom1ImageId, custom2ImageId)[ FD ]
Line_3 $$ Connection con = null-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_3 $$ Connection con = null-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_39 $$ ps = con.prepareStatement("select imageId from Image")[ FD ]
Line_38 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_39 $$ ps = con.prepareStatement("select imageId from Image")[ FD ]
Line_19 $$ while (rs.next()) -->Line_22 $$ long groupId = rs.getLong("groupId")[ CD ]
Line_19 $$ while (rs.next()) -->Line_27 $$ long custom1ImageId = rs.getLong("custom1ImageId")[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_42 $$ long imageId = rs.getLong("imageId")[ FD ]
Line_39 $$ ps = con.prepareStatement("select imageId from Image")-->Line_40 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_19 $$ while (rs.next()) -->Line_26 $$ long largeImageId = rs.getLong("largeImageId")[ CD ]
Line_34 $$ if (_sourceHookClassName.equals(DLHook.class.getName())) -->Line_35 $$ return[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_2 $$ protected void migrateImageFiles() throws Exception -->Line_34 $$ if (_sourceHookClassName.equals(DLHook.class.getName())) [ CD ]
Line_40 $$ rs = ps.executeQuery()-->Line_46 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
