Line_14 $$ rs = ps.executeQuery()-->Line_17 $$ long entryId = rs.getLong("entryId")[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_8 $$ sb.append("select classPK, entryId from AssetEntry where ")[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_9 $$ sb.append("classNameId = ")[ FD ]
Line_15 $$ while (rs.next()) -->Line_18 $$ DLFileEntry dlFileEntry = DLFileEntryLocalServiceUtil.fetchDLFileEntry(classPK)[ CD ]
Line_19 $$ if (dlFileEntry == null) -->Line_20 $$ AssetEntryLocalServiceUtil.deleteAssetEntry(entryId)[ CD ]
Line_14 $$ rs = ps.executeQuery()-->Line_16 $$ long classPK = rs.getLong("classPK")[ FD ]
Line_15 $$ while (rs.next()) -->Line_16 $$ long classPK = rs.getLong("classPK")[ CD ]
Line_16 $$ long classPK = rs.getLong("classPK")-->Line_18 $$ DLFileEntry dlFileEntry = DLFileEntryLocalServiceUtil.fetchDLFileEntry(classPK)[ FD ]
Line_14 $$ rs = ps.executeQuery()-->Line_24 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_14 $$ rs = ps.executeQuery()[ FD ]
Line_4 $$ ResultSet rs = null-->Line_16 $$ long classPK = rs.getLong("classPK")[ FD ]
Line_15 $$ while (rs.next()) -->Line_17 $$ long entryId = rs.getLong("entryId")[ CD ]
Line_18 $$ DLFileEntry dlFileEntry = DLFileEntryLocalServiceUtil.fetchDLFileEntry(classPK)-->Line_19 $$ if (dlFileEntry == null) [ FD ]
Line_14 $$ rs = ps.executeQuery()-->Line_15 $$ while (rs.next()) [ FD ]
Line_13 $$ ps = connection.prepareStatement(sb.toString())-->Line_14 $$ rs = ps.executeQuery()[ FD ]
Line_15 $$ while (rs.next()) -->Line_19 $$ if (dlFileEntry == null) [ CD ]
Line_17 $$ long entryId = rs.getLong("entryId")-->Line_20 $$ AssetEntryLocalServiceUtil.deleteAssetEntry(entryId)[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_10 $$ sb.append(classNameId)[ FD ]
Line_2 $$ protected void deleteOrphanedAssetEntries() throws Exception -->Line_3 $$ PreparedStatement ps = null[ CD ]
Line_13 $$ ps = connection.prepareStatement(sb.toString())-->Line_24 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_13 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_2 $$ protected void deleteOrphanedAssetEntries() throws Exception -->Line_4 $$ ResultSet rs = null[ CD ]
Line_6 $$ long classNameId = PortalUtil.getClassNameId(DLFileEntryConstants.getClassName())-->Line_10 $$ sb.append(classNameId)[ FD ]
Line_4 $$ ResultSet rs = null-->Line_17 $$ long entryId = rs.getLong("entryId")[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_11 $$ sb.append(" and classPK not in (select fileVersionId from ")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_24 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_7 $$ StringBundler sb = new StringBundler(5)-->Line_12 $$ sb.append("DLFileVersion)")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_14 $$ rs = ps.executeQuery()[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_13 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_4 $$ ResultSet rs = null-->Line_15 $$ while (rs.next()) [ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_24 $$ DataAccess.cleanUp(ps, rs)[ FD ]
