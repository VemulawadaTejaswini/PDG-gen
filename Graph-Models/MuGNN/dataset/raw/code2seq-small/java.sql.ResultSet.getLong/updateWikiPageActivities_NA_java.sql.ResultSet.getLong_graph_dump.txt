Line_6 $$ PreparedStatement ps = null-->Line_30 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_2 $$ protected void updateWikiPageActivities() throws Exception -->Line_4 $$ runSQL("delete from SocialActivity where classNameId = " + classNameId)[ CD ]
Line_10 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_30 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_5 $$ Connection con = null-->Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "resourcePrimKey, version from WikiPage")[ FD ]
Line_19 $$ double version = rs.getDouble("version")-->Line_21 $$ if (version > 1.0) [ FD ]
Line_22 $$ type = 2-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "resourcePrimKey, version from WikiPage")-->Line_30 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_20 $$ int type = 1-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_15 $$ long companyId = rs.getLong("companyId")-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_17 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ FD ]
Line_10 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "resourcePrimKey, version from WikiPage")[ FD ]
Line_13 $$ while (rs.next()) -->Line_15 $$ long companyId = rs.getLong("companyId")[ CD ]
Line_13 $$ while (rs.next()) -->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ CD ]
Line_14 $$ long groupId = rs.getLong("groupId")-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_17 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "resourcePrimKey, version from WikiPage")-->Line_12 $$ rs = ps.executeQuery()[ FD ]
Line_2 $$ protected void updateWikiPageActivities() throws Exception -->Line_3 $$ long classNameId = PortalUtil.getClassNameId("com.liferay.wiki.model.WikiPage")[ CD ]
Line_12 $$ rs = ps.executeQuery()-->Line_17 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ FD ]
Line_13 $$ while (rs.next()) -->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ CD ]
Line_12 $$ rs = ps.executeQuery()-->Line_15 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_20 $$ int type = 1-->Line_22 $$ type = 2[ FD ]
Line_9 $$ Set<String> keys = new HashSet()-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_16 $$ long userId = rs.getLong("userId")-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_12 $$ rs = ps.executeQuery()-->Line_19 $$ double version = rs.getDouble("version")[ FD ]
Line_25 $$ JSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject()-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_12 $$ rs = ps.executeQuery()[ FD ]
Line_12 $$ rs = ps.executeQuery()-->Line_18 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")[ FD ]
Line_13 $$ while (rs.next()) -->Line_14 $$ long groupId = rs.getLong("groupId")[ CD ]
Line_13 $$ while (rs.next()) -->Line_16 $$ long userId = rs.getLong("userId")[ CD ]
Line_7 $$ ResultSet rs = null-->Line_14 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_13 $$ while (rs.next()) -->Line_26 $$ extraDataJSONObject.put("version", version)[ CD ]
Line_12 $$ rs = ps.executeQuery()-->Line_14 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_12 $$ rs = ps.executeQuery()-->Line_13 $$ while (rs.next()) [ FD ]
Line_17 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_12 $$ rs = ps.executeQuery()-->Line_30 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_30 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_13 $$ while (rs.next()) [ FD ]
Line_18 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_2 $$ protected void updateWikiPageActivities() throws Exception -->Line_7 $$ ResultSet rs = null[ CD ]
Line_12 $$ rs = ps.executeQuery()-->Line_16 $$ long userId = rs.getLong("userId")[ FD ]
Line_13 $$ while (rs.next()) -->Line_18 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")[ CD ]
Line_16 $$ long userId = rs.getLong("userId")-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_20 $$ int type = 1-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_13 $$ while (rs.next()) -->Line_21 $$ if (version > 1.0) [ CD ]
Line_14 $$ long groupId = rs.getLong("groupId")-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_22 $$ type = 2-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_5 $$ Connection con = null-->Line_10 $$ con = DataAccess.getUpgradeOptimizedConnection()[ FD ]
Line_7 $$ ResultSet rs = null-->Line_19 $$ double version = rs.getDouble("version")[ FD ]
Line_18 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_3 $$ long classNameId = PortalUtil.getClassNameId("com.liferay.wiki.model.WikiPage")-->Line_27 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, resourcePrimKey, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_3 $$ long classNameId = PortalUtil.getClassNameId("com.liferay.wiki.model.WikiPage")-->Line_24 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, resourcePrimKey, type)[ FD ]
Line_5 $$ Connection con = null-->Line_30 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_13 $$ while (rs.next()) -->Line_25 $$ JSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject()[ CD ]
Line_13 $$ while (rs.next()) -->Line_20 $$ int type = 1[ CD ]
Line_6 $$ PreparedStatement ps = null-->Line_12 $$ rs = ps.executeQuery()[ FD ]
Line_7 $$ ResultSet rs = null-->Line_15 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_13 $$ while (rs.next()) -->Line_19 $$ double version = rs.getDouble("version")[ CD ]
Line_2 $$ protected void updateWikiPageActivities() throws Exception -->Line_5 $$ Connection con = null[ CD ]
Line_25 $$ JSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject()-->Line_26 $$ extraDataJSONObject.put("version", version)[ FD ]
Line_21 $$ if (version > 1.0) -->Line_22 $$ type = 2[ CD ]
Line_13 $$ while (rs.next()) -->Line_17 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ CD ]
Line_7 $$ ResultSet rs = null-->Line_18 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")[ FD ]
Line_7 $$ ResultSet rs = null-->Line_16 $$ long userId = rs.getLong("userId")[ FD ]
Line_6 $$ PreparedStatement ps = null-->Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "resourcePrimKey, version from WikiPage")[ FD ]
Line_2 $$ protected void updateWikiPageActivities() throws Exception -->Line_6 $$ PreparedStatement ps = null[ CD ]
Line_19 $$ double version = rs.getDouble("version")-->Line_26 $$ extraDataJSONObject.put("version", version)[ FD ]
