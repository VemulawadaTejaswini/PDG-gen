Line_19 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_27 $$ if (!update) -->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ CD ]
Line_8 $$ ps = con.prepareStatement("select * from IGFolder order by folderId asc")-->Line_9 $$ rs = ps.executeQuery()[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_11 $$ while (rs.next()) [ FD ]
Line_20 $$ long parentFolderId = rs.getLong("parentFolderId")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_11 $$ while (rs.next()) -->Line_12 $$ String uuid = rs.getString("uuid_")[ CD ]
Line_5 $$ ResultSet rs = null-->Line_20 $$ long parentFolderId = rs.getLong("parentFolderId")[ FD ]
Line_13 $$ long folderId = rs.getLong("folderId")-->Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)[ FD ]
Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)-->Line_27 $$ if (!update) [ FD ]
Line_10 $$ Map<Long, Long> folderIds = new HashMap()-->Line_23 $$ if (folderIds.containsKey(parentFolderId)) [ FD ]
Line_5 $$ ResultSet rs = null-->Line_12 $$ String uuid = rs.getString("uuid_")[ FD ]
Line_12 $$ String uuid = rs.getString("uuid_")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_11 $$ while (rs.next()) -->Line_18 $$ Timestamp createDate = rs.getTimestamp("createDate")[ CD ]
Line_9 $$ rs = ps.executeQuery()-->Line_22 $$ String description = rs.getString("description")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_17 $$ String userName = rs.getString("userName")[ FD ]
Line_22 $$ String description = rs.getString("description")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_14 $$ long groupId = rs.getLong("groupId")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_17 $$ String userName = rs.getString("userName")[ FD ]
Line_11 $$ while (rs.next()) -->Line_16 $$ long userId = rs.getLong("userId")[ CD ]
Line_9 $$ rs = ps.executeQuery()-->Line_33 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_33 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_5 $$ ResultSet rs = null-->Line_21 $$ String name = rs.getString("name")[ FD ]
Line_20 $$ long parentFolderId = rs.getLong("parentFolderId")-->Line_23 $$ if (folderIds.containsKey(parentFolderId)) [ FD ]
Line_18 $$ Timestamp createDate = rs.getTimestamp("createDate")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_18 $$ Timestamp createDate = rs.getTimestamp("createDate")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_22 $$ String description = rs.getString("description")[ FD ]
Line_15 $$ long companyId = rs.getLong("companyId")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_11 $$ while (rs.next()) -->Line_17 $$ String userName = rs.getString("userName")[ CD ]
Line_11 $$ while (rs.next()) -->Line_22 $$ String description = rs.getString("description")[ CD ]
Line_5 $$ ResultSet rs = null-->Line_15 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_16 $$ long userId = rs.getLong("userId")[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_19 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_20 $$ long parentFolderId = rs.getLong("parentFolderId")[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_15 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_13 $$ long folderId = rs.getLong("folderId")[ FD ]
Line_3 $$ Connection con = null-->Line_8 $$ ps = con.prepareStatement("select * from IGFolder order by folderId asc")[ FD ]
Line_2 $$ protected void updateIGFolderEntries() throws Exception -->Line_5 $$ ResultSet rs = null[ CD ]
Line_10 $$ Map<Long, Long> folderIds = new HashMap()-->Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)[ FD ]
Line_11 $$ while (rs.next()) -->Line_19 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ CD ]
Line_24 $$ parentFolderId = folderIds.get(parentFolderId)-->Line_23 $$ if (folderIds.containsKey(parentFolderId)) [ FD ]
Line_5 $$ ResultSet rs = null-->Line_18 $$ Timestamp createDate = rs.getTimestamp("createDate")[ FD ]
Line_3 $$ Connection con = null-->Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()[ FD ]
Line_16 $$ long userId = rs.getLong("userId")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_8 $$ ps = con.prepareStatement("select * from IGFolder order by folderId asc")[ FD ]
Line_11 $$ while (rs.next()) -->Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)[ CD ]
Line_20 $$ long parentFolderId = rs.getLong("parentFolderId")-->Line_24 $$ parentFolderId = folderIds.get(parentFolderId)[ FD ]
Line_5 $$ ResultSet rs = null-->Line_14 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_11 $$ while (rs.next()) -->Line_21 $$ String name = rs.getString("name")[ CD ]
Line_5 $$ ResultSet rs = null-->Line_13 $$ long folderId = rs.getLong("folderId")[ FD ]
Line_5 $$ ResultSet rs = null-->Line_9 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_19 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ FD ]
Line_20 $$ long parentFolderId = rs.getLong("parentFolderId")-->Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)[ FD ]
Line_5 $$ ResultSet rs = null-->Line_11 $$ while (rs.next()) [ FD ]
Line_11 $$ while (rs.next()) -->Line_27 $$ if (!update) [ CD ]
Line_2 $$ protected void updateIGFolderEntries() throws Exception -->Line_3 $$ Connection con = null[ CD ]
Line_11 $$ while (rs.next()) -->Line_20 $$ long parentFolderId = rs.getLong("parentFolderId")[ CD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_33 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_21 $$ String name = rs.getString("name")-->Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)[ FD ]
Line_10 $$ Map<Long, Long> folderIds = new HashMap()-->Line_24 $$ parentFolderId = folderIds.get(parentFolderId)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_9 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_33 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_21 $$ String name = rs.getString("name")[ FD ]
Line_2 $$ protected void updateIGFolderEntries() throws Exception -->Line_4 $$ PreparedStatement ps = null[ CD ]
Line_23 $$ if (folderIds.containsKey(parentFolderId)) -->Line_24 $$ parentFolderId = folderIds.get(parentFolderId)[ CD ]
Line_11 $$ while (rs.next()) -->Line_15 $$ long companyId = rs.getLong("companyId")[ CD ]
Line_21 $$ String name = rs.getString("name")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_11 $$ while (rs.next()) -->Line_14 $$ long groupId = rs.getLong("groupId")[ CD ]
Line_4 $$ PreparedStatement ps = null-->Line_8 $$ ps = con.prepareStatement("select * from IGFolder order by folderId asc")[ FD ]
Line_17 $$ String userName = rs.getString("userName")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_12 $$ String uuid = rs.getString("uuid_")[ FD ]
Line_24 $$ parentFolderId = folderIds.get(parentFolderId)-->Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)[ FD ]
Line_14 $$ long groupId = rs.getLong("groupId")-->Line_26 $$ boolean update = updateIGImageFolderId(groupId, name, parentFolderId, folderId, folderIds)[ FD ]
Line_3 $$ Connection con = null-->Line_33 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_5 $$ ResultSet rs = null-->Line_16 $$ long userId = rs.getLong("userId")[ FD ]
Line_8 $$ ps = con.prepareStatement("select * from IGFolder order by folderId asc")-->Line_33 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_11 $$ while (rs.next()) -->Line_13 $$ long folderId = rs.getLong("folderId")[ CD ]
Line_11 $$ while (rs.next()) -->Line_23 $$ if (folderIds.containsKey(parentFolderId)) [ CD ]
Line_24 $$ parentFolderId = folderIds.get(parentFolderId)-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_14 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_13 $$ long folderId = rs.getLong("folderId")-->Line_28 $$ addDLFolderEntry(uuid, folderId, groupId, companyId, userId, userName, createDate, modifiedDate, groupId, parentFolderId, name, description, modifiedDate)[ FD ]
