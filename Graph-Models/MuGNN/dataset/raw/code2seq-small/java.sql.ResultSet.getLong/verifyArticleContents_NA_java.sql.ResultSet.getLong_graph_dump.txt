Line_12 $$ JournalArticle article = _journalArticleLocalService.getArticle(id)-->Line_22 $$ _log.error("Unable to update content for article " + article.getId(), e)[ FD ]
Line_3 $$ Connection con = null-->Line_8 $$ ps = con.prepareStatement("select id_ from JournalArticle where (content like " + "'%document_library%' or content like '%link_to_layout%')" + " and DDMStructureKey != ''")[ FD ]
Line_11 $$ long id = rs.getLong("id_")-->Line_12 $$ JournalArticle article = _journalArticleLocalService.getArticle(id)[ FD ]
Line_16 $$ for (Element element : rootElement.elements()) -->Line_17 $$ updateElement(article.getGroupId(), element)[ FD ]
Line_5 $$ ResultSet rs = null-->Line_11 $$ long id = rs.getLong("id_")[ FD ]
Line_8 $$ ps = con.prepareStatement("select id_ from JournalArticle where (content like " + "'%document_library%' or content like '%link_to_layout%')" + " and DDMStructureKey != ''")-->Line_9 $$ rs = ps.executeQuery()[ FD ]
Line_12 $$ JournalArticle article = _journalArticleLocalService.getArticle(id)-->Line_17 $$ updateElement(article.getGroupId(), element)[ FD ]
Line_4 $$ PreparedStatement ps = null-->Line_9 $$ rs = ps.executeQuery()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_9 $$ rs = ps.executeQuery()[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_11 $$ long id = rs.getLong("id_")[ FD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_26 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_14 $$ Document document = SAXReaderUtil.read(article.getContent())-->Line_15 $$ Element rootElement = document.getRootElement()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_10 $$ while (rs.next()) [ FD ]
Line_2 $$ protected void verifyArticleContents() throws Exception -->Line_5 $$ ResultSet rs = null[ CD ]
Line_2 $$ protected void verifyArticleContents() throws Exception -->Line_3 $$ Connection con = null[ CD ]
Line_4 $$ PreparedStatement ps = null-->Line_26 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_8 $$ ps = con.prepareStatement("select id_ from JournalArticle where (content like " + "'%document_library%' or content like '%link_to_layout%')" + " and DDMStructureKey != ''")[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_10 $$ while (rs.next()) [ FD ]
Line_12 $$ JournalArticle article = _journalArticleLocalService.getArticle(id)-->Line_19 $$ article.setContent(document.asXML())[ FD ]
Line_10 $$ while (rs.next()) -->Line_11 $$ long id = rs.getLong("id_")[ CD ]
Line_3 $$ Connection con = null-->Line_7 $$ con = DataAccess.getUpgradeOptimizedConnection()[ FD ]
Line_5 $$ ResultSet rs = null-->Line_26 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_9 $$ rs = ps.executeQuery()-->Line_26 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_3 $$ Connection con = null-->Line_26 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_10 $$ while (rs.next()) -->Line_12 $$ JournalArticle article = _journalArticleLocalService.getArticle(id)[ CD ]
Line_4 $$ PreparedStatement ps = null-->Line_8 $$ ps = con.prepareStatement("select id_ from JournalArticle where (content like " + "'%document_library%' or content like '%link_to_layout%')" + " and DDMStructureKey != ''")[ FD ]
Line_14 $$ Document document = SAXReaderUtil.read(article.getContent())-->Line_19 $$ article.setContent(document.asXML())[ FD ]
Line_2 $$ protected void verifyArticleContents() throws Exception -->Line_4 $$ PreparedStatement ps = null[ CD ]
Line_12 $$ JournalArticle article = _journalArticleLocalService.getArticle(id)-->Line_20 $$ _journalArticleLocalService.updateJournalArticle(article)[ FD ]
Line_8 $$ ps = con.prepareStatement("select id_ from JournalArticle where (content like " + "'%document_library%' or content like '%link_to_layout%')" + " and DDMStructureKey != ''")-->Line_26 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_12 $$ JournalArticle article = _journalArticleLocalService.getArticle(id)-->Line_14 $$ Document document = SAXReaderUtil.read(article.getContent())[ FD ]
Line_15 $$ Element rootElement = document.getRootElement()-->Line_16 $$ for (Element element : rootElement.elements()) [ FD ]
