Line_2 $$ protected void updateArticles(long companyId, Map<String, Long> journalArticleTypesToAssetCategoryIds) throws Exception -->Line_18 $$ ps.setLong(1, companyId)[ FD ]
Line_20 $$ while (rs.next()) -->Line_28 $$ _assetEntryLocalService.addAssetCategoryAssetEntry(assetCategoryId, assetEntry)[ CD ]
Line_2 $$ protected void updateArticles(long companyId, Map<String, Long> journalArticleTypesToAssetCategoryIds) throws Exception -->Line_3 $$ PreparedStatement ps = null[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_16 $$ sb.append("tempJournalArticle.id_ is null")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_11 $$ sb.append("and (JournalArticle.articleId = ")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_20 $$ while (rs.next()) [ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_8 $$ sb.append("JournalArticle.type_ from JournalArticle ")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_10 $$ sb.append("(JournalArticle.groupId = tempJournalArticle.groupId) ")[ FD ]
Line_2 $$ protected void updateArticles(long companyId, Map<String, Long> journalArticleTypesToAssetCategoryIds) throws Exception -->Line_27 $$ long assetCategoryId = journalArticleTypesToAssetCategoryIds.get(type)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_14 $$ sb.append("tempJournalArticle.version) where ")[ FD ]
Line_19 $$ rs = ps.executeQuery()-->Line_20 $$ while (rs.next()) [ FD ]
Line_21 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")-->Line_22 $$ AssetEntry assetEntry = _assetEntryLocalService.fetchEntry(JournalArticle.class.getName(), resourcePrimKey)[ FD ]
Line_22 $$ AssetEntry assetEntry = _assetEntryLocalService.fetchEntry(JournalArticle.class.getName(), resourcePrimKey)-->Line_28 $$ _assetEntryLocalService.addAssetCategoryAssetEntry(assetCategoryId, assetEntry)[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_17 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_13 $$ sb.append(" (JournalArticle.version < ")[ FD ]
Line_2 $$ protected void updateArticles(long companyId, Map<String, Long> journalArticleTypesToAssetCategoryIds) throws Exception -->Line_4 $$ ResultSet rs = null[ CD ]
Line_19 $$ rs = ps.executeQuery()-->Line_31 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_15 $$ sb.append("JournalArticle.companyId = ? and ")[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_31 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_20 $$ while (rs.next()) -->Line_23 $$ if (assetEntry == null) [ CD ]
Line_27 $$ long assetCategoryId = journalArticleTypesToAssetCategoryIds.get(type)-->Line_28 $$ _assetEntryLocalService.addAssetCategoryAssetEntry(assetCategoryId, assetEntry)[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_18 $$ ps.setLong(1, companyId)[ FD ]
Line_17 $$ ps = connection.prepareStatement(sb.toString())-->Line_19 $$ rs = ps.executeQuery()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_7 $$ sb.append("select JournalArticle.resourcePrimKey, ")[ FD ]
Line_20 $$ while (rs.next()) -->Line_21 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")[ CD ]
Line_19 $$ rs = ps.executeQuery()-->Line_21 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_31 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_17 $$ ps = connection.prepareStatement(sb.toString())-->Line_31 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_20 $$ while (rs.next()) -->Line_22 $$ AssetEntry assetEntry = _assetEntryLocalService.fetchEntry(JournalArticle.class.getName(), resourcePrimKey)[ CD ]
Line_3 $$ PreparedStatement ps = null-->Line_19 $$ rs = ps.executeQuery()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_17 $$ ps = connection.prepareStatement(sb.toString())[ FD ]
Line_22 $$ AssetEntry assetEntry = _assetEntryLocalService.fetchEntry(JournalArticle.class.getName(), resourcePrimKey)-->Line_23 $$ if (assetEntry == null) [ FD ]
Line_26 $$ String type = rs.getString("type_")-->Line_27 $$ long assetCategoryId = journalArticleTypesToAssetCategoryIds.get(type)[ FD ]
Line_17 $$ ps = connection.prepareStatement(sb.toString())-->Line_18 $$ ps.setLong(1, companyId)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_9 $$ sb.append("left join JournalArticle tempJournalArticle on ")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_21 $$ long resourcePrimKey = rs.getLong("resourcePrimKey")[ FD ]
Line_20 $$ while (rs.next()) -->Line_27 $$ long assetCategoryId = journalArticleTypesToAssetCategoryIds.get(type)[ CD ]
Line_20 $$ while (rs.next()) -->Line_26 $$ String type = rs.getString("type_")[ CD ]
Line_4 $$ ResultSet rs = null-->Line_26 $$ String type = rs.getString("type_")[ FD ]
Line_19 $$ rs = ps.executeQuery()-->Line_26 $$ String type = rs.getString("type_")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_19 $$ rs = ps.executeQuery()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(10)-->Line_12 $$ sb.append("tempJournalArticle.articleId) and ")[ FD ]
