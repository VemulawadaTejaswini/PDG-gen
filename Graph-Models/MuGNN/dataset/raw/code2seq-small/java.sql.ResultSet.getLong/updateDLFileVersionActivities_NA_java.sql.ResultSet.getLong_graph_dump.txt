Line_14 $$ while (rs.next()) -->Line_19 $$ long fileEntryId = rs.getLong("fileEntryId")[ CD ]
Line_7 $$ ResultSet rs = null-->Line_21 $$ double version = rs.getDouble("version")[ FD ]
Line_14 $$ while (rs.next()) -->Line_21 $$ double version = rs.getDouble("version")[ CD ]
Line_14 $$ while (rs.next()) -->Line_17 $$ long userId = rs.getLong("userId")[ CD ]
Line_5 $$ Connection con = null-->Line_10 $$ con = DataAccess.getUpgradeOptimizedConnection()[ FD ]
Line_23 $$ if (version > 1.0) -->Line_24 $$ type = DLActivityKeys.UPDATE_FILE_ENTRY[ CD ]
Line_13 $$ rs = ps.executeQuery()-->Line_16 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_3 $$ long classNameId = PortalUtil.getClassNameId(DLFileEntry.class)-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_24 $$ type = DLActivityKeys.UPDATE_FILE_ENTRY-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_14 $$ while (rs.next()) -->Line_22 $$ int type = DLActivityKeys.ADD_FILE_ENTRY[ CD ]
Line_19 $$ long fileEntryId = rs.getLong("fileEntryId")-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_15 $$ long groupId = rs.getLong("groupId")-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_18 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_2 $$ protected void updateDLFileVersionActivities() throws Exception -->Line_6 $$ PreparedStatement ps = null[ CD ]
Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "fileEntryId, title, version from DLFileVersion " + "where status = ?")-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_6 $$ PreparedStatement ps = null-->Line_12 $$ ps.setInt(1, WorkflowConstants.STATUS_APPROVED)[ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_10 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_14 $$ while (rs.next()) -->Line_23 $$ if (version > 1.0) [ CD ]
Line_3 $$ long classNameId = PortalUtil.getClassNameId(DLFileEntry.class)-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_22 $$ int type = DLActivityKeys.ADD_FILE_ENTRY-->Line_24 $$ type = DLActivityKeys.UPDATE_FILE_ENTRY[ FD ]
Line_22 $$ int type = DLActivityKeys.ADD_FILE_ENTRY-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_21 $$ double version = rs.getDouble("version")[ FD ]
Line_24 $$ type = DLActivityKeys.UPDATE_FILE_ENTRY-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_15 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_20 $$ String title = rs.getString("title")[ FD ]
Line_2 $$ protected void updateDLFileVersionActivities() throws Exception -->Line_4 $$ runSQL("delete from SocialActivity where classNameId = " + classNameId)[ CD ]
Line_19 $$ long fileEntryId = rs.getLong("fileEntryId")-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_18 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ FD ]
Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "fileEntryId, title, version from DLFileVersion " + "where status = ?")-->Line_12 $$ ps.setInt(1, WorkflowConstants.STATUS_APPROVED)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_16 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_6 $$ PreparedStatement ps = null-->Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "fileEntryId, title, version from DLFileVersion " + "where status = ?")[ FD ]
Line_6 $$ PreparedStatement ps = null-->Line_13 $$ rs = ps.executeQuery()[ FD ]
Line_14 $$ while (rs.next()) -->Line_16 $$ long companyId = rs.getLong("companyId")[ CD ]
Line_7 $$ ResultSet rs = null-->Line_17 $$ long userId = rs.getLong("userId")[ FD ]
Line_27 $$ JSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject()-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_2 $$ protected void updateDLFileVersionActivities() throws Exception -->Line_5 $$ Connection con = null[ CD ]
Line_14 $$ while (rs.next()) -->Line_18 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ CD ]
Line_14 $$ while (rs.next()) -->Line_27 $$ JSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject()[ CD ]
Line_5 $$ Connection con = null-->Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "fileEntryId, title, version from DLFileVersion " + "where status = ?")[ FD ]
Line_2 $$ protected void updateDLFileVersionActivities() throws Exception -->Line_7 $$ ResultSet rs = null[ CD ]
Line_14 $$ while (rs.next()) -->Line_28 $$ extraDataJSONObject.put("title", title)[ CD ]
Line_18 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_27 $$ JSONObject extraDataJSONObject = JSONFactoryUtil.createJSONObject()-->Line_28 $$ extraDataJSONObject.put("title", title)[ FD ]
Line_17 $$ long userId = rs.getLong("userId")-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_21 $$ double version = rs.getDouble("version")-->Line_23 $$ if (version > 1.0) [ FD ]
Line_7 $$ ResultSet rs = null-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "fileEntryId, title, version from DLFileVersion " + "where status = ?")-->Line_13 $$ rs = ps.executeQuery()[ FD ]
Line_20 $$ String title = rs.getString("title")-->Line_28 $$ extraDataJSONObject.put("title", title)[ FD ]
Line_14 $$ while (rs.next()) -->Line_15 $$ long groupId = rs.getLong("groupId")[ CD ]
Line_14 $$ while (rs.next()) -->Line_20 $$ String title = rs.getString("title")[ CD ]
Line_14 $$ while (rs.next()) -->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ CD ]
Line_7 $$ ResultSet rs = null-->Line_19 $$ long fileEntryId = rs.getLong("fileEntryId")[ FD ]
Line_14 $$ while (rs.next()) -->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ CD ]
Line_5 $$ Connection con = null-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_15 $$ long groupId = rs.getLong("groupId")-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_14 $$ while (rs.next()) [ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_17 $$ long userId = rs.getLong("userId")[ FD ]
Line_6 $$ PreparedStatement ps = null-->Line_32 $$ DataAccess.cleanUp(con, ps, rs)[ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_14 $$ while (rs.next()) [ FD ]
Line_9 $$ Set<String> keys = new HashSet()-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_2 $$ protected void updateDLFileVersionActivities() throws Exception -->Line_3 $$ long classNameId = PortalUtil.getClassNameId(DLFileEntry.class)[ CD ]
Line_17 $$ long userId = rs.getLong("userId")-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_22 $$ int type = DLActivityKeys.ADD_FILE_ENTRY-->Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)[ FD ]
Line_16 $$ long companyId = rs.getLong("companyId")-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_7 $$ ResultSet rs = null-->Line_18 $$ Timestamp modifiedDate = rs.getTimestamp("modifiedDate")[ FD ]
Line_26 $$ modifiedDate = getUniqueModifiedDate(keys, groupId, userId, modifiedDate, classNameId, fileEntryId, type)-->Line_29 $$ addActivity(increment(), groupId, companyId, userId, modifiedDate, 0, classNameId, fileEntryId, type, extraDataJSONObject.toString(), 0)[ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_19 $$ long fileEntryId = rs.getLong("fileEntryId")[ FD ]
Line_7 $$ ResultSet rs = null-->Line_13 $$ rs = ps.executeQuery()[ FD ]
Line_13 $$ rs = ps.executeQuery()-->Line_15 $$ long groupId = rs.getLong("groupId")[ FD ]
Line_10 $$ con = DataAccess.getUpgradeOptimizedConnection()-->Line_11 $$ ps = con.prepareStatement("select groupId, companyId, userId, modifiedDate, " + "fileEntryId, title, version from DLFileVersion " + "where status = ?")[ FD ]
Line_7 $$ ResultSet rs = null-->Line_20 $$ String title = rs.getString("title")[ FD ]
