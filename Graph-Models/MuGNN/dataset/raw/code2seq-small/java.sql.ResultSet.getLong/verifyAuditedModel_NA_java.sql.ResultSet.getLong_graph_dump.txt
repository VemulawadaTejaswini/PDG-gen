Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_15 $$ sb.append(verifiableAuditedModel.getTableName())[ FD ]
Line_5 $$ try (Connection con = DataAccess.getUpgradeOptimizedConnection()) -->Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)[ FD ]
Line_28 $$ if (previousCompanyId != companyId) -->Line_30 $$ previousCompanyId = companyId[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_9 $$ sb.append(", companyId, userId")[ FD ]
Line_20 $$ long previousCompanyId = 0-->Line_28 $$ if (previousCompanyId != companyId) [ FD ]
Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)-->Line_35 $$ verifyAuditedModel(con, verifiableAuditedModel.getTableName(), verifiableAuditedModel.getPrimaryKeyColumnName(), primKey, auditedModelArray, verifiableAuditedModel.isUpdateDates())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_15 $$ sb.append(verifiableAuditedModel.getTableName())[ FD ]
Line_29 $$ auditedModelArray = getDefaultUserArray(con, companyId)-->Line_32 $$ if (auditedModelArray == null) [ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_4 $$ ResultSet rs = null[ CD ]
Line_10 $$ if (verifiableAuditedModel.getJoinByTableName() != null) -->Line_12 $$ sb.append(verifiableAuditedModel.getJoinByTableName())[ CD ]
Line_17 $$ ps = con.prepareStatement(sb.toString())-->Line_18 $$ rs = ps.executeQuery()[ FD ]
Line_21 $$ while (rs.next()) -->Line_23 $$ long primKey = rs.getLong(verifiableAuditedModel.getPrimaryKeyColumnName())[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_21 $$ while (rs.next()) [ FD ]
Line_26 $$ long relatedPrimKey = rs.getLong(verifiableAuditedModel.getJoinByTableName())-->Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)[ FD ]
Line_23 $$ long primKey = rs.getLong(verifiableAuditedModel.getPrimaryKeyColumnName())-->Line_35 $$ verifyAuditedModel(con, verifiableAuditedModel.getTableName(), verifiableAuditedModel.getPrimaryKeyColumnName(), primKey, auditedModelArray, verifiableAuditedModel.isUpdateDates())[ FD ]
Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)-->Line_32 $$ if (auditedModelArray == null) [ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_35 $$ verifyAuditedModel(con, verifiableAuditedModel.getTableName(), verifiableAuditedModel.getPrimaryKeyColumnName(), primKey, auditedModelArray, verifiableAuditedModel.isUpdateDates())[ FD ]
Line_20 $$ long previousCompanyId = 0-->Line_30 $$ previousCompanyId = companyId[ FD ]
Line_24 $$ long previousUserId = rs.getLong("userId")-->Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)[ FD ]
Line_21 $$ while (rs.next()) -->Line_25 $$ if (verifiableAuditedModel.getJoinByTableName() != null) [ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_22 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_38 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_21 $$ while (rs.next()) -->Line_24 $$ long previousUserId = rs.getLong("userId")[ CD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_25 $$ if (verifiableAuditedModel.getJoinByTableName() != null) [ FD ]
Line_28 $$ if (previousCompanyId != companyId) -->Line_29 $$ auditedModelArray = getDefaultUserArray(con, companyId)[ CD ]
Line_19 $$ Object[] auditedModelArray = null-->Line_32 $$ if (auditedModelArray == null) [ FD ]
Line_21 $$ while (rs.next()) -->Line_32 $$ if (auditedModelArray == null) [ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_38 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_30 $$ previousCompanyId = companyId-->Line_28 $$ if (previousCompanyId != companyId) [ FD ]
Line_19 $$ Object[] auditedModelArray = null-->Line_29 $$ auditedModelArray = getDefaultUserArray(con, companyId)[ FD ]
Line_19 $$ Object[] auditedModelArray = null-->Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)[ FD ]
Line_5 $$ try (Connection con = DataAccess.getUpgradeOptimizedConnection()) -->Line_35 $$ verifyAuditedModel(con, verifiableAuditedModel.getTableName(), verifiableAuditedModel.getPrimaryKeyColumnName(), primKey, auditedModelArray, verifiableAuditedModel.isUpdateDates())[ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_10 $$ if (verifiableAuditedModel.getJoinByTableName() != null) [ FD ]
Line_22 $$ long companyId = rs.getLong("companyId")-->Line_30 $$ previousCompanyId = companyId[ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_3 $$ PreparedStatement ps = null[ CD ]
Line_22 $$ long companyId = rs.getLong("companyId")-->Line_28 $$ if (previousCompanyId != companyId) [ FD ]
Line_5 $$ try (Connection con = DataAccess.getUpgradeOptimizedConnection()) -->Line_17 $$ ps = con.prepareStatement(sb.toString())[ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_17 $$ ps = con.prepareStatement(sb.toString())[ FD ]
Line_25 $$ if (verifiableAuditedModel.getJoinByTableName() != null) -->Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)[ CD ]
Line_18 $$ rs = ps.executeQuery()-->Line_24 $$ long previousUserId = rs.getLong("userId")[ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_8 $$ sb.append(verifiableAuditedModel.getPrimaryKeyColumnName())[ FD ]
Line_22 $$ long companyId = rs.getLong("companyId")-->Line_29 $$ auditedModelArray = getDefaultUserArray(con, companyId)[ FD ]
Line_17 $$ ps = con.prepareStatement(sb.toString())-->Line_38 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_4 $$ ResultSet rs = null-->Line_23 $$ long primKey = rs.getLong(verifiableAuditedModel.getPrimaryKeyColumnName())[ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_12 $$ sb.append(verifiableAuditedModel.getJoinByTableName())[ FD ]
Line_25 $$ if (verifiableAuditedModel.getJoinByTableName() != null) -->Line_28 $$ if (previousCompanyId != companyId) [ CD ]
Line_27 $$ auditedModelArray = getAuditedModelArray(con, verifiableAuditedModel.getRelatedModelName(), verifiableAuditedModel.getRelatedPKColumnName(), relatedPrimKey, verifiableAuditedModel.isAnonymousUserAllowed(), previousUserId)-->Line_29 $$ auditedModelArray = getDefaultUserArray(con, companyId)[ FD ]
Line_4 $$ ResultSet rs = null-->Line_26 $$ long relatedPrimKey = rs.getLong(verifiableAuditedModel.getJoinByTableName())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_12 $$ sb.append(verifiableAuditedModel.getJoinByTableName())[ FD ]
Line_4 $$ ResultSet rs = null-->Line_38 $$ DataAccess.cleanUp(ps, rs)[ FD ]
Line_10 $$ if (verifiableAuditedModel.getJoinByTableName() != null) -->Line_11 $$ sb.append(StringPool.COMMA_AND_SPACE)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_16 $$ sb.append(" where userName is null order by companyId")[ FD ]
Line_21 $$ while (rs.next()) -->Line_22 $$ long companyId = rs.getLong("companyId")[ CD ]
Line_3 $$ PreparedStatement ps = null-->Line_18 $$ rs = ps.executeQuery()[ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_26 $$ long relatedPrimKey = rs.getLong(verifiableAuditedModel.getJoinByTableName())[ FD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_26 $$ long relatedPrimKey = rs.getLong(verifiableAuditedModel.getJoinByTableName())[ FD ]
Line_19 $$ Object[] auditedModelArray = null-->Line_35 $$ verifyAuditedModel(con, verifiableAuditedModel.getTableName(), verifiableAuditedModel.getPrimaryKeyColumnName(), primKey, auditedModelArray, verifiableAuditedModel.isUpdateDates())[ FD ]
Line_5 $$ try (Connection con = DataAccess.getUpgradeOptimizedConnection()) -->Line_29 $$ auditedModelArray = getDefaultUserArray(con, companyId)[ FD ]
Line_3 $$ PreparedStatement ps = null-->Line_17 $$ ps = con.prepareStatement(sb.toString())[ FD ]
Line_21 $$ while (rs.next()) -->Line_35 $$ verifyAuditedModel(con, verifiableAuditedModel.getTableName(), verifiableAuditedModel.getPrimaryKeyColumnName(), primKey, auditedModelArray, verifiableAuditedModel.isUpdateDates())[ CD ]
Line_2 $$ protected void verifyAuditedModel(VerifiableAuditedModel verifiableAuditedModel) throws Exception -->Line_23 $$ long primKey = rs.getLong(verifiableAuditedModel.getPrimaryKeyColumnName())[ FD ]
Line_29 $$ auditedModelArray = getDefaultUserArray(con, companyId)-->Line_35 $$ verifyAuditedModel(con, verifiableAuditedModel.getTableName(), verifiableAuditedModel.getPrimaryKeyColumnName(), primKey, auditedModelArray, verifiableAuditedModel.isUpdateDates())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_11 $$ sb.append(StringPool.COMMA_AND_SPACE)[ FD ]
Line_4 $$ ResultSet rs = null-->Line_22 $$ long companyId = rs.getLong("companyId")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_14 $$ sb.append(" from ")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_18 $$ rs = ps.executeQuery()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_7 $$ sb.append("select ")[ FD ]
Line_4 $$ ResultSet rs = null-->Line_21 $$ while (rs.next()) [ FD ]
Line_18 $$ rs = ps.executeQuery()-->Line_23 $$ long primKey = rs.getLong(verifiableAuditedModel.getPrimaryKeyColumnName())[ FD ]
Line_4 $$ ResultSet rs = null-->Line_24 $$ long previousUserId = rs.getLong("userId")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(8)-->Line_8 $$ sb.append(verifiableAuditedModel.getPrimaryKeyColumnName())[ FD ]
Line_25 $$ if (verifiableAuditedModel.getJoinByTableName() != null) -->Line_26 $$ long relatedPrimKey = rs.getLong(verifiableAuditedModel.getJoinByTableName())[ CD ]
