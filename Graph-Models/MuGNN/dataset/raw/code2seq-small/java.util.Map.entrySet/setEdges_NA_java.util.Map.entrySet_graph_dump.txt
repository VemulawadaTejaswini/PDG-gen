Line_7 $$ DirectNode dest = graph.nodes.getWithKey(mapDestinationNodes.get(statid)[edge.edgetype == StatEdge.TYPE_CONTINUE ? 1 : 0])-->Line_9 $$ source.succs.add(dest)[ FD ]
Line_6 $$ DirectNode source = graph.nodes.getWithKey(sourceid)-->Line_12 $$ dest.preds.add(source)[ FD ]
Line_7 $$ DirectNode dest = graph.nodes.getWithKey(mapDestinationNodes.get(statid)[edge.edgetype == StatEdge.TYPE_CONTINUE ? 1 : 0])-->Line_8 $$ if (!source.succs.contains(dest)) [ FD ]
Line_4 $$ String sourceid = edge.sourceid-->Line_15 $$ graph.mapNegIfBranch.put(sourceid, dest.id)[ FD ]
Line_27 $$ if (i == 0 && arr[3] != null) -->Line_28 $$ graph.mapFinallyMonitorExceptionPathExits.put(ent.getKey(), dest.id)[ CD ]
Line_20 $$ List<FinallyPathWrapper> newLst = new ArrayList<FinallyPathWrapper>()-->Line_26 $$ newLst.add(new FinallyPathWrapper(arr[0], dest.id, enter.id))[ FD ]
Line_6 $$ DirectNode source = graph.nodes.getWithKey(sourceid)-->Line_11 $$ if (!dest.preds.contains(source)) [ FD ]
Line_8 $$ if (!source.succs.contains(dest)) -->Line_9 $$ source.succs.add(dest)[ CD ]
Line_4 $$ String sourceid = edge.sourceid-->Line_6 $$ DirectNode source = graph.nodes.getWithKey(sourceid)[ FD ]
Line_31 $$ if (!newLst.isEmpty()) -->Line_32 $$ (i == 0 ? graph.mapShortRangeFinallyPaths : graph.mapLongRangeFinallyPaths).put(ent.getKey(), new ArrayList<FinallyPathWrapper>(new HashSet<FinallyPathWrapper>(newLst)))[ CD ]
Line_5 $$ Integer statid = edge.statid-->Line_14 $$ if (mapPosIfBranch.containsKey(sourceid) && !statid.equals(mapPosIfBranch.get(sourceid))) [ FD ]
Line_2 $$ private void setEdges() -->Line_18 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_5 $$ Integer statid = edge.statid-->Line_7 $$ DirectNode dest = graph.nodes.getWithKey(mapDestinationNodes.get(statid)[edge.edgetype == StatEdge.TYPE_CONTINUE ? 1 : 0])[ FD ]
Line_11 $$ if (!dest.preds.contains(source)) -->Line_12 $$ dest.preds.add(source)[ CD ]
Line_14 $$ if (mapPosIfBranch.containsKey(sourceid) && !statid.equals(mapPosIfBranch.get(sourceid))) -->Line_15 $$ graph.mapNegIfBranch.put(sourceid, dest.id)[ CD ]
Line_19 $$ for (Entry<String, List<String[]>> ent : (i == 0 ? mapShortRangeFinallyPathIds : mapLongRangeFinallyPathIds).entrySet()) -->Line_28 $$ graph.mapFinallyMonitorExceptionPathExits.put(ent.getKey(), dest.id)[ FD ]
Line_4 $$ String sourceid = edge.sourceid-->Line_14 $$ if (mapPosIfBranch.containsKey(sourceid) && !statid.equals(mapPosIfBranch.get(sourceid))) [ FD ]
Line_19 $$ for (Entry<String, List<String[]>> ent : (i == 0 ? mapShortRangeFinallyPathIds : mapLongRangeFinallyPathIds).entrySet()) -->Line_21 $$ List<String[]> lst = ent.getValue()[ FD ]
Line_20 $$ List<FinallyPathWrapper> newLst = new ArrayList<FinallyPathWrapper>()-->Line_31 $$ if (!newLst.isEmpty()) [ FD ]
Line_19 $$ for (Entry<String, List<String[]>> ent : (i == 0 ? mapShortRangeFinallyPathIds : mapLongRangeFinallyPathIds).entrySet()) -->Line_32 $$ (i == 0 ? graph.mapShortRangeFinallyPaths : graph.mapLongRangeFinallyPaths).put(ent.getKey(), new ArrayList<FinallyPathWrapper>(new HashSet<FinallyPathWrapper>(newLst)))[ FD ]
