Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_40 $$ final IndexTemplateMetaData template = templateBuilder.build()[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_4 $$ updatedSettingsBuilder.put(request.settings).normalizePrefix(IndexMetaData.INDEX_SETTING_PREFIX)[ CD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_17 $$ listener.onFailure(e)[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_7 $$ listener.onFailure(new IllegalArgumentException("index_template must provide a name"))[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_56 $$ listener.onResponse(new PutResponse(true, template))[ CD ]
Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_34 $$ templateBuilder.putCustom(entry.getKey(), entry.getValue())[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_53 $$ return ClusterState.builder(currentState).metaData(builder).build()[ CD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_46 $$ listener.onFailure(t)[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_52 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData()).put(template)[ FD ]
Line_40 $$ final IndexTemplateMetaData template = templateBuilder.build()-->Line_52 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData()).put(template)[ FD ]
Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()-->Line_5 $$ request.settings(updatedSettingsBuilder.build())[ FD ]
Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)-->Line_31 $$ templateBuilder.putAlias(aliasMetaData)[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_53 $$ return ClusterState.builder(currentState).metaData(builder).build()[ FD ]
Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)-->Line_27 $$ templateBuilder.putMapping(entry.getKey(), entry.getValue())[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_46 $$ listener.onFailure(t)[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()[ CD ]
Line_3 $$ Settings.Builder updatedSettingsBuilder = Settings.settingsBuilder()-->Line_4 $$ updatedSettingsBuilder.put(request.settings).normalizePrefix(IndexMetaData.INDEX_SETTING_PREFIX)[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_11 $$ listener.onFailure(new IllegalArgumentException("index_template must provide a template"))[ FD ]
Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)-->Line_23 $$ templateBuilder.order(request.order)[ FD ]
Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_23 $$ templateBuilder.order(request.order)[ FD ]
Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)-->Line_25 $$ templateBuilder.settings(request.settings)[ FD ]
Line_29 $$ for (Alias alias : request.aliases) -->Line_30 $$ AliasMetaData aliasMetaData = AliasMetaData.builder(alias.name()).filter(alias.filter()).indexRouting(alias.indexRouting()).searchRouting(alias.searchRouting()).build()[ FD ]
Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_31 $$ templateBuilder.putAlias(aliasMetaData)[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_37 $$ listener.onFailure(e)[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_43 $$ return request.masterTimeout[ CD ]
Line_52 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData()).put(template)-->Line_53 $$ return ClusterState.builder(currentState).metaData(builder).build()[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_15 $$ validate(request)[ FD ]
Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)-->Line_40 $$ final IndexTemplateMetaData template = templateBuilder.build()[ FD ]
Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_24 $$ templateBuilder.template(request.template)[ FD ]
Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)-->Line_34 $$ templateBuilder.putCustom(entry.getKey(), entry.getValue())[ FD ]
Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_25 $$ templateBuilder.settings(request.settings)[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_46 $$ listener.onFailure(t)[ CD ]
Line_10 $$ if (request.template == null) -->Line_12 $$ return[ CD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_56 $$ listener.onResponse(new PutResponse(true, template))[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_5 $$ request.settings(updatedSettingsBuilder.build())[ CD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_20 $$ IndexTemplateMetaData.Builder templateBuilder[ CD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_49 $$ if (request.create && currentState.metaData().templates().containsKey(request.name)) [ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_40 $$ final IndexTemplateMetaData template = templateBuilder.build()[ CD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_6 $$ if (request.name == null) [ CD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) [ CD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_10 $$ if (request.template == null) [ CD ]
Line_30 $$ AliasMetaData aliasMetaData = AliasMetaData.builder(alias.name()).filter(alias.filter()).indexRouting(alias.indexRouting()).searchRouting(alias.searchRouting()).build()-->Line_31 $$ templateBuilder.putAlias(aliasMetaData)[ FD ]
Line_26 $$ for (Map.Entry<String, String> entry : request.mappings.entrySet()) -->Line_34 $$ templateBuilder.putCustom(entry.getKey(), entry.getValue())[ FD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_52 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData()).put(template)[ CD ]
Line_10 $$ if (request.template == null) -->Line_11 $$ listener.onFailure(new IllegalArgumentException("index_template must provide a template"))[ CD ]
Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)[ FD ]
Line_2 $$ public void putTemplate(final PutRequest request, final PutListener listener) -->Line_5 $$ request.settings(updatedSettingsBuilder.build())[ FD ]
Line_6 $$ if (request.name == null) -->Line_8 $$ return[ CD ]
Line_20 $$ IndexTemplateMetaData.Builder templateBuilder-->Line_27 $$ templateBuilder.putMapping(entry.getKey(), entry.getValue())[ FD ]
Line_26 $$ for (Map.Entry<String, String> entry : request.mappings.entrySet()) -->Line_27 $$ templateBuilder.putMapping(entry.getKey(), entry.getValue())[ FD ]
Line_22 $$ templateBuilder = IndexTemplateMetaData.builder(request.name)-->Line_24 $$ templateBuilder.template(request.template)[ FD ]
Line_6 $$ if (request.name == null) -->Line_7 $$ listener.onFailure(new IllegalArgumentException("index_template must provide a name"))[ CD ]
Line_41 $$ clusterService.submitStateUpdateTask("create-index-template [" + request.name + "], cause [" + request.cause + "]", new ClusterStateUpdateTask(Priority.URGENT) -->Line_49 $$ if (request.create && currentState.metaData().templates().containsKey(request.name)) [ CD ]
