Line_4 $$ Map<?, ?> m = type.getSerializer().deserializeForNativeProtocol(value, version)-->Line_5 $$ Map<ByteBuffer, ByteBuffer> map = new LinkedHashMap(m.size())[ FD ]
Line_5 $$ Map<ByteBuffer, ByteBuffer> map = new LinkedHashMap(m.size())-->Line_6 $$ map.put(type.getKeysType().decompose(entry.getKey()), type.getValuesType().decompose(entry.getValue()))[ FD ]
Line_2 $$ public static Value fromSerialized(ByteBuffer value, MapType type, int version) throws InvalidRequestException -->Line_6 $$ map.put(type.getKeysType().decompose(entry.getKey()), type.getValuesType().decompose(entry.getValue()))[ FD ]
Line_2 $$ public static Value fromSerialized(ByteBuffer value, MapType type, int version) throws InvalidRequestException -->Line_4 $$ Map<?, ?> m = type.getSerializer().deserializeForNativeProtocol(value, version)[ FD ]
Line_4 $$ Map<?, ?> m = type.getSerializer().deserializeForNativeProtocol(value, version)-->Line_6 $$ for (Map.Entry<?, ?> entry : m.entrySet()) map.put(type.getKeysType().decompose(entry.getKey()), type.getValuesType().decompose(entry.getValue()))[ FD ]
