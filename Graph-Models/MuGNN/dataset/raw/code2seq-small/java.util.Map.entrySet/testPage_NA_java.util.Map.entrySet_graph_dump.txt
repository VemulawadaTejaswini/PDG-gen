Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_10 $$ view.render()[ CD ]
Line_4 $$ View view = injector.getInstance(page)-->Line_7 $$ view.set(entry.getKey(), entry.getValue())[ FD ]
Line_4 $$ View view = injector.getInstance(page)-->Line_10 $$ view.render()[ FD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_5 $$ if (params != null) [ CD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_4 $$ View view = injector.getInstance(page)[ FD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_3 $$ Injector injector = createMockInjector(api, impl, modules)[ FD ]
Line_6 $$ for (Map.Entry<String, String> entry : params.entrySet()) -->Line_7 $$ view.set(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_11 $$ flushOutput(injector)[ CD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_4 $$ View view = injector.getInstance(page)[ CD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_5 $$ if (params != null) [ FD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_12 $$ return injector[ CD ]
Line_3 $$ Injector injector = createMockInjector(api, impl, modules)-->Line_11 $$ flushOutput(injector)[ FD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_3 $$ Injector injector = createMockInjector(api, impl, modules)[ CD ]
Line_3 $$ Injector injector = createMockInjector(api, impl, modules)-->Line_4 $$ View view = injector.getInstance(page)[ FD ]
Line_2 $$ public static <T> Injector testPage(Class<? extends View> page, Class<T> api, T impl, Map<String, String> params, Module... modules) -->Line_6 $$ for (Map.Entry<String, String> entry : params.entrySet()) [ FD ]
