Line_5 $$ FailureInfo failureInfo = queryInfo.getFailureInfo()-->Line_6 $$ String failureType = failureInfo == null ? null : failureInfo.getType()[ FD ]
Line_15 $$ TaskInfo task = null-->Line_18 $$ task = stageInfo.getTasks().stream().filter( taskInfo -> taskInfo.getState() == TaskState.FAILED).findFirst().orElse(null)[ FD ]
Line_16 $$ StageInfo stageInfo = queryInfo.getOutputStage()-->Line_18 $$ task = stageInfo.getTasks().stream().filter( taskInfo -> taskInfo.getState() == TaskState.FAILED).findFirst().orElse(null)[ FD ]
Line_2 $$ public void completionEvent(QueryInfo queryInfo) -->Line_4 $$ QueryStats queryStats = queryInfo.getQueryStats()[ FD ]
Line_8 $$ ImmutableMap.Builder<String, String> mergedProperties = ImmutableMap.builder()-->Line_12 $$ mergedProperties.put(catalogEntry.getKey() + "." + entry.getKey(), entry.getValue())[ FD ]
Line_10 $$ for (Map.Entry<String, Map<String, String>> catalogEntry : queryInfo.getSession().getCatalogProperties().entrySet()) -->Line_12 $$ mergedProperties.put(catalogEntry.getKey() + "." + entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public void completionEvent(QueryInfo queryInfo) -->Line_22 $$ eventClient.post(new QueryCompletionEvent(queryInfo.getQueryId(), queryInfo.getSession().getUser(), queryInfo.getSession().getPrincipal().orElse(null), queryInfo.getSession().getSource().orElse(null), serverVersion, environment, queryInfo.getSession().getCatalog().orElse(null), queryInfo.getSession().getSchema().orElse(null), queryInfo.getSession().getRemoteUserAddress().orElse(null), queryInfo.getSession().getUserAgent().orElse(null), queryInfo.getState(), queryInfo.getSelf(), queryInfo.getFieldNames(), queryInfo.getQuery(), queryStats.getPeakMemoryReservation().toBytes(), queryStats.getCreateTime(), queryStats.getExecutionStartTime(), queryStats.getEndTime(), queryStats.getQueuedTime(), queryStats.getAnalysisTime(), queryStats.getDistributedPlanningTime(), queryStats.getTotalScheduledTime(), queryStats.getTotalCpuTime(), queryStats.getRawInputDataSize(), queryStats.getRawInputPositions(), queryStats.getTotalDrivers(), queryInfo.getErrorCode(), failureType, failureMessage, failureTask, failureHost, objectMapper.writeValueAsString(queryInfo.getOutputStage()), objectMapper.writeValueAsString(queryInfo.getFailureInfo()), objectMapper.writeValueAsString(queryInfo.getInputs()), objectMapper.writeValueAsString(mergedProperties.build())))[ FD ]
Line_5 $$ FailureInfo failureInfo = queryInfo.getFailureInfo()-->Line_7 $$ String failureMessage = failureInfo == null ? null : failureInfo.getMessage()[ FD ]
Line_11 $$ for (Map.Entry<String, String> entry : catalogEntry.getValue().entrySet()) -->Line_12 $$ mergedProperties.put(catalogEntry.getKey() + "." + entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public void completionEvent(QueryInfo queryInfo) -->Line_16 $$ StageInfo stageInfo = queryInfo.getOutputStage()[ FD ]
Line_4 $$ QueryStats queryStats = queryInfo.getQueryStats()-->Line_22 $$ eventClient.post(new QueryCompletionEvent(queryInfo.getQueryId(), queryInfo.getSession().getUser(), queryInfo.getSession().getPrincipal().orElse(null), queryInfo.getSession().getSource().orElse(null), serverVersion, environment, queryInfo.getSession().getCatalog().orElse(null), queryInfo.getSession().getSchema().orElse(null), queryInfo.getSession().getRemoteUserAddress().orElse(null), queryInfo.getSession().getUserAgent().orElse(null), queryInfo.getState(), queryInfo.getSelf(), queryInfo.getFieldNames(), queryInfo.getQuery(), queryStats.getPeakMemoryReservation().toBytes(), queryStats.getCreateTime(), queryStats.getExecutionStartTime(), queryStats.getEndTime(), queryStats.getQueuedTime(), queryStats.getAnalysisTime(), queryStats.getDistributedPlanningTime(), queryStats.getTotalScheduledTime(), queryStats.getTotalCpuTime(), queryStats.getRawInputDataSize(), queryStats.getRawInputPositions(), queryStats.getTotalDrivers(), queryInfo.getErrorCode(), failureType, failureMessage, failureTask, failureHost, objectMapper.writeValueAsString(queryInfo.getOutputStage()), objectMapper.writeValueAsString(queryInfo.getFailureInfo()), objectMapper.writeValueAsString(queryInfo.getInputs()), objectMapper.writeValueAsString(mergedProperties.build())))[ FD ]
Line_15 $$ TaskInfo task = null-->Line_21 $$ String failureTask = task == null ? null : task.getTaskId().toString()[ FD ]
Line_18 $$ task = stageInfo.getTasks().stream().filter( taskInfo -> taskInfo.getState() == TaskState.FAILED).findFirst().orElse(null)-->Line_20 $$ String failureHost = task == null ? null : task.getSelf().getHost()[ FD ]
Line_2 $$ public void completionEvent(QueryInfo queryInfo) -->Line_23 $$ logQueryTimeline(queryInfo)[ FD ]
Line_8 $$ ImmutableMap.Builder<String, String> mergedProperties = ImmutableMap.builder()-->Line_22 $$ eventClient.post(new QueryCompletionEvent(queryInfo.getQueryId(), queryInfo.getSession().getUser(), queryInfo.getSession().getPrincipal().orElse(null), queryInfo.getSession().getSource().orElse(null), serverVersion, environment, queryInfo.getSession().getCatalog().orElse(null), queryInfo.getSession().getSchema().orElse(null), queryInfo.getSession().getRemoteUserAddress().orElse(null), queryInfo.getSession().getUserAgent().orElse(null), queryInfo.getState(), queryInfo.getSelf(), queryInfo.getFieldNames(), queryInfo.getQuery(), queryStats.getPeakMemoryReservation().toBytes(), queryStats.getCreateTime(), queryStats.getExecutionStartTime(), queryStats.getEndTime(), queryStats.getQueuedTime(), queryStats.getAnalysisTime(), queryStats.getDistributedPlanningTime(), queryStats.getTotalScheduledTime(), queryStats.getTotalCpuTime(), queryStats.getRawInputDataSize(), queryStats.getRawInputPositions(), queryStats.getTotalDrivers(), queryInfo.getErrorCode(), failureType, failureMessage, failureTask, failureHost, objectMapper.writeValueAsString(queryInfo.getOutputStage()), objectMapper.writeValueAsString(queryInfo.getFailureInfo()), objectMapper.writeValueAsString(queryInfo.getInputs()), objectMapper.writeValueAsString(mergedProperties.build())))[ FD ]
Line_15 $$ TaskInfo task = null-->Line_20 $$ String failureHost = task == null ? null : task.getSelf().getHost()[ FD ]
Line_17 $$ if (stageInfo != null) -->Line_18 $$ task = stageInfo.getTasks().stream().filter( taskInfo -> taskInfo.getState() == TaskState.FAILED).findFirst().orElse(null)[ CD ]
Line_16 $$ StageInfo stageInfo = queryInfo.getOutputStage()-->Line_17 $$ if (stageInfo != null) [ FD ]
Line_2 $$ public void completionEvent(QueryInfo queryInfo) -->Line_5 $$ FailureInfo failureInfo = queryInfo.getFailureInfo()[ FD ]
Line_2 $$ public void completionEvent(QueryInfo queryInfo) -->Line_10 $$ for (Map.Entry<String, Map<String, String>> catalogEntry : queryInfo.getSession().getCatalogProperties().entrySet()) [ FD ]
Line_2 $$ public void completionEvent(QueryInfo queryInfo) -->Line_9 $$ mergedProperties.putAll(queryInfo.getSession().getSystemProperties())[ FD ]
Line_18 $$ task = stageInfo.getTasks().stream().filter( taskInfo -> taskInfo.getState() == TaskState.FAILED).findFirst().orElse(null)-->Line_21 $$ String failureTask = task == null ? null : task.getTaskId().toString()[ FD ]
Line_10 $$ for (Map.Entry<String, Map<String, String>> catalogEntry : queryInfo.getSession().getCatalogProperties().entrySet()) -->Line_11 $$ for (Map.Entry<String, String> entry : catalogEntry.getValue().entrySet()) [ FD ]
Line_8 $$ ImmutableMap.Builder<String, String> mergedProperties = ImmutableMap.builder()-->Line_9 $$ mergedProperties.putAll(queryInfo.getSession().getSystemProperties())[ FD ]
