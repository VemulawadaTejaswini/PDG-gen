Line_5 $$ for (Entry<String, Map<String, String>> catalogProperties : this.catalogProperties.entrySet()) -->Line_7 $$ for (Entry<String, String> entry : catalogProperties.getValue().entrySet()) [ FD ]
Line_3 $$ ImmutableMap.Builder<String, String> properties = ImmutableMap.builder()-->Line_8 $$ properties.put(catalog + "." + entry.getKey(), entry.getValue())[ FD ]
Line_3 $$ ImmutableMap.Builder<String, String> properties = ImmutableMap.builder()-->Line_11 $$ return new ClientSession(requireNonNull(server, "server is null"), identity.getUser(), source.orElse(null), catalog.orElse(null), schema.orElse(null), timeZoneKey.getId(), locale, properties.build(), debug, clientRequestTimeout)[ FD ]
Line_2 $$ public ClientSession toClientSession(URI server, boolean debug, Duration clientRequestTimeout) -->Line_11 $$ return new ClientSession(requireNonNull(server, "server is null"), identity.getUser(), source.orElse(null), catalog.orElse(null), schema.orElse(null), timeZoneKey.getId(), locale, properties.build(), debug, clientRequestTimeout)[ CD ]
Line_5 $$ for (Entry<String, Map<String, String>> catalogProperties : this.catalogProperties.entrySet()) -->Line_6 $$ String catalog = catalogProperties.getKey()[ FD ]
Line_7 $$ for (Entry<String, String> entry : catalogProperties.getValue().entrySet()) -->Line_8 $$ properties.put(catalog + "." + entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public ClientSession toClientSession(URI server, boolean debug, Duration clientRequestTimeout) -->Line_3 $$ ImmutableMap.Builder<String, String> properties = ImmutableMap.builder()[ CD ]
Line_2 $$ public ClientSession toClientSession(URI server, boolean debug, Duration clientRequestTimeout) -->Line_11 $$ return new ClientSession(requireNonNull(server, "server is null"), identity.getUser(), source.orElse(null), catalog.orElse(null), schema.orElse(null), timeZoneKey.getId(), locale, properties.build(), debug, clientRequestTimeout)[ FD ]
Line_3 $$ ImmutableMap.Builder<String, String> properties = ImmutableMap.builder()-->Line_4 $$ properties.putAll(systemProperties)[ FD ]
Line_6 $$ String catalog = catalogProperties.getKey()-->Line_11 $$ return new ClientSession(requireNonNull(server, "server is null"), identity.getUser(), source.orElse(null), catalog.orElse(null), schema.orElse(null), timeZoneKey.getId(), locale, properties.build(), debug, clientRequestTimeout)[ FD ]
Line_2 $$ public ClientSession toClientSession(URI server, boolean debug, Duration clientRequestTimeout) -->Line_4 $$ properties.putAll(systemProperties)[ CD ]
