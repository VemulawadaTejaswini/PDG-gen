Line_11 $$ ServletContext servletContext = (ServletContext) request.getAttribute(WebKeys.CTX)-->Line_12 $$ InvokerPortlet invokerPortlet = PortletInstanceFactoryUtil.create(portlet, servletContext)[ FD ]
Line_34 $$ for (Map.Entry<String, String[]> entry : renderParameters.entrySet()) -->Line_36 $$ String[] value = entry.getValue()[ FD ]
Line_12 $$ InvokerPortlet invokerPortlet = PortletInstanceFactoryUtil.create(portlet, servletContext)-->Line_26 $$ invokerPortlet.processAction(actionRequestImpl, actionResponseImpl)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_3 $$ Layout layout = (Layout) request.getAttribute(WebKeys.LAYOUT)[ CD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_12 $$ InvokerPortlet invokerPortlet = PortletInstanceFactoryUtil.create(portlet, servletContext)[ CD ]
Line_4 $$ WindowState windowState = WindowStateFactory.getWindowState(ParamUtil.getString(request, "p_p_state"))-->Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)[ FD ]
Line_4 $$ WindowState windowState = WindowStateFactory.getWindowState(ParamUtil.getString(request, "p_p_state"))-->Line_5 $$ if (layout.isTypeControlPanel() && ((windowState == null) || windowState.equals(WindowState.NORMAL) || Validator.isNull(windowState.toString()))) [ FD ]
Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())-->Line_24 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(actionRequestImpl)[ FD ]
Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)-->Line_30 $$ String redirectLocation = actionResponseImpl.getRedirectLocation()[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_11 $$ ServletContext servletContext = (ServletContext) request.getAttribute(WebKeys.CTX)[ CD ]
Line_31 $$ if (Validator.isNull(redirectLocation) && portlet.isActionURLRedirect()) -->Line_33 $$ Map<String, String[]> renderParameters = actionResponseImpl.getRenderParameterMap()[ CD ]
Line_32 $$ PortletURL portletURL = new PortletURLImpl(actionRequestImpl, actionRequestImpl.getPortletName(), layout.getPlid(), PortletRequest.RENDER_PHASE)-->Line_39 $$ redirectLocation = portletURL.toString()[ FD ]
Line_8 $$ PortletMode portletMode = PortletModeFactory.getPortletMode(ParamUtil.getString(request, "p_p_mode"))-->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_3 $$ Layout layout = (Layout) request.getAttribute(WebKeys.LAYOUT)-->Line_28 $$ RenderParametersPool.put(request, layout.getPlid(), portlet.getPortletId(), actionResponseImpl.getRenderParameterMap())[ FD ]
Line_16 $$ if (_log.isDebugEnabled()) -->Line_17 $$ _log.debug("Content type " + contentType)[ CD ]
Line_14 $$ PortletContext portletContext = portletConfig.getPortletContext()-->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_13 $$ PortletConfig portletConfig = PortletConfigFactoryUtil.create(portlet, servletContext)-->Line_14 $$ PortletContext portletContext = portletConfig.getPortletContext()[ FD ]
Line_5 $$ if (layout.isTypeControlPanel() && ((windowState == null) || windowState.equals(WindowState.NORMAL) || Validator.isNull(windowState.toString()))) -->Line_6 $$ windowState = WindowState.MAXIMIZED[ CD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_11 $$ ServletContext servletContext = (ServletContext) request.getAttribute(WebKeys.CTX)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_13 $$ PortletConfig portletConfig = PortletConfigFactoryUtil.create(portlet, servletContext)[ CD ]
Line_6 $$ windowState = WindowState.MAXIMIZED-->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_28 $$ RenderParametersPool.put(request, layout.getPlid(), portlet.getPortletId(), actionResponseImpl.getRenderParameterMap())[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_4 $$ WindowState windowState = WindowStateFactory.getWindowState(ParamUtil.getString(request, "p_p_state"))[ FD ]
Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())-->Line_26 $$ invokerPortlet.processAction(actionRequestImpl, actionResponseImpl)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_9 $$ PortletPreferencesIds portletPreferencesIds = PortletPreferencesFactoryUtil.getPortletPreferencesIds(request, portlet.getPortletId())[ FD ]
Line_9 $$ PortletPreferencesIds portletPreferencesIds = PortletPreferencesFactoryUtil.getPortletPreferencesIds(request, portlet.getPortletId())-->Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesLocalServiceUtil.getStrictPreferences(portletPreferencesIds)[ FD ]
Line_3 $$ Layout layout = (Layout) request.getAttribute(WebKeys.LAYOUT)-->Line_32 $$ PortletURL portletURL = new PortletURLImpl(actionRequestImpl, actionRequestImpl.getPortletName(), layout.getPlid(), PortletRequest.RENDER_PHASE)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_15 $$ String contentType = request.getHeader(HttpHeaders.CONTENT_TYPE)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_4 $$ WindowState windowState = WindowStateFactory.getWindowState(ParamUtil.getString(request, "p_p_state"))[ CD ]
Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesLocalServiceUtil.getStrictPreferences(portletPreferencesIds)-->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)-->Line_23 $$ actionRequestImpl.defineObjects(portletConfig, actionResponseImpl)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_8 $$ PortletMode portletMode = PortletModeFactory.getPortletMode(ParamUtil.getString(request, "p_p_mode"))[ FD ]
Line_11 $$ ServletContext servletContext = (ServletContext) request.getAttribute(WebKeys.CTX)-->Line_13 $$ PortletConfig portletConfig = PortletConfigFactoryUtil.create(portlet, servletContext)[ FD ]
Line_36 $$ String[] value = entry.getValue()-->Line_37 $$ portletURL.setParameter(key, value)[ FD ]
Line_31 $$ if (Validator.isNull(redirectLocation) && portlet.isActionURLRedirect()) -->Line_39 $$ redirectLocation = portletURL.toString()[ CD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_12 $$ InvokerPortlet invokerPortlet = PortletInstanceFactoryUtil.create(portlet, servletContext)[ FD ]
Line_31 $$ if (Validator.isNull(redirectLocation) && portlet.isActionURLRedirect()) -->Line_32 $$ PortletURL portletURL = new PortletURLImpl(actionRequestImpl, actionRequestImpl.getPortletName(), layout.getPlid(), PortletRequest.RENDER_PHASE)[ CD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)[ FD ]
Line_4 $$ WindowState windowState = WindowStateFactory.getWindowState(ParamUtil.getString(request, "p_p_state"))-->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)-->Line_27 $$ actionResponseImpl.transferHeaders(response)[ FD ]
Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())-->Line_32 $$ PortletURL portletURL = new PortletURLImpl(actionRequestImpl, actionRequestImpl.getPortletName(), layout.getPlid(), PortletRequest.RENDER_PHASE)[ FD ]
Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())-->Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)[ FD ]
Line_13 $$ PortletConfig portletConfig = PortletConfigFactoryUtil.create(portlet, servletContext)-->Line_23 $$ actionRequestImpl.defineObjects(portletConfig, actionResponseImpl)[ FD ]
Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)-->Line_26 $$ invokerPortlet.processAction(actionRequestImpl, actionResponseImpl)[ FD ]
Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)-->Line_29 $$ List<Event> events = actionResponseImpl.getEvents()[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_10 $$ PortletPreferences portletPreferences = PortletPreferencesLocalServiceUtil.getStrictPreferences(portletPreferencesIds)[ CD ]
Line_3 $$ Layout layout = (Layout) request.getAttribute(WebKeys.LAYOUT)-->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_9 $$ PortletPreferencesIds portletPreferencesIds = PortletPreferencesFactoryUtil.getPortletPreferencesIds(request, portlet.getPortletId())[ CD ]
Line_21 $$ User user = PortalUtil.getUser(request)-->Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)[ FD ]
Line_30 $$ String redirectLocation = actionResponseImpl.getRedirectLocation()-->Line_31 $$ if (Validator.isNull(redirectLocation) && portlet.isActionURLRedirect()) [ FD ]
Line_4 $$ WindowState windowState = WindowStateFactory.getWindowState(ParamUtil.getString(request, "p_p_state"))-->Line_6 $$ windowState = WindowState.MAXIMIZED[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_3 $$ Layout layout = (Layout) request.getAttribute(WebKeys.LAYOUT)[ FD ]
Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)-->Line_28 $$ RenderParametersPool.put(request, layout.getPlid(), portlet.getPortletId(), actionResponseImpl.getRenderParameterMap())[ FD ]
Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)-->Line_33 $$ Map<String, String[]> renderParameters = actionResponseImpl.getRenderParameterMap()[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_15 $$ String contentType = request.getHeader(HttpHeaders.CONTENT_TYPE)[ CD ]
Line_35 $$ String key = entry.getKey()-->Line_37 $$ portletURL.setParameter(key, value)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_21 $$ User user = PortalUtil.getUser(request)[ FD ]
Line_12 $$ InvokerPortlet invokerPortlet = PortletInstanceFactoryUtil.create(portlet, servletContext)-->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_30 $$ String redirectLocation = actionResponseImpl.getRedirectLocation()-->Line_39 $$ redirectLocation = portletURL.toString()[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_16 $$ if (_log.isDebugEnabled()) [ CD ]
Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())-->Line_23 $$ actionRequestImpl.defineObjects(portletConfig, actionResponseImpl)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_14 $$ PortletContext portletContext = portletConfig.getPortletContext()[ CD ]
Line_32 $$ PortletURL portletURL = new PortletURLImpl(actionRequestImpl, actionRequestImpl.getPortletName(), layout.getPlid(), PortletRequest.RENDER_PHASE)-->Line_37 $$ portletURL.setParameter(key, value)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_31 $$ if (Validator.isNull(redirectLocation) && portlet.isActionURLRedirect()) [ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_8 $$ PortletMode portletMode = PortletModeFactory.getPortletMode(ParamUtil.getString(request, "p_p_mode"))[ CD ]
Line_8 $$ PortletMode portletMode = PortletModeFactory.getPortletMode(ParamUtil.getString(request, "p_p_mode"))-->Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)[ FD ]
Line_33 $$ Map<String, String[]> renderParameters = actionResponseImpl.getRenderParameterMap()-->Line_34 $$ for (Map.Entry<String, String[]> entry : renderParameters.entrySet()) [ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_13 $$ PortletConfig portletConfig = PortletConfigFactoryUtil.create(portlet, servletContext)[ FD ]
Line_24 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(actionRequestImpl)-->Line_25 $$ ServiceContextThreadLocal.pushServiceContext(serviceContext)[ FD ]
Line_6 $$ windowState = WindowState.MAXIMIZED-->Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)[ FD ]
Line_3 $$ Layout layout = (Layout) request.getAttribute(WebKeys.LAYOUT)-->Line_22 $$ ActionResponseImpl actionResponseImpl = ActionResponseFactory.create(actionRequestImpl, response, portlet.getPortletId(), user, layout, windowState, portletMode)[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_27 $$ actionResponseImpl.transferHeaders(response)[ FD ]
Line_34 $$ for (Map.Entry<String, String[]> entry : renderParameters.entrySet()) -->Line_35 $$ String key = entry.getKey()[ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_20 $$ ActionRequestImpl actionRequestImpl = ActionRequestFactory.create(request, portlet, invokerPortlet, portletContext, windowState, portletMode, portletPreferences, layout.getPlid())[ FD ]
Line_3 $$ Layout layout = (Layout) request.getAttribute(WebKeys.LAYOUT)-->Line_5 $$ if (layout.isTypeControlPanel() && ((windowState == null) || windowState.equals(WindowState.NORMAL) || Validator.isNull(windowState.toString()))) [ FD ]
Line_2 $$ private ActionResult _doProcessAction(HttpServletRequest request, HttpServletResponse response, Portlet portlet) throws Exception -->Line_5 $$ if (layout.isTypeControlPanel() && ((windowState == null) || windowState.equals(WindowState.NORMAL) || Validator.isNull(windowState.toString()))) [ CD ]
