Line_10 $$ List<Pair<Operation, Double>> ratios = new ArrayList()-->Line_11 $$ ratios.add(new Pair(op, 1d / ops.size()))[ FD ]
Line_5 $$ out.add(new OpDistributionFactory() -->Line_7 $$ List<? extends Operation> ops = SampledOpDistributionFactory.this.get(timing.newTimer(ratio.getKey().toString(), sampleCount), newGenerator(), ratio.getKey())[ CD ]
Line_8 $$ if (ops.size() == 1)-->Line_9 $$ return new FixedOpDistribution(ops.get(0))[ CD ]
Line_4 $$ for (final Map.Entry<T, Double> ratio : ratios.entrySet()) -->Line_15 $$ return ratio.getKey().toString()[ FD ]
Line_7 $$ List<? extends Operation> ops = SampledOpDistributionFactory.this.get(timing.newTimer(ratio.getKey().toString(), sampleCount), newGenerator(), ratio.getKey())-->Line_8 $$ if (ops.size() == 1)[ FD ]
Line_5 $$ out.add(new OpDistributionFactory() -->Line_10 $$ List<Pair<Operation, Double>> ratios = new ArrayList()[ CD ]
Line_7 $$ List<? extends Operation> ops = SampledOpDistributionFactory.this.get(timing.newTimer(ratio.getKey().toString(), sampleCount), newGenerator(), ratio.getKey())-->Line_11 $$ ratios.add(new Pair(op, 1d / ops.size()))[ FD ]
Line_4 $$ for (final Map.Entry<T, Double> ratio : ratios.entrySet()) -->Line_7 $$ List<? extends Operation> ops = SampledOpDistributionFactory.this.get(timing.newTimer(ratio.getKey().toString(), sampleCount), newGenerator(), ratio.getKey())[ FD ]
Line_5 $$ out.add(new OpDistributionFactory() -->Line_15 $$ return ratio.getKey().toString()[ CD ]
Line_5 $$ out.add(new OpDistributionFactory() -->Line_12 $$ return new SampledOpDistribution(new EnumeratedDistribution<Operation>(ratios), new DistributionFixed(1))[ CD ]
Line_7 $$ List<? extends Operation> ops = SampledOpDistributionFactory.this.get(timing.newTimer(ratio.getKey().toString(), sampleCount), newGenerator(), ratio.getKey())-->Line_9 $$ return new FixedOpDistribution(ops.get(0))[ FD ]
Line_3 $$ List<OpDistributionFactory> out = new ArrayList()-->Line_5 $$ out.add(new OpDistributionFactory() [ FD ]
Line_5 $$ out.add(new OpDistributionFactory() -->Line_18 $$ return Collections.<OpDistributionFactory>singleton(this)[ CD ]
Line_5 $$ out.add(new OpDistributionFactory() -->Line_8 $$ if (ops.size() == 1)[ CD ]
Line_2 $$ public Iterable<OpDistributionFactory> each() -->Line_3 $$ List<OpDistributionFactory> out = new ArrayList()[ CD ]
Line_2 $$ public Iterable<OpDistributionFactory> each() -->Line_22 $$ return out[ CD ]
Line_5 $$ out.add(new OpDistributionFactory() -->Line_7 $$ List<? extends Operation> ops = SampledOpDistributionFactory.this.get(timing.newTimer(ratio.getKey().toString(), sampleCount), newGenerator(), ratio.getKey())[ FD ]
