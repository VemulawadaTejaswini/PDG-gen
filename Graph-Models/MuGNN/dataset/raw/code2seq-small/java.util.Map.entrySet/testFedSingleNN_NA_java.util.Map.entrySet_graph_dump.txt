Line_5 $$ NameNode nn1 = cluster.getNameNode()-->Line_9 $$ int lv1 = FSImageTestUtil.getFSImage(nn1).getLayoutVersion()[ FD ]
Line_2 $$ public void testFedSingleNN() throws IOException -->Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nameNodePort(9927).build()[ CD ]
Line_5 $$ NameNode nn1 = cluster.getNameNode()-->Line_6 $$ assertNotNull("cannot create nn1", nn1)[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nameNodePort(9927).build()-->Line_32 $$ cluster.shutdown()[ FD ]
Line_11 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_28 $$ assertEquals(0, dn.getAllBpOs().length)[ FD ]
Line_12 $$ final Map<String, Object> volInfos = dn.data.getVolumeInfoMap()-->Line_15 $$ for (Map.Entry<String, Object> e : volInfos.entrySet()) [ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nameNodePort(9927).build()-->Line_27 $$ cluster.shutdown()[ FD ]
Line_29 $$ cluster = null-->Line_32 $$ cluster.shutdown()[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nameNodePort(9927).build()-->Line_11 $$ DataNode dn = cluster.getDataNodes().get(0)[ FD ]
Line_5 $$ NameNode nn1 = cluster.getNameNode()-->Line_8 $$ String cid1 = FSImageTestUtil.getFSImage(nn1).getClusterID()[ FD ]
Line_11 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_19 $$ for (BPOfferService bpos : dn.getAllBpOs()) [ FD ]
Line_12 $$ final Map<String, Object> volInfos = dn.data.getVolumeInfoMap()-->Line_13 $$ Assert.assertTrue("No volumes in the fsdataset", volInfos.size() > 0)[ FD ]
Line_8 $$ String cid1 = FSImageTestUtil.getFSImage(nn1).getClusterID()-->Line_26 $$ assertEquals("wrong cid", dn.getClusterId(), cid1)[ FD ]
Line_5 $$ NameNode nn1 = cluster.getNameNode()-->Line_10 $$ LOG.info("nn1: lv=" + lv1 + ";cid=" + cid1 + ";bpid=" + bpid1 + ";uri=" + nn1.getNameNodeAddress())[ FD ]
Line_22 $$ BPOfferService bpos1 = dn.getAllBpOs()[0]-->Line_23 $$ bpos1.triggerBlockReportForTests()[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nameNodePort(9927).build()-->Line_5 $$ NameNode nn1 = cluster.getNameNode()[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nameNodePort(9927).build()-->Line_29 $$ cluster = null[ FD ]
Line_31 $$ if (cluster != null) -->Line_32 $$ cluster.shutdown()[ CD ]
Line_22 $$ BPOfferService bpos1 = dn.getAllBpOs()[0]-->Line_24 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos1), nn1.getNameNodeAddress())[ FD ]
Line_22 $$ BPOfferService bpos1 = dn.getAllBpOs()[0]-->Line_25 $$ assertEquals("wrong bpid", bpos1.getBlockPoolId(), bpid1)[ FD ]
Line_15 $$ for (Map.Entry<String, Object> e : volInfos.entrySet()) -->Line_16 $$ LOG.info("vol " + i++ + ") " + e.getKey() + ": " + e.getValue())[ FD ]
Line_5 $$ NameNode nn1 = cluster.getNameNode()-->Line_24 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos1), nn1.getNameNodeAddress())[ FD ]
Line_11 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_22 $$ BPOfferService bpos1 = dn.getAllBpOs()[0][ FD ]
Line_11 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_26 $$ assertEquals("wrong cid", dn.getClusterId(), cid1)[ FD ]
Line_12 $$ final Map<String, Object> volInfos = dn.data.getVolumeInfoMap()-->Line_18 $$ assertEquals("number of volumes is wrong", 2, volInfos.size())[ FD ]
Line_14 $$ int i = 0-->Line_16 $$ LOG.info("vol " + i++ + ") " + e.getKey() + ": " + e.getValue())[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nameNodePort(9927).build()-->Line_31 $$ if (cluster != null) [ FD ]
Line_29 $$ cluster = null-->Line_31 $$ if (cluster != null) [ FD ]
Line_19 $$ for (BPOfferService bpos : dn.getAllBpOs()) -->Line_20 $$ LOG.info("reg: bpid=" + "; name=" + bpos.bpRegistration + "; sid=" + bpos.bpRegistration.getDatanodeUuid() + "; nna=" + getNNSocketAddress(bpos))[ FD ]
Line_7 $$ String bpid1 = FSImageTestUtil.getFSImage(nn1).getBlockPoolID()-->Line_25 $$ assertEquals("wrong bpid", bpos1.getBlockPoolId(), bpid1)[ FD ]
Line_5 $$ NameNode nn1 = cluster.getNameNode()-->Line_7 $$ String bpid1 = FSImageTestUtil.getFSImage(nn1).getBlockPoolID()[ FD ]
