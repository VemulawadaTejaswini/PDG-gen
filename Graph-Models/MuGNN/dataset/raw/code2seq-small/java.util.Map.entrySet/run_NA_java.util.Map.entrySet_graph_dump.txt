Line_28 $$ final RequestFuture future = myBuildsInProgress.get(entry.getKey())-->Line_29 $$ if (future != null && !future.isCancelled() && !future.isDone()) [ FD ]
Line_3 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_7 $$ filtered.add(path)[ FD ]
Line_30 $$ final UUID sessionId = future.getRequestID()-->Line_34 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ FD ]
Line_22 $$ final ProjectData data = entry.getValue()-->Line_24 $$ data.addDeleted(filtered)[ FD ]
Line_21 $$ for (Map.Entry<String, ProjectData> entry : myProjectDataMap.entrySet()) -->Line_28 $$ final RequestFuture future = myBuildsInProgress.get(entry.getKey())[ FD ]
Line_2 $$ public void run() -->Line_10 $$ if (filtered.isEmpty()) [ CD ]
Line_33 $$ final CmdlineRemoteProto.Message.ControllerMessage message = CmdlineRemoteProto.Message.ControllerMessage.newBuilder().setType(CmdlineRemoteProto.Message.ControllerMessage.Type.FS_EVENT).setFsEvent(data.createNextEvent()).build()-->Line_34 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ FD ]
Line_32 $$ if (channel != null) -->Line_33 $$ final CmdlineRemoteProto.Message.ControllerMessage message = CmdlineRemoteProto.Message.ControllerMessage.newBuilder().setType(CmdlineRemoteProto.Message.ControllerMessage.Type.FS_EVENT).setFsEvent(data.createNextEvent()).build()[ CD ]
Line_4 $$ for (File file : paths) -->Line_5 $$ final String path = FileUtil.toSystemIndependentName(file.getPath())[ FD ]
Line_2 $$ public void run() -->Line_3 $$ final List<String> filtered = new ArrayList<String>(paths.size())[ CD ]
Line_15 $$ if (notifyDeletion) -->Line_16 $$ LOG.info("Registering deleted paths: " + filtered)[ CD ]
Line_23 $$ if (notifyDeletion) -->Line_26 $$ data.addChanged(filtered)[ CD ]
Line_5 $$ final String path = FileUtil.toSystemIndependentName(file.getPath())-->Line_7 $$ filtered.add(path)[ FD ]
Line_22 $$ final ProjectData data = entry.getValue()-->Line_33 $$ final CmdlineRemoteProto.Message.ControllerMessage message = CmdlineRemoteProto.Message.ControllerMessage.newBuilder().setType(CmdlineRemoteProto.Message.ControllerMessage.Type.FS_EVENT).setFsEvent(data.createNextEvent()).build()[ FD ]
Line_29 $$ if (future != null && !future.isCancelled() && !future.isDone()) -->Line_30 $$ final UUID sessionId = future.getRequestID()[ CD ]
Line_15 $$ if (notifyDeletion) -->Line_18 $$ LOG.info("Registering changed paths: " + filtered)[ CD ]
Line_23 $$ if (notifyDeletion) -->Line_24 $$ data.addDeleted(filtered)[ CD ]
Line_28 $$ final RequestFuture future = myBuildsInProgress.get(entry.getKey())-->Line_30 $$ final UUID sessionId = future.getRequestID()[ FD ]
Line_31 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)-->Line_32 $$ if (channel != null) [ FD ]
Line_6 $$ if (PATH_FILTER.fun(path)) -->Line_7 $$ filtered.add(path)[ CD ]
Line_30 $$ final UUID sessionId = future.getRequestID()-->Line_31 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)[ FD ]
Line_32 $$ if (channel != null) -->Line_34 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ CD ]
Line_3 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_26 $$ data.addChanged(filtered)[ FD ]
Line_10 $$ if (filtered.isEmpty()) -->Line_11 $$ return[ CD ]
Line_14 $$ if (IS_UNIT_TEST_MODE) -->Line_15 $$ if (notifyDeletion) [ CD ]
Line_3 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_10 $$ if (filtered.isEmpty()) [ FD ]
Line_29 $$ if (future != null && !future.isCancelled() && !future.isDone()) -->Line_32 $$ if (channel != null) [ CD ]
Line_21 $$ for (Map.Entry<String, ProjectData> entry : myProjectDataMap.entrySet()) -->Line_22 $$ final ProjectData data = entry.getValue()[ FD ]
Line_22 $$ final ProjectData data = entry.getValue()-->Line_26 $$ data.addChanged(filtered)[ FD ]
Line_31 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)-->Line_34 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ FD ]
Line_3 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_24 $$ data.addDeleted(filtered)[ FD ]
Line_29 $$ if (future != null && !future.isCancelled() && !future.isDone()) -->Line_31 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)[ CD ]
Line_5 $$ final String path = FileUtil.toSystemIndependentName(file.getPath())-->Line_6 $$ if (PATH_FILTER.fun(path)) [ FD ]
