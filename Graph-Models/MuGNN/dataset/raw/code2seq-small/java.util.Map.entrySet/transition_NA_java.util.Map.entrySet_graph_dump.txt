Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_19 $$ Map<String, LocalResource> cntrRsrc = ctxt.getLocalResources()[ CD ]
Line_19 $$ Map<String, LocalResource> cntrRsrc = ctxt.getLocalResources()-->Line_20 $$ if (!cntrRsrc.isEmpty()) [ FD ]
Line_54 $$ if (!container.publicRsrcs.isEmpty()) -->Line_55 $$ req.put(LocalResourceVisibility.PUBLIC, container.publicRsrcs)[ CD ]
Line_15 $$ for (Map.Entry<String, ByteBuffer> service : csd.entrySet()) -->Line_16 $$ container.dispatcher.getEventHandler().handle(new AuxServicesEvent(AuxServicesEventType.APPLICATION_INIT, container.user, container.containerId.getApplicationAttemptId().getApplicationId(), service.getKey().toString(), service.getValue()))[ FD ]
Line_26 $$ if (links == null) -->Line_28 $$ container.pendingResources.put(req, links)[ CD ]
Line_3 $$ if (container.recoveredStatus == RecoveredContainerStatus.COMPLETED) -->Line_5 $$ return ContainerState.DONE[ CD ]
Line_3 $$ if (container.recoveredStatus == RecoveredContainerStatus.COMPLETED) -->Line_4 $$ container.sendFinishedEvents()[ CD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_60 $$ if (!container.appRsrcs.isEmpty()) [ CD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_64 $$ return ContainerState.LOCALIZING[ CD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_20 $$ if (!cntrRsrc.isEmpty()) [ CD ]
Line_27 $$ links = new ArrayList<String>()-->Line_28 $$ container.pendingResources.put(req, links)[ FD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_33 $$ container.publicRsrcs.add(req)[ FD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_7 $$ container.finished()[ FD ]
Line_13 $$ Map<String, ByteBuffer> csd = ctxt.getServiceData()-->Line_15 $$ for (Map.Entry<String, ByteBuffer> service : csd.entrySet()) [ FD ]
Line_10 $$ final ContainerLaunchContext ctxt = container.launchContext-->Line_19 $$ Map<String, LocalResource> cntrRsrc = ctxt.getLocalResources()[ FD ]
Line_57 $$ if (!container.privateRsrcs.isEmpty()) -->Line_58 $$ req.put(LocalResourceVisibility.PRIVATE, container.privateRsrcs)[ CD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_12 $$ container.dispatcher.getEventHandler().handle(new AuxServicesEvent(AuxServicesEventType.CONTAINER_INIT, container))[ CD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_58 $$ req.put(LocalResourceVisibility.PRIVATE, container.privateRsrcs)[ FD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_61 $$ req.put(LocalResourceVisibility.APPLICATION, container.appRsrcs)[ FD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_63 $$ container.dispatcher.getEventHandler().handle(new ContainerLocalizationRequestEvent(container, req))[ CD ]
Line_22 $$ for (Map.Entry<String, LocalResource> rsrc : cntrRsrc.entrySet()) -->Line_30 $$ links.add(rsrc.getKey())[ FD ]
Line_22 $$ for (Map.Entry<String, LocalResource> rsrc : cntrRsrc.entrySet()) -->Line_31 $$ switch(rsrc.getValue().getVisibility()) [ FD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_14 $$ if (csd != null) [ CD ]
Line_6 $$ if (container.recoveredAsKilled && container.recoveredStatus == RecoveredContainerStatus.REQUESTED) -->Line_8 $$ return ContainerState.DONE[ CD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_39 $$ container.appRsrcs.add(req)[ FD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_36 $$ container.privateRsrcs.add(req)[ FD ]
Line_22 $$ for (Map.Entry<String, LocalResource> rsrc : cntrRsrc.entrySet()) -->Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())[ FD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_10 $$ final ContainerLaunchContext ctxt = container.launchContext[ CD ]
Line_27 $$ links = new ArrayList<String>()-->Line_30 $$ links.add(rsrc.getKey())[ FD ]
Line_22 $$ for (Map.Entry<String, LocalResource> rsrc : cntrRsrc.entrySet()) -->Line_43 $$ LOG.info("Got exception parsing " + rsrc.getKey() + " and value " + rsrc.getValue())[ FD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_28 $$ container.pendingResources.put(req, links)[ FD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_4 $$ container.sendFinishedEvents()[ FD ]
Line_25 $$ List<String> links = container.pendingResources.get(req)-->Line_26 $$ if (links == null) [ FD ]
Line_6 $$ if (container.recoveredAsKilled && container.recoveredStatus == RecoveredContainerStatus.REQUESTED) -->Line_7 $$ container.finished()[ CD ]
Line_25 $$ List<String> links = container.pendingResources.get(req)-->Line_28 $$ container.pendingResources.put(req, links)[ FD ]
Line_60 $$ if (!container.appRsrcs.isEmpty()) -->Line_61 $$ req.put(LocalResourceVisibility.APPLICATION, container.appRsrcs)[ CD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_3 $$ if (container.recoveredStatus == RecoveredContainerStatus.COMPLETED) [ CD ]
Line_13 $$ Map<String, ByteBuffer> csd = ctxt.getServiceData()-->Line_14 $$ if (csd != null) [ FD ]
Line_26 $$ if (links == null) -->Line_27 $$ links = new ArrayList<String>()[ CD ]
Line_3 $$ if (container.recoveredStatus == RecoveredContainerStatus.COMPLETED) -->Line_6 $$ if (container.recoveredAsKilled && container.recoveredStatus == RecoveredContainerStatus.REQUESTED) [ CD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_25 $$ List<String> links = container.pendingResources.get(req)[ FD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_49 $$ container.cleanup()[ FD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_13 $$ Map<String, ByteBuffer> csd = ctxt.getServiceData()[ CD ]
Line_24 $$ LocalResourceRequest req = new LocalResourceRequest(rsrc.getValue())-->Line_55 $$ req.put(LocalResourceVisibility.PUBLIC, container.publicRsrcs)[ FD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_66 $$ container.sendLaunchEvent()[ CD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_54 $$ if (!container.publicRsrcs.isEmpty()) [ CD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_67 $$ container.metrics.endInitingContainer()[ CD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_57 $$ if (!container.privateRsrcs.isEmpty()) [ CD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_66 $$ container.sendLaunchEvent()[ FD ]
Line_10 $$ final ContainerLaunchContext ctxt = container.launchContext-->Line_13 $$ Map<String, ByteBuffer> csd = ctxt.getServiceData()[ FD ]
Line_20 $$ if (!cntrRsrc.isEmpty()) -->Line_68 $$ return ContainerState.LOCALIZED[ CD ]
Line_25 $$ List<String> links = container.pendingResources.get(req)-->Line_30 $$ links.add(rsrc.getKey())[ FD ]
Line_19 $$ Map<String, LocalResource> cntrRsrc = ctxt.getLocalResources()-->Line_22 $$ for (Map.Entry<String, LocalResource> rsrc : cntrRsrc.entrySet()) [ FD ]
Line_25 $$ List<String> links = container.pendingResources.get(req)-->Line_27 $$ links = new ArrayList<String>()[ FD ]
Line_2 $$ public ContainerState transition(ContainerImpl container, ContainerEvent event) -->Line_11 $$ container.metrics.initingContainer()[ CD ]
