Line_43 $$ long sourceGroupId = ParamUtil.getLong(request, "p_v_l_s_g_id")-->Line_46 $$ sb.append(sourceGroupId)[ FD ]
Line_78 $$ for (int i = 0; i < values.length; i++) -->Line_82 $$ sb.append(HttpUtil.encodeURL(values[i]))[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_62 $$ if (Validator.isNotNull(settingsScope)) [ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_26 $$ sb.append(windowState)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_34 $$ sb.append("&p_p_col_count=")[ FD ]
Line_66 $$ String namespace = PortalUtil.getPortletNamespace(portletId)-->Line_73 $$ if (!PortalUtil.isReservedParameter(name) && !name.equals("currentURL") && !name.equals("settingsScope") && !isRefreshURLReservedParameter(name, namespace)) [ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_4 $$ sb.append(themeDisplay.getPathMain())[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_7 $$ sb.append(plid)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_61 $$ settingsScope = ParamUtil.get(request, "settingsScope", settingsScope)[ FD ]
Line_16 $$ windowState = LiferayWindowState.POP_UP-->Line_26 $$ sb.append(windowState)[ FD ]
Line_74 $$ String[] values = entry.getValue()-->Line_75 $$ if (values == null) [ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_11 $$ sb.append(portletId)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_55 $$ sb.append(HttpUtil.encodeURL(currentURL))[ CD ]
Line_73 $$ if (!PortalUtil.isReservedParameter(name) && !name.equals("currentURL") && !name.equals("settingsScope") && !isRefreshURLReservedParameter(name, namespace)) -->Line_75 $$ if (values == null) [ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_29 $$ sb.append(columnId)[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_30 $$ Integer columnPos = (Integer) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_POS)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_13 $$ sb.append(themeDisplay.getLifecycle())[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_45 $$ sb.append("&p_v_l_s_g_id=")[ FD ]
Line_57 $$ if (!ppid.equals(portletId)) -->Line_58 $$ return sb.toString()[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_27 $$ sb.append("&p_p_mode=view&p_p_col_id=")[ FD ]
Line_22 $$ windowState = WindowState.MINIMIZED-->Line_26 $$ sb.append(windowState)[ FD ]
Line_14 $$ WindowState windowState = WindowState.NORMAL-->Line_26 $$ sb.append(windowState)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_25 $$ sb.append("&p_p_state=")[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_31 $$ sb.append("&p_p_col_pos=")[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_54 $$ sb.append("&currentURL=")[ CD ]
Line_60 $$ String settingsScope = (String) request.getAttribute(WebKeys.SETTINGS_SCOPE)-->Line_62 $$ if (Validator.isNotNull(settingsScope)) [ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_35 $$ sb.append(columnCount)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_5 $$ sb.append("/portal/render_portlet?p_l_id=")[ CD ]
Line_8 $$ Portlet portlet = (Portlet) request.getAttribute(WebKeys.RENDER_PORTLET)-->Line_38 $$ if (portlet.isStaticStart()) [ FD ]
Line_49 $$ if (Validator.isNotNull(doAsUserId)) -->Line_51 $$ sb.append(HttpUtil.encodeURL(doAsUserId))[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_10 $$ sb.append("&p_p_id=")[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_32 $$ sb.append(columnPos)[ CD ]
Line_48 $$ String doAsUserId = themeDisplay.getDoAsUserId()-->Line_51 $$ sb.append(HttpUtil.encodeURL(doAsUserId))[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_60 $$ String settingsScope = (String) request.getAttribute(WebKeys.SETTINGS_SCOPE)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_32 $$ sb.append(columnPos)[ FD ]
Line_73 $$ if (!PortalUtil.isReservedParameter(name) && !name.equals("currentURL") && !name.equals("settingsScope") && !isRefreshURLReservedParameter(name, namespace)) -->Line_78 $$ for (int i = 0; i < values.length; i++) [ CD ]
Line_66 $$ String namespace = PortalUtil.getPortletNamespace(portletId)-->Line_70 $$ if (name.startsWith(StringPool.UNDERLINE) && !name.startsWith(namespace)) [ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_49 $$ if (Validator.isNotNull(doAsUserId)) [ CD ]
Line_62 $$ if (Validator.isNotNull(settingsScope)) -->Line_63 $$ sb.append("&settingsScope=")[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_51 $$ sb.append(HttpUtil.encodeURL(doAsUserId))[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_56 $$ String ppid = ParamUtil.getString(request, "p_p_id")[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_66 $$ String namespace = PortalUtil.getPortletNamespace(portletId)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_82 $$ sb.append(HttpUtil.encodeURL(values[i]))[ FD ]
Line_19 $$ if (layoutTypePortlet.hasStateMaxPortletId(portletId)) -->Line_21 $$ if (layoutTypePortlet.hasStateMinPortletId(portletId)) [ CD ]
Line_78 $$ for (int i = 0; i < values.length; i++) -->Line_80 $$ sb.append(name)[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_8 $$ Portlet portlet = (Portlet) request.getAttribute(WebKeys.RENDER_PORTLET)[ CD ]
Line_33 $$ Integer columnCount = (Integer) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_COUNT)-->Line_35 $$ sb.append(columnCount)[ FD ]
Line_36 $$ if (portlet.isStatic()) -->Line_38 $$ if (portlet.isStaticStart()) [ CD ]
Line_14 $$ WindowState windowState = WindowState.NORMAL-->Line_22 $$ windowState = WindowState.MINIMIZED[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_61 $$ settingsScope = ParamUtil.get(request, "settingsScope", settingsScope)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_42 $$ sb.append("&p_p_isolated=1")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_58 $$ return sb.toString()[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_34 $$ sb.append("&p_p_col_count=")[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_30 $$ Integer columnPos = (Integer) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_POS)[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_14 $$ WindowState windowState = WindowState.NORMAL[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_43 $$ long sourceGroupId = ParamUtil.getLong(request, "p_v_l_s_g_id")[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_57 $$ if (!ppid.equals(portletId)) [ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_60 $$ String settingsScope = (String) request.getAttribute(WebKeys.SETTINGS_SCOPE)[ FD ]
Line_30 $$ Integer columnPos = (Integer) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_POS)-->Line_32 $$ sb.append(columnPos)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_43 $$ long sourceGroupId = ParamUtil.getLong(request, "p_v_l_s_g_id")[ FD ]
Line_53 $$ String currentURL = PortalUtil.getCurrentURL(request)-->Line_55 $$ sb.append(HttpUtil.encodeURL(currentURL))[ FD ]
Line_62 $$ if (Validator.isNotNull(settingsScope)) -->Line_64 $$ sb.append(settingsScope)[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_13 $$ sb.append(themeDisplay.getLifecycle())[ FD ]
Line_61 $$ settingsScope = ParamUtil.get(request, "settingsScope", settingsScope)-->Line_62 $$ if (Validator.isNotNull(settingsScope)) [ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_15 $$ if (themeDisplay.isStatePopUp()) [ FD ]
Line_73 $$ if (!PortalUtil.isReservedParameter(name) && !name.equals("currentURL") && !name.equals("settingsScope") && !isRefreshURLReservedParameter(name, namespace)) -->Line_74 $$ String[] values = entry.getValue()[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_81 $$ sb.append(StringPool.EQUAL)[ FD ]
Line_43 $$ long sourceGroupId = ParamUtil.getLong(request, "p_v_l_s_g_id")-->Line_44 $$ if (sourceGroupId > 0) [ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_4 $$ sb.append(themeDisplay.getPathMain())[ CD ]
Line_21 $$ if (layoutTypePortlet.hasStateMinPortletId(portletId)) -->Line_22 $$ windowState = WindowState.MINIMIZED[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_79 $$ sb.append(StringPool.AMPERSAND)[ FD ]
Line_67 $$ Map<String, String[]> parameters = request.getParameterMap()-->Line_68 $$ for (Map.Entry<String, String[]> entry : parameters.entrySet()) [ FD ]
Line_8 $$ Portlet portlet = (Portlet) request.getAttribute(WebKeys.RENDER_PORTLET)-->Line_9 $$ String portletId = portlet.getPortletId()[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_28 $$ String columnId = (String) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_ID)[ CD ]
Line_78 $$ for (int i = 0; i < values.length; i++) -->Line_81 $$ sb.append(StringPool.EQUAL)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_37 $$ sb.append("&p_p_static=1")[ FD ]
Line_15 $$ if (themeDisplay.isStatePopUp()) -->Line_16 $$ windowState = LiferayWindowState.POP_UP[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_8 $$ Portlet portlet = (Portlet) request.getAttribute(WebKeys.RENDER_PORTLET)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_63 $$ sb.append("&settingsScope=")[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_6 $$ long plid = themeDisplay.getPlid()[ CD ]
Line_69 $$ String name = entry.getKey()-->Line_80 $$ sb.append(name)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_7 $$ sb.append(plid)[ CD ]
Line_18 $$ LayoutTypePortlet layoutTypePortlet = themeDisplay.getLayoutTypePortlet()-->Line_21 $$ if (layoutTypePortlet.hasStateMinPortletId(portletId)) [ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_48 $$ String doAsUserId = themeDisplay.getDoAsUserId()[ CD ]
Line_44 $$ if (sourceGroupId > 0) -->Line_45 $$ sb.append("&p_v_l_s_g_id=")[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_50 $$ sb.append("&doAsUserId=")[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_86 $$ return sb.toString()[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_5 $$ sb.append("/portal/render_portlet?p_l_id=")[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_3 $$ StringBundler sb = new StringBundler(34)[ CD ]
Line_9 $$ String portletId = portlet.getPortletId()-->Line_21 $$ if (layoutTypePortlet.hasStateMinPortletId(portletId)) [ FD ]
Line_20 $$ windowState = WindowState.MAXIMIZED-->Line_26 $$ sb.append(windowState)[ FD ]
Line_16 $$ windowState = LiferayWindowState.POP_UP-->Line_22 $$ windowState = WindowState.MINIMIZED[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_36 $$ if (portlet.isStatic()) [ CD ]
Line_6 $$ long plid = themeDisplay.getPlid()-->Line_7 $$ sb.append(plid)[ FD ]
Line_9 $$ String portletId = portlet.getPortletId()-->Line_57 $$ if (!ppid.equals(portletId)) [ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_35 $$ sb.append(columnCount)[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_67 $$ Map<String, String[]> parameters = request.getParameterMap()[ FD ]
Line_15 $$ if (themeDisplay.isStatePopUp()) -->Line_18 $$ LayoutTypePortlet layoutTypePortlet = themeDisplay.getLayoutTypePortlet()[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_9 $$ String portletId = portlet.getPortletId()[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_6 $$ long plid = themeDisplay.getPlid()[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_27 $$ sb.append("&p_p_mode=view&p_p_col_id=")[ CD ]
Line_16 $$ windowState = LiferayWindowState.POP_UP-->Line_20 $$ windowState = WindowState.MAXIMIZED[ FD ]
Line_36 $$ if (portlet.isStatic()) -->Line_37 $$ sb.append("&p_p_static=1")[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_13 $$ sb.append(themeDisplay.getLifecycle())[ FD ]
Line_48 $$ String doAsUserId = themeDisplay.getDoAsUserId()-->Line_49 $$ if (Validator.isNotNull(doAsUserId)) [ FD ]
Line_68 $$ for (Map.Entry<String, String[]> entry : parameters.entrySet()) -->Line_74 $$ String[] values = entry.getValue()[ FD ]
Line_15 $$ if (themeDisplay.isStatePopUp()) -->Line_19 $$ if (layoutTypePortlet.hasStateMaxPortletId(portletId)) [ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_11 $$ sb.append(portletId)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_54 $$ sb.append("&currentURL=")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_55 $$ sb.append(HttpUtil.encodeURL(currentURL))[ FD ]
Line_49 $$ if (Validator.isNotNull(doAsUserId)) -->Line_50 $$ sb.append("&doAsUserId=")[ CD ]
Line_60 $$ String settingsScope = (String) request.getAttribute(WebKeys.SETTINGS_SCOPE)-->Line_64 $$ sb.append(settingsScope)[ FD ]
Line_61 $$ settingsScope = ParamUtil.get(request, "settingsScope", settingsScope)-->Line_64 $$ sb.append(settingsScope)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_18 $$ LayoutTypePortlet layoutTypePortlet = themeDisplay.getLayoutTypePortlet()[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_53 $$ String currentURL = PortalUtil.getCurrentURL(request)[ CD ]
Line_78 $$ for (int i = 0; i < values.length; i++) -->Line_79 $$ sb.append(StringPool.AMPERSAND)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_46 $$ sb.append(sourceGroupId)[ FD ]
Line_28 $$ String columnId = (String) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_ID)-->Line_29 $$ sb.append(columnId)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_64 $$ sb.append(settingsScope)[ FD ]
Line_9 $$ String portletId = portlet.getPortletId()-->Line_66 $$ String namespace = PortalUtil.getPortletNamespace(portletId)[ FD ]
Line_69 $$ String name = entry.getKey()-->Line_73 $$ if (!PortalUtil.isReservedParameter(name) && !name.equals("currentURL") && !name.equals("settingsScope") && !isRefreshURLReservedParameter(name, namespace)) [ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_28 $$ String columnId = (String) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_ID)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_4 $$ sb.append(themeDisplay.getPathMain())[ FD ]
Line_68 $$ for (Map.Entry<String, String[]> entry : parameters.entrySet()) -->Line_69 $$ String name = entry.getKey()[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_86 $$ return sb.toString()[ FD ]
Line_14 $$ WindowState windowState = WindowState.NORMAL-->Line_20 $$ windowState = WindowState.MAXIMIZED[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_39 $$ sb.append("&p_p_static_start=1")[ FD ]
Line_18 $$ LayoutTypePortlet layoutTypePortlet = themeDisplay.getLayoutTypePortlet()-->Line_19 $$ if (layoutTypePortlet.hasStateMaxPortletId(portletId)) [ FD ]
Line_9 $$ String portletId = portlet.getPortletId()-->Line_11 $$ sb.append(portletId)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_33 $$ Integer columnCount = (Integer) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_COUNT)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_67 $$ Map<String, String[]> parameters = request.getParameterMap()[ CD ]
Line_56 $$ String ppid = ParamUtil.getString(request, "p_p_id")-->Line_57 $$ if (!ppid.equals(portletId)) [ FD ]
Line_60 $$ String settingsScope = (String) request.getAttribute(WebKeys.SETTINGS_SCOPE)-->Line_61 $$ settingsScope = ParamUtil.get(request, "settingsScope", settingsScope)[ FD ]
Line_9 $$ String portletId = portlet.getPortletId()-->Line_19 $$ if (layoutTypePortlet.hasStateMaxPortletId(portletId)) [ FD ]
Line_20 $$ windowState = WindowState.MAXIMIZED-->Line_22 $$ windowState = WindowState.MINIMIZED[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_26 $$ sb.append(windowState)[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_80 $$ sb.append(name)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_10 $$ sb.append("&p_p_id=")[ CD ]
Line_19 $$ if (layoutTypePortlet.hasStateMaxPortletId(portletId)) -->Line_20 $$ windowState = WindowState.MAXIMIZED[ CD ]
Line_69 $$ String name = entry.getKey()-->Line_70 $$ if (name.startsWith(StringPool.UNDERLINE) && !name.startsWith(namespace)) [ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_25 $$ sb.append("&p_p_state=")[ FD ]
Line_14 $$ WindowState windowState = WindowState.NORMAL-->Line_16 $$ windowState = LiferayWindowState.POP_UP[ FD ]
Line_38 $$ if (portlet.isStaticStart()) -->Line_39 $$ sb.append("&p_p_static_start=1")[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_44 $$ if (sourceGroupId > 0) [ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_42 $$ sb.append("&p_p_isolated=1")[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_12 $$ sb.append("&p_p_lifecycle=0&p_t_lifecycle=")[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_33 $$ Integer columnCount = (Integer) request.getAttribute(WebKeys.RENDER_PORTLET_COLUMN_COUNT)[ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_31 $$ sb.append("&p_p_col_pos=")[ FD ]
Line_44 $$ if (sourceGroupId > 0) -->Line_46 $$ sb.append(sourceGroupId)[ CD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_15 $$ if (themeDisplay.isStatePopUp()) [ CD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_12 $$ sb.append("&p_p_lifecycle=0&p_t_lifecycle=")[ FD ]
Line_3 $$ StringBundler sb = new StringBundler(34)-->Line_29 $$ sb.append(columnId)[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_56 $$ String ppid = ParamUtil.getString(request, "p_p_id")[ CD ]
Line_8 $$ Portlet portlet = (Portlet) request.getAttribute(WebKeys.RENDER_PORTLET)-->Line_36 $$ if (portlet.isStatic()) [ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_48 $$ String doAsUserId = themeDisplay.getDoAsUserId()[ FD ]
Line_2 $$ public static String getRefreshURL(HttpServletRequest request, ThemeDisplay themeDisplay) -->Line_53 $$ String currentURL = PortalUtil.getCurrentURL(request)[ FD ]
