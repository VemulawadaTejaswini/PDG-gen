Line_29 $$ if (supportedMethods.contains("GET") && RandomizedTest.rarely()) -->Line_31 $$ httpRequestBuilder.addParam("source", body).method("GET")[ CD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_26 $$ if (!restApi.isBodySupported()) [ FD ]
Line_6 $$ HttpRequestBuilder httpRequestBuilder = httpRequestBuilder()-->Line_33 $$ httpRequestBuilder.body(body).method(RandomizedTest.randomFrom(supportedMethods))[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_8 $$ if (params != null) [ CD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_37 $$ throw new IllegalArgumentException("body is required by [" + restApi.getName() + "] api")[ FD ]
Line_25 $$ if (Strings.hasLength(body)) -->Line_39 $$ httpRequestBuilder.method(RandomizedTest.randomFrom(supportedMethods))[ CD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_8 $$ if (params != null) [ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_42 $$ return httpRequestBuilder.pathParts(restPath.getPathParts())[ CD ]
Line_25 $$ if (Strings.hasLength(body)) -->Line_29 $$ if (supportedMethods.contains("GET") && RandomizedTest.rarely()) [ CD ]
Line_7 $$ Map<String, String> pathParts = new HashMap()-->Line_11 $$ pathParts.put(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_3 $$ boolean indexCreateApi = "create".equals(apiName)[ FD ]
Line_25 $$ if (Strings.hasLength(body)) -->Line_26 $$ if (!restApi.isBodySupported()) [ CD ]
Line_13 $$ if (restApi.getParams().contains(entry.getKey()) || ALWAYS_ACCEPTED_QUERY_STRING_PARAMS.contains(entry.getKey())) -->Line_14 $$ httpRequestBuilder.addParam(entry.getKey(), entry.getValue())[ CD ]
Line_7 $$ Map<String, String> pathParts = new HashMap()-->Line_24 $$ List<String> supportedMethods = restApi.getSupportedMethods(pathParts.keySet())[ FD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_24 $$ List<String> supportedMethods = restApi.getSupportedMethods(pathParts.keySet())[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_9 $$ for (Map.Entry<String, String> entry : params.entrySet()) [ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_3 $$ boolean indexCreateApi = "create".equals(apiName)[ CD ]
Line_6 $$ HttpRequestBuilder httpRequestBuilder = httpRequestBuilder()-->Line_14 $$ httpRequestBuilder.addParam(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_7 $$ Map<String, String> pathParts = new HashMap()[ CD ]
Line_4 $$ String api = indexCreateApi ? "index" : apiName-->Line_5 $$ RestApi restApi = restApi(api)[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_5 $$ RestApi restApi = restApi(api)[ CD ]
Line_10 $$ if (restApi.getPathParts().contains(entry.getKey())) -->Line_13 $$ if (restApi.getParams().contains(entry.getKey()) || ALWAYS_ACCEPTED_QUERY_STRING_PARAMS.contains(entry.getKey())) [ CD ]
Line_29 $$ if (supportedMethods.contains("GET") && RandomizedTest.rarely()) -->Line_30 $$ logger.debug("sending the request body as source param with GET method")[ CD ]
Line_41 $$ RestPath restPath = RandomizedTest.randomFrom(restApi.getFinalPaths(pathParts))-->Line_42 $$ return httpRequestBuilder.pathParts(restPath.getPathParts())[ FD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_10 $$ if (restApi.getPathParts().contains(entry.getKey())) [ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_6 $$ HttpRequestBuilder httpRequestBuilder = httpRequestBuilder()[ CD ]
Line_9 $$ for (Map.Entry<String, String> entry : params.entrySet()) -->Line_13 $$ if (restApi.getParams().contains(entry.getKey()) || ALWAYS_ACCEPTED_QUERY_STRING_PARAMS.contains(entry.getKey())) [ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_25 $$ if (Strings.hasLength(body)) [ CD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_27 $$ throw new IllegalArgumentException("body is not supported by [" + restApi.getName() + "] api")[ FD ]
Line_7 $$ Map<String, String> pathParts = new HashMap()-->Line_41 $$ RestPath restPath = RandomizedTest.randomFrom(restApi.getFinalPaths(pathParts))[ FD ]
Line_6 $$ HttpRequestBuilder httpRequestBuilder = httpRequestBuilder()-->Line_22 $$ httpRequestBuilder.addParam("op_type", "create")[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_33 $$ httpRequestBuilder.body(body).method(RandomizedTest.randomFrom(supportedMethods))[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_41 $$ RestPath restPath = RandomizedTest.randomFrom(restApi.getFinalPaths(pathParts))[ CD ]
Line_24 $$ List<String> supportedMethods = restApi.getSupportedMethods(pathParts.keySet())-->Line_33 $$ httpRequestBuilder.body(body).method(RandomizedTest.randomFrom(supportedMethods))[ FD ]
Line_9 $$ for (Map.Entry<String, String> entry : params.entrySet()) -->Line_11 $$ pathParts.put(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_31 $$ httpRequestBuilder.addParam("source", body).method("GET")[ FD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_41 $$ RestPath restPath = RandomizedTest.randomFrom(restApi.getFinalPaths(pathParts))[ FD ]
Line_10 $$ if (restApi.getPathParts().contains(entry.getKey())) -->Line_11 $$ pathParts.put(entry.getKey(), entry.getValue())[ CD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_21 $$ if (indexCreateApi) [ CD ]
Line_6 $$ HttpRequestBuilder httpRequestBuilder = httpRequestBuilder()-->Line_42 $$ return httpRequestBuilder.pathParts(restPath.getPathParts())[ FD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_16 $$ throw new IllegalArgumentException("param [" + entry.getKey() + "] not supported in [" + restApi.getName() + "] api")[ FD ]
Line_6 $$ HttpRequestBuilder httpRequestBuilder = httpRequestBuilder()-->Line_31 $$ httpRequestBuilder.addParam("source", body).method("GET")[ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_25 $$ if (Strings.hasLength(body)) [ FD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_24 $$ List<String> supportedMethods = restApi.getSupportedMethods(pathParts.keySet())[ CD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_13 $$ if (restApi.getParams().contains(entry.getKey()) || ALWAYS_ACCEPTED_QUERY_STRING_PARAMS.contains(entry.getKey())) [ FD ]
Line_24 $$ List<String> supportedMethods = restApi.getSupportedMethods(pathParts.keySet())-->Line_29 $$ if (supportedMethods.contains("GET") && RandomizedTest.rarely()) [ FD ]
Line_25 $$ if (Strings.hasLength(body)) -->Line_36 $$ if (restApi.isBodyRequired()) [ CD ]
Line_29 $$ if (supportedMethods.contains("GET") && RandomizedTest.rarely()) -->Line_33 $$ httpRequestBuilder.body(body).method(RandomizedTest.randomFrom(supportedMethods))[ CD ]
Line_9 $$ for (Map.Entry<String, String> entry : params.entrySet()) -->Line_10 $$ if (restApi.getPathParts().contains(entry.getKey())) [ FD ]
Line_9 $$ for (Map.Entry<String, String> entry : params.entrySet()) -->Line_14 $$ httpRequestBuilder.addParam(entry.getKey(), entry.getValue())[ FD ]
Line_9 $$ for (Map.Entry<String, String> entry : params.entrySet()) -->Line_16 $$ throw new IllegalArgumentException("param [" + entry.getKey() + "] not supported in [" + restApi.getName() + "] api")[ FD ]
Line_5 $$ RestApi restApi = restApi(api)-->Line_36 $$ if (restApi.isBodyRequired()) [ FD ]
Line_24 $$ List<String> supportedMethods = restApi.getSupportedMethods(pathParts.keySet())-->Line_39 $$ httpRequestBuilder.method(RandomizedTest.randomFrom(supportedMethods))[ FD ]
Line_21 $$ if (indexCreateApi) -->Line_22 $$ httpRequestBuilder.addParam("op_type", "create")[ CD ]
Line_2 $$ private HttpRequestBuilder callApiBuilder(String apiName, Map<String, String> params, String body) -->Line_4 $$ String api = indexCreateApi ? "index" : apiName[ CD ]
Line_6 $$ HttpRequestBuilder httpRequestBuilder = httpRequestBuilder()-->Line_39 $$ httpRequestBuilder.method(RandomizedTest.randomFrom(supportedMethods))[ FD ]
