Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_3 $$ Project project = dir.getProject()[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_7 $$ properties.setProperty(FileTemplate.ATTRIBUTE_NAME, name)[ FD ]
Line_3 $$ Project project = dir.getProject()-->Line_27 $$ throw new IncorrectOperationException(getIncorrectTemplateMessage(templateName, project))[ FD ]
Line_3 $$ Project project = dir.getProject()-->Line_4 $$ FileTemplate template = FileTemplateManager.getInstance(project).getInternalTemplate(templateName)[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_11 $$ String ext = StdFileTypes.JAVA.getDefaultExtension()[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_13 $$ PsiElement element[ CD ]
Line_15 $$ element = askToDefineVariables ? new CreateFromTemplateDialog(project, dir, template, null, properties).create() : FileTemplateUtil.createFromTemplate(template, fileName, properties, dir)-->Line_24 $$ final PsiJavaFile file = (PsiJavaFile) element.getContainingFile()[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_25 $$ PsiClass[] classes = file.getClasses()[ CD ]
Line_24 $$ final PsiJavaFile file = (PsiJavaFile) element.getContainingFile()-->Line_25 $$ PsiClass[] classes = file.getClasses()[ FD ]
Line_13 $$ PsiElement element-->Line_15 $$ element = askToDefineVariables ? new CreateFromTemplateDialog(project, dir, template, null, properties).create() : FileTemplateUtil.createFromTemplate(template, fileName, properties, dir)[ FD ]
Line_13 $$ PsiElement element-->Line_24 $$ final PsiJavaFile file = (PsiJavaFile) element.getContainingFile()[ FD ]
Line_4 $$ FileTemplate template = FileTemplateManager.getInstance(project).getInternalTemplate(templateName)-->Line_15 $$ element = askToDefineVariables ? new CreateFromTemplateDialog(project, dir, template, null, properties).create() : FileTemplateUtil.createFromTemplate(template, fileName, properties, dir)[ FD ]
Line_6 $$ Properties properties = new Properties(defaultProperties)-->Line_15 $$ element = askToDefineVariables ? new CreateFromTemplateDialog(project, dir, template, null, properties).create() : FileTemplateUtil.createFromTemplate(template, fileName, properties, dir)[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_29 $$ return classes[0][ CD ]
Line_6 $$ Properties properties = new Properties(defaultProperties)-->Line_7 $$ properties.setProperty(FileTemplate.ATTRIBUTE_NAME, name)[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_26 $$ if (classes.length < 1) [ CD ]
Line_12 $$ String fileName = name + "." + ext-->Line_15 $$ element = askToDefineVariables ? new CreateFromTemplateDialog(project, dir, template, null, properties).create() : FileTemplateUtil.createFromTemplate(template, fileName, properties, dir)[ FD ]
Line_13 $$ PsiElement element-->Line_22 $$ if (element == null)[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_4 $$ FileTemplate template = FileTemplateManager.getInstance(project).getInternalTemplate(templateName)[ FD ]
Line_6 $$ Properties properties = new Properties(defaultProperties)-->Line_9 $$ properties.setProperty(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_6 $$ Properties properties = new Properties(defaultProperties)[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_24 $$ final PsiJavaFile file = (PsiJavaFile) element.getContainingFile()[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_4 $$ FileTemplate template = FileTemplateManager.getInstance(project).getInternalTemplate(templateName)[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_7 $$ properties.setProperty(FileTemplate.ATTRIBUTE_NAME, name)[ CD ]
Line_22 $$ if (element == null)-->Line_23 $$ return null[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_8 $$ for (Map.Entry<String, String> entry : additionalProperties.entrySet()) [ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_15 $$ element = askToDefineVariables ? new CreateFromTemplateDialog(project, dir, template, null, properties).create() : FileTemplateUtil.createFromTemplate(template, fileName, properties, dir)[ FD ]
Line_15 $$ element = askToDefineVariables ? new CreateFromTemplateDialog(project, dir, template, null, properties).create() : FileTemplateUtil.createFromTemplate(template, fileName, properties, dir)-->Line_22 $$ if (element == null)[ FD ]
Line_8 $$ for (Map.Entry<String, String> entry : additionalProperties.entrySet()) -->Line_9 $$ properties.setProperty(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_22 $$ if (element == null)[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_5 $$ Properties defaultProperties = FileTemplateManager.getInstance(project).getDefaultProperties()[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_27 $$ throw new IncorrectOperationException(getIncorrectTemplateMessage(templateName, project))[ FD ]
Line_3 $$ Project project = dir.getProject()-->Line_5 $$ Properties defaultProperties = FileTemplateManager.getInstance(project).getDefaultProperties()[ FD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_12 $$ String fileName = name + "." + ext[ CD ]
Line_2 $$ private static PsiClass createClassFromTemplate(@NotNull PsiDirectory dir, String name, String templateName, boolean askToDefineVariables, @NotNull Map<String, String> additionalProperties) throws IncorrectOperationException -->Line_3 $$ Project project = dir.getProject()[ CD ]
