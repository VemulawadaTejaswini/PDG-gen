Line_18 $$ if (name.startsWith(PortletQName.PUBLIC_RENDER_PARAMETER_NAMESPACE)) -->Line_20 $$ if (themeDisplay.isLifecycleAction()) [ CD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_5 $$ PublicRenderParameters publicRenderParameters = PublicRenderParametersPool.get(request, layout.getPlid(), portletApp.isWARFile())-->Line_28 $$ publicRenderParameters.remove(publicRenderParameterName)[ FD ]
Line_21 $$ String[] oldValues = publicRenderParameters.get(publicRenderParameterName)-->Line_23 $$ values = ArrayUtil.append(values, oldValues)[ FD ]
Line_18 $$ if (name.startsWith(PortletQName.PUBLIC_RENDER_PARAMETER_NAMESPACE)) -->Line_28 $$ publicRenderParameters.remove(publicRenderParameterName)[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_20 $$ if (themeDisplay.isLifecycleAction()) [ FD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_4 $$ PortletApp portletApp = portlet.getPortletApp()[ CD ]
Line_17 $$ String publicRenderParameterName = PortletQNameUtil.getPublicRenderParameterName(qName)-->Line_26 $$ publicRenderParameters.put(publicRenderParameterName, values)[ FD ]
Line_9 $$ QName qName = PortletQNameUtil.getQName(name)-->Line_17 $$ String publicRenderParameterName = PortletQNameUtil.getPublicRenderParameterName(qName)[ FD ]
Line_9 $$ QName qName = PortletQNameUtil.getQName(name)-->Line_10 $$ if (qName == null) [ FD ]
Line_20 $$ if (themeDisplay.isLifecycleAction()) -->Line_22 $$ if ((oldValues != null) && (oldValues.length != 0)) [ CD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_6 $$ Map<String, String[]> parameters = request.getParameterMap()[ CD ]
Line_9 $$ QName qName = PortletQNameUtil.getQName(name)-->Line_13 $$ PublicRenderParameter publicRenderParameter = portlet.getPublicRenderParameter(qName.getNamespaceURI(), qName.getLocalPart())[ FD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_4 $$ PortletApp portletApp = portlet.getPortletApp()[ FD ]
Line_17 $$ String publicRenderParameterName = PortletQNameUtil.getPublicRenderParameterName(qName)-->Line_21 $$ String[] oldValues = publicRenderParameters.get(publicRenderParameterName)[ FD ]
Line_5 $$ PublicRenderParameters publicRenderParameters = PublicRenderParametersPool.get(request, layout.getPlid(), portletApp.isWARFile())-->Line_26 $$ publicRenderParameters.put(publicRenderParameterName, values)[ FD ]
Line_19 $$ String[] values = entry.getValue()-->Line_26 $$ publicRenderParameters.put(publicRenderParameterName, values)[ FD ]
Line_20 $$ if (themeDisplay.isLifecycleAction()) -->Line_21 $$ String[] oldValues = publicRenderParameters.get(publicRenderParameterName)[ CD ]
Line_13 $$ PublicRenderParameter publicRenderParameter = portlet.getPublicRenderParameter(qName.getNamespaceURI(), qName.getLocalPart())-->Line_14 $$ if (publicRenderParameter == null) [ FD ]
Line_22 $$ if ((oldValues != null) && (oldValues.length != 0)) -->Line_23 $$ values = ArrayUtil.append(values, oldValues)[ CD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_5 $$ PublicRenderParameters publicRenderParameters = PublicRenderParametersPool.get(request, layout.getPlid(), portletApp.isWARFile())[ CD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_6 $$ Map<String, String[]> parameters = request.getParameterMap()[ FD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_5 $$ PublicRenderParameters publicRenderParameters = PublicRenderParametersPool.get(request, layout.getPlid(), portletApp.isWARFile())[ FD ]
Line_8 $$ String name = entry.getKey()-->Line_9 $$ QName qName = PortletQNameUtil.getQName(name)[ FD ]
Line_17 $$ String publicRenderParameterName = PortletQNameUtil.getPublicRenderParameterName(qName)-->Line_28 $$ publicRenderParameters.remove(publicRenderParameterName)[ FD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_13 $$ PublicRenderParameter publicRenderParameter = portlet.getPublicRenderParameter(qName.getNamespaceURI(), qName.getLocalPart())[ FD ]
Line_4 $$ PortletApp portletApp = portlet.getPortletApp()-->Line_5 $$ PublicRenderParameters publicRenderParameters = PublicRenderParametersPool.get(request, layout.getPlid(), portletApp.isWARFile())[ FD ]
Line_6 $$ Map<String, String[]> parameters = request.getParameterMap()-->Line_7 $$ for (Map.Entry<String, String[]> entry : parameters.entrySet()) [ FD ]
Line_18 $$ if (name.startsWith(PortletQName.PUBLIC_RENDER_PARAMETER_NAMESPACE)) -->Line_19 $$ String[] values = entry.getValue()[ CD ]
Line_7 $$ for (Map.Entry<String, String[]> entry : parameters.entrySet()) -->Line_8 $$ String name = entry.getKey()[ FD ]
Line_5 $$ PublicRenderParameters publicRenderParameters = PublicRenderParametersPool.get(request, layout.getPlid(), portletApp.isWARFile())-->Line_21 $$ String[] oldValues = publicRenderParameters.get(publicRenderParameterName)[ FD ]
Line_8 $$ String name = entry.getKey()-->Line_18 $$ if (name.startsWith(PortletQName.PUBLIC_RENDER_PARAMETER_NAMESPACE)) [ FD ]
Line_19 $$ String[] values = entry.getValue()-->Line_23 $$ values = ArrayUtil.append(values, oldValues)[ FD ]
Line_2 $$ protected void processPublicRenderParameters(HttpServletRequest request, Layout layout, Portlet portlet) -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_18 $$ if (name.startsWith(PortletQName.PUBLIC_RENDER_PARAMETER_NAMESPACE)) -->Line_26 $$ publicRenderParameters.put(publicRenderParameterName, values)[ CD ]
Line_7 $$ for (Map.Entry<String, String[]> entry : parameters.entrySet()) -->Line_19 $$ String[] values = entry.getValue()[ FD ]
Line_23 $$ values = ArrayUtil.append(values, oldValues)-->Line_26 $$ publicRenderParameters.put(publicRenderParameterName, values)[ FD ]
