Line_15 $$ List<Key> keys = value != null ? values.get(value) : keysForNullValue-->Line_22 $$ keys.add(e.getKey())[ FD ]
Line_6 $$ BufferExposingByteArrayOutputStream out = new BufferExposingByteArrayOutputStream(ourSpareByteArray.getBuffer(4 * data.size()))-->Line_33 $$ myContents.put(id, new ByteSequence(out.getInternalBuffer(), 0, out.size()))[ FD ]
Line_14 $$ Value value = e.getValue()-->Line_18 $$ values.put(value, keys = new SmartList<Key>())[ FD ]
Line_18 $$ values.put(value, keys = new SmartList<Key>())-->Line_20 $$ keys = keysForNullValue = new SmartList<Key>()[ FD ]
Line_7 $$ DataOutputStream stream = new DataOutputStream(out)-->Line_25 $$ myValueExternalizer.save(stream, null)[ FD ]
Line_2 $$ private boolean savePersistentData(Map<Key, Value> data, int id, boolean delayedReading) -->Line_33 $$ myContents.put(id, new ByteSequence(out.getInternalBuffer(), 0, out.size()))[ FD ]
Line_12 $$ List<Key> keysForNullValue = null-->Line_24 $$ if (keysForNullValue != null) [ FD ]
Line_16 $$ if (keys == null) -->Line_17 $$ if (value != null)[ CD ]
Line_11 $$ THashMap<Value, List<Key>> values = new THashMap<Value, List<Key>>()-->Line_18 $$ values.put(value, keys = new SmartList<Key>())[ FD ]
Line_14 $$ Value value = e.getValue()-->Line_29 $$ myValueExternalizer.save(stream, value)[ FD ]
Line_14 $$ Value value = e.getValue()-->Line_15 $$ List<Key> keys = value != null ? values.get(value) : keysForNullValue[ FD ]
Line_2 $$ private boolean savePersistentData(Map<Key, Value> data, int id, boolean delayedReading) -->Line_6 $$ BufferExposingByteArrayOutputStream out = new BufferExposingByteArrayOutputStream(ourSpareByteArray.getBuffer(4 * data.size()))[ FD ]
Line_4 $$ if (delayedReading && myContents.containsMapping(id))-->Line_5 $$ return false[ CD ]
Line_8 $$ int size = data.size()-->Line_9 $$ DataInputOutputUtil.writeINT(stream, size)[ FD ]
Line_12 $$ List<Key> keysForNullValue = null-->Line_26 $$ mySnapshotIndexExternalizer.save(stream, keysForNullValue)[ FD ]
Line_7 $$ DataOutputStream stream = new DataOutputStream(out)-->Line_30 $$ mySnapshotIndexExternalizer.save(stream, values.get(value))[ FD ]
Line_13 $$ for (Map.Entry<Key, Value> e : data.entrySet()) -->Line_22 $$ keys.add(e.getKey())[ FD ]
Line_14 $$ Value value = e.getValue()-->Line_30 $$ mySnapshotIndexExternalizer.save(stream, values.get(value))[ FD ]
Line_15 $$ List<Key> keys = value != null ? values.get(value) : keysForNullValue-->Line_18 $$ values.put(value, keys = new SmartList<Key>())[ FD ]
Line_10 $$ if (size > 0) -->Line_11 $$ THashMap<Value, List<Key>> values = new THashMap<Value, List<Key>>()[ CD ]
Line_2 $$ private boolean savePersistentData(Map<Key, Value> data, int id, boolean delayedReading) -->Line_8 $$ int size = data.size()[ FD ]
Line_20 $$ keys = keysForNullValue = new SmartList<Key>()-->Line_26 $$ mySnapshotIndexExternalizer.save(stream, keysForNullValue)[ FD ]
Line_11 $$ THashMap<Value, List<Key>> values = new THashMap<Value, List<Key>>()-->Line_28 $$ for (Value value : values.keySet()) [ FD ]
Line_13 $$ for (Map.Entry<Key, Value> e : data.entrySet()) -->Line_14 $$ Value value = e.getValue()[ FD ]
Line_20 $$ keys = keysForNullValue = new SmartList<Key>()-->Line_24 $$ if (keysForNullValue != null) [ FD ]
Line_8 $$ int size = data.size()-->Line_10 $$ if (size > 0) [ FD ]
Line_20 $$ keys = keysForNullValue = new SmartList<Key>()-->Line_22 $$ keys.add(e.getKey())[ FD ]
Line_7 $$ DataOutputStream stream = new DataOutputStream(out)-->Line_29 $$ myValueExternalizer.save(stream, value)[ FD ]
Line_18 $$ values.put(value, keys = new SmartList<Key>())-->Line_22 $$ keys.add(e.getKey())[ FD ]
Line_24 $$ if (keysForNullValue != null) -->Line_25 $$ myValueExternalizer.save(stream, null)[ CD ]
Line_10 $$ if (size > 0) -->Line_24 $$ if (keysForNullValue != null) [ CD ]
Line_2 $$ private boolean savePersistentData(Map<Key, Value> data, int id, boolean delayedReading) -->Line_37 $$ return true[ CD ]
Line_10 $$ if (size > 0) -->Line_12 $$ List<Key> keysForNullValue = null[ CD ]
Line_2 $$ private boolean savePersistentData(Map<Key, Value> data, int id, boolean delayedReading) -->Line_13 $$ for (Map.Entry<Key, Value> e : data.entrySet()) [ FD ]
Line_11 $$ THashMap<Value, List<Key>> values = new THashMap<Value, List<Key>>()-->Line_30 $$ mySnapshotIndexExternalizer.save(stream, values.get(value))[ FD ]
Line_24 $$ if (keysForNullValue != null) -->Line_26 $$ mySnapshotIndexExternalizer.save(stream, keysForNullValue)[ CD ]
Line_12 $$ List<Key> keysForNullValue = null-->Line_20 $$ keys = keysForNullValue = new SmartList<Key>()[ FD ]
Line_7 $$ DataOutputStream stream = new DataOutputStream(out)-->Line_9 $$ DataInputOutputUtil.writeINT(stream, size)[ FD ]
Line_17 $$ if (value != null)-->Line_20 $$ keys = keysForNullValue = new SmartList<Key>()[ CD ]
Line_15 $$ List<Key> keys = value != null ? values.get(value) : keysForNullValue-->Line_20 $$ keys = keysForNullValue = new SmartList<Key>()[ FD ]
Line_15 $$ List<Key> keys = value != null ? values.get(value) : keysForNullValue-->Line_16 $$ if (keys == null) [ FD ]
Line_2 $$ private boolean savePersistentData(Map<Key, Value> data, int id, boolean delayedReading) -->Line_4 $$ if (delayedReading && myContents.containsMapping(id))[ FD ]
Line_14 $$ Value value = e.getValue()-->Line_17 $$ if (value != null)[ FD ]
Line_11 $$ THashMap<Value, List<Key>> values = new THashMap<Value, List<Key>>()-->Line_15 $$ List<Key> keys = value != null ? values.get(value) : keysForNullValue[ FD ]
Line_7 $$ DataOutputStream stream = new DataOutputStream(out)-->Line_26 $$ mySnapshotIndexExternalizer.save(stream, keysForNullValue)[ FD ]
Line_17 $$ if (value != null)-->Line_18 $$ values.put(value, keys = new SmartList<Key>())[ CD ]
