Line_3 $$ final Map<String, String> result = new HashMap<String, String>(environment)-->Line_5 $$ if (PATH_ENV_VARIABLE.equals(entry.getKey()) && result.containsKey(PATH_ENV_VARIABLE)) [ FD ]
Line_5 $$ if (PATH_ENV_VARIABLE.equals(entry.getKey()) && result.containsKey(PATH_ENV_VARIABLE)) -->Line_8 $$ result.put(entry.getKey(), entry.getValue())[ CD ]
Line_4 $$ for (Map.Entry<String, String> entry : extraEnvironment.entrySet()) -->Line_8 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public static Map<String, String> mergeEnvVariables(@NotNull Map<String, String> environment, @NotNull Map<String, String> extraEnvironment) -->Line_11 $$ return result[ CD ]
Line_3 $$ final Map<String, String> result = new HashMap<String, String>(environment)-->Line_8 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : extraEnvironment.entrySet()) -->Line_6 $$ result.put(PATH_ENV_VARIABLE, result.get(PATH_ENV_VARIABLE) + File.pathSeparator + entry.getValue())[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : extraEnvironment.entrySet()) -->Line_5 $$ if (PATH_ENV_VARIABLE.equals(entry.getKey()) && result.containsKey(PATH_ENV_VARIABLE)) [ FD ]
Line_5 $$ if (PATH_ENV_VARIABLE.equals(entry.getKey()) && result.containsKey(PATH_ENV_VARIABLE)) -->Line_6 $$ result.put(PATH_ENV_VARIABLE, result.get(PATH_ENV_VARIABLE) + File.pathSeparator + entry.getValue())[ CD ]
Line_3 $$ final Map<String, String> result = new HashMap<String, String>(environment)-->Line_6 $$ result.put(PATH_ENV_VARIABLE, result.get(PATH_ENV_VARIABLE) + File.pathSeparator + entry.getValue())[ FD ]
Line_2 $$ public static Map<String, String> mergeEnvVariables(@NotNull Map<String, String> environment, @NotNull Map<String, String> extraEnvironment) -->Line_3 $$ final Map<String, String> result = new HashMap<String, String>(environment)[ CD ]
Line_2 $$ public static Map<String, String> mergeEnvVariables(@NotNull Map<String, String> environment, @NotNull Map<String, String> extraEnvironment) -->Line_4 $$ for (Map.Entry<String, String> entry : extraEnvironment.entrySet()) [ FD ]
