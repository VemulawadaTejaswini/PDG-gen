Line_2 $$ private static int mergeMaps(Map<String, Integer> map, Map<String, Integer> other) -->Line_3 $$ int deltaSize = 0[ CD ]
Line_2 $$ private static int mergeMaps(Map<String, Integer> map, Map<String, Integer> other) -->Line_10 $$ return deltaSize[ CD ]
Line_4 $$ for (Map.Entry<String, Integer> entry : other.entrySet()) -->Line_5 $$ if (!map.containsKey(entry.getKey())) [ FD ]
Line_3 $$ int deltaSize = 0-->Line_6 $$ deltaSize += entry.getKey().getBytes().length + SIZE_OF_INT[ FD ]
Line_2 $$ private static int mergeMaps(Map<String, Integer> map, Map<String, Integer> other) -->Line_5 $$ if (!map.containsKey(entry.getKey())) [ FD ]
Line_5 $$ if (!map.containsKey(entry.getKey())) -->Line_6 $$ deltaSize += entry.getKey().getBytes().length + SIZE_OF_INT[ CD ]
Line_2 $$ private static int mergeMaps(Map<String, Integer> map, Map<String, Integer> other) -->Line_4 $$ for (Map.Entry<String, Integer> entry : other.entrySet()) [ FD ]
Line_4 $$ for (Map.Entry<String, Integer> entry : other.entrySet()) -->Line_6 $$ deltaSize += entry.getKey().getBytes().length + SIZE_OF_INT[ FD ]
Line_2 $$ private static int mergeMaps(Map<String, Integer> map, Map<String, Integer> other) -->Line_8 $$ map.put(entry.getKey(), map.getOrDefault(entry.getKey(), 0) + other.getOrDefault(entry.getKey(), 0))[ FD ]
Line_4 $$ for (Map.Entry<String, Integer> entry : other.entrySet()) -->Line_8 $$ map.put(entry.getKey(), map.getOrDefault(entry.getKey(), 0) + other.getOrDefault(entry.getKey(), 0))[ FD ]
