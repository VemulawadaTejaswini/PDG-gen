Line_11 $$ final ModelNode environment = new ModelNode()-->Line_15 $$ bindingAdd.get(ENVIRONMENT).set(environment)[ FD ]
Line_5 $$ final ModelNode bindingAdd = new ModelNode()-->Line_16 $$ final ModelNode addResult = managementClient.getControllerClient().execute(bindingAdd)[ FD ]
Line_5 $$ final ModelNode bindingAdd = new ModelNode()-->Line_15 $$ bindingAdd.get(ENVIRONMENT).set(environment)[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_7 $$ bindingAdd.get(OP_ADDR).set(address)[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_17 $$ Assert.assertFalse(addResult.get(FAILURE_DESCRIPTION).toString(), addResult.get(FAILURE_DESCRIPTION).isDefined())[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_3 $$ deployModule()[ CD ]
Line_5 $$ final ModelNode bindingAdd = new ModelNode()-->Line_9 $$ bindingAdd.get(MODULE).set(MODULE_NAME)[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_10 $$ bindingAdd.get(CLASS).set(ObjectFactoryWithEnvironmentBinding.class.getName())[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_6 $$ bindingAdd.get(OP).set(ADD)[ CD ]
Line_11 $$ final ModelNode environment = new ModelNode()-->Line_13 $$ environment.add(property.getKey(), property.getValue())[ FD ]
Line_16 $$ final ModelNode addResult = managementClient.getControllerClient().execute(bindingAdd)-->Line_17 $$ Assert.assertFalse(addResult.get(FAILURE_DESCRIPTION).toString(), addResult.get(FAILURE_DESCRIPTION).isDefined())[ FD ]
Line_5 $$ final ModelNode bindingAdd = new ModelNode()-->Line_10 $$ bindingAdd.get(CLASS).set(ObjectFactoryWithEnvironmentBinding.class.getName())[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_18 $$ LOGGER.info("Object factory bound.")[ CD ]
Line_5 $$ final ModelNode bindingAdd = new ModelNode()-->Line_8 $$ bindingAdd.get(BINDING_TYPE).set(OBJECT_FACTORY)[ FD ]
Line_5 $$ final ModelNode bindingAdd = new ModelNode()-->Line_7 $$ bindingAdd.get(OP_ADDR).set(address)[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_15 $$ bindingAdd.get(ENVIRONMENT).set(environment)[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_16 $$ final ModelNode addResult = managementClient.getControllerClient().execute(bindingAdd)[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_4 $$ final ModelNode address = createAddress()[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_9 $$ bindingAdd.get(MODULE).set(MODULE_NAME)[ CD ]
Line_12 $$ for (Map.Entry<String, String> property : ENVIRONMENT_PROPERTIES.entrySet()) -->Line_13 $$ environment.add(property.getKey(), property.getValue())[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_11 $$ final ModelNode environment = new ModelNode()[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_16 $$ final ModelNode addResult = managementClient.getControllerClient().execute(bindingAdd)[ FD ]
Line_5 $$ final ModelNode bindingAdd = new ModelNode()-->Line_6 $$ bindingAdd.get(OP).set(ADD)[ FD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_5 $$ final ModelNode bindingAdd = new ModelNode()[ CD ]
Line_2 $$ public void setup(final ManagementClient managementClient, final String containerId) throws Exception -->Line_8 $$ bindingAdd.get(BINDING_TYPE).set(OBJECT_FACTORY)[ CD ]
Line_4 $$ final ModelNode address = createAddress()-->Line_7 $$ bindingAdd.get(OP_ADDR).set(address)[ FD ]
