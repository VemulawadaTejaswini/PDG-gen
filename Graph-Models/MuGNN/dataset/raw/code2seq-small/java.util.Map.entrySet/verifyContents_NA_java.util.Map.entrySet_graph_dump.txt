Line_2 $$ private void verifyContents(Path listingPath) throws Exception -->Line_4 $$ Text key = new Text()[ CD ]
Line_14 $$ for (Map.Entry<String, String> entry : actualValues.entrySet()) -->Line_15 $$ Assert.assertEquals(entry.getValue(), expectedValues.get(entry.getKey()))[ FD ]
Line_2 $$ private void verifyContents(Path listingPath) throws Exception -->Line_5 $$ CopyListingFileStatus value = new CopyListingFileStatus()[ CD ]
Line_5 $$ CopyListingFileStatus value = new CopyListingFileStatus()-->Line_8 $$ if (value.isDirectory() && key.toString().equals("")) [ FD ]
Line_2 $$ private void verifyContents(Path listingPath) throws Exception -->Line_7 $$ while (reader.next(key, value)) [ CD ]
Line_5 $$ CopyListingFileStatus value = new CopyListingFileStatus()-->Line_11 $$ actualValues.put(value.getPath().toString(), key.toString())[ FD ]
Line_2 $$ private void verifyContents(Path listingPath) throws Exception -->Line_6 $$ Map<String, String> actualValues = new HashMap<String, String>()[ CD ]
Line_4 $$ Text key = new Text()-->Line_8 $$ if (value.isDirectory() && key.toString().equals("")) [ FD ]
Line_7 $$ while (reader.next(key, value)) -->Line_8 $$ if (value.isDirectory() && key.toString().equals("")) [ CD ]
Line_7 $$ while (reader.next(key, value)) -->Line_11 $$ actualValues.put(value.getPath().toString(), key.toString())[ CD ]
Line_2 $$ private void verifyContents(Path listingPath) throws Exception -->Line_3 $$ SequenceFile.Reader reader = new SequenceFile.Reader(cluster.getFileSystem(), listingPath, new Configuration())[ CD ]
Line_6 $$ Map<String, String> actualValues = new HashMap<String, String>()-->Line_13 $$ Assert.assertEquals(expectedValues.size(), actualValues.size())[ FD ]
Line_6 $$ Map<String, String> actualValues = new HashMap<String, String>()-->Line_11 $$ actualValues.put(value.getPath().toString(), key.toString())[ FD ]
Line_6 $$ Map<String, String> actualValues = new HashMap<String, String>()-->Line_14 $$ for (Map.Entry<String, String> entry : actualValues.entrySet()) [ FD ]
Line_3 $$ SequenceFile.Reader reader = new SequenceFile.Reader(cluster.getFileSystem(), listingPath, new Configuration())-->Line_7 $$ while (reader.next(key, value)) [ FD ]
Line_4 $$ Text key = new Text()-->Line_11 $$ actualValues.put(value.getPath().toString(), key.toString())[ FD ]
Line_5 $$ CopyListingFileStatus value = new CopyListingFileStatus()-->Line_7 $$ while (reader.next(key, value)) [ FD ]
Line_4 $$ Text key = new Text()-->Line_7 $$ while (reader.next(key, value)) [ FD ]
Line_2 $$ private void verifyContents(Path listingPath) throws Exception -->Line_13 $$ Assert.assertEquals(expectedValues.size(), actualValues.size())[ CD ]
