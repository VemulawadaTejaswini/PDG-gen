Line_9 $$ for (Entry<String, Class<?>> entry : properties.entrySet()) -->Line_11 $$ cc.addMethod(generateSetter(cc, entry.getKey(), entry.getValue()))[ FD ]
Line_5 $$ CtClass cc = pool.makeClass(className)-->Line_11 $$ cc.addMethod(generateSetter(cc, entry.getKey(), entry.getValue()))[ FD ]
Line_4 $$ ClassPool pool = ClassPool.getDefault()-->Line_5 $$ CtClass cc = pool.makeClass(className)[ FD ]
Line_5 $$ CtClass cc = pool.makeClass(className)-->Line_10 $$ cc.addMethod(generateGetter(cc, entry.getKey(), entry.getValue()))[ FD ]
Line_2 $$ protected static Class generate(String className, Map<String, Class<?>> properties) -->Line_5 $$ CtClass cc = pool.makeClass(className)[ FD ]
Line_5 $$ CtClass cc = pool.makeClass(className)-->Line_13 $$ return cc.toClass()[ FD ]
Line_2 $$ protected static Class generate(String className, Map<String, Class<?>> properties) -->Line_9 $$ for (Entry<String, Class<?>> entry : properties.entrySet()) [ FD ]
Line_9 $$ for (Entry<String, Class<?>> entry : properties.entrySet()) -->Line_10 $$ cc.addMethod(generateGetter(cc, entry.getKey(), entry.getValue()))[ FD ]
Line_5 $$ CtClass cc = pool.makeClass(className)-->Line_6 $$ cc.addInterface(resolveCtClass(Serializable.class))[ FD ]
Line_5 $$ CtClass cc = pool.makeClass(className)-->Line_7 $$ cc.addField(new CtField(resolveCtClass(Map.class), "theMap", cc))[ FD ]
Line_2 $$ protected static Class generate(String className, Map<String, Class<?>> properties) -->Line_8 $$ cc.addConstructor(generateConstructor(className, cc))[ FD ]
Line_5 $$ CtClass cc = pool.makeClass(className)-->Line_8 $$ cc.addConstructor(generateConstructor(className, cc))[ FD ]
