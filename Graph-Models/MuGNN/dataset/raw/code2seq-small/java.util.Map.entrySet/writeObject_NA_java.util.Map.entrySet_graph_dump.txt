Line_4 $$ for (Map.Entry<String, Object> entry : this.headers.entrySet()) -->Line_6 $$ keysToIgnore.add(entry.getKey())[ FD ]
Line_2 $$ private void writeObject(ObjectOutputStream out) throws IOException -->Line_10 $$ out.defaultWriteObject()[ FD ]
Line_9 $$ if (keysToIgnore.isEmpty()) -->Line_12 $$ if (logger.isDebugEnabled()) [ CD ]
Line_4 $$ for (Map.Entry<String, Object> entry : this.headers.entrySet()) -->Line_5 $$ if (!(entry.getValue() instanceof Serializable)) [ FD ]
Line_2 $$ private void writeObject(ObjectOutputStream out) throws IOException -->Line_15 $$ out.writeObject(new MessageHeaders(this, keysToIgnore))[ FD ]
Line_9 $$ if (keysToIgnore.isEmpty()) -->Line_10 $$ out.defaultWriteObject()[ CD ]
Line_12 $$ if (logger.isDebugEnabled()) -->Line_13 $$ logger.debug("Ignoring non-serializable message headers: " + keysToIgnore)[ CD ]
Line_3 $$ Set<String> keysToIgnore = new HashSet<String>()-->Line_9 $$ if (keysToIgnore.isEmpty()) [ FD ]
Line_9 $$ if (keysToIgnore.isEmpty()) -->Line_15 $$ out.writeObject(new MessageHeaders(this, keysToIgnore))[ CD ]
Line_2 $$ private void writeObject(ObjectOutputStream out) throws IOException -->Line_9 $$ if (keysToIgnore.isEmpty()) [ CD ]
Line_3 $$ Set<String> keysToIgnore = new HashSet<String>()-->Line_6 $$ keysToIgnore.add(entry.getKey())[ FD ]
Line_2 $$ private void writeObject(ObjectOutputStream out) throws IOException -->Line_3 $$ Set<String> keysToIgnore = new HashSet<String>()[ CD ]
Line_5 $$ if (!(entry.getValue() instanceof Serializable)) -->Line_6 $$ keysToIgnore.add(entry.getKey())[ CD ]
