Line_2 $$ private void _sortAndWrite(UnsyncBufferedWriter unsyncBufferedWriter, Map<String, String> messages, boolean firstLine) throws IOException -->Line_9 $$ unsyncBufferedWriter.write(entry.getKey() + "=" + entry.getValue())[ FD ]
Line_2 $$ private void _sortAndWrite(UnsyncBufferedWriter unsyncBufferedWriter, Map<String, String> messages, boolean firstLine) throws IOException -->Line_4 $$ for (Map.Entry<String, String> entry : messages.entrySet()) [ FD ]
Line_2 $$ private void _sortAndWrite(UnsyncBufferedWriter unsyncBufferedWriter, Map<String, String> messages, boolean firstLine) throws IOException -->Line_11 $$ messages.clear()[ FD ]
Line_5 $$ if (!firstLine || !firstEntry) -->Line_6 $$ unsyncBufferedWriter.newLine()[ CD ]
Line_2 $$ private void _sortAndWrite(UnsyncBufferedWriter unsyncBufferedWriter, Map<String, String> messages, boolean firstLine) throws IOException -->Line_3 $$ boolean firstEntry = true[ CD ]
Line_3 $$ boolean firstEntry = true-->Line_5 $$ if (!firstLine || !firstEntry) [ FD ]
Line_2 $$ private void _sortAndWrite(UnsyncBufferedWriter unsyncBufferedWriter, Map<String, String> messages, boolean firstLine) throws IOException -->Line_5 $$ if (!firstLine || !firstEntry) [ FD ]
Line_2 $$ private void _sortAndWrite(UnsyncBufferedWriter unsyncBufferedWriter, Map<String, String> messages, boolean firstLine) throws IOException -->Line_11 $$ messages.clear()[ CD ]
Line_3 $$ boolean firstEntry = true-->Line_8 $$ firstEntry = false[ FD ]
Line_2 $$ private void _sortAndWrite(UnsyncBufferedWriter unsyncBufferedWriter, Map<String, String> messages, boolean firstLine) throws IOException -->Line_6 $$ unsyncBufferedWriter.newLine()[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : messages.entrySet()) -->Line_9 $$ unsyncBufferedWriter.write(entry.getKey() + "=" + entry.getValue())[ FD ]
