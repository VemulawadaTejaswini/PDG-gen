Line_2 $$ private QueryStateMachine createQueryStateMachine() -->Line_3 $$ QueryStateMachine stateMachine = new QueryStateMachine(QUERY_ID, QUERY, TEST_SESSION, LOCATION, executor)[ CD ]
Line_2 $$ private QueryStateMachine createQueryStateMachine() -->Line_12 $$ return stateMachine[ CD ]
Line_3 $$ QueryStateMachine stateMachine = new QueryStateMachine(QUERY_ID, QUERY, TEST_SESSION, LOCATION, executor)-->Line_5 $$ stateMachine.setOutputFieldNames(OUTPUT_FIELD_NAMES)[ FD ]
Line_2 $$ private QueryStateMachine createQueryStateMachine() -->Line_7 $$ stateMachine.setMemoryPool(MEMORY_POOL)[ CD ]
Line_2 $$ private QueryStateMachine createQueryStateMachine() -->Line_5 $$ stateMachine.setOutputFieldNames(OUTPUT_FIELD_NAMES)[ CD ]
Line_8 $$ for (Entry<String, String> entry : SET_SESSION_PROPERTIES.entrySet()) -->Line_9 $$ stateMachine.addSetSessionProperties(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private QueryStateMachine createQueryStateMachine() -->Line_6 $$ stateMachine.setUpdateType(UPDATE_TYPE)[ CD ]
Line_3 $$ QueryStateMachine stateMachine = new QueryStateMachine(QUERY_ID, QUERY, TEST_SESSION, LOCATION, executor)-->Line_7 $$ stateMachine.setMemoryPool(MEMORY_POOL)[ FD ]
Line_3 $$ QueryStateMachine stateMachine = new QueryStateMachine(QUERY_ID, QUERY, TEST_SESSION, LOCATION, executor)-->Line_9 $$ stateMachine.addSetSessionProperties(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private QueryStateMachine createQueryStateMachine() -->Line_11 $$ RESET_SESSION_PROPERTIES.forEach(stateMachine::<>addResetSessionProperties)[ CD ]
Line_3 $$ QueryStateMachine stateMachine = new QueryStateMachine(QUERY_ID, QUERY, TEST_SESSION, LOCATION, executor)-->Line_6 $$ stateMachine.setUpdateType(UPDATE_TYPE)[ FD ]
Line_3 $$ QueryStateMachine stateMachine = new QueryStateMachine(QUERY_ID, QUERY, TEST_SESSION, LOCATION, executor)-->Line_4 $$ stateMachine.setInputs(INPUTS)[ FD ]
Line_2 $$ private QueryStateMachine createQueryStateMachine() -->Line_4 $$ stateMachine.setInputs(INPUTS)[ CD ]
