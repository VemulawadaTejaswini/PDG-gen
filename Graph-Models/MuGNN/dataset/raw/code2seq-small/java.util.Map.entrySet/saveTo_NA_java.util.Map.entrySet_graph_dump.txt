Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_11 $$ profile.clearProcessors()[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_11 $$ profile.clearProcessors()[ CD ]
Line_16 $$ for (Map.Entry<String, String> entry : myOptionsModel.getOptions().entrySet()) -->Line_17 $$ profile.setOption(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_10 $$ profile.setOutputRelativeToContentRoot(myRbRelativeToContentRoot.isSelected())[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_13 $$ profile.addProcessor(processor)[ FD ]
Line_8 $$ final String testsDir = myGeneratedTestsDirField.getText().trim()-->Line_9 $$ profile.setGeneratedSourcesDirectoryName(StringUtil.isEmpty(testsDir) ? null : testsDir, true)[ FD ]
Line_6 $$ final String productionDir = myGeneratedProductionDirField.getText().trim()-->Line_7 $$ profile.setGeneratedSourcesDirectoryName(StringUtil.isEmpty(productionDir) ? null : productionDir, false)[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_5 $$ profile.setProcessorPath(myProcessorPathField.getText().trim())[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_4 $$ profile.setObtainProcessorsFromClasspath(myRbClasspath.isSelected())[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_4 $$ profile.setObtainProcessorsFromClasspath(myRbClasspath.isSelected())[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_17 $$ profile.setOption(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_5 $$ profile.setProcessorPath(myProcessorPathField.getText().trim())[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_7 $$ profile.setGeneratedSourcesDirectoryName(StringUtil.isEmpty(productionDir) ? null : productionDir, false)[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_3 $$ profile.setEnabled(myCbEnableProcessing.isSelected())[ FD ]
Line_12 $$ for (String processor : myProcessorsModel.getProcessors()) -->Line_13 $$ profile.addProcessor(processor)[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_7 $$ profile.setGeneratedSourcesDirectoryName(StringUtil.isEmpty(productionDir) ? null : productionDir, false)[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_15 $$ profile.clearProcessorOptions()[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_15 $$ profile.clearProcessorOptions()[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_3 $$ profile.setEnabled(myCbEnableProcessing.isSelected())[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_6 $$ final String productionDir = myGeneratedProductionDirField.getText().trim()[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_10 $$ profile.setOutputRelativeToContentRoot(myRbRelativeToContentRoot.isSelected())[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_9 $$ profile.setGeneratedSourcesDirectoryName(StringUtil.isEmpty(testsDir) ? null : testsDir, true)[ FD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_8 $$ final String testsDir = myGeneratedTestsDirField.getText().trim()[ CD ]
Line_2 $$ public void saveTo(ProcessorConfigProfile profile) -->Line_9 $$ profile.setGeneratedSourcesDirectoryName(StringUtil.isEmpty(testsDir) ? null : testsDir, true)[ CD ]
