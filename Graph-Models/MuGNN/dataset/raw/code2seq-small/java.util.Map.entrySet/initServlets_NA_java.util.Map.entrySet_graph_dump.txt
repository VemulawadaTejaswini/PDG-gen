Line_20 $$ Exception exception = servletExceptionAdaptor.getException()-->Line_21 $$ if (exception != null) [ FD ]
Line_21 $$ if (exception != null) -->Line_22 $$ serviceRegistration.unregister()[ CD ]
Line_13 $$ for (Entry<String, String> initParametersEntry : initParameters.entrySet()) -->Line_14 $$ String key = initParametersEntry.getKey()[ FD ]
Line_18 $$ ServletExceptionAdapter servletExceptionAdaptor = new ServletExceptionAdapter(servletDefinition.getServlet())-->Line_19 $$ ServiceRegistration<Servlet> serviceRegistration = _bundleContext.registerService(Servlet.class, servletExceptionAdaptor, properties)[ FD ]
Line_5 $$ ServletDefinition servletDefinition = entry.getValue()-->Line_11 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_PATTERN, servletDefinition.getURLPatterns())[ FD ]
Line_15 $$ String value = initParametersEntry.getValue()-->Line_16 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_INIT_PARAM_PREFIX + key, value)[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_11 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_PATTERN, servletDefinition.getURLPatterns())[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_10 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_NAME, servletDefinition.getName())[ FD ]
Line_3 $$ Map<String, ServletDefinition> servletDefinitions = _webXMLDefinition.getServletDefinitions()-->Line_4 $$ for (Entry<String, ServletDefinition> entry : servletDefinitions.entrySet()) [ FD ]
Line_5 $$ ServletDefinition servletDefinition = entry.getValue()-->Line_10 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_NAME, servletDefinition.getName())[ FD ]
Line_19 $$ ServiceRegistration<Servlet> serviceRegistration = _bundleContext.registerService(Servlet.class, servletExceptionAdaptor, properties)-->Line_22 $$ serviceRegistration.unregister()[ FD ]
Line_12 $$ Map<String, String> initParameters = servletDefinition.getInitParameters()-->Line_13 $$ for (Entry<String, String> initParametersEntry : initParameters.entrySet()) [ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_9 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_ERROR_PAGE, servletDefinition.getErrorPages())[ FD ]
Line_13 $$ for (Entry<String, String> initParametersEntry : initParameters.entrySet()) -->Line_15 $$ String value = initParametersEntry.getValue()[ FD ]
Line_2 $$ protected void initServlets() throws Exception -->Line_3 $$ Map<String, ServletDefinition> servletDefinitions = _webXMLDefinition.getServletDefinitions()[ CD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_19 $$ ServiceRegistration<Servlet> serviceRegistration = _bundleContext.registerService(Servlet.class, servletExceptionAdaptor, properties)[ FD ]
Line_18 $$ ServletExceptionAdapter servletExceptionAdaptor = new ServletExceptionAdapter(servletDefinition.getServlet())-->Line_20 $$ Exception exception = servletExceptionAdaptor.getException()[ FD ]
Line_5 $$ ServletDefinition servletDefinition = entry.getValue()-->Line_8 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_ASYNC_SUPPORTED, servletDefinition.isAsyncSupported())[ FD ]
Line_19 $$ ServiceRegistration<Servlet> serviceRegistration = _bundleContext.registerService(Servlet.class, servletExceptionAdaptor, properties)-->Line_25 $$ _servletRegistrations.add(serviceRegistration)[ FD ]
Line_5 $$ ServletDefinition servletDefinition = entry.getValue()-->Line_18 $$ ServletExceptionAdapter servletExceptionAdaptor = new ServletExceptionAdapter(servletDefinition.getServlet())[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_7 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_CONTEXT_SELECT, _contextName)[ FD ]
Line_5 $$ ServletDefinition servletDefinition = entry.getValue()-->Line_12 $$ Map<String, String> initParameters = servletDefinition.getInitParameters()[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_8 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_ASYNC_SUPPORTED, servletDefinition.isAsyncSupported())[ FD ]
Line_4 $$ for (Entry<String, ServletDefinition> entry : servletDefinitions.entrySet()) -->Line_5 $$ ServletDefinition servletDefinition = entry.getValue()[ FD ]
Line_6 $$ Dictionary<String, Object> properties = new Hashtable()-->Line_16 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_INIT_PARAM_PREFIX + key, value)[ FD ]
Line_5 $$ ServletDefinition servletDefinition = entry.getValue()-->Line_9 $$ properties.put(HttpWhiteboardConstants.HTTP_WHITEBOARD_SERVLET_ERROR_PAGE, servletDefinition.getErrorPages())[ FD ]
