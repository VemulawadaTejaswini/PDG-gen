Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_112 $$ if (dataSource.getStatement() == null) [ FD ]
Line_116 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) -->Line_121 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_86 $$ if (attributeName.equals(Constants.INTERLEAVING.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_274 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATION.getName())) [ FD ]
Line_309 $$ if (dataSource.getSecurity() == null) -->Line_310 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_386 $$ if (attributeName.equals(Constants.ALLOW_MULTIPLE_USERS.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_278 $$ setBooleanIfNotNull(context, dataSource.getValidation().isBackgroundValidation())[ FD ]
Line_211 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_PROPERTIES.getName())) -->Line_218 $$ final Map<String, String> propertiesMap = dataSource.getValidation().getExceptionSorter().getConfigPropertiesMap()[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_121 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) [ FD ]
Line_3 $$ if (attributeName.equals(Constants.XA_DATASOURCE_CLASS.getName())) -->Line_5 $$ if (attributeName.equals(Constants.JNDI_NAME.getName())) [ CD ]
Line_316 $$ if (propertiesMap == null) -->Line_317 $$ return[ CD ]
Line_47 $$ if (dataSource.getXaPool() == null) -->Line_48 $$ return[ CD ]
Line_32 $$ if (dataSource.getXaPool() == null) -->Line_33 $$ return[ CD ]
Line_50 $$ if (dataSource.getXaPool().getFlushStrategy() == null) -->Line_51 $$ return[ CD ]
Line_225 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_229 $$ if (dataSource.getValidation().getStaleConnectionChecker() == null) [ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_316 $$ if (propertiesMap == null) [ FD ]
Line_247 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_254 $$ setStringIfNotNull(context, dataSource.getValidation().getValidConnectionChecker().getClassName())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_304 $$ if (dataSource.getSecurity().getReauthPlugin() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_211 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_PROPERTIES.getName())) [ FD ]
Line_154 $$ if (attributeName.equals(Constants.RECOVERY_USERNAME.getName())) -->Line_158 $$ if (dataSource.getRecovery().getCredential() == null) [ CD ]
Line_15 $$ if (attributeName.equals(Constants.URL_SELECTOR_STRATEGY_CLASS_NAME.getName())) -->Line_17 $$ if (attributeName.equals(Constants.USE_JAVA_CONTEXT.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_341 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_393 $$ XaPool pool = dataSource.getXaPool()[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_284 $$ if (attributeName.equals(Constants.VALIDATE_ON_MATCH.getName())) [ FD ]
Line_370 $$ if (attributeName.equals(Constants.SET_TX_QUERY_TIMEOUT.getName())) -->Line_375 $$ if (attributeName.equals(Constants.TRANSACTION_ISOLATION.getName())) [ CD ]
Line_418 $$ if (attributeName.equals(Constants.ENLISTMENT_TRACE.getName())) -->Line_419 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_110 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isWrapXaResource())[ FD ]
Line_36 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_PREFILL.getName())) -->Line_37 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_163 $$ if (attributeName.equals(Constants.RECOVERY_SECURITY_DOMAIN.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_273 $$ setLongIfNotNull(context, dataSource.getValidation().getBackgroundValidationMillis())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_399 $$ XaPool pool = dataSource.getXaPool()[ FD ]
Line_149 $$ if (attributeName.equals(Constants.XA_RESOURCE_TIMEOUT.getName())) -->Line_150 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_355 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) -->Line_359 $$ setLongIfNotNull(context, dataSource.getTimeOut().getIdleTimeoutMinutes())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_203 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_CLASSNAME.getName())) [ FD ]
Line_121 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_125 $$ if (dataSource.getStatement().getTrackStatements() == null) [ CD ]
Line_80 $$ if (propertiesMap == null) -->Line_81 $$ return[ CD ]
Line_111 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) -->Line_115 $$ setLongIfNotNull(context, dataSource.getStatement().getPreparedStatementsCacheSize())[ CD ]
Line_233 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_247 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_CLASSNAME.getName())) [ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_263 $$ if (propertiesMap == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_350 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_416 $$ if (attributeName.equals(Constants.MCP.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_355 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_412 $$ if (attributeName.equals(Constants.STATISTICS_ENABLED.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_301 $$ if (dataSource.getSecurity() == null) [ FD ]
Line_255 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_269 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATIONMILLIS.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_215 $$ if (dataSource.getValidation().getExceptionSorter() == null) [ FD ]
Line_139 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) -->Line_140 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_198 $$ if (attributeName.equals(Constants.CHECK_VALID_CONNECTION_SQL.getName())) -->Line_199 $$ if (dataSource.getValidation() == null) [ CD ]
Line_41 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_USE_STRICT_MIN.getName())) -->Line_42 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_144 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) -->Line_145 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_107 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_66 $$ if (pool == null || ((DsXaPool) pool).getCapacity() == null || ((DsXaPool) pool).getCapacity().getIncrementer() == null)-->Line_67 $$ return[ CD ]
Line_215 $$ if (dataSource.getValidation().getExceptionSorter() == null) -->Line_216 $$ return[ CD ]
Line_37 $$ if (dataSource.getXaPool() == null) -->Line_38 $$ return[ CD ]
Line_398 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_PROPERTIES.getName())) -->Line_400 $$ if (!(pool instanceof DsXaPool) || ((DsXaPool) pool).getConnectionListener() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_392 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_CLASS.getName())) [ FD ]
Line_270 $$ if (dataSource.getValidation() == null) -->Line_271 $$ return[ CD ]
Line_26 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.INITIAL_POOL_SIZE.getName())) -->Line_27 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_171 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_CLASSNAME.getName())) -->Line_172 $$ if (dataSource.getRecovery() == null) [ CD ]
Line_400 $$ if (!(pool instanceof DsXaPool) || ((DsXaPool) pool).getConnectionListener() == null) -->Line_401 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_91 $$ if (attributeName.equals(Constants.NO_TX_SEPARATE_POOL.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_322 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_92 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_170 $$ setStringIfNotNull(context, dataSource.getRecovery().getCredential().getSecurityDomain())[ FD ]
Line_125 $$ if (dataSource.getStatement().getTrackStatements() == null) -->Line_126 $$ return[ CD ]
Line_203 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_CLASSNAME.getName())) -->Line_204 $$ if (dataSource.getValidation() == null) [ CD ]
Line_269 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATIONMILLIS.getName())) -->Line_270 $$ if (dataSource.getValidation() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_307 $$ setStringIfNotNull(context, dataSource.getSecurity().getReauthPlugin().getClassName())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_116 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) [ FD ]
Line_322 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) -->Line_327 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) [ CD ]
Line_366 $$ if (dataSource.getTimeOut() == null) -->Line_367 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_226 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_397 $$ setStringIfNotNull(context, ((DsXaPool) pool).getConnectionListener().getClassName())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_320 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_18 $$ setBooleanIfNotNull(context, dataSource.isUseJavaContext())[ FD ]
Line_398 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_PROPERTIES.getName())) -->Line_404 $$ if (propertiesMap == null) [ CD ]
Line_233 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_241 $$ if (propertiesMap == null) [ CD ]
Line_333 $$ if (dataSource.getStatement() == null) -->Line_334 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_100 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isPadXid())[ FD ]
Line_36 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_PREFILL.getName())) -->Line_41 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_USE_STRICT_MIN.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_359 $$ setLongIfNotNull(context, dataSource.getTimeOut().getIdleTimeoutMinutes())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_411 $$ context.getResult().set(false)[ FD ]
Line_225 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_233 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_PROPERTIES.getName())) [ CD ]
Line_64 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_PROPERTIES.getName())) -->Line_75 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_PROPERTIES.getName())) [ CD ]
Line_121 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_128 $$ setStringIfNotNull(context, dataSource.getStatement().getTrackStatements().name())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_414 $$ if (attributeName.equals(Constants.TRACKING.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_256 $$ if (dataSource.getValidation() == null) [ FD ]
Line_106 $$ if (attributeName.equals(Constants.WRAP_XA_RESOURCE.getName())) -->Line_111 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) [ CD ]
Line_163 $$ if (attributeName.equals(Constants.RECOVERY_SECURITY_DOMAIN.getName())) -->Line_167 $$ if (dataSource.getRecovery().getCredential() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_149 $$ if (attributeName.equals(Constants.XA_RESOURCE_TIMEOUT.getName())) [ FD ]
Line_255 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_263 $$ if (propertiesMap == null) [ CD ]
Line_19 $$ if (attributeName.equals(Constants.ENABLED.getName())) -->Line_21 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MAX_POOL_SIZE.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_229 $$ if (dataSource.getValidation().getStaleConnectionChecker() == null) [ FD ]
Line_289 $$ if (attributeName.equals(Constants.USERNAME.getName())) -->Line_293 $$ setStringIfNotNull(context, dataSource.getSecurity().getUserName())[ CD ]
Line_129 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) -->Line_134 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) [ CD ]
Line_92 $$ if (dataSource.getXaPool() == null) -->Line_93 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_385 $$ setBooleanIfNotNull(context, true)[ FD ]
Line_203 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_CLASSNAME.getName())) -->Line_207 $$ if (dataSource.getValidation().getExceptionSorter() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_339 $$ setStringIfNotNull(context, dataSource.getStatement().getTrackStatements().name())[ FD ]
Line_279 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.USE_FAST_FAIL.getName())) -->Line_284 $$ if (attributeName.equals(Constants.VALIDATE_ON_MATCH.getName())) [ CD ]
Line_60 $$ if (dataSource.getXaPool() == null || dataSource.getXaPool().getCapacity() == null || dataSource.getXaPool().getCapacity().getDecrementer() == null) -->Line_61 $$ return[ CD ]
Line_355 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) -->Line_356 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_193 $$ if (attributeName.equals(Constants.NO_RECOVERY.getName())) -->Line_197 $$ setBooleanIfNotNull(context, dataSource.getRecovery().getNoRecovery())[ CD ]
Line_112 $$ if (dataSource.getStatement() == null) -->Line_113 $$ return[ CD ]
Line_41 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_USE_STRICT_MIN.getName())) -->Line_45 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isUseStrictMin())[ CD ]
Line_323 $$ if (dataSource.getStatement() == null) -->Line_324 $$ return[ CD ]
Line_155 $$ if (dataSource.getRecovery() == null) -->Line_156 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_50 $$ if (dataSource.getXaPool().getFlushStrategy() == null) [ FD ]
Line_247 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_251 $$ if (dataSource.getValidation().getValidConnectionChecker() == null) [ CD ]
Line_86 $$ if (attributeName.equals(Constants.INTERLEAVING.getName())) -->Line_87 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_134 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) -->Line_135 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_319 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_179 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_PROPERTIES.getName())) [ FD ]
Line_275 $$ if (dataSource.getValidation() == null) -->Line_276 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_199 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_4 $$ setStringIfNotNull(context, dataSource.getXaDataSourceClass())[ FD ]
Line_394 $$ if (!(pool instanceof DsXaPool) || ((DsXaPool) pool).getConnectionListener() == null) -->Line_395 $$ return[ CD ]
Line_289 $$ if (attributeName.equals(Constants.USERNAME.getName())) -->Line_294 $$ if (attributeName.equals(Constants.PASSWORD.getName())) [ CD ]
Line_171 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_CLASSNAME.getName())) -->Line_179 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_PROPERTIES.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_95 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isNoTxSeparatePool())[ FD ]
Line_101 $$ if (attributeName.equals(Constants.SAME_RM_OVERRIDE.getName())) -->Line_102 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_15 $$ if (attributeName.equals(Constants.URL_SELECTOR_STRATEGY_CLASS_NAME.getName())) -->Line_16 $$ setStringIfNotNull(context, dataSource.getUrlSelectorStrategyClassName())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_360 $$ if (attributeName.equals(Constants.QUERY_TIMEOUT.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_384 $$ if (attributeName.equals(Constants.JTA.getName())) [ FD ]
Line_211 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_PROPERTIES.getName())) -->Line_212 $$ if (dataSource.getValidation() == null) [ CD ]
Line_163 $$ if (attributeName.equals(Constants.RECOVERY_SECURITY_DOMAIN.getName())) -->Line_164 $$ if (dataSource.getRecovery() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_366 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_102 $$ if (dataSource.getXaPool() == null) -->Line_103 $$ return[ CD ]
Line_360 $$ if (attributeName.equals(Constants.QUERY_TIMEOUT.getName())) -->Line_361 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_408 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_351 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_129 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) -->Line_133 $$ setIntIfNotNull(context, dataSource.getTimeOut().getAllocationRetry())[ CD ]
Line_340 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) -->Line_345 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) [ CD ]
Line_193 $$ if (attributeName.equals(Constants.NO_RECOVERY.getName())) -->Line_194 $$ if (dataSource.getRecovery() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_130 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_145 $$ if (dataSource.getTimeOut() == null) -->Line_146 $$ return[ CD ]
Line_91 $$ if (attributeName.equals(Constants.NO_TX_SEPARATE_POOL.getName())) -->Line_92 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_36 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_PREFILL.getName())) -->Line_40 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isPrefill())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_9 $$ if (attributeName.equals(Constants.NEW_CONNECTION_SQL.getName())) [ FD ]
Line_237 $$ if (dataSource.getValidation().getStaleConnectionChecker() == null) -->Line_238 $$ return[ CD ]
Line_87 $$ if (dataSource.getXaPool() == null) -->Line_88 $$ return[ CD ]
Line_382 $$ if (attributeName.equals(Constants.USE_CCM.getName())) -->Line_384 $$ if (attributeName.equals(Constants.JTA.getName())) [ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_404 $$ if (propertiesMap == null) [ FD ]
Line_175 $$ if (dataSource.getRecovery().getRecoverPlugin() == null) -->Line_176 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_186 $$ final Map<String, String> propertiesMap = dataSource.getRecovery().getRecoverPlugin().getConfigPropertiesMap()[ FD ]
Line_116 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) -->Line_120 $$ setBooleanIfNotNull(context, dataSource.getStatement().isSharePreparedStatements())[ CD ]
Line_180 $$ if (dataSource.getRecovery() == null) -->Line_181 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_410 $$ if (attributeName.equals(Constants.CONNECTABLE.getName())) [ FD ]
Line_64 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_PROPERTIES.getName())) -->Line_69 $$ if (propertiesMap == null) [ CD ]
Line_158 $$ if (dataSource.getRecovery().getCredential() == null) -->Line_159 $$ return[ CD ]
Line_351 $$ if (dataSource.getTimeOut() == null) -->Line_352 $$ return[ CD ]
Line_41 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_USE_STRICT_MIN.getName())) -->Line_46 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_FLUSH_STRATEGY.getName())) [ CD ]
Line_251 $$ if (dataSource.getValidation().getValidConnectionChecker() == null) -->Line_252 $$ return[ CD ]
Line_46 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_FLUSH_STRATEGY.getName())) -->Line_47 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_167 $$ if (dataSource.getRecovery().getCredential() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_60 $$ if (dataSource.getXaPool() == null || dataSource.getXaPool().getCapacity() == null || dataSource.getXaPool().getCapacity().getDecrementer() == null) [ FD ]
Line_280 $$ if (dataSource.getValidation() == null) -->Line_281 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_105 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isSameRmOverride())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_8 $$ setStringIfNotNull(context, dataSource.getDriver())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_204 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_269 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATIONMILLIS.getName())) [ FD ]
Line_140 $$ if (dataSource.getTimeOut() == null) -->Line_141 $$ return[ CD ]
Line_365 $$ if (attributeName.equals(Constants.USE_TRY_LOCK.getName())) -->Line_366 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_55 $$ if (dataSource.getXaPool() == null || dataSource.getXaPool().getCapacity() == null || dataSource.getXaPool().getCapacity().getIncrementer() == null) -->Line_56 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_408 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_75 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_PROPERTIES.getName())) -->Line_79 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getDecrementer().getConfigPropertiesMap()[ CD ]
Line_225 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_232 $$ setStringIfNotNull(context, dataSource.getValidation().getStaleConnectionChecker().getClassName())[ CD ]
Line_279 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.USE_FAST_FAIL.getName())) -->Line_280 $$ if (dataSource.getValidation() == null) [ CD ]
Line_31 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MIN_POOL_SIZE.getName())) -->Line_32 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_345 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) -->Line_346 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_7 $$ if (attributeName.equals(Constants.DATASOURCE_DRIVER.getName())) [ FD ]
Line_179 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_PROPERTIES.getName())) -->Line_187 $$ if (propertiesMap == null) [ CD ]
Line_54 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_CLASS.getName())) -->Line_59 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_CLASS.getName())) [ CD ]
Line_163 $$ if (attributeName.equals(Constants.RECOVERY_SECURITY_DOMAIN.getName())) -->Line_171 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_CLASSNAME.getName())) [ CD ]
Line_167 $$ if (dataSource.getRecovery().getCredential() == null) -->Line_168 $$ return[ CD ]
Line_11 $$ if (attributeName.equals(Constants.URL_DELIMITER.getName())) -->Line_12 $$ setStringIfNotNull(context, dataSource.getUrlDelimiter())[ CD ]
Line_412 $$ if (attributeName.equals(Constants.STATISTICS_ENABLED.getName())) -->Line_414 $$ if (attributeName.equals(Constants.TRACKING.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_259 $$ if (dataSource.getValidation().getValidConnectionChecker() == null) [ FD ]
Line_332 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_336 $$ if (dataSource.getStatement().getTrackStatements() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_158 $$ if (dataSource.getRecovery().getCredential() == null) [ FD ]
Line_101 $$ if (attributeName.equals(Constants.SAME_RM_OVERRIDE.getName())) -->Line_105 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isSameRmOverride())[ CD ]
Line_356 $$ if (dataSource.getTimeOut() == null) -->Line_357 $$ return[ CD ]
Line_269 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATIONMILLIS.getName())) -->Line_274 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATION.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_315 $$ final Map<String, String> propertiesMap = dataSource.getSecurity().getReauthPlugin().getConfigPropertiesMap()[ FD ]
Line_386 $$ if (attributeName.equals(Constants.ALLOW_MULTIPLE_USERS.getName())) -->Line_391 $$ setBooleanIfNotNull(context, ((DsXaPool) pool).isAllowMultipleUsers())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_25 $$ setIntIfNotNull(context, dataSource.getXaPool().getMaxPoolSize())[ FD ]
Line_375 $$ if (attributeName.equals(Constants.TRANSACTION_ISOLATION.getName())) -->Line_379 $$ setStringIfNotNull(context, dataSource.getTransactionIsolation().name())[ CD ]
Line_139 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) -->Line_143 $$ setLongIfNotNull(context, dataSource.getTimeOut().getBlockingTimeoutMillis())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_30 $$ setIntIfNotNull(context, dataSource.getXaPool().getInitialPoolSize())[ FD ]
Line_130 $$ if (dataSource.getTimeOut() == null) -->Line_131 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_275 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_47 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_59 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_CLASS.getName())) -->Line_64 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_PROPERTIES.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_300 $$ if (attributeName.equals(Constants.REAUTH_PLUGIN_CLASSNAME.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_285 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_207 $$ if (dataSource.getValidation().getExceptionSorter() == null) [ FD ]
Line_3 $$ if (attributeName.equals(Constants.XA_DATASOURCE_CLASS.getName())) -->Line_4 $$ setStringIfNotNull(context, dataSource.getXaDataSourceClass())[ CD ]
Line_144 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) -->Line_149 $$ if (attributeName.equals(Constants.XA_RESOURCE_TIMEOUT.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_155 $$ if (dataSource.getRecovery() == null) [ FD ]
Line_117 $$ if (dataSource.getStatement() == null) -->Line_118 $$ return[ CD ]
Line_410 $$ if (attributeName.equals(Constants.CONNECTABLE.getName())) -->Line_412 $$ if (attributeName.equals(Constants.STATISTICS_ENABLED.getName())) [ CD ]
Line_11 $$ if (attributeName.equals(Constants.URL_DELIMITER.getName())) -->Line_13 $$ if (attributeName.equals(Constants.URL_PROPERTY.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_162 $$ if (attributeName.equals(Constants.RECOVERY_PASSWORD.getName())) [ FD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_83 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_376 $$ if (dataSource.getTransactionIsolation() == null) [ FD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_267 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_421 $$ throw ConnectorLogger.ROOT_LOGGER.unknownAttribute(attributeName)[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_295 $$ if (attributeName.equals(Constants.SECURITY_DOMAIN.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_323 $$ if (dataSource.getStatement() == null) [ FD ]
Line_234 $$ if (dataSource.getValidation() == null) -->Line_235 $$ return[ CD ]
Line_75 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_PROPERTIES.getName())) -->Line_80 $$ if (propertiesMap == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_128 $$ setStringIfNotNull(context, dataSource.getStatement().getTrackStatements().name())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_290 $$ if (dataSource.getSecurity() == null) [ FD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_300 $$ if (attributeName.equals(Constants.REAUTH_PLUGIN_CLASSNAME.getName())) -->Line_308 $$ if (attributeName.equals(Constants.REAUTHPLUGIN_PROPERTIES.getName())) [ CD ]
Line_392 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_CLASS.getName())) -->Line_397 $$ setStringIfNotNull(context, ((DsXaPool) pool).getConnectionListener().getClassName())[ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_241 $$ if (propertiesMap == null) [ FD ]
Line_111 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) -->Line_112 $$ if (dataSource.getStatement() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_111 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_101 $$ if (attributeName.equals(Constants.SAME_RM_OVERRIDE.getName())) [ FD ]
Line_198 $$ if (attributeName.equals(Constants.CHECK_VALID_CONNECTION_SQL.getName())) -->Line_202 $$ setStringIfNotNull(context, dataSource.getValidation().getCheckValidConnectionSql())[ CD ]
Line_410 $$ if (attributeName.equals(Constants.CONNECTABLE.getName())) -->Line_411 $$ context.getResult().set(false)[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_369 $$ setLongIfNotNull(context, dataSource.getTimeOut().getUseTryLock())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_22 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_21 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MAX_POOL_SIZE.getName())) -->Line_26 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.INITIAL_POOL_SIZE.getName())) [ CD ]
Line_22 $$ if (dataSource.getXaPool() == null) -->Line_23 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_31 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MIN_POOL_SIZE.getName())) [ FD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_84 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_336 $$ if (dataSource.getStatement().getTrackStatements() == null) [ FD ]
Line_308 $$ if (attributeName.equals(Constants.REAUTHPLUGIN_PROPERTIES.getName())) -->Line_312 $$ if (dataSource.getSecurity().getReauthPlugin() == null) [ CD ]
Line_380 $$ if (attributeName.equals(Constants.SPY.getName())) -->Line_382 $$ if (attributeName.equals(Constants.USE_CCM.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_223 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_328 $$ if (dataSource.getStatement() == null) -->Line_329 $$ return[ CD ]
Line_207 $$ if (dataSource.getValidation().getExceptionSorter() == null) -->Line_208 $$ return[ CD ]
Line_392 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_CLASS.getName())) -->Line_394 $$ if (!(pool instanceof DsXaPool) || ((DsXaPool) pool).getConnectionListener() == null) [ CD ]
Line_412 $$ if (attributeName.equals(Constants.STATISTICS_ENABLED.getName())) -->Line_413 $$ context.getResult().set(false)[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_36 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_PREFILL.getName())) [ FD ]
Line_247 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_255 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_PROPERTIES.getName())) [ CD ]
Line_164 $$ if (dataSource.getRecovery() == null) -->Line_165 $$ return[ CD ]
Line_154 $$ if (attributeName.equals(Constants.RECOVERY_USERNAME.getName())) -->Line_161 $$ setStringIfNotNull(context, dataSource.getRecovery().getCredential().getUserName())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_143 $$ setLongIfNotNull(context, dataSource.getTimeOut().getBlockingTimeoutMillis())[ FD ]
Line_17 $$ if (attributeName.equals(Constants.USE_JAVA_CONTEXT.getName())) -->Line_19 $$ if (attributeName.equals(Constants.ENABLED.getName())) [ CD ]
Line_193 $$ if (attributeName.equals(Constants.NO_RECOVERY.getName())) -->Line_198 $$ if (attributeName.equals(Constants.CHECK_VALID_CONNECTION_SQL.getName())) [ CD ]
Line_64 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_PROPERTIES.getName())) -->Line_66 $$ if (pool == null || ((DsXaPool) pool).getCapacity() == null || ((DsXaPool) pool).getCapacity().getIncrementer() == null)[ CD ]
Line_300 $$ if (attributeName.equals(Constants.REAUTH_PLUGIN_CLASSNAME.getName())) -->Line_304 $$ if (dataSource.getSecurity().getReauthPlugin() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_175 $$ if (dataSource.getRecovery().getRecoverPlugin() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_41 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_USE_STRICT_MIN.getName())) [ FD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_73 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_295 $$ if (attributeName.equals(Constants.SECURITY_DOMAIN.getName())) -->Line_300 $$ if (attributeName.equals(Constants.REAUTH_PLUGIN_CLASSNAME.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_234 $$ if (dataSource.getValidation() == null) [ FD ]
Line_376 $$ if (dataSource.getTransactionIsolation() == null) -->Line_377 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_279 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.USE_FAST_FAIL.getName())) [ FD ]
Line_392 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_CLASS.getName())) -->Line_393 $$ XaPool pool = dataSource.getXaPool()[ CD ]
Line_96 $$ if (attributeName.equals(Constants.PAD_XID.getName())) -->Line_100 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isPadXid())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_37 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_134 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) -->Line_138 $$ setLongIfNotNull(context, dataSource.getTimeOut().getAllocationRetryWaitMillis())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_240 $$ final Map<String, String> propertiesMap = dataSource.getValidation().getStaleConnectionChecker().getConfigPropertiesMap()[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_245 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_290 $$ if (dataSource.getSecurity() == null) -->Line_291 $$ return[ CD ]
Line_341 $$ if (dataSource.getTimeOut() == null) -->Line_342 $$ return[ CD ]
Line_106 $$ if (attributeName.equals(Constants.WRAP_XA_RESOURCE.getName())) -->Line_107 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_304 $$ if (dataSource.getSecurity().getReauthPlugin() == null) -->Line_305 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_129 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) [ FD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_191 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_75 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_PROPERTIES.getName())) -->Line_77 $$ if (pool == null || ((DsXaPool) pool).getCapacity() == null || ((DsXaPool) pool).getCapacity().getDecrementer() == null)[ CD ]
Line_179 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_PROPERTIES.getName())) -->Line_193 $$ if (attributeName.equals(Constants.NO_RECOVERY.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_154 $$ if (attributeName.equals(Constants.RECOVERY_USERNAME.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_161 $$ setStringIfNotNull(context, dataSource.getRecovery().getCredential().getUserName())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_164 $$ if (dataSource.getRecovery() == null) [ FD ]
Line_54 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_CLASS.getName())) -->Line_55 $$ if (dataSource.getXaPool() == null || dataSource.getXaPool().getCapacity() == null || dataSource.getXaPool().getCapacity().getIncrementer() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_383 $$ setBooleanIfNotNull(context, dataSource.isUseCcm())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_3 $$ if (attributeName.equals(Constants.XA_DATASOURCE_CLASS.getName())) [ FD ]
Line_279 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.USE_FAST_FAIL.getName())) -->Line_283 $$ setBooleanIfNotNull(context, dataSource.getValidation().isUseFastFail())[ CD ]
Line_308 $$ if (attributeName.equals(Constants.REAUTHPLUGIN_PROPERTIES.getName())) -->Line_322 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_3 $$ if (attributeName.equals(Constants.XA_DATASOURCE_CLASS.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_296 $$ if (dataSource.getSecurity() == null) [ FD ]
Line_203 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_CLASSNAME.getName())) -->Line_210 $$ setStringIfNotNull(context, dataSource.getValidation().getExceptionSorter().getClassName())[ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_266 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_274 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATION.getName())) -->Line_275 $$ if (dataSource.getValidation() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_212 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_371 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_183 $$ if (dataSource.getRecovery().getRecoverPlugin() == null) [ FD ]
Line_255 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_256 $$ if (dataSource.getValidation() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_248 $$ if (dataSource.getValidation() == null) [ FD ]
Line_64 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_PROPERTIES.getName())) -->Line_65 $$ XaPool pool = dataSource.getXaPool()[ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_80 $$ if (propertiesMap == null) [ FD ]
Line_86 $$ if (attributeName.equals(Constants.INTERLEAVING.getName())) -->Line_90 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isInterleaving())[ CD ]
Line_336 $$ if (dataSource.getStatement().getTrackStatements() == null) -->Line_337 $$ return[ CD ]
Line_384 $$ if (attributeName.equals(Constants.JTA.getName())) -->Line_386 $$ if (attributeName.equals(Constants.ALLOW_MULTIPLE_USERS.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_144 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_172 $$ if (dataSource.getRecovery() == null) [ FD ]
Line_107 $$ if (dataSource.getXaPool() == null) -->Line_108 $$ return[ CD ]
Line_101 $$ if (attributeName.equals(Constants.SAME_RM_OVERRIDE.getName())) -->Line_106 $$ if (attributeName.equals(Constants.WRAP_XA_RESOURCE.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_332 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) [ FD ]
Line_382 $$ if (attributeName.equals(Constants.USE_CCM.getName())) -->Line_383 $$ setBooleanIfNotNull(context, dataSource.isUseCcm())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_40 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isPrefill())[ FD ]
Line_59 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_CLASS.getName())) -->Line_63 $$ setStringIfNotNull(context, dataSource.getXaPool().getCapacity().getDecrementer().getClassName())[ CD ]
Line_300 $$ if (attributeName.equals(Constants.REAUTH_PLUGIN_CLASSNAME.getName())) -->Line_307 $$ setStringIfNotNull(context, dataSource.getSecurity().getReauthPlugin().getClassName())[ CD ]
Line_179 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_PROPERTIES.getName())) -->Line_183 $$ if (dataSource.getRecovery().getRecoverPlugin() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_58 $$ setStringIfNotNull(context, dataSource.getXaPool().getCapacity().getIncrementer().getClassName())[ FD ]
Line_404 $$ if (propertiesMap == null) -->Line_405 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_232 $$ setStringIfNotNull(context, dataSource.getValidation().getStaleConnectionChecker().getClassName())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_16 $$ setStringIfNotNull(context, dataSource.getUrlSelectorStrategyClassName())[ FD ]
Line_46 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_FLUSH_STRATEGY.getName())) -->Line_54 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_CLASS.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_413 $$ context.getResult().set(false)[ FD ]
Line_31 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MIN_POOL_SIZE.getName())) -->Line_36 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_PREFILL.getName())) [ CD ]
Line_332 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_340 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) [ CD ]
Line_350 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) -->Line_354 $$ setLongIfNotNull(context, dataSource.getTimeOut().getBlockingTimeoutMillis())[ CD ]
Line_211 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_PROPERTIES.getName())) -->Line_225 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_CLASSNAME.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_75 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_PROPERTIES.getName())) [ FD ]
Line_398 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_PROPERTIES.getName())) -->Line_410 $$ if (attributeName.equals(Constants.CONNECTABLE.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_364 $$ setLongIfNotNull(context, dataSource.getTimeOut().getQueryTimeout())[ FD ]
Line_122 $$ if (dataSource.getStatement() == null) -->Line_123 $$ return[ CD ]
Line_111 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) -->Line_116 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) [ CD ]
Line_308 $$ if (attributeName.equals(Constants.REAUTHPLUGIN_PROPERTIES.getName())) -->Line_309 $$ if (dataSource.getSecurity() == null) [ CD ]
Line_340 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) -->Line_344 $$ setIntIfNotNull(context, dataSource.getTimeOut().getAllocationRetry())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_145 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_11 $$ if (attributeName.equals(Constants.URL_DELIMITER.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_289 $$ if (attributeName.equals(Constants.USERNAME.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_293 $$ setStringIfNotNull(context, dataSource.getSecurity().getUserName())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_340 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) [ FD ]
Line_203 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_CLASSNAME.getName())) -->Line_211 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_PROPERTIES.getName())) [ CD ]
Line_327 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) -->Line_328 $$ if (dataSource.getStatement() == null) [ CD ]
Line_241 $$ if (propertiesMap == null) -->Line_242 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_210 $$ setStringIfNotNull(context, dataSource.getValidation().getExceptionSorter().getClassName())[ FD ]
Line_106 $$ if (attributeName.equals(Constants.WRAP_XA_RESOURCE.getName())) -->Line_110 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isWrapXaResource())[ CD ]
Line_46 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_FLUSH_STRATEGY.getName())) -->Line_50 $$ if (dataSource.getXaPool().getFlushStrategy() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_59 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_CLASS.getName())) [ FD ]
Line_365 $$ if (attributeName.equals(Constants.USE_TRY_LOCK.getName())) -->Line_369 $$ setLongIfNotNull(context, dataSource.getTimeOut().getUseTryLock())[ CD ]
Line_69 $$ if (propertiesMap == null) -->Line_70 $$ return[ CD ]
Line_171 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_CLASSNAME.getName())) -->Line_175 $$ if (dataSource.getRecovery().getRecoverPlugin() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_171 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_CLASSNAME.getName())) [ FD ]
Line_64 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_PROPERTIES.getName())) -->Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_102 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_163 $$ if (attributeName.equals(Constants.RECOVERY_SECURITY_DOMAIN.getName())) -->Line_170 $$ setStringIfNotNull(context, dataSource.getRecovery().getCredential().getSecurityDomain())[ CD ]
Line_26 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.INITIAL_POOL_SIZE.getName())) -->Line_31 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MIN_POOL_SIZE.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_12 $$ setStringIfNotNull(context, dataSource.getUrlDelimiter())[ FD ]
Line_229 $$ if (dataSource.getValidation().getStaleConnectionChecker() == null) -->Line_230 $$ return[ CD ]
Line_371 $$ if (dataSource.getTimeOut() == null) -->Line_372 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_379 $$ setStringIfNotNull(context, dataSource.getTransactionIsolation().name())[ FD ]
Line_296 $$ if (dataSource.getSecurity() == null) -->Line_297 $$ return[ CD ]
Line_27 $$ if (dataSource.getXaPool() == null) -->Line_28 $$ return[ CD ]
Line_144 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) -->Line_148 $$ setLongIfNotNull(context, dataSource.getTimeOut().getIdleTimeoutMinutes())[ CD ]
Line_370 $$ if (attributeName.equals(Constants.SET_TX_QUERY_TIMEOUT.getName())) -->Line_374 $$ setBooleanIfNotNull(context, dataSource.getTimeOut().isSetTxQueryTimeout())[ CD ]
Line_129 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) -->Line_130 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_77 $$ if (pool == null || ((DsXaPool) pool).getCapacity() == null || ((DsXaPool) pool).getCapacity().getDecrementer() == null)-->Line_78 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_191 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_125 $$ if (dataSource.getStatement().getTrackStatements() == null) [ FD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_245 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_247 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_CLASSNAME.getName())) [ FD ]
Line_269 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATIONMILLIS.getName())) -->Line_273 $$ setLongIfNotNull(context, dataSource.getValidation().getBackgroundValidationMillis())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_87 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_331 $$ setBooleanIfNotNull(context, dataSource.getStatement().isSharePreparedStatements())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_14 $$ setStringIfNotNull(context, dataSource.getUrlProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_354 $$ setLongIfNotNull(context, dataSource.getTimeOut().getBlockingTimeoutMillis())[ FD ]
Line_300 $$ if (attributeName.equals(Constants.REAUTH_PLUGIN_CLASSNAME.getName())) -->Line_301 $$ if (dataSource.getSecurity() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_349 $$ setLongIfNotNull(context, dataSource.getTimeOut().getAllocationRetryWaitMillis())[ FD ]
Line_5 $$ if (attributeName.equals(Constants.JNDI_NAME.getName())) -->Line_6 $$ setStringIfNotNull(context, dataSource.getJndiName())[ CD ]
Line_370 $$ if (attributeName.equals(Constants.SET_TX_QUERY_TIMEOUT.getName())) -->Line_371 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_254 $$ setStringIfNotNull(context, dataSource.getValidation().getValidConnectionChecker().getClassName())[ FD ]
Line_162 $$ if (attributeName.equals(Constants.RECOVERY_PASSWORD.getName())) -->Line_163 $$ if (attributeName.equals(Constants.RECOVERY_SECURITY_DOMAIN.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_115 $$ setLongIfNotNull(context, dataSource.getStatement().getPreparedStatementsCacheSize())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_64 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_PROPERTIES.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_270 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_198 $$ if (attributeName.equals(Constants.CHECK_VALID_CONNECTION_SQL.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_21 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MAX_POOL_SIZE.getName())) [ FD ]
Line_308 $$ if (attributeName.equals(Constants.REAUTHPLUGIN_PROPERTIES.getName())) -->Line_315 $$ final Map<String, String> propertiesMap = dataSource.getSecurity().getReauthPlugin().getConfigPropertiesMap()[ CD ]
Line_171 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_CLASSNAME.getName())) -->Line_178 $$ setStringIfNotNull(context, dataSource.getRecovery().getRecoverPlugin().getClassName())[ CD ]
Line_5 $$ if (attributeName.equals(Constants.JNDI_NAME.getName())) -->Line_7 $$ if (attributeName.equals(Constants.DATASOURCE_DRIVER.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_375 $$ if (attributeName.equals(Constants.TRANSACTION_ISOLATION.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_251 $$ if (dataSource.getValidation().getValidConnectionChecker() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_345 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_262 $$ final Map<String, String> propertiesMap = dataSource.getValidation().getValidConnectionChecker().getConfigPropertiesMap()[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_63 $$ setStringIfNotNull(context, dataSource.getXaPool().getCapacity().getDecrementer().getClassName())[ FD ]
Line_248 $$ if (dataSource.getValidation() == null) -->Line_249 $$ return[ CD ]
Line_386 $$ if (attributeName.equals(Constants.ALLOW_MULTIPLE_USERS.getName())) -->Line_387 $$ XaPool pool = dataSource.getXaPool()[ CD ]
Line_97 $$ if (dataSource.getXaPool() == null) -->Line_98 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_15 $$ if (attributeName.equals(Constants.URL_SELECTOR_STRATEGY_CLASS_NAME.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_233 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_PROPERTIES.getName())) [ FD ]
Line_392 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_CLASS.getName())) -->Line_398 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_PROPERTIES.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_120 $$ setBooleanIfNotNull(context, dataSource.getStatement().isSharePreparedStatements())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_73 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_90 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isInterleaving())[ FD ]
Line_225 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_226 $$ if (dataSource.getValidation() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_17 $$ if (attributeName.equals(Constants.USE_JAVA_CONTEXT.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_333 $$ if (dataSource.getStatement() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_202 $$ setStringIfNotNull(context, dataSource.getValidation().getCheckValidConnectionSql())[ FD ]
Line_274 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATION.getName())) -->Line_278 $$ setBooleanIfNotNull(context, dataSource.getValidation().isBackgroundValidation())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_53 $$ setStringIfNotNull(context, dataSource.getXaPool().getFlushStrategy().getName())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_197 $$ setBooleanIfNotNull(context, dataSource.getRecovery().getNoRecovery())[ FD ]
Line_345 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) -->Line_350 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_32 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_20 $$ setBooleanIfNotNull(context, dataSource.isEnabled())[ FD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_187 $$ if (propertiesMap == null) [ FD ]
Line_384 $$ if (attributeName.equals(Constants.JTA.getName())) -->Line_385 $$ setBooleanIfNotNull(context, true)[ CD ]
Line_9 $$ if (attributeName.equals(Constants.NEW_CONNECTION_SQL.getName())) -->Line_11 $$ if (attributeName.equals(Constants.URL_DELIMITER.getName())) [ CD ]
Line_199 $$ if (dataSource.getValidation() == null) -->Line_200 $$ return[ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_244 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_179 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_PROPERTIES.getName())) -->Line_180 $$ if (dataSource.getRecovery() == null) [ CD ]
Line_301 $$ if (dataSource.getSecurity() == null) -->Line_302 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_46 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_FLUSH_STRATEGY.getName())) [ FD ]
Line_121 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_122 $$ if (dataSource.getStatement() == null) [ CD ]
Line_26 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.INITIAL_POOL_SIZE.getName())) -->Line_30 $$ setIntIfNotNull(context, dataSource.getXaPool().getInitialPoolSize())[ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_407 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_327 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) -->Line_331 $$ setBooleanIfNotNull(context, dataSource.getStatement().isSharePreparedStatements())[ CD ]
Line_274 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BACKGROUNDVALIDATION.getName())) -->Line_279 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.USE_FAST_FAIL.getName())) [ CD ]
Line_183 $$ if (dataSource.getRecovery().getRecoverPlugin() == null) -->Line_184 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_328 $$ if (dataSource.getStatement() == null) [ FD ]
Line_9 $$ if (attributeName.equals(Constants.NEW_CONNECTION_SQL.getName())) -->Line_10 $$ setStringIfNotNull(context, dataSource.getNewConnectionSql())[ CD ]
Line_247 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_CLASSNAME.getName())) -->Line_248 $$ if (dataSource.getValidation() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_267 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_219 $$ if (propertiesMap == null) -->Line_220 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_280 $$ if (dataSource.getValidation() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_45 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isUseStrictMin())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_96 $$ if (attributeName.equals(Constants.PAD_XID.getName())) [ FD ]
Line_355 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) -->Line_360 $$ if (attributeName.equals(Constants.QUERY_TIMEOUT.getName())) [ CD ]
Line_135 $$ if (dataSource.getTimeOut() == null) -->Line_136 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_42 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_5 $$ if (attributeName.equals(Constants.JNDI_NAME.getName())) [ FD ]
Line_150 $$ if (dataSource.getTimeOut() == null) -->Line_151 $$ return[ CD ]
Line_149 $$ if (attributeName.equals(Constants.XA_RESOURCE_TIMEOUT.getName())) -->Line_154 $$ if (attributeName.equals(Constants.RECOVERY_USERNAME.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_327 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) [ FD ]
Line_7 $$ if (attributeName.equals(Constants.DATASOURCE_DRIVER.getName())) -->Line_8 $$ setStringIfNotNull(context, dataSource.getDriver())[ CD ]
Line_414 $$ if (attributeName.equals(Constants.TRACKING.getName())) -->Line_416 $$ if (attributeName.equals(Constants.MCP.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_312 $$ if (dataSource.getSecurity().getReauthPlugin() == null) [ FD ]
Line_332 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_339 $$ setStringIfNotNull(context, dataSource.getStatement().getTrackStatements().name())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_65 $$ XaPool pool = dataSource.getXaPool()[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_283 $$ setBooleanIfNotNull(context, dataSource.getValidation().isUseFastFail())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_55 $$ if (dataSource.getXaPool() == null || dataSource.getXaPool().getCapacity() == null || dataSource.getXaPool().getCapacity().getIncrementer() == null) [ FD ]
Line_172 $$ if (dataSource.getRecovery() == null) -->Line_173 $$ return[ CD ]
Line_31 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MIN_POOL_SIZE.getName())) -->Line_35 $$ setIntIfNotNull(context, dataSource.getXaPool().getMinPoolSize())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_398 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_PROPERTIES.getName())) [ FD ]
Line_233 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_234 $$ if (dataSource.getValidation() == null) [ CD ]
Line_284 $$ if (attributeName.equals(Constants.VALIDATE_ON_MATCH.getName())) -->Line_288 $$ setBooleanIfNotNull(context, dataSource.getValidation().isValidateOnMatch())[ CD ]
Line_116 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) -->Line_117 $$ if (dataSource.getStatement() == null) [ CD ]
Line_96 $$ if (attributeName.equals(Constants.PAD_XID.getName())) -->Line_97 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_233 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_237 $$ if (dataSource.getValidation().getStaleConnectionChecker() == null) [ CD ]
Line_295 $$ if (attributeName.equals(Constants.SECURITY_DOMAIN.getName())) -->Line_299 $$ setStringIfNotNull(context, dataSource.getSecurity().getSecurityDomain())[ CD ]
Line_96 $$ if (attributeName.equals(Constants.PAD_XID.getName())) -->Line_101 $$ if (attributeName.equals(Constants.SAME_RM_OVERRIDE.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_326 $$ setLongIfNotNull(context, dataSource.getStatement().getPreparedStatementsCacheSize())[ FD ]
Line_361 $$ if (dataSource.getTimeOut() == null) -->Line_362 $$ return[ CD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_223 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_285 $$ if (dataSource.getValidation() == null) -->Line_286 $$ return[ CD ]
Line_340 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) -->Line_341 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_190 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_391 $$ setBooleanIfNotNull(context, ((DsXaPool) pool).isAllowMultipleUsers())[ FD ]
Line_416 $$ if (attributeName.equals(Constants.MCP.getName())) -->Line_418 $$ if (attributeName.equals(Constants.ENLISTMENT_TRACE.getName())) [ CD ]
Line_212 $$ if (dataSource.getValidation() == null) -->Line_213 $$ return[ CD ]
Line_308 $$ if (attributeName.equals(Constants.REAUTHPLUGIN_PROPERTIES.getName())) -->Line_316 $$ if (propertiesMap == null) [ CD ]
Line_7 $$ if (attributeName.equals(Constants.DATASOURCE_DRIVER.getName())) -->Line_9 $$ if (attributeName.equals(Constants.NEW_CONNECTION_SQL.getName())) [ CD ]
Line_289 $$ if (attributeName.equals(Constants.USERNAME.getName())) -->Line_290 $$ if (dataSource.getSecurity() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_134 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_54 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_CLASS.getName())) [ FD ]
Line_226 $$ if (dataSource.getValidation() == null) -->Line_227 $$ return[ CD ]
Line_365 $$ if (attributeName.equals(Constants.USE_TRY_LOCK.getName())) -->Line_370 $$ if (attributeName.equals(Constants.SET_TX_QUERY_TIMEOUT.getName())) [ CD ]
Line_350 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) -->Line_351 $$ if (dataSource.getTimeOut() == null) [ CD ]
Line_375 $$ if (attributeName.equals(Constants.TRANSACTION_ISOLATION.getName())) -->Line_380 $$ if (attributeName.equals(Constants.SPY.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_361 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_13 $$ if (attributeName.equals(Constants.URL_PROPERTY.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_365 $$ if (attributeName.equals(Constants.USE_TRY_LOCK.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_178 $$ setStringIfNotNull(context, dataSource.getRecovery().getRecoverPlugin().getClassName())[ FD ]
Line_21 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MAX_POOL_SIZE.getName())) -->Line_22 $$ if (dataSource.getXaPool() == null) [ CD ]
Line_17 $$ if (attributeName.equals(Constants.USE_JAVA_CONTEXT.getName())) -->Line_18 $$ setBooleanIfNotNull(context, dataSource.isUseJavaContext())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_140 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_54 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_INCREMENTER_CLASS.getName())) -->Line_58 $$ setStringIfNotNull(context, dataSource.getXaPool().getCapacity().getIncrementer().getClassName())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_387 $$ XaPool pool = dataSource.getXaPool()[ FD ]
Line_75 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_PROPERTIES.getName())) -->Line_86 $$ if (attributeName.equals(Constants.INTERLEAVING.getName())) [ CD ]
Line_204 $$ if (dataSource.getValidation() == null) -->Line_205 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_346 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_133 $$ setIntIfNotNull(context, dataSource.getTimeOut().getAllocationRetry())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_27 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_150 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_194 $$ if (dataSource.getRecovery() == null) [ FD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_222 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_153 $$ setIntIfNotNull(context, dataSource.getTimeOut().getXaResourceTimeout())[ FD ]
Line_154 $$ if (attributeName.equals(Constants.RECOVERY_USERNAME.getName())) -->Line_162 $$ if (attributeName.equals(Constants.RECOVERY_PASSWORD.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_148 $$ setLongIfNotNull(context, dataSource.getTimeOut().getIdleTimeoutMinutes())[ FD ]
Line_121 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_129 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY.getName())) [ CD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_69 $$ if (propertiesMap == null) [ FD ]
Line_386 $$ if (attributeName.equals(Constants.ALLOW_MULTIPLE_USERS.getName())) -->Line_392 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_CLASS.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_255 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_PROPERTIES.getName())) [ FD ]
Line_154 $$ if (attributeName.equals(Constants.RECOVERY_USERNAME.getName())) -->Line_155 $$ if (dataSource.getRecovery() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_117 $$ if (dataSource.getStatement() == null) [ FD ]
Line_59 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_CLASS.getName())) -->Line_60 $$ if (dataSource.getXaPool() == null || dataSource.getXaPool().getCapacity() == null || dataSource.getXaPool().getCapacity().getDecrementer() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_10 $$ setStringIfNotNull(context, dataSource.getNewConnectionSql())[ FD ]
Line_211 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_PROPERTIES.getName())) -->Line_219 $$ if (propertiesMap == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_370 $$ if (attributeName.equals(Constants.SET_TX_QUERY_TIMEOUT.getName())) [ FD ]
Line_179 $$ if (attributeName.equals(Constants.RECOVER_PLUGIN_PROPERTIES.getName())) -->Line_186 $$ final Map<String, String> propertiesMap = dataSource.getRecovery().getRecoverPlugin().getConfigPropertiesMap()[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_218 $$ final Map<String, String> propertiesMap = dataSource.getValidation().getExceptionSorter().getConfigPropertiesMap()[ FD ]
Line_149 $$ if (attributeName.equals(Constants.XA_RESOURCE_TIMEOUT.getName())) -->Line_153 $$ setIntIfNotNull(context, dataSource.getTimeOut().getXaResourceTimeout())[ CD ]
Line_322 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) -->Line_323 $$ if (dataSource.getStatement() == null) [ CD ]
Line_13 $$ if (attributeName.equals(Constants.URL_PROPERTY.getName())) -->Line_15 $$ if (attributeName.equals(Constants.URL_SELECTOR_STRATEGY_CLASS_NAME.getName())) [ CD ]
Line_375 $$ if (attributeName.equals(Constants.TRANSACTION_ISOLATION.getName())) -->Line_376 $$ if (dataSource.getTransactionIsolation() == null) [ CD ]
Line_398 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_PROPERTIES.getName())) -->Line_399 $$ XaPool pool = dataSource.getXaPool()[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_380 $$ if (attributeName.equals(Constants.SPY.getName())) [ FD ]
Line_187 $$ if (propertiesMap == null) -->Line_188 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_180 $$ if (dataSource.getRecovery() == null) [ FD ]
Line_346 $$ if (dataSource.getTimeOut() == null) -->Line_347 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_356 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_225 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_CLASSNAME.getName())) [ FD ]
Line_386 $$ if (attributeName.equals(Constants.ALLOW_MULTIPLE_USERS.getName())) -->Line_388 $$ if (!(pool instanceof DsXaPool)) [ CD ]
Line_139 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) -->Line_144 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) [ CD ]
Line_284 $$ if (attributeName.equals(Constants.VALIDATE_ON_MATCH.getName())) -->Line_289 $$ if (attributeName.equals(Constants.USERNAME.getName())) [ CD ]
Line_294 $$ if (attributeName.equals(Constants.PASSWORD.getName())) -->Line_295 $$ if (attributeName.equals(Constants.SECURITY_DOMAIN.getName())) [ CD ]
Line_91 $$ if (attributeName.equals(Constants.NO_TX_SEPARATE_POOL.getName())) -->Line_95 $$ setBooleanIfNotNull(context, dataSource.getXaPool().isNoTxSeparatePool())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_294 $$ if (attributeName.equals(Constants.PASSWORD.getName())) [ FD ]
Line_86 $$ if (attributeName.equals(Constants.INTERLEAVING.getName())) -->Line_91 $$ if (attributeName.equals(Constants.NO_TX_SEPARATE_POOL.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_288 $$ setBooleanIfNotNull(context, dataSource.getValidation().isValidateOnMatch())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_382 $$ if (attributeName.equals(Constants.USE_CCM.getName())) [ FD ]
Line_68 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getCapacity().getIncrementer().getConfigPropertiesMap()-->Line_219 $$ if (propertiesMap == null) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_26 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.INITIAL_POOL_SIZE.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_97 $$ if (dataSource.getXaPool() == null) [ FD ]
Line_416 $$ if (attributeName.equals(Constants.MCP.getName())) -->Line_417 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_418 $$ if (attributeName.equals(Constants.ENLISTMENT_TRACE.getName())) [ FD ]
Line_13 $$ if (attributeName.equals(Constants.URL_PROPERTY.getName())) -->Line_14 $$ setStringIfNotNull(context, dataSource.getUrlProperty())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_381 $$ setBooleanIfNotNull(context, dataSource.isSpy())[ FD ]
Line_414 $$ if (attributeName.equals(Constants.TRACKING.getName())) -->Line_415 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_138 $$ setLongIfNotNull(context, dataSource.getTimeOut().getAllocationRetryWaitMillis())[ FD ]
Line_388 $$ if (!(pool instanceof DsXaPool)) -->Line_389 $$ return[ CD ]
Line_350 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) -->Line_355 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.IDLETIMEOUTMINUTES.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_344 $$ setIntIfNotNull(context, dataSource.getTimeOut().getAllocationRetry())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_84 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_122 $$ if (dataSource.getStatement() == null) [ FD ]
Line_360 $$ if (attributeName.equals(Constants.QUERY_TIMEOUT.getName())) -->Line_364 $$ setLongIfNotNull(context, dataSource.getTimeOut().getQueryTimeout())[ CD ]
Line_255 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_262 $$ final Map<String, String> propertiesMap = dataSource.getValidation().getValidConnectionChecker().getConfigPropertiesMap()[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_135 $$ if (dataSource.getTimeOut() == null) [ FD ]
Line_360 $$ if (attributeName.equals(Constants.QUERY_TIMEOUT.getName())) -->Line_365 $$ if (attributeName.equals(Constants.USE_TRY_LOCK.getName())) [ CD ]
Line_398 $$ if (attributeName.equals(Constants.CONNECTION_LISTENER_PROPERTIES.getName())) -->Line_403 $$ final Map<String, String> propertiesMap = ((DsXaPool) pool).getConnectionListener().getConfigPropertiesMap()[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_193 $$ if (attributeName.equals(Constants.NO_RECOVERY.getName())) [ FD ]
Line_263 $$ if (propertiesMap == null) -->Line_264 $$ return[ CD ]
Line_211 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_PROPERTIES.getName())) -->Line_215 $$ if (dataSource.getValidation().getExceptionSorter() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_299 $$ setStringIfNotNull(context, dataSource.getSecurity().getSecurityDomain())[ FD ]
Line_75 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.CAPACITY_DECREMENTER_PROPERTIES.getName())) -->Line_76 $$ XaPool pool = dataSource.getXaPool()[ CD ]
Line_91 $$ if (attributeName.equals(Constants.NO_TX_SEPARATE_POOL.getName())) -->Line_96 $$ if (attributeName.equals(Constants.PAD_XID.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_6 $$ setStringIfNotNull(context, dataSource.getJndiName())[ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_308 $$ if (attributeName.equals(Constants.REAUTHPLUGIN_PROPERTIES.getName())) [ FD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_19 $$ if (attributeName.equals(Constants.ENABLED.getName())) [ FD ]
Line_255 $$ if (attributeName.equals(Constants.VALID_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_259 $$ if (dataSource.getValidation().getValidConnectionChecker() == null) [ CD ]
Line_345 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) -->Line_349 $$ setLongIfNotNull(context, dataSource.getTimeOut().getAllocationRetryWaitMillis())[ CD ]
Line_322 $$ if (attributeName.equals(Constants.PREPARED_STATEMENTS_CACHE_SIZE.getName())) -->Line_326 $$ setLongIfNotNull(context, dataSource.getStatement().getPreparedStatementsCacheSize())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_374 $$ setBooleanIfNotNull(context, dataSource.getTimeOut().isSetTxQueryTimeout())[ FD ]
Line_194 $$ if (dataSource.getRecovery() == null) -->Line_195 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_237 $$ if (dataSource.getValidation().getStaleConnectionChecker() == null) [ FD ]
Line_233 $$ if (attributeName.equals(Constants.STALE_CONNECTION_CHECKER_PROPERTIES.getName())) -->Line_240 $$ final Map<String, String> propertiesMap = dataSource.getValidation().getStaleConnectionChecker().getConfigPropertiesMap()[ CD ]
Line_312 $$ if (dataSource.getSecurity().getReauthPlugin() == null) -->Line_313 $$ return[ CD ]
Line_380 $$ if (attributeName.equals(Constants.SPY.getName())) -->Line_381 $$ setBooleanIfNotNull(context, dataSource.isSpy())[ CD ]
Line_42 $$ if (dataSource.getXaPool() == null) -->Line_43 $$ return[ CD ]
Line_46 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.POOL_FLUSH_STRATEGY.getName())) -->Line_53 $$ setStringIfNotNull(context, dataSource.getXaPool().getFlushStrategy().getName())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_35 $$ setIntIfNotNull(context, dataSource.getXaPool().getMinPoolSize())[ FD ]
Line_21 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.MAX_POOL_SIZE.getName())) -->Line_25 $$ setIntIfNotNull(context, dataSource.getXaPool().getMaxPoolSize())[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_106 $$ if (attributeName.equals(Constants.WRAP_XA_RESOURCE.getName())) [ FD ]
Line_256 $$ if (dataSource.getValidation() == null) -->Line_257 $$ return[ CD ]
Line_332 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) -->Line_333 $$ if (dataSource.getStatement() == null) [ CD ]
Line_327 $$ if (attributeName.equals(Constants.SHARE_PREPARED_STATEMENTS.getName())) -->Line_332 $$ if (attributeName.equals(Constants.TRACK_STATEMENTS.getName())) [ CD ]
Line_295 $$ if (attributeName.equals(Constants.SECURITY_DOMAIN.getName())) -->Line_296 $$ if (dataSource.getSecurity() == null) [ CD ]
Line_72 $$ for (final Map.Entry<String, String> entry : propertiesMap.entrySet()) -->Line_320 $$ context.getResult().asPropertyList().add(new ModelNode().set(entry.getKey(), entry.getValue()).asProperty())[ FD ]
Line_19 $$ if (attributeName.equals(Constants.ENABLED.getName())) -->Line_20 $$ setBooleanIfNotNull(context, dataSource.isEnabled())[ CD ]
Line_259 $$ if (dataSource.getValidation().getValidConnectionChecker() == null) -->Line_260 $$ return[ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_139 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) [ FD ]
Line_134 $$ if (attributeName.equals(Constants.ALLOCATION_RETRY_WAIT_MILLIS.getName())) -->Line_139 $$ if (attributeName.equals(org.jboss.as.connector.subsystems.common.pool.Constants.BLOCKING_TIMEOUT_WAIT_MILLIS.getName())) [ CD ]
Line_198 $$ if (attributeName.equals(Constants.CHECK_VALID_CONNECTION_SQL.getName())) -->Line_203 $$ if (attributeName.equals(Constants.EXCEPTION_SORTER_CLASSNAME.getName())) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_76 $$ XaPool pool = dataSource.getXaPool()[ FD ]
Line_284 $$ if (attributeName.equals(Constants.VALIDATE_ON_MATCH.getName())) -->Line_285 $$ if (dataSource.getValidation() == null) [ CD ]
Line_2 $$ private void handleDatasourceAttribute(final String attributeName, final OperationContext context, final XaDataSource dataSource) -->Line_309 $$ if (dataSource.getSecurity() == null) [ FD ]
