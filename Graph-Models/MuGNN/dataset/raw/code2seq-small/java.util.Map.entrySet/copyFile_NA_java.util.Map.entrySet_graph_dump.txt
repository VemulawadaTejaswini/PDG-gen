Line_3 $$ Copy copy = new Copy()-->Line_15 $$ FilterSet filterSet = copy.createFilterSet()[ FD ]
Line_3 $$ Copy copy = new Copy()-->Line_12 $$ copy.setTofile(new File(destinationDir, destinationFileName))[ FD ]
Line_3 $$ Copy copy = new Copy()-->Line_22 $$ copy.execute()[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_9 $$ if (destinationFileName == null) [ CD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_6 $$ copy.setOverwrite(overwrite)[ CD ]
Line_14 $$ if (filterMap != null) -->Line_15 $$ FilterSet filterSet = copy.createFilterSet()[ CD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_22 $$ copy.execute()[ CD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_8 $$ copy.setProject(AntUtil.getProject())[ CD ]
Line_3 $$ Copy copy = new Copy()-->Line_5 $$ copy.setFiltering(true)[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_14 $$ if (filterMap != null) [ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_10 $$ copy.setTodir(destinationDir)[ FD ]
Line_16 $$ for (Map.Entry<String, String> entry : filterMap.entrySet()) -->Line_17 $$ String token = entry.getKey()[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_4 $$ copy.setFile(sourceFile)[ FD ]
Line_17 $$ String token = entry.getKey()-->Line_19 $$ filterSet.addFilter(token, replacement)[ FD ]
Line_3 $$ Copy copy = new Copy()-->Line_7 $$ copy.setPreserveLastModified(preserveLastModified)[ FD ]
Line_18 $$ String replacement = entry.getValue()-->Line_19 $$ filterSet.addFilter(token, replacement)[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_5 $$ copy.setFiltering(true)[ CD ]
Line_3 $$ Copy copy = new Copy()-->Line_4 $$ copy.setFile(sourceFile)[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_7 $$ copy.setPreserveLastModified(preserveLastModified)[ FD ]
Line_15 $$ FilterSet filterSet = copy.createFilterSet()-->Line_19 $$ filterSet.addFilter(token, replacement)[ FD ]
Line_3 $$ Copy copy = new Copy()-->Line_10 $$ copy.setTodir(destinationDir)[ FD ]
Line_3 $$ Copy copy = new Copy()-->Line_6 $$ copy.setOverwrite(overwrite)[ FD ]
Line_9 $$ if (destinationFileName == null) -->Line_10 $$ copy.setTodir(destinationDir)[ CD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_7 $$ copy.setPreserveLastModified(preserveLastModified)[ CD ]
Line_3 $$ Copy copy = new Copy()-->Line_8 $$ copy.setProject(AntUtil.getProject())[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_3 $$ Copy copy = new Copy()[ CD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_14 $$ if (filterMap != null) [ CD ]
Line_16 $$ for (Map.Entry<String, String> entry : filterMap.entrySet()) -->Line_18 $$ String replacement = entry.getValue()[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_6 $$ copy.setOverwrite(overwrite)[ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_16 $$ for (Map.Entry<String, String> entry : filterMap.entrySet()) [ FD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_4 $$ copy.setFile(sourceFile)[ CD ]
Line_9 $$ if (destinationFileName == null) -->Line_12 $$ copy.setTofile(new File(destinationDir, destinationFileName))[ CD ]
Line_2 $$ public static void copyFile(File sourceFile, File destinationDir, String destinationFileName, Map<String, String> filterMap, boolean overwrite, boolean preserveLastModified) -->Line_9 $$ if (destinationFileName == null) [ FD ]
