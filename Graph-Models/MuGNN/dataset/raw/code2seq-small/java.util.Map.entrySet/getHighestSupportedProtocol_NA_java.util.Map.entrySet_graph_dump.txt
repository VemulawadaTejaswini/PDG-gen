Line_8 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) -->Line_11 $$ highest = pv.getValue()[ FD ]
Line_9 $$ if (pv.getKey().protocol.equals(protocolName)) -->Line_10 $$ if ((highest == null) || (pv.getKey().version > highestVersion)) [ CD ]
Line_8 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) -->Line_10 $$ if ((highest == null) || (pv.getKey().version > highestVersion)) [ FD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_3 $$ Long highestVersion = 0L[ CD ]
Line_11 $$ highest = pv.getValue()-->Line_16 $$ if (highest == null) [ FD ]
Line_8 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) -->Line_12 $$ highestVersion = pv.getKey().version[ FD ]
Line_16 $$ if (highest == null) -->Line_17 $$ return null[ CD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_19 $$ return new VerProtocolImpl(highestVersion, highest)[ CD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_6 $$ LOG.debug("Size of protoMap for " + rpcKind + " =" + getProtocolImplMap(rpcKind).size())[ FD ]
Line_4 $$ ProtoClassProtoImpl highest = null-->Line_16 $$ if (highest == null) [ FD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_8 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) [ FD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_16 $$ if (highest == null) [ CD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_9 $$ if (pv.getKey().protocol.equals(protocolName)) [ FD ]
Line_4 $$ ProtoClassProtoImpl highest = null-->Line_11 $$ highest = pv.getValue()[ FD ]
Line_10 $$ if ((highest == null) || (pv.getKey().version > highestVersion)) -->Line_12 $$ highestVersion = pv.getKey().version[ CD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_4 $$ ProtoClassProtoImpl highest = null[ CD ]
Line_8 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) -->Line_9 $$ if (pv.getKey().protocol.equals(protocolName)) [ FD ]
Line_2 $$ VerProtocolImpl getHighestSupportedProtocol(RpcKind rpcKind, String protocolName) -->Line_5 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_10 $$ if ((highest == null) || (pv.getKey().version > highestVersion)) -->Line_11 $$ highest = pv.getValue()[ CD ]
Line_3 $$ Long highestVersion = 0L-->Line_12 $$ highestVersion = pv.getKey().version[ FD ]
Line_5 $$ if (LOG.isDebugEnabled()) -->Line_6 $$ LOG.debug("Size of protoMap for " + rpcKind + " =" + getProtocolImplMap(rpcKind).size())[ CD ]
