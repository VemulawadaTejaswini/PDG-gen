Line_4 $$ for (Map.Entry<String, String> entry : attributes.entrySet()) -->Line_6 $$ String value = ZenCodingUtil.getValue(entry.getValue(), numberInIteration, totalIterations, surroundedText)[ FD ]
Line_5 $$ String name = entry.getKey()-->Line_7 $$ result.append(getAttributeString(name, value))[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_8 $$ result.append(' ')[ FD ]
Line_6 $$ String value = ZenCodingUtil.getValue(entry.getValue(), numberInIteration, totalIterations, surroundedText)-->Line_7 $$ result.append(getAttributeString(name, value))[ FD ]
Line_2 $$ public String buildAttributesString(@NotNull Map<String, String> attributes, boolean hasChildren, int numberInIteration, int totalIterations, @Nullable String surroundedText) -->Line_6 $$ String value = ZenCodingUtil.getValue(entry.getValue(), numberInIteration, totalIterations, surroundedText)[ FD ]
Line_2 $$ public String buildAttributesString(@NotNull Map<String, String> attributes, boolean hasChildren, int numberInIteration, int totalIterations, @Nullable String surroundedText) -->Line_3 $$ StringBuilder result = new StringBuilder()[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_10 $$ return result.toString().trim()[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder()-->Line_7 $$ result.append(getAttributeString(name, value))[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : attributes.entrySet()) -->Line_5 $$ String name = entry.getKey()[ FD ]
Line_2 $$ public String buildAttributesString(@NotNull Map<String, String> attributes, boolean hasChildren, int numberInIteration, int totalIterations, @Nullable String surroundedText) -->Line_4 $$ for (Map.Entry<String, String> entry : attributes.entrySet()) [ FD ]
Line_2 $$ public String buildAttributesString(@NotNull Map<String, String> attributes, boolean hasChildren, int numberInIteration, int totalIterations, @Nullable String surroundedText) -->Line_10 $$ return result.toString().trim()[ CD ]
