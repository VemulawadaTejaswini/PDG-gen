Line_26 $$ String value = prop.getValue()-->Line_30 $$ aoConfigProperties.put(key.substring(3), value)[ FD ]
Line_6 $$ Connector cmd = mdr.getValue().getResourceAdapter(raId)-->Line_7 $$ if (cmd.getVersion() == Connector.Version.V_10) [ FD ]
Line_4 $$ String aoClass = null-->Line_18 $$ if (aoClass == null || !aoClass.equals(className)) [ FD ]
Line_21 $$ Map<String, String> raConfigProperties = new HashMap<String, String>()-->Line_28 $$ raConfigProperties.put(key.substring(3), value)[ FD ]
Line_2 $$ public void start(StartContext context) throws StartException -->Line_4 $$ String aoClass = null[ CD ]
Line_26 $$ String value = prop.getValue()-->Line_32 $$ aoConfigProperties.put(key, value)[ FD ]
Line_12 $$ for (AdminObject ao : ra1516.getAdminObjects()) -->Line_13 $$ if (ao.getAdminobjectClass().getValue().equals(className))[ FD ]
Line_6 $$ Connector cmd = mdr.getValue().getResourceAdapter(raId)-->Line_10 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()[ FD ]
Line_39 $$ serviceName = serviceName.replace(':', '_')-->Line_40 $$ serviceName = serviceName.replace('/', '_')[ FD ]
Line_13 $$ if (ao.getAdminobjectClass().getValue().equals(className))-->Line_14 $$ aoClass = ao.getAdminobjectClass().getValue()[ CD ]
Line_41 $$ ResourceAdapterActivatorService activator = new ResourceAdapterActivatorService(cmd, activation, module.getClassLoader(), serviceName)-->Line_43 $$ activator.setBindInfo(bindInfo)[ FD ]
Line_24 $$ for (Map.Entry<String, String> prop : properties.entrySet()) -->Line_26 $$ String value = prop.getValue()[ FD ]
Line_38 $$ String serviceName = jndiName-->Line_40 $$ serviceName = serviceName.replace('/', '_')[ FD ]
Line_27 $$ if (key.startsWith("ra.")) -->Line_28 $$ raConfigProperties.put(key.substring(3), value)[ CD ]
Line_12 $$ for (AdminObject ao : ra1516.getAdminObjects()) -->Line_37 $$ Activation activation = new ActivationImpl(null, null, TransactionSupportEnum.LocalTransaction, Collections.<ConnectionDefinition>emptyList(), Collections.singletonList(ao), null, Collections.<String>emptyList(), null, null)[ FD ]
Line_14 $$ aoClass = ao.getAdminobjectClass().getValue()-->Line_36 $$ org.jboss.jca.common.api.metadata.resourceadapter.AdminObject ao = new AdminObjectImpl(aoConfigProperties, aoClass, jndiName, poolName(aoClass, className), Boolean.TRUE, Boolean.TRUE)[ FD ]
Line_38 $$ String serviceName = jndiName-->Line_45 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_10 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()-->Line_12 $$ for (AdminObject ao : ra1516.getAdminObjects()) [ FD ]
Line_2 $$ public void start(StartContext context) throws StartException -->Line_3 $$ ROOT_LOGGER.debugf("started DirectConnectionFactoryActivatorService %s", context.getController().getName())[ FD ]
Line_22 $$ Map<String, String> aoConfigProperties = new HashMap<String, String>()-->Line_32 $$ aoConfigProperties.put(key, value)[ FD ]
Line_7 $$ if (cmd.getVersion() == Connector.Version.V_10) -->Line_11 $$ if (ra1516.getAdminObjects() != null) [ CD ]
Line_40 $$ serviceName = serviceName.replace('/', '_')-->Line_45 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_24 $$ for (Map.Entry<String, String> prop : properties.entrySet()) -->Line_25 $$ String key = prop.getKey()[ FD ]
Line_25 $$ String key = prop.getKey()-->Line_28 $$ raConfigProperties.put(key.substring(3), value)[ FD ]
Line_25 $$ String key = prop.getKey()-->Line_32 $$ aoConfigProperties.put(key, value)[ FD ]
Line_27 $$ if (key.startsWith("ra.")) -->Line_29 $$ if (key.startsWith("ao.")) [ CD ]
Line_25 $$ String key = prop.getKey()-->Line_27 $$ if (key.startsWith("ra.")) [ FD ]
Line_26 $$ String value = prop.getValue()-->Line_28 $$ raConfigProperties.put(key.substring(3), value)[ FD ]
Line_2 $$ public void start(StartContext context) throws StartException -->Line_3 $$ ROOT_LOGGER.debugf("started DirectConnectionFactoryActivatorService %s", context.getController().getName())[ CD ]
Line_4 $$ String aoClass = null-->Line_19 $$ throw ConnectorLogger.ROOT_LOGGER.invalidAdminObject(aoClass, resourceAdapter, jndiName)[ FD ]
Line_44 $$ ServiceTarget serviceTarget = context.getChildTarget()-->Line_45 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_41 $$ ResourceAdapterActivatorService activator = new ResourceAdapterActivatorService(cmd, activation, module.getClassLoader(), serviceName)-->Line_42 $$ activator.setCreateBinderService(false)[ FD ]
Line_29 $$ if (key.startsWith("ao.")) -->Line_30 $$ aoConfigProperties.put(key.substring(3), value)[ CD ]
Line_14 $$ aoClass = ao.getAdminobjectClass().getValue()-->Line_19 $$ throw ConnectorLogger.ROOT_LOGGER.invalidAdminObject(aoClass, resourceAdapter, jndiName)[ FD ]
Line_2 $$ public void start(StartContext context) throws StartException -->Line_44 $$ ServiceTarget serviceTarget = context.getChildTarget()[ FD ]
Line_41 $$ ResourceAdapterActivatorService activator = new ResourceAdapterActivatorService(cmd, activation, module.getClassLoader(), serviceName)-->Line_45 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_25 $$ String key = prop.getKey()-->Line_29 $$ if (key.startsWith("ao.")) [ FD ]
Line_38 $$ String serviceName = jndiName-->Line_39 $$ serviceName = serviceName.replace(':', '_')[ FD ]
Line_12 $$ for (AdminObject ao : ra1516.getAdminObjects()) -->Line_14 $$ aoClass = ao.getAdminobjectClass().getValue()[ FD ]
Line_4 $$ String aoClass = null-->Line_36 $$ org.jboss.jca.common.api.metadata.resourceadapter.AdminObject ao = new AdminObjectImpl(aoConfigProperties, aoClass, jndiName, poolName(aoClass, className), Boolean.TRUE, Boolean.TRUE)[ FD ]
Line_22 $$ Map<String, String> aoConfigProperties = new HashMap<String, String>()-->Line_30 $$ aoConfigProperties.put(key.substring(3), value)[ FD ]
Line_4 $$ String aoClass = null-->Line_14 $$ aoClass = ao.getAdminobjectClass().getValue()[ FD ]
Line_25 $$ String key = prop.getKey()-->Line_30 $$ aoConfigProperties.put(key.substring(3), value)[ FD ]
Line_45 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))-->Line_46 $$ adminObjectServiceBuilder.setInitialMode(ServiceController.Mode.ACTIVE).install()[ FD ]
Line_7 $$ if (cmd.getVersion() == Connector.Version.V_10) -->Line_10 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()[ CD ]
Line_29 $$ if (key.startsWith("ao.")) -->Line_32 $$ aoConfigProperties.put(key, value)[ CD ]
Line_14 $$ aoClass = ao.getAdminobjectClass().getValue()-->Line_18 $$ if (aoClass == null || !aoClass.equals(className)) [ FD ]
Line_39 $$ serviceName = serviceName.replace(':', '_')-->Line_45 $$ ServiceBuilder adminObjectServiceBuilder = serviceTarget.addService(ConnectorServices.RESOURCE_ADAPTER_ACTIVATOR_SERVICE.append(serviceName), activator).addDependency(ConnectorServices.IRONJACAMAR_MDR, AS7MetadataRepository.class, activator.getMdrInjector()).addDependency(ConnectorServices.RA_REPOSITORY_SERVICE, ResourceAdapterRepository.class, activator.getRaRepositoryInjector()).addDependency(ConnectorServices.MANAGEMENT_REPOSITORY_SERVICE, ManagementRepository.class, activator.getManagementRepositoryInjector()).addDependency(ConnectorServices.RESOURCE_ADAPTER_REGISTRY_SERVICE, ResourceAdapterDeploymentRegistry.class, activator.getRegistryInjector()).addDependency(ConnectorServices.TRANSACTION_INTEGRATION_SERVICE, TransactionIntegration.class, activator.getTxIntegrationInjector()).addDependency(ConnectorServices.CONNECTOR_CONFIG_SERVICE, JcaSubsystemConfiguration.class, activator.getConfigInjector()).addDependency(SubjectFactoryService.SERVICE_NAME, SubjectFactory.class, activator.getSubjectFactoryInjector()).addDependency(ConnectorServices.CCM_SERVICE, CachedConnectionManager.class, activator.getCcmInjector()).addDependency(NamingService.SERVICE_NAME).addDependency(TxnServices.JBOSS_TXN_TRANSACTION_MANAGER).addDependency(ConnectorServices.BOOTSTRAP_CONTEXT_SERVICE.append("default"))[ FD ]
Line_10 $$ ResourceAdapter ra1516 = (ResourceAdapter) cmd.getResourceadapter()-->Line_11 $$ if (ra1516.getAdminObjects() != null) [ FD ]
