Line_2 $$ public static void assertXAttrs(Path path, FileSystem fs, Map<String, byte[]> expectedXAttrs) throws Exception -->Line_3 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ FD ]
Line_9 $$ byte[] value = e.getValue()-->Line_13 $$ assertArrayEquals(value, xAttrs.get(name))[ FD ]
Line_5 $$ Iterator<Entry<String, byte[]>> i = expectedXAttrs.entrySet().iterator()-->Line_7 $$ Entry<String, byte[]> e = i.next()[ FD ]
Line_2 $$ public static void assertXAttrs(Path path, FileSystem fs, Map<String, byte[]> expectedXAttrs) throws Exception -->Line_4 $$ assertEquals(path.toString(), expectedXAttrs.size(), xAttrs.size())[ FD ]
Line_2 $$ public static void assertXAttrs(Path path, FileSystem fs, Map<String, byte[]> expectedXAttrs) throws Exception -->Line_4 $$ assertEquals(path.toString(), expectedXAttrs.size(), xAttrs.size())[ CD ]
Line_8 $$ String name = e.getKey()-->Line_11 $$ assertTrue(xAttrs.containsKey(name) && xAttrs.get(name) == null)[ FD ]
Line_6 $$ while (i.hasNext()) -->Line_8 $$ String name = e.getKey()[ CD ]
Line_2 $$ public static void assertXAttrs(Path path, FileSystem fs, Map<String, byte[]> expectedXAttrs) throws Exception -->Line_5 $$ Iterator<Entry<String, byte[]>> i = expectedXAttrs.entrySet().iterator()[ FD ]
Line_6 $$ while (i.hasNext()) -->Line_10 $$ if (value == null) [ CD ]
Line_2 $$ public static void assertXAttrs(Path path, FileSystem fs, Map<String, byte[]> expectedXAttrs) throws Exception -->Line_6 $$ while (i.hasNext()) [ CD ]
Line_7 $$ Entry<String, byte[]> e = i.next()-->Line_8 $$ String name = e.getKey()[ FD ]
Line_3 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)-->Line_13 $$ assertArrayEquals(value, xAttrs.get(name))[ FD ]
Line_10 $$ if (value == null) -->Line_13 $$ assertArrayEquals(value, xAttrs.get(name))[ CD ]
Line_6 $$ while (i.hasNext()) -->Line_7 $$ Entry<String, byte[]> e = i.next()[ CD ]
Line_5 $$ Iterator<Entry<String, byte[]>> i = expectedXAttrs.entrySet().iterator()-->Line_6 $$ while (i.hasNext()) [ FD ]
Line_2 $$ public static void assertXAttrs(Path path, FileSystem fs, Map<String, byte[]> expectedXAttrs) throws Exception -->Line_3 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)[ CD ]
Line_9 $$ byte[] value = e.getValue()-->Line_10 $$ if (value == null) [ FD ]
Line_2 $$ public static void assertXAttrs(Path path, FileSystem fs, Map<String, byte[]> expectedXAttrs) throws Exception -->Line_5 $$ Iterator<Entry<String, byte[]>> i = expectedXAttrs.entrySet().iterator()[ CD ]
Line_6 $$ while (i.hasNext()) -->Line_9 $$ byte[] value = e.getValue()[ CD ]
Line_8 $$ String name = e.getKey()-->Line_13 $$ assertArrayEquals(value, xAttrs.get(name))[ FD ]
Line_3 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)-->Line_4 $$ assertEquals(path.toString(), expectedXAttrs.size(), xAttrs.size())[ FD ]
Line_3 $$ Map<String, byte[]> xAttrs = fs.getXAttrs(path)-->Line_11 $$ assertTrue(xAttrs.containsKey(name) && xAttrs.get(name) == null)[ FD ]
Line_10 $$ if (value == null) -->Line_11 $$ assertTrue(xAttrs.containsKey(name) && xAttrs.get(name) == null)[ CD ]
Line_7 $$ Entry<String, byte[]> e = i.next()-->Line_9 $$ byte[] value = e.getValue()[ FD ]
