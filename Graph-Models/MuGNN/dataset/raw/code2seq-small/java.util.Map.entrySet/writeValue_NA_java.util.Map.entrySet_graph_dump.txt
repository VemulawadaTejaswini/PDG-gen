Line_41 $$ Map<Object, Object> map = (Map<Object, Object>) value-->Line_45 $$ for (Entry<Object, Object> entry : map.entrySet()) [ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_20 $$ type.writeLong(blockBuilder, millisUtc)[ FD ]
Line_19 $$ long millisUtc = ((SqlTime) value).getMillisUtc()-->Line_27 $$ type.writeLong(blockBuilder, millisUtc)[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_17 $$ type.writeLong(blockBuilder, days)[ FD ]
Line_19 $$ long millisUtc = ((SqlTime) value).getMillisUtc()-->Line_31 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_35 $$ BlockBuilder arrayBlockBuilder = blockBuilder.beginBlockEntry()[ FD ]
Line_50 $$ if (type instanceof RowType) -->Line_54 $$ for (int field = 0; field < row.size(); field++) [ CD ]
Line_32 $$ if (ARRAY.equals(type.getTypeSignature().getBase())) -->Line_34 $$ Type elementType = ((ArrayType) type).getElementType()[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_57 $$ blockBuilder.closeEntry()[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) [ FD ]
Line_34 $$ Type elementType = ((ArrayType) type).getElementType()-->Line_37 $$ writeValue(elementType, arrayBlockBuilder, element)[ FD ]
Line_21 $$ if (TIME_WITH_TIME_ZONE.equals(type)) -->Line_22 $$ long millisUtc = ((SqlTimeWithTimeZone) value).getMillisUtc()[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_3 $$ if (value == null) [ CD ]
Line_25 $$ if (TIMESTAMP.equals(type)) -->Line_28 $$ if (TIMESTAMP_WITH_TIME_ZONE.equals(type)) [ CD ]
Line_50 $$ if (type instanceof RowType) -->Line_53 $$ BlockBuilder rowBlockBuilder = blockBuilder.beginBlockEntry()[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_15 $$ if (DATE.equals(type)) [ FD ]
Line_21 $$ if (TIME_WITH_TIME_ZONE.equals(type)) -->Line_24 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_24 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ FD ]
Line_32 $$ if (ARRAY.equals(type.getTypeSignature().getBase())) -->Line_33 $$ List<Object> list = (List<Object>) value[ CD ]
Line_51 $$ List<Object> row = (List<Object>) value-->Line_54 $$ for (int field = 0; field < row.size(); field++) [ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_27 $$ type.writeLong(blockBuilder, millisUtc)[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_3 $$ if (value == null) [ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_25 $$ if (TIMESTAMP.equals(type)) [ FD ]
Line_21 $$ if (TIME_WITH_TIME_ZONE.equals(type)) -->Line_25 $$ if (TIMESTAMP.equals(type)) [ CD ]
Line_18 $$ if (TIME.equals(type)) -->Line_20 $$ type.writeLong(blockBuilder, millisUtc)[ CD ]
Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) -->Line_41 $$ Map<Object, Object> map = (Map<Object, Object>) value[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_39 $$ blockBuilder.closeEntry()[ FD ]
Line_9 $$ if (BOOLEAN.equals(type)) -->Line_11 $$ if (VARCHAR.equals(type)) [ CD ]
Line_15 $$ if (DATE.equals(type)) -->Line_18 $$ if (TIME.equals(type)) [ CD ]
Line_28 $$ if (TIMESTAMP_WITH_TIME_ZONE.equals(type)) -->Line_32 $$ if (ARRAY.equals(type.getTypeSignature().getBase())) [ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_32 $$ if (ARRAY.equals(type.getTypeSignature().getBase())) [ FD ]
Line_21 $$ if (TIME_WITH_TIME_ZONE.equals(type)) -->Line_23 $$ TimeZoneKey timeZoneKey = ((SqlTimeWithTimeZone) value).getTimeZoneKey()[ CD ]
Line_23 $$ TimeZoneKey timeZoneKey = ((SqlTimeWithTimeZone) value).getTimeZoneKey()-->Line_24 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ FD ]
Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) -->Line_43 $$ Type valueType = ((MapType) type).getValueType()[ CD ]
Line_13 $$ if (VARBINARY.equals(type)) -->Line_15 $$ if (DATE.equals(type)) [ CD ]
Line_44 $$ BlockBuilder mapBlockBuilder = blockBuilder.beginBlockEntry()-->Line_47 $$ writeValue(valueType, mapBlockBuilder, entry.getValue())[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_50 $$ if (type instanceof RowType) [ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_49 $$ blockBuilder.closeEntry()[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_44 $$ BlockBuilder mapBlockBuilder = blockBuilder.beginBlockEntry()[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_52 $$ List<Type> fieldTypes = type.getTypeParameters()[ FD ]
Line_54 $$ for (int field = 0; field < row.size(); field++) -->Line_55 $$ writeValue(fieldTypes.get(field), rowBlockBuilder, row.get(field))[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_31 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_18 $$ if (TIME.equals(type)) [ FD ]
Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) -->Line_44 $$ BlockBuilder mapBlockBuilder = blockBuilder.beginBlockEntry()[ CD ]
Line_25 $$ if (TIMESTAMP.equals(type)) -->Line_26 $$ long millisUtc = ((SqlTimestamp) value).getMillisUtc()[ CD ]
Line_11 $$ if (VARCHAR.equals(type)) -->Line_13 $$ if (VARBINARY.equals(type)) [ CD ]
Line_32 $$ if (ARRAY.equals(type.getTypeSignature().getBase())) -->Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) [ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_12 $$ type.writeSlice(blockBuilder, Slices.utf8Slice((String) value))[ FD ]
Line_28 $$ if (TIMESTAMP_WITH_TIME_ZONE.equals(type)) -->Line_31 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ CD ]
Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) -->Line_50 $$ if (type instanceof RowType) [ CD ]
Line_45 $$ for (Entry<Object, Object> entry : map.entrySet()) -->Line_46 $$ writeValue(keyType, mapBlockBuilder, entry.getKey())[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_11 $$ if (VARCHAR.equals(type)) [ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_14 $$ type.writeSlice(blockBuilder, Slices.wrappedBuffer((byte[]) value))[ FD ]
Line_19 $$ long millisUtc = ((SqlTime) value).getMillisUtc()-->Line_20 $$ type.writeLong(blockBuilder, millisUtc)[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_7 $$ if (DOUBLE.equals(type)) [ FD ]
Line_15 $$ if (DATE.equals(type)) -->Line_16 $$ int days = ((SqlDate) value).getDays()[ CD ]
Line_19 $$ long millisUtc = ((SqlTime) value).getMillisUtc()-->Line_24 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ FD ]
Line_52 $$ List<Type> fieldTypes = type.getTypeParameters()-->Line_55 $$ writeValue(fieldTypes.get(field), rowBlockBuilder, row.get(field))[ FD ]
Line_50 $$ if (type instanceof RowType) -->Line_57 $$ blockBuilder.closeEntry()[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_28 $$ if (TIMESTAMP_WITH_TIME_ZONE.equals(type)) [ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_21 $$ if (TIME_WITH_TIME_ZONE.equals(type)) [ FD ]
Line_5 $$ if (BIGINT.equals(type)) -->Line_6 $$ type.writeLong(blockBuilder, ((Number) value).longValue())[ CD ]
Line_36 $$ for (Object element : list) -->Line_37 $$ writeValue(elementType, arrayBlockBuilder, element)[ FD ]
Line_13 $$ if (VARBINARY.equals(type)) -->Line_14 $$ type.writeSlice(blockBuilder, Slices.wrappedBuffer((byte[]) value))[ CD ]
Line_5 $$ if (BIGINT.equals(type)) -->Line_7 $$ if (DOUBLE.equals(type)) [ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_13 $$ if (VARBINARY.equals(type)) [ FD ]
Line_45 $$ for (Entry<Object, Object> entry : map.entrySet()) -->Line_47 $$ writeValue(valueType, mapBlockBuilder, entry.getValue())[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_4 $$ blockBuilder.appendNull()[ FD ]
Line_35 $$ BlockBuilder arrayBlockBuilder = blockBuilder.beginBlockEntry()-->Line_37 $$ writeValue(elementType, arrayBlockBuilder, element)[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_8 $$ type.writeDouble(blockBuilder, ((Number) value).doubleValue())[ FD ]
Line_43 $$ Type valueType = ((MapType) type).getValueType()-->Line_47 $$ writeValue(valueType, mapBlockBuilder, entry.getValue())[ FD ]
Line_3 $$ if (value == null) -->Line_5 $$ if (BIGINT.equals(type)) [ CD ]
Line_44 $$ BlockBuilder mapBlockBuilder = blockBuilder.beginBlockEntry()-->Line_46 $$ writeValue(keyType, mapBlockBuilder, entry.getKey())[ FD ]
Line_9 $$ if (BOOLEAN.equals(type)) -->Line_10 $$ type.writeBoolean(blockBuilder, (Boolean) value)[ CD ]
Line_16 $$ int days = ((SqlDate) value).getDays()-->Line_17 $$ type.writeLong(blockBuilder, days)[ FD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_10 $$ type.writeBoolean(blockBuilder, (Boolean) value)[ FD ]
Line_50 $$ if (type instanceof RowType) -->Line_52 $$ List<Type> fieldTypes = type.getTypeParameters()[ CD ]
Line_28 $$ if (TIMESTAMP_WITH_TIME_ZONE.equals(type)) -->Line_29 $$ long millisUtc = ((SqlTimestampWithTimeZone) value).getMillisUtc()[ CD ]
Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) -->Line_49 $$ blockBuilder.closeEntry()[ CD ]
Line_11 $$ if (VARCHAR.equals(type)) -->Line_12 $$ type.writeSlice(blockBuilder, Slices.utf8Slice((String) value))[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_5 $$ if (BIGINT.equals(type)) [ FD ]
Line_54 $$ for (int field = 0; field < row.size(); field++) -->Line_55 $$ writeValue(fieldTypes.get(field), rowBlockBuilder, row.get(field))[ FD ]
Line_40 $$ if (MAP.equals(type.getTypeSignature().getBase())) -->Line_42 $$ Type keyType = ((MapType) type).getKeyType()[ CD ]
Line_3 $$ if (value == null) -->Line_4 $$ blockBuilder.appendNull()[ CD ]
Line_7 $$ if (DOUBLE.equals(type)) -->Line_9 $$ if (BOOLEAN.equals(type)) [ CD ]
Line_28 $$ if (TIMESTAMP_WITH_TIME_ZONE.equals(type)) -->Line_30 $$ TimeZoneKey timeZoneKey = ((SqlTimestampWithTimeZone) value).getTimeZoneKey()[ CD ]
Line_32 $$ if (ARRAY.equals(type.getTypeSignature().getBase())) -->Line_39 $$ blockBuilder.closeEntry()[ CD ]
Line_53 $$ BlockBuilder rowBlockBuilder = blockBuilder.beginBlockEntry()-->Line_55 $$ writeValue(fieldTypes.get(field), rowBlockBuilder, row.get(field))[ FD ]
Line_51 $$ List<Object> row = (List<Object>) value-->Line_55 $$ writeValue(fieldTypes.get(field), rowBlockBuilder, row.get(field))[ FD ]
Line_18 $$ if (TIME.equals(type)) -->Line_19 $$ long millisUtc = ((SqlTime) value).getMillisUtc()[ CD ]
Line_15 $$ if (DATE.equals(type)) -->Line_17 $$ type.writeLong(blockBuilder, days)[ CD ]
Line_32 $$ if (ARRAY.equals(type.getTypeSignature().getBase())) -->Line_35 $$ BlockBuilder arrayBlockBuilder = blockBuilder.beginBlockEntry()[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_53 $$ BlockBuilder rowBlockBuilder = blockBuilder.beginBlockEntry()[ FD ]
Line_25 $$ if (TIMESTAMP.equals(type)) -->Line_27 $$ type.writeLong(blockBuilder, millisUtc)[ CD ]
Line_50 $$ if (type instanceof RowType) -->Line_51 $$ List<Object> row = (List<Object>) value[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_9 $$ if (BOOLEAN.equals(type)) [ FD ]
Line_7 $$ if (DOUBLE.equals(type)) -->Line_8 $$ type.writeDouble(blockBuilder, ((Number) value).doubleValue())[ CD ]
Line_2 $$ private static void writeValue(Type type, BlockBuilder blockBuilder, Object value) -->Line_6 $$ type.writeLong(blockBuilder, ((Number) value).longValue())[ FD ]
Line_42 $$ Type keyType = ((MapType) type).getKeyType()-->Line_46 $$ writeValue(keyType, mapBlockBuilder, entry.getKey())[ FD ]
Line_23 $$ TimeZoneKey timeZoneKey = ((SqlTimeWithTimeZone) value).getTimeZoneKey()-->Line_31 $$ type.writeLong(blockBuilder, packDateTimeWithZone(millisUtc, timeZoneKey))[ FD ]
Line_18 $$ if (TIME.equals(type)) -->Line_21 $$ if (TIME_WITH_TIME_ZONE.equals(type)) [ CD ]
