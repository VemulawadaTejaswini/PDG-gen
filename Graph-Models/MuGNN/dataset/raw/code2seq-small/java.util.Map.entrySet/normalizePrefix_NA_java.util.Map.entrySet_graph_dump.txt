Line_5 $$ while (iterator.hasNext()) -->Line_7 $$ if (entry.getKey().startsWith(prefix) == false) [ CD ]
Line_5 $$ while (iterator.hasNext()) -->Line_6 $$ Map.Entry<String, String> entry = iterator.next()[ CD ]
Line_7 $$ if (entry.getKey().startsWith(prefix) == false) -->Line_9 $$ iterator.remove()[ CD ]
Line_7 $$ if (entry.getKey().startsWith(prefix) == false) -->Line_8 $$ replacements.put(prefix + entry.getKey(), entry.getValue())[ CD ]
Line_2 $$ public Builder normalizePrefix(String prefix) -->Line_12 $$ map.putAll(replacements)[ CD ]
Line_2 $$ public Builder normalizePrefix(String prefix) -->Line_5 $$ while (iterator.hasNext()) [ CD ]
Line_4 $$ Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator()-->Line_6 $$ Map.Entry<String, String> entry = iterator.next()[ FD ]
Line_3 $$ Map<String, String> replacements = new HashMap()-->Line_12 $$ map.putAll(replacements)[ FD ]
Line_4 $$ Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator()-->Line_5 $$ while (iterator.hasNext()) [ FD ]
Line_2 $$ public Builder normalizePrefix(String prefix) -->Line_3 $$ Map<String, String> replacements = new HashMap()[ CD ]
Line_6 $$ Map.Entry<String, String> entry = iterator.next()-->Line_7 $$ if (entry.getKey().startsWith(prefix) == false) [ FD ]
Line_3 $$ Map<String, String> replacements = new HashMap()-->Line_8 $$ replacements.put(prefix + entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public Builder normalizePrefix(String prefix) -->Line_4 $$ Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator()[ CD ]
Line_6 $$ Map.Entry<String, String> entry = iterator.next()-->Line_8 $$ replacements.put(prefix + entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public Builder normalizePrefix(String prefix) -->Line_13 $$ return this[ CD ]
Line_4 $$ Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator()-->Line_9 $$ iterator.remove()[ FD ]
Line_2 $$ public Builder normalizePrefix(String prefix) -->Line_7 $$ if (entry.getKey().startsWith(prefix) == false) [ FD ]
