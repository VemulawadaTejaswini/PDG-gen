Line_6 $$ StringBundler sb = new StringBundler()-->Line_20 $$ if (sb.index() > 1) [ FD ]
Line_2 $$ public String parameterMapToString(Map<String, String[]> parameterMap, boolean addQuestion) -->Line_10 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) [ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_16 $$ sb.append(encodeURL(value))[ FD ]
Line_10 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_11 $$ String name = entry.getKey()[ FD ]
Line_7 $$ if (addQuestion) -->Line_8 $$ sb.append(StringPool.QUESTION)[ CD ]
Line_3 $$ if (parameterMap.isEmpty()) -->Line_4 $$ return StringPool.BLANK[ CD ]
Line_11 $$ String name = entry.getKey()-->Line_14 $$ sb.append(name)[ FD ]
Line_2 $$ public String parameterMapToString(Map<String, String[]> parameterMap, boolean addQuestion) -->Line_3 $$ if (parameterMap.isEmpty()) [ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_15 $$ sb.append(StringPool.EQUAL)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_8 $$ sb.append(StringPool.QUESTION)[ FD ]
Line_13 $$ for (String value : values) -->Line_16 $$ sb.append(encodeURL(value))[ FD ]
Line_2 $$ public String parameterMapToString(Map<String, String[]> parameterMap, boolean addQuestion) -->Line_6 $$ StringBundler sb = new StringBundler()[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_14 $$ sb.append(name)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_17 $$ sb.append(StringPool.AMPERSAND)[ FD ]
Line_2 $$ public String parameterMapToString(Map<String, String[]> parameterMap, boolean addQuestion) -->Line_3 $$ if (parameterMap.isEmpty()) [ CD ]
Line_10 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_12 $$ String[] values = entry.getValue()[ FD ]
Line_20 $$ if (sb.index() > 1) -->Line_21 $$ sb.setIndex(sb.index() - 1)[ CD ]
Line_2 $$ public String parameterMapToString(Map<String, String[]> parameterMap, boolean addQuestion) -->Line_20 $$ if (sb.index() > 1) [ CD ]
Line_2 $$ public String parameterMapToString(Map<String, String[]> parameterMap, boolean addQuestion) -->Line_23 $$ return sb.toString()[ CD ]
Line_2 $$ public String parameterMapToString(Map<String, String[]> parameterMap, boolean addQuestion) -->Line_7 $$ if (addQuestion) [ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_21 $$ sb.setIndex(sb.index() - 1)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_23 $$ return sb.toString()[ FD ]
