Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_20 $$ Map<String, Object> routingNode = (Map<String, Object>) withoutType.get("_routing")[ FD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_24 $$ if (fieldName.equals("required")) [ FD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_3 $$ if (withoutType.containsKey("_id")) [ FD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_49 $$ format = fieldNode.toString()[ FD ]
Line_37 $$ String format = TimestampFieldMapper.DEFAULT_DATE_TIME_FORMAT-->Line_49 $$ format = fieldNode.toString()[ FD ]
Line_52 $$ if (fieldName.equals("ignore_missing")) -->Line_53 $$ ignoreMissing = nodeBooleanValue(fieldNode)[ CD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_53 $$ ignoreMissing = nodeBooleanValue(fieldNode)[ FD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_60 $$ if (withoutType.containsKey("_parent")) [ CD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_9 $$ if (fieldName.equals("path")) [ FD ]
Line_5 $$ Map<String, Object> routingNode = (Map<String, Object>) withoutType.get("_id")-->Line_6 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) [ FD ]
Line_34 $$ if (withoutType.containsKey("_timestamp")) -->Line_58 $$ this.timestamp = Timestamp.EMPTY[ CD ]
Line_24 $$ if (fieldName.equals("required")) -->Line_25 $$ required = nodeBooleanValue(fieldNode)[ CD ]
Line_6 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) -->Line_43 $$ Object fieldNode = entry.getValue()[ FD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_44 $$ if (fieldName.equals("enabled")) [ FD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_51 $$ defaultTimestamp = fieldNode.toString()[ FD ]
Line_60 $$ if (withoutType.containsKey("_parent")) -->Line_61 $$ this.hasParentField = true[ CD ]
Line_10 $$ path = fieldNode.toString()-->Line_47 $$ path = fieldNode.toString()[ FD ]
Line_46 $$ if (fieldName.equals("path")) -->Line_47 $$ path = fieldNode.toString()[ CD ]
Line_50 $$ if (fieldName.equals("default") && fieldNode != null) -->Line_51 $$ defaultTimestamp = fieldNode.toString()[ CD ]
Line_4 $$ String path = null-->Line_47 $$ path = fieldNode.toString()[ FD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_47 $$ path = fieldNode.toString()[ FD ]
Line_34 $$ if (withoutType.containsKey("_timestamp")) -->Line_38 $$ String defaultTimestamp = TimestampFieldMapper.Defaults.DEFAULT_TIMESTAMP[ CD ]
Line_44 $$ if (fieldName.equals("enabled")) -->Line_45 $$ enabled = nodeBooleanValue(fieldNode)[ CD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_45 $$ enabled = nodeBooleanValue(fieldNode)[ FD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_17 $$ if (withoutType.containsKey("_routing")) [ FD ]
Line_48 $$ if (fieldName.equals("format")) -->Line_49 $$ format = fieldNode.toString()[ CD ]
Line_50 $$ if (fieldName.equals("default") && fieldNode != null) -->Line_52 $$ if (fieldName.equals("ignore_missing")) [ CD ]
Line_6 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) -->Line_22 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())[ FD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_34 $$ if (withoutType.containsKey("_timestamp")) [ FD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_60 $$ if (withoutType.containsKey("_parent")) [ FD ]
Line_34 $$ if (withoutType.containsKey("_timestamp")) -->Line_39 $$ Boolean ignoreMissing = null[ CD ]
Line_34 $$ if (withoutType.containsKey("_timestamp")) -->Line_56 $$ this.timestamp = new Timestamp(enabled, path, format, defaultTimestamp, ignoreMissing)[ CD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_34 $$ if (withoutType.containsKey("_timestamp")) [ CD ]
Line_17 $$ if (withoutType.containsKey("_routing")) -->Line_30 $$ this.routing = new Routing(required, path)[ CD ]
Line_34 $$ if (withoutType.containsKey("_timestamp")) -->Line_37 $$ String format = TimestampFieldMapper.DEFAULT_DATE_TIME_FORMAT[ CD ]
Line_9 $$ if (fieldName.equals("path")) -->Line_10 $$ path = fieldNode.toString()[ CD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_27 $$ path = fieldNode.toString()[ FD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_40 $$ Map<String, Object> timestampNode = (Map<String, Object>) withoutType.get("_timestamp")[ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) -->Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())[ FD ]
Line_4 $$ String path = null-->Line_10 $$ path = fieldNode.toString()[ FD ]
Line_46 $$ if (fieldName.equals("path")) -->Line_48 $$ if (fieldName.equals("format")) [ CD ]
Line_17 $$ if (withoutType.containsKey("_routing")) -->Line_18 $$ boolean required = false[ CD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_3 $$ if (withoutType.containsKey("_id")) [ CD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_25 $$ required = nodeBooleanValue(fieldNode)[ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) -->Line_42 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())[ FD ]
Line_38 $$ String defaultTimestamp = TimestampFieldMapper.Defaults.DEFAULT_TIMESTAMP-->Line_51 $$ defaultTimestamp = fieldNode.toString()[ FD ]
Line_39 $$ Boolean ignoreMissing = null-->Line_53 $$ ignoreMissing = nodeBooleanValue(fieldNode)[ FD ]
Line_35 $$ boolean enabled = false-->Line_45 $$ enabled = nodeBooleanValue(fieldNode)[ FD ]
Line_17 $$ if (withoutType.containsKey("_routing")) -->Line_32 $$ this.routing = Routing.EMPTY[ CD ]
Line_60 $$ if (withoutType.containsKey("_parent")) -->Line_63 $$ this.hasParentField = false[ CD ]
Line_40 $$ Map<String, Object> timestampNode = (Map<String, Object>) withoutType.get("_timestamp")-->Line_41 $$ for (Map.Entry<String, Object> entry : timestampNode.entrySet()) [ FD ]
Line_34 $$ if (withoutType.containsKey("_timestamp")) -->Line_40 $$ Map<String, Object> timestampNode = (Map<String, Object>) withoutType.get("_timestamp")[ CD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_5 $$ Map<String, Object> routingNode = (Map<String, Object>) withoutType.get("_id")[ FD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_52 $$ if (fieldName.equals("ignore_missing")) [ FD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_26 $$ if (fieldName.equals("path")) [ FD ]
Line_34 $$ if (withoutType.containsKey("_timestamp")) -->Line_35 $$ boolean enabled = false[ CD ]
Line_27 $$ path = fieldNode.toString()-->Line_47 $$ path = fieldNode.toString()[ FD ]
Line_10 $$ path = fieldNode.toString()-->Line_27 $$ path = fieldNode.toString()[ FD ]
Line_5 $$ Map<String, Object> routingNode = (Map<String, Object>) withoutType.get("_id")-->Line_21 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) [ FD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_50 $$ if (fieldName.equals("default") && fieldNode != null) [ FD ]
Line_3 $$ if (withoutType.containsKey("_id")) -->Line_15 $$ this.id = Id.EMPTY[ CD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_46 $$ if (fieldName.equals("path")) [ FD ]
Line_24 $$ if (fieldName.equals("required")) -->Line_26 $$ if (fieldName.equals("path")) [ CD ]
Line_8 $$ Object fieldNode = entry.getValue()-->Line_10 $$ path = fieldNode.toString()[ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) -->Line_23 $$ Object fieldNode = entry.getValue()[ FD ]
Line_18 $$ boolean required = false-->Line_25 $$ required = nodeBooleanValue(fieldNode)[ FD ]
Line_4 $$ String path = null-->Line_27 $$ path = fieldNode.toString()[ FD ]
Line_7 $$ String fieldName = Strings.toUnderscoreCase(entry.getKey())-->Line_48 $$ if (fieldName.equals("format")) [ FD ]
Line_6 $$ for (Map.Entry<String, Object> entry : routingNode.entrySet()) -->Line_8 $$ Object fieldNode = entry.getValue()[ FD ]
Line_48 $$ if (fieldName.equals("format")) -->Line_50 $$ if (fieldName.equals("default") && fieldNode != null) [ CD ]
Line_44 $$ if (fieldName.equals("enabled")) -->Line_46 $$ if (fieldName.equals("path")) [ CD ]
Line_3 $$ if (withoutType.containsKey("_id")) -->Line_5 $$ Map<String, Object> routingNode = (Map<String, Object>) withoutType.get("_id")[ CD ]
Line_3 $$ if (withoutType.containsKey("_id")) -->Line_13 $$ this.id = new Id(path)[ CD ]
Line_2 $$ private void initMappers(Map<String, Object> withoutType) -->Line_17 $$ if (withoutType.containsKey("_routing")) [ CD ]
Line_26 $$ if (fieldName.equals("path")) -->Line_27 $$ path = fieldNode.toString()[ CD ]
Line_3 $$ if (withoutType.containsKey("_id")) -->Line_4 $$ String path = null[ CD ]
