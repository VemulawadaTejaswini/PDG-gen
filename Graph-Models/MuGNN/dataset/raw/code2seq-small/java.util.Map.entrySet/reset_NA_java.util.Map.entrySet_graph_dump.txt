Line_4 $$ for (Map.Entry<String, String> previousLogger : map.entrySet()) -->Line_6 $$ esLogger.setLevel(previousLogger.getValue())[ FD ]
Line_4 $$ for (Map.Entry<String, String> previousLogger : map.entrySet()) -->Line_5 $$ ESLogger esLogger = resolveLogger(previousLogger.getKey())[ FD ]
Line_2 $$ private Map<String, String> reset(Map<String, String> map) -->Line_3 $$ if (map != null) [ FD ]
Line_2 $$ private Map<String, String> reset(Map<String, String> map) -->Line_9 $$ return null[ CD ]
Line_5 $$ ESLogger esLogger = resolveLogger(previousLogger.getKey())-->Line_6 $$ esLogger.setLevel(previousLogger.getValue())[ FD ]
Line_2 $$ private Map<String, String> reset(Map<String, String> map) -->Line_3 $$ if (map != null) [ CD ]
Line_2 $$ private Map<String, String> reset(Map<String, String> map) -->Line_4 $$ for (Map.Entry<String, String> previousLogger : map.entrySet()) [ FD ]
