Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_6 $$ String itemLabel = getItemLabel()[ CD ]
Line_7 $$ String valueProperty = (itemValue != null ? ObjectUtils.getDisplayString(evaluate("itemValue", itemValue)) : null)-->Line_20 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, i)[ FD ]
Line_4 $$ Object itemsObject = (items instanceof String ? evaluate("items", items) : items)-->Line_13 $$ if (itemsObject == null) [ FD ]
Line_7 $$ String valueProperty = (itemValue != null ? ObjectUtils.getDisplayString(evaluate("itemValue", itemValue)) : null)-->Line_34 $$ writeMapEntry(tagWriter, valueProperty, labelProperty, entry, itemIndex)[ FD ]
Line_4 $$ Object itemsObject = (items instanceof String ? evaluate("items", items) : items)-->Line_22 $$ if (itemsObject instanceof Collection) [ FD ]
Line_24 $$ int itemIndex = 0-->Line_27 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, itemIndex)[ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_3 $$ Object items = getItems()[ CD ]
Line_24 $$ int itemIndex = 0-->Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) [ FD ]
Line_8 $$ String labelProperty = (itemLabel != null ? ObjectUtils.getDisplayString(evaluate("itemLabel", itemLabel)) : null)-->Line_20 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, i)[ FD ]
Line_7 $$ String valueProperty = (itemValue != null ? ObjectUtils.getDisplayString(evaluate("itemValue", itemValue)) : null)-->Line_27 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, itemIndex)[ FD ]
Line_11 $$ itemsObject = boundType.getEnumConstants()-->Line_22 $$ if (itemsObject instanceof Collection) [ FD ]
Line_6 $$ String itemLabel = getItemLabel()-->Line_8 $$ String labelProperty = (itemLabel != null ? ObjectUtils.getDisplayString(evaluate("itemLabel", itemLabel)) : null)[ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_8 $$ String labelProperty = (itemLabel != null ? ObjectUtils.getDisplayString(evaluate("itemLabel", itemLabel)) : null)[ CD ]
Line_9 $$ Class<?> boundType = getBindStatus().getValueType()-->Line_11 $$ itemsObject = boundType.getEnumConstants()[ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_27 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, itemIndex)[ FD ]
Line_16 $$ if (itemsObject.getClass().isArray()) -->Line_18 $$ for (int i = 0; i < itemsArray.length; i++) [ CD ]
Line_29 $$ if (itemsObject instanceof Map) -->Line_30 $$ final Map<?, ?> optionMap = (Map<?, ?>) itemsObject[ CD ]
Line_4 $$ Object itemsObject = (items instanceof String ? evaluate("items", items) : items)-->Line_16 $$ if (itemsObject.getClass().isArray()) [ FD ]
Line_22 $$ if (itemsObject instanceof Collection) -->Line_24 $$ int itemIndex = 0[ CD ]
Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) -->Line_32 $$ for (Iterator it = optionMap.entrySet().iterator(); it.hasNext(); itemIndex++) [ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_7 $$ String valueProperty = (itemValue != null ? ObjectUtils.getDisplayString(evaluate("itemValue", itemValue)) : null)[ CD ]
Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) -->Line_33 $$ Map.Entry entry = (Map.Entry) it.next()[ FD ]
Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) -->Line_26 $$ Object item = it.next()[ CD ]
Line_22 $$ if (itemsObject instanceof Collection) -->Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) [ CD ]
Line_8 $$ String labelProperty = (itemLabel != null ? ObjectUtils.getDisplayString(evaluate("itemLabel", itemLabel)) : null)-->Line_34 $$ writeMapEntry(tagWriter, valueProperty, labelProperty, entry, itemIndex)[ FD ]
Line_29 $$ if (itemsObject instanceof Map) -->Line_32 $$ for (Iterator it = optionMap.entrySet().iterator(); it.hasNext(); itemIndex++) [ CD ]
Line_24 $$ int itemIndex = 0-->Line_32 $$ for (Iterator it = optionMap.entrySet().iterator(); it.hasNext(); itemIndex++) [ FD ]
Line_9 $$ Class<?> boundType = getBindStatus().getValueType()-->Line_10 $$ if (itemsObject == null && boundType != null && boundType.isEnum()) [ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_13 $$ if (itemsObject == null) [ CD ]
Line_24 $$ int itemIndex = 0-->Line_34 $$ writeMapEntry(tagWriter, valueProperty, labelProperty, entry, itemIndex)[ FD ]
Line_11 $$ itemsObject = boundType.getEnumConstants()-->Line_29 $$ if (itemsObject instanceof Map) [ FD ]
Line_10 $$ if (itemsObject == null && boundType != null && boundType.isEnum()) -->Line_11 $$ itemsObject = boundType.getEnumConstants()[ CD ]
Line_5 $$ String itemValue = getItemValue()-->Line_7 $$ String valueProperty = (itemValue != null ? ObjectUtils.getDisplayString(evaluate("itemValue", itemValue)) : null)[ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_5 $$ String itemValue = getItemValue()[ CD ]
Line_16 $$ if (itemsObject.getClass().isArray()) -->Line_22 $$ if (itemsObject instanceof Collection) [ CD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_39 $$ return SKIP_BODY[ CD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_16 $$ if (itemsObject.getClass().isArray()) [ CD ]
Line_3 $$ Object items = getItems()-->Line_4 $$ Object itemsObject = (items instanceof String ? evaluate("items", items) : items)[ FD ]
Line_32 $$ for (Iterator it = optionMap.entrySet().iterator(); it.hasNext(); itemIndex++) -->Line_33 $$ Map.Entry entry = (Map.Entry) it.next()[ FD ]
Line_16 $$ if (itemsObject.getClass().isArray()) -->Line_17 $$ Object[] itemsArray = (Object[]) itemsObject[ CD ]
Line_22 $$ if (itemsObject instanceof Collection) -->Line_23 $$ final Collection<?> optionCollection = (Collection<?>) itemsObject[ CD ]
Line_32 $$ for (Iterator it = optionMap.entrySet().iterator(); it.hasNext(); itemIndex++) -->Line_33 $$ Map.Entry entry = (Map.Entry) it.next()[ CD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_9 $$ Class<?> boundType = getBindStatus().getValueType()[ CD ]
Line_18 $$ for (int i = 0; i < itemsArray.length; i++) -->Line_20 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, i)[ FD ]
Line_32 $$ for (Iterator it = optionMap.entrySet().iterator(); it.hasNext(); itemIndex++) -->Line_34 $$ writeMapEntry(tagWriter, valueProperty, labelProperty, entry, itemIndex)[ CD ]
Line_33 $$ Map.Entry entry = (Map.Entry) it.next()-->Line_34 $$ writeMapEntry(tagWriter, valueProperty, labelProperty, entry, itemIndex)[ FD ]
Line_23 $$ final Collection<?> optionCollection = (Collection<?>) itemsObject-->Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) [ FD ]
Line_11 $$ itemsObject = boundType.getEnumConstants()-->Line_13 $$ if (itemsObject == null) [ FD ]
Line_26 $$ Object item = it.next()-->Line_27 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, itemIndex)[ FD ]
Line_18 $$ for (int i = 0; i < itemsArray.length; i++) -->Line_19 $$ Object item = itemsArray[i][ CD ]
Line_11 $$ itemsObject = boundType.getEnumConstants()-->Line_16 $$ if (itemsObject.getClass().isArray()) [ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_4 $$ Object itemsObject = (items instanceof String ? evaluate("items", items) : items)[ CD ]
Line_4 $$ Object itemsObject = (items instanceof String ? evaluate("items", items) : items)-->Line_29 $$ if (itemsObject instanceof Map) [ FD ]
Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) -->Line_27 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, itemIndex)[ CD ]
Line_30 $$ final Map<?, ?> optionMap = (Map<?, ?>) itemsObject-->Line_32 $$ for (Iterator it = optionMap.entrySet().iterator(); it.hasNext(); itemIndex++) [ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_20 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, i)[ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_10 $$ if (itemsObject == null && boundType != null && boundType.isEnum()) [ CD ]
Line_19 $$ Object item = itemsArray[i]-->Line_20 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, i)[ FD ]
Line_19 $$ Object item = itemsArray[i]-->Line_27 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, itemIndex)[ FD ]
Line_2 $$ protected int writeTagContent(TagWriter tagWriter) throws JspException -->Line_34 $$ writeMapEntry(tagWriter, valueProperty, labelProperty, entry, itemIndex)[ FD ]
Line_22 $$ if (itemsObject instanceof Collection) -->Line_29 $$ if (itemsObject instanceof Map) [ CD ]
Line_4 $$ Object itemsObject = (items instanceof String ? evaluate("items", items) : items)-->Line_11 $$ itemsObject = boundType.getEnumConstants()[ FD ]
Line_18 $$ for (int i = 0; i < itemsArray.length; i++) -->Line_20 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, i)[ CD ]
Line_8 $$ String labelProperty = (itemLabel != null ? ObjectUtils.getDisplayString(evaluate("itemLabel", itemLabel)) : null)-->Line_27 $$ writeObjectEntry(tagWriter, valueProperty, labelProperty, item, itemIndex)[ FD ]
Line_25 $$ for (Iterator<?> it = optionCollection.iterator(); it.hasNext(); itemIndex++) -->Line_26 $$ Object item = it.next()[ FD ]
