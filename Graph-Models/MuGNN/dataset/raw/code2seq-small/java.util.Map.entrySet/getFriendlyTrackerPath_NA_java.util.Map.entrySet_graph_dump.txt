Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_43 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_16 $$ long companyId = PortalUtil.getCompanyId(request)[ CD ]
Line_22 $$ if ((portlet == null) || !portlet.isActive()) -->Line_23 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_31 $$ Map<String, String[]> parameterMap = request.getParameterMap()[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_26 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()[ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_13 $$ if (Validator.isNull(portletId)) [ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_6 $$ long plid = ParamUtil.getLong(request, "p_l_id")[ FD ]
Line_26 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_27 $$ if (friendlyURLMapper == null) [ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_28 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_30 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, plid, PortletRequest.RENDER_PHASE)[ CD ]
Line_16 $$ long companyId = PortalUtil.getCompanyId(request)-->Line_20 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_6 $$ long plid = ParamUtil.getLong(request, "p_l_id")[ CD ]
Line_17 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_20 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ FD ]
Line_35 $$ key = key.substring(namespace.length())-->Line_36 $$ portletURL.setParameter(key, entry.getValue())[ FD ]
Line_39 $$ String portletFriendlyURL = friendlyURLMapper.buildPath(portletURL)-->Line_40 $$ if (portletFriendlyURL != null) [ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_10 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)[ CD ]
Line_33 $$ String key = entry.getKey()-->Line_34 $$ if (key.startsWith(namespace)) [ FD ]
Line_12 $$ String portletId = ParamUtil.getString(request, "p_p_id")-->Line_17 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_11 $$ String layoutFriendlyURL = PortalUtil.getLayoutFriendlyURL(layout, themeDisplay)[ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_17 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)[ CD ]
Line_30 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, plid, PortletRequest.RENDER_PHASE)-->Line_39 $$ String portletFriendlyURL = friendlyURLMapper.buildPath(portletURL)[ FD ]
Line_11 $$ String layoutFriendlyURL = PortalUtil.getLayoutFriendlyURL(layout, themeDisplay)-->Line_23 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ FD ]
Line_16 $$ long companyId = PortalUtil.getCompanyId(request)-->Line_17 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)[ FD ]
Line_27 $$ if (friendlyURLMapper == null) -->Line_28 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ CD ]
Line_31 $$ Map<String, String[]> parameterMap = request.getParameterMap()-->Line_32 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) [ FD ]
Line_11 $$ String layoutFriendlyURL = PortalUtil.getLayoutFriendlyURL(layout, themeDisplay)-->Line_28 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_22 $$ if ((portlet == null) || !portlet.isActive()) [ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_27 $$ if (friendlyURLMapper == null) [ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_31 $$ Map<String, String[]> parameterMap = request.getParameterMap()[ CD ]
Line_39 $$ String portletFriendlyURL = friendlyURLMapper.buildPath(portletURL)-->Line_41 $$ return layoutFriendlyURL.concat(portletFriendlyURL)[ FD ]
Line_34 $$ if (key.startsWith(namespace)) -->Line_35 $$ key = key.substring(namespace.length())[ CD ]
Line_6 $$ long plid = ParamUtil.getLong(request, "p_l_id")-->Line_10 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_19 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))[ FD ]
Line_11 $$ String layoutFriendlyURL = PortalUtil.getLayoutFriendlyURL(layout, themeDisplay)-->Line_43 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ FD ]
Line_33 $$ String key = entry.getKey()-->Line_36 $$ portletURL.setParameter(key, entry.getValue())[ FD ]
Line_20 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)-->Line_26 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()[ FD ]
Line_20 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)-->Line_22 $$ if ((portlet == null) || !portlet.isActive()) [ FD ]
Line_12 $$ String portletId = ParamUtil.getString(request, "p_p_id")-->Line_25 $$ String namespace = PortalUtil.getPortletNamespace(portletId)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_3 $$ if (!path.equals(_PATH_PORTAL_LAYOUT)) [ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_12 $$ String portletId = ParamUtil.getString(request, "p_p_id")[ CD ]
Line_17 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_26 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()[ FD ]
Line_17 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_18 $$ if (portlet == null) [ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_12 $$ String portletId = ParamUtil.getString(request, "p_p_id")[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_40 $$ if (portletFriendlyURL != null) [ CD ]
Line_11 $$ String layoutFriendlyURL = PortalUtil.getLayoutFriendlyURL(layout, themeDisplay)-->Line_41 $$ return layoutFriendlyURL.concat(portletFriendlyURL)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_3 $$ if (!path.equals(_PATH_PORTAL_LAYOUT)) [ CD ]
Line_40 $$ if (portletFriendlyURL != null) -->Line_43 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_7 $$ if (plid == 0) [ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_11 $$ String layoutFriendlyURL = PortalUtil.getLayoutFriendlyURL(layout, themeDisplay)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_23 $$ return layoutFriendlyURL.concat(StringPool.QUESTION).concat(request.getQueryString())[ FD ]
Line_13 $$ if (Validator.isNull(portletId)) -->Line_14 $$ return layoutFriendlyURL[ CD ]
Line_17 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, portletId)-->Line_22 $$ if ((portlet == null) || !portlet.isActive()) [ FD ]
Line_34 $$ if (key.startsWith(namespace)) -->Line_36 $$ portletURL.setParameter(key, entry.getValue())[ CD ]
Line_18 $$ if (portlet == null) -->Line_20 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ CD ]
Line_10 $$ Layout layout = LayoutLocalServiceUtil.getLayout(plid)-->Line_11 $$ String layoutFriendlyURL = PortalUtil.getLayoutFriendlyURL(layout, themeDisplay)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_16 $$ long companyId = PortalUtil.getCompanyId(request)[ FD ]
Line_25 $$ String namespace = PortalUtil.getPortletNamespace(portletId)-->Line_35 $$ key = key.substring(namespace.length())[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_39 $$ String portletFriendlyURL = friendlyURLMapper.buildPath(portletURL)[ CD ]
Line_26 $$ FriendlyURLMapper friendlyURLMapper = portlet.getFriendlyURLMapperInstance()-->Line_39 $$ String portletFriendlyURL = friendlyURLMapper.buildPath(portletURL)[ FD ]
Line_40 $$ if (portletFriendlyURL != null) -->Line_41 $$ return layoutFriendlyURL.concat(portletFriendlyURL)[ CD ]
Line_32 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_36 $$ portletURL.setParameter(key, entry.getValue())[ FD ]
Line_7 $$ if (plid == 0) -->Line_8 $$ return null[ CD ]
Line_3 $$ if (!path.equals(_PATH_PORTAL_LAYOUT)) -->Line_4 $$ return null[ CD ]
Line_19 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))-->Line_20 $$ portlet = PortletLocalServiceUtil.getPortletByStrutsPath(companyId, strutsPath)[ FD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_18 $$ if (portlet == null) [ CD ]
Line_32 $$ for (Map.Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_33 $$ String key = entry.getKey()[ FD ]
Line_25 $$ String namespace = PortalUtil.getPortletNamespace(portletId)-->Line_34 $$ if (key.startsWith(namespace)) [ FD ]
Line_30 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, plid, PortletRequest.RENDER_PHASE)-->Line_36 $$ portletURL.setParameter(key, entry.getValue())[ FD ]
Line_33 $$ String key = entry.getKey()-->Line_35 $$ key = key.substring(namespace.length())[ FD ]
Line_18 $$ if (portlet == null) -->Line_19 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))[ CD ]
Line_2 $$ protected String getFriendlyTrackerPath(String path, ThemeDisplay themeDisplay, HttpServletRequest request) throws Exception -->Line_25 $$ String namespace = PortalUtil.getPortletNamespace(portletId)[ CD ]
Line_6 $$ long plid = ParamUtil.getLong(request, "p_l_id")-->Line_7 $$ if (plid == 0) [ FD ]
Line_12 $$ String portletId = ParamUtil.getString(request, "p_p_id")-->Line_13 $$ if (Validator.isNull(portletId)) [ FD ]
