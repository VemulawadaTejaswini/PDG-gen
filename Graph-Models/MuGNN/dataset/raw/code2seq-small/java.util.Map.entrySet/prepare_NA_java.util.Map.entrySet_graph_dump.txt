Line_8 $$ Theme theme = (Theme) request.getAttribute(WebKeys.THEME)-->Line_14 $$ contextObjects.put("fullCssPath", servletContextName + theme.getVelocityResourceListener() + theme.getCssPath())[ FD ]
Line_21 $$ String key = entry.getKey()-->Line_23 $$ if (Validator.isNotNull(key)) [ FD ]
Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_5 $$ if (themeDisplay != null) [ FD ]
Line_10 $$ theme = themeDisplay.getTheme()-->Line_15 $$ contextObjects.put("fullTemplatesPath", servletContextName + theme.getVelocityResourceListener() + theme.getTemplatesPath())[ FD ]
Line_8 $$ Theme theme = (Theme) request.getAttribute(WebKeys.THEME)-->Line_15 $$ contextObjects.put("fullTemplatesPath", servletContextName + theme.getVelocityResourceListener() + theme.getTemplatesPath())[ FD ]
Line_20 $$ for (Map.Entry<String, Object> entry : vmVariables.entrySet()) -->Line_22 $$ Object value = entry.getValue()[ FD ]
Line_12 $$ if (theme != null) -->Line_14 $$ contextObjects.put("fullCssPath", servletContextName + theme.getVelocityResourceListener() + theme.getCssPath())[ CD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_8 $$ Theme theme = (Theme) request.getAttribute(WebKeys.THEME)[ CD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_15 $$ contextObjects.put("fullTemplatesPath", servletContextName + theme.getVelocityResourceListener() + theme.getTemplatesPath())[ FD ]
Line_18 $$ Map<String, Object> vmVariables = (Map<String, Object>) request.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())-->Line_20 $$ for (Map.Entry<String, Object> entry : vmVariables.entrySet()) [ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_9 $$ if ((theme == null) && (themeDisplay != null)) [ CD ]
Line_20 $$ for (Map.Entry<String, Object> entry : vmVariables.entrySet()) -->Line_21 $$ String key = entry.getKey()[ FD ]
Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_17 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_3 $$ super.prepare(contextObjects, request)[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_24 $$ contextObjects.put(key, value)[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_19 $$ if (vmVariables != null) [ CD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_6 $$ contextObjects.put("init", themeDisplay.getPathContext() + TemplateConstants.SERVLET_SEPARATOR + "/classic/templates/init.vm")[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_12 $$ if (theme != null) [ CD ]
Line_12 $$ if (theme != null) -->Line_13 $$ String servletContextName = GetterUtil.getString(theme.getServletContextName())[ CD ]
Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_6 $$ contextObjects.put("init", themeDisplay.getPathContext() + TemplateConstants.SERVLET_SEPARATOR + "/classic/templates/init.vm")[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_18 $$ Map<String, Object> vmVariables = (Map<String, Object>) request.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())[ CD ]
Line_21 $$ String key = entry.getKey()-->Line_24 $$ contextObjects.put(key, value)[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_14 $$ contextObjects.put("fullCssPath", servletContextName + theme.getVelocityResourceListener() + theme.getCssPath())[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_3 $$ super.prepare(contextObjects, request)[ CD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_8 $$ Theme theme = (Theme) request.getAttribute(WebKeys.THEME)[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_18 $$ Map<String, Object> vmVariables = (Map<String, Object>) request.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())[ FD ]
Line_22 $$ Object value = entry.getValue()-->Line_24 $$ contextObjects.put(key, value)[ FD ]
Line_9 $$ if ((theme == null) && (themeDisplay != null)) -->Line_10 $$ theme = themeDisplay.getTheme()[ CD ]
Line_10 $$ theme = themeDisplay.getTheme()-->Line_14 $$ contextObjects.put("fullCssPath", servletContextName + theme.getVelocityResourceListener() + theme.getCssPath())[ FD ]
Line_12 $$ if (theme != null) -->Line_15 $$ contextObjects.put("fullTemplatesPath", servletContextName + theme.getVelocityResourceListener() + theme.getTemplatesPath())[ CD ]
Line_8 $$ Theme theme = (Theme) request.getAttribute(WebKeys.THEME)-->Line_13 $$ String servletContextName = GetterUtil.getString(theme.getServletContextName())[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_17 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ CD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_10 $$ theme = themeDisplay.getTheme()[ FD ]
Line_18 $$ Map<String, Object> vmVariables = (Map<String, Object>) request.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())-->Line_19 $$ if (vmVariables != null) [ FD ]
Line_8 $$ Theme theme = (Theme) request.getAttribute(WebKeys.THEME)-->Line_10 $$ theme = themeDisplay.getTheme()[ FD ]
Line_5 $$ if (themeDisplay != null) -->Line_6 $$ contextObjects.put("init", themeDisplay.getPathContext() + TemplateConstants.SERVLET_SEPARATOR + "/classic/templates/init.vm")[ CD ]
Line_10 $$ theme = themeDisplay.getTheme()-->Line_13 $$ String servletContextName = GetterUtil.getString(theme.getServletContextName())[ FD ]
Line_23 $$ if (Validator.isNotNull(key)) -->Line_24 $$ contextObjects.put(key, value)[ CD ]
Line_17 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()-->Line_18 $$ Map<String, Object> vmVariables = (Map<String, Object>) request.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())[ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_8 $$ Theme theme = (Theme) request.getAttribute(WebKeys.THEME)-->Line_12 $$ if (theme != null) [ FD ]
Line_10 $$ theme = themeDisplay.getTheme()-->Line_12 $$ if (theme != null) [ FD ]
Line_2 $$ public void prepare(Map<String, Object> contextObjects, HttpServletRequest request) -->Line_5 $$ if (themeDisplay != null) [ CD ]
