Line_2 $$ private void assertDOptionParsing(String[] args, Map<String, String> expectedMap, String[] expectedRemainingArgs) throws Exception -->Line_3 $$ for (Map.Entry<String, String> entry : expectedMap.entrySet()) [ FD ]
Line_2 $$ private void assertDOptionParsing(String[] args, Map<String, String> expectedMap, String[] expectedRemainingArgs) throws Exception -->Line_6 $$ Configuration conf = new Configuration()[ CD ]
Line_6 $$ Configuration conf = new Configuration()-->Line_10 $$ assertEquals(entry.getValue(), conf.get(entry.getKey()))[ FD ]
Line_2 $$ private void assertDOptionParsing(String[] args, Map<String, String> expectedMap, String[] expectedRemainingArgs) throws Exception -->Line_12 $$ Assert.assertArrayEquals(Arrays.toString(remainingArgs) + Arrays.toString(expectedRemainingArgs), expectedRemainingArgs, remainingArgs)[ CD ]
Line_3 $$ for (Map.Entry<String, String> entry : expectedMap.entrySet()) -->Line_4 $$ assertNull(conf.get(entry.getKey()))[ FD ]
Line_2 $$ private void assertDOptionParsing(String[] args, Map<String, String> expectedMap, String[] expectedRemainingArgs) throws Exception -->Line_8 $$ String[] remainingArgs = parser.getRemainingArgs()[ CD ]
Line_2 $$ private void assertDOptionParsing(String[] args, Map<String, String> expectedMap, String[] expectedRemainingArgs) throws Exception -->Line_12 $$ Assert.assertArrayEquals(Arrays.toString(remainingArgs) + Arrays.toString(expectedRemainingArgs), expectedRemainingArgs, remainingArgs)[ FD ]
Line_8 $$ String[] remainingArgs = parser.getRemainingArgs()-->Line_12 $$ Assert.assertArrayEquals(Arrays.toString(remainingArgs) + Arrays.toString(expectedRemainingArgs), expectedRemainingArgs, remainingArgs)[ FD ]
Line_2 $$ private void assertDOptionParsing(String[] args, Map<String, String> expectedMap, String[] expectedRemainingArgs) throws Exception -->Line_9 $$ for (Map.Entry<String, String> entry : expectedMap.entrySet()) [ FD ]
Line_7 $$ GenericOptionsParser parser = new GenericOptionsParser(conf, args)-->Line_8 $$ String[] remainingArgs = parser.getRemainingArgs()[ FD ]
Line_2 $$ private void assertDOptionParsing(String[] args, Map<String, String> expectedMap, String[] expectedRemainingArgs) throws Exception -->Line_7 $$ GenericOptionsParser parser = new GenericOptionsParser(conf, args)[ CD ]
Line_3 $$ for (Map.Entry<String, String> entry : expectedMap.entrySet()) -->Line_10 $$ assertEquals(entry.getValue(), conf.get(entry.getKey()))[ FD ]
