Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_3 $$ VerProtocolImpl[] resultk = new VerProtocolImpl[getProtocolImplMap(rpcKind).size()][ CD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_5 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) [ FD ]
Line_6 $$ if (pv.getKey().protocol.equals(protocolName)) -->Line_7 $$ resultk[i++] = new VerProtocolImpl(pv.getKey().version, pv.getValue())[ CD ]
Line_5 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) -->Line_7 $$ resultk[i++] = new VerProtocolImpl(pv.getKey().version, pv.getValue())[ FD ]
Line_10 $$ if (i == 0) -->Line_11 $$ return null[ CD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_13 $$ VerProtocolImpl[] result = new VerProtocolImpl[i][ CD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_4 $$ int i = 0[ CD ]
Line_3 $$ VerProtocolImpl[] resultk = new VerProtocolImpl[getProtocolImplMap(rpcKind).size()]-->Line_14 $$ System.arraycopy(resultk, 0, result, 0, i)[ FD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_6 $$ if (pv.getKey().protocol.equals(protocolName)) [ FD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_10 $$ if (i == 0) [ CD ]
Line_13 $$ VerProtocolImpl[] result = new VerProtocolImpl[i]-->Line_14 $$ System.arraycopy(resultk, 0, result, 0, i)[ FD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_3 $$ VerProtocolImpl[] resultk = new VerProtocolImpl[getProtocolImplMap(rpcKind).size()][ FD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_14 $$ System.arraycopy(resultk, 0, result, 0, i)[ CD ]
Line_4 $$ int i = 0-->Line_14 $$ System.arraycopy(resultk, 0, result, 0, i)[ FD ]
Line_4 $$ int i = 0-->Line_7 $$ resultk[i++] = new VerProtocolImpl(pv.getKey().version, pv.getValue())[ FD ]
Line_4 $$ int i = 0-->Line_10 $$ if (i == 0) [ FD ]
Line_2 $$ VerProtocolImpl[] getSupportedProtocolVersions(RPC.RpcKind rpcKind, String protocolName) -->Line_15 $$ return result[ CD ]
Line_5 $$ for (Map.Entry<ProtoNameVer, ProtoClassProtoImpl> pv : getProtocolImplMap(rpcKind).entrySet()) -->Line_6 $$ if (pv.getKey().protocol.equals(protocolName)) [ FD ]
