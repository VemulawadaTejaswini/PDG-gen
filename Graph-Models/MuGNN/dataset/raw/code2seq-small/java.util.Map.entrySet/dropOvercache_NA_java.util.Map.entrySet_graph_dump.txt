Line_4 $$ if (dropCount >= 0) -->Line_5 $$ List<File> keysToDrop = new ArrayList<File>()[ CD ]
Line_6 $$ for (Map.Entry<File, ChannelDescriptor> entry : myCache.entrySet()) -->Line_9 $$ if (!entry.getValue().isLocked()) [ FD ]
Line_14 $$ for (File file : keysToDrop) -->Line_15 $$ closeChannel(file)[ FD ]
Line_3 $$ int dropCount = myCache.size() - myCacheSizeLimit-->Line_10 $$ dropCount--[ FD ]
Line_3 $$ int dropCount = myCache.size() - myCacheSizeLimit-->Line_7 $$ if (dropCount < 0)[ FD ]
Line_9 $$ if (!entry.getValue().isLocked()) -->Line_11 $$ keysToDrop.add(entry.getKey())[ CD ]
Line_5 $$ List<File> keysToDrop = new ArrayList<File>()-->Line_11 $$ keysToDrop.add(entry.getKey())[ FD ]
Line_3 $$ int dropCount = myCache.size() - myCacheSizeLimit-->Line_4 $$ if (dropCount >= 0) [ FD ]
Line_2 $$ private void dropOvercache() -->Line_3 $$ int dropCount = myCache.size() - myCacheSizeLimit[ CD ]
Line_9 $$ if (!entry.getValue().isLocked()) -->Line_10 $$ dropCount--[ CD ]
Line_6 $$ for (Map.Entry<File, ChannelDescriptor> entry : myCache.entrySet()) -->Line_11 $$ keysToDrop.add(entry.getKey())[ FD ]
Line_2 $$ private void dropOvercache() -->Line_4 $$ if (dropCount >= 0) [ CD ]
