Line_7 $$ Long newChecksum = newer.get(file)-->Line_9 $$ if ((oldChecksum.equals(newChecksum) && !critical.contains(file)) == equal) [ FD ]
Line_5 $$ String file = each.getKey()-->Line_9 $$ if ((oldChecksum.equals(newChecksum) && !critical.contains(file)) == equal) [ FD ]
Line_8 $$ if (oldChecksum != null && newChecksum != null) -->Line_9 $$ if ((oldChecksum.equals(newChecksum) && !critical.contains(file)) == equal) [ CD ]
Line_5 $$ String file = each.getKey()-->Line_6 $$ Long oldChecksum = older.get(file)[ FD ]
Line_2 $$ private static Map<String, Long> collect(Map<String, Long> older, Map<String, Long> newer, List<String> critical, boolean equal) -->Line_6 $$ Long oldChecksum = older.get(file)[ FD ]
Line_5 $$ String file = each.getKey()-->Line_10 $$ result.put(file, oldChecksum)[ FD ]
Line_2 $$ private static Map<String, Long> collect(Map<String, Long> older, Map<String, Long> newer, List<String> critical, boolean equal) -->Line_14 $$ return result[ CD ]
Line_4 $$ for (Map.Entry<String, Long> each : newer.entrySet()) -->Line_5 $$ String file = each.getKey()[ FD ]
Line_5 $$ String file = each.getKey()-->Line_7 $$ Long newChecksum = newer.get(file)[ FD ]
Line_3 $$ Map<String, Long> result = new LinkedHashMap<String, Long>()-->Line_10 $$ result.put(file, oldChecksum)[ FD ]
Line_6 $$ Long oldChecksum = older.get(file)-->Line_9 $$ if ((oldChecksum.equals(newChecksum) && !critical.contains(file)) == equal) [ FD ]
Line_2 $$ private static Map<String, Long> collect(Map<String, Long> older, Map<String, Long> newer, List<String> critical, boolean equal) -->Line_9 $$ if ((oldChecksum.equals(newChecksum) && !critical.contains(file)) == equal) [ FD ]
Line_2 $$ private static Map<String, Long> collect(Map<String, Long> older, Map<String, Long> newer, List<String> critical, boolean equal) -->Line_3 $$ Map<String, Long> result = new LinkedHashMap<String, Long>()[ CD ]
Line_9 $$ if ((oldChecksum.equals(newChecksum) && !critical.contains(file)) == equal) -->Line_10 $$ result.put(file, oldChecksum)[ CD ]
Line_6 $$ Long oldChecksum = older.get(file)-->Line_10 $$ result.put(file, oldChecksum)[ FD ]
Line_2 $$ private static Map<String, Long> collect(Map<String, Long> older, Map<String, Long> newer, List<String> critical, boolean equal) -->Line_7 $$ Long newChecksum = newer.get(file)[ FD ]
Line_2 $$ private static Map<String, Long> collect(Map<String, Long> older, Map<String, Long> newer, List<String> critical, boolean equal) -->Line_4 $$ for (Map.Entry<String, Long> each : newer.entrySet()) [ FD ]
