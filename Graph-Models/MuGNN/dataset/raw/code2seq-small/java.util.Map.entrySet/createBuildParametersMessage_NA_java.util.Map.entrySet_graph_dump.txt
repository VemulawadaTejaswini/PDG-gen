Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()-->Line_5 $$ builder.setBuildType(buildType)[ FD ]
Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()-->Line_4 $$ builder.setGlobalSettings(globals)[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_5 $$ builder.setBuildType(buildType)[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_8 $$ if (!userData.isEmpty()) [ CD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_6 $$ builder.setProjectId(project)[ FD ]
Line_12 $$ if (key != null && value != null) -->Line_13 $$ builder.addBuilderParameter(createPair(key, value))[ CD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_4 $$ builder.setGlobalSettings(globals)[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_17 $$ if (!paths.isEmpty()) [ FD ]
Line_17 $$ if (!paths.isEmpty()) -->Line_18 $$ builder.addAllFilePath(paths)[ CD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_6 $$ builder.setProjectId(project)[ CD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_7 $$ builder.addAllScope(scopes)[ CD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_17 $$ if (!paths.isEmpty()) [ CD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()[ CD ]
Line_9 $$ for (Map.Entry<String, String> entry : userData.entrySet()) -->Line_11 $$ final String value = entry.getValue()[ FD ]
Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()-->Line_13 $$ builder.addBuilderParameter(createPair(key, value))[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_4 $$ builder.setGlobalSettings(globals)[ CD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_18 $$ builder.addAllFilePath(paths)[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_22 $$ controlMessageBuilder.setFsEvent(initialEvent)[ FD ]
Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()-->Line_7 $$ builder.addAllScope(scopes)[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_8 $$ if (!userData.isEmpty()) [ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_9 $$ for (Map.Entry<String, String> entry : userData.entrySet()) [ FD ]
Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()-->Line_24 $$ return controlMessageBuilder.setType(CmdlineRemoteProto.Message.ControllerMessage.Type.BUILD_PARAMETERS).setParamsMessage(builder.build()).build()[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_21 $$ if (initialEvent != null) [ FD ]
Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()-->Line_6 $$ builder.setProjectId(project)[ FD ]
Line_10 $$ final String key = entry.getKey()-->Line_13 $$ builder.addBuilderParameter(createPair(key, value))[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_5 $$ builder.setBuildType(buildType)[ CD ]
Line_9 $$ for (Map.Entry<String, String> entry : userData.entrySet()) -->Line_10 $$ final String key = entry.getKey()[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_7 $$ builder.addAllScope(scopes)[ FD ]
Line_3 $$ final CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Builder builder = CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.newBuilder()-->Line_18 $$ builder.addAllFilePath(paths)[ FD ]
Line_20 $$ final CmdlineRemoteProto.Message.ControllerMessage.Builder controlMessageBuilder = CmdlineRemoteProto.Message.ControllerMessage.newBuilder()-->Line_24 $$ return controlMessageBuilder.setType(CmdlineRemoteProto.Message.ControllerMessage.Type.BUILD_PARAMETERS).setParamsMessage(builder.build()).build()[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_20 $$ final CmdlineRemoteProto.Message.ControllerMessage.Builder controlMessageBuilder = CmdlineRemoteProto.Message.ControllerMessage.newBuilder()[ CD ]
Line_21 $$ if (initialEvent != null) -->Line_22 $$ controlMessageBuilder.setFsEvent(initialEvent)[ CD ]
Line_11 $$ final String value = entry.getValue()-->Line_13 $$ builder.addBuilderParameter(createPair(key, value))[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_24 $$ return controlMessageBuilder.setType(CmdlineRemoteProto.Message.ControllerMessage.Type.BUILD_PARAMETERS).setParamsMessage(builder.build()).build()[ CD ]
Line_20 $$ final CmdlineRemoteProto.Message.ControllerMessage.Builder controlMessageBuilder = CmdlineRemoteProto.Message.ControllerMessage.newBuilder()-->Line_22 $$ controlMessageBuilder.setFsEvent(initialEvent)[ FD ]
Line_2 $$ private static CmdlineRemoteProto.Message.ControllerMessage createBuildParametersMessage(CmdlineRemoteProto.Message.ControllerMessage.ParametersMessage.Type buildType, String project, List<TargetTypeBuildScope> scopes, Map<String, String> userData, Collection<String> paths, final CmdlineRemoteProto.Message.ControllerMessage.GlobalSettings globals, @Nullable CmdlineRemoteProto.Message.ControllerMessage.FSEvent initialEvent) -->Line_21 $$ if (initialEvent != null) [ CD ]
