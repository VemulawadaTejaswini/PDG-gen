Line_10 $$ if (oldSize == 0) -->Line_12 $$ if (oldSize == 1) [ CD ]
Line_11 $$ newMap = Collections.singletonMap(key, value)-->Line_26 $$ newMap.put(key, value)[ FD ]
Line_12 $$ if (oldSize == 1) -->Line_26 $$ newMap.put(key, value)[ CD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_3 $$ if (key == null) [ CD ]
Line_8 $$ final Map<K, V> newMap-->Line_18 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) [ FD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_23 $$ return oldMap.get(key)[ FD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_22 $$ if (oldMap.containsKey(key)) [ FD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_23 $$ return oldMap.get(key)[ FD ]
Line_6 $$ for (; ; ) -->Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) [ CD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_15 $$ if (oldKey.equals(key)) [ FD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_26 $$ newMap.put(key, value)[ FD ]
Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) [ FD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_6 $$ for (; ; ) [ CD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) [ FD ]
Line_18 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) [ FD ]
Line_12 $$ if (oldSize == 1) -->Line_13 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()[ CD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_13 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()[ FD ]
Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) -->Line_29 $$ return null[ CD ]
Line_11 $$ newMap = Collections.singletonMap(key, value)-->Line_18 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_9 $$ final int oldSize = oldMap.size()-->Line_10 $$ if (oldSize == 0) [ FD ]
Line_8 $$ final Map<K, V> newMap-->Line_19 $$ newMap.put(key, value)[ FD ]
Line_12 $$ if (oldSize == 1) -->Line_14 $$ final K oldKey = entry.getKey()[ CD ]
Line_6 $$ for (; ; ) -->Line_10 $$ if (oldSize == 0) [ CD ]
Line_8 $$ final Map<K, V> newMap-->Line_26 $$ newMap.put(key, value)[ FD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_19 $$ newMap.put(key, value)[ FD ]
Line_18 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_14 $$ final K oldKey = entry.getKey()-->Line_15 $$ if (oldKey.equals(key)) [ FD ]
Line_12 $$ if (oldSize == 1) -->Line_22 $$ if (oldMap.containsKey(key)) [ CD ]
Line_13 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()-->Line_14 $$ final K oldKey = entry.getKey()[ FD ]
Line_11 $$ newMap = Collections.singletonMap(key, value)-->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_8 $$ final Map<K, V> newMap-->Line_11 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_19 $$ newMap.put(key, value)[ FD ]
Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_26 $$ newMap.put(key, value)[ FD ]
Line_8 $$ final Map<K, V> newMap-->Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) [ FD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_9 $$ final int oldSize = oldMap.size()[ FD ]
Line_6 $$ for (; ; ) -->Line_8 $$ final Map<K, V> newMap[ CD ]
Line_6 $$ for (; ; ) -->Line_7 $$ final Map<K, V> oldMap = updater.get(instance)[ CD ]
Line_15 $$ if (oldKey.equals(key)) -->Line_16 $$ return entry.getValue()[ CD ]
Line_22 $$ if (oldMap.containsKey(key)) -->Line_23 $$ return oldMap.get(key)[ CD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_3 $$ if (key == null) [ FD ]
Line_15 $$ if (oldKey.equals(key)) -->Line_18 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ CD ]
Line_12 $$ if (oldSize == 1) -->Line_15 $$ if (oldKey.equals(key)) [ CD ]
Line_9 $$ final int oldSize = oldMap.size()-->Line_12 $$ if (oldSize == 1) [ FD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_22 $$ if (oldMap.containsKey(key)) [ FD ]
Line_8 $$ final Map<K, V> newMap-->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_18 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_26 $$ newMap.put(key, value)[ FD ]
Line_13 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()-->Line_16 $$ return entry.getValue()[ FD ]
Line_11 $$ newMap = Collections.singletonMap(key, value)-->Line_28 $$ if (updater.compareAndSet(instance, oldMap, newMap)) [ FD ]
Line_12 $$ if (oldSize == 1) -->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ CD ]
Line_6 $$ for (; ; ) -->Line_9 $$ final int oldSize = oldMap.size()[ CD ]
Line_11 $$ newMap = Collections.singletonMap(key, value)-->Line_19 $$ newMap.put(key, value)[ FD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_7 $$ final Map<K, V> oldMap = updater.get(instance)[ FD ]
Line_15 $$ if (oldKey.equals(key)) -->Line_19 $$ newMap.put(key, value)[ CD ]
Line_10 $$ if (oldSize == 0) -->Line_11 $$ newMap = Collections.singletonMap(key, value)[ CD ]
Line_2 $$ public V putIfAbsent(C instance, K key, V value) -->Line_11 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_18 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_19 $$ newMap.put(key, value)[ FD ]
