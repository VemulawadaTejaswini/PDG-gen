Line_2 $$ public static URL appendParams(URL url, Map<String, String> params) throws IOException -->Line_4 $$ sb.append(url)[ FD ]
Line_2 $$ public static URL appendParams(URL url, Map<String, String> params) throws IOException -->Line_6 $$ for (Map.Entry<String, String> entry : params.entrySet()) [ FD ]
Line_6 $$ for (Map.Entry<String, String> entry : params.entrySet()) -->Line_7 $$ sb.append(separator).append(entry.getKey()).append("=").append(URLEncoder.encode(entry.getValue(), "UTF8"))[ FD ]
Line_2 $$ public static URL appendParams(URL url, Map<String, String> params) throws IOException -->Line_5 $$ String separator = url.toString().contains("?") ? "&" : "?"[ FD ]
Line_2 $$ public static URL appendParams(URL url, Map<String, String> params) throws IOException -->Line_10 $$ return new URL(sb.toString())[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_4 $$ sb.append(url)[ FD ]
Line_5 $$ String separator = url.toString().contains("?") ? "&" : "?"-->Line_7 $$ sb.append(separator).append(entry.getKey()).append("=").append(URLEncoder.encode(entry.getValue(), "UTF8"))[ FD ]
Line_2 $$ public static URL appendParams(URL url, Map<String, String> params) throws IOException -->Line_4 $$ sb.append(url)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_10 $$ return new URL(sb.toString())[ FD ]
Line_5 $$ String separator = url.toString().contains("?") ? "&" : "?"-->Line_8 $$ separator = "&"[ FD ]
Line_2 $$ public static URL appendParams(URL url, Map<String, String> params) throws IOException -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ public static URL appendParams(URL url, Map<String, String> params) throws IOException -->Line_5 $$ String separator = url.toString().contains("?") ? "&" : "?"[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(separator).append(entry.getKey()).append("=").append(URLEncoder.encode(entry.getValue(), "UTF8"))[ FD ]
