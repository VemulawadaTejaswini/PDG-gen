Line_3 $$ Element referenceElement = null-->Line_16 $$ populateClassNameAttribute(classedModel, referenceElement)[ FD ]
Line_3 $$ Element referenceElement = null-->Line_12 $$ referenceElement = referencesElement.addElement("reference")[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_51 $$ referenceElement.addAttribute("referrer-display-name", portlet.getRootPortletId())[ FD ]
Line_3 $$ Element referenceElement = null-->Line_63 $$ referenceElement.addAttribute(referenceAttribute.getKey(), referenceAttribute.getValue())[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_63 $$ referenceElement.addAttribute(referenceAttribute.getKey(), referenceAttribute.getValue())[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_57 $$ if (classedModel instanceof StagedModel) [ CD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_14 $$ referenceElement.addAttribute("class-name", className)[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_51 $$ referenceElement.addAttribute("referrer-display-name", portlet.getRootPortletId())[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_57 $$ if (classedModel instanceof StagedModel) [ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_43 $$ if (Validator.isNotNull(binPath)) [ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_4 $$ if (missing) [ CD ]
Line_47 $$ if (missing) -->Line_48 $$ referenceElement.addAttribute("referrer-class-name", ExportImportClassedModelUtil.getClassName(referrerClassedModel))[ CD ]
Line_10 $$ referencesElement = element.addElement("references")-->Line_12 $$ referenceElement = referencesElement.addElement("reference")[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_46 $$ referenceElement.addAttribute("type", referenceType)[ CD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_48 $$ referenceElement.addAttribute("referrer-class-name", ExportImportClassedModelUtil.getClassName(referrerClassedModel))[ FD ]
Line_38 $$ if (_log.isWarnEnabled()) -->Line_39 $$ _log.warn("Unable to find group " + stagedGroupedModel.getGroupId())[ CD ]
Line_50 $$ Portlet portlet = (Portlet) referrerClassedModel-->Line_51 $$ referenceElement.addAttribute("referrer-display-name", portlet.getRootPortletId())[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_16 $$ populateClassNameAttribute(classedModel, referenceElement)[ FD ]
Line_18 $$ if (classedModel instanceof StagedModel) -->Line_19 $$ referenceElement.addAttribute("display-name", StagedModelDataHandlerUtil.getDisplayName((StagedModel) classedModel))[ CD ]
Line_25 $$ StagedGroupedModel stagedGroupedModel = (StagedGroupedModel) classedModel-->Line_39 $$ _log.warn("Unable to find group " + stagedGroupedModel.getGroupId())[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_46 $$ referenceElement.addAttribute("type", referenceType)[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_60 $$ referenceElement.addAttribute("company-id", String.valueOf(stagedModel.getCompanyId()))[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_8 $$ Element referencesElement = element.element("references")[ FD ]
Line_3 $$ Element referenceElement = null-->Line_51 $$ referenceElement.addAttribute("referrer-display-name", portlet.getRootPortletId())[ FD ]
Line_3 $$ Element referenceElement = null-->Line_19 $$ referenceElement.addAttribute("display-name", StagedModelDataHandlerUtil.getDisplayName((StagedModel) classedModel))[ FD ]
Line_4 $$ if (missing) -->Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")[ CD ]
Line_9 $$ if (referencesElement == null) -->Line_10 $$ referencesElement = element.addElement("references")[ CD ]
Line_3 $$ Element referenceElement = null-->Line_26 $$ referenceElement.addAttribute("group-id", String.valueOf(stagedGroupedModel.getGroupId()))[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_52 $$ if (referrerClassedModel instanceof StagedModel) [ FD ]
Line_49 $$ if (referrerClassedModel instanceof PortletModel) -->Line_52 $$ if (referrerClassedModel instanceof StagedModel) [ CD ]
Line_29 $$ long liveGroupId = group.getLiveGroupId()-->Line_31 $$ liveGroupId = group.getRemoteLiveGroupId()[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_15 $$ referenceElement.addAttribute("class-pk", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_59 $$ referenceElement.addAttribute("uuid", stagedModel.getUuid())[ FD ]
Line_3 $$ Element referenceElement = null-->Line_15 $$ referenceElement.addAttribute("class-pk", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_12 $$ referenceElement = referencesElement.addElement("reference")[ FD ]
Line_49 $$ if (referrerClassedModel instanceof PortletModel) -->Line_50 $$ Portlet portlet = (Portlet) referrerClassedModel[ CD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_3 $$ Element referenceElement = null[ CD ]
Line_25 $$ StagedGroupedModel stagedGroupedModel = (StagedGroupedModel) classedModel-->Line_28 $$ Group group = GroupLocalServiceUtil.getGroup(stagedGroupedModel.getGroupId())[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_16 $$ populateClassNameAttribute(classedModel, referenceElement)[ CD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_36 $$ referenceElement.addAttribute("live-group-id", String.valueOf(liveGroupId))[ FD ]
Line_5 $$ Element referencesElement = _missingReferencesElement-->Line_12 $$ referenceElement = referencesElement.addElement("reference")[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_16 $$ populateClassNameAttribute(classedModel, referenceElement)[ FD ]
Line_33 $$ if (liveGroupId == GroupConstants.DEFAULT_LIVE_GROUP_ID) -->Line_34 $$ liveGroupId = group.getGroupId()[ CD ]
Line_30 $$ if (group.isStagedRemotely()) -->Line_31 $$ liveGroupId = group.getRemoteLiveGroupId()[ CD ]
Line_4 $$ if (missing) -->Line_9 $$ if (referencesElement == null) [ CD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_26 $$ referenceElement.addAttribute("group-id", String.valueOf(stagedGroupedModel.getGroupId()))[ FD ]
Line_3 $$ Element referenceElement = null-->Line_36 $$ referenceElement.addAttribute("live-group-id", String.valueOf(liveGroupId))[ FD ]
Line_17 $$ if (missing) -->Line_18 $$ if (classedModel instanceof StagedModel) [ CD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_63 $$ referenceElement.addAttribute(referenceAttribute.getKey(), referenceAttribute.getValue())[ FD ]
Line_4 $$ if (missing) -->Line_8 $$ Element referencesElement = element.element("references")[ CD ]
Line_28 $$ Group group = GroupLocalServiceUtil.getGroup(stagedGroupedModel.getGroupId())-->Line_34 $$ liveGroupId = group.getGroupId()[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_10 $$ referencesElement = element.addElement("references")[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_15 $$ referenceElement.addAttribute("class-pk", String.valueOf(classedModel.getPrimaryKeyObj()))[ CD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_48 $$ referenceElement.addAttribute("referrer-class-name", ExportImportClassedModelUtil.getClassName(referrerClassedModel))[ FD ]
Line_3 $$ Element referenceElement = null-->Line_46 $$ referenceElement.addAttribute("type", referenceType)[ FD ]
Line_31 $$ liveGroupId = group.getRemoteLiveGroupId()-->Line_33 $$ if (liveGroupId == GroupConstants.DEFAULT_LIVE_GROUP_ID) [ FD ]
Line_3 $$ Element referenceElement = null-->Line_48 $$ referenceElement.addAttribute("referrer-class-name", ExportImportClassedModelUtil.getClassName(referrerClassedModel))[ FD ]
Line_57 $$ if (classedModel instanceof StagedModel) -->Line_59 $$ referenceElement.addAttribute("uuid", stagedModel.getUuid())[ CD ]
Line_5 $$ Element referencesElement = _missingReferencesElement-->Line_10 $$ referencesElement = element.addElement("references")[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_21 $$ referenceElement.addAttribute("display-name", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_31 $$ liveGroupId = group.getRemoteLiveGroupId()-->Line_36 $$ referenceElement.addAttribute("live-group-id", String.valueOf(liveGroupId))[ FD ]
Line_5 $$ Element referencesElement = _missingReferencesElement-->Line_9 $$ if (referencesElement == null) [ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_44 $$ referenceElement.addAttribute("path", binPath)[ FD ]
Line_57 $$ if (classedModel instanceof StagedModel) -->Line_61 $$ Map<String, String> referenceAttributes = StagedModelDataHandlerUtil.getReferenceAttributes(this, stagedModel)[ CD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_15 $$ referenceElement.addAttribute("class-pk", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_17 $$ if (missing) [ CD ]
Line_57 $$ if (classedModel instanceof StagedModel) -->Line_58 $$ StagedModel stagedModel = (StagedModel) classedModel[ CD ]
Line_5 $$ Element referencesElement = _missingReferencesElement-->Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_49 $$ if (referrerClassedModel instanceof PortletModel) [ FD ]
Line_49 $$ if (referrerClassedModel instanceof PortletModel) -->Line_51 $$ referenceElement.addAttribute("referrer-display-name", portlet.getRootPortletId())[ CD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_19 $$ referenceElement.addAttribute("display-name", StagedModelDataHandlerUtil.getDisplayName((StagedModel) classedModel))[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_26 $$ referenceElement.addAttribute("group-id", String.valueOf(stagedGroupedModel.getGroupId()))[ FD ]
Line_29 $$ long liveGroupId = group.getLiveGroupId()-->Line_36 $$ referenceElement.addAttribute("live-group-id", String.valueOf(liveGroupId))[ FD ]
Line_4 $$ if (missing) -->Line_12 $$ referenceElement = referencesElement.addElement("reference")[ CD ]
Line_57 $$ if (classedModel instanceof StagedModel) -->Line_60 $$ referenceElement.addAttribute("company-id", String.valueOf(stagedModel.getCompanyId()))[ CD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_47 $$ if (missing) [ CD ]
Line_3 $$ Element referenceElement = null-->Line_59 $$ referenceElement.addAttribute("uuid", stagedModel.getUuid())[ FD ]
Line_43 $$ if (Validator.isNotNull(binPath)) -->Line_44 $$ referenceElement.addAttribute("path", binPath)[ CD ]
Line_24 $$ if (classedModel instanceof StagedGroupedModel) -->Line_26 $$ referenceElement.addAttribute("group-id", String.valueOf(stagedGroupedModel.getGroupId()))[ CD ]
Line_52 $$ if (referrerClassedModel instanceof StagedModel) -->Line_54 $$ referenceElement.addAttribute("referrer-display-name", StagedModelDataHandlerUtil.getDisplayName(referrerStagedModel))[ CD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_15 $$ referenceElement.addAttribute("class-pk", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_21 $$ referenceElement.addAttribute("display-name", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_46 $$ referenceElement.addAttribute("type", referenceType)[ FD ]
Line_3 $$ Element referenceElement = null-->Line_14 $$ referenceElement.addAttribute("class-name", className)[ FD ]
Line_29 $$ long liveGroupId = group.getLiveGroupId()-->Line_33 $$ if (liveGroupId == GroupConstants.DEFAULT_LIVE_GROUP_ID) [ FD ]
Line_3 $$ Element referenceElement = null-->Line_44 $$ referenceElement.addAttribute("path", binPath)[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_14 $$ referenceElement.addAttribute("class-name", className)[ FD ]
Line_34 $$ liveGroupId = group.getGroupId()-->Line_36 $$ referenceElement.addAttribute("live-group-id", String.valueOf(liveGroupId))[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_44 $$ referenceElement.addAttribute("path", binPath)[ FD ]
Line_3 $$ Element referenceElement = null-->Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_36 $$ referenceElement.addAttribute("live-group-id", String.valueOf(liveGroupId))[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_14 $$ referenceElement.addAttribute("class-name", className)[ FD ]
Line_3 $$ Element referenceElement = null-->Line_21 $$ referenceElement.addAttribute("display-name", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_28 $$ Group group = GroupLocalServiceUtil.getGroup(stagedGroupedModel.getGroupId())-->Line_31 $$ liveGroupId = group.getRemoteLiveGroupId()[ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_54 $$ referenceElement.addAttribute("referrer-display-name", StagedModelDataHandlerUtil.getDisplayName(referrerStagedModel))[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_44 $$ referenceElement.addAttribute("path", binPath)[ FD ]
Line_53 $$ StagedModel referrerStagedModel = (StagedModel) referrerClassedModel-->Line_54 $$ referenceElement.addAttribute("referrer-display-name", StagedModelDataHandlerUtil.getDisplayName(referrerStagedModel))[ FD ]
Line_61 $$ Map<String, String> referenceAttributes = StagedModelDataHandlerUtil.getReferenceAttributes(this, stagedModel)-->Line_62 $$ for (Map.Entry<String, String> referenceAttribute : referenceAttributes.entrySet()) [ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_46 $$ referenceElement.addAttribute("type", referenceType)[ FD ]
Line_24 $$ if (classedModel instanceof StagedGroupedModel) -->Line_25 $$ StagedGroupedModel stagedGroupedModel = (StagedGroupedModel) classedModel[ CD ]
Line_4 $$ if (missing) -->Line_5 $$ Element referencesElement = _missingReferencesElement[ CD ]
Line_31 $$ liveGroupId = group.getRemoteLiveGroupId()-->Line_34 $$ liveGroupId = group.getGroupId()[ FD ]
Line_28 $$ Group group = GroupLocalServiceUtil.getGroup(stagedGroupedModel.getGroupId())-->Line_30 $$ if (group.isStagedRemotely()) [ FD ]
Line_6 $$ referenceElement = referencesElement.addElement("missing-reference")-->Line_59 $$ referenceElement.addAttribute("uuid", stagedModel.getUuid())[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_54 $$ referenceElement.addAttribute("referrer-display-name", StagedModelDataHandlerUtil.getDisplayName(referrerStagedModel))[ FD ]
Line_28 $$ Group group = GroupLocalServiceUtil.getGroup(stagedGroupedModel.getGroupId())-->Line_29 $$ long liveGroupId = group.getLiveGroupId()[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_66 $$ return referenceElement[ CD ]
Line_29 $$ long liveGroupId = group.getLiveGroupId()-->Line_34 $$ liveGroupId = group.getGroupId()[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_60 $$ referenceElement.addAttribute("company-id", String.valueOf(stagedModel.getCompanyId()))[ FD ]
Line_58 $$ StagedModel stagedModel = (StagedModel) classedModel-->Line_61 $$ Map<String, String> referenceAttributes = StagedModelDataHandlerUtil.getReferenceAttributes(this, stagedModel)[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_14 $$ referenceElement.addAttribute("class-name", className)[ CD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_24 $$ if (classedModel instanceof StagedGroupedModel) [ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_24 $$ if (classedModel instanceof StagedGroupedModel) [ CD ]
Line_62 $$ for (Map.Entry<String, String> referenceAttribute : referenceAttributes.entrySet()) -->Line_63 $$ referenceElement.addAttribute(referenceAttribute.getKey(), referenceAttribute.getValue())[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_21 $$ referenceElement.addAttribute("display-name", String.valueOf(classedModel.getPrimaryKeyObj()))[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_19 $$ referenceElement.addAttribute("display-name", StagedModelDataHandlerUtil.getDisplayName((StagedModel) classedModel))[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_43 $$ if (Validator.isNotNull(binPath)) [ CD ]
Line_3 $$ Element referenceElement = null-->Line_54 $$ referenceElement.addAttribute("referrer-display-name", StagedModelDataHandlerUtil.getDisplayName(referrerStagedModel))[ FD ]
Line_12 $$ referenceElement = referencesElement.addElement("reference")-->Line_48 $$ referenceElement.addAttribute("referrer-class-name", ExportImportClassedModelUtil.getClassName(referrerClassedModel))[ FD ]
Line_18 $$ if (classedModel instanceof StagedModel) -->Line_21 $$ referenceElement.addAttribute("display-name", String.valueOf(classedModel.getPrimaryKeyObj()))[ CD ]
Line_58 $$ StagedModel stagedModel = (StagedModel) classedModel-->Line_60 $$ referenceElement.addAttribute("company-id", String.valueOf(stagedModel.getCompanyId()))[ FD ]
Line_25 $$ StagedGroupedModel stagedGroupedModel = (StagedGroupedModel) classedModel-->Line_26 $$ referenceElement.addAttribute("group-id", String.valueOf(stagedGroupedModel.getGroupId()))[ FD ]
Line_3 $$ Element referenceElement = null-->Line_60 $$ referenceElement.addAttribute("company-id", String.valueOf(stagedModel.getCompanyId()))[ FD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_18 $$ if (classedModel instanceof StagedModel) [ FD ]
Line_47 $$ if (missing) -->Line_49 $$ if (referrerClassedModel instanceof PortletModel) [ CD ]
Line_52 $$ if (referrerClassedModel instanceof StagedModel) -->Line_53 $$ StagedModel referrerStagedModel = (StagedModel) referrerClassedModel[ CD ]
Line_2 $$ protected Element doAddReferenceElement(ClassedModel referrerClassedModel, Element element, ClassedModel classedModel, String className, String binPath, String referenceType, boolean missing) -->Line_16 $$ populateClassNameAttribute(classedModel, referenceElement)[ FD ]
Line_58 $$ StagedModel stagedModel = (StagedModel) classedModel-->Line_59 $$ referenceElement.addAttribute("uuid", stagedModel.getUuid())[ FD ]
