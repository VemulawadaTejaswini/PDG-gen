Line_2 $$ private static String _getURLContent(URL url) -->Line_5 $$ String spiId = System.getProperty("spi.id")[ CD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_6 $$ if (spiId == null) [ CD ]
Line_28 $$ urlContent = _removeAppender(urlContent, "TEXT_FILE")-->Line_29 $$ return _removeAppender(urlContent, "XML_FILE")[ FD ]
Line_6 $$ if (spiId == null) -->Line_7 $$ spiId = StringPool.BLANK[ CD ]
Line_23 $$ urlContent = StringUtil.replace(urlContent, variable.getKey(), variable.getValue())-->Line_28 $$ urlContent = _removeAppender(urlContent, "TEXT_FILE")[ FD ]
Line_5 $$ String spiId = System.getProperty("spi.id")-->Line_9 $$ variables.put("@spi.id@", spiId)[ FD ]
Line_15 $$ urlContent = new String(bytes, StringPool.UTF8)-->Line_23 $$ urlContent = StringUtil.replace(urlContent, variable.getKey(), variable.getValue())[ FD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_9 $$ variables.put("@spi.id@", spiId)[ CD ]
Line_13 $$ inputStream = url.openStream()-->Line_20 $$ StreamUtil.cleanUp(inputStream)[ FD ]
Line_10 $$ String urlContent = null-->Line_29 $$ return _removeAppender(urlContent, "XML_FILE")[ FD ]
Line_11 $$ InputStream inputStream = null-->Line_20 $$ StreamUtil.cleanUp(inputStream)[ FD ]
Line_5 $$ String spiId = System.getProperty("spi.id")-->Line_7 $$ spiId = StringPool.BLANK[ FD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_11 $$ InputStream inputStream = null[ CD ]
Line_15 $$ urlContent = new String(bytes, StringPool.UTF8)-->Line_28 $$ urlContent = _removeAppender(urlContent, "TEXT_FILE")[ FD ]
Line_23 $$ urlContent = StringUtil.replace(urlContent, variable.getKey(), variable.getValue())-->Line_29 $$ return _removeAppender(urlContent, "XML_FILE")[ FD ]
Line_5 $$ String spiId = System.getProperty("spi.id")-->Line_6 $$ if (spiId == null) [ FD ]
Line_3 $$ Map<String, String> variables = new HashMap()-->Line_22 $$ for (Map.Entry<String, String> variable : variables.entrySet()) [ FD ]
Line_10 $$ String urlContent = null-->Line_23 $$ urlContent = StringUtil.replace(urlContent, variable.getKey(), variable.getValue())[ FD ]
Line_22 $$ for (Map.Entry<String, String> variable : variables.entrySet()) -->Line_23 $$ urlContent = StringUtil.replace(urlContent, variable.getKey(), variable.getValue())[ FD ]
Line_7 $$ spiId = StringPool.BLANK-->Line_9 $$ variables.put("@spi.id@", spiId)[ FD ]
Line_3 $$ Map<String, String> variables = new HashMap()-->Line_9 $$ variables.put("@spi.id@", spiId)[ FD ]
Line_3 $$ Map<String, String> variables = new HashMap()-->Line_4 $$ variables.put("@liferay.home@", _getLiferayHome())[ FD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_10 $$ String urlContent = null[ CD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_29 $$ return _removeAppender(urlContent, "XML_FILE")[ CD ]
Line_10 $$ String urlContent = null-->Line_15 $$ urlContent = new String(bytes, StringPool.UTF8)[ FD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_28 $$ urlContent = _removeAppender(urlContent, "TEXT_FILE")[ CD ]
Line_11 $$ InputStream inputStream = null-->Line_13 $$ inputStream = url.openStream()[ FD ]
Line_10 $$ String urlContent = null-->Line_28 $$ urlContent = _removeAppender(urlContent, "TEXT_FILE")[ FD ]
Line_11 $$ InputStream inputStream = null-->Line_14 $$ byte[] bytes = _getBytes(inputStream)[ FD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_13 $$ inputStream = url.openStream()[ FD ]
Line_25 $$ if (ServerDetector.getServerId() != null) -->Line_26 $$ return urlContent[ CD ]
Line_13 $$ inputStream = url.openStream()-->Line_14 $$ byte[] bytes = _getBytes(inputStream)[ FD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_25 $$ if (ServerDetector.getServerId() != null) [ CD ]
Line_15 $$ urlContent = new String(bytes, StringPool.UTF8)-->Line_29 $$ return _removeAppender(urlContent, "XML_FILE")[ FD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_4 $$ variables.put("@liferay.home@", _getLiferayHome())[ CD ]
Line_2 $$ private static String _getURLContent(URL url) -->Line_3 $$ Map<String, String> variables = new HashMap()[ CD ]
