Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_3 $$ MethodHandler methodHandler = new MethodHandler(_registerOrderMethodKey, orderUuid, productEntryName, maxServers)[ CD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_5 $$ FutureClusterResponses futureClusterResponses = ClusterExecutorUtil.execute(clusterRequest)[ CD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_8 $$ Map<String, Object> attributes = (Map<String, Object>) clusterNodeResponse.getResult()[ CD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_10 $$ request.setAttribute(clusterNode.getClusterNodeId() + StringPool.UNDERLINE + entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_7 $$ ClusterNodeResponse clusterNodeResponse = clusterNodeResponses.getClusterResponse(clusterNode.getClusterNodeId())[ FD ]
Line_3 $$ MethodHandler methodHandler = new MethodHandler(_registerOrderMethodKey, orderUuid, productEntryName, maxServers)-->Line_4 $$ ClusterRequest clusterRequest = ClusterRequest.createUnicastRequest(methodHandler, clusterNode.getClusterNodeId())[ FD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_6 $$ ClusterNodeResponses clusterNodeResponses = futureClusterResponses.get(20000, TimeUnit.MILLISECONDS)[ CD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_4 $$ ClusterRequest clusterRequest = ClusterRequest.createUnicastRequest(methodHandler, clusterNode.getClusterNodeId())[ CD ]
Line_4 $$ ClusterRequest clusterRequest = ClusterRequest.createUnicastRequest(methodHandler, clusterNode.getClusterNodeId())-->Line_5 $$ FutureClusterResponses futureClusterResponses = ClusterExecutorUtil.execute(clusterRequest)[ FD ]
Line_5 $$ FutureClusterResponses futureClusterResponses = ClusterExecutorUtil.execute(clusterRequest)-->Line_6 $$ ClusterNodeResponses clusterNodeResponses = futureClusterResponses.get(20000, TimeUnit.MILLISECONDS)[ FD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_4 $$ ClusterRequest clusterRequest = ClusterRequest.createUnicastRequest(methodHandler, clusterNode.getClusterNodeId())[ FD ]
Line_2 $$ private static void _registerClusterOrder(HttpServletRequest request, ClusterNode clusterNode, String orderUuid, String productEntryName, int maxServers) throws Exception -->Line_7 $$ ClusterNodeResponse clusterNodeResponse = clusterNodeResponses.getClusterResponse(clusterNode.getClusterNodeId())[ CD ]
Line_6 $$ ClusterNodeResponses clusterNodeResponses = futureClusterResponses.get(20000, TimeUnit.MILLISECONDS)-->Line_7 $$ ClusterNodeResponse clusterNodeResponse = clusterNodeResponses.getClusterResponse(clusterNode.getClusterNodeId())[ FD ]
Line_8 $$ Map<String, Object> attributes = (Map<String, Object>) clusterNodeResponse.getResult()-->Line_9 $$ for (Map.Entry<String, Object> entry : attributes.entrySet()) [ FD ]
Line_9 $$ for (Map.Entry<String, Object> entry : attributes.entrySet()) -->Line_10 $$ request.setAttribute(clusterNode.getClusterNodeId() + StringPool.UNDERLINE + entry.getKey(), entry.getValue())[ FD ]
Line_7 $$ ClusterNodeResponse clusterNodeResponse = clusterNodeResponses.getClusterResponse(clusterNode.getClusterNodeId())-->Line_8 $$ Map<String, Object> attributes = (Map<String, Object>) clusterNodeResponse.getResult()[ FD ]
