Line_21 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_33 $$ BPOfferService bpos2 = dn.getAllBpOs()[1][ FD ]
Line_22 $$ final Map<String, Object> volInfos = dn.data.getVolumeInfoMap()-->Line_25 $$ for (Map.Entry<String, Object> e : volInfos.entrySet()) [ FD ]
Line_34 $$ if (getNNSocketAddress(bpos1).equals(nn2.getNameNodeAddress())) -->Line_35 $$ BPOfferService tmp = bpos1[ CD ]
Line_34 $$ if (getNNSocketAddress(bpos1).equals(nn2.getNameNodeAddress())) -->Line_37 $$ bpos2 = tmp[ CD ]
Line_10 $$ String bpid1 = FSImageTestUtil.getFSImage(nn1).getBlockPoolID()-->Line_41 $$ assertEquals("wrong bpid", bpos1.getBlockPoolId(), bpid1)[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleFederatedTopology(2)).build()-->Line_48 $$ cluster.shutdown()[ FD ]
Line_6 $$ NameNode nn1 = cluster.getNameNode(0)-->Line_19 $$ LOG.info("nn1: lv=" + lv1 + ";cid=" + cid1 + ";bpid=" + bpid1 + ";uri=" + nn1.getNameNodeAddress())[ FD ]
Line_2 $$ public void test2NNRegistration() throws IOException -->Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleFederatedTopology(2)).build()[ CD ]
Line_24 $$ int i = 0-->Line_26 $$ LOG.info("vol " + i++ + ") " + e.getKey() + ": " + e.getValue())[ FD ]
Line_37 $$ bpos2 = tmp-->Line_40 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos2), nn2.getNameNodeAddress())[ FD ]
Line_22 $$ final Map<String, Object> volInfos = dn.data.getVolumeInfoMap()-->Line_23 $$ Assert.assertTrue("No volumes in the fsdataset", volInfos.size() > 0)[ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_13 $$ String cid2 = FSImageTestUtil.getFSImage(nn2).getClusterID()[ FD ]
Line_36 $$ bpos1 = bpos2-->Line_39 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos1), nn1.getNameNodeAddress())[ FD ]
Line_32 $$ BPOfferService bpos1 = dn.getAllBpOs()[0]-->Line_41 $$ assertEquals("wrong bpid", bpos1.getBlockPoolId(), bpid1)[ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_9 $$ assertNotNull("cannot create nn2", nn2)[ FD ]
Line_6 $$ NameNode nn1 = cluster.getNameNode(0)-->Line_16 $$ int ns1 = FSImageTestUtil.getFSImage(nn1).getNamespaceID()[ FD ]
Line_12 $$ String cid1 = FSImageTestUtil.getFSImage(nn1).getClusterID()-->Line_43 $$ assertEquals("wrong cid", dn.getClusterId(), cid1)[ FD ]
Line_21 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_32 $$ BPOfferService bpos1 = dn.getAllBpOs()[0][ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleFederatedTopology(2)).build()-->Line_7 $$ NameNode nn2 = cluster.getNameNode(1)[ FD ]
Line_32 $$ BPOfferService bpos1 = dn.getAllBpOs()[0]-->Line_34 $$ if (getNNSocketAddress(bpos1).equals(nn2.getNameNodeAddress())) [ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_11 $$ String bpid2 = FSImageTestUtil.getFSImage(nn2).getBlockPoolID()[ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_40 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos2), nn2.getNameNodeAddress())[ FD ]
Line_11 $$ String bpid2 = FSImageTestUtil.getFSImage(nn2).getBlockPoolID()-->Line_42 $$ assertEquals("wrong bpid", bpos2.getBlockPoolId(), bpid2)[ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_20 $$ LOG.info("nn2: lv=" + lv2 + ";cid=" + cid2 + ";bpid=" + bpid2 + ";uri=" + nn2.getNameNodeAddress())[ FD ]
Line_17 $$ int ns2 = FSImageTestUtil.getFSImage(nn2).getNamespaceID()-->Line_18 $$ assertNotSame("namespace ids should be different", ns1, ns2)[ FD ]
Line_16 $$ int ns1 = FSImageTestUtil.getFSImage(nn1).getNamespaceID()-->Line_18 $$ assertNotSame("namespace ids should be different", ns1, ns2)[ FD ]
Line_22 $$ final Map<String, Object> volInfos = dn.data.getVolumeInfoMap()-->Line_28 $$ assertEquals("number of volumes is wrong", 2, volInfos.size())[ FD ]
Line_32 $$ BPOfferService bpos1 = dn.getAllBpOs()[0]-->Line_36 $$ bpos1 = bpos2[ FD ]
Line_33 $$ BPOfferService bpos2 = dn.getAllBpOs()[1]-->Line_36 $$ bpos1 = bpos2[ FD ]
Line_33 $$ BPOfferService bpos2 = dn.getAllBpOs()[1]-->Line_40 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos2), nn2.getNameNodeAddress())[ FD ]
Line_35 $$ BPOfferService tmp = bpos1-->Line_37 $$ bpos2 = tmp[ FD ]
Line_12 $$ String cid1 = FSImageTestUtil.getFSImage(nn1).getClusterID()-->Line_44 $$ assertEquals("cid should be same", cid2, cid1)[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleFederatedTopology(2)).build()-->Line_6 $$ NameNode nn1 = cluster.getNameNode(0)[ FD ]
Line_6 $$ NameNode nn1 = cluster.getNameNode(0)-->Line_10 $$ String bpid1 = FSImageTestUtil.getFSImage(nn1).getBlockPoolID()[ FD ]
Line_6 $$ NameNode nn1 = cluster.getNameNode(0)-->Line_12 $$ String cid1 = FSImageTestUtil.getFSImage(nn1).getClusterID()[ FD ]
Line_6 $$ NameNode nn1 = cluster.getNameNode(0)-->Line_8 $$ assertNotNull("cannot create nn1", nn1)[ FD ]
Line_25 $$ for (Map.Entry<String, Object> e : volInfos.entrySet()) -->Line_26 $$ LOG.info("vol " + i++ + ") " + e.getKey() + ": " + e.getValue())[ FD ]
Line_33 $$ BPOfferService bpos2 = dn.getAllBpOs()[1]-->Line_37 $$ bpos2 = tmp[ FD ]
Line_37 $$ bpos2 = tmp-->Line_42 $$ assertEquals("wrong bpid", bpos2.getBlockPoolId(), bpid2)[ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_34 $$ if (getNNSocketAddress(bpos1).equals(nn2.getNameNodeAddress())) [ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_15 $$ int lv2 = FSImageTestUtil.getFSImage(nn2).getLayoutVersion()[ FD ]
Line_6 $$ NameNode nn1 = cluster.getNameNode(0)-->Line_14 $$ int lv1 = FSImageTestUtil.getFSImage(nn1).getLayoutVersion()[ FD ]
Line_21 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_29 $$ for (BPOfferService bpos : dn.getAllBpOs()) [ FD ]
Line_17 $$ int ns2 = FSImageTestUtil.getFSImage(nn2).getNamespaceID()-->Line_46 $$ assertEquals("namespace should be same", bpos2.bpNSInfo.namespaceID, ns2)[ FD ]
Line_34 $$ if (getNNSocketAddress(bpos1).equals(nn2.getNameNodeAddress())) -->Line_36 $$ bpos1 = bpos2[ CD ]
Line_32 $$ BPOfferService bpos1 = dn.getAllBpOs()[0]-->Line_39 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos1), nn1.getNameNodeAddress())[ FD ]
Line_13 $$ String cid2 = FSImageTestUtil.getFSImage(nn2).getClusterID()-->Line_44 $$ assertEquals("cid should be same", cid2, cid1)[ FD ]
Line_6 $$ NameNode nn1 = cluster.getNameNode(0)-->Line_39 $$ assertEquals("wrong nn address", getNNSocketAddress(bpos1), nn1.getNameNodeAddress())[ FD ]
Line_16 $$ int ns1 = FSImageTestUtil.getFSImage(nn1).getNamespaceID()-->Line_45 $$ assertEquals("namespace should be same", bpos1.bpNSInfo.namespaceID, ns1)[ FD ]
Line_36 $$ bpos1 = bpos2-->Line_41 $$ assertEquals("wrong bpid", bpos1.getBlockPoolId(), bpid1)[ FD ]
Line_33 $$ BPOfferService bpos2 = dn.getAllBpOs()[1]-->Line_42 $$ assertEquals("wrong bpid", bpos2.getBlockPoolId(), bpid2)[ FD ]
Line_21 $$ DataNode dn = cluster.getDataNodes().get(0)-->Line_43 $$ assertEquals("wrong cid", dn.getClusterId(), cid1)[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleFederatedTopology(2)).build()-->Line_5 $$ cluster.waitActive()[ FD ]
Line_3 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).nnTopology(MiniDFSNNTopology.simpleFederatedTopology(2)).build()-->Line_21 $$ DataNode dn = cluster.getDataNodes().get(0)[ FD ]
Line_7 $$ NameNode nn2 = cluster.getNameNode(1)-->Line_17 $$ int ns2 = FSImageTestUtil.getFSImage(nn2).getNamespaceID()[ FD ]
