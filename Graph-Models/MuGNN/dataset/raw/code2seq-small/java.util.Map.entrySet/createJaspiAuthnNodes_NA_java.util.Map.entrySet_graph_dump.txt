Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_12 $$ PathAddress jaspiAddress = domainAddress.append(org.jboss.as.test.integration.security.common.Constants.AUTHENTICATION, org.jboss.as.test.integration.security.common.Constants.JASPI)[ CD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_26 $$ securityModuleNode.get(org.jboss.as.test.integration.security.common.Constants.LOGIN_MODULE_STACK_REF).set(config.getLoginModuleStackRef())[ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_28 $$ Map<String, String> configOptions = config.getOptions()[ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_60 $$ final ModelNode moduleOptionsNode = securityModuleNode.get(MODULE_OPTIONS)[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_11 $$ PathAddress domainAddress = PathAddress.pathAddress().append(SUBSYSTEM, SUBSYSTEM_SECURITY).append(SECURITY_DOMAIN, domainName)[ FD ]
Line_19 $$ if (config.getFlag() != null) -->Line_20 $$ securityModuleNode.get(FLAG).set(config.getFlag())[ CD ]
Line_22 $$ if (config.getModule() != null) -->Line_23 $$ securityModuleNode.get(org.jboss.as.test.integration.security.common.Constants.MODULE).set(config.getModule())[ CD ]
Line_28 $$ Map<String, String> configOptions = config.getOptions()-->Line_61 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) [ FD ]
Line_49 $$ final String flag = StringUtils.defaultIfEmpty(config.getFlag(), org.jboss.as.test.integration.security.common.Constants.REQUIRED)-->Line_51 $$ securityModuleNode.get(FLAG).set(flag)[ FD ]
Line_12 $$ PathAddress jaspiAddress = domainAddress.append(org.jboss.as.test.integration.security.common.Constants.AUTHENTICATION, org.jboss.as.test.integration.security.common.Constants.JASPI)-->Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))[ FD ]
Line_38 $$ if (LOGGER.isDebugEnabled()) -->Line_39 $$ LOGGER.debug("Adding module option [" + optionName + "=" + optionValue + "]")[ CD ]
Line_44 $$ PathAddress lmStackAddress = jaspiAddress.append(org.jboss.as.test.integration.security.common.Constants.LOGIN_MODULE_STACK, lmStack.getName())-->Line_48 $$ final ModelNode securityModuleNode = Util.createAddOperation(lmStackAddress.append(LOGIN_MODULE, code))[ FD ]
Line_31 $$ configOptions = Collections.emptyMap()-->Line_34 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) [ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) [ FD ]
Line_11 $$ PathAddress domainAddress = PathAddress.pathAddress().append(SUBSYSTEM, SUBSYSTEM_SECURITY).append(SECURITY_DOMAIN, domainName)-->Line_12 $$ PathAddress jaspiAddress = domainAddress.append(org.jboss.as.test.integration.security.common.Constants.AUTHENTICATION, org.jboss.as.test.integration.security.common.Constants.JASPI)[ FD ]
Line_43 $$ for (final LoginModuleStack lmStack : securityConfigurations.getLoginModuleStacks()) -->Line_46 $$ for (final SecurityModule config : lmStack.getLoginModules()) [ FD ]
Line_36 $$ final String optionValue = entry.getValue()-->Line_64 $$ moduleOptionsNode.add(optionName, optionValue)[ FD ]
Line_47 $$ final String code = config.getName()-->Line_50 $$ securityModuleNode.get(ModelDescriptionConstants.CODE).set(code)[ FD ]
Line_52 $$ if (LOGGER.isInfoEnabled()) -->Line_53 $$ LOGGER.info("Adding JASPI login module stack [code=" + code + ", flag=" + flag + "]")[ CD ]
Line_43 $$ for (final LoginModuleStack lmStack : securityConfigurations.getLoginModuleStacks()) -->Line_44 $$ PathAddress lmStackAddress = jaspiAddress.append(org.jboss.as.test.integration.security.common.Constants.LOGIN_MODULE_STACK, lmStack.getName())[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_7 $$ if (securityConfigurations.getAuthnModules() == null || securityConfigurations.getAuthnModules().length == 0 || securityConfigurations.getLoginModuleStacks() == null || securityConfigurations.getLoginModuleStacks().length == 0) [ FD ]
Line_47 $$ final String code = config.getName()-->Line_48 $$ final ModelNode securityModuleNode = Util.createAddOperation(lmStackAddress.append(LOGIN_MODULE, code))[ FD ]
Line_31 $$ configOptions = Collections.emptyMap()-->Line_58 $$ configOptions = Collections.emptyMap()[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_3 $$ if (securityConfigurations == null) [ CD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_26 $$ securityModuleNode.get(org.jboss.as.test.integration.security.common.Constants.LOGIN_MODULE_STACK_REF).set(config.getLoginModuleStackRef())[ FD ]
Line_12 $$ PathAddress jaspiAddress = domainAddress.append(org.jboss.as.test.integration.security.common.Constants.AUTHENTICATION, org.jboss.as.test.integration.security.common.Constants.JASPI)-->Line_13 $$ steps.add(Util.createAddOperation(jaspiAddress))[ FD ]
Line_56 $$ if (configOptions == null) -->Line_58 $$ configOptions = Collections.emptyMap()[ CD ]
Line_33 $$ final ModelNode moduleOptionsNode = securityModuleNode.get(MODULE_OPTIONS)-->Line_64 $$ moduleOptionsNode.add(optionName, optionValue)[ FD ]
Line_34 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) -->Line_35 $$ final String optionName = entry.getKey()[ FD ]
Line_36 $$ final String optionValue = entry.getValue()-->Line_37 $$ moduleOptionsNode.add(optionName, optionValue)[ FD ]
Line_44 $$ PathAddress lmStackAddress = jaspiAddress.append(org.jboss.as.test.integration.security.common.Constants.LOGIN_MODULE_STACK, lmStack.getName())-->Line_45 $$ steps.add(Util.createAddOperation(lmStackAddress))[ FD ]
Line_34 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) -->Line_63 $$ final String optionValue = entry.getValue()[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_10 $$ final List<ModelNode> steps = new ArrayList<ModelNode>()[ CD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_51 $$ securityModuleNode.get(FLAG).set(flag)[ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_18 $$ securityModuleNode.get(ModelDescriptionConstants.CODE).set(config.getName())[ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_18 $$ securityModuleNode.get(ModelDescriptionConstants.CODE).set(config.getName())[ FD ]
Line_28 $$ Map<String, String> configOptions = config.getOptions()-->Line_58 $$ configOptions = Collections.emptyMap()[ FD ]
Line_28 $$ Map<String, String> configOptions = config.getOptions()-->Line_34 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) [ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_70 $$ steps.add(securityModuleNode)[ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_17 $$ steps.add(securityModuleNode)[ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_25 $$ if (config.getLoginModuleStackRef() != null) [ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_55 $$ Map<String, String> configOptions = config.getOptions()[ FD ]
Line_35 $$ final String optionName = entry.getKey()-->Line_37 $$ moduleOptionsNode.add(optionName, optionValue)[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_3 $$ if (securityConfigurations == null) [ FD ]
Line_33 $$ final ModelNode moduleOptionsNode = securityModuleNode.get(MODULE_OPTIONS)-->Line_37 $$ moduleOptionsNode.add(optionName, optionValue)[ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_47 $$ final String code = config.getName()[ FD ]
Line_3 $$ if (securityConfigurations == null) -->Line_5 $$ return null[ CD ]
Line_31 $$ configOptions = Collections.emptyMap()-->Line_56 $$ if (configOptions == null) [ FD ]
Line_29 $$ if (configOptions == null) -->Line_30 $$ LOGGER.info("No module options provided.")[ CD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_23 $$ securityModuleNode.get(org.jboss.as.test.integration.security.common.Constants.MODULE).set(config.getModule())[ FD ]
Line_34 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) -->Line_62 $$ final String optionName = entry.getKey()[ FD ]
Line_35 $$ final String optionName = entry.getKey()-->Line_64 $$ moduleOptionsNode.add(optionName, optionValue)[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_7 $$ if (securityConfigurations.getAuthnModules() == null || securityConfigurations.getAuthnModules().length == 0 || securityConfigurations.getLoginModuleStacks() == null || securityConfigurations.getLoginModuleStacks().length == 0) [ CD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_20 $$ securityModuleNode.get(FLAG).set(config.getFlag())[ FD ]
Line_58 $$ configOptions = Collections.emptyMap()-->Line_61 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) [ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_50 $$ securityModuleNode.get(ModelDescriptionConstants.CODE).set(code)[ FD ]
Line_65 $$ if (LOGGER.isDebugEnabled()) -->Line_66 $$ LOGGER.debug("Adding module option [" + optionName + "=" + optionValue + "]")[ CD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_69 $$ securityModuleNode.get(OPERATION_HEADERS).get(ALLOW_RESOURCE_SERVICE_RESTART).set(true)[ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_49 $$ final String flag = StringUtils.defaultIfEmpty(config.getFlag(), org.jboss.as.test.integration.security.common.Constants.REQUIRED)[ FD ]
Line_28 $$ Map<String, String> configOptions = config.getOptions()-->Line_31 $$ configOptions = Collections.emptyMap()[ FD ]
Line_25 $$ if (config.getLoginModuleStackRef() != null) -->Line_26 $$ securityModuleNode.get(org.jboss.as.test.integration.security.common.Constants.LOGIN_MODULE_STACK_REF).set(config.getLoginModuleStackRef())[ CD ]
Line_10 $$ final List<ModelNode> steps = new ArrayList<ModelNode>()-->Line_13 $$ steps.add(Util.createAddOperation(jaspiAddress))[ FD ]
Line_10 $$ final List<ModelNode> steps = new ArrayList<ModelNode>()-->Line_70 $$ steps.add(securityModuleNode)[ FD ]
Line_10 $$ final List<ModelNode> steps = new ArrayList<ModelNode>()-->Line_45 $$ steps.add(Util.createAddOperation(lmStackAddress))[ FD ]
Line_29 $$ if (configOptions == null) -->Line_31 $$ configOptions = Collections.emptyMap()[ CD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_13 $$ steps.add(Util.createAddOperation(jaspiAddress))[ CD ]
Line_12 $$ PathAddress jaspiAddress = domainAddress.append(org.jboss.as.test.integration.security.common.Constants.AUTHENTICATION, org.jboss.as.test.integration.security.common.Constants.JASPI)-->Line_44 $$ PathAddress lmStackAddress = jaspiAddress.append(org.jboss.as.test.integration.security.common.Constants.LOGIN_MODULE_STACK, lmStack.getName())[ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_22 $$ if (config.getModule() != null) [ FD ]
Line_3 $$ if (securityConfigurations == null) -->Line_4 $$ LOGGER.info("No security configuration for JASPI module.")[ CD ]
Line_10 $$ final List<ModelNode> steps = new ArrayList<ModelNode>()-->Line_17 $$ steps.add(securityModuleNode)[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_43 $$ for (final LoginModuleStack lmStack : securityConfigurations.getLoginModuleStacks()) [ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_23 $$ securityModuleNode.get(org.jboss.as.test.integration.security.common.Constants.MODULE).set(config.getModule())[ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_20 $$ securityModuleNode.get(FLAG).set(config.getFlag())[ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_11 $$ PathAddress domainAddress = PathAddress.pathAddress().append(SUBSYSTEM, SUBSYSTEM_SECURITY).append(SECURITY_DOMAIN, domainName)[ CD ]
Line_28 $$ Map<String, String> configOptions = config.getOptions()-->Line_29 $$ if (configOptions == null) [ FD ]
Line_16 $$ final ModelNode securityModuleNode = Util.createAddOperation(jaspiAddress.append(AUTH_MODULE, config.getName()))-->Line_33 $$ final ModelNode moduleOptionsNode = securityModuleNode.get(MODULE_OPTIONS)[ FD ]
Line_28 $$ Map<String, String> configOptions = config.getOptions()-->Line_56 $$ if (configOptions == null) [ FD ]
Line_14 $$ for (final AuthnModule config : securityConfigurations.getAuthnModules()) -->Line_19 $$ if (config.getFlag() != null) [ FD ]
Line_2 $$ private List<ModelNode> createJaspiAuthnNodes(JaspiAuthn securityConfigurations, String domainName) -->Line_73 $$ return steps[ CD ]
Line_34 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) -->Line_36 $$ final String optionValue = entry.getValue()[ FD ]
Line_31 $$ configOptions = Collections.emptyMap()-->Line_61 $$ for (final Map.Entry<String, String> entry : configOptions.entrySet()) [ FD ]
Line_56 $$ if (configOptions == null) -->Line_57 $$ LOGGER.info("No module options provided.")[ CD ]
