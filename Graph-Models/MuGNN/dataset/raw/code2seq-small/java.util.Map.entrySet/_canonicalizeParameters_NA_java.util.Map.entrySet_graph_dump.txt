Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)-->Line_13 $$ sb.append(StringPool.AMPERSAND)[ FD ]
Line_9 $$ for (Map.Entry<String, String> parameter : parametersSet) -->Line_10 $$ sb.append(_rfc3986Encode(parameter.getKey()))[ FD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_3 $$ if (parameters.isEmpty()) [ FD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_6 $$ parameters = new TreeMap(parameters)[ CD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)[ CD ]
Line_6 $$ parameters = new TreeMap(parameters)-->Line_7 $$ Set<Map.Entry<String, String>> parametersSet = parameters.entrySet()[ FD ]
Line_3 $$ if (parameters.isEmpty()) -->Line_4 $$ return StringPool.BLANK[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)-->Line_12 $$ sb.append(_rfc3986Encode(parameter.getValue()))[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)-->Line_16 $$ return sb.toString()[ FD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_3 $$ if (parameters.isEmpty()) [ CD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_15 $$ sb.setIndex(sb.index() - 1)[ CD ]
Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)-->Line_11 $$ sb.append(StringPool.EQUAL)[ FD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_7 $$ Set<Map.Entry<String, String>> parametersSet = parameters.entrySet()[ FD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_6 $$ parameters = new TreeMap(parameters)[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)-->Line_10 $$ sb.append(_rfc3986Encode(parameter.getKey()))[ FD ]
Line_9 $$ for (Map.Entry<String, String> parameter : parametersSet) -->Line_12 $$ sb.append(_rfc3986Encode(parameter.getValue()))[ FD ]
Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)-->Line_15 $$ sb.setIndex(sb.index() - 1)[ FD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_16 $$ return sb.toString()[ CD ]
Line_2 $$ private static String _canonicalizeParameters(Map<String, String> parameters) throws Exception -->Line_7 $$ Set<Map.Entry<String, String>> parametersSet = parameters.entrySet()[ CD ]
Line_7 $$ Set<Map.Entry<String, String>> parametersSet = parameters.entrySet()-->Line_8 $$ StringBundler sb = new StringBundler(parametersSet.size() * 4)[ FD ]
