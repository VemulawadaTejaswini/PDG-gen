Line_6 $$ if (key.startsWith("[")) -->Line_9 $$ key = path + "." + key[ CD ]
Line_18 $$ if (value instanceof Collection) -->Line_20 $$ int count = 0[ CD ]
Line_12 $$ Object value = entry.getValue()-->Line_15 $$ if (value instanceof Map) [ FD ]
Line_13 $$ if (value instanceof String) -->Line_14 $$ result.put(key, value)[ CD ]
Line_9 $$ key = path + "." + key-->Line_14 $$ result.put(key, value)[ FD ]
Line_2 $$ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) -->Line_7 $$ key = path + key[ FD ]
Line_21 $$ for (Object object : collection) -->Line_22 $$ buildFlattenedMap(result, Collections.singletonMap("[" + (count++) + "]", object), key)[ FD ]
Line_6 $$ if (key.startsWith("[")) -->Line_7 $$ key = path + key[ CD ]
Line_4 $$ String key = entry.getKey()-->Line_14 $$ result.put(key, value)[ FD ]
Line_3 $$ for (Entry<String, Object> entry : source.entrySet()) -->Line_12 $$ Object value = entry.getValue()[ FD ]
Line_5 $$ if (StringUtils.hasText(path)) -->Line_6 $$ if (key.startsWith("[")) [ CD ]
Line_7 $$ key = path + key-->Line_9 $$ key = path + "." + key[ FD ]
Line_7 $$ key = path + key-->Line_14 $$ result.put(key, value)[ FD ]
Line_7 $$ key = path + key-->Line_25 $$ result.put(key, value != null ? value : "")[ FD ]
Line_2 $$ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) -->Line_22 $$ buildFlattenedMap(result, Collections.singletonMap("[" + (count++) + "]", object), key)[ FD ]
Line_2 $$ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) -->Line_3 $$ for (Entry<String, Object> entry : source.entrySet()) [ FD ]
Line_4 $$ String key = entry.getKey()-->Line_6 $$ if (key.startsWith("[")) [ FD ]
Line_4 $$ String key = entry.getKey()-->Line_17 $$ buildFlattenedMap(result, map, key)[ FD ]
Line_16 $$ Map<String, Object> map = (Map<String, Object>) value-->Line_17 $$ buildFlattenedMap(result, map, key)[ FD ]
Line_20 $$ int count = 0-->Line_22 $$ buildFlattenedMap(result, Collections.singletonMap("[" + (count++) + "]", object), key)[ FD ]
Line_12 $$ Object value = entry.getValue()-->Line_13 $$ if (value instanceof String) [ FD ]
Line_4 $$ String key = entry.getKey()-->Line_25 $$ result.put(key, value != null ? value : "")[ FD ]
Line_3 $$ for (Entry<String, Object> entry : source.entrySet()) -->Line_4 $$ String key = entry.getKey()[ FD ]
Line_9 $$ key = path + "." + key-->Line_22 $$ buildFlattenedMap(result, Collections.singletonMap("[" + (count++) + "]", object), key)[ FD ]
Line_7 $$ key = path + key-->Line_17 $$ buildFlattenedMap(result, map, key)[ FD ]
Line_18 $$ if (value instanceof Collection) -->Line_19 $$ Collection<Object> collection = (Collection<Object>) value[ CD ]
Line_4 $$ String key = entry.getKey()-->Line_9 $$ key = path + "." + key[ FD ]
Line_7 $$ key = path + key-->Line_22 $$ buildFlattenedMap(result, Collections.singletonMap("[" + (count++) + "]", object), key)[ FD ]
Line_18 $$ if (value instanceof Collection) -->Line_25 $$ result.put(key, value != null ? value : "")[ CD ]
Line_4 $$ String key = entry.getKey()-->Line_7 $$ key = path + key[ FD ]
Line_2 $$ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) -->Line_25 $$ result.put(key, value != null ? value : "")[ FD ]
Line_2 $$ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) -->Line_14 $$ result.put(key, value)[ FD ]
Line_9 $$ key = path + "." + key-->Line_17 $$ buildFlattenedMap(result, map, key)[ FD ]
Line_15 $$ if (value instanceof Map) -->Line_18 $$ if (value instanceof Collection) [ CD ]
Line_2 $$ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) -->Line_17 $$ buildFlattenedMap(result, map, key)[ FD ]
Line_13 $$ if (value instanceof String) -->Line_15 $$ if (value instanceof Map) [ CD ]
Line_15 $$ if (value instanceof Map) -->Line_16 $$ Map<String, Object> map = (Map<String, Object>) value[ CD ]
Line_12 $$ Object value = entry.getValue()-->Line_14 $$ result.put(key, value)[ FD ]
Line_12 $$ Object value = entry.getValue()-->Line_18 $$ if (value instanceof Collection) [ FD ]
Line_15 $$ if (value instanceof Map) -->Line_17 $$ buildFlattenedMap(result, map, key)[ CD ]
Line_4 $$ String key = entry.getKey()-->Line_22 $$ buildFlattenedMap(result, Collections.singletonMap("[" + (count++) + "]", object), key)[ FD ]
Line_2 $$ private void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) -->Line_5 $$ if (StringUtils.hasText(path)) [ FD ]
Line_9 $$ key = path + "." + key-->Line_25 $$ result.put(key, value != null ? value : "")[ FD ]
