Line_6 $$ for (Map.Entry<String, String> entry : myMacros.entrySet()) -->Line_10 $$ macro.setAttribute(NAME_ATTR, entry.getKey())[ FD ]
Line_16 $$ final Element macroElement = new Element(IGNORED_MACRO_ELEMENT)-->Line_17 $$ macroElement.setAttribute(NAME_ATTR, macro)[ FD ]
Line_8 $$ if (!StringUtil.isEmptyOrSpaces(value)) -->Line_12 $$ element.addContent(macro)[ CD ]
Line_9 $$ final Element macro = new Element(MACRO_ELEMENT)-->Line_11 $$ macro.setAttribute(VALUE_ATTR, value)[ FD ]
Line_7 $$ String value = entry.getValue()-->Line_8 $$ if (!StringUtil.isEmptyOrSpaces(value)) [ FD ]
Line_8 $$ if (!StringUtil.isEmptyOrSpaces(value)) -->Line_9 $$ final Element macro = new Element(MACRO_ELEMENT)[ CD ]
Line_8 $$ if (!StringUtil.isEmptyOrSpaces(value)) -->Line_11 $$ macro.setAttribute(VALUE_ATTR, value)[ CD ]
Line_9 $$ final Element macro = new Element(MACRO_ELEMENT)-->Line_12 $$ element.addContent(macro)[ FD ]
Line_16 $$ final Element macroElement = new Element(IGNORED_MACRO_ELEMENT)-->Line_18 $$ element.addContent(macroElement)[ FD ]
Line_6 $$ for (Map.Entry<String, String> entry : myMacros.entrySet()) -->Line_7 $$ String value = entry.getValue()[ FD ]
Line_4 $$ Element element = new Element("state")-->Line_18 $$ element.addContent(macroElement)[ FD ]
Line_9 $$ final Element macro = new Element(MACRO_ELEMENT)-->Line_17 $$ macroElement.setAttribute(NAME_ATTR, macro)[ FD ]
Line_8 $$ if (!StringUtil.isEmptyOrSpaces(value)) -->Line_10 $$ macro.setAttribute(NAME_ATTR, entry.getKey())[ CD ]
Line_7 $$ String value = entry.getValue()-->Line_11 $$ macro.setAttribute(VALUE_ATTR, value)[ FD ]
Line_4 $$ Element element = new Element("state")-->Line_12 $$ element.addContent(macro)[ FD ]
Line_9 $$ final Element macro = new Element(MACRO_ELEMENT)-->Line_10 $$ macro.setAttribute(NAME_ATTR, entry.getKey())[ FD ]
