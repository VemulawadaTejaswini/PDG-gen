Line_6 $$ List<ByteBuffer> buffers = new ArrayList(pairs.size() * 2)-->Line_8 $$ buffers.add(p.left)[ FD ]
Line_3 $$ List<Pair<ByteBuffer, ByteBuffer>> pairs = new ArrayList(map.size())-->Line_4 $$ pairs.add(Pair.create(keys.serialize(entry.getKey()), values.serialize(entry.getValue())))[ FD ]
Line_2 $$ public List<ByteBuffer> serializeValues(Map<K, V> map) -->Line_11 $$ return buffers[ CD ]
Line_2 $$ public List<ByteBuffer> serializeValues(Map<K, V> map) -->Line_6 $$ List<ByteBuffer> buffers = new ArrayList(pairs.size() * 2)[ CD ]
Line_2 $$ public List<ByteBuffer> serializeValues(Map<K, V> map) -->Line_4 $$ for (Map.Entry<K, V> entry : map.entrySet()) pairs.add(Pair.create(keys.serialize(entry.getKey()), values.serialize(entry.getValue())))[ FD ]
Line_3 $$ List<Pair<ByteBuffer, ByteBuffer>> pairs = new ArrayList(map.size())-->Line_6 $$ List<ByteBuffer> buffers = new ArrayList(pairs.size() * 2)[ FD ]
Line_2 $$ public List<ByteBuffer> serializeValues(Map<K, V> map) -->Line_5 $$ Collections.sort(pairs, comparator)[ CD ]
Line_6 $$ List<ByteBuffer> buffers = new ArrayList(pairs.size() * 2)-->Line_9 $$ buffers.add(p.right)[ FD ]
Line_2 $$ public List<ByteBuffer> serializeValues(Map<K, V> map) -->Line_3 $$ List<Pair<ByteBuffer, ByteBuffer>> pairs = new ArrayList(map.size())[ FD ]
Line_3 $$ List<Pair<ByteBuffer, ByteBuffer>> pairs = new ArrayList(map.size())-->Line_5 $$ Collections.sort(pairs, comparator)[ FD ]
Line_2 $$ public List<ByteBuffer> serializeValues(Map<K, V> map) -->Line_3 $$ List<Pair<ByteBuffer, ByteBuffer>> pairs = new ArrayList(map.size())[ CD ]
