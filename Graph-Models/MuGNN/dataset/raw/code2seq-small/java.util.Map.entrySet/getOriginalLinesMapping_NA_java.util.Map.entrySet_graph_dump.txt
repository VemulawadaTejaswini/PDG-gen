Line_8 $$ for (int i = 0; i < data.length; i += 2) -->Line_11 $$ Integer newLine = mapping.get(originalOffset)[ CD ]
Line_11 $$ Integer newLine = mapping.get(originalOffset)-->Line_13 $$ res.put(originalLine, newLine)[ FD ]
Line_6 $$ Map<Integer, Integer> res = new HashMap<Integer, Integer>()-->Line_21 $$ res.put(originalLine, entry.getValue())[ FD ]
Line_10 $$ int originalLine = data[i + 1]-->Line_20 $$ if (originalLine > -1 && !res.containsKey(originalLine)) [ FD ]
Line_8 $$ for (int i = 0; i < data.length; i += 2) -->Line_12 $$ if (newLine != null) [ CD ]
Line_19 $$ int originalLine = lineNumberTable.findLineNumber(entry.getKey())-->Line_22 $$ unmappedLines.remove(originalLine)[ FD ]
Line_2 $$ public Map<Integer, Integer> getOriginalLinesMapping() -->Line_25 $$ return res[ CD ]
Line_19 $$ int originalLine = lineNumberTable.findLineNumber(entry.getKey())-->Line_20 $$ if (originalLine > -1 && !res.containsKey(originalLine)) [ FD ]
Line_10 $$ int originalLine = data[i + 1]-->Line_21 $$ res.put(originalLine, entry.getValue())[ FD ]
Line_10 $$ int originalLine = data[i + 1]-->Line_13 $$ res.put(originalLine, newLine)[ FD ]
Line_3 $$ if (lineNumberTable == null) -->Line_4 $$ return Collections.emptyMap()[ CD ]
Line_12 $$ if (newLine != null) -->Line_15 $$ unmappedLines.add(originalLine)[ CD ]
Line_6 $$ Map<Integer, Integer> res = new HashMap<Integer, Integer>()-->Line_13 $$ res.put(originalLine, newLine)[ FD ]
Line_9 $$ int originalOffset = data[i]-->Line_11 $$ Integer newLine = mapping.get(originalOffset)[ FD ]
Line_2 $$ public Map<Integer, Integer> getOriginalLinesMapping() -->Line_8 $$ for (int i = 0; i < data.length; i += 2) [ CD ]
Line_6 $$ Map<Integer, Integer> res = new HashMap<Integer, Integer>()-->Line_20 $$ if (originalLine > -1 && !res.containsKey(originalLine)) [ FD ]
Line_20 $$ if (originalLine > -1 && !res.containsKey(originalLine)) -->Line_21 $$ res.put(originalLine, entry.getValue())[ CD ]
Line_18 $$ for (Entry<Integer, Integer> entry : mapping.entrySet()) -->Line_21 $$ res.put(originalLine, entry.getValue())[ FD ]
Line_12 $$ if (newLine != null) -->Line_13 $$ res.put(originalLine, newLine)[ CD ]
Line_8 $$ for (int i = 0; i < data.length; i += 2) -->Line_9 $$ int originalOffset = data[i][ CD ]
Line_2 $$ public Map<Integer, Integer> getOriginalLinesMapping() -->Line_7 $$ int[] data = lineNumberTable.getRawData()[ CD ]
Line_11 $$ Integer newLine = mapping.get(originalOffset)-->Line_12 $$ if (newLine != null) [ FD ]
Line_20 $$ if (originalLine > -1 && !res.containsKey(originalLine)) -->Line_22 $$ unmappedLines.remove(originalLine)[ CD ]
Line_10 $$ int originalLine = data[i + 1]-->Line_22 $$ unmappedLines.remove(originalLine)[ FD ]
Line_19 $$ int originalLine = lineNumberTable.findLineNumber(entry.getKey())-->Line_21 $$ res.put(originalLine, entry.getValue())[ FD ]
Line_8 $$ for (int i = 0; i < data.length; i += 2) -->Line_10 $$ int originalLine = data[i + 1][ CD ]
Line_10 $$ int originalLine = data[i + 1]-->Line_15 $$ unmappedLines.add(originalLine)[ FD ]
Line_2 $$ public Map<Integer, Integer> getOriginalLinesMapping() -->Line_3 $$ if (lineNumberTable == null) [ CD ]
Line_2 $$ public Map<Integer, Integer> getOriginalLinesMapping() -->Line_6 $$ Map<Integer, Integer> res = new HashMap<Integer, Integer>()[ CD ]
Line_18 $$ for (Entry<Integer, Integer> entry : mapping.entrySet()) -->Line_19 $$ int originalLine = lineNumberTable.findLineNumber(entry.getKey())[ FD ]
