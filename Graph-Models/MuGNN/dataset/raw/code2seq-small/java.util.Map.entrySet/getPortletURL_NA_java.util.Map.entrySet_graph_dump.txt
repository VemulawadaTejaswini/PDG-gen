Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_45 $$ if (Validator.isNotNull(portletMode)) [ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_37 $$ if (portletConfiguration) [ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_8 $$ String doAsUserLanguageId = ParamUtil.getString(request, "doAsUserLanguageId")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_17 $$ boolean secure = ParamUtil.getBoolean(request, "secure", request.isSecure())[ CD ]
Line_13 $$ String portletId = ParamUtil.getString(request, "portletId")-->Line_36 $$ portletURL.setPortletId(portletId)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_60 $$ String parameterMapString = ParamUtil.getString(request, "parameterMap")[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_18 $$ String windowState = ParamUtil.getString(request, "windowState")[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_23 $$ portletURL.setCopyCurrentRenderParameters(copyCurrentRenderParameters)[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_46 $$ portletURL.setPortletMode(PortletModeFactory.getPortletMode(portletMode))[ FD ]
Line_63 $$ for (Map.Entry<String, String> entry : parameterMap.entrySet()) -->Line_64 $$ String key = entry.getKey()[ FD ]
Line_6 $$ long doAsGroupId = ParamUtil.getLong(request, "doAsGroupId")-->Line_25 $$ portletURL.setDoAsGroupId(doAsGroupId)[ FD ]
Line_66 $$ if ((key != null) && (value != null)) -->Line_67 $$ portletURL.setParameter(key, value)[ CD ]
Line_7 $$ long doAsUserId = ParamUtil.getLong(request, "doAsUserId")-->Line_27 $$ if (doAsUserId > 0) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_51 $$ if (!themeDisplay.isStateMaximized()) [ CD ]
Line_11 $$ String name = ParamUtil.getString(request, "name")-->Line_33 $$ if (lifecycle.equals(PortletRequest.ACTION_PHASE) && Validator.isNotNull(name)) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_27 $$ if (doAsUserId > 0) [ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_15 $$ String resourceId = ParamUtil.getString(request, "resourceId")[ CD ]
Line_8 $$ String doAsUserLanguageId = ParamUtil.getString(request, "doAsUserLanguageId")-->Line_30 $$ portletURL.setDoAsUserLanguageId(doAsUserLanguageId)[ FD ]
Line_52 $$ if (Validator.isNotNull(returnToFullPageURL)) -->Line_53 $$ portletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ CD ]
Line_64 $$ String key = entry.getKey()-->Line_67 $$ portletURL.setParameter(key, value)[ FD ]
Line_10 $$ String lifecycle = ParamUtil.getString(request, "lifecycle")-->Line_33 $$ if (lifecycle.equals(PortletRequest.ACTION_PHASE) && Validator.isNotNull(name)) [ FD ]
Line_29 $$ if (Validator.isNotNull(doAsUserLanguageId)) -->Line_30 $$ portletURL.setDoAsUserLanguageId(doAsUserLanguageId)[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_7 $$ long doAsUserId = ParamUtil.getLong(request, "doAsUserId")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_13 $$ String portletId = ParamUtil.getString(request, "portletId")[ CD ]
Line_45 $$ if (Validator.isNotNull(portletMode)) -->Line_46 $$ portletURL.setPortletMode(PortletModeFactory.getPortletMode(portletMode))[ CD ]
Line_37 $$ if (portletConfiguration) -->Line_43 $$ portletURL.setParameter("previewWidth", previewWidth)[ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_53 $$ portletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_15 $$ String resourceId = ParamUtil.getString(request, "resourceId")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_5 $$ boolean copyCurrentRenderParameters = ParamUtil.getBoolean(request, "copyCurrentRenderParameters")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_11 $$ String name = ParamUtil.getString(request, "name")[ CD ]
Line_51 $$ if (!themeDisplay.isStateMaximized()) -->Line_52 $$ if (Validator.isNotNull(returnToFullPageURL)) [ CD ]
Line_5 $$ boolean copyCurrentRenderParameters = ParamUtil.getBoolean(request, "copyCurrentRenderParameters")-->Line_23 $$ portletURL.setCopyCurrentRenderParameters(copyCurrentRenderParameters)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_33 $$ if (lifecycle.equals(PortletRequest.ACTION_PHASE) && Validator.isNotNull(name)) [ CD ]
Line_15 $$ String resourceId = ParamUtil.getString(request, "resourceId")-->Line_49 $$ portletURL.setResourceID(resourceId)[ FD ]
Line_37 $$ if (portletConfiguration) -->Line_40 $$ portletURL.setParameter("mvcPath", "/edit_configuration.jsp")[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_8 $$ String doAsUserLanguageId = ParamUtil.getString(request, "doAsUserLanguageId")[ CD ]
Line_62 $$ Map<String, String> parameterMap = (Map<String, String>) JSONFactoryUtil.deserialize(parameterMapString)-->Line_63 $$ for (Map.Entry<String, String> entry : parameterMap.entrySet()) [ FD ]
Line_4 $$ String cacheability = ParamUtil.getString(request, "cacheability")-->Line_21 $$ portletURL.setCacheability(cacheability)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_16 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")[ CD ]
Line_60 $$ String parameterMapString = ParamUtil.getString(request, "parameterMap")-->Line_62 $$ Map<String, String> parameterMap = (Map<String, String>) JSONFactoryUtil.deserialize(parameterMapString)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_41 $$ portletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)-->Line_51 $$ if (!themeDisplay.isStateMaximized()) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_11 $$ String name = ParamUtil.getString(request, "name")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_57 $$ if (Validator.isNotNull(windowState)) [ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_36 $$ portletURL.setPortletId(portletId)[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_60 $$ String parameterMapString = ParamUtil.getString(request, "parameterMap")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_10 $$ String lifecycle = ParamUtil.getString(request, "lifecycle")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_23 $$ portletURL.setCopyCurrentRenderParameters(copyCurrentRenderParameters)[ CD ]
Line_57 $$ if (Validator.isNotNull(windowState)) -->Line_58 $$ portletURL.setWindowState(WindowStateFactory.getWindowState(windowState))[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_20 $$ if (Validator.isNotNull(cacheability)) [ CD ]
Line_37 $$ if (portletConfiguration) -->Line_42 $$ portletURL.setParameter("portletResource", portletResource)[ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_21 $$ portletURL.setCacheability(cacheability)[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_40 $$ portletURL.setParameter("mvcPath", "/edit_configuration.jsp")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_5 $$ boolean copyCurrentRenderParameters = ParamUtil.getBoolean(request, "copyCurrentRenderParameters")[ CD ]
Line_33 $$ if (lifecycle.equals(PortletRequest.ACTION_PHASE) && Validator.isNotNull(name)) -->Line_34 $$ portletURL.setParameter(ActionRequest.ACTION_NAME, name)[ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_34 $$ portletURL.setParameter(ActionRequest.ACTION_NAME, name)[ FD ]
Line_37 $$ if (portletConfiguration) -->Line_39 $$ String previewWidth = ParamUtil.getString(request, "previewWidth")[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_61 $$ if (Validator.isNotNull(parameterMapString)) [ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_56 $$ portletURL.setSecure(secure)[ CD ]
Line_24 $$ if (doAsGroupId > 0) -->Line_25 $$ portletURL.setDoAsGroupId(doAsGroupId)[ CD ]
Line_37 $$ if (portletConfiguration) -->Line_41 $$ portletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ CD ]
Line_63 $$ for (Map.Entry<String, String> entry : parameterMap.entrySet()) -->Line_65 $$ String value = entry.getValue()[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_30 $$ portletURL.setDoAsUserLanguageId(doAsUserLanguageId)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_4 $$ String cacheability = ParamUtil.getString(request, "cacheability")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_6 $$ long doAsGroupId = ParamUtil.getLong(request, "doAsGroupId")[ FD ]
Line_9 $$ boolean escapeXml = ParamUtil.getBoolean(request, "escapeXml")-->Line_32 $$ portletURL.setEscapeXml(escapeXml)[ FD ]
Line_15 $$ String resourceId = ParamUtil.getString(request, "resourceId")-->Line_48 $$ if (Validator.isNotNull(resourceId)) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_14 $$ String portletMode = ParamUtil.getString(request, "portletMode")[ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_32 $$ portletURL.setEscapeXml(escapeXml)[ FD ]
Line_6 $$ long doAsGroupId = ParamUtil.getLong(request, "doAsGroupId")-->Line_24 $$ if (doAsGroupId > 0) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_12 $$ boolean portletConfiguration = ParamUtil.getBoolean(request, "portletConfiguration")[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_48 $$ if (Validator.isNotNull(resourceId)) [ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_42 $$ portletURL.setParameter("portletResource", portletResource)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) request.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_67 $$ portletURL.setParameter(key, value)[ FD ]
Line_20 $$ if (Validator.isNotNull(cacheability)) -->Line_21 $$ portletURL.setCacheability(cacheability)[ CD ]
Line_4 $$ String cacheability = ParamUtil.getString(request, "cacheability")-->Line_20 $$ if (Validator.isNotNull(cacheability)) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_18 $$ String windowState = ParamUtil.getString(request, "windowState")[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_38 $$ String portletResource = ParamUtil.getString(request, "portletResource")[ FD ]
Line_39 $$ String previewWidth = ParamUtil.getString(request, "previewWidth")-->Line_43 $$ portletURL.setParameter("previewWidth", previewWidth)[ FD ]
Line_60 $$ String parameterMapString = ParamUtil.getString(request, "parameterMap")-->Line_61 $$ if (Validator.isNotNull(parameterMapString)) [ FD ]
Line_61 $$ if (Validator.isNotNull(parameterMapString)) -->Line_62 $$ Map<String, String> parameterMap = (Map<String, String>) JSONFactoryUtil.deserialize(parameterMapString)[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_14 $$ String portletMode = ParamUtil.getString(request, "portletMode")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_13 $$ String portletId = ParamUtil.getString(request, "portletId")[ FD ]
Line_18 $$ String windowState = ParamUtil.getString(request, "windowState")-->Line_57 $$ if (Validator.isNotNull(windowState)) [ FD ]
Line_16 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")-->Line_53 $$ portletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ FD ]
Line_65 $$ String value = entry.getValue()-->Line_67 $$ portletURL.setParameter(key, value)[ FD ]
Line_14 $$ String portletMode = ParamUtil.getString(request, "portletMode")-->Line_46 $$ portletURL.setPortletMode(PortletModeFactory.getPortletMode(portletMode))[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_56 $$ portletURL.setSecure(secure)[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_36 $$ portletURL.setPortletId(portletId)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_10 $$ String lifecycle = ParamUtil.getString(request, "lifecycle")[ CD ]
Line_8 $$ String doAsUserLanguageId = ParamUtil.getString(request, "doAsUserLanguageId")-->Line_29 $$ if (Validator.isNotNull(doAsUserLanguageId)) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_32 $$ portletURL.setEscapeXml(escapeXml)[ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_25 $$ portletURL.setDoAsGroupId(doAsGroupId)[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_49 $$ portletURL.setResourceID(resourceId)[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_58 $$ portletURL.setWindowState(WindowStateFactory.getWindowState(windowState))[ FD ]
Line_16 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")-->Line_52 $$ if (Validator.isNotNull(returnToFullPageURL)) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_6 $$ long doAsGroupId = ParamUtil.getLong(request, "doAsGroupId")[ CD ]
Line_17 $$ boolean secure = ParamUtil.getBoolean(request, "secure", request.isSecure())-->Line_56 $$ portletURL.setSecure(secure)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_12 $$ boolean portletConfiguration = ParamUtil.getBoolean(request, "portletConfiguration")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_9 $$ boolean escapeXml = ParamUtil.getBoolean(request, "escapeXml")[ CD ]
Line_14 $$ String portletMode = ParamUtil.getString(request, "portletMode")-->Line_45 $$ if (Validator.isNotNull(portletMode)) [ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_4 $$ String cacheability = ParamUtil.getString(request, "cacheability")[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_9 $$ boolean escapeXml = ParamUtil.getBoolean(request, "escapeXml")[ FD ]
Line_48 $$ if (Validator.isNotNull(resourceId)) -->Line_49 $$ portletURL.setResourceID(resourceId)[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_17 $$ boolean secure = ParamUtil.getBoolean(request, "secure", request.isSecure())[ FD ]
Line_11 $$ String name = ParamUtil.getString(request, "name")-->Line_34 $$ portletURL.setParameter(ActionRequest.ACTION_NAME, name)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_39 $$ String previewWidth = ParamUtil.getString(request, "previewWidth")[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_71 $$ return portletURL.toString()[ CD ]
Line_38 $$ String portletResource = ParamUtil.getString(request, "portletResource")-->Line_42 $$ portletURL.setParameter("portletResource", portletResource)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_24 $$ if (doAsGroupId > 0) [ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_29 $$ if (Validator.isNotNull(doAsUserLanguageId)) [ CD ]
Line_16 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")-->Line_41 $$ portletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ FD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_43 $$ portletURL.setParameter("previewWidth", previewWidth)[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_7 $$ long doAsUserId = ParamUtil.getLong(request, "doAsUserId")[ CD ]
Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)-->Line_71 $$ return portletURL.toString()[ FD ]
Line_37 $$ if (portletConfiguration) -->Line_38 $$ String portletResource = ParamUtil.getString(request, "portletResource")[ CD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_16 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")[ FD ]
Line_18 $$ String windowState = ParamUtil.getString(request, "windowState")-->Line_58 $$ portletURL.setWindowState(WindowStateFactory.getWindowState(windowState))[ FD ]
Line_2 $$ protected String getPortletURL(HttpServletRequest request) throws Exception -->Line_19 $$ PortletURLImpl portletURL = new PortletURLImpl(request, portletId, themeDisplay.getPlid(), lifecycle)[ CD ]
