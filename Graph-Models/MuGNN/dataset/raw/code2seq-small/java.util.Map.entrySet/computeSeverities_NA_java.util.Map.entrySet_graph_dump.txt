Line_24 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_41 $$ result.put(currentScope, ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY)[ FD ]
Line_35 $$ boolean doContinue = false-->Line_42 $$ doContinue = true[ FD ]
Line_6 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_31 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_6 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_8 $$ result.put(entry.getKey(), entry.getValue().getPrimarySeverity())[ FD ]
Line_3 $$ if (myScopeToAverageSeverityMap.isEmpty()) -->Line_4 $$ return null[ CD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_7 $$ final Map.Entry<String, SeverityAndOccurrences> entry = ContainerUtil.getFirstItem(myScopeToAverageSeverityMap.entrySet())[ CD ]
Line_39 $$ if (currentToolSeverity != null) -->Line_40 $$ if (!currentSeverity.equals(currentToolSeverity)) [ CD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_3 $$ if (myScopeToAverageSeverityMap.isEmpty()) [ CD ]
Line_38 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)-->Line_40 $$ if (!currentSeverity.equals(currentToolSeverity)) [ FD ]
Line_33 $$ Set<String> toolsToCheck = ContainerUtil.newHashSet(allScopes.keySet())-->Line_34 $$ toolsToCheck.removeAll(currentSeverityAndOccurrences.getOccurrences().keySet())[ FD ]
Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_31 $$ result.put(currentScope, currentSeverity)[ CD ]
Line_6 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_41 $$ result.put(currentScope, ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY)[ FD ]
Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_50 $$ result.put(currentScope, currentSeverity)[ CD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_53 $$ return result[ CD ]
Line_24 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) [ FD ]
Line_23 $$ final Map<String, HighlightSeverity> allScopes = defaultSeveritiesAndOccurrences.getOccurrences()-->Line_33 $$ Set<String> toolsToCheck = ContainerUtil.newHashSet(allScopes.keySet())[ FD ]
Line_36 $$ final Map<String, HighlightSeverity> lowerScopeOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName).getOccurrences()-->Line_38 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)[ FD ]
Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_47 $$ if (doContinue) [ CD ]
Line_40 $$ if (!currentSeverity.equals(currentToolSeverity)) -->Line_42 $$ doContinue = true[ CD ]
Line_6 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_50 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_13 $$ if (defaultSeveritiesAndOccurrences == null) [ CD ]
Line_25 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) [ FD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_9 $$ if (myScopeToAverageSeverityMap.size() == 1) [ CD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_8 $$ result.put(entry.getKey(), entry.getValue().getPrimarySeverity())[ CD ]
Line_29 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()-->Line_31 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_6 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()[ CD ]
Line_15 $$ final HighlightSeverity primarySeverity = e.getValue().getPrimarySeverity()-->Line_17 $$ result.put(e.getKey(), primarySeverity)[ FD ]
Line_25 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_34 $$ toolsToCheck.removeAll(currentSeverityAndOccurrences.getOccurrences().keySet())[ FD ]
Line_37 $$ for (String toolName : toolsToCheck) -->Line_38 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)[ FD ]
Line_25 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_26 $$ if (currentSeverityAndOccurrences == null) [ FD ]
Line_12 $$ final SeverityAndOccurrences defaultSeveritiesAndOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName)-->Line_22 $$ final int allInspectionsCount = defaultSeveritiesAndOccurrences.getOccurrencesSize()[ FD ]
Line_29 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()-->Line_40 $$ if (!currentSeverity.equals(currentToolSeverity)) [ FD ]
Line_14 $$ for (Map.Entry<String, SeverityAndOccurrences> e : myScopeToAverageSeverityMap.entrySet()) -->Line_15 $$ final HighlightSeverity primarySeverity = e.getValue().getPrimarySeverity()[ FD ]
Line_24 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_50 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_12 $$ final SeverityAndOccurrences defaultSeveritiesAndOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName)-->Line_13 $$ if (defaultSeveritiesAndOccurrences == null) [ FD ]
Line_6 $$ final Map<String, HighlightSeverity> result = new HashMap<String, HighlightSeverity>()-->Line_17 $$ result.put(e.getKey(), primarySeverity)[ FD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_12 $$ final SeverityAndOccurrences defaultSeveritiesAndOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName)[ CD ]
Line_12 $$ final SeverityAndOccurrences defaultSeveritiesAndOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName)-->Line_23 $$ final Map<String, HighlightSeverity> allScopes = defaultSeveritiesAndOccurrences.getOccurrences()[ FD ]
Line_38 $$ final HighlightSeverity currentToolSeverity = lowerScopeOccurrences.get(toolName)-->Line_39 $$ if (currentToolSeverity != null) [ FD ]
Line_24 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_31 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_35 $$ boolean doContinue = false[ CD ]
Line_7 $$ final Map.Entry<String, SeverityAndOccurrences> entry = ContainerUtil.getFirstItem(myScopeToAverageSeverityMap.entrySet())-->Line_8 $$ result.put(entry.getKey(), entry.getValue().getPrimarySeverity())[ FD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_22 $$ final int allInspectionsCount = defaultSeveritiesAndOccurrences.getOccurrencesSize()[ CD ]
Line_14 $$ for (Map.Entry<String, SeverityAndOccurrences> e : myScopeToAverageSeverityMap.entrySet()) -->Line_17 $$ result.put(e.getKey(), primarySeverity)[ FD ]
Line_15 $$ final HighlightSeverity primarySeverity = e.getValue().getPrimarySeverity()-->Line_16 $$ if (primarySeverity != null) [ FD ]
Line_16 $$ if (primarySeverity != null) -->Line_17 $$ result.put(e.getKey(), primarySeverity)[ CD ]
Line_13 $$ if (defaultSeveritiesAndOccurrences == null) -->Line_20 $$ return result[ CD ]
Line_25 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)-->Line_29 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()[ FD ]
Line_2 $$ private Map<String, HighlightSeverity> computeSeverities(final InspectionProfileImpl inspectionProfile) -->Line_23 $$ final Map<String, HighlightSeverity> allScopes = defaultSeveritiesAndOccurrences.getOccurrences()[ CD ]
Line_40 $$ if (!currentSeverity.equals(currentToolSeverity)) -->Line_41 $$ result.put(currentScope, ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY)[ CD ]
Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_34 $$ toolsToCheck.removeAll(currentSeverityAndOccurrences.getOccurrences().keySet())[ CD ]
Line_29 $$ final HighlightSeverity currentSeverity = currentSeverityAndOccurrences.getPrimarySeverity()-->Line_50 $$ result.put(currentScope, currentSeverity)[ FD ]
Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_36 $$ final Map<String, HighlightSeverity> lowerScopeOccurrences = myScopeToAverageSeverityMap.get(myDefaultScopeName).getOccurrences()[ CD ]
Line_30 $$ if (currentSeverity == ScopesAndSeveritiesTable.MIXED_FAKE_SEVERITY || currentSeverityAndOccurrences.getOccurrencesSize() == allInspectionsCount || myDefaultScopeName.equals(currentScope)) -->Line_33 $$ Set<String> toolsToCheck = ContainerUtil.newHashSet(allScopes.keySet())[ CD ]
Line_24 $$ for (String currentScope : myScopeToAverageSeverityMap.keySet()) -->Line_25 $$ final SeverityAndOccurrences currentSeverityAndOccurrences = myScopeToAverageSeverityMap.get(currentScope)[ FD ]
Line_9 $$ if (myScopeToAverageSeverityMap.size() == 1) -->Line_10 $$ return result[ CD ]
