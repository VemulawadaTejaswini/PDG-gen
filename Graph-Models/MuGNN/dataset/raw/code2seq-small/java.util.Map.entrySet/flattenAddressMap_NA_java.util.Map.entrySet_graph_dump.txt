Line_7 $$ for (Map.Entry<String, InetSocketAddress> e2 : nnMap.entrySet()) -->Line_8 $$ String nnId = e2.getKey()[ FD ]
Line_4 $$ for (Map.Entry<String, Map<String, InetSocketAddress>> entry : map.entrySet()) -->Line_6 $$ Map<String, InetSocketAddress> nnMap = entry.getValue()[ FD ]
Line_7 $$ for (Map.Entry<String, InetSocketAddress> e2 : nnMap.entrySet()) -->Line_9 $$ InetSocketAddress addr = e2.getValue()[ FD ]
Line_2 $$ public static List<ConfiguredNNAddress> flattenAddressMap(Map<String, Map<String, InetSocketAddress>> map) -->Line_4 $$ for (Map.Entry<String, Map<String, InetSocketAddress>> entry : map.entrySet()) [ FD ]
Line_2 $$ public static List<ConfiguredNNAddress> flattenAddressMap(Map<String, Map<String, InetSocketAddress>> map) -->Line_13 $$ return ret[ CD ]
Line_4 $$ for (Map.Entry<String, Map<String, InetSocketAddress>> entry : map.entrySet()) -->Line_5 $$ String nsId = entry.getKey()[ FD ]
Line_3 $$ List<ConfiguredNNAddress> ret = Lists.newArrayList()-->Line_10 $$ ret.add(new ConfiguredNNAddress(nsId, nnId, addr))[ FD ]
Line_2 $$ public static List<ConfiguredNNAddress> flattenAddressMap(Map<String, Map<String, InetSocketAddress>> map) -->Line_3 $$ List<ConfiguredNNAddress> ret = Lists.newArrayList()[ CD ]
Line_6 $$ Map<String, InetSocketAddress> nnMap = entry.getValue()-->Line_7 $$ for (Map.Entry<String, InetSocketAddress> e2 : nnMap.entrySet()) [ FD ]
