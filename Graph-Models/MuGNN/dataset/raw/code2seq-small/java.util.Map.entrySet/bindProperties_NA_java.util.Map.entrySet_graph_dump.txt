Line_2 $$ public static void bindProperties(Binder binder, Map<String, String> properties) -->Line_3 $$ binder = binder.skipSources(Names.class)[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : properties.entrySet()) -->Line_6 $$ String value = entry.getValue()[ FD ]
Line_3 $$ binder = binder.skipSources(Names.class)-->Line_7 $$ binder.bind(Key.get(String.class, new NamedImpl(key))).toInstance(value)[ FD ]
Line_2 $$ public static void bindProperties(Binder binder, Map<String, String> properties) -->Line_7 $$ binder.bind(Key.get(String.class, new NamedImpl(key))).toInstance(value)[ FD ]
Line_2 $$ public static void bindProperties(Binder binder, Map<String, String> properties) -->Line_4 $$ for (Map.Entry<String, String> entry : properties.entrySet()) [ FD ]
Line_6 $$ String value = entry.getValue()-->Line_7 $$ binder.bind(Key.get(String.class, new NamedImpl(key))).toInstance(value)[ FD ]
Line_2 $$ public static void bindProperties(Binder binder, Map<String, String> properties) -->Line_3 $$ binder = binder.skipSources(Names.class)[ CD ]
Line_4 $$ for (Map.Entry<String, String> entry : properties.entrySet()) -->Line_5 $$ String key = entry.getKey()[ FD ]
