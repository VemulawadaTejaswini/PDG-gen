Line_5 $$ for (Iterator<Map.Entry<K, V>> it = value.entrySet().iterator(); it.hasNext(); ) -->Line_7 $$ result.append(style(entry))[ CD ]
Line_5 $$ for (Iterator<Map.Entry<K, V>> it = value.entrySet().iterator(); it.hasNext(); ) -->Line_8 $$ if (it.hasNext()) [ FD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)[ FD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_4 $$ result.append(MAP + "[")[ CD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_5 $$ for (Iterator<Map.Entry<K, V>> it = value.entrySet().iterator(); it.hasNext(); ) [ CD ]
Line_5 $$ for (Iterator<Map.Entry<K, V>> it = value.entrySet().iterator(); it.hasNext(); ) -->Line_8 $$ if (it.hasNext()) [ CD ]
Line_12 $$ if (value.isEmpty()) -->Line_13 $$ result.append(EMPTY)[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)-->Line_16 $$ return result.toString()[ FD ]
Line_5 $$ for (Iterator<Map.Entry<K, V>> it = value.entrySet().iterator(); it.hasNext(); ) -->Line_6 $$ Map.Entry<K, V> entry = it.next()[ CD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_15 $$ result.append("]")[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)-->Line_15 $$ result.append("]")[ FD ]
Line_6 $$ Map.Entry<K, V> entry = it.next()-->Line_7 $$ result.append(style(entry))[ FD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_16 $$ return result.toString()[ CD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)[ CD ]
Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)-->Line_13 $$ result.append(EMPTY)[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)-->Line_9 $$ result.append(',').append(' ')[ FD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_12 $$ if (value.isEmpty()) [ CD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_12 $$ if (value.isEmpty()) [ FD ]
Line_8 $$ if (it.hasNext()) -->Line_9 $$ result.append(',').append(' ')[ CD ]
Line_2 $$ private <K, V> String style(Map<K, V> value) -->Line_5 $$ for (Iterator<Map.Entry<K, V>> it = value.entrySet().iterator(); it.hasNext(); ) [ FD ]
Line_5 $$ for (Iterator<Map.Entry<K, V>> it = value.entrySet().iterator(); it.hasNext(); ) -->Line_6 $$ Map.Entry<K, V> entry = it.next()[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)-->Line_4 $$ result.append(MAP + "[")[ FD ]
Line_3 $$ StringBuilder result = new StringBuilder(value.size() * 8 + 16)-->Line_7 $$ result.append(style(entry))[ FD ]
