Line_4 $$ HashMap<Integer, Integer> newMap = new HashMap<Integer, Integer>()-->Line_11 $$ newMap.put(entry.getKey(), newValue)[ FD ]
Line_3 $$ if (myLineToOffsetMapping != null) -->Line_4 $$ HashMap<Integer, Integer> newMap = new HashMap<Integer, Integer>()[ CD ]
Line_7 $$ if (newValue >= startOffset) -->Line_8 $$ newValue += shiftOffset[ CD ]
Line_2 $$ private void shiftMapping(int startOffset, int shiftOffset) -->Line_7 $$ if (newValue >= startOffset) [ FD ]
Line_6 $$ int newValue = entry.getValue()-->Line_7 $$ if (newValue >= startOffset) [ FD ]
Line_8 $$ newValue += shiftOffset-->Line_11 $$ newMap.put(entry.getKey(), newValue)[ FD ]
Line_5 $$ for (Map.Entry<Integer, Integer> entry : myLineToOffsetMapping.entrySet()) -->Line_11 $$ newMap.put(entry.getKey(), newValue)[ FD ]
Line_2 $$ private void shiftMapping(int startOffset, int shiftOffset) -->Line_3 $$ if (myLineToOffsetMapping != null) [ CD ]
Line_10 $$ if (newValue >= 0) -->Line_11 $$ newMap.put(entry.getKey(), newValue)[ CD ]
Line_6 $$ int newValue = entry.getValue()-->Line_10 $$ if (newValue >= 0) [ FD ]
Line_8 $$ newValue += shiftOffset-->Line_10 $$ if (newValue >= 0) [ FD ]
Line_2 $$ private void shiftMapping(int startOffset, int shiftOffset) -->Line_8 $$ newValue += shiftOffset[ FD ]
Line_6 $$ int newValue = entry.getValue()-->Line_11 $$ newMap.put(entry.getKey(), newValue)[ FD ]
Line_6 $$ int newValue = entry.getValue()-->Line_8 $$ newValue += shiftOffset[ FD ]
Line_5 $$ for (Map.Entry<Integer, Integer> entry : myLineToOffsetMapping.entrySet()) -->Line_6 $$ int newValue = entry.getValue()[ FD ]
