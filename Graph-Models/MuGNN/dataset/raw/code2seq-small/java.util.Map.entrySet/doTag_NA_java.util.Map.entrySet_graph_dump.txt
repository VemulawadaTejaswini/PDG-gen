Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_41 $$ liferayPortletURL.setAnchor(anchor.booleanValue())[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_32 $$ liferayPortletURL.setResourceID(resourceID)[ FD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_64 $$ liferayPortletURL.setParameter("portletResource", portletResource)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_34 $$ if (cacheability != null) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_55 $$ String portletResource = ParamUtil.getString(request, "portletResource")[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_37 $$ if (refererPlid > LayoutConstants.DEFAULT_PLID) [ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_35 $$ liferayPortletURL.setCacheability(cacheability)[ FD ]
Line_56 $$ String previewWidth = ParamUtil.getString(request, "previewWidth")-->Line_65 $$ liferayPortletURL.setParameter("previewWidth", previewWidth)[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_23 $$ liferayPortletURL.setCopyCurrentRenderParameters(copyCurrentRenderParameters.booleanValue())[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_65 $$ liferayPortletURL.setParameter("previewWidth", previewWidth)[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_20 $$ liferayPortletURL.setSecure(PortalUtil.isSecure(request))[ FD ]
Line_17 $$ if (secure != null) -->Line_20 $$ liferayPortletURL.setSecure(PortalUtil.isSecure(request))[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_57 $$ settingsScope = ParamUtil.getString(request, "settingsScope", PortletPreferencesFactoryConstants.SETTINGS_SCOPE_PORTLET_INSTANCE)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_67 $$ if (parameterMap != null) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)[ CD ]
Line_52 $$ String settingsScope = null-->Line_57 $$ settingsScope = ParamUtil.getString(request, "settingsScope", PortletPreferencesFactoryConstants.SETTINGS_SCOPE_PORTLET_INSTANCE)[ FD ]
Line_55 $$ String portletResource = ParamUtil.getString(request, "portletResource")-->Line_64 $$ liferayPortletURL.setParameter("portletResource", portletResource)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_17 $$ if (secure != null) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_28 $$ if (lifecycle.equals(PortletRequest.ACTION_PHASE) && Validator.isNotNull(name)) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_3 $$ if (portletName == null) [ CD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_7 $$ if (liferayPortletURL == null) [ FD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_58 $$ if (Validator.isNull(name)) [ CD ]
Line_31 $$ if (resourceID != null) -->Line_32 $$ liferayPortletURL.setResourceID(resourceID)[ CD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_59 $$ liferayPortletURL.setParameter(ActionRequest.ACTION_NAME, "editConfiguration")[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_23 $$ liferayPortletURL.setCopyCurrentRenderParameters(copyCurrentRenderParameters.booleanValue())[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_63 $$ liferayPortletURL.setParameter("portletConfiguration", Boolean.TRUE.toString())[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_15 $$ liferayPortletURL.setPortletMode(PortletModeFactory.getPortletMode(portletMode))[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_52 $$ String settingsScope = null[ CD ]
Line_43 $$ if (encrypt != null) -->Line_44 $$ liferayPortletURL.setEncrypt(encrypt.booleanValue())[ CD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_63 $$ liferayPortletURL.setParameter("portletConfiguration", Boolean.TRUE.toString())[ CD ]
Line_46 $$ if (doAsGroupId > 0) -->Line_47 $$ liferayPortletURL.setDoAsGroupId(doAsGroupId)[ CD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_47 $$ liferayPortletURL.setDoAsGroupId(doAsGroupId)[ FD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_54 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_41 $$ liferayPortletURL.setAnchor(anchor.booleanValue())[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_26 $$ liferayPortletURL.setEscapeXml(escapeXml.booleanValue())[ FD ]
Line_17 $$ if (secure != null) -->Line_18 $$ liferayPortletURL.setSecure(secure.booleanValue())[ CD ]
Line_25 $$ if (escapeXml != null) -->Line_26 $$ liferayPortletURL.setEscapeXml(escapeXml.booleanValue())[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_31 $$ if (resourceID != null) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_35 $$ liferayPortletURL.setCacheability(cacheability)[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_26 $$ liferayPortletURL.setEscapeXml(escapeXml.booleanValue())[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_38 $$ liferayPortletURL.setRefererPlid(refererPlid)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_46 $$ if (doAsGroupId > 0) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_11 $$ if (Validator.isNotNull(windowState)) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_72 $$ if ((settingsScope != null) && ((parameterMap == null) || !parameterMap.containsKey("settingsScope"))) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_56 $$ String previewWidth = ParamUtil.getString(request, "previewWidth")[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_32 $$ liferayPortletURL.setResourceID(resourceID)[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_75 $$ liferayPortletURL.setRemovedParameterNames(removedParameterNames)[ FD ]
Line_37 $$ if (refererPlid > LayoutConstants.DEFAULT_PLID) -->Line_38 $$ liferayPortletURL.setRefererPlid(refererPlid)[ CD ]
Line_34 $$ if (cacheability != null) -->Line_35 $$ liferayPortletURL.setCacheability(cacheability)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_12 $$ liferayPortletURL.setWindowState(WindowStateFactory.getWindowState(windowState))[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_15 $$ liferayPortletURL.setPortletMode(PortletModeFactory.getPortletMode(portletMode))[ FD ]
Line_7 $$ if (liferayPortletURL == null) -->Line_8 $$ _log.error("Render response is null because this tag is not being " + "called within the context of a portlet")[ CD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_62 $$ liferayPortletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_25 $$ if (escapeXml != null) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_46 $$ if (doAsGroupId > 0) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_7 $$ if (liferayPortletURL == null) [ CD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_50 $$ liferayPortletURL.setDoAsUserId(doAsUserId)[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_64 $$ liferayPortletURL.setParameter("portletResource", portletResource)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_34 $$ if (cacheability != null) [ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_12 $$ liferayPortletURL.setWindowState(WindowStateFactory.getWindowState(windowState))[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_31 $$ if (resourceID != null) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_58 $$ if (Validator.isNull(name)) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_75 $$ liferayPortletURL.setRemovedParameterNames(removedParameterNames)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_17 $$ if (secure != null) [ FD ]
Line_28 $$ if (lifecycle.equals(PortletRequest.ACTION_PHASE) && Validator.isNotNull(name)) -->Line_29 $$ liferayPortletURL.setParameter(ActionRequest.ACTION_NAME, name)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_3 $$ if (portletName == null) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_44 $$ liferayPortletURL.setEncrypt(encrypt.booleanValue())[ FD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_65 $$ liferayPortletURL.setParameter("previewWidth", previewWidth)[ CD ]
Line_11 $$ if (Validator.isNotNull(windowState)) -->Line_12 $$ liferayPortletURL.setWindowState(WindowStateFactory.getWindowState(windowState))[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_37 $$ if (refererPlid > LayoutConstants.DEFAULT_PLID) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_49 $$ if (doAsUserId > 0) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_18 $$ liferayPortletURL.setSecure(secure.booleanValue())[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_38 $$ liferayPortletURL.setRefererPlid(refererPlid)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_28 $$ if (lifecycle.equals(PortletRequest.ACTION_PHASE) && Validator.isNotNull(name)) [ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_44 $$ liferayPortletURL.setEncrypt(encrypt.booleanValue())[ FD ]
Line_58 $$ if (Validator.isNull(name)) -->Line_59 $$ liferayPortletURL.setParameter(ActionRequest.ACTION_NAME, "editConfiguration")[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_76 $$ return liferayPortletURL[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_43 $$ if (encrypt != null) [ CD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_69 $$ liferayPortletURL.setParameter(entry.getKey(), entry.getValue(), false)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_49 $$ if (doAsUserId > 0) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_43 $$ if (encrypt != null) [ FD ]
Line_7 $$ if (liferayPortletURL == null) -->Line_9 $$ return DummyPortletURL.getInstance()[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_11 $$ if (Validator.isNotNull(windowState)) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_25 $$ if (escapeXml != null) [ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_61 $$ liferayPortletURL.setParameter("mvcPath", "/edit_configuration.jsp")[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_68 $$ for (Entry<String, String[]> entry : parameterMap.entrySet()) [ FD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_56 $$ String previewWidth = ParamUtil.getString(request, "previewWidth")[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_40 $$ if (anchor != null) [ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_73 $$ liferayPortletURL.setParameter("settingsScope", settingsScope)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)[ FD ]
Line_22 $$ if (copyCurrentRenderParameters != null) -->Line_23 $$ liferayPortletURL.setCopyCurrentRenderParameters(copyCurrentRenderParameters.booleanValue())[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_29 $$ liferayPortletURL.setParameter(ActionRequest.ACTION_NAME, name)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_72 $$ if ((settingsScope != null) && ((parameterMap == null) || !parameterMap.containsKey("settingsScope"))) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_47 $$ liferayPortletURL.setDoAsGroupId(doAsGroupId)[ FD ]
Line_57 $$ settingsScope = ParamUtil.getString(request, "settingsScope", PortletPreferencesFactoryConstants.SETTINGS_SCOPE_PORTLET_INSTANCE)-->Line_73 $$ liferayPortletURL.setParameter("settingsScope", settingsScope)[ FD ]
Line_68 $$ for (Entry<String, String[]> entry : parameterMap.entrySet()) -->Line_69 $$ liferayPortletURL.setParameter(entry.getKey(), entry.getValue(), false)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_67 $$ if (parameterMap != null) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_4 $$ portletName = _getPortletName(request)[ FD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_61 $$ liferayPortletURL.setParameter("mvcPath", "/edit_configuration.jsp")[ CD ]
Line_14 $$ if (Validator.isNotNull(portletMode)) -->Line_15 $$ liferayPortletURL.setPortletMode(PortletModeFactory.getPortletMode(portletMode))[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_22 $$ if (copyCurrentRenderParameters != null) [ CD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_57 $$ settingsScope = ParamUtil.getString(request, "settingsScope", PortletPreferencesFactoryConstants.SETTINGS_SCOPE_PORTLET_INSTANCE)[ CD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_29 $$ liferayPortletURL.setParameter(ActionRequest.ACTION_NAME, name)[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_18 $$ liferayPortletURL.setSecure(secure.booleanValue())[ FD ]
Line_3 $$ if (portletName == null) -->Line_4 $$ portletName = _getPortletName(request)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_40 $$ if (anchor != null) [ CD ]
Line_54 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")-->Line_62 $$ liferayPortletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ FD ]
Line_4 $$ portletName = _getPortletName(request)-->Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_50 $$ liferayPortletURL.setDoAsUserId(doAsUserId)[ FD ]
Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) -->Line_55 $$ String portletResource = ParamUtil.getString(request, "portletResource")[ CD ]
Line_40 $$ if (anchor != null) -->Line_41 $$ liferayPortletURL.setAnchor(anchor.booleanValue())[ CD ]
Line_52 $$ String settingsScope = null-->Line_73 $$ liferayPortletURL.setParameter("settingsScope", settingsScope)[ FD ]
Line_6 $$ LiferayPortletURL liferayPortletURL = _getLiferayPortletURL(request, plid, portletName, lifecycle)-->Line_62 $$ liferayPortletURL.setParameter("returnToFullPageURL", returnToFullPageURL)[ FD ]
Line_49 $$ if (doAsUserId > 0) -->Line_50 $$ liferayPortletURL.setDoAsUserId(doAsUserId)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_14 $$ if (Validator.isNotNull(portletMode)) [ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_54 $$ String returnToFullPageURL = ParamUtil.getString(request, "returnToFullPageURL")[ FD ]
Line_72 $$ if ((settingsScope != null) && ((parameterMap == null) || !parameterMap.containsKey("settingsScope"))) -->Line_73 $$ liferayPortletURL.setParameter("settingsScope", settingsScope)[ CD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_75 $$ liferayPortletURL.setRemovedParameterNames(removedParameterNames)[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_14 $$ if (Validator.isNotNull(portletMode)) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_20 $$ liferayPortletURL.setSecure(PortalUtil.isSecure(request))[ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_22 $$ if (copyCurrentRenderParameters != null) [ FD ]
Line_2 $$ public static PortletURL doTag(String lifecycle, String windowState, String portletMode, Boolean secure, Boolean copyCurrentRenderParameters, Boolean escapeXml, String name, String resourceID, String cacheability, long plid, long refererPlid, String portletName, Boolean anchor, Boolean encrypt, long doAsGroupId, long doAsUserId, Boolean portletConfiguration, Map<String, String[]> parameterMap, Set<String> removedParameterNames, HttpServletRequest request) throws Exception -->Line_53 $$ if ((portletConfiguration != null) && portletConfiguration.booleanValue()) [ FD ]
