Line_2 $$ protected void updateUserRanks(ActionRequest actionRequest) -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_18 $$ ranks = new String[map.size()]-->Line_26 $$ setPreference(actionRequest, preferenceName, ranks)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_4 $$ for (Locale locale : LanguageUtil.getAvailableLocales(themeDisplay.getSiteGroupId())) [ FD ]
Line_15 $$ String kvpValue = kvp[1]-->Line_16 $$ map.put(kvpValue, kvpName)[ FD ]
Line_19 $$ int count = 0-->Line_23 $$ ranks[count++] = kvpName + StringPool.EQUAL + kvpValue[ FD ]
Line_8 $$ for (String rank : ranks) -->Line_9 $$ if (!isValidUserRank(rank)) [ FD ]
Line_6 $$ String[] ranks = StringUtil.splitLines(ParamUtil.getString(actionRequest, "ranks_" + languageId))-->Line_26 $$ setPreference(actionRequest, preferenceName, ranks)[ FD ]
Line_2 $$ protected void updateUserRanks(ActionRequest actionRequest) -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_9 $$ if (!isValidUserRank(rank)) -->Line_10 $$ SessionErrors.add(actionRequest, "userRank")[ CD ]
Line_2 $$ protected void updateUserRanks(ActionRequest actionRequest) -->Line_10 $$ SessionErrors.add(actionRequest, "userRank")[ FD ]
Line_20 $$ for (Map.Entry<String, String> entry : map.entrySet()) -->Line_22 $$ String kvpName = entry.getValue()[ FD ]
Line_7 $$ Map<String, String> map = new TreeMap(new NaturalOrderStringComparator())-->Line_16 $$ map.put(kvpValue, kvpName)[ FD ]
Line_5 $$ String languageId = LocaleUtil.toLanguageId(locale)-->Line_25 $$ String preferenceName = LocalizationUtil.getLocalizedName("ranks", languageId)[ FD ]
Line_9 $$ if (!isValidUserRank(rank)) -->Line_11 $$ return[ CD ]
Line_7 $$ Map<String, String> map = new TreeMap(new NaturalOrderStringComparator())-->Line_18 $$ ranks = new String[map.size()][ FD ]
Line_25 $$ String preferenceName = LocalizationUtil.getLocalizedName("ranks", languageId)-->Line_26 $$ setPreference(actionRequest, preferenceName, ranks)[ FD ]
Line_14 $$ String kvpName = kvp[0]-->Line_16 $$ map.put(kvpValue, kvpName)[ FD ]
Line_6 $$ String[] ranks = StringUtil.splitLines(ParamUtil.getString(actionRequest, "ranks_" + languageId))-->Line_18 $$ ranks = new String[map.size()][ FD ]
Line_15 $$ String kvpValue = kvp[1]-->Line_23 $$ ranks[count++] = kvpName + StringPool.EQUAL + kvpValue[ FD ]
Line_4 $$ for (Locale locale : LanguageUtil.getAvailableLocales(themeDisplay.getSiteGroupId())) -->Line_5 $$ String languageId = LocaleUtil.toLanguageId(locale)[ FD ]
Line_7 $$ Map<String, String> map = new TreeMap(new NaturalOrderStringComparator())-->Line_20 $$ for (Map.Entry<String, String> entry : map.entrySet()) [ FD ]
Line_2 $$ protected void updateUserRanks(ActionRequest actionRequest) -->Line_6 $$ String[] ranks = StringUtil.splitLines(ParamUtil.getString(actionRequest, "ranks_" + languageId))[ FD ]
Line_8 $$ for (String rank : ranks) -->Line_13 $$ String[] kvp = StringUtil.split(rank, CharPool.EQUAL)[ FD ]
Line_20 $$ for (Map.Entry<String, String> entry : map.entrySet()) -->Line_21 $$ String kvpValue = entry.getKey()[ FD ]
Line_2 $$ protected void updateUserRanks(ActionRequest actionRequest) -->Line_26 $$ setPreference(actionRequest, preferenceName, ranks)[ FD ]
