Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_7 $$ PackedInteger.writePackedInteger(output, attachments.size())[ CD ]
Line_8 $$ for (Map.Entry<String, Object> entry : attachments.entrySet()) -->Line_10 $$ output.writeObject(entry.getValue())[ FD ]
Line_3 $$ if (attachments == null) -->Line_4 $$ output.writeByte(0)[ CD ]
Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_8 $$ for (Map.Entry<String, Object> entry : attachments.entrySet()) [ FD ]
Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_10 $$ output.writeObject(entry.getValue())[ FD ]
Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_9 $$ output.writeObject(entry.getKey())[ FD ]
Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_3 $$ if (attachments == null) [ CD ]
Line_8 $$ for (Map.Entry<String, Object> entry : attachments.entrySet()) -->Line_9 $$ output.writeObject(entry.getKey())[ FD ]
Line_3 $$ if (attachments == null) -->Line_5 $$ return[ CD ]
Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_7 $$ PackedInteger.writePackedInteger(output, attachments.size())[ FD ]
Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_4 $$ output.writeByte(0)[ FD ]
Line_2 $$ protected void writeAttachments(final ObjectOutput output, final Map<String, Object> attachments) throws IOException -->Line_3 $$ if (attachments == null) [ FD ]
