Line_2 $$ static Mutation makeStartSessionMutation(ByteBuffer sessionId, InetAddress client, Map<String, String> parameters, String request, long startedAt, String command, int ttl) -->Line_5 $$ return adder.build()[ CD ]
Line_2 $$ static Mutation makeStartSessionMutation(ByteBuffer sessionId, InetAddress client, Map<String, String> parameters, String request, long startedAt, String command, int ttl) -->Line_3 $$ RowUpdateBuilder adder = new RowUpdateBuilder(Sessions, FBUtilities.timestampMicros(), ttl, sessionId).clustering().add("client", client).add("coordinator", FBUtilities.getBroadcastAddress()).add("request", request).add("started_at", new Date(startedAt)).add("command", command)[ CD ]
Line_2 $$ static Mutation makeStartSessionMutation(ByteBuffer sessionId, InetAddress client, Map<String, String> parameters, String request, long startedAt, String command, int ttl) -->Line_3 $$ RowUpdateBuilder adder = new RowUpdateBuilder(Sessions, FBUtilities.timestampMicros(), ttl, sessionId).clustering().add("client", client).add("coordinator", FBUtilities.getBroadcastAddress()).add("request", request).add("started_at", new Date(startedAt)).add("command", command)[ FD ]
Line_3 $$ RowUpdateBuilder adder = new RowUpdateBuilder(Sessions, FBUtilities.timestampMicros(), ttl, sessionId).clustering().add("client", client).add("coordinator", FBUtilities.getBroadcastAddress()).add("request", request).add("started_at", new Date(startedAt)).add("command", command)-->Line_4 $$ adder.addMapEntry("parameters", entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ static Mutation makeStartSessionMutation(ByteBuffer sessionId, InetAddress client, Map<String, String> parameters, String request, long startedAt, String command, int ttl) -->Line_4 $$ for (Map.Entry<String, String> entry : parameters.entrySet()) adder.addMapEntry("parameters", entry.getKey(), entry.getValue())[ FD ]
Line_3 $$ RowUpdateBuilder adder = new RowUpdateBuilder(Sessions, FBUtilities.timestampMicros(), ttl, sessionId).clustering().add("client", client).add("coordinator", FBUtilities.getBroadcastAddress()).add("request", request).add("started_at", new Date(startedAt)).add("command", command)-->Line_5 $$ return adder.build()[ FD ]
