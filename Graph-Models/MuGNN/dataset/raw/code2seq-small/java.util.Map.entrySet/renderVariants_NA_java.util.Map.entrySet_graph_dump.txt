Line_2 $$ protected void renderVariants(T binary, TextReportBuilder builder) -->Line_16 $$ builder.item(variantName, RendererUtils.displayValueOf(variant.getValue()))[ FD ]
Line_8 $$ VariantAspect variantAspect = ((StructSchema<?>) schema).getAspect(VariantAspect.class)-->Line_9 $$ if (variantAspect != null) [ FD ]
Line_2 $$ protected void renderVariants(T binary, TextReportBuilder builder) -->Line_3 $$ ModelSchema<?> schema = schemaStore.getSchema(((BinarySpecInternal) binary).getPublicType())[ CD ]
Line_15 $$ String variantName = variant.getKey()-->Line_16 $$ builder.item(variantName, RendererUtils.displayValueOf(variant.getValue()))[ FD ]
Line_14 $$ for (Map.Entry<String, Object> variant : variants.entrySet()) -->Line_15 $$ String variantName = variant.getKey()[ FD ]
Line_4 $$ if (!(schema instanceof StructSchema)) -->Line_5 $$ return[ CD ]
Line_7 $$ Map<String, Object> variants = Maps.newTreeMap()-->Line_11 $$ variants.put(property.getName(), property.getPropertyValue(binary))[ FD ]
Line_14 $$ for (Map.Entry<String, Object> variant : variants.entrySet()) -->Line_16 $$ builder.item(variantName, RendererUtils.displayValueOf(variant.getValue()))[ FD ]
Line_8 $$ VariantAspect variantAspect = ((StructSchema<?>) schema).getAspect(VariantAspect.class)-->Line_10 $$ for (ModelProperty<?> property : variantAspect.getDimensions()) [ FD ]
Line_2 $$ protected void renderVariants(T binary, TextReportBuilder builder) -->Line_11 $$ variants.put(property.getName(), property.getPropertyValue(binary))[ FD ]
Line_7 $$ Map<String, Object> variants = Maps.newTreeMap()-->Line_14 $$ for (Map.Entry<String, Object> variant : variants.entrySet()) [ FD ]
Line_2 $$ protected void renderVariants(T binary, TextReportBuilder builder) -->Line_4 $$ if (!(schema instanceof StructSchema)) [ CD ]
Line_2 $$ protected void renderVariants(T binary, TextReportBuilder builder) -->Line_7 $$ Map<String, Object> variants = Maps.newTreeMap()[ CD ]
Line_10 $$ for (ModelProperty<?> property : variantAspect.getDimensions()) -->Line_11 $$ variants.put(property.getName(), property.getPropertyValue(binary))[ FD ]
Line_2 $$ protected void renderVariants(T binary, TextReportBuilder builder) -->Line_8 $$ VariantAspect variantAspect = ((StructSchema<?>) schema).getAspect(VariantAspect.class)[ CD ]
Line_2 $$ protected void renderVariants(T binary, TextReportBuilder builder) -->Line_9 $$ if (variantAspect != null) [ CD ]
