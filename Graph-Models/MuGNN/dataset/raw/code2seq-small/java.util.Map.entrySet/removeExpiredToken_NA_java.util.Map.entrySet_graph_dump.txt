Line_8 $$ Map.Entry<TokenIdent, DelegationTokenInformation> entry = i.next()-->Line_9 $$ long renewDate = entry.getValue().getRenewDate()[ FD ]
Line_7 $$ while (i.hasNext()) -->Line_10 $$ if (renewDate < now) [ CD ]
Line_2 $$ private void removeExpiredToken() throws IOException -->Line_4 $$ Set<TokenIdent> expiredTokens = new HashSet<TokenIdent>()[ CD ]
Line_9 $$ long renewDate = entry.getValue().getRenewDate()-->Line_10 $$ if (renewDate < now) [ FD ]
Line_2 $$ private void removeExpiredToken() throws IOException -->Line_3 $$ long now = Time.now()[ CD ]
Line_10 $$ if (renewDate < now) -->Line_11 $$ expiredTokens.add(entry.getKey())[ CD ]
Line_6 $$ Iterator<Map.Entry<TokenIdent, DelegationTokenInformation>> i = currentTokens.entrySet().iterator()-->Line_8 $$ Map.Entry<TokenIdent, DelegationTokenInformation> entry = i.next()[ FD ]
Line_3 $$ long now = Time.now()-->Line_10 $$ if (renewDate < now) [ FD ]
Line_4 $$ Set<TokenIdent> expiredTokens = new HashSet<TokenIdent>()-->Line_11 $$ expiredTokens.add(entry.getKey())[ FD ]
Line_8 $$ Map.Entry<TokenIdent, DelegationTokenInformation> entry = i.next()-->Line_11 $$ expiredTokens.add(entry.getKey())[ FD ]
Line_16 $$ for (TokenIdent ident : expiredTokens) -->Line_17 $$ logExpireToken(ident)[ FD ]
Line_7 $$ while (i.hasNext()) -->Line_9 $$ long renewDate = entry.getValue().getRenewDate()[ CD ]
Line_10 $$ if (renewDate < now) -->Line_12 $$ i.remove()[ CD ]
Line_16 $$ for (TokenIdent ident : expiredTokens) -->Line_18 $$ removeStoredToken(ident)[ FD ]
Line_6 $$ Iterator<Map.Entry<TokenIdent, DelegationTokenInformation>> i = currentTokens.entrySet().iterator()-->Line_7 $$ while (i.hasNext()) [ FD ]
Line_7 $$ while (i.hasNext()) -->Line_8 $$ Map.Entry<TokenIdent, DelegationTokenInformation> entry = i.next()[ CD ]
Line_6 $$ Iterator<Map.Entry<TokenIdent, DelegationTokenInformation>> i = currentTokens.entrySet().iterator()-->Line_12 $$ i.remove()[ FD ]
