Line_36 $$ holder = createRepositoryHolder(repositoryMetaData)-->Line_41 $$ if (holder != null) [ FD ]
Line_27 $$ holder = null-->Line_43 $$ builder.put(repositoryMetaData.name(), holder)[ FD ]
Line_11 $$ for (Map.Entry<String, RepositoryHolder> entry : repositories.entrySet()) -->Line_16 $$ survivors.put(entry.getKey(), entry.getValue())[ FD ]
Line_19 $$ Map<String, RepositoryHolder> builder = new HashMap()-->Line_43 $$ builder.put(repositoryMetaData.name(), holder)[ FD ]
Line_41 $$ if (holder != null) -->Line_42 $$ logger.debug("registering repository [[ CD ]
Line_2 $$ public void clusterChanged(ClusterChangedEvent event) -->Line_5 $$ RepositoriesMetaData newMetaData = event.state().getMetaData().custom(RepositoriesMetaData.TYPE)[ FD ]
Line_29 $$ holder = createRepositoryHolder(repositoryMetaData)-->Line_43 $$ builder.put(repositoryMetaData.name(), holder)[ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_42 $$ logger.debug("registering repository [[ FD ]
Line_11 $$ for (Map.Entry<String, RepositoryHolder> entry : repositories.entrySet()) -->Line_12 $$ if (newMetaData == null || newMetaData.repository(entry.getKey()) == null) [ FD ]
Line_27 $$ holder = null-->Line_41 $$ if (holder != null) [ FD ]
Line_10 $$ Map<String, RepositoryHolder> survivors = new HashMap()-->Line_16 $$ survivors.put(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public void clusterChanged(ClusterChangedEvent event) -->Line_9 $$ logger.trace("processing new index repositories for state version [[ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_26 $$ closeRepository(repositoryMetaData.name(), holder)[ FD ]
Line_10 $$ Map<String, RepositoryHolder> survivors = new HashMap()-->Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())[ FD ]
Line_41 $$ if (holder != null) -->Line_43 $$ builder.put(repositoryMetaData.name(), holder)[ CD ]
Line_5 $$ RepositoriesMetaData newMetaData = event.state().getMetaData().custom(RepositoriesMetaData.TYPE)-->Line_6 $$ if ((oldMetaData == null && newMetaData == null) || (oldMetaData != null && oldMetaData.equals(newMetaData))) [ FD ]
Line_12 $$ if (newMetaData == null || newMetaData.repository(entry.getKey()) == null) -->Line_13 $$ logger.debug("unregistering repository [[ CD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_24 $$ if (!holder.type.equals(repositoryMetaData.type()) || !holder.settings.equals(repositoryMetaData.settings())) [ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_31 $$ logger.warn("failed to change repository [[ FD ]
Line_12 $$ if (newMetaData == null || newMetaData.repository(entry.getKey()) == null) -->Line_16 $$ survivors.put(entry.getKey(), entry.getValue())[ CD ]
Line_6 $$ if ((oldMetaData == null && newMetaData == null) || (oldMetaData != null && oldMetaData.equals(newMetaData))) -->Line_7 $$ return[ CD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_36 $$ holder = createRepositoryHolder(repositoryMetaData)[ FD ]
Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())-->Line_26 $$ closeRepository(repositoryMetaData.name(), holder)[ FD ]
Line_11 $$ for (Map.Entry<String, RepositoryHolder> entry : repositories.entrySet()) -->Line_13 $$ logger.debug("unregistering repository [[ FD ]
Line_24 $$ if (!holder.type.equals(repositoryMetaData.type()) || !holder.settings.equals(repositoryMetaData.settings())) -->Line_27 $$ holder = null[ CD ]
Line_24 $$ if (!holder.type.equals(repositoryMetaData.type()) || !holder.settings.equals(repositoryMetaData.settings())) -->Line_26 $$ closeRepository(repositoryMetaData.name(), holder)[ CD ]
Line_2 $$ public void clusterChanged(ClusterChangedEvent event) -->Line_4 $$ RepositoriesMetaData oldMetaData = event.previousState().getMetaData().custom(RepositoriesMetaData.TYPE)[ FD ]
Line_5 $$ RepositoriesMetaData newMetaData = event.state().getMetaData().custom(RepositoriesMetaData.TYPE)-->Line_12 $$ if (newMetaData == null || newMetaData.repository(entry.getKey()) == null) [ FD ]
Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())-->Line_43 $$ builder.put(repositoryMetaData.name(), holder)[ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_25 $$ logger.debug("updating repository [[ FD ]
Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())-->Line_36 $$ holder = createRepositoryHolder(repositoryMetaData)[ FD ]
Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())-->Line_23 $$ if (holder != null) [ FD ]
Line_29 $$ holder = createRepositoryHolder(repositoryMetaData)-->Line_41 $$ if (holder != null) [ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_29 $$ holder = createRepositoryHolder(repositoryMetaData)[ FD ]
Line_4 $$ RepositoriesMetaData oldMetaData = event.previousState().getMetaData().custom(RepositoriesMetaData.TYPE)-->Line_6 $$ if ((oldMetaData == null && newMetaData == null) || (oldMetaData != null && oldMetaData.equals(newMetaData))) [ FD ]
Line_27 $$ holder = null-->Line_36 $$ holder = createRepositoryHolder(repositoryMetaData)[ FD ]
Line_11 $$ for (Map.Entry<String, RepositoryHolder> entry : repositories.entrySet()) -->Line_14 $$ closeRepository(entry.getKey(), entry.getValue())[ FD ]
Line_24 $$ if (!holder.type.equals(repositoryMetaData.type()) || !holder.settings.equals(repositoryMetaData.settings())) -->Line_25 $$ logger.debug("updating repository [[ CD ]
Line_23 $$ if (holder != null) -->Line_24 $$ if (!holder.type.equals(repositoryMetaData.type()) || !holder.settings.equals(repositoryMetaData.settings())) [ CD ]
Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())-->Line_41 $$ if (holder != null) [ FD ]
Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())-->Line_27 $$ holder = null[ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())[ FD ]
Line_12 $$ if (newMetaData == null || newMetaData.repository(entry.getKey()) == null) -->Line_14 $$ closeRepository(entry.getKey(), entry.getValue())[ CD ]
Line_27 $$ holder = null-->Line_29 $$ holder = createRepositoryHolder(repositoryMetaData)[ FD ]
Line_19 $$ Map<String, RepositoryHolder> builder = new HashMap()-->Line_47 $$ repositories = unmodifiableMap(builder)[ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_38 $$ logger.warn("failed to create repository [[ FD ]
Line_36 $$ holder = createRepositoryHolder(repositoryMetaData)-->Line_43 $$ builder.put(repositoryMetaData.name(), holder)[ FD ]
Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) -->Line_43 $$ builder.put(repositoryMetaData.name(), holder)[ FD ]
Line_5 $$ RepositoriesMetaData newMetaData = event.state().getMetaData().custom(RepositoriesMetaData.TYPE)-->Line_20 $$ if (newMetaData != null) [ FD ]
Line_22 $$ RepositoryHolder holder = survivors.get(repositoryMetaData.name())-->Line_29 $$ holder = createRepositoryHolder(repositoryMetaData)[ FD ]
Line_5 $$ RepositoriesMetaData newMetaData = event.state().getMetaData().custom(RepositoriesMetaData.TYPE)-->Line_21 $$ for (RepositoryMetaData repositoryMetaData : newMetaData.repositories()) [ FD ]
Line_29 $$ holder = createRepositoryHolder(repositoryMetaData)-->Line_36 $$ holder = createRepositoryHolder(repositoryMetaData)[ FD ]
