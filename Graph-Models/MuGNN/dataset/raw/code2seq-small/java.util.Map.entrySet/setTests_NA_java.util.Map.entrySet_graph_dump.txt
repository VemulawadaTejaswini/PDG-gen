Line_2 $$ private static void setTests(@NotNull final Task task, @NotNull final StepOptions source, @NotNull final Project project) -->Line_4 $$ if (testsText.isEmpty()) [ CD ]
Line_3 $$ final Map<String, String> testsText = task.getTestsText()-->Line_4 $$ if (testsText.isEmpty()) [ FD ]
Line_2 $$ private static void setTests(@NotNull final Task task, @NotNull final StepOptions source, @NotNull final Project project) -->Line_3 $$ final Map<String, String> testsText = task.getTestsText()[ CD ]
Line_5 $$ ApplicationManager.getApplication().runReadAction(new Runnable() -->Line_7 $$ source.test = Collections.singletonList(new TestFileWrapper(EduNames.TESTS_FILE, task.getTestsText(project)))[ CD ]
Line_2 $$ private static void setTests(@NotNull final Task task, @NotNull final StepOptions source, @NotNull final Project project) -->Line_3 $$ final Map<String, String> testsText = task.getTestsText()[ FD ]
Line_4 $$ if (testsText.isEmpty()) -->Line_11 $$ source.test = new ArrayList<TestFileWrapper>()[ CD ]
Line_3 $$ final Map<String, String> testsText = task.getTestsText()-->Line_12 $$ for (Map.Entry<String, String> entry : testsText.entrySet()) [ FD ]
Line_2 $$ private static void setTests(@NotNull final Task task, @NotNull final StepOptions source, @NotNull final Project project) -->Line_7 $$ source.test = Collections.singletonList(new TestFileWrapper(EduNames.TESTS_FILE, task.getTestsText(project)))[ FD ]
Line_4 $$ if (testsText.isEmpty()) -->Line_5 $$ ApplicationManager.getApplication().runReadAction(new Runnable() [ CD ]
