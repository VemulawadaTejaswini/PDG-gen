Line_6 $$ if (!(entry.getValue() instanceof BindingResult) && modelKeys.contains(entry.getKey()) && !entry.getKey().equals(JsonView.class.getName()) && !entry.getKey().equals(FilterProvider.class.getName())) -->Line_7 $$ result.put(entry.getKey(), entry.getValue())[ CD ]
Line_4 $$ Set<String> modelKeys = (!CollectionUtils.isEmpty(this.modelKeys) ? this.modelKeys : model.keySet())-->Line_6 $$ if (!(entry.getValue() instanceof BindingResult) && modelKeys.contains(entry.getKey()) && !entry.getKey().equals(JsonView.class.getName()) && !entry.getKey().equals(FilterProvider.class.getName())) [ FD ]
Line_2 $$ protected Object filterModel(Map<String, Object> model) -->Line_5 $$ for (Map.Entry<String, Object> entry : model.entrySet()) [ FD ]
Line_2 $$ protected Object filterModel(Map<String, Object> model) -->Line_10 $$ return (this.extractValueFromSingleKeyModel && result.size() == 1 ? result.values().iterator().next() : result)[ CD ]
Line_2 $$ protected Object filterModel(Map<String, Object> model) -->Line_3 $$ Map<String, Object> result = new HashMap<String, Object>(model.size())[ FD ]
Line_2 $$ protected Object filterModel(Map<String, Object> model) -->Line_3 $$ Map<String, Object> result = new HashMap<String, Object>(model.size())[ CD ]
Line_2 $$ protected Object filterModel(Map<String, Object> model) -->Line_4 $$ Set<String> modelKeys = (!CollectionUtils.isEmpty(this.modelKeys) ? this.modelKeys : model.keySet())[ FD ]
Line_5 $$ for (Map.Entry<String, Object> entry : model.entrySet()) -->Line_7 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
Line_5 $$ for (Map.Entry<String, Object> entry : model.entrySet()) -->Line_6 $$ if (!(entry.getValue() instanceof BindingResult) && modelKeys.contains(entry.getKey()) && !entry.getKey().equals(JsonView.class.getName()) && !entry.getKey().equals(FilterProvider.class.getName())) [ FD ]
Line_2 $$ protected Object filterModel(Map<String, Object> model) -->Line_4 $$ Set<String> modelKeys = (!CollectionUtils.isEmpty(this.modelKeys) ? this.modelKeys : model.keySet())[ CD ]
Line_3 $$ Map<String, Object> result = new HashMap<String, Object>(model.size())-->Line_10 $$ return (this.extractValueFromSingleKeyModel && result.size() == 1 ? result.values().iterator().next() : result)[ FD ]
Line_3 $$ Map<String, Object> result = new HashMap<String, Object>(model.size())-->Line_7 $$ result.put(entry.getKey(), entry.getValue())[ FD ]
