Line_5 $$ final boolean b = ((THashMap<Key, Value>) data).forEachEntry(new TObjectObjectProcedure<Key, Value>() -->Line_13 $$ return true[ CD ]
Line_2 $$ public static <Key, Value> void iterateAddedKeyAndValues(final int inputId, final AddedKeyProcessor<Key, Value> consumer, Map<Key, Value> data) throws StorageException -->Line_3 $$ if (data instanceof THashMap) [ CD ]
Line_3 $$ if (data instanceof THashMap) -->Line_16 $$ if (!b)[ CD ]
Line_4 $$ final Ref<StorageException> exceptionRef = new Ref<StorageException>()-->Line_10 $$ exceptionRef.set(ex)[ FD ]
Line_5 $$ final boolean b = ((THashMap<Key, Value>) data).forEachEntry(new TObjectObjectProcedure<Key, Value>() -->Line_8 $$ consumer.process(key, value, inputId)[ FD ]
Line_2 $$ public static <Key, Value> void iterateAddedKeyAndValues(final int inputId, final AddedKeyProcessor<Key, Value> consumer, Map<Key, Value> data) throws StorageException -->Line_3 $$ if (data instanceof THashMap) [ FD ]
Line_5 $$ final boolean b = ((THashMap<Key, Value>) data).forEachEntry(new TObjectObjectProcedure<Key, Value>() -->Line_16 $$ if (!b)[ FD ]
Line_4 $$ final Ref<StorageException> exceptionRef = new Ref<StorageException>()-->Line_17 $$ throw exceptionRef.get()[ FD ]
Line_2 $$ public static <Key, Value> void iterateAddedKeyAndValues(final int inputId, final AddedKeyProcessor<Key, Value> consumer, Map<Key, Value> data) throws StorageException -->Line_19 $$ for (Map.Entry<Key, Value> entry : data.entrySet()) [ FD ]
Line_2 $$ public static <Key, Value> void iterateAddedKeyAndValues(final int inputId, final AddedKeyProcessor<Key, Value> consumer, Map<Key, Value> data) throws StorageException -->Line_20 $$ consumer.process(entry.getKey(), entry.getValue(), inputId)[ FD ]
Line_3 $$ if (data instanceof THashMap) -->Line_4 $$ final Ref<StorageException> exceptionRef = new Ref<StorageException>()[ CD ]
Line_3 $$ if (data instanceof THashMap) -->Line_5 $$ final boolean b = ((THashMap<Key, Value>) data).forEachEntry(new TObjectObjectProcedure<Key, Value>() [ CD ]
Line_2 $$ public static <Key, Value> void iterateAddedKeyAndValues(final int inputId, final AddedKeyProcessor<Key, Value> consumer, Map<Key, Value> data) throws StorageException -->Line_8 $$ consumer.process(key, value, inputId)[ FD ]
