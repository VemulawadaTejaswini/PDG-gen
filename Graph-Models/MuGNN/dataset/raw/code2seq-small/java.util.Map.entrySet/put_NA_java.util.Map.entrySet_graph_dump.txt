Line_14 $$ if (oldSize == 1) -->Line_15 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()[ CD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_10 $$ final int oldSize = oldMap.size()[ FD ]
Line_11 $$ if (oldSize == 0) -->Line_12 $$ oldValue = null[ CD ]
Line_9 $$ final V oldValue-->Line_19 $$ oldValue = entry.getValue()[ FD ]
Line_17 $$ if (oldKey.equals(key)) -->Line_22 $$ oldValue = newMap.put(key, value)[ CD ]
Line_10 $$ final int oldSize = oldMap.size()-->Line_14 $$ if (oldSize == 1) [ FD ]
Line_12 $$ oldValue = null-->Line_19 $$ oldValue = entry.getValue()[ FD ]
Line_19 $$ oldValue = entry.getValue()-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_8 $$ final Map<K, V> newMap-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_14 $$ if (oldSize == 1) -->Line_17 $$ if (oldKey.equals(key)) [ CD ]
Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ FD ]
Line_17 $$ if (oldKey.equals(key)) -->Line_18 $$ newMap = Collections.singletonMap(key, value)[ CD ]
Line_8 $$ final Map<K, V> newMap-->Line_18 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_18 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_13 $$ newMap = Collections.singletonMap(key, value)-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_13 $$ newMap = Collections.singletonMap(key, value)-->Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_15 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()-->Line_16 $$ final K oldKey = entry.getKey()[ FD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_7 $$ final Map<K, V> oldMap = updater.get(instance)[ FD ]
Line_18 $$ newMap = Collections.singletonMap(key, value)-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_9 $$ final V oldValue-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_19 $$ oldValue = entry.getValue()-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ FD ]
Line_13 $$ newMap = Collections.singletonMap(key, value)-->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ FD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_13 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_12 $$ oldValue = null-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_13 $$ newMap = Collections.singletonMap(key, value)-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_14 $$ if (oldSize == 1) -->Line_16 $$ final K oldKey = entry.getKey()[ CD ]
Line_17 $$ if (oldKey.equals(key)) -->Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ CD ]
Line_18 $$ newMap = Collections.singletonMap(key, value)-->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ FD ]
Line_9 $$ final V oldValue-->Line_12 $$ oldValue = null[ FD ]
Line_16 $$ final K oldKey = entry.getKey()-->Line_17 $$ if (oldKey.equals(key)) [ FD ]
Line_15 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()-->Line_19 $$ oldValue = entry.getValue()[ FD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_3 $$ if (key == null) [ FD ]
Line_8 $$ final Map<K, V> newMap-->Line_13 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_8 $$ final Map<K, V> newMap-->Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_9 $$ final V oldValue-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_10 $$ final int oldSize = oldMap.size()-->Line_11 $$ if (oldSize == 0) [ FD ]
Line_17 $$ if (oldKey.equals(key)) -->Line_19 $$ oldValue = entry.getValue()[ CD ]
Line_6 $$ for (; ; ) -->Line_9 $$ final V oldValue[ CD ]
Line_7 $$ final Map<K, V> oldMap = updater.get(instance)-->Line_15 $$ final Map.Entry<K, V> entry = oldMap.entrySet().iterator().next()[ FD ]
Line_22 $$ oldValue = newMap.put(key, value)-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_18 $$ newMap = Collections.singletonMap(key, value)-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_6 $$ for (; ; ) -->Line_11 $$ if (oldSize == 0) [ CD ]
Line_29 $$ if (result) -->Line_30 $$ return oldValue[ CD ]
Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_11 $$ if (oldSize == 0) -->Line_13 $$ newMap = Collections.singletonMap(key, value)[ CD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_3 $$ if (key == null) [ CD ]
Line_6 $$ for (; ; ) -->Line_10 $$ final int oldSize = oldMap.size()[ CD ]
Line_8 $$ final Map<K, V> newMap-->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ FD ]
Line_11 $$ if (oldSize == 0) -->Line_14 $$ if (oldSize == 1) [ CD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_17 $$ if (oldKey.equals(key)) [ FD ]
Line_6 $$ for (; ; ) -->Line_8 $$ final Map<K, V> newMap[ CD ]
Line_6 $$ for (; ; ) -->Line_7 $$ final Map<K, V> oldMap = updater.get(instance)[ CD ]
Line_8 $$ final Map<K, V> newMap-->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_14 $$ if (oldSize == 1) -->Line_26 $$ oldValue = newMap.put(key, value)[ CD ]
Line_2 $$ public V put(C instance, K key, V value) -->Line_6 $$ for (; ; ) [ CD ]
Line_8 $$ final Map<K, V> newMap-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_26 $$ oldValue = newMap.put(key, value)[ FD ]
Line_12 $$ oldValue = null-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_22 $$ oldValue = newMap.put(key, value)[ FD ]
Line_13 $$ newMap = Collections.singletonMap(key, value)-->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_18 $$ newMap = Collections.singletonMap(key, value)-->Line_21 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ FD ]
Line_13 $$ newMap = Collections.singletonMap(key, value)-->Line_18 $$ newMap = Collections.singletonMap(key, value)[ FD ]
Line_14 $$ if (oldSize == 1) -->Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)[ CD ]
Line_18 $$ newMap = Collections.singletonMap(key, value)-->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ FD ]
Line_25 $$ newMap = new FastCopyHashMap<K, V>(oldMap)-->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ FD ]
Line_6 $$ for (; ; ) -->Line_28 $$ final boolean result = updater.compareAndSet(instance, oldMap, newMap)[ CD ]
Line_6 $$ for (; ; ) -->Line_29 $$ if (result) [ CD ]
