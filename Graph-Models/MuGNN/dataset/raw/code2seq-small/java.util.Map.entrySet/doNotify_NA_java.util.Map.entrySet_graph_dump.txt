Line_35 $$ final CmdlineRemoteProto.Message.ControllerMessage message = CmdlineRemoteProto.Message.ControllerMessage.newBuilder().setType(CmdlineRemoteProto.Message.ControllerMessage.Type.FS_EVENT).setFsEvent(data.createNextEvent()).build()-->Line_36 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ FD ]
Line_31 $$ if (future != null && !future.isCancelled() && !future.isDone()) -->Line_34 $$ if (channel != null) [ CD ]
Line_32 $$ final UUID sessionId = future.getRequestID()-->Line_36 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ FD ]
Line_5 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_12 $$ if (filtered.isEmpty()) [ FD ]
Line_24 $$ final ProjectData data = entry.getValue()-->Line_26 $$ data.addDeleted(filtered)[ FD ]
Line_16 $$ if (IS_UNIT_TEST_MODE) -->Line_17 $$ if (notifyDeletion) [ CD ]
Line_7 $$ final String path = FileUtil.toSystemIndependentName(file.getPath())-->Line_8 $$ if (PATH_FILTER.fun(path)) [ FD ]
Line_5 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_26 $$ data.addDeleted(filtered)[ FD ]
Line_8 $$ if (PATH_FILTER.fun(path)) -->Line_9 $$ filtered.add(path)[ CD ]
Line_34 $$ if (channel != null) -->Line_35 $$ final CmdlineRemoteProto.Message.ControllerMessage message = CmdlineRemoteProto.Message.ControllerMessage.newBuilder().setType(CmdlineRemoteProto.Message.ControllerMessage.Type.FS_EVENT).setFsEvent(data.createNextEvent()).build()[ CD ]
Line_5 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_9 $$ filtered.add(path)[ FD ]
Line_17 $$ if (notifyDeletion) -->Line_20 $$ LOG.info("Registering changed paths: " + filtered)[ CD ]
Line_3 $$ runCommand(new Runnable() -->Line_12 $$ if (filtered.isEmpty()) [ CD ]
Line_34 $$ if (channel != null) -->Line_36 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ CD ]
Line_31 $$ if (future != null && !future.isCancelled() && !future.isDone()) -->Line_33 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)[ CD ]
Line_33 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)-->Line_34 $$ if (channel != null) [ FD ]
Line_25 $$ if (notifyDeletion) -->Line_28 $$ data.addChanged(filtered)[ CD ]
Line_2 $$ private void doNotify(final Collection<File> paths, final boolean notifyDeletion) -->Line_3 $$ runCommand(new Runnable() [ CD ]
Line_12 $$ if (filtered.isEmpty()) -->Line_13 $$ return[ CD ]
Line_5 $$ final List<String> filtered = new ArrayList<String>(paths.size())-->Line_28 $$ data.addChanged(filtered)[ FD ]
Line_30 $$ final RequestFuture future = myBuildsInProgress.get(entry.getKey())-->Line_31 $$ if (future != null && !future.isCancelled() && !future.isDone()) [ FD ]
Line_23 $$ for (Map.Entry<String, ProjectData> entry : myProjectDataMap.entrySet()) -->Line_24 $$ final ProjectData data = entry.getValue()[ FD ]
Line_6 $$ for (File file : paths) -->Line_7 $$ final String path = FileUtil.toSystemIndependentName(file.getPath())[ FD ]
Line_3 $$ runCommand(new Runnable() -->Line_5 $$ final List<String> filtered = new ArrayList<String>(paths.size())[ CD ]
Line_23 $$ for (Map.Entry<String, ProjectData> entry : myProjectDataMap.entrySet()) -->Line_30 $$ final RequestFuture future = myBuildsInProgress.get(entry.getKey())[ FD ]
Line_7 $$ final String path = FileUtil.toSystemIndependentName(file.getPath())-->Line_9 $$ filtered.add(path)[ FD ]
Line_24 $$ final ProjectData data = entry.getValue()-->Line_35 $$ final CmdlineRemoteProto.Message.ControllerMessage message = CmdlineRemoteProto.Message.ControllerMessage.newBuilder().setType(CmdlineRemoteProto.Message.ControllerMessage.Type.FS_EVENT).setFsEvent(data.createNextEvent()).build()[ FD ]
Line_31 $$ if (future != null && !future.isCancelled() && !future.isDone()) -->Line_32 $$ final UUID sessionId = future.getRequestID()[ CD ]
Line_32 $$ final UUID sessionId = future.getRequestID()-->Line_33 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)[ FD ]
Line_17 $$ if (notifyDeletion) -->Line_18 $$ LOG.info("Registering deleted paths: " + filtered)[ CD ]
Line_30 $$ final RequestFuture future = myBuildsInProgress.get(entry.getKey())-->Line_32 $$ final UUID sessionId = future.getRequestID()[ FD ]
Line_2 $$ private void doNotify(final Collection<File> paths, final boolean notifyDeletion) -->Line_5 $$ final List<String> filtered = new ArrayList<String>(paths.size())[ FD ]
Line_33 $$ final Channel channel = myMessageDispatcher.getConnectedChannel(sessionId)-->Line_36 $$ channel.writeAndFlush(CmdlineProtoUtil.toMessage(sessionId, message))[ FD ]
Line_24 $$ final ProjectData data = entry.getValue()-->Line_28 $$ data.addChanged(filtered)[ FD ]
Line_25 $$ if (notifyDeletion) -->Line_26 $$ data.addDeleted(filtered)[ CD ]
