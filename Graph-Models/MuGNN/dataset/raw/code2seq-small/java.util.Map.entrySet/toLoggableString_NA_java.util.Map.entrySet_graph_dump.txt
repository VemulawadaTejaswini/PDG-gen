Line_2 $$ public String toLoggableString(SessionImplementor session) -->Line_6 $$ sb.append("transientEntityName=").append(session.bestGuessEntityName(entry.getKey()))[ FD ]
Line_5 $$ for (Map.Entry<Object, Set<String>> entry : propertyPathsByTransientEntity.entrySet()) -->Line_7 $$ sb.append(" requiredBy=").append(entry.getValue())[ FD ]
Line_2 $$ public String toLoggableString(SessionImplementor session) -->Line_3 $$ final StringBuilder sb = new StringBuilder(getClass().getSimpleName()).append('[')[ CD ]
Line_2 $$ public String toLoggableString(SessionImplementor session) -->Line_4 $$ if (propertyPathsByTransientEntity != null) [ CD ]
Line_3 $$ final StringBuilder sb = new StringBuilder(getClass().getSimpleName()).append('[')-->Line_6 $$ sb.append("transientEntityName=").append(session.bestGuessEntityName(entry.getKey()))[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder(getClass().getSimpleName()).append('[')-->Line_11 $$ return sb.toString()[ FD ]
Line_2 $$ public String toLoggableString(SessionImplementor session) -->Line_10 $$ sb.append(']')[ CD ]
Line_5 $$ for (Map.Entry<Object, Set<String>> entry : propertyPathsByTransientEntity.entrySet()) -->Line_6 $$ sb.append("transientEntityName=").append(session.bestGuessEntityName(entry.getKey()))[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder(getClass().getSimpleName()).append('[')-->Line_10 $$ sb.append(']')[ FD ]
Line_3 $$ final StringBuilder sb = new StringBuilder(getClass().getSimpleName()).append('[')-->Line_7 $$ sb.append(" requiredBy=").append(entry.getValue())[ FD ]
Line_2 $$ public String toLoggableString(SessionImplementor session) -->Line_11 $$ return sb.toString()[ CD ]
