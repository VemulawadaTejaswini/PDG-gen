Line_2 $$ private Map<String, Settings> getGroupsInternal(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException -->Line_7 $$ String nameValue = setting.substring(settingPrefix.length())[ FD ]
Line_18 $$ if (groupSettings == null) -->Line_19 $$ groupSettings = new LinkedHashMap()[ CD ]
Line_18 $$ if (groupSettings == null) -->Line_20 $$ map.put(name, groupSettings)[ CD ]
Line_2 $$ private Map<String, Settings> getGroupsInternal(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException -->Line_25 $$ Map<String, Settings> retVal = new LinkedHashMap()[ CD ]
Line_7 $$ String nameValue = setting.substring(settingPrefix.length())-->Line_16 $$ String value = nameValue.substring(dotIndex + 1)[ FD ]
Line_3 $$ Map<String, Map<String, String>> map = new LinkedHashMap()-->Line_20 $$ map.put(name, groupSettings)[ FD ]
Line_19 $$ groupSettings = new LinkedHashMap()-->Line_20 $$ map.put(name, groupSettings)[ FD ]
Line_15 $$ String name = nameValue.substring(0, dotIndex)-->Line_20 $$ map.put(name, groupSettings)[ FD ]
Line_17 $$ Map<String, String> groupSettings = map.get(name)-->Line_22 $$ groupSettings.put(value, get(setting))[ FD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_16 $$ String value = nameValue.substring(dotIndex + 1)[ CD ]
Line_2 $$ private Map<String, Settings> getGroupsInternal(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException -->Line_29 $$ return Collections.unmodifiableMap(retVal)[ CD ]
Line_17 $$ Map<String, String> groupSettings = map.get(name)-->Line_19 $$ groupSettings = new LinkedHashMap()[ FD ]
Line_8 $$ int dotIndex = nameValue.indexOf('.')-->Line_9 $$ if (dotIndex == -1) [ FD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_7 $$ String nameValue = setting.substring(settingPrefix.length())[ CD ]
Line_5 $$ String setting = (String) o-->Line_6 $$ if (setting.startsWith(settingPrefix)) [ FD ]
Line_25 $$ Map<String, Settings> retVal = new LinkedHashMap()-->Line_27 $$ retVal.put(entry.getKey(), new Settings(Collections.unmodifiableMap(entry.getValue())))[ FD ]
Line_8 $$ int dotIndex = nameValue.indexOf('.')-->Line_15 $$ String name = nameValue.substring(0, dotIndex)[ FD ]
Line_3 $$ Map<String, Map<String, String>> map = new LinkedHashMap()-->Line_17 $$ Map<String, String> groupSettings = map.get(name)[ FD ]
Line_2 $$ private Map<String, Settings> getGroupsInternal(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException -->Line_6 $$ if (setting.startsWith(settingPrefix)) [ FD ]
Line_5 $$ String setting = (String) o-->Line_7 $$ String nameValue = setting.substring(settingPrefix.length())[ FD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_15 $$ String name = nameValue.substring(0, dotIndex)[ CD ]
Line_5 $$ String setting = (String) o-->Line_22 $$ groupSettings.put(value, get(setting))[ FD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_22 $$ groupSettings.put(value, get(setting))[ CD ]
Line_19 $$ groupSettings = new LinkedHashMap()-->Line_22 $$ groupSettings.put(value, get(setting))[ FD ]
Line_25 $$ Map<String, Settings> retVal = new LinkedHashMap()-->Line_29 $$ return Collections.unmodifiableMap(retVal)[ FD ]
Line_3 $$ Map<String, Map<String, String>> map = new LinkedHashMap()-->Line_26 $$ for (Map.Entry<String, Map<String, String>> entry : map.entrySet()) [ FD ]
Line_15 $$ String name = nameValue.substring(0, dotIndex)-->Line_17 $$ Map<String, String> groupSettings = map.get(name)[ FD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_9 $$ if (dotIndex == -1) [ CD ]
Line_7 $$ String nameValue = setting.substring(settingPrefix.length())-->Line_8 $$ int dotIndex = nameValue.indexOf('.')[ FD ]
Line_17 $$ Map<String, String> groupSettings = map.get(name)-->Line_20 $$ map.put(name, groupSettings)[ FD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_18 $$ if (groupSettings == null) [ CD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_17 $$ Map<String, String> groupSettings = map.get(name)[ CD ]
Line_7 $$ String nameValue = setting.substring(settingPrefix.length())-->Line_15 $$ String name = nameValue.substring(0, dotIndex)[ FD ]
Line_6 $$ if (setting.startsWith(settingPrefix)) -->Line_8 $$ int dotIndex = nameValue.indexOf('.')[ CD ]
Line_9 $$ if (dotIndex == -1) -->Line_10 $$ if (ignoreNonGrouped) [ CD ]
Line_26 $$ for (Map.Entry<String, Map<String, String>> entry : map.entrySet()) -->Line_27 $$ retVal.put(entry.getKey(), new Settings(Collections.unmodifiableMap(entry.getValue())))[ FD ]
Line_16 $$ String value = nameValue.substring(dotIndex + 1)-->Line_22 $$ groupSettings.put(value, get(setting))[ FD ]
Line_17 $$ Map<String, String> groupSettings = map.get(name)-->Line_18 $$ if (groupSettings == null) [ FD ]
Line_2 $$ private Map<String, Settings> getGroupsInternal(String settingPrefix, boolean ignoreNonGrouped) throws SettingsException -->Line_3 $$ Map<String, Map<String, String>> map = new LinkedHashMap()[ CD ]
