Line_6 $$ String name = entry.getKey()-->Line_7 $$ ByteBuffer nameBytes = UTF8Type.instance.decompose(name)[ FD ]
Line_2 $$ private static void addDroppedColumns(CFMetaData cfm, AbstractType<?> comparator, Map<String, Long> droppedTimes) -->Line_10 $$ cfm.getDroppedColumns().put(nameBytes, new CFMetaData.DroppedColumn(name, type, time))[ FD ]
Line_2 $$ private static void addDroppedColumns(CFMetaData cfm, AbstractType<?> comparator, Map<String, Long> droppedTimes) -->Line_4 $$ Map<ByteBuffer, CollectionType> collections = last instanceof ColumnToCollectionType ? ((ColumnToCollectionType) last).defined : Collections.emptyMap()[ CD ]
Line_2 $$ private static void addDroppedColumns(CFMetaData cfm, AbstractType<?> comparator, Map<String, Long> droppedTimes) -->Line_5 $$ for (Map.Entry<String, Long> entry : droppedTimes.entrySet()) [ FD ]
Line_5 $$ for (Map.Entry<String, Long> entry : droppedTimes.entrySet()) -->Line_6 $$ String name = entry.getKey()[ FD ]
Line_2 $$ private static void addDroppedColumns(CFMetaData cfm, AbstractType<?> comparator, Map<String, Long> droppedTimes) -->Line_3 $$ AbstractType<?> last = comparator.getComponents().get(comparator.componentsCount() - 1)[ CD ]
Line_2 $$ private static void addDroppedColumns(CFMetaData cfm, AbstractType<?> comparator, Map<String, Long> droppedTimes) -->Line_3 $$ AbstractType<?> last = comparator.getComponents().get(comparator.componentsCount() - 1)[ FD ]
Line_4 $$ Map<ByteBuffer, CollectionType> collections = last instanceof ColumnToCollectionType ? ((ColumnToCollectionType) last).defined : Collections.emptyMap()-->Line_9 $$ AbstractType<?> type = collections.containsKey(nameBytes) ? collections.get(nameBytes) : BytesType.instance[ FD ]
Line_7 $$ ByteBuffer nameBytes = UTF8Type.instance.decompose(name)-->Line_9 $$ AbstractType<?> type = collections.containsKey(nameBytes) ? collections.get(nameBytes) : BytesType.instance[ FD ]
Line_7 $$ ByteBuffer nameBytes = UTF8Type.instance.decompose(name)-->Line_10 $$ cfm.getDroppedColumns().put(nameBytes, new CFMetaData.DroppedColumn(name, type, time))[ FD ]
Line_5 $$ for (Map.Entry<String, Long> entry : droppedTimes.entrySet()) -->Line_8 $$ long time = entry.getValue()[ FD ]
