Line_5 $$ if (!head.equals(mapExceptionDoms.get(entry.getKey()))) -->Line_6 $$ Integer filterExit = entry.getValue()[ CD ]
Line_2 $$ public boolean acceptStatementPair(Integer head, Integer exit) -->Line_3 $$ Map<Integer, Integer> filter = mapExceptionRangeUniqueExit.get(head)[ CD ]
Line_4 $$ for (Entry<Integer, Integer> entry : filter.entrySet()) -->Line_5 $$ if (!head.equals(mapExceptionDoms.get(entry.getKey()))) [ FD ]
Line_2 $$ public boolean acceptStatementPair(Integer head, Integer exit) -->Line_7 $$ if (filterExit.intValue() == -1 || !filterExit.equals(exit)) [ FD ]
Line_2 $$ public boolean acceptStatementPair(Integer head, Integer exit) -->Line_5 $$ if (!head.equals(mapExceptionDoms.get(entry.getKey()))) [ FD ]
Line_3 $$ Map<Integer, Integer> filter = mapExceptionRangeUniqueExit.get(head)-->Line_4 $$ for (Entry<Integer, Integer> entry : filter.entrySet()) [ FD ]
Line_6 $$ Integer filterExit = entry.getValue()-->Line_7 $$ if (filterExit.intValue() == -1 || !filterExit.equals(exit)) [ FD ]
Line_2 $$ public boolean acceptStatementPair(Integer head, Integer exit) -->Line_3 $$ Map<Integer, Integer> filter = mapExceptionRangeUniqueExit.get(head)[ FD ]
Line_4 $$ for (Entry<Integer, Integer> entry : filter.entrySet()) -->Line_6 $$ Integer filterExit = entry.getValue()[ FD ]
Line_7 $$ if (filterExit.intValue() == -1 || !filterExit.equals(exit)) -->Line_8 $$ return false[ CD ]
Line_2 $$ public boolean acceptStatementPair(Integer head, Integer exit) -->Line_12 $$ return true[ CD ]
Line_5 $$ if (!head.equals(mapExceptionDoms.get(entry.getKey()))) -->Line_7 $$ if (filterExit.intValue() == -1 || !filterExit.equals(exit)) [ CD ]
