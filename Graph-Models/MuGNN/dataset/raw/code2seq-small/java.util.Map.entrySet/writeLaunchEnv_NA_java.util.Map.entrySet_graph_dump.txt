Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_9 $$ if (resources != null) [ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_23 $$ out.close()[ FD ]
Line_10 $$ for (Map.Entry<Path, List<String>> entry : resources.entrySet()) -->Line_12 $$ sb.symlink(entry.getKey(), new Path(linkName))[ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_22 $$ if (out != null) [ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_5 $$ for (Map.Entry<String, String> env : environment.entrySet()) [ FD ]
Line_3 $$ ShellScriptBuilder sb = ShellScriptBuilder.create()-->Line_6 $$ sb.env(env.getKey().toString(), env.getValue().toString())[ FD ]
Line_3 $$ ShellScriptBuilder sb = ShellScriptBuilder.create()-->Line_16 $$ sb.command(command)[ FD ]
Line_5 $$ for (Map.Entry<String, String> env : environment.entrySet()) -->Line_6 $$ sb.env(env.getKey().toString(), env.getValue().toString())[ FD ]
Line_17 $$ PrintStream pout = null-->Line_19 $$ pout = new PrintStream(out)[ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_16 $$ sb.command(command)[ CD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_4 $$ if (environment != null) [ CD ]
Line_19 $$ pout = new PrintStream(out)-->Line_20 $$ sb.write(pout)[ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_17 $$ PrintStream pout = null[ CD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_10 $$ for (Map.Entry<Path, List<String>> entry : resources.entrySet()) [ FD ]
Line_3 $$ ShellScriptBuilder sb = ShellScriptBuilder.create()-->Line_20 $$ sb.write(pout)[ FD ]
Line_22 $$ if (out != null) -->Line_23 $$ out.close()[ CD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_4 $$ if (environment != null) [ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_16 $$ sb.command(command)[ FD ]
Line_17 $$ PrintStream pout = null-->Line_20 $$ sb.write(pout)[ FD ]
Line_3 $$ ShellScriptBuilder sb = ShellScriptBuilder.create()-->Line_12 $$ sb.symlink(entry.getKey(), new Path(linkName))[ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_3 $$ ShellScriptBuilder sb = ShellScriptBuilder.create()[ CD ]
Line_10 $$ for (Map.Entry<Path, List<String>> entry : resources.entrySet()) -->Line_11 $$ for (String linkName : entry.getValue()) [ FD ]
Line_2 $$ static void writeLaunchEnv(OutputStream out, Map<String, String> environment, Map<Path, List<String>> resources, List<String> command) throws IOException -->Line_9 $$ if (resources != null) [ CD ]
