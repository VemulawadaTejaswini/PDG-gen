Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_16 $$ HttpRequestBuilder httpRequestBuilder = callApiBuilder(apiName, requestParams, body)[ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_25 $$ RestResponse restResponse = new RestResponse(httpResponse)[ CD ]
Line_3 $$ List<Integer> ignores = new ArrayList()-->Line_23 $$ ignores.add(404)[ FD ]
Line_3 $$ List<Integer> ignores = new ArrayList()-->Line_10 $$ ignores.add(Integer.valueOf(ignoreString))[ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_27 $$ return restResponse[ CD ]
Line_7 $$ String ignoreString = requestParams.remove("ignore")-->Line_10 $$ ignores.add(Integer.valueOf(ignoreString))[ FD ]
Line_21 $$ HttpResponse httpResponse = httpRequestBuilder.execute()-->Line_22 $$ if (!httpResponse.supportsBody()) [ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_22 $$ if (!httpResponse.supportsBody()) [ CD ]
Line_7 $$ String ignoreString = requestParams.remove("ignore")-->Line_8 $$ if (Strings.hasLength(ignoreString)) [ FD ]
Line_5 $$ if (params != null) -->Line_7 $$ String ignoreString = requestParams.remove("ignore")[ CD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_26 $$ checkStatusCode(restResponse, ignores)[ CD ]
Line_5 $$ if (params != null) -->Line_6 $$ requestParams = new HashMap(params)[ CD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_16 $$ HttpRequestBuilder httpRequestBuilder = callApiBuilder(apiName, requestParams, body)[ CD ]
Line_22 $$ if (!httpResponse.supportsBody()) -->Line_23 $$ ignores.add(404)[ CD ]
Line_17 $$ for (Map.Entry<String, String> header : headers.entrySet()) -->Line_18 $$ httpRequestBuilder.addHeader(header.getKey(), header.getValue())[ FD ]
Line_4 $$ Map<String, String> requestParams = null-->Line_6 $$ requestParams = new HashMap(params)[ FD ]
Line_25 $$ RestResponse restResponse = new RestResponse(httpResponse)-->Line_26 $$ checkStatusCode(restResponse, ignores)[ FD ]
Line_16 $$ HttpRequestBuilder httpRequestBuilder = callApiBuilder(apiName, requestParams, body)-->Line_18 $$ httpRequestBuilder.addHeader(header.getKey(), header.getValue())[ FD ]
Line_4 $$ Map<String, String> requestParams = null-->Line_7 $$ String ignoreString = requestParams.remove("ignore")[ FD ]
Line_16 $$ HttpRequestBuilder httpRequestBuilder = callApiBuilder(apiName, requestParams, body)-->Line_21 $$ HttpResponse httpResponse = httpRequestBuilder.execute()[ FD ]
Line_3 $$ List<Integer> ignores = new ArrayList()-->Line_26 $$ checkStatusCode(restResponse, ignores)[ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_20 $$ logger.debug("calling api [[ CD ]
Line_6 $$ requestParams = new HashMap(params)-->Line_16 $$ HttpRequestBuilder httpRequestBuilder = callApiBuilder(apiName, requestParams, body)[ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_5 $$ if (params != null) [ CD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_5 $$ if (params != null) [ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_20 $$ logger.debug("calling api [[ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_17 $$ for (Map.Entry<String, String> header : headers.entrySet()) [ FD ]
Line_4 $$ Map<String, String> requestParams = null-->Line_16 $$ HttpRequestBuilder httpRequestBuilder = callApiBuilder(apiName, requestParams, body)[ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_3 $$ List<Integer> ignores = new ArrayList()[ CD ]
Line_6 $$ requestParams = new HashMap(params)-->Line_7 $$ String ignoreString = requestParams.remove("ignore")[ FD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_4 $$ Map<String, String> requestParams = null[ CD ]
Line_2 $$ public RestResponse callApi(String apiName, Map<String, String> params, String body, Map<String, String> headers) throws IOException, RestException -->Line_21 $$ HttpResponse httpResponse = httpRequestBuilder.execute()[ CD ]
Line_5 $$ if (params != null) -->Line_8 $$ if (Strings.hasLength(ignoreString)) [ CD ]
