Line_4 $$ for (Map.Entry<?, ?> entry : map.entrySet()) -->Line_8 $$ message.setObject((String) entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ protected MapMessage createMessageForMap(Map<?, ?> map, Session session) throws JMSException -->Line_3 $$ MapMessage message = session.createMapMessage()[ FD ]
Line_3 $$ MapMessage message = session.createMapMessage()-->Line_8 $$ message.setObject((String) entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ protected MapMessage createMessageForMap(Map<?, ?> map, Session session) throws JMSException -->Line_10 $$ return message[ CD ]
Line_4 $$ for (Map.Entry<?, ?> entry : map.entrySet()) -->Line_5 $$ if (!(entry.getKey() instanceof String)) [ FD ]
Line_2 $$ protected MapMessage createMessageForMap(Map<?, ?> map, Session session) throws JMSException -->Line_4 $$ for (Map.Entry<?, ?> entry : map.entrySet()) [ FD ]
Line_4 $$ for (Map.Entry<?, ?> entry : map.entrySet()) -->Line_6 $$ throw new MessageConversionException("Cannot convert non-String key of type [" + ObjectUtils.nullSafeClassName(entry.getKey()) + "] to JMS MapMessage entry")[ FD ]
Line_2 $$ protected MapMessage createMessageForMap(Map<?, ?> map, Session session) throws JMSException -->Line_3 $$ MapMessage message = session.createMapMessage()[ CD ]
