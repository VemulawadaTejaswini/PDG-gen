Line_36 $$ for (Map.Entry<Long, String> entry : assetVocabularyAssetCategoryIds.entrySet()) -->Line_38 $$ String assetCategoryIds = entry.getValue()[ FD ]
Line_9 $$ if (addPortletURL == null) -->Line_10 $$ return null[ CD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_13 $$ addPortletURL.setParameter("redirect", redirect)[ FD ]
Line_23 $$ for (long assetCategoryId : allAssetCategoryIds) -->Line_24 $$ AssetCategory assetCategory = AssetCategoryLocalServiceUtil.fetchAssetCategory(assetCategoryId)[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_46 $$ addPortletURL.setPortletMode(PortletMode.VIEW)[ CD ]
Line_16 $$ if (Validator.isNotNull(referringPortletResource)) -->Line_19 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ CD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) liferayPortletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_16 $$ if (Validator.isNotNull(referringPortletResource)) [ CD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_13 $$ addPortletURL.setParameter("redirect", redirect)[ FD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_43 $$ addPortletURL.setParameter("assetTagNames", StringUtil.merge(allAssetTagNames))[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_5 $$ if ((assetRendererFactory == null) || !assetRendererFactory.hasAddPermission(themeDisplay.getPermissionChecker(), groupId, classTypeId)) [ CD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_20 $$ addPortletURL.setParameter("referringPortletResource", portletDisplay.getId())[ FD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_17 $$ addPortletURL.setParameter("referringPortletResource", referringPortletResource)[ FD ]
Line_19 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()-->Line_20 $$ addPortletURL.setParameter("referringPortletResource", portletDisplay.getId())[ FD ]
Line_4 $$ AssetRendererFactory<?> assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className)-->Line_5 $$ if ((assetRendererFactory == null) || !assetRendererFactory.hasAddPermission(themeDisplay.getPermissionChecker(), groupId, classTypeId)) [ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) liferayPortletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_15 $$ String referringPortletResource = ParamUtil.getString(liferayPortletRequest, "portletResource")-->Line_17 $$ addPortletURL.setParameter("referringPortletResource", referringPortletResource)[ FD ]
Line_24 $$ AssetCategory assetCategory = AssetCategoryLocalServiceUtil.fetchAssetCategory(assetCategoryId)-->Line_28 $$ long assetVocabularyId = assetCategory.getVocabularyId()[ FD ]
Line_4 $$ AssetRendererFactory<?> assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className)-->Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) liferayPortletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_19 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ FD ]
Line_22 $$ Map<Long, String> assetVocabularyAssetCategoryIds = new HashMap()-->Line_30 $$ String assetCategoryIds = assetVocabularyAssetCategoryIds.get(assetVocabularyId)[ FD ]
Line_21 $$ if (allAssetCategoryIds != null) -->Line_22 $$ Map<Long, String> assetVocabularyAssetCategoryIds = new HashMap()[ CD ]
Line_29 $$ if (assetVocabularyAssetCategoryIds.containsKey(assetVocabularyId)) -->Line_31 $$ assetVocabularyAssetCategoryIds.put(assetVocabularyId, assetCategoryIds + StringPool.COMMA + assetCategoryId)[ CD ]
Line_22 $$ Map<Long, String> assetVocabularyAssetCategoryIds = new HashMap()-->Line_31 $$ assetVocabularyAssetCategoryIds.put(assetVocabularyId, assetCategoryIds + StringPool.COMMA + assetCategoryId)[ FD ]
Line_22 $$ Map<Long, String> assetVocabularyAssetCategoryIds = new HashMap()-->Line_33 $$ assetVocabularyAssetCategoryIds.put(assetVocabularyId, String.valueOf(assetCategoryId))[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_15 $$ String referringPortletResource = ParamUtil.getString(liferayPortletRequest, "portletResource")[ FD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_47 $$ addPortletURL.setWindowState(LiferayWindowState.POP_UP)[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_21 $$ if (allAssetCategoryIds != null) [ FD ]
Line_12 $$ if (redirect != null) -->Line_13 $$ addPortletURL.setParameter("redirect", redirect)[ CD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_46 $$ addPortletURL.setPortletMode(PortletMode.VIEW)[ FD ]
Line_16 $$ if (Validator.isNotNull(referringPortletResource)) -->Line_20 $$ addPortletURL.setParameter("referringPortletResource", portletDisplay.getId())[ CD ]
Line_15 $$ String referringPortletResource = ParamUtil.getString(liferayPortletRequest, "portletResource")-->Line_16 $$ if (Validator.isNotNull(referringPortletResource)) [ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) liferayPortletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_5 $$ if ((assetRendererFactory == null) || !assetRendererFactory.hasAddPermission(themeDisplay.getPermissionChecker(), groupId, classTypeId)) [ FD ]
Line_36 $$ for (Map.Entry<Long, String> entry : assetVocabularyAssetCategoryIds.entrySet()) -->Line_37 $$ long assetVocabularyId = entry.getKey()[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_9 $$ if (addPortletURL == null) [ CD ]
Line_22 $$ Map<Long, String> assetVocabularyAssetCategoryIds = new HashMap()-->Line_29 $$ if (assetVocabularyAssetCategoryIds.containsKey(assetVocabularyId)) [ FD ]
Line_16 $$ if (Validator.isNotNull(referringPortletResource)) -->Line_21 $$ if (allAssetCategoryIds != null) [ CD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_4 $$ AssetRendererFactory<?> assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className)[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_4 $$ AssetRendererFactory<?> assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className)[ CD ]
Line_29 $$ if (assetVocabularyAssetCategoryIds.containsKey(assetVocabularyId)) -->Line_30 $$ String assetCategoryIds = assetVocabularyAssetCategoryIds.get(assetVocabularyId)[ CD ]
Line_28 $$ long assetVocabularyId = assetCategory.getVocabularyId()-->Line_30 $$ String assetCategoryIds = assetVocabularyAssetCategoryIds.get(assetVocabularyId)[ FD ]
Line_29 $$ if (assetVocabularyAssetCategoryIds.containsKey(assetVocabularyId)) -->Line_33 $$ assetVocabularyAssetCategoryIds.put(assetVocabularyId, String.valueOf(assetCategoryId))[ CD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_9 $$ if (addPortletURL == null) [ FD ]
Line_16 $$ if (Validator.isNotNull(referringPortletResource)) -->Line_17 $$ addPortletURL.setParameter("referringPortletResource", referringPortletResource)[ CD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)[ CD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_48 $$ return addPortletURL[ CD ]
Line_23 $$ for (long assetCategoryId : allAssetCategoryIds) -->Line_33 $$ assetVocabularyAssetCategoryIds.put(assetVocabularyId, String.valueOf(assetCategoryId))[ FD ]
Line_28 $$ long assetVocabularyId = assetCategory.getVocabularyId()-->Line_31 $$ assetVocabularyAssetCategoryIds.put(assetVocabularyId, assetCategoryIds + StringPool.COMMA + assetCategoryId)[ FD ]
Line_28 $$ long assetVocabularyId = assetCategory.getVocabularyId()-->Line_29 $$ if (assetVocabularyAssetCategoryIds.containsKey(assetVocabularyId)) [ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_43 $$ addPortletURL.setParameter("assetTagNames", StringUtil.merge(allAssetTagNames))[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_12 $$ if (redirect != null) [ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_15 $$ String referringPortletResource = ParamUtil.getString(liferayPortletRequest, "portletResource")[ CD ]
Line_16 $$ if (Validator.isNotNull(referringPortletResource)) -->Line_42 $$ if (allAssetTagNames != null) [ CD ]
Line_24 $$ AssetCategory assetCategory = AssetCategoryLocalServiceUtil.fetchAssetCategory(assetCategoryId)-->Line_25 $$ if (assetCategory == null) [ FD ]
Line_42 $$ if (allAssetTagNames != null) -->Line_43 $$ addPortletURL.setParameter("assetTagNames", StringUtil.merge(allAssetTagNames))[ CD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_5 $$ if ((assetRendererFactory == null) || !assetRendererFactory.hasAddPermission(themeDisplay.getPermissionChecker(), groupId, classTypeId)) [ FD ]
Line_5 $$ if ((assetRendererFactory == null) || !assetRendererFactory.hasAddPermission(themeDisplay.getPermissionChecker(), groupId, classTypeId)) -->Line_6 $$ return null[ CD ]
Line_28 $$ long assetVocabularyId = assetCategory.getVocabularyId()-->Line_33 $$ assetVocabularyAssetCategoryIds.put(assetVocabularyId, String.valueOf(assetCategoryId))[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_47 $$ addPortletURL.setWindowState(LiferayWindowState.POP_UP)[ CD ]
Line_22 $$ Map<Long, String> assetVocabularyAssetCategoryIds = new HashMap()-->Line_36 $$ for (Map.Entry<Long, String> entry : assetVocabularyAssetCategoryIds.entrySet()) [ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_12 $$ if (redirect != null) [ CD ]
Line_30 $$ String assetCategoryIds = assetVocabularyAssetCategoryIds.get(assetVocabularyId)-->Line_39 $$ addPortletURL.setParameter("assetCategoryIds_" + assetVocabularyId, assetCategoryIds)[ FD ]
Line_8 $$ PortletURL addPortletURL = assetRendererFactory.getURLAdd(liferayPortletRequest, liferayPortletResponse, classTypeId)-->Line_39 $$ addPortletURL.setParameter("assetCategoryIds_" + assetVocabularyId, assetCategoryIds)[ FD ]
Line_2 $$ public static PortletURL getAddPortletURL(LiferayPortletRequest liferayPortletRequest, LiferayPortletResponse liferayPortletResponse, long groupId, String className, long classTypeId, long[] allAssetCategoryIds, String[] allAssetTagNames, String redirect) throws Exception -->Line_42 $$ if (allAssetTagNames != null) [ FD ]
