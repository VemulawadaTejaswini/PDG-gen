Line_15 $$ Terms commentersTerms = childrenBucket.getAggregations().get("commenters")-->Line_19 $$ Terms.Bucket commentBucket = commentersTerms.getBucketByKey(entry2.getKey())[ FD ]
Line_18 $$ for (Map.Entry<String, Set<String>> entry2 : entry1.getValue().commenterToCommentId.entrySet()) -->Line_21 $$ assertThat(commentBucket.getDocCount(), equalTo((long) entry2.getValue().size()))[ FD ]
Line_22 $$ TopHits topHits = commentBucket.getAggregations().get("top_comments")-->Line_23 $$ for (SearchHit searchHit : topHits.getHits().getHits()) [ FD ]
Line_7 $$ for (Map.Entry<String, Control> entry1 : categoryToControl.entrySet()) -->Line_9 $$ assertThat(categoryBucket.getKeyAsString(), equalTo(entry1.getKey()))[ FD ]
Line_7 $$ for (Map.Entry<String, Control> entry1 : categoryToControl.entrySet()) -->Line_18 $$ for (Map.Entry<String, Set<String>> entry2 : entry1.getValue().commenterToCommentId.entrySet()) [ FD ]
Line_2 $$ public void testChildrenAggs() throws Exception -->Line_6 $$ assertThat(categoryTerms.getBuckets().size(), equalTo(categoryToControl.size()))[ CD ]
Line_11 $$ Children childrenBucket = categoryBucket.getAggregations().get("to_comment")-->Line_16 $$ assertThat((Terms) childrenBucket.getProperty("commenters"), sameInstance(commentersTerms))[ FD ]
Line_7 $$ for (Map.Entry<String, Control> entry1 : categoryToControl.entrySet()) -->Line_14 $$ assertThat((long) childrenBucket.getProperty("_count"), equalTo((long) entry1.getValue().commentIds.size()))[ FD ]
Line_7 $$ for (Map.Entry<String, Control> entry1 : categoryToControl.entrySet()) -->Line_13 $$ assertThat(childrenBucket.getDocCount(), equalTo((long) entry1.getValue().commentIds.size()))[ FD ]
Line_23 $$ for (SearchHit searchHit : topHits.getHits().getHits()) -->Line_24 $$ assertThat(entry2.getValue().contains(searchHit.getId()), is(true))[ FD ]
Line_11 $$ Children childrenBucket = categoryBucket.getAggregations().get("to_comment")-->Line_14 $$ assertThat((long) childrenBucket.getProperty("_count"), equalTo((long) entry1.getValue().commentIds.size()))[ FD ]
Line_7 $$ for (Map.Entry<String, Control> entry1 : categoryToControl.entrySet()) -->Line_17 $$ assertThat(commentersTerms.getBuckets().size(), equalTo(entry1.getValue().commenterToCommentId.size()))[ FD ]
Line_11 $$ Children childrenBucket = categoryBucket.getAggregations().get("to_comment")-->Line_13 $$ assertThat(childrenBucket.getDocCount(), equalTo((long) entry1.getValue().commentIds.size()))[ FD ]
Line_8 $$ Terms.Bucket categoryBucket = categoryTerms.getBucketByKey(entry1.getKey())-->Line_11 $$ Children childrenBucket = categoryBucket.getAggregations().get("to_comment")[ FD ]
Line_2 $$ public void testChildrenAggs() throws Exception -->Line_5 $$ Terms categoryTerms = searchResponse.getAggregations().get("category")[ CD ]
Line_8 $$ Terms.Bucket categoryBucket = categoryTerms.getBucketByKey(entry1.getKey())-->Line_10 $$ assertThat(categoryBucket.getDocCount(), equalTo((long) entry1.getValue().articleIds.size()))[ FD ]
Line_7 $$ for (Map.Entry<String, Control> entry1 : categoryToControl.entrySet()) -->Line_10 $$ assertThat(categoryBucket.getDocCount(), equalTo((long) entry1.getValue().articleIds.size()))[ FD ]
Line_18 $$ for (Map.Entry<String, Set<String>> entry2 : entry1.getValue().commenterToCommentId.entrySet()) -->Line_19 $$ Terms.Bucket commentBucket = commentersTerms.getBucketByKey(entry2.getKey())[ FD ]
Line_15 $$ Terms commentersTerms = childrenBucket.getAggregations().get("commenters")-->Line_16 $$ assertThat((Terms) childrenBucket.getProperty("commenters"), sameInstance(commentersTerms))[ FD ]
Line_11 $$ Children childrenBucket = categoryBucket.getAggregations().get("to_comment")-->Line_12 $$ assertThat(childrenBucket.getName(), equalTo("to_comment"))[ FD ]
Line_8 $$ Terms.Bucket categoryBucket = categoryTerms.getBucketByKey(entry1.getKey())-->Line_9 $$ assertThat(categoryBucket.getKeyAsString(), equalTo(entry1.getKey()))[ FD ]
Line_15 $$ Terms commentersTerms = childrenBucket.getAggregations().get("commenters")-->Line_17 $$ assertThat(commentersTerms.getBuckets().size(), equalTo(entry1.getValue().commenterToCommentId.size()))[ FD ]
Line_3 $$ SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchQuery("randomized", true)).addAggregation(terms("category").field("category").size(0).subAggregation(children("to_comment").childType("comment").subAggregation(terms("commenters").field("commenter").size(0).subAggregation(topHits("top_comments"))))).get()-->Line_4 $$ assertSearchResponse(searchResponse)[ FD ]
Line_5 $$ Terms categoryTerms = searchResponse.getAggregations().get("category")-->Line_8 $$ Terms.Bucket categoryBucket = categoryTerms.getBucketByKey(entry1.getKey())[ FD ]
Line_19 $$ Terms.Bucket commentBucket = commentersTerms.getBucketByKey(entry2.getKey())-->Line_21 $$ assertThat(commentBucket.getDocCount(), equalTo((long) entry2.getValue().size()))[ FD ]
Line_2 $$ public void testChildrenAggs() throws Exception -->Line_4 $$ assertSearchResponse(searchResponse)[ CD ]
Line_2 $$ public void testChildrenAggs() throws Exception -->Line_3 $$ SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchQuery("randomized", true)).addAggregation(terms("category").field("category").size(0).subAggregation(children("to_comment").childType("comment").subAggregation(terms("commenters").field("commenter").size(0).subAggregation(topHits("top_comments"))))).get()[ CD ]
Line_5 $$ Terms categoryTerms = searchResponse.getAggregations().get("category")-->Line_6 $$ assertThat(categoryTerms.getBuckets().size(), equalTo(categoryToControl.size()))[ FD ]
Line_11 $$ Children childrenBucket = categoryBucket.getAggregations().get("to_comment")-->Line_15 $$ Terms commentersTerms = childrenBucket.getAggregations().get("commenters")[ FD ]
Line_7 $$ for (Map.Entry<String, Control> entry1 : categoryToControl.entrySet()) -->Line_8 $$ Terms.Bucket categoryBucket = categoryTerms.getBucketByKey(entry1.getKey())[ FD ]
Line_18 $$ for (Map.Entry<String, Set<String>> entry2 : entry1.getValue().commenterToCommentId.entrySet()) -->Line_24 $$ assertThat(entry2.getValue().contains(searchHit.getId()), is(true))[ FD ]
Line_18 $$ for (Map.Entry<String, Set<String>> entry2 : entry1.getValue().commenterToCommentId.entrySet()) -->Line_20 $$ assertThat(commentBucket.getKeyAsString(), equalTo(entry2.getKey()))[ FD ]
Line_19 $$ Terms.Bucket commentBucket = commentersTerms.getBucketByKey(entry2.getKey())-->Line_22 $$ TopHits topHits = commentBucket.getAggregations().get("top_comments")[ FD ]
Line_19 $$ Terms.Bucket commentBucket = commentersTerms.getBucketByKey(entry2.getKey())-->Line_20 $$ assertThat(commentBucket.getKeyAsString(), equalTo(entry2.getKey()))[ FD ]
Line_3 $$ SearchResponse searchResponse = client().prepareSearch("test").setQuery(matchQuery("randomized", true)).addAggregation(terms("category").field("category").size(0).subAggregation(children("to_comment").childType("comment").subAggregation(terms("commenters").field("commenter").size(0).subAggregation(topHits("top_comments"))))).get()-->Line_5 $$ Terms categoryTerms = searchResponse.getAggregations().get("category")[ FD ]
