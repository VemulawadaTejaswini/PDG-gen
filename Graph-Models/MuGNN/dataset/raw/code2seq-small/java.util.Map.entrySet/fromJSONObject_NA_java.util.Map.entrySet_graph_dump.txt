Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_4 $$ parsed = Json.decodeJson((String) parsed)[ FD ]
Line_4 $$ parsed = Json.decodeJson((String) parsed)-->Line_6 $$ throw new MarshalException(String.format("Expected a map, but got a %s: %s", parsed.getClass().getSimpleName(), parsed))[ FD ]
Line_3 $$ if (parsed instanceof String)-->Line_4 $$ parsed = Json.decodeJson((String) parsed)[ CD ]
Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_3 $$ if (parsed instanceof String)[ FD ]
Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_5 $$ if (!(parsed instanceof Map))[ CD ]
Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_7 $$ Map<Object, Object> map = (Map<Object, Object>) parsed[ CD ]
Line_8 $$ Map<Term, Term> terms = new HashMap(map.size())-->Line_14 $$ terms.put(keys.fromJSONObject(entry.getKey()), values.fromJSONObject(entry.getValue()))[ FD ]
Line_7 $$ Map<Object, Object> map = (Map<Object, Object>) parsed-->Line_8 $$ Map<Term, Term> terms = new HashMap(map.size())[ FD ]
Line_9 $$ for (Map.Entry<Object, Object> entry : map.entrySet()) -->Line_14 $$ terms.put(keys.fromJSONObject(entry.getKey()), values.fromJSONObject(entry.getValue()))[ FD ]
Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_16 $$ return new Maps.DelayedValue(keys, terms)[ CD ]
Line_9 $$ for (Map.Entry<Object, Object> entry : map.entrySet()) -->Line_10 $$ if (entry.getKey() == null)[ FD ]
Line_7 $$ Map<Object, Object> map = (Map<Object, Object>) parsed-->Line_9 $$ for (Map.Entry<Object, Object> entry : map.entrySet()) [ FD ]
Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_3 $$ if (parsed instanceof String)[ CD ]
Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_8 $$ Map<Term, Term> terms = new HashMap(map.size())[ CD ]
Line_9 $$ for (Map.Entry<Object, Object> entry : map.entrySet()) -->Line_12 $$ if (entry.getValue() == null)[ FD ]
Line_2 $$ public Term fromJSONObject(Object parsed) throws MarshalException -->Line_6 $$ throw new MarshalException(String.format("Expected a map, but got a %s: %s", parsed.getClass().getSimpleName(), parsed))[ FD ]
