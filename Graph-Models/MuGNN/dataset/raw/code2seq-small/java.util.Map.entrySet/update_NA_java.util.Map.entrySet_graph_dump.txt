Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) -->Line_5 $$ if (!source.containsKey(changesEntry.getKey())) [ FD ]
Line_12 $$ modified |= update((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified)-->Line_20 $$ modified = true[ FD ]
Line_11 $$ if (old instanceof Map && changesEntry.getValue() instanceof Map) -->Line_12 $$ modified |= update((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified)[ CD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_3 $$ boolean modified = false[ CD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_6 $$ source.put(changesEntry.getKey(), changesEntry.getValue())[ FD ]
Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) -->Line_12 $$ modified |= update((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified)[ FD ]
Line_3 $$ boolean modified = false-->Line_7 $$ modified = true[ FD ]
Line_3 $$ boolean modified = false-->Line_20 $$ modified = true[ FD ]
Line_7 $$ modified = true-->Line_23 $$ modified = !Objects.equals(old, changesEntry.getValue())[ FD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_5 $$ if (!source.containsKey(changesEntry.getKey())) [ FD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_12 $$ modified |= update((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified)[ FD ]
Line_3 $$ boolean modified = false-->Line_12 $$ modified |= update((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified)[ FD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) [ FD ]
Line_3 $$ boolean modified = false-->Line_23 $$ modified = !Objects.equals(old, changesEntry.getValue())[ FD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_15 $$ source.put(changesEntry.getKey(), changesEntry.getValue())[ FD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_19 $$ if (!checkUpdatesAreUnequal) [ FD ]
Line_10 $$ Object old = source.get(changesEntry.getKey())-->Line_23 $$ modified = !Objects.equals(old, changesEntry.getValue())[ FD ]
Line_7 $$ modified = true-->Line_20 $$ modified = true[ FD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_25 $$ return modified[ CD ]
Line_5 $$ if (!source.containsKey(changesEntry.getKey())) -->Line_6 $$ source.put(changesEntry.getKey(), changesEntry.getValue())[ CD ]
Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) -->Line_10 $$ Object old = source.get(changesEntry.getKey())[ FD ]
Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) -->Line_11 $$ if (old instanceof Map && changesEntry.getValue() instanceof Map) [ FD ]
Line_12 $$ modified |= update((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified)-->Line_23 $$ modified = !Objects.equals(old, changesEntry.getValue())[ FD ]
Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) -->Line_6 $$ source.put(changesEntry.getKey(), changesEntry.getValue())[ FD ]
Line_5 $$ if (!source.containsKey(changesEntry.getKey())) -->Line_7 $$ modified = true[ CD ]
Line_7 $$ modified = true-->Line_12 $$ modified |= update((Map<String, Object>) source.get(changesEntry.getKey()), (Map<String, Object>) changesEntry.getValue(), checkUpdatesAreUnequal && !modified)[ FD ]
Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) -->Line_15 $$ source.put(changesEntry.getKey(), changesEntry.getValue())[ FD ]
Line_4 $$ for (Map.Entry<String, Object> changesEntry : changes.entrySet()) -->Line_23 $$ modified = !Objects.equals(old, changesEntry.getValue())[ FD ]
Line_20 $$ modified = true-->Line_23 $$ modified = !Objects.equals(old, changesEntry.getValue())[ FD ]
Line_2 $$ public static boolean update(Map<String, Object> source, Map<String, Object> changes, boolean checkUpdatesAreUnequal) -->Line_10 $$ Object old = source.get(changesEntry.getKey())[ FD ]
Line_19 $$ if (!checkUpdatesAreUnequal) -->Line_20 $$ modified = true[ CD ]
