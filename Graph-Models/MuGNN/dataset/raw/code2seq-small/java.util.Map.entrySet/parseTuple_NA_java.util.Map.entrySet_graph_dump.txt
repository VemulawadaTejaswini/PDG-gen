Line_2 $$ public Tuple<String, Object> parseTuple() throws IOException, RestTestParseException -->Line_12 $$ return Tuple.tuple(entry.getKey(), entry.getValue())[ CD ]
Line_2 $$ public Tuple<String, Object> parseTuple() throws IOException, RestTestParseException -->Line_11 $$ Map.Entry<String, Object> entry = map.entrySet().iterator().next()[ CD ]
Line_2 $$ public Tuple<String, Object> parseTuple() throws IOException, RestTestParseException -->Line_8 $$ if (map.size() != 1) [ CD ]
Line_2 $$ public Tuple<String, Object> parseTuple() throws IOException, RestTestParseException -->Line_5 $$ Map<String, Object> map = parser.map()[ CD ]
Line_2 $$ public Tuple<String, Object> parseTuple() throws IOException, RestTestParseException -->Line_7 $$ parser.nextToken()[ CD ]
Line_5 $$ Map<String, Object> map = parser.map()-->Line_8 $$ if (map.size() != 1) [ FD ]
Line_11 $$ Map.Entry<String, Object> entry = map.entrySet().iterator().next()-->Line_12 $$ return Tuple.tuple(entry.getKey(), entry.getValue())[ FD ]
Line_2 $$ public Tuple<String, Object> parseTuple() throws IOException, RestTestParseException -->Line_3 $$ parser.nextToken()[ CD ]
Line_5 $$ Map<String, Object> map = parser.map()-->Line_11 $$ Map.Entry<String, Object> entry = map.entrySet().iterator().next()[ FD ]
Line_5 $$ Map<String, Object> map = parser.map()-->Line_9 $$ throw new RestTestParseException("expected key value pair but found " + map.size() + " ")[ FD ]
Line_2 $$ public Tuple<String, Object> parseTuple() throws IOException, RestTestParseException -->Line_4 $$ advanceToFieldName()[ CD ]
