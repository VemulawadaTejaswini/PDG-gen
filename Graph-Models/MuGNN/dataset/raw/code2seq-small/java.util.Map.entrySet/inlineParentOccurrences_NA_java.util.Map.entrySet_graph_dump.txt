Line_4 $$ for (Map.Entry<String, String> entry : envs.entrySet()) -->Line_5 $$ String key = entry.getKey()[ FD ]
Line_6 $$ String value = entry.getValue()-->Line_7 $$ if (value != null) [ FD ]
Line_9 $$ if (parentVal != null && containsEnvKeySubstitution(key, value)) -->Line_10 $$ envs.put(key, value.replace("$" + key + "$", parentVal))[ CD ]
Line_4 $$ for (Map.Entry<String, String> entry : envs.entrySet()) -->Line_6 $$ String value = entry.getValue()[ FD ]
Line_6 $$ String value = entry.getValue()-->Line_10 $$ envs.put(key, value.replace("$" + key + "$", parentVal))[ FD ]
Line_2 $$ public static void inlineParentOccurrences(@NotNull Map<String, String> envs) -->Line_3 $$ Map<String, String> parentParams = new HashMap<String, String>(System.getenv())[ CD ]
Line_5 $$ String key = entry.getKey()-->Line_8 $$ String parentVal = parentParams.get(key)[ FD ]
Line_5 $$ String key = entry.getKey()-->Line_10 $$ envs.put(key, value.replace("$" + key + "$", parentVal))[ FD ]
Line_7 $$ if (value != null) -->Line_9 $$ if (parentVal != null && containsEnvKeySubstitution(key, value)) [ CD ]
Line_8 $$ String parentVal = parentParams.get(key)-->Line_10 $$ envs.put(key, value.replace("$" + key + "$", parentVal))[ FD ]
Line_2 $$ public static void inlineParentOccurrences(@NotNull Map<String, String> envs) -->Line_4 $$ for (Map.Entry<String, String> entry : envs.entrySet()) [ FD ]
Line_5 $$ String key = entry.getKey()-->Line_9 $$ if (parentVal != null && containsEnvKeySubstitution(key, value)) [ FD ]
Line_7 $$ if (value != null) -->Line_8 $$ String parentVal = parentParams.get(key)[ CD ]
Line_2 $$ public static void inlineParentOccurrences(@NotNull Map<String, String> envs) -->Line_10 $$ envs.put(key, value.replace("$" + key + "$", parentVal))[ FD ]
Line_3 $$ Map<String, String> parentParams = new HashMap<String, String>(System.getenv())-->Line_8 $$ String parentVal = parentParams.get(key)[ FD ]
Line_6 $$ String value = entry.getValue()-->Line_9 $$ if (parentVal != null && containsEnvKeySubstitution(key, value)) [ FD ]
