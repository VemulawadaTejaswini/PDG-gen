Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_17 $$ Pair<? extends JComponent, String> prevState = stateRef.get()[ CD ]
Line_32 $$ if (e.getSource() instanceof MouseEvent) -->Line_35 $$ component = SwingUtilities.getDeepestComponentAt(component, mouseEvent.getX(), mouseEvent.getY())[ CD ]
Line_23 $$ IdeFrame frame = IdeFrame.KEY.getData(e.getDataContext())-->Line_45 $$ JComponent component = frame.getComponent()[ FD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_47 $$ balloon.show(point, Balloon.Position.below)[ CD ]
Line_21 $$ BalloonBuilder builder = JBPopupFactory.getInstance().createBalloonBuilder(state.getFirst())-->Line_43 $$ balloon = builder.createBalloon()[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_32 $$ if (e.getSource() instanceof MouseEvent) [ FD ]
Line_6 $$ final Ref<Pair<? extends JComponent, String>> stateRef = new Ref<Pair<? extends JComponent, String>>()-->Line_17 $$ Pair<? extends JComponent, String> prevState = stateRef.get()[ FD ]
Line_11 $$ Balloon balloon = balloonRef.get()-->Line_44 $$ balloonRef.set(balloon)[ FD ]
Line_21 $$ BalloonBuilder builder = JBPopupFactory.getInstance().createBalloonBuilder(state.getFirst())-->Line_30 $$ builder.setClickHandler(new ActionListener() [ FD ]
Line_35 $$ component = SwingUtilities.getDeepestComponentAt(component, mouseEvent.getX(), mouseEvent.getY())-->Line_46 $$ RelativePoint point = new RelativePoint(component, new Point(component.getWidth(), 0))[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_23 $$ IdeFrame frame = IdeFrame.KEY.getData(e.getDataContext())[ FD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_43 $$ balloon = builder.createBalloon()[ CD ]
Line_27 $$ if (balloon != null) -->Line_28 $$ balloon.hide()[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_52 $$ timer.start()[ CD ]
Line_8 $$ final Timer timer = new Timer(250, null)-->Line_13 $$ timer.stop()[ FD ]
Line_33 $$ MouseEvent mouseEvent = (MouseEvent) e.getSource()-->Line_35 $$ component = SwingUtilities.getDeepestComponentAt(component, mouseEvent.getX(), mouseEvent.getY())[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_3 $$ final Project project = e.getProject()[ CD ]
Line_16 $$ Pair<? extends JComponent, String> state = getCurrentState(project)-->Line_21 $$ BalloonBuilder builder = JBPopupFactory.getInstance().createBalloonBuilder(state.getFirst())[ FD ]
Line_25 $$ frame = WindowManagerEx.getInstanceEx().getFrame(project)-->Line_45 $$ JComponent component = frame.getComponent()[ FD ]
Line_23 $$ IdeFrame frame = IdeFrame.KEY.getData(e.getDataContext())-->Line_24 $$ if (frame == null) [ FD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_30 $$ builder.setClickHandler(new ActionListener() [ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_44 $$ balloonRef.set(balloon)[ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_12 $$ if (project.isDisposed() || (balloon != null && balloon.isDisposed())) [ CD ]
Line_12 $$ if (project.isDisposed() || (balloon != null && balloon.isDisposed())) -->Line_13 $$ timer.stop()[ CD ]
Line_30 $$ builder.setClickHandler(new ActionListener() -->Line_32 $$ if (e.getSource() instanceof MouseEvent) [ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_7 $$ final Ref<Balloon> balloonRef = new Ref<Balloon>()[ CD ]
Line_34 $$ Component component = mouseEvent.getComponent()-->Line_46 $$ RelativePoint point = new RelativePoint(component, new Point(component.getWidth(), 0))[ FD ]
Line_3 $$ final Project project = e.getProject()-->Line_38 $$ ExecutionManagerImpl.getInstance(project).getContentManager().toFrontRunContent((Executor) ((Pair) value).first, (RunContentDescriptor) ((Pair) value).second)[ FD ]
Line_30 $$ builder.setClickHandler(new ActionListener() -->Line_32 $$ if (e.getSource() instanceof MouseEvent) [ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_50 $$ timer.addActionListener(actionListener)[ FD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_20 $$ stateRef.set(state)[ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_45 $$ JComponent component = frame.getComponent()[ CD ]
Line_8 $$ final Timer timer = new Timer(250, null)-->Line_51 $$ timer.setInitialDelay(0)[ FD ]
Line_3 $$ final Project project = e.getProject()-->Line_4 $$ if (project == null || project.isDisposed())[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_33 $$ MouseEvent mouseEvent = (MouseEvent) e.getSource()[ FD ]
Line_23 $$ IdeFrame frame = IdeFrame.KEY.getData(e.getDataContext())-->Line_25 $$ frame = WindowManagerEx.getInstanceEx().getFrame(project)[ FD ]
Line_32 $$ if (e.getSource() instanceof MouseEvent) -->Line_36 $$ Object value = ((JComponent) component).getClientProperty(KEY)[ CD ]
Line_6 $$ final Ref<Pair<? extends JComponent, String>> stateRef = new Ref<Pair<? extends JComponent, String>>()-->Line_20 $$ stateRef.set(state)[ FD ]
Line_21 $$ BalloonBuilder builder = JBPopupFactory.getInstance().createBalloonBuilder(state.getFirst())-->Line_22 $$ builder.setShowCallout(false).setTitle(ExecutionBundle.message("show.running.list.balloon.title")).setBlockClicksThroughBalloon(true).setDialogMode(true).setHideOnKeyOutside(false)[ FD ]
Line_17 $$ Pair<? extends JComponent, String> prevState = stateRef.get()-->Line_18 $$ if (prevState != null && prevState.getSecond().equals(state.getSecond()))[ FD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_18 $$ if (prevState != null && prevState.getSecond().equals(state.getSecond()))[ CD ]
Line_18 $$ if (prevState != null && prevState.getSecond().equals(state.getSecond()))-->Line_19 $$ return[ CD ]
Line_8 $$ final Timer timer = new Timer(250, null)-->Line_50 $$ timer.addActionListener(actionListener)[ FD ]
Line_16 $$ Pair<? extends JComponent, String> state = getCurrentState(project)-->Line_18 $$ if (prevState != null && prevState.getSecond().equals(state.getSecond()))[ FD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_22 $$ builder.setShowCallout(false).setTitle(ExecutionBundle.message("show.running.list.balloon.title")).setBlockClicksThroughBalloon(true).setDialogMode(true).setHideOnKeyOutside(false)[ CD ]
Line_3 $$ final Project project = e.getProject()-->Line_16 $$ Pair<? extends JComponent, String> state = getCurrentState(project)[ FD ]
Line_7 $$ final Ref<Balloon> balloonRef = new Ref<Balloon>()-->Line_44 $$ balloonRef.set(balloon)[ FD ]
Line_7 $$ final Ref<Balloon> balloonRef = new Ref<Balloon>()-->Line_11 $$ Balloon balloon = balloonRef.get()[ FD ]
Line_32 $$ if (e.getSource() instanceof MouseEvent) -->Line_37 $$ if (value instanceof Pair) [ CD ]
Line_3 $$ final Project project = e.getProject()-->Line_25 $$ frame = WindowManagerEx.getInstanceEx().getFrame(project)[ FD ]
Line_3 $$ final Project project = e.getProject()-->Line_12 $$ if (project.isDisposed() || (balloon != null && balloon.isDisposed())) [ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_51 $$ timer.setInitialDelay(0)[ CD ]
Line_11 $$ Balloon balloon = balloonRef.get()-->Line_12 $$ if (project.isDisposed() || (balloon != null && balloon.isDisposed())) [ FD ]
Line_33 $$ MouseEvent mouseEvent = (MouseEvent) e.getSource()-->Line_34 $$ Component component = mouseEvent.getComponent()[ FD ]
Line_4 $$ if (project == null || project.isDisposed())-->Line_5 $$ return[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_8 $$ final Timer timer = new Timer(250, null)[ CD ]
Line_11 $$ Balloon balloon = balloonRef.get()-->Line_27 $$ if (balloon != null) [ FD ]
Line_24 $$ if (frame == null) -->Line_25 $$ frame = WindowManagerEx.getInstanceEx().getFrame(project)[ CD ]
Line_32 $$ if (e.getSource() instanceof MouseEvent) -->Line_33 $$ MouseEvent mouseEvent = (MouseEvent) e.getSource()[ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_23 $$ IdeFrame frame = IdeFrame.KEY.getData(e.getDataContext())[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_4 $$ if (project == null || project.isDisposed())[ CD ]
Line_36 $$ Object value = ((JComponent) component).getClientProperty(KEY)-->Line_37 $$ if (value instanceof Pair) [ FD ]
Line_32 $$ if (e.getSource() instanceof MouseEvent) -->Line_34 $$ Component component = mouseEvent.getComponent()[ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_11 $$ Balloon balloon = balloonRef.get()[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_3 $$ final Project project = e.getProject()[ FD ]
Line_16 $$ Pair<? extends JComponent, String> state = getCurrentState(project)-->Line_20 $$ stateRef.set(state)[ FD ]
Line_12 $$ if (project.isDisposed() || (balloon != null && balloon.isDisposed())) -->Line_14 $$ return[ CD ]
Line_34 $$ Component component = mouseEvent.getComponent()-->Line_35 $$ component = SwingUtilities.getDeepestComponentAt(component, mouseEvent.getX(), mouseEvent.getY())[ FD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_9 $$ ActionListener actionListener = new ActionListener() [ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_24 $$ if (frame == null) [ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_6 $$ final Ref<Pair<? extends JComponent, String>> stateRef = new Ref<Pair<? extends JComponent, String>>()[ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_16 $$ Pair<? extends JComponent, String> state = getCurrentState(project)[ CD ]
Line_11 $$ Balloon balloon = balloonRef.get()-->Line_47 $$ balloon.show(point, Balloon.Position.below)[ FD ]
Line_30 $$ builder.setClickHandler(new ActionListener() -->Line_33 $$ MouseEvent mouseEvent = (MouseEvent) e.getSource()[ FD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_21 $$ BalloonBuilder builder = JBPopupFactory.getInstance().createBalloonBuilder(state.getFirst())[ CD ]
Line_9 $$ ActionListener actionListener = new ActionListener() -->Line_27 $$ if (balloon != null) [ CD ]
Line_37 $$ if (value instanceof Pair) -->Line_38 $$ ExecutionManagerImpl.getInstance(project).getContentManager().toFrontRunContent((Executor) ((Pair) value).first, (RunContentDescriptor) ((Pair) value).second)[ CD ]
Line_2 $$ public void actionPerformed(final AnActionEvent e) -->Line_50 $$ timer.addActionListener(actionListener)[ CD ]
Line_8 $$ final Timer timer = new Timer(250, null)-->Line_52 $$ timer.start()[ FD ]
Line_11 $$ Balloon balloon = balloonRef.get()-->Line_28 $$ balloon.hide()[ FD ]
