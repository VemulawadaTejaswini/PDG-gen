Line_3 $$ final URI greetingUri = new URI(webAppURL.toExternalForm() + HelloEJBCallServlet.SERVLET_PATH.substring(1) + "?" + HelloEJBCallServlet.PARAM_JNDI_NAME + "=" + URLEncoder.encode("java:app/" + JAR_BASE_NAME + "/" + HelloBean.class.getSimpleName(), "UTF-8"))-->Line_16 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(greetingUri.getHost(), greetingUri.getPort()), credentials)[ FD ]
Line_2 $$ public void test(@ArquillianResource URL webAppURL) throws Exception -->Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()[ CD ]
Line_17 $$ response = httpClient.execute(getGreeting)-->Line_21 $$ response = httpClient.execute(getCounter)[ FD ]
Line_21 $$ response = httpClient.execute(getCounter)-->Line_22 $$ assertEquals("1", EntityUtils.toString(response.getEntity()))[ FD ]
Line_2 $$ public void test(@ArquillianResource URL webAppURL) throws Exception -->Line_3 $$ final URI greetingUri = new URI(webAppURL.toExternalForm() + HelloEJBCallServlet.SERVLET_PATH.substring(1) + "?" + HelloEJBCallServlet.PARAM_JNDI_NAME + "=" + URLEncoder.encode("java:app/" + JAR_BASE_NAME + "/" + HelloBean.class.getSimpleName(), "UTF-8"))[ FD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_13 $$ response = httpClient.execute(getCounter)[ FD ]
Line_19 $$ response = httpClient.execute(getGreeting)-->Line_21 $$ response = httpClient.execute(getCounter)[ FD ]
Line_2 $$ public void test(@ArquillianResource URL webAppURL) throws Exception -->Line_5 $$ LOGGER.info("Requesting URL " + greetingUri)[ CD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_22 $$ assertEquals("1", EntityUtils.toString(response.getEntity()))[ FD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_14 $$ assertEquals("0", EntityUtils.toString(response.getEntity()))[ FD ]
Line_13 $$ response = httpClient.execute(getCounter)-->Line_20 $$ assertEquals("Hello Caller!", EntityUtils.toString(response.getEntity()))[ FD ]
Line_8 $$ final HttpGet getCounter = new HttpGet(counterUri)-->Line_21 $$ response = httpClient.execute(getCounter)[ FD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_17 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_15 $$ final UsernamePasswordCredentials credentials = new UsernamePasswordCredentials("admin", CustomLoginModule.PASSWORD)-->Line_16 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(greetingUri.getHost(), greetingUri.getPort()), credentials)[ FD ]
Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_19 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_19 $$ response = httpClient.execute(getGreeting)-->Line_20 $$ assertEquals("Hello Caller!", EntityUtils.toString(response.getEntity()))[ FD ]
Line_8 $$ final HttpGet getCounter = new HttpGet(counterUri)-->Line_13 $$ response = httpClient.execute(getCounter)[ FD ]
Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_16 $$ httpClient.getCredentialsProvider().setCredentials(new AuthScope(greetingUri.getHost(), greetingUri.getPort()), credentials)[ FD ]
Line_13 $$ response = httpClient.execute(getCounter)-->Line_21 $$ response = httpClient.execute(getCounter)[ FD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_18 $$ assertEquals("Hello Caller!", EntityUtils.toString(response.getEntity()))[ FD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_19 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_20 $$ assertEquals("Hello Caller!", EntityUtils.toString(response.getEntity()))[ FD ]
Line_19 $$ response = httpClient.execute(getGreeting)-->Line_22 $$ assertEquals("1", EntityUtils.toString(response.getEntity()))[ FD ]
Line_13 $$ response = httpClient.execute(getCounter)-->Line_17 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_13 $$ response = httpClient.execute(getCounter)[ FD ]
Line_17 $$ response = httpClient.execute(getGreeting)-->Line_22 $$ assertEquals("1", EntityUtils.toString(response.getEntity()))[ FD ]
Line_2 $$ public void test(@ArquillianResource URL webAppURL) throws Exception -->Line_4 $$ final URI counterUri = new URI(webAppURL.toExternalForm() + LMCounterServlet.SERVLET_PATH.substring(1))[ FD ]
Line_13 $$ response = httpClient.execute(getCounter)-->Line_19 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_2 $$ public void test(@ArquillianResource URL webAppURL) throws Exception -->Line_3 $$ final URI greetingUri = new URI(webAppURL.toExternalForm() + HelloEJBCallServlet.SERVLET_PATH.substring(1) + "?" + HelloEJBCallServlet.PARAM_JNDI_NAME + "=" + URLEncoder.encode("java:app/" + JAR_BASE_NAME + "/" + HelloBean.class.getSimpleName(), "UTF-8"))[ CD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_12 $$ EntityUtils.consume(response.getEntity())[ FD ]
Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)[ FD ]
Line_9 $$ final HttpGet getGreeting = new HttpGet(greetingUri)-->Line_17 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_9 $$ final HttpGet getGreeting = new HttpGet(greetingUri)-->Line_19 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_13 $$ response = httpClient.execute(getCounter)-->Line_22 $$ assertEquals("1", EntityUtils.toString(response.getEntity()))[ FD ]
Line_17 $$ response = httpClient.execute(getGreeting)-->Line_19 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_9 $$ final HttpGet getGreeting = new HttpGet(greetingUri)-->Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)[ FD ]
Line_17 $$ response = httpClient.execute(getGreeting)-->Line_18 $$ assertEquals("Hello Caller!", EntityUtils.toString(response.getEntity()))[ FD ]
Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_21 $$ response = httpClient.execute(getCounter)[ FD ]
Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_17 $$ response = httpClient.execute(getGreeting)[ FD ]
Line_17 $$ response = httpClient.execute(getGreeting)-->Line_20 $$ assertEquals("Hello Caller!", EntityUtils.toString(response.getEntity()))[ FD ]
Line_2 $$ public void test(@ArquillianResource URL webAppURL) throws Exception -->Line_4 $$ final URI counterUri = new URI(webAppURL.toExternalForm() + LMCounterServlet.SERVLET_PATH.substring(1))[ CD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_11 $$ assertEquals(HttpServletResponse.SC_UNAUTHORIZED, response.getStatusLine().getStatusCode())[ FD ]
Line_10 $$ HttpResponse response = httpClient.execute(getGreeting)-->Line_21 $$ response = httpClient.execute(getCounter)[ FD ]
Line_13 $$ response = httpClient.execute(getCounter)-->Line_18 $$ assertEquals("Hello Caller!", EntityUtils.toString(response.getEntity()))[ FD ]
Line_13 $$ response = httpClient.execute(getCounter)-->Line_14 $$ assertEquals("0", EntityUtils.toString(response.getEntity()))[ FD ]
Line_6 $$ final DefaultHttpClient httpClient = new DefaultHttpClient()-->Line_24 $$ httpClient.getConnectionManager().shutdown()[ FD ]
