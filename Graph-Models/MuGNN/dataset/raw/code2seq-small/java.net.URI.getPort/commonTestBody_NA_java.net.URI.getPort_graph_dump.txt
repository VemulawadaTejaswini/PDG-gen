Line_3 $$ long skipBytes = 0-->Line_5 $$ skipBytes = logFilePath.toFile().length()[ FD ]
Line_14 $$ respHdrs = hdrs[1]-->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ FD ]
Line_5 $$ skipBytes = logFilePath.toFile().length()-->Line_16 $$ testLogForDumpWithURL(logFilePath, uri.getPath(), skipBytes, requestDumperOn)[ FD ]
Line_12 $$ if (hdrs != null) -->Line_14 $$ respHdrs = hdrs[1][ CD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_9 $$ Header[] reqHdrs = null[ CD ]
Line_4 $$ if (logFilePath.toFile().exists() && logFilePath.toFile().isFile()) -->Line_7 $$ log.info("The log file ('" + logFilePath + "') does not exist yet, that is ok.")[ CD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_4 $$ if (logFilePath.toFile().exists() && logFilePath.toFile().isFile()) [ CD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_3 $$ long skipBytes = 0[ CD ]
Line_12 $$ if (hdrs != null) -->Line_13 $$ reqHdrs = hdrs[0][ CD ]
Line_17 $$ if (requestDumperOn) -->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ CD ]
Line_10 $$ Header[] respHdrs = null-->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ FD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_11 $$ Header[][] hdrs = performRequest(uri)[ FD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_16 $$ testLogForDumpWithURL(logFilePath, uri.getPath(), skipBytes, requestDumperOn)[ CD ]
Line_9 $$ Header[] reqHdrs = null-->Line_13 $$ reqHdrs = hdrs[0][ FD ]
Line_11 $$ Header[][] hdrs = performRequest(uri)-->Line_12 $$ if (hdrs != null) [ FD ]
Line_9 $$ Header[] reqHdrs = null-->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ FD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_10 $$ Header[] respHdrs = null[ CD ]
Line_10 $$ Header[] respHdrs = null-->Line_14 $$ respHdrs = hdrs[1][ FD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_17 $$ if (requestDumperOn) [ CD ]
Line_13 $$ reqHdrs = hdrs[0]-->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ FD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_11 $$ Header[][] hdrs = performRequest(uri)[ CD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_12 $$ if (hdrs != null) [ CD ]
Line_5 $$ skipBytes = logFilePath.toFile().length()-->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ FD ]
Line_3 $$ long skipBytes = 0-->Line_16 $$ testLogForDumpWithURL(logFilePath, uri.getPath(), skipBytes, requestDumperOn)[ FD ]
Line_3 $$ long skipBytes = 0-->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ FD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_18 $$ checkReqDumpData(logFilePath, skipBytes, reqHdrs, respHdrs, uri.getHost(), uri.getPort(), uri.getPath())[ FD ]
Line_4 $$ if (logFilePath.toFile().exists() && logFilePath.toFile().isFile()) -->Line_5 $$ skipBytes = logFilePath.toFile().length()[ CD ]
Line_2 $$ private void commonTestBody(URI uri, boolean requestDumperOn) throws Exception -->Line_16 $$ testLogForDumpWithURL(logFilePath, uri.getPath(), skipBytes, requestDumperOn)[ FD ]
