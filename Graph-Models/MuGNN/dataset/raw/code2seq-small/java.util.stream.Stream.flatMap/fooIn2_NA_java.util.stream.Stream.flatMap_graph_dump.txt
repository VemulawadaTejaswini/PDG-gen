Line_4 $$ String pathName = entry.getKey()-->Line_5 $$ pathName.equals(specEntry.getKey().getLeft())[ FD ]
Line_2 $$ public Optional<BigDecimal> fooIn2(Map<String, Optional<Object>> values) -->Line_3 $$ return values.entrySet().stream().map( entry -> [ CD ]
Line_7 $$ Number path = specEntryKey.getRight()-->Line_9 $$ return compareFunction.apply(path, value)[ FD ]
Line_6 $$ Pair<String, Number> specEntryKey = specEntry.getKey()-->Line_7 $$ Number path = specEntryKey.getRight()[ FD ]
Line_2 $$ public Optional<BigDecimal> fooIn2(Map<String, Optional<Object>> values) -->Line_3 $$ return values.entrySet().stream().map( entry -> [ FD ]
Line_8 $$ BiFunction<Number, Object, BigDecimal> compareFunction = specEntry.getValue()-->Line_9 $$ return compareFunction.apply(path, value)[ FD ]
