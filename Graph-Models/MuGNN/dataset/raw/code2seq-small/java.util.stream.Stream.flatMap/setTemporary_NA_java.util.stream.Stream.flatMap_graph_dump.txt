Line_3 $$ Collection<Set<File>> temporary = txnFile.committed() ? oldFiles : newFiles-->Line_4 $$ temporary.stream().flatMap(Set::<>stream).forEach(( f) -> this.files.put(f, FileType.TEMPORARY))[ FD ]
Line_2 $$ private void setTemporary(LogFile txnFile, Collection<Set<File>> oldFiles, Collection<Set<File>> newFiles) -->Line_3 $$ Collection<Set<File>> temporary = txnFile.committed() ? oldFiles : newFiles[ CD ]
Line_2 $$ private void setTemporary(LogFile txnFile, Collection<Set<File>> oldFiles, Collection<Set<File>> newFiles) -->Line_4 $$ temporary.stream().flatMap(Set::<>stream).forEach(( f) -> this.files.put(f, FileType.TEMPORARY))[ CD ]
Line_2 $$ private void setTemporary(LogFile txnFile, Collection<Set<File>> oldFiles, Collection<Set<File>> newFiles) -->Line_3 $$ Collection<Set<File>> temporary = txnFile.committed() ? oldFiles : newFiles[ FD ]
