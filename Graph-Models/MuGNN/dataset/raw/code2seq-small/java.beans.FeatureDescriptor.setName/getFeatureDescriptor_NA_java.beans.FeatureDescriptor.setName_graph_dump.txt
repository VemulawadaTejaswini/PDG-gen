Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_7 $$ featureDescriptor.setName(name)[ CD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_4 $$ featureDescriptor.setDisplayName(name)[ CD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_10 $$ featureDescriptor.setValue("resolvableAtDesignTime", Boolean.TRUE)[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_4 $$ featureDescriptor.setDisplayName(name)[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_10 $$ featureDescriptor.setValue("resolvableAtDesignTime", Boolean.TRUE)[ CD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_5 $$ featureDescriptor.setExpert(false)[ CD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_8 $$ featureDescriptor.setPreferred(true)[ CD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_6 $$ featureDescriptor.setHidden(false)[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_6 $$ featureDescriptor.setHidden(false)[ CD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_11 $$ featureDescriptor.setValue("type", value.getClass())[ FD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_4 $$ featureDescriptor.setDisplayName(name)[ FD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_7 $$ featureDescriptor.setName(name)[ FD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_9 $$ featureDescriptor.setShortDescription(scopeName + " scope attribute")[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_11 $$ featureDescriptor.setValue("type", value.getClass())[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()[ CD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_7 $$ featureDescriptor.setName(name)[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_12 $$ return featureDescriptor[ CD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_8 $$ featureDescriptor.setPreferred(true)[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_11 $$ featureDescriptor.setValue("type", value.getClass())[ CD ]
Line_3 $$ FeatureDescriptor featureDescriptor = new FeatureDescriptor()-->Line_5 $$ featureDescriptor.setExpert(false)[ FD ]
Line_2 $$ protected FeatureDescriptor getFeatureDescriptor(String name, Object value, String scopeName) -->Line_9 $$ featureDescriptor.setShortDescription(scopeName + " scope attribute")[ CD ]
