Line_45 $$ if (targetVersion > maxTargetVersion) -->Line_47 $$ disconnect()[ CD ]
Line_56 $$ if (shouldCompressConnection()) -->Line_59 $$ if (targetVersion < MessagingService.VERSION_21) [ CD ]
Line_50 $$ if (targetVersion < maxTargetVersion && targetVersion < MessagingService.current_version) -->Line_51 $$ logger.trace("Detected higher max version [ CD ]
Line_32 $$ int maxTargetVersion = handshakeVersion(in)-->Line_51 $$ logger.trace("Detected higher max version [ FD ]
Line_79 $$ if (logger.isTraceEnabled())-->Line_80 $$ logger.trace("unable to connect to " + poolReference.endPoint(), e)[ CD ]
Line_7 $$ long timeout = TimeUnit.MILLISECONDS.toNanos(DatabaseDescriptor.getRpcTimeout())-->Line_8 $$ while (System.nanoTime() - start < timeout) [ FD ]
Line_32 $$ int maxTargetVersion = handshakeVersion(in)-->Line_46 $$ logger.trace("Target max version is [ FD ]
Line_33 $$ if (maxTargetVersion == NO_VERSION) -->Line_38 $$ if (DatabaseDescriptor.getSeeds().contains(poolReference.endPoint()))[ CD ]
Line_4 $$ if (logger.isTraceEnabled())-->Line_5 $$ logger.trace("attempting to connect to [ CD ]
Line_32 $$ int maxTargetVersion = handshakeVersion(in)-->Line_45 $$ if (targetVersion > maxTargetVersion) [ FD ]
Line_33 $$ if (maxTargetVersion == NO_VERSION) -->Line_40 $$ disconnect()[ CD ]
Line_56 $$ if (shouldCompressConnection()) -->Line_58 $$ logger.trace("Upgrading OutputStream to be compressed")[ CD ]
Line_31 $$ DataInputStream in = new DataInputStream(socket.getInputStream())-->Line_32 $$ int maxTargetVersion = handshakeVersion(in)[ FD ]
Line_32 $$ int maxTargetVersion = handshakeVersion(in)-->Line_43 $$ MessagingService.instance().setVersion(poolReference.endPoint(), maxTargetVersion)[ FD ]
Line_56 $$ if (shouldCompressConnection()) -->Line_57 $$ out.flush()[ CD ]
Line_50 $$ if (targetVersion < maxTargetVersion && targetVersion < MessagingService.current_version) -->Line_52 $$ softCloseSocket()[ CD ]
Line_33 $$ if (maxTargetVersion == NO_VERSION) -->Line_43 $$ MessagingService.instance().setVersion(poolReference.endPoint(), maxTargetVersion)[ CD ]
Line_8 $$ while (System.nanoTime() - start < timeout) -->Line_9 $$ targetVersion = MessagingService.instance().getVersion(poolReference.endPoint())[ CD ]
Line_13 $$ if (isLocalDC(poolReference.endPoint())) -->Line_16 $$ socket.setTcpNoDelay(DatabaseDescriptor.getInterDCTcpNoDelay())[ CD ]
Line_59 $$ if (targetVersion < MessagingService.VERSION_21) -->Line_65 $$ Checksum checksum = XXHashFactory.fastestInstance().newStreamingHash32(LZ4_HASH_SEED).asChecksum()[ CD ]
Line_13 $$ if (isLocalDC(poolReference.endPoint())) -->Line_14 $$ socket.setTcpNoDelay(INTRADC_TCP_NODELAY)[ CD ]
Line_38 $$ if (DatabaseDescriptor.getSeeds().contains(poolReference.endPoint()))-->Line_39 $$ logger.warn("Seed gossip version is [ CD ]
Line_32 $$ int maxTargetVersion = handshakeVersion(in)-->Line_33 $$ if (maxTargetVersion == NO_VERSION) [ FD ]
Line_45 $$ if (targetVersion > maxTargetVersion) -->Line_46 $$ logger.trace("Target max version is [ CD ]
Line_32 $$ int maxTargetVersion = handshakeVersion(in)-->Line_39 $$ logger.warn("Seed gossip version is [ FD ]
Line_45 $$ if (targetVersion > maxTargetVersion) -->Line_48 $$ return false[ CD ]
