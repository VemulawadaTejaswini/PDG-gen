Line_6 $$ Map<K, V> map = ref.get()-->Line_9 $$ map.putAll(candidate)[ FD ]
Line_3 $$ if (candidate == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private static <K, V> void setIfNotNull(@NotNull AtomicReference<Map<K, V>> ref, @Nullable Map<K, V> candidate) -->Line_3 $$ if (candidate == null) [ FD ]
Line_2 $$ private static <K, V> void setIfNotNull(@NotNull AtomicReference<Map<K, V>> ref, @Nullable Map<K, V> candidate) -->Line_3 $$ if (candidate == null) [ CD ]
Line_6 $$ Map<K, V> map = ref.get()-->Line_8 $$ map.clear()[ FD ]
Line_2 $$ private static <K, V> void setIfNotNull(@NotNull AtomicReference<Map<K, V>> ref, @Nullable Map<K, V> candidate) -->Line_7 $$ if (candidate != map) [ FD ]
Line_2 $$ private static <K, V> void setIfNotNull(@NotNull AtomicReference<Map<K, V>> ref, @Nullable Map<K, V> candidate) -->Line_6 $$ Map<K, V> map = ref.get()[ FD ]
Line_2 $$ private static <K, V> void setIfNotNull(@NotNull AtomicReference<Map<K, V>> ref, @Nullable Map<K, V> candidate) -->Line_6 $$ Map<K, V> map = ref.get()[ CD ]
Line_7 $$ if (candidate != map) -->Line_9 $$ map.putAll(candidate)[ CD ]
Line_6 $$ Map<K, V> map = ref.get()-->Line_7 $$ if (candidate != map) [ FD ]
Line_7 $$ if (candidate != map) -->Line_8 $$ map.clear()[ CD ]
Line_2 $$ private static <K, V> void setIfNotNull(@NotNull AtomicReference<Map<K, V>> ref, @Nullable Map<K, V> candidate) -->Line_7 $$ if (candidate != map) [ CD ]
Line_2 $$ private static <K, V> void setIfNotNull(@NotNull AtomicReference<Map<K, V>> ref, @Nullable Map<K, V> candidate) -->Line_9 $$ map.putAll(candidate)[ FD ]
