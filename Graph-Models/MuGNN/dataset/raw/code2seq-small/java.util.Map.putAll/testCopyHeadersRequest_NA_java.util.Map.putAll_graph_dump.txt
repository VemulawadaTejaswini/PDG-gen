Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_18 $$ putHeaders(searchRequest, transportHeaders)[ FD ]
Line_31 $$ IndexRequest indexRequest = Requests.indexRequest()-->Line_32 $$ putHeaders(indexRequest, transportHeaders)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_15 $$ expectedContext.putAll(restContext)[ CD ]
Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_32 $$ putHeaders(indexRequest, transportHeaders)[ FD ]
Line_10 $$ Map<String, String> expectedHeaders = new HashMap()-->Line_36 $$ assertHeaders(indexRequest, expectedHeaders)[ FD ]
Line_31 $$ IndexRequest indexRequest = Requests.indexRequest()-->Line_35 $$ client.index(indexRequest)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_9 $$ Map<String, String> transportContext = onlyOnLeft(randomContext(randomIntBetween(0, 10)), restContext)[ CD ]
Line_17 $$ SearchRequest searchRequest = Requests.searchRequest()-->Line_19 $$ putContext(searchRequest, transportContext)[ FD ]
Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_20 $$ assertHeaders(searchRequest, transportHeaders)[ FD ]
Line_4 $$ Map<String, String> restHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_5 $$ Map<String, String> copiedHeaders = randomHeadersFrom(restHeaders)[ FD ]
Line_31 $$ IndexRequest indexRequest = Requests.indexRequest()-->Line_33 $$ putContext(indexRequest, transportContext)[ FD ]
Line_5 $$ Map<String, String> copiedHeaders = randomHeadersFrom(restHeaders)-->Line_12 $$ expectedHeaders.putAll(copiedHeaders)[ FD ]
Line_10 $$ Map<String, String> expectedHeaders = new HashMap()-->Line_11 $$ expectedHeaders.putAll(transportHeaders)[ FD ]
Line_24 $$ GetRequest getRequest = Requests.getRequest("index")-->Line_29 $$ assertHeaders(getRequest, expectedHeaders)[ FD ]
Line_17 $$ SearchRequest searchRequest = Requests.searchRequest()-->Line_22 $$ assertHeaders(searchRequest, expectedHeaders)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_14 $$ expectedContext.putAll(transportContext)[ CD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_13 $$ Map<String, String> expectedContext = new HashMap()[ CD ]
Line_24 $$ GetRequest getRequest = Requests.getRequest("index")-->Line_27 $$ assertHeaders(getRequest, transportHeaders)[ FD ]
Line_9 $$ Map<String, String> transportContext = onlyOnLeft(randomContext(randomIntBetween(0, 10)), restContext)-->Line_26 $$ putContext(getRequest, transportContext)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_6 $$ Set<String> usefulRestHeaders = new HashSet(copiedHeaders.keySet())[ CD ]
Line_17 $$ SearchRequest searchRequest = Requests.searchRequest()-->Line_18 $$ putHeaders(searchRequest, transportHeaders)[ FD ]
Line_17 $$ SearchRequest searchRequest = Requests.searchRequest()-->Line_21 $$ client.search(searchRequest)[ FD ]
Line_13 $$ Map<String, String> expectedContext = new HashMap()-->Line_30 $$ assertContext(getRequest, expectedContext)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_10 $$ Map<String, String> expectedHeaders = new HashMap()[ CD ]
Line_8 $$ Map<String, String> restContext = randomContext(randomIntBetween(0, 10))-->Line_9 $$ Map<String, String> transportContext = onlyOnLeft(randomContext(randomIntBetween(0, 10)), restContext)[ FD ]
Line_24 $$ GetRequest getRequest = Requests.getRequest("index")-->Line_30 $$ assertContext(getRequest, expectedContext)[ FD ]
Line_31 $$ IndexRequest indexRequest = Requests.indexRequest()-->Line_36 $$ assertHeaders(indexRequest, expectedHeaders)[ FD ]
Line_16 $$ try (Client client = client(new NoOpClient(getTestName()), new FakeRestRequest(restHeaders, restContext), usefulRestHeaders)) -->Line_35 $$ client.index(indexRequest)[ FD ]
Line_9 $$ Map<String, String> transportContext = onlyOnLeft(randomContext(randomIntBetween(0, 10)), restContext)-->Line_33 $$ putContext(indexRequest, transportContext)[ FD ]
Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_34 $$ assertHeaders(indexRequest, transportHeaders)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_8 $$ Map<String, String> restContext = randomContext(randomIntBetween(0, 10))[ CD ]
Line_5 $$ Map<String, String> copiedHeaders = randomHeadersFrom(restHeaders)-->Line_6 $$ Set<String> usefulRestHeaders = new HashSet(copiedHeaders.keySet())[ FD ]
Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_11 $$ expectedHeaders.putAll(transportHeaders)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_5 $$ Map<String, String> copiedHeaders = randomHeadersFrom(restHeaders)[ CD ]
Line_10 $$ Map<String, String> expectedHeaders = new HashMap()-->Line_22 $$ assertHeaders(searchRequest, expectedHeaders)[ FD ]
Line_10 $$ Map<String, String> expectedHeaders = new HashMap()-->Line_29 $$ assertHeaders(getRequest, expectedHeaders)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_11 $$ expectedHeaders.putAll(transportHeaders)[ CD ]
Line_9 $$ Map<String, String> transportContext = onlyOnLeft(randomContext(randomIntBetween(0, 10)), restContext)-->Line_14 $$ expectedContext.putAll(transportContext)[ FD ]
Line_10 $$ Map<String, String> expectedHeaders = new HashMap()-->Line_12 $$ expectedHeaders.putAll(copiedHeaders)[ FD ]
Line_17 $$ SearchRequest searchRequest = Requests.searchRequest()-->Line_20 $$ assertHeaders(searchRequest, transportHeaders)[ FD ]
Line_24 $$ GetRequest getRequest = Requests.getRequest("index")-->Line_26 $$ putContext(getRequest, transportContext)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_12 $$ expectedHeaders.putAll(copiedHeaders)[ CD ]
Line_8 $$ Map<String, String> restContext = randomContext(randomIntBetween(0, 10))-->Line_15 $$ expectedContext.putAll(restContext)[ FD ]
Line_24 $$ GetRequest getRequest = Requests.getRequest("index")-->Line_25 $$ putHeaders(getRequest, transportHeaders)[ FD ]
Line_31 $$ IndexRequest indexRequest = Requests.indexRequest()-->Line_34 $$ assertHeaders(indexRequest, transportHeaders)[ FD ]
Line_13 $$ Map<String, String> expectedContext = new HashMap()-->Line_37 $$ assertContext(indexRequest, expectedContext)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_4 $$ Map<String, String> restHeaders = randomHeaders(randomIntBetween(0, 10))[ CD ]
Line_16 $$ try (Client client = client(new NoOpClient(getTestName()), new FakeRestRequest(restHeaders, restContext), usefulRestHeaders)) -->Line_28 $$ client.get(getRequest)[ FD ]
Line_17 $$ SearchRequest searchRequest = Requests.searchRequest()-->Line_23 $$ assertContext(searchRequest, expectedContext)[ FD ]
Line_6 $$ Set<String> usefulRestHeaders = new HashSet(copiedHeaders.keySet())-->Line_16 $$ try (Client client = client(new NoOpClient(getTestName()), new FakeRestRequest(restHeaders, restContext), usefulRestHeaders)) [ FD ]
Line_13 $$ Map<String, String> expectedContext = new HashMap()-->Line_23 $$ assertContext(searchRequest, expectedContext)[ FD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))[ CD ]
Line_2 $$ public void testCopyHeadersRequest() -->Line_7 $$ usefulRestHeaders.addAll(randomMap(randomIntBetween(0, 10), "useful-").keySet())[ CD ]
Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_27 $$ assertHeaders(getRequest, transportHeaders)[ FD ]
Line_6 $$ Set<String> usefulRestHeaders = new HashSet(copiedHeaders.keySet())-->Line_7 $$ usefulRestHeaders.addAll(randomMap(randomIntBetween(0, 10), "useful-").keySet())[ FD ]
Line_13 $$ Map<String, String> expectedContext = new HashMap()-->Line_15 $$ expectedContext.putAll(restContext)[ FD ]
Line_9 $$ Map<String, String> transportContext = onlyOnLeft(randomContext(randomIntBetween(0, 10)), restContext)-->Line_19 $$ putContext(searchRequest, transportContext)[ FD ]
Line_16 $$ try (Client client = client(new NoOpClient(getTestName()), new FakeRestRequest(restHeaders, restContext), usefulRestHeaders)) -->Line_21 $$ client.search(searchRequest)[ FD ]
Line_24 $$ GetRequest getRequest = Requests.getRequest("index")-->Line_28 $$ client.get(getRequest)[ FD ]
Line_31 $$ IndexRequest indexRequest = Requests.indexRequest()-->Line_37 $$ assertContext(indexRequest, expectedContext)[ FD ]
Line_13 $$ Map<String, String> expectedContext = new HashMap()-->Line_14 $$ expectedContext.putAll(transportContext)[ FD ]
Line_3 $$ Map<String, String> transportHeaders = randomHeaders(randomIntBetween(0, 10))-->Line_25 $$ putHeaders(getRequest, transportHeaders)[ FD ]
