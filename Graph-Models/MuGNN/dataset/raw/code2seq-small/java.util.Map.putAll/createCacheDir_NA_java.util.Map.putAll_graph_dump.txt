Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_9 $$ dir.file("some-file").touch()[ CD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_8 $$ cache.open()[ CD ]
Line_4 $$ Map<String, Object> properties = new HashMap<String, Object>()-->Line_5 $$ properties.putAll(this.properties)[ FD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_4 $$ Map<String, Object> properties = new HashMap<String, Object>()[ CD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_3 $$ TestFile dir = tmpDir.getTestDirectory()[ CD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_5 $$ properties.putAll(this.properties)[ CD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_6 $$ properties.putAll(GUtil.map((Object[]) extraProps))[ CD ]
Line_7 $$ DefaultPersistentDirectoryCache cache = new DefaultPersistentDirectoryCache(dir, "<display-name>", validator, properties, mode(LockMode.Shared), null, lockManager)-->Line_8 $$ cache.open()[ FD ]
Line_3 $$ TestFile dir = tmpDir.getTestDirectory()-->Line_9 $$ dir.file("some-file").touch()[ FD ]
Line_7 $$ DefaultPersistentDirectoryCache cache = new DefaultPersistentDirectoryCache(dir, "<display-name>", validator, properties, mode(LockMode.Shared), null, lockManager)-->Line_10 $$ cache.close()[ FD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_11 $$ return dir[ CD ]
Line_4 $$ Map<String, Object> properties = new HashMap<String, Object>()-->Line_6 $$ properties.putAll(GUtil.map((Object[]) extraProps))[ FD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_7 $$ DefaultPersistentDirectoryCache cache = new DefaultPersistentDirectoryCache(dir, "<display-name>", validator, properties, mode(LockMode.Shared), null, lockManager)[ CD ]
Line_2 $$ private TestFile createCacheDir(String... extraProps) -->Line_10 $$ cache.close()[ CD ]
