Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_17 $$ Theme theme = themeDisplay.getTheme()[ CD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_28 $$ StringBundler sb = new StringBundler(4)[ CD ]
Line_39 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()-->Line_41 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_CONTENT + portletDisplay.getId(), templateContent)[ FD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_33 $$ templateId = sb.toString()[ CD ]
Line_13 $$ String templateId = StringPool.BLANK-->Line_40 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_ID + portletDisplay.getId(), templateId)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_42 $$ Map<String, Object> vmVariables = (Map<String, Object>) renderRequest.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())[ CD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_18 $$ LayoutTemplate layoutTemplate = _layoutTemplateLocalService.getLayoutTemplate(layoutTemplateId, false, theme.getThemeId())[ CD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_35 $$ Matcher columnIdMatcher = _columnIdPattern.matcher(content)[ CD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_32 $$ sb.append(layoutTemplateId)[ CD ]
Line_15 $$ Map<String, String> columnIds = new HashMap()-->Line_46 $$ renderRequest.setAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId(), columnIds)[ FD ]
Line_20 $$ Matcher processColumnMatcher = _processColumnPattern.matcher(content)-->Line_27 $$ processColumnMatcher.reset()[ FD ]
Line_23 $$ if (Validator.isNotNull(columnId)) -->Line_24 $$ columnIds.put(columnId, renderResponse.getNamespace() + StringPool.UNDERLINE + columnId)[ CD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_36 $$ templateContent = columnIdMatcher.replaceAll("$1" + renderResponse.getNamespace() + "$2$3")[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_48 $$ renderRequest.setAttribute(NestedPortletsConfiguration.class.getName(), _nestedPortletsConfiguration)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) renderRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_38 $$ checkLayout(themeDisplay.getLayout(), columnIds.values())[ FD ]
Line_42 $$ Map<String, Object> vmVariables = (Map<String, Object>) renderRequest.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())-->Line_44 $$ vmVariables.putAll(columnIds)[ FD ]
Line_20 $$ Matcher processColumnMatcher = _processColumnPattern.matcher(content)-->Line_22 $$ String columnId = processColumnMatcher.group(2)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_46 $$ renderRequest.setAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId(), columnIds)[ FD ]
Line_35 $$ Matcher columnIdMatcher = _columnIdPattern.matcher(content)-->Line_36 $$ templateContent = columnIdMatcher.replaceAll("$1" + renderResponse.getNamespace() + "$2$3")[ FD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_34 $$ content = processColumnMatcher.replaceAll("$1\\$[ CD ]
Line_14 $$ String templateContent = StringPool.BLANK-->Line_36 $$ templateContent = columnIdMatcher.replaceAll("$1" + renderResponse.getNamespace() + "$2$3")[ FD ]
Line_4 $$ String layoutTemplateId = StringPool.BLANK-->Line_32 $$ sb.append(layoutTemplateId)[ FD ]
Line_28 $$ StringBundler sb = new StringBundler(4)-->Line_31 $$ sb.append(renderResponse.getNamespace())[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_49 $$ super.include(viewTemplate, renderRequest, renderResponse)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_24 $$ columnIds.put(columnId, renderResponse.getNamespace() + StringPool.UNDERLINE + columnId)[ FD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_31 $$ sb.append(renderResponse.getNamespace())[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_39 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ CD ]
Line_7 $$ layoutTemplateId = nestedPortletsDisplayContext.getLayoutTemplateId()-->Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) [ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_4 $$ String layoutTemplateId = StringPool.BLANK[ CD ]
Line_19 $$ String content = layoutTemplate.getContent()-->Line_34 $$ content = processColumnMatcher.replaceAll("$1\\$[ FD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_30 $$ sb.append(LayoutTemplateConstants.CUSTOM_SEPARATOR)[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_40 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_ID + portletDisplay.getId(), templateId)[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) renderRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_17 $$ Theme theme = themeDisplay.getTheme()[ FD ]
Line_21 $$ while (processColumnMatcher.find()) -->Line_23 $$ if (Validator.isNotNull(columnId)) [ CD ]
Line_39 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()-->Line_40 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_ID + portletDisplay.getId(), templateId)[ FD ]
Line_43 $$ if (vmVariables != null) -->Line_44 $$ vmVariables.putAll(columnIds)[ CD ]
Line_28 $$ StringBundler sb = new StringBundler(4)-->Line_33 $$ templateId = sb.toString()[ FD ]
Line_7 $$ layoutTemplateId = nestedPortletsDisplayContext.getLayoutTemplateId()-->Line_18 $$ LayoutTemplate layoutTemplate = _layoutTemplateLocalService.getLayoutTemplate(layoutTemplateId, false, theme.getThemeId())[ FD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_20 $$ Matcher processColumnMatcher = _processColumnPattern.matcher(content)[ CD ]
Line_36 $$ templateContent = columnIdMatcher.replaceAll("$1" + renderResponse.getNamespace() + "$2$3")-->Line_41 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_CONTENT + portletDisplay.getId(), templateContent)[ FD ]
Line_28 $$ StringBundler sb = new StringBundler(4)-->Line_29 $$ sb.append(theme.getThemeId())[ FD ]
Line_9 $$ if (_log.isWarnEnabled()) -->Line_10 $$ _log.warn(ce, ce)[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) renderRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_20 $$ Matcher processColumnMatcher = _processColumnPattern.matcher(content)-->Line_34 $$ content = processColumnMatcher.replaceAll("$1\\$[ FD ]
Line_15 $$ Map<String, String> columnIds = new HashMap()-->Line_44 $$ vmVariables.putAll(columnIds)[ FD ]
Line_39 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()-->Line_42 $$ Map<String, Object> vmVariables = (Map<String, Object>) renderRequest.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())[ FD ]
Line_19 $$ String content = layoutTemplate.getContent()-->Line_35 $$ Matcher columnIdMatcher = _columnIdPattern.matcher(content)[ FD ]
Line_33 $$ templateId = sb.toString()-->Line_40 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_ID + portletDisplay.getId(), templateId)[ FD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_19 $$ String content = layoutTemplate.getContent()[ CD ]
Line_4 $$ String layoutTemplateId = StringPool.BLANK-->Line_18 $$ LayoutTemplate layoutTemplate = _layoutTemplateLocalService.getLayoutTemplate(layoutTemplateId, false, theme.getThemeId())[ FD ]
Line_34 $$ content = processColumnMatcher.replaceAll("$1\\$-->Line_35 $$ Matcher columnIdMatcher = _columnIdPattern.matcher(content)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_14 $$ String templateContent = StringPool.BLANK[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_6 $$ NestedPortletsDisplayContext nestedPortletsDisplayContext = new NestedPortletsDisplayContext(PortalUtil.getHttpServletRequest(renderRequest), _nestedPortletsConfiguration)[ FD ]
Line_43 $$ if (vmVariables != null) -->Line_46 $$ renderRequest.setAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId(), columnIds)[ CD ]
Line_18 $$ LayoutTemplate layoutTemplate = _layoutTemplateLocalService.getLayoutTemplate(layoutTemplateId, false, theme.getThemeId())-->Line_19 $$ String content = layoutTemplate.getContent()[ FD ]
Line_28 $$ StringBundler sb = new StringBundler(4)-->Line_32 $$ sb.append(layoutTemplateId)[ FD ]
Line_13 $$ String templateId = StringPool.BLANK-->Line_33 $$ templateId = sb.toString()[ FD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_21 $$ while (processColumnMatcher.find()) [ CD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_27 $$ processColumnMatcher.reset()[ CD ]
Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) -->Line_29 $$ sb.append(theme.getThemeId())[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) [ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) renderRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_39 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ FD ]
Line_19 $$ String content = layoutTemplate.getContent()-->Line_20 $$ Matcher processColumnMatcher = _processColumnPattern.matcher(content)[ FD ]
Line_7 $$ layoutTemplateId = nestedPortletsDisplayContext.getLayoutTemplateId()-->Line_32 $$ sb.append(layoutTemplateId)[ FD ]
Line_15 $$ Map<String, String> columnIds = new HashMap()-->Line_38 $$ checkLayout(themeDisplay.getLayout(), columnIds.values())[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_15 $$ Map<String, String> columnIds = new HashMap()[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) renderRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_41 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_CONTENT + portletDisplay.getId(), templateContent)[ FD ]
Line_39 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()-->Line_46 $$ renderRequest.setAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId(), columnIds)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_38 $$ checkLayout(themeDisplay.getLayout(), columnIds.values())[ CD ]
Line_14 $$ String templateContent = StringPool.BLANK-->Line_41 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_CONTENT + portletDisplay.getId(), templateContent)[ FD ]
Line_20 $$ Matcher processColumnMatcher = _processColumnPattern.matcher(content)-->Line_21 $$ while (processColumnMatcher.find()) [ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_48 $$ renderRequest.setAttribute(NestedPortletsConfiguration.class.getName(), _nestedPortletsConfiguration)[ CD ]
Line_15 $$ Map<String, String> columnIds = new HashMap()-->Line_24 $$ columnIds.put(columnId, renderResponse.getNamespace() + StringPool.UNDERLINE + columnId)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_40 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_ID + portletDisplay.getId(), templateId)[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_43 $$ if (vmVariables != null) [ CD ]
Line_42 $$ Map<String, Object> vmVariables = (Map<String, Object>) renderRequest.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())-->Line_43 $$ if (vmVariables != null) [ FD ]
Line_4 $$ String layoutTemplateId = StringPool.BLANK-->Line_7 $$ layoutTemplateId = nestedPortletsDisplayContext.getLayoutTemplateId()[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_31 $$ sb.append(renderResponse.getNamespace())[ FD ]
Line_4 $$ String layoutTemplateId = StringPool.BLANK-->Line_16 $$ if (Validator.isNotNull(layoutTemplateId)) [ FD ]
Line_6 $$ NestedPortletsDisplayContext nestedPortletsDisplayContext = new NestedPortletsDisplayContext(PortalUtil.getHttpServletRequest(renderRequest), _nestedPortletsConfiguration)-->Line_7 $$ layoutTemplateId = nestedPortletsDisplayContext.getLayoutTemplateId()[ FD ]
Line_17 $$ Theme theme = themeDisplay.getTheme()-->Line_29 $$ sb.append(theme.getThemeId())[ FD ]
Line_28 $$ StringBundler sb = new StringBundler(4)-->Line_30 $$ sb.append(LayoutTemplateConstants.CUSTOM_SEPARATOR)[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_42 $$ Map<String, Object> vmVariables = (Map<String, Object>) renderRequest.getAttribute(WebKeys.VM_VARIABLES + portletDisplay.getId())[ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_41 $$ renderRequest.setAttribute(NestedPortletsConfiguration.TEMPLATE_CONTENT + portletDisplay.getId(), templateContent)[ CD ]
Line_17 $$ Theme theme = themeDisplay.getTheme()-->Line_18 $$ LayoutTemplate layoutTemplate = _layoutTemplateLocalService.getLayoutTemplate(layoutTemplateId, false, theme.getThemeId())[ FD ]
Line_22 $$ String columnId = processColumnMatcher.group(2)-->Line_23 $$ if (Validator.isNotNull(columnId)) [ FD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_36 $$ templateContent = columnIdMatcher.replaceAll("$1" + renderResponse.getNamespace() + "$2$3")[ FD ]
Line_22 $$ String columnId = processColumnMatcher.group(2)-->Line_24 $$ columnIds.put(columnId, renderResponse.getNamespace() + StringPool.UNDERLINE + columnId)[ FD ]
Line_21 $$ while (processColumnMatcher.find()) -->Line_22 $$ String columnId = processColumnMatcher.group(2)[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_13 $$ String templateId = StringPool.BLANK[ CD ]
Line_2 $$ public void doView(RenderRequest renderRequest, RenderResponse renderResponse) throws IOException, PortletException -->Line_49 $$ super.include(viewTemplate, renderRequest, renderResponse)[ CD ]
