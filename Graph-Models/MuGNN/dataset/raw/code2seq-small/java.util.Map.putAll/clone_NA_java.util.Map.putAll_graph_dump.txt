Line_2 $$ public TestData clone() -->Line_16 $$ data.ENVS = new LinkedHashMap<String, String>(ENVS)[ CD ]
Line_2 $$ public TestData clone() -->Line_10 $$ data.TEST_SEARCH_SCOPE = new TestSearchScope.Wrapper()[ CD ]
Line_2 $$ public TestData clone() -->Line_12 $$ data.TEST_PROPERTIES.putAll(TEST_PROPERTIES)[ CD ]
Line_8 $$ data = new TestData()-->Line_19 $$ data.setScope(getScope())[ FD ]
Line_2 $$ public TestData clone() -->Line_18 $$ data.myPatterns.addAll(myPatterns)[ CD ]
Line_2 $$ public TestData clone() -->Line_19 $$ data.setScope(getScope())[ CD ]
Line_5 $$ data = (TestData) super.clone()-->Line_8 $$ data = new TestData()[ FD ]
Line_2 $$ public TestData clone() -->Line_3 $$ TestData data[ CD ]
Line_2 $$ public TestData clone() -->Line_17 $$ data.myPatterns = new LinkedHashSet<String>()[ CD ]
Line_2 $$ public TestData clone() -->Line_20 $$ return data[ CD ]
Line_2 $$ public TestData clone() -->Line_11 $$ data.TEST_PROPERTIES = new HashMap<String, String>()[ CD ]
Line_3 $$ TestData data-->Line_5 $$ data = (TestData) super.clone()[ FD ]
Line_2 $$ public TestData clone() -->Line_13 $$ data.TEST_LISTENERS = new ArrayList<String>()[ CD ]
Line_3 $$ TestData data-->Line_8 $$ data = new TestData()[ FD ]
Line_2 $$ public TestData clone() -->Line_14 $$ data.TEST_LISTENERS.addAll(TEST_LISTENERS)[ CD ]
Line_3 $$ TestData data-->Line_19 $$ data.setScope(getScope())[ FD ]
Line_5 $$ data = (TestData) super.clone()-->Line_19 $$ data.setScope(getScope())[ FD ]
