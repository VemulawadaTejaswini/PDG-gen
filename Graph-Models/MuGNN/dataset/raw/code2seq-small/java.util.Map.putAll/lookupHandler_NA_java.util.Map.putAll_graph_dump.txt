Line_24 $$ if (!matchingPatterns.isEmpty()) -->Line_29 $$ bestPatternMatch = matchingPatterns.get(0)[ CD ]
Line_4 $$ if (handler != null) -->Line_5 $$ if (handler instanceof String) [ CD ]
Line_26 $$ if (logger.isDebugEnabled()) -->Line_27 $$ logger.debug("Matching patterns for request [" + urlPath + "] are " + matchingPatterns)[ CD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_37 $$ if (handler instanceof String) [ FD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_33 $$ if (handler == null) [ CD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_39 $$ handler = getApplicationContext().getBean(handlerName)[ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_7 $$ handler = getApplicationContext().getBean(handlerName)[ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_56 $$ return null[ CD ]
Line_4 $$ if (handler != null) -->Line_10 $$ return buildPathExposingHandler(handler, urlPath, urlPath, null)[ CD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_10 $$ return buildPathExposingHandler(handler, urlPath, urlPath, null)[ FD ]
Line_17 $$ if (!registeredPattern.endsWith("/") && getPathMatcher().match(registeredPattern + "/", urlPath)) -->Line_18 $$ matchingPatterns.add(registeredPattern + "/")[ CD ]
Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_39 $$ handler = getApplicationContext().getBean(handlerName)-->Line_41 $$ validateHandler(handler, request)[ FD ]
Line_43 $$ Map<String, String> uriTemplateVariables = new LinkedHashMap<String, String>()-->Line_48 $$ uriTemplateVariables.putAll(decodedVars)[ FD ]
Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))-->Line_41 $$ validateHandler(handler, request)[ FD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_9 $$ validateHandler(handler, request)[ FD ]
Line_22 $$ String bestPatternMatch = null-->Line_42 $$ String pathWithinMapping = getPathMatcher().extractPathWithinPattern(bestPatternMatch, urlPath)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_31 $$ if (bestPatternMatch != null) [ CD ]
Line_24 $$ if (!matchingPatterns.isEmpty()) -->Line_26 $$ if (logger.isDebugEnabled()) [ CD ]
Line_29 $$ bestPatternMatch = matchingPatterns.get(0)-->Line_45 $$ if (patternComparator.compare(bestPatternMatch, matchingPattern) == 0) [ FD ]
Line_23 $$ Comparator<String> patternComparator = getPathMatcher().getPatternComparator(urlPath)-->Line_25 $$ Collections.sort(matchingPatterns, patternComparator)[ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_22 $$ String bestPatternMatch = null-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_13 $$ for (String registeredPattern : this.handlerMap.keySet()) -->Line_14 $$ if (getPathMatcher().match(registeredPattern, urlPath)) [ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_3 $$ Object handler = this.handlerMap.get(urlPath)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_41 $$ validateHandler(handler, request)[ FD ]
Line_43 $$ Map<String, String> uriTemplateVariables = new LinkedHashMap<String, String>()-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_22 $$ String bestPatternMatch = null-->Line_29 $$ bestPatternMatch = matchingPatterns.get(0)[ FD ]
Line_22 $$ String bestPatternMatch = null-->Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_14 $$ if (getPathMatcher().match(registeredPattern, urlPath)) [ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_9 $$ validateHandler(handler, request)[ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_39 $$ handler = getApplicationContext().getBean(handlerName)[ FD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)[ FD ]
Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))-->Line_39 $$ handler = getApplicationContext().getBean(handlerName)[ FD ]
Line_23 $$ Comparator<String> patternComparator = getPathMatcher().getPatternComparator(urlPath)-->Line_45 $$ if (patternComparator.compare(bestPatternMatch, matchingPattern) == 0) [ FD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)[ CD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_47 $$ Map<String, String> decodedVars = getUrlPathHelper().decodePathVariables(request, vars)[ FD ]
Line_47 $$ Map<String, String> decodedVars = getUrlPathHelper().decodePathVariables(request, vars)-->Line_48 $$ uriTemplateVariables.putAll(decodedVars)[ FD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_37 $$ if (handler instanceof String) [ CD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_41 $$ validateHandler(handler, request)[ FD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))[ FD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ CD ]
Line_33 $$ if (handler == null) -->Line_34 $$ Assert.isTrue(bestPatternMatch.endsWith("/"))[ CD ]
Line_12 $$ List<String> matchingPatterns = new ArrayList<String>()-->Line_15 $$ matchingPatterns.add(registeredPattern)[ FD ]
Line_6 $$ String handlerName = (String) handler-->Line_7 $$ handler = getApplicationContext().getBean(handlerName)[ FD ]
Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)-->Line_37 $$ if (handler instanceof String) [ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_46 $$ Map<String, String> vars = getPathMatcher().extractUriTemplateVariables(matchingPattern, urlPath)[ FD ]
Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))-->Line_37 $$ if (handler instanceof String) [ FD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_22 $$ String bestPatternMatch = null-->Line_45 $$ if (patternComparator.compare(bestPatternMatch, matchingPattern) == 0) [ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_23 $$ Comparator<String> patternComparator = getPathMatcher().getPatternComparator(urlPath)[ FD ]
Line_51 $$ if (logger.isDebugEnabled()) -->Line_52 $$ logger.debug("URI Template variables for request [" + urlPath + "] are " + uriTemplateVariables)[ CD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_23 $$ Comparator<String> patternComparator = getPathMatcher().getPatternComparator(urlPath)[ CD ]
Line_45 $$ if (patternComparator.compare(bestPatternMatch, matchingPattern) == 0) -->Line_46 $$ Map<String, String> vars = getPathMatcher().extractUriTemplateVariables(matchingPattern, urlPath)[ CD ]
Line_44 $$ for (String matchingPattern : matchingPatterns) -->Line_45 $$ if (patternComparator.compare(bestPatternMatch, matchingPattern) == 0) [ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_33 $$ if (handler == null) [ FD ]
Line_5 $$ if (handler instanceof String) -->Line_6 $$ String handlerName = (String) handler[ CD ]
Line_12 $$ List<String> matchingPatterns = new ArrayList<String>()-->Line_18 $$ matchingPatterns.add(registeredPattern + "/")[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_42 $$ String pathWithinMapping = getPathMatcher().extractPathWithinPattern(bestPatternMatch, urlPath)[ FD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_33 $$ if (handler == null) [ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_4 $$ if (handler != null) [ CD ]
Line_4 $$ if (handler != null) -->Line_9 $$ validateHandler(handler, request)[ CD ]
Line_39 $$ handler = getApplicationContext().getBean(handlerName)-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_12 $$ List<String> matchingPatterns = new ArrayList<String>()-->Line_24 $$ if (!matchingPatterns.isEmpty()) [ FD ]
Line_12 $$ List<String> matchingPatterns = new ArrayList<String>()-->Line_25 $$ Collections.sort(matchingPatterns, patternComparator)[ FD ]
Line_29 $$ bestPatternMatch = matchingPatterns.get(0)-->Line_34 $$ Assert.isTrue(bestPatternMatch.endsWith("/"))[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_9 $$ validateHandler(handler, request)[ FD ]
Line_22 $$ String bestPatternMatch = null-->Line_34 $$ Assert.isTrue(bestPatternMatch.endsWith("/"))[ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_4 $$ if (handler != null) [ FD ]
Line_24 $$ if (!matchingPatterns.isEmpty()) -->Line_25 $$ Collections.sort(matchingPatterns, patternComparator)[ CD ]
Line_45 $$ if (patternComparator.compare(bestPatternMatch, matchingPattern) == 0) -->Line_48 $$ uriTemplateVariables.putAll(decodedVars)[ CD ]
Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)-->Line_39 $$ handler = getApplicationContext().getBean(handlerName)[ FD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_10 $$ return buildPathExposingHandler(handler, urlPath, urlPath, null)[ FD ]
Line_14 $$ if (getPathMatcher().match(registeredPattern, urlPath)) -->Line_16 $$ if (useTrailingSlashMatch()) [ CD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_51 $$ if (logger.isDebugEnabled()) [ CD ]
Line_13 $$ for (String registeredPattern : this.handlerMap.keySet()) -->Line_15 $$ matchingPatterns.add(registeredPattern)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_24 $$ if (!matchingPatterns.isEmpty()) [ CD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_41 $$ validateHandler(handler, request)[ CD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_42 $$ String pathWithinMapping = getPathMatcher().extractPathWithinPattern(bestPatternMatch, urlPath)[ CD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_41 $$ validateHandler(handler, request)[ FD ]
Line_13 $$ for (String registeredPattern : this.handlerMap.keySet()) -->Line_17 $$ if (!registeredPattern.endsWith("/") && getPathMatcher().match(registeredPattern + "/", urlPath)) [ FD ]
Line_31 $$ if (bestPatternMatch != null) -->Line_43 $$ Map<String, String> uriTemplateVariables = new LinkedHashMap<String, String>()[ CD ]
Line_42 $$ String pathWithinMapping = getPathMatcher().extractPathWithinPattern(bestPatternMatch, urlPath)-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))[ FD ]
Line_29 $$ bestPatternMatch = matchingPatterns.get(0)-->Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))[ FD ]
Line_33 $$ if (handler == null) -->Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))[ CD ]
Line_37 $$ if (handler instanceof String) -->Line_39 $$ handler = getApplicationContext().getBean(handlerName)[ CD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_10 $$ return buildPathExposingHandler(handler, urlPath, urlPath, null)[ FD ]
Line_16 $$ if (useTrailingSlashMatch()) -->Line_17 $$ if (!registeredPattern.endsWith("/") && getPathMatcher().match(registeredPattern + "/", urlPath)) [ CD ]
Line_5 $$ if (handler instanceof String) -->Line_7 $$ handler = getApplicationContext().getBean(handlerName)[ CD ]
Line_7 $$ handler = getApplicationContext().getBean(handlerName)-->Line_37 $$ if (handler instanceof String) [ FD ]
Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)-->Line_33 $$ if (handler == null) [ FD ]
Line_3 $$ Object handler = this.handlerMap.get(urlPath)-->Line_5 $$ if (handler instanceof String) [ FD ]
Line_14 $$ if (getPathMatcher().match(registeredPattern, urlPath)) -->Line_15 $$ matchingPatterns.add(registeredPattern)[ CD ]
Line_29 $$ bestPatternMatch = matchingPatterns.get(0)-->Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)[ FD ]
Line_29 $$ bestPatternMatch = matchingPatterns.get(0)-->Line_54 $$ return buildPathExposingHandler(handler, bestPatternMatch, pathWithinMapping, uriTemplateVariables)[ FD ]
Line_6 $$ String handlerName = (String) handler-->Line_39 $$ handler = getApplicationContext().getBean(handlerName)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_12 $$ List<String> matchingPatterns = new ArrayList<String>()[ CD ]
Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)-->Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))[ FD ]
Line_46 $$ Map<String, String> vars = getPathMatcher().extractUriTemplateVariables(matchingPattern, urlPath)-->Line_47 $$ Map<String, String> decodedVars = getUrlPathHelper().decodePathVariables(request, vars)[ FD ]
Line_29 $$ bestPatternMatch = matchingPatterns.get(0)-->Line_31 $$ if (bestPatternMatch != null) [ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_22 $$ String bestPatternMatch = null[ CD ]
Line_22 $$ String bestPatternMatch = null-->Line_31 $$ if (bestPatternMatch != null) [ FD ]
Line_22 $$ String bestPatternMatch = null-->Line_35 $$ handler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1))[ FD ]
Line_32 $$ handler = this.handlerMap.get(bestPatternMatch)-->Line_41 $$ validateHandler(handler, request)[ FD ]
Line_45 $$ if (patternComparator.compare(bestPatternMatch, matchingPattern) == 0) -->Line_47 $$ Map<String, String> decodedVars = getUrlPathHelper().decodePathVariables(request, vars)[ CD ]
Line_29 $$ bestPatternMatch = matchingPatterns.get(0)-->Line_42 $$ String pathWithinMapping = getPathMatcher().extractPathWithinPattern(bestPatternMatch, urlPath)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_3 $$ Object handler = this.handlerMap.get(urlPath)[ CD ]
Line_44 $$ for (String matchingPattern : matchingPatterns) -->Line_46 $$ Map<String, String> vars = getPathMatcher().extractUriTemplateVariables(matchingPattern, urlPath)[ FD ]
Line_2 $$ protected Object lookupHandler(String urlPath, HttpServletRequest request) throws Exception -->Line_17 $$ if (!registeredPattern.endsWith("/") && getPathMatcher().match(registeredPattern + "/", urlPath)) [ FD ]
Line_12 $$ List<String> matchingPatterns = new ArrayList<String>()-->Line_29 $$ bestPatternMatch = matchingPatterns.get(0)[ FD ]
