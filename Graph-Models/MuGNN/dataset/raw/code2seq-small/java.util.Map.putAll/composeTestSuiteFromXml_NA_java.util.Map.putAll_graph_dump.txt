Line_17 $$ final File suiteFile = new File(PathManager.getSystemPath(), fileId)-->Line_24 $$ String path = suiteFile.getAbsolutePath() + "\n"[ FD ]
Line_14 $$ Map<String, String> params = suite.getParameters()-->Line_15 $$ params.putAll(buildTestParams)[ FD ]
Line_3 $$ final Map<String, String> buildTestParams = buildTestParameters()-->Line_5 $$ if (buildTestParams.isEmpty()) [ FD ]
Line_10 $$ final Parser parser = new Parser(myData.getSuiteName())-->Line_12 $$ final Collection<XmlSuite> suites = parser.parse()[ FD ]
Line_13 $$ for (XmlSuite suite : suites) -->Line_16 $$ final String fileId = FileUtil.sanitizeFileName(myProject.getName() + '_' + suite.getName() + '_' + Integer.toHexString(suite.getName().hashCode()) + ".xml")[ FD ]
Line_13 $$ for (XmlSuite suite : suites) -->Line_14 $$ Map<String, String> params = suite.getParameters()[ FD ]
Line_5 $$ if (buildTestParams.isEmpty()) -->Line_6 $$ String path = new File(myData.getSuiteName()).getAbsolutePath() + "\n"[ CD ]
Line_3 $$ final Map<String, String> buildTestParams = buildTestParameters()-->Line_15 $$ params.putAll(buildTestParams)[ FD ]
Line_5 $$ if (buildTestParams.isEmpty()) -->Line_8 $$ return[ CD ]
Line_2 $$ private void composeTestSuiteFromXml() throws CantRunException -->Line_3 $$ final Map<String, String> buildTestParams = buildTestParameters()[ CD ]
Line_5 $$ if (buildTestParams.isEmpty()) -->Line_7 $$ FileUtil.writeToFile(myTempFile, path.getBytes(CharsetToolkit.UTF8_CHARSET), true)[ CD ]
Line_18 $$ FileWriter fileWriter = new FileWriter(suiteFile)-->Line_20 $$ fileWriter.write(suite.toXml())[ FD ]
Line_13 $$ for (XmlSuite suite : suites) -->Line_20 $$ fileWriter.write(suite.toXml())[ FD ]
Line_18 $$ FileWriter fileWriter = new FileWriter(suiteFile)-->Line_22 $$ fileWriter.close()[ FD ]
Line_6 $$ String path = new File(myData.getSuiteName()).getAbsolutePath() + "\n"-->Line_25 $$ FileUtil.writeToFile(myTempFile, path.getBytes(CharsetToolkit.UTF8_CHARSET), true)[ FD ]
Line_10 $$ final Parser parser = new Parser(myData.getSuiteName())-->Line_11 $$ parser.setLoadClasses(false)[ FD ]
Line_6 $$ String path = new File(myData.getSuiteName()).getAbsolutePath() + "\n"-->Line_7 $$ FileUtil.writeToFile(myTempFile, path.getBytes(CharsetToolkit.UTF8_CHARSET), true)[ FD ]
