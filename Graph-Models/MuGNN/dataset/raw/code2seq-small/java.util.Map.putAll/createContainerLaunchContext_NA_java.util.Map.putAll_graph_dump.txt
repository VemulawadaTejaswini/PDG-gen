Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_18 $$ return container[ CD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_5 $$ commonContainerSpec = createCommonContainerLaunchContext(applicationACLs, conf, jobToken, oldJobId, credentials)[ FD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_17 $$ ContainerLaunchContext container = ContainerLaunchContext.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData, commonContainerSpec.getTokens().duplicate(), applicationACLs)[ CD ]
Line_13 $$ Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>()-->Line_17 $$ ContainerLaunchContext container = ContainerLaunchContext.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData, commonContainerSpec.getTokens().duplicate(), applicationACLs)[ FD ]
Line_4 $$ if (commonContainerSpec == null) -->Line_5 $$ commonContainerSpec = createCommonContainerLaunchContext(applicationACLs, conf, jobToken, oldJobId, credentials)[ CD ]
Line_14 $$ for (Entry<String, ByteBuffer> entry : commonContainerSpec.getServiceData().entrySet()) -->Line_15 $$ myServiceData.put(entry.getKey(), entry.getValue().duplicate())[ FD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_9 $$ Map<String, String> myEnv = new HashMap<String, String>(env.size())[ CD ]
Line_13 $$ Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>()-->Line_15 $$ myServiceData.put(entry.getKey(), entry.getValue().duplicate())[ FD ]
Line_8 $$ Map<String, String> env = commonContainerSpec.getEnvironment()-->Line_9 $$ Map<String, String> myEnv = new HashMap<String, String>(env.size())[ FD ]
Line_9 $$ Map<String, String> myEnv = new HashMap<String, String>(env.size())-->Line_10 $$ myEnv.putAll(env)[ FD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_13 $$ Map<String, ByteBuffer> myServiceData = new HashMap<String, ByteBuffer>()[ CD ]
Line_12 $$ List<String> commands = MapReduceChildJVM.getVMCommand(taskAttemptListener.getAddress(), remoteTask, jvmID)-->Line_17 $$ ContainerLaunchContext container = ContainerLaunchContext.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData, commonContainerSpec.getTokens().duplicate(), applicationACLs)[ FD ]
Line_9 $$ Map<String, String> myEnv = new HashMap<String, String>(env.size())-->Line_17 $$ ContainerLaunchContext container = ContainerLaunchContext.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData, commonContainerSpec.getTokens().duplicate(), applicationACLs)[ FD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_17 $$ ContainerLaunchContext container = ContainerLaunchContext.newInstance(commonContainerSpec.getLocalResources(), myEnv, commands, myServiceData, commonContainerSpec.getTokens().duplicate(), applicationACLs)[ FD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_12 $$ List<String> commands = MapReduceChildJVM.getVMCommand(taskAttemptListener.getAddress(), remoteTask, jvmID)[ FD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_10 $$ myEnv.putAll(env)[ CD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_11 $$ MapReduceChildJVM.setVMEnv(myEnv, remoteTask)[ FD ]
Line_8 $$ Map<String, String> env = commonContainerSpec.getEnvironment()-->Line_10 $$ myEnv.putAll(env)[ FD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_12 $$ List<String> commands = MapReduceChildJVM.getVMCommand(taskAttemptListener.getAddress(), remoteTask, jvmID)[ CD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_8 $$ Map<String, String> env = commonContainerSpec.getEnvironment()[ CD ]
Line_2 $$ static ContainerLaunchContext createContainerLaunchContext(Map<ApplicationAccessType, String> applicationACLs, Configuration conf, Token<JobTokenIdentifier> jobToken, Task remoteTask, final org.apache.hadoop.mapred.JobID oldJobId, WrappedJvmID jvmID, TaskAttemptListener taskAttemptListener, Credentials credentials) -->Line_11 $$ MapReduceChildJVM.setVMEnv(myEnv, remoteTask)[ CD ]
Line_9 $$ Map<String, String> myEnv = new HashMap<String, String>(env.size())-->Line_11 $$ MapReduceChildJVM.setVMEnv(myEnv, remoteTask)[ FD ]
