Line_2 $$ public static <K, V> Map<K, V> union(@NotNull Map<? extends K, ? extends V> map, @NotNull Map<? extends K, ? extends V> map2) -->Line_4 $$ result.putAll(map)[ CD ]
Line_2 $$ public static <K, V> Map<K, V> union(@NotNull Map<? extends K, ? extends V> map, @NotNull Map<? extends K, ? extends V> map2) -->Line_5 $$ result.putAll(map2)[ CD ]
Line_2 $$ public static <K, V> Map<K, V> union(@NotNull Map<? extends K, ? extends V> map, @NotNull Map<? extends K, ? extends V> map2) -->Line_3 $$ Map<K, V> result = new THashMap<K, V>(map.size() + map2.size())[ FD ]
Line_2 $$ public static <K, V> Map<K, V> union(@NotNull Map<? extends K, ? extends V> map, @NotNull Map<? extends K, ? extends V> map2) -->Line_5 $$ result.putAll(map2)[ FD ]
Line_3 $$ Map<K, V> result = new THashMap<K, V>(map.size() + map2.size())-->Line_4 $$ result.putAll(map)[ FD ]
Line_2 $$ public static <K, V> Map<K, V> union(@NotNull Map<? extends K, ? extends V> map, @NotNull Map<? extends K, ? extends V> map2) -->Line_6 $$ return result[ CD ]
Line_2 $$ public static <K, V> Map<K, V> union(@NotNull Map<? extends K, ? extends V> map, @NotNull Map<? extends K, ? extends V> map2) -->Line_3 $$ Map<K, V> result = new THashMap<K, V>(map.size() + map2.size())[ CD ]
Line_3 $$ Map<K, V> result = new THashMap<K, V>(map.size() + map2.size())-->Line_5 $$ result.putAll(map2)[ FD ]
Line_2 $$ public static <K, V> Map<K, V> union(@NotNull Map<? extends K, ? extends V> map, @NotNull Map<? extends K, ? extends V> map2) -->Line_4 $$ result.putAll(map)[ FD ]
