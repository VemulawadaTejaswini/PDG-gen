Line_6 $$ if (antProject != null) -->Line_8 $$ if (taskDefinitions != null) [ CD ]
Line_7 $$ final Map<String, Class> taskDefinitions = antProject.getTaskDefinitions()-->Line_8 $$ if (taskDefinitions != null) [ FD ]
Line_7 $$ final Map<String, Class> taskDefinitions = antProject.getTaskDefinitions()-->Line_9 $$ result.putAll(taskDefinitions)[ FD ]
Line_5 $$ final Map<String, Class> result = new HashMap<String, Class>()-->Line_13 $$ result.putAll(dataTypeDefinitions)[ FD ]
Line_11 $$ final Map<String, Class> dataTypeDefinitions = antProject.getDataTypeDefinitions()-->Line_13 $$ result.putAll(dataTypeDefinitions)[ FD ]
Line_6 $$ if (antProject != null) -->Line_12 $$ if (dataTypeDefinitions != null) [ CD ]
Line_6 $$ if (antProject != null) -->Line_11 $$ final Map<String, Class> dataTypeDefinitions = antProject.getDataTypeDefinitions()[ CD ]
Line_6 $$ if (antProject != null) -->Line_7 $$ final Map<String, Class> taskDefinitions = antProject.getTaskDefinitions()[ CD ]
Line_8 $$ if (taskDefinitions != null) -->Line_9 $$ result.putAll(taskDefinitions)[ CD ]
Line_4 $$ final ReflectedProject antProject = ReflectedProject.getProject(AntClassLoader.this)-->Line_6 $$ if (antProject != null) [ FD ]
Line_12 $$ if (dataTypeDefinitions != null) -->Line_13 $$ result.putAll(dataTypeDefinitions)[ CD ]
Line_4 $$ final ReflectedProject antProject = ReflectedProject.getProject(AntClassLoader.this)-->Line_7 $$ final Map<String, Class> taskDefinitions = antProject.getTaskDefinitions()[ FD ]
Line_11 $$ final Map<String, Class> dataTypeDefinitions = antProject.getDataTypeDefinitions()-->Line_12 $$ if (dataTypeDefinitions != null) [ FD ]
Line_4 $$ final ReflectedProject antProject = ReflectedProject.getProject(AntClassLoader.this)-->Line_11 $$ final Map<String, Class> dataTypeDefinitions = antProject.getDataTypeDefinitions()[ FD ]
Line_5 $$ final Map<String, Class> result = new HashMap<String, Class>()-->Line_9 $$ result.putAll(taskDefinitions)[ FD ]
