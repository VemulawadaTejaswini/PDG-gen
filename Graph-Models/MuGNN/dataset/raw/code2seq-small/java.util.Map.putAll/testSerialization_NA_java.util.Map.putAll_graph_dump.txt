Line_6 $$ try (ObjectOutputStream objectOutputStream = new ObjectOutputStream(unsyncByteArrayOutputStream)) -->Line_7 $$ objectOutputStream.writeObject(_concurrentMap)[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_3 $$ Map<Key, Value> map = _createDataMap()[ CD ]
Line_9 $$ ObjectInputStream objectInputStream = new ObjectInputStream(new UnsyncByteArrayInputStream(unsyncByteArrayOutputStream.unsafeGetByteArray(), 0, unsyncByteArrayOutputStream.size()))-->Line_10 $$ Assert.assertEquals(_concurrentMap, objectInputStream.readObject())[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_9 $$ ObjectInputStream objectInputStream = new ObjectInputStream(new UnsyncByteArrayInputStream(unsyncByteArrayOutputStream.unsafeGetByteArray(), 0, unsyncByteArrayOutputStream.size()))[ CD ]
Line_3 $$ Map<Key, Value> map = _createDataMap()-->Line_4 $$ _concurrentMap.putAll(map)[ FD ]
Line_5 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()-->Line_9 $$ ObjectInputStream objectInputStream = new ObjectInputStream(new UnsyncByteArrayInputStream(unsyncByteArrayOutputStream.unsafeGetByteArray(), 0, unsyncByteArrayOutputStream.size()))[ FD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_5 $$ UnsyncByteArrayOutputStream unsyncByteArrayOutputStream = new UnsyncByteArrayOutputStream()[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_4 $$ _concurrentMap.putAll(map)[ CD ]
Line_2 $$ public void testSerialization() throws Exception -->Line_10 $$ Assert.assertEquals(_concurrentMap, objectInputStream.readObject())[ CD ]
