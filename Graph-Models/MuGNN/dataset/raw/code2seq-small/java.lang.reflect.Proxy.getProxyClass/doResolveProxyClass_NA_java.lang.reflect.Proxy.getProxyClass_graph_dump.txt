Line_15 $$ nonPublicLoader = cl.getClassLoader()-->Line_11 $$ if (nonPublicLoader != cl.getClassLoader()) [ FD ]
Line_3 $$ ClassLoader nonPublicLoader = null-->Line_15 $$ nonPublicLoader = cl.getClassLoader()[ FD ]
Line_10 $$ if (hasNonPublicInterface) -->Line_11 $$ if (nonPublicLoader != cl.getClassLoader()) [ CD ]
Line_2 $$ private Class<?> doResolveProxyClass(@NotNull String[] interfaces, @NotNull ClassLoader loader) throws ClassNotFoundException -->Line_3 $$ ClassLoader nonPublicLoader = null[ CD ]
Line_8 $$ Class cl = Class.forName(interfaces[i], false, loader)-->Line_9 $$ if ((cl.getModifiers() & Modifier.PUBLIC) == 0) [ FD ]
Line_10 $$ if (hasNonPublicInterface) -->Line_15 $$ nonPublicLoader = cl.getClassLoader()[ CD ]
Line_8 $$ Class cl = Class.forName(interfaces[i], false, loader)-->Line_15 $$ nonPublicLoader = cl.getClassLoader()[ FD ]
Line_2 $$ private Class<?> doResolveProxyClass(@NotNull String[] interfaces, @NotNull ClassLoader loader) throws ClassNotFoundException -->Line_8 $$ Class cl = Class.forName(interfaces[i], false, loader)[ FD ]
Line_7 $$ for (int i = 0; i < interfaces.length; i++) -->Line_9 $$ if ((cl.getModifiers() & Modifier.PUBLIC) == 0) [ CD ]
Line_10 $$ if (hasNonPublicInterface) -->Line_16 $$ hasNonPublicInterface = true[ CD ]
Line_7 $$ for (int i = 0; i < interfaces.length; i++) -->Line_8 $$ Class cl = Class.forName(interfaces[i], false, loader)[ CD ]
Line_8 $$ Class cl = Class.forName(interfaces[i], false, loader)-->Line_19 $$ classObjs[i] = cl[ FD ]
Line_8 $$ Class cl = Class.forName(interfaces[i], false, loader)-->Line_11 $$ if (nonPublicLoader != cl.getClassLoader()) [ FD ]
Line_2 $$ private Class<?> doResolveProxyClass(@NotNull String[] interfaces, @NotNull ClassLoader loader) throws ClassNotFoundException -->Line_4 $$ boolean hasNonPublicInterface = false[ CD ]
Line_7 $$ for (int i = 0; i < interfaces.length; i++) -->Line_19 $$ classObjs[i] = cl[ CD ]
Line_9 $$ if ((cl.getModifiers() & Modifier.PUBLIC) == 0) -->Line_10 $$ if (hasNonPublicInterface) [ CD ]
Line_3 $$ ClassLoader nonPublicLoader = null-->Line_11 $$ if (nonPublicLoader != cl.getClassLoader()) [ FD ]
Line_2 $$ private Class<?> doResolveProxyClass(@NotNull String[] interfaces, @NotNull ClassLoader loader) throws ClassNotFoundException -->Line_7 $$ for (int i = 0; i < interfaces.length; i++) [ CD ]
Line_4 $$ boolean hasNonPublicInterface = false-->Line_16 $$ hasNonPublicInterface = true[ FD ]
