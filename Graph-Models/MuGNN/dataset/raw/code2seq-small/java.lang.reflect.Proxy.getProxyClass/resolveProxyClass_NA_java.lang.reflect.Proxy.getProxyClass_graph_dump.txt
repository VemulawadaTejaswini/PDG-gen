Line_2 $$ protected Class<?> resolveProxyClass(String[] interfaces) throws IOException, ClassNotFoundException -->Line_22 $$ return super.resolveProxyClass(interfaces)[ FD ]
Line_25 $$ for (int i = 0; i < interfaces.length; i++) -->Line_26 $$ resolvedInterfaces[i] = resolveFallbackIfPossible(interfaces[i], ex)[ CD ]
Line_7 $$ Class<?>[] resolvedInterfaces = new Class<?>[interfaces.length]-->Line_16 $$ return Proxy.getProxyClass(this.classLoader, resolvedInterfaces)[ FD ]
Line_7 $$ Class<?>[] resolvedInterfaces = new Class<?>[interfaces.length]-->Line_28 $$ return Proxy.getProxyClass(getFallbackClassLoader(), resolvedInterfaces)[ FD ]
Line_2 $$ protected Class<?> resolveProxyClass(String[] interfaces) throws IOException, ClassNotFoundException -->Line_6 $$ if (this.classLoader != null) [ CD ]
Line_8 $$ for (int i = 0; i < interfaces.length; i++) -->Line_25 $$ for (int i = 0; i < interfaces.length; i++) [ FD ]
Line_6 $$ if (this.classLoader != null) -->Line_8 $$ for (int i = 0; i < interfaces.length; i++) [ CD ]
Line_6 $$ if (this.classLoader != null) -->Line_7 $$ Class<?>[] resolvedInterfaces = new Class<?>[interfaces.length][ CD ]
Line_2 $$ protected Class<?> resolveProxyClass(String[] interfaces) throws IOException, ClassNotFoundException -->Line_3 $$ if (!this.acceptProxyClasses) [ CD ]
