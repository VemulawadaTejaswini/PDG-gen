Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_13 $$ Insets insets = getInsets()[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_11 $$ super.paintComponent(g)[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_54 $$ panel.add(myScrollPane, BorderLayout.CENTER)[ FD ]
Line_34 $$ final Component navBar = myScrollPane-->Line_35 $$ final Dimension preferredSize = navBar.getPreferredSize()[ FD ]
Line_15 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_16 $$ g2d.translate(r.x, r.y)[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_18 $$ NavBarUIManager.getUI().doPaintNavBarPanel(g2d, rectangle, isMainToolbarVisible(), isUndocked())[ CD ]
Line_2 $$ private JComponent buildNavBarPanel() -->Line_5 $$ myNavigationBar.getModel().setFixedComponent(true)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_12 $$ final Component navBar = myScrollPane[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_30 $$ final Insets insets = getInsets()[ CD ]
Line_12 $$ final Component navBar = myScrollPane-->Line_36 $$ navBar.setBounds(x, (r.height - preferredSize.height) / 2, r.width - insets.left - insets.right, preferredSize.height)[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_11 $$ super.paintComponent(g)[ CD ]
Line_2 $$ private JComponent buildNavBarPanel() -->Line_55 $$ panel.updateUI()[ CD ]
Line_2 $$ private JComponent buildNavBarPanel() -->Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) [ CD ]
Line_15 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_23 $$ g2d.dispose()[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_48 $$ myScrollPane.setOpaque(false)[ CD ]
Line_15 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_21 $$ NavBarUIManager.getUI().doPaintWrapperPanel(g2d, bounds, false)[ FD ]
Line_34 $$ final Component navBar = myScrollPane-->Line_36 $$ navBar.setBounds(x, (r.height - preferredSize.height) / 2, r.width - insets.left - insets.right, preferredSize.height)[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_42 $$ setOpaque(true)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_47 $$ myScrollPane.setBorder(new NavBarBorder())[ CD ]
Line_2 $$ private JComponent buildNavBarPanel() -->Line_56 $$ return panel[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_17 $$ Rectangle rectangle = new Rectangle(0, 0, r.width + insets.left + insets.right, r.height + insets.top + insets.bottom)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_36 $$ navBar.setBounds(x, (r.height - preferredSize.height) / 2, r.width - insets.left - insets.right, preferredSize.height)[ CD ]
Line_2 $$ private JComponent buildNavBarPanel() -->Line_54 $$ panel.add(myScrollPane, BorderLayout.CENTER)[ CD ]
Line_32 $$ if (myScrollPane == null)-->Line_33 $$ return[ CD ]
Line_12 $$ final Component navBar = myScrollPane-->Line_35 $$ final Dimension preferredSize = navBar.getPreferredSize()[ FD ]
Line_15 $$ Graphics2D g2d = (Graphics2D) g.create()-->Line_18 $$ NavBarUIManager.getUI().doPaintNavBarPanel(g2d, rectangle, isMainToolbarVisible(), isUndocked())[ FD ]
Line_31 $$ int x = insets.left-->Line_36 $$ navBar.setBounds(x, (r.height - preferredSize.height) / 2, r.width - insets.left - insets.right, preferredSize.height)[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_14 $$ Rectangle r = navBar.getBounds()[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_46 $$ myScrollPane.setHorizontalScrollBar(null)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_50 $$ myScrollPane.setViewportBorder(null)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_49 $$ myScrollPane.getViewport().setOpaque(false)[ CD ]
Line_2 $$ private JComponent buildNavBarPanel() -->Line_6 $$ myScrollPane = ScrollPaneFactory.createScrollPane(myNavigationBar)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_16 $$ g2d.translate(r.x, r.y)[ CD ]
Line_2 $$ private JComponent buildNavBarPanel() -->Line_4 $$ myWrapperPanel.putClientProperty("NavBarPanel", myNavigationBar)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_35 $$ final Dimension preferredSize = navBar.getPreferredSize()[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_15 $$ Graphics2D g2d = (Graphics2D) g.create()[ FD ]
Line_20 $$ Rectangle bounds = getParent().getBounds()-->Line_21 $$ NavBarUIManager.getUI().doPaintWrapperPanel(g2d, bounds, false)[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_55 $$ panel.updateUI()[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_45 $$ myScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_51 $$ myNavigationBar.setBorder(null)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_19 $$ if (UIUtil.isUnderAquaLookAndFeel() && isUndocked()) [ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_34 $$ final Component navBar = myScrollPane[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_32 $$ if (myScrollPane == null)[ CD ]
Line_17 $$ Rectangle rectangle = new Rectangle(0, 0, r.width + insets.left + insets.right, r.height + insets.top + insets.bottom)-->Line_18 $$ NavBarUIManager.getUI().doPaintNavBarPanel(g2d, rectangle, isMainToolbarVisible(), isUndocked())[ FD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_41 $$ super.updateUI()[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_43 $$ if (myScrollPane == null || myNavigationBar == null)[ CD ]
Line_43 $$ if (myScrollPane == null || myNavigationBar == null)-->Line_44 $$ return[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_15 $$ Graphics2D g2d = (Graphics2D) g.create()[ CD ]
Line_19 $$ if (UIUtil.isUnderAquaLookAndFeel() && isUndocked()) -->Line_20 $$ Rectangle bounds = getParent().getBounds()[ CD ]
Line_19 $$ if (UIUtil.isUnderAquaLookAndFeel() && isUndocked()) -->Line_21 $$ NavBarUIManager.getUI().doPaintWrapperPanel(g2d, bounds, false)[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_23 $$ g2d.dispose()[ CD ]
Line_7 $$ JPanel panel = new JPanel(new BorderLayout()) -->Line_31 $$ int x = insets.left[ CD ]
Line_12 $$ final Component navBar = myScrollPane-->Line_14 $$ Rectangle r = navBar.getBounds()[ FD ]
