Line_6 $$ if (myChooserComponent instanceof JList) -->Line_8 $$ myChooserComponent = ListWithFilter.wrap(list, new MyListWrapper(list), myItemsNamer)[ CD ]
Line_31 $$ (list != null ? list : myChooserComponent).addMouseListener(new MouseAdapter() -->Line_35 $$ if (UIUtil.isActionClick(e, MouseEvent.MOUSE_RELEASED) && !UIUtil.isSelectionButtonDown(e) && !e.isConsumed()) [ FD ]
Line_63 $$ if (myChooserComponent instanceof JTree) -->Line_64 $$ myScrollPane = createScrollPane((JTree) myChooserComponent)[ CD ]
Line_9 $$ keyEventHandler = new BooleanFunction<KeyEvent>() -->Line_13 $$ return keyEvent.isConsumed()[ FD ]
Line_7 $$ list = (JList) myChooserComponent-->Line_26 $$ if (list != null) [ FD ]
Line_93 $$ if (myMinSize != null) -->Line_94 $$ builder.setMinSize(myMinSize)[ CD ]
Line_27 $$ if (list.getSelectedIndex() == -1 && myAutoselect) -->Line_28 $$ list.setSelectedIndex(0)[ CD ]
Line_59 $$ if (myChooserComponent instanceof ListWithFilter) -->Line_60 $$ myScrollPane = ((ListWithFilter) myChooserComponent).getScrollPane()[ CD ]
Line_59 $$ if (myChooserComponent instanceof ListWithFilter) -->Line_61 $$ if (myChooserComponent instanceof JTable) [ CD ]
Line_31 $$ (list != null ? list : myChooserComponent).addMouseListener(new MouseAdapter() -->Line_37 $$ closePopup(true, e, true)[ FD ]
Line_6 $$ if (myChooserComponent instanceof JList) -->Line_9 $$ keyEventHandler = new BooleanFunction<KeyEvent>() [ CD ]
Line_7 $$ list = (JList) myChooserComponent-->Line_28 $$ list.setSelectedIndex(0)[ FD ]
Line_7 $$ list = (JList) myChooserComponent-->Line_27 $$ if (list.getSelectedIndex() == -1 && myAutoselect) [ FD ]
Line_36 $$ if (myCloseOnEnter) -->Line_37 $$ closePopup(true, e, true)[ CD ]
Line_9 $$ keyEventHandler = new BooleanFunction<KeyEvent>() -->Line_87 $$ if (keyEventHandler != null) [ FD ]
Line_4 $$ final JList list-->Line_26 $$ if (list != null) [ FD ]
Line_87 $$ if (keyEventHandler != null) -->Line_88 $$ builder.setKeyEventHandler(keyEventHandler)[ CD ]
Line_48 $$ registerKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), new ActionListener() -->Line_52 $$ myItemChosenRunnable.run()[ CD ]
Line_79 $$ if (myEastComponent != null) -->Line_80 $$ addEastComponentToContentPane(contentPane, myEastComponent)[ CD ]
Line_5 $$ BooleanFunction<KeyEvent> keyEventHandler = null-->Line_87 $$ if (keyEventHandler != null) [ FD ]
Line_71 $$ if (myChooserComponent instanceof ListWithFilter) -->Line_72 $$ addCenterComponentToContentPane(contentPane, myChooserComponent)[ CD ]
Line_96 $$ if (mySettingsButtons != null) -->Line_97 $$ builder.setSettingButtons(mySettingsButtons)[ CD ]
Line_4 $$ final JList list-->Line_28 $$ list.setSelectedIndex(0)[ FD ]
Line_61 $$ if (myChooserComponent instanceof JTable) -->Line_62 $$ myScrollPane = createScrollPane((JTable) myChooserComponent)[ CD ]
Line_20 $$ if (!myForceMovable && myTitle != null) -->Line_22 $$ label.setBorder(BorderFactory.createEmptyBorder(2, 5, 2, 5))[ CD ]
Line_71 $$ if (myChooserComponent instanceof ListWithFilter) -->Line_74 $$ addCenterComponentToContentPane(contentPane, myScrollPane)[ CD ]
Line_6 $$ if (myChooserComponent instanceof JList) -->Line_7 $$ list = (JList) myChooserComponent[ CD ]
Line_76 $$ if (mySouthComponent != null) -->Line_77 $$ addSouthComponentToContentPane(contentPane, mySouthComponent)[ CD ]
Line_9 $$ keyEventHandler = new BooleanFunction<KeyEvent>() -->Line_13 $$ return keyEvent.isConsumed()[ CD ]
Line_31 $$ (list != null ? list : myChooserComponent).addMouseListener(new MouseAdapter() -->Line_35 $$ if (UIUtil.isActionClick(e, MouseEvent.MOUSE_RELEASED) && !UIUtil.isSelectionButtonDown(e) && !e.isConsumed()) [ CD ]
Line_45 $$ if (myCloseOnEnter) -->Line_46 $$ registerClosePopupKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), true)[ CD ]
Line_20 $$ if (!myForceMovable && myTitle != null) -->Line_24 $$ contentPane.add(label, BorderLayout.NORTH)[ CD ]
Line_4 $$ final JList list-->Line_7 $$ list = (JList) myChooserComponent[ FD ]
Line_90 $$ if (myCommandButton != null) -->Line_91 $$ builder.setCommandButton(myCommandButton)[ CD ]
Line_36 $$ if (myCloseOnEnter) -->Line_39 $$ myItemChosenRunnable.run()[ CD ]
Line_45 $$ if (myCloseOnEnter) -->Line_48 $$ registerKeyboardAction(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), new ActionListener() [ CD ]
Line_26 $$ if (list != null) -->Line_27 $$ if (list.getSelectedIndex() == -1 && myAutoselect) [ CD ]
Line_4 $$ final JList list-->Line_27 $$ if (list.getSelectedIndex() == -1 && myAutoselect) [ FD ]
Line_7 $$ list = (JList) myChooserComponent-->Line_8 $$ myChooserComponent = ListWithFilter.wrap(list, new MyListWrapper(list), myItemsNamer)[ FD ]
Line_61 $$ if (myChooserComponent instanceof JTable) -->Line_63 $$ if (myChooserComponent instanceof JTree) [ CD ]
Line_20 $$ if (!myForceMovable && myTitle != null) -->Line_23 $$ label.setHorizontalAlignment(SwingConstants.CENTER)[ CD ]
Line_9 $$ keyEventHandler = new BooleanFunction<KeyEvent>() -->Line_88 $$ builder.setKeyEventHandler(keyEventHandler)[ FD ]
Line_4 $$ final JList list-->Line_8 $$ myChooserComponent = ListWithFilter.wrap(list, new MyListWrapper(list), myItemsNamer)[ FD ]
Line_5 $$ BooleanFunction<KeyEvent> keyEventHandler = null-->Line_88 $$ builder.setKeyEventHandler(keyEventHandler)[ FD ]
Line_35 $$ if (UIUtil.isActionClick(e, MouseEvent.MOUSE_RELEASED) && !UIUtil.isSelectionButtonDown(e) && !e.isConsumed()) -->Line_36 $$ if (myCloseOnEnter) [ CD ]
Line_5 $$ BooleanFunction<KeyEvent> keyEventHandler = null-->Line_9 $$ keyEventHandler = new BooleanFunction<KeyEvent>() [ FD ]
