Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_48 $$ tabbedPane.setSelectedIndex(index)[ CD ]
Line_38 $$ if (myCurrentUsageContextProvider == null || myCurrentUsageContextProvider == provider) -->Line_40 $$ myCurrentUsageContextPanel = provider.create(this)[ CD ]
Line_52 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)-->Line_54 $$ tabSelected(selectedProvider)[ FD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_30 $$ UsageContextPanel.Provider[] extensions = Extensions.getExtensions(UsageContextPanel.Provider.EP_NAME, myProject)[ CD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_23 $$ myPreviewSplitter.setProportion(UsageViewSettings.getInstance().PREVIEW_USAGES_SPLITTER_PROPORTIONS)[ CD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_59 $$ myPreviewSplitter.setSecondComponent(tabbedPane)[ CD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_58 $$ tabbedPane.setBorder(IdeBorderFactory.createBorder(SideBorder.LEFT))[ CD ]
Line_25 $$ final JBTabbedPane tabbedPane = new JBTabbedPane(SwingConstants.BOTTOM) -->Line_27 $$ return new Insets(0, 0, 0, 0)[ CD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_24 $$ treePane.putClientProperty(UIUtil.KEEP_BORDER_SIDES, SideBorder.RIGHT)[ CD ]
Line_31 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_40 $$ myCurrentUsageContextPanel = provider.create(this)[ FD ]
Line_6 $$ treePane.getViewport().addChangeListener(new ChangeListener() -->Line_8 $$ clearRendererCache()[ CD ]
Line_49 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_52 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_3 $$ myCentralPanel.removeAll()[ CD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_49 $$ tabbedPane.addChangeListener(new ChangeListener() [ CD ]
Line_49 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_53 $$ if (selectedProvider != myCurrentUsageContextProvider) [ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_64 $$ myAdditionalComponent.add(myButtonPanel, BorderLayout.SOUTH)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_65 $$ myRootPanel.revalidate()[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_5 $$ JScrollPane treePane = ScrollPaneFactory.createScrollPane(myTree)[ CD ]
Line_5 $$ JScrollPane treePane = ScrollPaneFactory.createScrollPane(myTree)-->Line_20 $$ myPreviewSplitter.setFirstComponent(treePane)[ FD ]
Line_31 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_45 $$ tabbedPane.addTab(provider.getTabTitle(), component)[ FD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_61 $$ myPreviewSplitter.setProportion(1)[ CD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_47 $$ int index = myUsageContextPanelProviders.indexOf(myCurrentUsageContextProvider)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_11 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() [ CD ]
Line_11 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_13 $$ clearRendererCache()[ CD ]
Line_51 $$ int currentIndex = tabbedPane.getSelectedIndex()-->Line_52 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)[ FD ]
Line_53 $$ if (selectedProvider != myCurrentUsageContextProvider) -->Line_54 $$ tabSelected(selectedProvider)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_21 $$ myCentralPanel.add(myPreviewSplitter, BorderLayout.CENTER)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) [ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_20 $$ myPreviewSplitter.setFirstComponent(treePane)[ CD ]
Line_52 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)-->Line_53 $$ if (selectedProvider != myCurrentUsageContextProvider) [ FD ]
Line_2 $$ private void setupCentralPanel() -->Line_6 $$ treePane.getViewport().addChangeListener(new ChangeListener() [ CD ]
Line_31 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_33 $$ return provider.isAvailableFor(UsageViewImpl.this)[ FD ]
Line_2 $$ private void setupCentralPanel() -->Line_66 $$ myRootPanel.repaint()[ CD ]
Line_31 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_33 $$ return provider.isAvailableFor(UsageViewImpl.this)[ CD ]
Line_38 $$ if (myCurrentUsageContextProvider == null || myCurrentUsageContextProvider == provider) -->Line_41 $$ component = myCurrentUsageContextPanel.createComponent()[ CD ]
Line_5 $$ JScrollPane treePane = ScrollPaneFactory.createScrollPane(myTree)-->Line_6 $$ treePane.getViewport().addChangeListener(new ChangeListener() [ FD ]
Line_11 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_16 $$ clearRendererCache()[ CD ]
Line_49 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_51 $$ int currentIndex = tabbedPane.getSelectedIndex()[ CD ]
Line_22 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_31 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() [ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_63 $$ myCentralPanel.add(myAdditionalComponent, BorderLayout.SOUTH)[ CD ]
Line_5 $$ JScrollPane treePane = ScrollPaneFactory.createScrollPane(myTree)-->Line_24 $$ treePane.putClientProperty(UIUtil.KEEP_BORDER_SIDES, SideBorder.RIGHT)[ FD ]
Line_2 $$ private void setupCentralPanel() -->Line_4 $$ disposeUsageContextPanels()[ CD ]
