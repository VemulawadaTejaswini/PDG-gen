Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_74 $$ tabbedPane.setBorder(IdeBorderFactory.createBorder(SideBorder.LEFT))[ CD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_42 $$ UsageContextPanel.Provider[] extensions = Extensions.getExtensions(UsageContextPanel.Provider.EP_NAME, myProject)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_3 $$ myCentralPanel.removeAll()[ CD ]
Line_63 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_68 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)[ CD ]
Line_68 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)-->Line_69 $$ if (selectedProvider != myCurrentUsageContextProvider) [ FD ]
Line_52 $$ if (myCurrentUsageContextProvider == null || myCurrentUsageContextProvider == provider) -->Line_55 $$ component = myCurrentUsageContextPanel.createComponent()[ CD ]
Line_43 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_47 $$ return provider.isAvailableFor(UsageViewImpl.this)[ FD ]
Line_2 $$ private void setupCentralPanel() -->Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) [ CD ]
Line_52 $$ if (myCurrentUsageContextProvider == null || myCurrentUsageContextProvider == provider) -->Line_54 $$ myCurrentUsageContextPanel = provider.create(this)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_16 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() [ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_30 $$ myCentralPanel.add(myPreviewSplitter, BorderLayout.CENTER)[ CD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_33 $$ treePane.putClientProperty(UIUtil.KEEP_BORDER_SIDES, SideBorder.RIGHT)[ CD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_43 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() [ CD ]
Line_5 $$ JScrollPane treePane = ScrollPaneFactory.createScrollPane(myTree)-->Line_33 $$ treePane.putClientProperty(UIUtil.KEEP_BORDER_SIDES, SideBorder.RIGHT)[ FD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_63 $$ tabbedPane.addChangeListener(new ChangeListener() [ CD ]
Line_69 $$ if (selectedProvider != myCurrentUsageContextProvider) -->Line_70 $$ tabSelected(selectedProvider)[ CD ]
Line_68 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)-->Line_70 $$ tabSelected(selectedProvider)[ FD ]
Line_2 $$ private void setupCentralPanel() -->Line_79 $$ myCentralPanel.add(myAdditionalComponent, BorderLayout.SOUTH)[ CD ]
Line_16 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_25 $$ clearRendererCache()[ CD ]
Line_34 $$ final JBTabbedPane tabbedPane = new JBTabbedPane(SwingConstants.BOTTOM) -->Line_39 $$ return new Insets(0, 0, 0, 0)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_82 $$ myRootPanel.repaint()[ CD ]
Line_63 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_69 $$ if (selectedProvider != myCurrentUsageContextProvider) [ CD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_75 $$ myPreviewSplitter.setSecondComponent(tabbedPane)[ CD ]
Line_67 $$ int currentIndex = tabbedPane.getSelectedIndex()-->Line_68 $$ UsageContextPanel.Provider selectedProvider = myUsageContextPanelProviders.get(currentIndex)[ FD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_77 $$ myPreviewSplitter.setProportion(1)[ CD ]
Line_16 $$ myTree.addTreeExpansionListener(new TreeExpansionListener() -->Line_20 $$ clearRendererCache()[ CD ]
Line_43 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_59 $$ tabbedPane.addTab(provider.getTabTitle(), component)[ FD ]
Line_2 $$ private void setupCentralPanel() -->Line_29 $$ myPreviewSplitter.setFirstComponent(treePane)[ CD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_62 $$ tabbedPane.setSelectedIndex(index)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_81 $$ myRootPanel.revalidate()[ CD ]
Line_63 $$ tabbedPane.addChangeListener(new ChangeListener() -->Line_67 $$ int currentIndex = tabbedPane.getSelectedIndex()[ CD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_32 $$ myPreviewSplitter.setProportion(UsageViewSettings.getInstance().PREVIEW_USAGES_SPLITTER_PROPORTIONS)[ CD ]
Line_43 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_54 $$ myCurrentUsageContextPanel = provider.create(this)[ FD ]
Line_43 $$ myUsageContextPanelProviders = ContainerUtil.filter(extensions, new Condition<UsageContextPanel.Provider>() -->Line_47 $$ return provider.isAvailableFor(UsageViewImpl.this)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_5 $$ JScrollPane treePane = ScrollPaneFactory.createScrollPane(myTree)[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_4 $$ disposeUsageContextPanels()[ CD ]
Line_2 $$ private void setupCentralPanel() -->Line_80 $$ myAdditionalComponent.add(myButtonPanel, BorderLayout.SOUTH)[ CD ]
Line_31 $$ if (UsageViewSettings.getInstance().IS_PREVIEW_USAGES) -->Line_61 $$ int index = myUsageContextPanelProviders.indexOf(myCurrentUsageContextProvider)[ CD ]
Line_5 $$ JScrollPane treePane = ScrollPaneFactory.createScrollPane(myTree)-->Line_29 $$ myPreviewSplitter.setFirstComponent(treePane)[ FD ]
