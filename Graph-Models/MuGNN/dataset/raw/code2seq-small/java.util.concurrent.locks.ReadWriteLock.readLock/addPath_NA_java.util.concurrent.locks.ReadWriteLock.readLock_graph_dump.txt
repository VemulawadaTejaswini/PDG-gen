Line_9 $$ paths = myFilesToRefresh.get(externalSystemId)-->Line_7 $$ while (paths == null) [ FD ]
Line_7 $$ while (paths == null) -->Line_8 $$ myFilesToRefresh.putIfAbsent(externalSystemId, ContainerUtilRt.<String>newHashSet())[ CD ]
Line_6 $$ Set<String> paths = myFilesToRefresh.get(externalSystemId)-->Line_11 $$ paths.add(path)[ FD ]
Line_3 $$ Lock lock = myVfsLock.readLock()-->Line_4 $$ lock.lock()[ FD ]
Line_6 $$ Set<String> paths = myFilesToRefresh.get(externalSystemId)-->Line_9 $$ paths = myFilesToRefresh.get(externalSystemId)[ FD ]
Line_2 $$ private void addPath(@NotNull ProjectSystemId externalSystemId, @NotNull String path) -->Line_9 $$ paths = myFilesToRefresh.get(externalSystemId)[ FD ]
Line_9 $$ paths = myFilesToRefresh.get(externalSystemId)-->Line_11 $$ paths.add(path)[ FD ]
Line_3 $$ Lock lock = myVfsLock.readLock()-->Line_13 $$ lock.unlock()[ FD ]
Line_2 $$ private void addPath(@NotNull ProjectSystemId externalSystemId, @NotNull String path) -->Line_6 $$ Set<String> paths = myFilesToRefresh.get(externalSystemId)[ FD ]
Line_2 $$ private void addPath(@NotNull ProjectSystemId externalSystemId, @NotNull String path) -->Line_4 $$ lock.lock()[ CD ]
Line_6 $$ Set<String> paths = myFilesToRefresh.get(externalSystemId)-->Line_7 $$ while (paths == null) [ FD ]
Line_2 $$ private void addPath(@NotNull ProjectSystemId externalSystemId, @NotNull String path) -->Line_11 $$ paths.add(path)[ FD ]
Line_2 $$ private void addPath(@NotNull ProjectSystemId externalSystemId, @NotNull String path) -->Line_3 $$ Lock lock = myVfsLock.readLock()[ CD ]
Line_7 $$ while (paths == null) -->Line_9 $$ paths = myFilesToRefresh.get(externalSystemId)[ CD ]
Line_2 $$ private void addPath(@NotNull ProjectSystemId externalSystemId, @NotNull String path) -->Line_8 $$ myFilesToRefresh.putIfAbsent(externalSystemId, ContainerUtilRt.<String>newHashSet())[ FD ]
