Line_3 $$ int n = 0-->Line_8 $$ n++[ FD ]
Line_2 $$ public int pendingRangeChanges(InetAddress source) -->Line_3 $$ int n = 0[ CD ]
Line_2 $$ public int pendingRangeChanges(InetAddress source) -->Line_5 $$ lock.readLock().lock()[ CD ]
Line_2 $$ public int pendingRangeChanges(InetAddress source) -->Line_4 $$ Collection<Range<Token>> sourceRanges = getPrimaryRangesFor(getTokens(source))[ CD ]
Line_2 $$ public int pendingRangeChanges(InetAddress source) -->Line_4 $$ Collection<Range<Token>> sourceRanges = getPrimaryRangesFor(getTokens(source))[ FD ]
Line_7 $$ if (range.contains(token))-->Line_8 $$ n++[ CD ]
Line_2 $$ public int pendingRangeChanges(InetAddress source) -->Line_12 $$ return n[ CD ]
