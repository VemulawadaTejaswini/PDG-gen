Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_13 $$ final String jarEntryName = jarEntry.getName()[ FD ]
Line_27 $$ final String subName = extractName(subZipEntry)-->Line_28 $$ final InputStreamAccess inputStreamAccess = buildByteBasedInputStreamAccess(subName, subJarInputStream)[ FD ]
Line_5 $$ jarInputStream = new JarInputStream(getArchiveUrl().openStream())-->Line_24 $$ ZipEntry subZipEntry = jarInputStream.getNextEntry()[ FD ]
Line_29 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_34 $$ return subName[ CD ]
Line_22 $$ final JarInputStream subJarInputStream = new JarInputStream(jarInputStream)-->Line_28 $$ final InputStreamAccess inputStreamAccess = buildByteBasedInputStreamAccess(subName, subJarInputStream)[ FD ]
Line_22 $$ final JarInputStream subJarInputStream = new JarInputStream(jarInputStream)-->Line_45 $$ subJarInputStream.close()[ FD ]
Line_5 $$ jarInputStream = new JarInputStream(getArchiveUrl().openStream())-->Line_52 $$ final InputStreamAccess inputStreamAccess = buildByteBasedInputStreamAccess(entryName, jarInputStream)[ FD ]
Line_20 $$ if (jarEntryName.equals(getEntryBasePrefix())) -->Line_51 $$ final String entryName = extractName(jarEntry)[ CD ]
Line_2 $$ public void visitArchive(ArchiveContext context) -->Line_3 $$ final JarInputStream jarInputStream[ CD ]
Line_11 $$ JarEntry jarEntry-->Line_53 $$ final String relativeName = extractRelativeName(jarEntry)[ FD ]
Line_11 $$ JarEntry jarEntry-->Line_13 $$ final String jarEntryName = jarEntry.getName()[ FD ]
Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_51 $$ final String entryName = extractName(jarEntry)[ FD ]
Line_25 $$ while (subZipEntry != null) -->Line_42 $$ subZipEntry = jarInputStream.getNextJarEntry()[ CD ]
Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_17 $$ if (jarEntry.isDirectory()) [ CD ]
Line_20 $$ if (jarEntryName.equals(getEntryBasePrefix())) -->Line_53 $$ final String relativeName = extractRelativeName(jarEntry)[ CD ]
Line_11 $$ JarEntry jarEntry-->Line_51 $$ final String entryName = extractName(jarEntry)[ FD ]
Line_54 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_59 $$ return relativeName[ CD ]
Line_26 $$ if (!subZipEntry.isDirectory()) -->Line_28 $$ final InputStreamAccess inputStreamAccess = buildByteBasedInputStreamAccess(subName, subJarInputStream)[ CD ]
Line_26 $$ if (!subZipEntry.isDirectory()) -->Line_27 $$ final String subName = extractName(subZipEntry)[ CD ]
Line_3 $$ final JarInputStream jarInputStream-->Line_52 $$ final InputStreamAccess inputStreamAccess = buildByteBasedInputStreamAccess(entryName, jarInputStream)[ FD ]
Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_17 $$ if (jarEntry.isDirectory()) [ FD ]
Line_11 $$ JarEntry jarEntry-->Line_17 $$ if (jarEntry.isDirectory()) [ FD ]
Line_29 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_37 $$ return inputStreamAccess[ CD ]
Line_26 $$ if (!subZipEntry.isDirectory()) -->Line_29 $$ final ArchiveEntry entry = new ArchiveEntry() [ CD ]
Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_53 $$ final String relativeName = extractRelativeName(jarEntry)[ FD ]
Line_54 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_56 $$ return entryName[ CD ]
Line_2 $$ public void visitArchive(ArchiveContext context) -->Line_40 $$ context.obtainArchiveEntryHandler(entry).handleEntry(entry, context)[ FD ]
Line_3 $$ final JarInputStream jarInputStream-->Line_42 $$ subZipEntry = jarInputStream.getNextJarEntry()[ FD ]
Line_24 $$ ZipEntry subZipEntry = jarInputStream.getNextEntry()-->Line_26 $$ if (!subZipEntry.isDirectory()) [ FD ]
Line_13 $$ final String jarEntryName = jarEntry.getName()-->Line_20 $$ if (jarEntryName.equals(getEntryBasePrefix())) [ FD ]
Line_20 $$ if (jarEntryName.equals(getEntryBasePrefix())) -->Line_52 $$ final InputStreamAccess inputStreamAccess = buildByteBasedInputStreamAccess(entryName, jarInputStream)[ CD ]
Line_26 $$ if (!subZipEntry.isDirectory()) -->Line_40 $$ context.obtainArchiveEntryHandler(entry).handleEntry(entry, context)[ CD ]
Line_3 $$ final JarInputStream jarInputStream-->Line_68 $$ jarInputStream.close()[ FD ]
Line_3 $$ final JarInputStream jarInputStream-->Line_24 $$ ZipEntry subZipEntry = jarInputStream.getNextEntry()[ FD ]
Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_14 $$ if (getEntryBasePrefix() != null && !jarEntryName.startsWith(getEntryBasePrefix())) [ CD ]
Line_20 $$ if (jarEntryName.equals(getEntryBasePrefix())) -->Line_65 $$ context.obtainArchiveEntryHandler(entry).handleEntry(entry, context)[ CD ]
Line_54 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_62 $$ return inputStreamAccess[ CD ]
Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_20 $$ if (jarEntryName.equals(getEntryBasePrefix())) [ CD ]
Line_5 $$ jarInputStream = new JarInputStream(getArchiveUrl().openStream())-->Line_42 $$ subZipEntry = jarInputStream.getNextJarEntry()[ FD ]
Line_25 $$ while (subZipEntry != null) -->Line_26 $$ if (!subZipEntry.isDirectory()) [ CD ]
Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) -->Line_13 $$ final String jarEntryName = jarEntry.getName()[ CD ]
Line_24 $$ ZipEntry subZipEntry = jarInputStream.getNextEntry()-->Line_25 $$ while (subZipEntry != null) [ FD ]
Line_5 $$ jarInputStream = new JarInputStream(getArchiveUrl().openStream())-->Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) [ FD ]
Line_24 $$ ZipEntry subZipEntry = jarInputStream.getNextEntry()-->Line_27 $$ final String subName = extractName(subZipEntry)[ FD ]
Line_11 $$ JarEntry jarEntry-->Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) [ FD ]
Line_29 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_40 $$ context.obtainArchiveEntryHandler(entry).handleEntry(entry, context)[ FD ]
Line_29 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_65 $$ context.obtainArchiveEntryHandler(entry).handleEntry(entry, context)[ FD ]
Line_3 $$ final JarInputStream jarInputStream-->Line_5 $$ jarInputStream = new JarInputStream(getArchiveUrl().openStream())[ FD ]
Line_13 $$ final String jarEntryName = jarEntry.getName()-->Line_14 $$ if (getEntryBasePrefix() != null && !jarEntryName.startsWith(getEntryBasePrefix())) [ FD ]
Line_5 $$ jarInputStream = new JarInputStream(getArchiveUrl().openStream())-->Line_68 $$ jarInputStream.close()[ FD ]
Line_3 $$ final JarInputStream jarInputStream-->Line_12 $$ while ((jarEntry = jarInputStream.getNextJarEntry()) != null) [ FD ]
Line_29 $$ final ArchiveEntry entry = new ArchiveEntry() -->Line_31 $$ return subName[ CD ]
Line_2 $$ public void visitArchive(ArchiveContext context) -->Line_65 $$ context.obtainArchiveEntryHandler(entry).handleEntry(entry, context)[ FD ]
