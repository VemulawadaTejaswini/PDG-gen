Line_16 $$ if (img == null) -->Line_21 $$ imgG2d.dispose()[ CD ]
Line_16 $$ if (img == null) -->Line_19 $$ imgG2d.addRenderingHints(g2d.getRenderingHints())[ CD ]
Line_18 $$ Graphics2D imgG2d = img.createGraphics()-->Line_21 $$ imgG2d.dispose()[ FD ]
Line_5 $$ final TabLabel label = myInfo2Label.get(each)-->Line_27 $$ label.setInactiveStateImage(null)[ FD ]
Line_5 $$ final TabLabel label = myInfo2Label.get(each)-->Line_9 $$ Rectangle bounds = label.getBounds()[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_8 $$ int imageInsets = getArcSize() + 1[ CD ]
Line_14 $$ if (isToBufferPainting()) -->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ CD ]
Line_9 $$ Rectangle bounds = label.getBounds()-->Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)[ FD ]
Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)-->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ FD ]
Line_5 $$ final TabLabel label = myInfo2Label.get(each)-->Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_19 $$ imgG2d.addRenderingHints(g2d.getRenderingHints())[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_11 $$ int y = bounds.y[ CD ]
Line_17 $$ img = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_ARGB)-->Line_18 $$ Graphics2D imgG2d = img.createGraphics()[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_13 $$ int height = bounds.height + getArcSize() + 1[ CD ]
Line_14 $$ if (isToBufferPainting()) -->Line_27 $$ label.setInactiveStateImage(null)[ CD ]
Line_17 $$ img = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_ARGB)-->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ FD ]
Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)-->Line_18 $$ Graphics2D imgG2d = img.createGraphics()[ FD ]
Line_14 $$ if (isToBufferPainting()) -->Line_24 $$ label.setInactiveStateImage(img)[ CD ]
Line_12 $$ int width = bounds.width + imageInsets * 2 + 1-->Line_17 $$ img = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_ARGB)[ FD ]
Line_18 $$ Graphics2D imgG2d = img.createGraphics()-->Line_19 $$ imgG2d.addRenderingHints(g2d.getRenderingHints())[ FD ]
Line_5 $$ final TabLabel label = myInfo2Label.get(each)-->Line_20 $$ doPaintInactive(imgG2d, leftGhostExists, label, new Rectangle(imageInsets, 0, label.getWidth(), label.getHeight()), rightGhostExists, row, column)[ FD ]
Line_16 $$ if (img == null) -->Line_18 $$ Graphics2D imgG2d = img.createGraphics()[ CD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_6 $$ if (label.getBounds().width == 0)[ CD ]
Line_14 $$ if (isToBufferPainting()) -->Line_16 $$ if (img == null) [ CD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_26 $$ doPaintInactive(g2d, leftGhostExists, label, label.getBounds(), rightGhostExists, row, column)[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_20 $$ doPaintInactive(imgG2d, leftGhostExists, label, new Rectangle(imageInsets, 0, label.getWidth(), label.getHeight()), rightGhostExists, row, column)[ FD ]
Line_10 $$ int x = bounds.x - imageInsets-->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ FD ]
Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)-->Line_16 $$ if (img == null) [ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_10 $$ int x = bounds.x - imageInsets[ CD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_9 $$ Rectangle bounds = label.getBounds()[ CD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_14 $$ if (isToBufferPainting()) [ CD ]
Line_12 $$ int width = bounds.width + imageInsets * 2 + 1-->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ FD ]
Line_16 $$ if (img == null) -->Line_20 $$ doPaintInactive(imgG2d, leftGhostExists, label, new Rectangle(imageInsets, 0, label.getWidth(), label.getHeight()), rightGhostExists, row, column)[ CD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_3 $$ if (myDropInfo == each)[ FD ]
Line_6 $$ if (label.getBounds().width == 0)-->Line_7 $$ return[ CD ]
Line_5 $$ final TabLabel label = myInfo2Label.get(each)-->Line_6 $$ if (label.getBounds().width == 0)[ FD ]
Line_13 $$ int height = bounds.height + getArcSize() + 1-->Line_17 $$ img = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_ARGB)[ FD ]
Line_11 $$ int y = bounds.y-->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ FD ]
Line_5 $$ final TabLabel label = myInfo2Label.get(each)-->Line_24 $$ label.setInactiveStateImage(img)[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_5 $$ final TabLabel label = myInfo2Label.get(each)[ CD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_5 $$ final TabLabel label = myInfo2Label.get(each)[ FD ]
Line_14 $$ if (isToBufferPainting()) -->Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)[ CD ]
Line_5 $$ final TabLabel label = myInfo2Label.get(each)-->Line_26 $$ doPaintInactive(g2d, leftGhostExists, label, label.getBounds(), rightGhostExists, row, column)[ FD ]
Line_16 $$ if (img == null) -->Line_17 $$ img = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_ARGB)[ CD ]
Line_3 $$ if (myDropInfo == each)-->Line_4 $$ return[ CD ]
Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)-->Line_17 $$ img = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_ARGB)[ FD ]
Line_17 $$ img = UIUtil.createImage(width, height, BufferedImage.TYPE_INT_ARGB)-->Line_24 $$ label.setInactiveStateImage(img)[ FD ]
Line_14 $$ if (isToBufferPainting()) -->Line_26 $$ doPaintInactive(g2d, leftGhostExists, label, label.getBounds(), rightGhostExists, row, column)[ CD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_3 $$ if (myDropInfo == each)[ CD ]
Line_18 $$ Graphics2D imgG2d = img.createGraphics()-->Line_20 $$ doPaintInactive(imgG2d, leftGhostExists, label, new Rectangle(imageInsets, 0, label.getWidth(), label.getHeight()), rightGhostExists, row, column)[ FD ]
Line_13 $$ int height = bounds.height + getArcSize() + 1-->Line_23 $$ g2d.drawImage(img, x, y, width, height, null)[ FD ]
Line_2 $$ private void paintNonSelected(final Graphics2D g2d, final TabInfo each, final boolean leftGhostExists, final boolean rightGhostExists, int row, int column) -->Line_12 $$ int width = bounds.width + imageInsets * 2 + 1[ CD ]
Line_15 $$ BufferedImage img = label.getInactiveStateImage(bounds)-->Line_24 $$ label.setInactiveStateImage(img)[ FD ]
