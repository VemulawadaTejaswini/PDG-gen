Line_8 $$ final File tempDir = new File(tempPath)-->Line_12 $$ final File[] files = tempDir.listFiles()[ FD ]
Line_2 $$ private void startTempDirectoryCleanupTask() -->Line_9 $$ if (!FileUtil.isAncestor(systemRoot, tempDir, true)) [ CD ]
Line_2 $$ private void startTempDirectoryCleanupTask() -->Line_8 $$ final File tempDir = new File(tempPath)[ CD ]
Line_3 $$ final File systemRoot = Utils.getSystemRoot()-->Line_9 $$ if (!FileUtil.isAncestor(systemRoot, tempDir, true)) [ FD ]
Line_14 $$ final RunnableFuture<Void> task = new FutureTask<Void>(new Runnable() -->Line_25 $$ myAsyncTasks.add(task)[ FD ]
Line_9 $$ if (!FileUtil.isAncestor(systemRoot, tempDir, true)) -->Line_10 $$ return[ CD ]
Line_2 $$ private void startTempDirectoryCleanupTask() -->Line_3 $$ final File systemRoot = Utils.getSystemRoot()[ CD ]
Line_13 $$ if (files != null && files.length != 0) -->Line_25 $$ myAsyncTasks.add(task)[ CD ]
Line_8 $$ final File tempDir = new File(tempPath)-->Line_9 $$ if (!FileUtil.isAncestor(systemRoot, tempDir, true)) [ FD ]
Line_2 $$ private void startTempDirectoryCleanupTask() -->Line_5 $$ if (StringUtil.isEmptyOrSpaces(tempPath)) [ CD ]
Line_13 $$ if (files != null && files.length != 0) -->Line_22 $$ thread.setPriority(Thread.MIN_PRIORITY)[ CD ]
Line_2 $$ private void startTempDirectoryCleanupTask() -->Line_12 $$ final File[] files = tempDir.listFiles()[ CD ]
Line_13 $$ if (files != null && files.length != 0) -->Line_24 $$ thread.start()[ CD ]
Line_13 $$ if (files != null && files.length != 0) -->Line_23 $$ thread.setDaemon(true)[ CD ]
Line_2 $$ private void startTempDirectoryCleanupTask() -->Line_13 $$ if (files != null && files.length != 0) [ CD ]
Line_16 $$ for (File tempFile : files) -->Line_17 $$ FileUtil.delete(tempFile)[ FD ]
Line_2 $$ private void startTempDirectoryCleanupTask() -->Line_4 $$ final String tempPath = System.getProperty("java.io.tmpdir", null)[ CD ]
Line_5 $$ if (StringUtil.isEmptyOrSpaces(tempPath)) -->Line_6 $$ return[ CD ]
Line_4 $$ final String tempPath = System.getProperty("java.io.tmpdir", null)-->Line_5 $$ if (StringUtil.isEmptyOrSpaces(tempPath)) [ FD ]
Line_13 $$ if (files != null && files.length != 0) -->Line_14 $$ final RunnableFuture<Void> task = new FutureTask<Void>(new Runnable() [ CD ]
