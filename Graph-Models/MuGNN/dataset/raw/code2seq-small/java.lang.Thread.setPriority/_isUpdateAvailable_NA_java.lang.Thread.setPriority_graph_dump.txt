Line_10 $$ Thread indexerThread = new Thread(new UpdateAvailableRunner(), PluginPackageUtil.class.getName())-->Line_11 $$ indexerThread.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_8 $$ if (!_settingUpdateAvailable) -->Line_11 $$ indexerThread.setPriority(Thread.MIN_PRIORITY)[ CD ]
Line_2 $$ private boolean _isUpdateAvailable() -->Line_3 $$ if (!PrefsPropsUtil.getBoolean(PropsKeys.PLUGIN_NOTIFICATIONS_ENABLED, PropsValues.PLUGIN_NOTIFICATIONS_ENABLED)) [ CD ]
Line_10 $$ Thread indexerThread = new Thread(new UpdateAvailableRunner(), PluginPackageUtil.class.getName())-->Line_12 $$ indexerThread.start()[ FD ]
Line_2 $$ private boolean _isUpdateAvailable() -->Line_6 $$ if (_updateAvailable != null) [ CD ]
Line_8 $$ if (!_settingUpdateAvailable) -->Line_12 $$ indexerThread.start()[ CD ]
Line_3 $$ if (!PrefsPropsUtil.getBoolean(PropsKeys.PLUGIN_NOTIFICATIONS_ENABLED, PropsValues.PLUGIN_NOTIFICATIONS_ENABLED)) -->Line_4 $$ return false[ CD ]
Line_6 $$ if (_updateAvailable != null) -->Line_8 $$ if (!_settingUpdateAvailable) [ CD ]
Line_2 $$ private boolean _isUpdateAvailable() -->Line_14 $$ return false[ CD ]
Line_8 $$ if (!_settingUpdateAvailable) -->Line_10 $$ Thread indexerThread = new Thread(new UpdateAvailableRunner(), PluginPackageUtil.class.getName())[ CD ]
Line_6 $$ if (_updateAvailable != null) -->Line_7 $$ return _updateAvailable.booleanValue()[ CD ]
