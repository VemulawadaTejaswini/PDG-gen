Line_14 $$ final String interval = System.getProperty("performance.watcher.interval")-->Line_15 $$ if (interval != null) [ FD ]
Line_7 $$ final String threshold = System.getProperty("performance.watcher.threshold")-->Line_8 $$ if (threshold != null) [ FD ]
Line_2 $$ public void initComponent() -->Line_4 $$ if (!shouldWatch())[ CD ]
Line_4 $$ if (!shouldWatch())-->Line_5 $$ return[ CD ]
Line_2 $$ public void initComponent() -->Line_41 $$ myThread.start()[ CD ]
Line_43 $$ if ("Code Cache".equals(bean.getName())) -->Line_45 $$ return[ CD ]
Line_7 $$ final String threshold = System.getProperty("performance.watcher.threshold")-->Line_10 $$ UNRESPONSIVE_THRESHOLD_SECONDS = Integer.parseInt(threshold)[ FD ]
Line_2 $$ public void initComponent() -->Line_21 $$ if (UNRESPONSIVE_THRESHOLD_SECONDS == 0 || UNRESPONSIVE_INTERVAL_SECONDS == 0) [ CD ]
Line_2 $$ public void initComponent() -->Line_3 $$ myThreadMXBean = ManagementFactory.getThreadMXBean()[ CD ]
Line_14 $$ final String interval = System.getProperty("performance.watcher.interval")-->Line_17 $$ UNRESPONSIVE_INTERVAL_SECONDS = Integer.parseInt(interval)[ FD ]
Line_2 $$ public void initComponent() -->Line_24 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() [ CD ]
Line_2 $$ public void initComponent() -->Line_7 $$ final String threshold = System.getProperty("performance.watcher.threshold")[ CD ]
Line_43 $$ if ("Code Cache".equals(bean.getName())) -->Line_44 $$ watchCodeCache(bean)[ CD ]
Line_2 $$ public void initComponent() -->Line_6 $$ myPublisher = ApplicationManager.getApplication().getMessageBus().syncPublisher(IdePerformanceListener.TOPIC)[ CD ]
Line_2 $$ public void initComponent() -->Line_8 $$ if (threshold != null) [ CD ]
Line_2 $$ public void initComponent() -->Line_40 $$ myThread.setPriority(Thread.MIN_PRIORITY)[ CD ]
Line_21 $$ if (UNRESPONSIVE_THRESHOLD_SECONDS == 0 || UNRESPONSIVE_INTERVAL_SECONDS == 0) -->Line_22 $$ return[ CD ]
Line_35 $$ myThread = new Thread(new Runnable() -->Line_37 $$ checkEDTResponsiveness()[ CD ]
Line_2 $$ public void initComponent() -->Line_14 $$ final String interval = System.getProperty("performance.watcher.interval")[ CD ]
Line_2 $$ public void initComponent() -->Line_15 $$ if (interval != null) [ CD ]
Line_24 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_26 $$ deleteOldThreadDumps()[ CD ]
