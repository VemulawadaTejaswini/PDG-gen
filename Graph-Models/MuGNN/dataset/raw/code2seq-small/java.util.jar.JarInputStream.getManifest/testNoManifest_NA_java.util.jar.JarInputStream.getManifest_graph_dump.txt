Line_8 $$ Writer writer = new FileWriter(propsFile)-->Line_9 $$ new Properties().store(writer, "")[ FD ]
Line_4 $$ File dir = new File(System.getProperty("test.build.dir", "target/test-dir"), TestJarFinder.class.getName() + "-testNoManifest")-->Line_6 $$ dir.mkdirs()[ FD ]
Line_11 $$ ByteArrayOutputStream baos = new ByteArrayOutputStream()-->Line_14 $$ JarInputStream jis = new JarInputStream(new ByteArrayInputStream(baos.toByteArray()))[ FD ]
Line_14 $$ JarInputStream jis = new JarInputStream(new ByteArrayInputStream(baos.toByteArray()))-->Line_15 $$ Assert.assertNotNull(jis.getManifest())[ FD ]
Line_14 $$ JarInputStream jis = new JarInputStream(new ByteArrayInputStream(baos.toByteArray()))-->Line_16 $$ jis.close()[ FD ]
Line_4 $$ File dir = new File(System.getProperty("test.build.dir", "target/test-dir"), TestJarFinder.class.getName() + "-testNoManifest")-->Line_13 $$ JarFinder.jarDir(dir, "", zos)[ FD ]
Line_12 $$ JarOutputStream zos = new JarOutputStream(baos)-->Line_13 $$ JarFinder.jarDir(dir, "", zos)[ FD ]
Line_4 $$ File dir = new File(System.getProperty("test.build.dir", "target/test-dir"), TestJarFinder.class.getName() + "-testNoManifest")-->Line_5 $$ delete(dir)[ FD ]
Line_8 $$ Writer writer = new FileWriter(propsFile)-->Line_10 $$ writer.close()[ FD ]
