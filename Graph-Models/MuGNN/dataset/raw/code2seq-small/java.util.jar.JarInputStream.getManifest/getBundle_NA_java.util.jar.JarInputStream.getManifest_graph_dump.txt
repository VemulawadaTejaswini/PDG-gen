Line_7 $$ JarInputStream jarInputStream = new JarInputStream(inputStream)-->Line_8 $$ Manifest manifest = jarInputStream.getManifest()[ FD ]
Line_12 $$ Attributes attributes = manifest.getMainAttributes()-->Line_13 $$ String bundleSymbolicNameAttributeValue = attributes.getValue(Constants.BUNDLE_SYMBOLICNAME)[ FD ]
Line_22 $$ if (bundleSymbolicName.equals(bundle.getSymbolicName()) && bundleVersion.equals(curBundleVersion)) -->Line_23 $$ return bundle[ CD ]
Line_20 $$ for (Bundle bundle : bundleContext.getBundles()) -->Line_21 $$ Version curBundleVersion = Version.parseVersion(String.valueOf(bundle.getVersion()))[ FD ]
Line_2 $$ public Bundle getBundle(BundleContext bundleContext, InputStream inputStream) throws PortalException -->Line_9 $$ if (inputStream.markSupported()) [ FD ]
Line_2 $$ public Bundle getBundle(BundleContext bundleContext, InputStream inputStream) throws PortalException -->Line_20 $$ for (Bundle bundle : bundleContext.getBundles()) [ FD ]
Line_4 $$ if (inputStream.markSupported()) -->Line_5 $$ inputStream.mark(1024 * 1000)[ CD ]
Line_8 $$ Manifest manifest = jarInputStream.getManifest()-->Line_12 $$ Attributes attributes = manifest.getMainAttributes()[ FD ]
Line_9 $$ if (inputStream.markSupported()) -->Line_10 $$ inputStream.reset()[ CD ]
Line_20 $$ for (Bundle bundle : bundleContext.getBundles()) -->Line_22 $$ if (bundleSymbolicName.equals(bundle.getSymbolicName()) && bundleVersion.equals(curBundleVersion)) [ FD ]
Line_21 $$ Version curBundleVersion = Version.parseVersion(String.valueOf(bundle.getVersion()))-->Line_22 $$ if (bundleSymbolicName.equals(bundle.getSymbolicName()) && bundleVersion.equals(curBundleVersion)) [ FD ]
Line_16 $$ Iterator<String> bundleSymbolicNameIterator = bundleSymbolicNameSet.iterator()-->Line_17 $$ String bundleSymbolicName = bundleSymbolicNameIterator.next()[ FD ]
Line_19 $$ Version bundleVersion = Version.parseVersion(bundleVersionAttributeValue)-->Line_22 $$ if (bundleSymbolicName.equals(bundle.getSymbolicName()) && bundleVersion.equals(curBundleVersion)) [ FD ]
Line_2 $$ public Bundle getBundle(BundleContext bundleContext, InputStream inputStream) throws PortalException -->Line_4 $$ if (inputStream.markSupported()) [ FD ]
Line_18 $$ String bundleVersionAttributeValue = attributes.getValue(Constants.BUNDLE_VERSION)-->Line_19 $$ Version bundleVersion = Version.parseVersion(bundleVersionAttributeValue)[ FD ]
Line_14 $$ Parameters parameters = OSGiHeader.parseHeader(bundleSymbolicNameAttributeValue)-->Line_15 $$ Set<String> bundleSymbolicNameSet = parameters.keySet()[ FD ]
Line_2 $$ public Bundle getBundle(BundleContext bundleContext, InputStream inputStream) throws PortalException -->Line_5 $$ inputStream.mark(1024 * 1000)[ FD ]
Line_13 $$ String bundleSymbolicNameAttributeValue = attributes.getValue(Constants.BUNDLE_SYMBOLICNAME)-->Line_14 $$ Parameters parameters = OSGiHeader.parseHeader(bundleSymbolicNameAttributeValue)[ FD ]
Line_15 $$ Set<String> bundleSymbolicNameSet = parameters.keySet()-->Line_16 $$ Iterator<String> bundleSymbolicNameIterator = bundleSymbolicNameSet.iterator()[ FD ]
Line_17 $$ String bundleSymbolicName = bundleSymbolicNameIterator.next()-->Line_22 $$ if (bundleSymbolicName.equals(bundle.getSymbolicName()) && bundleVersion.equals(curBundleVersion)) [ FD ]
Line_2 $$ public Bundle getBundle(BundleContext bundleContext, InputStream inputStream) throws PortalException -->Line_10 $$ inputStream.reset()[ FD ]
Line_12 $$ Attributes attributes = manifest.getMainAttributes()-->Line_18 $$ String bundleVersionAttributeValue = attributes.getValue(Constants.BUNDLE_VERSION)[ FD ]
