Line_2 $$ public void flush() throws IOException, ClassNotFoundException, InterruptedException -->Line_38 $$ fileOutputByteCounter.increment(rfs.getFileStatus(outputPath).getLen())[ CD ]
Line_6 $$ while (spillInProgress) -->Line_8 $$ spillDone.await()[ CD ]
Line_2 $$ public void flush() throws IOException, ClassNotFoundException, InterruptedException -->Line_36 $$ mergeParts()[ CD ]
Line_2 $$ public void flush() throws IOException, ClassNotFoundException, InterruptedException -->Line_3 $$ LOG.info("Starting flush of map output")[ CD ]
Line_12 $$ if ((kvbend + METASIZE) % kvbuffer.length != equator - (equator % METASIZE)) -->Line_13 $$ resetSpill()[ CD ]
Line_15 $$ if (kvindex != kvend) -->Line_19 $$ LOG.info("bufstart = " + bufstart + "; bufend = " + bufmark + "; bufvoid = " + bufvoid)[ CD ]
Line_15 $$ if (kvindex != kvend) -->Line_21 $$ sortAndSpill()[ CD ]
Line_6 $$ while (spillInProgress) -->Line_7 $$ reporter.progress()[ CD ]
Line_2 $$ public void flush() throws IOException, ClassNotFoundException, InterruptedException -->Line_37 $$ Path outputPath = mapOutputFile.getOutputFile()[ CD ]
Line_37 $$ Path outputPath = mapOutputFile.getOutputFile()-->Line_38 $$ fileOutputByteCounter.increment(rfs.getFileStatus(outputPath).getLen())[ FD ]
Line_15 $$ if (kvindex != kvend) -->Line_20 $$ LOG.info("kvstart = " + kvstart + "(" + (kvstart * 4) + "); kvend = " + kvend + "(" + (kvend * 4) + "); length = " + (distanceTo(kvend, kvstart, kvmeta.capacity()) + 1) + "/" + maxRec)[ CD ]
Line_2 $$ public void flush() throws IOException, ClassNotFoundException, InterruptedException -->Line_4 $$ spillLock.lock()[ CD ]
Line_15 $$ if (kvindex != kvend) -->Line_18 $$ LOG.info("Spilling map output")[ CD ]
