Line_3 $$ ConcurrentMap<Key, Value> concurrentMap = new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference, ValueReference>() -->Line_6 $$ ValueReference valueReference = super.get(keyReference)[ CD ]
Line_3 $$ ConcurrentMap<Key, Value> concurrentMap = new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference, ValueReference>() -->Line_13 $$ Assert.assertNull(concurrentMap.put(_testKey, _testValue))[ FD ]
Line_2 $$ public void testRemoveWithValueConcurrentModification() -->Line_14 $$ _assertEventQueue(Event.MAP_KEY, Event.MAP_VALUE)[ CD ]
Line_3 $$ ConcurrentMap<Key, Value> concurrentMap = new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference, ValueReference>() -->Line_15 $$ Assert.assertFalse(concurrentMap.remove(_testKey, _testValue))[ FD ]
Line_3 $$ ConcurrentMap<Key, Value> concurrentMap = new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference, ValueReference>() -->Line_7 $$ if (_testKey.equals(keyReference._key)) [ CD ]
Line_2 $$ public void testRemoveWithValueConcurrentModification() -->Line_15 $$ Assert.assertFalse(concurrentMap.remove(_testKey, _testValue))[ CD ]
Line_2 $$ public void testRemoveWithValueConcurrentModification() -->Line_16 $$ _assertEventQueue(Event.MAP_KEY_FOR_QUERY, Event.MAP_VALUE_FOR_QUERY)[ CD ]
Line_2 $$ public void testRemoveWithValueConcurrentModification() -->Line_3 $$ ConcurrentMap<Key, Value> concurrentMap = new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference, ValueReference>() [ CD ]
Line_3 $$ ConcurrentMap<Key, Value> concurrentMap = new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference, ValueReference>() -->Line_5 $$ KeyReference keyReference = (KeyReference) key[ CD ]
Line_5 $$ KeyReference keyReference = (KeyReference) key-->Line_6 $$ ValueReference valueReference = super.get(keyReference)[ FD ]
Line_7 $$ if (_testKey.equals(keyReference._key)) -->Line_8 $$ put(new KeyReference(_testKey), new ValueReference(_testValue2))[ CD ]
Line_3 $$ ConcurrentMap<Key, Value> concurrentMap = new ConcurrentTypeReferenceHashMap(new ConcurrentHashMap<KeyReference, ValueReference>() -->Line_10 $$ return valueReference[ CD ]
Line_2 $$ public void testRemoveWithValueConcurrentModification() -->Line_13 $$ Assert.assertNull(concurrentMap.put(_testKey, _testValue))[ CD ]
