Line_3 $$ String spiProviderName = spiProvider.getName()-->Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) [ FD ]
Line_8 $$ while (iterator.hasNext()) -->Line_9 $$ SPI spi = iterator.next()[ CD ]
Line_9 $$ SPI spi = iterator.next()-->Line_14 $$ spi.destroy()[ FD ]
Line_3 $$ String spiProviderName = spiProvider.getName()-->Line_4 $$ SPIProviderContainer spiProviderContainer = _spiProviderContainers.get(spiProviderName)[ FD ]
Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) -->Line_6 $$ Collection<SPI> spis = spiProviderContainer.getSPIs()[ CD ]
Line_24 $$ if (_log.isInfoEnabled()) -->Line_25 $$ _log.info("Unregistered SPI provider " + spiProvider)[ CD ]
Line_9 $$ SPI spi = iterator.next()-->Line_13 $$ spi.stop()[ FD ]
Line_7 $$ Iterator<SPI> iterator = spis.iterator()-->Line_10 $$ iterator.remove()[ FD ]
Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) -->Line_8 $$ while (iterator.hasNext()) [ CD ]
Line_8 $$ while (iterator.hasNext()) -->Line_11 $$ _unregisteringSPIThreadLocal.set(spi)[ CD ]
Line_6 $$ Collection<SPI> spis = spiProviderContainer.getSPIs()-->Line_7 $$ Iterator<SPI> iterator = spis.iterator()[ FD ]
Line_2 $$ public static boolean unregisterSPIProvider(SPIProvider spiProvider) -->Line_3 $$ String spiProviderName = spiProvider.getName()[ FD ]
Line_2 $$ public static boolean unregisterSPIProvider(SPIProvider spiProvider) -->Line_4 $$ SPIProviderContainer spiProviderContainer = _spiProviderContainers.get(spiProviderName)[ CD ]
Line_4 $$ SPIProviderContainer spiProviderContainer = _spiProviderContainers.get(spiProviderName)-->Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) [ FD ]
Line_9 $$ SPI spi = iterator.next()-->Line_11 $$ _unregisteringSPIThreadLocal.set(spi)[ FD ]
Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) -->Line_7 $$ Iterator<SPI> iterator = spis.iterator()[ CD ]
Line_15 $$ if (_log.isInfoEnabled()) -->Line_16 $$ _log.info("Unregistered SPI " + spi + " while unregistering SPI provider " + spiProvider)[ CD ]
Line_29 $$ if (_log.isWarnEnabled()) -->Line_30 $$ _log.warn("Not unregistering unregistered SPI provider " + spiProvider)[ CD ]
Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) -->Line_24 $$ if (_log.isInfoEnabled()) [ CD ]
Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) -->Line_27 $$ return true[ CD ]
Line_2 $$ public static boolean unregisterSPIProvider(SPIProvider spiProvider) -->Line_32 $$ return false[ CD ]
Line_2 $$ public static boolean unregisterSPIProvider(SPIProvider spiProvider) -->Line_29 $$ if (_log.isWarnEnabled()) [ CD ]
Line_7 $$ Iterator<SPI> iterator = spis.iterator()-->Line_8 $$ while (iterator.hasNext()) [ FD ]
Line_2 $$ public static boolean unregisterSPIProvider(SPIProvider spiProvider) -->Line_3 $$ String spiProviderName = spiProvider.getName()[ CD ]
Line_2 $$ public static boolean unregisterSPIProvider(SPIProvider spiProvider) -->Line_5 $$ if ((spiProviderContainer != null) && (spiProviderContainer.getSPIProvider() == spiProvider) && _spiProviderContainers.remove(spiProviderName, spiProviderContainer)) [ CD ]
Line_8 $$ while (iterator.hasNext()) -->Line_10 $$ iterator.remove()[ CD ]
Line_4 $$ SPIProviderContainer spiProviderContainer = _spiProviderContainers.get(spiProviderName)-->Line_6 $$ Collection<SPI> spis = spiProviderContainer.getSPIs()[ FD ]
Line_7 $$ Iterator<SPI> iterator = spis.iterator()-->Line_9 $$ SPI spi = iterator.next()[ FD ]
