Line_4 $$ Set<K> keys = _indexedCacheKeys.get(index)-->Line_9 $$ if (keys.isEmpty() && _indexedCacheKeys.remove(index, keys)) [ FD ]
Line_2 $$ private void _removeIndexedCacheKey(K key) -->Line_4 $$ Set<K> keys = _indexedCacheKeys.get(index)[ CD ]
Line_2 $$ private void _removeIndexedCacheKey(K key) -->Line_3 $$ I index = _indexEncoder.encode(key)[ FD ]
Line_2 $$ private void _removeIndexedCacheKey(K key) -->Line_3 $$ I index = _indexEncoder.encode(key)[ CD ]
Line_4 $$ Set<K> keys = _indexedCacheKeys.get(index)-->Line_5 $$ if (keys == null) [ FD ]
Line_4 $$ Set<K> keys = _indexedCacheKeys.get(index)-->Line_8 $$ keys.remove(key)[ FD ]
Line_2 $$ private void _removeIndexedCacheKey(K key) -->Line_8 $$ keys.remove(key)[ FD ]
Line_3 $$ I index = _indexEncoder.encode(key)-->Line_4 $$ Set<K> keys = _indexedCacheKeys.get(index)[ FD ]
Line_5 $$ if (keys == null) -->Line_6 $$ return[ CD ]
Line_3 $$ I index = _indexEncoder.encode(key)-->Line_9 $$ if (keys.isEmpty() && _indexedCacheKeys.remove(index, keys)) [ FD ]
Line_2 $$ private void _removeIndexedCacheKey(K key) -->Line_8 $$ keys.remove(key)[ CD ]
Line_2 $$ private void _removeIndexedCacheKey(K key) -->Line_9 $$ if (keys.isEmpty() && _indexedCacheKeys.remove(index, keys)) [ CD ]
Line_2 $$ private void _removeIndexedCacheKey(K key) -->Line_5 $$ if (keys == null) [ CD ]
Line_10 $$ for (K victimIndexedCacheKey : keys) -->Line_11 $$ _addIndexedCacheKey(victimIndexedCacheKey)[ FD ]
