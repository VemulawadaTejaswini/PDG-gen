Line_2 $$ public int update(final String sql) throws DataAccessException -->Line_4 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ public int update(final String sql) throws DataAccessException -->Line_3 $$ Assert.notNull(sql, "SQL must not be null")[ FD ]
Line_2 $$ public int update(final String sql) throws DataAccessException -->Line_3 $$ Assert.notNull(sql, "SQL must not be null")[ CD ]
Line_2 $$ public int update(final String sql) throws DataAccessException -->Line_19 $$ return execute(new UpdateStatementCallback())[ CD ]
Line_7 $$ class UpdateStatementCallback implements StatementCallback<Integer>, SqlProvider -->Line_9 $$ int rows = stmt.executeUpdate(sql)[ FD ]
Line_7 $$ class UpdateStatementCallback implements StatementCallback<Integer>, SqlProvider -->Line_13 $$ return rows[ CD ]
Line_7 $$ class UpdateStatementCallback implements StatementCallback<Integer>, SqlProvider -->Line_16 $$ return sql[ CD ]
Line_10 $$ if (logger.isDebugEnabled()) -->Line_11 $$ logger.debug("SQL update affected " + rows + " rows")[ CD ]
Line_7 $$ class UpdateStatementCallback implements StatementCallback<Integer>, SqlProvider -->Line_9 $$ int rows = stmt.executeUpdate(sql)[ CD ]
Line_4 $$ if (logger.isDebugEnabled()) -->Line_5 $$ logger.debug("Executing SQL update [" + sql + "]")[ CD ]
Line_7 $$ class UpdateStatementCallback implements StatementCallback<Integer>, SqlProvider -->Line_10 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ public int update(final String sql) throws DataAccessException -->Line_9 $$ int rows = stmt.executeUpdate(sql)[ FD ]
