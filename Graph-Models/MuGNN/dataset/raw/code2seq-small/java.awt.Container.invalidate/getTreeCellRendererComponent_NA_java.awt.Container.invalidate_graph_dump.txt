Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_3 $$ invalidate()[ CD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_6 $$ NodeState state = getNodeStatus(node)[ CD ]
Line_5 $$ CheckedTreeNode node = (CheckedTreeNode) value-->Line_9 $$ myCheckbox.setEnabled(node.isEnabled() && state != NodeState.PARTIAL)[ FD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_23 $$ customizeRenderer(tree, value, selected, expanded, leaf, row, hasFocus)[ FD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_4 $$ if (value instanceof CheckedTreeNode) [ FD ]
Line_17 $$ if (UIUtil.isUnderGTKLookAndFeel()) -->Line_18 $$ final Color background = selected ? UIUtil.getTreeSelectionBackground() : UIUtil.getTreeTextBackground()[ CD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_12 $$ setBackground(null)[ CD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_11 $$ myCheckbox.setBackground(null)[ CD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_10 $$ myCheckbox.setOpaque(false)[ CD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_16 $$ myTextRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus)[ CD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_24 $$ revalidate()[ CD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_25 $$ return this[ CD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_17 $$ if (UIUtil.isUnderGTKLookAndFeel()) [ CD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_9 $$ myCheckbox.setEnabled(node.isEnabled() && state != NodeState.PARTIAL)[ CD ]
Line_18 $$ final Color background = selected ? UIUtil.getTreeSelectionBackground() : UIUtil.getTreeTextBackground()-->Line_19 $$ UIUtil.changeBackGround(this, background)[ FD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_8 $$ myCheckbox.setSelected(state != NodeState.CLEAR)[ CD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_5 $$ CheckedTreeNode node = (CheckedTreeNode) value[ CD ]
Line_17 $$ if (UIUtil.isUnderGTKLookAndFeel()) -->Line_20 $$ if (UIUtil.isUnderNimbusLookAndFeel()) [ CD ]
Line_20 $$ if (UIUtil.isUnderNimbusLookAndFeel()) -->Line_21 $$ UIUtil.changeBackGround(this, UIUtil.TRANSPARENT_COLOR)[ CD ]
Line_5 $$ CheckedTreeNode node = (CheckedTreeNode) value-->Line_6 $$ NodeState state = getNodeStatus(node)[ FD ]
Line_17 $$ if (UIUtil.isUnderGTKLookAndFeel()) -->Line_19 $$ UIUtil.changeBackGround(this, background)[ CD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_4 $$ if (value instanceof CheckedTreeNode) [ CD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_14 $$ myCheckbox.setVisible(false)[ CD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_16 $$ myTextRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus)[ FD ]
Line_4 $$ if (value instanceof CheckedTreeNode) -->Line_7 $$ myCheckbox.setVisible(true)[ CD ]
Line_2 $$ public final Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_23 $$ customizeRenderer(tree, value, selected, expanded, leaf, row, hasFocus)[ CD ]
