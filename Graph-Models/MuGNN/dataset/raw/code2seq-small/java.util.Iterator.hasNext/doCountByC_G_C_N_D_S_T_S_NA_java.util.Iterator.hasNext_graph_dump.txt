Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ FD ]
Line_34 $$ if (itr.hasNext()) -->Line_36 $$ if (count != null) [ CD ]
Line_35 $$ Long count = itr.next()-->Line_37 $$ return count.intValue()[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D_S_T_S)-->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)[ FD ]
Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_29 $$ qPos.add(type)[ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ qPos.add(classNameId)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D_S_T_S)-->Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D_S_T_S)-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ names = CustomSQLUtil.keywords(names)[ CD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_28 $$ qPos.add(storageType)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_25 $$ qPos.add(names, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)-->Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_3 $$ names = CustomSQLUtil.keywords(names)-->Line_25 $$ qPos.add(names, 2)[ FD ]
Line_9 $$ if (inlineSQLHelper) -->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)[ CD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(storageType)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_22 $$ qPos.add(groupIds)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_24 $$ qPos.add(classNameId)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_27 $$ qPos.add(storageType)[ FD ]
Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_26 $$ qPos.add(descriptions, 2)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_5 $$ Session session = null-->Line_44 $$ closeSession(session)[ FD ]
Line_34 $$ if (itr.hasNext()) -->Line_35 $$ Long count = itr.next()[ CD ]
Line_7 $$ session = openSession()-->Line_44 $$ closeSession(session)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)-->Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_3 $$ names = CustomSQLUtil.keywords(names)-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_31 $$ qPos.add(status)[ FD ]
Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_33 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_22 $$ qPos.add(groupIds)[ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_27 $$ qPos.add(storageType)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_26 $$ qPos.add(descriptions, 2)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_5 $$ Session session = null-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D_S_T_S)-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_33 $$ Iterator<Long> itr = q.iterate()-->Line_35 $$ Long count = itr.next()[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D_S_T_S)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_21 $$ if (groupIds != null) [ FD ]
Line_35 $$ Long count = itr.next()-->Line_36 $$ if (count != null) [ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_30 $$ if (status != WorkflowConstants.STATUS_ANY) [ FD ]
Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_18 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D_S_T_S)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_C_N_D_S_T_S)-->Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)[ FD ]
Line_30 $$ if (status != WorkflowConstants.STATUS_ANY) -->Line_31 $$ qPos.add(status)[ CD ]
Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_26 $$ qPos.add(descriptions, 2)[ FD ]
Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_25 $$ qPos.add(names, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)[ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_31 $$ qPos.add(status)[ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_20 $$ qPos.add(companyId)[ FD ]
Line_36 $$ if (count != null) -->Line_37 $$ return count.intValue()[ CD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_33 $$ Iterator<Long> itr = q.iterate()-->Line_34 $$ if (itr.hasNext()) [ FD ]
Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_29 $$ qPos.add(type)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_5 $$ Session session = null[ CD ]
Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_19 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DDMStructure.description", StringPool.LIKE, true, descriptions)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_3 $$ names = CustomSQLUtil.keywords(names)[ FD ]
Line_5 $$ Session session = null-->Line_7 $$ session = openSession()[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ CD ]
Line_21 $$ if (groupIds != null) -->Line_22 $$ qPos.add(groupIds)[ CD ]
Line_7 $$ session = openSession()-->Line_17 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_C_N_D_S_T_S(long companyId, long[] groupIds, long classNameId, String[] names, String[] descriptions, String storageType, int type, int status, boolean andOperator, boolean inlineSQLHelper) -->Line_20 $$ qPos.add(companyId)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DDMStructurePermission.getStructureModelResourceName(classNameId), "DDMStructure.structureId", groupIds)-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$STATUS$]", getStatus(status))-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(CAST_TEXT(DDMStructure.name))", StringPool.LIKE, false, names)[ FD ]
