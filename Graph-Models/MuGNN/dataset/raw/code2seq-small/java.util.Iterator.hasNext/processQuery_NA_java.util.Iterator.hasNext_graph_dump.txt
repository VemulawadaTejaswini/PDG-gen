Line_30 $$ String orderByFragment = fromElement.getQueryableCollection().getSQLOrderByString(fromElement.getCollectionTableAlias())-->Line_35 $$ qn.getOrderByClause().addOrderFragment(orderByFragment)[ FD ]
Line_7 $$ QueryNode qn = (QueryNode) query-->Line_35 $$ qn.getOrderByClause().addOrderFragment(orderByFragment)[ FD ]
Line_7 $$ QueryNode qn = (QueryNode) query-->Line_25 $$ Iterator itr = qn.getFromClause().getProjectionList().iterator()[ FD ]
Line_30 $$ String orderByFragment = fromElement.getQueryableCollection().getSQLOrderByString(fromElement.getCollectionTableAlias())-->Line_31 $$ qn.getOrderByClause().addOrderFragment(orderByFragment)[ FD ]
Line_2 $$ protected void processQuery(AST select, AST query) throws SemanticException -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_9 $$ if (queryTranslatorImpl.getEntityGraphQueryHint() != null) -->Line_10 $$ final boolean oldInEntityGraph = inEntityGraph[ CD ]
Line_7 $$ QueryNode qn = (QueryNode) query-->Line_13 $$ qn.getFromClause().getFromElements().addAll(queryTranslatorImpl.getEntityGraphQueryHint().toFromElements(qn.getFromClause(), this))[ FD ]
Line_7 $$ QueryNode qn = (QueryNode) query-->Line_19 $$ createSelectClauseFromFromClause(qn)[ FD ]
Line_33 $$ if (fromElement.getQueryableCollection().hasManyToManyOrdering()) -->Line_34 $$ String orderByFragment = fromElement.getQueryableCollection().getManyToManyOrderByString(fromElement.getTableAlias())[ CD ]
Line_29 $$ if (fromElement.getQueryableCollection().hasOrdering()) -->Line_30 $$ String orderByFragment = fromElement.getQueryableCollection().getSQLOrderByString(fromElement.getCollectionTableAlias())[ CD ]
Line_18 $$ if (!explicitSelect) -->Line_19 $$ createSelectClauseFromFromClause(qn)[ CD ]
Line_28 $$ if (fromElement.isFetch() && fromElement.getQueryableCollection() != null) -->Line_29 $$ if (fromElement.getQueryableCollection().hasOrdering()) [ CD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_4 $$ LOG.debugf("processQuery() : %s", query.toStringTree())[ CD ]
Line_2 $$ protected void processQuery(AST select, AST query) throws SemanticException -->Line_4 $$ LOG.debugf("processQuery() : %s", query.toStringTree())[ FD ]
Line_27 $$ final FromElement fromElement = (FromElement) itr.next()-->Line_28 $$ if (fromElement.isFetch() && fromElement.getQueryableCollection() != null) [ FD ]
Line_2 $$ protected void processQuery(AST select, AST query) throws SemanticException -->Line_8 $$ boolean explicitSelect = select != null && select.getNumberOfChildren() > 0[ FD ]
Line_28 $$ if (fromElement.isFetch() && fromElement.getQueryableCollection() != null) -->Line_33 $$ if (fromElement.getQueryableCollection().hasManyToManyOrdering()) [ CD ]
Line_25 $$ Iterator itr = qn.getFromClause().getProjectionList().iterator()-->Line_27 $$ final FromElement fromElement = (FromElement) itr.next()[ FD ]
Line_26 $$ while (itr.hasNext()) -->Line_28 $$ if (fromElement.isFetch() && fromElement.getQueryableCollection() != null) [ CD ]
Line_29 $$ if (fromElement.getQueryableCollection().hasOrdering()) -->Line_31 $$ qn.getOrderByClause().addOrderFragment(orderByFragment)[ CD ]
Line_33 $$ if (fromElement.getQueryableCollection().hasManyToManyOrdering()) -->Line_35 $$ qn.getOrderByClause().addOrderFragment(orderByFragment)[ CD ]
Line_18 $$ if (!explicitSelect) -->Line_21 $$ useSelectClause(select)[ CD ]
Line_26 $$ while (itr.hasNext()) -->Line_27 $$ final FromElement fromElement = (FromElement) itr.next()[ CD ]
Line_25 $$ Iterator itr = qn.getFromClause().getProjectionList().iterator()-->Line_26 $$ while (itr.hasNext()) [ FD ]
Line_23 $$ JoinProcessor joinProcessor = new JoinProcessor(this)-->Line_24 $$ joinProcessor.processJoins(qn)[ FD ]
Line_27 $$ final FromElement fromElement = (FromElement) itr.next()-->Line_29 $$ if (fromElement.getQueryableCollection().hasOrdering()) [ FD ]
Line_7 $$ QueryNode qn = (QueryNode) query-->Line_31 $$ qn.getOrderByClause().addOrderFragment(orderByFragment)[ FD ]
Line_7 $$ QueryNode qn = (QueryNode) query-->Line_24 $$ joinProcessor.processJoins(qn)[ FD ]
Line_27 $$ final FromElement fromElement = (FromElement) itr.next()-->Line_33 $$ if (fromElement.getQueryableCollection().hasManyToManyOrdering()) [ FD ]
Line_2 $$ protected void processQuery(AST select, AST query) throws SemanticException -->Line_21 $$ useSelectClause(select)[ FD ]
Line_8 $$ boolean explicitSelect = select != null && select.getNumberOfChildren() > 0-->Line_18 $$ if (!explicitSelect) [ FD ]
Line_27 $$ final FromElement fromElement = (FromElement) itr.next()-->Line_30 $$ String orderByFragment = fromElement.getQueryableCollection().getSQLOrderByString(fromElement.getCollectionTableAlias())[ FD ]
Line_27 $$ final FromElement fromElement = (FromElement) itr.next()-->Line_34 $$ String orderByFragment = fromElement.getQueryableCollection().getManyToManyOrderByString(fromElement.getTableAlias())[ FD ]
