Line_2 $$ private synchronized void evictOldest() -->Line_7 $$ Entry<Key, Value> entry = iter.next()[ CD ]
Line_3 $$ Iterator<Entry<Key, Value>> iter = multimap.entries().iterator()-->Line_9 $$ iter.remove()[ FD ]
Line_2 $$ private synchronized void evictOldest() -->Line_9 $$ iter.remove()[ CD ]
Line_2 $$ private synchronized void evictOldest() -->Line_8 $$ IOUtils.cleanup(LOG, entry.getValue().getPeer())[ CD ]
Line_3 $$ Iterator<Entry<Key, Value>> iter = multimap.entries().iterator()-->Line_7 $$ Entry<Key, Value> entry = iter.next()[ FD ]
Line_3 $$ Iterator<Entry<Key, Value>> iter = multimap.entries().iterator()-->Line_4 $$ if (!iter.hasNext()) [ FD ]
Line_2 $$ private synchronized void evictOldest() -->Line_4 $$ if (!iter.hasNext()) [ CD ]
Line_7 $$ Entry<Key, Value> entry = iter.next()-->Line_8 $$ IOUtils.cleanup(LOG, entry.getValue().getPeer())[ FD ]
Line_2 $$ private synchronized void evictOldest() -->Line_3 $$ Iterator<Entry<Key, Value>> iter = multimap.entries().iterator()[ CD ]
