Line_6 $$ for (Iterator iterator = myPropertyCodeGenerators.values().iterator(); iterator.hasNext(); ) -->Line_7 $$ PropertyCodeGenerator propertyCodeGenerator = (PropertyCodeGenerator) iterator.next()[ FD ]
Line_2 $$ public void visit(final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces) -->Line_8 $$ propertyCodeGenerator.generateClassStart(this, name, myFinder)[ FD ]
Line_6 $$ for (Iterator iterator = myPropertyCodeGenerators.values().iterator(); iterator.hasNext(); ) -->Line_8 $$ propertyCodeGenerator.generateClassStart(this, name, myFinder)[ CD ]
Line_2 $$ public void visit(final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces) -->Line_6 $$ for (Iterator iterator = myPropertyCodeGenerators.values().iterator(); iterator.hasNext(); ) [ CD ]
Line_6 $$ for (Iterator iterator = myPropertyCodeGenerators.values().iterator(); iterator.hasNext(); ) -->Line_7 $$ PropertyCodeGenerator propertyCodeGenerator = (PropertyCodeGenerator) iterator.next()[ CD ]
Line_2 $$ public void visit(final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces) -->Line_3 $$ super.visit(version, access, name, signature, superName, interfaces)[ FD ]
Line_7 $$ PropertyCodeGenerator propertyCodeGenerator = (PropertyCodeGenerator) iterator.next()-->Line_8 $$ propertyCodeGenerator.generateClassStart(this, name, myFinder)[ FD ]
Line_2 $$ public void visit(final int version, final int access, final String name, final String signature, final String superName, final String[] interfaces) -->Line_3 $$ super.visit(version, access, name, signature, superName, interfaces)[ CD ]
