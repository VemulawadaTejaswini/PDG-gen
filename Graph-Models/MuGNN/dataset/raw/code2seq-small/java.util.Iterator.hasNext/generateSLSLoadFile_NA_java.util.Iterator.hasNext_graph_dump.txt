Line_10 $$ while (i.hasNext()) -->Line_12 $$ output.write(writer.writeValueAsString(createSLSJob(m)) + EOL)[ CD ]
Line_5 $$ Writer output = new FileWriter(outputFile)-->Line_12 $$ output.write(writer.writeValueAsString(createSLSJob(m)) + EOL)[ FD ]
Line_9 $$ Iterator<Map> i = mapper.readValues(new JsonFactory().createJsonParser(input), Map.class)-->Line_11 $$ Map m = i.next()[ FD ]
Line_5 $$ Writer output = new FileWriter(outputFile)-->Line_15 $$ output.close()[ FD ]
Line_10 $$ while (i.hasNext()) -->Line_11 $$ Map m = i.next()[ CD ]
Line_3 $$ Reader input = new FileReader(inputFile)-->Line_18 $$ input.close()[ FD ]
Line_7 $$ ObjectMapper mapper = new ObjectMapper()-->Line_8 $$ ObjectWriter writer = mapper.writerWithDefaultPrettyPrinter()[ FD ]
Line_7 $$ ObjectMapper mapper = new ObjectMapper()-->Line_9 $$ Iterator<Map> i = mapper.readValues(new JsonFactory().createJsonParser(input), Map.class)[ FD ]
Line_9 $$ Iterator<Map> i = mapper.readValues(new JsonFactory().createJsonParser(input), Map.class)-->Line_10 $$ while (i.hasNext()) [ FD ]
Line_11 $$ Map m = i.next()-->Line_12 $$ output.write(writer.writeValueAsString(createSLSJob(m)) + EOL)[ FD ]
Line_8 $$ ObjectWriter writer = mapper.writerWithDefaultPrettyPrinter()-->Line_12 $$ output.write(writer.writeValueAsString(createSLSJob(m)) + EOL)[ FD ]
Line_2 $$ private static void generateSLSLoadFile(String inputFile, String outputFile) throws IOException -->Line_3 $$ Reader input = new FileReader(inputFile)[ CD ]
Line_3 $$ Reader input = new FileReader(inputFile)-->Line_9 $$ Iterator<Map> i = mapper.readValues(new JsonFactory().createJsonParser(input), Map.class)[ FD ]
