Line_7 $$ for (T existing : list) -->Line_8 $$ if (existing.equals(variant)) [ FD ]
Line_3 $$ final List<T> list = genericDomValue.getValue()-->Line_4 $$ if (list != null) [ FD ]
Line_8 $$ if (existing.equals(variant)) -->Line_9 $$ i.remove()[ CD ]
Line_2 $$ public static <T> void filterVariants(List<T> variants, GenericDomValue<List<T>> genericDomValue) -->Line_5 $$ for (Iterator<T> i = variants.iterator(); i.hasNext(); ) [ FD ]
Line_2 $$ public static <T> void filterVariants(List<T> variants, GenericDomValue<List<T>> genericDomValue) -->Line_3 $$ final List<T> list = genericDomValue.getValue()[ CD ]
Line_5 $$ for (Iterator<T> i = variants.iterator(); i.hasNext(); ) -->Line_6 $$ final T variant = i.next()[ FD ]
Line_2 $$ public static <T> void filterVariants(List<T> variants, GenericDomValue<List<T>> genericDomValue) -->Line_4 $$ if (list != null) [ CD ]
Line_5 $$ for (Iterator<T> i = variants.iterator(); i.hasNext(); ) -->Line_9 $$ i.remove()[ FD ]
Line_5 $$ for (Iterator<T> i = variants.iterator(); i.hasNext(); ) -->Line_6 $$ final T variant = i.next()[ CD ]
Line_6 $$ final T variant = i.next()-->Line_8 $$ if (existing.equals(variant)) [ FD ]
Line_2 $$ public static <T> void filterVariants(List<T> variants, GenericDomValue<List<T>> genericDomValue) -->Line_3 $$ final List<T> list = genericDomValue.getValue()[ FD ]
Line_4 $$ if (list != null) -->Line_5 $$ for (Iterator<T> i = variants.iterator(); i.hasNext(); ) [ CD ]
