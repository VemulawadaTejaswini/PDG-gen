Line_37 $$ int loc = offset-->Line_41 $$ loc = writeKey(st, id, loc, session)[ FD ]
Line_22 $$ PreparedStatement st = null-->Line_61 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_22 $$ PreparedStatement st = null-->Line_43 $$ writeIndexToWhere(st, entry, loc, session)[ FD ]
Line_22 $$ PreparedStatement st = null-->Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_38 $$ if (hasIdentifier) -->Line_42 $$ if (deleteByIndex) [ CD ]
Line_55 $$ if (useBatch) -->Line_56 $$ session.getJdbcCoordinator().abortBatch()[ CD ]
Line_37 $$ int loc = offset-->Line_39 $$ writeIdentifier(st, entry, loc, session)[ FD ]
Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_51 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_22 $$ PreparedStatement st = null-->Line_35 $$ expectation.prepare(st)[ FD ]
Line_26 $$ if (useBatch) -->Line_27 $$ if (deleteBatchKey == null) [ CD ]
Line_21 $$ while (deletes.hasNext()) -->Line_24 $$ boolean useBatch = expectation.canBeBatched()[ CD ]
Line_21 $$ while (deletes.hasNext()) -->Line_25 $$ String sql = getSQLDeleteRowString()[ CD ]
Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_39 $$ writeIdentifier(st, entry, loc, session)[ FD ]
Line_42 $$ if (deleteByIndex) -->Line_45 $$ writeElementToWhere(st, entry, loc, session)[ CD ]
Line_22 $$ PreparedStatement st = null-->Line_45 $$ writeElementToWhere(st, entry, loc, session)[ FD ]
Line_36 $$ Object entry = deletes.next()-->Line_45 $$ writeElementToWhere(st, entry, loc, session)[ FD ]
Line_36 $$ Object entry = deletes.next()-->Line_39 $$ writeIdentifier(st, entry, loc, session)[ FD ]
Line_21 $$ while (deletes.hasNext()) -->Line_23 $$ boolean callable = isDeleteCallable()[ CD ]
Line_22 $$ PreparedStatement st = null-->Line_41 $$ loc = writeKey(st, id, loc, session)[ FD ]
Line_14 $$ final Expectation expectation = Expectations.appropriateExpectation(getDeleteCheckStyle())-->Line_51 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_20 $$ int count = 0-->Line_65 $$ LOG.debugf("Done deleting collection rows: %s deleted", count)[ FD ]
Line_36 $$ Object entry = deletes.next()-->Line_43 $$ writeIndexToWhere(st, entry, loc, session)[ FD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_41 $$ loc = writeKey(st, id, loc, session)[ FD ]
Line_18 $$ if (deletes.hasNext()) -->Line_20 $$ int count = 0[ CD ]
Line_14 $$ final Expectation expectation = Expectations.appropriateExpectation(getDeleteCheckStyle())-->Line_24 $$ boolean useBatch = expectation.canBeBatched()[ FD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_43 $$ writeIndexToWhere(st, entry, loc, session)[ FD ]
Line_48 $$ if (useBatch) -->Line_49 $$ session.getJdbcCoordinator().getBatch(deleteBatchKey).addToBatch()[ CD ]
Line_18 $$ if (deletes.hasNext()) -->Line_19 $$ int offset = 1[ CD ]
Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_45 $$ writeElementToWhere(st, entry, loc, session)[ FD ]
Line_60 $$ if (!useBatch) -->Line_62 $$ session.getJdbcCoordinator().afterStatementExecution()[ CD ]
Line_38 $$ if (hasIdentifier) -->Line_39 $$ writeIdentifier(st, entry, loc, session)[ CD ]
Line_42 $$ if (deleteByIndex) -->Line_43 $$ writeIndexToWhere(st, entry, loc, session)[ CD ]
Line_21 $$ while (deletes.hasNext()) -->Line_65 $$ LOG.debugf("Done deleting collection rows: %s deleted", count)[ CD ]
Line_37 $$ int loc = offset-->Line_43 $$ writeIndexToWhere(st, entry, loc, session)[ FD ]
Line_25 $$ String sql = getSQLDeleteRowString()-->Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_35 $$ expectation.prepare(st)[ FD ]
Line_21 $$ while (deletes.hasNext()) -->Line_26 $$ if (useBatch) [ CD ]
Line_22 $$ PreparedStatement st = null-->Line_39 $$ writeIdentifier(st, entry, loc, session)[ FD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_11 $$ LOG.debugf("Deleting rows of collection: %s", MessageHelper.collectionInfoString(this, collection, id, session))[ CD ]
Line_26 $$ if (useBatch) -->Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ CD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_7 $$ if (!isRowDeleteEnabled()) -->Line_8 $$ return[ CD ]
Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_43 $$ writeIndexToWhere(st, entry, loc, session)[ FD ]
Line_37 $$ int loc = offset-->Line_45 $$ writeElementToWhere(st, entry, loc, session)[ FD ]
Line_24 $$ boolean useBatch = expectation.canBeBatched()-->Line_60 $$ if (!useBatch) [ FD ]
Line_20 $$ int count = 0-->Line_53 $$ count++[ FD ]
Line_60 $$ if (!useBatch) -->Line_61 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ CD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_39 $$ writeIdentifier(st, entry, loc, session)[ FD ]
Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_41 $$ loc = writeKey(st, id, loc, session)[ FD ]
Line_41 $$ loc = writeKey(st, id, loc, session)-->Line_43 $$ writeIndexToWhere(st, entry, loc, session)[ FD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_61 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_23 $$ boolean callable = isDeleteCallable()-->Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_25 $$ String sql = getSQLDeleteRowString()-->Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_45 $$ writeElementToWhere(st, entry, loc, session)[ FD ]
Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)-->Line_51 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_48 $$ if (useBatch) -->Line_51 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ CD ]
Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_61 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_41 $$ loc = writeKey(st, id, loc, session)-->Line_45 $$ writeElementToWhere(st, entry, loc, session)[ FD ]
Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_35 $$ expectation.prepare(st)[ FD ]
Line_38 $$ if (hasIdentifier) -->Line_41 $$ loc = writeKey(st, id, loc, session)[ CD ]
Line_21 $$ while (deletes.hasNext()) -->Line_22 $$ PreparedStatement st = null[ CD ]
Line_4 $$ if (isInverse) -->Line_5 $$ return[ CD ]
Line_22 $$ PreparedStatement st = null-->Line_51 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_41 $$ loc = writeKey(st, id, loc, session)-->Line_39 $$ writeIdentifier(st, entry, loc, session)[ FD ]
Line_18 $$ if (deletes.hasNext()) -->Line_21 $$ while (deletes.hasNext()) [ CD ]
Line_22 $$ PreparedStatement st = null-->Line_32 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_23 $$ boolean callable = isDeleteCallable()-->Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_18 $$ if (deletes.hasNext()) -->Line_68 $$ LOG.debug("No rows to delete")[ CD ]
Line_14 $$ final Expectation expectation = Expectations.appropriateExpectation(getDeleteCheckStyle())-->Line_35 $$ expectation.prepare(st)[ FD ]
Line_26 $$ if (useBatch) -->Line_30 $$ st = session.getJdbcCoordinator().getBatch(deleteBatchKey).getBatchStatement(sql, callable)[ CD ]
