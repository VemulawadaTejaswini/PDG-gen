Line_3 $$ for (Iterator<LinkMatch> iterator = result.iterator(); iterator.hasNext(); ) -->Line_4 $$ LinkMatch oldMatch = iterator.next()[ FD ]
Line_3 $$ for (Iterator<LinkMatch> iterator = result.iterator(); iterator.hasNext(); ) -->Line_4 $$ LinkMatch oldMatch = iterator.next()[ CD ]
Line_5 $$ if (range.contains(oldMatch.getRange())) -->Line_6 $$ iterator.remove()[ CD ]
Line_3 $$ for (Iterator<LinkMatch> iterator = result.iterator(); iterator.hasNext(); ) -->Line_5 $$ if (range.contains(oldMatch.getRange())) [ CD ]
Line_2 $$ private static void addMatch(final List<LinkMatch> result, final TextRange range, final String replacement) -->Line_3 $$ for (Iterator<LinkMatch> iterator = result.iterator(); iterator.hasNext(); ) [ FD ]
Line_2 $$ private static void addMatch(final List<LinkMatch> result, final TextRange range, final String replacement) -->Line_5 $$ if (range.contains(oldMatch.getRange())) [ FD ]
Line_5 $$ if (range.contains(oldMatch.getRange())) -->Line_7 $$ if (oldMatch.getRange().contains(range)) [ CD ]
Line_3 $$ for (Iterator<LinkMatch> iterator = result.iterator(); iterator.hasNext(); ) -->Line_6 $$ iterator.remove()[ FD ]
Line_2 $$ private static void addMatch(final List<LinkMatch> result, final TextRange range, final String replacement) -->Line_7 $$ if (oldMatch.getRange().contains(range)) [ FD ]
Line_4 $$ LinkMatch oldMatch = iterator.next()-->Line_7 $$ if (oldMatch.getRange().contains(range)) [ FD ]
Line_2 $$ private static void addMatch(final List<LinkMatch> result, final TextRange range, final String replacement) -->Line_11 $$ result.add(new LinkMatch(range, replacement))[ FD ]
Line_2 $$ private static void addMatch(final List<LinkMatch> result, final TextRange range, final String replacement) -->Line_11 $$ result.add(new LinkMatch(range, replacement))[ CD ]
Line_4 $$ LinkMatch oldMatch = iterator.next()-->Line_5 $$ if (range.contains(oldMatch.getRange())) [ FD ]
Line_2 $$ private static void addMatch(final List<LinkMatch> result, final TextRange range, final String replacement) -->Line_3 $$ for (Iterator<LinkMatch> iterator = result.iterator(); iterator.hasNext(); ) [ CD ]
Line_7 $$ if (oldMatch.getRange().contains(range)) -->Line_8 $$ return[ CD ]
