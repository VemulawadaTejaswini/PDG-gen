Line_7 $$ SimpleValue key = new DependantValue(buildingContext.getMetadataCollector(), join.getTable(), persistentClass.getIdentifier())-->Line_27 $$ key.addColumn(copy)[ FD ]
Line_15 $$ Column copy = new Column()-->Line_25 $$ copy.setComment(column.getComment())[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_4 $$ join.setPersistentClass(persistentClass)[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_4 $$ join.setPersistentClass(persistentClass)[ CD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_20 $$ copy.setNullable(column.isNullable())[ FD ]
Line_3 $$ Join join = new Join()-->Line_4 $$ join.setPersistentClass(persistentClass)[ FD ]
Line_3 $$ Join join = new Join()-->Line_10 $$ join.setOptional(true)[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_5 $$ join.setTable(originalJoin.getTable())[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_21 $$ copy.setPrecision(column.getPrecision())[ CD ]
Line_15 $$ Column copy = new Column()-->Line_21 $$ copy.setPrecision(column.getPrecision())[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_24 $$ copy.setCheckConstraint(column.getCheckConstraint())[ CD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_15 $$ Column copy = new Column()[ CD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_24 $$ copy.setCheckConstraint(column.getCheckConstraint())[ FD ]
Line_3 $$ Join join = new Join()-->Line_8 $$ join.setKey(key)[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_18 $$ copy.setValue(key)[ CD ]
Line_7 $$ SimpleValue key = new DependantValue(buildingContext.getMetadataCollector(), join.getTable(), persistentClass.getIdentifier())-->Line_18 $$ copy.setValue(key)[ FD ]
Line_15 $$ Column copy = new Column()-->Line_20 $$ copy.setNullable(column.isNullable())[ FD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_19 $$ copy.setName(column.getQuotedName())[ FD ]
Line_15 $$ Column copy = new Column()-->Line_19 $$ copy.setName(column.getQuotedName())[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_7 $$ SimpleValue key = new DependantValue(buildingContext.getMetadataCollector(), join.getTable(), persistentClass.getIdentifier())[ CD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_23 $$ copy.setSqlType(column.getSqlType())[ FD ]
Line_15 $$ Column copy = new Column()-->Line_27 $$ key.addColumn(copy)[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_29 $$ persistentClass.addJoin(join)[ CD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_30 $$ return join[ CD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_22 $$ copy.setUnique(column.isUnique())[ FD ]
Line_3 $$ Join join = new Join()-->Line_29 $$ persistentClass.addJoin(join)[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_9 $$ join.setSequentialSelect(false)[ CD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_12 $$ Iterator mappedByColumns = otherSideProperty.getValue().getColumnIterator()[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_6 $$ join.setInverse(true)[ CD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_7 $$ SimpleValue key = new DependantValue(buildingContext.getMetadataCollector(), join.getTable(), persistentClass.getIdentifier())[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_23 $$ copy.setSqlType(column.getSqlType())[ CD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_11 $$ key.setCascadeDeleteEnabled(false)[ CD ]
Line_15 $$ Column copy = new Column()-->Line_24 $$ copy.setCheckConstraint(column.getCheckConstraint())[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_10 $$ join.setOptional(true)[ CD ]
Line_15 $$ Column copy = new Column()-->Line_26 $$ copy.setDefaultValue(column.getDefaultValue())[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_12 $$ Iterator mappedByColumns = otherSideProperty.getValue().getColumnIterator()[ CD ]
Line_7 $$ SimpleValue key = new DependantValue(buildingContext.getMetadataCollector(), join.getTable(), persistentClass.getIdentifier())-->Line_11 $$ key.setCascadeDeleteEnabled(false)[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_19 $$ copy.setName(column.getQuotedName())[ CD ]
Line_15 $$ Column copy = new Column()-->Line_23 $$ copy.setSqlType(column.getSqlType())[ FD ]
Line_3 $$ Join join = new Join()-->Line_7 $$ SimpleValue key = new DependantValue(buildingContext.getMetadataCollector(), join.getTable(), persistentClass.getIdentifier())[ FD ]
Line_3 $$ Join join = new Join()-->Line_6 $$ join.setInverse(true)[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_22 $$ copy.setUnique(column.isUnique())[ CD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_3 $$ Join join = new Join()[ CD ]
Line_3 $$ Join join = new Join()-->Line_9 $$ join.setSequentialSelect(false)[ FD ]
Line_12 $$ Iterator mappedByColumns = otherSideProperty.getValue().getColumnIterator()-->Line_14 $$ Column column = (Column) mappedByColumns.next()[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_17 $$ copy.setScale(column.getScale())[ CD ]
Line_15 $$ Column copy = new Column()-->Line_16 $$ copy.setLength(column.getLength())[ FD ]
Line_15 $$ Column copy = new Column()-->Line_17 $$ copy.setScale(column.getScale())[ FD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_16 $$ copy.setLength(column.getLength())[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_25 $$ copy.setComment(column.getComment())[ CD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_26 $$ copy.setDefaultValue(column.getDefaultValue())[ CD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_27 $$ key.addColumn(copy)[ CD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_14 $$ Column column = (Column) mappedByColumns.next()[ CD ]
Line_15 $$ Column copy = new Column()-->Line_22 $$ copy.setUnique(column.isUnique())[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_8 $$ join.setKey(key)[ CD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_5 $$ join.setTable(originalJoin.getTable())[ CD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_21 $$ copy.setPrecision(column.getPrecision())[ FD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_17 $$ copy.setScale(column.getScale())[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_29 $$ persistentClass.addJoin(join)[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_20 $$ copy.setNullable(column.isNullable())[ CD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_26 $$ copy.setDefaultValue(column.getDefaultValue())[ FD ]
Line_13 $$ while (mappedByColumns.hasNext()) -->Line_16 $$ copy.setLength(column.getLength())[ CD ]
Line_14 $$ Column column = (Column) mappedByColumns.next()-->Line_25 $$ copy.setComment(column.getComment())[ FD ]
Line_12 $$ Iterator mappedByColumns = otherSideProperty.getValue().getColumnIterator()-->Line_13 $$ while (mappedByColumns.hasNext()) [ FD ]
Line_15 $$ Column copy = new Column()-->Line_18 $$ copy.setValue(key)[ FD ]
Line_2 $$ private Join buildJoinFromMappedBySide(PersistentClass persistentClass, Property otherSideProperty, Join originalJoin) -->Line_13 $$ while (mappedByColumns.hasNext()) [ CD ]
Line_3 $$ Join join = new Join()-->Line_5 $$ join.setTable(originalJoin.getTable())[ FD ]
Line_7 $$ SimpleValue key = new DependantValue(buildingContext.getMetadataCollector(), join.getTable(), persistentClass.getIdentifier())-->Line_8 $$ join.setKey(key)[ FD ]
