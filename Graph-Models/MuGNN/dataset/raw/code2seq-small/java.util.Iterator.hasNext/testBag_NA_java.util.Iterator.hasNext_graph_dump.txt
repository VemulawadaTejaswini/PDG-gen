Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_23 $$ c.getLazyBag().size()[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_54 $$ s.delete(c)[ FD ]
Line_5 $$ Container c = new Container()-->Line_54 $$ s.delete(c)[ FD ]
Line_6 $$ Contained c1 = new Contained()-->Line_16 $$ c.getLazyBag().add(c1)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_57 $$ j = 0[ CD ]
Line_7 $$ Contained c2 = new Contained()-->Line_15 $$ c2.getBag().add(c)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_18 $$ t.commit()[ CD ]
Line_27 $$ t = s.beginTransaction()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_21 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s.save(c)[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_40 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_34 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_18 $$ t.commit()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_9 $$ c.getBag().add(c1)[ CD ]
Line_26 $$ s = openSession()-->Line_34 $$ s = openSession()[ FD ]
Line_7 $$ Contained c2 = new Contained()-->Line_55 $$ c.getBag().remove(c2)[ FD ]
Line_20 $$ s = openSession()-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_41 $$ t.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_5 $$ Container c = new Container()-->Line_31 $$ c3.getLazyBag().add(c)[ FD ]
Line_58 $$ while (iter.hasNext()) -->Line_59 $$ j++[ CD ]
Line_20 $$ s = openSession()-->Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_58 $$ while (iter.hasNext()) -->Line_60 $$ s.delete(iter.next())[ CD ]
Line_34 $$ s = openSession()-->Line_66 $$ s.close()[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_56 $$ Iterator iter = c.getBag().iterator()[ FD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_38 $$ c.getLazyBag().add(c4)[ FD ]
Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_55 $$ c.getBag().remove(c2)[ FD ]
Line_26 $$ s = openSession()-->Line_33 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_60 $$ s.delete(iter.next())[ FD ]
Line_34 $$ s = openSession()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_39 $$ c4.getLazyBag().add(c)[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_40 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_40 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_37 $$ Contained c4 = new Contained()-->Line_39 $$ c4.getLazyBag().add(c)[ FD ]
Line_20 $$ s = openSession()-->Line_43 $$ s = openSession()[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_46 $$ Iterator i = c.getBag().iterator()[ FD ]
Line_20 $$ s = openSession()-->Line_34 $$ s = openSession()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_65 $$ t.commit()[ FD ]
Line_35 $$ t = s.beginTransaction()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_17 $$ c1.getLazyBag().add(c)[ CD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_5 $$ Container c = new Container()-->Line_55 $$ c.getBag().remove(c2)[ FD ]
Line_6 $$ Contained c1 = new Contained()-->Line_17 $$ c1.getLazyBag().add(c)[ FD ]
Line_5 $$ Container c = new Container()-->Line_38 $$ c.getLazyBag().add(c4)[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_55 $$ c.getBag().remove(c2)[ FD ]
Line_5 $$ Container c = new Container()-->Line_17 $$ c1.getLazyBag().add(c)[ FD ]
Line_20 $$ s = openSession()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_48 $$ while (i.hasNext()) -->Line_50 $$ j++[ CD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_30 $$ c.getLazyBag().add(c3)[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_21 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_24 $$ t.commit()[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_8 $$ c.setBag(new ArrayList())[ CD ]
Line_20 $$ s = openSession()-->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_10 $$ c.getBag().add(c2)[ CD ]
Line_57 $$ j = 0-->Line_59 $$ j++[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_15 $$ c2.getBag().add(c)[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_14 $$ c.getBag().add(c2)[ CD ]
Line_21 $$ t = s.beginTransaction()-->Line_32 $$ t.commit()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_55 $$ c.getBag().remove(c2)[ CD ]
Line_34 $$ s = openSession()-->Line_60 $$ s.delete(iter.next())[ FD ]
Line_20 $$ s = openSession()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_20 $$ s = openSession()[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_38 $$ c.getLazyBag().add(c4)[ CD ]
Line_20 $$ s = openSession()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_63 $$ s.delete(s.load(Contained.class, new Long(c4.getId())))[ CD ]
Line_5 $$ Container c = new Container()-->Line_8 $$ c.setBag(new ArrayList())[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_54 $$ s.delete(c)[ FD ]
Line_43 $$ s = openSession()-->Line_54 $$ s.delete(c)[ FD ]
Line_47 $$ int j = 0-->Line_59 $$ j++[ FD ]
Line_7 $$ Contained c2 = new Contained()-->Line_10 $$ c.getBag().add(c2)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_46 $$ Iterator i = c.getBag().iterator()[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_42 $$ s.close()[ CD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_39 $$ c4.getLazyBag().add(c)[ FD ]
Line_26 $$ s = openSession()-->Line_43 $$ s = openSession()[ FD ]
Line_5 $$ Container c = new Container()-->Line_12 $$ c2.getBag().add(c)[ FD ]
Line_6 $$ Contained c1 = new Contained()-->Line_9 $$ c.getBag().add(c1)[ FD ]
Line_56 $$ Iterator iter = c.getBag().iterator()-->Line_60 $$ s.delete(iter.next())[ FD ]
Line_34 $$ s = openSession()-->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_54 $$ s.delete(c)[ FD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_30 $$ c.getLazyBag().add(c3)[ FD ]
Line_5 $$ Container c = new Container()-->Line_53 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_5 $$ Container c = new Container()-->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_44 $$ t = s.beginTransaction()-->Line_65 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_54 $$ s.delete(c)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_56 $$ Iterator iter = c.getBag().iterator()[ CD ]
Line_20 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_5 $$ Container c = new Container()-->Line_16 $$ c.getLazyBag().add(c1)[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_39 $$ c4.getLazyBag().add(c)[ CD ]
Line_46 $$ Iterator i = c.getBag().iterator()-->Line_49 $$ assertTrue(i.next() != null)[ FD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_56 $$ Iterator iter = c.getBag().iterator()[ FD ]
Line_29 $$ Contained c3 = new Contained()-->Line_31 $$ c3.getLazyBag().add(c)[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_53 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_38 $$ c.getLazyBag().add(c4)[ FD ]
Line_34 $$ s = openSession()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_55 $$ c.getBag().remove(c2)[ FD ]
Line_34 $$ s = openSession()-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ s.close()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_31 $$ c3.getLazyBag().add(c)[ CD ]
Line_29 $$ Contained c3 = new Contained()-->Line_30 $$ c.getLazyBag().add(c3)[ FD ]
Line_26 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_53 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_43 $$ s = openSession()-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_32 $$ t.commit()[ FD ]
Line_43 $$ s = openSession()-->Line_63 $$ s.delete(s.load(Contained.class, new Long(c4.getId())))[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_32 $$ t.commit()[ FD ]
Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_53 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ s = openSession()-->Line_63 $$ s.delete(s.load(Contained.class, new Long(c4.getId())))[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Contained c1 = new Contained()-->Line_11 $$ c1.getBag().add(c)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_19 $$ s.close()[ CD ]
Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_46 $$ Iterator i = c.getBag().iterator()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_54 $$ s.delete(c)[ CD ]
Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_56 $$ Iterator iter = c.getBag().iterator()[ FD ]
Line_34 $$ s = openSession()-->Line_63 $$ s.delete(s.load(Contained.class, new Long(c4.getId())))[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ CD ]
Line_35 $$ t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_43 $$ s = openSession()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_23 $$ c.getLazyBag().size()[ CD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_31 $$ c3.getLazyBag().add(c)[ FD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ s = openSession()[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_65 $$ t.commit()[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_46 $$ Iterator i = c.getBag().iterator()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_5 $$ Container c = new Container()[ CD ]
Line_35 $$ t = s.beginTransaction()-->Line_65 $$ t.commit()[ FD ]
Line_26 $$ s = openSession()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_29 $$ Contained c3 = new Contained()[ CD ]
Line_47 $$ int j = 0-->Line_50 $$ j++[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_63 $$ s.delete(s.load(Contained.class, new Long(c4.getId())))[ FD ]
Line_5 $$ Container c = new Container()-->Line_23 $$ c.getLazyBag().size()[ FD ]
Line_20 $$ s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_5 $$ Container c = new Container()-->Line_15 $$ c2.getBag().add(c)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_40 $$ assertTrue(c.getLazyBag().size() == 3)[ CD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_55 $$ c.getBag().remove(c2)[ FD ]
Line_5 $$ Container c = new Container()-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_43 $$ s = openSession()-->Line_60 $$ s.delete(iter.next())[ FD ]
Line_48 $$ while (i.hasNext()) -->Line_49 $$ assertTrue(i.next() != null)[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_7 $$ Contained c2 = new Contained()[ CD ]
Line_29 $$ Contained c3 = new Contained()-->Line_64 $$ s.delete(s.load(Contained.class, new Long(c3.getId())))[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_16 $$ c.getLazyBag().add(c1)[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_26 $$ s = openSession()[ CD ]
Line_37 $$ Contained c4 = new Contained()-->Line_38 $$ c.getLazyBag().add(c4)[ FD ]
Line_5 $$ Container c = new Container()-->Line_11 $$ c1.getBag().add(c)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_66 $$ s.close()[ CD ]
Line_46 $$ Iterator i = c.getBag().iterator()-->Line_48 $$ while (i.hasNext()) [ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_30 $$ c.getLazyBag().add(c3)[ FD ]
Line_5 $$ Container c = new Container()-->Line_40 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_27 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_39 $$ c4.getLazyBag().add(c)[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.close()[ FD ]
Line_5 $$ Container c = new Container()-->Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_64 $$ s.delete(s.load(Contained.class, new Long(c3.getId())))[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_43 $$ s = openSession()[ CD ]
Line_20 $$ s = openSession()-->Line_54 $$ s.delete(c)[ FD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_33 $$ s.close()[ CD ]
Line_21 $$ t = s.beginTransaction()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_46 $$ Iterator i = c.getBag().iterator()[ FD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ s = openSession()[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_65 $$ t.commit()[ FD ]
Line_37 $$ Contained c4 = new Contained()-->Line_63 $$ s.delete(s.load(Contained.class, new Long(c4.getId())))[ FD ]
Line_20 $$ s = openSession()-->Line_66 $$ s.close()[ FD ]
Line_5 $$ Container c = new Container()-->Line_9 $$ c.getBag().add(c1)[ FD ]
Line_5 $$ Container c = new Container()-->Line_13 $$ s.save(c)[ FD ]
Line_26 $$ s = openSession()-->Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_66 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_60 $$ s.delete(iter.next())[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_52 $$ assertTrue(j == 3)[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_47 $$ int j = 0[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_30 $$ c.getLazyBag().add(c3)[ CD ]
Line_20 $$ s = openSession()-->Line_60 $$ s.delete(iter.next())[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_37 $$ Contained c4 = new Contained()[ CD ]
Line_26 $$ s = openSession()-->Line_54 $$ s.delete(c)[ FD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_35 $$ t = s.beginTransaction()[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_32 $$ t.commit()[ CD ]
Line_26 $$ s = openSession()-->Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_25 $$ s.close()[ CD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_38 $$ c.getLazyBag().add(c4)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_12 $$ c2.getBag().add(c)[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_62 $$ assertTrue(j == 2)[ CD ]
Line_5 $$ Container c = new Container()-->Line_10 $$ c.getBag().add(c2)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_44 $$ t = s.beginTransaction()[ CD ]
Line_20 $$ s = openSession()-->Line_64 $$ s.delete(s.load(Contained.class, new Long(c3.getId())))[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_13 $$ s.save(c)[ CD ]
Line_26 $$ s = openSession()-->Line_66 $$ s.close()[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_6 $$ Contained c1 = new Contained()[ CD ]
Line_56 $$ Iterator iter = c.getBag().iterator()-->Line_58 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_34 $$ s = openSession()[ CD ]
Line_5 $$ Container c = new Container()-->Line_46 $$ Iterator i = c.getBag().iterator()[ FD ]
Line_34 $$ s = openSession()-->Line_54 $$ s.delete(c)[ FD ]
Line_7 $$ Contained c2 = new Contained()-->Line_14 $$ c.getBag().add(c2)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_53 $$ assertTrue(c.getLazyBag().size() == 3)[ CD ]
Line_36 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_53 $$ assertTrue(c.getLazyBag().size() == 3)[ FD ]
Line_5 $$ Container c = new Container()-->Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_24 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ CD ]
Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_56 $$ Iterator iter = c.getBag().iterator()[ FD ]
Line_43 $$ s = openSession()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_47 $$ int j = 0-->Line_57 $$ j = 0[ FD ]
Line_43 $$ s = openSession()-->Line_64 $$ s.delete(s.load(Contained.class, new Long(c3.getId())))[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_65 $$ t.commit()[ CD ]
Line_5 $$ Container c = new Container()-->Line_14 $$ c.getBag().add(c2)[ FD ]
Line_20 $$ s = openSession()-->Line_28 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_26 $$ s = openSession()-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_48 $$ while (i.hasNext()) [ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_11 $$ c1.getBag().add(c)[ CD ]
Line_20 $$ s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_44 $$ t = s.beginTransaction()[ FD ]
Line_20 $$ s = openSession()-->Line_63 $$ s.delete(s.load(Contained.class, new Long(c4.getId())))[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_64 $$ s.delete(s.load(Contained.class, new Long(c3.getId())))[ CD ]
Line_2 $$ public void testBag() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_5 $$ Container c = new Container()-->Line_56 $$ Iterator iter = c.getBag().iterator()[ FD ]
Line_26 $$ s = openSession()-->Line_64 $$ s.delete(s.load(Contained.class, new Long(c3.getId())))[ FD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_20 $$ s = openSession()-->Line_33 $$ s.close()[ FD ]
Line_34 $$ s = openSession()-->Line_43 $$ s = openSession()[ FD ]
Line_43 $$ s = openSession()-->Line_66 $$ s.close()[ FD ]
Line_7 $$ Contained c2 = new Contained()-->Line_12 $$ c2.getBag().add(c)[ FD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)[ FD ]
Line_22 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_31 $$ c3.getLazyBag().add(c)[ FD ]
Line_2 $$ public void testBag() throws Exception -->Line_58 $$ while (iter.hasNext()) [ CD ]
Line_34 $$ s = openSession()-->Line_64 $$ s.delete(s.load(Contained.class, new Long(c3.getId())))[ FD ]
Line_20 $$ s = openSession()-->Line_26 $$ s = openSession()[ FD ]
Line_45 $$ c = (Container) s.createQuery("from ContainerX c").list().get(0)-->Line_54 $$ s.delete(c)[ FD ]
Line_21 $$ t = s.beginTransaction()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Container c = new Container()-->Line_39 $$ c4.getLazyBag().add(c)[ FD ]
