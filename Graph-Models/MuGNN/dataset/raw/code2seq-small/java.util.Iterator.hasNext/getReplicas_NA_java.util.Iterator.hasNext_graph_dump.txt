Line_11 $$ Unit ep = iter.next()-->Line_12 $$ if (!endpoints.contains(ep))[ FD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_6 $$ token = sortedTokens.firstKey()[ FD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_8 $$ while (endpoints.size() < replicas) [ CD ]
Line_8 $$ while (endpoints.size() < replicas) -->Line_9 $$ if (!iter.hasNext())[ CD ]
Line_7 $$ Iterator<Unit> iter = Iterables.concat(sortedTokens.tailMap(token, true).values(), sortedTokens.values()).iterator()-->Line_9 $$ if (!iter.hasNext())[ FD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_5 $$ if (token == null)[ CD ]
Line_3 $$ List<Unit> endpoints = new ArrayList<Unit>(replicas)-->Line_12 $$ if (!endpoints.contains(ep))[ FD ]
Line_7 $$ Iterator<Unit> iter = Iterables.concat(sortedTokens.tailMap(token, true).values(), sortedTokens.values()).iterator()-->Line_11 $$ Unit ep = iter.next()[ FD ]
Line_5 $$ if (token == null)-->Line_6 $$ token = sortedTokens.firstKey()[ CD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_7 $$ Iterator<Unit> iter = Iterables.concat(sortedTokens.tailMap(token, true).values(), sortedTokens.values()).iterator()[ CD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_5 $$ if (token == null)[ FD ]
Line_6 $$ token = sortedTokens.firstKey()-->Line_7 $$ Iterator<Unit> iter = Iterables.concat(sortedTokens.tailMap(token, true).values(), sortedTokens.values()).iterator()[ FD ]
Line_8 $$ while (endpoints.size() < replicas) -->Line_12 $$ if (!endpoints.contains(ep))[ CD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_15 $$ return endpoints[ CD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_3 $$ List<Unit> endpoints = new ArrayList<Unit>(replicas)[ CD ]
Line_3 $$ List<Unit> endpoints = new ArrayList<Unit>(replicas)-->Line_8 $$ while (endpoints.size() < replicas) [ FD ]
Line_11 $$ Unit ep = iter.next()-->Line_13 $$ endpoints.add(ep)[ FD ]
Line_3 $$ List<Unit> endpoints = new ArrayList<Unit>(replicas)-->Line_9 $$ if (!iter.hasNext())[ FD ]
Line_9 $$ if (!iter.hasNext())-->Line_10 $$ return endpoints[ CD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_4 $$ token = sortedTokens.ceilingKey(token)[ CD ]
Line_4 $$ token = sortedTokens.ceilingKey(token)-->Line_5 $$ if (token == null)[ FD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_4 $$ token = sortedTokens.ceilingKey(token)[ FD ]
Line_3 $$ List<Unit> endpoints = new ArrayList<Unit>(replicas)-->Line_13 $$ endpoints.add(ep)[ FD ]
Line_8 $$ while (endpoints.size() < replicas) -->Line_11 $$ Unit ep = iter.next()[ CD ]
Line_4 $$ token = sortedTokens.ceilingKey(token)-->Line_7 $$ Iterator<Unit> iter = Iterables.concat(sortedTokens.tailMap(token, true).values(), sortedTokens.values()).iterator()[ FD ]
Line_4 $$ token = sortedTokens.ceilingKey(token)-->Line_6 $$ token = sortedTokens.firstKey()[ FD ]
Line_12 $$ if (!endpoints.contains(ep))-->Line_13 $$ endpoints.add(ep)[ CD ]
Line_2 $$ public List<Unit> getReplicas(Token token, NavigableMap<Token, Unit> sortedTokens) -->Line_7 $$ Iterator<Unit> iter = Iterables.concat(sortedTokens.tailMap(token, true).values(), sortedTokens.values()).iterator()[ FD ]
