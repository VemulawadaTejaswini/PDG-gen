Line_5 $$ final SQLFunction function = (SQLFunction) entry.getValue()-->Line_6 $$ if (!function.hasArguments() && !function.hasParenthesesIfNoArguments()) [ FD ]
Line_4 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_7 $$ return (String) entry.getKey()[ FD ]
Line_3 $$ for (Iterator itr = getDialect().getFunctions().entrySet().iterator(); itr.hasNext(); ) -->Line_4 $$ final Map.Entry entry = (Map.Entry) itr.next()[ CD ]
Line_4 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_5 $$ final SQLFunction function = (SQLFunction) entry.getValue()[ FD ]
Line_2 $$ private String locateAppropriateDialectFunctionNameForAliasTest() -->Line_3 $$ for (Iterator itr = getDialect().getFunctions().entrySet().iterator(); itr.hasNext(); ) [ CD ]
Line_6 $$ if (!function.hasArguments() && !function.hasParenthesesIfNoArguments()) -->Line_7 $$ return (String) entry.getKey()[ CD ]
Line_2 $$ private String locateAppropriateDialectFunctionNameForAliasTest() -->Line_10 $$ return null[ CD ]
Line_3 $$ for (Iterator itr = getDialect().getFunctions().entrySet().iterator(); itr.hasNext(); ) -->Line_6 $$ if (!function.hasArguments() && !function.hasParenthesesIfNoArguments()) [ CD ]
Line_3 $$ for (Iterator itr = getDialect().getFunctions().entrySet().iterator(); itr.hasNext(); ) -->Line_4 $$ final Map.Entry entry = (Map.Entry) itr.next()[ FD ]
Line_3 $$ for (Iterator itr = getDialect().getFunctions().entrySet().iterator(); itr.hasNext(); ) -->Line_5 $$ final SQLFunction function = (SQLFunction) entry.getValue()[ CD ]
