Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_4 $$ Iterator<K> keyIterator = keys.iterator()[ FD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_12 $$ if (valueIterator.hasNext()) [ CD ]
Line_5 $$ Iterator<V> valueIterator = values.iterator()-->Line_12 $$ if (valueIterator.hasNext()) [ FD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_3 $$ Map<K, V> result = new HashMap<K, V>()[ CD ]
Line_6 $$ while (keyIterator.hasNext()) -->Line_10 $$ result.put(keyIterator.next(), valueIterator.next())[ CD ]
Line_4 $$ Iterator<K> keyIterator = keys.iterator()-->Line_10 $$ result.put(keyIterator.next(), valueIterator.next())[ FD ]
Line_5 $$ Iterator<V> valueIterator = values.iterator()-->Line_10 $$ result.put(keyIterator.next(), valueIterator.next())[ FD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_13 $$ throw new IllegalArgumentException(String.format("Can't build for the given data. Reason: number of keys differs from number of values. " + "Keys: %s, values: %s", keys, values))[ FD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_5 $$ Iterator<V> valueIterator = values.iterator()[ CD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_8 $$ throw new IllegalArgumentException(String.format("Can't build for the given data. Reason: number of keys differs from number of values. " + "Keys: %s, values: %s", keys, values))[ FD ]
Line_4 $$ Iterator<K> keyIterator = keys.iterator()-->Line_6 $$ while (keyIterator.hasNext()) [ FD ]
Line_6 $$ while (keyIterator.hasNext()) -->Line_7 $$ if (!valueIterator.hasNext()) [ CD ]
Line_3 $$ Map<K, V> result = new HashMap<K, V>()-->Line_10 $$ result.put(keyIterator.next(), valueIterator.next())[ FD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_4 $$ Iterator<K> keyIterator = keys.iterator()[ CD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_15 $$ return result[ CD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_6 $$ while (keyIterator.hasNext()) [ CD ]
Line_5 $$ Iterator<V> valueIterator = values.iterator()-->Line_7 $$ if (!valueIterator.hasNext()) [ FD ]
Line_2 $$ private static <K, V> Map<K, V> asMap(Iterable<K> keys, Iterable<V> values) throws IllegalArgumentException -->Line_5 $$ Iterator<V> valueIterator = values.iterator()[ FD ]
