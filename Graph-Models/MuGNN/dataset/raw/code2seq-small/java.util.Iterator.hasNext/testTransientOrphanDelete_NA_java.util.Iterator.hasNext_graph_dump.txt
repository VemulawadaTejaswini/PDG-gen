Line_6 $$ Set bars = new HashSet()-->Line_10 $$ bars.add(new Bar())[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_7 $$ baz.setCascadingBars(bars)[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_31 $$ t.commit()[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_12 $$ foos.add(new Foo())[ CD ]
Line_34 $$ s = openSession()-->Line_39 $$ s.delete(baz)[ FD ]
Line_34 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_30 $$ assertEquals(3, s.createQuery("From Foo foo").list().size())[ FD ]
Line_26 $$ s = openSession()-->Line_34 $$ s = openSession()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_15 $$ s.save(baz)[ CD ]
Line_5 $$ Baz baz = new Baz()-->Line_36 $$ s.update(baz)[ FD ]
Line_26 $$ s = openSession()-->Line_38 $$ assertEquals(1, s.createQuery("From Foo foo").list().size())[ FD ]
Line_26 $$ s = openSession()-->Line_28 $$ s.update(baz)[ FD ]
Line_11 $$ List foos = new ArrayList()-->Line_12 $$ foos.add(new Foo())[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_35 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ assertEquals(1, s.createQuery("From Foo foo").list().size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.delete(cmp.getGlarch())[ FD ]
Line_34 $$ s = openSession()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_28 $$ s.update(baz)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_31 $$ t.commit()[ CD ]
Line_5 $$ Baz baz = new Baz()-->Line_14 $$ baz.setFooBag(foos)[ FD ]
Line_27 $$ t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_26 $$ s = openSession()-->Line_39 $$ s.delete(baz)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ assertEquals(0, s.createQuery("From Foo foo").list().size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ assertEquals(2, s.createQuery("From Bar bar").list().size())[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_25 $$ foos.remove(1)[ CD ]
Line_18 $$ FooComponent cmp = ((Foo) i.next()).getComponent()-->Line_20 $$ cmp.setGlarch(null)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
Line_34 $$ s = openSession()-->Line_38 $$ assertEquals(1, s.createQuery("From Foo foo").list().size())[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_42 $$ s.close()[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_41 $$ t.commit()[ CD ]
Line_6 $$ Set bars = new HashSet()-->Line_16 $$ Iterator i = new JoinedIterator(new Iterator[] [ FD ]
Line_16 $$ Iterator i = new JoinedIterator(new Iterator[] -->Line_17 $$ while (i.hasNext()) [ FD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ s.update(baz)[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_15 $$ s.save(baz)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_31 $$ t.commit()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_10 $$ bars.add(new Bar())[ CD ]
Line_6 $$ Set bars = new HashSet()-->Line_8 $$ bars.add(new Bar())[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_24 $$ bars.remove(bars.iterator().next())[ CD ]
Line_17 $$ while (i.hasNext()) -->Line_18 $$ FooComponent cmp = ((Foo) i.next()).getComponent()[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_13 $$ foos.add(new Foo())[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_26 $$ s = openSession()[ CD ]
Line_34 $$ s = openSession()-->Line_36 $$ s.update(baz)[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ s.close()[ FD ]
Line_26 $$ s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_6 $$ Set bars = new HashSet()-->Line_9 $$ bars.add(new Bar())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_22 $$ t.commit()[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_40 $$ assertEquals(0, s.createQuery("From Foo foo").list().size())[ CD ]
Line_35 $$ t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_6 $$ Set bars = new HashSet()[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_33 $$ foos.remove(0)[ CD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ s = openSession()[ FD ]
Line_6 $$ Set bars = new HashSet()-->Line_24 $$ bars.remove(bars.iterator().next())[ FD ]
Line_26 $$ s = openSession()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_16 $$ Iterator i = new JoinedIterator(new Iterator[] [ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_30 $$ assertEquals(3, s.createQuery("From Foo foo").list().size())[ CD ]
Line_6 $$ Set bars = new HashSet()-->Line_7 $$ baz.setCascadingBars(bars)[ FD ]
Line_26 $$ s = openSession()-->Line_32 $$ s.close()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_9 $$ bars.add(new Bar())[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_39 $$ s.delete(baz)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ FooComponent cmp = ((Foo) i.next()).getComponent()-->Line_19 $$ s.delete(cmp.getGlarch())[ FD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_17 $$ while (i.hasNext()) [ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_27 $$ t = s.beginTransaction()[ CD ]
Line_17 $$ while (i.hasNext()) -->Line_19 $$ s.delete(cmp.getGlarch())[ CD ]
Line_11 $$ List foos = new ArrayList()-->Line_33 $$ foos.remove(0)[ FD ]
Line_17 $$ while (i.hasNext()) -->Line_20 $$ cmp.setGlarch(null)[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_32 $$ s.close()[ CD ]
Line_16 $$ Iterator i = new JoinedIterator(new Iterator[] -->Line_18 $$ FooComponent cmp = ((Foo) i.next()).getComponent()[ FD ]
Line_26 $$ s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_26 $$ s = openSession()-->Line_40 $$ assertEquals(0, s.createQuery("From Foo foo").list().size())[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_5 $$ Baz baz = new Baz()[ CD ]
Line_11 $$ List foos = new ArrayList()-->Line_25 $$ foos.remove(1)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_34 $$ s = openSession()[ CD ]
Line_34 $$ s = openSession()-->Line_40 $$ assertEquals(0, s.createQuery("From Foo foo").list().size())[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_7 $$ baz.setCascadingBars(bars)[ CD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ s = openSession()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_28 $$ s.update(baz)[ CD ]
Line_26 $$ s = openSession()-->Line_36 $$ s.update(baz)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_37 $$ bars.remove(bars.iterator().next())[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_8 $$ bars.add(new Bar())[ CD ]
Line_6 $$ Set bars = new HashSet()-->Line_37 $$ bars.remove(bars.iterator().next())[ FD ]
Line_11 $$ List foos = new ArrayList()-->Line_14 $$ baz.setFooBag(foos)[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ s.delete(baz)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_11 $$ List foos = new ArrayList()[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_22 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ assertEquals(3, s.createQuery("From Foo foo").list().size())[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_41 $$ t.commit()[ FD ]
Line_11 $$ List foos = new ArrayList()-->Line_13 $$ foos.add(new Foo())[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_39 $$ s.delete(baz)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_23 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ s.update(baz)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_36 $$ s.update(baz)[ CD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_38 $$ assertEquals(1, s.createQuery("From Foo foo").list().size())[ CD ]
Line_26 $$ s = openSession()-->Line_29 $$ assertEquals(2, s.createQuery("From Bar bar").list().size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ s.close()[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_14 $$ baz.setFooBag(foos)[ CD ]
Line_11 $$ List foos = new ArrayList()-->Line_16 $$ Iterator i = new JoinedIterator(new Iterator[] [ FD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ s.save(baz)[ FD ]
Line_2 $$ public void testTransientOrphanDelete() throws Exception -->Line_29 $$ assertEquals(2, s.createQuery("From Bar bar").list().size())[ CD ]
