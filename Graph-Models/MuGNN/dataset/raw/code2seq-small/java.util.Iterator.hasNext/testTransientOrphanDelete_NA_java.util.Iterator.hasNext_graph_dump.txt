Line_6 $$ Baz baz = new Baz()-->Line_29 $$ s.update(baz)[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_15 $$ baz.setFooBag(foos)[ FD ]
Line_7 $$ Set bars = new HashSet()-->Line_11 $$ bars.add(new Bar())[ FD ]
Line_4 $$ Session s = openSession()-->Line_27 $$ s = openSession()[ FD ]
Line_27 $$ s = openSession()-->Line_28 $$ t = s.beginTransaction()[ FD ]
Line_35 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_28 $$ t = s.beginTransaction()-->Line_36 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_30 $$ assertEquals(2, s.createQuery("From Bar bar").list().size())[ FD ]
Line_18 $$ while (i.hasNext()) -->Line_19 $$ FooComponent cmp = ((Foo) i.next()).getComponent()[ CD ]
Line_7 $$ Set bars = new HashSet()-->Line_10 $$ bars.add(new Bar())[ FD ]
Line_12 $$ List foos = new ArrayList()-->Line_17 $$ Iterator i = new JoinedIterator(new Iterator[] [ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_16 $$ s.save(baz)[ FD ]
Line_27 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_32 $$ t.commit()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_40 $$ s.delete(baz)[ FD ]
Line_4 $$ Session s = openSession()-->Line_16 $$ s.save(baz)[ FD ]
Line_17 $$ Iterator i = new JoinedIterator(new Iterator[] -->Line_19 $$ FooComponent cmp = ((Foo) i.next()).getComponent()[ FD ]
Line_4 $$ Session s = openSession()-->Line_36 $$ t = s.beginTransaction()[ FD ]
Line_27 $$ s = openSession()-->Line_30 $$ assertEquals(2, s.createQuery("From Bar bar").list().size())[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_37 $$ s.update(baz)[ FD ]
Line_7 $$ Set bars = new HashSet()-->Line_8 $$ baz.setCascadingBars(bars)[ FD ]
Line_12 $$ List foos = new ArrayList()-->Line_13 $$ foos.add(new Foo())[ FD ]
Line_27 $$ s = openSession()-->Line_29 $$ s.update(baz)[ FD ]
Line_17 $$ Iterator i = new JoinedIterator(new Iterator[] -->Line_18 $$ while (i.hasNext()) [ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_8 $$ baz.setCascadingBars(bars)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_36 $$ t = s.beginTransaction()[ FD ]
Line_28 $$ t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_12 $$ List foos = new ArrayList()-->Line_15 $$ baz.setFooBag(foos)[ FD ]
Line_28 $$ t = s.beginTransaction()-->Line_32 $$ t.commit()[ FD ]
Line_12 $$ List foos = new ArrayList()-->Line_34 $$ foos.remove(0)[ FD ]
Line_35 $$ s = openSession()-->Line_36 $$ t = s.beginTransaction()[ FD ]
Line_35 $$ s = openSession()-->Line_40 $$ s.delete(baz)[ FD ]
Line_27 $$ s = openSession()-->Line_36 $$ t = s.beginTransaction()[ FD ]
Line_18 $$ while (i.hasNext()) -->Line_21 $$ cmp.setGlarch(null)[ CD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_23 $$ t.commit()[ FD ]
Line_18 $$ while (i.hasNext()) -->Line_20 $$ s.delete(cmp.getGlarch())[ CD ]
Line_36 $$ t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_19 $$ FooComponent cmp = ((Foo) i.next()).getComponent()-->Line_21 $$ cmp.setGlarch(null)[ FD ]
Line_27 $$ s = openSession()-->Line_37 $$ s.update(baz)[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ assertEquals(1, s.createQuery("From Foo foo").list().size())[ FD ]
Line_19 $$ FooComponent cmp = ((Foo) i.next()).getComponent()-->Line_20 $$ s.delete(cmp.getGlarch())[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_28 $$ t = s.beginTransaction()[ FD ]
Line_7 $$ Set bars = new HashSet()-->Line_38 $$ bars.remove(bars.iterator().next())[ FD ]
Line_4 $$ Session s = openSession()-->Line_35 $$ s = openSession()[ FD ]
Line_12 $$ List foos = new ArrayList()-->Line_14 $$ foos.add(new Foo())[ FD ]
Line_27 $$ s = openSession()-->Line_39 $$ assertEquals(1, s.createQuery("From Foo foo").list().size())[ FD ]
Line_4 $$ Session s = openSession()-->Line_20 $$ s.delete(cmp.getGlarch())[ FD ]
Line_4 $$ Session s = openSession()-->Line_40 $$ s.delete(baz)[ FD ]
Line_27 $$ s = openSession()-->Line_40 $$ s.delete(baz)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_43 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_24 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ s.update(baz)[ FD ]
Line_4 $$ Session s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_35 $$ s = openSession()-->Line_37 $$ s.update(baz)[ FD ]
Line_27 $$ s = openSession()-->Line_33 $$ s.close()[ FD ]
Line_7 $$ Set bars = new HashSet()-->Line_9 $$ bars.add(new Bar())[ FD ]
Line_7 $$ Set bars = new HashSet()-->Line_25 $$ bars.remove(bars.iterator().next())[ FD ]
Line_7 $$ Set bars = new HashSet()-->Line_17 $$ Iterator i = new JoinedIterator(new Iterator[] [ FD ]
Line_27 $$ s = openSession()-->Line_31 $$ assertEquals(3, s.createQuery("From Foo foo").list().size())[ FD ]
Line_27 $$ s = openSession()-->Line_35 $$ s = openSession()[ FD ]
Line_4 $$ Session s = openSession()-->Line_33 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_31 $$ assertEquals(3, s.createQuery("From Foo foo").list().size())[ FD ]
Line_12 $$ List foos = new ArrayList()-->Line_26 $$ foos.remove(1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ t = s.beginTransaction()[ FD ]
Line_35 $$ s = openSession()-->Line_39 $$ assertEquals(1, s.createQuery("From Foo foo").list().size())[ FD ]
Line_4 $$ Session s = openSession()-->Line_29 $$ s.update(baz)[ FD ]
