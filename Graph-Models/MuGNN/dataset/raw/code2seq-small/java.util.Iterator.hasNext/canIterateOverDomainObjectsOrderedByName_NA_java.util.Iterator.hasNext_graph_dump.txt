Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_8 $$ container.add(bean3)[ CD ]
Line_4 $$ Bean bean2 = new Bean("b")-->Line_6 $$ container.add(bean2)[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_6 $$ container.add(bean2)[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_9 $$ Iterator<Bean> iterator = container.iterator()[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_5 $$ Bean bean3 = new Bean("c")[ CD ]
Line_5 $$ Bean bean3 = new Bean("c")-->Line_8 $$ container.add(bean3)[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_4 $$ Bean bean2 = new Bean("b")[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_7 $$ container.add(bean1)[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_10 $$ assertThat(iterator.next(), sameInstance(bean1))[ CD ]
Line_9 $$ Iterator<Bean> iterator = container.iterator()-->Line_10 $$ assertThat(iterator.next(), sameInstance(bean1))[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_13 $$ assertFalse(iterator.hasNext())[ CD ]
Line_3 $$ Bean bean1 = new Bean("a")-->Line_7 $$ container.add(bean1)[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_3 $$ Bean bean1 = new Bean("a")[ CD ]
Line_9 $$ Iterator<Bean> iterator = container.iterator()-->Line_12 $$ assertThat(iterator.next(), sameInstance(bean3))[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_12 $$ assertThat(iterator.next(), sameInstance(bean3))[ CD ]
Line_5 $$ Bean bean3 = new Bean("c")-->Line_12 $$ assertThat(iterator.next(), sameInstance(bean3))[ FD ]
Line_9 $$ Iterator<Bean> iterator = container.iterator()-->Line_11 $$ assertThat(iterator.next(), sameInstance(bean2))[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByName() -->Line_11 $$ assertThat(iterator.next(), sameInstance(bean2))[ CD ]
Line_4 $$ Bean bean2 = new Bean("b")-->Line_11 $$ assertThat(iterator.next(), sameInstance(bean2))[ FD ]
Line_9 $$ Iterator<Bean> iterator = container.iterator()-->Line_13 $$ assertFalse(iterator.hasNext())[ FD ]
Line_3 $$ Bean bean1 = new Bean("a")-->Line_10 $$ assertThat(iterator.next(), sameInstance(bean1))[ FD ]
