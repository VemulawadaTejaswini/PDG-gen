Line_18 $$ if (itr.hasNext()) -->Line_20 $$ if (count != null) [ CD ]
Line_18 $$ if (itr.hasNext()) -->Line_19 $$ Long count = itr.next()[ CD ]
Line_4 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) -->Line_5 $$ return MBThreadUtil.countByG_C(groupId, categoryId)[ CD ]
Line_10 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_C)-->Line_12 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_19 $$ Long count = itr.next()-->Line_21 $$ return count.intValue()[ FD ]
Line_9 $$ session = openSession()-->Line_28 $$ closeSession(session)[ FD ]
Line_12 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_13 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_17 $$ Iterator<Long> itr = q.iterate()-->Line_19 $$ Long count = itr.next()[ FD ]
Line_14 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_16 $$ qPos.add(categoryId)[ FD ]
Line_19 $$ Long count = itr.next()-->Line_20 $$ if (count != null) [ FD ]
Line_17 $$ Iterator<Long> itr = q.iterate()-->Line_18 $$ if (itr.hasNext()) [ FD ]
Line_12 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_17 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_14 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_15 $$ qPos.add(groupId)[ FD ]
Line_7 $$ Session session = null-->Line_12 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBMessage.class.getName(), "MBThread.rootMessageId", groupId)-->Line_12 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_12 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_14 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_20 $$ if (count != null) -->Line_21 $$ return count.intValue()[ CD ]
Line_10 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_C)-->Line_11 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBMessage.class.getName(), "MBThread.rootMessageId", groupId)[ FD ]
Line_7 $$ Session session = null-->Line_9 $$ session = openSession()[ FD ]
Line_9 $$ session = openSession()-->Line_12 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_7 $$ Session session = null-->Line_28 $$ closeSession(session)[ FD ]
