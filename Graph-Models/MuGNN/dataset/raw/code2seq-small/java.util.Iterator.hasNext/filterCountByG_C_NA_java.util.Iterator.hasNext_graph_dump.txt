Line_18 $$ Long count = itr.next()-->Line_19 $$ if (count != null) [ FD ]
Line_19 $$ if (count != null) -->Line_20 $$ return count.intValue()[ CD ]
Line_17 $$ if (itr.hasNext()) -->Line_19 $$ if (count != null) [ CD ]
Line_6 $$ Session session = null-->Line_27 $$ closeSession(session)[ FD ]
Line_13 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_15 $$ qPos.add(categoryId)[ FD ]
Line_8 $$ session = openSession()-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_16 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_2 $$ public int filterCountByG_C(long groupId, long categoryId) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ CD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBMessage.class.getName(), "MBThread.rootMessageId", groupId)-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_13 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_13 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_14 $$ qPos.add(groupId)[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_C)-->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBMessage.class.getName(), "MBThread.rootMessageId", groupId)[ FD ]
Line_6 $$ Session session = null-->Line_8 $$ session = openSession()[ FD ]
Line_9 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_C)-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_18 $$ Long count = itr.next()-->Line_20 $$ return count.intValue()[ FD ]
Line_2 $$ public int filterCountByG_C(long groupId, long categoryId) -->Line_6 $$ Session session = null[ CD ]
Line_6 $$ Session session = null-->Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ public int filterCountByG_C(long groupId, long categoryId) -->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBMessage.class.getName(), "MBThread.rootMessageId", groupId)[ FD ]
Line_17 $$ if (itr.hasNext()) -->Line_18 $$ Long count = itr.next()[ CD ]
Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) -->Line_4 $$ return MBThreadUtil.countByG_C(groupId, categoryId)[ CD ]
Line_2 $$ public int filterCountByG_C(long groupId, long categoryId) -->Line_14 $$ qPos.add(groupId)[ FD ]
Line_2 $$ public int filterCountByG_C(long groupId, long categoryId) -->Line_4 $$ return MBThreadUtil.countByG_C(groupId, categoryId)[ FD ]
Line_16 $$ Iterator<Long> itr = q.iterate()-->Line_18 $$ Long count = itr.next()[ FD ]
Line_2 $$ public int filterCountByG_C(long groupId, long categoryId) -->Line_3 $$ if (!InlineSQLHelperUtil.isEnabled(groupId)) [ FD ]
Line_8 $$ session = openSession()-->Line_27 $$ closeSession(session)[ FD ]
Line_2 $$ public int filterCountByG_C(long groupId, long categoryId) -->Line_15 $$ qPos.add(categoryId)[ FD ]
Line_11 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_12 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_16 $$ Iterator<Long> itr = q.iterate()-->Line_17 $$ if (itr.hasNext()) [ FD ]
