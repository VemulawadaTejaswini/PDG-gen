Line_5 $$ for (; in.hasNext(); ) -->Line_6 $$ final Node inNode = in.next()[ CD ]
Line_2 $$ private Set<Node> getNextNodes(Node node) -->Line_5 $$ for (; in.hasNext(); ) [ CD ]
Line_2 $$ private Set<Node> getNextNodes(Node node) -->Line_4 $$ final Iterator<Node> in = myGraph.getIn(node)[ FD ]
Line_2 $$ private Set<Node> getNextNodes(Node node) -->Line_4 $$ final Iterator<Node> in = myGraph.getIn(node)[ CD ]
Line_5 $$ for (; in.hasNext(); ) -->Line_7 $$ if (myChunk.containsNode(inNode)) [ CD ]
Line_4 $$ final Iterator<Node> in = myGraph.getIn(node)-->Line_5 $$ for (; in.hasNext(); ) [ FD ]
Line_4 $$ final Iterator<Node> in = myGraph.getIn(node)-->Line_6 $$ final Node inNode = in.next()[ FD ]
Line_2 $$ private Set<Node> getNextNodes(Node node) -->Line_3 $$ Set<Node> result = new HashSet<Node>()[ CD ]
Line_6 $$ final Node inNode = in.next()-->Line_7 $$ if (myChunk.containsNode(inNode)) [ FD ]
Line_3 $$ Set<Node> result = new HashSet<Node>()-->Line_8 $$ result.add(inNode)[ FD ]
Line_7 $$ if (myChunk.containsNode(inNode)) -->Line_8 $$ result.add(inNode)[ CD ]
Line_2 $$ private Set<Node> getNextNodes(Node node) -->Line_11 $$ return result[ CD ]
Line_6 $$ final Node inNode = in.next()-->Line_8 $$ result.add(inNode)[ FD ]
