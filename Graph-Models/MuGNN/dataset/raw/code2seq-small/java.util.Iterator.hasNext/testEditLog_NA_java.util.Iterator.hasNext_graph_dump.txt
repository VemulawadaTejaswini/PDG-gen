Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build()-->Line_11 $$ final FSNamesystem namesystem = cluster.getNamesystem()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build()-->Line_47 $$ if (cluster != null)[ FD ]
Line_20 $$ for (int i = 0; i < NUM_THREADS; i++) -->Line_23 $$ threadId[i].start()[ CD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_9 $$ cluster.waitActive()[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_10 $$ fileSys = cluster.getFileSystem()[ FD ]
Line_41 $$ long numEdits = loader.loadFSEdits(new EditLogFileInputStream(editFile), 1)-->Line_42 $$ assertEquals("Verification for " + editFile, expectedTransactions, numEdits)[ FD ]
Line_20 $$ for (int i = 0; i < NUM_THREADS; i++) -->Line_29 $$ i--[ FD ]
Line_35 $$ int expectedTransactions = NUM_THREADS * opsPerTrans * NUM_TRANSACTIONS + numKeys + 2-->Line_42 $$ assertEquals("Verification for " + editFile, expectedTransactions, numEdits)[ FD ]
Line_5 $$ FileSystem fileSys = null-->Line_45 $$ if (fileSys != null)[ FD ]
Line_5 $$ FileSystem fileSys = null-->Line_46 $$ fileSys.close()[ FD ]
Line_2 $$ public void testEditLog() throws IOException -->Line_5 $$ FileSystem fileSys = null[ CD ]
Line_25 $$ for (int i = 0; i < NUM_THREADS; i++) -->Line_29 $$ i--[ FD ]
Line_20 $$ for (int i = 0; i < NUM_THREADS; i++) -->Line_22 $$ threadId[i] = new Thread(trans, "TransactionThread-" + i)[ CD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build()-->Line_48 $$ cluster.shutdown()[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build()-->Line_12 $$ for (Iterator<URI> it = cluster.getNameDirs(0).iterator(); it.hasNext(); ) [ FD ]
Line_13 $$ File dir = new File(it.next().getPath())-->Line_14 $$ System.out.println(dir)[ FD ]
Line_17 $$ FSEditLog editLog = fsimage.getEditLog()-->Line_32 $$ editLog.close()[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_12 $$ for (Iterator<URI> it = cluster.getNameDirs(0).iterator(); it.hasNext(); ) [ FD ]
Line_16 $$ FSImage fsimage = namesystem.getFSImage()-->Line_17 $$ FSEditLog editLog = fsimage.getEditLog()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build()-->Line_10 $$ fileSys = cluster.getFileSystem()[ FD ]
Line_20 $$ for (int i = 0; i < NUM_THREADS; i++) -->Line_25 $$ for (int i = 0; i < NUM_THREADS; i++) [ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).build()-->Line_9 $$ cluster.waitActive()[ FD ]
Line_47 $$ if (cluster != null)-->Line_48 $$ cluster.shutdown()[ CD ]
Line_12 $$ for (Iterator<URI> it = cluster.getNameDirs(0).iterator(); it.hasNext(); ) -->Line_13 $$ File dir = new File(it.next().getPath())[ CD ]
Line_2 $$ public void testEditLog() throws IOException -->Line_3 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_17 $$ FSEditLog editLog = fsimage.getEditLog()-->Line_18 $$ editLog.setOutputBufferCapacity(2048)[ FD ]
Line_3 $$ Configuration conf = new HdfsConfiguration()-->Line_7 $$ conf.setBoolean(DFSConfigKeys.DFS_NAMENODE_DELEGATION_TOKEN_ALWAYS_USE_KEY, true)[ FD ]
Line_37 $$ for (StorageDirectory sd : fsimage.getStorage().dirIterable(NameNodeDirType.EDITS)) -->Line_38 $$ File editFile = NNStorage.getFinalizedEditsFile(sd, 1, 1 + expectedTransactions - 1)[ FD ]
Line_2 $$ public void testEditLog() throws IOException -->Line_4 $$ MiniDFSCluster cluster = null[ CD ]
Line_20 $$ for (int i = 0; i < NUM_THREADS; i++) -->Line_21 $$ Transactions trans = new Transactions(namesystem, NUM_TRANSACTIONS)[ CD ]
Line_12 $$ for (Iterator<URI> it = cluster.getNameDirs(0).iterator(); it.hasNext(); ) -->Line_13 $$ File dir = new File(it.next().getPath())[ FD ]
Line_5 $$ FileSystem fileSys = null-->Line_10 $$ fileSys = cluster.getFileSystem()[ FD ]
Line_11 $$ final FSNamesystem namesystem = cluster.getNamesystem()-->Line_16 $$ FSImage fsimage = namesystem.getFSImage()[ FD ]
Line_40 $$ FSEditLogLoader loader = new FSEditLogLoader(namesystem, 0)-->Line_41 $$ long numEdits = loader.loadFSEdits(new EditLogFileInputStream(editFile), 1)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_11 $$ final FSNamesystem namesystem = cluster.getNamesystem()[ FD ]
Line_45 $$ if (fileSys != null)-->Line_46 $$ fileSys.close()[ CD ]
Line_10 $$ fileSys = cluster.getFileSystem()-->Line_45 $$ if (fileSys != null)[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_48 $$ cluster.shutdown()[ FD ]
Line_16 $$ FSImage fsimage = namesystem.getFSImage()-->Line_37 $$ for (StorageDirectory sd : fsimage.getStorage().dirIterable(NameNodeDirType.EDITS)) [ FD ]
Line_11 $$ final FSNamesystem namesystem = cluster.getNamesystem()-->Line_33 $$ namesystem.getDelegationTokenSecretManager().stopThreads()[ FD ]
Line_12 $$ for (Iterator<URI> it = cluster.getNameDirs(0).iterator(); it.hasNext(); ) -->Line_14 $$ System.out.println(dir)[ CD ]
Line_10 $$ fileSys = cluster.getFileSystem()-->Line_46 $$ fileSys.close()[ FD ]
Line_11 $$ final FSNamesystem namesystem = cluster.getNamesystem()-->Line_34 $$ int numKeys = namesystem.getDelegationTokenSecretManager().getNumberOfKeys()[ FD ]
Line_4 $$ MiniDFSCluster cluster = null-->Line_47 $$ if (cluster != null)[ FD ]
