Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_13 $$ if (Hibernate.isInitialized(c.getLazyDataPoints())) [ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_13 $$ if (Hibernate.isInitialized(c.getLazyDataPoints())) [ CD ]
Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) -->Line_18 $$ for (Iterator it = c.getNonLazyJoinDataPoints().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_15 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_11 $$ checkObject(c.getProxyOwner(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_10 $$ checkObject(c.getNoProxyOwner(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_7 $$ checkObject(c.getNoProxyInfo(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_22 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_8 $$ checkObject(c.getProxyInfo(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_18 $$ for (Iterator it = c.getNonLazyJoinDataPoints().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_8 $$ checkObject(c.getProxyInfo(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_18 $$ for (Iterator it = c.getNonLazyJoinDataPoints().iterator(); it.hasNext(); ) -->Line_21 $$ for (Iterator it = c.getNonLazySelectDataPoints().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_12 $$ checkObject(c.getNonLazyOwner(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_3 $$ checkObject(c, expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_4 $$ if (!expectedInitializedObjects.contains(c)) -->Line_5 $$ return[ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_11 $$ checkObject(c.getProxyOwner(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_9 $$ checkObject(c.getNonLazyInfo(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_21 $$ for (Iterator it = c.getNonLazySelectDataPoints().iterator(); it.hasNext(); ) -->Line_22 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_21 $$ for (Iterator it = c.getNonLazySelectDataPoints().iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_9 $$ checkObject(c.getNonLazyInfo(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_21 $$ for (Iterator it = c.getNonLazySelectDataPoints().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_10 $$ checkObject(c.getNoProxyOwner(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) -->Line_21 $$ for (Iterator it = c.getNonLazySelectDataPoints().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_12 $$ checkObject(c.getNonLazyOwner(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_18 $$ for (Iterator it = c.getNonLazyJoinDataPoints().iterator(); it.hasNext(); ) -->Line_22 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) -->Line_15 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) -->Line_15 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_21 $$ for (Iterator it = c.getNonLazySelectDataPoints().iterator(); it.hasNext(); ) -->Line_22 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_19 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_3 $$ checkObject(c, expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) [ FD ]
Line_18 $$ for (Iterator it = c.getNonLazyJoinDataPoints().iterator(); it.hasNext(); ) -->Line_19 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_4 $$ if (!expectedInitializedObjects.contains(c)) [ CD ]
Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) -->Line_22 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) -->Line_19 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ FD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_18 $$ for (Iterator it = c.getNonLazyJoinDataPoints().iterator(); it.hasNext(); ) [ CD ]
Line_18 $$ for (Iterator it = c.getNonLazyJoinDataPoints().iterator(); it.hasNext(); ) -->Line_19 $$ checkObject(it.next(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_13 $$ if (Hibernate.isInitialized(c.getLazyDataPoints())) -->Line_14 $$ for (Iterator it = c.getLazyDataPoints().iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_7 $$ checkObject(c.getNoProxyInfo(), expectedInitializedObjects, expectedReadOnlyObjects, s)[ CD ]
Line_2 $$ private void checkContainer(Container c, Set expectedInitializedObjects, Set expectedReadOnlyObjects, Session s) -->Line_4 $$ if (!expectedInitializedObjects.contains(c)) [ FD ]
