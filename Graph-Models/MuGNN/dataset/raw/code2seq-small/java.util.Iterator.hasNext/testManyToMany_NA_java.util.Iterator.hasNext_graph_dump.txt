Line_5 $$ s = openSession()-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())-->Line_32 $$ s.delete(whiteHouse)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_14 $$ s.persist(bill)[ CD ]
Line_3 $$ Session s-->Line_35 $$ s.delete(it.next())[ FD ]
Line_5 $$ s = openSession()-->Line_14 $$ s.persist(bill)[ FD ]
Line_4 $$ Transaction tx-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_5 $$ s = openSession()-->Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())[ CD ]
Line_3 $$ Session s-->Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_18 $$ tx.commit()[ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())[ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_20 $$ tx = s.beginTransaction()[ CD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())[ FD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_10 $$ bill.setName("Bill Clinton")[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_31 $$ whiteHouse = bill.getLivesIn().iterator().next()[ CD ]
Line_6 $$ tx = s.beginTransaction()-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_4 $$ Transaction tx-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s-->Line_5 $$ s = openSession()[ FD ]
Line_19 $$ s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_37 $$ tx.commit()[ CD ]
Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())-->Line_33 $$ Iterator it = whiteHouse.getHasInhabitants().iterator()[ FD ]
Line_3 $$ Session s-->Line_19 $$ s = openSession()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_34 $$ while (it.hasNext()) [ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_23 $$ assertEquals(2, whiteHouse.getHasInhabitants().size())[ CD ]
Line_11 $$ Inhabitant george = new Inhabitant()-->Line_16 $$ whiteHouse.getHasInhabitants().add(george)[ FD ]
Line_31 $$ whiteHouse = bill.getLivesIn().iterator().next()-->Line_33 $$ Iterator it = whiteHouse.getHasInhabitants().iterator()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_26 $$ tx = s.beginTransaction()[ CD ]
Line_33 $$ Iterator it = whiteHouse.getHasInhabitants().iterator()-->Line_34 $$ while (it.hasNext()) [ FD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_15 $$ whiteHouse.getHasInhabitants().add(bill)[ FD ]
Line_5 $$ s = openSession()-->Line_35 $$ s.delete(it.next())[ FD ]
Line_7 $$ House whiteHouse = new House()-->Line_31 $$ whiteHouse = bill.getLivesIn().iterator().next()[ FD ]
Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())-->Line_31 $$ whiteHouse = bill.getLivesIn().iterator().next()[ FD ]
Line_7 $$ House whiteHouse = new House()-->Line_22 $$ assertNotNull(whiteHouse)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_24 $$ tx.commit()[ CD ]
Line_5 $$ s = openSession()-->Line_32 $$ s.delete(whiteHouse)[ FD ]
Line_4 $$ Transaction tx-->Line_18 $$ tx.commit()[ FD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_29 $$ assertEquals(1, bill.getLivesIn().size())[ FD ]
Line_7 $$ House whiteHouse = new House()-->Line_16 $$ whiteHouse.getHasInhabitants().add(george)[ FD ]
Line_7 $$ House whiteHouse = new House()-->Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())[ FD ]
Line_19 $$ s = openSession()-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_33 $$ Iterator it = whiteHouse.getHasInhabitants().iterator()[ CD ]
Line_7 $$ House whiteHouse = new House()-->Line_32 $$ s.delete(whiteHouse)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_32 $$ s.delete(whiteHouse)[ CD ]
Line_7 $$ House whiteHouse = new House()-->Line_33 $$ Iterator it = whiteHouse.getHasInhabitants().iterator()[ FD ]
Line_5 $$ s = openSession()-->Line_25 $$ s.clear()[ FD ]
Line_19 $$ s = openSession()-->Line_32 $$ s.delete(whiteHouse)[ FD ]
Line_3 $$ Session s-->Line_13 $$ s.persist(george)[ FD ]
Line_3 $$ Session s-->Line_14 $$ s.persist(bill)[ FD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_30 $$ assertEquals(whiteHouse.getAddress(), bill.getLivesIn().iterator().next().getAddress())[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_13 $$ s.persist(george)[ CD ]
Line_4 $$ Transaction tx-->Line_24 $$ tx.commit()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_12 $$ george.setName("George W Bush")[ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_3 $$ Session s[ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_11 $$ Inhabitant george = new Inhabitant()[ CD ]
Line_19 $$ s = openSession()-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_38 $$ s.close()[ CD ]
Line_5 $$ s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_4 $$ Transaction tx-->Line_37 $$ tx.commit()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_10 $$ bill.setName("Bill Clinton")[ CD ]
Line_3 $$ Session s-->Line_17 $$ s.persist(whiteHouse)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_22 $$ assertNotNull(whiteHouse)[ CD ]
Line_7 $$ House whiteHouse = new House()-->Line_30 $$ assertEquals(whiteHouse.getAddress(), bill.getLivesIn().iterator().next().getAddress())[ FD ]
Line_31 $$ whiteHouse = bill.getLivesIn().iterator().next()-->Line_32 $$ s.delete(whiteHouse)[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_3 $$ Session s-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_15 $$ whiteHouse.getHasInhabitants().add(bill)[ CD ]
Line_19 $$ s = openSession()-->Line_35 $$ s.delete(it.next())[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_17 $$ s.persist(whiteHouse)[ CD ]
Line_7 $$ House whiteHouse = new House()-->Line_15 $$ whiteHouse.getHasInhabitants().add(bill)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_28 $$ assertNotNull(bill)[ CD ]
Line_4 $$ Transaction tx-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_7 $$ House whiteHouse = new House()[ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_8 $$ whiteHouse.setAddress("1600 Pennsylvania Avenue, Washington")[ CD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_14 $$ s.persist(bill)[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_24 $$ tx.commit()[ FD ]
Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())-->Line_31 $$ whiteHouse = bill.getLivesIn().iterator().next()[ FD ]
Line_34 $$ while (it.hasNext()) -->Line_35 $$ s.delete(it.next())[ CD ]
Line_3 $$ Session s-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_19 $$ s = openSession()-->Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())[ FD ]
Line_3 $$ Session s-->Line_25 $$ s.clear()[ FD ]
Line_5 $$ s = openSession()-->Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())[ FD ]
Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())-->Line_29 $$ assertEquals(1, bill.getLivesIn().size())[ FD ]
Line_33 $$ Iterator it = whiteHouse.getHasInhabitants().iterator()-->Line_35 $$ s.delete(it.next())[ FD ]
Line_5 $$ s = openSession()-->Line_17 $$ s.persist(whiteHouse)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_25 $$ s.clear()[ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_5 $$ s = openSession()[ CD ]
Line_7 $$ House whiteHouse = new House()-->Line_17 $$ s.persist(whiteHouse)[ FD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_31 $$ whiteHouse = bill.getLivesIn().iterator().next()[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_30 $$ assertEquals(whiteHouse.getAddress(), bill.getLivesIn().iterator().next().getAddress())[ CD ]
Line_7 $$ House whiteHouse = new House()-->Line_8 $$ whiteHouse.setAddress("1600 Pennsylvania Avenue, Washington")[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_6 $$ tx = s.beginTransaction()[ CD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_16 $$ whiteHouse.getHasInhabitants().add(george)[ CD ]
Line_3 $$ Session s-->Line_32 $$ s.delete(whiteHouse)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_19 $$ s = openSession()[ CD ]
Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())-->Line_22 $$ assertNotNull(whiteHouse)[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_29 $$ assertEquals(1, bill.getLivesIn().size())[ CD ]
Line_19 $$ s = openSession()-->Line_25 $$ s.clear()[ FD ]
Line_20 $$ tx = s.beginTransaction()-->Line_24 $$ tx.commit()[ FD ]
Line_5 $$ s = openSession()-->Line_13 $$ s.persist(george)[ FD ]
Line_3 $$ Session s-->Line_6 $$ tx = s.beginTransaction()[ FD ]
Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())-->Line_30 $$ assertEquals(whiteHouse.getAddress(), bill.getLivesIn().iterator().next().getAddress())[ FD ]
Line_11 $$ Inhabitant george = new Inhabitant()-->Line_12 $$ george.setName("George W Bush")[ FD ]
Line_3 $$ Session s-->Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_4 $$ Transaction tx[ CD ]
Line_20 $$ tx = s.beginTransaction()-->Line_37 $$ tx.commit()[ FD ]
Line_7 $$ House whiteHouse = new House()-->Line_23 $$ assertEquals(2, whiteHouse.getHasInhabitants().size())[ FD ]
Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())-->Line_30 $$ assertEquals(whiteHouse.getAddress(), bill.getLivesIn().iterator().next().getAddress())[ FD ]
Line_2 $$ public void testManyToMany() throws Exception -->Line_9 $$ Inhabitant bill = new Inhabitant()[ CD ]
Line_20 $$ tx = s.beginTransaction()-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_19 $$ s = openSession()-->Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())[ FD ]
Line_21 $$ whiteHouse = (House) s.get(House.class, whiteHouse.getId())-->Line_23 $$ assertEquals(2, whiteHouse.getHasInhabitants().size())[ FD ]
Line_3 $$ Session s-->Line_38 $$ s.close()[ FD ]
Line_27 $$ bill = (Inhabitant) s.get(Inhabitant.class, bill.getId())-->Line_28 $$ assertNotNull(bill)[ FD ]
Line_26 $$ tx = s.beginTransaction()-->Line_37 $$ tx.commit()[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_37 $$ tx.commit()[ FD ]
Line_9 $$ Inhabitant bill = new Inhabitant()-->Line_28 $$ assertNotNull(bill)[ FD ]
Line_11 $$ Inhabitant george = new Inhabitant()-->Line_13 $$ s.persist(george)[ FD ]
Line_5 $$ s = openSession()-->Line_26 $$ tx = s.beginTransaction()[ FD ]
Line_6 $$ tx = s.beginTransaction()-->Line_18 $$ tx.commit()[ FD ]
Line_5 $$ s = openSession()-->Line_20 $$ tx = s.beginTransaction()[ FD ]
Line_5 $$ s = openSession()-->Line_19 $$ s = openSession()[ FD ]
