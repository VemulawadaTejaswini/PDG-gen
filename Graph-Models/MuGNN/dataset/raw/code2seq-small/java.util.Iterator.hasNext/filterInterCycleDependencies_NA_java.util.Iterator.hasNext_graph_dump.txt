Line_2 $$ private void filterInterCycleDependencies() -->Line_4 $$ for (Iterator<InferenceGraphNode<T>> iterator = myDependencies.iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ private void filterInterCycleDependencies() -->Line_13 $$ if (includeSelfDependency) [ CD ]
Line_4 $$ for (Iterator<InferenceGraphNode<T>> iterator = myDependencies.iterator(); iterator.hasNext(); ) -->Line_8 $$ if (myValue.contains(initialNodeValue)) [ CD ]
Line_13 $$ if (includeSelfDependency) -->Line_14 $$ myDependencies.add(this)[ CD ]
Line_8 $$ if (myValue.contains(initialNodeValue)) -->Line_9 $$ includeSelfDependency = true[ CD ]
Line_8 $$ if (myValue.contains(initialNodeValue)) -->Line_10 $$ iterator.remove()[ CD ]
Line_7 $$ final T initialNodeValue = d.myValue.get(0)-->Line_8 $$ if (myValue.contains(initialNodeValue)) [ FD ]
Line_4 $$ for (Iterator<InferenceGraphNode<T>> iterator = myDependencies.iterator(); iterator.hasNext(); ) -->Line_5 $$ InferenceGraphNode<T> d = iterator.next()[ FD ]
Line_4 $$ for (Iterator<InferenceGraphNode<T>> iterator = myDependencies.iterator(); iterator.hasNext(); ) -->Line_5 $$ InferenceGraphNode<T> d = iterator.next()[ CD ]
Line_4 $$ for (Iterator<InferenceGraphNode<T>> iterator = myDependencies.iterator(); iterator.hasNext(); ) -->Line_7 $$ final T initialNodeValue = d.myValue.get(0)[ CD ]
Line_2 $$ private void filterInterCycleDependencies() -->Line_3 $$ boolean includeSelfDependency = false[ CD ]
Line_4 $$ for (Iterator<InferenceGraphNode<T>> iterator = myDependencies.iterator(); iterator.hasNext(); ) -->Line_10 $$ iterator.remove()[ FD ]
Line_3 $$ boolean includeSelfDependency = false-->Line_9 $$ includeSelfDependency = true[ FD ]
