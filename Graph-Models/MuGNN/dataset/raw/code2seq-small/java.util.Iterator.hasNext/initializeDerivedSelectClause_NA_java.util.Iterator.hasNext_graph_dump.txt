Line_28 $$ if (!collectionOfElements) -->Line_29 $$ if (!fromElement.isFetch()) [ CD ]
Line_28 $$ if (!collectionOfElements) -->Line_37 $$ if (generatedExpr != null) [ CD ]
Line_26 $$ if (type != null) -->Line_27 $$ boolean collectionOfElements = fromElement.isCollectionOfValuesOrComponents()[ CD ]
Line_21 $$ Iterator iterator = fromElements.iterator()-->Line_23 $$ FromElement fromElement = (FromElement) iterator.next()[ FD ]
Line_22 $$ for (int k = 0; iterator.hasNext(); k++) -->Line_25 $$ addCollectionFromElement(fromElement)[ CD ]
Line_23 $$ FromElement fromElement = (FromElement) iterator.next()-->Line_24 $$ Type type = fromElement.getSelectType()[ FD ]
Line_27 $$ boolean collectionOfElements = fromElement.isCollectionOfValuesOrComponents()-->Line_28 $$ if (!collectionOfElements) [ FD ]
Line_45 $$ if (getWalker().isShallowQuery()) -->Line_48 $$ renderNonScalarSelects(selectExpressions, fromClause)[ CD ]
Line_26 $$ if (type != null) -->Line_28 $$ if (!collectionOfElements) [ CD ]
Line_23 $$ FromElement fromElement = (FromElement) iterator.next()-->Line_33 $$ fromElementsForLoad.add(fromElement)[ FD ]
Line_24 $$ Type type = fromElement.getSelectType()-->Line_26 $$ if (type != null) [ FD ]
Line_28 $$ if (!collectionOfElements) -->Line_33 $$ fromElementsForLoad.add(fromElement)[ CD ]
Line_36 $$ SelectExpressionImpl generatedExpr = (SelectExpressionImpl) appender.append(SqlTokenTypes.SELECT_EXPR, text, false)-->Line_37 $$ if (generatedExpr != null) [ FD ]
Line_23 $$ FromElement fromElement = (FromElement) iterator.next()-->Line_27 $$ boolean collectionOfElements = fromElement.isCollectionOfValuesOrComponents()[ FD ]
Line_22 $$ for (int k = 0; iterator.hasNext(); k++) -->Line_23 $$ FromElement fromElement = (FromElement) iterator.next()[ CD ]
Line_21 $$ Iterator iterator = fromElements.iterator()-->Line_22 $$ for (int k = 0; iterator.hasNext(); k++) [ FD ]
Line_22 $$ for (int k = 0; iterator.hasNext(); k++) -->Line_24 $$ Type type = fromElement.getSelectType()[ CD ]
Line_22 $$ for (int k = 0; iterator.hasNext(); k++) -->Line_26 $$ if (type != null) [ CD ]
Line_36 $$ SelectExpressionImpl generatedExpr = (SelectExpressionImpl) appender.append(SqlTokenTypes.SELECT_EXPR, text, false)-->Line_38 $$ generatedExpr.setFromElement(fromElement)[ FD ]
Line_28 $$ if (!collectionOfElements) -->Line_36 $$ SelectExpressionImpl generatedExpr = (SelectExpressionImpl) appender.append(SqlTokenTypes.SELECT_EXPR, text, false)[ CD ]
Line_23 $$ FromElement fromElement = (FromElement) iterator.next()-->Line_38 $$ generatedExpr.setFromElement(fromElement)[ FD ]
Line_37 $$ if (generatedExpr != null) -->Line_38 $$ generatedExpr.setFromElement(fromElement)[ CD ]
Line_23 $$ FromElement fromElement = (FromElement) iterator.next()-->Line_25 $$ addCollectionFromElement(fromElement)[ FD ]
Line_23 $$ FromElement fromElement = (FromElement) iterator.next()-->Line_29 $$ if (!fromElement.isFetch()) [ FD ]
Line_45 $$ if (getWalker().isShallowQuery()) -->Line_46 $$ renderScalarSelects(selectExpressions, fromClause)[ CD ]
Line_20 $$ ArrayList queryReturnTypeList = new ArrayList(size)-->Line_50 $$ finishInitialization(queryReturnTypeList)[ FD ]
