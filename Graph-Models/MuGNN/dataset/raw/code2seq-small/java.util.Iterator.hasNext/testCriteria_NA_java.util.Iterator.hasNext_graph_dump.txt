Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_26 $$ base.createCriteria("fo", "fo").add(Restrictions.isNotNull("fum"))[ FD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_43 $$ fum = (Fum) base.list().get(0)[ FD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_28 $$ Map map = (Map) base.uniqueResult()[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_23 $$ List list = base.list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ list = s.createCriteria(Fum.class).createAlias("friends", "fr").createAlias("fo", "fo").add(Restrictions.like("fum", "f%")).add(Restrictions.isNotNull("fo")).add(Restrictions.isNotNull("fo.fum")).add(Restrictions.like("fr.fum", "g%")).add(Restrictions.eqProperty("fr.id.short", "id.short")).list()[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_12 $$ fr2.setFum("soo")[ CD ]
Line_38 $$ s = openSession()-->Line_39 $$ txn = s.beginTransaction()[ FD ]
Line_43 $$ fum = (Fum) base.list().get(0)-->Line_45 $$ s.delete(fum)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_19 $$ s.save(fum)[ CD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_27 $$ base.createCriteria("friends", "fum").add(Restrictions.like("fum", "g", MatchMode.START))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_44 $$ assertTrue(fum.getFriends().size() == 2)[ CD ]
Line_3 $$ Session s = openSession()-->Line_49 $$ s.delete(iter.next())[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ s.save(fr2)[ FD ]
Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)-->Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))[ FD ]
Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))-->Line_41 $$ base.createCriteria("fo").add(Restrictions.isNotNull("fum"))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_18 $$ s.save(fum.getFo())[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_36 $$ txn.commit()[ FD ]
Line_11 $$ Fum fr2 = new Fum(fumKey("fr2"))-->Line_15 $$ fum.getFriends().add(fr2)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_28 $$ Map map = (Map) base.uniqueResult()[ CD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))[ FD ]
Line_3 $$ Session s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_45 $$ s.delete(fum)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_5 $$ Fum fum = new Fum(fumKey("fum"))[ CD ]
Line_38 $$ s = openSession()-->Line_46 $$ s.delete(fum.getFo())[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_26 $$ base.createCriteria("fo", "fo").add(Restrictions.isNotNull("fum"))[ CD ]
Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))-->Line_43 $$ fum = (Fum) base.list().get(0)[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_18 $$ s.save(fum.getFo())[ FD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_26 $$ base.createCriteria("fo", "fo").add(Restrictions.isNotNull("fum"))[ FD ]
Line_28 $$ Map map = (Map) base.uniqueResult()-->Line_33 $$ assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && map.size() == 2)[ FD ]
Line_38 $$ s = openSession()-->Line_52 $$ s.close()[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_8 $$ fum.getFo().setFum("stuff")[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_19 $$ s.save(fum)[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_48 $$ while (iter.hasNext()) -->Line_49 $$ s.delete(iter.next())[ CD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_32 $$ map = (Map) base.list().get(0)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_17 $$ s.save(fr2)[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_43 $$ fum = (Fum) base.list().get(0)[ CD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_31 $$ base.createCriteria("fo", "fo").add(Restrictions.eq("fum", fum.getFo().getFum()))[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_39 $$ txn = s.beginTransaction()[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_43 $$ fum = (Fum) base.list().get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.save(fum)[ FD ]
Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)-->Line_41 $$ base.createCriteria("fo").add(Restrictions.isNotNull("fum"))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_10 $$ fr.setFum("goo")[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_36 $$ txn.commit()[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_6 $$ fum.setFo(new Fum(fumKey("fo")))[ CD ]
Line_34 $$ list = s.createCriteria(Fum.class).createAlias("friends", "fr").createAlias("fo", "fo").add(Restrictions.like("fum", "f%")).add(Restrictions.isNotNull("fo")).add(Restrictions.isNotNull("fo.fum")).add(Restrictions.like("fr.fum", "g%")).add(Restrictions.eqProperty("fr.id.short", "id.short")).list()-->Line_35 $$ assertTrue(list.size() == 1 && list.get(0) == fum)[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_44 $$ assertTrue(fum.getFriends().size() == 2)[ FD ]
Line_43 $$ fum = (Fum) base.list().get(0)-->Line_46 $$ s.delete(fum.getFo())[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_7 $$ fum.setFum("fo fee fi")[ CD ]
Line_9 $$ Fum fr = new Fum(fumKey("fr"))-->Line_16 $$ s.save(fr)[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_7 $$ fum.setFum("fo fee fi")[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_34 $$ list = s.createCriteria(Fum.class).createAlias("friends", "fr").createAlias("fo", "fo").add(Restrictions.like("fum", "f%")).add(Restrictions.isNotNull("fo")).add(Restrictions.isNotNull("fo.fum")).add(Restrictions.like("fr.fum", "g%")).add(Restrictions.eqProperty("fr.id.short", "id.short")).list()[ CD ]
Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)-->Line_43 $$ fum = (Fum) base.list().get(0)[ FD ]
Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)-->Line_32 $$ map = (Map) base.list().get(0)[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_27 $$ base.createCriteria("friends", "fum").add(Restrictions.like("fum", "g", MatchMode.START))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_41 $$ base.createCriteria("fo").add(Restrictions.isNotNull("fum"))[ CD ]
Line_28 $$ Map map = (Map) base.uniqueResult()-->Line_32 $$ map = (Map) base.list().get(0)[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_29 $$ assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && fum.getFriends().contains(map.get("fum")) && map.size() == 3)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_37 $$ s.close()[ CD ]
Line_43 $$ fum = (Fum) base.list().get(0)-->Line_47 $$ Iterator iter = fum.getFriends().iterator()[ FD ]
Line_3 $$ Session s = openSession()-->Line_37 $$ s.close()[ FD ]
Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)-->Line_42 $$ base.createCriteria("friends").add(Restrictions.like("fum", "g%"))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_33 $$ assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && map.size() == 2)[ CD ]
Line_23 $$ List list = base.list()-->Line_35 $$ assertTrue(list.size() == 1 && list.get(0) == fum)[ FD ]
Line_23 $$ List list = base.list()-->Line_24 $$ assertTrue(list.size() == 1 && list.get(0) == fum)[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_47 $$ Iterator iter = fum.getFriends().iterator()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_45 $$ s.delete(fum)[ CD ]
Line_11 $$ Fum fr2 = new Fum(fumKey("fr2"))-->Line_17 $$ s.save(fr2)[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)[ FD ]
Line_38 $$ s = openSession()-->Line_45 $$ s.delete(fum)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_8 $$ fum.getFo().setFum("stuff")[ CD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_41 $$ base.createCriteria("fo").add(Restrictions.isNotNull("fum"))[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)[ FD ]
Line_3 $$ Session s = openSession()-->Line_18 $$ s.save(fum.getFo())[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_28 $$ Map map = (Map) base.uniqueResult()[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_23 $$ List list = base.list()[ CD ]
Line_3 $$ Session s = openSession()-->Line_46 $$ s.delete(fum.getFo())[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_29 $$ assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && fum.getFriends().contains(map.get("fum")) && map.size() == 3)[ CD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_14 $$ fum.getFriends().add(fr)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_15 $$ fum.getFriends().add(fr2)[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_35 $$ assertTrue(list.size() == 1 && list.get(0) == fum)[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_51 $$ txn.commit()[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_21 $$ base.createCriteria("fo").add(Restrictions.isNotNull("fum"))[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_52 $$ s.close()[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_11 $$ Fum fr2 = new Fum(fumKey("fr2"))[ CD ]
Line_43 $$ fum = (Fum) base.list().get(0)-->Line_44 $$ assertTrue(fum.getFriends().size() == 2)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_39 $$ txn = s.beginTransaction()[ CD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_41 $$ base.createCriteria("fo").add(Restrictions.isNotNull("fum"))[ FD ]
Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)-->Line_31 $$ base.createCriteria("fo", "fo").add(Restrictions.eq("fum", fum.getFo().getFum()))[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_33 $$ assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && map.size() == 2)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_46 $$ s.delete(fum.getFo())[ CD ]
Line_9 $$ Fum fr = new Fum(fumKey("fr"))-->Line_10 $$ fr.setFum("goo")[ FD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_31 $$ base.createCriteria("fo", "fo").add(Restrictions.eq("fum", fum.getFo().getFum()))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_32 $$ map = (Map) base.list().get(0)[ CD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_43 $$ fum = (Fum) base.list().get(0)[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_6 $$ fum.setFo(new Fum(fumKey("fo")))[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_47 $$ Iterator iter = fum.getFriends().iterator()[ CD ]
Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))-->Line_42 $$ base.createCriteria("friends").add(Restrictions.like("fum", "g%"))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_31 $$ base.createCriteria("fo", "fo").add(Restrictions.eq("fum", fum.getFo().getFum()))[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_38 $$ s = openSession()[ CD ]
Line_38 $$ s = openSession()-->Line_49 $$ s.delete(iter.next())[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_4 $$ Transaction txn = s.beginTransaction()[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_24 $$ assertTrue(list.size() == 1 && list.get(0) == fum)[ CD ]
Line_23 $$ List list = base.list()-->Line_34 $$ list = s.createCriteria(Fum.class).createAlias("friends", "fr").createAlias("fo", "fo").add(Restrictions.like("fum", "f%")).add(Restrictions.isNotNull("fo")).add(Restrictions.isNotNull("fo.fum")).add(Restrictions.like("fr.fum", "g%")).add(Restrictions.eqProperty("fr.id.short", "id.short")).list()[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_27 $$ base.createCriteria("friends", "fum").add(Restrictions.like("fum", "g", MatchMode.START))[ CD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_9 $$ Fum fr = new Fum(fumKey("fr"))[ CD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_13 $$ fum.setFriends(new HashSet())[ FD ]
Line_3 $$ Session s = openSession()-->Line_16 $$ s.save(fr)[ FD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_22 $$ base.createCriteria("friends").add(Restrictions.like("fum", "g%"))[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_31 $$ base.createCriteria("fo", "fo").add(Restrictions.eq("fum", fum.getFo().getFum()))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_48 $$ while (iter.hasNext()) [ CD ]
Line_47 $$ Iterator iter = fum.getFriends().iterator()-->Line_48 $$ while (iter.hasNext()) [ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_15 $$ fum.getFriends().add(fr2)[ FD ]
Line_38 $$ s = openSession()-->Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))[ FD ]
Line_5 $$ Fum fum = new Fum(fumKey("fum"))-->Line_46 $$ s.delete(fum.getFo())[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_42 $$ base.createCriteria("friends").add(Restrictions.like("fum", "g%"))[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_51 $$ txn.commit()[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_13 $$ fum.setFriends(new HashSet())[ CD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_42 $$ base.createCriteria("friends").add(Restrictions.like("fum", "g%"))[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%"))[ FD ]
Line_11 $$ Fum fr2 = new Fum(fumKey("fr2"))-->Line_12 $$ fr2.setFum("soo")[ FD ]
Line_3 $$ Session s = openSession()-->Line_39 $$ txn = s.beginTransaction()[ FD ]
Line_28 $$ Map map = (Map) base.uniqueResult()-->Line_29 $$ assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && fum.getFriends().contains(map.get("fum")) && map.size() == 3)[ FD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_32 $$ map = (Map) base.list().get(0)[ FD ]
Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)-->Line_42 $$ base.createCriteria("friends").add(Restrictions.like("fum", "g%"))[ FD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s = openSession()[ FD ]
Line_32 $$ map = (Map) base.list().get(0)-->Line_33 $$ assertTrue(map.get("this") == fum && map.get("fo") == fum.getFo() && map.size() == 2)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_25 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP)[ CD ]
Line_9 $$ Fum fr = new Fum(fumKey("fr"))-->Line_14 $$ fum.getFriends().add(fr)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)[ CD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f%")).setResultTransformer(Criteria.ALIAS_TO_ENTITY_MAP).setFetchMode("friends", FetchMode.JOIN)[ FD ]
Line_39 $$ txn = s.beginTransaction()-->Line_51 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ s.delete(fum)[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_22 $$ base.createCriteria("friends").add(Restrictions.like("fum", "g%"))[ CD ]
Line_20 $$ Criteria base = s.createCriteria(Fum.class).add(Restrictions.like("fum", "f", MatchMode.START))-->Line_21 $$ base.createCriteria("fo").add(Restrictions.isNotNull("fum"))[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_16 $$ s.save(fr)[ CD ]
Line_47 $$ Iterator iter = fum.getFriends().iterator()-->Line_49 $$ s.delete(iter.next())[ FD ]
Line_2 $$ public void testCriteria() throws Exception -->Line_14 $$ fum.getFriends().add(fr)[ CD ]
