Line_8 $$ for (Iterator<String> iterator = results.iterator(); iterator.hasNext(); ) -->Line_10 $$ final List<Set<String>> values = FileBasedIndex.getInstance().getValues(KEY, id, searchScope)[ CD ]
Line_7 $$ final GlobalSearchScope searchScope = GlobalSearchScope.projectScope(project)-->Line_10 $$ final List<Set<String>> values = FileBasedIndex.getInstance().getValues(KEY, id, searchScope)[ FD ]
Line_10 $$ final List<Set<String>> values = FileBasedIndex.getInstance().getValues(KEY, id, searchScope)-->Line_12 $$ final Set<String> pathSet = values.get(0)[ FD ]
Line_11 $$ if (!values.isEmpty()) -->Line_12 $$ final Set<String> pathSet = values.get(0)[ CD ]
Line_9 $$ final String id = iterator.next()-->Line_10 $$ final List<Set<String>> values = FileBasedIndex.getInstance().getValues(KEY, id, searchScope)[ FD ]
Line_4 $$ CommonProcessors.CollectUniquesProcessor<String> processor = new CommonProcessors.CollectUniquesProcessor<String>()-->Line_5 $$ FileBasedIndex.getInstance().processAllKeys(KEY, processor, project)[ FD ]
Line_8 $$ for (Iterator<String> iterator = results.iterator(); iterator.hasNext(); ) -->Line_9 $$ final String id = iterator.next()[ CD ]
Line_11 $$ if (!values.isEmpty()) -->Line_13 $$ if (pathSet != null) [ CD ]
Line_8 $$ for (Iterator<String> iterator = results.iterator(); iterator.hasNext(); ) -->Line_11 $$ if (!values.isEmpty()) [ CD ]
Line_10 $$ final List<Set<String>> values = FileBasedIndex.getInstance().getValues(KEY, id, searchScope)-->Line_11 $$ if (!values.isEmpty()) [ FD ]
Line_4 $$ CommonProcessors.CollectUniquesProcessor<String> processor = new CommonProcessors.CollectUniquesProcessor<String>()-->Line_6 $$ final Collection<String> results = new ArrayList<String>(processor.getResults())[ FD ]
Line_6 $$ final Collection<String> results = new ArrayList<String>(processor.getResults())-->Line_8 $$ for (Iterator<String> iterator = results.iterator(); iterator.hasNext(); ) [ FD ]
Line_12 $$ final Set<String> pathSet = values.get(0)-->Line_13 $$ if (pathSet != null) [ FD ]
Line_8 $$ for (Iterator<String> iterator = results.iterator(); iterator.hasNext(); ) -->Line_17 $$ iterator.remove()[ CD ]
Line_8 $$ for (Iterator<String> iterator = results.iterator(); iterator.hasNext(); ) -->Line_17 $$ iterator.remove()[ FD ]
Line_8 $$ for (Iterator<String> iterator = results.iterator(); iterator.hasNext(); ) -->Line_9 $$ final String id = iterator.next()[ FD ]
