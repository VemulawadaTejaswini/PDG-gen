Line_37 $$ if (bytesSync > AVG_BYTES_PER_MAP) -->Line_38 $$ src_writer.sync()[ CD ]
Line_43 $$ if (src_writer != null) -->Line_44 $$ src_writer.close()[ CD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_32 $$ Map.Entry entry = (Map.Entry) it.next()[ CD ]
Line_51 $$ if (!shouldGenerateDistCacheData() && fileCount > 0) -->Line_52 $$ LOG.error("Missing " + fileCount + " distributed cache files under the " + " directory\n" + distCachePath + "\nthat are needed for gridmix" + " to emulate distributed cache load. Either use -generate\noption" + " to generate distributed cache data along with input data OR " + "disable\ndistributed cache emulation by configuring '" + DistributedCacheEmulator.GRIDMIX_EMULATE_DISTRIBUTEDCACHE + "' to false.")[ CD ]
Line_14 $$ Collections.sort(dcFiles, new Comparator() -->Line_17 $$ return ((Comparable) ((Map.Entry) (dc2)).getValue()).compareTo(((Map.Entry) (dc1)).getValue())[ CD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_36 $$ bytesSync += fileSize.get()[ CD ]
Line_33 $$ LongWritable fileSize = new LongWritable(Long.valueOf(entry.getValue().toString()))-->Line_35 $$ byteCount += fileSize.get()[ FD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_37 $$ if (bytesSync > AVG_BYTES_PER_MAP) [ CD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_32 $$ Map.Entry entry = (Map.Entry) it.next()[ FD ]
Line_32 $$ Map.Entry entry = (Map.Entry) it.next()-->Line_33 $$ LongWritable fileSize = new LongWritable(Long.valueOf(entry.getValue().toString()))[ FD ]
Line_37 $$ if (bytesSync > AVG_BYTES_PER_MAP) -->Line_39 $$ bytesSync = fileSize.get()[ CD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_34 $$ BytesWritable filePath = new BytesWritable(entry.getKey().toString().getBytes())[ CD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_41 $$ src_writer.append(fileSize, filePath)[ CD ]
Line_34 $$ BytesWritable filePath = new BytesWritable(entry.getKey().toString().getBytes())-->Line_41 $$ src_writer.append(fileSize, filePath)[ FD ]
Line_32 $$ Map.Entry entry = (Map.Entry) it.next()-->Line_34 $$ BytesWritable filePath = new BytesWritable(entry.getKey().toString().getBytes())[ FD ]
Line_51 $$ if (!shouldGenerateDistCacheData() && fileCount > 0) -->Line_53 $$ return Gridmix.MISSING_DIST_CACHE_FILES_ERROR[ CD ]
Line_33 $$ LongWritable fileSize = new LongWritable(Long.valueOf(entry.getValue().toString()))-->Line_39 $$ bytesSync = fileSize.get()[ FD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_33 $$ LongWritable fileSize = new LongWritable(Long.valueOf(entry.getValue().toString()))[ CD ]
Line_33 $$ LongWritable fileSize = new LongWritable(Long.valueOf(entry.getValue().toString()))-->Line_41 $$ src_writer.append(fileSize, filePath)[ FD ]
Line_33 $$ LongWritable fileSize = new LongWritable(Long.valueOf(entry.getValue().toString()))-->Line_36 $$ bytesSync += fileSize.get()[ FD ]
Line_31 $$ for (Iterator it = dcFiles.iterator(); it.hasNext(); ) -->Line_35 $$ byteCount += fileSize.get()[ CD ]
