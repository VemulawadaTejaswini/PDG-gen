Line_15 $$ if (getDialect() instanceof AbstractHANADialect) -->Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ CD ]
Line_4 $$ Session s = openSession()-->Line_14 $$ txn = s.beginTransaction()[ FD ]
Line_13 $$ s = openSession()-->Line_14 $$ txn = s.beginTransaction()[ FD ]
Line_13 $$ s = openSession()-->Line_28 $$ assertTrue("find composite keyed object", s.createQuery("select fum from Fum fum where fum.fum='fee fi fo'").list().get(0) == fum)[ FD ]
Line_4 $$ Session s = openSession()-->Line_32 $$ s = openSession()[ FD ]
Line_13 $$ s = openSession()-->Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_33 $$ txn = s.beginTransaction()-->Line_43 $$ txn.commit()[ FD ]
Line_23 $$ Fum fum2 = new Fum(fumKey2)-->Line_24 $$ fum2.setFum("fee fo fi")[ FD ]
Line_13 $$ s = openSession()-->Line_33 $$ txn = s.beginTransaction()[ FD ]
Line_7 $$ Fum fum = new Fum(fumKey)-->Line_8 $$ fum.setFum("fee fi fo")[ FD ]
Line_13 $$ s = openSession()-->Line_26 $$ s.save(fum2)[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_33 $$ txn = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ assertTrue("find composite keyed object", s.createQuery("select fum from Fum fum where fum.fum='fee fi fo'").list().get(0) == fum)[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_43 $$ txn.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_12 $$ s.close()[ FD ]
Line_32 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_13 $$ s = openSession()-->Line_32 $$ s = openSession()[ FD ]
Line_4 $$ Session s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_13 $$ s = openSession()-->Line_31 $$ s.close()[ FD ]
Line_14 $$ txn = s.beginTransaction()-->Line_30 $$ txn.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_26 $$ s.save(fum2)[ FD ]
Line_7 $$ Fum fum = new Fum(fumKey)-->Line_9 $$ s.save(fum)[ FD ]
Line_34 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()-->Line_36 $$ while (iter.hasNext()) [ FD ]
Line_4 $$ Session s = openSession()-->Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_4 $$ Session s = openSession()-->Line_13 $$ s = openSession()[ FD ]
Line_7 $$ Fum fum = new Fum(fumKey)-->Line_37 $$ fum = (Fum) iter.next()[ FD ]
Line_23 $$ Fum fum2 = new Fum(fumKey2)-->Line_26 $$ s.save(fum2)[ FD ]
Line_34 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()-->Line_37 $$ fum = (Fum) iter.next()[ FD ]
Line_23 $$ Fum fum2 = new Fum(fumKey2)-->Line_25 $$ fum.setFo(fum2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_34 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()[ FD ]
Line_6 $$ FumCompositeID fumKey = fumKey("fum")-->Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_35 $$ int i = 0-->Line_40 $$ i++[ FD ]
Line_4 $$ Session s = openSession()-->Line_33 $$ txn = s.beginTransaction()[ FD ]
Line_13 $$ s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_14 $$ txn = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_10 $$ assertTrue("load by composite key", fum == s.load(Fum.class, fumKey))[ FD ]
Line_6 $$ FumCompositeID fumKey = fumKey("fum")-->Line_10 $$ assertTrue("load by composite key", fum == s.load(Fum.class, fumKey))[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_11 $$ txn.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_27 $$ assertTrue("find composite keyed objects", s.createQuery("from Fum fum where not fum.fum='FRIEND'").list().size() == 2)[ FD ]
Line_14 $$ txn = s.beginTransaction()-->Line_43 $$ txn.commit()[ FD ]
Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)-->Line_37 $$ fum = (Fum) iter.next()[ FD ]
Line_36 $$ while (iter.hasNext()) -->Line_37 $$ fum = (Fum) iter.next()[ CD ]
Line_7 $$ Fum fum = new Fum(fumKey)-->Line_25 $$ fum.setFo(fum2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_9 $$ s.save(fum)[ FD ]
Line_4 $$ Session s = openSession()-->Line_44 $$ s.close()[ FD ]
Line_14 $$ txn = s.beginTransaction()-->Line_33 $$ txn = s.beginTransaction()[ FD ]
Line_13 $$ s = openSession()-->Line_27 $$ assertTrue("find composite keyed objects", s.createQuery("from Fum fum where not fum.fum='FRIEND'").list().size() == 2)[ FD ]
Line_7 $$ Fum fum = new Fum(fumKey)-->Line_29 $$ fum.setFo(null)[ FD ]
Line_7 $$ Fum fum = new Fum(fumKey)-->Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_13 $$ s = openSession()-->Line_34 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()[ FD ]
Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)-->Line_25 $$ fum.setFo(fum2)[ FD ]
Line_19 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)-->Line_29 $$ fum.setFo(null)[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_30 $$ txn.commit()[ FD ]
Line_36 $$ while (iter.hasNext()) -->Line_40 $$ i++[ CD ]
Line_32 $$ s = openSession()-->Line_34 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()[ FD ]
Line_32 $$ s = openSession()-->Line_33 $$ txn = s.beginTransaction()[ FD ]
