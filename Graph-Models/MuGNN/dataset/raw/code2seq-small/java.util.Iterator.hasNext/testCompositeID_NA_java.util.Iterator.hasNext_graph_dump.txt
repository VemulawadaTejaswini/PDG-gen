Line_4 $$ Transaction txn = s.beginTransaction()-->Line_10 $$ txn.commit()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_13 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_32 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()[ CD ]
Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)-->Line_36 $$ s.delete(fum)[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ assertTrue("find composite keyed objects", s.createQuery("from Fum fum where not fum.fum='FRIEND'").list().size() == 2)[ FD ]
Line_34 $$ while (iter.hasNext()) -->Line_37 $$ i++[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_28 $$ txn.commit()[ FD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_23 $$ fum.setFo(fum2)[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_24 $$ s.save(fum2)[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_21 $$ Fum fum2 = new Fum(fumKey2)[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_5 $$ FumCompositeID fumKey = fumKey("fum")[ CD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ s.save(fum)[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_10 $$ txn.commit()[ CD ]
Line_30 $$ s = openSession()-->Line_31 $$ txn = s.beginTransaction()[ FD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_35 $$ fum = (Fum) iter.next()[ FD ]
Line_12 $$ s = openSession()-->Line_30 $$ s = openSession()[ FD ]
Line_13 $$ txn = s.beginTransaction()-->Line_40 $$ txn.commit()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_8 $$ s.save(fum)[ CD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_20 $$ FumCompositeID fumKey2 = fumKey("fi")[ CD ]
Line_32 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()-->Line_35 $$ fum = (Fum) iter.next()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_26 $$ assertTrue("find composite keyed object", s.createQuery("select fum from Fum fum where fum.fum='fee fi fo'").list().get(0) == fum)[ CD ]
Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)-->Line_23 $$ fum.setFo(fum2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ assertTrue("find composite keyed object", s.createQuery("select fum from Fum fum where fum.fum='fee fi fo'").list().get(0) == fum)[ FD ]
Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)-->Line_35 $$ fum = (Fum) iter.next()[ FD ]
Line_5 $$ FumCompositeID fumKey = fumKey("fum")-->Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_12 $$ s = openSession()-->Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)[ FD ]
Line_12 $$ s = openSession()-->Line_24 $$ s.save(fum2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ s.close()[ FD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_36 $$ s.delete(fum)[ FD ]
Line_33 $$ int i = 0-->Line_37 $$ i++[ FD ]
Line_12 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s = openSession()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_13 $$ txn = s.beginTransaction()[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_31 $$ txn = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_6 $$ Fum fum = new Fum(fumKey)[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_19 $$ assertTrue("load by composite key", fum != null)[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_14 $$ if (getDialect() instanceof AbstractHANADialect) [ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_12 $$ s = openSession()[ CD ]
Line_5 $$ FumCompositeID fumKey = fumKey("fum")-->Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)[ FD ]
Line_12 $$ s = openSession()-->Line_29 $$ s.close()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_23 $$ fum.setFo(fum2)[ CD ]
Line_30 $$ s = openSession()-->Line_36 $$ s.delete(fum)[ FD ]
Line_21 $$ Fum fum2 = new Fum(fumKey2)-->Line_24 $$ s.save(fum2)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_40 $$ txn.commit()[ FD ]
Line_34 $$ while (iter.hasNext()) -->Line_36 $$ s.delete(fum)[ CD ]
Line_5 $$ FumCompositeID fumKey = fumKey("fum")-->Line_9 $$ assertTrue("load by composite key", fum == s.load(Fum.class, fumKey))[ FD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_27 $$ fum.setFo(null)[ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s = openSession()[ FD ]
Line_12 $$ s = openSession()-->Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_33 $$ int i = 0[ CD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s.save(fum2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ s.delete(fum)[ FD ]
Line_12 $$ s = openSession()-->Line_36 $$ s.delete(fum)[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)[ FD ]
Line_31 $$ txn = s.beginTransaction()-->Line_40 $$ txn.commit()[ FD ]
Line_14 $$ if (getDialect() instanceof AbstractHANADialect) -->Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)[ CD ]
Line_3 $$ Session s = openSession()-->Line_11 $$ s.close()[ FD ]
Line_12 $$ s = openSession()-->Line_13 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_30 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ assertTrue("load by composite key", fum == s.load(Fum.class, fumKey))[ FD ]
Line_21 $$ Fum fum2 = new Fum(fumKey2)-->Line_23 $$ fum.setFo(fum2)[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_28 $$ txn.commit()[ CD ]
Line_35 $$ fum = (Fum) iter.next()-->Line_36 $$ s.delete(fum)[ FD ]
Line_12 $$ s = openSession()-->Line_26 $$ assertTrue("find composite keyed object", s.createQuery("select fum from Fum fum where fum.fum='fee fi fo'").list().get(0) == fum)[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()[ FD ]
Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)-->Line_27 $$ fum.setFo(null)[ FD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ txn = s.beginTransaction()[ FD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)-->Line_35 $$ fum = (Fum) iter.next()[ FD ]
Line_30 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_32 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()-->Line_34 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_9 $$ assertTrue("load by composite key", fum == s.load(Fum.class, fumKey))[ CD ]
Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)-->Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_30 $$ s = openSession()-->Line_32 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_22 $$ fum2.setFum("fee fo fi")[ CD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_8 $$ s.save(fum)[ FD ]
Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)-->Line_36 $$ s.delete(fum)[ FD ]
Line_12 $$ s = openSession()-->Line_25 $$ assertTrue("find composite keyed objects", s.createQuery("from Fum fum where not fum.fum='FRIEND'").list().size() == 2)[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_4 $$ Transaction txn = s.beginTransaction()[ CD ]
Line_34 $$ while (iter.hasNext()) -->Line_35 $$ fum = (Fum) iter.next()[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_34 $$ while (iter.hasNext()) [ CD ]
Line_13 $$ txn = s.beginTransaction()-->Line_31 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_29 $$ s.close()[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_7 $$ fum.setFum("fee fi fo")[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_39 $$ assertTrue("iterate on composite key", i == 2)[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_27 $$ fum.setFo(null)[ CD ]
Line_13 $$ txn = s.beginTransaction()-->Line_28 $$ txn.commit()[ FD ]
Line_21 $$ Fum fum2 = new Fum(fumKey2)-->Line_22 $$ fum2.setFum("fee fo fi")[ FD ]
Line_6 $$ Fum fum = new Fum(fumKey)-->Line_7 $$ fum.setFum("fee fi fo")[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_40 $$ txn.commit()[ CD ]
Line_12 $$ s = openSession()-->Line_32 $$ Iterator iter = s.createQuery("from Fum fum where not fum.fum='FRIEND'").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_25 $$ assertTrue("find composite keyed objects", s.createQuery("from Fum fum where not fum.fum='FRIEND'").list().size() == 2)[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_31 $$ txn = s.beginTransaction()[ FD ]
Line_14 $$ if (getDialect() instanceof AbstractHANADialect) -->Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ CD ]
Line_15 $$ fum = (Fum) s.load(Fum.class, fumKey)-->Line_27 $$ fum.setFo(null)[ FD ]
Line_3 $$ Session s = openSession()-->Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)[ FD ]
Line_12 $$ s = openSession()-->Line_31 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_41 $$ s.close()[ CD ]
Line_2 $$ public void testCompositeID() throws Exception -->Line_11 $$ s.close()[ CD ]
Line_17 $$ fum = (Fum) s.load(Fum.class, fumKey, LockMode.UPGRADE)-->Line_23 $$ fum.setFo(fum2)[ FD ]
