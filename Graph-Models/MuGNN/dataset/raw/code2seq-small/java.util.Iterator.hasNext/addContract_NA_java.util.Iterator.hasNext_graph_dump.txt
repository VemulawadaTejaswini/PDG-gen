Line_2 $$ public void addContract(Contract contract) -->Line_10 $$ for (Iterator it = contract.getSubcontracts().iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ public void addContract(Contract contract) -->Line_10 $$ for (Iterator it = contract.getSubcontracts().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ public void addContract(Contract contract) -->Line_6 $$ if (contract.getParent() != null) [ FD ]
Line_6 $$ if (contract.getParent() != null) -->Line_7 $$ addContract(contract.getParent())[ CD ]
Line_11 $$ Contract sub = (Contract) it.next()-->Line_12 $$ addContract(sub)[ FD ]
Line_10 $$ for (Iterator it = contract.getSubcontracts().iterator(); it.hasNext(); ) -->Line_11 $$ Contract sub = (Contract) it.next()[ FD ]
Line_10 $$ for (Iterator it = contract.getSubcontracts().iterator(); it.hasNext(); ) -->Line_12 $$ addContract(sub)[ CD ]
Line_3 $$ if (!contracts.add(contract)) -->Line_4 $$ return[ CD ]
Line_10 $$ for (Iterator it = contract.getSubcontracts().iterator(); it.hasNext(); ) -->Line_11 $$ Contract sub = (Contract) it.next()[ CD ]
Line_2 $$ public void addContract(Contract contract) -->Line_6 $$ if (contract.getParent() != null) [ CD ]
Line_2 $$ public void addContract(Contract contract) -->Line_9 $$ contract.getPlans().add(this)[ CD ]
Line_2 $$ public void addContract(Contract contract) -->Line_3 $$ if (!contracts.add(contract)) [ CD ]
Line_2 $$ public void addContract(Contract contract) -->Line_9 $$ contract.getPlans().add(this)[ FD ]
Line_2 $$ public void addContract(Contract contract) -->Line_7 $$ addContract(contract.getParent())[ FD ]
Line_2 $$ public void addContract(Contract contract) -->Line_3 $$ if (!contracts.add(contract)) [ FD ]
