Line_55 $$ if (logger.isDebugEnabled()) -->Line_56 $$ logger.debug("Collection type [" + original.getClass().getName() + "] seems to be read-only - injecting original Collection as-is: " + ex)[ CD ]
Line_34 $$ Collection<Object> convertedCopy-->Line_53 $$ convertedCopy.add(convertedElement)[ FD ]
Line_22 $$ if (it == null) -->Line_23 $$ if (logger.isDebugEnabled()) [ CD ]
Line_51 $$ Object convertedElement = convertIfNecessary(indexedPropertyName, null, element, (elementType != null ? elementType.getType() : null), elementType)-->Line_53 $$ convertedCopy.add(convertedElement)[ FD ]
Line_48 $$ for (; it.hasNext(); i++) -->Line_51 $$ Object convertedElement = convertIfNecessary(indexedPropertyName, null, element, (elementType != null ? elementType.getType() : null), elementType)[ CD ]
Line_39 $$ convertedCopy = (Collection<Object>) requiredType.newInstance()-->Line_53 $$ convertedCopy.add(convertedElement)[ FD ]
Line_8 $$ if (!approximable && !canCreateCopy(requiredType)) -->Line_12 $$ return original[ CD ]
Line_47 $$ int i = 0-->Line_50 $$ String indexedPropertyName = buildIndexedPropertyName(propertyName, i)[ FD ]
Line_7 $$ boolean approximable = CollectionFactory.isApproximableCollectionType(requiredType)-->Line_8 $$ if (!approximable && !canCreateCopy(requiredType)) [ FD ]
Line_19 $$ Iterator<?> it-->Line_49 $$ Object element = it.next()[ FD ]
Line_16 $$ if (elementType == null && originalAllowed && !this.propertyEditorRegistry.hasCustomEditorForElement(null, propertyName)) -->Line_17 $$ return original[ CD ]
Line_34 $$ Collection<Object> convertedCopy-->Line_39 $$ convertedCopy = (Collection<Object>) requiredType.newInstance()[ FD ]
Line_49 $$ Object element = it.next()-->Line_51 $$ Object convertedElement = convertIfNecessary(indexedPropertyName, null, element, (elementType != null ? elementType.getType() : null), elementType)[ FD ]
Line_21 $$ it = original.iterator()-->Line_48 $$ for (; it.hasNext(); i++) [ FD ]
Line_15 $$ TypeDescriptor elementType = typeDescriptor.getElementTypeDescriptor()-->Line_51 $$ Object convertedElement = convertIfNecessary(indexedPropertyName, null, element, (elementType != null ? elementType.getType() : null), elementType)[ FD ]
Line_34 $$ Collection<Object> convertedCopy-->Line_37 $$ convertedCopy = CollectionFactory.createApproximateCollection(original, original.size())[ FD ]
Line_29 $$ if (logger.isDebugEnabled()) -->Line_30 $$ logger.debug("Cannot access Collection of type [" + original.getClass().getName() + "] - injecting original Collection as-is: " + ex)[ CD ]
Line_8 $$ if (!approximable && !canCreateCopy(requiredType)) -->Line_9 $$ if (logger.isDebugEnabled()) [ CD ]
Line_37 $$ convertedCopy = CollectionFactory.createApproximateCollection(original, original.size())-->Line_53 $$ convertedCopy.add(convertedElement)[ FD ]
Line_21 $$ it = original.iterator()-->Line_22 $$ if (it == null) [ FD ]
Line_47 $$ int i = 0-->Line_48 $$ for (; it.hasNext(); i++) [ FD ]
Line_4 $$ if (!Collection.class.isAssignableFrom(requiredType)) -->Line_5 $$ return original[ CD ]
Line_19 $$ Iterator<?> it-->Line_22 $$ if (it == null) [ FD ]
Line_36 $$ if (approximable) -->Line_39 $$ convertedCopy = (Collection<Object>) requiredType.newInstance()[ CD ]
Line_19 $$ Iterator<?> it-->Line_48 $$ for (; it.hasNext(); i++) [ FD ]
Line_48 $$ for (; it.hasNext(); i++) -->Line_50 $$ String indexedPropertyName = buildIndexedPropertyName(propertyName, i)[ CD ]
Line_14 $$ boolean originalAllowed = requiredType.isInstance(original)-->Line_60 $$ originalAllowed = originalAllowed && (element == convertedElement)[ FD ]
Line_22 $$ if (it == null) -->Line_26 $$ return original[ CD ]
Line_48 $$ for (; it.hasNext(); i++) -->Line_49 $$ Object element = it.next()[ CD ]
Line_19 $$ Iterator<?> it-->Line_21 $$ it = original.iterator()[ FD ]
Line_36 $$ if (approximable) -->Line_37 $$ convertedCopy = CollectionFactory.createApproximateCollection(original, original.size())[ CD ]
Line_50 $$ String indexedPropertyName = buildIndexedPropertyName(propertyName, i)-->Line_51 $$ Object convertedElement = convertIfNecessary(indexedPropertyName, null, element, (elementType != null ? elementType.getType() : null), elementType)[ FD ]
Line_9 $$ if (logger.isDebugEnabled()) -->Line_10 $$ logger.debug("Custom Collection type [" + original.getClass().getName() + "] does not allow for creating a copy - injecting original Collection as-is")[ CD ]
Line_23 $$ if (logger.isDebugEnabled()) -->Line_24 $$ logger.debug("Collection of type [" + original.getClass().getName() + "] returned null Iterator - injecting original Collection as-is")[ CD ]
Line_42 $$ if (logger.isDebugEnabled()) -->Line_43 $$ logger.debug("Cannot create copy of Collection type [" + original.getClass().getName() + "] - injecting original Collection as-is: " + ex)[ CD ]
Line_48 $$ for (; it.hasNext(); i++) -->Line_60 $$ originalAllowed = originalAllowed && (element == convertedElement)[ CD ]
Line_21 $$ it = original.iterator()-->Line_49 $$ Object element = it.next()[ FD ]
Line_37 $$ convertedCopy = CollectionFactory.createApproximateCollection(original, original.size())-->Line_39 $$ convertedCopy = (Collection<Object>) requiredType.newInstance()[ FD ]
