Line_22 $$ if (useAllTags) -->Line_23 $$ set = null[ CD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_4 $$ conf.setListDelimiter(',')[ CD ]
Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) -->Line_11 $$ boolean useAllTags = false[ CD ]
Line_6 $$ while (it.hasNext()) -->Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) [ CD ]
Line_12 $$ Set<String> set = null-->Line_19 $$ set.add(tag)[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_5 $$ Iterator<String> it = (Iterator<String>) conf.getKeys()[ CD ]
Line_14 $$ set = new HashSet<String>()-->Line_26 $$ useTagsMap.put(contextName, set)[ FD ]
Line_7 $$ String propertyName = it.next()-->Line_9 $$ String contextName = propertyName.substring(TAGS_FOR_PREFIX_PROPERTY_PREFIX.length())[ FD ]
Line_23 $$ set = null-->Line_26 $$ useTagsMap.put(contextName, set)[ FD ]
Line_12 $$ Set<String> set = null-->Line_23 $$ set = null[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_3 $$ super.init(conf)[ CD ]
Line_14 $$ set = new HashSet<String>()-->Line_19 $$ set.add(tag)[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_10 $$ String[] tags = conf.getStringArray(propertyName)[ FD ]
Line_16 $$ tag = tag.trim()-->Line_18 $$ if (tag.length() > 0) [ FD ]
Line_14 $$ set = new HashSet<String>()-->Line_23 $$ set = null[ FD ]
Line_12 $$ Set<String> set = null-->Line_26 $$ useTagsMap.put(contextName, set)[ FD ]
Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) -->Line_13 $$ if (tags.length > 0) [ CD ]
Line_13 $$ if (tags.length > 0) -->Line_22 $$ if (useAllTags) [ CD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_6 $$ while (it.hasNext()) [ CD ]
Line_13 $$ if (tags.length > 0) -->Line_14 $$ set = new HashSet<String>()[ CD ]
Line_18 $$ if (tag.length() > 0) -->Line_19 $$ set.add(tag)[ CD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_5 $$ Iterator<String> it = (Iterator<String>) conf.getKeys()[ FD ]
Line_16 $$ tag = tag.trim()-->Line_19 $$ set.add(tag)[ FD ]
Line_9 $$ String contextName = propertyName.substring(TAGS_FOR_PREFIX_PROPERTY_PREFIX.length())-->Line_26 $$ useTagsMap.put(contextName, set)[ FD ]
Line_15 $$ for (String tag : tags) -->Line_16 $$ tag = tag.trim()[ FD ]
Line_6 $$ while (it.hasNext()) -->Line_7 $$ String propertyName = it.next()[ CD ]
Line_7 $$ String propertyName = it.next()-->Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) [ FD ]
Line_12 $$ Set<String> set = null-->Line_14 $$ set = new HashSet<String>()[ FD ]
Line_15 $$ for (String tag : tags) -->Line_19 $$ set.add(tag)[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_3 $$ super.init(conf)[ FD ]
Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) -->Line_10 $$ String[] tags = conf.getStringArray(propertyName)[ CD ]
Line_16 $$ tag = tag.trim()-->Line_17 $$ useAllTags |= tag.equals("*")[ FD ]
Line_5 $$ Iterator<String> it = (Iterator<String>) conf.getKeys()-->Line_7 $$ String propertyName = it.next()[ FD ]
Line_2 $$ public void init(SubsetConfiguration conf) -->Line_4 $$ conf.setListDelimiter(',')[ FD ]
Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) -->Line_9 $$ String contextName = propertyName.substring(TAGS_FOR_PREFIX_PROPERTY_PREFIX.length())[ CD ]
Line_15 $$ for (String tag : tags) -->Line_18 $$ if (tag.length() > 0) [ FD ]
Line_23 $$ set = null-->Line_19 $$ set.add(tag)[ FD ]
Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) -->Line_26 $$ useTagsMap.put(contextName, set)[ CD ]
Line_8 $$ if (propertyName.startsWith(TAGS_FOR_PREFIX_PROPERTY_PREFIX)) -->Line_12 $$ Set<String> set = null[ CD ]
Line_7 $$ String propertyName = it.next()-->Line_10 $$ String[] tags = conf.getStringArray(propertyName)[ FD ]
Line_11 $$ boolean useAllTags = false-->Line_17 $$ useAllTags |= tag.equals("*")[ FD ]
Line_5 $$ Iterator<String> it = (Iterator<String>) conf.getKeys()-->Line_6 $$ while (it.hasNext()) [ FD ]
Line_15 $$ for (String tag : tags) -->Line_17 $$ useAllTags |= tag.equals("*")[ FD ]
