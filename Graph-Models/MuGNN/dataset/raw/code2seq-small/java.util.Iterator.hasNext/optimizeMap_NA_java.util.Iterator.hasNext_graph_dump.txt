Line_6 $$ final Val value = myMap.get(key)-->Line_11 $$ if (valuesAreas.process(myMap.get(innerKey), value)) [ FD ]
Line_10 $$ if (myKeysResemblance.process(innerKey, key)) -->Line_11 $$ if (valuesAreas.process(myMap.get(innerKey), value)) [ CD ]
Line_5 $$ final Key key = iterator.next()-->Line_10 $$ if (myKeysResemblance.process(innerKey, key)) [ FD ]
Line_4 $$ for (Iterator<Key> iterator = myKeys.iterator(); iterator.hasNext(); ) -->Line_20 $$ ++i[ CD ]
Line_9 $$ final Key innerKey = myKeys.get(j)-->Line_10 $$ if (myKeysResemblance.process(innerKey, key)) [ FD ]
Line_3 $$ int i = 0-->Line_12 $$ --i[ FD ]
Line_4 $$ for (Iterator<Key> iterator = myKeys.iterator(); iterator.hasNext(); ) -->Line_5 $$ final Key key = iterator.next()[ FD ]
Line_2 $$ public void optimizeMap(final PairProcessor<Val, Val> valuesAreas) -->Line_4 $$ for (Iterator<Key> iterator = myKeys.iterator(); iterator.hasNext(); ) [ CD ]
Line_11 $$ if (valuesAreas.process(myMap.get(innerKey), value)) -->Line_12 $$ --i[ CD ]
Line_11 $$ if (valuesAreas.process(myMap.get(innerKey), value)) -->Line_14 $$ myMap.remove(key)[ CD ]
Line_3 $$ int i = 0-->Line_20 $$ ++i[ FD ]
Line_4 $$ for (Iterator<Key> iterator = myKeys.iterator(); iterator.hasNext(); ) -->Line_13 $$ iterator.remove()[ FD ]
Line_5 $$ final Key key = iterator.next()-->Line_6 $$ final Val value = myMap.get(key)[ FD ]
Line_5 $$ final Key key = iterator.next()-->Line_14 $$ myMap.remove(key)[ FD ]
Line_2 $$ public void optimizeMap(final PairProcessor<Val, Val> valuesAreas) -->Line_11 $$ if (valuesAreas.process(myMap.get(innerKey), value)) [ FD ]
Line_11 $$ if (valuesAreas.process(myMap.get(innerKey), value)) -->Line_13 $$ iterator.remove()[ CD ]
Line_4 $$ for (Iterator<Key> iterator = myKeys.iterator(); iterator.hasNext(); ) -->Line_6 $$ final Val value = myMap.get(key)[ CD ]
Line_9 $$ final Key innerKey = myKeys.get(j)-->Line_11 $$ if (valuesAreas.process(myMap.get(innerKey), value)) [ FD ]
Line_2 $$ public void optimizeMap(final PairProcessor<Val, Val> valuesAreas) -->Line_3 $$ int i = 0[ CD ]
Line_4 $$ for (Iterator<Key> iterator = myKeys.iterator(); iterator.hasNext(); ) -->Line_5 $$ final Key key = iterator.next()[ CD ]
