Line_4 $$ SOAPMessage message = smc.getMessage()-->Line_13 $$ message.writeTo(os)[ FD ]
Line_28 $$ final QName createSequenceQName = new QName("http://schemas.xmlsoap.org/ws/2005/02/rm", "CreateSequence")-->Line_29 $$ if (!createSequenceQName.equals(firstBodyElement.getElementQName())) [ FD ]
Line_12 $$ JBossLoggingOutputStream os = new JBossLoggingOutputStream(log, Level.DEBUG)-->Line_13 $$ message.writeTo(os)[ FD ]
Line_27 $$ firstBodyElement = it.next()-->Line_41 $$ if (!createSequenceResponseQName.equals(firstBodyElement.getElementQName())) [ FD ]
Line_39 $$ firstBodyElement = (SOAPElement) message.getSOAPBody().getChildElements().next()-->Line_41 $$ if (!createSequenceResponseQName.equals(firstBodyElement.getElementQName())) [ FD ]
Line_53 $$ found = true-->Line_56 $$ if (!found) [ FD ]
Line_51 $$ SOAPElement soapElement = (SOAPElement) headerElements.next()-->Line_52 $$ if (sequenceQName.equals(soapElement.getElementQName())) [ FD ]
Line_48 $$ boolean found = false-->Line_53 $$ found = true[ FD ]
Line_20 $$ SOAPElement firstBodyElement-->Line_27 $$ firstBodyElement = it.next()[ FD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_20 $$ SOAPElement firstBodyElement[ CD ]
Line_50 $$ while (headerElements.hasNext()) -->Line_52 $$ if (sequenceQName.equals(soapElement.getElementQName())) [ CD ]
Line_4 $$ SOAPMessage message = smc.getMessage()-->Line_62 $$ if (verifySequenceAcknowledgement(message)) [ FD ]
Line_27 $$ firstBodyElement = it.next()-->Line_39 $$ firstBodyElement = (SOAPElement) message.getSOAPBody().getChildElements().next()[ FD ]
Line_5 $$ if (outboundProperty.booleanValue()) -->Line_8 $$ log.debug("Incoming message:")[ CD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_4 $$ SOAPMessage message = smc.getMessage()[ CD ]
Line_4 $$ SOAPMessage message = smc.getMessage()-->Line_47 $$ Iterator headerElements = message.getSOAPHeader().getChildElements()[ FD ]
Line_5 $$ if (outboundProperty.booleanValue()) -->Line_6 $$ log.debug("Outgoing message:")[ CD ]
Line_20 $$ SOAPElement firstBodyElement-->Line_42 $$ throw new WebServiceException("CreateSequenceResponse in soap body was expected, but it contains '" + firstBodyElement.getElementQName() + "'")[ FD ]
Line_27 $$ firstBodyElement = it.next()-->Line_30 $$ throw new WebServiceException("CreateSequence in soap body was expected, but it contains '" + firstBodyElement.getElementQName() + "'")[ FD ]
Line_47 $$ Iterator headerElements = message.getSOAPHeader().getChildElements()-->Line_50 $$ while (headerElements.hasNext()) [ FD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_19 $$ log.debug("-----------")[ CD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_3 $$ Boolean outboundProperty = (Boolean) smc.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY)[ CD ]
Line_48 $$ boolean found = false-->Line_56 $$ if (!found) [ FD ]
Line_12 $$ JBossLoggingOutputStream os = new JBossLoggingOutputStream(log, Level.DEBUG)-->Line_14 $$ os.flush()[ FD ]
Line_49 $$ final QName sequenceQName = new QName("http://schemas.xmlsoap.org/ws/2005/02/rm", "Sequence")-->Line_52 $$ if (sequenceQName.equals(soapElement.getElementQName())) [ FD ]
Line_20 $$ SOAPElement firstBodyElement-->Line_41 $$ if (!createSequenceResponseQName.equals(firstBodyElement.getElementQName())) [ FD ]
Line_26 $$ if (it.hasNext()) -->Line_28 $$ final QName createSequenceQName = new QName("http://schemas.xmlsoap.org/ws/2005/02/rm", "CreateSequence")[ CD ]
Line_47 $$ Iterator headerElements = message.getSOAPHeader().getChildElements()-->Line_51 $$ SOAPElement soapElement = (SOAPElement) headerElements.next()[ FD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_10 $$ log.debug("-----------")[ CD ]
Line_20 $$ SOAPElement firstBodyElement-->Line_30 $$ throw new WebServiceException("CreateSequence in soap body was expected, but it contains '" + firstBodyElement.getElementQName() + "'")[ FD ]
Line_50 $$ while (headerElements.hasNext()) -->Line_51 $$ SOAPElement soapElement = (SOAPElement) headerElements.next()[ CD ]
Line_3 $$ Boolean outboundProperty = (Boolean) smc.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY)-->Line_5 $$ if (outboundProperty.booleanValue()) [ FD ]
Line_52 $$ if (sequenceQName.equals(soapElement.getElementQName())) -->Line_53 $$ found = true[ CD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_4 $$ SOAPMessage message = smc.getMessage()[ FD ]
Line_40 $$ final QName createSequenceResponseQName = new QName("http://schemas.xmlsoap.org/ws/2005/02/rm", "CreateSequenceResponse")-->Line_41 $$ if (!createSequenceResponseQName.equals(firstBodyElement.getElementQName())) [ FD ]
Line_4 $$ SOAPMessage message = smc.getMessage()-->Line_39 $$ firstBodyElement = (SOAPElement) message.getSOAPBody().getChildElements().next()[ FD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_3 $$ Boolean outboundProperty = (Boolean) smc.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY)[ FD ]
Line_20 $$ SOAPElement firstBodyElement-->Line_29 $$ if (!createSequenceQName.equals(firstBodyElement.getElementQName())) [ FD ]
Line_2 $$ private synchronized void handleContext(SOAPMessageContext smc) -->Line_5 $$ if (outboundProperty.booleanValue()) [ CD ]
Line_39 $$ firstBodyElement = (SOAPElement) message.getSOAPBody().getChildElements().next()-->Line_42 $$ throw new WebServiceException("CreateSequenceResponse in soap body was expected, but it contains '" + firstBodyElement.getElementQName() + "'")[ FD ]
Line_27 $$ firstBodyElement = it.next()-->Line_42 $$ throw new WebServiceException("CreateSequenceResponse in soap body was expected, but it contains '" + firstBodyElement.getElementQName() + "'")[ FD ]
Line_26 $$ if (it.hasNext()) -->Line_29 $$ if (!createSequenceQName.equals(firstBodyElement.getElementQName())) [ CD ]
Line_20 $$ SOAPElement firstBodyElement-->Line_39 $$ firstBodyElement = (SOAPElement) message.getSOAPBody().getChildElements().next()[ FD ]
Line_26 $$ if (it.hasNext()) -->Line_27 $$ firstBodyElement = it.next()[ CD ]
Line_27 $$ firstBodyElement = it.next()-->Line_29 $$ if (!createSequenceQName.equals(firstBodyElement.getElementQName())) [ FD ]
