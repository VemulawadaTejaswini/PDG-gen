Line_5 $$ final ArrayList<Integer> list3 = new ArrayList<Integer>(Arrays.asList(arr3))-->Line_6 $$ final Iterator<Integer> iterator = compose(Arrays.<Iterator<Integer>>asList(list1.iterator(), list2.iterator(), list3.iterator()))[ FD ]
Line_6 $$ final Iterator<Integer> iterator = compose(Arrays.<Iterator<Integer>>asList(list1.iterator(), list2.iterator(), list3.iterator()))-->Line_11 $$ iterator.remove()[ FD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_5 $$ final ArrayList<Integer> list3 = new ArrayList<Integer>(Arrays.asList(arr3))[ CD ]
Line_6 $$ final Iterator<Integer> iterator = compose(Arrays.<Iterator<Integer>>asList(list1.iterator(), list2.iterator(), list3.iterator()))-->Line_8 $$ while (iterator.hasNext()) [ FD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_7 $$ int cnt = 0[ CD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_15 $$ Assert.assertTrue(!list1.contains(3))[ CD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_16 $$ Assert.assertTrue(!list2.contains(13))[ CD ]
Line_8 $$ while (iterator.hasNext()) -->Line_9 $$ Integer next = iterator.next()[ CD ]
Line_6 $$ final Iterator<Integer> iterator = compose(Arrays.<Iterator<Integer>>asList(list1.iterator(), list2.iterator(), list3.iterator()))-->Line_9 $$ Integer next = iterator.next()[ FD ]
Line_8 $$ while (iterator.hasNext()) -->Line_13 $$ ++cnt[ CD ]
Line_3 $$ final ArrayList<Integer> list1 = new ArrayList<Integer>(Arrays.asList(arr1))-->Line_6 $$ final Iterator<Integer> iterator = compose(Arrays.<Iterator<Integer>>asList(list1.iterator(), list2.iterator(), list3.iterator()))[ FD ]
Line_10 $$ if ((cnt - 2) % 5 == 0) -->Line_11 $$ iterator.remove()[ CD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_4 $$ final ArrayList<Integer> list2 = new ArrayList<Integer>(Arrays.asList(arr2))[ CD ]
Line_4 $$ final ArrayList<Integer> list2 = new ArrayList<Integer>(Arrays.asList(arr2))-->Line_6 $$ final Iterator<Integer> iterator = compose(Arrays.<Iterator<Integer>>asList(list1.iterator(), list2.iterator(), list3.iterator()))[ FD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_3 $$ final ArrayList<Integer> list1 = new ArrayList<Integer>(Arrays.asList(arr1))[ CD ]
Line_8 $$ while (iterator.hasNext()) -->Line_10 $$ if ((cnt - 2) % 5 == 0) [ CD ]
Line_7 $$ int cnt = 0-->Line_13 $$ ++cnt[ FD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_8 $$ while (iterator.hasNext()) [ CD ]
Line_5 $$ final ArrayList<Integer> list3 = new ArrayList<Integer>(Arrays.asList(arr3))-->Line_17 $$ Assert.assertTrue(!list3.contains(103))[ FD ]
Line_4 $$ final ArrayList<Integer> list2 = new ArrayList<Integer>(Arrays.asList(arr2))-->Line_16 $$ Assert.assertTrue(!list2.contains(13))[ FD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_17 $$ Assert.assertTrue(!list3.contains(103))[ CD ]
Line_2 $$ public void testRemoveSimple() throws Exception -->Line_6 $$ final Iterator<Integer> iterator = compose(Arrays.<Iterator<Integer>>asList(list1.iterator(), list2.iterator(), list3.iterator()))[ CD ]
Line_3 $$ final ArrayList<Integer> list1 = new ArrayList<Integer>(Arrays.asList(arr1))-->Line_15 $$ Assert.assertTrue(!list1.contains(3))[ FD ]
