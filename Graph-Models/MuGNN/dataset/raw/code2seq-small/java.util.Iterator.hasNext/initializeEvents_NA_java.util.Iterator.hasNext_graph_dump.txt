Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_165 $$ dialog.setLocationRelativeTo(null)[ CD ]
Line_173 $$ if (fileName == null)-->Line_174 $$ return[ CD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_183 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_213 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_184 $$ dialog.setFile("*.hiero")[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_225 $$ String fileName = dialog.getFile()[ FD ]
Line_2 $$ private void initializeEvents() -->Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() [ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_191 $$ dialog.setVisible(true)[ FD ]
Line_218 $$ if (lastOpenFilename.length() > 0) -->Line_219 $$ dialog.setFile(lastOpenFilename.replace(".hiero", ".fnt"))[ CD ]
Line_248 $$ StringBuilder buffer = new StringBuilder()-->Line_255 $$ buffer.append((char) i)[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_116 $$ String fileName = dialog.getFile()[ FD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_223 $$ prefs.put("dir.savebm", dialog.getDirectory())[ FD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_113 $$ if (dialog.getDirectory() != null) [ CD ]
Line_126 $$ if (color == null)-->Line_127 $$ return[ CD ]
Line_2 $$ private void initializeEvents() -->Line_133 $$ effectsList.addListSelectionListener(new ListSelectionListener() [ CD ]
Line_6 $$ if (evt.getValueIsAdjusting())-->Line_7 $$ return[ CD ]
Line_141 $$ enabled = false-->Line_145 $$ addEffectButton.setEnabled(enabled)[ FD ]
Line_2 $$ private void initializeEvents() -->Line_148 $$ effectsList.addMouseListener(new MouseAdapter() [ CD ]
Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())-->Line_152 $$ addEffectButton.doClick()[ CD ]
Line_172 $$ String fileName = dialog.getFile()-->Line_173 $$ if (fileName == null)[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_187 $$ dialog.setFile(lastSaveFilename)[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_189 $$ dialog.setFile(lastOpenFilename)[ FD ]
Line_133 $$ effectsList.addListSelectionListener(new ListSelectionListener() -->Line_136 $$ ConfigurableEffect selectedEffect = (ConfigurableEffect) effectsList.getSelectedValue()[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_217 $$ dialog.setFile(lastSaveBMFilename)[ FD ]
Line_2 $$ private void initializeEvents() -->Line_232 $$ exitMenuItem.addActionListener(new ActionListener() [ CD ]
Line_2 $$ private void initializeEvents() -->Line_60 $$ nativeRadio.addActionListener(listener)[ CD ]
Line_2 $$ private void initializeEvents() -->Line_238 $$ sampleNeheButton.addActionListener(new ActionListener() [ CD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_193 $$ prefs.put("dir.save", dialog.getDirectory())[ FD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_93 $$ updateFont()[ CD ]
Line_2 $$ private void initializeEvents() -->Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() [ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_183 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_24 $$ final JSpinner spinner = spinners[i]-->Line_31 $$ JFormattedTextField textField = ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField()[ FD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_119 $$ fontFileText.setText(new File(dialog.getDirectory(), fileName).getAbsolutePath())[ CD ]
Line_24 $$ final JSpinner spinner = spinners[i]-->Line_40 $$ spinner.setValue(Integer.valueOf(text))[ FD ]
Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() -->Line_38 $$ int caretPosition = textField.getCaretPosition()[ CD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_92 $$ prefs.put("font.file", fontFileText.getText())[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_110 $$ dialog.setFile("*.ttf")[ FD ]
Line_116 $$ String fileName = dialog.getFile()-->Line_198 $$ if (!fileName.endsWith(".hiero"))[ FD ]
Line_2 $$ private void initializeEvents() -->Line_57 $$ monoCheckBox.addActionListener(listener)[ CD ]
Line_2 $$ private void initializeEvents() -->Line_62 $$ sampleTextRadio.addActionListener(new ActionListener() [ CD ]
Line_216 $$ if (lastSaveBMFilename.length() > 0) -->Line_218 $$ if (lastOpenFilename.length() > 0) [ CD ]
Line_195 $$ String fileName = dialog.getFile()-->Line_198 $$ if (!fileName.endsWith(".hiero"))[ FD ]
Line_2 $$ private void initializeEvents() -->Line_53 $$ glyphPageWidthCombo.addActionListener(listener)[ CD ]
Line_2 $$ private void initializeEvents() -->Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() [ CD ]
Line_2 $$ private void initializeEvents() -->Line_155 $$ addEffectButton.addActionListener(new ActionListener() [ CD ]
Line_138 $$ for (Iterator iter = effectPanels.iterator(); iter.hasNext(); ) -->Line_140 $$ if (effect == selectedEffect) [ CD ]
Line_248 $$ StringBuilder buffer = new StringBuilder()-->Line_259 $$ sampleTextPane.setText(buffer.toString())[ FD ]
Line_138 $$ for (Iterator iter = effectPanels.iterator(); iter.hasNext(); ) -->Line_139 $$ ConfigurableEffect effect = ((EffectPanel) iter.next()).getEffect()[ CD ]
Line_133 $$ effectsList.addListSelectionListener(new ListSelectionListener() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_12 $$ class FontUpdateListener implements ChangeListener, ActionListener -->Line_19 $$ updateFont()[ CD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_183 $$ dialog.setLocationRelativeTo(null)[ CD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_112 $$ dialog.setVisible(true)[ CD ]
Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() -->Line_252 $$ for (int i = 33; i <= 255; i++) [ CD ]
Line_2 $$ private void initializeEvents() -->Line_179 $$ saveMenuItem.addActionListener(new ActionListener() [ CD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_117 $$ if (fileName == null)[ CD ]
Line_198 $$ if (!fileName.endsWith(".hiero"))-->Line_199 $$ fileName += ".hiero"[ CD ]
Line_23 $$ for (int i = 0; i < spinners.length; i++) -->Line_24 $$ final JSpinner spinner = spinners[i][ CD ]
Line_62 $$ sampleTextRadio.addActionListener(new ActionListener() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_185 $$ dialog.setDirectory(prefs.get("dir.save", ""))[ FD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_201 $$ File file = new File(dialog.getDirectory(), fileName)[ CD ]
Line_68 $$ glyphCacheRadio.addActionListener(new ActionListener() -->Line_71 $$ glyphCachePanel.setVisible(true)[ CD ]
Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() -->Line_250 $$ buffer.append('\n')[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_214 $$ dialog.setFile("*.fnt")[ FD ]
Line_125 $$ java.awt.Color color = JColorChooser.showDialog(null, "Choose a background color", EffectUtil.fromString(prefs.get("background", "000000")))-->Line_129 $$ backgroundColorLabel.setIcon(getColorIcon(color))[ FD ]
Line_2 $$ private void initializeEvents() -->Line_50 $$ listener.addSpinners(new JSpinner[] [ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_109 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_89 $$ File file = new File(fontFileText.getText())-->Line_203 $$ save(file)[ FD ]
Line_136 $$ ConfigurableEffect selectedEffect = (ConfigurableEffect) effectsList.getSelectedValue()-->Line_140 $$ if (effect == selectedEffect) [ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_219 $$ dialog.setFile(lastOpenFilename.replace(".hiero", ".fnt"))[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_113 $$ if (dialog.getDirectory() != null) [ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_215 $$ dialog.setDirectory(prefs.get("dir.savebm", ""))[ FD ]
Line_32 $$ String text = textField.getText()-->Line_33 $$ if (text.length() == 0)[ FD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_222 $$ if (dialog.getDirectory() != null) [ FD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_89 $$ File file = new File(fontFileText.getText())[ CD ]
Line_188 $$ if (lastOpenFilename.length() > 0) -->Line_189 $$ dialog.setFile(lastOpenFilename)[ CD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_186 $$ if (lastSaveFilename.length() > 0) [ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_195 $$ String fileName = dialog.getFile()[ FD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)[ CD ]
Line_122 $$ backgroundColorLabel.addMouseListener(new MouseAdapter() -->Line_126 $$ if (color == null)[ CD ]
Line_89 $$ File file = new File(fontFileText.getText())-->Line_205 $$ throw new RuntimeException("Error saving Hiero settings file: " + file.getAbsolutePath(), ex)[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_215 $$ dialog.setDirectory(prefs.get("dir.savebm", ""))[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_221 $$ dialog.setVisible(true)[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_225 $$ String fileName = dialog.getFile()[ FD ]
Line_192 $$ if (dialog.getDirectory() != null) -->Line_193 $$ prefs.put("dir.save", dialog.getDirectory())[ CD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_176 $$ open(new File(dialog.getDirectory(), fileName))[ CD ]
Line_12 $$ class FontUpdateListener implements ChangeListener, ActionListener -->Line_15 $$ updateFont()[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_167 $$ dialog.setDirectory(prefs.get("dir.open", ""))[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_170 $$ prefs.put("dir.open", dialog.getDirectory())[ FD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_167 $$ dialog.setDirectory(prefs.get("dir.open", ""))[ CD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_213 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_222 $$ if (dialog.getDirectory() != null) [ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_223 $$ prefs.put("dir.savebm", dialog.getDirectory())[ FD ]
Line_172 $$ String fileName = dialog.getFile()-->Line_226 $$ if (fileName == null)[ FD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_213 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_172 $$ String fileName = dialog.getFile()-->Line_199 $$ fileName += ".hiero"[ FD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_216 $$ if (lastSaveBMFilename.length() > 0) [ CD ]
Line_31 $$ JFormattedTextField textField = ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField()-->Line_43 $$ textField.setCaretPosition(caretPosition)[ FD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)[ CD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_213 $$ dialog.setLocationRelativeTo(null)[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_201 $$ File file = new File(dialog.getDirectory(), fileName)[ FD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_172 $$ String fileName = dialog.getFile()[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_169 $$ if (dialog.getDirectory() != null) [ FD ]
Line_195 $$ String fileName = dialog.getFile()-->Line_226 $$ if (fileName == null)[ FD ]
Line_68 $$ glyphCacheRadio.addActionListener(new ActionListener() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_172 $$ String fileName = dialog.getFile()-->Line_196 $$ if (fileName == null)[ FD ]
Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() -->Line_32 $$ String text = textField.getText()[ CD ]
Line_238 $$ sampleNeheButton.addActionListener(new ActionListener() -->Line_242 $$ resetCacheButton.doClick()[ CD ]
Line_116 $$ String fileName = dialog.getFile()-->Line_173 $$ if (fileName == null)[ FD ]
Line_252 $$ for (int i = 33; i <= 255; i++) -->Line_255 $$ buffer.append((char) i)[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_187 $$ dialog.setFile(lastSaveFilename)[ FD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_173 $$ if (fileName == null)[ CD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_110 $$ dialog.setFile("*.ttf")[ CD ]
Line_2 $$ private void initializeEvents() -->Line_55 $$ boldCheckBox.addActionListener(listener)[ CD ]
Line_23 $$ for (int i = 0; i < spinners.length; i++) -->Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() [ CD ]
Line_2 $$ private void initializeEvents() -->Line_54 $$ glyphPageHeightCombo.addActionListener(listener)[ CD ]
Line_148 $$ effectsList.addMouseListener(new MouseAdapter() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ CD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_168 $$ dialog.setVisible(true)[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_172 $$ String fileName = dialog.getFile()[ FD ]
Line_2 $$ private void initializeEvents() -->Line_59 $$ javaRadio.addActionListener(listener)[ CD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_191 $$ dialog.setVisible(true)[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_192 $$ if (dialog.getDirectory() != null) [ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_221 $$ dialog.setVisible(true)[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_223 $$ prefs.put("dir.savebm", dialog.getDirectory())[ FD ]
Line_12 $$ class FontUpdateListener implements ChangeListener, ActionListener -->Line_23 $$ for (int i = 0; i < spinners.length; i++) [ CD ]
Line_23 $$ for (int i = 0; i < spinners.length; i++) -->Line_252 $$ for (int i = 33; i <= 255; i++) [ FD ]
Line_256 $$ if (++count % 30 == 0)-->Line_257 $$ buffer.append('\n')[ CD ]
Line_2 $$ private void initializeEvents() -->Line_68 $$ glyphCacheRadio.addActionListener(new ActionListener() [ CD ]
Line_148 $$ effectsList.addMouseListener(new MouseAdapter() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_90 $$ if (fontList.isEnabled() && (!file.exists() || !file.isFile()))-->Line_91 $$ return[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_193 $$ prefs.put("dir.save", dialog.getDirectory())[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_225 $$ String fileName = dialog.getFile()[ FD ]
Line_116 $$ String fileName = dialog.getFile()-->Line_226 $$ if (fileName == null)[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_111 $$ dialog.setDirectory(prefs.get("dir.font", ""))[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_217 $$ dialog.setFile(lastSaveBMFilename)[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_229 $$ saveBm(new File(dialog.getDirectory(), fileName))[ FD ]
Line_12 $$ class FontUpdateListener implements ChangeListener, ActionListener -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_112 $$ dialog.setVisible(true)[ FD ]
Line_3 $$ fontList.addListSelectionListener(new ListSelectionListener() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_31 $$ JFormattedTextField textField = ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField()-->Line_32 $$ String text = textField.getText()[ FD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_111 $$ dialog.setDirectory(prefs.get("dir.font", ""))[ CD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_189 $$ dialog.setFile(lastOpenFilename)[ FD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_77 $$ changed()[ CD ]
Line_122 $$ backgroundColorLabel.addMouseListener(new MouseAdapter() -->Line_130 $$ prefs.put("background", EffectUtil.toString(color))[ CD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_184 $$ dialog.setFile("*.hiero")[ CD ]
Line_216 $$ if (lastSaveBMFilename.length() > 0) -->Line_217 $$ dialog.setFile(lastSaveBMFilename)[ CD ]
Line_252 $$ for (int i = 33; i <= 255; i++) -->Line_253 $$ if (buffer.indexOf(Character.toString((char) i)) != -1)[ CD ]
Line_263 $$ sampleExtendedButton.addActionListener(new ActionListener() -->Line_266 $$ sampleTextPane.setText(EXTENDED_CHARS)[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_213 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_169 $$ if (dialog.getDirectory() != null) [ CD ]
Line_3 $$ fontList.addListSelectionListener(new ListSelectionListener() -->Line_8 $$ prefs.put("system.font", (String) fontList.getSelectedValue())[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_169 $$ if (dialog.getDirectory() != null) [ FD ]
Line_169 $$ if (dialog.getDirectory() != null) -->Line_170 $$ prefs.put("dir.open", dialog.getDirectory())[ CD ]
Line_31 $$ JFormattedTextField textField = ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField()-->Line_38 $$ int caretPosition = textField.getCaretPosition()[ FD ]
Line_96 $$ final ActionListener al = new ActionListener() -->Line_99 $$ updateFontSelector()[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_176 $$ open(new File(dialog.getDirectory(), fileName))[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_192 $$ if (dialog.getDirectory() != null) [ FD ]
Line_32 $$ String text = textField.getText()-->Line_35 $$ if (text.equals(lastText))[ FD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_198 $$ if (!fileName.endsWith(".hiero"))[ CD ]
Line_113 $$ if (dialog.getDirectory() != null) -->Line_114 $$ prefs.put("dir.font", dialog.getDirectory())[ CD ]
Line_125 $$ java.awt.Color color = JColorChooser.showDialog(null, "Choose a background color", EffectUtil.fromString(prefs.get("background", "000000")))-->Line_128 $$ renderingBackgroundColor = new Color(color.getRed() / 255f, color.getGreen() / 255f, color.getBlue() / 255f, 1)[ FD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_225 $$ String fileName = dialog.getFile()[ CD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_226 $$ if (fileName == null)[ CD ]
Line_125 $$ java.awt.Color color = JColorChooser.showDialog(null, "Choose a background color", EffectUtil.fromString(prefs.get("background", "000000")))-->Line_130 $$ prefs.put("background", EffectUtil.toString(color))[ FD ]
Line_138 $$ for (Iterator iter = effectPanels.iterator(); iter.hasNext(); ) -->Line_139 $$ ConfigurableEffect effect = ((EffectPanel) iter.next()).getEffect()[ FD ]
Line_2 $$ private void initializeEvents() -->Line_104 $$ fontFileRadio.addActionListener(al)[ CD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_187 $$ dialog.setFile(lastSaveFilename)[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_193 $$ prefs.put("dir.save", dialog.getDirectory())[ FD ]
Line_232 $$ exitMenuItem.addActionListener(new ActionListener() -->Line_235 $$ dispose()[ CD ]
Line_35 $$ if (text.equals(lastText))-->Line_36 $$ return[ CD ]
Line_2 $$ private void initializeEvents() -->Line_58 $$ resetCacheButton.addActionListener(listener)[ CD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_185 $$ dialog.setDirectory(prefs.get("dir.save", ""))[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_189 $$ dialog.setFile(lastOpenFilename)[ FD ]
Line_225 $$ String fileName = dialog.getFile()-->Line_226 $$ if (fileName == null)[ FD ]
Line_2 $$ private void initializeEvents() -->Line_263 $$ sampleExtendedButton.addActionListener(new ActionListener() [ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_168 $$ dialog.setVisible(true)[ FD ]
Line_133 $$ effectsList.addListSelectionListener(new ListSelectionListener() -->Line_145 $$ addEffectButton.setEnabled(enabled)[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_176 $$ open(new File(dialog.getDirectory(), fileName))[ FD ]
Line_222 $$ if (dialog.getDirectory() != null) -->Line_223 $$ prefs.put("dir.savebm", dialog.getDirectory())[ CD ]
Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() -->Line_249 $$ buffer.append(NEHE_CHARS)[ CD ]
Line_38 $$ int caretPosition = textField.getCaretPosition()-->Line_43 $$ textField.setCaretPosition(caretPosition)[ FD ]
Line_186 $$ if (lastSaveFilename.length() > 0) -->Line_187 $$ dialog.setFile(lastSaveFilename)[ CD ]
Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() -->Line_31 $$ JFormattedTextField textField = ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField()[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_114 $$ prefs.put("dir.font", dialog.getDirectory())[ FD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_172 $$ String fileName = dialog.getFile()[ CD ]
Line_133 $$ effectsList.addListSelectionListener(new ListSelectionListener() -->Line_137 $$ boolean enabled = selectedEffect != null[ CD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)[ CD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_191 $$ dialog.setVisible(true)[ CD ]
Line_24 $$ final JSpinner spinner = spinners[i]-->Line_25 $$ spinner.addChangeListener(this)[ FD ]
Line_195 $$ String fileName = dialog.getFile()-->Line_196 $$ if (fileName == null)[ FD ]
Line_62 $$ sampleTextRadio.addActionListener(new ActionListener() -->Line_65 $$ glyphCachePanel.setVisible(false)[ CD ]
Line_2 $$ private void initializeEvents() -->Line_51 $$ fontSizeSpinner.addChangeListener(listener)[ CD ]
Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() -->Line_260 $$ resetCacheButton.doClick()[ CD ]
Line_125 $$ java.awt.Color color = JColorChooser.showDialog(null, "Choose a background color", EffectUtil.fromString(prefs.get("background", "000000")))-->Line_126 $$ if (color == null)[ FD ]
Line_139 $$ ConfigurableEffect effect = ((EffectPanel) iter.next()).getEffect()-->Line_140 $$ if (effect == selectedEffect) [ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_215 $$ dialog.setDirectory(prefs.get("dir.savebm", ""))[ FD ]
Line_2 $$ private void initializeEvents() -->Line_122 $$ backgroundColorLabel.addMouseListener(new MouseAdapter() [ CD ]
Line_2 $$ private void initializeEvents() -->Line_161 $$ openMenuItem.addActionListener(new ActionListener() [ CD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_185 $$ dialog.setDirectory(prefs.get("dir.save", ""))[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_221 $$ dialog.setVisible(true)[ FD ]
Line_33 $$ if (text.length() == 0)-->Line_34 $$ return[ CD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_229 $$ saveBm(new File(dialog.getDirectory(), fileName))[ FD ]
Line_201 $$ File file = new File(dialog.getDirectory(), fileName)-->Line_203 $$ save(file)[ FD ]
Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() -->Line_43 $$ textField.setCaretPosition(caretPosition)[ CD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_195 $$ String fileName = dialog.getFile()[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_201 $$ File file = new File(dialog.getDirectory(), fileName)[ FD ]
Line_251 $$ int count = 0-->Line_256 $$ if (++count % 30 == 0)[ FD ]
Line_23 $$ for (int i = 0; i < spinners.length; i++) -->Line_25 $$ spinner.addChangeListener(this)[ CD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_85 $$ changed()[ CD ]
Line_201 $$ File file = new File(dialog.getDirectory(), fileName)-->Line_205 $$ throw new RuntimeException("Error saving Hiero settings file: " + file.getAbsolutePath(), ex)[ FD ]
Line_3 $$ fontList.addListSelectionListener(new ListSelectionListener() -->Line_6 $$ if (evt.getValueIsAdjusting())[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_166 $$ dialog.setFile("*.hiero")[ FD ]
Line_263 $$ sampleExtendedButton.addActionListener(new ActionListener() -->Line_267 $$ resetCacheButton.doClick()[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_185 $$ dialog.setDirectory(prefs.get("dir.save", ""))[ FD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_116 $$ String fileName = dialog.getFile()[ CD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_214 $$ dialog.setFile("*.fnt")[ FD ]
Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() -->Line_33 $$ if (text.length() == 0)[ CD ]
Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() -->Line_259 $$ sampleTextPane.setText(buffer.toString())[ CD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_90 $$ if (fontList.isEnabled() && (!file.exists() || !file.isFile()))[ CD ]
Line_195 $$ String fileName = dialog.getFile()-->Line_199 $$ fileName += ".hiero"[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_229 $$ saveBm(new File(dialog.getDirectory(), fileName))[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_165 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_192 $$ if (dialog.getDirectory() != null) [ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_167 $$ dialog.setDirectory(prefs.get("dir.open", ""))[ FD ]
Line_3 $$ fontList.addListSelectionListener(new ListSelectionListener() -->Line_9 $$ updateFont()[ CD ]
Line_122 $$ backgroundColorLabel.addMouseListener(new MouseAdapter() -->Line_129 $$ backgroundColorLabel.setIcon(getColorIcon(color))[ CD ]
Line_24 $$ final JSpinner spinner = spinners[i]-->Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() [ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_223 $$ prefs.put("dir.savebm", dialog.getDirectory())[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_214 $$ dialog.setFile("*.fnt")[ FD ]
Line_248 $$ StringBuilder buffer = new StringBuilder()-->Line_249 $$ buffer.append(NEHE_CHARS)[ FD ]
Line_252 $$ for (int i = 33; i <= 255; i++) -->Line_256 $$ if (++count % 30 == 0)[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_170 $$ prefs.put("dir.open", dialog.getDirectory())[ FD ]
Line_2 $$ private void initializeEvents() -->Line_52 $$ gammaSpinner.addChangeListener(listener)[ CD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_195 $$ String fileName = dialog.getFile()[ CD ]
Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() -->Line_248 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_122 $$ backgroundColorLabel.addMouseListener(new MouseAdapter() -->Line_125 $$ java.awt.Color color = JColorChooser.showDialog(null, "Choose a background color", EffectUtil.fromString(prefs.get("background", "000000")))[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_119 $$ fontFileText.setText(new File(dialog.getDirectory(), fileName).getAbsolutePath())[ FD ]
Line_137 $$ boolean enabled = selectedEffect != null-->Line_145 $$ addEffectButton.setEnabled(enabled)[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_219 $$ dialog.setFile(lastOpenFilename.replace(".hiero", ".fnt"))[ FD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_214 $$ dialog.setFile("*.fnt")[ CD ]
Line_105 $$ browseButton.addActionListener(new ActionListener() -->Line_109 $$ dialog.setLocationRelativeTo(null)[ CD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_215 $$ dialog.setDirectory(prefs.get("dir.savebm", ""))[ CD ]
Line_117 $$ if (fileName == null)-->Line_118 $$ return[ CD ]
Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_165 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_221 $$ dialog.setVisible(true)[ FD ]
Line_2 $$ private void initializeEvents() -->Line_61 $$ freeTypeRadio.addActionListener(listener)[ CD ]
Line_137 $$ boolean enabled = selectedEffect != null-->Line_141 $$ enabled = false[ FD ]
Line_3 $$ fontList.addListSelectionListener(new ListSelectionListener() -->Line_6 $$ if (evt.getValueIsAdjusting())[ FD ]
Line_32 $$ String text = textField.getText()-->Line_40 $$ spinner.setValue(Integer.valueOf(text))[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_168 $$ dialog.setVisible(true)[ FD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_192 $$ if (dialog.getDirectory() != null) [ CD ]
Line_2 $$ private void initializeEvents() -->Line_103 $$ systemFontRadio.addActionListener(al)[ CD ]
Line_116 $$ String fileName = dialog.getFile()-->Line_199 $$ fileName += ".hiero"[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_229 $$ saveBm(new File(dialog.getDirectory(), fileName))[ FD ]
Line_186 $$ if (lastSaveFilename.length() > 0) -->Line_188 $$ if (lastOpenFilename.length() > 0) [ CD ]
Line_196 $$ if (fileName == null)-->Line_197 $$ return[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_184 $$ dialog.setFile("*.hiero")[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_219 $$ dialog.setFile(lastOpenFilename.replace(".hiero", ".fnt"))[ FD ]
Line_74 $$ fontFileText.getDocument().addDocumentListener(new DocumentListener() -->Line_81 $$ changed()[ CD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_219 $$ dialog.setFile(lastOpenFilename.replace(".hiero", ".fnt"))[ FD ]
Line_133 $$ effectsList.addListSelectionListener(new ListSelectionListener() -->Line_138 $$ for (Iterator iter = effectPanels.iterator(); iter.hasNext(); ) [ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_166 $$ dialog.setFile("*.hiero")[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_222 $$ if (dialog.getDirectory() != null) [ FD ]
Line_2 $$ private void initializeEvents() -->Line_105 $$ browseButton.addActionListener(new ActionListener() [ CD ]
Line_248 $$ StringBuilder buffer = new StringBuilder()-->Line_250 $$ buffer.append('\n')[ FD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_217 $$ dialog.setFile(lastSaveBMFilename)[ FD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_225 $$ String fileName = dialog.getFile()[ FD ]
Line_226 $$ if (fileName == null)-->Line_227 $$ return[ CD ]
Line_116 $$ String fileName = dialog.getFile()-->Line_196 $$ if (fileName == null)[ FD ]
Line_89 $$ File file = new File(fontFileText.getText())-->Line_90 $$ if (fontList.isEnabled() && (!file.exists() || !file.isFile()))[ FD ]
Line_179 $$ saveMenuItem.addActionListener(new ActionListener() -->Line_196 $$ if (fileName == null)[ CD ]
Line_116 $$ String fileName = dialog.getFile()-->Line_117 $$ if (fileName == null)[ FD ]
Line_2 $$ private void initializeEvents() -->Line_3 $$ fontList.addListSelectionListener(new ListSelectionListener() [ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_222 $$ if (dialog.getDirectory() != null) [ FD ]
Line_2 $$ private void initializeEvents() -->Line_56 $$ italicCheckBox.addActionListener(listener)[ CD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_183 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_238 $$ sampleNeheButton.addActionListener(new ActionListener() -->Line_241 $$ sampleTextPane.setText(NEHE_CHARS)[ CD ]
Line_248 $$ StringBuilder buffer = new StringBuilder()-->Line_253 $$ if (buffer.indexOf(Character.toString((char) i)) != -1)[ FD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_229 $$ saveBm(new File(dialog.getDirectory(), fileName))[ CD ]
Line_209 $$ saveBMFontMenuItem.addActionListener(new ActionListener() -->Line_221 $$ dialog.setVisible(true)[ CD ]
Line_245 $$ sampleAsciiButton.addActionListener(new ActionListener() -->Line_251 $$ int count = 0[ CD ]
Line_248 $$ StringBuilder buffer = new StringBuilder()-->Line_257 $$ buffer.append('\n')[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_217 $$ dialog.setFile(lastSaveBMFilename)[ FD ]
Line_26 $$ ((JSpinner.DefaultEditor) spinner.getEditor()).getTextField().addKeyListener(new KeyAdapter() -->Line_35 $$ if (text.equals(lastText))[ CD ]
Line_140 $$ if (effect == selectedEffect) -->Line_141 $$ enabled = false[ CD ]
Line_161 $$ openMenuItem.addActionListener(new ActionListener() -->Line_166 $$ dialog.setFile("*.hiero")[ CD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_191 $$ dialog.setVisible(true)[ FD ]
Line_212 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save BMFont files", FileDialog.SAVE)-->Line_215 $$ dialog.setDirectory(prefs.get("dir.savebm", ""))[ FD ]
Line_108 $$ FileDialog dialog = new FileDialog(Hiero.this, "Choose TrueType font file", FileDialog.LOAD)-->Line_222 $$ if (dialog.getDirectory() != null) [ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_184 $$ dialog.setFile("*.hiero")[ FD ]
Line_164 $$ FileDialog dialog = new FileDialog(Hiero.this, "Open Hiero settings file", FileDialog.LOAD)-->Line_195 $$ String fileName = dialog.getFile()[ FD ]
Line_96 $$ final ActionListener al = new ActionListener() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_201 $$ File file = new File(dialog.getDirectory(), fileName)[ FD ]
Line_199 $$ fileName += ".hiero"-->Line_226 $$ if (fileName == null)[ FD ]
Line_122 $$ backgroundColorLabel.addMouseListener(new MouseAdapter() -->Line_151 $$ if (evt.getClickCount() == 2 && addEffectButton.isEnabled())[ FD ]
Line_96 $$ final ActionListener al = new ActionListener() -->Line_100 $$ updateFont()[ CD ]
Line_172 $$ String fileName = dialog.getFile()-->Line_198 $$ if (!fileName.endsWith(".hiero"))[ FD ]
Line_182 $$ FileDialog dialog = new FileDialog(Hiero.this, "Save Hiero settings file", FileDialog.SAVE)-->Line_214 $$ dialog.setFile("*.fnt")[ FD ]
