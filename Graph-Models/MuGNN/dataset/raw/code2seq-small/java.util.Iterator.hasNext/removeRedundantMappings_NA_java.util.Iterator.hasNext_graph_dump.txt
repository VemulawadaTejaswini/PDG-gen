Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_14 $$ vf = lfs.refreshAndFindFileByPath(dm.getDirectory())[ FD ]
Line_30 $$ final AbstractVcs<?> vcs = allVcses.getByName(vcsName)-->Line_31 $$ if (vcs == null) [ FD ]
Line_7 $$ final String vcsName = iterator.next()-->Line_30 $$ final AbstractVcs<?> vcs = allVcses.getByName(vcsName)[ FD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_19 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> filteredFiles[ CD ]
Line_27 $$ if (StringUtil.isEmptyOrSpaces(vcsName)) -->Line_31 $$ if (vcs == null) [ CD ]
Line_19 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> filteredFiles-->Line_37 $$ final List<VcsDirectoryMapping> filteredMappings = ObjectsConvertor.convert(filteredFiles, new Convertor<Pair<VirtualFile, VcsDirectoryMapping>, VcsDirectoryMapping>() [ FD ]
Line_27 $$ if (StringUtil.isEmptyOrSpaces(vcsName)) -->Line_35 $$ filteredFiles = vcs.filterUniqueRoots(objects, fileConvertor)[ CD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_8 $$ final List<VcsDirectoryMapping> mappings = myVcsToPaths.get(vcsName)[ CD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_7 $$ final String vcsName = iterator.next()[ FD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_45 $$ if (filteredMappings.isEmpty()) [ CD ]
Line_13 $$ if (vf == null) -->Line_14 $$ vf = lfs.refreshAndFindFileByPath(dm.getDirectory())[ CD ]
Line_7 $$ final String vcsName = iterator.next()-->Line_8 $$ final List<VcsDirectoryMapping> mappings = myVcsToPaths.get(vcsName)[ FD ]
Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_13 $$ if (vf == null) [ CD ]
Line_5 $$ final AllVcsesI allVcses = AllVcses.getInstance(myProject)-->Line_30 $$ final AbstractVcs<?> vcs = allVcses.getByName(vcsName)[ FD ]
Line_12 $$ VirtualFile vf = lfs.findFileByPath(dm.getDirectory())-->Line_14 $$ vf = lfs.refreshAndFindFileByPath(dm.getDirectory())[ FD ]
Line_45 $$ if (filteredMappings.isEmpty()) -->Line_49 $$ mappings.addAll(filteredMappings)[ CD ]
Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_12 $$ VirtualFile vf = lfs.findFileByPath(dm.getDirectory())[ FD ]
Line_31 $$ if (vcs == null) -->Line_32 $$ VcsBalloonProblemNotifier.showOverChangesView(myProject, "VCS plugin not found for mapping to : '" + vcsName + "'", MessageType.ERROR)[ CD ]
Line_37 $$ final List<VcsDirectoryMapping> filteredMappings = ObjectsConvertor.convert(filteredFiles, new Convertor<Pair<VirtualFile, VcsDirectoryMapping>, VcsDirectoryMapping>() -->Line_49 $$ mappings.addAll(filteredMappings)[ FD ]
Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_16 $$ return vf == null ? null : Pair.create(vf, dm)[ CD ]
Line_37 $$ final List<VcsDirectoryMapping> filteredMappings = ObjectsConvertor.convert(filteredFiles, new Convertor<Pair<VirtualFile, VcsDirectoryMapping>, VcsDirectoryMapping>() -->Line_45 $$ if (filteredMappings.isEmpty()) [ FD ]
Line_12 $$ VirtualFile vf = lfs.findFileByPath(dm.getDirectory())-->Line_16 $$ return vf == null ? null : Pair.create(vf, dm)[ FD ]
Line_7 $$ final String vcsName = iterator.next()-->Line_27 $$ if (StringUtil.isEmptyOrSpaces(vcsName)) [ FD ]
Line_45 $$ if (filteredMappings.isEmpty()) -->Line_48 $$ mappings.clear()[ CD ]
Line_8 $$ final List<VcsDirectoryMapping> mappings = myVcsToPaths.get(vcsName)-->Line_48 $$ mappings.clear()[ FD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_27 $$ if (StringUtil.isEmptyOrSpaces(vcsName)) [ CD ]
Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_12 $$ VirtualFile vf = lfs.findFileByPath(dm.getDirectory())[ CD ]
Line_8 $$ final List<VcsDirectoryMapping> mappings = myVcsToPaths.get(vcsName)-->Line_49 $$ mappings.addAll(filteredMappings)[ FD ]
Line_4 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()-->Line_12 $$ VirtualFile vf = lfs.findFileByPath(dm.getDirectory())[ FD ]
Line_4 $$ final LocalFileSystem lfs = LocalFileSystem.getInstance()-->Line_14 $$ vf = lfs.refreshAndFindFileByPath(dm.getDirectory())[ FD ]
Line_27 $$ if (StringUtil.isEmptyOrSpaces(vcsName)) -->Line_28 $$ filteredFiles = AbstractVcs.filterUniqueRootsDefault(objects, fileConvertor)[ CD ]
Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_35 $$ filteredFiles = vcs.filterUniqueRoots(objects, fileConvertor)[ FD ]
Line_14 $$ vf = lfs.refreshAndFindFileByPath(dm.getDirectory())-->Line_16 $$ return vf == null ? null : Pair.create(vf, dm)[ FD ]
Line_27 $$ if (StringUtil.isEmptyOrSpaces(vcsName)) -->Line_30 $$ final AbstractVcs<?> vcs = allVcses.getByName(vcsName)[ CD ]
Line_8 $$ final List<VcsDirectoryMapping> mappings = myVcsToPaths.get(vcsName)-->Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() [ FD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_7 $$ final String vcsName = iterator.next()[ CD ]
Line_12 $$ VirtualFile vf = lfs.findFileByPath(dm.getDirectory())-->Line_13 $$ if (vf == null) [ FD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_37 $$ final List<VcsDirectoryMapping> filteredMappings = ObjectsConvertor.convert(filteredFiles, new Convertor<Pair<VirtualFile, VcsDirectoryMapping>, VcsDirectoryMapping>() [ CD ]
Line_30 $$ final AbstractVcs<?> vcs = allVcses.getByName(vcsName)-->Line_35 $$ filteredFiles = vcs.filterUniqueRoots(objects, fileConvertor)[ FD ]
Line_37 $$ final List<VcsDirectoryMapping> filteredMappings = ObjectsConvertor.convert(filteredFiles, new Convertor<Pair<VirtualFile, VcsDirectoryMapping>, VcsDirectoryMapping>() -->Line_40 $$ return o.getSecond()[ CD ]
Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_28 $$ filteredFiles = AbstractVcs.filterUniqueRootsDefault(objects, fileConvertor)[ FD ]
Line_45 $$ if (filteredMappings.isEmpty()) -->Line_46 $$ iterator.remove()[ CD ]
Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() -->Line_16 $$ return vf == null ? null : Pair.create(vf, dm)[ FD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_46 $$ iterator.remove()[ FD ]
Line_6 $$ for (Iterator<String> iterator = myVcsToPaths.keySet().iterator(); iterator.hasNext(); ) -->Line_9 $$ final List<Pair<VirtualFile, VcsDirectoryMapping>> objects = ObjectsConvertor.convert(mappings, new Convertor<VcsDirectoryMapping, Pair<VirtualFile, VcsDirectoryMapping>>() [ CD ]
Line_37 $$ final List<VcsDirectoryMapping> filteredMappings = ObjectsConvertor.convert(filteredFiles, new Convertor<Pair<VirtualFile, VcsDirectoryMapping>, VcsDirectoryMapping>() -->Line_40 $$ return o.getSecond()[ FD ]
