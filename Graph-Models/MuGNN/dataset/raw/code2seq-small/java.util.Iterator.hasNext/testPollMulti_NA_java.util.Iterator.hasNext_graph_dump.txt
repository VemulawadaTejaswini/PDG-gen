Line_2 $$ public void testPollMulti() -->Line_11 $$ for (int i = 0; i < NUM / 2; i++) [ CD ]
Line_19 $$ while (iter.hasNext()) -->Line_20 $$ assertEquals(list.get(num++), iter.next())[ CD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_24 $$ assertTrue(set.add(list.get(i)))[ FD ]
Line_17 $$ Iterator<Integer> iter = set.iterator()-->Line_20 $$ assertEquals(list.get(num++), iter.next())[ FD ]
Line_4 $$ for (Integer i : list) -->Line_12 $$ assertFalse(set.contains(list.get(i)))[ FD ]
Line_2 $$ public void testPollMulti() -->Line_27 $$ for (int i = NUM / 2; i < NUM; i++) [ CD ]
Line_23 $$ for (int i = 0; i < NUM / 2; i++) -->Line_28 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_28 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_14 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_4 $$ for (Integer i : list) -->Line_8 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_11 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_15 $$ assertTrue(set.contains(list.get(i)))[ FD ]
Line_27 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_30 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_30 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_2 $$ public void testPollMulti() -->Line_30 $$ for (int i = 0; i < NUM / 2; i++) [ CD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_24 $$ assertTrue(set.add(list.get(i)))[ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_30 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_24 $$ assertTrue(set.add(list.get(i)))[ FD ]
Line_23 $$ for (int i = 0; i < NUM / 2; i++) -->Line_24 $$ assertTrue(set.add(list.get(i)))[ FD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_2 $$ public void testPollMulti() -->Line_23 $$ for (int i = 0; i < NUM / 2; i++) [ CD ]
Line_2 $$ public void testPollMulti() -->Line_17 $$ Iterator<Integer> iter = set.iterator()[ CD ]
Line_4 $$ for (Integer i : list) -->Line_27 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_2 $$ public void testPollMulti() -->Line_35 $$ LOG.info("Test poll multi - DONE")[ CD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_12 $$ assertFalse(set.contains(list.get(i)))[ CD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_12 $$ assertFalse(set.contains(list.get(i)))[ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_14 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_23 $$ for (int i = 0; i < NUM / 2; i++) -->Line_24 $$ assertTrue(set.add(list.get(i)))[ CD ]
Line_30 $$ for (int i = 0; i < NUM / 2; i++) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_27 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_2 $$ public void testPollMulti() -->Line_10 $$ assertEquals(NUM / 2, set.size())[ CD ]
Line_4 $$ for (Integer i : list) -->Line_5 $$ assertTrue(set.add(i))[ FD ]
Line_2 $$ public void testPollMulti() -->Line_18 $$ int num = NUM / 2[ CD ]
Line_23 $$ for (int i = 0; i < NUM / 2; i++) -->Line_30 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_28 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_30 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_23 $$ for (int i = 0; i < NUM / 2; i++) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_2 $$ public void testPollMulti() -->Line_34 $$ assertTrue(set.isEmpty())[ CD ]
Line_27 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_28 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_27 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_28 $$ assertEquals(list.get(i), set.pollFirst())[ CD ]
Line_4 $$ for (Integer i : list) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_4 $$ for (Integer i : list) -->Line_7 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_8 $$ assertEquals(list.get(i), set.pollFirst())[ CD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_15 $$ assertTrue(set.contains(list.get(i)))[ FD ]
Line_30 $$ for (int i = 0; i < NUM / 2; i++) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ CD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_12 $$ assertFalse(set.contains(list.get(i)))[ FD ]
Line_2 $$ public void testPollMulti() -->Line_26 $$ assertEquals(NUM, set.size())[ CD ]
Line_27 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_31 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_11 $$ for (int i = 0; i < NUM / 2; i++) -->Line_23 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_27 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_18 $$ int num = NUM / 2-->Line_22 $$ assertEquals(num, NUM)[ FD ]
Line_2 $$ public void testPollMulti() -->Line_19 $$ while (iter.hasNext()) [ CD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_23 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_15 $$ assertTrue(set.contains(list.get(i)))[ CD ]
Line_2 $$ public void testPollMulti() -->Line_22 $$ assertEquals(num, NUM)[ CD ]
Line_4 $$ for (Integer i : list) -->Line_15 $$ assertTrue(set.contains(list.get(i)))[ FD ]
Line_2 $$ public void testPollMulti() -->Line_3 $$ LOG.info("Test poll multi")[ CD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_15 $$ assertTrue(set.contains(list.get(i)))[ FD ]
Line_4 $$ for (Integer i : list) -->Line_30 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_18 $$ int num = NUM / 2-->Line_20 $$ assertEquals(list.get(num++), iter.next())[ FD ]
Line_4 $$ for (Integer i : list) -->Line_11 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_2 $$ public void testPollMulti() -->Line_7 $$ for (int i = 0; i < NUM / 2; i++) [ CD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_23 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_2 $$ public void testPollMulti() -->Line_33 $$ assertEquals(0, set.size())[ CD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_27 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_17 $$ Iterator<Integer> iter = set.iterator()-->Line_19 $$ while (iter.hasNext()) [ FD ]
Line_23 $$ for (int i = 0; i < NUM / 2; i++) -->Line_27 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_14 $$ for (int i = NUM / 2; i < NUM; i++) -->Line_28 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_4 $$ for (Integer i : list) -->Line_23 $$ for (int i = 0; i < NUM / 2; i++) [ FD ]
Line_4 $$ for (Integer i : list) -->Line_24 $$ assertTrue(set.add(list.get(i)))[ FD ]
Line_2 $$ public void testPollMulti() -->Line_14 $$ for (int i = NUM / 2; i < NUM; i++) [ CD ]
Line_4 $$ for (Integer i : list) -->Line_14 $$ for (int i = NUM / 2; i < NUM; i++) [ FD ]
Line_7 $$ for (int i = 0; i < NUM / 2; i++) -->Line_8 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
Line_4 $$ for (Integer i : list) -->Line_28 $$ assertEquals(list.get(i), set.pollFirst())[ FD ]
