Line_10 $$ if (top.node != null || hasNext) -->Line_15 $$ guide.consume(this)[ CD ]
Line_2 $$ public T nextImpl() -->Line_3 $$ if (guide == null)[ CD ]
Line_3 $$ if (guide == null)-->Line_4 $$ return stop()[ CD ]
Line_8 $$ boolean hasNext = it.hasNext()-->Line_17 $$ if (!hasNext) [ FD ]
Line_8 $$ boolean hasNext = it.hasNext()-->Line_10 $$ if (top.node != null || hasNext) [ FD ]
Line_5 $$ while (last != null) -->Line_6 $$ P<T, ?> top = last[ CD ]
Line_5 $$ while (last != null) -->Line_20 $$ if (curResult != null) [ CD ]
Line_2 $$ public T nextImpl() -->Line_5 $$ while (last != null) [ CD ]
Line_7 $$ Iterator<? extends T> it = top.iterator(tree)-->Line_11 $$ curChild = hasNext ? it.next() : null[ FD ]
Line_5 $$ while (last != null) -->Line_10 $$ if (top.node != null || hasNext) [ CD ]
Line_7 $$ Iterator<? extends T> it = top.iterator(tree)-->Line_8 $$ boolean hasNext = it.hasNext()[ FD ]
Line_5 $$ while (last != null) -->Line_17 $$ if (!hasNext) [ CD ]
Line_5 $$ while (last != null) -->Line_7 $$ Iterator<? extends T> it = top.iterator(tree)[ CD ]
Line_5 $$ while (last != null) -->Line_8 $$ boolean hasNext = it.hasNext()[ CD ]
Line_20 $$ if (curResult != null) -->Line_21 $$ return curResult[ CD ]
Line_2 $$ public T nextImpl() -->Line_24 $$ return stop()[ CD ]
Line_6 $$ P<T, ?> top = last-->Line_7 $$ Iterator<? extends T> it = top.iterator(tree)[ FD ]
Line_17 $$ if (!hasNext) -->Line_18 $$ last = last.remove()[ CD ]
