Line_7 $$ for (; candidates.hasNext(); ) -->Line_9 $$ if (!c.hasSpaceForScheduling()) [ CD ]
Line_9 $$ if (!c.hasSpaceForScheduling()) -->Line_10 $$ candidates.remove()[ CD ]
Line_8 $$ final C c = candidates.next()-->Line_11 $$ if (matcher.match(dispatcher.getCluster(), g.getDatanodeInfo(), c.getDatanodeInfo())) [ FD ]
Line_6 $$ if (g.hasSpaceForScheduling()) -->Line_7 $$ for (; candidates.hasNext(); ) [ CD ]
Line_8 $$ final C c = candidates.next()-->Line_9 $$ if (!c.hasSpaceForScheduling()) [ FD ]
Line_11 $$ if (matcher.match(dispatcher.getCluster(), g.getDatanodeInfo(), c.getDatanodeInfo())) -->Line_12 $$ return c[ CD ]
Line_7 $$ for (; candidates.hasNext(); ) -->Line_8 $$ final C c = candidates.next()[ CD ]
Line_9 $$ if (!c.hasSpaceForScheduling()) -->Line_11 $$ if (matcher.match(dispatcher.getCluster(), g.getDatanodeInfo(), c.getDatanodeInfo())) [ CD ]
