Line_4 $$ if (className.indexOf('.') < 0) -->Line_5 $$ return className.equals(topLevelClass.getName()) ? topLevelClass : null[ CD ]
Line_12 $$ while (segments.hasNext()) -->Line_15 $$ if (innerClass == null) [ CD ]
Line_14 $$ PsiClass innerClass = curClass.findInnerClassByName(innerClassName, false)-->Line_15 $$ if (innerClass == null) [ FD ]
Line_7 $$ Iterator<String> segments = StringUtil.split(className, ".").iterator()-->Line_8 $$ if (!segments.hasNext() || !segments.next().equals(topLevelClass.getName())) [ FD ]
Line_11 $$ PsiClass curClass = topLevelClass-->Line_14 $$ PsiClass innerClass = curClass.findInnerClassByName(innerClassName, false)[ FD ]
Line_11 $$ PsiClass curClass = topLevelClass-->Line_18 $$ curClass = innerClass[ FD ]
Line_13 $$ String innerClassName = segments.next()-->Line_14 $$ PsiClass innerClass = curClass.findInnerClassByName(innerClassName, false)[ FD ]
Line_8 $$ if (!segments.hasNext() || !segments.next().equals(topLevelClass.getName())) -->Line_9 $$ return null[ CD ]
Line_7 $$ Iterator<String> segments = StringUtil.split(className, ".").iterator()-->Line_12 $$ while (segments.hasNext()) [ FD ]
Line_15 $$ if (innerClass == null) -->Line_16 $$ return null[ CD ]
Line_14 $$ PsiClass innerClass = curClass.findInnerClassByName(innerClassName, false)-->Line_18 $$ curClass = innerClass[ FD ]
Line_12 $$ while (segments.hasNext()) -->Line_14 $$ PsiClass innerClass = curClass.findInnerClassByName(innerClassName, false)[ CD ]
Line_12 $$ while (segments.hasNext()) -->Line_13 $$ String innerClassName = segments.next()[ CD ]
Line_12 $$ while (segments.hasNext()) -->Line_18 $$ curClass = innerClass[ CD ]
Line_18 $$ curClass = innerClass-->Line_14 $$ PsiClass innerClass = curClass.findInnerClassByName(innerClassName, false)[ FD ]
Line_7 $$ Iterator<String> segments = StringUtil.split(className, ".").iterator()-->Line_13 $$ String innerClassName = segments.next()[ FD ]
