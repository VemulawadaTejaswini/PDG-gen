Line_2 $$ public List<Module> getAllDependentModules(@NotNull Module module) -->Line_5 $$ for (Iterator<Module> i = graph.getOut(module); i.hasNext(); ) [ CD ]
Line_5 $$ for (Iterator<Module> i = graph.getOut(module); i.hasNext(); ) -->Line_6 $$ list.add(i.next())[ FD ]
Line_2 $$ public List<Module> getAllDependentModules(@NotNull Module module) -->Line_5 $$ for (Iterator<Module> i = graph.getOut(module); i.hasNext(); ) [ FD ]
Line_3 $$ final ArrayList<Module> list = new ArrayList<Module>()-->Line_6 $$ list.add(i.next())[ FD ]
Line_2 $$ public List<Module> getAllDependentModules(@NotNull Module module) -->Line_3 $$ final ArrayList<Module> list = new ArrayList<Module>()[ CD ]
Line_4 $$ final Graph<Module> graph = getModuleGraph(true)-->Line_5 $$ for (Iterator<Module> i = graph.getOut(module); i.hasNext(); ) [ FD ]
Line_2 $$ public List<Module> getAllDependentModules(@NotNull Module module) -->Line_4 $$ final Graph<Module> graph = getModuleGraph(true)[ CD ]
Line_5 $$ for (Iterator<Module> i = graph.getOut(module); i.hasNext(); ) -->Line_6 $$ list.add(i.next())[ CD ]
Line_2 $$ public List<Module> getAllDependentModules(@NotNull Module module) -->Line_8 $$ return list[ CD ]
