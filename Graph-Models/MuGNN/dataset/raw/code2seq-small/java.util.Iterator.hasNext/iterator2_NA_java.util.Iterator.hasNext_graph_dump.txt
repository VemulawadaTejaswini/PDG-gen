Line_5 $$ for (int i = 0; i < 10000; ++i) -->Line_19 $$ for (int i = 9999; i > 0; i -= 2) [ FD ]
Line_18 $$ it = tested.iterator()-->Line_21 $$ Assert.assertTrue(it.next() % 2 != 0)[ FD ]
Line_3 $$ final HashSet<Integer> tested = new HashSet<Integer>()-->Line_6 $$ tested.add(i)[ FD ]
Line_11 $$ final int i = it.next()-->Line_14 $$ Assert.assertTrue(set.remove(i))[ FD ]
Line_2 $$ public void iterator2() -->Line_9 $$ Iterator<Integer> it = tested.iterator()[ CD ]
Line_9 $$ Iterator<Integer> it = tested.iterator()-->Line_11 $$ final int i = it.next()[ FD ]
Line_2 $$ public void iterator2() -->Line_17 $$ Assert.assertEquals(5000, tested.size())[ CD ]
Line_3 $$ final HashSet<Integer> tested = new HashSet<Integer>()-->Line_9 $$ Iterator<Integer> it = tested.iterator()[ FD ]
Line_3 $$ final HashSet<Integer> tested = new HashSet<Integer>()-->Line_18 $$ it = tested.iterator()[ FD ]
Line_19 $$ for (int i = 9999; i > 0; i -= 2) -->Line_22 $$ Assert.assertTrue(set.remove(i))[ CD ]
Line_2 $$ public void iterator2() -->Line_5 $$ for (int i = 0; i < 10000; ++i) [ CD ]
Line_9 $$ Iterator<Integer> it = tested.iterator()-->Line_10 $$ while (it.hasNext()) [ FD ]
Line_3 $$ final HashSet<Integer> tested = new HashSet<Integer>()-->Line_17 $$ Assert.assertEquals(5000, tested.size())[ FD ]
Line_2 $$ public void iterator2() -->Line_18 $$ it = tested.iterator()[ CD ]
Line_4 $$ final Set<Integer> set = new HashSet<Integer>()-->Line_7 $$ set.add(i)[ FD ]
Line_9 $$ Iterator<Integer> it = tested.iterator()-->Line_18 $$ it = tested.iterator()[ FD ]
Line_12 $$ if (i % 2 == 0) -->Line_13 $$ it.remove()[ CD ]
Line_11 $$ final int i = it.next()-->Line_22 $$ Assert.assertTrue(set.remove(i))[ FD ]
Line_2 $$ public void iterator2() -->Line_10 $$ while (it.hasNext()) [ CD ]
Line_9 $$ Iterator<Integer> it = tested.iterator()-->Line_21 $$ Assert.assertTrue(it.next() % 2 != 0)[ FD ]
Line_2 $$ public void iterator2() -->Line_4 $$ final Set<Integer> set = new HashSet<Integer>()[ CD ]
Line_2 $$ public void iterator2() -->Line_19 $$ for (int i = 9999; i > 0; i -= 2) [ CD ]
Line_19 $$ for (int i = 9999; i > 0; i -= 2) -->Line_22 $$ Assert.assertTrue(set.remove(i))[ FD ]
Line_9 $$ Iterator<Integer> it = tested.iterator()-->Line_13 $$ it.remove()[ FD ]
Line_18 $$ it = tested.iterator()-->Line_20 $$ Assert.assertTrue(it.hasNext())[ FD ]
Line_19 $$ for (int i = 9999; i > 0; i -= 2) -->Line_21 $$ Assert.assertTrue(it.next() % 2 != 0)[ CD ]
Line_5 $$ for (int i = 0; i < 10000; ++i) -->Line_6 $$ tested.add(i)[ FD ]
Line_4 $$ final Set<Integer> set = new HashSet<Integer>()-->Line_24 $$ Assert.assertEquals(0, set.size())[ FD ]
Line_4 $$ final Set<Integer> set = new HashSet<Integer>()-->Line_22 $$ Assert.assertTrue(set.remove(i))[ FD ]
Line_2 $$ public void iterator2() -->Line_3 $$ final HashSet<Integer> tested = new HashSet<Integer>()[ CD ]
Line_19 $$ for (int i = 9999; i > 0; i -= 2) -->Line_20 $$ Assert.assertTrue(it.hasNext())[ CD ]
Line_2 $$ public void iterator2() -->Line_24 $$ Assert.assertEquals(0, set.size())[ CD ]
Line_5 $$ for (int i = 0; i < 10000; ++i) -->Line_22 $$ Assert.assertTrue(set.remove(i))[ FD ]
Line_5 $$ for (int i = 0; i < 10000; ++i) -->Line_14 $$ Assert.assertTrue(set.remove(i))[ FD ]
Line_9 $$ Iterator<Integer> it = tested.iterator()-->Line_20 $$ Assert.assertTrue(it.hasNext())[ FD ]
Line_5 $$ for (int i = 0; i < 10000; ++i) -->Line_7 $$ set.add(i)[ CD ]
Line_5 $$ for (int i = 0; i < 10000; ++i) -->Line_7 $$ set.add(i)[ FD ]
Line_12 $$ if (i % 2 == 0) -->Line_14 $$ Assert.assertTrue(set.remove(i))[ CD ]
Line_4 $$ final Set<Integer> set = new HashSet<Integer>()-->Line_14 $$ Assert.assertTrue(set.remove(i))[ FD ]
Line_11 $$ final int i = it.next()-->Line_19 $$ for (int i = 9999; i > 0; i -= 2) [ FD ]
Line_10 $$ while (it.hasNext()) -->Line_12 $$ if (i % 2 == 0) [ CD ]
Line_10 $$ while (it.hasNext()) -->Line_11 $$ final int i = it.next()[ CD ]
Line_5 $$ for (int i = 0; i < 10000; ++i) -->Line_6 $$ tested.add(i)[ CD ]
