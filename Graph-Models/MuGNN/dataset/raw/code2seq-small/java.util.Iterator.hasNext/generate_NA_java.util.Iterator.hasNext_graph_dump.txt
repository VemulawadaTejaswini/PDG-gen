Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)-->Line_9 $$ e.invoke_virtual_this(delegate.getSignature())[ FD ]
Line_4 $$ MethodInfo method = (MethodInfo) it.next()-->Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)[ FD ]
Line_2 $$ public void generate(ClassEmitter ce, CallbackGenerator.Context context, List methods) -->Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) [ CD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_4 $$ MethodInfo method = (MethodInfo) it.next()[ CD ]
Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)-->Line_8 $$ e.load_this()[ FD ]
Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)-->Line_7 $$ Block handler = e.begin_block()[ FD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_5 $$ final MethodInfo delegate = myCovariantInfoMap.get(method)[ CD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_4 $$ MethodInfo method = (MethodInfo) it.next()[ FD ]
Line_5 $$ final MethodInfo delegate = myCovariantInfoMap.get(method)-->Line_9 $$ e.invoke_virtual_this(delegate.getSignature())[ FD ]
Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)-->Line_10 $$ e.return_value()[ FD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_12 $$ e.end_method()[ CD ]
Line_7 $$ Block handler = e.begin_block()-->Line_11 $$ handler.end()[ FD ]
Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)-->Line_12 $$ e.end_method()[ FD ]
Line_2 $$ public void generate(ClassEmitter ce, CallbackGenerator.Context context, List methods) -->Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)[ FD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_8 $$ e.load_this()[ CD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_11 $$ handler.end()[ CD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_7 $$ Block handler = e.begin_block()[ CD ]
Line_2 $$ public void generate(ClassEmitter ce, CallbackGenerator.Context context, List methods) -->Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) [ FD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_6 $$ CodeEmitter e = context.beginMethod(ce, method)[ CD ]
Line_4 $$ MethodInfo method = (MethodInfo) it.next()-->Line_5 $$ final MethodInfo delegate = myCovariantInfoMap.get(method)[ FD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_9 $$ e.invoke_virtual_this(delegate.getSignature())[ CD ]
Line_3 $$ for (Iterator it = methods.iterator(); it.hasNext(); ) -->Line_10 $$ e.return_value()[ CD ]
