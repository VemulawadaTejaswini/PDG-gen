Line_7 $$ if (conflictMap.size() > 0) -->Line_9 $$ JLabel scText = new JLabel(sc.toString())[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_29 $$ myConflicts.add(new SeparatorWithText(), c)[ FD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_27 $$ c.gridwidth = 2[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_7 $$ if (conflictMap.size() > 0) [ CD ]
Line_7 $$ if (conflictMap.size() > 0) -->Line_11 $$ c.gridx = 0[ CD ]
Line_14 $$ while (actions.hasNext()) -->Line_15 $$ String each = actions.next()[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_30 $$ c.gridwidth = 1[ CD ]
Line_17 $$ if (eachAnAction != null) -->Line_18 $$ String text = eachAnAction.getTemplatePresentation().getText()[ CD ]
Line_7 $$ if (conflictMap.size() > 0) -->Line_10 $$ c.gridy++[ CD ]
Line_16 $$ AnAction eachAnAction = ActionManager.getInstance().getAction(each)-->Line_18 $$ String text = eachAnAction.getTemplatePresentation().getText()[ FD ]
Line_16 $$ AnAction eachAnAction = ActionManager.getInstance().getAction(each)-->Line_17 $$ if (eachAnAction != null) [ FD ]
Line_7 $$ if (conflictMap.size() > 0) -->Line_12 $$ myConflicts.add(scText, c)[ CD ]
Line_6 $$ Map<String, ArrayList<KeyboardShortcut>> conflictMap = myQuickAccessSettings.getKeymap().getConflicts(actionId, sc)-->Line_7 $$ if (conflictMap.size() > 0) [ FD ]
Line_17 $$ if (eachAnAction != null) -->Line_19 $$ JLabel eachAction = new JLabel(text != null && text.length() > 0 ? text : each)[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_21 $$ myConflicts.add(eachAction, c)[ FD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_4 $$ int mask = myQuickAccessSettings.getModifierMask(myModifiers)[ CD ]
Line_17 $$ if (eachAnAction != null) -->Line_21 $$ myConflicts.add(eachAction, c)[ CD ]
Line_14 $$ while (actions.hasNext()) -->Line_17 $$ if (eachAnAction != null) [ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_6 $$ Map<String, ArrayList<KeyboardShortcut>> conflictMap = myQuickAccessSettings.getKeymap().getConflicts(actionId, sc)[ FD ]
Line_13 $$ Iterator<String> actions = conflictMap.keySet().iterator()-->Line_15 $$ String each = actions.next()[ FD ]
Line_4 $$ int mask = myQuickAccessSettings.getModifierMask(myModifiers)-->Line_5 $$ KeyboardShortcut sc = new KeyboardShortcut(KeyStroke.getKeyStroke(actionKey, mask), null)[ FD ]
Line_18 $$ String text = eachAnAction.getTemplatePresentation().getText()-->Line_19 $$ JLabel eachAction = new JLabel(text != null && text.length() > 0 ? text : each)[ FD ]
Line_14 $$ while (actions.hasNext()) -->Line_16 $$ AnAction eachAnAction = ActionManager.getInstance().getAction(each)[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_5 $$ KeyboardShortcut sc = new KeyboardShortcut(KeyStroke.getKeyStroke(actionKey, mask), null)[ CD ]
Line_13 $$ Iterator<String> actions = conflictMap.keySet().iterator()-->Line_14 $$ while (actions.hasNext()) [ FD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_6 $$ Map<String, ArrayList<KeyboardShortcut>> conflictMap = myQuickAccessSettings.getKeymap().getConflicts(actionId, sc)[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_12 $$ myConflicts.add(scText, c)[ FD ]
Line_15 $$ String each = actions.next()-->Line_16 $$ AnAction eachAnAction = ActionManager.getInstance().getAction(each)[ FD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_29 $$ myConflicts.add(new SeparatorWithText(), c)[ CD ]
Line_9 $$ JLabel scText = new JLabel(sc.toString())-->Line_12 $$ myConflicts.add(scText, c)[ FD ]
Line_7 $$ if (conflictMap.size() > 0) -->Line_13 $$ Iterator<String> actions = conflictMap.keySet().iterator()[ CD ]
Line_6 $$ Map<String, ArrayList<KeyboardShortcut>> conflictMap = myQuickAccessSettings.getKeymap().getConflicts(actionId, sc)-->Line_13 $$ Iterator<String> actions = conflictMap.keySet().iterator()[ FD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_26 $$ c.gridx = 0[ CD ]
Line_19 $$ JLabel eachAction = new JLabel(text != null && text.length() > 0 ? text : each)-->Line_21 $$ myConflicts.add(eachAction, c)[ FD ]
Line_5 $$ KeyboardShortcut sc = new KeyboardShortcut(KeyStroke.getKeyStroke(actionKey, mask), null)-->Line_9 $$ JLabel scText = new JLabel(sc.toString())[ FD ]
Line_17 $$ if (eachAnAction != null) -->Line_20 $$ c.gridx = 1[ CD ]
Line_5 $$ KeyboardShortcut sc = new KeyboardShortcut(KeyStroke.getKeyStroke(actionKey, mask), null)-->Line_6 $$ Map<String, ArrayList<KeyboardShortcut>> conflictMap = myQuickAccessSettings.getKeymap().getConflicts(actionId, sc)[ FD ]
Line_17 $$ if (eachAnAction != null) -->Line_22 $$ c.gridy++[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_28 $$ c.gridy++[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_31 $$ return hasConflicts[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_3 $$ boolean hasConflicts = false[ CD ]
Line_2 $$ private boolean printConflict(GridBagConstraints c, int actionKey, String actionId) -->Line_5 $$ KeyboardShortcut sc = new KeyboardShortcut(KeyStroke.getKeyStroke(actionKey, mask), null)[ FD ]
Line_7 $$ if (conflictMap.size() > 0) -->Line_8 $$ hasConflicts = true[ CD ]
Line_3 $$ boolean hasConflicts = false-->Line_8 $$ hasConflicts = true[ FD ]
Line_7 $$ if (conflictMap.size() > 0) -->Line_14 $$ while (actions.hasNext()) [ CD ]
