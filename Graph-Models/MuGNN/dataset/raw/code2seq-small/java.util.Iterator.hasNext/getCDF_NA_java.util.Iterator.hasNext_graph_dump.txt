Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_11 $$ int bucketCursor = 0[ CD ]
Line_12 $$ while (iter.hasNext()) -->Line_25 $$ if (bucketCursor == buckets.length) [ CD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_7 $$ result[0] = content.firstEntry().getKey()[ CD ]
Line_14 $$ Map.Entry<Long, Long> elt = iter.next()-->Line_15 $$ cumulativeCount += elt.getValue()[ FD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_8 $$ result[buckets.length + 1] = content.lastEntry().getKey()[ CD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_12 $$ while (iter.hasNext()) [ CD ]
Line_11 $$ int bucketCursor = 0-->Line_19 $$ if (bucketCursor < buckets.length) [ FD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_29 $$ return result[ CD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_9 $$ Iterator<Map.Entry<Long, Long>> iter = content.entrySet().iterator()[ CD ]
Line_10 $$ long cumulativeCount = 0-->Line_16 $$ while (cumulativeCount >= targetCumulativeCount) [ FD ]
Line_19 $$ if (bucketCursor < buckets.length) -->Line_20 $$ targetCumulativeCount = buckets[bucketCursor] * totalCount / scale[ CD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_3 $$ if (totalCount == 0) [ CD ]
Line_16 $$ while (cumulativeCount >= targetCumulativeCount) -->Line_19 $$ if (bucketCursor < buckets.length) [ CD ]
Line_12 $$ while (iter.hasNext()) -->Line_13 $$ long targetCumulativeCount = buckets[bucketCursor] * totalCount / scale[ CD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_6 $$ long[] result = new long[buckets.length + 2][ CD ]
Line_15 $$ cumulativeCount += elt.getValue()-->Line_16 $$ while (cumulativeCount >= targetCumulativeCount) [ FD ]
Line_10 $$ long cumulativeCount = 0-->Line_15 $$ cumulativeCount += elt.getValue()[ FD ]
Line_3 $$ if (totalCount == 0) -->Line_4 $$ return null[ CD ]
Line_11 $$ int bucketCursor = 0-->Line_18 $$ ++bucketCursor[ FD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_20 $$ targetCumulativeCount = buckets[bucketCursor] * totalCount / scale[ FD ]
Line_16 $$ while (cumulativeCount >= targetCumulativeCount) -->Line_18 $$ ++bucketCursor[ CD ]
Line_11 $$ int bucketCursor = 0-->Line_25 $$ if (bucketCursor == buckets.length) [ FD ]
Line_20 $$ targetCumulativeCount = buckets[bucketCursor] * totalCount / scale-->Line_16 $$ while (cumulativeCount >= targetCumulativeCount) [ FD ]
Line_12 $$ while (iter.hasNext()) -->Line_15 $$ cumulativeCount += elt.getValue()[ CD ]
Line_13 $$ long targetCumulativeCount = buckets[bucketCursor] * totalCount / scale-->Line_16 $$ while (cumulativeCount >= targetCumulativeCount) [ FD ]
Line_2 $$ public long[] getCDF(int scale, int[] buckets) -->Line_10 $$ long cumulativeCount = 0[ CD ]
Line_14 $$ Map.Entry<Long, Long> elt = iter.next()-->Line_17 $$ result[bucketCursor + 1] = elt.getKey()[ FD ]
Line_9 $$ Iterator<Map.Entry<Long, Long>> iter = content.entrySet().iterator()-->Line_14 $$ Map.Entry<Long, Long> elt = iter.next()[ FD ]
Line_16 $$ while (cumulativeCount >= targetCumulativeCount) -->Line_17 $$ result[bucketCursor + 1] = elt.getKey()[ CD ]
Line_9 $$ Iterator<Map.Entry<Long, Long>> iter = content.entrySet().iterator()-->Line_12 $$ while (iter.hasNext()) [ FD ]
Line_13 $$ long targetCumulativeCount = buckets[bucketCursor] * totalCount / scale-->Line_20 $$ targetCumulativeCount = buckets[bucketCursor] * totalCount / scale[ FD ]
Line_12 $$ while (iter.hasNext()) -->Line_14 $$ Map.Entry<Long, Long> elt = iter.next()[ CD ]
Line_12 $$ while (iter.hasNext()) -->Line_16 $$ while (cumulativeCount >= targetCumulativeCount) [ CD ]
