Line_9 $$ Set set = new HashSet()-->Line_17 $$ q.setFums(set)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_10 $$ set.add(f1)[ CD ]
Line_30 $$ s = openSession()-->Line_34 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_23 $$ s = openSession()-->Line_34 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_7 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_10 $$ set.add(f1)[ FD ]
Line_12 $$ List list = new LinkedList()-->Line_33 $$ assertTrue("deleted owner", list.size() == 2)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_22 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_30 $$ s = openSession()[ CD ]
Line_12 $$ List list = new LinkedList()-->Line_18 $$ q.setMoreFums(list)[ FD ]
Line_12 $$ List list = new LinkedList()-->Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_35 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_23 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_12 $$ List list = new LinkedList()-->Line_13 $$ list.add(f1)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_17 $$ q.setFums(set)[ CD ]
Line_9 $$ Set set = new HashSet()-->Line_10 $$ set.add(f1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ s.getTransaction().commit()[ FD ]
Line_23 $$ s = openSession()-->Line_24 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_16 $$ f2.setFum("f2")[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_35 $$ s.lock(list.get(1), LockMode.UPGRADE)[ CD ]
Line_8 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_14 $$ list.add(f2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s = openSession()[ FD ]
Line_30 $$ s = openSession()-->Line_38 $$ s.delete(iter.next())[ FD ]
Line_23 $$ s = openSession()-->Line_30 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ s.close()[ FD ]
Line_23 $$ s = openSession()-->Line_29 $$ s.close()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_8 $$ Fum f2 = new Fum(fumKey("f2"))[ CD ]
Line_8 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_16 $$ f2.setFum("f2")[ FD ]
Line_37 $$ while (iter.hasNext()) -->Line_38 $$ s.delete(iter.next())[ CD ]
Line_23 $$ s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_30 $$ s = openSession()-->Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_12 $$ List list = new LinkedList()-->Line_35 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_5 $$ Qux q = new Qux()-->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)[ FD ]
Line_5 $$ Qux q = new Qux()-->Line_18 $$ q.setMoreFums(list)[ FD ]
Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_33 $$ assertTrue("deleted owner", list.size() == 2)[ FD ]
Line_7 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_15 $$ f1.setFum("f1")[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_5 $$ Qux q = new Qux()[ CD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_7 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_13 $$ list.add(f1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_6 $$ s.save(q)[ FD ]
Line_5 $$ Qux q = new Qux()-->Line_27 $$ s.delete(q)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_36 $$ Iterator iter = list.iterator()[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_13 $$ list.add(f1)[ CD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s.save(f2)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_40 $$ s.getTransaction().commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s = openSession()[ FD ]
Line_23 $$ s = openSession()-->Line_26 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_7 $$ Fum f1 = new Fum(fumKey("f1"))-->Line_19 $$ s.save(f1)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_6 $$ s.save(q)[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_23 $$ s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_11 $$ set.add(f2)[ CD ]
Line_23 $$ s = openSession()-->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)[ FD ]
Line_9 $$ Set set = new HashSet()-->Line_11 $$ set.add(f2)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_7 $$ Fum f1 = new Fum(fumKey("f1"))[ CD ]
Line_5 $$ Qux q = new Qux()-->Line_6 $$ s.save(q)[ FD ]
Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_34 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_8 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_11 $$ set.add(f2)[ FD ]
Line_23 $$ s = openSession()-->Line_38 $$ s.delete(iter.next())[ FD ]
Line_8 $$ Fum f2 = new Fum(fumKey("f2"))-->Line_20 $$ s.save(f2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s.beginTransaction()[ FD ]
Line_36 $$ Iterator iter = list.iterator()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_27 $$ s.delete(q)[ CD ]
Line_12 $$ List list = new LinkedList()-->Line_14 $$ list.add(f2)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_21 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_20 $$ s.save(f2)[ CD ]
Line_30 $$ s = openSession()-->Line_40 $$ s.getTransaction().commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)[ FD ]
Line_30 $$ s = openSession()-->Line_35 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_30 $$ s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ s.delete(q)[ FD ]
Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()-->Line_36 $$ Iterator iter = list.iterator()[ FD ]
Line_23 $$ s = openSession()-->Line_35 $$ s.lock(list.get(1), LockMode.UPGRADE)[ FD ]
Line_36 $$ Iterator iter = list.iterator()-->Line_38 $$ s.delete(iter.next())[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_29 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_15 $$ f1.setFum("f1")[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_14 $$ list.add(f2)[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_37 $$ while (iter.hasNext()) [ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_9 $$ Set set = new HashSet()[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_28 $$ s.getTransaction().commit()[ CD ]
Line_23 $$ s = openSession()-->Line_27 $$ s.delete(q)[ FD ]
Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)-->Line_27 $$ s.delete(q)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_41 $$ s.close()[ CD ]
Line_30 $$ s = openSession()-->Line_31 $$ s.beginTransaction()[ FD ]
Line_5 $$ Qux q = new Qux()-->Line_26 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)-->Line_26 $$ s.lock(q, LockMode.UPGRADE)[ FD ]
Line_12 $$ List list = new LinkedList()-->Line_36 $$ Iterator iter = list.iterator()[ FD ]
Line_12 $$ List list = new LinkedList()-->Line_34 $$ s.lock(list.get(0), LockMode.UPGRADE)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_33 $$ assertTrue("deleted owner", list.size() == 2)[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_4 $$ s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ s.close()[ FD ]
Line_23 $$ s = openSession()-->Line_31 $$ s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_23 $$ s = openSession()-->Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey(), LockMode.UPGRADE)[ CD ]
Line_23 $$ s = openSession()-->Line_28 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_18 $$ q.setMoreFums(list)[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_34 $$ s.lock(list.get(0), LockMode.UPGRADE)[ CD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ s.save(f1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s.close()[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_19 $$ s.save(f1)[ CD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.delete(iter.next())[ FD ]
Line_5 $$ Qux q = new Qux()-->Line_17 $$ q.setFums(set)[ FD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_26 $$ s.lock(q, LockMode.UPGRADE)[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_32 $$ list = s.createQuery("from Fum fum where not fum.fum='FRIEND'").list()[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_31 $$ s.beginTransaction()[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_24 $$ s.beginTransaction()[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_12 $$ List list = new LinkedList()[ CD ]
Line_2 $$ public void testDeleteOwner() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
