Line_2 $$ public void testClear() -->Line_8 $$ for (int i = 0; i < set.size() / 2 + 1; i++) [ CD ]
Line_7 $$ Iterator<Integer> bkmrkIt = set.getBookmark()-->Line_9 $$ bkmrkIt.next()[ FD ]
Line_2 $$ public void testClear() -->Line_21 $$ assertFalse(iter.hasNext())[ CD ]
Line_7 $$ Iterator<Integer> bkmrkIt = set.getBookmark()-->Line_11 $$ assertTrue(bkmrkIt.hasNext())[ FD ]
Line_2 $$ public void testClear() -->Line_15 $$ bkmrkIt = set.getBookmark()[ CD ]
Line_2 $$ public void testClear() -->Line_22 $$ LOG.info("Test clear - DONE")[ CD ]
Line_2 $$ public void testClear() -->Line_16 $$ assertFalse(bkmrkIt.hasNext())[ CD ]
Line_2 $$ public void testClear() -->Line_4 $$ set.addAll(list)[ CD ]
Line_20 $$ Iterator<Integer> iter = set.iterator()-->Line_21 $$ assertFalse(iter.hasNext())[ FD ]
Line_2 $$ public void testClear() -->Line_7 $$ Iterator<Integer> bkmrkIt = set.getBookmark()[ CD ]
Line_2 $$ public void testClear() -->Line_14 $$ assertTrue(set.isEmpty())[ CD ]
Line_2 $$ public void testClear() -->Line_12 $$ set.clear()[ CD ]
Line_2 $$ public void testClear() -->Line_20 $$ Iterator<Integer> iter = set.iterator()[ CD ]
Line_2 $$ public void testClear() -->Line_19 $$ assertNull(set.pollFirst())[ CD ]
Line_7 $$ Iterator<Integer> bkmrkIt = set.getBookmark()-->Line_15 $$ bkmrkIt = set.getBookmark()[ FD ]
Line_15 $$ bkmrkIt = set.getBookmark()-->Line_16 $$ assertFalse(bkmrkIt.hasNext())[ FD ]
Line_2 $$ public void testClear() -->Line_3 $$ LOG.info("Test clear")[ CD ]
Line_2 $$ public void testClear() -->Line_18 $$ assertEquals(0, set.pollN(10).size())[ CD ]
Line_2 $$ public void testClear() -->Line_11 $$ assertTrue(bkmrkIt.hasNext())[ CD ]
Line_7 $$ Iterator<Integer> bkmrkIt = set.getBookmark()-->Line_16 $$ assertFalse(bkmrkIt.hasNext())[ FD ]
Line_2 $$ public void testClear() -->Line_6 $$ assertFalse(set.isEmpty())[ CD ]
Line_2 $$ public void testClear() -->Line_17 $$ assertEquals(0, set.pollAll().size())[ CD ]
Line_8 $$ for (int i = 0; i < set.size() / 2 + 1; i++) -->Line_9 $$ bkmrkIt.next()[ CD ]
Line_2 $$ public void testClear() -->Line_13 $$ assertEquals(0, set.size())[ CD ]
Line_2 $$ public void testClear() -->Line_5 $$ assertEquals(NUM, set.size())[ CD ]
