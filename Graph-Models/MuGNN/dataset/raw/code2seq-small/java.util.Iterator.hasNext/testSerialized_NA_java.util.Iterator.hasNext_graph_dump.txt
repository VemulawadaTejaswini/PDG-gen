Line_32 $$ country = forest.getCountry()-->Line_34 $$ assertEquals(country.getName(), forest.getCountry().getName())[ FD ]
Line_23 $$ s = openSession()-->Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())[ FD ]
Line_32 $$ country = forest.getCountry()-->Line_39 $$ String name = country.getName()[ FD ]
Line_35 $$ near = forest.getNear()-->Line_36 $$ assertTrue("correct number of nearby countries", near.size() == 3)[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_34 $$ assertEquals(country.getName(), forest.getCountry().getName())[ FD ]
Line_7 $$ Country country = new Country()-->Line_18 $$ country.setName("Eriador")[ FD ]
Line_21 $$ Session s-->Line_28 $$ s = openSession()[ FD ]
Line_14 $$ country = new Country()-->Line_33 $$ assertNotNull(country)[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_32 $$ country = forest.getCountry()[ FD ]
Line_7 $$ Country country = new Country()-->Line_19 $$ near.add(country)[ FD ]
Line_32 $$ country = forest.getCountry()-->Line_33 $$ assertNotNull(country)[ FD ]
Line_28 $$ s = openSession()-->Line_29 $$ tx = s.beginTransaction()[ FD ]
Line_14 $$ country = new Country()-->Line_34 $$ assertEquals(country.getName(), forest.getCountry().getName())[ FD ]
Line_10 $$ Set<Country> near = new HashSet<Country>()-->Line_37 $$ for (Iterator iter = near.iterator(); iter.hasNext(); ) [ FD ]
Line_21 $$ Session s-->Line_24 $$ tx = s.beginTransaction()[ FD ]
Line_11 $$ country = new Country()-->Line_38 $$ country = (Country) iter.next()[ FD ]
Line_21 $$ Session s-->Line_25 $$ s.persist(forest)[ FD ]
Line_17 $$ country = new Country()-->Line_19 $$ near.add(country)[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_6 $$ forest.setName("Shire")[ FD ]
Line_24 $$ tx = s.beginTransaction()-->Line_26 $$ tx.commit()[ FD ]
Line_21 $$ Session s-->Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())[ FD ]
Line_7 $$ Country country = new Country()-->Line_39 $$ String name = country.getName()[ FD ]
Line_17 $$ country = new Country()-->Line_38 $$ country = (Country) iter.next()[ FD ]
Line_14 $$ country = new Country()-->Line_15 $$ country.setName("Gondor")[ FD ]
Line_21 $$ Session s-->Line_43 $$ s.close()[ FD ]
Line_7 $$ Country country = new Country()-->Line_8 $$ country.setName("Middle Earth")[ FD ]
Line_23 $$ s = openSession()-->Line_25 $$ s.persist(forest)[ FD ]
Line_32 $$ country = forest.getCountry()-->Line_38 $$ country = (Country) iter.next()[ FD ]
Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())-->Line_35 $$ near = forest.getNear()[ FD ]
Line_14 $$ country = new Country()-->Line_39 $$ String name = country.getName()[ FD ]
Line_10 $$ Set<Country> near = new HashSet<Country>()-->Line_20 $$ forest.setNear(near)[ FD ]
Line_11 $$ country = new Country()-->Line_12 $$ country.setName("Mordor")[ FD ]
Line_23 $$ s = openSession()-->Line_29 $$ tx = s.beginTransaction()[ FD ]
Line_7 $$ Country country = new Country()-->Line_15 $$ country.setName("Gondor")[ FD ]
Line_10 $$ Set<Country> near = new HashSet<Country>()-->Line_16 $$ near.add(country)[ FD ]
Line_7 $$ Country country = new Country()-->Line_16 $$ near.add(country)[ FD ]
Line_7 $$ Country country = new Country()-->Line_34 $$ assertEquals(country.getName(), forest.getCountry().getName())[ FD ]
Line_11 $$ country = new Country()-->Line_17 $$ country = new Country()[ FD ]
Line_35 $$ near = forest.getNear()-->Line_37 $$ for (Iterator iter = near.iterator(); iter.hasNext(); ) [ FD ]
Line_14 $$ country = new Country()-->Line_32 $$ country = forest.getCountry()[ FD ]
Line_11 $$ country = new Country()-->Line_14 $$ country = new Country()[ FD ]
Line_21 $$ Session s-->Line_23 $$ s = openSession()[ FD ]
Line_17 $$ country = new Country()-->Line_33 $$ assertNotNull(country)[ FD ]
Line_10 $$ Set<Country> near = new HashSet<Country>()-->Line_35 $$ near = forest.getNear()[ FD ]
Line_23 $$ s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())-->Line_34 $$ assertEquals(country.getName(), forest.getCountry().getName())[ FD ]
Line_7 $$ Country country = new Country()-->Line_38 $$ country = (Country) iter.next()[ FD ]
Line_7 $$ Country country = new Country()-->Line_9 $$ forest.setCountry(country)[ FD ]
Line_11 $$ country = new Country()-->Line_34 $$ assertEquals(country.getName(), forest.getCountry().getName())[ FD ]
Line_22 $$ Transaction tx-->Line_42 $$ tx.commit()[ FD ]
Line_23 $$ s = openSession()-->Line_27 $$ s.close()[ FD ]
Line_23 $$ s = openSession()-->Line_24 $$ tx = s.beginTransaction()[ FD ]
Line_14 $$ country = new Country()-->Line_18 $$ country.setName("Eriador")[ FD ]
Line_10 $$ Set<Country> near = new HashSet<Country>()-->Line_19 $$ near.add(country)[ FD ]
Line_17 $$ country = new Country()-->Line_18 $$ country.setName("Eriador")[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_20 $$ forest.setNear(near)[ FD ]
Line_22 $$ Transaction tx-->Line_29 $$ tx = s.beginTransaction()[ FD ]
Line_14 $$ country = new Country()-->Line_38 $$ country = (Country) iter.next()[ FD ]
Line_22 $$ Transaction tx-->Line_26 $$ tx.commit()[ FD ]
Line_7 $$ Country country = new Country()-->Line_12 $$ country.setName("Mordor")[ FD ]
Line_11 $$ country = new Country()-->Line_39 $$ String name = country.getName()[ FD ]
Line_7 $$ Country country = new Country()-->Line_13 $$ near.add(country)[ FD ]
Line_37 $$ for (Iterator iter = near.iterator(); iter.hasNext(); ) -->Line_39 $$ String name = country.getName()[ CD ]
Line_21 $$ Session s-->Line_29 $$ tx = s.beginTransaction()[ FD ]
Line_11 $$ country = new Country()-->Line_15 $$ country.setName("Gondor")[ FD ]
Line_7 $$ Country country = new Country()-->Line_17 $$ country = new Country()[ FD ]
Line_11 $$ country = new Country()-->Line_19 $$ near.add(country)[ FD ]
Line_11 $$ country = new Country()-->Line_33 $$ assertNotNull(country)[ FD ]
Line_17 $$ country = new Country()-->Line_34 $$ assertEquals(country.getName(), forest.getCountry().getName())[ FD ]
Line_29 $$ tx = s.beginTransaction()-->Line_42 $$ tx.commit()[ FD ]
Line_11 $$ country = new Country()-->Line_18 $$ country.setName("Eriador")[ FD ]
Line_23 $$ s = openSession()-->Line_28 $$ s = openSession()[ FD ]
Line_37 $$ for (Iterator iter = near.iterator(); iter.hasNext(); ) -->Line_38 $$ country = (Country) iter.next()[ CD ]
Line_7 $$ Country country = new Country()-->Line_32 $$ country = forest.getCountry()[ FD ]
Line_14 $$ country = new Country()-->Line_19 $$ near.add(country)[ FD ]
Line_38 $$ country = (Country) iter.next()-->Line_39 $$ String name = country.getName()[ FD ]
Line_22 $$ Transaction tx-->Line_24 $$ tx = s.beginTransaction()[ FD ]
Line_37 $$ for (Iterator iter = near.iterator(); iter.hasNext(); ) -->Line_38 $$ country = (Country) iter.next()[ FD ]
Line_37 $$ for (Iterator iter = near.iterator(); iter.hasNext(); ) -->Line_40 $$ assertTrue("found expected nearby country " + name, (name.equals("Mordor") || name.equals("Gondor") || name.equals("Eriador")))[ CD ]
Line_24 $$ tx = s.beginTransaction()-->Line_42 $$ tx.commit()[ FD ]
Line_11 $$ country = new Country()-->Line_32 $$ country = forest.getCountry()[ FD ]
Line_39 $$ String name = country.getName()-->Line_40 $$ assertTrue("found expected nearby country " + name, (name.equals("Mordor") || name.equals("Gondor") || name.equals("Eriador")))[ FD ]
Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())-->Line_31 $$ assertNotNull(forest)[ FD ]
Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())-->Line_32 $$ country = forest.getCountry()[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())[ FD ]
Line_7 $$ Country country = new Country()-->Line_11 $$ country = new Country()[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_9 $$ forest.setCountry(country)[ FD ]
Line_17 $$ country = new Country()-->Line_32 $$ country = forest.getCountry()[ FD ]
Line_24 $$ tx = s.beginTransaction()-->Line_29 $$ tx = s.beginTransaction()[ FD ]
Line_28 $$ s = openSession()-->Line_30 $$ forest = (Forest) s.get(Forest.class, forest.getId())[ FD ]
Line_11 $$ country = new Country()-->Line_13 $$ near.add(country)[ FD ]
Line_28 $$ s = openSession()-->Line_43 $$ s.close()[ FD ]
Line_14 $$ country = new Country()-->Line_16 $$ near.add(country)[ FD ]
Line_7 $$ Country country = new Country()-->Line_33 $$ assertNotNull(country)[ FD ]
Line_10 $$ Set<Country> near = new HashSet<Country>()-->Line_13 $$ near.add(country)[ FD ]
Line_21 $$ Session s-->Line_27 $$ s.close()[ FD ]
Line_17 $$ country = new Country()-->Line_39 $$ String name = country.getName()[ FD ]
Line_7 $$ Country country = new Country()-->Line_14 $$ country = new Country()[ FD ]
Line_11 $$ country = new Country()-->Line_16 $$ near.add(country)[ FD ]
Line_14 $$ country = new Country()-->Line_17 $$ country = new Country()[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_31 $$ assertNotNull(forest)[ FD ]
Line_10 $$ Set<Country> near = new HashSet<Country>()-->Line_36 $$ assertTrue("correct number of nearby countries", near.size() == 3)[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_25 $$ s.persist(forest)[ FD ]
Line_5 $$ Forest forest = new Forest()-->Line_35 $$ near = forest.getNear()[ FD ]
