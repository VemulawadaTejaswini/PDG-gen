Line_2 $$ public String toFragmentString() -->Line_3 $$ StringBuilder buf = new StringBuilder(cases.size() * 15 + 10).append("decode(")[ CD ]
Line_4 $$ Iterator iter = cases.entrySet().iterator()-->Line_6 $$ Map.Entry me = (Map.Entry) iter.next()[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(cases.size() * 15 + 10).append("decode(")-->Line_17 $$ return buf.toString()[ FD ]
Line_2 $$ public String toFragmentString() -->Line_4 $$ Iterator iter = cases.entrySet().iterator()[ CD ]
Line_2 $$ public String toFragmentString() -->Line_5 $$ while (iter.hasNext()) [ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(cases.size() * 15 + 10).append("decode(")-->Line_8 $$ buf.append(", ").append(me.getKey()).append(", ").append(me.getValue())[ FD ]
Line_6 $$ Map.Entry me = (Map.Entry) iter.next()-->Line_8 $$ buf.append(", ").append(me.getKey()).append(", ").append(me.getValue())[ FD ]
Line_2 $$ public String toFragmentString() -->Line_14 $$ if (returnColumnName != null) [ CD ]
Line_6 $$ Map.Entry me = (Map.Entry) iter.next()-->Line_10 $$ buf.insert(7, me.getKey()).append(", ").append(me.getValue())[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(cases.size() * 15 + 10).append("decode(")-->Line_15 $$ buf.append(" as ").append(returnColumnName)[ FD ]
Line_2 $$ public String toFragmentString() -->Line_13 $$ buf.append(')')[ CD ]
Line_7 $$ if (iter.hasNext()) -->Line_10 $$ buf.insert(7, me.getKey()).append(", ").append(me.getValue())[ CD ]
Line_3 $$ StringBuilder buf = new StringBuilder(cases.size() * 15 + 10).append("decode(")-->Line_10 $$ buf.insert(7, me.getKey()).append(", ").append(me.getValue())[ FD ]
Line_3 $$ StringBuilder buf = new StringBuilder(cases.size() * 15 + 10).append("decode(")-->Line_13 $$ buf.append(')')[ FD ]
Line_5 $$ while (iter.hasNext()) -->Line_7 $$ if (iter.hasNext()) [ CD ]
Line_5 $$ while (iter.hasNext()) -->Line_6 $$ Map.Entry me = (Map.Entry) iter.next()[ CD ]
Line_7 $$ if (iter.hasNext()) -->Line_8 $$ buf.append(", ").append(me.getKey()).append(", ").append(me.getValue())[ CD ]
Line_14 $$ if (returnColumnName != null) -->Line_15 $$ buf.append(" as ").append(returnColumnName)[ CD ]
Line_4 $$ Iterator iter = cases.entrySet().iterator()-->Line_7 $$ if (iter.hasNext()) [ FD ]
Line_2 $$ public String toFragmentString() -->Line_17 $$ return buf.toString()[ CD ]
Line_4 $$ Iterator iter = cases.entrySet().iterator()-->Line_5 $$ while (iter.hasNext()) [ FD ]
