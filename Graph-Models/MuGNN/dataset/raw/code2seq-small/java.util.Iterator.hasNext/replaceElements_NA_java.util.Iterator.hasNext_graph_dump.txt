Line_11 $$ if (result instanceof PersistentCollection) -->Line_13 $$ final PersistentCollection resultPersistentCollection = (PersistentCollection) result[ CD ]
Line_13 $$ final PersistentCollection resultPersistentCollection = (PersistentCollection) result-->Line_14 $$ preserveSnapshot(originalPersistentCollection, resultPersistentCollection, elemType, owner, copyCache, session)[ FD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_6 $$ Iterator iter = ((java.util.Collection) original).iterator()[ CD ]
Line_12 $$ final PersistentCollection originalPersistentCollection = (PersistentCollection) original-->Line_15 $$ if (!originalPersistentCollection.isDirty()) [ FD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_8 $$ result.add(elemType.replace(iter.next(), null, session, owner, copyCache))[ FD ]
Line_11 $$ if (result instanceof PersistentCollection) -->Line_15 $$ if (!originalPersistentCollection.isDirty()) [ CD ]
Line_5 $$ Type elemType = getElementType(session.getFactory())-->Line_14 $$ preserveSnapshot(originalPersistentCollection, resultPersistentCollection, elemType, owner, copyCache, session)[ FD ]
Line_12 $$ final PersistentCollection originalPersistentCollection = (PersistentCollection) original-->Line_14 $$ preserveSnapshot(originalPersistentCollection, resultPersistentCollection, elemType, owner, copyCache, session)[ FD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_5 $$ Type elemType = getElementType(session.getFactory())[ FD ]
Line_3 $$ java.util.Collection result = (java.util.Collection) target-->Line_11 $$ if (result instanceof PersistentCollection) [ FD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_7 $$ while (iter.hasNext()) [ CD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_10 $$ if (original instanceof PersistentCollection) [ FD ]
Line_7 $$ while (iter.hasNext()) -->Line_8 $$ result.add(elemType.replace(iter.next(), null, session, owner, copyCache))[ CD ]
Line_11 $$ if (result instanceof PersistentCollection) -->Line_12 $$ final PersistentCollection originalPersistentCollection = (PersistentCollection) original[ CD ]
Line_10 $$ if (original instanceof PersistentCollection) -->Line_11 $$ if (result instanceof PersistentCollection) [ CD ]
Line_5 $$ Type elemType = getElementType(session.getFactory())-->Line_8 $$ result.add(elemType.replace(iter.next(), null, session, owner, copyCache))[ FD ]
Line_6 $$ Iterator iter = ((java.util.Collection) original).iterator()-->Line_8 $$ result.add(elemType.replace(iter.next(), null, session, owner, copyCache))[ FD ]
Line_3 $$ java.util.Collection result = (java.util.Collection) target-->Line_8 $$ result.add(elemType.replace(iter.next(), null, session, owner, copyCache))[ FD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_10 $$ if (original instanceof PersistentCollection) [ CD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_3 $$ java.util.Collection result = (java.util.Collection) target[ CD ]
Line_13 $$ final PersistentCollection resultPersistentCollection = (PersistentCollection) result-->Line_16 $$ resultPersistentCollection.clearDirty()[ FD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_14 $$ preserveSnapshot(originalPersistentCollection, resultPersistentCollection, elemType, owner, copyCache, session)[ FD ]
Line_15 $$ if (!originalPersistentCollection.isDirty()) -->Line_16 $$ resultPersistentCollection.clearDirty()[ CD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_20 $$ return result[ CD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_5 $$ Type elemType = getElementType(session.getFactory())[ CD ]
Line_2 $$ public Object replaceElements(Object original, Object target, Object owner, Map copyCache, SessionImplementor session) -->Line_4 $$ result.clear()[ CD ]
Line_3 $$ java.util.Collection result = (java.util.Collection) target-->Line_4 $$ result.clear()[ FD ]
Line_6 $$ Iterator iter = ((java.util.Collection) original).iterator()-->Line_7 $$ while (iter.hasNext()) [ FD ]
Line_11 $$ if (result instanceof PersistentCollection) -->Line_14 $$ preserveSnapshot(originalPersistentCollection, resultPersistentCollection, elemType, owner, copyCache, session)[ CD ]
