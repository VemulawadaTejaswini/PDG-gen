Line_4 $$ final BemState result = new BemState()-->Line_24 $$ result.setBlock(getFirst(blockModifiers, ""))[ FD ]
Line_14 $$ if (elementModifiers.size() > 1) -->Line_15 $$ result.setModifier(getLast(elementModifiers, ""))[ CD ]
Line_5 $$ if (className.contains(ELEMENT_SEPARATOR)) -->Line_8 $$ final Collection<String> elementParts = newLinkedList()[ CD ]
Line_5 $$ if (className.contains(ELEMENT_SEPARATOR)) -->Line_9 $$ while (elementsIterator.hasNext()) [ CD ]
Line_8 $$ final Collection<String> elementParts = newLinkedList()-->Line_18 $$ elementParts.add(elementPart)[ FD ]
Line_8 $$ final Collection<String> elementParts = newLinkedList()-->Line_13 $$ elementParts.add(getFirst(elementModifiers, null))[ FD ]
Line_5 $$ if (className.contains(ELEMENT_SEPARATOR)) -->Line_21 $$ result.setElement(ELEMENTS_JOINER.join(elementParts))[ CD ]
Line_11 $$ if (!elementsIterator.hasNext()) -->Line_18 $$ elementParts.add(elementPart)[ CD ]
Line_22 $$ if (className.contains(MODIFIER_SEPARATOR)) -->Line_24 $$ result.setBlock(getFirst(blockModifiers, ""))[ CD ]
Line_4 $$ final BemState result = new BemState()-->Line_15 $$ result.setModifier(getLast(elementModifiers, ""))[ FD ]
Line_12 $$ final List<String> elementModifiers = newArrayList(MODIFIERS_SPLITTER.split(elementPart))-->Line_15 $$ result.setModifier(getLast(elementModifiers, ""))[ FD ]
Line_22 $$ if (className.contains(MODIFIER_SEPARATOR)) -->Line_23 $$ final Iterable<String> blockModifiers = MODIFIERS_SPLITTER.split(className)[ CD ]
Line_23 $$ final Iterable<String> blockModifiers = MODIFIERS_SPLITTER.split(className)-->Line_25 $$ result.setModifier(getLast(blockModifiers, ""))[ FD ]
Line_5 $$ if (className.contains(ELEMENT_SEPARATOR)) -->Line_22 $$ if (className.contains(MODIFIER_SEPARATOR)) [ CD ]
Line_5 $$ if (className.contains(ELEMENT_SEPARATOR)) -->Line_6 $$ final Iterator<String> elementsIterator = ELEMENTS_SPLITTER.split(className).iterator()[ CD ]
Line_9 $$ while (elementsIterator.hasNext()) -->Line_10 $$ final String elementPart = elementsIterator.next()[ CD ]
Line_5 $$ if (className.contains(ELEMENT_SEPARATOR)) -->Line_7 $$ result.setBlock(elementsIterator.next())[ CD ]
Line_10 $$ final String elementPart = elementsIterator.next()-->Line_12 $$ final List<String> elementModifiers = newArrayList(MODIFIERS_SPLITTER.split(elementPart))[ FD ]
Line_11 $$ if (!elementsIterator.hasNext()) -->Line_13 $$ elementParts.add(getFirst(elementModifiers, null))[ CD ]
Line_4 $$ final BemState result = new BemState()-->Line_21 $$ result.setElement(ELEMENTS_JOINER.join(elementParts))[ FD ]
Line_6 $$ final Iterator<String> elementsIterator = ELEMENTS_SPLITTER.split(className).iterator()-->Line_7 $$ result.setBlock(elementsIterator.next())[ FD ]
Line_6 $$ final Iterator<String> elementsIterator = ELEMENTS_SPLITTER.split(className).iterator()-->Line_11 $$ if (!elementsIterator.hasNext()) [ FD ]
Line_8 $$ final Collection<String> elementParts = newLinkedList()-->Line_21 $$ result.setElement(ELEMENTS_JOINER.join(elementParts))[ FD ]
Line_6 $$ final Iterator<String> elementsIterator = ELEMENTS_SPLITTER.split(className).iterator()-->Line_9 $$ while (elementsIterator.hasNext()) [ FD ]
Line_10 $$ final String elementPart = elementsIterator.next()-->Line_18 $$ elementParts.add(elementPart)[ FD ]
Line_6 $$ final Iterator<String> elementsIterator = ELEMENTS_SPLITTER.split(className).iterator()-->Line_10 $$ final String elementPart = elementsIterator.next()[ FD ]
Line_11 $$ if (!elementsIterator.hasNext()) -->Line_12 $$ final List<String> elementModifiers = newArrayList(MODIFIERS_SPLITTER.split(elementPart))[ CD ]
Line_12 $$ final List<String> elementModifiers = newArrayList(MODIFIERS_SPLITTER.split(elementPart))-->Line_13 $$ elementParts.add(getFirst(elementModifiers, null))[ FD ]
Line_4 $$ final BemState result = new BemState()-->Line_25 $$ result.setModifier(getLast(blockModifiers, ""))[ FD ]
Line_12 $$ final List<String> elementModifiers = newArrayList(MODIFIERS_SPLITTER.split(elementPart))-->Line_14 $$ if (elementModifiers.size() > 1) [ FD ]
Line_23 $$ final Iterable<String> blockModifiers = MODIFIERS_SPLITTER.split(className)-->Line_24 $$ result.setBlock(getFirst(blockModifiers, ""))[ FD ]
Line_4 $$ final BemState result = new BemState()-->Line_7 $$ result.setBlock(elementsIterator.next())[ FD ]
Line_11 $$ if (!elementsIterator.hasNext()) -->Line_14 $$ if (elementModifiers.size() > 1) [ CD ]
Line_9 $$ while (elementsIterator.hasNext()) -->Line_11 $$ if (!elementsIterator.hasNext()) [ CD ]
Line_22 $$ if (className.contains(MODIFIER_SEPARATOR)) -->Line_25 $$ result.setModifier(getLast(blockModifiers, ""))[ CD ]
