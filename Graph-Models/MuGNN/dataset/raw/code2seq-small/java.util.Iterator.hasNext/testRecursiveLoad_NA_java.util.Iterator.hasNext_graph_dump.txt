Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_16 $$ while (iter.hasNext()) [ CD ]
Line_46 $$ for (int i = 0; i < 5; i++) -->Line_50 $$ flast = flast.getFoo()[ CD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_37 $$ iter.remove()[ FD ]
Line_3 $$ Session s = openSession()-->Line_53 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_65 $$ iter = list.iterator()-->Line_75 $$ BarProxy bar = (BarProxy) iter.next()[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_4 $$ Transaction txn = s.beginTransaction()[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_34 $$ while (iter.hasNext()) [ CD ]
Line_63 $$ list = s.createQuery("from Foo foo").list()-->Line_64 $$ assertTrue("recursive iter", list.size() == 6)[ FD ]
Line_23 $$ s = openSession()-->Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()[ FD ]
Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()-->Line_58 $$ assertTrue("recursive find", list.size() == 6)[ FD ]
Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()-->Line_74 $$ while (iter.hasNext()) [ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_5 $$ GlarchProxy last = new Glarch()-->Line_7 $$ last.setOrder((short) 0)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_7 $$ last.setOrder((short) 0)[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_64 $$ assertTrue("recursive iter", list.size() == 6)[ CD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_66 $$ while (iter.hasNext()) -->Line_67 $$ assertTrue("polymorphic recursive load", iter.next() instanceof BarProxy)[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_69 $$ txn.commit()[ FD ]
Line_74 $$ while (iter.hasNext()) -->Line_77 $$ iter.remove()[ CD ]
Line_47 $$ FooProxy foo = new Bar()-->Line_48 $$ s.save(foo)[ FD ]
Line_24 $$ txn = s.beginTransaction()-->Line_32 $$ txn = s.beginTransaction()[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_67 $$ assertTrue("polymorphic recursive load", iter.next() instanceof BarProxy)[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_55 $$ iter.next()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_28 $$ assertTrue("recursive iter", list.size() == 5)[ CD ]
Line_57 $$ list = s.createQuery("from Foo foo").list()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_41 $$ s = openSession()-->Line_42 $$ txn = s.beginTransaction()[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_77 $$ iter.remove()[ FD ]
Line_43 $$ FooProxy flast = new Bar()-->Line_50 $$ flast = flast.getFoo()[ FD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_26 $$ assertTrue("recursive iter", list.size() == 6)[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_77 $$ iter.remove()[ FD ]
Line_41 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_31 $$ s = openSession()-->Line_48 $$ s.save(foo)[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_37 $$ iter.remove()[ FD ]
Line_32 $$ txn = s.beginTransaction()-->Line_42 $$ txn = s.beginTransaction()[ FD ]
Line_43 $$ FooProxy flast = new Bar()-->Line_49 $$ flast.setFoo(foo)[ FD ]
Line_32 $$ txn = s.beginTransaction()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_61 $$ s = openSession()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_23 $$ s = openSession()-->Line_42 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_34 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_25 $$ list = s.createQuery("from Glarch g").list()[ CD ]
Line_8 $$ for (int i = 0; i < 5; i++) -->Line_46 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_41 $$ s = openSession()[ CD ]
Line_42 $$ txn = s.beginTransaction()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_71 $$ s = openSession()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ last.setNext(next)[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_8 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_54 $$ while (iter.hasNext()) -->Line_55 $$ iter.next()[ CD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_69 $$ txn.commit()[ CD ]
Line_31 $$ s = openSession()-->Line_40 $$ s.close()[ FD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_25 $$ list = s.createQuery("from Glarch g").list()[ FD ]
Line_74 $$ while (iter.hasNext()) -->Line_76 $$ assertTrue("not null", bar != null)[ CD ]
Line_9 $$ GlarchProxy next = new Glarch()-->Line_10 $$ s.save(next)[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_67 $$ assertTrue("polymorphic recursive load", iter.next() instanceof BarProxy)[ FD ]
Line_62 $$ txn = s.beginTransaction()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_23 $$ s = openSession()-->Line_41 $$ s = openSession()[ FD ]
Line_5 $$ GlarchProxy last = new Glarch()-->Line_11 $$ last.setNext(next)[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_35 $$ GlarchProxy g = (GlarchProxy) iter.next()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_55 $$ iter.next()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_63 $$ list = s.createQuery("from Foo foo").list()[ CD ]
Line_57 $$ list = s.createQuery("from Foo foo").list()-->Line_64 $$ assertTrue("recursive iter", list.size() == 6)[ FD ]
Line_5 $$ GlarchProxy last = new Glarch()-->Line_13 $$ last.setOrder((short) (i + 1))[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_54 $$ while (iter.hasNext()) [ FD ]
Line_42 $$ txn = s.beginTransaction()-->Line_59 $$ txn.commit()[ FD ]
Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_72 $$ txn = s.beginTransaction()[ CD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()[ FD ]
Line_31 $$ s = openSession()-->Line_57 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_24 $$ txn = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s = openSession()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_16 $$ while (iter.hasNext()) [ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_54 $$ while (iter.hasNext()) [ FD ]
Line_41 $$ s = openSession()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_31 $$ s = openSession()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_31 $$ s = openSession()-->Line_44 $$ s.save(flast)[ FD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ s = openSession()[ FD ]
Line_65 $$ iter = list.iterator()-->Line_66 $$ while (iter.hasNext()) [ FD ]
Line_12 $$ last = next-->Line_13 $$ last.setOrder((short) (i + 1))[ FD ]
Line_23 $$ s = openSession()-->Line_40 $$ s.close()[ FD ]
Line_61 $$ s = openSession()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_31 $$ s = openSession()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_32 $$ txn = s.beginTransaction()-->Line_39 $$ txn.commit()[ FD ]
Line_41 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_41 $$ s = openSession()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_72 $$ txn = s.beginTransaction()-->Line_79 $$ txn.commit()[ FD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_26 $$ assertTrue("recursive iter", list.size() == 6)[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_66 $$ while (iter.hasNext()) [ FD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_58 $$ assertTrue("recursive find", list.size() == 6)[ FD ]
Line_3 $$ Session s = openSession()-->Line_71 $$ s = openSession()[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_74 $$ while (iter.hasNext()) [ FD ]
Line_34 $$ while (iter.hasNext()) -->Line_36 $$ assertTrue("not null", g != null)[ CD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_58 $$ assertTrue("recursive find", list.size() == 6)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_23 $$ s = openSession()[ CD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_64 $$ assertTrue("recursive iter", list.size() == 6)[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_66 $$ while (iter.hasNext()) [ FD ]
Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()-->Line_75 $$ BarProxy bar = (BarProxy) iter.next()[ FD ]
Line_5 $$ GlarchProxy last = new Glarch()-->Line_12 $$ last = next[ FD ]
Line_23 $$ s = openSession()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_31 $$ s = openSession()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_31 $$ s = openSession()-->Line_70 $$ s.close()[ FD ]
Line_31 $$ s = openSession()-->Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()[ FD ]
Line_24 $$ txn = s.beginTransaction()-->Line_29 $$ txn.commit()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_60 $$ s.close()[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()[ CD ]
Line_23 $$ s = openSession()-->Line_32 $$ txn = s.beginTransaction()[ FD ]
Line_23 $$ s = openSession()-->Line_70 $$ s.close()[ FD ]
Line_43 $$ FooProxy flast = new Bar()-->Line_45 $$ flast.setString("foo0")[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_42 $$ txn = s.beginTransaction()-->Line_69 $$ txn.commit()[ FD ]
Line_31 $$ s = openSession()-->Line_42 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ for (int i = 0; i < 5; i++) -->Line_10 $$ s.save(next)[ CD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_20 $$ assertTrue("recursive find", list.size() == 6)[ FD ]
Line_23 $$ s = openSession()-->Line_25 $$ list = s.createQuery("from Glarch g").list()[ FD ]
Line_23 $$ s = openSession()-->Line_71 $$ s = openSession()[ FD ]
Line_12 $$ last = next-->Line_11 $$ last.setNext(next)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_6 $$ s.save(last)[ CD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_66 $$ while (iter.hasNext()) [ CD ]
Line_24 $$ txn = s.beginTransaction()-->Line_39 $$ txn.commit()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_42 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_54 $$ while (iter.hasNext()) [ CD ]
Line_31 $$ s = openSession()-->Line_41 $$ s = openSession()[ FD ]
Line_24 $$ txn = s.beginTransaction()-->Line_59 $$ txn.commit()[ FD ]
Line_8 $$ for (int i = 0; i < 5; i++) -->Line_12 $$ last = next[ CD ]
Line_41 $$ s = openSession()-->Line_70 $$ s.close()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()[ CD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_75 $$ BarProxy bar = (BarProxy) iter.next()[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_16 $$ while (iter.hasNext()) -->Line_17 $$ iter.next()[ CD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_39 $$ txn.commit()[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_57 $$ list = s.createQuery("from Foo foo").list()[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_79 $$ txn.commit()[ CD ]
Line_50 $$ flast = flast.getFoo()-->Line_49 $$ flast.setFoo(foo)[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_57 $$ list = s.createQuery("from Foo foo").list()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_23 $$ s = openSession()-->Line_53 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_57 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_67 $$ assertTrue("polymorphic recursive load", iter.next() instanceof BarProxy)[ FD ]
Line_41 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_59 $$ txn.commit()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_43 $$ FooProxy flast = new Bar()[ CD ]
Line_23 $$ s = openSession()-->Line_30 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_70 $$ s.close()[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_74 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ CD ]
Line_71 $$ s = openSession()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_9 $$ GlarchProxy next = new Glarch()-->Line_12 $$ last = next[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_24 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_23 $$ s = openSession()-->Line_44 $$ s.save(flast)[ FD ]
Line_23 $$ s = openSession()-->Line_48 $$ s.save(foo)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_70 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_6 $$ s.save(last)[ FD ]
Line_23 $$ s = openSession()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_80 $$ s.close()[ CD ]
Line_50 $$ flast = flast.getFoo()-->Line_51 $$ flast.setString("foo" + (i + 1))[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_21 $$ txn.commit()[ CD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_29 $$ txn.commit()[ FD ]
Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()-->Line_64 $$ assertTrue("recursive iter", list.size() == 6)[ FD ]
Line_61 $$ s = openSession()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_62 $$ txn = s.beginTransaction()[ CD ]
Line_24 $$ txn = s.beginTransaction()-->Line_79 $$ txn.commit()[ FD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_28 $$ assertTrue("recursive iter", list.size() == 5)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_46 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_42 $$ txn = s.beginTransaction()-->Line_79 $$ txn.commit()[ FD ]
Line_5 $$ GlarchProxy last = new Glarch()-->Line_6 $$ s.save(last)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_39 $$ txn.commit()[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_34 $$ while (iter.hasNext()) [ FD ]
Line_23 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_42 $$ txn = s.beginTransaction()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ for (int i = 0; i < 5; i++) -->Line_9 $$ GlarchProxy next = new Glarch()[ CD ]
Line_61 $$ s = openSession()-->Line_70 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_48 $$ s.save(foo)[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ list = s.createQuery("from Glarch g").list()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_41 $$ s = openSession()-->Line_44 $$ s.save(flast)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_31 $$ s = openSession()[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_29 $$ txn.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ s.close()[ FD ]
Line_31 $$ s = openSession()-->Line_61 $$ s = openSession()[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_55 $$ iter.next()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_44 $$ s.save(flast)[ CD ]
Line_41 $$ s = openSession()-->Line_48 $$ s.save(foo)[ FD ]
Line_74 $$ while (iter.hasNext()) -->Line_75 $$ BarProxy bar = (BarProxy) iter.next()[ CD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_64 $$ assertTrue("recursive iter", list.size() == 6)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_5 $$ GlarchProxy last = new Glarch()[ CD ]
Line_23 $$ s = openSession()-->Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_66 $$ while (iter.hasNext()) [ FD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_28 $$ assertTrue("recursive iter", list.size() == 5)[ FD ]
Line_57 $$ list = s.createQuery("from Foo foo").list()-->Line_58 $$ assertTrue("recursive find", list.size() == 6)[ FD ]
Line_65 $$ iter = list.iterator()-->Line_67 $$ assertTrue("polymorphic recursive load", iter.next() instanceof BarProxy)[ FD ]
Line_53 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_75 $$ BarProxy bar = (BarProxy) iter.next()[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_77 $$ iter.remove()[ FD ]
Line_23 $$ s = openSession()-->Line_24 $$ txn = s.beginTransaction()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_71 $$ s = openSession()[ CD ]
Line_41 $$ s = openSession()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_61 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()-->Line_77 $$ iter.remove()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_32 $$ txn = s.beginTransaction()[ CD ]
Line_32 $$ txn = s.beginTransaction()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()[ FD ]
Line_41 $$ s = openSession()-->Line_57 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_31 $$ s = openSession()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_8 $$ for (int i = 0; i < 5; i++) -->Line_13 $$ last.setOrder((short) (i + 1))[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_19 $$ List list = s.createQuery("from Glarch g").list()[ CD ]
Line_62 $$ txn = s.beginTransaction()-->Line_79 $$ txn.commit()[ FD ]
Line_46 $$ for (int i = 0; i < 5; i++) -->Line_47 $$ FooProxy foo = new Bar()[ CD ]
Line_24 $$ txn = s.beginTransaction()-->Line_42 $$ txn = s.beginTransaction()[ FD ]
Line_41 $$ s = openSession()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_31 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_46 $$ for (int i = 0; i < 5; i++) -->Line_51 $$ flast.setString("foo" + (i + 1))[ CD ]
Line_41 $$ s = openSession()-->Line_53 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_62 $$ txn = s.beginTransaction()-->Line_69 $$ txn.commit()[ FD ]
Line_31 $$ s = openSession()-->Line_71 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_19 $$ List list = s.createQuery("from Glarch g").list()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_53 $$ iter = s.createQuery("from Foo foo").iterate()[ CD ]
Line_31 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_65 $$ iter = list.iterator()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_47 $$ FooProxy foo = new Bar()-->Line_49 $$ flast.setFoo(foo)[ FD ]
Line_65 $$ iter = list.iterator()-->Line_74 $$ while (iter.hasNext()) [ FD ]
Line_32 $$ txn = s.beginTransaction()-->Line_59 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_44 $$ s.save(flast)[ FD ]
Line_65 $$ iter = list.iterator()-->Line_77 $$ iter.remove()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_17 $$ iter.next()[ FD ]
Line_23 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_54 $$ while (iter.hasNext()) [ FD ]
Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()-->Line_28 $$ assertTrue("recursive iter", list.size() == 5)[ FD ]
Line_71 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_45 $$ flast.setString("foo0")[ CD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_53 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_61 $$ s = openSession()-->Line_71 $$ s = openSession()[ FD ]
Line_31 $$ s = openSession()-->Line_32 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_32 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_26 $$ assertTrue("recursive iter", list.size() == 6)[ CD ]
Line_3 $$ Session s = openSession()-->Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()[ FD ]
Line_32 $$ txn = s.beginTransaction()-->Line_69 $$ txn.commit()[ FD ]
Line_34 $$ while (iter.hasNext()) -->Line_37 $$ iter.remove()[ CD ]
Line_61 $$ s = openSession()-->Line_73 $$ iter = s.createQuery("from Foo foo order by foo.string asc").iterate()[ FD ]
Line_23 $$ s = openSession()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_40 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_53 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_65 $$ iter = list.iterator()[ CD ]
Line_24 $$ txn = s.beginTransaction()-->Line_69 $$ txn.commit()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_58 $$ assertTrue("recursive find", list.size() == 6)[ CD ]
Line_34 $$ while (iter.hasNext()) -->Line_35 $$ GlarchProxy g = (GlarchProxy) iter.next()[ CD ]
Line_23 $$ s = openSession()-->Line_60 $$ s.close()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_75 $$ BarProxy bar = (BarProxy) iter.next()[ FD ]
Line_31 $$ s = openSession()-->Line_53 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_79 $$ txn.commit()[ FD ]
Line_32 $$ txn = s.beginTransaction()-->Line_79 $$ txn.commit()[ FD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()[ FD ]
Line_33 $$ iter = s.createQuery("from Glarch g order by g.order asc").iterate()-->Line_35 $$ GlarchProxy g = (GlarchProxy) iter.next()[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_21 $$ txn.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.save(next)[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_20 $$ assertTrue("recursive find", list.size() == 6)[ CD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_42 $$ txn = s.beginTransaction()[ CD ]
Line_43 $$ FooProxy flast = new Bar()-->Line_51 $$ flast.setString("foo" + (i + 1))[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_30 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s.close()[ FD ]
Line_46 $$ for (int i = 0; i < 5; i++) -->Line_48 $$ s.save(foo)[ CD ]
Line_27 $$ list = s.createQuery("from Glarch g where g.next is not null").list()-->Line_57 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_23 $$ s = openSession()-->Line_57 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_59 $$ txn.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ txn = s.beginTransaction()[ FD ]
Line_43 $$ FooProxy flast = new Bar()-->Line_44 $$ s.save(flast)[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_24 $$ txn = s.beginTransaction()-->Line_62 $$ txn = s.beginTransaction()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_24 $$ txn = s.beginTransaction()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_74 $$ while (iter.hasNext()) [ CD ]
Line_46 $$ for (int i = 0; i < 5; i++) -->Line_49 $$ flast.setFoo(foo)[ CD ]
Line_23 $$ s = openSession()-->Line_31 $$ s = openSession()[ FD ]
Line_19 $$ List list = s.createQuery("from Glarch g").list()-->Line_57 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_57 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_25 $$ list = s.createQuery("from Glarch g").list()-->Line_63 $$ list = s.createQuery("from Foo foo").list()[ FD ]
Line_9 $$ GlarchProxy next = new Glarch()-->Line_11 $$ last.setNext(next)[ FD ]
Line_63 $$ list = s.createQuery("from Foo foo").list()-->Line_65 $$ iter = list.iterator()[ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_22 $$ s.close()[ CD ]
Line_41 $$ s = openSession()-->Line_71 $$ s = openSession()[ FD ]
Line_23 $$ s = openSession()-->Line_72 $$ txn = s.beginTransaction()[ FD ]
Line_15 $$ Iterator iter = s.createQuery("from Glarch g").iterate()-->Line_74 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testRecursiveLoad() throws Exception -->Line_61 $$ s = openSession()[ CD ]
