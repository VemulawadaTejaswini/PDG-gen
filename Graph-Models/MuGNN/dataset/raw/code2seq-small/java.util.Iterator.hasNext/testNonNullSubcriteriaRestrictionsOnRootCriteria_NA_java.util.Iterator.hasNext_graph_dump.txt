Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_4 $$ s.getTransaction().begin()[ CD ]
Line_12 $$ Order o = (Order) it.next()-->Line_14 $$ assertEquals(1, o.getLines().size())[ FD ]
Line_9 $$ List orders = rootCriteria.list()-->Line_10 $$ assertEquals(2, orders.size())[ FD ]
Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_12 $$ Order o = (Order) it.next()[ CD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_6 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN)[ CD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class)[ CD ]
Line_12 $$ Order o = (Order) it.next()-->Line_13 $$ if (order1.getOrderId() == o.getOrderId()) [ FD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_24 $$ s.close()[ CD ]
Line_13 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_15 $$ assertEquals("3000", o.getLines().iterator().next().getArticleId())[ CD ]
Line_12 $$ Order o = (Order) it.next()-->Line_18 $$ assertEquals("3000", o.getLines().iterator().next().getArticleId())[ FD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_9 $$ List orders = rootCriteria.list()[ CD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_23 $$ s.getTransaction().commit()[ CD ]
Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class)-->Line_8 $$ assertSame(rootCriteria, rootCriteria.add(Restrictions.eq("ol.articleId", "3000")))[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s.close()[ FD ]
Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class)-->Line_7 $$ assertNotSame(rootCriteria, subCriteria)[ FD ]
Line_16 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_20 $$ fail("unknown order")[ CD ]
Line_9 $$ List orders = rootCriteria.list()-->Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_7 $$ assertNotSame(rootCriteria, subCriteria)[ CD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_8 $$ assertSame(rootCriteria, rootCriteria.add(Restrictions.eq("ol.articleId", "3000")))[ CD ]
Line_12 $$ Order o = (Order) it.next()-->Line_16 $$ if (order3.getOrderId() == o.getOrderId()) [ FD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_3 $$ Session s = openSession()[ CD ]
Line_6 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN)-->Line_7 $$ assertNotSame(rootCriteria, subCriteria)[ FD ]
Line_13 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_16 $$ if (order3.getOrderId() == o.getOrderId()) [ CD ]
Line_13 $$ if (order1.getOrderId() == o.getOrderId()) -->Line_14 $$ assertEquals(1, o.getLines().size())[ CD ]
Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_12 $$ Order o = (Order) it.next()[ FD ]
Line_12 $$ Order o = (Order) it.next()-->Line_15 $$ assertEquals("3000", o.getLines().iterator().next().getArticleId())[ FD ]
Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class)-->Line_9 $$ List orders = rootCriteria.list()[ FD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) [ CD ]
Line_16 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_18 $$ assertEquals("3000", o.getLines().iterator().next().getArticleId())[ CD ]
Line_2 $$ public void testNonNullSubcriteriaRestrictionsOnRootCriteria() -->Line_10 $$ assertEquals(2, orders.size())[ CD ]
Line_3 $$ Session s = openSession()-->Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class)[ FD ]
Line_12 $$ Order o = (Order) it.next()-->Line_17 $$ assertEquals(1, o.getLines().size())[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.getTransaction().begin()[ FD ]
Line_11 $$ for (Iterator it = orders.iterator(); it.hasNext(); ) -->Line_13 $$ if (order1.getOrderId() == o.getOrderId()) [ CD ]
Line_5 $$ Criteria rootCriteria = s.createCriteria(Order.class)-->Line_6 $$ Criteria subCriteria = rootCriteria.createCriteria("orderLines", "ol", JoinFragment.LEFT_OUTER_JOIN)[ FD ]
Line_16 $$ if (order3.getOrderId() == o.getOrderId()) -->Line_17 $$ assertEquals(1, o.getLines().size())[ CD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s.getTransaction().commit()[ FD ]
