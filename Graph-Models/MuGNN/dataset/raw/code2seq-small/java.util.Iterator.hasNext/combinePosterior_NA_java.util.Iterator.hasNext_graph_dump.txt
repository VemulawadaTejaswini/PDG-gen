Line_4 $$ final Iterator<E> deletedIterator = posterior.getList(ListType.DELETED).iterator()-->Line_24 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null[ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_15 $$ deletedProcesser.process(ui.trashed)[ FD ]
Line_3 $$ final Iterator<E> createdIterator = posterior.getList(ListType.CREATED).iterator()-->Line_5 $$ E c = createdIterator.hasNext() ? createdIterator.next() : null[ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_4 $$ final Iterator<E> deletedIterator = posterior.getList(ListType.DELETED).iterator()[ FD ]
Line_12 $$ if (cmp > 0) -->Line_24 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null[ CD ]
Line_5 $$ E c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())[ FD ]
Line_7 $$ for (; c != null || d != null; ) -->Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())[ CD ]
Line_12 $$ if (cmp > 0) -->Line_17 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null[ CD ]
Line_14 $$ if (deletedProcesser != null) -->Line_15 $$ deletedProcesser.process(ui.trashed)[ CD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_7 $$ for (; c != null || d != null; ) [ CD ]
Line_12 $$ if (cmp > 0) -->Line_23 $$ c = createdIterator.hasNext() ? createdIterator.next() : null[ CD ]
Line_23 $$ c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())[ FD ]
Line_12 $$ if (cmp > 0) -->Line_19 $$ final UndoInfo<E> ui = modify(d, c)[ CD ]
Line_17 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_13 $$ final UndoInfo<E> ui = delete(d)[ FD ]
Line_9 $$ if (cmp < 0) -->Line_10 $$ create(c)[ CD ]
Line_6 $$ E d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_19 $$ final UndoInfo<E> ui = modify(d, c)[ FD ]
Line_4 $$ final Iterator<E> deletedIterator = posterior.getList(ListType.DELETED).iterator()-->Line_6 $$ E d = deletedIterator.hasNext() ? deletedIterator.next() : null[ FD ]
Line_11 $$ c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_19 $$ final UndoInfo<E> ui = modify(d, c)[ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_6 $$ E d = deletedIterator.hasNext() ? deletedIterator.next() : null[ CD ]
Line_9 $$ if (cmp < 0) -->Line_11 $$ c = createdIterator.hasNext() ? createdIterator.next() : null[ CD ]
Line_23 $$ c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_19 $$ final UndoInfo<E> ui = modify(d, c)[ FD ]
Line_11 $$ c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_10 $$ create(c)[ FD ]
Line_24 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_19 $$ final UndoInfo<E> ui = modify(d, c)[ FD ]
Line_17 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_19 $$ final UndoInfo<E> ui = modify(d, c)[ FD ]
Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())-->Line_9 $$ if (cmp < 0) [ FD ]
Line_9 $$ if (cmp < 0) -->Line_12 $$ if (cmp > 0) [ CD ]
Line_5 $$ E c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_23 $$ c = createdIterator.hasNext() ? createdIterator.next() : null[ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_3 $$ final Iterator<E> createdIterator = posterior.getList(ListType.CREATED).iterator()[ FD ]
Line_6 $$ E d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_17 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null[ FD ]
Line_11 $$ c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())[ FD ]
Line_3 $$ final Iterator<E> createdIterator = posterior.getList(ListType.CREATED).iterator()-->Line_23 $$ c = createdIterator.hasNext() ? createdIterator.next() : null[ FD ]
Line_24 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_13 $$ final UndoInfo<E> ui = delete(d)[ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_3 $$ final Iterator<E> createdIterator = posterior.getList(ListType.CREATED).iterator()[ CD ]
Line_4 $$ final Iterator<E> deletedIterator = posterior.getList(ListType.DELETED).iterator()-->Line_17 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null[ FD ]
Line_6 $$ E d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_24 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null[ FD ]
Line_12 $$ if (cmp > 0) -->Line_13 $$ final UndoInfo<E> ui = delete(d)[ CD ]
Line_24 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())[ FD ]
Line_5 $$ E c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_10 $$ create(c)[ FD ]
Line_5 $$ E c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_19 $$ final UndoInfo<E> ui = modify(d, c)[ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_5 $$ E c = createdIterator.hasNext() ? createdIterator.next() : null[ CD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_14 $$ if (deletedProcesser != null) [ FD ]
Line_17 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_24 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null[ FD ]
Line_6 $$ E d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())[ FD ]
Line_12 $$ if (cmp > 0) -->Line_14 $$ if (deletedProcesser != null) [ CD ]
Line_12 $$ if (cmp > 0) -->Line_20 $$ if (deletedProcesser != null) [ CD ]
Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())-->Line_12 $$ if (cmp > 0) [ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_21 $$ deletedProcesser.process(ui.trashed)[ FD ]
Line_7 $$ for (; c != null || d != null; ) -->Line_9 $$ if (cmp < 0) [ CD ]
Line_5 $$ E c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_11 $$ c = createdIterator.hasNext() ? createdIterator.next() : null[ FD ]
Line_11 $$ c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_23 $$ c = createdIterator.hasNext() ? createdIterator.next() : null[ FD ]
Line_17 $$ d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_8 $$ final int cmp = c == null ? 1 : d == null ? -1 : c.compareTo(d.getKey())[ FD ]
Line_23 $$ c = createdIterator.hasNext() ? createdIterator.next() : null-->Line_10 $$ create(c)[ FD ]
Line_3 $$ final Iterator<E> createdIterator = posterior.getList(ListType.CREATED).iterator()-->Line_11 $$ c = createdIterator.hasNext() ? createdIterator.next() : null[ FD ]
Line_20 $$ if (deletedProcesser != null) -->Line_21 $$ deletedProcesser.process(ui.trashed)[ CD ]
Line_6 $$ E d = deletedIterator.hasNext() ? deletedIterator.next() : null-->Line_13 $$ final UndoInfo<E> ui = delete(d)[ FD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_4 $$ final Iterator<E> deletedIterator = posterior.getList(ListType.DELETED).iterator()[ CD ]
Line_2 $$ public void combinePosterior(final Diff<K, E> posterior, final Processor<E> deletedProcesser) -->Line_20 $$ if (deletedProcesser != null) [ FD ]
