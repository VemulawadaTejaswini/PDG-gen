Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_11 $$ builder.field(FieldStrings._VERSION, docVersion)[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_21 $$ while (fieldIter.hasNext()) [ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_12 $$ builder.field(FieldStrings.FOUND, isExists())[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_25 $$ return builder[ CD ]
Line_20 $$ Iterator<String> fieldIter = theFields.iterator()-->Line_22 $$ buildField(builder, spare, theFields, fieldIter)[ FD ]
Line_8 $$ if (!isArtificial()) -->Line_9 $$ builder.field(FieldStrings._ID, id)[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_13 $$ builder.field(FieldStrings.TOOK, tookInMillis)[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_13 $$ builder.field(FieldStrings.TOOK, tookInMillis)[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_14 $$ if (!isExists()) [ CD ]
Line_18 $$ final CharsRefBuilder spare = new CharsRefBuilder()-->Line_22 $$ buildField(builder, spare, theFields, fieldIter)[ FD ]
Line_21 $$ while (fieldIter.hasNext()) -->Line_22 $$ buildField(builder, spare, theFields, fieldIter)[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_12 $$ builder.field(FieldStrings.FOUND, isExists())[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_8 $$ if (!isArtificial()) [ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_9 $$ builder.field(FieldStrings._ID, id)[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_7 $$ builder.field(FieldStrings._TYPE, type)[ CD ]
Line_19 $$ Fields theFields = getFields()-->Line_20 $$ Iterator<String> fieldIter = theFields.iterator()[ FD ]
Line_14 $$ if (!isExists()) -->Line_15 $$ return builder[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_6 $$ builder.field(FieldStrings._INDEX, index)[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_24 $$ builder.endObject()[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_17 $$ builder.startObject(FieldStrings.TERM_VECTORS)[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_11 $$ builder.field(FieldStrings._VERSION, docVersion)[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_7 $$ builder.field(FieldStrings._TYPE, type)[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_22 $$ buildField(builder, spare, theFields, fieldIter)[ FD ]
Line_19 $$ Fields theFields = getFields()-->Line_22 $$ buildField(builder, spare, theFields, fieldIter)[ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_17 $$ builder.startObject(FieldStrings.TERM_VECTORS)[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_20 $$ Iterator<String> fieldIter = theFields.iterator()[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_6 $$ builder.field(FieldStrings._INDEX, index)[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_19 $$ Fields theFields = getFields()[ CD ]
Line_20 $$ Iterator<String> fieldIter = theFields.iterator()-->Line_21 $$ while (fieldIter.hasNext()) [ FD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_18 $$ final CharsRefBuilder spare = new CharsRefBuilder()[ CD ]
Line_2 $$ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws IOException -->Line_24 $$ builder.endObject()[ FD ]
