Line_7 $$ StringBundler query = new StringBundler()-->Line_8 $$ query.append("SELECT COUNT(*) AS COUNT_VALUE FROM ShoppingItem ")[ FD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_22 $$ query.append("ShoppingItem.smallImage = ?")[ FD ]
Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_30 $$ qPos.add(true)[ FD ]
Line_32 $$ Iterator<Long> itr = q.iterate()-->Line_34 $$ Long count = itr.next()[ FD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_12 $$ query.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(categoryId)[ FD ]
Line_4 $$ Session session = null-->Line_43 $$ closeSession(session)[ FD ]
Line_13 $$ for (int i = 0; i < categoryIds.length; i++) -->Line_14 $$ query.append("ShoppingItem.categoryId = ? ")[ CD ]
Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_31 $$ qPos.add(true)[ FD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_21 $$ query.append("ShoppingItem.featured = ? AND ")[ FD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_16 $$ query.append("OR ")[ FD ]
Line_13 $$ for (int i = 0; i < categoryIds.length; i++) -->Line_15 $$ if ((i + 1) < categoryIds.length) [ CD ]
Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(query.toString())-->Line_24 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_15 $$ if ((i + 1) < categoryIds.length) -->Line_16 $$ query.append("OR ")[ CD ]
Line_11 $$ if (ArrayUtil.isNotEmpty(categoryIds)) -->Line_12 $$ query.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_11 $$ if (ArrayUtil.isNotEmpty(categoryIds)) -->Line_19 $$ query.append(") AND ")[ CD ]
Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_26 $$ qPos.add(groupId)[ FD ]
Line_32 $$ Iterator<Long> itr = q.iterate()-->Line_33 $$ if (itr.hasNext()) [ FD ]
Line_34 $$ Long count = itr.next()-->Line_35 $$ if (count != null) [ FD ]
Line_35 $$ if (count != null) -->Line_36 $$ return count.intValue()[ CD ]
Line_4 $$ Session session = null-->Line_6 $$ session = openSession()[ FD ]
Line_33 $$ if (itr.hasNext()) -->Line_35 $$ if (count != null) [ CD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_9 $$ query.append("WHERE ")[ FD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_19 $$ query.append(") AND ")[ FD ]
Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(query.toString())-->Line_32 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_6 $$ session = openSession()-->Line_43 $$ closeSession(session)[ FD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(query.toString())[ FD ]
Line_33 $$ if (itr.hasNext()) -->Line_34 $$ Long count = itr.next()[ CD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_10 $$ query.append("ShoppingItem.groupId = ? AND (")[ FD ]
Line_7 $$ StringBundler query = new StringBundler()-->Line_14 $$ query.append("ShoppingItem.categoryId = ? ")[ FD ]
Line_6 $$ session = openSession()-->Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(query.toString())[ FD ]
Line_11 $$ if (ArrayUtil.isNotEmpty(categoryIds)) -->Line_13 $$ for (int i = 0; i < categoryIds.length; i++) [ CD ]
Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(query.toString())-->Line_25 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_27 $$ for (long categoryId : categoryIds) -->Line_28 $$ qPos.add(categoryId)[ FD ]
Line_4 $$ Session session = null-->Line_23 $$ SQLQuery q = session.createSynchronizedSQLQuery(query.toString())[ FD ]
Line_34 $$ Long count = itr.next()-->Line_36 $$ return count.intValue()[ FD ]
