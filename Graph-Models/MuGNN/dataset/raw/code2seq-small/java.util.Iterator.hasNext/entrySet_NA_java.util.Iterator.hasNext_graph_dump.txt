Line_8 $$ final Iterator<Entry<String, AtomicReference<Values>>> delegate = methods.entrySet().iterator()-->Line_18 $$ final Entry<String, AtomicReference<Values>> next = delegate.next()[ FD ]
Line_9 $$ return new Iterator<Entry<String, Values>>() -->Line_18 $$ final Entry<String, AtomicReference<Values>> next = delegate.next()[ CD ]
Line_4 $$ return new AbstractSet<Entry<String, Values>>() -->Line_47 $$ return methods.size()[ CD ]
Line_4 $$ return new AbstractSet<Entry<String, Values>>() -->Line_8 $$ final Iterator<Entry<String, AtomicReference<Values>>> delegate = methods.entrySet().iterator()[ CD ]
Line_4 $$ return new AbstractSet<Entry<String, Values>>() -->Line_9 $$ return new Iterator<Entry<String, Values>>() [ CD ]
Line_19 $$ return new Entry<String, Values>() -->Line_23 $$ return next.getKey()[ CD ]
Line_18 $$ final Entry<String, AtomicReference<Values>> next = delegate.next()-->Line_23 $$ return next.getKey()[ FD ]
Line_18 $$ final Entry<String, AtomicReference<Values>> next = delegate.next()-->Line_28 $$ return next.getValue().get()[ FD ]
Line_9 $$ return new Iterator<Entry<String, Values>>() -->Line_13 $$ return delegate.hasNext()[ CD ]
Line_8 $$ final Iterator<Entry<String, AtomicReference<Values>>> delegate = methods.entrySet().iterator()-->Line_13 $$ return delegate.hasNext()[ FD ]
Line_19 $$ return new Entry<String, Values>() -->Line_28 $$ return next.getValue().get()[ CD ]
Line_9 $$ return new Iterator<Entry<String, Values>>() -->Line_19 $$ return new Entry<String, Values>() [ CD ]
