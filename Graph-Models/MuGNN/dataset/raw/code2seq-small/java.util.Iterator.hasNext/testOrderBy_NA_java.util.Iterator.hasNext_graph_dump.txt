Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()-->Line_30 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_7 $$ Session sess = openSession()-->Line_19 $$ sess.clear()[ FD ]
Line_7 $$ Session sess = openSession()-->Line_9 $$ sess.persist(s)[ FD ]
Line_2 $$ public void testOrderBy() -->Line_13 $$ assertFalse(Hibernate.isInitialized(s.getSearchResults()))[ CD ]
Line_7 $$ Session sess = openSession()-->Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_17 $$ assertEquals(iter.next(), "jboss.com")[ CD ]
Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()-->Line_30 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_7 $$ Session sess = openSession()-->Line_11 $$ sess.clear()[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_15 $$ assertEquals(iter.next(), "HiA")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_29 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ CD ]
Line_2 $$ public void testOrderBy() -->Line_10 $$ sess.flush()[ CD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_30 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_22 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_29 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_6 $$ s.getSearchResults().add("HiA")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_25 $$ assertEquals(iter.next(), "jboss.com")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()[ CD ]
Line_7 $$ Session sess = openSession()-->Line_10 $$ sess.flush()[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_17 $$ assertEquals(iter.next(), "jboss.com")[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_25 $$ assertEquals(iter.next(), "jboss.com")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_7 $$ Session sess = openSession()[ CD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_33 $$ assertEquals(iter.next(), "jboss.com")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_37 $$ sess.close()[ CD ]
Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()-->Line_21 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()-->Line_29 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_30 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_24 $$ assertEquals(iter.next(), "hibernate.org")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_23 $$ assertEquals(iter.next(), "HiA")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_11 $$ sess.clear()[ CD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_18 $$ assertFalse(iter.hasNext())[ CD ]
Line_2 $$ public void testOrderBy() -->Line_35 $$ sess.delete(s)[ CD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_22 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_5 $$ s.getSearchResults().add("hibernate.org")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_34 $$ assertFalse(iter.hasNext())[ CD ]
Line_2 $$ public void testOrderBy() -->Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()[ CD ]
Line_2 $$ public void testOrderBy() -->Line_31 $$ assertEquals(iter.next(), "HiA")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_3 $$ Search s = new Search("Hibernate")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_8 $$ Transaction tx = sess.beginTransaction()[ CD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_22 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_30 $$ iter = s.getSearchResults().iterator()[ CD ]
Line_2 $$ public void testOrderBy() -->Line_6 $$ s.getSearchResults().add("HiA")[ CD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_4 $$ s.getSearchResults().add("jboss.com")[ FD ]
Line_7 $$ Session sess = openSession()-->Line_8 $$ Transaction tx = sess.beginTransaction()[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_35 $$ sess.delete(s)[ FD ]
Line_30 $$ iter = s.getSearchResults().iterator()-->Line_31 $$ assertEquals(iter.next(), "HiA")[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_31 $$ assertEquals(iter.next(), "HiA")[ FD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_34 $$ assertFalse(iter.hasNext())[ FD ]
Line_7 $$ Session sess = openSession()-->Line_37 $$ sess.close()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_4 $$ s.getSearchResults().add("jboss.com")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_9 $$ sess.persist(s)[ CD ]
Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()-->Line_35 $$ sess.delete(s)[ FD ]
Line_30 $$ iter = s.getSearchResults().iterator()-->Line_34 $$ assertFalse(iter.hasNext())[ FD ]
Line_2 $$ public void testOrderBy() -->Line_14 $$ Iterator iter = s.getSearchResults().iterator()[ CD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_26 $$ assertFalse(iter.hasNext())[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_13 $$ assertFalse(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()-->Line_22 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_5 $$ s.getSearchResults().add("hibernate.org")[ CD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_34 $$ assertFalse(iter.hasNext())[ FD ]
Line_2 $$ public void testOrderBy() -->Line_15 $$ assertEquals(iter.next(), "HiA")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_26 $$ assertFalse(iter.hasNext())[ CD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_14 $$ Iterator iter = s.getSearchResults().iterator()[ FD ]
Line_7 $$ Session sess = openSession()-->Line_27 $$ sess.clear()[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_33 $$ assertEquals(iter.next(), "jboss.com")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_22 $$ iter = s.getSearchResults().iterator()[ CD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_21 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_21 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_8 $$ Transaction tx = sess.beginTransaction()-->Line_36 $$ tx.commit()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_16 $$ assertEquals(iter.next(), "hibernate.org")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_33 $$ assertEquals(iter.next(), "jboss.com")[ CD ]
Line_2 $$ public void testOrderBy() -->Line_24 $$ assertEquals(iter.next(), "hibernate.org")[ CD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_23 $$ assertEquals(iter.next(), "HiA")[ FD ]
Line_7 $$ Session sess = openSession()-->Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()[ FD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_32 $$ assertEquals(iter.next(), "hibernate.org")[ FD ]
Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()-->Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_9 $$ sess.persist(s)[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_29 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_2 $$ public void testOrderBy() -->Line_36 $$ tx.commit()[ CD ]
Line_2 $$ public void testOrderBy() -->Line_27 $$ sess.clear()[ CD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()[ FD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_24 $$ assertEquals(iter.next(), "hibernate.org")[ FD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_14 $$ Iterator iter = s.getSearchResults().iterator()[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_30 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_32 $$ assertEquals(iter.next(), "hibernate.org")[ CD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_30 $$ iter = s.getSearchResults().iterator()[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_32 $$ assertEquals(iter.next(), "hibernate.org")[ FD ]
Line_7 $$ Session sess = openSession()-->Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_18 $$ assertFalse(iter.hasNext())[ FD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_23 $$ assertEquals(iter.next(), "HiA")[ FD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_16 $$ assertEquals(iter.next(), "hibernate.org")[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()[ FD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_35 $$ sess.delete(s)[ FD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_25 $$ assertEquals(iter.next(), "jboss.com")[ FD ]
Line_2 $$ public void testOrderBy() -->Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()[ CD ]
Line_20 $$ s = (Search) sess.createCriteria(Search.class).setFetchMode("searchResults", FetchMode.JOIN).uniqueResult()-->Line_29 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()-->Line_13 $$ assertFalse(Hibernate.isInitialized(s.getSearchResults()))[ FD ]
Line_22 $$ iter = s.getSearchResults().iterator()-->Line_31 $$ assertEquals(iter.next(), "HiA")[ FD ]
Line_7 $$ Session sess = openSession()-->Line_35 $$ sess.delete(s)[ FD ]
Line_2 $$ public void testOrderBy() -->Line_19 $$ sess.clear()[ CD ]
Line_30 $$ iter = s.getSearchResults().iterator()-->Line_32 $$ assertEquals(iter.next(), "hibernate.org")[ FD ]
Line_3 $$ Search s = new Search("Hibernate")-->Line_12 $$ s = (Search) sess.createCriteria(Search.class).uniqueResult()[ FD ]
Line_2 $$ public void testOrderBy() -->Line_21 $$ assertTrue(Hibernate.isInitialized(s.getSearchResults()))[ CD ]
Line_14 $$ Iterator iter = s.getSearchResults().iterator()-->Line_26 $$ assertFalse(iter.hasNext())[ FD ]
Line_30 $$ iter = s.getSearchResults().iterator()-->Line_33 $$ assertEquals(iter.next(), "jboss.com")[ FD ]
Line_28 $$ s = (Search) sess.createQuery("from Search s left join fetch s.searchResults").uniqueResult()-->Line_35 $$ sess.delete(s)[ FD ]
