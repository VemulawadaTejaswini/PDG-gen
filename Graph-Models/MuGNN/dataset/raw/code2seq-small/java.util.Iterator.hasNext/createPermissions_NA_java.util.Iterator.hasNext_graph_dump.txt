Line_4 $$ HashMap<String, PatternInfo> patternMap = qualifyURLPatterns(jbossWebMetaData)-->Line_29 $$ PatternInfo info = patternMap.get(urlPattern)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_132 $$ pc.addToRole(role, wrrep)[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_18 $$ info.addExcludedMethods(httpMethods)[ FD ]
Line_34 $$ if ("*".equals(role)) -->Line_37 $$ mappedRoles.add(role)[ CD ]
Line_55 $$ if (httpMethods != null) -->Line_57 $$ WebUserDataPermission wudp = new WebUserDataPermission(qurl, httpMethods, null)[ CD ]
Line_66 $$ Iterator<Map.Entry<String, Set<String>>> roles = info.getRoleMethods()-->Line_85 $$ if (!roles.hasNext()) [ FD ]
Line_33 $$ for (String role : authRoles) -->Line_34 $$ if ("*".equals(role)) [ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_86 $$ pc.addToUncheckedPolicy(new WebResourcePermission(qurl, (String) null))[ FD ]
Line_55 $$ if (httpMethods != null) -->Line_58 $$ pc.addToExcludedPolicy(wrp)[ CD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_79 $$ String[] missingHttpMethods = info.getMissingMethods()[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_3 $$ JBossWebMetaData jbossWebMetaData = metaData.getMergedJBossWebMetaData()[ FD ]
Line_7 $$ for (SecurityConstraintMetaData secConstraint : secConstraints) -->Line_31 $$ secConstraint.getAuthConstraint().getRoleNames()[ FD ]
Line_118 $$ String roleRef = roleRefMetaData.getRoleLink()-->Line_121 $$ pc.addToRole(roleRef, wrrp)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_4 $$ HashMap<String, PatternInfo> patternMap = qualifyURLPatterns(jbossWebMetaData)[ CD ]
Line_41 $$ if (userDataConstraintMetaData != null && userDataConstraintMetaData.getTransportGuarantee() != null)-->Line_42 $$ info.addTransport(userDataConstraintMetaData.getTransportGuarantee().name(), httpMethods)[ CD ]
Line_20 $$ if (secConstraint.isUnchecked())-->Line_21 $$ info.isMissingAuthConstraint = true[ CD ]
Line_71 $$ httpMethods = methods.toArray(new String[methods.size()])-->Line_97 $$ methods.toArray(httpMethods)[ FD ]
Line_109 $$ Set<String> declaredRoles = jbossWebMetaData.getSecurityRoleNames()-->Line_110 $$ declaredRoles.add(ANY_AUTHENTICATED_USER_ROLE)[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_104 $$ WebUserDataPermission wudpNonNull = new WebUserDataPermission(qurl, "!" + getCommaSeparatedString(httpMethods))[ FD ]
Line_115 $$ SecurityRoleRefsMetaData roleRefsMetaData = servletMetaData.getSecurityRoleRefs()-->Line_116 $$ if (roleRefsMetaData != null) [ FD ]
Line_67 $$ while (roles.hasNext()) -->Line_68 $$ Map.Entry<String, Set<String>> roleMethods = roles.next()[ CD ]
Line_67 $$ while (roles.hasNext()) -->Line_71 $$ httpMethods = methods.toArray(new String[methods.size()])[ CD ]
Line_34 $$ if ("*".equals(role)) -->Line_35 $$ mappedRoles.addAll(jbossWebMetaData.getSecurityRoleNames())[ CD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_88 $$ if (info.isMissingAuthConstraint) [ FD ]
Line_69 $$ String role = roleMethods.getKey()-->Line_72 $$ pc.addToRole(role, new WebResourcePermission(qurl, httpMethods))[ FD ]
Line_67 $$ while (roles.hasNext()) -->Line_70 $$ Set<String> methods = roleMethods.getValue()[ CD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_50 $$ String qurl = info.getQualifiedPattern()[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_75 $$ WebResourcePermission wrpUnchecked = new WebResourcePermission(qurl, "!" + getCommaSeparatedString(httpMethods))[ FD ]
Line_113 $$ Set<String> unrefRoles = new HashSet<String>(declaredRoles)-->Line_122 $$ unrefRoles.remove(roleName)[ FD ]
Line_7 $$ for (SecurityConstraintMetaData secConstraint : secConstraints) -->Line_32 $$ List<String> authRoles = secConstraint.getAuthConstraint().getRoleNames()[ FD ]
Line_71 $$ httpMethods = methods.toArray(new String[methods.size()])-->Line_104 $$ WebUserDataPermission wudpNonNull = new WebUserDataPermission(qurl, "!" + getCommaSeparatedString(httpMethods))[ FD ]
Line_55 $$ if (httpMethods != null) -->Line_56 $$ WebResourcePermission wrp = new WebResourcePermission(qurl, httpMethods)[ CD ]
Line_12 $$ for (WebResourceCollectionMetaData resourceCollectionMetaData : resourceCollectionsMetaData) -->Line_14 $$ List<String> urlPatterns = resourceCollectionMetaData.getUrlPatterns()[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_59 $$ pc.addToExcludedPolicy(wudp)[ FD ]
Line_7 $$ for (SecurityConstraintMetaData secConstraint : secConstraints) -->Line_9 $$ UserDataConstraintMetaData userDataConstraintMetaData = secConstraint.getUserDataConstraint()[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_71 $$ httpMethods = methods.toArray(new String[methods.size()])[ FD ]
Line_3 $$ JBossWebMetaData jbossWebMetaData = metaData.getMergedJBossWebMetaData()-->Line_111 $$ JBossServletsMetaData servletsMetaData = jbossWebMetaData.getServlets()[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_42 $$ info.addTransport(userDataConstraintMetaData.getTransportGuarantee().name(), httpMethods)[ FD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_51 $$ if (info.isOverridden) [ FD ]
Line_126 $$ WebRoleRefPermission unrefP = new WebRoleRefPermission(servletName, unrefRole)-->Line_127 $$ pc.addToRole(unrefRole, unrefP)[ FD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_91 $$ Iterator<Map.Entry<String, Set<String>>> transportConstraints = info.getTransportMethods()[ FD ]
Line_91 $$ Iterator<Map.Entry<String, Set<String>>> transportConstraints = info.getTransportMethods()-->Line_93 $$ Map.Entry<String, Set<String>> transportMethods = transportConstraints.next()[ FD ]
Line_91 $$ Iterator<Map.Entry<String, Set<String>>> transportConstraints = info.getTransportMethods()-->Line_92 $$ while (transportConstraints.hasNext()) [ FD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_95 $$ Set<String> methods = transportMethods.getValue()[ CD ]
Line_96 $$ httpMethods = new String[methods.size()]-->Line_97 $$ methods.toArray(httpMethods)[ FD ]
Line_12 $$ for (WebResourceCollectionMetaData resourceCollectionMetaData : resourceCollectionsMetaData) -->Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_111 $$ JBossServletsMetaData servletsMetaData = jbossWebMetaData.getServlets()[ CD ]
Line_62 $$ WebUserDataPermission wudp1 = new WebUserDataPermission(qurl, excludedString)-->Line_64 $$ pc.addToUncheckedPolicy(wudp1)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_110 $$ declaredRoles.add(ANY_AUTHENTICATED_USER_ROLE)[ CD ]
Line_70 $$ Set<String> methods = roleMethods.getValue()-->Line_96 $$ httpMethods = new String[methods.size()][ FD ]
Line_55 $$ if (httpMethods != null) -->Line_59 $$ pc.addToExcludedPolicy(wudp)[ CD ]
Line_3 $$ JBossWebMetaData jbossWebMetaData = metaData.getMergedJBossWebMetaData()-->Line_35 $$ mappedRoles.addAll(jbossWebMetaData.getSecurityRoleNames())[ FD ]
Line_55 $$ if (httpMethods != null) -->Line_61 $$ WebResourcePermission wrp1 = new WebResourcePermission(qurl, excludedString)[ CD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_99 $$ pc.addToUncheckedPolicy(wudp)[ FD ]
Line_67 $$ while (roles.hasNext()) -->Line_73 $$ final int NUMBER_OF_HTTP_METHODS = 7[ CD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_63 $$ pc.addToUncheckedPolicy(wrp1)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_72 $$ pc.addToRole(role, new WebResourcePermission(qurl, httpMethods))[ FD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_81 $$ roles = info.getRoleMethods()[ FD ]
Line_69 $$ String role = roleMethods.getKey()-->Line_132 $$ pc.addToRole(role, wrrep)[ FD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_100 $$ if ("NONE".equals(transport)) [ CD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_97 $$ methods.toArray(httpMethods)[ CD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_93 $$ Map.Entry<String, Set<String>> transportMethods = transportConstraints.next()[ CD ]
Line_96 $$ httpMethods = new String[methods.size()]-->Line_104 $$ WebUserDataPermission wudpNonNull = new WebUserDataPermission(qurl, "!" + getCommaSeparatedString(httpMethods))[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_127 $$ pc.addToRole(unrefRole, unrefP)[ FD ]
Line_30 $$ HashSet<String> mappedRoles = new HashSet<String>()-->Line_37 $$ mappedRoles.add(role)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_6 $$ if (secConstraints != null) [ CD ]
Line_67 $$ while (roles.hasNext()) -->Line_74 $$ if (httpMethods != null && httpMethods.length != NUMBER_OF_HTTP_METHODS) [ CD ]
Line_119 $$ String roleName = roleRefMetaData.getRoleName()-->Line_122 $$ unrefRoles.remove(roleName)[ FD ]
Line_15 $$ for (String urlPattern : urlPatterns) -->Line_29 $$ PatternInfo info = patternMap.get(urlPattern)[ FD ]
Line_93 $$ Map.Entry<String, Set<String>> transportMethods = transportConstraints.next()-->Line_95 $$ Set<String> methods = transportMethods.getValue()[ FD ]
Line_55 $$ if (httpMethods != null) -->Line_60 $$ String excludedString = "!" + getCommaSeparatedString(httpMethods)[ CD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_60 $$ String excludedString = "!" + getCommaSeparatedString(httpMethods)[ FD ]
Line_85 $$ if (!roles.hasNext()) -->Line_86 $$ pc.addToUncheckedPolicy(new WebResourcePermission(qurl, (String) null))[ CD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_121 $$ pc.addToRole(roleRef, wrrp)[ FD ]
Line_5 $$ List<SecurityConstraintMetaData> secConstraints = jbossWebMetaData.getSecurityConstraints()-->Line_6 $$ if (secConstraints != null) [ FD ]
Line_66 $$ Iterator<Map.Entry<String, Set<String>>> roles = info.getRoleMethods()-->Line_68 $$ Map.Entry<String, Set<String>> roleMethods = roles.next()[ FD ]
Line_75 $$ WebResourcePermission wrpUnchecked = new WebResourcePermission(qurl, "!" + getCommaSeparatedString(httpMethods))-->Line_76 $$ pc.addToUncheckedPolicy(wrpUnchecked)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_102 $$ pc.addToUncheckedPolicy(wudp1)[ FD ]
Line_82 $$ if (length > 0 && !roles.hasNext()) -->Line_84 $$ pc.addToUncheckedPolicy(wrp)[ CD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_42 $$ info.addTransport(userDataConstraintMetaData.getTransportGuarantee().name(), httpMethods)[ FD ]
Line_9 $$ UserDataConstraintMetaData userDataConstraintMetaData = secConstraint.getUserDataConstraint()-->Line_41 $$ if (userDataConstraintMetaData != null && userDataConstraintMetaData.getTransportGuarantee() != null)[ FD ]
Line_10 $$ if (resourceCollectionsMetaData != null) -->Line_11 $$ if (secConstraint.isExcluded() || secConstraint.isUnchecked()) [ CD ]
Line_95 $$ Set<String> methods = transportMethods.getValue()-->Line_97 $$ methods.toArray(httpMethods)[ FD ]
Line_3 $$ JBossWebMetaData jbossWebMetaData = metaData.getMergedJBossWebMetaData()-->Line_109 $$ Set<String> declaredRoles = jbossWebMetaData.getSecurityRoleNames()[ FD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_99 $$ pc.addToUncheckedPolicy(wudp)[ CD ]
Line_17 $$ if (secConstraint.isExcluded()) -->Line_18 $$ info.addExcludedMethods(httpMethods)[ CD ]
Line_88 $$ if (info.isMissingAuthConstraint) -->Line_89 $$ pc.addToUncheckedPolicy(new WebResourcePermission(qurl, (String) null))[ CD ]
Line_98 $$ WebUserDataPermission wudp = new WebUserDataPermission(qurl, httpMethods, transport)-->Line_99 $$ pc.addToUncheckedPolicy(wudp)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_89 $$ pc.addToUncheckedPolicy(new WebResourcePermission(qurl, (String) null))[ FD ]
Line_104 $$ WebUserDataPermission wudpNonNull = new WebUserDataPermission(qurl, "!" + getCommaSeparatedString(httpMethods))-->Line_105 $$ pc.addToUncheckedPolicy(wudpNonNull)[ FD ]
Line_68 $$ Map.Entry<String, Set<String>> roleMethods = roles.next()-->Line_69 $$ String role = roleMethods.getKey()[ FD ]
Line_71 $$ httpMethods = methods.toArray(new String[methods.size()])-->Line_75 $$ WebResourcePermission wrpUnchecked = new WebResourcePermission(qurl, "!" + getCommaSeparatedString(httpMethods))[ FD ]
Line_67 $$ while (roles.hasNext()) -->Line_69 $$ String role = roleMethods.getKey()[ CD ]
Line_68 $$ Map.Entry<String, Set<String>> roleMethods = roles.next()-->Line_70 $$ Set<String> methods = roleMethods.getValue()[ FD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_98 $$ WebUserDataPermission wudp = new WebUserDataPermission(qurl, httpMethods, transport)[ CD ]
Line_71 $$ httpMethods = methods.toArray(new String[methods.size()])-->Line_96 $$ httpMethods = new String[methods.size()][ FD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_40 $$ info.addRoles(mappedRoles, httpMethods)[ FD ]
Line_74 $$ if (httpMethods != null && httpMethods.length != NUMBER_OF_HTTP_METHODS) -->Line_75 $$ WebResourcePermission wrpUnchecked = new WebResourcePermission(qurl, "!" + getCommaSeparatedString(httpMethods))[ CD ]
Line_120 $$ WebRoleRefPermission wrrp = new WebRoleRefPermission(servletName, roleName)-->Line_121 $$ pc.addToRole(roleRef, wrrp)[ FD ]
Line_81 $$ roles = info.getRoleMethods()-->Line_82 $$ if (length > 0 && !roles.hasNext()) [ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_55 $$ if (httpMethods != null) [ FD ]
Line_4 $$ HashMap<String, PatternInfo> patternMap = qualifyURLPatterns(jbossWebMetaData)-->Line_16 $$ PatternInfo info = patternMap.get(urlPattern)[ FD ]
Line_66 $$ Iterator<Map.Entry<String, Set<String>>> roles = info.getRoleMethods()-->Line_82 $$ if (length > 0 && !roles.hasNext()) [ FD ]
Line_33 $$ for (String role : authRoles) -->Line_72 $$ pc.addToRole(role, new WebResourcePermission(qurl, httpMethods))[ FD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_94 $$ String transport = transportMethods.getKey()[ CD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_18 $$ info.addExcludedMethods(httpMethods)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_109 $$ Set<String> declaredRoles = jbossWebMetaData.getSecurityRoleNames()[ CD ]
Line_61 $$ WebResourcePermission wrp1 = new WebResourcePermission(qurl, excludedString)-->Line_63 $$ pc.addToUncheckedPolicy(wrp1)[ FD ]
Line_7 $$ for (SecurityConstraintMetaData secConstraint : secConstraints) -->Line_11 $$ if (secConstraint.isExcluded() || secConstraint.isUnchecked()) [ FD ]
Line_101 $$ WebUserDataPermission wudp1 = new WebUserDataPermission(qurl, null)-->Line_102 $$ pc.addToUncheckedPolicy(wudp1)[ FD ]
Line_3 $$ JBossWebMetaData jbossWebMetaData = metaData.getMergedJBossWebMetaData()-->Line_4 $$ HashMap<String, PatternInfo> patternMap = qualifyURLPatterns(jbossWebMetaData)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_3 $$ JBossWebMetaData jbossWebMetaData = metaData.getMergedJBossWebMetaData()[ CD ]
Line_57 $$ WebUserDataPermission wudp = new WebUserDataPermission(qurl, httpMethods, null)-->Line_59 $$ pc.addToExcludedPolicy(wudp)[ FD ]
Line_56 $$ WebResourcePermission wrp = new WebResourcePermission(qurl, httpMethods)-->Line_84 $$ pc.addToUncheckedPolicy(wrp)[ FD ]
Line_55 $$ if (httpMethods != null) -->Line_64 $$ pc.addToUncheckedPolicy(wudp1)[ CD ]
Line_8 $$ WebResourceCollectionsMetaData resourceCollectionsMetaData = secConstraint.getResourceCollections()-->Line_10 $$ if (resourceCollectionsMetaData != null) [ FD ]
Line_9 $$ UserDataConstraintMetaData userDataConstraintMetaData = secConstraint.getUserDataConstraint()-->Line_42 $$ info.addTransport(userDataConstraintMetaData.getTransportGuarantee().name(), httpMethods)[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_40 $$ info.addRoles(mappedRoles, httpMethods)[ FD ]
Line_95 $$ Set<String> methods = transportMethods.getValue()-->Line_96 $$ httpMethods = new String[methods.size()][ FD ]
Line_100 $$ if ("NONE".equals(transport)) -->Line_101 $$ WebUserDataPermission wudp1 = new WebUserDataPermission(qurl, null)[ CD ]
Line_66 $$ Iterator<Map.Entry<String, Set<String>>> roles = info.getRoleMethods()-->Line_81 $$ roles = info.getRoleMethods()[ FD ]
Line_4 $$ HashMap<String, PatternInfo> patternMap = qualifyURLPatterns(jbossWebMetaData)-->Line_49 $$ for (PatternInfo info : patternMap.values()) [ FD ]
Line_30 $$ HashSet<String> mappedRoles = new HashSet<String>()-->Line_40 $$ info.addRoles(mappedRoles, httpMethods)[ FD ]
Line_117 $$ for (SecurityRoleRefMetaData roleRefMetaData : roleRefsMetaData) -->Line_119 $$ String roleName = roleRefMetaData.getRoleName()[ FD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_54 $$ String[] httpMethods = info.getExcludedMethods()[ FD ]
Line_100 $$ if ("NONE".equals(transport)) -->Line_104 $$ WebUserDataPermission wudpNonNull = new WebUserDataPermission(qurl, "!" + getCommaSeparatedString(httpMethods))[ CD ]
Line_92 $$ while (transportConstraints.hasNext()) -->Line_96 $$ httpMethods = new String[methods.size()][ CD ]
Line_125 $$ for (String unrefRole : unrefRoles) -->Line_127 $$ pc.addToRole(unrefRole, unrefP)[ FD ]
Line_70 $$ Set<String> methods = roleMethods.getValue()-->Line_71 $$ httpMethods = methods.toArray(new String[methods.size()])[ FD ]
Line_3 $$ JBossWebMetaData jbossWebMetaData = metaData.getMergedJBossWebMetaData()-->Line_5 $$ List<SecurityConstraintMetaData> secConstraints = jbossWebMetaData.getSecurityConstraints()[ FD ]
Line_70 $$ Set<String> methods = roleMethods.getValue()-->Line_97 $$ methods.toArray(httpMethods)[ FD ]
Line_100 $$ if ("NONE".equals(transport)) -->Line_102 $$ pc.addToUncheckedPolicy(wudp1)[ CD ]
Line_62 $$ WebUserDataPermission wudp1 = new WebUserDataPermission(qurl, excludedString)-->Line_102 $$ pc.addToUncheckedPolicy(wudp1)[ FD ]
Line_74 $$ if (httpMethods != null && httpMethods.length != NUMBER_OF_HTTP_METHODS) -->Line_76 $$ pc.addToUncheckedPolicy(wrpUnchecked)[ CD ]
Line_117 $$ for (SecurityRoleRefMetaData roleRefMetaData : roleRefsMetaData) -->Line_118 $$ String roleRef = roleRefMetaData.getRoleLink()[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_96 $$ httpMethods = new String[methods.size()][ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_105 $$ pc.addToUncheckedPolicy(wudpNonNull)[ FD ]
Line_30 $$ HashSet<String> mappedRoles = new HashSet<String>()-->Line_35 $$ mappedRoles.addAll(jbossWebMetaData.getSecurityRoleNames())[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_58 $$ pc.addToExcludedPolicy(wrp)[ FD ]
Line_131 $$ WebRoleRefPermission wrrep = new WebRoleRefPermission("", role)-->Line_132 $$ pc.addToRole(role, wrrep)[ FD ]
Line_66 $$ Iterator<Map.Entry<String, Set<String>>> roles = info.getRoleMethods()-->Line_67 $$ while (roles.hasNext()) [ FD ]
Line_93 $$ Map.Entry<String, Set<String>> transportMethods = transportConstraints.next()-->Line_94 $$ String transport = transportMethods.getKey()[ FD ]
Line_94 $$ String transport = transportMethods.getKey()-->Line_100 $$ if ("NONE".equals(transport)) [ FD ]
Line_67 $$ while (roles.hasNext()) -->Line_72 $$ pc.addToRole(role, new WebResourcePermission(qurl, httpMethods))[ CD ]
Line_12 $$ for (WebResourceCollectionMetaData resourceCollectionMetaData : resourceCollectionsMetaData) -->Line_26 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()[ FD ]
Line_7 $$ for (SecurityConstraintMetaData secConstraint : secConstraints) -->Line_8 $$ WebResourceCollectionsMetaData resourceCollectionsMetaData = secConstraint.getResourceCollections()[ FD ]
Line_33 $$ for (String role : authRoles) -->Line_132 $$ pc.addToRole(role, wrrep)[ FD ]
Line_56 $$ WebResourcePermission wrp = new WebResourcePermission(qurl, httpMethods)-->Line_58 $$ pc.addToExcludedPolicy(wrp)[ FD ]
Line_13 $$ List<String> httpMethods = resourceCollectionMetaData.getHttpMethods()-->Line_97 $$ methods.toArray(httpMethods)[ FD ]
Line_57 $$ WebUserDataPermission wudp = new WebUserDataPermission(qurl, httpMethods, null)-->Line_99 $$ pc.addToUncheckedPolicy(wudp)[ FD ]
Line_33 $$ for (String role : authRoles) -->Line_37 $$ mappedRoles.add(role)[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_5 $$ List<SecurityConstraintMetaData> secConstraints = jbossWebMetaData.getSecurityConstraints()[ CD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_76 $$ pc.addToUncheckedPolicy(wrpUnchecked)[ FD ]
Line_81 $$ roles = info.getRoleMethods()-->Line_85 $$ if (!roles.hasNext()) [ FD ]
Line_16 $$ PatternInfo info = patternMap.get(urlPattern)-->Line_66 $$ Iterator<Map.Entry<String, Set<String>>> roles = info.getRoleMethods()[ FD ]
Line_82 $$ if (length > 0 && !roles.hasNext()) -->Line_85 $$ if (!roles.hasNext()) [ CD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_64 $$ pc.addToUncheckedPolicy(wudp1)[ FD ]
Line_7 $$ for (SecurityConstraintMetaData secConstraint : secConstraints) -->Line_17 $$ if (secConstraint.isExcluded()) [ FD ]
Line_100 $$ if ("NONE".equals(transport)) -->Line_105 $$ pc.addToUncheckedPolicy(wudpNonNull)[ CD ]
Line_112 $$ for (JBossServletMetaData servletMetaData : servletsMetaData) -->Line_115 $$ SecurityRoleRefsMetaData roleRefsMetaData = servletMetaData.getSecurityRoleRefs()[ FD ]
Line_55 $$ if (httpMethods != null) -->Line_63 $$ pc.addToUncheckedPolicy(wrp1)[ CD ]
Line_12 $$ for (WebResourceCollectionMetaData resourceCollectionMetaData : resourceCollectionsMetaData) -->Line_27 $$ List<String> urlPatterns = resourceCollectionMetaData.getUrlPatterns()[ FD ]
Line_55 $$ if (httpMethods != null) -->Line_62 $$ WebUserDataPermission wudp1 = new WebUserDataPermission(qurl, excludedString)[ CD ]
Line_112 $$ for (JBossServletMetaData servletMetaData : servletsMetaData) -->Line_114 $$ String servletName = servletMetaData.getName()[ FD ]
Line_2 $$ public void createPermissions(WarMetaData metaData, PolicyConfiguration pc) throws PolicyContextException -->Line_84 $$ pc.addToUncheckedPolicy(wrp)[ FD ]
Line_15 $$ for (String urlPattern : urlPatterns) -->Line_16 $$ PatternInfo info = patternMap.get(urlPattern)[ FD ]
Line_7 $$ for (SecurityConstraintMetaData secConstraint : secConstraints) -->Line_20 $$ if (secConstraint.isUnchecked())[ FD ]
