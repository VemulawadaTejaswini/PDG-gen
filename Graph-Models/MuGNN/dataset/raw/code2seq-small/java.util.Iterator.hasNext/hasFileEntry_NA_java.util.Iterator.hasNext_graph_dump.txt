Line_2 $$ private boolean hasFileEntry(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem, IAdminReader adminReader) throws IOException -->Line_9 $$ return false[ CD ]
Line_2 $$ private boolean hasFileEntry(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem, IAdminReader adminReader) throws IOException -->Line_3 $$ for (Iterator it = adminReader.getEntries(directoryObject, cvsFileSystem).iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ private boolean hasFileEntry(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem, IAdminReader adminReader) throws IOException -->Line_3 $$ for (Iterator it = adminReader.getEntries(directoryObject, cvsFileSystem).iterator(); it.hasNext(); ) [ FD ]
Line_3 $$ for (Iterator it = adminReader.getEntries(directoryObject, cvsFileSystem).iterator(); it.hasNext(); ) -->Line_5 $$ if (!entry.isDirectory()) [ CD ]
Line_4 $$ final Entry entry = (Entry) it.next()-->Line_5 $$ if (!entry.isDirectory()) [ FD ]
Line_3 $$ for (Iterator it = adminReader.getEntries(directoryObject, cvsFileSystem).iterator(); it.hasNext(); ) -->Line_4 $$ final Entry entry = (Entry) it.next()[ FD ]
Line_3 $$ for (Iterator it = adminReader.getEntries(directoryObject, cvsFileSystem).iterator(); it.hasNext(); ) -->Line_4 $$ final Entry entry = (Entry) it.next()[ CD ]
Line_5 $$ if (!entry.isDirectory()) -->Line_6 $$ return true[ CD ]
