Line_5 $$ Transaction t = s.beginTransaction()-->Line_38 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_43 $$ s.delete(cars)[ FD ]
Line_12 $$ Map hsv = new HashMap()-->Line_15 $$ hsv.put("description", "Holden Commodore HSV")[ FD ]
Line_16 $$ List models = new ArrayList()-->Line_18 $$ models.add(hsv)[ FD ]
Line_16 $$ List models = new ArrayList()-->Line_29 $$ assertTrue(Hibernate.isInitialized(models))[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_44 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_31 $$ List list = s.createQuery("from Model m").list()[ FD ]
Line_16 $$ List models = new ArrayList()-->Line_17 $$ cars.put("models", models)[ FD ]
Line_16 $$ List models = new ArrayList()-->Line_27 $$ assertFalse(Hibernate.isInitialized(models))[ FD ]
Line_25 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_42 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_4 $$ Session s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_12 $$ Map hsv = new HashMap()-->Line_13 $$ hsv.put("productLine", cars)[ FD ]
Line_8 $$ Map monaro = new HashMap()-->Line_19 $$ models.add(monaro)[ FD ]
Line_26 $$ models = (List) cars.get("models")-->Line_28 $$ assertEquals(models.size(), 2)[ FD ]
Line_26 $$ models = (List) cars.get("models")-->Line_29 $$ assertTrue(Hibernate.isInitialized(models))[ FD ]
Line_23 $$ s = openSession()-->Line_37 $$ s.clear()[ FD ]
Line_4 $$ Session s = openSession()-->Line_42 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_20 $$ s.save("ProductLine", cars)[ FD ]
Line_12 $$ Map hsv = new HashMap()-->Line_18 $$ models.add(hsv)[ FD ]
Line_40 $$ s = openSession()-->Line_42 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_41 $$ t = s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_23 $$ s = openSession()[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ s.clear()[ FD ]
Line_23 $$ s = openSession()-->Line_41 $$ t = s.beginTransaction()[ FD ]
Line_32 $$ for (Iterator i = list.iterator(); i.hasNext(); ) -->Line_33 $$ assertFalse(Hibernate.isInitialized(((Map) i.next()).get("productLine")))[ CD ]
Line_6 $$ Map cars = new HashMap()-->Line_26 $$ models = (List) cars.get("models")[ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_7 $$ cars.put("description", "Cars")[ FD ]
Line_8 $$ Map monaro = new HashMap()-->Line_9 $$ monaro.put("productLine", cars)[ FD ]
Line_23 $$ s = openSession()-->Line_43 $$ s.delete(cars)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_41 $$ t = s.beginTransaction()[ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_17 $$ cars.put("models", models)[ FD ]
Line_41 $$ t = s.beginTransaction()-->Line_44 $$ t.commit()[ FD ]
Line_26 $$ models = (List) cars.get("models")-->Line_27 $$ assertFalse(Hibernate.isInitialized(models))[ FD ]
Line_32 $$ for (Iterator i = list.iterator(); i.hasNext(); ) -->Line_33 $$ assertFalse(Hibernate.isInitialized(((Map) i.next()).get("productLine")))[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_44 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_30 $$ s.clear()[ FD ]
Line_42 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_43 $$ s.delete(cars)[ FD ]
Line_23 $$ s = openSession()-->Line_39 $$ s.close()[ FD ]
Line_35 $$ Map model = (Map) list.get(0)-->Line_36 $$ assertTrue(((List) ((Map) model.get("productLine")).get("models")).contains(model))[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_24 $$ t = s.beginTransaction()[ FD ]
Line_23 $$ s = openSession()-->Line_24 $$ t = s.beginTransaction()[ FD ]
Line_25 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_43 $$ s.delete(cars)[ FD ]
Line_40 $$ s = openSession()-->Line_41 $$ t = s.beginTransaction()[ FD ]
Line_16 $$ List models = new ArrayList()-->Line_28 $$ assertEquals(models.size(), 2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_41 $$ t = s.beginTransaction()[ FD ]
Line_31 $$ List list = s.createQuery("from Model m").list()-->Line_32 $$ for (Iterator i = list.iterator(); i.hasNext(); ) [ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_20 $$ s.save("ProductLine", cars)[ FD ]
Line_25 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()-->Line_26 $$ models = (List) cars.get("models")[ FD ]
Line_24 $$ t = s.beginTransaction()-->Line_38 $$ t.commit()[ FD ]
Line_23 $$ s = openSession()-->Line_40 $$ s = openSession()[ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_9 $$ monaro.put("productLine", cars)[ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_13 $$ hsv.put("productLine", cars)[ FD ]
Line_31 $$ List list = s.createQuery("from Model m").list()-->Line_35 $$ Map model = (Map) list.get(0)[ FD ]
Line_23 $$ s = openSession()-->Line_30 $$ s.clear()[ FD ]
Line_12 $$ Map hsv = new HashMap()-->Line_14 $$ hsv.put("name", "hsv")[ FD ]
Line_4 $$ Session s = openSession()-->Line_24 $$ t = s.beginTransaction()[ FD ]
Line_23 $$ s = openSession()-->Line_31 $$ List list = s.createQuery("from Model m").list()[ FD ]
Line_16 $$ List models = new ArrayList()-->Line_19 $$ models.add(monaro)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_21 $$ t.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_22 $$ s.close()[ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_42 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_8 $$ Map monaro = new HashMap()-->Line_10 $$ monaro.put("name", "monaro")[ FD ]
Line_4 $$ Session s = openSession()-->Line_25 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_23 $$ s = openSession()-->Line_25 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_23 $$ s = openSession()-->Line_42 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
Line_40 $$ s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_8 $$ Map monaro = new HashMap()-->Line_11 $$ monaro.put("description", "Holden Monaro")[ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_43 $$ s.delete(cars)[ FD ]
Line_16 $$ List models = new ArrayList()-->Line_26 $$ models = (List) cars.get("models")[ FD ]
Line_23 $$ s = openSession()-->Line_45 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_40 $$ s = openSession()[ FD ]
Line_40 $$ s = openSession()-->Line_43 $$ s.delete(cars)[ FD ]
Line_6 $$ Map cars = new HashMap()-->Line_25 $$ cars = (Map) s.createQuery("from ProductLine pl order by pl.description").uniqueResult()[ FD ]
