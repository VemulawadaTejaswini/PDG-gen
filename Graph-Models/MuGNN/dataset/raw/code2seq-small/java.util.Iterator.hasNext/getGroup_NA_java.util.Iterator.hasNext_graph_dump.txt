Line_2 $$ private static SortedConfigurableGroup getGroup(Map<String, Node<SortedConfigurableGroup>> tree, String groupId) -->Line_3 $$ Node<SortedConfigurableGroup> node = tree.remove(groupId)[ CD ]
Line_2 $$ private static SortedConfigurableGroup getGroup(Map<String, Node<SortedConfigurableGroup>> tree, String groupId) -->Line_3 $$ Node<SortedConfigurableGroup> node = tree.remove(groupId)[ FD ]
Line_4 $$ if (node.myChildren != null) -->Line_5 $$ for (Iterator<Object> iterator = node.myChildren.iterator(); iterator.hasNext(); iterator.remove()) [ CD ]
Line_2 $$ private static SortedConfigurableGroup getGroup(Map<String, Node<SortedConfigurableGroup>> tree, String groupId) -->Line_4 $$ if (node.myChildren != null) [ CD ]
Line_5 $$ for (Iterator<Object> iterator = node.myChildren.iterator(); iterator.hasNext(); iterator.remove()) -->Line_7 $$ node.myValue.myList.add(getGroup(tree, childId))[ CD ]
Line_6 $$ String childId = (String) iterator.next()-->Line_7 $$ node.myValue.myList.add(getGroup(tree, childId))[ FD ]
Line_2 $$ private static SortedConfigurableGroup getGroup(Map<String, Node<SortedConfigurableGroup>> tree, String groupId) -->Line_7 $$ node.myValue.myList.add(getGroup(tree, childId))[ FD ]
Line_2 $$ private static SortedConfigurableGroup getGroup(Map<String, Node<SortedConfigurableGroup>> tree, String groupId) -->Line_10 $$ return node.myValue[ CD ]
Line_5 $$ for (Iterator<Object> iterator = node.myChildren.iterator(); iterator.hasNext(); iterator.remove()) -->Line_6 $$ String childId = (String) iterator.next()[ FD ]
Line_5 $$ for (Iterator<Object> iterator = node.myChildren.iterator(); iterator.hasNext(); iterator.remove()) -->Line_6 $$ String childId = (String) iterator.next()[ CD ]
