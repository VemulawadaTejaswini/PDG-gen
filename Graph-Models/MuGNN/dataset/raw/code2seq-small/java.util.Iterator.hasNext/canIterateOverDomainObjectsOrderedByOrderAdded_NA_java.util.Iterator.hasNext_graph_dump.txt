Line_6 $$ Iterator<CharSequence> iterator = container.iterator()-->Line_10 $$ assertFalse(iterator.hasNext())[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_5 $$ container.add("c")[ CD ]
Line_6 $$ Iterator<CharSequence> iterator = container.iterator()-->Line_9 $$ assertThat(iterator.next(), equalTo((CharSequence) "c"))[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_10 $$ assertFalse(iterator.hasNext())[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_3 $$ container.add("b")[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_4 $$ container.add("a")[ CD ]
Line_6 $$ Iterator<CharSequence> iterator = container.iterator()-->Line_7 $$ assertThat(iterator.next(), equalTo((CharSequence) "b"))[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_6 $$ Iterator<CharSequence> iterator = container.iterator()[ CD ]
Line_6 $$ Iterator<CharSequence> iterator = container.iterator()-->Line_8 $$ assertThat(iterator.next(), equalTo((CharSequence) "a"))[ FD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_8 $$ assertThat(iterator.next(), equalTo((CharSequence) "a"))[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_9 $$ assertThat(iterator.next(), equalTo((CharSequence) "c"))[ CD ]
Line_2 $$ public void canIterateOverDomainObjectsOrderedByOrderAdded() -->Line_7 $$ assertThat(iterator.next(), equalTo((CharSequence) "b"))[ CD ]
