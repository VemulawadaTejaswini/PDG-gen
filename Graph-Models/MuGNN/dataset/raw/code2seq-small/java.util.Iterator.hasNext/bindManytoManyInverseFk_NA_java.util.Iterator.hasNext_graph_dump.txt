Line_14 $$ mappedByColumns = ((Collection) property.getValue()).getKey().getColumnIterator()-->Line_28 $$ mappedByColumns = key.getColumnIterator()[ FD ]
Line_22 $$ key = join.getKey()-->Line_28 $$ mappedByColumns = key.getColumnIterator()[ FD ]
Line_11 $$ final Property property = referencedEntity.getRecursiveProperty(mappedBy)-->Line_14 $$ mappedByColumns = ((Collection) property.getValue()).getKey().getColumnIterator()[ FD ]
Line_13 $$ if (property.getValue() instanceof Collection) -->Line_18 $$ KeyValue key = null[ CD ]
Line_12 $$ Iterator mappedByColumns-->Line_14 $$ mappedByColumns = ((Collection) property.getValue()).getKey().getColumnIterator()[ FD ]
Line_11 $$ final Property property = referencedEntity.getRecursiveProperty(mappedBy)-->Line_21 $$ if (join.containsProperty(property)) [ FD ]
Line_19 $$ while (joinsIt.hasNext()) -->Line_20 $$ Join join = (Join) joinsIt.next()[ CD ]
Line_21 $$ if (join.containsProperty(property)) -->Line_22 $$ key = join.getKey()[ CD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_35 $$ if (referencedPropertyName != null) [ CD ]
Line_22 $$ key = join.getKey()-->Line_27 $$ key = property.getPersistentClass().getIdentifier()[ FD ]
Line_34 $$ String referencedPropertyName = buildingContext.getMetadataCollector().getPropertyReferencedAssociation("inverse__" + referencedEntity.getEntityName(), mappedBy)-->Line_38 $$ buildingContext.getMetadataCollector().addUniquePropertyReference(referencedEntity.getEntityName(), referencedPropertyName)[ FD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_43 $$ BinderHelper.createSyntheticPropertyReference(columns, referencedEntity, null, value, true, buildingContext)[ CD ]
Line_28 $$ mappedByColumns = key.getColumnIterator()-->Line_30 $$ while (mappedByColumns.hasNext()) [ FD ]
Line_28 $$ mappedByColumns = key.getColumnIterator()-->Line_31 $$ Column column = (Column) mappedByColumns.next()[ FD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_30 $$ while (mappedByColumns.hasNext()) [ CD ]
Line_20 $$ Join join = (Join) joinsIt.next()-->Line_22 $$ key = join.getKey()[ FD ]
Line_30 $$ while (mappedByColumns.hasNext()) -->Line_32 $$ columns[0].linkValueUsingAColumnCopy(column, value)[ CD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_34 $$ String referencedPropertyName = buildingContext.getMetadataCollector().getPropertyReferencedAssociation("inverse__" + referencedEntity.getEntityName(), mappedBy)[ CD ]
Line_14 $$ mappedByColumns = ((Collection) property.getValue()).getKey().getColumnIterator()-->Line_31 $$ Column column = (Column) mappedByColumns.next()[ FD ]
Line_35 $$ if (referencedPropertyName != null) -->Line_38 $$ buildingContext.getMetadataCollector().addUniquePropertyReference(referencedEntity.getEntityName(), referencedPropertyName)[ CD ]
Line_18 $$ KeyValue key = null-->Line_27 $$ key = property.getPersistentClass().getIdentifier()[ FD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_11 $$ final Property property = referencedEntity.getRecursiveProperty(mappedBy)[ CD ]
Line_11 $$ final Property property = referencedEntity.getRecursiveProperty(mappedBy)-->Line_27 $$ key = property.getPersistentClass().getIdentifier()[ FD ]
Line_11 $$ final Property property = referencedEntity.getRecursiveProperty(mappedBy)-->Line_13 $$ if (property.getValue() instanceof Collection) [ FD ]
Line_20 $$ Join join = (Join) joinsIt.next()-->Line_21 $$ if (join.containsProperty(property)) [ FD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_13 $$ if (property.getValue() instanceof Collection) [ CD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_44 $$ TableBinder.bindFk(referencedEntity, null, columns, value, unique, buildingContext)[ CD ]
Line_18 $$ KeyValue key = null-->Line_28 $$ mappedByColumns = key.getColumnIterator()[ FD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_40 $$ ((ManyToOne) value).setReferenceToPrimaryKey(referencedPropertyName == null)[ CD ]
Line_14 $$ mappedByColumns = ((Collection) property.getValue()).getKey().getColumnIterator()-->Line_30 $$ while (mappedByColumns.hasNext()) [ FD ]
Line_9 $$ final String mappedBy = columns[0].getMappedBy()-->Line_11 $$ final Property property = referencedEntity.getRecursiveProperty(mappedBy)[ FD ]
Line_13 $$ if (property.getValue() instanceof Collection) -->Line_28 $$ mappedByColumns = key.getColumnIterator()[ CD ]
Line_9 $$ final String mappedBy = columns[0].getMappedBy()-->Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) [ FD ]
Line_18 $$ KeyValue key = null-->Line_26 $$ if (key == null)[ FD ]
Line_19 $$ while (joinsIt.hasNext()) -->Line_21 $$ if (join.containsProperty(property)) [ CD ]
Line_18 $$ KeyValue key = null-->Line_22 $$ key = join.getKey()[ FD ]
Line_12 $$ Iterator mappedByColumns-->Line_31 $$ Column column = (Column) mappedByColumns.next()[ FD ]
Line_13 $$ if (property.getValue() instanceof Collection) -->Line_26 $$ if (key == null)[ CD ]
Line_9 $$ final String mappedBy = columns[0].getMappedBy()-->Line_34 $$ String referencedPropertyName = buildingContext.getMetadataCollector().getPropertyReferencedAssociation("inverse__" + referencedEntity.getEntityName(), mappedBy)[ FD ]
Line_12 $$ Iterator mappedByColumns-->Line_30 $$ while (mappedByColumns.hasNext()) [ FD ]
Line_13 $$ if (property.getValue() instanceof Collection) -->Line_14 $$ mappedByColumns = ((Collection) property.getValue()).getKey().getColumnIterator()[ CD ]
Line_31 $$ Column column = (Column) mappedByColumns.next()-->Line_32 $$ columns[0].linkValueUsingAColumnCopy(column, value)[ FD ]
Line_27 $$ key = property.getPersistentClass().getIdentifier()-->Line_28 $$ mappedByColumns = key.getColumnIterator()[ FD ]
Line_12 $$ Iterator mappedByColumns-->Line_28 $$ mappedByColumns = key.getColumnIterator()[ FD ]
Line_22 $$ key = join.getKey()-->Line_26 $$ if (key == null)[ FD ]
Line_34 $$ String referencedPropertyName = buildingContext.getMetadataCollector().getPropertyReferencedAssociation("inverse__" + referencedEntity.getEntityName(), mappedBy)-->Line_35 $$ if (referencedPropertyName != null) [ FD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_41 $$ value.createForeignKey()[ CD ]
Line_10 $$ if (StringHelper.isNotEmpty(mappedBy)) -->Line_12 $$ Iterator mappedByColumns[ CD ]
Line_30 $$ while (mappedByColumns.hasNext()) -->Line_31 $$ Column column = (Column) mappedByColumns.next()[ CD ]
Line_26 $$ if (key == null)-->Line_27 $$ key = property.getPersistentClass().getIdentifier()[ CD ]
Line_13 $$ if (property.getValue() instanceof Collection) -->Line_19 $$ while (joinsIt.hasNext()) [ CD ]
