Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_26 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_3 $$ Session session = null[ CD ]
Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_14 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_22 $$ if (queryDefinition.getOwnerUserId() > 0) [ FD ]
Line_31 $$ Iterator<Long> itr = q.iterate()-->Line_33 $$ Long l = itr.next()[ FD ]
Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_31 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_16 $$ qPos.add(groupId)[ FD ]
Line_32 $$ while (itr.hasNext()) -->Line_34 $$ if (l != null) [ CD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_21 $$ qPos.add(groupId)[ FD ]
Line_5 $$ session = openSession()-->Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_12 $$ String sql = updateSQL(sb.toString(), folderId)[ FD ]
Line_12 $$ String sql = updateSQL(sb.toString(), folderId)-->Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(5)-->Line_8 $$ sb.append(getFoldersSQL(COUNT_F_BY_G_F, groupId, queryDefinition, inlineSQLHelper))[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_8 $$ sb.append(getFoldersSQL(COUNT_F_BY_G_F, groupId, queryDefinition, inlineSQLHelper))[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(5)-->Line_10 $$ sb.append(getArticlesSQL(COUNT_A_BY_G_U_F, groupId, queryDefinition, inlineSQLHelper))[ FD ]
Line_34 $$ if (l != null) -->Line_35 $$ count += l.intValue()[ CD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_17 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_18 $$ if (folderId >= 0) -->Line_19 $$ qPos.add(folderId)[ CD ]
Line_27 $$ if (folderId >= 0) -->Line_28 $$ qPos.add(folderId)[ CD ]
Line_3 $$ Session session = null-->Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_31 $$ Iterator<Long> itr = q.iterate()-->Line_32 $$ while (itr.hasNext()) [ FD ]
Line_6 $$ StringBundler sb = new StringBundler(5)-->Line_9 $$ sb.append(") UNION ALL (")[ FD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_19 $$ qPos.add(folderId)[ FD ]
Line_33 $$ Long l = itr.next()-->Line_35 $$ count += l.intValue()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(5)-->Line_11 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_26 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_19 $$ qPos.add(folderId)[ FD ]
Line_32 $$ while (itr.hasNext()) -->Line_33 $$ Long l = itr.next()[ CD ]
Line_5 $$ session = openSession()-->Line_42 $$ closeSession(session)[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_23 $$ qPos.add(queryDefinition.getOwnerUserId())[ FD ]
Line_30 $$ int count = 0-->Line_35 $$ count += l.intValue()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(5)-->Line_12 $$ String sql = updateSQL(sb.toString(), folderId)[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_17 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_3 $$ Session session = null-->Line_5 $$ session = openSession()[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_28 $$ qPos.add(folderId)[ FD ]
Line_3 $$ Session session = null-->Line_42 $$ closeSession(session)[ FD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_21 $$ qPos.add(groupId)[ FD ]
Line_33 $$ Long l = itr.next()-->Line_34 $$ if (l != null) [ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_18 $$ if (folderId >= 0) [ FD ]
Line_22 $$ if (queryDefinition.getOwnerUserId() > 0) -->Line_23 $$ qPos.add(queryDefinition.getOwnerUserId())[ CD ]
Line_22 $$ if (queryDefinition.getOwnerUserId() > 0) -->Line_24 $$ qPos.add(WorkflowConstants.STATUS_IN_TRASH)[ CD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_27 $$ if (folderId >= 0) [ FD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(folderId)[ FD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_23 $$ qPos.add(queryDefinition.getOwnerUserId())[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_10 $$ sb.append(getArticlesSQL(COUNT_A_BY_G_U_F, groupId, queryDefinition, inlineSQLHelper))[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(5)-->Line_7 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ qPos.add(WorkflowConstants.STATUS_IN_TRASH)[ FD ]
Line_2 $$ protected int doCountF_A_ByG_F(long groupId, long folderId, QueryDefinition<?> queryDefinition, boolean inlineSQLHelper) -->Line_16 $$ qPos.add(groupId)[ FD ]
Line_13 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_15 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
