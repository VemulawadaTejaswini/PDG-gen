Line_2 $$ public File getPreprocessedTextFile(File originalTextFile, IWriterFactory writerFactory) throws IOException -->Line_3 $$ final File preprocessedTextFile = FileUtil.createTempFile(TEMP_FILE_PREFIX, null)[ CD ]
Line_2 $$ public File getPreprocessedTextFile(File originalTextFile, IWriterFactory writerFactory) throws IOException -->Line_4 $$ final BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(originalTextFile))[ CD ]
Line_11 $$ FileOutputStream output = new FileOutputStream(preprocessedTextFile)-->Line_16 $$ output.write('\n')[ FD ]
Line_2 $$ public File getPreprocessedTextFile(File originalTextFile, IWriterFactory writerFactory) throws IOException -->Line_5 $$ Collection lines[ CD ]
Line_11 $$ FileOutputStream output = new FileOutputStream(preprocessedTextFile)-->Line_14 $$ output.write((byte[]) each.next())[ FD ]
Line_11 $$ FileOutputStream output = new FileOutputStream(preprocessedTextFile)-->Line_20 $$ output.close()[ FD ]
Line_13 $$ for (Iterator each = lines.iterator(); each.hasNext(); ) -->Line_15 $$ if (each.hasNext()) [ FD ]
Line_5 $$ Collection lines-->Line_7 $$ lines = new LineReader(inputStream).readLines()[ FD ]
Line_2 $$ public File getPreprocessedTextFile(File originalTextFile, IWriterFactory writerFactory) throws IOException -->Line_22 $$ return preprocessedTextFile[ CD ]
Line_15 $$ if (each.hasNext()) -->Line_16 $$ output.write('\n')[ CD ]
Line_13 $$ for (Iterator each = lines.iterator(); each.hasNext(); ) -->Line_15 $$ if (each.hasNext()) [ CD ]
Line_4 $$ final BufferedInputStream inputStream = new BufferedInputStream(new FileInputStream(originalTextFile))-->Line_9 $$ inputStream.close()[ FD ]
Line_2 $$ public File getPreprocessedTextFile(File originalTextFile, IWriterFactory writerFactory) throws IOException -->Line_11 $$ FileOutputStream output = new FileOutputStream(preprocessedTextFile)[ CD ]
Line_13 $$ for (Iterator each = lines.iterator(); each.hasNext(); ) -->Line_14 $$ output.write((byte[]) each.next())[ FD ]
Line_13 $$ for (Iterator each = lines.iterator(); each.hasNext(); ) -->Line_14 $$ output.write((byte[]) each.next())[ CD ]
Line_7 $$ lines = new LineReader(inputStream).readLines()-->Line_13 $$ for (Iterator each = lines.iterator(); each.hasNext(); ) [ FD ]
Line_5 $$ Collection lines-->Line_13 $$ for (Iterator each = lines.iterator(); each.hasNext(); ) [ FD ]
