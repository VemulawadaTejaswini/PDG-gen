Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_26 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_20 $$ Table matchingTable = columnOwner instanceof PersistentClass ? ((PersistentClass) columnOwner).getTable() : ((Join) columnOwner).getTable()[ CD ]
Line_23 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_31 $$ Column refCol = new Column(referencedColumnName)[ CD ]
Line_21 $$ for (Ejb3JoinColumn ejb3Column : columns) -->Line_22 $$ String logicalReferencedColumnName = ejb3Column.getReferencedColumn()[ FD ]
Line_22 $$ String logicalReferencedColumnName = ejb3Column.getReferencedColumn()-->Line_23 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) [ FD ]
Line_20 $$ Table matchingTable = columnOwner instanceof PersistentClass ? ((PersistentClass) columnOwner).getTable() : ((Join) columnOwner).getTable()-->Line_26 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_9 $$ boolean noReferencedColumn = true-->Line_30 $$ noReferencedColumn = false[ FD ]
Line_33 $$ if (!contains) -->Line_34 $$ isFkReferencedColumnName = true[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_9 $$ boolean noReferencedColumn = true[ CD ]
Line_31 $$ Column refCol = new Column(referencedColumnName)-->Line_32 $$ boolean contains = idColumns.contains(refCol)[ FD ]
Line_23 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_32 $$ boolean contains = idColumns.contains(refCol)[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_12 $$ Object columnOwner = BinderHelper.findColumnOwner(referencedEntity, columns[0].getReferencedColumn(), context)[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_12 $$ Object columnOwner = BinderHelper.findColumnOwner(referencedEntity, columns[0].getReferencedColumn(), context)[ CD ]
Line_39 $$ if (isFkReferencedColumnName) -->Line_40 $$ return NON_PK_REFERENCE[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_13 $$ if (columnOwner == null) [ CD ]
Line_10 $$ if (columns.length == 0)-->Line_11 $$ return NO_REFERENCE[ CD ]
Line_32 $$ boolean contains = idColumns.contains(refCol)-->Line_33 $$ if (!contains) [ FD ]
Line_30 $$ noReferencedColumn = false-->Line_39 $$ if (isFkReferencedColumnName) [ FD ]
Line_43 $$ if (idColumns.size() != columns.length) -->Line_46 $$ return PK_REFERENCE[ CD ]
Line_41 $$ if (noReferencedColumn) -->Line_42 $$ return NO_REFERENCE[ CD ]
Line_5 $$ while (idColumnsIt.hasNext()) -->Line_6 $$ idColumns.add((Column) idColumnsIt.next())[ CD ]
Line_4 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()-->Line_5 $$ while (idColumnsIt.hasNext()) [ FD ]
Line_43 $$ if (idColumns.size() != columns.length) -->Line_44 $$ return NON_PK_REFERENCE[ CD ]
Line_3 $$ Set<Column> idColumns = new HashSet<Column>()-->Line_32 $$ boolean contains = idColumns.contains(refCol)[ FD ]
Line_22 $$ String logicalReferencedColumnName = ejb3Column.getReferencedColumn()-->Line_26 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_4 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()[ CD ]
Line_20 $$ Table matchingTable = columnOwner instanceof PersistentClass ? ((PersistentClass) columnOwner).getTable() : ((Join) columnOwner).getTable()-->Line_28 $$ throw new MappingException("Unable to find column with logical name: " + logicalReferencedColumnName + " in " + matchingTable.getName())[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_39 $$ if (isFkReferencedColumnName) [ CD ]
Line_24 $$ String referencedColumnName-->Line_26 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_9 $$ boolean noReferencedColumn = true-->Line_39 $$ if (isFkReferencedColumnName) [ FD ]
Line_3 $$ Set<Column> idColumns = new HashSet<Column>()-->Line_6 $$ idColumns.add((Column) idColumnsIt.next())[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_8 $$ boolean isFkReferencedColumnName = false[ CD ]
Line_23 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_30 $$ noReferencedColumn = false[ CD ]
Line_4 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()-->Line_6 $$ idColumns.add((Column) idColumnsIt.next())[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_5 $$ while (idColumnsIt.hasNext()) [ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_10 $$ if (columns.length == 0)[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_15 $$ throw new MappingException("Unable to find column with logical name: " + columns[0].getReferencedColumn() + " in " + referencedEntity.getTable() + " and its related " + "supertables and secondary tables")[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_3 $$ Set<Column> idColumns = new HashSet<Column>()[ CD ]
Line_3 $$ Set<Column> idColumns = new HashSet<Column>()-->Line_43 $$ if (idColumns.size() != columns.length) [ FD ]
Line_8 $$ boolean isFkReferencedColumnName = false-->Line_34 $$ isFkReferencedColumnName = true[ FD ]
Line_41 $$ if (noReferencedColumn) -->Line_43 $$ if (idColumns.size() != columns.length) [ CD ]
Line_23 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_24 $$ String referencedColumnName[ CD ]
Line_12 $$ Object columnOwner = BinderHelper.findColumnOwner(referencedEntity, columns[0].getReferencedColumn(), context)-->Line_13 $$ if (columnOwner == null) [ FD ]
Line_23 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_33 $$ if (!contains) [ CD ]
Line_39 $$ if (isFkReferencedColumnName) -->Line_41 $$ if (noReferencedColumn) [ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_4 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()[ FD ]
