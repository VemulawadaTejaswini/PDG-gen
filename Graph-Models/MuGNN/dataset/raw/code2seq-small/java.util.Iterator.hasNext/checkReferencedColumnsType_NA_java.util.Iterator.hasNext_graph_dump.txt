Line_28 $$ String referencedColumnName-->Line_30 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_27 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_28 $$ String referencedColumnName[ CD ]
Line_45 $$ if (isFkReferencedColumnName) -->Line_46 $$ return NON_PK_REFERENCE[ CD ]
Line_45 $$ if (isFkReferencedColumnName) -->Line_47 $$ if (noReferencedColumn) [ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_15 $$ Object columnOwner = BinderHelper.findColumnOwner(referencedEntity, columns[0].getReferencedColumn(), context)[ CD ]
Line_10 $$ boolean noReferencedColumn = true-->Line_35 $$ noReferencedColumn = false[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_18 $$ throw new MappingException("Unable to find column with logical name: " + columns[0].getReferencedColumn() + " in " + referencedEntity.getTable() + " and its related " + "supertables and secondary tables")[ FD ]
Line_23 $$ Table matchingTable = columnOwner instanceof PersistentClass ? ((PersistentClass) columnOwner).getTable() : ((Join) columnOwner).getTable()-->Line_33 $$ throw new MappingException("Unable to find column with logical name: " + logicalReferencedColumnName + " in " + matchingTable.getName())[ FD ]
Line_49 $$ if (idColumns.size() != columns.length) -->Line_53 $$ return PK_REFERENCE[ CD ]
Line_27 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_37 $$ boolean contains = idColumns.contains(refCol)[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_5 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_15 $$ Object columnOwner = BinderHelper.findColumnOwner(referencedEntity, columns[0].getReferencedColumn(), context)[ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_6 $$ while (idColumnsIt.hasNext()) [ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_9 $$ boolean isFkReferencedColumnName = false[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_10 $$ boolean noReferencedColumn = true[ CD ]
Line_15 $$ Object columnOwner = BinderHelper.findColumnOwner(referencedEntity, columns[0].getReferencedColumn(), context)-->Line_16 $$ if (columnOwner == null) [ FD ]
Line_27 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_35 $$ noReferencedColumn = false[ CD ]
Line_5 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()-->Line_6 $$ while (idColumnsIt.hasNext()) [ FD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_5 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()[ FD ]
Line_9 $$ boolean isFkReferencedColumnName = false-->Line_39 $$ isFkReferencedColumnName = true[ FD ]
Line_23 $$ Table matchingTable = columnOwner instanceof PersistentClass ? ((PersistentClass) columnOwner).getTable() : ((Join) columnOwner).getTable()-->Line_30 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_47 $$ if (noReferencedColumn) -->Line_48 $$ return NO_REFERENCE[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_16 $$ if (columnOwner == null) [ CD ]
Line_26 $$ String logicalReferencedColumnName = ejb3Column.getReferencedColumn()-->Line_30 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_26 $$ String logicalReferencedColumnName = ejb3Column.getReferencedColumn()-->Line_27 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) [ FD ]
Line_6 $$ while (idColumnsIt.hasNext()) -->Line_7 $$ idColumns.add((Column) idColumnsIt.next())[ CD ]
Line_27 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_36 $$ Column refCol = new Column(referencedColumnName)[ CD ]
Line_37 $$ boolean contains = idColumns.contains(refCol)-->Line_38 $$ if (!contains) [ FD ]
Line_36 $$ Column refCol = new Column(referencedColumnName)-->Line_37 $$ boolean contains = idColumns.contains(refCol)[ FD ]
Line_10 $$ boolean noReferencedColumn = true-->Line_45 $$ if (isFkReferencedColumnName) [ FD ]
Line_35 $$ noReferencedColumn = false-->Line_45 $$ if (isFkReferencedColumnName) [ FD ]
Line_38 $$ if (!contains) -->Line_39 $$ isFkReferencedColumnName = true[ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_45 $$ if (isFkReferencedColumnName) [ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_30 $$ referencedColumnName = context.getMetadataCollector().getPhysicalColumnName(matchingTable, logicalReferencedColumnName)[ FD ]
Line_27 $$ if (StringHelper.isNotEmpty(logicalReferencedColumnName)) -->Line_38 $$ if (!contains) [ CD ]
Line_2 $$ public static int checkReferencedColumnsType(Ejb3JoinColumn[] columns, PersistentClass referencedEntity, MetadataBuildingContext context) -->Line_23 $$ Table matchingTable = columnOwner instanceof PersistentClass ? ((PersistentClass) columnOwner).getTable() : ((Join) columnOwner).getTable()[ CD ]
Line_5 $$ Iterator idColumnsIt = referencedEntity.getKey().getColumnIterator()-->Line_7 $$ idColumns.add((Column) idColumnsIt.next())[ FD ]
Line_47 $$ if (noReferencedColumn) -->Line_49 $$ if (idColumns.size() != columns.length) [ CD ]
