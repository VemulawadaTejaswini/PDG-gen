Line_23 $$ Iterator iter = master1.getIncoming().iterator()-->Line_26 $$ Master m = (Master) iter.next()[ FD ]
Line_22 $$ master1 = (Master) s.load(Master.class, m1id)-->Line_23 $$ Iterator iter = master1.getIncoming().iterator()[ FD ]
Line_22 $$ master1 = (Master) s.load(Master.class, m1id)-->Line_28 $$ assertTrue("outgoing", m.getOutgoing().contains(master1))[ FD ]
Line_16 $$ Serializable m1id = s.getIdentifier(master1)-->Line_22 $$ master1 = (Master) s.load(Master.class, m1id)[ FD ]
Line_4 $$ Session s = openSession()-->Line_29 $$ s.delete(m)[ FD ]
Line_4 $$ Session s = openSession()-->Line_22 $$ master1 = (Master) s.load(Master.class, m1id)[ FD ]
Line_20 $$ s = openSession()-->Line_29 $$ s.delete(m)[ FD ]
Line_26 $$ Master m = (Master) iter.next()-->Line_28 $$ assertTrue("outgoing", m.getOutgoing().contains(master1))[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_15 $$ master3.addOutgoing(master1)[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_17 $$ assertTrue(s.createFilter(master1.getIncoming(), "where this.id > 0 and this.name is not null").list().size() == 2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_11 $$ s.save(master3)[ FD ]
Line_4 $$ Session s = openSession()-->Line_34 $$ s.getTransaction().commit()[ FD ]
Line_24 $$ int i = 0-->Line_30 $$ i++[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_23 $$ Iterator iter = master1.getIncoming().iterator()[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_14 $$ master1.addIncoming(master3)[ FD ]
Line_20 $$ s = openSession()-->Line_22 $$ master1 = (Master) s.load(Master.class, m1id)[ FD ]
Line_20 $$ s = openSession()-->Line_33 $$ s.delete(master1)[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_13 $$ master2.addOutgoing(master1)[ FD ]
Line_20 $$ s = openSession()-->Line_34 $$ s.getTransaction().commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_9 $$ s.save(master1)[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_28 $$ assertTrue("outgoing", m.getOutgoing().contains(master1))[ FD ]
Line_20 $$ s = openSession()-->Line_35 $$ s.close()[ FD ]
Line_7 $$ Master master2 = new Master()-->Line_12 $$ master1.addIncoming(master2)[ FD ]
Line_25 $$ while (iter.hasNext()) -->Line_28 $$ assertTrue("outgoing", m.getOutgoing().contains(master1))[ CD ]
Line_4 $$ Session s = openSession()-->Line_19 $$ s.close()[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_22 $$ master1 = (Master) s.load(Master.class, m1id)[ FD ]
Line_4 $$ Session s = openSession()-->Line_21 $$ s.beginTransaction()[ FD ]
Line_8 $$ Master master3 = new Master()-->Line_11 $$ s.save(master3)[ FD ]
Line_8 $$ Master master3 = new Master()-->Line_14 $$ master1.addIncoming(master3)[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_33 $$ s.delete(master1)[ FD ]
Line_23 $$ Iterator iter = master1.getIncoming().iterator()-->Line_25 $$ while (iter.hasNext()) [ FD ]
Line_25 $$ while (iter.hasNext()) -->Line_30 $$ i++[ CD ]
Line_4 $$ Session s = openSession()-->Line_17 $$ assertTrue(s.createFilter(master1.getIncoming(), "where this.id > 0 and this.name is not null").list().size() == 2)[ FD ]
Line_26 $$ Master m = (Master) iter.next()-->Line_29 $$ s.delete(m)[ FD ]
Line_7 $$ Master master2 = new Master()-->Line_10 $$ s.save(master2)[ FD ]
Line_6 $$ Master master1 = new Master()-->Line_16 $$ Serializable m1id = s.getIdentifier(master1)[ FD ]
Line_8 $$ Master master3 = new Master()-->Line_15 $$ master3.addOutgoing(master1)[ FD ]
Line_25 $$ while (iter.hasNext()) -->Line_26 $$ Master m = (Master) iter.next()[ CD ]
Line_6 $$ Master master1 = new Master()-->Line_12 $$ master1.addIncoming(master2)[ FD ]
Line_22 $$ master1 = (Master) s.load(Master.class, m1id)-->Line_33 $$ s.delete(master1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_33 $$ s.delete(master1)[ FD ]
Line_25 $$ while (iter.hasNext()) -->Line_27 $$ assertTrue("outgoing", m.getOutgoing().size() == 1)[ CD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ s.beginTransaction()[ FD ]
Line_4 $$ Session s = openSession()-->Line_10 $$ s.save(master2)[ FD ]
Line_26 $$ Master m = (Master) iter.next()-->Line_27 $$ assertTrue("outgoing", m.getOutgoing().size() == 1)[ FD ]
Line_25 $$ while (iter.hasNext()) -->Line_29 $$ s.delete(m)[ CD ]
Line_4 $$ Session s = openSession()-->Line_18 $$ s.getTransaction().commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_9 $$ s.save(master1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_20 $$ s = openSession()[ FD ]
Line_4 $$ Session s = openSession()-->Line_16 $$ Serializable m1id = s.getIdentifier(master1)[ FD ]
Line_7 $$ Master master2 = new Master()-->Line_13 $$ master2.addOutgoing(master1)[ FD ]
Line_20 $$ s = openSession()-->Line_21 $$ s.beginTransaction()[ FD ]
