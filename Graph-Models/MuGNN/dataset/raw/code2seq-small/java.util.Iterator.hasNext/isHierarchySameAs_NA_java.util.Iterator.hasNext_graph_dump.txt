Line_22 $$ if (childrenSize != newChildrenSize) -->Line_23 $$ LOG.fatal("Number of children for queue " + newState.getName() + " in newState is " + newChildrenSize + " which is not equal to " + childrenSize + " in the current state.")[ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_7 $$ LOG.info(" current name " + name + " not equal to " + newState.getName())[ FD ]
Line_31 $$ if (!(q.isHierarchySameAs(newq))) -->Line_32 $$ LOG.info(" Queue " + q.getName() + " not equal to " + newq.getName())[ CD ]
Line_15 $$ if (children.size() > 0) -->Line_22 $$ if (childrenSize != newChildrenSize) [ CD ]
Line_11 $$ if (newState.getChildren() != null && newState.getChildren().size() > 0) -->Line_13 $$ return false[ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_3 $$ if (newState == null) [ FD ]
Line_6 $$ if (!(name.equals(newState.getName()))) -->Line_7 $$ LOG.info(" current name " + name + " not equal to " + newState.getName())[ CD ]
Line_3 $$ if (newState == null) -->Line_4 $$ return false[ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_23 $$ LOG.fatal("Number of children for queue " + newState.getName() + " in newState is " + newChildrenSize + " which is not equal to " + childrenSize + " in the current state.")[ FD ]
Line_16 $$ if (newState.getChildren() == null) -->Line_17 $$ LOG.fatal("In the current state, queue " + getName() + " has " + children.size() + " but the new state has none!")[ CD ]
Line_15 $$ if (children.size() > 0) -->Line_27 $$ Iterator<Queue> itr2 = newState.getChildren().iterator()[ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_10 $$ if (children == null || children.size() == 0) [ CD ]
Line_10 $$ if (children == null || children.size() == 0) -->Line_15 $$ if (children.size() > 0) [ CD ]
Line_29 $$ Queue q = itr1.next()-->Line_31 $$ if (!(q.isHierarchySameAs(newq))) [ FD ]
Line_16 $$ if (newState.getChildren() == null) -->Line_18 $$ return false[ CD ]
Line_28 $$ while (itr1.hasNext()) -->Line_30 $$ Queue newq = itr2.next()[ CD ]
Line_28 $$ while (itr1.hasNext()) -->Line_31 $$ if (!(q.isHierarchySameAs(newq))) [ CD ]
Line_27 $$ Iterator<Queue> itr2 = newState.getChildren().iterator()-->Line_30 $$ Queue newq = itr2.next()[ FD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_3 $$ if (newState == null) [ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_6 $$ if (!(name.equals(newState.getName()))) [ CD ]
Line_11 $$ if (newState.getChildren() != null && newState.getChildren().size() > 0) -->Line_12 $$ LOG.info(newState + " has added children in refresh ")[ CD ]
Line_15 $$ if (children.size() > 0) -->Line_21 $$ int newChildrenSize = newState.getChildren().size()[ CD ]
Line_30 $$ Queue newq = itr2.next()-->Line_32 $$ LOG.info(" Queue " + q.getName() + " not equal to " + newq.getName())[ FD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_37 $$ return true[ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_16 $$ if (newState.getChildren() == null) [ FD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_11 $$ if (newState.getChildren() != null && newState.getChildren().size() > 0) [ FD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_21 $$ int newChildrenSize = newState.getChildren().size()[ FD ]
Line_30 $$ Queue newq = itr2.next()-->Line_31 $$ if (!(q.isHierarchySameAs(newq))) [ FD ]
Line_15 $$ if (children.size() > 0) -->Line_16 $$ if (newState.getChildren() == null) [ CD ]
Line_28 $$ while (itr1.hasNext()) -->Line_29 $$ Queue q = itr1.next()[ CD ]
Line_6 $$ if (!(name.equals(newState.getName()))) -->Line_8 $$ return false[ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_27 $$ Iterator<Queue> itr2 = newState.getChildren().iterator()[ FD ]
Line_26 $$ Iterator<Queue> itr1 = children.iterator()-->Line_28 $$ while (itr1.hasNext()) [ FD ]
Line_29 $$ Queue q = itr1.next()-->Line_32 $$ LOG.info(" Queue " + q.getName() + " not equal to " + newq.getName())[ FD ]
Line_26 $$ Iterator<Queue> itr1 = children.iterator()-->Line_29 $$ Queue q = itr1.next()[ FD ]
Line_15 $$ if (children.size() > 0) -->Line_20 $$ int childrenSize = children.size()[ CD ]
Line_31 $$ if (!(q.isHierarchySameAs(newq))) -->Line_33 $$ return false[ CD ]
Line_21 $$ int newChildrenSize = newState.getChildren().size()-->Line_22 $$ if (childrenSize != newChildrenSize) [ FD ]
Line_10 $$ if (children == null || children.size() == 0) -->Line_11 $$ if (newState.getChildren() != null && newState.getChildren().size() > 0) [ CD ]
Line_22 $$ if (childrenSize != newChildrenSize) -->Line_24 $$ return false[ CD ]
Line_15 $$ if (children.size() > 0) -->Line_26 $$ Iterator<Queue> itr1 = children.iterator()[ CD ]
Line_20 $$ int childrenSize = children.size()-->Line_22 $$ if (childrenSize != newChildrenSize) [ FD ]
Line_15 $$ if (children.size() > 0) -->Line_28 $$ while (itr1.hasNext()) [ CD ]
Line_2 $$ boolean isHierarchySameAs(Queue newState) -->Line_6 $$ if (!(name.equals(newState.getName()))) [ FD ]
