Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_15 $$ qPos.add(head)[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_14 $$ qPos.add(nodeId)[ FD ]
Line_18 $$ if (queryDefinition.isIncludeOwner()) -->Line_19 $$ qPos.add(WorkflowConstants.STATUS_IN_TRASH)[ CD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N_H_S, queryDefinition, "WikiPage")-->Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)[ FD ]
Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_11 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_22 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_3 $$ Session session = null-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_7 $$ if (inlineSQLHelper) -->Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)[ CD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_3 $$ Session session = null[ CD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_8 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)[ FD ]
Line_26 $$ if (count != null) -->Line_27 $$ return count.intValue()[ CD ]
Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_22 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_14 $$ qPos.add(nodeId)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N_H_S, queryDefinition, "WikiPage")-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_3 $$ Session session = null-->Line_34 $$ closeSession(session)[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_15 $$ qPos.add(head)[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_17 $$ qPos.add(queryDefinition.getOwnerUserId())[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N_H_S, queryDefinition, "WikiPage")[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_13 $$ qPos.add(groupId)[ FD ]
Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_23 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_25 $$ Long count = itr.next()-->Line_27 $$ return count.intValue()[ FD ]
Line_25 $$ Long count = itr.next()-->Line_26 $$ if (count != null) [ FD ]
Line_3 $$ Session session = null-->Line_5 $$ session = openSession()[ FD ]
Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_13 $$ qPos.add(groupId)[ FD ]
Line_16 $$ if (queryDefinition.getOwnerUserId() > 0) -->Line_17 $$ qPos.add(queryDefinition.getOwnerUserId())[ CD ]
Line_5 $$ session = openSession()-->Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_16 $$ if (queryDefinition.getOwnerUserId() > 0) [ FD ]
Line_23 $$ Iterator<Long> itr = q.iterate()-->Line_24 $$ if (itr.hasNext()) [ FD ]
Line_16 $$ if (queryDefinition.getOwnerUserId() > 0) -->Line_18 $$ if (queryDefinition.isIncludeOwner()) [ CD ]
Line_5 $$ session = openSession()-->Line_34 $$ closeSession(session)[ FD ]
Line_10 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_23 $$ Iterator<Long> itr = q.iterate()-->Line_25 $$ Long count = itr.next()[ FD ]
Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_19 $$ qPos.add(WorkflowConstants.STATUS_IN_TRASH)[ FD ]
Line_12 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_17 $$ qPos.add(queryDefinition.getOwnerUserId())[ FD ]
Line_2 $$ protected int doCountByG_N_H_S(long groupId, long nodeId, boolean head, QueryDefinition<WikiPage> queryDefinition, boolean inlineSQLHelper) -->Line_18 $$ if (queryDefinition.isIncludeOwner()) [ FD ]
Line_24 $$ if (itr.hasNext()) -->Line_26 $$ if (count != null) [ CD ]
Line_24 $$ if (itr.hasNext()) -->Line_25 $$ Long count = itr.next()[ CD ]
