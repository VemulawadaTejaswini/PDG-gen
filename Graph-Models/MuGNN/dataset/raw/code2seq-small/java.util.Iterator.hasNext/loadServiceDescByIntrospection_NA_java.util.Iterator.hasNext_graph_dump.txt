Line_21 $$ if (allowedMethodsStr != null && !"*".equals(allowedMethodsStr)) -->Line_24 $$ while (tokenizer.hasMoreTokens()) [ CD ]
Line_21 $$ if (allowedMethodsStr != null && !"*".equals(allowedMethodsStr)) -->Line_23 $$ StringTokenizer tokenizer = new StringTokenizer(allowedMethodsStr, " ,")[ CD ]
Line_31 $$ for (Iterator iterator = operations.iterator(); iterator.hasNext(); ) -->Line_33 $$ if (operation.getMethod() == null) [ CD ]
Line_15 $$ axisConfig = (AxisServiceConfig) method.invoke(null, null)-->Line_19 $$ if (axisConfig != null) [ FD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_13 $$ Method method = implClass.getDeclaredMethod("getAxisServiceConfig", new Class[] [ FD ]
Line_7 $$ if (Skeleton.class.isAssignableFrom(implClass)) -->Line_9 $$ loadSkeletonOperations()[ CD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_6 $$ this.implClass = implClass[ FD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_30 $$ loadServiceDescByIntrospectionRecursive(implClass)[ FD ]
Line_11 $$ AxisServiceConfig axisConfig = null-->Line_19 $$ if (axisConfig != null) [ FD ]
Line_32 $$ OperationDesc operation = (OperationDesc) iterator.next()-->Line_34 $$ throw new InternalException(Messages.getMessage("badWSDDOperation", operation.getName(), "" + operation.getNumParams()))[ FD ]
Line_22 $$ ArrayList methodList = new ArrayList()-->Line_27 $$ setAllowedMethods(methodList)[ FD ]
Line_11 $$ AxisServiceConfig axisConfig = null-->Line_15 $$ axisConfig = (AxisServiceConfig) method.invoke(null, null)[ FD ]
Line_15 $$ axisConfig = (AxisServiceConfig) method.invoke(null, null)-->Line_20 $$ String allowedMethodsStr = axisConfig.getAllowedMethods()[ FD ]
Line_23 $$ StringTokenizer tokenizer = new StringTokenizer(allowedMethodsStr, " ,")-->Line_24 $$ while (tokenizer.hasMoreTokens()) [ FD ]
Line_21 $$ if (allowedMethodsStr != null && !"*".equals(allowedMethodsStr)) -->Line_27 $$ setAllowedMethods(methodList)[ CD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_7 $$ if (Skeleton.class.isAssignableFrom(implClass)) [ CD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_11 $$ AxisServiceConfig axisConfig = null[ CD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_6 $$ this.implClass = implClass[ CD ]
Line_19 $$ if (axisConfig != null) -->Line_21 $$ if (allowedMethodsStr != null && !"*".equals(allowedMethodsStr)) [ CD ]
Line_24 $$ while (tokenizer.hasMoreTokens()) -->Line_25 $$ methodList.add(tokenizer.nextToken())[ CD ]
Line_19 $$ if (axisConfig != null) -->Line_20 $$ String allowedMethodsStr = axisConfig.getAllowedMethods()[ CD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_37 $$ if ((style == Style.MESSAGE) && operations.size() == 1) [ CD ]
Line_11 $$ AxisServiceConfig axisConfig = null-->Line_20 $$ String allowedMethodsStr = axisConfig.getAllowedMethods()[ FD ]
Line_3 $$ if (introspectionComplete || implClass == null) -->Line_4 $$ return[ CD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_3 $$ if (introspectionComplete || implClass == null) [ CD ]
Line_20 $$ String allowedMethodsStr = axisConfig.getAllowedMethods()-->Line_21 $$ if (allowedMethodsStr != null && !"*".equals(allowedMethodsStr)) [ FD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_19 $$ if (axisConfig != null) [ CD ]
Line_21 $$ if (allowedMethodsStr != null && !"*".equals(allowedMethodsStr)) -->Line_22 $$ ArrayList methodList = new ArrayList()[ CD ]
Line_23 $$ StringTokenizer tokenizer = new StringTokenizer(allowedMethodsStr, " ,")-->Line_25 $$ methodList.add(tokenizer.nextToken())[ FD ]
Line_31 $$ for (Iterator iterator = operations.iterator(); iterator.hasNext(); ) -->Line_32 $$ OperationDesc operation = (OperationDesc) iterator.next()[ FD ]
Line_13 $$ Method method = implClass.getDeclaredMethod("getAxisServiceConfig", new Class[] -->Line_15 $$ axisConfig = (AxisServiceConfig) method.invoke(null, null)[ FD ]
Line_14 $$ if (method != null && Modifier.isStatic(method.getModifiers())) -->Line_15 $$ axisConfig = (AxisServiceConfig) method.invoke(null, null)[ CD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_31 $$ for (Iterator iterator = operations.iterator(); iterator.hasNext(); ) [ CD ]
Line_13 $$ Method method = implClass.getDeclaredMethod("getAxisServiceConfig", new Class[] -->Line_14 $$ if (method != null && Modifier.isStatic(method.getModifiers())) [ FD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_7 $$ if (Skeleton.class.isAssignableFrom(implClass)) [ FD ]
Line_31 $$ for (Iterator iterator = operations.iterator(); iterator.hasNext(); ) -->Line_32 $$ OperationDesc operation = (OperationDesc) iterator.next()[ CD ]
Line_22 $$ ArrayList methodList = new ArrayList()-->Line_25 $$ methodList.add(tokenizer.nextToken())[ FD ]
Line_32 $$ OperationDesc operation = (OperationDesc) iterator.next()-->Line_33 $$ if (operation.getMethod() == null) [ FD ]
Line_2 $$ public void loadServiceDescByIntrospection(Class implClass) -->Line_30 $$ loadServiceDescByIntrospectionRecursive(implClass)[ CD ]
