Line_6 $$ for (PersistentClass entityBinding : metadata.getEntityBindings()) -->Line_7 $$ if (!IdTableHelper.INSTANCE.needsIdTable(entityBinding)) [ FD ]
Line_11 $$ final Table idTable = new Table()-->Line_13 $$ idTable.setComment("Used to hold id values for the " + entityBinding.getEntityName() + " entity")[ FD ]
Line_11 $$ final Table idTable = new Table()-->Line_20 $$ final TT idTableInfo = buildIdTableInfo(entityBinding, idTable, jdbcServices, metadata, context)[ FD ]
Line_15 $$ while (itr.hasNext()) -->Line_17 $$ idTable.addColumn(column.clone())[ CD ]
Line_15 $$ while (itr.hasNext()) -->Line_16 $$ Column column = (Column) itr.next()[ CD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_6 $$ for (PersistentClass entityBinding : metadata.getEntityBindings()) [ FD ]
Line_14 $$ Iterator itr = entityBinding.getTable().getPrimaryKey().getColumnIterator()-->Line_16 $$ Column column = (Column) itr.next()[ FD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_23 $$ finishPreparation(jdbcServices, connectionAccess, metadata, context)[ FD ]
Line_5 $$ final JdbcEnvironment jdbcEnvironment = jdbcServices.getJdbcEnvironment()-->Line_10 $$ final String idTableName = jdbcEnvironment.getQualifiedObjectNameFormatter().format(determineIdTableName(jdbcEnvironment, entityBinding), jdbcEnvironment.getDialect())[ FD ]
Line_16 $$ Column column = (Column) itr.next()-->Line_17 $$ idTable.addColumn(column.clone())[ FD ]
Line_3 $$ final CT context = buildPreparationContext()-->Line_20 $$ final TT idTableInfo = buildIdTableInfo(entityBinding, idTable, jdbcServices, metadata, context)[ FD ]
Line_11 $$ final Table idTable = new Table()-->Line_19 $$ augmentIdTableDefinition(idTable)[ FD ]
Line_6 $$ for (PersistentClass entityBinding : metadata.getEntityBindings()) -->Line_10 $$ final String idTableName = jdbcEnvironment.getQualifiedObjectNameFormatter().format(determineIdTableName(jdbcEnvironment, entityBinding), jdbcEnvironment.getDialect())[ FD ]
Line_20 $$ final TT idTableInfo = buildIdTableInfo(entityBinding, idTable, jdbcServices, metadata, context)-->Line_21 $$ idTableInfoMap.put(entityBinding.getEntityName(), idTableInfo)[ FD ]
Line_14 $$ Iterator itr = entityBinding.getTable().getPrimaryKey().getColumnIterator()-->Line_15 $$ while (itr.hasNext()) [ FD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_20 $$ final TT idTableInfo = buildIdTableInfo(entityBinding, idTable, jdbcServices, metadata, context)[ FD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_5 $$ final JdbcEnvironment jdbcEnvironment = jdbcServices.getJdbcEnvironment()[ CD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_4 $$ initialize(metadata.getMetadataBuildingOptions(), sessionFactoryOptions)[ FD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_3 $$ final CT context = buildPreparationContext()[ CD ]
Line_10 $$ final String idTableName = jdbcEnvironment.getQualifiedObjectNameFormatter().format(determineIdTableName(jdbcEnvironment, entityBinding), jdbcEnvironment.getDialect())-->Line_12 $$ idTable.setName(idTableName)[ FD ]
Line_3 $$ final CT context = buildPreparationContext()-->Line_23 $$ finishPreparation(jdbcServices, connectionAccess, metadata, context)[ FD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_23 $$ finishPreparation(jdbcServices, connectionAccess, metadata, context)[ CD ]
Line_6 $$ for (PersistentClass entityBinding : metadata.getEntityBindings()) -->Line_13 $$ idTable.setComment("Used to hold id values for the " + entityBinding.getEntityName() + " entity")[ FD ]
Line_6 $$ for (PersistentClass entityBinding : metadata.getEntityBindings()) -->Line_20 $$ final TT idTableInfo = buildIdTableInfo(entityBinding, idTable, jdbcServices, metadata, context)[ FD ]
Line_11 $$ final Table idTable = new Table()-->Line_12 $$ idTable.setName(idTableName)[ FD ]
Line_6 $$ for (PersistentClass entityBinding : metadata.getEntityBindings()) -->Line_21 $$ idTableInfoMap.put(entityBinding.getEntityName(), idTableInfo)[ FD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_5 $$ final JdbcEnvironment jdbcEnvironment = jdbcServices.getJdbcEnvironment()[ FD ]
Line_11 $$ final Table idTable = new Table()-->Line_17 $$ idTable.addColumn(column.clone())[ FD ]
Line_6 $$ for (PersistentClass entityBinding : metadata.getEntityBindings()) -->Line_14 $$ Iterator itr = entityBinding.getTable().getPrimaryKey().getColumnIterator()[ FD ]
Line_2 $$ public final void prepare(JdbcServices jdbcServices, JdbcConnectionAccess connectionAccess, MetadataImplementor metadata, SessionFactoryOptions sessionFactoryOptions) -->Line_4 $$ initialize(metadata.getMetadataBuildingOptions(), sessionFactoryOptions)[ CD ]
