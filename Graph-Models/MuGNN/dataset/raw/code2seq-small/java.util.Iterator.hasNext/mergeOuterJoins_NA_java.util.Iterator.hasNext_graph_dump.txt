Line_10 $$ final OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_12 $$ oj.addManyToManyJoin(outerjoin, (QueryableCollection) last.getJoinable())[ FD ]
Line_7 $$ Iterator iter = associations.iterator()-->Line_10 $$ final OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()[ FD ]
Line_9 $$ while (iter.hasNext()) -->Line_11 $$ if (last != null && last.isManyToManyWith(oj)) [ CD ]
Line_6 $$ JoinFragment outerjoin = getDialect().createOuterJoinFragment()-->Line_12 $$ oj.addManyToManyJoin(outerjoin, (QueryableCollection) last.getJoinable())[ FD ]
Line_10 $$ final OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_16 $$ last = oj[ FD ]
Line_9 $$ while (iter.hasNext()) -->Line_10 $$ final OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()[ CD ]
Line_8 $$ OuterJoinableAssociation last = null-->Line_12 $$ oj.addManyToManyJoin(outerjoin, (QueryableCollection) last.getJoinable())[ FD ]
Line_11 $$ if (last != null && last.isManyToManyWith(oj)) -->Line_12 $$ oj.addManyToManyJoin(outerjoin, (QueryableCollection) last.getJoinable())[ CD ]
Line_6 $$ JoinFragment outerjoin = getDialect().createOuterJoinFragment()-->Line_14 $$ oj.addJoins(outerjoin)[ FD ]
Line_8 $$ OuterJoinableAssociation last = null-->Line_18 $$ last = null[ FD ]
Line_10 $$ final OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_14 $$ oj.addJoins(outerjoin)[ FD ]
Line_11 $$ if (last != null && last.isManyToManyWith(oj)) -->Line_14 $$ oj.addJoins(outerjoin)[ CD ]
Line_8 $$ OuterJoinableAssociation last = null-->Line_16 $$ last = oj[ FD ]
Line_7 $$ Iterator iter = associations.iterator()-->Line_9 $$ while (iter.hasNext()) [ FD ]
Line_8 $$ OuterJoinableAssociation last = null-->Line_11 $$ if (last != null && last.isManyToManyWith(oj)) [ FD ]
Line_9 $$ while (iter.hasNext()) -->Line_16 $$ last = oj[ CD ]
Line_10 $$ final OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_11 $$ if (last != null && last.isManyToManyWith(oj)) [ FD ]
Line_16 $$ last = oj-->Line_12 $$ oj.addManyToManyJoin(outerjoin, (QueryableCollection) last.getJoinable())[ FD ]
Line_16 $$ last = oj-->Line_18 $$ last = null[ FD ]
Line_16 $$ last = oj-->Line_11 $$ if (last != null && last.isManyToManyWith(oj)) [ FD ]
