Line_20 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_21 $$ Assert.assertTrue(iter.next().getVal() <= mode)[ FD ]
Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_17 $$ iter.remove()[ FD ]
Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ FD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ CD ]
Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_15 $$ int item = iter.next().getVal()[ CD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_3 $$ ArrayList<Integer> list = getRandomList(100, 123)[ CD ]
Line_8 $$ long sum = 0-->Line_10 $$ sum += iter.next().getVal()[ FD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_13 $$ LOG.info("Removing all elements above " + mode)[ CD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_20 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ CD ]
Line_4 $$ LightWeightGSet<TestElement, TestElement> set = new LightWeightGSet<TestElement, TestElement>(16)-->Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ FD ]
Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_16 $$ if (item > mode) [ CD ]
Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_20 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ FD ]
Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_15 $$ int item = iter.next().getVal()[ FD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_12 $$ long mode = sum / set.size()[ CD ]
Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_20 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ FD ]
Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_15 $$ int item = iter.next().getVal()[ FD ]
Line_16 $$ if (item > mode) -->Line_17 $$ iter.remove()[ CD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ CD ]
Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_21 $$ Assert.assertTrue(iter.next().getVal() <= mode)[ FD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_8 $$ long sum = 0[ CD ]
Line_4 $$ LightWeightGSet<TestElement, TestElement> set = new LightWeightGSet<TestElement, TestElement>(16)-->Line_20 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ FD ]
Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_21 $$ Assert.assertTrue(iter.next().getVal() <= mode)[ FD ]
Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_10 $$ sum += iter.next().getVal()[ CD ]
Line_4 $$ LightWeightGSet<TestElement, TestElement> set = new LightWeightGSet<TestElement, TestElement>(16)-->Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) [ FD ]
Line_4 $$ LightWeightGSet<TestElement, TestElement> set = new LightWeightGSet<TestElement, TestElement>(16)-->Line_12 $$ long mode = sum / set.size()[ FD ]
Line_15 $$ int item = iter.next().getVal()-->Line_16 $$ if (item > mode) [ FD ]
Line_14 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_17 $$ iter.remove()[ FD ]
Line_9 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_10 $$ sum += iter.next().getVal()[ FD ]
Line_12 $$ long mode = sum / set.size()-->Line_16 $$ if (item > mode) [ FD ]
Line_20 $$ for (Iterator<TestElement> iter = set.iterator(); iter.hasNext(); ) -->Line_21 $$ Assert.assertTrue(iter.next().getVal() <= mode)[ CD ]
Line_4 $$ LightWeightGSet<TestElement, TestElement> set = new LightWeightGSet<TestElement, TestElement>(16)-->Line_6 $$ set.put(new TestElement(i))[ FD ]
Line_2 $$ public void testRemoveSomeViaIterator() -->Line_4 $$ LightWeightGSet<TestElement, TestElement> set = new LightWeightGSet<TestElement, TestElement>(16)[ CD ]
