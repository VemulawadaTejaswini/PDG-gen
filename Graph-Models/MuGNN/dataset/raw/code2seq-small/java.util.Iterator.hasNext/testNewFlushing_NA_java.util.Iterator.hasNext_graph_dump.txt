Line_13 $$ boolean found = false-->Line_30 $$ found = true[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_29 $$ if (iter.next().equals("1E1"))[ FD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ CD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_14 $$ while (iter.hasNext()) -->Line_15 $$ if (iter.next().equals("a new value"))[ CD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_53 $$ s.delete(baz)[ CD ]
Line_50 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_27 $$ found = false-->Line_36 $$ found = false[ FD ]
Line_16 $$ found = true-->Line_36 $$ found = false[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_15 $$ if (iter.next().equals("a new value"))[ FD ]
Line_13 $$ boolean found = false-->Line_36 $$ found = false[ FD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_27 $$ found = false-->Line_32 $$ assertTrue(found)[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_33 $$ baz.getStringList().remove("1E1")[ FD ]
Line_42 $$ List newList = new ArrayList()-->Line_43 $$ newList.add("value")[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ CD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_16 $$ found = true-->Line_27 $$ found = false[ FD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_23 $$ baz.getStringList().add("1E1")[ CD ]
Line_37 $$ while (iter.hasNext()) -->Line_38 $$ if (iter.next().equals("1E1"))[ CD ]
Line_5 $$ Baz baz = new Baz()-->Line_6 $$ baz.setDefaults()[ FD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()[ FD ]
Line_13 $$ boolean found = false-->Line_27 $$ found = false[ FD ]
Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_29 $$ if (iter.next().equals("1E1"))-->Line_30 $$ found = true[ CD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_7 $$ s.save(baz)[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_20 $$ s.createQuery("from Baz baz").iterate()[ CD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_22 $$ assertTrue(!iter.hasNext())[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_49 $$ baz.setStringList(newList)[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_24 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_16 $$ found = true-->Line_30 $$ found = true[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_19 $$ baz.setStringArray(null)[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_49 $$ baz.setStringList(newList)[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_19 $$ baz.setStringArray(null)[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_43 $$ newList.add("value")[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_37 $$ while (iter.hasNext()) [ CD ]
Line_45 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_53 $$ s.delete(baz)[ FD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_3 $$ Session s = openSession()-->Line_20 $$ s.createQuery("from Baz baz").iterate()[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_29 $$ if (iter.next().equals("1E1"))[ FD ]
Line_45 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ CD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_28 $$ while (iter.hasNext()) [ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_11 $$ assertTrue(iter.next() == baz)[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_54 $$ txn.commit()[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_8 $$ s.flush()[ CD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_46 $$ baz.setStringList(null)[ FD ]
Line_36 $$ found = false-->Line_41 $$ assertTrue(!found)[ FD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_3 $$ Session s = openSession()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_13 $$ boolean found = false-->Line_32 $$ assertTrue(found)[ FD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ CD ]
Line_16 $$ found = true-->Line_39 $$ found = true[ FD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_38 $$ if (iter.next().equals("1E1"))[ FD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_29 $$ if (iter.next().equals("1E1"))[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_13 $$ boolean found = false[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_25 $$ assertTrue(!iter.hasNext())[ CD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_3 $$ Session s = openSession()-->Line_8 $$ s.flush()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_46 $$ baz.setStringList(null)[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_18 $$ assertTrue(found)[ CD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_28 $$ while (iter.hasNext()) [ CD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_38 $$ if (iter.next().equals("1E1"))[ FD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_22 $$ assertTrue(!iter.hasNext())[ CD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_36 $$ found = false[ CD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_42 $$ List newList = new ArrayList()-->Line_44 $$ baz.setStringList(newList)[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_33 $$ baz.getStringList().remove("1E1")[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ CD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ CD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_24 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_7 $$ s.save(baz)[ FD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_30 $$ found = true-->Line_32 $$ assertTrue(found)[ FD ]
Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_27 $$ found = false[ CD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_16 $$ found = true-->Line_18 $$ assertTrue(found)[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_25 $$ assertTrue(!iter.hasNext())[ FD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_38 $$ if (iter.next().equals("1E1"))[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_41 $$ assertTrue(!found)[ CD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_45 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_11 $$ assertTrue(iter.next() == baz)[ CD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_15 $$ if (iter.next().equals("a new value"))-->Line_16 $$ found = true[ CD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_25 $$ assertTrue(!iter.hasNext())[ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_42 $$ List newList = new ArrayList()-->Line_49 $$ baz.setStringList(newList)[ FD ]
Line_13 $$ boolean found = false-->Line_18 $$ assertTrue(found)[ FD ]
Line_27 $$ found = false-->Line_41 $$ assertTrue(!found)[ FD ]
Line_3 $$ Session s = openSession()-->Line_7 $$ s.save(baz)[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_38 $$ if (iter.next().equals("1E1"))[ FD ]
Line_3 $$ Session s = openSession()-->Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_42 $$ List newList = new ArrayList()[ CD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_29 $$ if (iter.next().equals("1E1"))[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_28 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_55 $$ s.close()[ CD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_28 $$ while (iter.hasNext()) [ FD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_32 $$ assertTrue(found)[ CD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_14 $$ while (iter.hasNext()) [ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_23 $$ baz.getStringList().add("1E1")[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_14 $$ while (iter.hasNext()) [ CD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_29 $$ if (iter.next().equals("1E1"))[ FD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_9 $$ baz.getStringArray()[0] = "a new value"[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_38 $$ if (iter.next().equals("1E1"))[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_25 $$ assertTrue(!iter.hasNext())[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_22 $$ assertTrue(!iter.hasNext())[ FD ]
Line_13 $$ boolean found = false-->Line_41 $$ assertTrue(!found)[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_52 $$ assertTrue(iter.hasNext())[ CD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_38 $$ if (iter.next().equals("1E1"))[ FD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_4 $$ Transaction txn = s.beginTransaction()[ CD ]
Line_30 $$ found = true-->Line_41 $$ assertTrue(!found)[ FD ]
Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_13 $$ boolean found = false-->Line_39 $$ found = true[ FD ]
Line_51 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_9 $$ baz.getStringArray()[0] = "a new value"[ CD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_38 $$ if (iter.next().equals("1E1"))[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_50 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_3 $$ Session s = openSession()-->Line_55 $$ s.close()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_44 $$ baz.setStringList(newList)[ CD ]
Line_16 $$ found = true-->Line_32 $$ assertTrue(found)[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_24 $$ iter = s.createQuery("from Foo foo").iterate()[ CD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_35 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_45 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_47 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_38 $$ if (iter.next().equals("1E1"))-->Line_39 $$ found = true[ CD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_25 $$ assertTrue(!iter.hasNext())[ FD ]
Line_30 $$ found = true-->Line_36 $$ found = false[ FD ]
Line_45 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_50 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_28 $$ while (iter.hasNext()) [ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_24 $$ iter = s.createQuery("from Foo foo").iterate()[ FD ]
Line_16 $$ found = true-->Line_41 $$ assertTrue(!found)[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ CD ]
Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_5 $$ Baz baz = new Baz()-->Line_44 $$ baz.setStringList(newList)[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_5 $$ Baz baz = new Baz()[ CD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_37 $$ while (iter.hasNext()) [ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_14 $$ while (iter.hasNext()) [ FD ]
Line_21 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_22 $$ assertTrue(!iter.hasNext())[ FD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_28 $$ while (iter.hasNext()) [ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_15 $$ if (iter.next().equals("a new value"))[ FD ]
Line_45 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_48 $$ assertTrue(!iter.hasNext())[ FD ]
Line_30 $$ found = true-->Line_39 $$ found = true[ FD ]
Line_4 $$ Transaction txn = s.beginTransaction()-->Line_54 $$ txn.commit()[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()[ CD ]
Line_24 $$ iter = s.createQuery("from Foo foo").iterate()-->Line_26 $$ iter = s.createQuery("select elements(baz.stringList) from Baz baz").iterate()[ FD ]
Line_27 $$ found = false-->Line_39 $$ found = true[ FD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_52 $$ assertTrue(iter.hasNext())[ FD ]
Line_3 $$ Session s = openSession()-->Line_53 $$ s.delete(baz)[ FD ]
Line_36 $$ found = false-->Line_39 $$ found = true[ FD ]
Line_28 $$ while (iter.hasNext()) -->Line_29 $$ if (iter.next().equals("1E1"))[ CD ]
Line_10 $$ Iterator iter = s.createQuery("from Baz baz").iterate()-->Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_39 $$ found = true-->Line_41 $$ assertTrue(!found)[ FD ]
Line_27 $$ found = false-->Line_30 $$ found = true[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_6 $$ baz.setDefaults()[ CD ]
Line_12 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_34 $$ iter = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_13 $$ boolean found = false-->Line_16 $$ found = true[ FD ]
Line_2 $$ public void testNewFlushing() throws Exception -->Line_48 $$ assertTrue(!iter.hasNext())[ CD ]
