Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_29 $$ rs = s.createQuery("select child.id, parent.id, child.long, child, parent.foo from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_24 $$ row = (Object[]) rs.next()-->Line_33 $$ row = (Object[]) l.get(0)[ FD ]
Line_37 $$ s = openSession()-->Line_49 $$ s.close()[ FD ]
Line_29 $$ rs = s.createQuery("select child.id, parent.id, child.long, child, parent.foo from Foo parent, Foo child where parent.foo = child").iterate()-->Line_30 $$ row = (Object[]) rs.next()[ FD ]
Line_4 $$ Session s = openSession()-->Line_38 $$ txn = s.beginTransaction()[ FD ]
Line_13 $$ Iterator rs = null-->Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()-->Line_28 $$ assertTrue(!rs.hasNext())[ FD ]
Line_4 $$ Session s = openSession()-->Line_39 $$ Iterator iter = s.createQuery("select parent, child from Foo parent, Foo child where parent.foo = child and parent.string='a string'").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction txn = s.beginTransaction()[ FD ]
Line_13 $$ Iterator rs = null-->Line_21 $$ assertTrue(!rs.hasNext())[ FD ]
Line_39 $$ Iterator iter = s.createQuery("select parent, child from Foo parent, Foo child where parent.foo = child and parent.string='a string'").iterate()-->Line_42 $$ Object[] pnc = (Object[]) iter.next()[ FD ]
Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_18 $$ row = (Object[]) rs.next()-->Line_33 $$ row = (Object[]) l.get(0)[ FD ]
Line_13 $$ Iterator rs = null-->Line_28 $$ assertTrue(!rs.hasNext())[ FD ]
Line_4 $$ Session s = openSession()-->Line_43 $$ s.delete(pnc[0])[ FD ]
Line_4 $$ Session s = openSession()-->Line_49 $$ s.close()[ FD ]
Line_14 $$ Object[] row = null-->Line_18 $$ row = (Object[]) rs.next()[ FD ]
Line_11 $$ List l = s.createQuery("select parent, child from Foo parent, Foo child where parent.foo = child").list()-->Line_33 $$ row = (Object[]) l.get(0)[ FD ]
Line_29 $$ rs = s.createQuery("select child.id, parent.id, child.long, child, parent.foo from Foo parent, Foo child where parent.foo = child").iterate()-->Line_32 $$ assertTrue(!rs.hasNext())[ FD ]
Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_18 $$ row = (Object[]) rs.next()[ FD ]
Line_6 $$ Foo foo = new Foo()-->Line_34 $$ assertTrue("multi-column find", row[0] == foo && row[1] == foo.getFoo())[ FD ]
Line_14 $$ Object[] row = null-->Line_30 $$ row = (Object[]) rs.next()[ FD ]
Line_6 $$ Foo foo = new Foo()-->Line_25 $$ assertTrue("multi-column id", row[0].equals(foo.getFoo().getKey()))[ FD ]
Line_13 $$ Iterator rs = null-->Line_29 $$ rs = s.createQuery("select child.id, parent.id, child.long, child, parent.foo from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()-->Line_30 $$ row = (Object[]) rs.next()[ FD ]
Line_18 $$ row = (Object[]) rs.next()-->Line_24 $$ row = (Object[]) rs.next()[ FD ]
Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_24 $$ row = (Object[]) rs.next()[ FD ]
Line_4 $$ Session s = openSession()-->Line_29 $$ rs = s.createQuery("select child.id, parent.id, child.long, child, parent.foo from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_6 $$ Foo foo = new Foo()-->Line_27 $$ assertTrue("multi-column property", row[2].equals(foo.getFoo().getLong()))[ FD ]
Line_13 $$ Iterator rs = null-->Line_32 $$ assertTrue(!rs.hasNext())[ FD ]
Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_21 $$ assertTrue(!rs.hasNext())[ FD ]
Line_14 $$ Object[] row = null-->Line_24 $$ row = (Object[]) rs.next()[ FD ]
Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_32 $$ assertTrue(!rs.hasNext())[ FD ]
Line_6 $$ Foo foo = new Foo()-->Line_31 $$ assertTrue(foo.getFoo().getKey().equals(row[0]) && foo.getKey().equals(row[1]) && foo.getFoo().getLong().equals(row[2]) && row[3] == foo.getFoo() && row[3] == row[4])[ FD ]
Line_41 $$ while (iter.hasNext()) -->Line_43 $$ s.delete(pnc[0])[ CD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_35 $$ txn.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_28 $$ assertTrue(!rs.hasNext())[ FD ]
Line_41 $$ while (iter.hasNext()) -->Line_44 $$ s.delete(pnc[1])[ CD ]
Line_4 $$ Session s = openSession()-->Line_44 $$ s.delete(pnc[1])[ FD ]
Line_13 $$ Iterator rs = null-->Line_24 $$ row = (Object[]) rs.next()[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_38 $$ txn = s.beginTransaction()[ FD ]
Line_13 $$ Iterator rs = null-->Line_18 $$ row = (Object[]) rs.next()[ FD ]
Line_41 $$ while (iter.hasNext()) -->Line_45 $$ deletions++[ CD ]
Line_4 $$ Session s = openSession()-->Line_9 $$ s.save(foo1)[ FD ]
Line_40 $$ int deletions = 0-->Line_45 $$ deletions++[ FD ]
Line_24 $$ row = (Object[]) rs.next()-->Line_30 $$ row = (Object[]) rs.next()[ FD ]
Line_13 $$ Iterator rs = null-->Line_30 $$ row = (Object[]) rs.next()[ FD ]
Line_8 $$ Foo foo1 = new Foo()-->Line_10 $$ foo.setFoo(foo1)[ FD ]
Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()-->Line_24 $$ row = (Object[]) rs.next()[ FD ]
Line_14 $$ Object[] row = null-->Line_33 $$ row = (Object[]) l.get(0)[ FD ]
Line_13 $$ Iterator rs = null-->Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_5 $$ Transaction txn = s.beginTransaction()-->Line_48 $$ txn.commit()[ FD ]
Line_39 $$ Iterator iter = s.createQuery("select parent, child from Foo parent, Foo child where parent.foo = child and parent.string='a string'").iterate()-->Line_41 $$ while (iter.hasNext()) [ FD ]
Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()-->Line_29 $$ rs = s.createQuery("select child.id, parent.id, child.long, child, parent.foo from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_6 $$ Foo foo = new Foo()-->Line_10 $$ foo.setFoo(foo1)[ FD ]
Line_4 $$ Session s = openSession()-->Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ s = openSession()[ FD ]
Line_37 $$ s = openSession()-->Line_38 $$ txn = s.beginTransaction()[ FD ]
Line_41 $$ while (iter.hasNext()) -->Line_42 $$ Object[] pnc = (Object[]) iter.next()[ CD ]
Line_4 $$ Session s = openSession()-->Line_7 $$ s.save(foo)[ FD ]
Line_30 $$ row = (Object[]) rs.next()-->Line_33 $$ row = (Object[]) l.get(0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_36 $$ s.close()[ FD ]
Line_8 $$ Foo foo1 = new Foo()-->Line_9 $$ s.save(foo1)[ FD ]
Line_38 $$ txn = s.beginTransaction()-->Line_48 $$ txn.commit()[ FD ]
Line_18 $$ row = (Object[]) rs.next()-->Line_30 $$ row = (Object[]) rs.next()[ FD ]
Line_23 $$ rs = s.createQuery("select child.id, parent.id, child.long from Foo parent, Foo child where parent.foo = child").iterate()-->Line_32 $$ assertTrue(!rs.hasNext())[ FD ]
Line_6 $$ Foo foo = new Foo()-->Line_7 $$ s.save(foo)[ FD ]
Line_6 $$ Foo foo = new Foo()-->Line_26 $$ assertTrue("multi-column id", row[1].equals(foo.getKey()))[ FD ]
Line_37 $$ s = openSession()-->Line_44 $$ s.delete(pnc[1])[ FD ]
Line_4 $$ Session s = openSession()-->Line_11 $$ List l = s.createQuery("select parent, child from Foo parent, Foo child where parent.foo = child").list()[ FD ]
Line_37 $$ s = openSession()-->Line_43 $$ s.delete(pnc[0])[ FD ]
Line_37 $$ s = openSession()-->Line_39 $$ Iterator iter = s.createQuery("select parent, child from Foo parent, Foo child where parent.foo = child and parent.string='a string'").iterate()[ FD ]
Line_17 $$ rs = s.createQuery("select count(distinct child.id), count(distinct parent.id) from Foo parent, Foo child where parent.foo = child").iterate()-->Line_30 $$ row = (Object[]) rs.next()[ FD ]
Line_11 $$ List l = s.createQuery("select parent, child from Foo parent, Foo child where parent.foo = child").list()-->Line_12 $$ assertTrue("multi-column find", l.size() == 1)[ FD ]
