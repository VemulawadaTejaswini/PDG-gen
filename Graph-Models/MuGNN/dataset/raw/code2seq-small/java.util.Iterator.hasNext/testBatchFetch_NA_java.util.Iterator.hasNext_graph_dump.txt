Line_35 $$ cars = (ProductLine) list.get(0)-->Line_73 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_18 $$ Model jboss = new Model(oss)-->Line_19 $$ jboss.setName("JBoss")[ FD ]
Line_32 $$ s = openSession()-->Line_78 $$ s.delete(oss)[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_62 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_62 $$ list = s.createQuery("from ProductLine").list()-->Line_64 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_21 $$ Model hibernate = new Model(oss)-->Line_46 $$ hibernate.getProductLine().getId()[ FD ]
Line_54 $$ list = new ArrayList()-->Line_58 $$ Model m = (Model) list.get(0)[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_58 $$ Model m = (Model) list.get(0)[ FD ]
Line_36 $$ oss = (ProductLine) list.get(1)-->Line_78 $$ s.delete(oss)[ FD ]
Line_62 $$ list = s.createQuery("from ProductLine").list()-->Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_73 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_32 $$ s = openSession()-->Line_43 $$ s.clear()[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_73 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_37 $$ assertFalse(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_9 $$ Model monaro = new Model(cars)-->Line_11 $$ monaro.setDescription("Holden Monaro")[ FD ]
Line_35 $$ cars = (ProductLine) list.get(0)-->Line_75 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_24 $$ Model cache = new Model(oss)-->Line_26 $$ cache.setDescription("JBoss TreeCache")[ FD ]
Line_32 $$ s = openSession()-->Line_65 $$ s.evict(pl2)[ FD ]
Line_54 $$ list = new ArrayList()-->Line_64 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_32 $$ s = openSession()-->Line_61 $$ s.clear()[ FD ]
Line_54 $$ list = new ArrayList()-->Line_56 $$ list.add(iter.next())[ FD ]
Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_74 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_8 $$ cars.setDescription("Cars")[ FD ]
Line_32 $$ s = openSession()-->Line_71 $$ t = s.beginTransaction()[ FD ]
Line_74 $$ oss = (ProductLine) list.get(1)-->Line_76 $$ assertEquals(oss.getModels().size(), 3)[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_63 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_36 $$ oss = (ProductLine) list.get(1)-->Line_42 $$ assertTrue(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_54 $$ list = new ArrayList()-->Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_21 $$ Model hibernate = new Model(oss)-->Line_23 $$ hibernate.setDescription("Hibernate")[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_74 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_30 $$ s.getSessionFactory().getCache().evictEntityRegion(Model.class)[ FD ]
Line_36 $$ oss = (ProductLine) list.get(1)-->Line_76 $$ assertEquals(oss.getModels().size(), 3)[ FD ]
Line_5 $$ Session s = openSession()-->Line_45 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_33 $$ t = s.beginTransaction()-->Line_79 $$ t.commit()[ FD ]
Line_5 $$ Session s = openSession()-->Line_44 $$ list = s.createQuery("from Model m").list()[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_77 $$ s.delete(cars)[ FD ]
Line_5 $$ Session s = openSession()-->Line_31 $$ s.getSessionFactory().getCache().evictEntityRegion(ProductLine.class)[ FD ]
Line_5 $$ Session s = openSession()-->Line_69 $$ s.close()[ FD ]
Line_53 $$ Iterator iter = s.createQuery("from Model").iterate()-->Line_56 $$ list.add(iter.next())[ FD ]
Line_5 $$ Session s = openSession()-->Line_43 $$ s.clear()[ FD ]
Line_35 $$ cars = (ProductLine) list.get(0)-->Line_77 $$ s.delete(cars)[ FD ]
Line_21 $$ Model hibernate = new Model(oss)-->Line_22 $$ hibernate.setName("Hibernate")[ FD ]
Line_21 $$ Model hibernate = new Model(oss)-->Line_45 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_44 $$ list = s.createQuery("from Model m").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_52 $$ s.clear()[ FD ]
Line_5 $$ Session s = openSession()-->Line_77 $$ s.delete(cars)[ FD ]
Line_32 $$ s = openSession()-->Line_62 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_62 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_5 $$ Session s = openSession()-->Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_38 $$ assertFalse(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_5 $$ Session s = openSession()-->Line_29 $$ s.close()[ FD ]
Line_32 $$ s = openSession()-->Line_44 $$ list = s.createQuery("from Model m").list()[ FD ]
Line_12 $$ Model hsv = new Model(cars)-->Line_13 $$ hsv.setName("hsv")[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_79 $$ t.commit()[ FD ]
Line_5 $$ Session s = openSession()-->Line_78 $$ s.delete(oss)[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_17 $$ oss.setDescription("OSS")[ FD ]
Line_5 $$ Session s = openSession()-->Line_61 $$ s.clear()[ FD ]
Line_36 $$ oss = (ProductLine) list.get(1)-->Line_38 $$ assertFalse(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_35 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_5 $$ Session s = openSession()-->Line_27 $$ s.save(oss)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_68 $$ t.commit()[ FD ]
Line_64 $$ ProductLine pl2 = (ProductLine) list.get(1)-->Line_65 $$ s.evict(pl2)[ FD ]
Line_32 $$ s = openSession()-->Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_32 $$ s = openSession()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_65 $$ s.evict(pl2)[ FD ]
Line_45 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())-->Line_46 $$ hibernate.getProductLine().getId()[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_73 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_5 $$ Session s = openSession()-->Line_6 $$ Transaction t = s.beginTransaction()[ FD ]
Line_54 $$ list = new ArrayList()-->Line_63 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_73 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_33 $$ t = s.beginTransaction()-->Line_71 $$ t = s.beginTransaction()[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_76 $$ assertEquals(oss.getModels().size(), 3)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_28 $$ t.commit()[ FD ]
Line_32 $$ s = openSession()-->Line_52 $$ s.clear()[ FD ]
Line_73 $$ cars = (ProductLine) list.get(0)-->Line_77 $$ s.delete(cars)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_24 $$ Model cache = new Model(oss)-->Line_25 $$ cache.setName("JBossCache")[ FD ]
Line_54 $$ list = new ArrayList()-->Line_74 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_64 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_74 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_6 $$ Transaction t = s.beginTransaction()-->Line_71 $$ t = s.beginTransaction()[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_15 $$ s.save(cars)[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_35 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_32 $$ s = openSession()-->Line_77 $$ s.delete(cars)[ FD ]
Line_70 $$ s = openSession()-->Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_62 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_74 $$ oss = (ProductLine) list.get(1)-->Line_78 $$ s.delete(oss)[ FD ]
Line_12 $$ Model hsv = new Model(cars)-->Line_14 $$ hsv.setDescription("Holden Commodore HSV")[ FD ]
Line_35 $$ cars = (ProductLine) list.get(0)-->Line_41 $$ assertTrue(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_54 $$ list = new ArrayList()[ FD ]
Line_54 $$ list = new ArrayList()-->Line_73 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_5 $$ Session s = openSession()-->Line_71 $$ t = s.beginTransaction()[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_54 $$ list = new ArrayList()[ FD ]
Line_62 $$ list = s.createQuery("from ProductLine").list()-->Line_63 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_70 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_5 $$ Session s = openSession()-->Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_63 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_78 $$ s.delete(oss)[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_74 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_56 $$ list.add(iter.next())[ FD ]
Line_54 $$ list = new ArrayList()-->Line_62 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_64 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_32 $$ s = openSession()-->Line_70 $$ s = openSession()[ FD ]
Line_32 $$ s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_41 $$ assertTrue(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_42 $$ assertTrue(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_32 $$ s = openSession()-->Line_69 $$ s.close()[ FD ]
Line_70 $$ s = openSession()-->Line_71 $$ t = s.beginTransaction()[ FD ]
Line_73 $$ cars = (ProductLine) list.get(0)-->Line_75 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_56 $$ list.add(iter.next())[ FD ]
Line_62 $$ list = s.createQuery("from ProductLine").list()-->Line_73 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_36 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_36 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_34 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_7 $$ ProductLine cars = new ProductLine()-->Line_75 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_18 $$ Model jboss = new Model(oss)-->Line_20 $$ jboss.setDescription("JBoss Application Server")[ FD ]
Line_55 $$ while (iter.hasNext()) -->Line_56 $$ list.add(iter.next())[ CD ]
Line_35 $$ cars = (ProductLine) list.get(0)-->Line_37 $$ assertFalse(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_33 $$ t = s.beginTransaction()-->Line_68 $$ t.commit()[ FD ]
Line_71 $$ t = s.beginTransaction()-->Line_79 $$ t.commit()[ FD ]
Line_53 $$ Iterator iter = s.createQuery("from Model").iterate()-->Line_55 $$ while (iter.hasNext()) [ FD ]
Line_32 $$ s = openSession()-->Line_45 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())[ FD ]
Line_70 $$ s = openSession()-->Line_77 $$ s.delete(cars)[ FD ]
Line_44 $$ list = s.createQuery("from Model m").list()-->Line_58 $$ Model m = (Model) list.get(0)[ FD ]
Line_32 $$ s = openSession()-->Line_53 $$ Iterator iter = s.createQuery("from Model").iterate()[ FD ]
Line_5 $$ Session s = openSession()-->Line_70 $$ s = openSession()[ FD ]
Line_5 $$ Session s = openSession()-->Line_32 $$ s = openSession()[ FD ]
Line_5 $$ Session s = openSession()-->Line_33 $$ t = s.beginTransaction()[ FD ]
Line_5 $$ Session s = openSession()-->Line_53 $$ Iterator iter = s.createQuery("from Model").iterate()[ FD ]
Line_62 $$ list = s.createQuery("from ProductLine").list()-->Line_74 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_5 $$ Session s = openSession()-->Line_15 $$ s.save(cars)[ FD ]
Line_5 $$ Session s = openSession()-->Line_80 $$ s.close()[ FD ]
Line_32 $$ s = openSession()-->Line_72 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_36 $$ oss = (ProductLine) list.get(1)-->Line_74 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_70 $$ s = openSession()-->Line_78 $$ s.delete(oss)[ FD ]
Line_16 $$ ProductLine oss = new ProductLine()-->Line_27 $$ s.save(oss)[ FD ]
Line_9 $$ Model monaro = new Model(cars)-->Line_10 $$ monaro.setName("monaro")[ FD ]
