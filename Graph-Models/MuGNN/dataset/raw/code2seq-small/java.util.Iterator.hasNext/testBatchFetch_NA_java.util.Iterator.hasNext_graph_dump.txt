Line_41 $$ list = s.createQuery("from Model m").list()-->Line_54 $$ Model m = (Model) list.get(0)[ FD ]
Line_57 $$ list = s.createQuery("from ProductLine").list()-->Line_58 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_33 $$ cars = (ProductLine) list.get(0)-->Line_69 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_30 $$ s = openSession()-->Line_31 $$ t = s.beginTransaction()[ FD ]
Line_30 $$ s = openSession()-->Line_40 $$ s.clear()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_55 $$ m.getDescription()[ CD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_41 $$ list = s.createQuery("from Model m").list()[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_57 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_59 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_13 $$ s.save(cars)[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_50 $$ list = new ArrayList()[ FD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_36 $$ assertFalse(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_37 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_70 $$ assertEquals(oss.getModels().size(), 3)[ CD ]
Line_64 $$ s = openSession()-->Line_71 $$ s.delete(cars)[ FD ]
Line_57 $$ list = s.createQuery("from ProductLine").list()-->Line_68 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_34 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_57 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_67 $$ cars = (ProductLine) list.get(0)-->Line_71 $$ s.delete(cars)[ FD ]
Line_59 $$ ProductLine pl2 = (ProductLine) list.get(1)-->Line_60 $$ s.evict(pl2)[ FD ]
Line_33 $$ cars = (ProductLine) list.get(0)-->Line_38 $$ assertTrue(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_30 $$ s = openSession()-->Line_72 $$ s.delete(oss)[ FD ]
Line_42 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())-->Line_43 $$ hibernate.getProductLine().getId()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_11 $$ hsv.setName("hsv")[ CD ]
Line_3 $$ Session s = openSession()-->Line_64 $$ s = openSession()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_22 $$ Model cache = new Model(oss)[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_47 $$ assertEquals(hibernate.getProductLine().getDescription(), "OSS")[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_35 $$ assertFalse(Hibernate.isInitialized(cars.getModels()))[ CD ]
Line_3 $$ Session s = openSession()-->Line_49 $$ Iterator iter = s.createQuery("from Model").iterate()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_60 $$ s.evict(pl2)[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_6 $$ cars.setDescription("Cars")[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_20 $$ hibernate.setName("Hibernate")[ CD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_39 $$ assertTrue(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_39 $$ assertTrue(Hibernate.isInitialized(oss.getModels()))[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_18 $$ jboss.setDescription("JBoss Application Server")[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_5 $$ ProductLine cars = new ProductLine()[ CD ]
Line_33 $$ cars = (ProductLine) list.get(0)-->Line_71 $$ s.delete(cars)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_17 $$ jboss.setName("JBoss")[ CD ]
Line_64 $$ s = openSession()-->Line_72 $$ s.delete(oss)[ FD ]
Line_42 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())-->Line_47 $$ assertEquals(hibernate.getProductLine().getDescription(), "OSS")[ FD ]
Line_30 $$ s = openSession()-->Line_71 $$ s.delete(cars)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ Transaction t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_68 $$ oss = (ProductLine) list.get(1)[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_51 $$ while (iter.hasNext()) [ CD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_67 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_51 $$ while (iter.hasNext()) -->Line_52 $$ list.add(iter.next())[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_29 $$ s.getSessionFactory().getCache().evictEntityRegion(ProductLine.class)[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_42 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())[ CD ]
Line_3 $$ Session s = openSession()-->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_33 $$ cars = (ProductLine) list.get(0)-->Line_35 $$ assertFalse(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_50 $$ list = new ArrayList()-->Line_57 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_67 $$ cars = (ProductLine) list.get(0)[ CD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_67 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_22 $$ Model cache = new Model(oss)-->Line_24 $$ cache.setDescription("JBoss TreeCache")[ FD ]
Line_30 $$ s = openSession()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_31 $$ t = s.beginTransaction()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_57 $$ list = s.createQuery("from ProductLine").list()-->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_10 $$ Model hsv = new Model(cars)[ CD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_15 $$ oss.setDescription("OSS")[ FD ]
Line_19 $$ Model hibernate = new Model(oss)-->Line_47 $$ assertEquals(hibernate.getProductLine().getDescription(), "OSS")[ FD ]
Line_30 $$ s = openSession()-->Line_48 $$ s.clear()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_61 $$ pl.getModels().size()[ CD ]
Line_34 $$ oss = (ProductLine) list.get(1)-->Line_70 $$ assertEquals(oss.getModels().size(), 3)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_13 $$ s.save(cars)[ CD ]
Line_30 $$ s = openSession()-->Line_42 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_54 $$ Model m = (Model) list.get(0)[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()[ CD ]
Line_31 $$ t = s.beginTransaction()-->Line_73 $$ t.commit()[ FD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_68 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_50 $$ list = new ArrayList()-->Line_67 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_73 $$ t.commit()[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_38 $$ assertTrue(Hibernate.isInitialized(cars.getModels()))[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_24 $$ cache.setDescription("JBoss TreeCache")[ CD ]
Line_65 $$ t = s.beginTransaction()-->Line_73 $$ t.commit()[ FD ]
Line_30 $$ s = openSession()-->Line_64 $$ s = openSession()[ FD ]
Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_68 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_68 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ s.save(oss)[ FD ]
Line_68 $$ oss = (ProductLine) list.get(1)-->Line_72 $$ s.delete(oss)[ FD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_58 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_57 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_31 $$ t = s.beginTransaction()-->Line_62 $$ t.commit()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_69 $$ assertEquals(cars.getModels().size(), 2)[ CD ]
Line_3 $$ Session s = openSession()-->Line_40 $$ s.clear()[ FD ]
Line_3 $$ Session s = openSession()-->Line_42 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_48 $$ s.clear()[ CD ]
Line_57 $$ list = s.createQuery("from ProductLine").list()-->Line_67 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_62 $$ t.commit()[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_57 $$ list = s.createQuery("from ProductLine").list()[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_37 $$ assertEquals(cars.getModels().size(), 2)[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_73 $$ t.commit()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_50 $$ list = new ArrayList()[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_3 $$ Session s = openSession()[ CD ]
Line_64 $$ s = openSession()-->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ CD ]
Line_34 $$ oss = (ProductLine) list.get(1)-->Line_36 $$ assertFalse(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_58 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_3 $$ Session s = openSession()-->Line_30 $$ s = openSession()[ FD ]
Line_3 $$ Session s = openSession()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_49 $$ Iterator iter = s.createQuery("from Model").iterate()-->Line_51 $$ while (iter.hasNext()) [ FD ]
Line_19 $$ Model hibernate = new Model(oss)-->Line_20 $$ hibernate.setName("Hibernate")[ FD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_6 $$ cars.setDescription("Cars")[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_71 $$ s.delete(cars)[ CD ]
Line_16 $$ Model jboss = new Model(oss)-->Line_17 $$ jboss.setName("JBoss")[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_54 $$ Model m = (Model) list.get(0)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_40 $$ s.clear()[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_12 $$ hsv.setDescription("Holden Commodore HSV")[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_56 $$ s.clear()[ CD ]
Line_50 $$ list = new ArrayList()-->Line_68 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_28 $$ s.getSessionFactory().getCache().evictEntityRegion(Model.class)[ CD ]
Line_3 $$ Session s = openSession()-->Line_71 $$ s.delete(cars)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_7 $$ Model monaro = new Model(cars)[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_27 $$ s.close()[ CD ]
Line_54 $$ Model m = (Model) list.get(0)-->Line_55 $$ m.getDescription()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_9 $$ monaro.setDescription("Holden Monaro")[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_72 $$ s.delete(oss)[ CD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_52 $$ list.add(iter.next())[ FD ]
Line_34 $$ oss = (ProductLine) list.get(1)-->Line_72 $$ s.delete(oss)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_43 $$ hibernate.getProductLine().getId()[ CD ]
Line_67 $$ cars = (ProductLine) list.get(0)-->Line_69 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_68 $$ oss = (ProductLine) list.get(1)-->Line_70 $$ assertEquals(oss.getModels().size(), 3)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_58 $$ ProductLine pl = (ProductLine) list.get(0)[ CD ]
Line_19 $$ Model hibernate = new Model(oss)-->Line_43 $$ hibernate.getProductLine().getId()[ FD ]
Line_3 $$ Session s = openSession()-->Line_74 $$ s.close()[ FD ]
Line_30 $$ s = openSession()-->Line_74 $$ s.close()[ FD ]
Line_50 $$ list = new ArrayList()-->Line_54 $$ Model m = (Model) list.get(0)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_63 $$ s.close()[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_62 $$ t.commit()[ FD ]
Line_3 $$ Session s = openSession()-->Line_29 $$ s.getSessionFactory().getCache().evictEntityRegion(ProductLine.class)[ FD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_35 $$ assertFalse(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_71 $$ s.delete(cars)[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_34 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_25 $$ s.save(oss)[ CD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_50 $$ list = new ArrayList()[ FD ]
Line_64 $$ s = openSession()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_30 $$ s = openSession()-->Line_57 $$ list = s.createQuery("from ProductLine").list()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_59 $$ ProductLine pl2 = (ProductLine) list.get(1)[ CD ]
Line_22 $$ Model cache = new Model(oss)-->Line_23 $$ cache.setName("JBossCache")[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_8 $$ monaro.setName("monaro")[ CD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_26 $$ t.commit()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_36 $$ assertFalse(Hibernate.isInitialized(oss.getModels()))[ CD ]
Line_30 $$ s = openSession()-->Line_41 $$ list = s.createQuery("from Model m").list()[ FD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_72 $$ s.delete(oss)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_65 $$ t = s.beginTransaction()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_14 $$ ProductLine oss = new ProductLine()[ CD ]
Line_3 $$ Session s = openSession()-->Line_28 $$ s.getSessionFactory().getCache().evictEntityRegion(Model.class)[ FD ]
Line_34 $$ oss = (ProductLine) list.get(1)-->Line_39 $$ assertTrue(Hibernate.isInitialized(oss.getModels()))[ FD ]
Line_7 $$ Model monaro = new Model(cars)-->Line_8 $$ monaro.setName("monaro")[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_49 $$ Iterator iter = s.createQuery("from Model").iterate()[ CD ]
Line_3 $$ Session s = openSession()-->Line_72 $$ s.delete(oss)[ FD ]
Line_19 $$ Model hibernate = new Model(oss)-->Line_42 $$ hibernate = (Model) s.get(Model.class, hibernate.getId())[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_65 $$ t = s.beginTransaction()[ CD ]
Line_3 $$ Session s = openSession()-->Line_48 $$ s.clear()[ FD ]
Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_67 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_57 $$ list = s.createQuery("from ProductLine").list()-->Line_59 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_59 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_64 $$ s = openSession()-->Line_74 $$ s.close()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_16 $$ Model jboss = new Model(oss)[ CD ]
Line_3 $$ Session s = openSession()-->Line_60 $$ s.evict(pl2)[ FD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_25 $$ s.save(oss)[ FD ]
Line_10 $$ Model hsv = new Model(cars)-->Line_12 $$ hsv.setDescription("Holden Commodore HSV")[ FD ]
Line_33 $$ cars = (ProductLine) list.get(0)-->Line_67 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_67 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_21 $$ hibernate.setDescription("Hibernate")[ CD ]
Line_30 $$ s = openSession()-->Line_49 $$ Iterator iter = s.createQuery("from Model").iterate()[ FD ]
Line_58 $$ ProductLine pl = (ProductLine) list.get(0)-->Line_61 $$ pl.getModels().size()[ FD ]
Line_33 $$ cars = (ProductLine) list.get(0)-->Line_37 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_4 $$ Transaction t = s.beginTransaction()-->Line_31 $$ t = s.beginTransaction()[ FD ]
Line_3 $$ Session s = openSession()-->Line_31 $$ t = s.beginTransaction()[ FD ]
Line_30 $$ s = openSession()-->Line_56 $$ s.clear()[ FD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_33 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_26 $$ t.commit()[ CD ]
Line_3 $$ Session s = openSession()-->Line_27 $$ s.close()[ FD ]
Line_50 $$ list = new ArrayList()-->Line_52 $$ list.add(iter.next())[ FD ]
Line_30 $$ s = openSession()-->Line_60 $$ s.evict(pl2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_63 $$ s.close()[ FD ]
Line_3 $$ Session s = openSession()-->Line_41 $$ list = s.createQuery("from Model m").list()[ FD ]
Line_49 $$ Iterator iter = s.createQuery("from Model").iterate()-->Line_52 $$ list.add(iter.next())[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_31 $$ t = s.beginTransaction()[ CD ]
Line_16 $$ Model jboss = new Model(oss)-->Line_18 $$ jboss.setDescription("JBoss Application Server")[ FD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_52 $$ list.add(iter.next())[ FD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_69 $$ assertEquals(cars.getModels().size(), 2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_56 $$ s.clear()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_19 $$ Model hibernate = new Model(oss)[ CD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_38 $$ assertTrue(Hibernate.isInitialized(cars.getModels()))[ FD ]
Line_7 $$ Model monaro = new Model(cars)-->Line_9 $$ monaro.setDescription("Holden Monaro")[ FD ]
Line_5 $$ ProductLine cars = new ProductLine()-->Line_13 $$ s.save(cars)[ FD ]
Line_50 $$ list = new ArrayList()-->Line_59 $$ ProductLine pl2 = (ProductLine) list.get(1)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_30 $$ s = openSession()[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_23 $$ cache.setName("JBossCache")[ CD ]
Line_30 $$ s = openSession()-->Line_63 $$ s.close()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_74 $$ s.close()[ CD ]
Line_14 $$ ProductLine oss = new ProductLine()-->Line_70 $$ assertEquals(oss.getModels().size(), 3)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_64 $$ s = openSession()[ CD ]
Line_30 $$ s = openSession()-->Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_10 $$ Model hsv = new Model(cars)-->Line_11 $$ hsv.setName("hsv")[ FD ]
Line_50 $$ list = new ArrayList()-->Line_58 $$ ProductLine pl = (ProductLine) list.get(0)[ FD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_33 $$ cars = (ProductLine) list.get(0)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_34 $$ oss = (ProductLine) list.get(1)[ CD ]
Line_2 $$ public void testBatchFetch() -->Line_33 $$ cars = (ProductLine) list.get(0)[ CD ]
Line_50 $$ list = new ArrayList()-->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_19 $$ Model hibernate = new Model(oss)-->Line_21 $$ hibernate.setDescription("Hibernate")[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_15 $$ oss.setDescription("OSS")[ CD ]
Line_30 $$ s = openSession()-->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_41 $$ list = s.createQuery("from Model m").list()[ CD ]
Line_32 $$ List list = s.createQuery("from ProductLine pl order by pl.description").list()-->Line_68 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_41 $$ list = s.createQuery("from Model m").list()-->Line_66 $$ list = s.createQuery("from ProductLine pl order by pl.description").list()[ FD ]
Line_34 $$ oss = (ProductLine) list.get(1)-->Line_68 $$ oss = (ProductLine) list.get(1)[ FD ]
Line_2 $$ public void testBatchFetch() -->Line_4 $$ Transaction t = s.beginTransaction()[ CD ]
