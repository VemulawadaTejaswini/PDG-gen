Line_3 $$ if (myMovedFiles.isEmpty())-->Line_4 $$ return[ CD ]
Line_2 $$ private void processMovedFiles(final Project project) -->Line_3 $$ if (myMovedFiles.isEmpty())[ CD ]
Line_2 $$ private void processMovedFiles(final Project project) -->Line_5 $$ final Runnable runnable = new Runnable() [ CD ]
Line_7 $$ for (Iterator<MovedFileInfo> iterator = myMovedFiles.iterator(); iterator.hasNext(); ) -->Line_8 $$ MovedFileInfo movedFileInfo = iterator.next()[ FD ]
Line_2 $$ private void processMovedFiles(final Project project) -->Line_9 $$ if (movedFileInfo.myProject == project) [ FD ]
Line_9 $$ if (movedFileInfo.myProject == project) -->Line_11 $$ iterator.remove()[ CD ]
Line_2 $$ private void processMovedFiles(final Project project) -->Line_16 $$ runInBackground(project, "Moving files in Subversion", runnable)[ FD ]
Line_7 $$ for (Iterator<MovedFileInfo> iterator = myMovedFiles.iterator(); iterator.hasNext(); ) -->Line_11 $$ iterator.remove()[ FD ]
Line_7 $$ for (Iterator<MovedFileInfo> iterator = myMovedFiles.iterator(); iterator.hasNext(); ) -->Line_9 $$ if (movedFileInfo.myProject == project) [ CD ]
Line_9 $$ if (movedFileInfo.myProject == project) -->Line_10 $$ doMove(SvnVcs.getInstance(project), movedFileInfo.mySrc, movedFileInfo.myDst)[ CD ]
Line_2 $$ private void processMovedFiles(final Project project) -->Line_10 $$ doMove(SvnVcs.getInstance(project), movedFileInfo.mySrc, movedFileInfo.myDst)[ FD ]
Line_2 $$ private void processMovedFiles(final Project project) -->Line_16 $$ runInBackground(project, "Moving files in Subversion", runnable)[ CD ]
Line_5 $$ final Runnable runnable = new Runnable() -->Line_7 $$ for (Iterator<MovedFileInfo> iterator = myMovedFiles.iterator(); iterator.hasNext(); ) [ CD ]
Line_7 $$ for (Iterator<MovedFileInfo> iterator = myMovedFiles.iterator(); iterator.hasNext(); ) -->Line_8 $$ MovedFileInfo movedFileInfo = iterator.next()[ CD ]
Line_5 $$ final Runnable runnable = new Runnable() -->Line_16 $$ runInBackground(project, "Moving files in Subversion", runnable)[ FD ]
