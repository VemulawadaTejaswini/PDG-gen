Line_16 $$ if (matcher.matches()) -->Line_17 $$ prefixesToRemove.add(matcher.group(1))[ CD ]
Line_14 $$ for (final Map.Entry<String, String> entry : settings.entrySet()) -->Line_18 $$ key.startsWith(entry.getKey() + ".")[ FD ]
Line_23 $$ Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator()-->Line_27 $$ iterator.remove()[ FD ]
Line_16 $$ if (matcher.matches()) -->Line_18 $$ if (map.keySet().stream().anyMatch( key -> key.startsWith(entry.getKey() + "."))) [ CD ]
Line_13 $$ List<String> prefixesToRemove = new ArrayList()-->Line_19 $$ prefixesToRemove.add(entry.getKey())[ FD ]
Line_18 $$ if (map.keySet().stream().anyMatch( key -> key.startsWith(entry.getKey() + "."))) -->Line_19 $$ prefixesToRemove.add(entry.getKey())[ CD ]
Line_13 $$ List<String> prefixesToRemove = new ArrayList()-->Line_17 $$ prefixesToRemove.add(matcher.group(1))[ FD ]
Line_24 $$ while (iterator.hasNext()) -->Line_25 $$ Map.Entry<String, String> entry = iterator.next()[ CD ]
Line_24 $$ while (iterator.hasNext()) -->Line_26 $$ if (entry.getKey().startsWith(prefix + ".") || entry.getKey().equals(prefix)) [ CD ]
Line_15 $$ final Matcher matcher = ARRAY_PATTERN.matcher(entry.getKey())-->Line_16 $$ if (matcher.matches()) [ FD ]
Line_22 $$ for (String prefix : prefixesToRemove) -->Line_26 $$ if (entry.getKey().startsWith(prefix + ".") || entry.getKey().equals(prefix)) [ FD ]
Line_14 $$ for (final Map.Entry<String, String> entry : settings.entrySet()) -->Line_26 $$ if (entry.getKey().startsWith(prefix + ".") || entry.getKey().equals(prefix)) [ FD ]
Line_26 $$ if (entry.getKey().startsWith(prefix + ".") || entry.getKey().equals(prefix)) -->Line_27 $$ iterator.remove()[ CD ]
Line_25 $$ Map.Entry<String, String> entry = iterator.next()-->Line_26 $$ if (entry.getKey().startsWith(prefix + ".") || entry.getKey().equals(prefix)) [ FD ]
Line_15 $$ final Matcher matcher = ARRAY_PATTERN.matcher(entry.getKey())-->Line_17 $$ prefixesToRemove.add(matcher.group(1))[ FD ]
Line_14 $$ for (final Map.Entry<String, String> entry : settings.entrySet()) -->Line_15 $$ final Matcher matcher = ARRAY_PATTERN.matcher(entry.getKey())[ FD ]
Line_23 $$ Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator()-->Line_24 $$ while (iterator.hasNext()) [ FD ]
Line_14 $$ for (final Map.Entry<String, String> entry : settings.entrySet()) -->Line_19 $$ prefixesToRemove.add(entry.getKey())[ FD ]
Line_23 $$ Iterator<Map.Entry<String, String>> iterator = map.entrySet().iterator()-->Line_25 $$ Map.Entry<String, String> entry = iterator.next()[ FD ]
