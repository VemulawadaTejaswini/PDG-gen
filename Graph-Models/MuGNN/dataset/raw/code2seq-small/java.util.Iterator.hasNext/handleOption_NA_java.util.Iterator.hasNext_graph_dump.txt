Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_20 $$ remaining.remove()[ FD ]
Line_6 $$ return super.handleOption(current, new Iterator<String>() -->Line_19 $$ if (encodingConsumed) [ CD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_3 $$ if ("-encoding".equalsIgnoreCase(current) && remaining.hasNext()) [ FD ]
Line_6 $$ return super.handleOption(current, new Iterator<String>() -->Line_12 $$ if (!encodingConsumed) [ CD ]
Line_3 $$ if ("-encoding".equalsIgnoreCase(current) && remaining.hasNext()) -->Line_6 $$ return super.handleOption(current, new Iterator<String>() [ CD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_3 $$ if ("-encoding".equalsIgnoreCase(current) && remaining.hasNext()) [ CD ]
Line_19 $$ if (encodingConsumed) -->Line_20 $$ remaining.remove()[ CD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_4 $$ final String encoding = remaining.next()[ FD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_25 $$ return super.handleOption(current, remaining)[ CD ]
Line_6 $$ return super.handleOption(current, new Iterator<String>() -->Line_9 $$ return !encodingConsumed || remaining.hasNext()[ CD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_9 $$ return !encodingConsumed || remaining.hasNext()[ FD ]
Line_3 $$ if ("-encoding".equalsIgnoreCase(current) && remaining.hasNext()) -->Line_4 $$ final String encoding = remaining.next()[ CD ]
Line_12 $$ if (!encodingConsumed) -->Line_14 $$ return encoding[ CD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_16 $$ return remaining.next()[ FD ]
Line_12 $$ if (!encodingConsumed) -->Line_13 $$ encodingConsumed = true[ CD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_25 $$ return super.handleOption(current, remaining)[ FD ]
Line_2 $$ public boolean handleOption(String current, final Iterator<String> remaining) -->Line_6 $$ return super.handleOption(current, new Iterator<String>() [ FD ]
Line_6 $$ return super.handleOption(current, new Iterator<String>() -->Line_16 $$ return remaining.next()[ CD ]
