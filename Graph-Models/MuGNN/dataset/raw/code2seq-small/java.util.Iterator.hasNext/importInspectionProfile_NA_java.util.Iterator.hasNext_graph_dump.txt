Line_27 $$ if (!unitTestMode) -->Line_28 $$ if (Messages.showYesNoDialog(anchorPanel, "Undefined severities detected: " + StringUtil.join(levels, ", ") + ". Do you want to create them?", "Warning", Messages.getWarningIcon()) == Messages.YES) [ CD ]
Line_12 $$ final Set<String> levels = new HashSet<String>()-->Line_28 $$ if (Messages.showYesNoDialog(anchorPanel, "Undefined severities detected: " + StringUtil.join(levels, ", ") + ". Do you want to create them?", "Warning", Messages.getWarningIcon()) == Messages.YES) [ FD ]
Line_30 $$ final TextAttributes textAttributes = CodeInsightColors.WARNINGS_ATTRIBUTES.getDefaultAttributes()-->Line_32 $$ profileManager.getOwnSeverityRegistrar().registerSeverity(new SeverityRegistrar.SeverityBasedTextAttributes(textAttributes.clone(), info), textAttributes.getErrorStripeColor())[ FD ]
Line_22 $$ if (profileManager.getOwnSeverityRegistrar().getSeverity(level) != null) -->Line_23 $$ iterator.remove()[ CD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_42 $$ return profile[ CD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_20 $$ for (Iterator<String> iterator = levels.iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_32 $$ profileManager.getOwnSeverityRegistrar().registerSeverity(new SeverityRegistrar.SeverityBasedTextAttributes(textAttributes.clone(), info), textAttributes.getErrorStripeColor())[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_26 $$ if (!levels.isEmpty()) [ CD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_8 $$ if (Comparing.strEqual(rootElement.getName(), "component")) [ FD ]
Line_14 $$ final Element inspectElement = (Element) o-->Line_15 $$ addLevelIfNotNull(levels, inspectElement)[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_13 $$ for (Object o : rootElement.getChildren("inspection_tool")) [ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_7 $$ InspectionProfileImpl profile = new InspectionProfileImpl("TempProfile", InspectionToolRegistrar.getInstance(), profileManager)[ CD ]
Line_29 $$ for (String level : levels) -->Line_31 $$ HighlightInfoType.HighlightInfoTypeImpl info = new HighlightInfoType.HighlightInfoTypeImpl(new HighlightSeverity(level, 50), TextAttributesKey.createTextAttributesKey(level))[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_22 $$ if (profileManager.getOwnSeverityRegistrar().getSeverity(level) != null) [ FD ]
Line_21 $$ String level = iterator.next()-->Line_22 $$ if (profileManager.getOwnSeverityRegistrar().getSeverity(level) != null) [ FD ]
Line_12 $$ final Set<String> levels = new HashSet<String>()-->Line_20 $$ for (Iterator<String> iterator = levels.iterator(); iterator.hasNext(); ) [ FD ]
Line_7 $$ InspectionProfileImpl profile = new InspectionProfileImpl("TempProfile", InspectionToolRegistrar.getInstance(), profileManager)-->Line_41 $$ profile.initInspectionTools(project)[ FD ]
Line_4 $$ if (!unitTestMode) -->Line_5 $$ LOG.assertTrue(anchorPanel != null)[ CD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_40 $$ profile.setProjectLevel(false)[ CD ]
Line_20 $$ for (Iterator<String> iterator = levels.iterator(); iterator.hasNext(); ) -->Line_21 $$ String level = iterator.next()[ FD ]
Line_20 $$ for (Iterator<String> iterator = levels.iterator(); iterator.hasNext(); ) -->Line_22 $$ if (profileManager.getOwnSeverityRegistrar().getSeverity(level) != null) [ CD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_8 $$ if (Comparing.strEqual(rootElement.getName(), "component")) [ CD ]
Line_26 $$ if (!levels.isEmpty()) -->Line_27 $$ if (!unitTestMode) [ CD ]
Line_14 $$ final Element inspectElement = (Element) o-->Line_16 $$ for (Object s : inspectElement.getChildren("scope")) [ FD ]
Line_20 $$ for (Iterator<String> iterator = levels.iterator(); iterator.hasNext(); ) -->Line_21 $$ String level = iterator.next()[ CD ]
Line_20 $$ for (Iterator<String> iterator = levels.iterator(); iterator.hasNext(); ) -->Line_23 $$ iterator.remove()[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_41 $$ profile.initInspectionTools(project)[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_39 $$ profile.readExternal(rootElement)[ CD ]
Line_12 $$ final Set<String> levels = new HashSet<String>()-->Line_17 $$ addLevelIfNotNull(levels, ((Element) s))[ FD ]
Line_7 $$ InspectionProfileImpl profile = new InspectionProfileImpl("TempProfile", InspectionToolRegistrar.getInstance(), profileManager)-->Line_40 $$ profile.setProjectLevel(false)[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_12 $$ final Set<String> levels = new HashSet<String>()[ CD ]
Line_12 $$ final Set<String> levels = new HashSet<String>()-->Line_15 $$ addLevelIfNotNull(levels, inspectElement)[ FD ]
Line_21 $$ String level = iterator.next()-->Line_31 $$ HighlightInfoType.HighlightInfoTypeImpl info = new HighlightInfoType.HighlightInfoTypeImpl(new HighlightSeverity(level, 50), TextAttributesKey.createTextAttributesKey(level))[ FD ]
Line_3 $$ final boolean unitTestMode = ApplicationManager.getApplication().isUnitTestMode()-->Line_4 $$ if (!unitTestMode) [ FD ]
Line_3 $$ final boolean unitTestMode = ApplicationManager.getApplication().isUnitTestMode()-->Line_27 $$ if (!unitTestMode) [ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_39 $$ profile.readExternal(rootElement)[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_41 $$ profile.initInspectionTools(project)[ CD ]
Line_7 $$ InspectionProfileImpl profile = new InspectionProfileImpl("TempProfile", InspectionToolRegistrar.getInstance(), profileManager)-->Line_39 $$ profile.readExternal(rootElement)[ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_4 $$ if (!unitTestMode) [ CD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_28 $$ if (Messages.showYesNoDialog(anchorPanel, "Undefined severities detected: " + StringUtil.join(levels, ", ") + ". Do you want to create them?", "Warning", Messages.getWarningIcon()) == Messages.YES) [ FD ]
Line_12 $$ final Set<String> levels = new HashSet<String>()-->Line_26 $$ if (!levels.isEmpty()) [ FD ]
Line_2 $$ public static InspectionProfileImpl importInspectionProfile(@NotNull Element rootElement, @NotNull InspectionProfileManager profileManager, @NotNull Project project, @Nullable JPanel anchorPanel) throws JDOMException, IOException, InvalidDataException -->Line_3 $$ final boolean unitTestMode = ApplicationManager.getApplication().isUnitTestMode()[ CD ]
