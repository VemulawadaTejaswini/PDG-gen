Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_27 $$ LOG.tracev("Done deleting orphans for collection: [ FD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_4 $$ if (reallyDoCascade) [ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_25 $$ deleteOrphans(eventSource, entityName, (PersistentCollection) child)[ FD ]
Line_24 $$ final String entityName = collectionType.getAssociatedEntityName(eventSource.getFactory())-->Line_25 $$ deleteOrphans(eventSource, entityName, (PersistentCollection) child)[ FD ]
Line_26 $$ if (traceEnabled) -->Line_27 $$ LOG.tracev("Done deleting orphans for collection: [ CD ]
Line_9 $$ final Iterator itr = action.getCascadableChildrenIterator(eventSource, collectionType, child)-->Line_10 $$ while (itr.hasNext()) [ FD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_17 $$ final boolean deleteOrphans = style.hasOrphanDelete() && action.deleteOrphans() && elemType.isEntityType() && child instanceof PersistentCollection[ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_24 $$ final String entityName = collectionType.getAssociatedEntityName(eventSource.getFactory())[ FD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_3 $$ final boolean reallyDoCascade = style.reallyDoCascade(action) && child != CollectionType.UNFETCHED_COLLECTION[ FD ]
Line_4 $$ if (reallyDoCascade) -->Line_6 $$ if (traceEnabled) [ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_3 $$ final boolean reallyDoCascade = style.reallyDoCascade(action) && child != CollectionType.UNFETCHED_COLLECTION[ CD ]
Line_4 $$ if (reallyDoCascade) -->Line_10 $$ while (itr.hasNext()) [ CD ]
Line_19 $$ if (deleteOrphans) -->Line_25 $$ deleteOrphans(eventSource, entityName, (PersistentCollection) child)[ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_9 $$ final Iterator itr = action.getCascadableChildrenIterator(eventSource, collectionType, child)[ FD ]
Line_4 $$ if (reallyDoCascade) -->Line_9 $$ final Iterator itr = action.getCascadableChildrenIterator(eventSource, collectionType, child)[ CD ]
Line_19 $$ if (deleteOrphans) -->Line_26 $$ if (traceEnabled) [ CD ]
Line_9 $$ final Iterator itr = action.getCascadableChildrenIterator(eventSource, collectionType, child)-->Line_11 $$ cascadeProperty(action, cascadePoint, eventSource, componentPathStackDepth, parent, itr.next(), elemType, style, null, anything, isCascadeDeleteEnabled)[ FD ]
Line_6 $$ if (traceEnabled) -->Line_7 $$ LOG.tracev("Cascade [ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_19 $$ if (deleteOrphans) [ CD ]
Line_19 $$ if (deleteOrphans) -->Line_21 $$ if (traceEnabled) [ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_22 $$ LOG.tracev("Deleting orphans for collection: [ FD ]
Line_10 $$ while (itr.hasNext()) -->Line_11 $$ cascadeProperty(action, cascadePoint, eventSource, componentPathStackDepth, parent, itr.next(), elemType, style, null, anything, isCascadeDeleteEnabled)[ CD ]
Line_19 $$ if (deleteOrphans) -->Line_20 $$ final boolean traceEnabled = LOG.isTraceEnabled()[ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_7 $$ LOG.tracev("Cascade [ FD ]
Line_4 $$ if (reallyDoCascade) -->Line_13 $$ if (traceEnabled) [ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_14 $$ LOG.tracev("Done cascade [ FD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_11 $$ cascadeProperty(action, cascadePoint, eventSource, componentPathStackDepth, parent, itr.next(), elemType, style, null, anything, isCascadeDeleteEnabled)[ FD ]
Line_19 $$ if (deleteOrphans) -->Line_24 $$ final String entityName = collectionType.getAssociatedEntityName(eventSource.getFactory())[ CD ]
Line_4 $$ if (reallyDoCascade) -->Line_5 $$ final boolean traceEnabled = LOG.isTraceEnabled()[ CD ]
Line_13 $$ if (traceEnabled) -->Line_14 $$ LOG.tracev("Done cascade [ CD ]
Line_2 $$ private static void cascadeCollectionElements(final CascadingAction action, final CascadePoint cascadePoint, final EventSource eventSource, final int componentPathStackDepth, final Object parent, final Object child, final CollectionType collectionType, final CascadeStyle style, final Type elemType, final Object anything, final boolean isCascadeDeleteEnabled) throws HibernateException -->Line_17 $$ final boolean deleteOrphans = style.hasOrphanDelete() && action.deleteOrphans() && elemType.isEntityType() && child instanceof PersistentCollection[ FD ]
Line_21 $$ if (traceEnabled) -->Line_22 $$ LOG.tracev("Deleting orphans for collection: [ CD ]
