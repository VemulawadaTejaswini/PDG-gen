Line_4 $$ File file = GFileUtils.canonicalise(toHash.next())-->Line_13 $$ combinedHash.update(fileSnapshotter.snapshot(file).getHash())[ FD ]
Line_3 $$ while (toHash.hasNext()) -->Line_5 $$ if (file.isDirectory()) [ CD ]
Line_11 $$ if (file.isFile()) -->Line_13 $$ combinedHash.update(fileSnapshotter.snapshot(file).getHash())[ CD ]
Line_3 $$ while (toHash.hasNext()) -->Line_4 $$ File file = GFileUtils.canonicalise(toHash.next())[ CD ]
Line_5 $$ if (file.isDirectory()) -->Line_11 $$ if (file.isFile()) [ CD ]
Line_2 $$ private void hash(Adler32 combinedHash, List<String> visitedFilePaths, Set<File> visitedDirs, Iterator<File> toHash) -->Line_12 $$ visitedFilePaths.add(file.getAbsolutePath())[ FD ]
Line_2 $$ private void hash(Adler32 combinedHash, List<String> visitedFilePaths, Set<File> visitedDirs, Iterator<File> toHash) -->Line_3 $$ while (toHash.hasNext()) [ FD ]
Line_2 $$ private void hash(Adler32 combinedHash, List<String> visitedFilePaths, Set<File> visitedDirs, Iterator<File> toHash) -->Line_3 $$ while (toHash.hasNext()) [ CD ]
Line_2 $$ private void hash(Adler32 combinedHash, List<String> visitedFilePaths, Set<File> visitedDirs, Iterator<File> toHash) -->Line_4 $$ File file = GFileUtils.canonicalise(toHash.next())[ FD ]
Line_4 $$ File file = GFileUtils.canonicalise(toHash.next())-->Line_5 $$ if (file.isDirectory()) [ FD ]
Line_2 $$ private void hash(Adler32 combinedHash, List<String> visitedFilePaths, Set<File> visitedDirs, Iterator<File> toHash) -->Line_6 $$ if (visitedDirs.add(file)) [ FD ]
Line_11 $$ if (file.isFile()) -->Line_12 $$ visitedFilePaths.add(file.getAbsolutePath())[ CD ]
Line_5 $$ if (file.isDirectory()) -->Line_6 $$ if (visitedDirs.add(file)) [ CD ]
Line_4 $$ File file = GFileUtils.canonicalise(toHash.next())-->Line_6 $$ if (visitedDirs.add(file)) [ FD ]
Line_4 $$ File file = GFileUtils.canonicalise(toHash.next())-->Line_11 $$ if (file.isFile()) [ FD ]
Line_4 $$ File file = GFileUtils.canonicalise(toHash.next())-->Line_12 $$ visitedFilePaths.add(file.getAbsolutePath())[ FD ]
Line_2 $$ private void hash(Adler32 combinedHash, List<String> visitedFilePaths, Set<File> visitedDirs, Iterator<File> toHash) -->Line_13 $$ combinedHash.update(fileSnapshotter.snapshot(file).getHash())[ FD ]
