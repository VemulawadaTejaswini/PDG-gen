Line_8 $$ SubMulti sm1 = new SubMulti()-->Line_19 $$ sm1.setParent(sm)[ FD ]
Line_33 $$ final String sql = "select * from leafsubsubclass sm, nonleafsubclass m, rootclass s " + "where sm.sid=m.sid and sm.sid=s.id1_ and sm.sid=1"-->Line_35 $$ ((SessionImplementor) session).getJdbcCoordinator().getResultSetReturn().extract(st, sql).next()[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_38 $$ assertTrue(s2.createQuery("select s from SubMulti as sm join sm.children as s where s.amount>-1 and s.name is null").list().size() == 2)[ FD ]
Line_10 $$ ArrayList list = new ArrayList()-->Line_15 $$ list.add(sm1)[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_29 $$ s2.doWork(new Work() [ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_41 $$ assertTrue(s2.createQuery("select distinct sm from SubMulti as sm join sm.children as s where s.amount>-1 and s.name is null").list().size() == 1)[ FD ]
Line_8 $$ SubMulti sm1 = new SubMulti()-->Line_15 $$ list.add(sm1)[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_19 $$ sm1.setParent(sm)[ FD ]
Line_9 $$ SubMulti sm2 = new SubMulti()-->Line_18 $$ anotherList.add(sm2)[ FD ]
Line_11 $$ ArrayList anotherList = new ArrayList()-->Line_13 $$ sm.setMoreChildren(anotherList)[ FD ]
Line_34 $$ Statement st = ((SessionImplementor) s2).getJdbcCoordinator().getStatementPreparer().createStatement()-->Line_35 $$ ((SessionImplementor) session).getJdbcCoordinator().getResultSetReturn().extract(st, sql).next()[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_55 $$ s2.close()[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_42 $$ sm = (SubMulti) s2.load(SubMulti.class, id)[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_21 $$ Serializable id = s.save(sm)[ FD ]
Line_29 $$ s2.doWork(new Work() -->Line_34 $$ Statement st = ((SessionImplementor) s2).getJdbcCoordinator().getStatementPreparer().createStatement()[ CD ]
Line_27 $$ final Session s2 = openSession()-->Line_46 $$ assertSame(s2.createQuery("select distinct s from SubMulti s where s.moreChildren[1].amount < 1.0").iterate().next(), sm)[ FD ]
Line_9 $$ SubMulti sm2 = new SubMulti()-->Line_23 $$ s.save(sm2)[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_12 $$ sm.setChildren(list)[ FD ]
Line_29 $$ s2.doWork(new Work() -->Line_35 $$ ((SessionImplementor) session).getJdbcCoordinator().getResultSetReturn().extract(st, sql).next()[ CD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_46 $$ assertSame(s2.createQuery("select distinct s from SubMulti s where s.moreChildren[1].amount < 1.0").iterate().next(), sm)[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_20 $$ sm2.setParent(sm)[ FD ]
Line_9 $$ SubMulti sm2 = new SubMulti()-->Line_16 $$ list.add(sm2)[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_43 $$ assertTrue(sm.getChildren().size() == 2)[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_53 $$ s2.flush()[ FD ]
Line_11 $$ ArrayList anotherList = new ArrayList()-->Line_18 $$ anotherList.add(sm2)[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_54 $$ s2.getTransaction().commit()[ FD ]
Line_8 $$ SubMulti sm1 = new SubMulti()-->Line_22 $$ s.save(sm1)[ FD ]
Line_50 $$ while (iter.hasNext()) -->Line_51 $$ s2.delete(iter.next())[ CD ]
Line_21 $$ Serializable id = s.save(sm)-->Line_42 $$ sm = (SubMulti) s2.load(SubMulti.class, id)[ FD ]
Line_11 $$ ArrayList anotherList = new ArrayList()-->Line_17 $$ anotherList.add(sm1)[ FD ]
Line_8 $$ SubMulti sm1 = new SubMulti()-->Line_17 $$ anotherList.add(sm1)[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_28 $$ s2.beginTransaction()[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_14 $$ sm.setExtraProp("foo")[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_48 $$ s2.delete(sm)[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_39 $$ s2.createQuery("select c from SubMulti sm join sm.children c").list()[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_47 $$ assertTrue(sm.getMoreChildren().size() == 2)[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_51 $$ s2.delete(iter.next())[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_44 $$ assertEquals(s2.createFilter(sm.getMoreChildren(), "select count(*) where this.amount>-1 and this.name is null").list().get(0), new Long(2))[ FD ]
Line_10 $$ ArrayList list = new ArrayList()-->Line_12 $$ sm.setChildren(list)[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_44 $$ assertEquals(s2.createFilter(sm.getMoreChildren(), "select count(*) where this.amount>-1 and this.name is null").list().get(0), new Long(2))[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_48 $$ s2.delete(sm)[ FD ]
Line_10 $$ ArrayList list = new ArrayList()-->Line_16 $$ list.add(sm2)[ FD ]
Line_27 $$ final Session s2 = openSession()-->Line_40 $$ assertTrue(s2.createQuery("select elements(sm.children) from SubMulti as sm").list().size() == 2)[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_13 $$ sm.setMoreChildren(anotherList)[ FD ]
Line_29 $$ s2.doWork(new Work() -->Line_33 $$ final String sql = "select * from leafsubsubclass sm, nonleafsubclass m, rootclass s " + "where sm.sid=m.sid and sm.sid=s.id1_ and sm.sid=1"[ CD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_49 $$ Iterator iter = sm.getChildren().iterator()[ FD ]
Line_7 $$ SubMulti sm = new SubMulti()-->Line_45 $$ assertEquals("FOO", sm.getDerived())[ FD ]
Line_9 $$ SubMulti sm2 = new SubMulti()-->Line_20 $$ sm2.setParent(sm)[ FD ]
