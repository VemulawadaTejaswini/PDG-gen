Line_3 $$ if (!set.add(start)) -->Line_4 $$ return[ CD ]
Line_6 $$ Iterator<Node> iterator = graph.getOut(start)-->Line_7 $$ while (iterator.hasNext()) [ FD ]
Line_2 $$ public <Node> void collectOutsRecursively(@NotNull Graph<Node> graph, Node start, Set<Node> set) -->Line_9 $$ collectOutsRecursively(graph, node, set)[ FD ]
Line_7 $$ while (iterator.hasNext()) -->Line_9 $$ collectOutsRecursively(graph, node, set)[ CD ]
Line_2 $$ public <Node> void collectOutsRecursively(@NotNull Graph<Node> graph, Node start, Set<Node> set) -->Line_6 $$ Iterator<Node> iterator = graph.getOut(start)[ CD ]
Line_2 $$ public <Node> void collectOutsRecursively(@NotNull Graph<Node> graph, Node start, Set<Node> set) -->Line_6 $$ Iterator<Node> iterator = graph.getOut(start)[ FD ]
Line_8 $$ Node node = iterator.next()-->Line_9 $$ collectOutsRecursively(graph, node, set)[ FD ]
Line_2 $$ public <Node> void collectOutsRecursively(@NotNull Graph<Node> graph, Node start, Set<Node> set) -->Line_3 $$ if (!set.add(start)) [ CD ]
Line_7 $$ while (iterator.hasNext()) -->Line_8 $$ Node node = iterator.next()[ CD ]
Line_6 $$ Iterator<Node> iterator = graph.getOut(start)-->Line_8 $$ Node node = iterator.next()[ FD ]
Line_2 $$ public <Node> void collectOutsRecursively(@NotNull Graph<Node> graph, Node start, Set<Node> set) -->Line_7 $$ while (iterator.hasNext()) [ CD ]
Line_2 $$ public <Node> void collectOutsRecursively(@NotNull Graph<Node> graph, Node start, Set<Node> set) -->Line_3 $$ if (!set.add(start)) [ FD ]
