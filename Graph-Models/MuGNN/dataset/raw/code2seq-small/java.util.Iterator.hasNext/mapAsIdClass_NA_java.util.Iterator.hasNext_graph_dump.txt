Line_12 $$ if (classWithIdClass != null) -->Line_52 $$ Iterator properties = mapper.getPropertyIterator()[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_24 $$ boolean isComponent = true[ CD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_45 $$ property.setName(PropertyPath.IDENTIFIER_MAPPER_PROPERTY)[ CD ]
Line_27 $$ boolean ignoreIdAnnotations = entityBinder.isIgnoreIdAnnotations()-->Line_34 $$ entityBinder.setIgnoreIdAnnotations(ignoreIdAnnotations)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_44 $$ Property property = new Property()[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_49 $$ property.setPropertyAccessorName("embedded")[ CD ]
Line_44 $$ Property property = new Property()-->Line_49 $$ property.setPropertyAccessorName("embedded")[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_31 $$ propertyHolder.setInIdClass(null)[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_14 $$ XClass compositeClass = context.getBuildingOptions().getReflectionManager().toXClass(idClass.value())[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_32 $$ inferredData = new PropertyPreloadedData(propertyAccessor, PropertyPath.IDENTIFIER_MAPPER_PROPERTY, compositeClass)[ CD ]
Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)-->Line_35 $$ persistentClass.setIdentifierMapper(mapper)[ FD ]
Line_44 $$ Property property = new Property()-->Line_45 $$ property.setName(PropertyPath.IDENTIFIER_MAPPER_PROPERTY)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_51 $$ entityBinder.setIgnoreIdAnnotations(true)[ FD ]
Line_25 $$ String generatorType = "assigned"-->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_54 $$ idPropertiesIfIdClass.add(((Property) properties.next()).getName())[ FD ]
Line_44 $$ Property property = new Property()-->Line_50 $$ persistentClass.addProperty(property)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_35 $$ persistentClass.setIdentifierMapper(mapper)[ FD ]
Line_52 $$ Iterator properties = mapper.getPropertyIterator()-->Line_53 $$ while (properties.hasNext()) [ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_15 $$ PropertyData inferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", compositeClass)[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_27 $$ boolean ignoreIdAnnotations = entityBinder.isIgnoreIdAnnotations()[ CD ]
Line_16 $$ PropertyData baseInferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", classWithIdClass)-->Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_29 $$ propertyHolder.setInIdClass(true)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_46 $$ property.setUpdateable(false)[ CD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_28 $$ entityBinder.setIgnoreIdAnnotations(true)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_17 $$ AccessType propertyAccessor = entityBinder.getPropertyAccessor(compositeClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_34 $$ entityBinder.setIgnoreIdAnnotations(ignoreIdAnnotations)[ CD ]
Line_16 $$ PropertyData baseInferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", classWithIdClass)-->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_50 $$ persistentClass.addProperty(property)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_13 $$ IdClass idClass = classWithIdClass.getAnnotation(IdClass.class)[ CD ]
Line_15 $$ PropertyData inferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", compositeClass)-->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_29 $$ propertyHolder.setInIdClass(true)[ CD ]
Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)-->Line_52 $$ Iterator properties = mapper.getPropertyIterator()[ FD ]
Line_52 $$ Iterator properties = mapper.getPropertyIterator()-->Line_54 $$ idPropertiesIfIdClass.add(((Property) properties.next()).getName())[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_21 $$ if (isFakeIdClass) [ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_17 $$ AccessType propertyAccessor = entityBinder.getPropertyAccessor(compositeClass)[ CD ]
Line_44 $$ Property property = new Property()-->Line_47 $$ property.setInsertable(false)[ FD ]
Line_17 $$ AccessType propertyAccessor = entityBinder.getPropertyAccessor(compositeClass)-->Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_53 $$ while (properties.hasNext()) [ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_16 $$ PropertyData baseInferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", classWithIdClass)[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)[ CD ]
Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)-->Line_39 $$ superclass.setDeclaredIdentifierMapper(mapper)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_27 $$ boolean ignoreIdAnnotations = entityBinder.isIgnoreIdAnnotations()[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_38 $$ if (superclass != null) [ CD ]
Line_17 $$ AccessType propertyAccessor = entityBinder.getPropertyAccessor(compositeClass)-->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ FD ]
Line_44 $$ Property property = new Property()-->Line_48 $$ property.setValue(mapper)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_15 $$ PropertyData inferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", compositeClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_26 $$ String generator = BinderHelper.ANNOTATION_STRING_DEFAULT[ CD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_34 $$ entityBinder.setIgnoreIdAnnotations(ignoreIdAnnotations)[ FD ]
Line_15 $$ PropertyData inferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", compositeClass)-->Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_50 $$ persistentClass.addProperty(property)[ CD ]
Line_24 $$ boolean isComponent = true-->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_47 $$ property.setInsertable(false)[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_28 $$ entityBinder.setIgnoreIdAnnotations(true)[ CD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)[ FD ]
Line_15 $$ PropertyData inferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", compositeClass)-->Line_32 $$ inferredData = new PropertyPreloadedData(propertyAccessor, PropertyPath.IDENTIFIER_MAPPER_PROPERTY, compositeClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_35 $$ persistentClass.setIdentifierMapper(mapper)[ CD ]
Line_26 $$ String generator = BinderHelper.ANNOTATION_STRING_DEFAULT-->Line_30 $$ bindIdClass(generatorType, generator, inferredData, baseInferredData, null, propertyHolder, isComponent, propertyAccessor, entityBinder, true, false, context, inheritanceStatePerClass)[ FD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_16 $$ PropertyData baseInferredData = new PropertyPreloadedData(entityBinder.getPropertyAccessType(), "id", classWithIdClass)[ FD ]
Line_21 $$ if (isFakeIdClass) -->Line_22 $$ return false[ CD ]
Line_32 $$ inferredData = new PropertyPreloadedData(propertyAccessor, PropertyPath.IDENTIFIER_MAPPER_PROPERTY, compositeClass)-->Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)[ FD ]
Line_33 $$ Component mapper = fillComponent(propertyHolder, inferredData, baseInferredData, propertyAccessor, false, entityBinder, true, true, false, context, inheritanceStatePerClass)-->Line_48 $$ property.setValue(mapper)[ FD ]
Line_13 $$ IdClass idClass = classWithIdClass.getAnnotation(IdClass.class)-->Line_14 $$ XClass compositeClass = context.getBuildingOptions().getReflectionManager().toXClass(idClass.value())[ FD ]
Line_14 $$ XClass compositeClass = context.getBuildingOptions().getReflectionManager().toXClass(idClass.value())-->Line_17 $$ AccessType propertyAccessor = entityBinder.getPropertyAccessor(compositeClass)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_51 $$ entityBinder.setIgnoreIdAnnotations(true)[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_56 $$ return true[ CD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_14 $$ XClass compositeClass = context.getBuildingOptions().getReflectionManager().toXClass(idClass.value())[ FD ]
Line_44 $$ Property property = new Property()-->Line_46 $$ property.setUpdateable(false)[ FD ]
Line_12 $$ if (classWithIdClass != null) -->Line_48 $$ property.setValue(mapper)[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_58 $$ return false[ CD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_12 $$ if (classWithIdClass != null) [ CD ]
Line_2 $$ private static boolean mapAsIdClass(Map<XClass, InheritanceState> inheritanceStatePerClass, InheritanceState inheritanceState, PersistentClass persistentClass, EntityBinder entityBinder, PropertyHolder propertyHolder, InheritanceState.ElementsToProcess elementsToProcess, Set<String> idPropertiesIfIdClass, MetadataBuildingContext context) -->Line_31 $$ propertyHolder.setInIdClass(null)[ FD ]
Line_38 $$ if (superclass != null) -->Line_39 $$ superclass.setDeclaredIdentifierMapper(mapper)[ CD ]
Line_53 $$ while (properties.hasNext()) -->Line_54 $$ idPropertiesIfIdClass.add(((Property) properties.next()).getName())[ CD ]
Line_12 $$ if (classWithIdClass != null) -->Line_25 $$ String generatorType = "assigned"[ CD ]
