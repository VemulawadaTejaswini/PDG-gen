Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_6 $$ generator.loadLocal(componentLocal)[ FD ]
Line_11 $$ if (value instanceof Boolean) -->Line_20 $$ Type valueType = Type.getType(value.getClass())[ CD ]
Line_23 $$ if (value instanceof Integer) -->Line_24 $$ generator.push(((Integer) value).intValue())[ CD ]
Line_26 $$ if (value instanceof Double) -->Line_27 $$ generator.push(((Double) value).doubleValue())[ CD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_10 $$ generator.push(((StringDescriptor) value).getValue())[ FD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_5 $$ Map.Entry e = (Map.Entry) iterator.next()[ FD ]
Line_26 $$ if (value instanceof Double) -->Line_28 $$ generator.invokeConstructor(valueType, Method.getMethod("void <init>(double)"))[ CD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_33 $$ Type componentType = Type.getType(componentClass.getDescriptor())[ CD ]
Line_13 $$ Type booleanType = Type.getType(Boolean.class)-->Line_15 $$ generator.getStatic(booleanType, "TRUE", booleanType)[ FD ]
Line_20 $$ Type valueType = Type.getType(value.getClass())-->Line_28 $$ generator.invokeConstructor(valueType, Method.getMethod("void <init>(double)"))[ FD ]
Line_13 $$ Type booleanType = Type.getType(Boolean.class)-->Line_17 $$ generator.getStatic(booleanType, "FALSE", booleanType)[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_24 $$ generator.push(((Integer) value).intValue())[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_3 $$ HashMap props = lwComponent.getDelegeeClientProperties()[ CD ]
Line_11 $$ if (value instanceof Boolean) -->Line_21 $$ generator.newInstance(valueType)[ CD ]
Line_14 $$ if (boolValue) -->Line_17 $$ generator.getStatic(booleanType, "FALSE", booleanType)[ CD ]
Line_9 $$ if (value instanceof StringDescriptor) -->Line_10 $$ generator.push(((StringDescriptor) value).getValue())[ CD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_35 $$ generator.invokeVirtual(componentType, new Method("putClientProperty", Type.VOID_TYPE, new Type[] [ CD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_7 $$ generator.push((String) e.getKey())[ CD ]
Line_11 $$ if (value instanceof Boolean) -->Line_12 $$ boolean boolValue = ((Boolean) value).booleanValue()[ CD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_17 $$ generator.getStatic(booleanType, "FALSE", booleanType)[ FD ]
Line_8 $$ Object value = e.getValue()-->Line_9 $$ if (value instanceof StringDescriptor) [ FD ]
Line_20 $$ Type valueType = Type.getType(value.getClass())-->Line_25 $$ generator.invokeConstructor(valueType, Method.getMethod("void <init>(int)"))[ FD ]
Line_20 $$ Type valueType = Type.getType(value.getClass())-->Line_21 $$ generator.newInstance(valueType)[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_21 $$ generator.newInstance(valueType)[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_33 $$ Type componentType = Type.getType(componentClass.getDescriptor())[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_28 $$ generator.invokeConstructor(valueType, Method.getMethod("void <init>(double)"))[ FD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_8 $$ Object value = e.getValue()[ CD ]
Line_8 $$ Object value = e.getValue()-->Line_20 $$ Type valueType = Type.getType(value.getClass())[ FD ]
Line_14 $$ if (boolValue) -->Line_15 $$ generator.getStatic(booleanType, "TRUE", booleanType)[ CD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_34 $$ Type objectType = Type.getType(Object.class)[ CD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_35 $$ generator.invokeVirtual(componentType, new Method("putClientProperty", Type.VOID_TYPE, new Type[] [ FD ]
Line_3 $$ HashMap props = lwComponent.getDelegeeClientProperties()-->Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) [ FD ]
Line_8 $$ Object value = e.getValue()-->Line_23 $$ if (value instanceof Integer) [ FD ]
Line_23 $$ if (value instanceof Integer) -->Line_26 $$ if (value instanceof Double) [ CD ]
Line_9 $$ if (value instanceof StringDescriptor) -->Line_11 $$ if (value instanceof Boolean) [ CD ]
Line_8 $$ Object value = e.getValue()-->Line_26 $$ if (value instanceof Double) [ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_30 $$ throw new CodeGenerationException(lwComponent.getId(), "Unknown client property value type")[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_15 $$ generator.getStatic(booleanType, "TRUE", booleanType)[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_7 $$ generator.push((String) e.getKey())[ FD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_6 $$ generator.loadLocal(componentLocal)[ CD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_25 $$ generator.invokeConstructor(valueType, Method.getMethod("void <init>(int)"))[ FD ]
Line_33 $$ Type componentType = Type.getType(componentClass.getDescriptor())-->Line_35 $$ generator.invokeVirtual(componentType, new Method("putClientProperty", Type.VOID_TYPE, new Type[] [ FD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_9 $$ if (value instanceof StringDescriptor) [ CD ]
Line_11 $$ if (value instanceof Boolean) -->Line_22 $$ generator.dup()[ CD ]
Line_4 $$ for (Iterator iterator = props.entrySet().iterator(); iterator.hasNext(); ) -->Line_5 $$ Map.Entry e = (Map.Entry) iterator.next()[ CD ]
Line_11 $$ if (value instanceof Boolean) -->Line_14 $$ if (boolValue) [ CD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_22 $$ generator.dup()[ FD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_3 $$ HashMap props = lwComponent.getDelegeeClientProperties()[ FD ]
Line_11 $$ if (value instanceof Boolean) -->Line_23 $$ if (value instanceof Integer) [ CD ]
Line_2 $$ private void generateClientProperties(final LwComponent lwComponent, final InstrumentationClassFinder.PseudoClass componentClass, final GeneratorAdapter generator, final int componentLocal) throws CodeGenerationException -->Line_27 $$ generator.push(((Double) value).doubleValue())[ FD ]
Line_5 $$ Map.Entry e = (Map.Entry) iterator.next()-->Line_7 $$ generator.push((String) e.getKey())[ FD ]
Line_8 $$ Object value = e.getValue()-->Line_11 $$ if (value instanceof Boolean) [ FD ]
Line_23 $$ if (value instanceof Integer) -->Line_25 $$ generator.invokeConstructor(valueType, Method.getMethod("void <init>(int)"))[ CD ]
Line_11 $$ if (value instanceof Boolean) -->Line_13 $$ Type booleanType = Type.getType(Boolean.class)[ CD ]
Line_5 $$ Map.Entry e = (Map.Entry) iterator.next()-->Line_8 $$ Object value = e.getValue()[ FD ]
