Line_26 $$ targetItr = foreignKey.getReferencedColumns().iterator()-->Line_32 $$ targetColumnNames[i] = ((Column) targetItr.next()).getQuotedName(dialect)[ FD ]
Line_17 $$ if (foreignKey.isReferenceToPrimaryKey()) -->Line_23 $$ if (numberOfColumns != foreignKey.getReferencedColumns().size()) [ CD ]
Line_38 $$ final StringBuilder buffer = new StringBuilder("alter table ").append(sourceTableName).append(dialect.getAddForeignKeyConstraintString(foreignKey.getName(), columnNames, targetTableName, targetColumnNames, foreignKey.isReferenceToPrimaryKey()))-->Line_44 $$ return new String[] [ FD ]
Line_7 $$ if (!foreignKey.isCreationEnabled()) -->Line_8 $$ return NO_COMMANDS[ CD ]
Line_13 $$ final int numberOfColumns = foreignKey.getColumnSpan()-->Line_24 $$ throw new AssertionFailure(String.format(Locale.ENGLISH, COLUMN_MISMATCH_MSG, numberOfColumns, foreignKey.getReferencedColumns().size(), foreignKey.getName(), foreignKey.getTable().getName(), foreignKey.getReferencedTable().getName()))[ FD ]
Line_36 $$ final String sourceTableName = jdbcEnvironment.getQualifiedObjectNameFormatter().format(foreignKey.getTable().getQualifiedTableName(), dialect)-->Line_38 $$ final StringBuilder buffer = new StringBuilder("alter table ").append(sourceTableName).append(dialect.getAddForeignKeyConstraintString(foreignKey.getName(), columnNames, targetTableName, targetColumnNames, foreignKey.isReferenceToPrimaryKey()))[ FD ]
Line_28 $$ int i = 0-->Line_33 $$ i++[ FD ]
Line_15 $$ final String[] targetColumnNames = new String[numberOfColumns]-->Line_38 $$ final StringBuilder buffer = new StringBuilder("alter table ").append(sourceTableName).append(dialect.getAddForeignKeyConstraintString(foreignKey.getName(), columnNames, targetTableName, targetColumnNames, foreignKey.isReferenceToPrimaryKey()))[ FD ]
Line_39 $$ if (dialect.supportsCascadeDelete()) -->Line_40 $$ if (foreignKey.isCascadeDeleteEnabled()) [ CD ]
Line_37 $$ final String targetTableName = jdbcEnvironment.getQualifiedObjectNameFormatter().format(foreignKey.getReferencedTable().getQualifiedTableName(), dialect)-->Line_38 $$ final StringBuilder buffer = new StringBuilder("alter table ").append(sourceTableName).append(dialect.getAddForeignKeyConstraintString(foreignKey.getName(), columnNames, targetTableName, targetColumnNames, foreignKey.isReferenceToPrimaryKey()))[ FD ]
Line_30 $$ while (itr.hasNext()) -->Line_32 $$ targetColumnNames[i] = ((Column) targetItr.next()).getQuotedName(dialect)[ CD ]
Line_40 $$ if (foreignKey.isCascadeDeleteEnabled()) -->Line_41 $$ buffer.append(" on delete cascade")[ CD ]
Line_16 $$ final Iterator targetItr-->Line_21 $$ targetItr = foreignKey.getReferencedTable().getPrimaryKey().getColumnIterator()[ FD ]
Line_35 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()-->Line_37 $$ final String targetTableName = jdbcEnvironment.getQualifiedObjectNameFormatter().format(foreignKey.getReferencedTable().getQualifiedTableName(), dialect)[ FD ]
Line_4 $$ if (!dialect.hasAlterTable()) -->Line_5 $$ return NO_COMMANDS[ CD ]
Line_10 $$ if (!foreignKey.isPhysicalConstraint()) -->Line_11 $$ return NO_COMMANDS[ CD ]
Line_35 $$ final JdbcEnvironment jdbcEnvironment = metadata.getDatabase().getJdbcEnvironment()-->Line_36 $$ final String sourceTableName = jdbcEnvironment.getQualifiedObjectNameFormatter().format(foreignKey.getTable().getQualifiedTableName(), dialect)[ FD ]
Line_14 $$ final String[] columnNames = new String[numberOfColumns]-->Line_38 $$ final StringBuilder buffer = new StringBuilder("alter table ").append(sourceTableName).append(dialect.getAddForeignKeyConstraintString(foreignKey.getName(), columnNames, targetTableName, targetColumnNames, foreignKey.isReferenceToPrimaryKey()))[ FD ]
Line_38 $$ final StringBuilder buffer = new StringBuilder("alter table ").append(sourceTableName).append(dialect.getAddForeignKeyConstraintString(foreignKey.getName(), columnNames, targetTableName, targetColumnNames, foreignKey.isReferenceToPrimaryKey()))-->Line_41 $$ buffer.append(" on delete cascade")[ FD ]
Line_30 $$ while (itr.hasNext()) -->Line_33 $$ i++[ CD ]
Line_21 $$ targetItr = foreignKey.getReferencedTable().getPrimaryKey().getColumnIterator()-->Line_26 $$ targetItr = foreignKey.getReferencedColumns().iterator()[ FD ]
Line_17 $$ if (foreignKey.isReferenceToPrimaryKey()) -->Line_21 $$ targetItr = foreignKey.getReferencedTable().getPrimaryKey().getColumnIterator()[ CD ]
Line_30 $$ while (itr.hasNext()) -->Line_31 $$ columnNames[i] = ((Column) itr.next()).getQuotedName(dialect)[ CD ]
Line_13 $$ final int numberOfColumns = foreignKey.getColumnSpan()-->Line_23 $$ if (numberOfColumns != foreignKey.getReferencedColumns().size()) [ FD ]
Line_13 $$ final int numberOfColumns = foreignKey.getColumnSpan()-->Line_19 $$ throw new AssertionFailure(String.format(Locale.ENGLISH, COLUMN_MISMATCH_MSG, numberOfColumns, foreignKey.getReferencedTable().getPrimaryKey().getColumnSpan(), foreignKey.getName(), foreignKey.getTable().getName(), foreignKey.getReferencedTable().getName()))[ FD ]
Line_21 $$ targetItr = foreignKey.getReferencedTable().getPrimaryKey().getColumnIterator()-->Line_32 $$ targetColumnNames[i] = ((Column) targetItr.next()).getQuotedName(dialect)[ FD ]
Line_17 $$ if (foreignKey.isReferenceToPrimaryKey()) -->Line_26 $$ targetItr = foreignKey.getReferencedColumns().iterator()[ CD ]
Line_13 $$ final int numberOfColumns = foreignKey.getColumnSpan()-->Line_18 $$ if (numberOfColumns != foreignKey.getReferencedTable().getPrimaryKey().getColumnSpan()) [ FD ]
Line_29 $$ final Iterator itr = foreignKey.getColumnIterator()-->Line_31 $$ columnNames[i] = ((Column) itr.next()).getQuotedName(dialect)[ FD ]
Line_16 $$ final Iterator targetItr-->Line_26 $$ targetItr = foreignKey.getReferencedColumns().iterator()[ FD ]
Line_17 $$ if (foreignKey.isReferenceToPrimaryKey()) -->Line_18 $$ if (numberOfColumns != foreignKey.getReferencedTable().getPrimaryKey().getColumnSpan()) [ CD ]
Line_29 $$ final Iterator itr = foreignKey.getColumnIterator()-->Line_30 $$ while (itr.hasNext()) [ FD ]
Line_16 $$ final Iterator targetItr-->Line_32 $$ targetColumnNames[i] = ((Column) targetItr.next()).getQuotedName(dialect)[ FD ]
