Line_4 $$ FastFixedSet<Integer> set = mapExtPostdominators.get(head)-->Line_10 $$ if (set.isEmpty()) [ FD ]
Line_2 $$ private void filterOnExceptionRanges(DominatorTreeExceptionFilter filter) -->Line_6 $$ if (!filter.acceptStatementPair(head, it.next())) [ FD ]
Line_6 $$ if (!filter.acceptStatementPair(head, it.next())) -->Line_7 $$ it.remove()[ CD ]
Line_3 $$ for (Integer head : new HashSet<Integer>(mapExtPostdominators.keySet())) -->Line_6 $$ if (!filter.acceptStatementPair(head, it.next())) [ FD ]
Line_3 $$ for (Integer head : new HashSet<Integer>(mapExtPostdominators.keySet())) -->Line_4 $$ FastFixedSet<Integer> set = mapExtPostdominators.get(head)[ FD ]
Line_5 $$ for (Iterator<Integer> it = set.iterator(); it.hasNext(); ) -->Line_6 $$ if (!filter.acceptStatementPair(head, it.next())) [ CD ]
Line_5 $$ for (Iterator<Integer> it = set.iterator(); it.hasNext(); ) -->Line_7 $$ it.remove()[ FD ]
Line_4 $$ FastFixedSet<Integer> set = mapExtPostdominators.get(head)-->Line_5 $$ for (Iterator<Integer> it = set.iterator(); it.hasNext(); ) [ FD ]
Line_5 $$ for (Iterator<Integer> it = set.iterator(); it.hasNext(); ) -->Line_6 $$ if (!filter.acceptStatementPair(head, it.next())) [ FD ]
Line_3 $$ for (Integer head : new HashSet<Integer>(mapExtPostdominators.keySet())) -->Line_11 $$ mapExtPostdominators.remove(head)[ FD ]
Line_10 $$ if (set.isEmpty()) -->Line_11 $$ mapExtPostdominators.remove(head)[ CD ]
