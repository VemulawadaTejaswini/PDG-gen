Line_2 $$ private static void checkResult(int count, Object[] btree) -->Line_4 $$ int i = 0[ CD ]
Line_2 $$ private static void checkResult(int count, Object[] btree) -->Line_6 $$ assertEquals(count, i)[ FD ]
Line_2 $$ private static void checkResult(int count, Object[] btree) -->Line_3 $$ Iterator<Integer> iter = BTree.slice(btree, CMP, BTree.Dir.ASC)[ FD ]
Line_2 $$ private static void checkResult(int count, Object[] btree) -->Line_5 $$ while (iter.hasNext()) assertEquals(iter.next(), ints[i++])[ CD ]
Line_3 $$ Iterator<Integer> iter = BTree.slice(btree, CMP, BTree.Dir.ASC)-->Line_5 $$ while (iter.hasNext()) assertEquals(iter.next(), ints[i++])[ FD ]
Line_4 $$ int i = 0-->Line_5 $$ assertEquals(iter.next(), ints[i++])[ FD ]
Line_3 $$ Iterator<Integer> iter = BTree.slice(btree, CMP, BTree.Dir.ASC)-->Line_5 $$ assertEquals(iter.next(), ints[i++])[ FD ]
Line_4 $$ int i = 0-->Line_6 $$ assertEquals(count, i)[ FD ]
Line_2 $$ private static void checkResult(int count, Object[] btree) -->Line_3 $$ Iterator<Integer> iter = BTree.slice(btree, CMP, BTree.Dir.ASC)[ CD ]
Line_2 $$ private static void checkResult(int count, Object[] btree) -->Line_6 $$ assertEquals(count, i)[ CD ]
