Line_21 $$ if (itr.hasNext()) -->Line_23 $$ if (count != null) [ CD ]
Line_10 $$ session = openSession()-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_23 $$ if (count != null) -->Line_24 $$ return count.intValue()[ CD ]
Line_20 $$ Iterator<Long> itr = q.iterate()-->Line_21 $$ if (itr.hasNext()) [ FD ]
Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_19 $$ qPos.add(names, 2)[ FD ]
Line_6 $$ params = _emptyLinkedHashMap-->Line_18 $$ setGroupIds(qPos, groupId, params)[ FD ]
Line_22 $$ Long count = itr.next()-->Line_24 $$ return count.intValue()[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N)-->Line_14 $$ sql = CustomSQLUtil.replaceAndOperator(sql, true)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(params))-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ Session session = null-->Line_31 $$ closeSession(session)[ FD ]
Line_10 $$ session = openSession()-->Line_31 $$ closeSession(session)[ FD ]
Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_18 $$ setGroupIds(qPos, groupId, params)[ FD ]
Line_8 $$ Session session = null-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_21 $$ if (itr.hasNext()) -->Line_22 $$ Long count = itr.next()[ CD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, true, names)-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_16 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, true, names)-->Line_14 $$ sql = CustomSQLUtil.replaceAndOperator(sql, true)[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N)-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_5 $$ if (params == null) -->Line_6 $$ params = _emptyLinkedHashMap[ CD ]
Line_8 $$ Session session = null-->Line_10 $$ session = openSession()[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N)-->Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(params))[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(params))-->Line_14 $$ sql = CustomSQLUtil.replaceAndOperator(sql, true)[ FD ]
Line_20 $$ Iterator<Long> itr = q.iterate()-->Line_22 $$ Long count = itr.next()[ FD ]
Line_11 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N)-->Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, true, names)[ FD ]
Line_22 $$ Long count = itr.next()-->Line_23 $$ if (count != null) [ FD ]
Line_6 $$ params = _emptyLinkedHashMap-->Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(params))[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(params))-->Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, true, names)[ FD ]
Line_4 $$ names = CustomSQLUtil.keywords(names)-->Line_19 $$ qPos.add(names, 2)[ FD ]
Line_14 $$ sql = CustomSQLUtil.replaceAndOperator(sql, true)-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_4 $$ names = CustomSQLUtil.keywords(names)-->Line_13 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(name)", StringPool.LIKE, true, names)[ FD ]
Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_20 $$ Iterator<Long> itr = q.iterate()[ FD ]
