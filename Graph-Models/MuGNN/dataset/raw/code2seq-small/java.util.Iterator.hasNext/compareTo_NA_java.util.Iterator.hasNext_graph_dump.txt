Line_2 $$ public int compareTo(DestinationPatternsMessageCondition other, Message<?> message) -->Line_3 $$ String destination = (String) message.getHeaders().get(LOOKUP_DESTINATION_HEADER)[ FD ]
Line_6 $$ Iterator<String> iteratorOther = other.patterns.iterator()-->Line_15 $$ if (iteratorOther.hasNext()) [ FD ]
Line_15 $$ if (iteratorOther.hasNext()) -->Line_16 $$ return 1[ CD ]
Line_2 $$ public int compareTo(DestinationPatternsMessageCondition other, Message<?> message) -->Line_13 $$ if (iterator.hasNext()) [ CD ]
Line_9 $$ if (result != 0) -->Line_10 $$ return result[ CD ]
Line_6 $$ Iterator<String> iteratorOther = other.patterns.iterator()-->Line_7 $$ while (iterator.hasNext() && iteratorOther.hasNext()) [ FD ]
Line_7 $$ while (iterator.hasNext() && iteratorOther.hasNext()) -->Line_9 $$ if (result != 0) [ CD ]
Line_2 $$ public int compareTo(DestinationPatternsMessageCondition other, Message<?> message) -->Line_5 $$ Iterator<String> iterator = patterns.iterator()[ CD ]
Line_5 $$ Iterator<String> iterator = patterns.iterator()-->Line_8 $$ int result = patternComparator.compare(iterator.next(), iteratorOther.next())[ FD ]
Line_5 $$ Iterator<String> iterator = patterns.iterator()-->Line_7 $$ while (iterator.hasNext() && iteratorOther.hasNext()) [ FD ]
Line_2 $$ public int compareTo(DestinationPatternsMessageCondition other, Message<?> message) -->Line_3 $$ String destination = (String) message.getHeaders().get(LOOKUP_DESTINATION_HEADER)[ CD ]
Line_6 $$ Iterator<String> iteratorOther = other.patterns.iterator()-->Line_8 $$ int result = patternComparator.compare(iterator.next(), iteratorOther.next())[ FD ]
Line_5 $$ Iterator<String> iterator = patterns.iterator()-->Line_13 $$ if (iterator.hasNext()) [ FD ]
Line_13 $$ if (iterator.hasNext()) -->Line_14 $$ return -1[ CD ]
Line_2 $$ public int compareTo(DestinationPatternsMessageCondition other, Message<?> message) -->Line_6 $$ Iterator<String> iteratorOther = other.patterns.iterator()[ CD ]
Line_2 $$ public int compareTo(DestinationPatternsMessageCondition other, Message<?> message) -->Line_4 $$ Comparator<String> patternComparator = this.pathMatcher.getPatternComparator(destination)[ CD ]
Line_13 $$ if (iterator.hasNext()) -->Line_15 $$ if (iteratorOther.hasNext()) [ CD ]
Line_8 $$ int result = patternComparator.compare(iterator.next(), iteratorOther.next())-->Line_9 $$ if (result != 0) [ FD ]
Line_2 $$ public int compareTo(DestinationPatternsMessageCondition other, Message<?> message) -->Line_7 $$ while (iterator.hasNext() && iteratorOther.hasNext()) [ CD ]
Line_4 $$ Comparator<String> patternComparator = this.pathMatcher.getPatternComparator(destination)-->Line_8 $$ int result = patternComparator.compare(iterator.next(), iteratorOther.next())[ FD ]
Line_3 $$ String destination = (String) message.getHeaders().get(LOOKUP_DESTINATION_HEADER)-->Line_4 $$ Comparator<String> patternComparator = this.pathMatcher.getPatternComparator(destination)[ FD ]
Line_7 $$ while (iterator.hasNext() && iteratorOther.hasNext()) -->Line_8 $$ int result = patternComparator.compare(iterator.next(), iteratorOther.next())[ CD ]
Line_15 $$ if (iteratorOther.hasNext()) -->Line_18 $$ return 0[ CD ]
