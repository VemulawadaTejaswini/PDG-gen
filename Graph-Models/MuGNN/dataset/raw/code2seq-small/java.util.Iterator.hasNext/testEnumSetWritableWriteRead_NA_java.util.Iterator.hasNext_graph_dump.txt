Line_4 $$ DataOutputBuffer out = new DataOutputBuffer()-->Line_5 $$ srcSet.write(out)[ FD ]
Line_12 $$ Iterator<TestEnumSet> srcIter = srcSet.iterator()-->Line_13 $$ while (dstIter.hasNext() && srcIter.hasNext()) [ FD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_10 $$ EnumSet<TestEnumSet> result = dstSet.get()[ CD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_7 $$ DataInputBuffer in = new DataInputBuffer()[ CD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_8 $$ in.reset(out.getData(), out.getLength())[ CD ]
Line_13 $$ while (dstIter.hasNext() && srcIter.hasNext()) -->Line_14 $$ assertEquals("testEnumSetWritableWriteRead error !!!", dstIter.next(), srcIter.next())[ CD ]
Line_10 $$ EnumSet<TestEnumSet> result = dstSet.get()-->Line_11 $$ Iterator<TestEnumSet> dstIter = result.iterator()[ FD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_11 $$ Iterator<TestEnumSet> dstIter = result.iterator()[ CD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_6 $$ EnumSetWritable<TestEnumSet> dstSet = new EnumSetWritable<TestEnumSet>()[ CD ]
Line_3 $$ EnumSetWritable<TestEnumSet> srcSet = new EnumSetWritable<TestEnumSet>(EnumSet.of(TestEnumSet.APPEND, TestEnumSet.CREATE), TestEnumSet.class)-->Line_5 $$ srcSet.write(out)[ FD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_13 $$ while (dstIter.hasNext() && srcIter.hasNext()) [ CD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_5 $$ srcSet.write(out)[ CD ]
Line_12 $$ Iterator<TestEnumSet> srcIter = srcSet.iterator()-->Line_14 $$ assertEquals("testEnumSetWritableWriteRead error !!!", dstIter.next(), srcIter.next())[ FD ]
Line_7 $$ DataInputBuffer in = new DataInputBuffer()-->Line_9 $$ dstSet.readFields(in)[ FD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_12 $$ Iterator<TestEnumSet> srcIter = srcSet.iterator()[ CD ]
Line_6 $$ EnumSetWritable<TestEnumSet> dstSet = new EnumSetWritable<TestEnumSet>()-->Line_9 $$ dstSet.readFields(in)[ FD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_9 $$ dstSet.readFields(in)[ CD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_3 $$ EnumSetWritable<TestEnumSet> srcSet = new EnumSetWritable<TestEnumSet>(EnumSet.of(TestEnumSet.APPEND, TestEnumSet.CREATE), TestEnumSet.class)[ CD ]
Line_11 $$ Iterator<TestEnumSet> dstIter = result.iterator()-->Line_14 $$ assertEquals("testEnumSetWritableWriteRead error !!!", dstIter.next(), srcIter.next())[ FD ]
Line_11 $$ Iterator<TestEnumSet> dstIter = result.iterator()-->Line_13 $$ while (dstIter.hasNext() && srcIter.hasNext()) [ FD ]
Line_4 $$ DataOutputBuffer out = new DataOutputBuffer()-->Line_8 $$ in.reset(out.getData(), out.getLength())[ FD ]
Line_6 $$ EnumSetWritable<TestEnumSet> dstSet = new EnumSetWritable<TestEnumSet>()-->Line_10 $$ EnumSet<TestEnumSet> result = dstSet.get()[ FD ]
Line_3 $$ EnumSetWritable<TestEnumSet> srcSet = new EnumSetWritable<TestEnumSet>(EnumSet.of(TestEnumSet.APPEND, TestEnumSet.CREATE), TestEnumSet.class)-->Line_12 $$ Iterator<TestEnumSet> srcIter = srcSet.iterator()[ FD ]
Line_2 $$ public void testEnumSetWritableWriteRead() throws Exception -->Line_4 $$ DataOutputBuffer out = new DataOutputBuffer()[ CD ]
Line_7 $$ DataInputBuffer in = new DataInputBuffer()-->Line_8 $$ in.reset(out.getData(), out.getLength())[ FD ]
