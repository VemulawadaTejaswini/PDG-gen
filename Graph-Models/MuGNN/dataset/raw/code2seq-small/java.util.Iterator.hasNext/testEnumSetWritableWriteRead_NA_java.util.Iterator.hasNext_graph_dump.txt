Line_15 $$ Iterator<TestEnumSet> dstIter = result.iterator()-->Line_17 $$ while (dstIter.hasNext() && srcIter.hasNext()) [ FD ]
Line_10 $$ EnumSetWritable<TestEnumSet> dstSet = new EnumSetWritable<TestEnumSet>()-->Line_13 $$ dstSet.readFields(in)[ FD ]
Line_17 $$ while (dstIter.hasNext() && srcIter.hasNext()) -->Line_18 $$ assertEquals("testEnumSetWritableWriteRead error !!!", dstIter.next(), srcIter.next())[ CD ]
Line_7 $$ EnumSetWritable<TestEnumSet> srcSet = new EnumSetWritable<TestEnumSet>(EnumSet.of(TestEnumSet.APPEND, TestEnumSet.CREATE), TestEnumSet.class)-->Line_16 $$ Iterator<TestEnumSet> srcIter = srcSet.iterator()[ FD ]
Line_11 $$ DataInputBuffer in = new DataInputBuffer()-->Line_13 $$ dstSet.readFields(in)[ FD ]
Line_7 $$ EnumSetWritable<TestEnumSet> srcSet = new EnumSetWritable<TestEnumSet>(EnumSet.of(TestEnumSet.APPEND, TestEnumSet.CREATE), TestEnumSet.class)-->Line_9 $$ srcSet.write(out)[ FD ]
Line_10 $$ EnumSetWritable<TestEnumSet> dstSet = new EnumSetWritable<TestEnumSet>()-->Line_14 $$ EnumSet<TestEnumSet> result = dstSet.get()[ FD ]
Line_16 $$ Iterator<TestEnumSet> srcIter = srcSet.iterator()-->Line_18 $$ assertEquals("testEnumSetWritableWriteRead error !!!", dstIter.next(), srcIter.next())[ FD ]
Line_8 $$ DataOutputBuffer out = new DataOutputBuffer()-->Line_12 $$ in.reset(out.getData(), out.getLength())[ FD ]
Line_8 $$ DataOutputBuffer out = new DataOutputBuffer()-->Line_9 $$ srcSet.write(out)[ FD ]
Line_16 $$ Iterator<TestEnumSet> srcIter = srcSet.iterator()-->Line_17 $$ while (dstIter.hasNext() && srcIter.hasNext()) [ FD ]
Line_11 $$ DataInputBuffer in = new DataInputBuffer()-->Line_12 $$ in.reset(out.getData(), out.getLength())[ FD ]
Line_15 $$ Iterator<TestEnumSet> dstIter = result.iterator()-->Line_18 $$ assertEquals("testEnumSetWritableWriteRead error !!!", dstIter.next(), srcIter.next())[ FD ]
Line_14 $$ EnumSet<TestEnumSet> result = dstSet.get()-->Line_15 $$ Iterator<TestEnumSet> dstIter = result.iterator()[ FD ]
