Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_4 $$ contentType = getDefaultContentType()[ FD ]
Line_16 $$ imageOutputStream = createImageOutputStream(body)-->Line_17 $$ imageWriter.setOutput(imageOutputStream)[ FD ]
Line_12 $$ if (imageWriters.hasNext()) -->Line_18 $$ imageWriter.write(null, new IIOImage(image, null, null), iwp)[ CD ]
Line_13 $$ imageWriter = imageWriters.next()-->Line_23 $$ if (imageWriter != null) [ FD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_16 $$ imageOutputStream = createImageOutputStream(body)[ FD ]
Line_12 $$ if (imageWriters.hasNext()) -->Line_16 $$ imageOutputStream = createImageOutputStream(body)[ CD ]
Line_9 $$ ImageWriter imageWriter = null-->Line_24 $$ imageWriter.dispose()[ FD ]
Line_13 $$ imageWriter = imageWriters.next()-->Line_17 $$ imageWriter.setOutput(imageOutputStream)[ FD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_11 $$ Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(contentType.toString())[ FD ]
Line_12 $$ if (imageWriters.hasNext()) -->Line_17 $$ imageWriter.setOutput(imageOutputStream)[ CD ]
Line_8 $$ ImageOutputStream imageOutputStream = null-->Line_28 $$ imageOutputStream.close()[ FD ]
Line_13 $$ imageWriter = imageWriters.next()-->Line_24 $$ imageWriter.dispose()[ FD ]
Line_13 $$ imageWriter = imageWriters.next()-->Line_18 $$ imageWriter.write(null, new IIOImage(image, null, null), iwp)[ FD ]
Line_23 $$ if (imageWriter != null) -->Line_24 $$ imageWriter.dispose()[ CD ]
Line_9 $$ ImageWriter imageWriter = null-->Line_23 $$ if (imageWriter != null) [ FD ]
Line_16 $$ imageOutputStream = createImageOutputStream(body)-->Line_28 $$ imageOutputStream.close()[ FD ]
Line_12 $$ if (imageWriters.hasNext()) -->Line_15 $$ process(iwp)[ CD ]
Line_12 $$ if (imageWriters.hasNext()) -->Line_13 $$ imageWriter = imageWriters.next()[ CD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_8 $$ ImageOutputStream imageOutputStream = null[ CD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_7 $$ headers.setContentType(contentType)[ CD ]
Line_9 $$ ImageWriter imageWriter = null-->Line_14 $$ ImageWriteParam iwp = imageWriter.getDefaultWriteParam()[ FD ]
Line_14 $$ ImageWriteParam iwp = imageWriter.getDefaultWriteParam()-->Line_18 $$ imageWriter.write(null, new IIOImage(image, null, null), iwp)[ FD ]
Line_4 $$ contentType = getDefaultContentType()-->Line_6 $$ Assert.notNull(contentType, "Count not determine Content-Type, set one using the 'defaultContentType' property")[ FD ]
Line_4 $$ contentType = getDefaultContentType()-->Line_11 $$ Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(contentType.toString())[ FD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_3 $$ if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) [ CD ]
Line_4 $$ contentType = getDefaultContentType()-->Line_7 $$ headers.setContentType(contentType)[ FD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_9 $$ ImageWriter imageWriter = null[ CD ]
Line_11 $$ Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(contentType.toString())-->Line_12 $$ if (imageWriters.hasNext()) [ FD ]
Line_3 $$ if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) -->Line_4 $$ contentType = getDefaultContentType()[ CD ]
Line_9 $$ ImageWriter imageWriter = null-->Line_18 $$ imageWriter.write(null, new IIOImage(image, null, null), iwp)[ FD ]
Line_8 $$ ImageOutputStream imageOutputStream = null-->Line_16 $$ imageOutputStream = createImageOutputStream(body)[ FD ]
Line_8 $$ ImageOutputStream imageOutputStream = null-->Line_26 $$ if (imageOutputStream != null) [ FD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_7 $$ headers.setContentType(contentType)[ FD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_6 $$ Assert.notNull(contentType, "Count not determine Content-Type, set one using the 'defaultContentType' property")[ CD ]
Line_9 $$ ImageWriter imageWriter = null-->Line_13 $$ imageWriter = imageWriters.next()[ FD ]
Line_11 $$ Iterator<ImageWriter> imageWriters = ImageIO.getImageWritersByMIMEType(contentType.toString())-->Line_13 $$ imageWriter = imageWriters.next()[ FD ]
Line_12 $$ if (imageWriters.hasNext()) -->Line_14 $$ ImageWriteParam iwp = imageWriter.getDefaultWriteParam()[ CD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_6 $$ Assert.notNull(contentType, "Count not determine Content-Type, set one using the 'defaultContentType' property")[ FD ]
Line_14 $$ ImageWriteParam iwp = imageWriter.getDefaultWriteParam()-->Line_15 $$ process(iwp)[ FD ]
Line_9 $$ ImageWriter imageWriter = null-->Line_17 $$ imageWriter.setOutput(imageOutputStream)[ FD ]
Line_16 $$ imageOutputStream = createImageOutputStream(body)-->Line_26 $$ if (imageOutputStream != null) [ FD ]
Line_8 $$ ImageOutputStream imageOutputStream = null-->Line_17 $$ imageWriter.setOutput(imageOutputStream)[ FD ]
Line_2 $$ private void writeInternal(BufferedImage image, MediaType contentType, HttpHeaders headers, OutputStream body) throws IOException, HttpMessageNotWritableException -->Line_3 $$ if (contentType == null || contentType.isWildcardType() || contentType.isWildcardSubtype()) [ FD ]
Line_13 $$ imageWriter = imageWriters.next()-->Line_14 $$ ImageWriteParam iwp = imageWriter.getDefaultWriteParam()[ FD ]
