Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) -->Line_4 $$ final String packageName = iter.next()[ FD ]
Line_2 $$ private static void excludeProblem(final String externalName, final Map<String, Set<OfflineProblemDescriptor>> content) -->Line_8 $$ if (Comparing.strEqual(ex.getFQName(), externalName)) [ FD ]
Line_2 $$ private static void excludeProblem(final String externalName, final Map<String, Set<OfflineProblemDescriptor>> content) -->Line_15 $$ content.put(packageName, excluded)[ FD ]
Line_12 $$ if (excluded.isEmpty()) -->Line_13 $$ iter.remove()[ CD ]
Line_2 $$ private static void excludeProblem(final String externalName, final Map<String, Set<OfflineProblemDescriptor>> content) -->Line_5 $$ final Set<OfflineProblemDescriptor> excluded = new HashSet<OfflineProblemDescriptor>(content.get(packageName))[ FD ]
Line_5 $$ final Set<OfflineProblemDescriptor> excluded = new HashSet<OfflineProblemDescriptor>(content.get(packageName))-->Line_6 $$ for (Iterator<OfflineProblemDescriptor> it = excluded.iterator(); it.hasNext(); ) [ FD ]
Line_4 $$ final String packageName = iter.next()-->Line_5 $$ final Set<OfflineProblemDescriptor> excluded = new HashSet<OfflineProblemDescriptor>(content.get(packageName))[ FD ]
Line_2 $$ private static void excludeProblem(final String externalName, final Map<String, Set<OfflineProblemDescriptor>> content) -->Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) [ CD ]
Line_7 $$ final OfflineProblemDescriptor ex = it.next()-->Line_8 $$ if (Comparing.strEqual(ex.getFQName(), externalName)) [ FD ]
Line_4 $$ final String packageName = iter.next()-->Line_15 $$ content.put(packageName, excluded)[ FD ]
Line_2 $$ private static void excludeProblem(final String externalName, final Map<String, Set<OfflineProblemDescriptor>> content) -->Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) [ FD ]
Line_6 $$ for (Iterator<OfflineProblemDescriptor> it = excluded.iterator(); it.hasNext(); ) -->Line_9 $$ it.remove()[ FD ]
Line_5 $$ final Set<OfflineProblemDescriptor> excluded = new HashSet<OfflineProblemDescriptor>(content.get(packageName))-->Line_12 $$ if (excluded.isEmpty()) [ FD ]
Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) -->Line_6 $$ for (Iterator<OfflineProblemDescriptor> it = excluded.iterator(); it.hasNext(); ) [ CD ]
Line_6 $$ for (Iterator<OfflineProblemDescriptor> it = excluded.iterator(); it.hasNext(); ) -->Line_8 $$ if (Comparing.strEqual(ex.getFQName(), externalName)) [ CD ]
Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) -->Line_13 $$ iter.remove()[ FD ]
Line_5 $$ final Set<OfflineProblemDescriptor> excluded = new HashSet<OfflineProblemDescriptor>(content.get(packageName))-->Line_15 $$ content.put(packageName, excluded)[ FD ]
Line_6 $$ for (Iterator<OfflineProblemDescriptor> it = excluded.iterator(); it.hasNext(); ) -->Line_7 $$ final OfflineProblemDescriptor ex = it.next()[ FD ]
Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) -->Line_12 $$ if (excluded.isEmpty()) [ CD ]
Line_6 $$ for (Iterator<OfflineProblemDescriptor> it = excluded.iterator(); it.hasNext(); ) -->Line_7 $$ final OfflineProblemDescriptor ex = it.next()[ CD ]
Line_8 $$ if (Comparing.strEqual(ex.getFQName(), externalName)) -->Line_9 $$ it.remove()[ CD ]
Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) -->Line_4 $$ final String packageName = iter.next()[ CD ]
Line_12 $$ if (excluded.isEmpty()) -->Line_15 $$ content.put(packageName, excluded)[ CD ]
Line_3 $$ for (Iterator<String> iter = content.keySet().iterator(); iter.hasNext(); ) -->Line_5 $$ final Set<OfflineProblemDescriptor> excluded = new HashSet<OfflineProblemDescriptor>(content.get(packageName))[ CD ]
