Line_5 $$ String componentNameKey = componentName + "_TEST_CASE_METHOD_NAMES"-->Line_7 $$ sb.append(componentNameKey)[ FD ]
Line_10 $$ if (Validator.isNotNull(classCommandNames) && !classCommandNames.isEmpty()) -->Line_12 $$ while (iterator.hasNext()) [ CD ]
Line_9 $$ Set<String> classCommandNames = _componentClassCommandNames.get(componentName)-->Line_10 $$ if (Validator.isNotNull(classCommandNames) && !classCommandNames.isEmpty()) [ FD ]
Line_2 $$ private static void _writeTestCaseMethodNamesProperties() throws Exception -->Line_26 $$ FileUtil.write("test.case.method.names.properties", sb.toString())[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_7 $$ sb.append(componentNameKey)[ FD ]
Line_11 $$ Iterator<String> iterator = classCommandNames.iterator()-->Line_12 $$ while (iterator.hasNext()) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_26 $$ FileUtil.write("test.case.method.names.properties", sb.toString())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append("=")[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_15 $$ sb.append(" ")[ FD ]
Line_12 $$ while (iterator.hasNext()) -->Line_14 $$ if (iterator.hasNext()) [ CD ]
Line_14 $$ if (iterator.hasNext()) -->Line_15 $$ sb.append(" ")[ CD ]
Line_10 $$ if (Validator.isNotNull(classCommandNames) && !classCommandNames.isEmpty()) -->Line_11 $$ Iterator<String> iterator = classCommandNames.iterator()[ CD ]
Line_9 $$ Set<String> classCommandNames = _componentClassCommandNames.get(componentName)-->Line_11 $$ Iterator<String> iterator = classCommandNames.iterator()[ FD ]
Line_4 $$ for (String componentName : _componentNames) -->Line_9 $$ Set<String> classCommandNames = _componentClassCommandNames.get(componentName)[ FD ]
Line_23 $$ if ((PropsValues.TEST_BATCH_MAX_GROUP_SIZE > 0) && (PropsValues.TEST_BATCH_PROPERTY_NAMES != null) && (PropsValues.TEST_BATCH_PROPERTY_VALUES != null)) -->Line_24 $$ sb.append(_getTestBatchGroups())[ CD ]
Line_11 $$ Iterator<String> iterator = classCommandNames.iterator()-->Line_13 $$ sb.append(iterator.next())[ FD ]
Line_11 $$ Iterator<String> iterator = classCommandNames.iterator()-->Line_14 $$ if (iterator.hasNext()) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_24 $$ sb.append(_getTestBatchGroups())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_13 $$ sb.append(iterator.next())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_21 $$ sb.append("\n")[ FD ]
Line_2 $$ private static void _writeTestCaseMethodNamesProperties() throws Exception -->Line_3 $$ StringBuilder sb = new StringBuilder()[ CD ]
Line_2 $$ private static void _writeTestCaseMethodNamesProperties() throws Exception -->Line_23 $$ if ((PropsValues.TEST_BATCH_MAX_GROUP_SIZE > 0) && (PropsValues.TEST_BATCH_PROPERTY_NAMES != null) && (PropsValues.TEST_BATCH_PROPERTY_VALUES != null)) [ CD ]
Line_5 $$ String componentNameKey = componentName + "_TEST_CASE_METHOD_NAMES"-->Line_6 $$ componentNameKey = StringUtil.upperCase(componentNameKey.replace("-", "_"))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder()-->Line_19 $$ sb.append(PropsValues.TEST_NAME)[ FD ]
Line_6 $$ componentNameKey = StringUtil.upperCase(componentNameKey.replace("-", "_"))-->Line_7 $$ sb.append(componentNameKey)[ FD ]
Line_10 $$ if (Validator.isNotNull(classCommandNames) && !classCommandNames.isEmpty()) -->Line_19 $$ sb.append(PropsValues.TEST_NAME)[ CD ]
Line_12 $$ while (iterator.hasNext()) -->Line_13 $$ sb.append(iterator.next())[ CD ]
