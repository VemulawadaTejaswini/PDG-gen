Line_10 $$ Iterator<URL> iterator = handle.urls().iterator()-->Line_13 $$ assertThat(iterator.next().toExternalForm(), is(expectedStagingUrl))[ FD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_7 $$ if (supportStagingUrls) [ CD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_10 $$ Iterator<URL> iterator = handle.urls().iterator()[ CD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_4 $$ PluginManager.PluginHandle handle = PluginManager.PluginHandle.parse(randomPluginName)[ CD ]
Line_10 $$ Iterator<URL> iterator = handle.urls().iterator()-->Line_16 $$ assertThat(iterator.next().toExternalForm(), is(releaseUrl))[ FD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_11 $$ if (supportStagingUrls) [ CD ]
Line_10 $$ Iterator<URL> iterator = handle.urls().iterator()-->Line_17 $$ assertThat(iterator.hasNext(), is(false))[ FD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_17 $$ assertThat(iterator.hasNext(), is(false))[ CD ]
Line_11 $$ if (supportStagingUrls) -->Line_13 $$ assertThat(iterator.next().toExternalForm(), is(expectedStagingUrl))[ CD ]
Line_4 $$ PluginManager.PluginHandle handle = PluginManager.PluginHandle.parse(randomPluginName)-->Line_10 $$ Iterator<URL> iterator = handle.urls().iterator()[ FD ]
Line_12 $$ String expectedStagingUrl = String.format(Locale.ROOT, "https://download.elastic.co/elasticsearch/staging/%s-%s/org/elasticsearch/plugin/%s/%s/%s-%s.zip", Version.CURRENT.number(), Build.CURRENT.shortHash(), randomPluginName, Version.CURRENT.number(), randomPluginName, Version.CURRENT.number())-->Line_13 $$ assertThat(iterator.next().toExternalForm(), is(expectedStagingUrl))[ FD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_16 $$ assertThat(iterator.next().toExternalForm(), is(releaseUrl))[ CD ]
Line_3 $$ String randomPluginName = randomFrom(new ArrayList(PluginManager.OFFICIAL_PLUGINS))-->Line_12 $$ String expectedStagingUrl = String.format(Locale.ROOT, "https://download.elastic.co/elasticsearch/staging/%s-%s/org/elasticsearch/plugin/%s/%s/%s-%s.zip", Version.CURRENT.number(), Build.CURRENT.shortHash(), randomPluginName, Version.CURRENT.number(), randomPluginName, Version.CURRENT.number())[ FD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_15 $$ String releaseUrl = String.format(Locale.ROOT, "https://download.elastic.co/elasticsearch/release/org/elasticsearch/plugin/%s/%s/%s-%s.zip", randomPluginName, Version.CURRENT.number(), randomPluginName, Version.CURRENT.number())[ CD ]
Line_15 $$ String releaseUrl = String.format(Locale.ROOT, "https://download.elastic.co/elasticsearch/release/org/elasticsearch/plugin/%s/%s/%s-%s.zip", randomPluginName, Version.CURRENT.number(), randomPluginName, Version.CURRENT.number())-->Line_16 $$ assertThat(iterator.next().toExternalForm(), is(releaseUrl))[ FD ]
Line_3 $$ String randomPluginName = randomFrom(new ArrayList(PluginManager.OFFICIAL_PLUGINS))-->Line_5 $$ assertThat(handle.name, is(randomPluginName))[ FD ]
Line_3 $$ String randomPluginName = randomFrom(new ArrayList(PluginManager.OFFICIAL_PLUGINS))-->Line_15 $$ String releaseUrl = String.format(Locale.ROOT, "https://download.elastic.co/elasticsearch/release/org/elasticsearch/plugin/%s/%s/%s-%s.zip", randomPluginName, Version.CURRENT.number(), randomPluginName, Version.CURRENT.number())[ FD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_3 $$ String randomPluginName = randomFrom(new ArrayList(PluginManager.OFFICIAL_PLUGINS))[ CD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_6 $$ boolean supportStagingUrls = randomBoolean()[ CD ]
Line_2 $$ public void testOfficialPluginName() throws IOException -->Line_5 $$ assertThat(handle.name, is(randomPluginName))[ CD ]
Line_3 $$ String randomPluginName = randomFrom(new ArrayList(PluginManager.OFFICIAL_PLUGINS))-->Line_4 $$ PluginManager.PluginHandle handle = PluginManager.PluginHandle.parse(randomPluginName)[ FD ]
Line_11 $$ if (supportStagingUrls) -->Line_12 $$ String expectedStagingUrl = String.format(Locale.ROOT, "https://download.elastic.co/elasticsearch/staging/%s-%s/org/elasticsearch/plugin/%s/%s/%s-%s.zip", Version.CURRENT.number(), Build.CURRENT.shortHash(), randomPluginName, Version.CURRENT.number(), randomPluginName, Version.CURRENT.number())[ CD ]
Line_7 $$ if (supportStagingUrls) -->Line_8 $$ System.setProperty(PluginManager.PROPERTY_SUPPORT_STAGING_URLS, "true")[ CD ]
