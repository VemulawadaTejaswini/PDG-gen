Line_6 $$ Object result = Array.newInstance(componentType, coll.size())-->Line_22 $$ Array.set(result, i, value)[ FD ]
Line_6 $$ Object result = Array.newInstance(componentType, coll.size())-->Line_10 $$ Array.set(result, i, value)[ FD ]
Line_20 $$ for (int i = 0; i < arrayLength; i++) -->Line_21 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ CD ]
Line_13 $$ if (input.getClass().isArray()) -->Line_18 $$ int arrayLength = Array.getLength(input)[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_21 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ FD ]
Line_21 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)-->Line_22 $$ Array.set(result, i, value)[ FD ]
Line_7 $$ int i = 0-->Line_21 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ FD ]
Line_13 $$ if (input.getClass().isArray()) -->Line_30 $$ return result[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_19 $$ Object result = Array.newInstance(componentType, arrayLength)[ FD ]
Line_18 $$ int arrayLength = Array.getLength(input)-->Line_20 $$ for (int i = 0; i < arrayLength; i++) [ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_9 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ FD ]
Line_20 $$ for (int i = 0; i < arrayLength; i++) -->Line_21 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)[ FD ]
Line_20 $$ for (int i = 0; i < arrayLength; i++) -->Line_22 $$ Array.set(result, i, value)[ CD ]
Line_8 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) -->Line_9 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_3 $$ if (input instanceof Collection) [ CD ]
Line_7 $$ int i = 0-->Line_10 $$ Array.set(result, i, value)[ FD ]
Line_6 $$ Object result = Array.newInstance(componentType, coll.size())-->Line_29 $$ Array.set(result, 0, value)[ FD ]
Line_8 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) -->Line_9 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ FD ]
Line_13 $$ if (input.getClass().isArray()) -->Line_19 $$ Object result = Array.newInstance(componentType, arrayLength)[ CD ]
Line_3 $$ if (input instanceof Collection) -->Line_13 $$ if (input.getClass().isArray()) [ CD ]
Line_13 $$ if (input.getClass().isArray()) -->Line_20 $$ for (int i = 0; i < arrayLength; i++) [ CD ]
Line_7 $$ int i = 0-->Line_9 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)[ FD ]
Line_8 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) -->Line_10 $$ Array.set(result, i, value)[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_13 $$ if (input.getClass().isArray()) [ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_18 $$ int arrayLength = Array.getLength(input)[ FD ]
Line_9 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)-->Line_10 $$ Array.set(result, i, value)[ FD ]
Line_18 $$ int arrayLength = Array.getLength(input)-->Line_19 $$ Object result = Array.newInstance(componentType, arrayLength)[ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_3 $$ if (input instanceof Collection) [ FD ]
Line_7 $$ int i = 0-->Line_20 $$ for (int i = 0; i < arrayLength; i++) [ FD ]
Line_21 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, Array.get(input, i), componentType)-->Line_29 $$ Array.set(result, 0, value)[ FD ]
Line_7 $$ int i = 0-->Line_22 $$ Array.set(result, i, value)[ FD ]
Line_20 $$ for (int i = 0; i < arrayLength; i++) -->Line_22 $$ Array.set(result, i, value)[ FD ]
Line_13 $$ if (input.getClass().isArray()) -->Line_28 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, 0), null, input, componentType)[ CD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_6 $$ Object result = Array.newInstance(componentType, coll.size())[ FD ]
Line_9 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)-->Line_29 $$ Array.set(result, 0, value)[ FD ]
Line_13 $$ if (input.getClass().isArray()) -->Line_24 $$ return result[ CD ]
Line_13 $$ if (input.getClass().isArray()) -->Line_29 $$ Array.set(result, 0, value)[ CD ]
Line_3 $$ if (input instanceof Collection) -->Line_7 $$ int i = 0[ CD ]
Line_9 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, i), null, it.next(), componentType)-->Line_22 $$ Array.set(result, i, value)[ FD ]
Line_3 $$ if (input instanceof Collection) -->Line_8 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) [ CD ]
Line_3 $$ if (input instanceof Collection) -->Line_12 $$ return result[ CD ]
Line_7 $$ int i = 0-->Line_8 $$ for (Iterator<?> it = coll.iterator(); it.hasNext(); i++) [ FD ]
Line_2 $$ private Object convertToTypedArray(Object input, String propertyName, Class<?> componentType) -->Line_28 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, 0), null, input, componentType)[ FD ]
Line_3 $$ if (input instanceof Collection) -->Line_6 $$ Object result = Array.newInstance(componentType, coll.size())[ CD ]
Line_28 $$ Object value = convertIfNecessary(buildIndexedPropertyName(propertyName, 0), null, input, componentType)-->Line_29 $$ Array.set(result, 0, value)[ FD ]
