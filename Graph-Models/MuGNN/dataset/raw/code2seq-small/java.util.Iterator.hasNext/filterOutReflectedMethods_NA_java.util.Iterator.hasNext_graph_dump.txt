Line_6 $$ if (next instanceof GroovyResolveResult) -->Line_7 $$ final PsiElement element = ((GroovyResolveResult) next).getElement()[ CD ]
Line_4 $$ for (Iterator iterator = toShow.iterator(); iterator.hasNext(); ) -->Line_5 $$ Object next = iterator.next()[ CD ]
Line_8 $$ if (element instanceof GrReflectedMethod) -->Line_10 $$ if (!methods.add(base)) [ CD ]
Line_4 $$ for (Iterator iterator = toShow.iterator(); iterator.hasNext(); ) -->Line_11 $$ iterator.remove()[ FD ]
Line_10 $$ if (!methods.add(base)) -->Line_11 $$ iterator.remove()[ CD ]
Line_2 $$ private static void filterOutReflectedMethods(List toShow) -->Line_4 $$ for (Iterator iterator = toShow.iterator(); iterator.hasNext(); ) [ FD ]
Line_4 $$ for (Iterator iterator = toShow.iterator(); iterator.hasNext(); ) -->Line_5 $$ Object next = iterator.next()[ FD ]
Line_8 $$ if (element instanceof GrReflectedMethod) -->Line_9 $$ final GrMethod base = ((GrReflectedMethod) element).getBaseMethod()[ CD ]
Line_5 $$ Object next = iterator.next()-->Line_6 $$ if (next instanceof GroovyResolveResult) [ FD ]
Line_2 $$ private static void filterOutReflectedMethods(List toShow) -->Line_4 $$ for (Iterator iterator = toShow.iterator(); iterator.hasNext(); ) [ CD ]
Line_4 $$ for (Iterator iterator = toShow.iterator(); iterator.hasNext(); ) -->Line_6 $$ if (next instanceof GroovyResolveResult) [ CD ]
Line_6 $$ if (next instanceof GroovyResolveResult) -->Line_8 $$ if (element instanceof GrReflectedMethod) [ CD ]
Line_9 $$ final GrMethod base = ((GrReflectedMethod) element).getBaseMethod()-->Line_10 $$ if (!methods.add(base)) [ FD ]
Line_3 $$ Set<GrMethod> methods = new HashSet<GrMethod>()-->Line_10 $$ if (!methods.add(base)) [ FD ]
Line_7 $$ final PsiElement element = ((GroovyResolveResult) next).getElement()-->Line_8 $$ if (element instanceof GrReflectedMethod) [ FD ]
Line_2 $$ private static void filterOutReflectedMethods(List toShow) -->Line_3 $$ Set<GrMethod> methods = new HashSet<GrMethod>()[ CD ]
