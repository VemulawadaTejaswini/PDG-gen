Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_28 $$ int addAmount = recurrence.getInterval() * recur.getCount()[ FD ]
Line_55 $$ Iterator<Integer> monthDayListItr = recur.getMonthDayList().iterator()-->Line_56 $$ if (monthDayListItr.hasNext()) [ FD ]
Line_16 $$ if (rRule.getValue().contains("COUNT")) -->Line_17 $$ until.setTimeInMillis(startDate.getTimeInMillis())[ CD ]
Line_33 $$ if (Recur.DAILY.equals(frequency)) -->Line_35 $$ List<DayAndPosition> dayPosList = new ArrayList()[ CD ]
Line_13 $$ if (recur.getUntil() != null) -->Line_16 $$ if (rRule.getValue().contains("COUNT")) [ CD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_13 $$ if (recur.getUntil() != null) [ FD ]
Line_23 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_25 $$ if (Recur.YEARLY.equals(frequency)) [ CD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_54 $$ recurrence.setFrequency(Recurrence.MONTHLY)[ FD ]
Line_18 $$ int addField = 0-->Line_29 $$ until.add(addField, addAmount)[ FD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_66 $$ if (Recur.YEARLY.equals(frequency)) [ FD ]
Line_20 $$ addField = Calendar.DAY_OF_YEAR-->Line_26 $$ addField = Calendar.YEAR[ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_41 $$ recurrence.setByDay(dayPosList.toArray(new DayAndPosition[dayPosList.size()]))[ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_7 $$ recurrence.setWeekStart(Calendar.SUNDAY)[ FD ]
Line_22 $$ addField = Calendar.WEEK_OF_YEAR-->Line_26 $$ addField = Calendar.YEAR[ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_15 $$ recurrence.setUntil(until)[ FD ]
Line_20 $$ addField = Calendar.DAY_OF_YEAR-->Line_29 $$ until.add(addField, addAmount)[ FD ]
Line_13 $$ if (recur.getUntil() != null) -->Line_14 $$ until.setTime(recur.getUntil())[ CD ]
Line_23 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_24 $$ addField = Calendar.MONTH[ CD ]
Line_16 $$ if (rRule.getValue().contains("COUNT")) -->Line_31 $$ recurrence.setUntil(until)[ CD ]
Line_22 $$ addField = Calendar.WEEK_OF_YEAR-->Line_29 $$ until.add(addField, addAmount)[ FD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_60 $$ Iterator<WeekDay> dayListItr = recur.getDayList().iterator()[ FD ]
Line_18 $$ int addField = 0-->Line_24 $$ addField = Calendar.MONTH[ FD ]
Line_24 $$ addField = Calendar.MONTH-->Line_29 $$ until.add(addField, addAmount)[ FD ]
Line_11 $$ Calendar until = Calendar.getInstance(TimeZoneUtil.getTimeZone(StringPool.UTC))-->Line_14 $$ until.setTime(recur.getUntil())[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_13 $$ if (recur.getUntil() != null) [ CD ]
Line_61 $$ if (dayListItr.hasNext()) -->Line_62 $$ WeekDay weekDay = dayListItr.next()[ CD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_69 $$ return recurrence[ CD ]
Line_43 $$ if (Recur.WEEKLY.equals(frequency)) -->Line_53 $$ if (Recur.MONTHLY.equals(frequency)) [ CD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_53 $$ if (Recur.MONTHLY.equals(frequency)) [ FD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_28 $$ int addAmount = recurrence.getInterval() * recur.getCount()[ FD ]
Line_26 $$ addField = Calendar.YEAR-->Line_29 $$ until.add(addField, addAmount)[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))[ CD ]
Line_40 $$ if (!dayPosList.isEmpty()) -->Line_41 $$ recurrence.setByDay(dayPosList.toArray(new DayAndPosition[dayPosList.size()]))[ CD ]
Line_33 $$ if (Recur.DAILY.equals(frequency)) -->Line_43 $$ if (Recur.WEEKLY.equals(frequency)) [ CD ]
Line_53 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_56 $$ if (monthDayListItr.hasNext()) [ CD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_46 $$ List<WeekDay> weekDays = recur.getDayList()[ FD ]
Line_33 $$ if (Recur.DAILY.equals(frequency)) -->Line_40 $$ if (!dayPosList.isEmpty()) [ CD ]
Line_53 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_60 $$ Iterator<WeekDay> dayListItr = recur.getDayList().iterator()[ CD ]
Line_16 $$ if (rRule.getValue().contains("COUNT")) -->Line_19 $$ if (Recur.DAILY.equals(frequency)) [ CD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_17 $$ until.setTimeInMillis(startDate.getTimeInMillis())[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_12 $$ String frequency = recur.getFrequency()[ CD ]
Line_43 $$ if (Recur.WEEKLY.equals(frequency)) -->Line_50 $$ if (!dayPosList.isEmpty()) [ CD ]
Line_61 $$ if (dayListItr.hasNext()) -->Line_63 $$ DayAndPosition[] dayPos = [ CD ]
Line_25 $$ if (Recur.YEARLY.equals(frequency)) -->Line_26 $$ addField = Calendar.YEAR[ CD ]
Line_57 $$ Integer monthDay = monthDayListItr.next()-->Line_58 $$ recurrence.setByMonthDay(new int[] [ FD ]
Line_28 $$ int addAmount = recurrence.getInterval() * recur.getCount()-->Line_29 $$ until.add(addField, addAmount)[ FD ]
Line_21 $$ if (Recur.WEEKLY.equals(frequency)) -->Line_23 $$ if (Recur.MONTHLY.equals(frequency)) [ CD ]
Line_35 $$ List<DayAndPosition> dayPosList = new ArrayList()-->Line_41 $$ recurrence.setByDay(dayPosList.toArray(new DayAndPosition[dayPosList.size()]))[ FD ]
Line_18 $$ int addField = 0-->Line_26 $$ addField = Calendar.YEAR[ FD ]
Line_37 $$ for (WeekDay weekDay : weekDays) -->Line_63 $$ DayAndPosition[] dayPos = [ FD ]
Line_16 $$ if (rRule.getValue().contains("COUNT")) -->Line_28 $$ int addAmount = recurrence.getInterval() * recur.getCount()[ CD ]
Line_56 $$ if (monthDayListItr.hasNext()) -->Line_58 $$ recurrence.setByMonthDay(new int[] [ CD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_4 $$ Calendar recStartCal = CalendarFactoryUtil.getCalendar(TimeZoneUtil.getTimeZone(StringPool.UTC))[ CD ]
Line_66 $$ if (Recur.YEARLY.equals(frequency)) -->Line_67 $$ recurrence.setFrequency(Recurrence.YEARLY)[ CD ]
Line_16 $$ if (rRule.getValue().contains("COUNT")) -->Line_29 $$ until.add(addField, addAmount)[ CD ]
Line_53 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_55 $$ Iterator<Integer> monthDayListItr = recur.getMonthDayList().iterator()[ CD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_43 $$ if (Recur.WEEKLY.equals(frequency)) [ FD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_9 $$ recurrence.setInterval(recur.getInterval())[ FD ]
Line_33 $$ if (Recur.DAILY.equals(frequency)) -->Line_34 $$ recurrence.setFrequency(Recurrence.DAILY)[ CD ]
Line_35 $$ List<DayAndPosition> dayPosList = new ArrayList()-->Line_51 $$ recurrence.setByDay(dayPosList.toArray(new DayAndPosition[dayPosList.size()]))[ FD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_8 $$ if (recur.getInterval() > 1) [ FD ]
Line_11 $$ Calendar until = Calendar.getInstance(TimeZoneUtil.getTimeZone(StringPool.UTC))-->Line_29 $$ until.add(addField, addAmount)[ FD ]
Line_11 $$ Calendar until = Calendar.getInstance(TimeZoneUtil.getTimeZone(StringPool.UTC))-->Line_17 $$ until.setTimeInMillis(startDate.getTimeInMillis())[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_3 $$ Recur recur = rRule.getRecur()[ CD ]
Line_20 $$ addField = Calendar.DAY_OF_YEAR-->Line_22 $$ addField = Calendar.WEEK_OF_YEAR[ FD ]
Line_19 $$ if (Recur.DAILY.equals(frequency)) -->Line_21 $$ if (Recur.WEEKLY.equals(frequency)) [ CD ]
Line_37 $$ for (WeekDay weekDay : weekDays) -->Line_48 $$ dayPosList.add(new DayAndPosition(toCalendarWeekDay(weekDay), 0))[ FD ]
Line_53 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_54 $$ recurrence.setFrequency(Recurrence.MONTHLY)[ CD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_25 $$ if (Recur.YEARLY.equals(frequency)) [ FD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_55 $$ Iterator<Integer> monthDayListItr = recur.getMonthDayList().iterator()[ FD ]
Line_63 $$ DayAndPosition[] dayPos = -->Line_64 $$ recurrence.setByDay(dayPos)[ FD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_33 $$ if (Recur.DAILY.equals(frequency)) [ FD ]
Line_60 $$ Iterator<WeekDay> dayListItr = recur.getDayList().iterator()-->Line_61 $$ if (dayListItr.hasNext()) [ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_9 $$ recurrence.setInterval(recur.getInterval())[ FD ]
Line_20 $$ addField = Calendar.DAY_OF_YEAR-->Line_24 $$ addField = Calendar.MONTH[ FD ]
Line_19 $$ if (Recur.DAILY.equals(frequency)) -->Line_20 $$ addField = Calendar.DAY_OF_YEAR[ CD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_23 $$ if (Recur.MONTHLY.equals(frequency)) [ FD ]
Line_21 $$ if (Recur.WEEKLY.equals(frequency)) -->Line_22 $$ addField = Calendar.WEEK_OF_YEAR[ CD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_19 $$ if (Recur.DAILY.equals(frequency)) [ FD ]
Line_55 $$ Iterator<Integer> monthDayListItr = recur.getMonthDayList().iterator()-->Line_57 $$ Integer monthDay = monthDayListItr.next()[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_16 $$ if (rRule.getValue().contains("COUNT")) [ FD ]
Line_53 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_61 $$ if (dayListItr.hasNext()) [ CD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_33 $$ if (Recur.DAILY.equals(frequency)) [ CD ]
Line_16 $$ if (rRule.getValue().contains("COUNT")) -->Line_18 $$ int addField = 0[ CD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_58 $$ recurrence.setByMonthDay(new int[] [ FD ]
Line_35 $$ List<DayAndPosition> dayPosList = new ArrayList()-->Line_38 $$ dayPosList.add(new DayAndPosition(toCalendarWeekDay(weekDay), 0))[ FD ]
Line_53 $$ if (Recur.MONTHLY.equals(frequency)) -->Line_66 $$ if (Recur.YEARLY.equals(frequency)) [ CD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_67 $$ recurrence.setFrequency(Recurrence.YEARLY)[ FD ]
Line_11 $$ Calendar until = Calendar.getInstance(TimeZoneUtil.getTimeZone(StringPool.UTC))-->Line_15 $$ recurrence.setUntil(until)[ FD ]
Line_60 $$ Iterator<WeekDay> dayListItr = recur.getDayList().iterator()-->Line_62 $$ WeekDay weekDay = dayListItr.next()[ FD ]
Line_35 $$ List<DayAndPosition> dayPosList = new ArrayList()-->Line_50 $$ if (!dayPosList.isEmpty()) [ FD ]
Line_11 $$ Calendar until = Calendar.getInstance(TimeZoneUtil.getTimeZone(StringPool.UTC))-->Line_31 $$ recurrence.setUntil(until)[ FD ]
Line_33 $$ if (Recur.DAILY.equals(frequency)) -->Line_36 $$ List<WeekDay> weekDays = recur.getDayList()[ CD ]
Line_37 $$ for (WeekDay weekDay : weekDays) -->Line_38 $$ dayPosList.add(new DayAndPosition(toCalendarWeekDay(weekDay), 0))[ FD ]
Line_12 $$ String frequency = recur.getFrequency()-->Line_21 $$ if (Recur.WEEKLY.equals(frequency)) [ FD ]
Line_50 $$ if (!dayPosList.isEmpty()) -->Line_51 $$ recurrence.setByDay(dayPosList.toArray(new DayAndPosition[dayPosList.size()]))[ CD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_12 $$ String frequency = recur.getFrequency()[ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_44 $$ recurrence.setFrequency(Recurrence.WEEKLY)[ FD ]
Line_4 $$ Calendar recStartCal = CalendarFactoryUtil.getCalendar(TimeZoneUtil.getTimeZone(StringPool.UTC))-->Line_5 $$ recStartCal.setTime(startDate.getTime())[ FD ]
Line_35 $$ List<DayAndPosition> dayPosList = new ArrayList()-->Line_48 $$ dayPosList.add(new DayAndPosition(toCalendarWeekDay(weekDay), 0))[ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_51 $$ recurrence.setByDay(dayPosList.toArray(new DayAndPosition[dayPosList.size()]))[ FD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_36 $$ List<WeekDay> weekDays = recur.getDayList()[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_7 $$ recurrence.setWeekStart(Calendar.SUNDAY)[ CD ]
Line_16 $$ if (rRule.getValue().contains("COUNT")) -->Line_30 $$ until.add(Calendar.DAY_OF_YEAR, -1)[ CD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_31 $$ recurrence.setUntil(until)[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_11 $$ Calendar until = Calendar.getInstance(TimeZoneUtil.getTimeZone(StringPool.UTC))[ CD ]
Line_35 $$ List<DayAndPosition> dayPosList = new ArrayList()-->Line_40 $$ if (!dayPosList.isEmpty()) [ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_3 $$ Recur recur = rRule.getRecur()[ FD ]
Line_3 $$ Recur recur = rRule.getRecur()-->Line_14 $$ until.setTime(recur.getUntil())[ FD ]
Line_43 $$ if (Recur.WEEKLY.equals(frequency)) -->Line_44 $$ recurrence.setFrequency(Recurrence.WEEKLY)[ CD ]
Line_22 $$ addField = Calendar.WEEK_OF_YEAR-->Line_24 $$ addField = Calendar.MONTH[ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_34 $$ recurrence.setFrequency(Recurrence.DAILY)[ FD ]
Line_6 $$ TZSRecurrence recurrence = new TZSRecurrence(recStartCal, new com.liferay.portal.kernel.cal.Duration(1, 0, 0, 0))-->Line_64 $$ recurrence.setByDay(dayPos)[ FD ]
Line_11 $$ Calendar until = Calendar.getInstance(TimeZoneUtil.getTimeZone(StringPool.UTC))-->Line_30 $$ until.add(Calendar.DAY_OF_YEAR, -1)[ FD ]
Line_43 $$ if (Recur.WEEKLY.equals(frequency)) -->Line_46 $$ List<WeekDay> weekDays = recur.getDayList()[ CD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_8 $$ if (recur.getInterval() > 1) [ CD ]
Line_24 $$ addField = Calendar.MONTH-->Line_26 $$ addField = Calendar.YEAR[ FD ]
Line_18 $$ int addField = 0-->Line_20 $$ addField = Calendar.DAY_OF_YEAR[ FD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_5 $$ recStartCal.setTime(startDate.getTime())[ CD ]
Line_8 $$ if (recur.getInterval() > 1) -->Line_9 $$ recurrence.setInterval(recur.getInterval())[ CD ]
Line_2 $$ protected TZSRecurrence toRecurrence(RRule rRule, Calendar startDate) -->Line_5 $$ recStartCal.setTime(startDate.getTime())[ FD ]
Line_13 $$ if (recur.getUntil() != null) -->Line_15 $$ recurrence.setUntil(until)[ CD ]
Line_18 $$ int addField = 0-->Line_22 $$ addField = Calendar.WEEK_OF_YEAR[ FD ]
Line_61 $$ if (dayListItr.hasNext()) -->Line_64 $$ recurrence.setByDay(dayPos)[ CD ]
Line_56 $$ if (monthDayListItr.hasNext()) -->Line_57 $$ Integer monthDay = monthDayListItr.next()[ CD ]
