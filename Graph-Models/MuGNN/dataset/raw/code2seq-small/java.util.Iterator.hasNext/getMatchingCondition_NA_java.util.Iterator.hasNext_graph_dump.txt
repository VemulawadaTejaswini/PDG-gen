Line_2 $$ public ConsumesRequestCondition getMatchingCondition(HttpServletRequest request) -->Line_3 $$ if (isEmpty()) [ CD ]
Line_7 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_9 $$ if (!expression.match(request)) [ CD ]
Line_3 $$ if (isEmpty()) -->Line_4 $$ return this[ CD ]
Line_2 $$ public ConsumesRequestCondition getMatchingCondition(HttpServletRequest request) -->Line_6 $$ Set<ConsumeMediaTypeExpression> result = new LinkedHashSet<ConsumeMediaTypeExpression>(expressions)[ CD ]
Line_2 $$ public ConsumesRequestCondition getMatchingCondition(HttpServletRequest request) -->Line_9 $$ if (!expression.match(request)) [ FD ]
Line_7 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_8 $$ ConsumeMediaTypeExpression expression = iterator.next()[ FD ]
Line_7 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_10 $$ iterator.remove()[ FD ]
Line_6 $$ Set<ConsumeMediaTypeExpression> result = new LinkedHashSet<ConsumeMediaTypeExpression>(expressions)-->Line_13 $$ return (result.isEmpty()) ? null : new ConsumesRequestCondition(result)[ FD ]
Line_8 $$ ConsumeMediaTypeExpression expression = iterator.next()-->Line_9 $$ if (!expression.match(request)) [ FD ]
Line_2 $$ public ConsumesRequestCondition getMatchingCondition(HttpServletRequest request) -->Line_7 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) [ CD ]
Line_9 $$ if (!expression.match(request)) -->Line_10 $$ iterator.remove()[ CD ]
Line_2 $$ public ConsumesRequestCondition getMatchingCondition(HttpServletRequest request) -->Line_13 $$ return (result.isEmpty()) ? null : new ConsumesRequestCondition(result)[ CD ]
Line_7 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_8 $$ ConsumeMediaTypeExpression expression = iterator.next()[ CD ]
Line_6 $$ Set<ConsumeMediaTypeExpression> result = new LinkedHashSet<ConsumeMediaTypeExpression>(expressions)-->Line_7 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) [ FD ]
