Line_18 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_20 $$ if (!expression.match(request)) [ CD ]
Line_18 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_19 $$ ConsumeMediaTypeExpression expression = iterator.next()[ FD ]
Line_17 $$ Set<ConsumeMediaTypeExpression> result = new LinkedHashSet<ConsumeMediaTypeExpression>(expressions)-->Line_18 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) [ FD ]
Line_20 $$ if (!expression.match(request)) -->Line_21 $$ iterator.remove()[ CD ]
Line_14 $$ if (isEmpty()) -->Line_15 $$ return this[ CD ]
Line_18 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_19 $$ ConsumeMediaTypeExpression expression = iterator.next()[ CD ]
Line_19 $$ ConsumeMediaTypeExpression expression = iterator.next()-->Line_20 $$ if (!expression.match(request)) [ FD ]
Line_17 $$ Set<ConsumeMediaTypeExpression> result = new LinkedHashSet<ConsumeMediaTypeExpression>(expressions)-->Line_24 $$ return (result.isEmpty()) ? null : new ConsumesRequestCondition(result)[ FD ]
Line_18 $$ for (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext(); ) -->Line_21 $$ iterator.remove()[ FD ]
