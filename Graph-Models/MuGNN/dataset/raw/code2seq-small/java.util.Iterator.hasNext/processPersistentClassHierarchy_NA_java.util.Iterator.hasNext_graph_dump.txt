Line_15 $$ msc = msc.getSuperMappedSuperclass()-->Line_13 $$ while (msc != null) [ FD ]
Line_5 $$ while (itr.hasNext()) -->Line_8 $$ classNames.addAll(subclassSubclassNames)[ CD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_10 $$ classNames.add(persistentClass.getEntityName())[ CD ]
Line_11 $$ if (!isBase) -->Line_12 $$ MappedSuperclass msc = persistentClass.getSuperMappedSuperclass()[ CD ]
Line_11 $$ if (!isBase) -->Line_17 $$ associateSubclassNamesToSubclassTableIndexes(persistentClass, classNames, mapping, factory)[ CD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_10 $$ classNames.add(persistentClass.getEntityName())[ FD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_19 $$ return classNames[ CD ]
Line_15 $$ msc = msc.getSuperMappedSuperclass()-->Line_14 $$ classNames.add(msc.getMappedClass().getName())[ FD ]
Line_13 $$ while (msc != null) -->Line_14 $$ classNames.add(msc.getMappedClass().getName())[ CD ]
Line_3 $$ final Set<String> classNames = new HashSet<String>()-->Line_8 $$ classNames.addAll(subclassSubclassNames)[ FD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_11 $$ if (!isBase) [ FD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_7 $$ final Set<String> subclassSubclassNames = processPersistentClassHierarchy(subclass, false, factory, mapping)[ FD ]
Line_12 $$ MappedSuperclass msc = persistentClass.getSuperMappedSuperclass()-->Line_13 $$ while (msc != null) [ FD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_3 $$ final Set<String> classNames = new HashSet<String>()[ CD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_4 $$ final Iterator itr = persistentClass.getDirectSubclasses()[ CD ]
Line_3 $$ final Set<String> classNames = new HashSet<String>()-->Line_10 $$ classNames.add(persistentClass.getEntityName())[ FD ]
Line_12 $$ MappedSuperclass msc = persistentClass.getSuperMappedSuperclass()-->Line_15 $$ msc = msc.getSuperMappedSuperclass()[ FD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_17 $$ associateSubclassNamesToSubclassTableIndexes(persistentClass, classNames, mapping, factory)[ FD ]
Line_5 $$ while (itr.hasNext()) -->Line_7 $$ final Set<String> subclassSubclassNames = processPersistentClassHierarchy(subclass, false, factory, mapping)[ CD ]
Line_11 $$ if (!isBase) -->Line_13 $$ while (msc != null) [ CD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_4 $$ final Iterator itr = persistentClass.getDirectSubclasses()[ FD ]
Line_5 $$ while (itr.hasNext()) -->Line_6 $$ final Subclass subclass = (Subclass) itr.next()[ CD ]
Line_4 $$ final Iterator itr = persistentClass.getDirectSubclasses()-->Line_5 $$ while (itr.hasNext()) [ FD ]
Line_6 $$ final Subclass subclass = (Subclass) itr.next()-->Line_7 $$ final Set<String> subclassSubclassNames = processPersistentClassHierarchy(subclass, false, factory, mapping)[ FD ]
Line_7 $$ final Set<String> subclassSubclassNames = processPersistentClassHierarchy(subclass, false, factory, mapping)-->Line_8 $$ classNames.addAll(subclassSubclassNames)[ FD ]
Line_3 $$ final Set<String> classNames = new HashSet<String>()-->Line_17 $$ associateSubclassNamesToSubclassTableIndexes(persistentClass, classNames, mapping, factory)[ FD ]
Line_4 $$ final Iterator itr = persistentClass.getDirectSubclasses()-->Line_6 $$ final Subclass subclass = (Subclass) itr.next()[ FD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_11 $$ if (!isBase) [ CD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_5 $$ while (itr.hasNext()) [ CD ]
Line_2 $$ private Set<String> processPersistentClassHierarchy(PersistentClass persistentClass, boolean isBase, SessionFactoryImplementor factory, String[][] mapping) -->Line_12 $$ MappedSuperclass msc = persistentClass.getSuperMappedSuperclass()[ FD ]
Line_12 $$ MappedSuperclass msc = persistentClass.getSuperMappedSuperclass()-->Line_14 $$ classNames.add(msc.getMappedClass().getName())[ FD ]
Line_13 $$ while (msc != null) -->Line_15 $$ msc = msc.getSuperMappedSuperclass()[ CD ]
Line_3 $$ final Set<String> classNames = new HashSet<String>()-->Line_14 $$ classNames.add(msc.getMappedClass().getName())[ FD ]
