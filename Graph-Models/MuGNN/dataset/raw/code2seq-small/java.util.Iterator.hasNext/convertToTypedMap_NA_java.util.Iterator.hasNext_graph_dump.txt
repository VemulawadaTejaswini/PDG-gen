Line_48 $$ while (it.hasNext()) -->Line_52 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)[ CD ]
Line_48 $$ while (it.hasNext()) -->Line_63 $$ originalAllowed = originalAllowed && (key == convertedKey) && (value == convertedValue)[ CD ]
Line_43 $$ if (logger.isDebugEnabled()) -->Line_44 $$ logger.debug("Cannot create copy of Map type [" + original.getClass().getName() + "] - injecting original Map as-is: " + ex)[ CD ]
Line_7 $$ boolean approximable = CollectionFactory.isApproximableMapType(requiredType)-->Line_8 $$ if (!approximable && !canCreateCopy(requiredType)) [ FD ]
Line_15 $$ TypeDescriptor keyType = typeDescriptor.getMapKeyTypeDescriptor()-->Line_53 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ FD ]
Line_53 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)-->Line_56 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_40 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()-->Line_56 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_50 $$ Object key = entry.getKey()-->Line_52 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)[ FD ]
Line_17 $$ if (keyType == null && valueType == null && originalAllowed && !this.propertyEditorRegistry.hasCustomEditorForElement(null, propertyName)) -->Line_18 $$ return original[ CD ]
Line_48 $$ while (it.hasNext()) -->Line_53 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ CD ]
Line_8 $$ if (!approximable && !canCreateCopy(requiredType)) -->Line_12 $$ return original[ CD ]
Line_22 $$ it = original.entrySet().iterator()-->Line_23 $$ if (it == null) [ FD ]
Line_23 $$ if (it == null) -->Line_24 $$ if (logger.isDebugEnabled()) [ CD ]
Line_35 $$ Map<Object, Object> convertedCopy-->Line_56 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_20 $$ Iterator<?> it-->Line_49 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()[ FD ]
Line_48 $$ while (it.hasNext()) -->Line_54 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ CD ]
Line_49 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()-->Line_50 $$ Object key = entry.getKey()[ FD ]
Line_38 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())-->Line_40 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()[ FD ]
Line_20 $$ Iterator<?> it-->Line_22 $$ it = original.entrySet().iterator()[ FD ]
Line_9 $$ if (logger.isDebugEnabled()) -->Line_10 $$ logger.debug("Custom Map type [" + original.getClass().getName() + "] does not allow for creating a copy - injecting original Map as-is")[ CD ]
Line_20 $$ Iterator<?> it-->Line_23 $$ if (it == null) [ FD ]
Line_37 $$ if (approximable) -->Line_40 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()[ CD ]
Line_50 $$ Object key = entry.getKey()-->Line_53 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ FD ]
Line_54 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)-->Line_56 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_48 $$ while (it.hasNext()) -->Line_51 $$ Object value = entry.getValue()[ CD ]
Line_8 $$ if (!approximable && !canCreateCopy(requiredType)) -->Line_9 $$ if (logger.isDebugEnabled()) [ CD ]
Line_51 $$ Object value = entry.getValue()-->Line_54 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ FD ]
Line_14 $$ boolean originalAllowed = requiredType.isInstance(original)-->Line_63 $$ originalAllowed = originalAllowed && (key == convertedKey) && (value == convertedValue)[ FD ]
Line_4 $$ if (!Map.class.isAssignableFrom(requiredType)) -->Line_5 $$ return original[ CD ]
Line_22 $$ it = original.entrySet().iterator()-->Line_49 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()[ FD ]
Line_16 $$ TypeDescriptor valueType = typeDescriptor.getMapValueTypeDescriptor()-->Line_54 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ FD ]
Line_58 $$ if (logger.isDebugEnabled()) -->Line_59 $$ logger.debug("Map type [" + original.getClass().getName() + "] seems to be read-only - injecting original Map as-is: " + ex)[ CD ]
Line_37 $$ if (approximable) -->Line_38 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())[ CD ]
Line_20 $$ Iterator<?> it-->Line_48 $$ while (it.hasNext()) [ FD ]
Line_35 $$ Map<Object, Object> convertedCopy-->Line_38 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())[ FD ]
Line_38 $$ convertedCopy = CollectionFactory.createApproximateMap(original, original.size())-->Line_56 $$ convertedCopy.put(convertedKey, convertedValue)[ FD ]
Line_24 $$ if (logger.isDebugEnabled()) -->Line_25 $$ logger.debug("Map of type [" + original.getClass().getName() + "] returned null Iterator - injecting original Map as-is")[ CD ]
Line_52 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)-->Line_53 $$ Object convertedKey = convertIfNecessary(keyedPropertyName, null, key, (keyType != null ? keyType.getType() : null), keyType)[ FD ]
Line_52 $$ String keyedPropertyName = buildKeyedPropertyName(propertyName, key)-->Line_54 $$ Object convertedValue = convertIfNecessary(keyedPropertyName, null, value, (valueType != null ? valueType.getType() : null), valueType)[ FD ]
Line_35 $$ Map<Object, Object> convertedCopy-->Line_40 $$ convertedCopy = (Map<Object, Object>) requiredType.newInstance()[ FD ]
Line_48 $$ while (it.hasNext()) -->Line_50 $$ Object key = entry.getKey()[ CD ]
Line_22 $$ it = original.entrySet().iterator()-->Line_48 $$ while (it.hasNext()) [ FD ]
Line_49 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()-->Line_51 $$ Object value = entry.getValue()[ FD ]
Line_23 $$ if (it == null) -->Line_27 $$ return original[ CD ]
Line_30 $$ if (logger.isDebugEnabled()) -->Line_31 $$ logger.debug("Cannot access Map of type [" + original.getClass().getName() + "] - injecting original Map as-is: " + ex)[ CD ]
Line_48 $$ while (it.hasNext()) -->Line_49 $$ Map.Entry<?, ?> entry = (Map.Entry<?, ?>) it.next()[ CD ]
