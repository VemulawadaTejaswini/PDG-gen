Line_4 $$ Object readyElement = myUi.getElementFor(actionNode)-->Line_5 $$ if (readyElement != null) [ FD ]
Line_5 $$ if (readyElement != null) -->Line_6 $$ Iterator<Object> toSelect = myToSelect.keySet().iterator()[ CD ]
Line_5 $$ if (readyElement != null) -->Line_7 $$ while (toSelect.hasNext()) [ CD ]
Line_3 $$ if (actionNode != null) -->Line_5 $$ if (readyElement != null) [ CD ]
Line_8 $$ Object eachToSelect = toSelect.next()-->Line_9 $$ if (readyElement.equals(myUi.getTreeStructure().getParentElement(eachToSelect))) [ FD ]
Line_13 $$ if (!myToSelect.containsKey(readyElement) && !myUi.getSelectedElements().contains(eachToSelect)) -->Line_14 $$ addAdjustedSelection(eachToSelect, Conditions.alwaysFalse(), null)[ CD ]
Line_2 $$ private void invalidateToSelectWithRefsToParent(DefaultMutableTreeNode actionNode) -->Line_3 $$ if (actionNode != null) [ FD ]
Line_8 $$ Object eachToSelect = toSelect.next()-->Line_14 $$ addAdjustedSelection(eachToSelect, Conditions.alwaysFalse(), null)[ FD ]
Line_6 $$ Iterator<Object> toSelect = myToSelect.keySet().iterator()-->Line_7 $$ while (toSelect.hasNext()) [ FD ]
Line_3 $$ if (actionNode != null) -->Line_4 $$ Object readyElement = myUi.getElementFor(actionNode)[ CD ]
Line_6 $$ Iterator<Object> toSelect = myToSelect.keySet().iterator()-->Line_12 $$ toSelect.remove()[ FD ]
Line_4 $$ Object readyElement = myUi.getElementFor(actionNode)-->Line_13 $$ if (!myToSelect.containsKey(readyElement) && !myUi.getSelectedElements().contains(eachToSelect)) [ FD ]
Line_8 $$ Object eachToSelect = toSelect.next()-->Line_11 $$ if (!children.contains(eachToSelect)) [ FD ]
Line_4 $$ Object readyElement = myUi.getElementFor(actionNode)-->Line_10 $$ List<Object> children = myUi.getLoadedChildrenFor(readyElement)[ FD ]
Line_10 $$ List<Object> children = myUi.getLoadedChildrenFor(readyElement)-->Line_11 $$ if (!children.contains(eachToSelect)) [ FD ]
Line_9 $$ if (readyElement.equals(myUi.getTreeStructure().getParentElement(eachToSelect))) -->Line_11 $$ if (!children.contains(eachToSelect)) [ CD ]
Line_6 $$ Iterator<Object> toSelect = myToSelect.keySet().iterator()-->Line_8 $$ Object eachToSelect = toSelect.next()[ FD ]
Line_7 $$ while (toSelect.hasNext()) -->Line_9 $$ if (readyElement.equals(myUi.getTreeStructure().getParentElement(eachToSelect))) [ CD ]
Line_2 $$ private void invalidateToSelectWithRefsToParent(DefaultMutableTreeNode actionNode) -->Line_3 $$ if (actionNode != null) [ CD ]
Line_4 $$ Object readyElement = myUi.getElementFor(actionNode)-->Line_9 $$ if (readyElement.equals(myUi.getTreeStructure().getParentElement(eachToSelect))) [ FD ]
Line_7 $$ while (toSelect.hasNext()) -->Line_8 $$ Object eachToSelect = toSelect.next()[ CD ]
Line_8 $$ Object eachToSelect = toSelect.next()-->Line_13 $$ if (!myToSelect.containsKey(readyElement) && !myUi.getSelectedElements().contains(eachToSelect)) [ FD ]
Line_2 $$ private void invalidateToSelectWithRefsToParent(DefaultMutableTreeNode actionNode) -->Line_4 $$ Object readyElement = myUi.getElementFor(actionNode)[ FD ]
Line_11 $$ if (!children.contains(eachToSelect)) -->Line_13 $$ if (!myToSelect.containsKey(readyElement) && !myUi.getSelectedElements().contains(eachToSelect)) [ CD ]
Line_9 $$ if (readyElement.equals(myUi.getTreeStructure().getParentElement(eachToSelect))) -->Line_10 $$ List<Object> children = myUi.getLoadedChildrenFor(readyElement)[ CD ]
Line_11 $$ if (!children.contains(eachToSelect)) -->Line_12 $$ toSelect.remove()[ CD ]
