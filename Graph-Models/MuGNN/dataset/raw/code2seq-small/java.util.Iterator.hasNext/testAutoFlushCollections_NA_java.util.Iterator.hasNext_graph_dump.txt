Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_34 $$ while (i.hasNext()) [ FD ]
Line_12 $$ tx = s.beginTransaction()-->Line_55 $$ tx.commit()[ FD ]
Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_44 $$ assertTrue(i.hasNext())[ FD ]
Line_4 $$ Session s = openSession()-->Line_11 $$ s = openSession()[ FD ]
Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()-->Line_48 $$ assertTrue(!i.hasNext())[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_31 $$ baz.setFooArray(new Foo[] [ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_54 $$ s.delete(baz)[ FD ]
Line_16 $$ boolean found = false-->Line_21 $$ assertTrue(found)[ FD ]
Line_19 $$ found = true-->Line_33 $$ found = false[ FD ]
Line_45 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof InterbaseDialect) && !(getDialect() instanceof PointbaseDialect) && !(getDialect() instanceof SAPDBDialect)) -->Line_48 $$ assertTrue(!i.hasNext())[ CD ]
Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_25 $$ baz.setStringArray(new String[] [ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()-->Line_44 $$ assertTrue(i.hasNext())[ FD ]
Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_35 $$ if (foo == i.next())[ FD ]
Line_11 $$ s = openSession()-->Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_48 $$ assertTrue(!i.hasNext())[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_49 $$ baz.getFooArray()[0] = foo[ FD ]
Line_35 $$ if (foo == i.next())-->Line_36 $$ found = true[ CD ]
Line_4 $$ Session s = openSession()-->Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_46 $$ baz.getFooArray()[0] = null[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_42 $$ baz.getFooArray()[0] = foo[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_39 $$ baz.getFooArray()[0] = null[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_27 $$ assertTrue(i.hasNext())[ FD ]
Line_45 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof InterbaseDialect) && !(getDialect() instanceof PointbaseDialect) && !(getDialect() instanceof SAPDBDialect)) -->Line_49 $$ baz.getFooArray()[0] = foo[ CD ]
Line_11 $$ s = openSession()-->Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_48 $$ assertTrue(!i.hasNext())[ FD ]
Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_54 $$ s.delete(baz)[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_34 $$ while (i.hasNext()) [ FD ]
Line_33 $$ found = false-->Line_36 $$ found = true[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_18 $$ if ("bark".equals(i.next()))[ FD ]
Line_45 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof InterbaseDialect) && !(getDialect() instanceof PointbaseDialect) && !(getDialect() instanceof SAPDBDialect)) -->Line_51 $$ assertTrue(i.hasNext())[ CD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_44 $$ assertTrue(i.hasNext())[ FD ]
Line_11 $$ s = openSession()-->Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_11 $$ s = openSession()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_28 $$ Foo foo = new Foo()-->Line_35 $$ if (foo == i.next())[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_42 $$ baz.getFooArray()[0] = foo[ FD ]
Line_11 $$ s = openSession()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_11 $$ s = openSession()-->Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_44 $$ assertTrue(i.hasNext())[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_31 $$ baz.setFooArray(new Foo[] [ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_22 $$ baz.setStringArray(null)[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_28 $$ Foo foo = new Foo()-->Line_29 $$ s.save(foo)[ FD ]
Line_4 $$ Session s = openSession()-->Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()-->Line_48 $$ assertTrue(!i.hasNext())[ FD ]
Line_11 $$ s = openSession()-->Line_53 $$ s.delete(foo)[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_48 $$ assertTrue(!i.hasNext())[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_5 $$ Transaction tx = s.beginTransaction()-->Line_12 $$ tx = s.beginTransaction()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_14 $$ baz.getStringArray()[0] = "bark"[ FD ]
Line_28 $$ Foo foo = new Foo()-->Line_49 $$ baz.getFooArray()[0] = foo[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_41 $$ assertTrue(!i.hasNext())[ FD ]
Line_4 $$ Session s = openSession()-->Line_10 $$ s.close()[ FD ]
Line_11 $$ s = openSession()-->Line_30 $$ s.flush()[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_35 $$ if (foo == i.next())[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_25 $$ baz.setStringArray(new String[] [ FD ]
Line_4 $$ Session s = openSession()-->Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction tx = s.beginTransaction()[ FD ]
Line_18 $$ if ("bark".equals(i.next()))-->Line_19 $$ found = true[ CD ]
Line_5 $$ Transaction tx = s.beginTransaction()-->Line_55 $$ tx.commit()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_49 $$ baz.getFooArray()[0] = foo[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_35 $$ if (foo == i.next())[ FD ]
Line_11 $$ s = openSession()-->Line_29 $$ s.save(foo)[ FD ]
Line_19 $$ found = true-->Line_38 $$ assertTrue(found)[ FD ]
Line_28 $$ Foo foo = new Foo()-->Line_42 $$ baz.getFooArray()[0] = foo[ FD ]
Line_16 $$ boolean found = false-->Line_33 $$ found = false[ FD ]
Line_11 $$ s = openSession()-->Line_54 $$ s.delete(baz)[ FD ]
Line_4 $$ Session s = openSession()-->Line_53 $$ s.delete(foo)[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_44 $$ assertTrue(i.hasNext())[ FD ]
Line_16 $$ boolean found = false-->Line_36 $$ found = true[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_7 $$ baz.setDefaults()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_35 $$ if (foo == i.next())[ FD ]
Line_45 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof InterbaseDialect) && !(getDialect() instanceof PointbaseDialect) && !(getDialect() instanceof SAPDBDialect)) -->Line_46 $$ baz.getFooArray()[0] = null[ CD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_22 $$ baz.setStringArray(null)[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_27 $$ assertTrue(i.hasNext())[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_34 $$ while (i.hasNext()) [ FD ]
Line_11 $$ s = openSession()-->Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_41 $$ assertTrue(!i.hasNext())[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_17 $$ while (i.hasNext()) [ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_8 $$ s.save(baz)[ FD ]
Line_16 $$ boolean found = false-->Line_38 $$ assertTrue(found)[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_24 $$ assertTrue(!i.hasNext())[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_28 $$ Foo foo = new Foo()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_30 $$ s.flush()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_27 $$ assertTrue(i.hasNext())[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_48 $$ assertTrue(!i.hasNext())[ FD ]
Line_45 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof InterbaseDialect) && !(getDialect() instanceof PointbaseDialect) && !(getDialect() instanceof SAPDBDialect)) -->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ CD ]
Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_11 $$ s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_54 $$ s.delete(baz)[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_41 $$ assertTrue(!i.hasNext())[ FD ]
Line_17 $$ while (i.hasNext()) -->Line_18 $$ if ("bark".equals(i.next()))[ CD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_11 $$ s = openSession()-->Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_19 $$ found = true-->Line_21 $$ assertTrue(found)[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_28 $$ Foo foo = new Foo()-->Line_53 $$ s.delete(foo)[ FD ]
Line_4 $$ Session s = openSession()-->Line_12 $$ tx = s.beginTransaction()[ FD ]
Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())-->Line_14 $$ baz.getStringArray()[0] = "bark"[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_48 $$ assertTrue(!i.hasNext())[ FD ]
Line_33 $$ found = false-->Line_38 $$ assertTrue(found)[ FD ]
Line_11 $$ s = openSession()-->Line_12 $$ tx = s.beginTransaction()[ FD ]
Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_19 $$ found = true-->Line_36 $$ found = true[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_8 $$ s.save(baz)[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_24 $$ assertTrue(!i.hasNext())[ FD ]
Line_16 $$ boolean found = false-->Line_19 $$ found = true[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()[ FD ]
Line_36 $$ found = true-->Line_38 $$ assertTrue(found)[ FD ]
Line_4 $$ Session s = openSession()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_56 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_4 $$ Session s = openSession()-->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_34 $$ while (i.hasNext()) [ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_44 $$ assertTrue(i.hasNext())[ FD ]
Line_6 $$ Baz baz = new Baz()-->Line_46 $$ baz.getFooArray()[0] = null[ FD ]
Line_43 $$ i = s.createQuery("select elements(baz.fooArray) from Baz baz").iterate()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_23 $$ i = s.createQuery("select distinct elements(baz.stringArray) from Baz baz").iterate()-->Line_41 $$ assertTrue(!i.hasNext())[ FD ]
Line_26 $$ i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_40 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()[ FD ]
Line_4 $$ Session s = openSession()-->Line_13 $$ baz = (Baz) s.load(Baz.class, baz.getCode())[ FD ]
Line_32 $$ i = s.createQuery("select foo from Baz baz join baz.fooArray foo").iterate()-->Line_41 $$ assertTrue(!i.hasNext())[ FD ]
Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()-->Line_51 $$ assertTrue(i.hasNext())[ FD ]
Line_5 $$ Transaction tx = s.beginTransaction()-->Line_9 $$ tx.commit()[ FD ]
Line_4 $$ Session s = openSession()-->Line_29 $$ s.save(foo)[ FD ]
Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()-->Line_50 $$ i = s.createQuery("select foo from Foo foo where foo in (select elt from Baz baz join baz.fooArray elt)").iterate()[ FD ]
Line_45 $$ if (!(getDialect() instanceof MySQLDialect) && !(getDialect() instanceof HSQLDialect) && !(getDialect() instanceof InterbaseDialect) && !(getDialect() instanceof PointbaseDialect) && !(getDialect() instanceof SAPDBDialect)) -->Line_47 $$ i = s.createQuery("from Baz baz where ? in elements(baz.fooArray)").setParameter(0, foo, s.getTypeHelper().entity(Foo.class)).iterate()[ CD ]
Line_34 $$ while (i.hasNext()) -->Line_35 $$ if (foo == i.next())[ CD ]
Line_6 $$ Baz baz = new Baz()-->Line_39 $$ baz.getFooArray()[0] = null[ FD ]
Line_11 $$ s = openSession()-->Line_15 $$ Iterator i = s.createQuery("select elements(baz.stringArray) from Baz baz").iterate()[ FD ]
