Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_8 $$ builder.append(", ")[ FD ]
Line_4 $$ for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) -->Line_7 $$ if (iterator.hasNext()) [ FD ]
Line_4 $$ for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) -->Line_7 $$ if (iterator.hasNext()) [ CD ]
Line_2 $$ protected String toCommaDelimitedString(List<String> list) -->Line_4 $$ for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) [ FD ]
Line_4 $$ for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) -->Line_5 $$ String ifNoneMatch = iterator.next()[ FD ]
Line_2 $$ protected String toCommaDelimitedString(List<String> list) -->Line_11 $$ return builder.toString()[ CD ]
Line_5 $$ String ifNoneMatch = iterator.next()-->Line_6 $$ builder.append(ifNoneMatch)[ FD ]
Line_4 $$ for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) -->Line_6 $$ builder.append(ifNoneMatch)[ CD ]
Line_2 $$ protected String toCommaDelimitedString(List<String> list) -->Line_3 $$ StringBuilder builder = new StringBuilder()[ CD ]
Line_7 $$ if (iterator.hasNext()) -->Line_8 $$ builder.append(", ")[ CD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_11 $$ return builder.toString()[ FD ]
Line_3 $$ StringBuilder builder = new StringBuilder()-->Line_6 $$ builder.append(ifNoneMatch)[ FD ]
Line_4 $$ for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) -->Line_5 $$ String ifNoneMatch = iterator.next()[ CD ]
Line_2 $$ protected String toCommaDelimitedString(List<String> list) -->Line_4 $$ for (Iterator<String> iterator = list.iterator(); iterator.hasNext(); ) [ CD ]
