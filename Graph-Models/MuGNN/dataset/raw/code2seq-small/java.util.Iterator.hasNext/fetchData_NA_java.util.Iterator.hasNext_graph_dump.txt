Line_16 $$ if (nodesToFetch.isEmpty() == false) -->Line_26 $$ asyncFetch(shardId, nodesIds, metaData)[ CD ]
Line_38 $$ NodeEntry<T> nodeEntry = entry.getValue()-->Line_47 $$ if (nodeEntry.getValue() != null) [ FD ]
Line_22 $$ int index = 0-->Line_24 $$ nodesIds[index++] = nodeEntry.getNodeId()[ FD ]
Line_15 $$ Set<NodeEntry<T>> nodesToFetch = findNodesToFetch(cache)-->Line_21 $$ String[] nodesIds = new String[nodesToFetch.size()][ FD ]
Line_15 $$ Set<NodeEntry<T>> nodesToFetch = findNodesToFetch(cache)-->Line_16 $$ if (nodesToFetch.isEmpty() == false) [ FD ]
Line_39 $$ DiscoveryNode node = nodes.get(nodeId)-->Line_48 $$ fetchData.put(node, nodeEntry.getValue())[ FD ]
Line_35 $$ for (Iterator<Map.Entry<String, NodeEntry<T>>> it = cache.entrySet().iterator(); it.hasNext(); ) -->Line_40 $$ if (node != null) [ CD ]
Line_39 $$ DiscoveryNode node = nodes.get(nodeId)-->Line_40 $$ if (node != null) [ FD ]
Line_38 $$ NodeEntry<T> nodeEntry = entry.getValue()-->Line_45 $$ failedNodes.add(nodeEntry.getNodeId())[ FD ]
Line_34 $$ Set<String> failedNodes = new HashSet()-->Line_45 $$ failedNodes.add(nodeEntry.getNodeId())[ FD ]
Line_38 $$ NodeEntry<T> nodeEntry = entry.getValue()-->Line_48 $$ fetchData.put(node, nodeEntry.getValue())[ FD ]
Line_47 $$ if (nodeEntry.getValue() != null) -->Line_48 $$ fetchData.put(node, nodeEntry.getValue())[ CD ]
Line_35 $$ for (Iterator<Map.Entry<String, NodeEntry<T>>> it = cache.entrySet().iterator(); it.hasNext(); ) -->Line_38 $$ NodeEntry<T> nodeEntry = entry.getValue()[ CD ]
Line_40 $$ if (node != null) -->Line_41 $$ if (nodeEntry.isFailed() == true) [ CD ]
Line_37 $$ String nodeId = entry.getKey()-->Line_39 $$ DiscoveryNode node = nodes.get(nodeId)[ FD ]
Line_53 $$ Set<String> allIgnoreNodes = unmodifiableSet(new HashSet(nodesToIgnore))-->Line_60 $$ reroute(shardId, "nodes failed [" + failedNodes.size() + "], ignored [" + allIgnoreNodes.size() + "]")[ FD ]
Line_36 $$ Map.Entry<String, NodeEntry<T>> entry = it.next()-->Line_38 $$ NodeEntry<T> nodeEntry = entry.getValue()[ FD ]
Line_21 $$ String[] nodesIds = new String[nodesToFetch.size()]-->Line_26 $$ asyncFetch(shardId, nodesIds, metaData)[ FD ]
Line_16 $$ if (nodesToFetch.isEmpty() == false) -->Line_22 $$ int index = 0[ CD ]
Line_41 $$ if (nodeEntry.isFailed() == true) -->Line_45 $$ failedNodes.add(nodeEntry.getNodeId())[ CD ]
Line_41 $$ if (nodeEntry.isFailed() == true) -->Line_47 $$ if (nodeEntry.getValue() != null) [ CD ]
Line_35 $$ for (Iterator<Map.Entry<String, NodeEntry<T>>> it = cache.entrySet().iterator(); it.hasNext(); ) -->Line_39 $$ DiscoveryNode node = nodes.get(nodeId)[ CD ]
Line_35 $$ for (Iterator<Map.Entry<String, NodeEntry<T>>> it = cache.entrySet().iterator(); it.hasNext(); ) -->Line_36 $$ Map.Entry<String, NodeEntry<T>> entry = it.next()[ CD ]
Line_36 $$ Map.Entry<String, NodeEntry<T>> entry = it.next()-->Line_37 $$ String nodeId = entry.getKey()[ FD ]
Line_38 $$ NodeEntry<T> nodeEntry = entry.getValue()-->Line_41 $$ if (nodeEntry.isFailed() == true) [ FD ]
Line_35 $$ for (Iterator<Map.Entry<String, NodeEntry<T>>> it = cache.entrySet().iterator(); it.hasNext(); ) -->Line_36 $$ Map.Entry<String, NodeEntry<T>> entry = it.next()[ FD ]
Line_34 $$ Set<String> failedNodes = new HashSet()-->Line_60 $$ reroute(shardId, "nodes failed [" + failedNodes.size() + "], ignored [" + allIgnoreNodes.size() + "]")[ FD ]
Line_16 $$ if (nodesToFetch.isEmpty() == false) -->Line_21 $$ String[] nodesIds = new String[nodesToFetch.size()][ CD ]
Line_35 $$ for (Iterator<Map.Entry<String, NodeEntry<T>>> it = cache.entrySet().iterator(); it.hasNext(); ) -->Line_37 $$ String nodeId = entry.getKey()[ CD ]
