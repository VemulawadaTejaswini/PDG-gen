Line_4 $$ if (originalVault.get("KEYSTORE_URL") != null && originalVault.hasDefined("KEYSTORE_URL")) -->Line_7 $$ op = Util.createAddOperation(VAULT_PATH)[ CD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_3 $$ ModelNode op[ CD ]
Line_4 $$ if (originalVault.get("KEYSTORE_URL") != null && originalVault.hasDefined("KEYSTORE_URL")) -->Line_13 $$ Utils.applyUpdate(op, managementClient.getControllerClient())[ CD ]
Line_3 $$ ModelNode op-->Line_7 $$ op = Util.createAddOperation(VAULT_PATH)[ FD ]
Line_7 $$ op = Util.createAddOperation(VAULT_PATH)-->Line_13 $$ Utils.applyUpdate(op, managementClient.getControllerClient())[ FD ]
Line_4 $$ if (originalVault.get("KEYSTORE_URL") != null && originalVault.hasDefined("KEYSTORE_URL")) -->Line_8 $$ ModelNode vaultOption = op.get(VAULT_OPTIONS)[ CD ]
Line_9 $$ while (it.hasNext()) -->Line_11 $$ vaultOption.get(param).set(originalVault.get(param))[ CD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_15 $$ vaultHandler.cleanUp()[ CD ]
Line_4 $$ if (originalVault.get("KEYSTORE_URL") != null && originalVault.hasDefined("KEYSTORE_URL")) -->Line_6 $$ Iterator<String> it = originalVaultParam.iterator()[ CD ]
Line_4 $$ if (originalVault.get("KEYSTORE_URL") != null && originalVault.hasDefined("KEYSTORE_URL")) -->Line_5 $$ Set<String> originalVaultParam = originalVault.keys()[ CD ]
Line_8 $$ ModelNode vaultOption = op.get(VAULT_OPTIONS)-->Line_11 $$ vaultOption.get(param).set(originalVault.get(param))[ FD ]
Line_3 $$ ModelNode op-->Line_8 $$ ModelNode vaultOption = op.get(VAULT_OPTIONS)[ FD ]
Line_3 $$ ModelNode op-->Line_13 $$ Utils.applyUpdate(op, managementClient.getControllerClient())[ FD ]
Line_6 $$ Iterator<String> it = originalVaultParam.iterator()-->Line_10 $$ String param = (String) it.next()[ FD ]
Line_7 $$ op = Util.createAddOperation(VAULT_PATH)-->Line_8 $$ ModelNode vaultOption = op.get(VAULT_OPTIONS)[ FD ]
Line_5 $$ Set<String> originalVaultParam = originalVault.keys()-->Line_6 $$ Iterator<String> it = originalVaultParam.iterator()[ FD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_4 $$ if (originalVault.get("KEYSTORE_URL") != null && originalVault.hasDefined("KEYSTORE_URL")) [ CD ]
Line_10 $$ String param = (String) it.next()-->Line_11 $$ vaultOption.get(param).set(originalVault.get(param))[ FD ]
Line_6 $$ Iterator<String> it = originalVaultParam.iterator()-->Line_9 $$ while (it.hasNext()) [ FD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_16 $$ passwordProvider.cleanup()[ CD ]
Line_4 $$ if (originalVault.get("KEYSTORE_URL") != null && originalVault.hasDefined("KEYSTORE_URL")) -->Line_9 $$ while (it.hasNext()) [ CD ]
Line_2 $$ public void tearDown(ManagementClient managementClient, String containerId) throws Exception -->Line_13 $$ Utils.applyUpdate(op, managementClient.getControllerClient())[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_10 $$ String param = (String) it.next()[ CD ]
