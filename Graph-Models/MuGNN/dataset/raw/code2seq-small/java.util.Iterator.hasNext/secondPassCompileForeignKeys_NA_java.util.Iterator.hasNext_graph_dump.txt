Line_7 $$ if (!done.contains(fk)) -->Line_9 $$ final String referencedEntityName = fk.getReferencedEntityName()[ CD ]
Line_7 $$ if (!done.contains(fk)) -->Line_21 $$ fk.setReferencedTable(referencedClass.getTable())[ CD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_9 $$ final String referencedEntityName = fk.getReferencedEntityName()[ FD ]
Line_5 $$ while (itr.hasNext()) -->Line_7 $$ if (!done.contains(fk)) [ CD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_22 $$ if (fk.getName() == null) [ FD ]
Line_14 $$ final PersistentClass referencedClass = getEntityBinding(referencedEntityName)-->Line_18 $$ if (referencedClass.isJoinedSubclass()) [ FD ]
Line_7 $$ if (!done.contains(fk)) -->Line_15 $$ if (referencedClass == null) [ CD ]
Line_7 $$ if (!done.contains(fk)) -->Line_22 $$ if (fk.getName() == null) [ CD ]
Line_22 $$ if (fk.getName() == null) -->Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() [ CD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_8 $$ done.add(fk)[ FD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_33 $$ return fk.getReferencedTable().getNameIdentifier()[ FD ]
Line_36 $$ if (referencedColumnNames == null) -->Line_37 $$ referencedColumnNames = extractColumnNames(fk.getReferencedColumns())[ CD ]
Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() -->Line_45 $$ fk.setName(nameIdentifier.render(getDatabase().getJdbcEnvironment().getDialect()))[ FD ]
Line_22 $$ if (fk.getName() == null) -->Line_45 $$ fk.setName(nameIdentifier.render(getDatabase().getJdbcEnvironment().getDialect()))[ CD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_7 $$ if (!done.contains(fk)) [ FD ]
Line_7 $$ if (!done.contains(fk)) -->Line_10 $$ if (referencedEntityName == null) [ CD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_45 $$ fk.setName(nameIdentifier.render(getDatabase().getJdbcEnvironment().getDialect()))[ FD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_16 $$ throw new MappingException("An association from the table " + fk.getTable().getName() + " refers to an unmapped class: " + referencedEntityName)[ FD ]
Line_7 $$ if (!done.contains(fk)) -->Line_14 $$ final PersistentClass referencedClass = getEntityBinding(referencedEntityName)[ CD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() [ FD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_8 $$ done.add(fk)[ FD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_19 $$ secondPassCompileForeignKeys(referencedClass.getSuperclass().getTable(), done, buildingContext)[ FD ]
Line_4 $$ Iterator itr = table.getForeignKeyIterator()-->Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()[ FD ]
Line_9 $$ final String referencedEntityName = fk.getReferencedEntityName()-->Line_14 $$ final PersistentClass referencedClass = getEntityBinding(referencedEntityName)[ FD ]
Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() -->Line_39 $$ return referencedColumnNames[ CD ]
Line_14 $$ final PersistentClass referencedClass = getEntityBinding(referencedEntityName)-->Line_19 $$ secondPassCompileForeignKeys(referencedClass.getSuperclass().getTable(), done, buildingContext)[ FD ]
Line_7 $$ if (!done.contains(fk)) -->Line_47 $$ fk.alignColumns()[ CD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_4 $$ Iterator itr = table.getForeignKeyIterator()[ CD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_7 $$ if (!done.contains(fk)) [ FD ]
Line_14 $$ final PersistentClass referencedClass = getEntityBinding(referencedEntityName)-->Line_21 $$ fk.setReferencedTable(referencedClass.getTable())[ FD ]
Line_7 $$ if (!done.contains(fk)) -->Line_13 $$ log.debugf("Resolving reference to class: %s", referencedEntityName)[ CD ]
Line_18 $$ if (referencedClass.isJoinedSubclass()) -->Line_19 $$ secondPassCompileForeignKeys(referencedClass.getSuperclass().getTable(), done, buildingContext)[ CD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_3 $$ table.createForeignKeys()[ CD ]
Line_4 $$ Iterator itr = table.getForeignKeyIterator()-->Line_5 $$ while (itr.hasNext()) [ FD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_4 $$ Iterator itr = table.getForeignKeyIterator()[ FD ]
Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() -->Line_27 $$ return table.getNameIdentifier()[ CD ]
Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() -->Line_42 $$ return buildingContext[ CD ]
Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() -->Line_30 $$ return columnNames[ CD ]
Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() -->Line_33 $$ return fk.getReferencedTable().getNameIdentifier()[ CD ]
Line_7 $$ if (!done.contains(fk)) -->Line_18 $$ if (referencedClass.isJoinedSubclass()) [ CD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_5 $$ while (itr.hasNext()) [ CD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_21 $$ fk.setReferencedTable(referencedClass.getTable())[ FD ]
Line_5 $$ while (itr.hasNext()) -->Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()[ CD ]
Line_7 $$ if (!done.contains(fk)) -->Line_8 $$ done.add(fk)[ CD ]
Line_9 $$ final String referencedEntityName = fk.getReferencedEntityName()-->Line_10 $$ if (referencedEntityName == null) [ FD ]
Line_14 $$ final PersistentClass referencedClass = getEntityBinding(referencedEntityName)-->Line_15 $$ if (referencedClass == null) [ FD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_3 $$ table.createForeignKeys()[ FD ]
Line_23 $$ final Identifier nameIdentifier = getMetadataBuildingOptions().getImplicitNamingStrategy().determineForeignKeyName(new ImplicitForeignKeyNameSource() -->Line_36 $$ if (referencedColumnNames == null) [ CD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_47 $$ fk.alignColumns()[ FD ]
Line_2 $$ protected void secondPassCompileForeignKeys(final Table table, Set<ForeignKey> done, final MetadataBuildingContext buildingContext) throws MappingException -->Line_27 $$ return table.getNameIdentifier()[ FD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_37 $$ referencedColumnNames = extractColumnNames(fk.getReferencedColumns())[ FD ]
Line_9 $$ final String referencedEntityName = fk.getReferencedEntityName()-->Line_13 $$ log.debugf("Resolving reference to class: %s", referencedEntityName)[ FD ]
Line_6 $$ final ForeignKey fk = (ForeignKey) itr.next()-->Line_11 $$ throw new MappingException("An association from the table " + fk.getTable().getName() + " does not specify the referenced entity")[ FD ]
