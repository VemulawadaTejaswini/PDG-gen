Line_3 $$ while (actions.hasNext()) -->Line_4 $$ DiscreteAction<?> action = actions.next()[ CD ]
Line_4 $$ DiscreteAction<?> action = actions.next()-->Line_6 $$ action.perform()[ FD ]
Line_2 $$ public static Throwable perform(Throwable accumulate, Iterator<? extends DiscreteAction<?>> actions) -->Line_8 $$ accumulate = merge(accumulate, t)[ FD ]
Line_2 $$ public static Throwable perform(Throwable accumulate, Iterator<? extends DiscreteAction<?>> actions) -->Line_3 $$ while (actions.hasNext()) [ FD ]
Line_2 $$ public static Throwable perform(Throwable accumulate, Iterator<? extends DiscreteAction<?>> actions) -->Line_4 $$ DiscreteAction<?> action = actions.next()[ FD ]
Line_2 $$ public static Throwable perform(Throwable accumulate, Iterator<? extends DiscreteAction<?>> actions) -->Line_11 $$ return accumulate[ CD ]
Line_2 $$ public static Throwable perform(Throwable accumulate, Iterator<? extends DiscreteAction<?>> actions) -->Line_3 $$ while (actions.hasNext()) [ CD ]
