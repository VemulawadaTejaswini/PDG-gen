Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_6 $$ while (arg1.hasNext()) [ CD ]
Line_6 $$ while (arg1.hasNext()) -->Line_17 $$ if (data == null) [ CD ]
Line_6 $$ while (arg1.hasNext()) -->Line_11 $$ if (this.numOfValues > this.maxNumOfValuesPerGroup) [ CD ]
Line_6 $$ while (arg1.hasNext()) -->Line_7 $$ this.numOfValues += 1[ CD ]
Line_17 $$ if (data == null) -->Line_19 $$ retv.put(tag, data)[ CD ]
Line_18 $$ data = createResetableIterator()-->Line_21 $$ data.add(aRecord)[ FD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_6 $$ while (arg1.hasNext()) [ FD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_25 $$ LOG.info("key: " + key.toString() + " this.largestNumOfValues: " + this.largestNumOfValues)[ FD ]
Line_6 $$ while (arg1.hasNext()) -->Line_14 $$ aRecord = ((TaggedMapOutput) arg1.next()).clone(job)[ CD ]
Line_4 $$ SortedMap<Object, ResetableIterator> retv = new TreeMap<Object, ResetableIterator>()-->Line_19 $$ retv.put(tag, data)[ FD ]
Line_16 $$ ResetableIterator data = retv.get(tag)-->Line_18 $$ data = createResetableIterator()[ FD ]
Line_14 $$ aRecord = ((TaggedMapOutput) arg1.next()).clone(job)-->Line_15 $$ Text tag = aRecord.getTag()[ FD ]
Line_16 $$ ResetableIterator data = retv.get(tag)-->Line_19 $$ retv.put(tag, data)[ FD ]
Line_16 $$ ResetableIterator data = retv.get(tag)-->Line_21 $$ data.add(aRecord)[ FD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_14 $$ aRecord = ((TaggedMapOutput) arg1.next()).clone(job)[ FD ]
Line_5 $$ TaggedMapOutput aRecord = null-->Line_21 $$ data.add(aRecord)[ FD ]
Line_5 $$ TaggedMapOutput aRecord = null-->Line_14 $$ aRecord = ((TaggedMapOutput) arg1.next()).clone(job)[ FD ]
Line_6 $$ while (arg1.hasNext()) -->Line_21 $$ data.add(aRecord)[ CD ]
Line_17 $$ if (data == null) -->Line_18 $$ data = createResetableIterator()[ CD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_27 $$ return retv[ CD ]
Line_6 $$ while (arg1.hasNext()) -->Line_8 $$ if (this.numOfValues % 100 == 0) [ CD ]
Line_8 $$ if (this.numOfValues % 100 == 0) -->Line_9 $$ reporter.setStatus("key: " + key.toString() + " numOfValues: " + this.numOfValues)[ CD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_23 $$ if (this.numOfValues > this.largestNumOfValues) [ CD ]
Line_6 $$ while (arg1.hasNext()) -->Line_16 $$ ResetableIterator data = retv.get(tag)[ CD ]
Line_15 $$ Text tag = aRecord.getTag()-->Line_16 $$ ResetableIterator data = retv.get(tag)[ FD ]
Line_5 $$ TaggedMapOutput aRecord = null-->Line_15 $$ Text tag = aRecord.getTag()[ FD ]
Line_15 $$ Text tag = aRecord.getTag()-->Line_19 $$ retv.put(tag, data)[ FD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_3 $$ this.numOfValues = 0[ CD ]
Line_18 $$ data = createResetableIterator()-->Line_17 $$ if (data == null) [ FD ]
Line_18 $$ data = createResetableIterator()-->Line_19 $$ retv.put(tag, data)[ FD ]
Line_4 $$ SortedMap<Object, ResetableIterator> retv = new TreeMap<Object, ResetableIterator>()-->Line_16 $$ ResetableIterator data = retv.get(tag)[ FD ]
Line_16 $$ ResetableIterator data = retv.get(tag)-->Line_17 $$ if (data == null) [ FD ]
Line_14 $$ aRecord = ((TaggedMapOutput) arg1.next()).clone(job)-->Line_21 $$ data.add(aRecord)[ FD ]
Line_6 $$ while (arg1.hasNext()) -->Line_15 $$ Text tag = aRecord.getTag()[ CD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_9 $$ reporter.setStatus("key: " + key.toString() + " numOfValues: " + this.numOfValues)[ FD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_4 $$ SortedMap<Object, ResetableIterator> retv = new TreeMap<Object, ResetableIterator>()[ CD ]
Line_2 $$ private SortedMap<Object, ResetableIterator> regroup(Object key, Iterator arg1, Reporter reporter) throws IOException -->Line_5 $$ TaggedMapOutput aRecord = null[ CD ]
Line_23 $$ if (this.numOfValues > this.largestNumOfValues) -->Line_25 $$ LOG.info("key: " + key.toString() + " this.largestNumOfValues: " + this.largestNumOfValues)[ CD ]
