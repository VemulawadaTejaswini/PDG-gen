Line_28 $$ if (matches == null) -->Line_29 $$ matches = new ArrayList<LoadingCollectionEntry>()[ CD ]
Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)-->Line_35 $$ LOG.tracev("Removing collection load entry [[ FD ]
Line_27 $$ if (lce.getResultSet() == resultSet && lce.getPersister() == persister) -->Line_35 $$ LOG.tracev("Removing collection load entry [[ CD ]
Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)-->Line_25 $$ if (lce == null) [ FD ]
Line_23 $$ final CollectionKey collectionKey = (CollectionKey) itr.next()-->Line_26 $$ LOG.loadingCollectionKeyNotFound(collectionKey)[ FD ]
Line_21 $$ final Iterator itr = localLoadingCollectionKeys.iterator()-->Line_23 $$ final CollectionKey collectionKey = (CollectionKey) itr.next()[ FD ]
Line_21 $$ final Iterator itr = localLoadingCollectionKeys.iterator()-->Line_22 $$ while (itr.hasNext()) [ FD ]
Line_22 $$ while (itr.hasNext()) -->Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)[ CD ]
Line_29 $$ matches = new ArrayList<LoadingCollectionEntry>()-->Line_41 $$ endLoadingCollections(persister, matches)[ FD ]
Line_27 $$ if (lce.getResultSet() == resultSet && lce.getPersister() == persister) -->Line_31 $$ matches.add(lce)[ CD ]
Line_27 $$ if (lce.getResultSet() == resultSet && lce.getPersister() == persister) -->Line_28 $$ if (matches == null) [ CD ]
Line_22 $$ while (itr.hasNext()) -->Line_23 $$ final CollectionKey collectionKey = (CollectionKey) itr.next()[ CD ]
Line_23 $$ final CollectionKey collectionKey = (CollectionKey) itr.next()-->Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)[ FD ]
Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)-->Line_27 $$ if (lce.getResultSet() == resultSet && lce.getPersister() == persister) [ FD ]
Line_27 $$ if (lce.getResultSet() == resultSet && lce.getPersister() == persister) -->Line_38 $$ itr.remove()[ CD ]
Line_22 $$ while (itr.hasNext()) -->Line_25 $$ if (lce == null) [ CD ]
Line_25 $$ if (lce == null) -->Line_27 $$ if (lce.getResultSet() == resultSet && lce.getPersister() == persister) [ CD ]
Line_25 $$ if (lce == null) -->Line_26 $$ LOG.loadingCollectionKeyNotFound(collectionKey)[ CD ]
Line_29 $$ matches = new ArrayList<LoadingCollectionEntry>()-->Line_28 $$ if (matches == null) [ FD ]
Line_11 $$ if (!loadContexts.hasLoadingCollectionEntries() && localLoadingCollectionKeys.isEmpty()) -->Line_12 $$ return[ CD ]
Line_21 $$ final Iterator itr = localLoadingCollectionKeys.iterator()-->Line_38 $$ itr.remove()[ FD ]
Line_27 $$ if (lce.getResultSet() == resultSet && lce.getPersister() == persister) -->Line_32 $$ if (lce.getCollection().getOwner() == null) [ CD ]
Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)-->Line_32 $$ if (lce.getCollection().getOwner() == null) [ FD ]
Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)-->Line_33 $$ session.getPersistenceContext().addUnownedCollection(new CollectionKey(persister, lce.getKey(), persister.getOwnerEntityPersister().getEntityMetamodel().getEntityMode()), lce.getCollection())[ FD ]
Line_24 $$ final LoadingCollectionEntry lce = loadContexts.locateLoadingCollectionEntry(collectionKey)-->Line_31 $$ matches.add(lce)[ FD ]
Line_29 $$ matches = new ArrayList<LoadingCollectionEntry>()-->Line_31 $$ matches.add(lce)[ FD ]
Line_10 $$ final SessionImplementor session = getLoadContext().getPersistenceContext().getSession()-->Line_33 $$ session.getPersistenceContext().addUnownedCollection(new CollectionKey(persister, lce.getKey(), persister.getOwnerEntityPersister().getEntityMetamodel().getEntityMode()), lce.getCollection())[ FD ]
Line_32 $$ if (lce.getCollection().getOwner() == null) -->Line_33 $$ session.getPersistenceContext().addUnownedCollection(new CollectionKey(persister, lce.getKey(), persister.getOwnerEntityPersister().getEntityMetamodel().getEntityMode()), lce.getCollection())[ CD ]
