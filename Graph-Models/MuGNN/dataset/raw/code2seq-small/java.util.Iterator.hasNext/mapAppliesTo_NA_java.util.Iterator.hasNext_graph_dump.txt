Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_16 $$ return evaluateComparisonWithOperator(comparison, operator)[ FD ]
Line_4 $$ while (iter.hasNext()) -->Line_8 $$ Cell c = iter.next()[ CD ]
Line_15 $$ if (comparison != 0)-->Line_16 $$ return evaluateComparisonWithOperator(comparison, operator)[ CD ]
Line_4 $$ while (iter.hasNext()) -->Line_5 $$ if (!conditionIter.hasNext())[ CD ]
Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_8 $$ Cell c = iter.next()[ FD ]
Line_4 $$ while (iter.hasNext()) -->Line_11 $$ if (comparison != 0)[ CD ]
Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_18 $$ if (conditionIter.hasNext())[ CD ]
Line_11 $$ if (comparison != 0)-->Line_12 $$ return evaluateComparisonWithOperator(comparison, operator)[ CD ]
Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_4 $$ while (iter.hasNext()) [ CD ]
Line_4 $$ while (iter.hasNext()) -->Line_7 $$ Map.Entry<ByteBuffer, ByteBuffer> conditionEntry = conditionIter.next()[ CD ]
Line_5 $$ if (!conditionIter.hasNext())-->Line_6 $$ return (operator == Operator.GT) || (operator == Operator.GTE) || (operator == Operator.NEQ)[ CD ]
Line_18 $$ if (conditionIter.hasNext())-->Line_19 $$ return (operator == Operator.LT) || (operator == Operator.LTE) || (operator == Operator.NEQ)[ CD ]
Line_3 $$ Iterator<Map.Entry<ByteBuffer, ByteBuffer>> conditionIter = elements.entrySet().iterator()-->Line_7 $$ Map.Entry<ByteBuffer, ByteBuffer> conditionEntry = conditionIter.next()[ FD ]
Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_4 $$ while (iter.hasNext()) [ FD ]
Line_3 $$ Iterator<Map.Entry<ByteBuffer, ByteBuffer>> conditionIter = elements.entrySet().iterator()-->Line_5 $$ if (!conditionIter.hasNext())[ FD ]
Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_3 $$ Iterator<Map.Entry<ByteBuffer, ByteBuffer>> conditionIter = elements.entrySet().iterator()[ CD ]
Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_12 $$ return evaluateComparisonWithOperator(comparison, operator)[ FD ]
Line_4 $$ while (iter.hasNext()) -->Line_15 $$ if (comparison != 0)[ CD ]
Line_3 $$ Iterator<Map.Entry<ByteBuffer, ByteBuffer>> conditionIter = elements.entrySet().iterator()-->Line_18 $$ if (conditionIter.hasNext())[ FD ]
Line_2 $$ static boolean mapAppliesTo(MapType type, Iterator<Cell> iter, Map<ByteBuffer, ByteBuffer> elements, Operator operator) -->Line_3 $$ Iterator<Map.Entry<ByteBuffer, ByteBuffer>> conditionIter = elements.entrySet().iterator()[ FD ]
