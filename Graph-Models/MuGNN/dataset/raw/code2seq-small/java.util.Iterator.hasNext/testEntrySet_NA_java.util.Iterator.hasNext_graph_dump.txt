Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_41 $$ entry.setValue(_testValue2)[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_26 $$ Assert.assertNotEquals(entry, new Object())[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_22 $$ Iterator<Map.Entry<Key, Value>> iterator = entrySet.iterator()[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_39 $$ Assert.assertTrue(entrySet.contains(entry))[ FD ]
Line_22 $$ Iterator<Map.Entry<Key, Value>> iterator = entrySet.iterator()-->Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()[ FD ]
Line_22 $$ Iterator<Map.Entry<Key, Value>> iterator = entrySet.iterator()-->Line_45 $$ iterator.remove()[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_46 $$ Assert.assertTrue(entrySet.isEmpty())[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_35 $$ Assert.assertSame(_testKey, entry.getKey())[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_16 $$ Assert.assertFalse(entrySet.remove(new SimpleEntry<Key, Value>(_testKey, new Value(""))))[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_7 $$ Assert.assertFalse(entrySet.contains(new Object()))[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_18 $$ Assert.assertTrue(entrySet.remove(new SimpleEntry<Key, Value>(_testKey, _testValue)))[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_27 $$ Assert.assertNotEquals(entry, new SimpleEntry<Key, Value>(new Key("someKey"), _testValue))[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_33 $$ Assert.assertEquals(_testKey.hashCode() ^ _testValue.hashCode(), entry.hashCode())[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_47 $$ Assert.assertFalse(entrySet.contains(entry))[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_12 $$ Assert.assertTrue(entrySet.contains(new SimpleEntry<Key, Value>(_testKey, _testValue)))[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_51 $$ Assert.assertEquals(1, entrySet.size())[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_31 $$ Assert.assertEquals(entry, new SimpleEntry<Key, Value>(_testKey, _testValue))[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_5 $$ Assert.assertSame(entrySet, _concurrentMap.entrySet())[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_47 $$ Assert.assertFalse(entrySet.contains(entry))[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_29 $$ Assert.assertNotEquals(entry, new SimpleEntry<Key, Value>(_testKey, new Value("")))[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_8 $$ Assert.assertFalse(entrySet.remove(new Object()))[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_37 $$ Assert.assertSame(_testValue, entry.getValue())[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_39 $$ Assert.assertTrue(entrySet.contains(entry))[ FD ]
Line_24 $$ Map.Entry<Key, Value> entry = iterator.next()-->Line_25 $$ Assert.assertEquals(entry, entry)[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_53 $$ Assert.assertTrue(entrySet.isEmpty())[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_6 $$ Assert.assertTrue(entrySet.isEmpty())[ FD ]
Line_22 $$ Iterator<Map.Entry<Key, Value>> iterator = entrySet.iterator()-->Line_34 $$ Assert.assertFalse(iterator.hasNext())[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_14 $$ Assert.assertFalse(entrySet.contains(new SimpleEntry<Key, Value>(_testKey, new Value(""))))[ FD ]
Line_22 $$ Iterator<Map.Entry<Key, Value>> iterator = entrySet.iterator()-->Line_23 $$ Assert.assertTrue(iterator.hasNext())[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_52 $$ entrySet.clear()[ FD ]
Line_4 $$ Set<Map.Entry<Key, Value>> entrySet = _concurrentMap.entrySet()-->Line_11 $$ Assert.assertEquals(1, entrySet.size())[ FD ]
