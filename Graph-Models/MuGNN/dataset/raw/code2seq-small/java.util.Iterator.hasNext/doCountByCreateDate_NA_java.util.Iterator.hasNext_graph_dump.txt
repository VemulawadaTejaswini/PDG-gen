Line_12 $$ if (inlineSQLHelper) -->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)[ CD ]
Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_20 $$ qPos.add(createDate)[ FD ]
Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_19 $$ qPos.add(nodeId)[ FD ]
Line_7 $$ String createDateComparator = StringPool.GREATER_THAN-->Line_9 $$ createDateComparator = StringPool.LESS_THAN[ FD ]
Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_23 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_16 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_21 $$ qPos.add(true)[ FD ]
Line_24 $$ if (itr.hasNext()) -->Line_26 $$ if (count != null) [ CD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_CREATE_DATE)-->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)[ FD ]
Line_2 $$ protected int doCountByCreateDate(long groupId, long nodeId, Timestamp createDate, boolean before, boolean inlineSQLHelper) -->Line_3 $$ Session session = null[ CD ]
Line_7 $$ String createDateComparator = StringPool.GREATER_THAN-->Line_11 $$ sql = StringUtil.replace(sql, "[$CREATE_DATE_COMPARATOR$]", createDateComparator)[ FD ]
Line_2 $$ protected int doCountByCreateDate(long groupId, long nodeId, Timestamp createDate, boolean before, boolean inlineSQLHelper) -->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)[ FD ]
Line_25 $$ Long count = itr.next()-->Line_27 $$ return count.intValue()[ FD ]
Line_25 $$ Long count = itr.next()-->Line_26 $$ if (count != null) [ FD ]
Line_3 $$ Session session = null-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_23 $$ Iterator<Long> itr = q.iterate()-->Line_25 $$ Long count = itr.next()[ FD ]
Line_2 $$ protected int doCountByCreateDate(long groupId, long nodeId, Timestamp createDate, boolean before, boolean inlineSQLHelper) -->Line_20 $$ qPos.add(createDate)[ FD ]
Line_5 $$ session = openSession()-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_18 $$ qPos.add(groupId)[ FD ]
Line_5 $$ session = openSession()-->Line_34 $$ closeSession(session)[ FD ]
Line_26 $$ if (count != null) -->Line_27 $$ return count.intValue()[ CD ]
Line_23 $$ Iterator<Long> itr = q.iterate()-->Line_24 $$ if (itr.hasNext()) [ FD ]
Line_11 $$ sql = StringUtil.replace(sql, "[$CREATE_DATE_COMPARATOR$]", createDateComparator)-->Line_13 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, WikiPage.class.getName(), "WikiPage.resourcePrimKey", groupId)[ FD ]
Line_2 $$ protected int doCountByCreateDate(long groupId, long nodeId, Timestamp createDate, boolean before, boolean inlineSQLHelper) -->Line_18 $$ qPos.add(groupId)[ FD ]
Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_8 $$ if (before) -->Line_9 $$ createDateComparator = StringPool.LESS_THAN[ CD ]
Line_24 $$ if (itr.hasNext()) -->Line_25 $$ Long count = itr.next()[ CD ]
Line_9 $$ createDateComparator = StringPool.LESS_THAN-->Line_11 $$ sql = StringUtil.replace(sql, "[$CREATE_DATE_COMPARATOR$]", createDateComparator)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_CREATE_DATE)-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_3 $$ Session session = null-->Line_34 $$ closeSession(session)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_BY_CREATE_DATE)-->Line_11 $$ sql = StringUtil.replace(sql, "[$CREATE_DATE_COMPARATOR$]", createDateComparator)[ FD ]
Line_17 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_22 $$ qPos.add(WorkflowConstants.STATUS_APPROVED)[ FD ]
Line_3 $$ Session session = null-->Line_5 $$ session = openSession()[ FD ]
Line_11 $$ sql = StringUtil.replace(sql, "[$CREATE_DATE_COMPARATOR$]", createDateComparator)-->Line_15 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByCreateDate(long groupId, long nodeId, Timestamp createDate, boolean before, boolean inlineSQLHelper) -->Line_19 $$ qPos.add(nodeId)[ FD ]
