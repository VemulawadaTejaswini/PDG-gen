Line_20 $$ CharSequence targetLine = myContext.getTargetString()-->Line_23 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), targetLine)) [ FD ]
Line_9 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), contextLine)) -->Line_12 $$ contextLine = iterator.next()[ CD ]
Line_23 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), targetLine)) -->Line_24 $$ return pair.getFirst()[ CD ]
Line_21 $$ while (myChangedLinesIterator.hasNext()) -->Line_23 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), targetLine)) [ CD ]
Line_5 $$ if (iterator.hasNext()) -->Line_6 $$ CharSequence contextLine = iterator.next()[ CD ]
Line_2 $$ public int contextMatchCheck() -->Line_21 $$ while (myChangedLinesIterator.hasNext()) [ CD ]
Line_7 $$ while (myChangedLinesIterator.hasNext()) -->Line_8 $$ Pair<Integer, ? extends CharSequence> pair = myChangedLinesIterator.next()[ CD ]
Line_18 $$ if (!myChangedLinesIterator.hasNext())-->Line_19 $$ return -1[ CD ]
Line_6 $$ CharSequence contextLine = iterator.next()-->Line_12 $$ contextLine = iterator.next()[ FD ]
Line_16 $$ if (iterator.hasNext())-->Line_17 $$ return -1[ CD ]
Line_2 $$ public int contextMatchCheck() -->Line_5 $$ if (iterator.hasNext()) [ CD ]
Line_2 $$ public int contextMatchCheck() -->Line_18 $$ if (!myChangedLinesIterator.hasNext())[ CD ]
Line_6 $$ CharSequence contextLine = iterator.next()-->Line_9 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), contextLine)) [ FD ]
Line_2 $$ public int contextMatchCheck() -->Line_27 $$ return -1[ CD ]
Line_8 $$ Pair<Integer, ? extends CharSequence> pair = myChangedLinesIterator.next()-->Line_23 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), targetLine)) [ FD ]
Line_9 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), contextLine)) -->Line_10 $$ if (!iterator.hasNext())[ CD ]
Line_8 $$ Pair<Integer, ? extends CharSequence> pair = myChangedLinesIterator.next()-->Line_9 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), contextLine)) [ FD ]
Line_2 $$ public int contextMatchCheck() -->Line_20 $$ CharSequence targetLine = myContext.getTargetString()[ CD ]
Line_21 $$ while (myChangedLinesIterator.hasNext()) -->Line_22 $$ Pair<Integer, ? extends CharSequence> pair = myChangedLinesIterator.next()[ CD ]
Line_8 $$ Pair<Integer, ? extends CharSequence> pair = myChangedLinesIterator.next()-->Line_24 $$ return pair.getFirst()[ FD ]
Line_12 $$ contextLine = iterator.next()-->Line_9 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), contextLine)) [ FD ]
Line_5 $$ if (iterator.hasNext()) -->Line_7 $$ while (myChangedLinesIterator.hasNext()) [ CD ]
Line_7 $$ while (myChangedLinesIterator.hasNext()) -->Line_9 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), contextLine)) [ CD ]
Line_2 $$ public int contextMatchCheck() -->Line_16 $$ if (iterator.hasNext())[ CD ]
Line_22 $$ Pair<Integer, ? extends CharSequence> pair = myChangedLinesIterator.next()-->Line_24 $$ return pair.getFirst()[ FD ]
Line_22 $$ Pair<Integer, ? extends CharSequence> pair = myChangedLinesIterator.next()-->Line_23 $$ if (StringUtil.equalsTrimWhitespaces(pair.getSecond(), targetLine)) [ FD ]
