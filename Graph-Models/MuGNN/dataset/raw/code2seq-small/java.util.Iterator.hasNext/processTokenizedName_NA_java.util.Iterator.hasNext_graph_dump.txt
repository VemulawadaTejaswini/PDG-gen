Line_4 $$ for (Iterator<String> i = tokenizer.iterator(); i.hasNext(); ) -->Line_9 $$ Matcher matcher = ourAlternativePattern.matcher(nextToken)[ CD ]
Line_10 $$ if (matcher.matches()) -->Line_11 $$ StringTokenizer alternatives = new StringTokenizer(matcher.group(1), "|")[ CD ]
Line_4 $$ for (Iterator<String> i = tokenizer.iterator(); i.hasNext(); ) -->Line_5 $$ String nextToken = i.next()[ FD ]
Line_3 $$ WordTokenizer tokenizer = new WordTokenizer(name)-->Line_4 $$ for (Iterator<String> i = tokenizer.iterator(); i.hasNext(); ) [ FD ]
Line_2 $$ public void processTokenizedName(String name, boolean skipComments, GlobalCompilingVisitor.OccurenceKind kind) -->Line_4 $$ for (Iterator<String> i = tokenizer.iterator(); i.hasNext(); ) [ CD ]
Line_10 $$ if (matcher.matches()) -->Line_16 $$ addFilesToSearchForGivenWord(nextToken, true, kind, getContext())[ CD ]
Line_2 $$ public void processTokenizedName(String name, boolean skipComments, GlobalCompilingVisitor.OccurenceKind kind) -->Line_6 $$ if (skipComments && (nextToken.equals("/*") || nextToken.equals("/**") || nextToken.equals("*/") || nextToken.equals("*") || nextToken.equals("//"))) [ FD ]
Line_5 $$ String nextToken = i.next()-->Line_6 $$ if (skipComments && (nextToken.equals("/*") || nextToken.equals("/**") || nextToken.equals("*/") || nextToken.equals("*") || nextToken.equals("//"))) [ FD ]
Line_5 $$ String nextToken = i.next()-->Line_16 $$ addFilesToSearchForGivenWord(nextToken, true, kind, getContext())[ FD ]
Line_2 $$ public void processTokenizedName(String name, boolean skipComments, GlobalCompilingVisitor.OccurenceKind kind) -->Line_3 $$ WordTokenizer tokenizer = new WordTokenizer(name)[ CD ]
Line_4 $$ for (Iterator<String> i = tokenizer.iterator(); i.hasNext(); ) -->Line_6 $$ if (skipComments && (nextToken.equals("/*") || nextToken.equals("/**") || nextToken.equals("*/") || nextToken.equals("*") || nextToken.equals("//"))) [ CD ]
Line_11 $$ StringTokenizer alternatives = new StringTokenizer(matcher.group(1), "|")-->Line_12 $$ while (alternatives.hasMoreTokens()) [ FD ]
Line_5 $$ String nextToken = i.next()-->Line_9 $$ Matcher matcher = ourAlternativePattern.matcher(nextToken)[ FD ]
Line_4 $$ for (Iterator<String> i = tokenizer.iterator(); i.hasNext(); ) -->Line_5 $$ String nextToken = i.next()[ CD ]
Line_2 $$ public void processTokenizedName(String name, boolean skipComments, GlobalCompilingVisitor.OccurenceKind kind) -->Line_16 $$ addFilesToSearchForGivenWord(nextToken, true, kind, getContext())[ FD ]
Line_9 $$ Matcher matcher = ourAlternativePattern.matcher(nextToken)-->Line_11 $$ StringTokenizer alternatives = new StringTokenizer(matcher.group(1), "|")[ FD ]
Line_9 $$ Matcher matcher = ourAlternativePattern.matcher(nextToken)-->Line_10 $$ if (matcher.matches()) [ FD ]
Line_10 $$ if (matcher.matches()) -->Line_12 $$ while (alternatives.hasMoreTokens()) [ CD ]
Line_12 $$ while (alternatives.hasMoreTokens()) -->Line_13 $$ addFilesToSearchForGivenWord(alternatives.nextToken(), !alternatives.hasMoreTokens(), kind, getContext())[ CD ]
Line_2 $$ public void processTokenizedName(String name, boolean skipComments, GlobalCompilingVisitor.OccurenceKind kind) -->Line_13 $$ addFilesToSearchForGivenWord(alternatives.nextToken(), !alternatives.hasMoreTokens(), kind, getContext())[ FD ]
Line_11 $$ StringTokenizer alternatives = new StringTokenizer(matcher.group(1), "|")-->Line_13 $$ addFilesToSearchForGivenWord(alternatives.nextToken(), !alternatives.hasMoreTokens(), kind, getContext())[ FD ]
Line_4 $$ for (Iterator<String> i = tokenizer.iterator(); i.hasNext(); ) -->Line_10 $$ if (matcher.matches()) [ CD ]
