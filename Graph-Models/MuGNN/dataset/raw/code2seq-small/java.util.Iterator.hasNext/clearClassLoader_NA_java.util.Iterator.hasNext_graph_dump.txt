Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) -->Line_18 $$ it.remove()[ FD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_4 $$ ClassLoader registeredLoader = it.next()[ CD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_16 $$ Class<?> beanClass = it.next()[ FD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) [ FD ]
Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) -->Line_11 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) [ CD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_10 $$ Class<?> beanClass = it.next()[ FD ]
Line_5 $$ if (isUnderneathClassLoader(registeredLoader, classLoader)) -->Line_6 $$ it.remove()[ CD ]
Line_2 $$ public static void clearClassLoader(ClassLoader classLoader) -->Line_5 $$ if (isUnderneathClassLoader(registeredLoader, classLoader)) [ FD ]
Line_11 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) -->Line_12 $$ it.remove()[ CD ]
Line_17 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) -->Line_18 $$ it.remove()[ CD ]
Line_15 $$ for (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext(); ) -->Line_16 $$ Class<?> beanClass = it.next()[ CD ]
Line_2 $$ public static void clearClassLoader(ClassLoader classLoader) -->Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ public static void clearClassLoader(ClassLoader classLoader) -->Line_17 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) [ FD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_5 $$ if (isUnderneathClassLoader(registeredLoader, classLoader)) [ CD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_6 $$ it.remove()[ FD ]
Line_4 $$ ClassLoader registeredLoader = it.next()-->Line_5 $$ if (isUnderneathClassLoader(registeredLoader, classLoader)) [ FD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_12 $$ it.remove()[ FD ]
Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) -->Line_10 $$ Class<?> beanClass = it.next()[ CD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_18 $$ it.remove()[ FD ]
Line_15 $$ for (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext(); ) -->Line_17 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) [ CD ]
Line_15 $$ for (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext(); ) -->Line_18 $$ it.remove()[ FD ]
Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) -->Line_16 $$ Class<?> beanClass = it.next()[ FD ]
Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) -->Line_12 $$ it.remove()[ FD ]
Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) -->Line_15 $$ for (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext(); ) [ FD ]
Line_10 $$ Class<?> beanClass = it.next()-->Line_17 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) [ FD ]
Line_2 $$ public static void clearClassLoader(ClassLoader classLoader) -->Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ public static void clearClassLoader(ClassLoader classLoader) -->Line_15 $$ for (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ public static void clearClassLoader(ClassLoader classLoader) -->Line_11 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) [ FD ]
Line_16 $$ Class<?> beanClass = it.next()-->Line_17 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) [ FD ]
Line_15 $$ for (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext(); ) -->Line_16 $$ Class<?> beanClass = it.next()[ FD ]
Line_9 $$ for (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext(); ) -->Line_10 $$ Class<?> beanClass = it.next()[ FD ]
Line_10 $$ Class<?> beanClass = it.next()-->Line_11 $$ if (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) [ FD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_15 $$ for (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext(); ) [ FD ]
Line_3 $$ for (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext(); ) -->Line_4 $$ ClassLoader registeredLoader = it.next()[ FD ]
