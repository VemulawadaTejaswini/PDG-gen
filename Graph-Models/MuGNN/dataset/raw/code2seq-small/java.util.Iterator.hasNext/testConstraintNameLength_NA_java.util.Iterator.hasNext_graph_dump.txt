Line_21 $$ UniqueKey uk = (UniqueKey) ukItr.next()-->Line_22 $$ assertTrue(uk.getName().length() <= MAX_NAME_LENGTH)[ FD ]
Line_2 $$ public void testConstraintNameLength() -->Line_31 $$ assertEquals("Could not find the necessary columns.", 3, foundCount)[ CD ]
Line_11 $$ if (column.getName().equals("explicit_native")) -->Line_13 $$ assertEquals(fk.getName(), EXPLICIT_FK_NAME_NATIVE)[ CD ]
Line_3 $$ int foundCount = 0-->Line_15 $$ foundCount++[ FD ]
Line_6 $$ Iterator fkItr = table.getForeignKeyIterator()-->Line_7 $$ while (fkItr.hasNext()) [ FD ]
Line_20 $$ while (ukItr.hasNext()) -->Line_23 $$ Column column = uk.getColumn(0)[ CD ]
Line_8 $$ ForeignKey fk = (ForeignKey) fkItr.next()-->Line_13 $$ assertEquals(fk.getName(), EXPLICIT_FK_NAME_NATIVE)[ FD ]
Line_8 $$ ForeignKey fk = (ForeignKey) fkItr.next()-->Line_10 $$ Column column = fk.getColumn(0)[ FD ]
Line_7 $$ while (fkItr.hasNext()) -->Line_10 $$ Column column = fk.getColumn(0)[ CD ]
Line_6 $$ Iterator fkItr = table.getForeignKeyIterator()-->Line_8 $$ ForeignKey fk = (ForeignKey) fkItr.next()[ FD ]
Line_2 $$ public void testConstraintNameLength() -->Line_3 $$ int foundCount = 0[ CD ]
Line_7 $$ while (fkItr.hasNext()) -->Line_8 $$ ForeignKey fk = (ForeignKey) fkItr.next()[ CD ]
Line_20 $$ while (ukItr.hasNext()) -->Line_22 $$ assertTrue(uk.getName().length() <= MAX_NAME_LENGTH)[ CD ]
Line_7 $$ while (fkItr.hasNext()) -->Line_9 $$ assertTrue(fk.getName().length() <= MAX_NAME_LENGTH)[ CD ]
Line_14 $$ if (column.getName().equals("explicit_jpa")) -->Line_16 $$ assertEquals(fk.getName(), EXPLICIT_FK_NAME_JPA)[ CD ]
Line_5 $$ for (org.hibernate.mapping.Table table : namespace.getTables()) -->Line_19 $$ Iterator ukItr = table.getUniqueKeyIterator()[ FD ]
Line_21 $$ UniqueKey uk = (UniqueKey) ukItr.next()-->Line_26 $$ assertEquals(uk.getName(), EXPLICIT_UK_NAME)[ FD ]
Line_5 $$ for (org.hibernate.mapping.Table table : namespace.getTables()) -->Line_6 $$ Iterator fkItr = table.getForeignKeyIterator()[ FD ]
Line_19 $$ Iterator ukItr = table.getUniqueKeyIterator()-->Line_20 $$ while (ukItr.hasNext()) [ FD ]
Line_11 $$ if (column.getName().equals("explicit_native")) -->Line_12 $$ foundCount++[ CD ]
Line_21 $$ UniqueKey uk = (UniqueKey) ukItr.next()-->Line_23 $$ Column column = uk.getColumn(0)[ FD ]
Line_10 $$ Column column = fk.getColumn(0)-->Line_14 $$ if (column.getName().equals("explicit_jpa")) [ FD ]
Line_23 $$ Column column = uk.getColumn(0)-->Line_24 $$ if (column.getName().equals("explicit")) [ FD ]
Line_19 $$ Iterator ukItr = table.getUniqueKeyIterator()-->Line_21 $$ UniqueKey uk = (UniqueKey) ukItr.next()[ FD ]
Line_3 $$ int foundCount = 0-->Line_31 $$ assertEquals("Could not find the necessary columns.", 3, foundCount)[ FD ]
Line_10 $$ Column column = fk.getColumn(0)-->Line_24 $$ if (column.getName().equals("explicit")) [ FD ]
Line_10 $$ Column column = fk.getColumn(0)-->Line_11 $$ if (column.getName().equals("explicit_native")) [ FD ]
Line_4 $$ for (Namespace namespace : metadata().getDatabase().getNamespaces()) -->Line_5 $$ for (org.hibernate.mapping.Table table : namespace.getTables()) [ FD ]
Line_24 $$ if (column.getName().equals("explicit")) -->Line_26 $$ assertEquals(uk.getName(), EXPLICIT_UK_NAME)[ CD ]
Line_3 $$ int foundCount = 0-->Line_12 $$ foundCount++[ FD ]
Line_8 $$ ForeignKey fk = (ForeignKey) fkItr.next()-->Line_9 $$ assertTrue(fk.getName().length() <= MAX_NAME_LENGTH)[ FD ]
Line_7 $$ while (fkItr.hasNext()) -->Line_11 $$ if (column.getName().equals("explicit_native")) [ CD ]
Line_3 $$ int foundCount = 0-->Line_25 $$ foundCount++[ FD ]
Line_20 $$ while (ukItr.hasNext()) -->Line_21 $$ UniqueKey uk = (UniqueKey) ukItr.next()[ CD ]
Line_20 $$ while (ukItr.hasNext()) -->Line_24 $$ if (column.getName().equals("explicit")) [ CD ]
Line_14 $$ if (column.getName().equals("explicit_jpa")) -->Line_15 $$ foundCount++[ CD ]
Line_24 $$ if (column.getName().equals("explicit")) -->Line_25 $$ foundCount++[ CD ]
Line_8 $$ ForeignKey fk = (ForeignKey) fkItr.next()-->Line_16 $$ assertEquals(fk.getName(), EXPLICIT_FK_NAME_JPA)[ FD ]
Line_11 $$ if (column.getName().equals("explicit_native")) -->Line_14 $$ if (column.getName().equals("explicit_jpa")) [ CD ]
