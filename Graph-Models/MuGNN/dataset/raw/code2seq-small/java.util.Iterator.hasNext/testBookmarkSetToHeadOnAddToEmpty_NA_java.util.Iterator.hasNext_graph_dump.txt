Line_4 $$ Iterator<Integer> it = set.getBookmark()-->Line_11 $$ assertEquals(it.next(), list.get(1))[ FD ]
Line_4 $$ Iterator<Integer> it = set.getBookmark()-->Line_12 $$ assertFalse(it.hasNext())[ FD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_6 $$ set.add(list.get(0))[ CD ]
Line_8 $$ it = set.getBookmark()-->Line_9 $$ assertTrue(it.hasNext())[ FD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_5 $$ assertFalse(it.hasNext())[ CD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_9 $$ assertTrue(it.hasNext())[ CD ]
Line_4 $$ Iterator<Integer> it = set.getBookmark()-->Line_10 $$ assertEquals(it.next(), list.get(0))[ FD ]
Line_4 $$ Iterator<Integer> it = set.getBookmark()-->Line_5 $$ assertFalse(it.hasNext())[ FD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_7 $$ set.add(list.get(1))[ CD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_11 $$ assertEquals(it.next(), list.get(1))[ CD ]
Line_8 $$ it = set.getBookmark()-->Line_10 $$ assertEquals(it.next(), list.get(0))[ FD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_4 $$ Iterator<Integer> it = set.getBookmark()[ CD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_8 $$ it = set.getBookmark()[ CD ]
Line_4 $$ Iterator<Integer> it = set.getBookmark()-->Line_9 $$ assertTrue(it.hasNext())[ FD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_10 $$ assertEquals(it.next(), list.get(0))[ CD ]
Line_8 $$ it = set.getBookmark()-->Line_11 $$ assertEquals(it.next(), list.get(1))[ FD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_3 $$ LOG.info("Test bookmark is set after adding to previously empty set.")[ CD ]
Line_4 $$ Iterator<Integer> it = set.getBookmark()-->Line_8 $$ it = set.getBookmark()[ FD ]
Line_2 $$ public void testBookmarkSetToHeadOnAddToEmpty() -->Line_12 $$ assertFalse(it.hasNext())[ CD ]
Line_8 $$ it = set.getBookmark()-->Line_12 $$ assertFalse(it.hasNext())[ FD ]
