Line_17 $$ Iterator<Object> keys = executed.keySet().iterator()-->Line_19 $$ Object each = keys.next()[ FD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_27 $$ return result[ CD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_5 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()[ CD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_17 $$ Iterator<Object> keys = executed.keySet().iterator()[ CD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_7 $$ for (Iterator<AbstractTreeNode> iterator = children.iterator(); iterator.hasNext(); ) [ FD ]
Line_8 $$ ProjectViewNode treeNode = (ProjectViewNode) iterator.next()-->Line_9 $$ Object o = treeNode.getValue()[ FD ]
Line_10 $$ if (o instanceof PsiFile) -->Line_14 $$ executed.put(o, treeNode)[ CD ]
Line_17 $$ Iterator<Object> keys = executed.keySet().iterator()-->Line_18 $$ while (keys.hasNext()) [ FD ]
Line_5 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_22 $$ result.add(new JoinedNode(objects, new Joined(findPsiFileIn(objects))))[ FD ]
Line_21 $$ if (objects.size() > 1) -->Line_22 $$ result.add(new JoinedNode(objects, new Joined(findPsiFileIn(objects))))[ CD ]
Line_23 $$ if (objects.size() == 1) -->Line_24 $$ result.add(objects.iterator().next())[ CD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_6 $$ MultiValuesMap<Object, AbstractTreeNode> executed = new MultiValuesMap<Object, AbstractTreeNode>()[ CD ]
Line_6 $$ MultiValuesMap<Object, AbstractTreeNode> executed = new MultiValuesMap<Object, AbstractTreeNode>()-->Line_20 $$ Collection<AbstractTreeNode> objects = executed.get(each)[ FD ]
Line_19 $$ Object each = keys.next()-->Line_20 $$ Collection<AbstractTreeNode> objects = executed.get(each)[ FD ]
Line_10 $$ if (o instanceof PsiFile) -->Line_11 $$ String name = ((PsiFile) o).getVirtualFile().getNameWithoutExtension()[ CD ]
Line_6 $$ MultiValuesMap<Object, AbstractTreeNode> executed = new MultiValuesMap<Object, AbstractTreeNode>()-->Line_14 $$ executed.put(o, treeNode)[ FD ]
Line_10 $$ if (o instanceof PsiFile) -->Line_12 $$ executed.put(name, treeNode)[ CD ]
Line_7 $$ for (Iterator<AbstractTreeNode> iterator = children.iterator(); iterator.hasNext(); ) -->Line_8 $$ ProjectViewNode treeNode = (ProjectViewNode) iterator.next()[ CD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_3 $$ if (parent instanceof JoinedNode)[ FD ]
Line_20 $$ Collection<AbstractTreeNode> objects = executed.get(each)-->Line_23 $$ if (objects.size() == 1) [ FD ]
Line_6 $$ MultiValuesMap<Object, AbstractTreeNode> executed = new MultiValuesMap<Object, AbstractTreeNode>()-->Line_12 $$ executed.put(name, treeNode)[ FD ]
Line_9 $$ Object o = treeNode.getValue()-->Line_10 $$ if (o instanceof PsiFile) [ FD ]
Line_5 $$ ArrayList<AbstractTreeNode> result = new ArrayList<AbstractTreeNode>()-->Line_24 $$ result.add(objects.iterator().next())[ FD ]
Line_20 $$ Collection<AbstractTreeNode> objects = executed.get(each)-->Line_24 $$ result.add(objects.iterator().next())[ FD ]
Line_11 $$ String name = ((PsiFile) o).getVirtualFile().getNameWithoutExtension()-->Line_12 $$ executed.put(name, treeNode)[ FD ]
Line_8 $$ ProjectViewNode treeNode = (ProjectViewNode) iterator.next()-->Line_12 $$ executed.put(name, treeNode)[ FD ]
Line_18 $$ while (keys.hasNext()) -->Line_19 $$ Object each = keys.next()[ CD ]
Line_9 $$ Object o = treeNode.getValue()-->Line_14 $$ executed.put(o, treeNode)[ FD ]
Line_3 $$ if (parent instanceof JoinedNode)-->Line_4 $$ return children[ CD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_3 $$ if (parent instanceof JoinedNode)[ CD ]
Line_20 $$ Collection<AbstractTreeNode> objects = executed.get(each)-->Line_21 $$ if (objects.size() > 1) [ FD ]
Line_18 $$ while (keys.hasNext()) -->Line_20 $$ Collection<AbstractTreeNode> objects = executed.get(each)[ CD ]
Line_7 $$ for (Iterator<AbstractTreeNode> iterator = children.iterator(); iterator.hasNext(); ) -->Line_10 $$ if (o instanceof PsiFile) [ CD ]
Line_6 $$ MultiValuesMap<Object, AbstractTreeNode> executed = new MultiValuesMap<Object, AbstractTreeNode>()-->Line_17 $$ Iterator<Object> keys = executed.keySet().iterator()[ FD ]
Line_18 $$ while (keys.hasNext()) -->Line_21 $$ if (objects.size() > 1) [ CD ]
Line_7 $$ for (Iterator<AbstractTreeNode> iterator = children.iterator(); iterator.hasNext(); ) -->Line_8 $$ ProjectViewNode treeNode = (ProjectViewNode) iterator.next()[ FD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_7 $$ for (Iterator<AbstractTreeNode> iterator = children.iterator(); iterator.hasNext(); ) [ CD ]
Line_8 $$ ProjectViewNode treeNode = (ProjectViewNode) iterator.next()-->Line_14 $$ executed.put(o, treeNode)[ FD ]
Line_20 $$ Collection<AbstractTreeNode> objects = executed.get(each)-->Line_22 $$ result.add(new JoinedNode(objects, new Joined(findPsiFileIn(objects))))[ FD ]
Line_2 $$ public Collection<AbstractTreeNode> modify(@NotNull AbstractTreeNode parent, @NotNull Collection<AbstractTreeNode> children, ViewSettings settings) -->Line_18 $$ while (keys.hasNext()) [ CD ]
Line_21 $$ if (objects.size() > 1) -->Line_23 $$ if (objects.size() == 1) [ CD ]
Line_7 $$ for (Iterator<AbstractTreeNode> iterator = children.iterator(); iterator.hasNext(); ) -->Line_9 $$ Object o = treeNode.getValue()[ CD ]
