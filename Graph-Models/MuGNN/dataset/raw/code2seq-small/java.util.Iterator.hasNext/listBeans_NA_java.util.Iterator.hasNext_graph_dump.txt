Line_9 $$ while (it.hasNext()) -->Line_63 $$ if ((attribute != null) && (attributeinfo == null)) [ CD ]
Line_12 $$ String code = ""-->Line_16 $$ code = minfo.getClassName()[ FD ]
Line_10 $$ ObjectName oname = it.next()-->Line_61 $$ jg.writeStringField("name", oname.toString())[ FD ]
Line_15 $$ minfo = mBeanServer.getMBeanInfo(oname)-->Line_75 $$ MBeanAttributeInfo[] attrs = minfo.getAttributes()[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_10 $$ ObjectName oname = it.next()[ CD ]
Line_9 $$ while (it.hasNext()) -->Line_60 $$ jg.writeStartObject()[ CD ]
Line_23 $$ if (attribute != null) -->Line_24 $$ prs = attribute[ CD ]
Line_63 $$ if ((attribute != null) && (attributeinfo == null)) -->Line_65 $$ jg.writeStringField("message", "No attribute with name " + attribute + " was found.")[ CD ]
Line_5 $$ Set<ObjectName> names = null-->Line_8 $$ Iterator<ObjectName> it = names.iterator()[ FD ]
Line_13 $$ Object attributeinfo = null-->Line_25 $$ attributeinfo = mBeanServer.getAttribute(oname, prs)[ FD ]
Line_63 $$ if ((attribute != null) && (attributeinfo == null)) -->Line_66 $$ jg.writeEndObject()[ CD ]
Line_11 $$ MBeanInfo minfo-->Line_75 $$ MBeanAttributeInfo[] attrs = minfo.getAttributes()[ FD ]
Line_63 $$ if ((attribute != null) && (attributeinfo == null)) -->Line_70 $$ return[ CD ]
Line_10 $$ ObjectName oname = it.next()-->Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)[ FD ]
Line_20 $$ prs = "modelerType"-->Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)[ FD ]
Line_11 $$ MBeanInfo minfo-->Line_16 $$ code = minfo.getClassName()[ FD ]
Line_10 $$ ObjectName oname = it.next()-->Line_25 $$ attributeinfo = mBeanServer.getAttribute(oname, prs)[ FD ]
Line_20 $$ prs = "modelerType"-->Line_25 $$ attributeinfo = mBeanServer.getAttribute(oname, prs)[ FD ]
Line_16 $$ code = minfo.getClassName()-->Line_62 $$ jg.writeStringField("modelerType", code)[ FD ]
Line_17 $$ String prs = ""-->Line_25 $$ attributeinfo = mBeanServer.getAttribute(oname, prs)[ FD ]
Line_76 $$ for (int i = 0; i < attrs.length; i++) -->Line_77 $$ writeAttribute(jg, oname, attrs[i])[ CD ]
Line_10 $$ ObjectName oname = it.next()-->Line_77 $$ writeAttribute(jg, oname, attrs[i])[ FD ]
Line_15 $$ minfo = mBeanServer.getMBeanInfo(oname)-->Line_16 $$ code = minfo.getClassName()[ FD ]
Line_12 $$ String code = ""-->Line_62 $$ jg.writeStringField("modelerType", code)[ FD ]
Line_25 $$ attributeinfo = mBeanServer.getAttribute(oname, prs)-->Line_73 $$ writeAttribute(jg, attribute, attributeinfo)[ FD ]
Line_72 $$ if (attribute != null) -->Line_75 $$ MBeanAttributeInfo[] attrs = minfo.getAttributes()[ CD ]
Line_10 $$ ObjectName oname = it.next()-->Line_15 $$ minfo = mBeanServer.getMBeanInfo(oname)[ FD ]
Line_12 $$ String code = ""-->Line_19 $$ if ("org.apache.commons.modeler.BaseModelMBean".equals(code)) [ FD ]
Line_9 $$ while (it.hasNext()) -->Line_80 $$ jg.writeEndObject()[ CD ]
Line_12 $$ String code = ""-->Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)[ FD ]
Line_23 $$ if (attribute != null) -->Line_25 $$ attributeinfo = mBeanServer.getAttribute(oname, prs)[ CD ]
Line_63 $$ if ((attribute != null) && (attributeinfo == null)) -->Line_68 $$ jg.close()[ CD ]
Line_72 $$ if (attribute != null) -->Line_76 $$ for (int i = 0; i < attrs.length; i++) [ CD ]
Line_11 $$ MBeanInfo minfo-->Line_15 $$ minfo = mBeanServer.getMBeanInfo(oname)[ FD ]
Line_63 $$ if ((attribute != null) && (attributeinfo == null)) -->Line_64 $$ jg.writeStringField("result", "ERROR")[ CD ]
Line_72 $$ if (attribute != null) -->Line_73 $$ writeAttribute(jg, attribute, attributeinfo)[ CD ]
Line_9 $$ while (it.hasNext()) -->Line_61 $$ jg.writeStringField("name", oname.toString())[ CD ]
Line_8 $$ Iterator<ObjectName> it = names.iterator()-->Line_10 $$ ObjectName oname = it.next()[ FD ]
Line_16 $$ code = minfo.getClassName()-->Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_12 $$ String code = ""[ CD ]
Line_6 $$ names = mBeanServer.queryNames(qry, null)-->Line_8 $$ Iterator<ObjectName> it = names.iterator()[ FD ]
Line_20 $$ prs = "modelerType"-->Line_24 $$ prs = attribute[ FD ]
Line_63 $$ if ((attribute != null) && (attributeinfo == null)) -->Line_69 $$ response.setStatus(HttpServletResponse.SC_NOT_FOUND)[ CD ]
Line_9 $$ while (it.hasNext()) -->Line_72 $$ if (attribute != null) [ CD ]
Line_8 $$ Iterator<ObjectName> it = names.iterator()-->Line_9 $$ while (it.hasNext()) [ FD ]
Line_9 $$ while (it.hasNext()) -->Line_13 $$ Object attributeinfo = null[ CD ]
Line_17 $$ String prs = ""-->Line_24 $$ prs = attribute[ FD ]
Line_24 $$ prs = attribute-->Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)[ FD ]
Line_16 $$ code = minfo.getClassName()-->Line_19 $$ if ("org.apache.commons.modeler.BaseModelMBean".equals(code)) [ FD ]
Line_13 $$ Object attributeinfo = null-->Line_73 $$ writeAttribute(jg, attribute, attributeinfo)[ FD ]
Line_17 $$ String prs = ""-->Line_20 $$ prs = "modelerType"[ FD ]
Line_63 $$ if ((attribute != null) && (attributeinfo == null)) -->Line_67 $$ jg.writeEndArray()[ CD ]
Line_24 $$ prs = attribute-->Line_25 $$ attributeinfo = mBeanServer.getAttribute(oname, prs)[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_11 $$ MBeanInfo minfo[ CD ]
Line_5 $$ Set<ObjectName> names = null-->Line_6 $$ names = mBeanServer.queryNames(qry, null)[ FD ]
Line_17 $$ String prs = ""-->Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)[ FD ]
Line_9 $$ while (it.hasNext()) -->Line_62 $$ jg.writeStringField("modelerType", code)[ CD ]
Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)-->Line_62 $$ jg.writeStringField("modelerType", code)[ FD ]
Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)-->Line_19 $$ if ("org.apache.commons.modeler.BaseModelMBean".equals(code)) [ FD ]
Line_19 $$ if ("org.apache.commons.modeler.BaseModelMBean".equals(code)) -->Line_21 $$ code = (String) mBeanServer.getAttribute(oname, prs)[ CD ]
Line_19 $$ if ("org.apache.commons.modeler.BaseModelMBean".equals(code)) -->Line_20 $$ prs = "modelerType"[ CD ]
