Line_5 $$ Iterator<Object> itr = valueMapper.iterator()-->Line_7 $$ Object oldValue = itr.next()[ FD ]
Line_6 $$ while (itr.hasNext()) -->Line_9 $$ unsyncBufferedWriter.write(oldValue + StringPool.EQUAL + newValue)[ CD ]
Line_4 $$ try (UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(new FileWriter(tmpDir + "/" + fileName + ".txt"))) -->Line_9 $$ unsyncBufferedWriter.write(oldValue + StringPool.EQUAL + newValue)[ FD ]
Line_10 $$ if (itr.hasNext()) -->Line_11 $$ unsyncBufferedWriter.write(StringPool.NEW_LINE)[ CD ]
Line_4 $$ try (UnsyncBufferedWriter unsyncBufferedWriter = new UnsyncBufferedWriter(new FileWriter(tmpDir + "/" + fileName + ".txt"))) -->Line_11 $$ unsyncBufferedWriter.write(StringPool.NEW_LINE)[ FD ]
Line_2 $$ public static void persist(ValueMapper valueMapper, String tmpDir, String fileName) throws Exception -->Line_3 $$ FileUtil.mkdirs(tmpDir)[ CD ]
Line_5 $$ Iterator<Object> itr = valueMapper.iterator()-->Line_10 $$ if (itr.hasNext()) [ FD ]
Line_2 $$ public static void persist(ValueMapper valueMapper, String tmpDir, String fileName) throws Exception -->Line_5 $$ Iterator<Object> itr = valueMapper.iterator()[ FD ]
Line_6 $$ while (itr.hasNext()) -->Line_8 $$ Object newValue = valueMapper.getNewValue(oldValue)[ CD ]
Line_5 $$ Iterator<Object> itr = valueMapper.iterator()-->Line_6 $$ while (itr.hasNext()) [ FD ]
Line_2 $$ public static void persist(ValueMapper valueMapper, String tmpDir, String fileName) throws Exception -->Line_8 $$ Object newValue = valueMapper.getNewValue(oldValue)[ FD ]
Line_6 $$ while (itr.hasNext()) -->Line_10 $$ if (itr.hasNext()) [ CD ]
Line_7 $$ Object oldValue = itr.next()-->Line_8 $$ Object newValue = valueMapper.getNewValue(oldValue)[ FD ]
Line_6 $$ while (itr.hasNext()) -->Line_7 $$ Object oldValue = itr.next()[ CD ]
Line_2 $$ public static void persist(ValueMapper valueMapper, String tmpDir, String fileName) throws Exception -->Line_3 $$ FileUtil.mkdirs(tmpDir)[ FD ]
