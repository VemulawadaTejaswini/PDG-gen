Line_10 $$ sql = StringUtil.replace(sql, "MBCategory.parentCategoryId = ?", "MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds, " OR MBCategory.parentCategoryId = "))-->Line_14 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBCategory.class.getName(), "MBCategory.categoryId", groupId)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_C_BY_S_G_U_P)-->Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_10 $$ sql = StringUtil.replace(sql, "MBCategory.parentCategoryId = ?", "MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds, " OR MBCategory.parentCategoryId = "))-->Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_3 $$ Session session = null[ CD ]
Line_12 $$ sql = updateSQL(sql, queryDefinition)-->Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_28 $$ Long l = itr.next()-->Line_30 $$ count = l.intValue()[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_33 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_C_BY_S_G_U_P)-->Line_10 $$ sql = StringUtil.replace(sql, "MBCategory.parentCategoryId = ?", "MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds, " OR MBCategory.parentCategoryId = "))[ FD ]
Line_29 $$ if (l != null) -->Line_30 $$ count = l.intValue()[ CD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_C_BY_S_G_U_P)-->Line_12 $$ sql = updateSQL(sql, queryDefinition)[ FD ]
Line_34 $$ Subscription subscription = SubscriptionLocalServiceUtil.fetchSubscription(group.getCompanyId(), userId, MBCategory.class.getName(), groupId)-->Line_35 $$ if (subscription != null) [ FD ]
Line_7 $$ if (ArrayUtil.isEmpty(parentCategoryIds)) -->Line_8 $$ sql = StringUtil.replace(sql, "(MBCategory.parentCategoryId = ?) AND", StringPool.BLANK)[ CD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_22 $$ if (queryDefinition.getStatus() != WorkflowConstants.STATUS_ANY) [ FD ]
Line_25 $$ int count = 0-->Line_30 $$ count = l.intValue()[ FD ]
Line_8 $$ sql = StringUtil.replace(sql, "(MBCategory.parentCategoryId = ?) AND", StringPool.BLANK)-->Line_14 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBCategory.class.getName(), "MBCategory.categoryId", groupId)[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_14 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBCategory.class.getName(), "MBCategory.categoryId", groupId)[ FD ]
Line_18 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_19 $$ qPos.add(PortalUtil.getClassNameId(MBCategory.class.getName()))[ FD ]
Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_26 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_25 $$ int count = 0-->Line_36 $$ count++[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_20 $$ qPos.add(groupId)[ FD ]
Line_13 $$ if (inlineSQLHelper) -->Line_14 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBCategory.class.getName(), "MBCategory.categoryId", groupId)[ CD ]
Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_18 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_8 $$ sql = StringUtil.replace(sql, "(MBCategory.parentCategoryId = ?) AND", StringPool.BLANK)-->Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ sql = StringUtil.replace(sql, "(MBCategory.parentCategoryId = ?) AND", StringPool.BLANK)-->Line_12 $$ sql = updateSQL(sql, queryDefinition)[ FD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_C_BY_S_G_U_P)-->Line_14 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBCategory.class.getName(), "MBCategory.categoryId", groupId)[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_7 $$ if (ArrayUtil.isEmpty(parentCategoryIds)) [ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_21 $$ qPos.add(userId)[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_34 $$ Subscription subscription = SubscriptionLocalServiceUtil.fetchSubscription(group.getCompanyId(), userId, MBCategory.class.getName(), groupId)[ FD ]
Line_5 $$ session = openSession()-->Line_42 $$ closeSession(session)[ FD ]
Line_5 $$ session = openSession()-->Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_12 $$ sql = updateSQL(sql, queryDefinition)-->Line_14 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBCategory.class.getName(), "MBCategory.categoryId", groupId)[ FD ]
Line_14 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, MBCategory.class.getName(), "MBCategory.categoryId", groupId)-->Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_30 $$ count = l.intValue()-->Line_36 $$ count++[ FD ]
Line_35 $$ if (subscription != null) -->Line_36 $$ count++[ CD ]
Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_17 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_18 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_23 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_26 $$ Iterator<Long> itr = q.iterate()-->Line_28 $$ Long l = itr.next()[ FD ]
Line_3 $$ Session session = null-->Line_5 $$ session = openSession()[ FD ]
Line_3 $$ Session session = null-->Line_42 $$ closeSession(session)[ FD ]
Line_26 $$ Iterator<Long> itr = q.iterate()-->Line_27 $$ if (itr.hasNext()) [ FD ]
Line_7 $$ if (ArrayUtil.isEmpty(parentCategoryIds)) -->Line_10 $$ sql = StringUtil.replace(sql, "MBCategory.parentCategoryId = ?", "MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds, " OR MBCategory.parentCategoryId = "))[ CD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_23 $$ qPos.add(queryDefinition.getStatus())[ FD ]
Line_33 $$ Group group = GroupLocalServiceUtil.getGroup(groupId)-->Line_34 $$ Subscription subscription = SubscriptionLocalServiceUtil.fetchSubscription(group.getCompanyId(), userId, MBCategory.class.getName(), groupId)[ FD ]
Line_18 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_20 $$ qPos.add(groupId)[ FD ]
Line_8 $$ sql = StringUtil.replace(sql, "(MBCategory.parentCategoryId = ?) AND", StringPool.BLANK)-->Line_10 $$ sql = StringUtil.replace(sql, "MBCategory.parentCategoryId = ?", "MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds, " OR MBCategory.parentCategoryId = "))[ FD ]
Line_18 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_21 $$ qPos.add(userId)[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_12 $$ sql = updateSQL(sql, queryDefinition)[ FD ]
Line_27 $$ if (itr.hasNext()) -->Line_28 $$ Long l = itr.next()[ CD ]
Line_28 $$ Long l = itr.next()-->Line_29 $$ if (l != null) [ FD ]
Line_10 $$ sql = StringUtil.replace(sql, "MBCategory.parentCategoryId = ?", "MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds, " OR MBCategory.parentCategoryId = "))-->Line_12 $$ sql = updateSQL(sql, queryDefinition)[ FD ]
Line_2 $$ protected int doCountC_ByS_G_U_P(long groupId, long userId, long[] parentCategoryIds, QueryDefinition<MBCategory> queryDefinition, boolean inlineSQLHelper) -->Line_10 $$ sql = StringUtil.replace(sql, "MBCategory.parentCategoryId = ?", "MBCategory.parentCategoryId = " + StringUtil.merge(parentCategoryIds, " OR MBCategory.parentCategoryId = "))[ FD ]
Line_27 $$ if (itr.hasNext()) -->Line_29 $$ if (l != null) [ CD ]
Line_3 $$ Session session = null-->Line_16 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_22 $$ if (queryDefinition.getStatus() != WorkflowConstants.STATUS_ANY) -->Line_23 $$ qPos.add(queryDefinition.getStatus())[ CD ]
Line_6 $$ String sql = CustomSQLUtil.get(COUNT_C_BY_S_G_U_P)-->Line_8 $$ sql = StringUtil.replace(sql, "(MBCategory.parentCategoryId = ?) AND", StringPool.BLANK)[ FD ]
