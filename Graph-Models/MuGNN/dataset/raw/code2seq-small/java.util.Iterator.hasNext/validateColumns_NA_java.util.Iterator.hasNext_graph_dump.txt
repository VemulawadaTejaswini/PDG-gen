Line_4 $$ while (iter.hasNext()) -->Line_5 $$ Column col = (Column) iter.next()[ CD ]
Line_2 $$ public void validateColumns(Dialect dialect, Mapping mapping, TableMetadata tableInfo) -->Line_12 $$ throw new HibernateException("Wrong column type in " + Table.qualify(tableInfo.getCatalog(), tableInfo.getSchema(), tableInfo.getName()) + " for column " + col.getName() + ". Found: " + columnInfo.getTypeName().toLowerCase(Locale.ROOT) + ", expected: " + col.getSqlType(dialect, mapping))[ FD ]
Line_5 $$ Column col = (Column) iter.next()-->Line_6 $$ ColumnMetadata columnInfo = tableInfo.getColumnMetadata(col.getName())[ FD ]
Line_5 $$ Column col = (Column) iter.next()-->Line_10 $$ final boolean typesMatch = col.getSqlType(dialect, mapping).toLowerCase(Locale.ROOT).startsWith(columnInfo.getTypeName().toLowerCase(Locale.ROOT)) || columnInfo.getTypeCode() == col.getSqlTypeCode(mapping)[ FD ]
Line_5 $$ Column col = (Column) iter.next()-->Line_8 $$ throw new HibernateException("Missing column: " + col.getName() + " in " + Table.qualify(tableInfo.getCatalog(), tableInfo.getSchema(), tableInfo.getName()))[ FD ]
Line_7 $$ if (columnInfo == null) -->Line_10 $$ final boolean typesMatch = col.getSqlType(dialect, mapping).toLowerCase(Locale.ROOT).startsWith(columnInfo.getTypeName().toLowerCase(Locale.ROOT)) || columnInfo.getTypeCode() == col.getSqlTypeCode(mapping)[ CD ]
Line_2 $$ public void validateColumns(Dialect dialect, Mapping mapping, TableMetadata tableInfo) -->Line_10 $$ final boolean typesMatch = col.getSqlType(dialect, mapping).toLowerCase(Locale.ROOT).startsWith(columnInfo.getTypeName().toLowerCase(Locale.ROOT)) || columnInfo.getTypeCode() == col.getSqlTypeCode(mapping)[ FD ]
Line_6 $$ ColumnMetadata columnInfo = tableInfo.getColumnMetadata(col.getName())-->Line_12 $$ throw new HibernateException("Wrong column type in " + Table.qualify(tableInfo.getCatalog(), tableInfo.getSchema(), tableInfo.getName()) + " for column " + col.getName() + ". Found: " + columnInfo.getTypeName().toLowerCase(Locale.ROOT) + ", expected: " + col.getSqlType(dialect, mapping))[ FD ]
Line_2 $$ public void validateColumns(Dialect dialect, Mapping mapping, TableMetadata tableInfo) -->Line_8 $$ throw new HibernateException("Missing column: " + col.getName() + " in " + Table.qualify(tableInfo.getCatalog(), tableInfo.getSchema(), tableInfo.getName()))[ FD ]
Line_10 $$ final boolean typesMatch = col.getSqlType(dialect, mapping).toLowerCase(Locale.ROOT).startsWith(columnInfo.getTypeName().toLowerCase(Locale.ROOT)) || columnInfo.getTypeCode() == col.getSqlTypeCode(mapping)-->Line_11 $$ if (!typesMatch) [ FD ]
Line_4 $$ while (iter.hasNext()) -->Line_7 $$ if (columnInfo == null) [ CD ]
Line_6 $$ ColumnMetadata columnInfo = tableInfo.getColumnMetadata(col.getName())-->Line_10 $$ final boolean typesMatch = col.getSqlType(dialect, mapping).toLowerCase(Locale.ROOT).startsWith(columnInfo.getTypeName().toLowerCase(Locale.ROOT)) || columnInfo.getTypeCode() == col.getSqlTypeCode(mapping)[ FD ]
Line_7 $$ if (columnInfo == null) -->Line_11 $$ if (!typesMatch) [ CD ]
Line_4 $$ while (iter.hasNext()) -->Line_6 $$ ColumnMetadata columnInfo = tableInfo.getColumnMetadata(col.getName())[ CD ]
Line_6 $$ ColumnMetadata columnInfo = tableInfo.getColumnMetadata(col.getName())-->Line_7 $$ if (columnInfo == null) [ FD ]
Line_5 $$ Column col = (Column) iter.next()-->Line_12 $$ throw new HibernateException("Wrong column type in " + Table.qualify(tableInfo.getCatalog(), tableInfo.getSchema(), tableInfo.getName()) + " for column " + col.getName() + ". Found: " + columnInfo.getTypeName().toLowerCase(Locale.ROOT) + ", expected: " + col.getSqlType(dialect, mapping))[ FD ]
Line_2 $$ public void validateColumns(Dialect dialect, Mapping mapping, TableMetadata tableInfo) -->Line_6 $$ ColumnMetadata columnInfo = tableInfo.getColumnMetadata(col.getName())[ FD ]
Line_3 $$ Iterator iter = getColumnIterator()-->Line_5 $$ Column col = (Column) iter.next()[ FD ]
Line_3 $$ Iterator iter = getColumnIterator()-->Line_4 $$ while (iter.hasNext()) [ FD ]
Line_2 $$ public void validateColumns(Dialect dialect, Mapping mapping, TableMetadata tableInfo) -->Line_3 $$ Iterator iter = getColumnIterator()[ CD ]
Line_2 $$ public void validateColumns(Dialect dialect, Mapping mapping, TableMetadata tableInfo) -->Line_4 $$ while (iter.hasNext()) [ CD ]
