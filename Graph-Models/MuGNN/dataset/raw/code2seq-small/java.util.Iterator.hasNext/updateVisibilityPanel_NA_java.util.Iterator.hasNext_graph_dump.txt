Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_27 $$ if (!visible.contains(getVisibilityModifier())) [ CD ]
Line_27 $$ if (!visible.contains(getVisibilityModifier())) -->Line_28 $$ if (visible.contains(PsiModifier.PUBLIC))[ CD ]
Line_14 $$ for (Iterator<String> iterator = visible.iterator(); iterator.hasNext(); ) -->Line_15 $$ String modifier = iterator.next()[ FD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_9 $$ visible.add(PsiModifier.PROTECTED)[ FD ]
Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_10 $$ visible.add(PsiModifier.PACKAGE_LOCAL)[ CD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_14 $$ for (Iterator<String> iterator = visible.iterator(); iterator.hasNext(); ) [ FD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_30 $$ if (visible.contains(PsiModifier.PACKAGE_LOCAL))[ FD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_32 $$ if (visible.contains(PsiModifier.PROTECTED))[ FD ]
Line_12 $$ for (PsiElement occurrence : myContext.getOccurrences()) -->Line_19 $$ if (!JavaResolveUtil.isAccessible(field, myTargetClass, field.getModifierList(), occurrence, myTargetClass, null)) [ FD ]
Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_8 $$ visible.add(PsiModifier.PRIVATE)[ CD ]
Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_7 $$ final Set<String> visible = new THashSet<String>()[ CD ]
Line_27 $$ if (!visible.contains(getVisibilityModifier())) -->Line_32 $$ if (visible.contains(PsiModifier.PROTECTED))[ CD ]
Line_34 $$ if (visible.contains(PsiModifier.PRIVATE))-->Line_35 $$ myJavaVisibilityPanel.setVisibility(PsiModifier.PRIVATE)[ CD ]
Line_32 $$ if (visible.contains(PsiModifier.PROTECTED))-->Line_33 $$ myJavaVisibilityPanel.setVisibility(PsiModifier.PROTECTED)[ CD ]
Line_18 $$ final PsiField field = JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory().createFieldFromText(modifierText + "int xxx;", myTargetClass)-->Line_19 $$ if (!JavaResolveUtil.isAccessible(field, myTargetClass, field.getModifierList(), occurrence, myTargetClass, null)) [ FD ]
Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_6 $$ UIUtil.setEnabled(myJavaVisibilityPanel, true, true)[ CD ]
Line_28 $$ if (visible.contains(PsiModifier.PUBLIC))-->Line_29 $$ myJavaVisibilityPanel.setVisibility(PsiModifier.PUBLIC)[ CD ]
Line_14 $$ for (Iterator<String> iterator = visible.iterator(); iterator.hasNext(); ) -->Line_20 $$ iterator.remove()[ FD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_11 $$ visible.add(PsiModifier.PUBLIC)[ FD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_34 $$ if (visible.contains(PsiModifier.PRIVATE))[ FD ]
Line_27 $$ if (!visible.contains(getVisibilityModifier())) -->Line_30 $$ if (visible.contains(PsiModifier.PACKAGE_LOCAL))[ CD ]
Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_11 $$ visible.add(PsiModifier.PUBLIC)[ CD ]
Line_27 $$ if (!visible.contains(getVisibilityModifier())) -->Line_34 $$ if (visible.contains(PsiModifier.PRIVATE))[ CD ]
Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_9 $$ visible.add(PsiModifier.PROTECTED)[ CD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_28 $$ if (visible.contains(PsiModifier.PUBLIC))[ FD ]
Line_15 $$ String modifier = iterator.next()-->Line_17 $$ final String modifierText = PsiModifier.PACKAGE_LOCAL.equals(modifier) ? "" : modifier + " "[ FD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_8 $$ visible.add(PsiModifier.PRIVATE)[ FD ]
Line_30 $$ if (visible.contains(PsiModifier.PACKAGE_LOCAL))-->Line_31 $$ myJavaVisibilityPanel.setVisibility(PsiModifier.PACKAGE_LOCAL)[ CD ]
Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) -->Line_4 $$ myJavaVisibilityPanel.disableAllButPublic()[ CD ]
Line_13 $$ final PsiManager psiManager = PsiManager.getInstance(myContext.getProject())-->Line_18 $$ final PsiField field = JavaPsiFacade.getInstance(psiManager.getProject()).getElementFactory().createFieldFromText(modifierText + "int xxx;", myTargetClass)[ FD ]
Line_2 $$ private void updateVisibilityPanel() -->Line_3 $$ if (myTargetClass != null && myTargetClass.isInterface()) [ CD ]
Line_14 $$ for (Iterator<String> iterator = visible.iterator(); iterator.hasNext(); ) -->Line_15 $$ String modifier = iterator.next()[ CD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_10 $$ visible.add(PsiModifier.PACKAGE_LOCAL)[ FD ]
Line_7 $$ final Set<String> visible = new THashSet<String>()-->Line_27 $$ if (!visible.contains(getVisibilityModifier())) [ FD ]
Line_19 $$ if (!JavaResolveUtil.isAccessible(field, myTargetClass, field.getModifierList(), occurrence, myTargetClass, null)) -->Line_20 $$ iterator.remove()[ CD ]
