Line_25 $$ Object entry = entries.next()-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_26 $$ PreparedStatement st = null-->Line_32 $$ if (st == null) [ FD ]
Line_23 $$ while (entries.hasNext()) -->Line_25 $$ Object entry = entries.next()[ CD ]
Line_42 $$ if (hasIdentifier) -->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ CD ]
Line_27 $$ if (collection.needsInserting(entry, i, elementType)) -->Line_28 $$ if (useBatch) [ CD ]
Line_23 $$ while (entries.hasNext()) -->Line_26 $$ PreparedStatement st = null[ CD ]
Line_26 $$ PreparedStatement st = null-->Line_53 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_7 $$ if (!isRowInsertEnabled()) -->Line_8 $$ return[ CD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_26 $$ PreparedStatement st = null-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_53 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_20 $$ String sql = getSQLInsertRowString()-->Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_24 $$ int offset = 1-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_23 $$ while (entries.hasNext()) -->Line_27 $$ if (collection.needsInserting(entry, i, elementType)) [ CD ]
Line_16 $$ Iterator entries = collection.entries(this)-->Line_23 $$ while (entries.hasNext()) [ FD ]
Line_21 $$ int i = 0-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_53 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_32 $$ if (st == null) -->Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)[ CD ]
Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_19 $$ boolean useBatch = expectation.canBeBatched()-->Line_63 $$ if (!useBatch) [ FD ]
Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_21 $$ int i = 0-->Line_55 $$ collection.afterRowInsert(this, entry, i)[ FD ]
Line_22 $$ int count = 0-->Line_71 $$ LOG.debugf("Done inserting rows: %s inserted", count)[ FD ]
Line_17 $$ Expectation expectation = Expectations.appropriateExpectation(getInsertCheckStyle())-->Line_53 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_21 $$ int i = 0-->Line_27 $$ if (collection.needsInserting(entry, i, elementType)) [ FD ]
Line_25 $$ Object entry = entries.next()-->Line_55 $$ collection.afterRowInsert(this, entry, i)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_23 $$ while (entries.hasNext()) -->Line_69 $$ i++[ CD ]
Line_28 $$ if (useBatch) -->Line_32 $$ if (st == null) [ CD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_11 $$ LOG.debugf("Inserting rows of collection: %s", MessageHelper.collectionInfoString(this, collection, id, session))[ CD ]
Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_39 $$ offset += expectation.prepare(st)[ FD ]
Line_25 $$ Object entry = entries.next()-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_39 $$ offset += expectation.prepare(st)-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_17 $$ Expectation expectation = Expectations.appropriateExpectation(getInsertCheckStyle())-->Line_19 $$ boolean useBatch = expectation.canBeBatched()[ FD ]
Line_25 $$ Object entry = entries.next()-->Line_27 $$ if (collection.needsInserting(entry, i, elementType)) [ FD ]
Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_64 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_63 $$ if (!useBatch) -->Line_65 $$ session.getJdbcCoordinator().afterStatementExecution()[ CD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_23 $$ while (entries.hasNext()) -->Line_24 $$ int offset = 1[ CD ]
Line_20 $$ String sql = getSQLInsertRowString()-->Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_24 $$ int offset = 1-->Line_39 $$ offset += expectation.prepare(st)[ FD ]
Line_25 $$ Object entry = entries.next()-->Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)[ FD ]
Line_22 $$ int count = 0-->Line_56 $$ count++[ FD ]
Line_26 $$ PreparedStatement st = null-->Line_64 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_18 $$ boolean callable = isInsertCallable()-->Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_17 $$ Expectation expectation = Expectations.appropriateExpectation(getInsertCheckStyle())-->Line_39 $$ offset += expectation.prepare(st)[ FD ]
Line_16 $$ Iterator entries = collection.entries(this)-->Line_25 $$ Object entry = entries.next()[ FD ]
Line_26 $$ PreparedStatement st = null-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_24 $$ int offset = 1-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_26 $$ PreparedStatement st = null-->Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_39 $$ offset += expectation.prepare(st)-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_58 $$ if (useBatch) -->Line_59 $$ session.getJdbcCoordinator().abortBatch()[ CD ]
Line_47 $$ offset = writeIndex(st, collection.getIndex(entry, i, this), offset, session)-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_39 $$ offset += expectation.prepare(st)[ FD ]
Line_63 $$ if (!useBatch) -->Line_64 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ CD ]
Line_26 $$ PreparedStatement st = null-->Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_32 $$ if (st == null) [ FD ]
Line_21 $$ int i = 0-->Line_69 $$ i++[ FD ]
Line_26 $$ PreparedStatement st = null-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_28 $$ if (useBatch) -->Line_29 $$ if (insertBatchKey == null) [ CD ]
Line_21 $$ int i = 0-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_4 $$ if (isInverse) -->Line_5 $$ return[ CD ]
Line_26 $$ PreparedStatement st = null-->Line_39 $$ offset += expectation.prepare(st)[ FD ]
Line_39 $$ offset += expectation.prepare(st)-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_18 $$ boolean callable = isInsertCallable()-->Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_43 $$ offset = writeIdentifier(st, collection.getIdentifier(entry, i), offset, session)[ FD ]
Line_28 $$ if (useBatch) -->Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ CD ]
Line_24 $$ int offset = 1-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_32 $$ if (st == null) [ FD ]
Line_50 $$ if (useBatch) -->Line_51 $$ session.getJdbcCoordinator().getBatch(insertBatchKey).addToBatch()[ CD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(insertBatchKey).getBatchStatement(sql, callable)-->Line_64 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_36 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_49 $$ writeElement(st, collection.getElement(entry), offset, session)[ FD ]
Line_50 $$ if (useBatch) -->Line_53 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ CD ]
