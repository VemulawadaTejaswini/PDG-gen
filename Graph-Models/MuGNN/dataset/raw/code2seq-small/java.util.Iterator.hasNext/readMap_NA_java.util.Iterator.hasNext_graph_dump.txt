Line_11 $$ for (Iterator i = root.getChildren().iterator(); i.hasNext(); ) -->Line_13 $$ if (NAME.equals(node.getName())) [ CD ]
Line_33 $$ String typeStr = node.getAttributeValue(TYPE)-->Line_34 $$ if (typeStr == null) [ FD ]
Line_10 $$ MigrationMap map = new MigrationMap()-->Line_15 $$ map.setName(name)[ FD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_7 $$ if (!MIGRATION_MAP.equals(root.getName())) [ CD ]
Line_3 $$ if (!file.exists()) -->Line_4 $$ return null[ CD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_3 $$ if (!file.exists()) [ CD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_6 $$ Element root = JDOMUtil.load(file)[ FD ]
Line_12 $$ Element node = (Element) i.next()-->Line_14 $$ String name = node.getAttributeValue(VALUE)[ FD ]
Line_12 $$ Element node = (Element) i.next()-->Line_13 $$ if (NAME.equals(node.getName())) [ FD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_27 $$ entry.setOldName(oldName)[ CD ]
Line_6 $$ Element root = JDOMUtil.load(file)-->Line_11 $$ for (Iterator i = root.getChildren().iterator(); i.hasNext(); ) [ FD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_34 $$ if (typeStr == null) [ CD ]
Line_28 $$ String newName = node.getAttributeValue(NEW_NAME)-->Line_29 $$ if (newName == null) [ FD ]
Line_11 $$ for (Iterator i = root.getChildren().iterator(); i.hasNext(); ) -->Line_12 $$ Element node = (Element) i.next()[ FD ]
Line_28 $$ String newName = node.getAttributeValue(NEW_NAME)-->Line_32 $$ entry.setNewName(newName)[ FD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_3 $$ if (!file.exists()) [ FD ]
Line_12 $$ Element node = (Element) i.next()-->Line_23 $$ String oldName = node.getAttributeValue(OLD_NAME)[ FD ]
Line_41 $$ if (isRecursiveStr != null && isRecursiveStr.equals("true")) -->Line_44 $$ entry.setRecursive(false)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_47 $$ map.addEntry(entry)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_32 $$ entry.setNewName(newName)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_38 $$ if (typeStr.equals(PACKAGE_TYPE)) [ CD ]
Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()-->Line_44 $$ entry.setRecursive(false)[ FD ]
Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()-->Line_32 $$ entry.setNewName(newName)[ FD ]
Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()-->Line_42 $$ entry.setRecursive(true)[ FD ]
Line_12 $$ Element node = (Element) i.next()-->Line_18 $$ String description = node.getAttributeValue(VALUE)[ FD ]
Line_12 $$ Element node = (Element) i.next()-->Line_40 $$ String isRecursiveStr = node.getAttributeValue(RECURSIVE)[ FD ]
Line_17 $$ if (DESCRIPTION.equals(node.getName())) -->Line_19 $$ map.setDescription(description)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_33 $$ String typeStr = node.getAttributeValue(TYPE)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_24 $$ if (oldName == null) [ CD ]
Line_40 $$ String isRecursiveStr = node.getAttributeValue(RECURSIVE)-->Line_41 $$ if (isRecursiveStr != null && isRecursiveStr.equals("true")) [ FD ]
Line_23 $$ String oldName = node.getAttributeValue(OLD_NAME)-->Line_27 $$ entry.setOldName(oldName)[ FD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_50 $$ return map[ CD ]
Line_11 $$ for (Iterator i = root.getChildren().iterator(); i.hasNext(); ) -->Line_21 $$ if (ENTRY.equals(node.getName())) [ CD ]
Line_11 $$ for (Iterator i = root.getChildren().iterator(); i.hasNext(); ) -->Line_12 $$ Element node = (Element) i.next()[ CD ]
Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()-->Line_37 $$ entry.setType(MigrationMapEntry.CLASS)[ FD ]
Line_14 $$ String name = node.getAttributeValue(VALUE)-->Line_15 $$ map.setName(name)[ FD ]
Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()-->Line_27 $$ entry.setOldName(oldName)[ FD ]
Line_13 $$ if (NAME.equals(node.getName())) -->Line_14 $$ String name = node.getAttributeValue(VALUE)[ CD ]
Line_12 $$ Element node = (Element) i.next()-->Line_21 $$ if (ENTRY.equals(node.getName())) [ FD ]
Line_12 $$ Element node = (Element) i.next()-->Line_17 $$ if (DESCRIPTION.equals(node.getName())) [ FD ]
Line_23 $$ String oldName = node.getAttributeValue(OLD_NAME)-->Line_24 $$ if (oldName == null) [ FD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_37 $$ entry.setType(MigrationMapEntry.CLASS)[ CD ]
Line_17 $$ if (DESCRIPTION.equals(node.getName())) -->Line_18 $$ String description = node.getAttributeValue(VALUE)[ CD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_11 $$ for (Iterator i = root.getChildren().iterator(); i.hasNext(); ) [ CD ]
Line_6 $$ Element root = JDOMUtil.load(file)-->Line_7 $$ if (!MIGRATION_MAP.equals(root.getName())) [ FD ]
Line_13 $$ if (NAME.equals(node.getName())) -->Line_15 $$ map.setName(name)[ CD ]
Line_12 $$ Element node = (Element) i.next()-->Line_28 $$ String newName = node.getAttributeValue(NEW_NAME)[ FD ]
Line_11 $$ for (Iterator i = root.getChildren().iterator(); i.hasNext(); ) -->Line_17 $$ if (DESCRIPTION.equals(node.getName())) [ CD ]
Line_38 $$ if (typeStr.equals(PACKAGE_TYPE)) -->Line_40 $$ String isRecursiveStr = node.getAttributeValue(RECURSIVE)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_23 $$ String oldName = node.getAttributeValue(OLD_NAME)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_29 $$ if (newName == null) [ CD ]
Line_38 $$ if (typeStr.equals(PACKAGE_TYPE)) -->Line_41 $$ if (isRecursiveStr != null && isRecursiveStr.equals("true")) [ CD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_10 $$ MigrationMap map = new MigrationMap()[ CD ]
Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()-->Line_39 $$ entry.setType(MigrationMapEntry.PACKAGE)[ FD ]
Line_38 $$ if (typeStr.equals(PACKAGE_TYPE)) -->Line_39 $$ entry.setType(MigrationMapEntry.PACKAGE)[ CD ]
Line_10 $$ MigrationMap map = new MigrationMap()-->Line_19 $$ map.setDescription(description)[ FD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_28 $$ String newName = node.getAttributeValue(NEW_NAME)[ CD ]
Line_21 $$ if (ENTRY.equals(node.getName())) -->Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()[ CD ]
Line_41 $$ if (isRecursiveStr != null && isRecursiveStr.equals("true")) -->Line_42 $$ entry.setRecursive(true)[ CD ]
Line_10 $$ MigrationMap map = new MigrationMap()-->Line_47 $$ map.addEntry(entry)[ FD ]
Line_22 $$ MigrationMapEntry entry = new MigrationMapEntry()-->Line_47 $$ map.addEntry(entry)[ FD ]
Line_33 $$ String typeStr = node.getAttributeValue(TYPE)-->Line_38 $$ if (typeStr.equals(PACKAGE_TYPE)) [ FD ]
Line_12 $$ Element node = (Element) i.next()-->Line_33 $$ String typeStr = node.getAttributeValue(TYPE)[ FD ]
Line_2 $$ private static MigrationMap readMap(File file) throws JDOMException, InvalidDataException, IOException -->Line_6 $$ Element root = JDOMUtil.load(file)[ CD ]
Line_18 $$ String description = node.getAttributeValue(VALUE)-->Line_19 $$ map.setDescription(description)[ FD ]
