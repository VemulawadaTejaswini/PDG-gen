Line_2 $$ private int checkKey(String remoteHostname, Object remoteKey) -->Line_10 $$ boolean res = matchKeys(ke.key, remoteKey)[ FD ]
Line_6 $$ while (i.hasNext()) -->Line_13 $$ result = HOSTKEY_HAS_CHANGED[ CD ]
Line_2 $$ private int checkKey(String remoteHostname, Object remoteKey) -->Line_16 $$ return result[ CD ]
Line_6 $$ while (i.hasNext()) -->Line_8 $$ if (hostnameMatches(ke.patterns, remoteHostname) == false)[ CD ]
Line_6 $$ while (i.hasNext()) -->Line_10 $$ boolean res = matchKeys(ke.key, remoteKey)[ CD ]
Line_3 $$ int result = HOSTKEY_IS_NEW-->Line_13 $$ result = HOSTKEY_HAS_CHANGED[ FD ]
Line_5 $$ Iterator i = publicKeys.iterator()-->Line_6 $$ while (i.hasNext()) [ FD ]
Line_5 $$ Iterator i = publicKeys.iterator()-->Line_7 $$ KnownHostsEntry ke = (KnownHostsEntry) i.next()[ FD ]
Line_2 $$ private int checkKey(String remoteHostname, Object remoteKey) -->Line_3 $$ int result = HOSTKEY_IS_NEW[ CD ]
Line_11 $$ if (res == true)-->Line_12 $$ return HOSTKEY_IS_OK[ CD ]
Line_2 $$ private int checkKey(String remoteHostname, Object remoteKey) -->Line_8 $$ if (hostnameMatches(ke.patterns, remoteHostname) == false)[ FD ]
Line_6 $$ while (i.hasNext()) -->Line_7 $$ KnownHostsEntry ke = (KnownHostsEntry) i.next()[ CD ]
Line_10 $$ boolean res = matchKeys(ke.key, remoteKey)-->Line_11 $$ if (res == true)[ FD ]
Line_6 $$ while (i.hasNext()) -->Line_11 $$ if (res == true)[ CD ]
