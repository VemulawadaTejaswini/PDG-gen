Line_4 $$ for (Iterator<String> it = rmi.getUserAttributes().keySet().iterator(); it.hasNext(); ) -->Line_5 $$ Object key = it.next()[ FD ]
Line_5 $$ Object key = it.next()-->Line_6 $$ assertEquals(expectedValues.get(key), rmi.getUserAttributes().get(key))[ FD ]
Line_2 $$ public Object invoke(MethodInvocation invocation) throws Throwable -->Line_8 $$ rmi.getUserAttributes().putAll(valuesToAdd)[ CD ]
Line_3 $$ ReflectiveMethodInvocation rmi = (ReflectiveMethodInvocation) invocation-->Line_4 $$ for (Iterator<String> it = rmi.getUserAttributes().keySet().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ public Object invoke(MethodInvocation invocation) throws Throwable -->Line_4 $$ for (Iterator<String> it = rmi.getUserAttributes().keySet().iterator(); it.hasNext(); ) [ CD ]
Line_4 $$ for (Iterator<String> it = rmi.getUserAttributes().keySet().iterator(); it.hasNext(); ) -->Line_5 $$ Object key = it.next()[ CD ]
Line_2 $$ public Object invoke(MethodInvocation invocation) throws Throwable -->Line_9 $$ return invocation.proceed()[ FD ]
Line_3 $$ ReflectiveMethodInvocation rmi = (ReflectiveMethodInvocation) invocation-->Line_6 $$ assertEquals(expectedValues.get(key), rmi.getUserAttributes().get(key))[ FD ]
Line_2 $$ public Object invoke(MethodInvocation invocation) throws Throwable -->Line_3 $$ ReflectiveMethodInvocation rmi = (ReflectiveMethodInvocation) invocation[ CD ]
Line_2 $$ public Object invoke(MethodInvocation invocation) throws Throwable -->Line_9 $$ return invocation.proceed()[ CD ]
Line_3 $$ ReflectiveMethodInvocation rmi = (ReflectiveMethodInvocation) invocation-->Line_8 $$ rmi.getUserAttributes().putAll(valuesToAdd)[ FD ]
Line_4 $$ for (Iterator<String> it = rmi.getUserAttributes().keySet().iterator(); it.hasNext(); ) -->Line_6 $$ assertEquals(expectedValues.get(key), rmi.getUserAttributes().get(key))[ CD ]
