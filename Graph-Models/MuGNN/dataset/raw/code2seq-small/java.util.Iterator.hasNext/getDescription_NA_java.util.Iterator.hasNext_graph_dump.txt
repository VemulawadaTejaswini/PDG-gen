Line_3 $$ Description description = Description.createSuiteDescription(myName, getTestClass().getAnnotations())-->Line_10 $$ description.addChild(describeChild((Runner) child))[ FD ]
Line_2 $$ public Description getDescription() -->Line_3 $$ Description description = Description.createSuiteDescription(myName, getTestClass().getAnnotations())[ CD ]
Line_8 $$ for (Iterator iterator = filteredChildren.iterator(); iterator.hasNext(); ) -->Line_10 $$ description.addChild(describeChild((Runner) child))[ CD ]
Line_5 $$ final Method getFilteredChildrenMethod = ParentRunner.class.getDeclaredMethod("getFilteredChildren", new Class[0])-->Line_7 $$ Collection filteredChildren = (Collection) getFilteredChildrenMethod.invoke(this, new Object[0])[ FD ]
Line_5 $$ final Method getFilteredChildrenMethod = ParentRunner.class.getDeclaredMethod("getFilteredChildren", new Class[0])-->Line_6 $$ getFilteredChildrenMethod.setAccessible(true)[ FD ]
Line_2 $$ public Description getDescription() -->Line_15 $$ return description[ CD ]
Line_7 $$ Collection filteredChildren = (Collection) getFilteredChildrenMethod.invoke(this, new Object[0])-->Line_8 $$ for (Iterator iterator = filteredChildren.iterator(); iterator.hasNext(); ) [ FD ]
Line_8 $$ for (Iterator iterator = filteredChildren.iterator(); iterator.hasNext(); ) -->Line_9 $$ Object child = iterator.next()[ CD ]
Line_8 $$ for (Iterator iterator = filteredChildren.iterator(); iterator.hasNext(); ) -->Line_9 $$ Object child = iterator.next()[ FD ]
