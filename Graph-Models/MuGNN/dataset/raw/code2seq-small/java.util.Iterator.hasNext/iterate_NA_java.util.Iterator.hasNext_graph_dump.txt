Line_20 $$ T each = impl.next()-->Line_21 $$ if (condition.value(each)) [ FD ]
Line_7 $$ return new Iterator<T>() -->Line_16 $$ return result[ CD ]
Line_7 $$ return new Iterator<T>() -->Line_11 $$ return next != null[ CD ]
Line_2 $$ public static <T> Iterable<T> iterate(@NotNull final Collection<? extends T> collection, @NotNull final Condition<? super T> condition) -->Line_7 $$ return new Iterator<T>() [ FD ]
Line_19 $$ while (impl.hasNext()) -->Line_21 $$ if (condition.value(each)) [ CD ]
Line_19 $$ while (impl.hasNext()) -->Line_20 $$ T each = impl.next()[ CD ]
Line_2 $$ public static <T> Iterable<T> iterate(@NotNull final Collection<? extends T> collection, @NotNull final Condition<? super T> condition) -->Line_21 $$ if (condition.value(each)) [ FD ]
Line_7 $$ return new Iterator<T>() -->Line_14 $$ T result = next[ CD ]
Line_2 $$ public static <T> Iterable<T> iterate(@NotNull final Collection<? extends T> collection, @NotNull final Condition<? super T> condition) -->Line_5 $$ return new Iterable<T>() [ CD ]
Line_7 $$ return new Iterator<T>() -->Line_19 $$ while (impl.hasNext()) [ CD ]
Line_7 $$ return new Iterator<T>() -->Line_25 $$ return null[ CD ]
Line_2 $$ public static <T> Iterable<T> iterate(@NotNull final Collection<? extends T> collection, @NotNull final Condition<? super T> condition) -->Line_3 $$ if (collection.isEmpty())[ CD ]
Line_7 $$ return new Iterator<T>() -->Line_15 $$ next = findNext()[ CD ]
Line_21 $$ if (condition.value(each)) -->Line_22 $$ return each[ CD ]
Line_2 $$ public static <T> Iterable<T> iterate(@NotNull final Collection<? extends T> collection, @NotNull final Condition<? super T> condition) -->Line_3 $$ if (collection.isEmpty())[ FD ]
Line_5 $$ return new Iterable<T>() -->Line_7 $$ return new Iterator<T>() [ CD ]
Line_3 $$ if (collection.isEmpty())-->Line_4 $$ return emptyIterable()[ CD ]
