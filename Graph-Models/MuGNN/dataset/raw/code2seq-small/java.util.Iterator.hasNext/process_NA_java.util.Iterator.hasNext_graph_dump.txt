Line_20 $$ if (noMoreAreas()) -->Line_21 $$ dataStep()[ CD ]
Line_2 $$ public void process(final Iterable<Data> data, final PairConsumer<Data, Area> consumer) -->Line_7 $$ initArea()[ CD ]
Line_10 $$ if (intersects) -->Line_11 $$ consumer.consume(myCurData, myCurArea)[ CD ]
Line_2 $$ public void process(final Iterable<Data> data, final PairConsumer<Data, Area> consumer) -->Line_4 $$ if (!myDataIterator.hasNext() || noMoreAreas())[ CD ]
Line_2 $$ public void process(final Iterable<Data> data, final PairConsumer<Data, Area> consumer) -->Line_8 $$ while (!noMoreAreas()) [ CD ]
Line_2 $$ public void process(final Iterable<Data> data, final PairConsumer<Data, Area> consumer) -->Line_3 $$ myDataIterator = data.iterator()[ FD ]
Line_8 $$ while (!noMoreAreas()) -->Line_20 $$ if (noMoreAreas()) [ CD ]
Line_8 $$ while (!noMoreAreas()) -->Line_9 $$ final boolean intersects = myAreaRange.intersects(myDataRange)[ CD ]
Line_8 $$ while (!noMoreAreas()) -->Line_24 $$ if (myDataRange.getEndOffset() < myAreaRange.getEndOffset()) [ CD ]
Line_24 $$ if (myDataRange.getEndOffset() < myAreaRange.getEndOffset()) -->Line_25 $$ dataStep()[ CD ]
Line_24 $$ if (myDataRange.getEndOffset() < myAreaRange.getEndOffset()) -->Line_27 $$ areaStep()[ CD ]
Line_2 $$ public void process(final Iterable<Data> data, final PairConsumer<Data, Area> consumer) -->Line_11 $$ consumer.consume(myCurData, myCurArea)[ FD ]
Line_4 $$ if (!myDataIterator.hasNext() || noMoreAreas())-->Line_5 $$ return[ CD ]
Line_2 $$ public void process(final Iterable<Data> data, final PairConsumer<Data, Area> consumer) -->Line_6 $$ dataStep()[ CD ]
Line_8 $$ while (!noMoreAreas()) -->Line_16 $$ if (!myDataIterator.hasNext()) [ CD ]
Line_2 $$ public void process(final Iterable<Data> data, final PairConsumer<Data, Area> consumer) -->Line_3 $$ myDataIterator = data.iterator()[ CD ]
Line_16 $$ if (!myDataIterator.hasNext()) -->Line_17 $$ areaStep()[ CD ]
Line_8 $$ while (!noMoreAreas()) -->Line_10 $$ if (intersects) [ CD ]
