Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) -->Line_51 $$ if (currentTask.getStartOffset() == newStart && currentTask.getEndOffset() == newEnd) [ CD ]
Line_7 $$ Iterator<PostprocessFormattingTask> iterator = rangesToProcess.iterator()-->Line_21 $$ iterator.remove()[ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ FD ]
Line_7 $$ Iterator<PostprocessFormattingTask> iterator = rangesToProcess.iterator()-->Line_62 $$ iterator.remove()[ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_51 $$ if (currentTask.getStartOffset() == newStart && currentTask.getEndOffset() == newEnd) [ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) -->Line_61 $$ if (currentTask instanceof ReindentTask) [ CD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_67 $$ if (accumulatedTask != null) [ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_67 $$ if (accumulatedTask != null) [ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_68 $$ if (accumulatedTask instanceof ReindentTask) [ FD ]
Line_7 $$ Iterator<PostprocessFormattingTask> iterator = rangesToProcess.iterator()-->Line_39 $$ iterator.remove()[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_7 $$ Iterator<PostprocessFormattingTask> iterator = rangesToProcess.iterator()-->Line_8 $$ while (iterator.hasNext()) [ FD ]
Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) -->Line_50 $$ rangeMarker = accumulatedTask.getRange()[ CD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_10 $$ if (accumulatedTask == null) [ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_25 $$ final RangeMarker endOfRange = document.createRangeMarker(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_50 $$ rangeMarker = accumulatedTask.getRange()[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_18 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) -->Line_39 $$ iterator.remove()[ CD ]
Line_20 $$ accumulatedTask = currentTask-->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ FD ]
Line_5 $$ final List<ReindentTask> indentActions = new ArrayList<ReindentTask>()-->Line_85 $$ if (!indentActions.isEmpty()) [ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_50 $$ rangeMarker = accumulatedTask.getRange()[ FD ]
Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) -->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ CD ]
Line_11 $$ accumulatedTask = currentTask-->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_74 $$ final List<PostponedAction> result = new ArrayList<PostponedAction>()-->Line_83 $$ result.add(new ReformatRangesAction(ranges))[ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_35 $$ accumulatedTask = currentTask[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_25 $$ final RangeMarker endOfRange = document.createRangeMarker(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_68 $$ if (accumulatedTask instanceof ReindentTask) [ FD ]
Line_22 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReindentTask) -->Line_34 $$ freeFormattingActions.add(new ReformatWithHeadingWhitespaceTask(rangeToProcess))[ CD ]
Line_22 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReindentTask) -->Line_35 $$ accumulatedTask = currentTask[ CD ]
Line_35 $$ accumulatedTask = currentTask-->Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)[ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) [ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_35 $$ accumulatedTask = currentTask[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_20 $$ accumulatedTask = currentTask[ FD ]
Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) -->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ CD ]
Line_11 $$ accumulatedTask = currentTask-->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_4 $$ final List<PostprocessFormattingTask> freeFormattingActions = new ArrayList<PostprocessFormattingTask>()-->Line_75 $$ Collections.reverse(freeFormattingActions)[ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ FD ]
Line_22 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReindentTask) -->Line_36 $$ iterator.remove()[ CD ]
Line_68 $$ if (accumulatedTask instanceof ReindentTask) -->Line_69 $$ indentActions.add((ReindentTask) accumulatedTask)[ CD ]
Line_35 $$ accumulatedTask = currentTask-->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ FD ]
Line_4 $$ final List<PostprocessFormattingTask> freeFormattingActions = new ArrayList<PostprocessFormattingTask>()-->Line_77 $$ if (!freeFormattingActions.isEmpty()) [ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)[ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_18 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) [ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_18 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_51 $$ if (currentTask.getStartOffset() == newStart && currentTask.getEndOffset() == newEnd) -->Line_54 $$ rangeMarker = document.createRangeMarker(newStart, newEnd)[ CD ]
Line_61 $$ if (currentTask instanceof ReindentTask) -->Line_62 $$ iterator.remove()[ CD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_50 $$ rangeMarker = accumulatedTask.getRange()[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_67 $$ if (accumulatedTask != null) [ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_22 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReindentTask) -->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ CD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_10 $$ if (accumulatedTask == null) [ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ FD ]
Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) -->Line_56 $$ if (withLeadingWhitespace) [ CD ]
Line_4 $$ final List<PostprocessFormattingTask> freeFormattingActions = new ArrayList<PostprocessFormattingTask>()-->Line_34 $$ freeFormattingActions.add(new ReformatWithHeadingWhitespaceTask(rangeToProcess))[ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_10 $$ if (accumulatedTask == null) [ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_25 $$ final RangeMarker endOfRange = document.createRangeMarker(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_25 $$ final RangeMarker endOfRange = document.createRangeMarker(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_10 $$ if (accumulatedTask == null) -->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ CD ]
Line_20 $$ accumulatedTask = currentTask-->Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) [ FD ]
Line_85 $$ if (!indentActions.isEmpty()) -->Line_86 $$ ReindentRangesAction reindentRangesAction = new ReindentRangesAction()[ CD ]
Line_11 $$ accumulatedTask = currentTask-->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_25 $$ final RangeMarker endOfRange = document.createRangeMarker(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_4 $$ final List<PostprocessFormattingTask> freeFormattingActions = new ArrayList<PostprocessFormattingTask>()-->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_18 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_67 $$ if (accumulatedTask != null) [ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_68 $$ if (accumulatedTask instanceof ReindentTask) [ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_10 $$ if (accumulatedTask == null) [ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_67 $$ if (accumulatedTask != null) [ FD ]
Line_5 $$ final List<ReindentTask> indentActions = new ArrayList<ReindentTask>()-->Line_16 $$ indentActions.add((ReindentTask) accumulatedTask)[ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_20 $$ accumulatedTask = currentTask[ FD ]
Line_10 $$ if (accumulatedTask == null) -->Line_11 $$ accumulatedTask = currentTask[ CD ]
Line_78 $$ FormatTextRanges ranges = new FormatTextRanges()-->Line_81 $$ ranges.add(range, action instanceof ReformatWithHeadingWhitespaceTask)[ FD ]
Line_77 $$ if (!freeFormattingActions.isEmpty()) -->Line_83 $$ result.add(new ReformatRangesAction(ranges))[ CD ]
Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) -->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ CD ]
Line_35 $$ accumulatedTask = currentTask-->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_61 $$ if (currentTask instanceof ReindentTask) [ FD ]
Line_51 $$ if (currentTask.getStartOffset() == newStart && currentTask.getEndOffset() == newEnd) -->Line_52 $$ rangeMarker = currentTask.getRange()[ CD ]
Line_35 $$ accumulatedTask = currentTask-->Line_10 $$ if (accumulatedTask == null) [ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)[ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_35 $$ accumulatedTask = currentTask[ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_20 $$ accumulatedTask = currentTask[ FD ]
Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) -->Line_21 $$ iterator.remove()[ CD ]
Line_35 $$ accumulatedTask = currentTask-->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ FD ]
Line_22 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReindentTask) -->Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) [ CD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_7 $$ Iterator<PostprocessFormattingTask> iterator = rangesToProcess.iterator()-->Line_36 $$ iterator.remove()[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_67 $$ if (accumulatedTask != null) [ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) [ FD ]
Line_10 $$ if (accumulatedTask == null) -->Line_12 $$ iterator.remove()[ CD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ FD ]
Line_74 $$ final List<PostponedAction> result = new ArrayList<PostponedAction>()-->Line_90 $$ result.add(reindentRangesAction)[ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ FD ]
Line_79 $$ for (PostprocessFormattingTask action : freeFormattingActions) -->Line_88 $$ reindentRangesAction.add(action.getRange(), action.getOldIndent())[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_11 $$ accumulatedTask = currentTask[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ FD ]
Line_77 $$ if (!freeFormattingActions.isEmpty()) -->Line_78 $$ FormatTextRanges ranges = new FormatTextRanges()[ CD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_10 $$ if (accumulatedTask == null) [ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_18 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) [ FD ]
Line_85 $$ if (!indentActions.isEmpty()) -->Line_90 $$ result.add(reindentRangesAction)[ CD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_50 $$ rangeMarker = accumulatedTask.getRange()[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)[ FD ]
Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) -->Line_20 $$ accumulatedTask = currentTask[ CD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_11 $$ accumulatedTask = currentTask[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_35 $$ accumulatedTask = currentTask[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_25 $$ final RangeMarker endOfRange = document.createRangeMarker(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ FD ]
Line_56 $$ if (withLeadingWhitespace) -->Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)[ CD ]
Line_67 $$ if (accumulatedTask != null) -->Line_68 $$ if (accumulatedTask instanceof ReindentTask) [ CD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ FD ]
Line_5 $$ final List<ReindentTask> indentActions = new ArrayList<ReindentTask>()-->Line_76 $$ Collections.reverse(indentActions)[ FD ]
Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) -->Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) [ CD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_68 $$ if (accumulatedTask instanceof ReindentTask) [ FD ]
Line_35 $$ accumulatedTask = currentTask-->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_56 $$ if (withLeadingWhitespace) -->Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)[ CD ]
Line_20 $$ accumulatedTask = currentTask-->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_68 $$ if (accumulatedTask instanceof ReindentTask) [ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)[ FD ]
Line_4 $$ final List<PostprocessFormattingTask> freeFormattingActions = new ArrayList<PostprocessFormattingTask>()-->Line_18 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_57 $$ accumulatedTask = new ReformatWithHeadingWhitespaceTask(rangeMarker)-->Line_68 $$ if (accumulatedTask instanceof ReindentTask) [ FD ]
Line_86 $$ ReindentRangesAction reindentRangesAction = new ReindentRangesAction()-->Line_90 $$ result.add(reindentRangesAction)[ FD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_43 $$ if (accumulatedTask instanceof ReformatWithHeadingWhitespaceTask && currentTask instanceof ReformatTask && accumulatedTask.getStartOffset() < currentTask.getStartOffset()) [ FD ]
Line_38 $$ if (!(accumulatedTask instanceof ReindentTask)) -->Line_47 $$ int newEnd = Math.max(accumulatedTask.getEndOffset(), currentTask.getEndOffset())[ CD ]
Line_11 $$ accumulatedTask = currentTask-->Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) [ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_50 $$ rangeMarker = accumulatedTask.getRange()[ FD ]
Line_59 $$ accumulatedTask = new ReformatTask(rangeMarker)-->Line_18 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_86 $$ ReindentRangesAction reindentRangesAction = new ReindentRangesAction()-->Line_88 $$ reindentRangesAction.add(action.getRange(), action.getOldIndent())[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_41 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReformatWithHeadingWhitespaceTask && accumulatedTask.getStartOffset() == currentTask.getStartOffset()) [ FD ]
Line_7 $$ Iterator<PostprocessFormattingTask> iterator = rangesToProcess.iterator()-->Line_12 $$ iterator.remove()[ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_46 $$ int newStart = Math.min(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_49 $$ if (accumulatedTask.getStartOffset() == newStart && accumulatedTask.getEndOffset() == newEnd) [ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_50 $$ rangeMarker = accumulatedTask.getRange()[ FD ]
Line_8 $$ while (iterator.hasNext()) -->Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()[ CD ]
Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()-->Line_52 $$ rangeMarker = currentTask.getRange()[ FD ]
Line_80 $$ TextRange range = TextRange.create(action)-->Line_81 $$ ranges.add(range, action instanceof ReformatWithHeadingWhitespaceTask)[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ FD ]
Line_20 $$ accumulatedTask = currentTask-->Line_25 $$ final RangeMarker endOfRange = document.createRangeMarker(accumulatedTask.getStartOffset(), currentTask.getStartOffset())[ FD ]
Line_6 $$ PostprocessFormattingTask accumulatedTask = null-->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ FD ]
Line_8 $$ while (iterator.hasNext()) -->Line_10 $$ if (accumulatedTask == null) [ CD ]
Line_5 $$ final List<ReindentTask> indentActions = new ArrayList<ReindentTask>()-->Line_69 $$ indentActions.add((ReindentTask) accumulatedTask)[ FD ]
Line_79 $$ for (PostprocessFormattingTask action : freeFormattingActions) -->Line_80 $$ TextRange range = TextRange.create(action)[ FD ]
Line_11 $$ accumulatedTask = currentTask-->Line_33 $$ final RangeMarker rangeToProcess = document.createRangeMarker(currentTask.getEndOffset(), accumulatedTask.getEndOffset())[ FD ]
Line_7 $$ Iterator<PostprocessFormattingTask> iterator = rangesToProcess.iterator()-->Line_9 $$ final PostprocessFormattingTask currentTask = iterator.next()[ FD ]
Line_68 $$ if (accumulatedTask instanceof ReindentTask) -->Line_71 $$ freeFormattingActions.add(accumulatedTask)[ CD ]
Line_13 $$ if (accumulatedTask.getStartOffset() > currentTask.getEndOffset() || accumulatedTask.getStartOffset() == currentTask.getEndOffset() && !canStickActionsTogether(accumulatedTask, currentTask)) -->Line_22 $$ if (accumulatedTask instanceof ReformatTask && currentTask instanceof ReindentTask) [ CD ]
