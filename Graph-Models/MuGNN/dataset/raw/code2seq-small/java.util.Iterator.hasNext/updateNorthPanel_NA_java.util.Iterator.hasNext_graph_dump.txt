Line_12 $$ IdeRootPaneNorthExtension toInstall = each.copy()-->Line_13 $$ myNorthExtensions.put(toInstall.getKey(), toInstall)[ FD ]
Line_8 $$ for (IdeRootPaneNorthExtension each : extensions) -->Line_10 $$ if (myNorthExtensions.containsKey(each.getKey()))[ FD ]
Line_18 $$ String each = existing.next()-->Line_21 $$ IdeRootPaneNorthExtension toRemove = myNorthExtensions.get(each)[ FD ]
Line_16 $$ Iterator<String> existing = myNorthExtensions.keySet().iterator()-->Line_17 $$ while (existing.hasNext()) [ FD ]
Line_16 $$ Iterator<String> existing = myNorthExtensions.keySet().iterator()-->Line_18 $$ String each = existing.next()[ FD ]
Line_17 $$ while (existing.hasNext()) -->Line_22 $$ myNorthPanel.remove(toRemove.getComponent())[ CD ]
Line_2 $$ private void updateNorthPanel() -->Line_6 $$ IdeRootPaneNorthExtension[] extensions = Extensions.getArea(myProject).getExtensionPoint(IdeRootPaneNorthExtension.EP_NAME).getExtensions()[ CD ]
Line_12 $$ IdeRootPaneNorthExtension toInstall = each.copy()-->Line_14 $$ myNorthPanel.add(toInstall.getComponent())[ FD ]
Line_17 $$ while (existing.hasNext()) -->Line_19 $$ if (processedKeys.contains(each))[ CD ]
Line_17 $$ while (existing.hasNext()) -->Line_18 $$ String each = existing.next()[ CD ]
Line_8 $$ for (IdeRootPaneNorthExtension each : extensions) -->Line_12 $$ IdeRootPaneNorthExtension toInstall = each.copy()[ FD ]
Line_18 $$ String each = existing.next()-->Line_19 $$ if (processedKeys.contains(each))[ FD ]
Line_2 $$ private void updateNorthPanel() -->Line_17 $$ while (existing.hasNext()) [ CD ]
Line_17 $$ while (existing.hasNext()) -->Line_23 $$ existing.remove()[ CD ]
Line_8 $$ for (IdeRootPaneNorthExtension each : extensions) -->Line_21 $$ IdeRootPaneNorthExtension toRemove = myNorthExtensions.get(each)[ FD ]
Line_8 $$ for (IdeRootPaneNorthExtension each : extensions) -->Line_9 $$ processedKeys.add(each.getKey())[ FD ]
Line_2 $$ private void updateNorthPanel() -->Line_26 $$ myNorthPanel.revalidate()[ CD ]
Line_7 $$ HashSet<String> processedKeys = new HashSet<String>()-->Line_19 $$ if (processedKeys.contains(each))[ FD ]
Line_8 $$ for (IdeRootPaneNorthExtension each : extensions) -->Line_19 $$ if (processedKeys.contains(each))[ FD ]
Line_16 $$ Iterator<String> existing = myNorthExtensions.keySet().iterator()-->Line_23 $$ existing.remove()[ FD ]
Line_17 $$ while (existing.hasNext()) -->Line_21 $$ IdeRootPaneNorthExtension toRemove = myNorthExtensions.get(each)[ CD ]
Line_21 $$ IdeRootPaneNorthExtension toRemove = myNorthExtensions.get(each)-->Line_22 $$ myNorthPanel.remove(toRemove.getComponent())[ FD ]
Line_2 $$ private void updateNorthPanel() -->Line_16 $$ Iterator<String> existing = myNorthExtensions.keySet().iterator()[ CD ]
Line_2 $$ private void updateNorthPanel() -->Line_5 $$ myNorthPanel.setVisible(UISettings.getInstance().SHOW_NAVIGATION_BAR && !(myContainer instanceof DockContainer.Dialog) && !UISettings.getInstance().PRESENTATION_MODE)[ CD ]
Line_7 $$ HashSet<String> processedKeys = new HashSet<String>()-->Line_9 $$ processedKeys.add(each.getKey())[ FD ]
Line_3 $$ if (ApplicationManager.getApplication().isUnitTestMode())-->Line_4 $$ return[ CD ]
Line_2 $$ private void updateNorthPanel() -->Line_7 $$ HashSet<String> processedKeys = new HashSet<String>()[ CD ]
Line_2 $$ private void updateNorthPanel() -->Line_27 $$ myNorthPanel.repaint()[ CD ]
Line_2 $$ private void updateNorthPanel() -->Line_3 $$ if (ApplicationManager.getApplication().isUnitTestMode())[ CD ]
Line_21 $$ IdeRootPaneNorthExtension toRemove = myNorthExtensions.get(each)-->Line_24 $$ Disposer.dispose(toRemove)[ FD ]
Line_17 $$ while (existing.hasNext()) -->Line_24 $$ Disposer.dispose(toRemove)[ CD ]
