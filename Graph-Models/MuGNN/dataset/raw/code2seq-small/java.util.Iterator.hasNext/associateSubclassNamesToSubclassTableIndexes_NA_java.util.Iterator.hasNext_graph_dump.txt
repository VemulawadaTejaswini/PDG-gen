Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_4 $$ associateSubclassNamesToSubclassTableIndex(tableName, classNames, mapping)[ FD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_9 $$ associateSubclassNamesToSubclassTableIndex(secondaryTableName, classNames, mapping)[ FD ]
Line_5 $$ Iterator itr = persistentClass.getJoinIterator()-->Line_7 $$ final Join join = (Join) itr.next()[ FD ]
Line_6 $$ while (itr.hasNext()) -->Line_8 $$ final String secondaryTableName = join.getTable().getQualifiedName(factory.getDialect(), factory.getSettings().getDefaultCatalogName(), factory.getSettings().getDefaultSchemaName())[ CD ]
Line_6 $$ while (itr.hasNext()) -->Line_9 $$ associateSubclassNamesToSubclassTableIndex(secondaryTableName, classNames, mapping)[ CD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_5 $$ Iterator itr = persistentClass.getJoinIterator()[ FD ]
Line_5 $$ Iterator itr = persistentClass.getJoinIterator()-->Line_6 $$ while (itr.hasNext()) [ FD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_4 $$ associateSubclassNamesToSubclassTableIndex(tableName, classNames, mapping)[ CD ]
Line_6 $$ while (itr.hasNext()) -->Line_7 $$ final Join join = (Join) itr.next()[ CD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_5 $$ Iterator itr = persistentClass.getJoinIterator()[ CD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_3 $$ final String tableName = persistentClass.getTable().getQualifiedName(factory.getDialect(), factory.getSettings().getDefaultCatalogName(), factory.getSettings().getDefaultSchemaName())[ CD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_3 $$ final String tableName = persistentClass.getTable().getQualifiedName(factory.getDialect(), factory.getSettings().getDefaultCatalogName(), factory.getSettings().getDefaultSchemaName())[ FD ]
Line_3 $$ final String tableName = persistentClass.getTable().getQualifiedName(factory.getDialect(), factory.getSettings().getDefaultCatalogName(), factory.getSettings().getDefaultSchemaName())-->Line_4 $$ associateSubclassNamesToSubclassTableIndex(tableName, classNames, mapping)[ FD ]
Line_8 $$ final String secondaryTableName = join.getTable().getQualifiedName(factory.getDialect(), factory.getSettings().getDefaultCatalogName(), factory.getSettings().getDefaultSchemaName())-->Line_9 $$ associateSubclassNamesToSubclassTableIndex(secondaryTableName, classNames, mapping)[ FD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_8 $$ final String secondaryTableName = join.getTable().getQualifiedName(factory.getDialect(), factory.getSettings().getDefaultCatalogName(), factory.getSettings().getDefaultSchemaName())[ FD ]
Line_2 $$ private void associateSubclassNamesToSubclassTableIndexes(PersistentClass persistentClass, Set<String> classNames, String[][] mapping, SessionFactoryImplementor factory) -->Line_6 $$ while (itr.hasNext()) [ CD ]
Line_7 $$ final Join join = (Join) itr.next()-->Line_8 $$ final String secondaryTableName = join.getTable().getQualifiedName(factory.getDialect(), factory.getSettings().getDefaultCatalogName(), factory.getSettings().getDefaultSchemaName())[ FD ]
