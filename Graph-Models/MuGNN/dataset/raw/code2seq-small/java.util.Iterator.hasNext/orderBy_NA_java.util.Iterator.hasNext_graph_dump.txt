Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_27 $$ buf.append(orderByString).append(", ")[ FD ]
Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_16 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())[ FD ]
Line_14 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_16 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())[ FD ]
Line_14 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_15 $$ if (queryableCollection.hasOrdering()) [ FD ]
Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_24 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
Line_25 $$ if (queryableCollection.hasManyToManyOrdering()) -->Line_26 $$ final String orderByString = queryableCollection.getManyToManyOrderByString(oj.getRHSAlias())[ CD ]
Line_25 $$ if (queryableCollection.hasManyToManyOrdering()) -->Line_27 $$ buf.append(orderByString).append(", ")[ CD ]
Line_8 $$ OuterJoinableAssociation last = null-->Line_23 $$ final QueryableCollection queryableCollection = (QueryableCollection) last.getJoinable()[ FD ]
Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_36 $$ buf.setLength(buf.length() - 2)[ FD ]
Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_17 $$ buf.append(orderByString).append(", ")[ FD ]
Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_35 $$ if (buf.length() > 0) [ FD ]
Line_16 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())-->Line_27 $$ buf.append(orderByString).append(", ")[ FD ]
Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_14 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()[ FD ]
Line_33 $$ last = oj-->Line_23 $$ final QueryableCollection queryableCollection = (QueryableCollection) last.getJoinable()[ FD ]
Line_9 $$ while (iter.hasNext()) -->Line_33 $$ last = oj[ CD ]
Line_14 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_24 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
Line_8 $$ OuterJoinableAssociation last = null-->Line_24 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
Line_9 $$ while (iter.hasNext()) -->Line_11 $$ if (oj.getJoinType() == JoinType.LEFT_OUTER_JOIN) [ CD ]
Line_15 $$ if (queryableCollection.hasOrdering()) -->Line_16 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())[ CD ]
Line_14 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_26 $$ final String orderByString = queryableCollection.getManyToManyOrderByString(oj.getRHSAlias())[ FD ]
Line_35 $$ if (buf.length() > 0) -->Line_36 $$ buf.setLength(buf.length() - 2)[ CD ]
Line_7 $$ Iterator iter = associations.iterator()-->Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()[ FD ]
Line_7 $$ Iterator iter = associations.iterator()-->Line_9 $$ while (iter.hasNext()) [ FD ]
Line_33 $$ last = oj-->Line_24 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) [ FD ]
Line_14 $$ final QueryableCollection queryableCollection = (QueryableCollection) oj.getJoinable()-->Line_25 $$ if (queryableCollection.hasManyToManyOrdering()) [ FD ]
Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_11 $$ if (oj.getJoinType() == JoinType.LEFT_OUTER_JOIN) [ FD ]
Line_15 $$ if (queryableCollection.hasOrdering()) -->Line_17 $$ buf.append(orderByString).append(", ")[ CD ]
Line_9 $$ while (iter.hasNext()) -->Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()[ CD ]
Line_16 $$ final String orderByString = queryableCollection.getSQLOrderByString(oj.getRHSAlias())-->Line_17 $$ buf.append(orderByString).append(", ")[ FD ]
Line_24 $$ if (queryableCollection.isManyToMany() && last.isManyToManyWith(oj)) -->Line_25 $$ if (queryableCollection.hasManyToManyOrdering()) [ CD ]
Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_33 $$ last = oj[ FD ]
Line_10 $$ OuterJoinableAssociation oj = (OuterJoinableAssociation) iter.next()-->Line_26 $$ final String orderByString = queryableCollection.getManyToManyOrderByString(oj.getRHSAlias())[ FD ]
Line_6 $$ StringBuilder buf = new StringBuilder()-->Line_38 $$ return buf.toString()[ FD ]
Line_8 $$ OuterJoinableAssociation last = null-->Line_33 $$ last = oj[ FD ]
