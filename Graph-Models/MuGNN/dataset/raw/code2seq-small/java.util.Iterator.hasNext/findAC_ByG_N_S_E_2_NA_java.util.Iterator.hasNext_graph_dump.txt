Line_2 $$ public List<SocialActivityCounter> findAC_ByG_N_S_E_2(long groupId, String counterName, int startPeriod, int endPeriod, int periodLength) -->Line_9 $$ qPos.add(groupId)[ FD ]
Line_8 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_13 $$ qPos.add(periodLength)[ FD ]
Line_16 $$ Iterator<Object[]> itr = q.iterate()-->Line_18 $$ Object[] array = itr.next()[ FD ]
Line_2 $$ public List<SocialActivityCounter> findAC_ByG_N_S_E_2(long groupId, String counterName, int startPeriod, int endPeriod, int periodLength) -->Line_13 $$ qPos.add(periodLength)[ FD ]
Line_2 $$ public List<SocialActivityCounter> findAC_ByG_N_S_E_2(long groupId, String counterName, int startPeriod, int endPeriod, int periodLength) -->Line_3 $$ Session session = null[ CD ]
Line_6 $$ String sql = CustomSQLUtil.get(FIND_AC_BY_G_N_S_E_2)-->Line_7 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_12 $$ qPos.add(endPeriod)[ FD ]
Line_2 $$ public List<SocialActivityCounter> findAC_ByG_N_S_E_2(long groupId, String counterName, int startPeriod, int endPeriod, int periodLength) -->Line_11 $$ qPos.add(startPeriod)[ FD ]
Line_7 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_8 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_7 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_16 $$ Iterator<Object[]> itr = q.iterate()[ FD ]
Line_17 $$ while (itr.hasNext()) -->Line_21 $$ activityCounter.setName(GetterUtil.getString(array[1]))[ CD ]
Line_2 $$ public List<SocialActivityCounter> findAC_ByG_N_S_E_2(long groupId, String counterName, int startPeriod, int endPeriod, int periodLength) -->Line_14 $$ qPos.add(endPeriod)[ FD ]
Line_5 $$ session = openSession()-->Line_7 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_16 $$ Iterator<Object[]> itr = q.iterate()-->Line_17 $$ while (itr.hasNext()) [ FD ]
Line_19 $$ SocialActivityCounter activityCounter = new SocialActivityCounterImpl()-->Line_21 $$ activityCounter.setName(GetterUtil.getString(array[1]))[ FD ]
Line_8 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_9 $$ qPos.add(groupId)[ FD ]
Line_19 $$ SocialActivityCounter activityCounter = new SocialActivityCounterImpl()-->Line_23 $$ activityCounters.add(activityCounter)[ FD ]
Line_3 $$ Session session = null-->Line_29 $$ closeSession(session)[ FD ]
Line_17 $$ while (itr.hasNext()) -->Line_19 $$ SocialActivityCounter activityCounter = new SocialActivityCounterImpl()[ CD ]
Line_17 $$ while (itr.hasNext()) -->Line_23 $$ activityCounters.add(activityCounter)[ CD ]
Line_8 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_10 $$ qPos.add(counterName)[ FD ]
Line_17 $$ while (itr.hasNext()) -->Line_18 $$ Object[] array = itr.next()[ CD ]
Line_3 $$ Session session = null-->Line_7 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_5 $$ session = openSession()-->Line_29 $$ closeSession(session)[ FD ]
Line_19 $$ SocialActivityCounter activityCounter = new SocialActivityCounterImpl()-->Line_22 $$ activityCounter.setCurrentValue(GetterUtil.getInteger(array[2]))[ FD ]
Line_15 $$ List<SocialActivityCounter> activityCounters = new ArrayList()-->Line_23 $$ activityCounters.add(activityCounter)[ FD ]
Line_2 $$ public List<SocialActivityCounter> findAC_ByG_N_S_E_2(long groupId, String counterName, int startPeriod, int endPeriod, int periodLength) -->Line_10 $$ qPos.add(counterName)[ FD ]
Line_17 $$ while (itr.hasNext()) -->Line_20 $$ activityCounter.setClassNameId(GetterUtil.getLong(array[0]))[ CD ]
Line_17 $$ while (itr.hasNext()) -->Line_22 $$ activityCounter.setCurrentValue(GetterUtil.getInteger(array[2]))[ CD ]
Line_8 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_14 $$ qPos.add(endPeriod)[ FD ]
Line_19 $$ SocialActivityCounter activityCounter = new SocialActivityCounterImpl()-->Line_20 $$ activityCounter.setClassNameId(GetterUtil.getLong(array[0]))[ FD ]
Line_8 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_11 $$ qPos.add(startPeriod)[ FD ]
Line_3 $$ Session session = null-->Line_5 $$ session = openSession()[ FD ]
Line_2 $$ public List<SocialActivityCounter> findAC_ByG_N_S_E_2(long groupId, String counterName, int startPeriod, int endPeriod, int periodLength) -->Line_12 $$ qPos.add(endPeriod)[ FD ]
