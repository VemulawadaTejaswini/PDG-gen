Line_5 $$ Object element = iter.next()-->Line_13 $$ addTo.add(element)[ FD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_13 $$ addTo.add(element)[ FD ]
Line_5 $$ Object element = iter.next()-->Line_6 $$ if (element instanceof Collection) [ FD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_10 $$ if ((element.getClass().isArray()) && flattenArrays) [ FD ]
Line_6 $$ if (element instanceof Collection) -->Line_7 $$ flatten((Collection) element, addTo, flattenMaps, flattenArrays)[ CD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_3 $$ Iterator iter = elements.iterator()[ FD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_7 $$ flatten((Collection) element, addTo, flattenMaps, flattenArrays)[ FD ]
Line_10 $$ if ((element.getClass().isArray()) && flattenArrays) -->Line_13 $$ addTo.add(element)[ CD ]
Line_3 $$ Iterator iter = elements.iterator()-->Line_5 $$ Object element = iter.next()[ FD ]
Line_3 $$ Iterator iter = elements.iterator()-->Line_4 $$ while (iter.hasNext()) [ FD ]
Line_5 $$ Object element = iter.next()-->Line_10 $$ if ((element.getClass().isArray()) && flattenArrays) [ FD ]
Line_8 $$ if ((element instanceof Map) && flattenMaps) -->Line_9 $$ flatten(((Map) element).values(), addTo, flattenMaps, flattenArrays)[ CD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_11 $$ flatten(asList((Object[]) element), addTo, flattenMaps, flattenArrays)[ FD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_4 $$ while (iter.hasNext()) [ CD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_3 $$ Iterator iter = elements.iterator()[ CD ]
Line_6 $$ if (element instanceof Collection) -->Line_8 $$ if ((element instanceof Map) && flattenMaps) [ CD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_9 $$ flatten(((Map) element).values(), addTo, flattenMaps, flattenArrays)[ FD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_8 $$ if ((element instanceof Map) && flattenMaps) [ FD ]
Line_4 $$ while (iter.hasNext()) -->Line_5 $$ Object element = iter.next()[ CD ]
Line_4 $$ while (iter.hasNext()) -->Line_6 $$ if (element instanceof Collection) [ CD ]
Line_10 $$ if ((element.getClass().isArray()) && flattenArrays) -->Line_11 $$ flatten(asList((Object[]) element), addTo, flattenMaps, flattenArrays)[ CD ]
Line_8 $$ if ((element instanceof Map) && flattenMaps) -->Line_10 $$ if ((element.getClass().isArray()) && flattenArrays) [ CD ]
Line_2 $$ public static <T extends Collection> T flatten(Collection elements, T addTo, boolean flattenMaps, boolean flattenArrays) -->Line_16 $$ return addTo[ CD ]
