Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_18 $$ for (int i = 0; i < myCount; i++) [ CD ]
Line_3 $$ int[] starts = new int[myCount]-->Line_16 $$ addRange(starts, ends)[ FD ]
Line_11 $$ for (int i = 0; i < myCount; i++) -->Line_18 $$ for (int i = 0; i < myCount; i++) [ FD ]
Line_6 $$ for (int i = 0; i < myCount; i++) -->Line_7 $$ last[i] = Integer.MIN_VALUE[ CD ]
Line_3 $$ int[] starts = new int[myCount]-->Line_22 $$ addRange(starts, ends)[ FD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_6 $$ for (int i = 0; i < myCount; i++) [ CD ]
Line_18 $$ for (int i = 0; i < myCount; i++) -->Line_20 $$ ends[i] = Integer.MAX_VALUE[ CD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_4 $$ int[] ends = new int[myCount][ CD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_3 $$ int[] starts = new int[myCount][ CD ]
Line_11 $$ for (int i = 0; i < myCount; i++) -->Line_13 $$ ends[i] = offsets[i * 2][ CD ]
Line_9 $$ while (changedLines.hasNext()) -->Line_10 $$ int[] offsets = changedLines.next()[ CD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_22 $$ addRange(starts, ends)[ CD ]
Line_11 $$ for (int i = 0; i < myCount; i++) -->Line_12 $$ starts[i] = last[i][ CD ]
Line_6 $$ for (int i = 0; i < myCount; i++) -->Line_11 $$ for (int i = 0; i < myCount; i++) [ FD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_9 $$ while (changedLines.hasNext()) [ CD ]
Line_9 $$ while (changedLines.hasNext()) -->Line_16 $$ addRange(starts, ends)[ CD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_5 $$ int[] last = new int[myCount][ CD ]
Line_4 $$ int[] ends = new int[myCount]-->Line_16 $$ addRange(starts, ends)[ FD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_9 $$ while (changedLines.hasNext()) [ FD ]
Line_9 $$ while (changedLines.hasNext()) -->Line_11 $$ for (int i = 0; i < myCount; i++) [ CD ]
Line_6 $$ for (int i = 0; i < myCount; i++) -->Line_18 $$ for (int i = 0; i < myCount; i++) [ FD ]
Line_2 $$ private void build(@NotNull final Iterator<int[]> changedLines) -->Line_10 $$ int[] offsets = changedLines.next()[ FD ]
Line_4 $$ int[] ends = new int[myCount]-->Line_22 $$ addRange(starts, ends)[ FD ]
Line_18 $$ for (int i = 0; i < myCount; i++) -->Line_19 $$ starts[i] = last[i][ CD ]
Line_11 $$ for (int i = 0; i < myCount; i++) -->Line_14 $$ last[i] = offsets[i * 2 + 1][ CD ]
