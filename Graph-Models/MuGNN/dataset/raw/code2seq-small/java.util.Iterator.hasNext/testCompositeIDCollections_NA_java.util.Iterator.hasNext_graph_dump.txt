Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())-->Line_28 $$ assertTrue("unkeyed composite id collection", ((Fum) q.getMoreFums().get(0)).getQuxArray()[0] == q)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_3 $$ Session s = openSession()[ CD ]
Line_3 $$ Session s = openSession()-->Line_10 $$ s.save(fum2)[ FD ]
Line_13 $$ Set set = new HashSet()-->Line_18 $$ q.setFums(set)[ FD ]
Line_31 $$ Fum f = (Fum) iter.next()-->Line_34 $$ f = (Fum) iter.next()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_15 $$ set.add(fum1)[ CD ]
Line_5 $$ Fum fum1 = new Fum(fumKey("fum1"))-->Line_15 $$ set.add(fum1)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_23 $$ s = openSession()[ CD ]
Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())-->Line_36 $$ s.delete(q)[ FD ]
Line_3 $$ Session s = openSession()-->Line_21 $$ s.getTransaction().commit()[ FD ]
Line_14 $$ List list = new ArrayList()-->Line_17 $$ list.add(fum1)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_12 $$ s.save(q)[ CD ]
Line_29 $$ Iterator iter = q.getFums().iterator()-->Line_30 $$ iter.hasNext()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_36 $$ s.delete(q)[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_9 $$ s.save(fum1)[ CD ]
Line_11 $$ Qux q = new Qux()-->Line_29 $$ Iterator iter = q.getFums().iterator()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_32 $$ s.delete(f)[ CD ]
Line_23 $$ s = openSession()-->Line_24 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_19 $$ q.setMoreFums(list)[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_31 $$ Fum f = (Fum) iter.next()[ CD ]
Line_11 $$ Qux q = new Qux()-->Line_26 $$ assertTrue("collection of fums", q.getFums().size() == 2)[ FD ]
Line_13 $$ Set set = new HashSet()-->Line_15 $$ set.add(fum1)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_18 $$ q.setFums(set)[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_38 $$ s.close()[ CD ]
Line_3 $$ Session s = openSession()-->Line_23 $$ s = openSession()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_16 $$ set.add(fum2)[ CD ]
Line_34 $$ f = (Fum) iter.next()-->Line_35 $$ s.delete(f)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_11 $$ Qux q = new Qux()[ CD ]
Line_3 $$ Session s = openSession()-->Line_32 $$ s.delete(f)[ FD ]
Line_23 $$ s = openSession()-->Line_36 $$ s.delete(q)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_30 $$ iter.hasNext()[ CD ]
Line_11 $$ Qux q = new Qux()-->Line_36 $$ s.delete(q)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_24 $$ s.beginTransaction()[ CD ]
Line_29 $$ Iterator iter = q.getFums().iterator()-->Line_34 $$ f = (Fum) iter.next()[ FD ]
Line_11 $$ Qux q = new Qux()-->Line_18 $$ q.setFums(set)[ FD ]
Line_6 $$ Fum fum2 = new Fum(fumKey("fum2"))-->Line_10 $$ s.save(fum2)[ FD ]
Line_23 $$ s = openSession()-->Line_37 $$ s.getTransaction().commit()[ FD ]
Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())-->Line_27 $$ assertTrue("collection of fums", q.getMoreFums().size() == 1)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_21 $$ s.getTransaction().commit()[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_17 $$ list.add(fum1)[ CD ]
Line_31 $$ Fum f = (Fum) iter.next()-->Line_32 $$ s.delete(f)[ FD ]
Line_31 $$ Fum f = (Fum) iter.next()-->Line_35 $$ s.delete(f)[ FD ]
Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())-->Line_29 $$ Iterator iter = q.getFums().iterator()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_33 $$ iter.hasNext()[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_28 $$ assertTrue("unkeyed composite id collection", ((Fum) q.getMoreFums().get(0)).getQuxArray()[0] == q)[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_6 $$ Fum fum2 = new Fum(fumKey("fum2"))[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_22 $$ s.close()[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_34 $$ f = (Fum) iter.next()[ CD ]
Line_3 $$ Session s = openSession()-->Line_24 $$ s.beginTransaction()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_7 $$ fum1.setFum("fee fo fi")[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_14 $$ List list = new ArrayList()[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_20 $$ fum1.setQuxArray(new Qux[] [ CD ]
Line_3 $$ Session s = openSession()-->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())[ FD ]
Line_29 $$ Iterator iter = q.getFums().iterator()-->Line_33 $$ iter.hasNext()[ FD ]
Line_3 $$ Session s = openSession()-->Line_9 $$ s.save(fum1)[ FD ]
Line_11 $$ Qux q = new Qux()-->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())[ CD ]
Line_11 $$ Qux q = new Qux()-->Line_12 $$ s.save(q)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_37 $$ s.getTransaction().commit()[ CD ]
Line_11 $$ Qux q = new Qux()-->Line_27 $$ assertTrue("collection of fums", q.getMoreFums().size() == 1)[ FD ]
Line_6 $$ Fum fum2 = new Fum(fumKey("fum2"))-->Line_16 $$ set.add(fum2)[ FD ]
Line_3 $$ Session s = openSession()-->Line_4 $$ s.beginTransaction()[ FD ]
Line_11 $$ Qux q = new Qux()-->Line_19 $$ q.setMoreFums(list)[ FD ]
Line_5 $$ Fum fum1 = new Fum(fumKey("fum1"))-->Line_9 $$ s.save(fum1)[ FD ]
Line_5 $$ Fum fum1 = new Fum(fumKey("fum1"))-->Line_20 $$ fum1.setQuxArray(new Qux[] [ FD ]
Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())-->Line_26 $$ assertTrue("collection of fums", q.getFums().size() == 2)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_4 $$ s.beginTransaction()[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_35 $$ s.delete(f)[ CD ]
Line_5 $$ Fum fum1 = new Fum(fumKey("fum1"))-->Line_7 $$ fum1.setFum("fee fo fi")[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_8 $$ fum2.setFum("fee fo fi")[ CD ]
Line_13 $$ Set set = new HashSet()-->Line_16 $$ set.add(fum2)[ FD ]
Line_23 $$ s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_14 $$ List list = new ArrayList()-->Line_19 $$ q.setMoreFums(list)[ FD ]
Line_3 $$ Session s = openSession()-->Line_36 $$ s.delete(q)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_27 $$ assertTrue("collection of fums", q.getMoreFums().size() == 1)[ CD ]
Line_23 $$ s = openSession()-->Line_25 $$ q = (Qux) s.load(Qux.class, q.getKey())[ FD ]
Line_3 $$ Session s = openSession()-->Line_35 $$ s.delete(f)[ FD ]
Line_6 $$ Fum fum2 = new Fum(fumKey("fum2"))-->Line_8 $$ fum2.setFum("fee fo fi")[ FD ]
Line_23 $$ s = openSession()-->Line_32 $$ s.delete(f)[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_5 $$ Fum fum1 = new Fum(fumKey("fum1"))[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_10 $$ s.save(fum2)[ CD ]
Line_3 $$ Session s = openSession()-->Line_37 $$ s.getTransaction().commit()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_29 $$ Iterator iter = q.getFums().iterator()[ CD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_13 $$ Set set = new HashSet()[ CD ]
Line_3 $$ Session s = openSession()-->Line_22 $$ s.close()[ FD ]
Line_11 $$ Qux q = new Qux()-->Line_28 $$ assertTrue("unkeyed composite id collection", ((Fum) q.getMoreFums().get(0)).getQuxArray()[0] == q)[ FD ]
Line_29 $$ Iterator iter = q.getFums().iterator()-->Line_31 $$ Fum f = (Fum) iter.next()[ FD ]
Line_3 $$ Session s = openSession()-->Line_12 $$ s.save(q)[ FD ]
Line_23 $$ s = openSession()-->Line_35 $$ s.delete(f)[ FD ]
Line_5 $$ Fum fum1 = new Fum(fumKey("fum1"))-->Line_17 $$ list.add(fum1)[ FD ]
Line_3 $$ Session s = openSession()-->Line_38 $$ s.close()[ FD ]
Line_2 $$ public void testCompositeIDCollections() throws Exception -->Line_26 $$ assertTrue("collection of fums", q.getFums().size() == 2)[ CD ]
