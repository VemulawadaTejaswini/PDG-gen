Line_2 $$ private void fillShardCacheWithDataNodes(Map<String, NodeEntry<T>> shardCache, DiscoveryNodes nodes) -->Line_9 $$ for (Iterator<String> it = shardCache.keySet().iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ private void fillShardCacheWithDataNodes(Map<String, NodeEntry<T>> shardCache, DiscoveryNodes nodes) -->Line_11 $$ if (nodes.nodeExists(nodeId) == false) [ FD ]
Line_10 $$ String nodeId = it.next()-->Line_11 $$ if (nodes.nodeExists(nodeId) == false) [ FD ]
Line_9 $$ for (Iterator<String> it = shardCache.keySet().iterator(); it.hasNext(); ) -->Line_10 $$ String nodeId = it.next()[ CD ]
Line_4 $$ DiscoveryNode node = cursor.value-->Line_6 $$ shardCache.put(node.getId(), new NodeEntry<T>(node.getId()))[ FD ]
Line_5 $$ if (shardCache.containsKey(node.getId()) == false) -->Line_6 $$ shardCache.put(node.getId(), new NodeEntry<T>(node.getId()))[ CD ]
Line_9 $$ for (Iterator<String> it = shardCache.keySet().iterator(); it.hasNext(); ) -->Line_10 $$ String nodeId = it.next()[ FD ]
Line_4 $$ DiscoveryNode node = cursor.value-->Line_5 $$ if (shardCache.containsKey(node.getId()) == false) [ FD ]
Line_2 $$ private void fillShardCacheWithDataNodes(Map<String, NodeEntry<T>> shardCache, DiscoveryNodes nodes) -->Line_5 $$ if (shardCache.containsKey(node.getId()) == false) [ FD ]
Line_9 $$ for (Iterator<String> it = shardCache.keySet().iterator(); it.hasNext(); ) -->Line_12 $$ it.remove()[ FD ]
Line_11 $$ if (nodes.nodeExists(nodeId) == false) -->Line_12 $$ it.remove()[ CD ]
Line_9 $$ for (Iterator<String> it = shardCache.keySet().iterator(); it.hasNext(); ) -->Line_11 $$ if (nodes.nodeExists(nodeId) == false) [ CD ]
Line_2 $$ private void fillShardCacheWithDataNodes(Map<String, NodeEntry<T>> shardCache, DiscoveryNodes nodes) -->Line_6 $$ shardCache.put(node.getId(), new NodeEntry<T>(node.getId()))[ FD ]
Line_2 $$ private void fillShardCacheWithDataNodes(Map<String, NodeEntry<T>> shardCache, DiscoveryNodes nodes) -->Line_9 $$ for (Iterator<String> it = shardCache.keySet().iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private void fillShardCacheWithDataNodes(Map<String, NodeEntry<T>> shardCache, DiscoveryNodes nodes) -->Line_3 $$ for (ObjectObjectCursor<String, DiscoveryNode> cursor : nodes.dataNodes()) [ FD ]
