Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_14 $$ iterator.remove()[ FD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_11 $$ for (Iterator<PartitionListKey> iterator = partitionsCacheFull.asMap().keySet().iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_13 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) [ FD ]
Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_8 $$ iterator.remove()[ FD ]
Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_6 $$ PartitionListKey partitionListKey = iterator.next()[ FD ]
Line_12 $$ PartitionListKey partitionListKey = iterator.next()-->Line_13 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) [ FD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_7 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) [ FD ]
Line_11 $$ for (Iterator<PartitionListKey> iterator = partitionsCacheFull.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_12 $$ PartitionListKey partitionListKey = iterator.next()[ FD ]
Line_11 $$ for (Iterator<PartitionListKey> iterator = partitionsCacheFull.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_14 $$ iterator.remove()[ FD ]
Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_11 $$ for (Iterator<PartitionListKey> iterator = partitionsCacheFull.asMap().keySet().iterator(); iterator.hasNext(); ) [ FD ]
Line_11 $$ for (Iterator<PartitionListKey> iterator = partitionsCacheFull.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_12 $$ PartitionListKey partitionListKey = iterator.next()[ CD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_4 $$ tableNamesCache.asMap().remove(tableName.getSchemaName())[ FD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_3 $$ tableCache.asMap().remove(tableName)[ CD ]
Line_6 $$ PartitionListKey partitionListKey = iterator.next()-->Line_7 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) [ FD ]
Line_7 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) -->Line_8 $$ iterator.remove()[ CD ]
Line_13 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) -->Line_14 $$ iterator.remove()[ CD ]
Line_6 $$ PartitionListKey partitionListKey = iterator.next()-->Line_13 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) [ FD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_4 $$ tableNamesCache.asMap().remove(tableName.getSchemaName())[ CD ]
Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_6 $$ PartitionListKey partitionListKey = iterator.next()[ CD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) [ CD ]
Line_2 $$ public void flushTable(SchemaTableName tableName) -->Line_3 $$ tableCache.asMap().remove(tableName)[ FD ]
Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_12 $$ PartitionListKey partitionListKey = iterator.next()[ FD ]
Line_5 $$ for (Iterator<PartitionListKey> iterator = partitionsCache.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_7 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) [ CD ]
Line_11 $$ for (Iterator<PartitionListKey> iterator = partitionsCacheFull.asMap().keySet().iterator(); iterator.hasNext(); ) -->Line_13 $$ if (partitionListKey.getTable().getTableHandle().getSchemaTableName().equals(tableName)) [ CD ]
