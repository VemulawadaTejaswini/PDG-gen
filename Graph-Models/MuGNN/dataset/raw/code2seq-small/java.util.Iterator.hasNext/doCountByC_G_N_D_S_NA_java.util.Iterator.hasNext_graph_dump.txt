Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_30 $$ qPos.add(descriptions, 2)[ FD ]
Line_5 $$ Session session = null-->Line_43 $$ closeSession(session)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))[ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)-->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_3 $$ names = CustomSQLUtil.keywords(names)-->Line_29 $$ qPos.add(names, 2)[ FD ]
Line_32 $$ Iterator<Long> itr = q.iterate()-->Line_33 $$ while (itr.hasNext()) [ FD ]
Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_25 $$ qPos.add(descriptions, 2)[ FD ]
Line_5 $$ Session session = null-->Line_7 $$ session = openSession()[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))-->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_3 $$ names = CustomSQLUtil.keywords(names)-->Line_24 $$ qPos.add(names, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ CD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)-->Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)[ FD ]
Line_17 $$ if (includeBasicFileEntryType) -->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_33 $$ while (itr.hasNext()) -->Line_35 $$ if (count != null) [ CD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_23 $$ if (includeBasicFileEntryType) -->Line_25 $$ qPos.add(descriptions, 2)[ CD ]
Line_35 $$ if (count != null) -->Line_36 $$ countValue += count.intValue()[ CD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)-->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_3 $$ names = CustomSQLUtil.keywords(names)[ CD ]
Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_30 $$ qPos.add(descriptions, 2)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_28 $$ qPos.add(groupIds)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_28 $$ qPos.add(groupIds)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_24 $$ qPos.add(names, 2)[ FD ]
Line_3 $$ names = CustomSQLUtil.keywords(names)-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)[ FD ]
Line_34 $$ Long count = itr.next()-->Line_36 $$ countValue += count.intValue()[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_34 $$ Long count = itr.next()-->Line_35 $$ if (count != null) [ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_29 $$ qPos.add(names, 2)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)[ FD ]
Line_33 $$ while (itr.hasNext()) -->Line_34 $$ Long count = itr.next()[ CD ]
Line_7 $$ session = openSession()-->Line_43 $$ closeSession(session)[ FD ]
Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))-->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)[ FD ]
Line_32 $$ Iterator<Long> itr = q.iterate()-->Line_34 $$ Long count = itr.next()[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_24 $$ qPos.add(names, 2)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))-->Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_30 $$ qPos.add(descriptions, 2)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_27 $$ qPos.add(companyId)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_27 $$ qPos.add(companyId)[ FD ]
Line_31 $$ int countValue = 0-->Line_36 $$ countValue += count.intValue()[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)-->Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$BASIC_DOCUMENT$]", getBasicDocumentCount(includeBasicFileEntryType))-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_9 $$ if (inlineSQLHelper) -->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, DLFileEntryType.class.getName(), "DLFileEntryType.fileEntryTypeId", groupIds)[ CD ]
Line_7 $$ session = openSession()-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_32 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_3 $$ names = CustomSQLUtil.keywords(names)[ FD ]
Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_5 $$ Session session = null-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_4 $$ descriptions = CustomSQLUtil.keywords(descriptions, false)-->Line_25 $$ qPos.add(descriptions, 2)[ FD ]
Line_23 $$ if (includeBasicFileEntryType) -->Line_24 $$ qPos.add(names, 2)[ CD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_2 $$ protected int doCountByC_G_N_D_S(long companyId, long[] groupIds, String[] names, String[] descriptions, boolean andOperator, boolean includeBasicFileEntryType, boolean inlineSQLHelper) -->Line_5 $$ Session session = null[ CD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_25 $$ qPos.add(descriptions, 2)[ FD ]
Line_14 $$ sql = CustomSQLUtil.replaceKeywords(sql, "lower(DLFileEntryType.name)", StringPool.LIKE, false, names)-->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_21 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_C_G_N_D_S)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_18 $$ sql = sql.concat(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$GROUP_ID$]", getGroupIds(groupIds))-->Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)[ FD ]
Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)-->Line_20 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_15 $$ sql = CustomSQLUtil.replaceKeywords(sql, "DLFileEntryType.description", StringPool.LIKE, true, descriptions)-->Line_16 $$ sql = CustomSQLUtil.replaceAndOperator(sql, andOperator)[ FD ]
Line_22 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_29 $$ qPos.add(names, 2)[ FD ]
