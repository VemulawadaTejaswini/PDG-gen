Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_31 $$ assertEquals("abs(round(-45.8)) result was incorrect ", Float.valueOf(46), rset.get(0))[ CD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_36 $$ s.update(simple)[ CD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_37 $$ Integer value = (Integer) s.createQuery("select MOD( NVL(s.pay, 5000), 2 ) from Simple as s where s.id = 10").list().get(0)[ CD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_12 $$ simple.setPay(Float.valueOf(45.8f))[ FD ]
Line_4 $$ Session s = openSession()-->Line_28 $$ s.update(simple)[ FD ]
Line_37 $$ Integer value = (Integer) s.createQuery("select MOD( NVL(s.pay, 5000), 2 ) from Simple as s where s.id = 10").list().get(0)-->Line_38 $$ assertTrue(0 == value.intValue())[ FD ]
Line_6 $$ Iterator iter = s.createQuery("select max(s.count) from Simple s").iterate()-->Line_8 $$ assertTrue(iter.hasNext() && iter.next() == null)[ FD ]
Line_4 $$ Session s = openSession()-->Line_5 $$ Transaction t = s.beginTransaction()[ FD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_26 $$ assertEquals("round(45.8) result was incorrect ", Float.valueOf(46), ((Object[]) rset.get(0))[3])[ CD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_45 $$ s.delete(simple)[ FD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_13 $$ simple.setCount(2)[ FD ]
Line_4 $$ Session s = openSession()-->Line_47 $$ s.close()[ FD ]
Line_4 $$ Session s = openSession()-->Line_37 $$ Integer value = (Integer) s.createQuery("select MOD( NVL(s.pay, 5000), 2 ) from Simple as s where s.id = 10").list().get(0)[ FD ]
Line_4 $$ Session s = openSession()-->Line_19 $$ assertTrue(s.createQuery("select count(*) from Simple s").list().size() == 1)[ FD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_25 $$ assertEquals("trunc(45.8) result was incorrect ", Float.valueOf(45), ((Object[]) rset.get(0))[2])[ CD ]
Line_4 $$ Session s = openSession()-->Line_6 $$ Iterator iter = s.createQuery("select max(s.count) from Simple s").iterate()[ FD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_23 $$ assertNotNull("Name string should have been returned", (((Object[]) rset.get(0))[0]))[ CD ]
Line_7 $$ if (getDialect() instanceof MySQLDialect)-->Line_8 $$ assertTrue(iter.hasNext() && iter.next() == null)[ CD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_10 $$ simple.setName("Simple Dialect Function Test")[ FD ]
Line_4 $$ Session s = openSession()-->Line_14 $$ s.save(simple)[ FD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_24 $$ assertNotNull("Todays Date should have been returned", (((Object[]) rset.get(0))[1]))[ CD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_27 $$ simple.setPay(new Float(-45.8))[ CD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_28 $$ s.update(simple)[ FD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_11 $$ simple.setAddress("Simple Address")[ FD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_14 $$ s.save(simple)[ FD ]
Line_5 $$ Transaction t = s.beginTransaction()-->Line_46 $$ t.commit()[ FD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_28 $$ s.update(simple)[ CD ]
Line_4 $$ Session s = openSession()-->Line_36 $$ s.update(simple)[ FD ]
Line_20 $$ if (getDialect() instanceof Oracle9iDialect) -->Line_38 $$ assertTrue(0 == value.intValue())[ CD ]
Line_40 $$ if ((getDialect() instanceof HSQLDialect)) -->Line_43 $$ assertTrue(0 == value.intValue())[ CD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_27 $$ simple.setPay(new Float(-45.8))[ FD ]
Line_9 $$ Simple simple = new Simple(Long.valueOf(10))-->Line_36 $$ s.update(simple)[ FD ]
Line_4 $$ Session s = openSession()-->Line_45 $$ s.delete(simple)[ FD ]
Line_37 $$ Integer value = (Integer) s.createQuery("select MOD( NVL(s.pay, 5000), 2 ) from Simple as s where s.id = 10").list().get(0)-->Line_43 $$ assertTrue(0 == value.intValue())[ FD ]
