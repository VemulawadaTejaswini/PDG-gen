Line_15 $$ Cache cache = (Cache) it.next()-->Line_16 $$ cache.stop()[ FD ]
Line_3 $$ for (Iterator it = factories.iterator(); it.hasNext(); ) -->Line_9 $$ it.remove()[ FD ]
Line_3 $$ for (Iterator it = factories.iterator(); it.hasNext(); ) -->Line_20 $$ it.remove()[ FD ]
Line_2 $$ private void cleanUp() -->Line_12 $$ factories.clear()[ CD ]
Line_13 $$ for (Iterator it = caches.iterator(); it.hasNext(); ) -->Line_15 $$ Cache cache = (Cache) it.next()[ FD ]
Line_13 $$ for (Iterator it = caches.iterator(); it.hasNext(); ) -->Line_20 $$ it.remove()[ FD ]
Line_3 $$ for (Iterator it = factories.iterator(); it.hasNext(); ) -->Line_5 $$ ((RegionFactory) it.next()).stop()[ FD ]
Line_2 $$ private void cleanUp() -->Line_13 $$ for (Iterator it = caches.iterator(); it.hasNext(); ) [ CD ]
Line_3 $$ for (Iterator it = factories.iterator(); it.hasNext(); ) -->Line_15 $$ Cache cache = (Cache) it.next()[ FD ]
Line_13 $$ for (Iterator it = caches.iterator(); it.hasNext(); ) -->Line_22 $$ avoidConcurrentFlush()[ CD ]
Line_3 $$ for (Iterator it = factories.iterator(); it.hasNext(); ) -->Line_13 $$ for (Iterator it = caches.iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private void cleanUp() -->Line_3 $$ for (Iterator it = factories.iterator(); it.hasNext(); ) [ CD ]
Line_2 $$ private void cleanUp() -->Line_24 $$ caches.clear()[ CD ]
