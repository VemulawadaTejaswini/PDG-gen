Line_16 $$ if (entries.hasNext()) -->Line_70 $$ LOG.debugf("Done inserting collection: %s rows inserted", count)[ CD ]
Line_22 $$ final Object entry = entries.next()-->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ FD ]
Line_7 $$ if (!isRowInsertEnabled()) -->Line_8 $$ return[ CD ]
Line_22 $$ final Object entry = entries.next()-->Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)[ FD ]
Line_19 $$ int i = 0-->Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)[ FD ]
Line_27 $$ boolean useBatch = expectation.canBeBatched()-->Line_62 $$ if (!useBatch) [ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)-->Line_63 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_17 $$ Expectation expectation = Expectations.appropriateExpectation(getInsertCheckStyle())-->Line_38 $$ offset += expectation.prepare(st)[ FD ]
Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_63 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_19 $$ int i = 0-->Line_68 $$ i++[ FD ]
Line_25 $$ PreparedStatement st = null-->Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)[ FD ]
Line_16 $$ if (entries.hasNext()) -->Line_21 $$ while (entries.hasNext()) [ CD ]
Line_23 $$ if (collection.entryExists(entry, i)) -->Line_24 $$ int offset = 1[ CD ]
Line_22 $$ final Object entry = entries.next()-->Line_23 $$ if (collection.entryExists(entry, i)) [ FD ]
Line_23 $$ if (collection.entryExists(entry, i)) -->Line_27 $$ boolean useBatch = expectation.canBeBatched()[ CD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_11 $$ LOG.debugf("Inserting collection: %s", MessageHelper.collectionInfoString(this, collection, id, session))[ CD ]
Line_16 $$ if (entries.hasNext()) -->Line_19 $$ int i = 0[ CD ]
Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)-->Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)[ FD ]
Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)[ FD ]
Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)-->Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)[ FD ]
Line_23 $$ if (collection.entryExists(entry, i)) -->Line_25 $$ PreparedStatement st = null[ CD ]
Line_25 $$ PreparedStatement st = null-->Line_38 $$ offset += expectation.prepare(st)[ FD ]
Line_29 $$ if (useBatch) -->Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)[ CD ]
Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)[ FD ]
Line_23 $$ if (collection.entryExists(entry, i)) -->Line_29 $$ if (useBatch) [ CD ]
Line_25 $$ PreparedStatement st = null-->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ FD ]
Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)-->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ FD ]
Line_19 $$ int i = 0-->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ FD ]
Line_17 $$ Expectation expectation = Expectations.appropriateExpectation(getInsertCheckStyle())-->Line_52 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_22 $$ final Object entry = entries.next()-->Line_54 $$ collection.afterRowInsert(this, entry, i)[ FD ]
Line_29 $$ if (useBatch) -->Line_30 $$ if (recreateBatchKey == null) [ CD ]
Line_28 $$ String sql = getSQLInsertRowString()-->Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_21 $$ while (entries.hasNext()) -->Line_23 $$ if (collection.entryExists(entry, i)) [ CD ]
Line_19 $$ int i = 0-->Line_23 $$ if (collection.entryExists(entry, i)) [ FD ]
Line_25 $$ PreparedStatement st = null-->Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_20 $$ int count = 0-->Line_55 $$ count++[ FD ]
Line_25 $$ PreparedStatement st = null-->Line_63 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ FD ]
Line_16 $$ if (entries.hasNext()) -->Line_18 $$ collection.preInsert(this)[ CD ]
Line_19 $$ int i = 0-->Line_54 $$ collection.afterRowInsert(this, entry, i)[ FD ]
Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)-->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)-->Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_62 $$ if (!useBatch) -->Line_63 $$ session.getJdbcCoordinator().getResourceRegistry().release(st)[ CD ]
Line_16 $$ if (entries.hasNext()) -->Line_17 $$ Expectation expectation = Expectations.appropriateExpectation(getInsertCheckStyle())[ CD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)-->Line_52 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_41 $$ if (hasIdentifier) -->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ CD ]
Line_49 $$ if (useBatch) -->Line_52 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ CD ]
Line_16 $$ if (entries.hasNext()) -->Line_20 $$ int count = 0[ CD ]
Line_23 $$ if (collection.entryExists(entry, i)) -->Line_26 $$ boolean callable = isInsertCallable()[ CD ]
Line_28 $$ String sql = getSQLInsertRowString()-->Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_26 $$ boolean callable = isInsertCallable()-->Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_29 $$ if (useBatch) -->Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ CD ]
Line_26 $$ boolean callable = isInsertCallable()-->Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)[ FD ]
Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)-->Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)[ FD ]
Line_22 $$ final Object entry = entries.next()-->Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)[ FD ]
Line_21 $$ while (entries.hasNext()) -->Line_22 $$ final Object entry = entries.next()[ CD ]
Line_23 $$ if (collection.entryExists(entry, i)) -->Line_28 $$ String sql = getSQLInsertRowString()[ CD ]
Line_49 $$ if (useBatch) -->Line_50 $$ session.getJdbcCoordinator().getBatch(recreateBatchKey).addToBatch()[ CD ]
Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_38 $$ offset += expectation.prepare(st)[ FD ]
Line_16 $$ if (entries.hasNext()) -->Line_72 $$ LOG.debug("Collection was empty")[ CD ]
Line_4 $$ if (isInverse) -->Line_5 $$ return[ CD ]
Line_57 $$ if (useBatch) -->Line_58 $$ session.getJdbcCoordinator().abortBatch()[ CD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)-->Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)-->Line_38 $$ offset += expectation.prepare(st)[ FD ]
Line_46 $$ loc = writeIndex(st, collection.getIndex(entry, i, this), loc, session)-->Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)[ FD ]
Line_25 $$ PreparedStatement st = null-->Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)[ FD ]
Line_62 $$ if (!useBatch) -->Line_64 $$ session.getJdbcCoordinator().afterStatementExecution()[ CD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)-->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ FD ]
Line_25 $$ PreparedStatement st = null-->Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)[ FD ]
Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_42 $$ loc = writeIdentifier(st, collection.getIdentifier(entry, i), loc, session)[ FD ]
Line_21 $$ while (entries.hasNext()) -->Line_68 $$ i++[ CD ]
Line_20 $$ int count = 0-->Line_70 $$ LOG.debugf("Done inserting collection: %s rows inserted", count)[ FD ]
Line_33 $$ st = session.getJdbcCoordinator().getBatch(recreateBatchKey).getBatchStatement(sql, callable)-->Line_48 $$ loc = writeElement(st, collection.getElement(entry), loc, session)[ FD ]
Line_17 $$ Expectation expectation = Expectations.appropriateExpectation(getInsertCheckStyle())-->Line_27 $$ boolean useBatch = expectation.canBeBatched()[ FD ]
Line_25 $$ PreparedStatement st = null-->Line_52 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
Line_24 $$ int offset = 1-->Line_38 $$ offset += expectation.prepare(st)[ FD ]
Line_35 $$ st = session.getJdbcCoordinator().getStatementPreparer().prepareStatement(sql, callable)-->Line_52 $$ expectation.verifyOutcome(session.getJdbcCoordinator().getResultSetReturn().executeUpdate(st), st, -1)[ FD ]
