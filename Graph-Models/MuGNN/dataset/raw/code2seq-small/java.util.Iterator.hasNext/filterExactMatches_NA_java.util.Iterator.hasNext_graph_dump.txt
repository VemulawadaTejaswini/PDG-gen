Line_10 $$ final List<AbstractFilePatchInProgress> exact = new ArrayList<AbstractFilePatchInProgress>(candidate.getVariants().size())-->Line_16 $$ if (exact.size() == 1) [ FD ]
Line_16 $$ if (exact.size() == 1) -->Line_18 $$ putSelected(result, candidate.getVariants(), patchInProgress)[ CD ]
Line_3 $$ for (Iterator<PatchAndVariants> iterator = candidates.iterator(); iterator.hasNext(); ) -->Line_19 $$ iterator.remove()[ FD ]
Line_11 $$ for (AbstractFilePatchInProgress patch : candidate.getVariants()) -->Line_12 $$ if (patch.getCurrentStrip() == 0) [ FD ]
Line_11 $$ for (AbstractFilePatchInProgress patch : candidate.getVariants()) -->Line_13 $$ exact.add(patch)[ FD ]
Line_4 $$ final PatchAndVariants candidate = iterator.next()-->Line_6 $$ final AbstractFilePatchInProgress oneCandidate = candidate.getVariants().get(0)[ FD ]
Line_10 $$ final List<AbstractFilePatchInProgress> exact = new ArrayList<AbstractFilePatchInProgress>(candidate.getVariants().size())-->Line_13 $$ exact.add(patch)[ FD ]
Line_10 $$ final List<AbstractFilePatchInProgress> exact = new ArrayList<AbstractFilePatchInProgress>(candidate.getVariants().size())-->Line_17 $$ final AbstractFilePatchInProgress patchInProgress = exact.get(0)[ FD ]
Line_16 $$ if (exact.size() == 1) -->Line_20 $$ if (!exact.isEmpty()) [ CD ]
Line_10 $$ final List<AbstractFilePatchInProgress> exact = new ArrayList<AbstractFilePatchInProgress>(candidate.getVariants().size())-->Line_20 $$ if (!exact.isEmpty()) [ FD ]
Line_16 $$ if (exact.size() == 1) -->Line_19 $$ iterator.remove()[ CD ]
Line_3 $$ for (Iterator<PatchAndVariants> iterator = candidates.iterator(); iterator.hasNext(); ) -->Line_4 $$ final PatchAndVariants candidate = iterator.next()[ FD ]
Line_3 $$ for (Iterator<PatchAndVariants> iterator = candidates.iterator(); iterator.hasNext(); ) -->Line_5 $$ if (candidate.getVariants().size() == 1) [ CD ]
Line_2 $$ private static void filterExactMatches(@NotNull List<PatchAndVariants> candidates, @NotNull MultiMap<VirtualFile, AbstractFilePatchInProgress> result) -->Line_7 $$ result.putValue(oneCandidate.getBase(), oneCandidate)[ FD ]
Line_5 $$ if (candidate.getVariants().size() == 1) -->Line_6 $$ final AbstractFilePatchInProgress oneCandidate = candidate.getVariants().get(0)[ CD ]
Line_20 $$ if (!exact.isEmpty()) -->Line_21 $$ candidate.getVariants().retainAll(exact)[ CD ]
Line_5 $$ if (candidate.getVariants().size() == 1) -->Line_7 $$ result.putValue(oneCandidate.getBase(), oneCandidate)[ CD ]
Line_4 $$ final PatchAndVariants candidate = iterator.next()-->Line_10 $$ final List<AbstractFilePatchInProgress> exact = new ArrayList<AbstractFilePatchInProgress>(candidate.getVariants().size())[ FD ]
Line_2 $$ private static void filterExactMatches(@NotNull List<PatchAndVariants> candidates, @NotNull MultiMap<VirtualFile, AbstractFilePatchInProgress> result) -->Line_3 $$ for (Iterator<PatchAndVariants> iterator = candidates.iterator(); iterator.hasNext(); ) [ FD ]
Line_4 $$ final PatchAndVariants candidate = iterator.next()-->Line_5 $$ if (candidate.getVariants().size() == 1) [ FD ]
Line_10 $$ final List<AbstractFilePatchInProgress> exact = new ArrayList<AbstractFilePatchInProgress>(candidate.getVariants().size())-->Line_21 $$ candidate.getVariants().retainAll(exact)[ FD ]
Line_4 $$ final PatchAndVariants candidate = iterator.next()-->Line_21 $$ candidate.getVariants().retainAll(exact)[ FD ]
Line_3 $$ for (Iterator<PatchAndVariants> iterator = candidates.iterator(); iterator.hasNext(); ) -->Line_8 $$ iterator.remove()[ FD ]
Line_12 $$ if (patch.getCurrentStrip() == 0) -->Line_13 $$ exact.add(patch)[ CD ]
Line_16 $$ if (exact.size() == 1) -->Line_17 $$ final AbstractFilePatchInProgress patchInProgress = exact.get(0)[ CD ]
Line_6 $$ final AbstractFilePatchInProgress oneCandidate = candidate.getVariants().get(0)-->Line_7 $$ result.putValue(oneCandidate.getBase(), oneCandidate)[ FD ]
Line_4 $$ final PatchAndVariants candidate = iterator.next()-->Line_11 $$ for (AbstractFilePatchInProgress patch : candidate.getVariants()) [ FD ]
Line_5 $$ if (candidate.getVariants().size() == 1) -->Line_8 $$ iterator.remove()[ CD ]
Line_5 $$ if (candidate.getVariants().size() == 1) -->Line_16 $$ if (exact.size() == 1) [ CD ]
Line_3 $$ for (Iterator<PatchAndVariants> iterator = candidates.iterator(); iterator.hasNext(); ) -->Line_4 $$ final PatchAndVariants candidate = iterator.next()[ CD ]
Line_2 $$ private static void filterExactMatches(@NotNull List<PatchAndVariants> candidates, @NotNull MultiMap<VirtualFile, AbstractFilePatchInProgress> result) -->Line_3 $$ for (Iterator<PatchAndVariants> iterator = candidates.iterator(); iterator.hasNext(); ) [ CD ]
Line_5 $$ if (candidate.getVariants().size() == 1) -->Line_10 $$ final List<AbstractFilePatchInProgress> exact = new ArrayList<AbstractFilePatchInProgress>(candidate.getVariants().size())[ CD ]
Line_2 $$ private static void filterExactMatches(@NotNull List<PatchAndVariants> candidates, @NotNull MultiMap<VirtualFile, AbstractFilePatchInProgress> result) -->Line_18 $$ putSelected(result, candidate.getVariants(), patchInProgress)[ FD ]
Line_4 $$ final PatchAndVariants candidate = iterator.next()-->Line_18 $$ putSelected(result, candidate.getVariants(), patchInProgress)[ FD ]
Line_17 $$ final AbstractFilePatchInProgress patchInProgress = exact.get(0)-->Line_18 $$ putSelected(result, candidate.getVariants(), patchInProgress)[ FD ]
