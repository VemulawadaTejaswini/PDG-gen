Line_15 $$ long nextValue = (long) (currentValue * decayFactor)-->Line_17 $$ count.set(nextValue)[ FD ]
Line_10 $$ while (it.hasNext()) -->Line_12 $$ AtomicLong count = entry.getValue()[ CD ]
Line_9 $$ Iterator<Map.Entry<Object, AtomicLong>> it = callCounts.entrySet().iterator()-->Line_10 $$ while (it.hasNext()) [ FD ]
Line_10 $$ while (it.hasNext()) -->Line_17 $$ count.set(nextValue)[ CD ]
Line_10 $$ while (it.hasNext()) -->Line_18 $$ if (nextValue == 0) [ CD ]
Line_8 $$ long total = 0-->Line_16 $$ total += nextValue[ FD ]
Line_12 $$ AtomicLong count = entry.getValue()-->Line_17 $$ count.set(nextValue)[ FD ]
Line_15 $$ long nextValue = (long) (currentValue * decayFactor)-->Line_18 $$ if (nextValue == 0) [ FD ]
Line_9 $$ Iterator<Map.Entry<Object, AtomicLong>> it = callCounts.entrySet().iterator()-->Line_11 $$ Map.Entry<Object, AtomicLong> entry = it.next()[ FD ]
Line_15 $$ long nextValue = (long) (currentValue * decayFactor)-->Line_16 $$ total += nextValue[ FD ]
Line_10 $$ while (it.hasNext()) -->Line_11 $$ Map.Entry<Object, AtomicLong> entry = it.next()[ CD ]
Line_11 $$ Map.Entry<Object, AtomicLong> entry = it.next()-->Line_12 $$ AtomicLong count = entry.getValue()[ FD ]
Line_10 $$ while (it.hasNext()) -->Line_16 $$ total += nextValue[ CD ]
Line_10 $$ while (it.hasNext()) -->Line_15 $$ long nextValue = (long) (currentValue * decayFactor)[ CD ]
