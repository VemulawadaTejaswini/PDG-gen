Line_7 $$ AtomicLong count = entry.getValue()-->Line_8 $$ long currentValue = count.get()[ FD ]
Line_4 $$ Iterator<Map.Entry<Object, AtomicLong>> it = callCounts.entrySet().iterator()-->Line_13 $$ it.remove()[ FD ]
Line_9 $$ long nextValue = (long) (currentValue * decayFactor)-->Line_11 $$ count.set(nextValue)[ FD ]
Line_3 $$ long total = 0-->Line_10 $$ total += nextValue[ FD ]
Line_5 $$ while (it.hasNext()) -->Line_6 $$ Map.Entry<Object, AtomicLong> entry = it.next()[ CD ]
Line_9 $$ long nextValue = (long) (currentValue * decayFactor)-->Line_10 $$ total += nextValue[ FD ]
Line_6 $$ Map.Entry<Object, AtomicLong> entry = it.next()-->Line_7 $$ AtomicLong count = entry.getValue()[ FD ]
Line_12 $$ if (nextValue == 0) -->Line_13 $$ it.remove()[ CD ]
Line_10 $$ total += nextValue-->Line_16 $$ totalCalls.set(total)[ FD ]
Line_2 $$ private void decayCurrentCounts() -->Line_17 $$ recomputeScheduleCache()[ CD ]
Line_5 $$ while (it.hasNext()) -->Line_7 $$ AtomicLong count = entry.getValue()[ CD ]
Line_5 $$ while (it.hasNext()) -->Line_8 $$ long currentValue = count.get()[ CD ]
Line_4 $$ Iterator<Map.Entry<Object, AtomicLong>> it = callCounts.entrySet().iterator()-->Line_5 $$ while (it.hasNext()) [ FD ]
Line_2 $$ private void decayCurrentCounts() -->Line_16 $$ totalCalls.set(total)[ CD ]
Line_4 $$ Iterator<Map.Entry<Object, AtomicLong>> it = callCounts.entrySet().iterator()-->Line_6 $$ Map.Entry<Object, AtomicLong> entry = it.next()[ FD ]
Line_9 $$ long nextValue = (long) (currentValue * decayFactor)-->Line_12 $$ if (nextValue == 0) [ FD ]
Line_5 $$ while (it.hasNext()) -->Line_12 $$ if (nextValue == 0) [ CD ]
Line_5 $$ while (it.hasNext()) -->Line_11 $$ count.set(nextValue)[ CD ]
Line_7 $$ AtomicLong count = entry.getValue()-->Line_11 $$ count.set(nextValue)[ FD ]
Line_5 $$ while (it.hasNext()) -->Line_10 $$ total += nextValue[ CD ]
Line_2 $$ private void decayCurrentCounts() -->Line_3 $$ long total = 0[ CD ]
Line_2 $$ private void decayCurrentCounts() -->Line_4 $$ Iterator<Map.Entry<Object, AtomicLong>> it = callCounts.entrySet().iterator()[ CD ]
Line_2 $$ private void decayCurrentCounts() -->Line_5 $$ while (it.hasNext()) [ CD ]
Line_5 $$ while (it.hasNext()) -->Line_9 $$ long nextValue = (long) (currentValue * decayFactor)[ CD ]
Line_3 $$ long total = 0-->Line_16 $$ totalCalls.set(total)[ FD ]
