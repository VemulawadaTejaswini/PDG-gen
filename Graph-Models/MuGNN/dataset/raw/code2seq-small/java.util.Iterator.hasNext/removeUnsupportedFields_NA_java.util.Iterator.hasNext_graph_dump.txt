Line_3 $$ for (Iterator<String> it = moreLikeFields.iterator(); it.hasNext(); ) -->Line_5 $$ if (!Analysis.generatesCharacterTokenStream(analyzer, fieldName)) [ CD ]
Line_3 $$ for (Iterator<String> it = moreLikeFields.iterator(); it.hasNext(); ) -->Line_4 $$ final String fieldName = it.next()[ CD ]
Line_2 $$ private static List<String> removeUnsupportedFields(List<String> moreLikeFields, Analyzer analyzer, boolean failOnUnsupportedField) throws IOException -->Line_3 $$ for (Iterator<String> it = moreLikeFields.iterator(); it.hasNext(); ) [ FD ]
Line_2 $$ private static List<String> removeUnsupportedFields(List<String> moreLikeFields, Analyzer analyzer, boolean failOnUnsupportedField) throws IOException -->Line_5 $$ if (!Analysis.generatesCharacterTokenStream(analyzer, fieldName)) [ FD ]
Line_5 $$ if (!Analysis.generatesCharacterTokenStream(analyzer, fieldName)) -->Line_6 $$ if (failOnUnsupportedField) [ CD ]
Line_6 $$ if (failOnUnsupportedField) -->Line_9 $$ it.remove()[ CD ]
Line_2 $$ private static List<String> removeUnsupportedFields(List<String> moreLikeFields, Analyzer analyzer, boolean failOnUnsupportedField) throws IOException -->Line_13 $$ return moreLikeFields[ CD ]
Line_4 $$ final String fieldName = it.next()-->Line_5 $$ if (!Analysis.generatesCharacterTokenStream(analyzer, fieldName)) [ FD ]
Line_3 $$ for (Iterator<String> it = moreLikeFields.iterator(); it.hasNext(); ) -->Line_9 $$ it.remove()[ FD ]
Line_3 $$ for (Iterator<String> it = moreLikeFields.iterator(); it.hasNext(); ) -->Line_4 $$ final String fieldName = it.next()[ FD ]
Line_2 $$ private static List<String> removeUnsupportedFields(List<String> moreLikeFields, Analyzer analyzer, boolean failOnUnsupportedField) throws IOException -->Line_3 $$ for (Iterator<String> it = moreLikeFields.iterator(); it.hasNext(); ) [ CD ]
