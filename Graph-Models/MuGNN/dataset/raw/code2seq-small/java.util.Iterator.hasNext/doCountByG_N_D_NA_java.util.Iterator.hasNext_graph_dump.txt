Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N_D)-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_3 $$ name = CustomSQLUtil.keywords(name)[0]-->Line_19 $$ qPos.add(name)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_19 $$ qPos.add(name)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N_D)-->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Team.class.getName(), "Team.teamId", groupId)[ FD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_20 $$ qPos.add(name)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_4 $$ description = CustomSQLUtil.keywords(description)[0][ FD ]
Line_7 $$ session = openSession()-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_13 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_17 $$ setJoin(qPos, params)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_5 $$ Session session = null[ CD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_21 $$ qPos.add(description)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_22 $$ qPos.add(description)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_4 $$ description = CustomSQLUtil.keywords(description)[0][ CD ]
Line_5 $$ Session session = null-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Team.class.getName(), "Team.teamId", groupId)-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_19 $$ qPos.add(name)[ FD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N_D)-->Line_13 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_13 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_15 $$ q.addScalar(COUNT_COLUMN_NAME, Type.LONG)[ FD ]
Line_24 $$ if (itr.hasNext()) -->Line_26 $$ if (count != null) [ CD ]
Line_8 $$ String sql = CustomSQLUtil.get(COUNT_BY_G_N_D)-->Line_12 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_5 $$ Session session = null-->Line_7 $$ session = openSession()[ FD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_18 $$ qPos.add(groupId)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_18 $$ qPos.add(groupId)[ FD ]
Line_25 $$ Long count = itr.next()-->Line_27 $$ return count.intValue()[ FD ]
Line_7 $$ session = openSession()-->Line_34 $$ closeSession(session)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_12 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_3 $$ name = CustomSQLUtil.keywords(name)[0][ CD ]
Line_9 $$ if (inlineSQLHelper) -->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Team.class.getName(), "Team.teamId", groupId)[ CD ]
Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_23 $$ Iterator<Long> itr = q.iterate()[ FD ]
Line_25 $$ Long count = itr.next()-->Line_26 $$ if (count != null) [ FD ]
Line_5 $$ Session session = null-->Line_34 $$ closeSession(session)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Team.class.getName(), "Team.teamId", groupId)-->Line_12 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_17 $$ setJoin(qPos, params)[ FD ]
Line_23 $$ Iterator<Long> itr = q.iterate()-->Line_25 $$ Long count = itr.next()[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_21 $$ qPos.add(description)[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_3 $$ name = CustomSQLUtil.keywords(name)[0][ FD ]
Line_26 $$ if (count != null) -->Line_27 $$ return count.intValue()[ CD ]
Line_4 $$ description = CustomSQLUtil.keywords(description)[0]-->Line_21 $$ qPos.add(description)[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))-->Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)[ FD ]
Line_23 $$ Iterator<Long> itr = q.iterate()-->Line_24 $$ if (itr.hasNext()) [ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_20 $$ qPos.add(name)[ FD ]
Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Team.class.getName(), "Team.teamId", groupId)-->Line_13 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_12 $$ sql = StringUtil.replace(sql, "[$JOIN$]", getJoin(params))-->Line_13 $$ sql = StringUtil.replace(sql, "[$WHERE$]", getWhere(params))[ FD ]
Line_2 $$ protected int doCountByG_N_D(long groupId, String name, String description, LinkedHashMap<String, Object> params, boolean inlineSQLHelper) -->Line_10 $$ sql = InlineSQLHelperUtil.replacePermissionCheck(sql, Team.class.getName(), "Team.teamId", groupId)[ FD ]
Line_24 $$ if (itr.hasNext()) -->Line_25 $$ Long count = itr.next()[ CD ]
Line_14 $$ SQLQuery q = session.createSynchronizedSQLQuery(sql)-->Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)[ FD ]
Line_3 $$ name = CustomSQLUtil.keywords(name)[0]-->Line_20 $$ qPos.add(name)[ FD ]
Line_16 $$ QueryPos qPos = QueryPos.getInstance(q)-->Line_22 $$ qPos.add(description)[ FD ]
Line_4 $$ description = CustomSQLUtil.keywords(description)[0]-->Line_22 $$ qPos.add(description)[ FD ]
