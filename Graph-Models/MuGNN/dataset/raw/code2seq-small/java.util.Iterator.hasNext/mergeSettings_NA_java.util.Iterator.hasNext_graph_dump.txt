Line_68 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) -->Line_69 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ CD ]
Line_52 $$ while (itr.hasNext()) -->Line_53 $$ final Map.Entry entry = (Map.Entry) itr.next()[ CD ]
Line_40 $$ if (!mergedSettings.configurationValues.containsKey(SHARED_CACHE_MODE)) -->Line_41 $$ if (persistenceUnit.getSharedCacheMode() != null) [ CD ]
Line_63 $$ if (jaccContextId == null) -->Line_64 $$ LOG.debug("Found JACC permission grant [%s] in properties, but no JACC context id was specified; ignoring")[ CD ]
Line_61 $$ final String valueString = (String) entry.getValue()-->Line_69 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ FD ]
Line_14 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)-->Line_15 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_13 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName1)) -->Line_14 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)[ CD ]
Line_53 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_71 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ FD ]
Line_29 $$ if (entry.getValue() == null) -->Line_30 $$ mergedSettings.configurationValues.remove(entry.getKey())[ CD ]
Line_53 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_61 $$ final String valueString = (String) entry.getValue()[ FD ]
Line_10 $$ final ConfigLoader configLoader = new ConfigLoader(ssrBuilder.getBootstrapServiceRegistry())-->Line_14 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)[ FD ]
Line_14 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName1)-->Line_22 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_63 $$ if (jaccContextId == null) -->Line_66 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ CD ]
Line_60 $$ final String keyString = (String) entry.getKey()-->Line_66 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_29 $$ if (entry.getValue() == null) -->Line_32 $$ mergedSettings.configurationValues.put(entry.getKey(), entry.getValue())[ CD ]
Line_68 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) -->Line_70 $$ if (keyString.startsWith(COLLECTION_CACHE_PREFIX)) [ CD ]
Line_60 $$ final String keyString = (String) entry.getKey()-->Line_69 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ FD ]
Line_35 $$ if (!mergedSettings.configurationValues.containsKey(VALIDATION_MODE)) -->Line_36 $$ if (persistenceUnit.getValidationMode() != null) [ CD ]
Line_60 $$ final String keyString = (String) entry.getKey()-->Line_62 $$ if (keyString.startsWith(JACC_PREFIX)) [ FD ]
Line_19 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) -->Line_21 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName2)[ CD ]
Line_45 $$ final String jaccContextId = (String) mergedSettings.configurationValues.get(JACC_CONTEXT_ID)-->Line_66 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_60 $$ final String keyString = (String) entry.getKey()-->Line_68 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) [ FD ]
Line_53 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_59 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) [ FD ]
Line_4 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_15 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_36 $$ if (persistenceUnit.getValidationMode() != null) -->Line_37 $$ mergedSettings.configurationValues.put(VALIDATION_MODE, persistenceUnit.getValidationMode())[ CD ]
Line_19 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) -->Line_20 $$ integrationSettings.remove(CFG_FILE)[ CD ]
Line_53 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_60 $$ final String keyString = (String) entry.getKey()[ FD ]
Line_4 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_69 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(CLASS_CACHE_PREFIX.length() + 1), valueString, CacheRegionDefinition.CacheRegionType.ENTITY))[ FD ]
Line_4 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_71 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ FD ]
Line_70 $$ if (keyString.startsWith(COLLECTION_CACHE_PREFIX)) -->Line_71 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ CD ]
Line_45 $$ final String jaccContextId = (String) mergedSettings.configurationValues.get(JACC_CONTEXT_ID)-->Line_63 $$ if (jaccContextId == null) [ FD ]
Line_10 $$ final ConfigLoader configLoader = new ConfigLoader(ssrBuilder.getBootstrapServiceRegistry())-->Line_21 $$ final LoadedConfig loadedCfg = configLoader.loadConfigXmlResource(cfgXmlResourceName2)[ FD ]
Line_61 $$ final String valueString = (String) entry.getValue()-->Line_66 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_60 $$ final String keyString = (String) entry.getKey()-->Line_70 $$ if (keyString.startsWith(COLLECTION_CACHE_PREFIX)) [ FD ]
Line_4 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_22 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ FD ]
Line_62 $$ if (keyString.startsWith(JACC_PREFIX)) -->Line_68 $$ if (keyString.startsWith(CLASS_CACHE_PREFIX)) [ CD ]
Line_60 $$ final String keyString = (String) entry.getKey()-->Line_71 $$ mergedSettings.addCacheRegionDefinition(parseCacheRegionDefinitionEntry(keyString.substring(COLLECTION_CACHE_PREFIX.length() + 1), (String) entry.getValue(), CacheRegionDefinition.CacheRegionType.COLLECTION))[ FD ]
Line_59 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) -->Line_60 $$ final String keyString = (String) entry.getKey()[ CD ]
Line_59 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) -->Line_62 $$ if (keyString.startsWith(JACC_PREFIX)) [ CD ]
Line_59 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) -->Line_61 $$ final String valueString = (String) entry.getValue()[ CD ]
Line_62 $$ if (keyString.startsWith(JACC_PREFIX)) -->Line_63 $$ if (jaccContextId == null) [ CD ]
Line_52 $$ while (itr.hasNext()) -->Line_59 $$ if (String.class.isInstance(entry.getKey()) && String.class.isInstance(entry.getValue())) [ CD ]
Line_13 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName1)) -->Line_15 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ CD ]
Line_19 $$ if (StringHelper.isNotEmpty(cfgXmlResourceName2)) -->Line_22 $$ processConfigXml(loadedCfg, mergedSettings, ssrBuilder)[ CD ]
Line_53 $$ final Map.Entry entry = (Map.Entry) itr.next()-->Line_54 $$ if (entry.getValue() == null) [ FD ]
Line_4 $$ final MergedSettings mergedSettings = new MergedSettings()-->Line_66 $$ mergedSettings.getJaccPermissions(jaccContextId).addPermissionDeclaration(parseJaccConfigEntry(keyString, valueString))[ FD ]
Line_52 $$ while (itr.hasNext()) -->Line_54 $$ if (entry.getValue() == null) [ CD ]
Line_41 $$ if (persistenceUnit.getSharedCacheMode() != null) -->Line_42 $$ mergedSettings.configurationValues.put(SHARED_CACHE_MODE, persistenceUnit.getSharedCacheMode())[ CD ]
