Line_6 $$ XAttr xAttr1 = (new XAttr.Builder()).setNameSpace(XAttr.NameSpace.USER).setName("a1").setValue(XAttrCodec.decodeValue("0x313233")).build()-->Line_9 $$ xAttrs.add(xAttr1)[ FD ]
Line_11 $$ Map<String, byte[]> xAttrMap = XAttrHelper.buildXAttrMap(xAttrs)-->Line_13 $$ Assert.assertEquals(xAttrMap.size(), parsedXAttrMap.size())[ FD ]
Line_14 $$ Iterator<Entry<String, byte[]>> iter = xAttrMap.entrySet().iterator()-->Line_15 $$ while (iter.hasNext()) [ FD ]
Line_14 $$ Iterator<Entry<String, byte[]>> iter = xAttrMap.entrySet().iterator()-->Line_16 $$ Entry<String, byte[]> entry = iter.next()[ FD ]
Line_7 $$ XAttr xAttr2 = (new XAttr.Builder()).setNameSpace(XAttr.NameSpace.USER).setName("a2").setValue(XAttrCodec.decodeValue("0x313131")).build()-->Line_10 $$ xAttrs.add(xAttr2)[ FD ]
Line_12 $$ Map<String, byte[]> parsedXAttrMap = JsonUtil.toXAttrs(json)-->Line_13 $$ Assert.assertEquals(xAttrMap.size(), parsedXAttrMap.size())[ FD ]
Line_8 $$ List<XAttr> xAttrs = Lists.newArrayList()-->Line_10 $$ xAttrs.add(xAttr2)[ FD ]
Line_15 $$ while (iter.hasNext()) -->Line_16 $$ Entry<String, byte[]> entry = iter.next()[ CD ]
Line_5 $$ Map<?, ?> json = (Map<?, ?>) JSON.parse(jsonString)-->Line_12 $$ Map<String, byte[]> parsedXAttrMap = JsonUtil.toXAttrs(json)[ FD ]
Line_16 $$ Entry<String, byte[]> entry = iter.next()-->Line_17 $$ Assert.assertArrayEquals(entry.getValue(), parsedXAttrMap.get(entry.getKey()))[ FD ]
Line_15 $$ while (iter.hasNext()) -->Line_17 $$ Assert.assertArrayEquals(entry.getValue(), parsedXAttrMap.get(entry.getKey()))[ CD ]
Line_8 $$ List<XAttr> xAttrs = Lists.newArrayList()-->Line_11 $$ Map<String, byte[]> xAttrMap = XAttrHelper.buildXAttrMap(xAttrs)[ FD ]
Line_12 $$ Map<String, byte[]> parsedXAttrMap = JsonUtil.toXAttrs(json)-->Line_17 $$ Assert.assertArrayEquals(entry.getValue(), parsedXAttrMap.get(entry.getKey()))[ FD ]
Line_4 $$ String jsonString = "-->Line_5 $$ Map<?, ?> json = (Map<?, ?>) JSON.parse(jsonString)[ FD ]
Line_8 $$ List<XAttr> xAttrs = Lists.newArrayList()-->Line_9 $$ xAttrs.add(xAttr1)[ FD ]
Line_11 $$ Map<String, byte[]> xAttrMap = XAttrHelper.buildXAttrMap(xAttrs)-->Line_14 $$ Iterator<Entry<String, byte[]>> iter = xAttrMap.entrySet().iterator()[ FD ]
