Line_10 $$ for (final Iterator<SnapshotAndINode> i = subs.iterator(); i.hasNext(); ) -->Line_12 $$ prefix.append(i.hasNext() ? DUMPTREE_EXCEPT_LAST_ITEM : DUMPTREE_LAST_ITEM)[ CD ]
Line_10 $$ for (final Iterator<SnapshotAndINode> i = subs.iterator(); i.hasNext(); ) -->Line_14 $$ prefix.setLength(prefix.length() - 2)[ CD ]
Line_9 $$ if (subs != null) -->Line_10 $$ for (final Iterator<SnapshotAndINode> i = subs.iterator(); i.hasNext(); ) [ CD ]
Line_10 $$ for (final Iterator<SnapshotAndINode> i = subs.iterator(); i.hasNext(); ) -->Line_12 $$ prefix.append(i.hasNext() ? DUMPTREE_EXCEPT_LAST_ITEM : DUMPTREE_LAST_ITEM)[ FD ]
Line_10 $$ for (final Iterator<SnapshotAndINode> i = subs.iterator(); i.hasNext(); ) -->Line_13 $$ pair.inode.dumpTreeRecursively(out, prefix, pair.snapshotId)[ CD ]
Line_10 $$ for (final Iterator<SnapshotAndINode> i = subs.iterator(); i.hasNext(); ) -->Line_11 $$ final SnapshotAndINode pair = i.next()[ FD ]
Line_10 $$ for (final Iterator<SnapshotAndINode> i = subs.iterator(); i.hasNext(); ) -->Line_11 $$ final SnapshotAndINode pair = i.next()[ CD ]
