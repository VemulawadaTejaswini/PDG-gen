Line_2 $$ public static boolean checkNonIgnoredMacros(final Project project, final Set<String> usedMacros) -->Line_9 $$ return checkMacros(project, usedMacros)[ FD ]
Line_2 $$ public static boolean checkNonIgnoredMacros(final Project project, final Set<String> usedMacros) -->Line_3 $$ final PathMacros pathMacros = PathMacros.getInstance()[ CD ]
Line_2 $$ public static boolean checkNonIgnoredMacros(final Project project, final Set<String> usedMacros) -->Line_4 $$ for (Iterator<String> iterator = usedMacros.iterator(); iterator.hasNext(); ) [ CD ]
Line_4 $$ for (Iterator<String> iterator = usedMacros.iterator(); iterator.hasNext(); ) -->Line_5 $$ if (pathMacros.isIgnoredMacroName(iterator.next())) [ CD ]
Line_2 $$ public static boolean checkNonIgnoredMacros(final Project project, final Set<String> usedMacros) -->Line_4 $$ for (Iterator<String> iterator = usedMacros.iterator(); iterator.hasNext(); ) [ FD ]
Line_4 $$ for (Iterator<String> iterator = usedMacros.iterator(); iterator.hasNext(); ) -->Line_6 $$ iterator.remove()[ FD ]
Line_2 $$ public static boolean checkNonIgnoredMacros(final Project project, final Set<String> usedMacros) -->Line_9 $$ return checkMacros(project, usedMacros)[ CD ]
Line_5 $$ if (pathMacros.isIgnoredMacroName(iterator.next())) -->Line_6 $$ iterator.remove()[ CD ]
Line_4 $$ for (Iterator<String> iterator = usedMacros.iterator(); iterator.hasNext(); ) -->Line_5 $$ if (pathMacros.isIgnoredMacroName(iterator.next())) [ FD ]
Line_3 $$ final PathMacros pathMacros = PathMacros.getInstance()-->Line_5 $$ if (pathMacros.isIgnoredMacroName(iterator.next())) [ FD ]
