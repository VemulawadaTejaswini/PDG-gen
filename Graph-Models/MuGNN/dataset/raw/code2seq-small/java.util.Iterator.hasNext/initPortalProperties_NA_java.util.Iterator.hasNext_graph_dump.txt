Line_27 $$ while (iterator.hasNext()) -->Line_28 $$ String key = (String) iterator.next()[ CD ]
Line_14 $$ portalPropertiesConfiguration = ConfigurationFactoryUtil.getConfiguration(portletClassLoader, name)-->Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()[ FD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_35 $$ portalProperties.remove(PropsKeys.RELEASE_INFO_PREVIOUS_BUILD_NUMBER)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_43 $$ initAuthVerifiers(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_41 $$ initAutoLogins(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_7 $$ Configuration portalPropertiesConfiguration = null-->Line_18 $$ if (portalPropertiesConfiguration == null) [ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_3 $$ String portalPropertiesLocation = parentElement.elementText("portal-properties")[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_39 $$ initAuthFailures(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_27 $$ while (iterator.hasNext()) -->Line_29 $$ if (!checkPermission(PACLConstants.PORTAL_HOOK_PERMISSION_PORTAL_PROPERTIES_KEY, portletClassLoader, key, "Rejecting portal.properties key " + key)) [ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_47 $$ initEvents(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_33 $$ Properties unfilteredPortalProperties = (Properties) portalProperties.clone()[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_44 $$ initFormNavigatorEntries(servletContextName, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_45 $$ initHotDeployListeners(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_28 $$ String key = (String) iterator.next()-->Line_29 $$ if (!checkPermission(PACLConstants.PORTAL_HOOK_PERMISSION_PORTAL_PROPERTIES_KEY, portletClassLoader, key, "Rejecting portal.properties key " + key)) [ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_37 $$ _portalPropertiesMap.put(servletContextName, portalProperties)[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_22 $$ if (portalProperties.isEmpty()) [ CD ]
Line_33 $$ Properties unfilteredPortalProperties = (Properties) portalProperties.clone()-->Line_38 $$ initPortalProperties(servletContextName, portletClassLoader, portalProperties, unfilteredPortalProperties)[ FD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_42 $$ initAuthenticators(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_14 $$ portalPropertiesConfiguration = ConfigurationFactoryUtil.getConfiguration(portletClassLoader, name)-->Line_18 $$ if (portalPropertiesConfiguration == null) [ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_44 $$ initFormNavigatorEntries(servletContextName, portalProperties)[ FD ]
Line_9 $$ String name = portalPropertiesLocation-->Line_14 $$ portalPropertiesConfiguration = ConfigurationFactoryUtil.getConfiguration(portletClassLoader, name)[ FD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_36 $$ portalProperties.remove(PropsKeys.UPGRADE_PROCESSES)[ FD ]
Line_9 $$ String name = portalPropertiesLocation-->Line_12 $$ name = name.substring(0, pos)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_34 $$ portalProperties.remove(PropsKeys.RELEASE_INFO_BUILD_NUMBER)[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_43 $$ initAuthVerifiers(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_39 $$ initAuthFailures(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_25 $$ Set<Object> set = portalProperties.keySet()-->Line_26 $$ Iterator<Object> iterator = set.iterator()[ FD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_22 $$ if (portalProperties.isEmpty()) [ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_25 $$ Set<Object> set = portalProperties.keySet()[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_46 $$ initModelListeners(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_38 $$ initPortalProperties(servletContextName, portletClassLoader, portalProperties, unfilteredPortalProperties)[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_38 $$ initPortalProperties(servletContextName, portletClassLoader, portalProperties, unfilteredPortalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_38 $$ initPortalProperties(servletContextName, portletClassLoader, portalProperties, unfilteredPortalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_45 $$ initHotDeployListeners(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_44 $$ initFormNavigatorEntries(servletContextName, portalProperties)[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_36 $$ portalProperties.remove(PropsKeys.UPGRADE_PROCESSES)[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_46 $$ initModelListeners(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_26 $$ Iterator<Object> iterator = set.iterator()-->Line_27 $$ while (iterator.hasNext()) [ FD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_45 $$ initHotDeployListeners(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_37 $$ _portalPropertiesMap.put(servletContextName, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_18 $$ if (portalPropertiesConfiguration == null) [ CD ]
Line_9 $$ String name = portalPropertiesLocation-->Line_10 $$ int pos = name.lastIndexOf(".properties")[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_43 $$ initAuthVerifiers(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_47 $$ initEvents(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_14 $$ portalPropertiesConfiguration = ConfigurationFactoryUtil.getConfiguration(portletClassLoader, name)[ FD ]
Line_12 $$ name = name.substring(0, pos)-->Line_14 $$ portalPropertiesConfiguration = ConfigurationFactoryUtil.getConfiguration(portletClassLoader, name)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_26 $$ Iterator<Object> iterator = set.iterator()[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_41 $$ initAutoLogins(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_39 $$ initAuthFailures(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_11 $$ if (pos != -1) -->Line_12 $$ name = name.substring(0, pos)[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_35 $$ portalProperties.remove(PropsKeys.RELEASE_INFO_PREVIOUS_BUILD_NUMBER)[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_40 $$ initAutoDeployListeners(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_29 $$ if (!checkPermission(PACLConstants.PORTAL_HOOK_PERMISSION_PORTAL_PROPERTIES_KEY, portletClassLoader, key, "Rejecting portal.properties key " + key)) [ FD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_33 $$ Properties unfilteredPortalProperties = (Properties) portalProperties.clone()[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_4 $$ if (Validator.isNull(portalPropertiesLocation)) [ CD ]
Line_18 $$ if (portalPropertiesConfiguration == null) -->Line_19 $$ return[ CD ]
Line_10 $$ int pos = name.lastIndexOf(".properties")-->Line_12 $$ name = name.substring(0, pos)[ FD ]
Line_29 $$ if (!checkPermission(PACLConstants.PORTAL_HOOK_PERMISSION_PORTAL_PROPERTIES_KEY, portletClassLoader, key, "Rejecting portal.properties key " + key)) -->Line_30 $$ iterator.remove()[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_41 $$ initAutoLogins(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_26 $$ Iterator<Object> iterator = set.iterator()-->Line_30 $$ iterator.remove()[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_27 $$ while (iterator.hasNext()) [ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_37 $$ _portalPropertiesMap.put(servletContextName, portalProperties)[ FD ]
Line_4 $$ if (Validator.isNull(portalPropertiesLocation)) -->Line_5 $$ return[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_25 $$ Set<Object> set = portalProperties.keySet()[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_3 $$ String portalPropertiesLocation = parentElement.elementText("portal-properties")[ FD ]
Line_7 $$ Configuration portalPropertiesConfiguration = null-->Line_14 $$ portalPropertiesConfiguration = ConfigurationFactoryUtil.getConfiguration(portletClassLoader, name)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_47 $$ initEvents(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_42 $$ initAuthenticators(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_42 $$ initAuthenticators(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_3 $$ String portalPropertiesLocation = parentElement.elementText("portal-properties")-->Line_4 $$ if (Validator.isNull(portalPropertiesLocation)) [ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_40 $$ initAutoDeployListeners(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_7 $$ Configuration portalPropertiesConfiguration = null[ CD ]
Line_26 $$ Iterator<Object> iterator = set.iterator()-->Line_28 $$ String key = (String) iterator.next()[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_40 $$ initAutoDeployListeners(servletContextName, portletClassLoader, portalProperties)[ FD ]
Line_10 $$ int pos = name.lastIndexOf(".properties")-->Line_11 $$ if (pos != -1) [ FD ]
Line_7 $$ Configuration portalPropertiesConfiguration = null-->Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()[ FD ]
Line_2 $$ protected void initPortalProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_46 $$ initModelListeners(servletContextName, portletClassLoader, portalProperties)[ CD ]
Line_21 $$ Properties portalProperties = portalPropertiesConfiguration.getProperties()-->Line_34 $$ portalProperties.remove(PropsKeys.RELEASE_INFO_BUILD_NUMBER)[ FD ]
Line_22 $$ if (portalProperties.isEmpty()) -->Line_23 $$ return[ CD ]
