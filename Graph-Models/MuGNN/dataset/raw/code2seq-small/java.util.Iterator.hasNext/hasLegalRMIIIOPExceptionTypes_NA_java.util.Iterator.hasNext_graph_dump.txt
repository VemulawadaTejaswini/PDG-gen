Line_4 $$ while (it.hasNext()) -->Line_6 $$ if (!isRMIIDLExceptionType(exception))[ CD ]
Line_5 $$ Class exception = (Class) it.next()-->Line_6 $$ if (!isRMIIDLExceptionType(exception))[ FD ]
Line_3 $$ Iterator it = Arrays.asList(method.getExceptionTypes()).iterator()-->Line_5 $$ Class exception = (Class) it.next()[ FD ]
Line_2 $$ public static boolean hasLegalRMIIIOPExceptionTypes(Method method) -->Line_3 $$ Iterator it = Arrays.asList(method.getExceptionTypes()).iterator()[ CD ]
Line_6 $$ if (!isRMIIDLExceptionType(exception))-->Line_7 $$ return false[ CD ]
Line_3 $$ Iterator it = Arrays.asList(method.getExceptionTypes()).iterator()-->Line_4 $$ while (it.hasNext()) [ FD ]
Line_4 $$ while (it.hasNext()) -->Line_5 $$ Class exception = (Class) it.next()[ CD ]
Line_2 $$ public static boolean hasLegalRMIIIOPExceptionTypes(Method method) -->Line_9 $$ return true[ CD ]
Line_2 $$ public static boolean hasLegalRMIIIOPExceptionTypes(Method method) -->Line_3 $$ Iterator it = Arrays.asList(method.getExceptionTypes()).iterator()[ FD ]
Line_2 $$ public static boolean hasLegalRMIIIOPExceptionTypes(Method method) -->Line_4 $$ while (it.hasNext()) [ CD ]
