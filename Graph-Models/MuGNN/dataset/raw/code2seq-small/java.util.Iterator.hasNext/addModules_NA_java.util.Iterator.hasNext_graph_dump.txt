Line_2 $$ private void addModules() -->Line_4 $$ final List<Module> items = new ArrayList<Module>(Arrays.asList(ModuleManager.getInstance(myProject).getModules()))[ CD ]
Line_9 $$ for (Iterator<Module> it = items.iterator(); it.hasNext(); ) -->Line_10 $$ Module module = it.next()[ FD ]
Line_2 $$ private void addModules() -->Line_5 $$ Set<Module> alreadyAdded = new HashSet<Module>()[ CD ]
Line_25 $$ if (!elements.isEmpty()) -->Line_27 $$ int i = model.getModuleRow(elements.get(0))[ CD ]
Line_9 $$ for (Iterator<Module> it = items.iterator(); it.hasNext(); ) -->Line_12 $$ it.remove()[ FD ]
Line_28 $$ if (i != -1) -->Line_29 $$ TableUtil.selectRows(myTable, new int[] [ CD ]
Line_2 $$ private void addModules() -->Line_25 $$ if (!elements.isEmpty()) [ CD ]
Line_2 $$ private void addModules() -->Line_15 $$ Collections.sort(items, new Comparator<Module>() [ CD ]
Line_2 $$ private void addModules() -->Line_24 $$ final List<Module> elements = chooser.getChosenElements()[ CD ]
Line_25 $$ if (!elements.isEmpty()) -->Line_28 $$ if (i != -1) [ CD ]
Line_11 $$ if (alreadyAdded.contains(module)) -->Line_12 $$ it.remove()[ CD ]
Line_9 $$ for (Iterator<Module> it = items.iterator(); it.hasNext(); ) -->Line_11 $$ if (alreadyAdded.contains(module)) [ CD ]
Line_25 $$ if (!elements.isEmpty()) -->Line_26 $$ model.addItems(elements)[ CD ]
Line_2 $$ private void addModules() -->Line_3 $$ final TargetLevelTableModel model = (TargetLevelTableModel) myTable.getModel()[ CD ]
Line_3 $$ final TargetLevelTableModel model = (TargetLevelTableModel) myTable.getModel()-->Line_26 $$ model.addItems(elements)[ FD ]
Line_5 $$ Set<Module> alreadyAdded = new HashSet<Module>()-->Line_11 $$ if (alreadyAdded.contains(module)) [ FD ]
Line_2 $$ private void addModules() -->Line_23 $$ chooser.show()[ CD ]
Line_2 $$ private void addModules() -->Line_9 $$ for (Iterator<Module> it = items.iterator(); it.hasNext(); ) [ CD ]
Line_4 $$ final List<Module> items = new ArrayList<Module>(Arrays.asList(ModuleManager.getInstance(myProject).getModules()))-->Line_9 $$ for (Iterator<Module> it = items.iterator(); it.hasNext(); ) [ FD ]
Line_3 $$ final TargetLevelTableModel model = (TargetLevelTableModel) myTable.getModel()-->Line_6 $$ for (TargetLevelTableModel.Item item : model.getItems()) [ FD ]
Line_9 $$ for (Iterator<Module> it = items.iterator(); it.hasNext(); ) -->Line_10 $$ Module module = it.next()[ CD ]
Line_4 $$ final List<Module> items = new ArrayList<Module>(Arrays.asList(ModuleManager.getInstance(myProject).getModules()))-->Line_15 $$ Collections.sort(items, new Comparator<Module>() [ FD ]
Line_5 $$ Set<Module> alreadyAdded = new HashSet<Module>()-->Line_7 $$ alreadyAdded.add(item.module)[ FD ]
Line_10 $$ Module module = it.next()-->Line_11 $$ if (alreadyAdded.contains(module)) [ FD ]
Line_28 $$ if (i != -1) -->Line_30 $$ TableUtil.scrollSelectionToVisible(myTable)[ CD ]
Line_15 $$ Collections.sort(items, new Comparator<Module>() -->Line_19 $$ return o1.getName().compareTo(o2.getName())[ FD ]
Line_3 $$ final TargetLevelTableModel model = (TargetLevelTableModel) myTable.getModel()-->Line_27 $$ int i = model.getModuleRow(elements.get(0))[ FD ]
Line_15 $$ Collections.sort(items, new Comparator<Module>() -->Line_19 $$ return o1.getName().compareTo(o2.getName())[ CD ]
