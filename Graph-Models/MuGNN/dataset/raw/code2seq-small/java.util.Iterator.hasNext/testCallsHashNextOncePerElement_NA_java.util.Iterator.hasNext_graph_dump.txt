Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)-->Line_14 $$ iterator.remove()[ FD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_20 $$ assertEquals(4, mockCondition.myValueCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_18 $$ assertTrue(iterator.hasNext())[ CD ]
Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)-->Line_17 $$ assertTrue(iterator.hasNext())[ FD ]
Line_4 $$ MockIterator mockIterator = new MockIterator(list.iterator())-->Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)[ FD ]
Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)-->Line_7 $$ assertTrue(iterator.hasNext())[ FD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_13 $$ assertEquals(2, mockCondition.myValueCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_19 $$ assertEquals(4, mockIterator.myHasNextCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_23 $$ assertEquals(4, mockCondition.myValueCalls)[ CD ]
Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)-->Line_21 $$ assertEquals("b", iterator.next())[ FD ]
Line_5 $$ MockCondition mockCondition = new MockCondition(STRINGS_ONLY)-->Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)[ FD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_15 $$ assertEquals(2, mockIterator.myHasNextCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_8 $$ assertTrue(iterator.hasNext())[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_14 $$ iterator.remove()[ CD ]
Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)-->Line_11 $$ assertEquals("a", iterator.next())[ FD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_17 $$ assertTrue(iterator.hasNext())[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_9 $$ assertEquals(2, mockIterator.myHasNextCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_7 $$ assertTrue(iterator.hasNext())[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_10 $$ assertEquals(2, mockCondition.myValueCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_22 $$ assertEquals(4, mockIterator.myHasNextCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_24 $$ assertEquals(3, list.size())[ CD ]
Line_3 $$ ArrayList list = new ArrayList(Arrays.asList(new Object[] -->Line_24 $$ assertEquals(3, list.size())[ FD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_5 $$ MockCondition mockCondition = new MockCondition(STRINGS_ONLY)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_12 $$ assertEquals(2, mockIterator.myHasNextCalls)[ CD ]
Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)-->Line_8 $$ assertTrue(iterator.hasNext())[ FD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_11 $$ assertEquals("a", iterator.next())[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_16 $$ assertEquals(2, mockCondition.myValueCalls)[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_3 $$ ArrayList list = new ArrayList(Arrays.asList(new Object[] [ CD ]
Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)-->Line_18 $$ assertTrue(iterator.hasNext())[ FD ]
Line_3 $$ ArrayList list = new ArrayList(Arrays.asList(new Object[] -->Line_4 $$ MockIterator mockIterator = new MockIterator(list.iterator())[ FD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_21 $$ assertEquals("b", iterator.next())[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_4 $$ MockIterator mockIterator = new MockIterator(list.iterator())[ CD ]
Line_2 $$ public void testCallsHashNextOncePerElement() -->Line_6 $$ Iterator iterator = FilteringIterator.create(mockIterator, mockCondition)[ CD ]
