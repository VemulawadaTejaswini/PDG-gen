Line_47 $$ Collections.sort(variableOccurrences, new Comparator<VarOccurence>() -->Line_51 $$ if (o1.myOffset < o2.myOffset) [ CD ]
Line_23 $$ endOffset = occurence.myOffset-->Line_27 $$ if (endOffset >= 0) [ FD ]
Line_23 $$ endOffset = occurence.myOffset-->Line_37 $$ if (endOffset >= 0) [ FD ]
Line_16 $$ if (myAddEndVariableAtTheEndOfTemplate) -->Line_19 $$ Iterator<VarOccurence> it = myVariableOccurrences.iterator()[ CD ]
Line_28 $$ for (Iterator<Variable> it1 = variables.iterator(); it1.hasNext(); ) -->Line_32 $$ it1.remove()[ FD ]
Line_16 $$ if (myAddEndVariableAtTheEndOfTemplate) -->Line_20 $$ while (it.hasNext()) [ CD ]
Line_42 $$ TemplateImpl template = new TemplateImpl("", "")-->Line_62 $$ template.addTextSegment(myText.substring(last, occurence.myOffset))[ FD ]
Line_17 $$ endOffset = myText.length()-->Line_23 $$ endOffset = occurence.myOffset[ FD ]
Line_28 $$ for (Iterator<Variable> it1 = variables.iterator(); it1.hasNext(); ) -->Line_29 $$ Variable variable = it1.next()[ FD ]
Line_5 $$ if (!findVarOccurence(TemplateImpl.END)) -->Line_6 $$ if (myLastEndVarName == null) [ CD ]
Line_7 $$ for (Variable variable : variables) -->Line_8 $$ if (isEndVariable(variable.getName())) [ FD ]
Line_30 $$ if (myLastEndVarName.equals(variable.getName()) && variable.isAlwaysStopAt()) -->Line_32 $$ it1.remove()[ CD ]
Line_14 $$ if (myLastEndVarName != null) -->Line_16 $$ if (myAddEndVariableAtTheEndOfTemplate) [ CD ]
Line_19 $$ Iterator<VarOccurence> it = myVariableOccurrences.iterator()-->Line_21 $$ VarOccurence occurence = it.next()[ FD ]
Line_15 $$ int endOffset = -1-->Line_17 $$ endOffset = myText.length()[ FD ]
Line_15 $$ int endOffset = -1-->Line_27 $$ if (endOffset >= 0) [ FD ]
Line_19 $$ Iterator<VarOccurence> it = myVariableOccurrences.iterator()-->Line_31 $$ it.remove()[ FD ]
Line_14 $$ if (myLastEndVarName != null) -->Line_37 $$ if (endOffset >= 0) [ CD ]
Line_37 $$ if (endOffset >= 0) -->Line_38 $$ myVariableOccurrences.add(new VarOccurence(TemplateImpl.END, endOffset))[ CD ]
Line_54 $$ if (o1.myOffset > o2.myOffset) -->Line_55 $$ return 1[ CD ]
Line_28 $$ for (Iterator<Variable> it1 = variables.iterator(); it1.hasNext(); ) -->Line_30 $$ if (myLastEndVarName.equals(variable.getName()) && variable.isAlwaysStopAt()) [ CD ]
Line_29 $$ Variable variable = it1.next()-->Line_30 $$ if (myLastEndVarName.equals(variable.getName()) && variable.isAlwaysStopAt()) [ FD ]
Line_20 $$ while (it.hasNext()) -->Line_21 $$ VarOccurence occurence = it.next()[ CD ]
Line_42 $$ TemplateImpl template = new TemplateImpl("", "")-->Line_66 $$ template.addTextSegment(myText.substring(last))[ FD ]
Line_14 $$ if (myLastEndVarName != null) -->Line_15 $$ int endOffset = -1[ CD ]
Line_17 $$ endOffset = myText.length()-->Line_37 $$ if (endOffset >= 0) [ FD ]
Line_15 $$ int endOffset = -1-->Line_37 $$ if (endOffset >= 0) [ FD ]
Line_19 $$ Iterator<VarOccurence> it = myVariableOccurrences.iterator()-->Line_20 $$ while (it.hasNext()) [ FD ]
Line_8 $$ if (isEndVariable(variable.getName())) -->Line_9 $$ myLastEndVarName = variable.getName()[ CD ]
Line_29 $$ Variable variable = it1.next()-->Line_44 $$ template.addVariable(variable.getName(), variable.getExpressionString(), variable.getDefaultValueString(), variable.isAlwaysStopAt())[ FD ]
Line_7 $$ for (Variable variable : variables) -->Line_44 $$ template.addVariable(variable.getName(), variable.getExpressionString(), variable.getDefaultValueString(), variable.isAlwaysStopAt())[ FD ]
Line_20 $$ while (it.hasNext()) -->Line_22 $$ if (occurence.myName.equals(myLastEndVarName)) [ CD ]
Line_46 $$ List<VarOccurence> variableOccurrences = getListWithLimit(myVariableOccurrences)-->Line_47 $$ Collections.sort(variableOccurrences, new Comparator<VarOccurence>() [ FD ]
Line_47 $$ Collections.sort(variableOccurrences, new Comparator<VarOccurence>() -->Line_54 $$ if (o1.myOffset > o2.myOffset) [ CD ]
Line_42 $$ TemplateImpl template = new TemplateImpl("", "")-->Line_44 $$ template.addVariable(variable.getName(), variable.getExpressionString(), variable.getDefaultValueString(), variable.isAlwaysStopAt())[ FD ]
Line_16 $$ if (myAddEndVariableAtTheEndOfTemplate) -->Line_17 $$ endOffset = myText.length()[ CD ]
Line_47 $$ Collections.sort(variableOccurrences, new Comparator<VarOccurence>() -->Line_57 $$ return 0[ CD ]
Line_7 $$ for (Variable variable : variables) -->Line_9 $$ myLastEndVarName = variable.getName()[ FD ]
Line_17 $$ endOffset = myText.length()-->Line_27 $$ if (endOffset >= 0) [ FD ]
Line_22 $$ if (occurence.myName.equals(myLastEndVarName)) -->Line_23 $$ endOffset = occurence.myOffset[ CD ]
Line_5 $$ if (!findVarOccurence(TemplateImpl.END)) -->Line_14 $$ if (myLastEndVarName != null) [ CD ]
Line_30 $$ if (myLastEndVarName.equals(variable.getName()) && variable.isAlwaysStopAt()) -->Line_31 $$ it.remove()[ CD ]
Line_4 $$ List<Variable> variables = getListWithLimit(myVariables)-->Line_28 $$ for (Iterator<Variable> it1 = variables.iterator(); it1.hasNext(); ) [ FD ]
Line_42 $$ TemplateImpl template = new TemplateImpl("", "")-->Line_67 $$ template.setToReformat(myIsToReformat)[ FD ]
Line_7 $$ for (Variable variable : variables) -->Line_30 $$ if (myLastEndVarName.equals(variable.getName()) && variable.isAlwaysStopAt()) [ FD ]
Line_28 $$ for (Iterator<Variable> it1 = variables.iterator(); it1.hasNext(); ) -->Line_29 $$ Variable variable = it1.next()[ CD ]
Line_27 $$ if (endOffset >= 0) -->Line_28 $$ for (Iterator<Variable> it1 = variables.iterator(); it1.hasNext(); ) [ CD ]
Line_15 $$ int endOffset = -1-->Line_23 $$ endOffset = occurence.myOffset[ FD ]
Line_51 $$ if (o1.myOffset < o2.myOffset) -->Line_52 $$ return -1[ CD ]
Line_16 $$ if (myAddEndVariableAtTheEndOfTemplate) -->Line_27 $$ if (endOffset >= 0) [ CD ]
Line_42 $$ TemplateImpl template = new TemplateImpl("", "")-->Line_63 $$ template.addVariableSegment(occurence.myName)[ FD ]
