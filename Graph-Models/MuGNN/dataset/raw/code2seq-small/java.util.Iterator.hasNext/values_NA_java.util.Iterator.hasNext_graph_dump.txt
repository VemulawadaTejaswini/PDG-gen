Line_47 $$ int res = 0-->Line_49 $$ res += vs.size()[ FD ]
Line_48 $$ for (Collection<V> vs : myMap.values()) -->Line_49 $$ res += vs.size()[ FD ]
Line_19 $$ if (itr.hasNext())-->Line_20 $$ return true[ CD ]
Line_29 $$ do -->Line_32 $$ if (!mapIterator.hasNext())[ CD ]
Line_29 $$ do -->Line_34 $$ itr = mapIterator.next().iterator()[ CD ]
Line_10 $$ return new Iterator<V>() -->Line_18 $$ do [ CD ]
Line_18 $$ do -->Line_21 $$ if (!mapIterator.hasNext())[ CD ]
Line_18 $$ do -->Line_19 $$ if (itr.hasNext())[ CD ]
Line_29 $$ do -->Line_30 $$ if (itr.hasNext())[ CD ]
Line_30 $$ if (itr.hasNext())-->Line_31 $$ return itr.next()[ CD ]
Line_5 $$ values = new AbstractCollection<V>() -->Line_58 $$ if (vs.contains(o))[ FD ]
Line_5 $$ values = new AbstractCollection<V>() -->Line_61 $$ return false[ CD ]
Line_10 $$ return new Iterator<V>() -->Line_29 $$ do [ CD ]
Line_5 $$ values = new AbstractCollection<V>() -->Line_51 $$ return res[ CD ]
Line_5 $$ values = new AbstractCollection<V>() -->Line_10 $$ return new Iterator<V>() [ CD ]
Line_21 $$ if (!mapIterator.hasNext())-->Line_22 $$ return false[ CD ]
Line_18 $$ do -->Line_23 $$ itr = mapIterator.next().iterator()[ CD ]
Line_10 $$ return new Iterator<V>() -->Line_40 $$ itr.remove()[ CD ]
Line_58 $$ if (vs.contains(o))-->Line_59 $$ return true[ CD ]
Line_48 $$ for (Collection<V> vs : myMap.values()) -->Line_58 $$ if (vs.contains(o))[ FD ]
Line_57 $$ for (Collection<V> vs : myMap.values()) -->Line_58 $$ if (vs.contains(o))[ FD ]
Line_5 $$ values = new AbstractCollection<V>() -->Line_47 $$ int res = 0[ CD ]
