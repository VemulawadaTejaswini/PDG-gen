Line_4 $$ values = new AbstractCollection<V>() -->Line_6 $$ return new Iterator<V>() [ CD ]
Line_4 $$ values = new AbstractCollection<V>() -->Line_41 $$ if (vs.contains(o))[ FD ]
Line_41 $$ if (vs.contains(o))-->Line_42 $$ return true[ CD ]
Line_19 $$ do -->Line_20 $$ if (itr.hasNext())[ CD ]
Line_19 $$ do -->Line_24 $$ itr = mapIterator.next().iterator()[ CD ]
Line_4 $$ values = new AbstractCollection<V>() -->Line_37 $$ return res[ CD ]
Line_2 $$ public Collection<? extends V> values() -->Line_3 $$ if (values == null) [ CD ]
Line_19 $$ do -->Line_22 $$ if (!mapIterator.hasNext())[ CD ]
Line_13 $$ if (!mapIterator.hasNext())-->Line_14 $$ return false[ CD ]
Line_4 $$ values = new AbstractCollection<V>() -->Line_33 $$ int res = 0[ CD ]
Line_34 $$ for (Collection<V> vs : myMap.values()) -->Line_35 $$ res += vs.size()[ FD ]
Line_20 $$ if (itr.hasNext())-->Line_21 $$ return itr.next()[ CD ]
Line_6 $$ return new Iterator<V>() -->Line_19 $$ do [ CD ]
Line_4 $$ values = new AbstractCollection<V>() -->Line_44 $$ return false[ CD ]
Line_33 $$ int res = 0-->Line_35 $$ res += vs.size()[ FD ]
Line_10 $$ do -->Line_11 $$ if (itr.hasNext())[ CD ]
Line_6 $$ return new Iterator<V>() -->Line_28 $$ itr.remove()[ CD ]
Line_11 $$ if (itr.hasNext())-->Line_12 $$ return true[ CD ]
Line_40 $$ for (Collection<V> vs : myMap.values()) -->Line_41 $$ if (vs.contains(o))[ FD ]
Line_2 $$ public Collection<? extends V> values() -->Line_48 $$ return values[ CD ]
Line_34 $$ for (Collection<V> vs : myMap.values()) -->Line_41 $$ if (vs.contains(o))[ FD ]
Line_10 $$ do -->Line_15 $$ itr = mapIterator.next().iterator()[ CD ]
Line_10 $$ do -->Line_13 $$ if (!mapIterator.hasNext())[ CD ]
Line_6 $$ return new Iterator<V>() -->Line_10 $$ do [ CD ]
