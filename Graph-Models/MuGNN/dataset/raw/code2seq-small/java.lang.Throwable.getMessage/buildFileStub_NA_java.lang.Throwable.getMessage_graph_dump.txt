Line_7 $$ ClassReader reader = new ClassReader(bytes)-->Line_15 $$ reader.accept(visitor, ClassReader.SKIP_FRAMES)[ FD ]
Line_2 $$ public static PsiJavaFileStub buildFileStub(@NotNull VirtualFile file, @NotNull byte[] bytes) throws ClsFormatException -->Line_24 $$ throw new ClsFormatException(file.getPath() + ": " + e.getMessage(), e)[ FD ]
Line_3 $$ if (ClassFileViewProvider.isInnerClass(file)) -->Line_4 $$ return null[ CD ]
Line_9 $$ String className = file.getNameWithoutExtension()-->Line_10 $$ String fqn = StubBuildingVisitor.getFqn(internalName, className, null)[ FD ]
Line_2 $$ public static PsiJavaFileStub buildFileStub(@NotNull VirtualFile file, @NotNull byte[] bytes) throws ClsFormatException -->Line_3 $$ if (ClassFileViewProvider.isInnerClass(file)) [ CD ]
Line_14 $$ StubBuildingVisitor<VirtualFile> visitor = new StubBuildingVisitor<VirtualFile>(file, STRATEGY, stub, 0, className)-->Line_15 $$ reader.accept(visitor, ClassReader.SKIP_FRAMES)[ FD ]
Line_7 $$ ClassReader reader = new ClassReader(bytes)-->Line_8 $$ String internalName = reader.getClassName()[ FD ]
Line_10 $$ String fqn = StubBuildingVisitor.getFqn(internalName, className, null)-->Line_11 $$ String packageName = getPackageName(fqn, className)[ FD ]
Line_16 $$ PsiClassStub<?> result = visitor.getResult()-->Line_17 $$ if (result == null)[ FD ]
Line_2 $$ public static PsiJavaFileStub buildFileStub(@NotNull VirtualFile file, @NotNull byte[] bytes) throws ClsFormatException -->Line_3 $$ if (ClassFileViewProvider.isInnerClass(file)) [ FD ]
Line_17 $$ if (result == null)-->Line_18 $$ return null[ CD ]
Line_9 $$ String className = file.getNameWithoutExtension()-->Line_11 $$ String packageName = getPackageName(fqn, className)[ FD ]
Line_14 $$ StubBuildingVisitor<VirtualFile> visitor = new StubBuildingVisitor<VirtualFile>(file, STRATEGY, stub, 0, className)-->Line_16 $$ PsiClassStub<?> result = visitor.getResult()[ FD ]
Line_8 $$ String internalName = reader.getClassName()-->Line_10 $$ String fqn = StubBuildingVisitor.getFqn(internalName, className, null)[ FD ]
Line_2 $$ public static PsiJavaFileStub buildFileStub(@NotNull VirtualFile file, @NotNull byte[] bytes) throws ClsFormatException -->Line_9 $$ String className = file.getNameWithoutExtension()[ FD ]
