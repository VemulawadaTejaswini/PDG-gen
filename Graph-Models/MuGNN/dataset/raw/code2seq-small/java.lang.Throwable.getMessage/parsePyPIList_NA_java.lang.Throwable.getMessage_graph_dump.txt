Line_8 $$ final String packageName = matcher.group(1)-->Line_10 $$ if (!packageName.contains(" "))[ FD ]
Line_6 $$ final Matcher matcher = PYPI_PATTERN.matcher(URLDecoder.decode(pyPackage, "UTF-8"))-->Line_8 $$ final String packageName = matcher.group(1)[ FD ]
Line_6 $$ final Matcher matcher = PYPI_PATTERN.matcher(URLDecoder.decode(pyPackage, "UTF-8"))-->Line_9 $$ final String packageVersion = matcher.group(2)[ FD ]
Line_4 $$ for (String pyPackage : packages) -->Line_6 $$ final Matcher matcher = PYPI_PATTERN.matcher(URLDecoder.decode(pyPackage, "UTF-8"))[ FD ]
Line_10 $$ if (!packageName.contains(" "))-->Line_11 $$ service.PY_PACKAGES.put(packageName, packageVersion)[ CD ]
Line_9 $$ final String packageVersion = matcher.group(2)-->Line_11 $$ service.PY_PACKAGES.put(packageName, packageVersion)[ FD ]
Line_8 $$ final String packageName = matcher.group(1)-->Line_11 $$ service.PY_PACKAGES.put(packageName, packageVersion)[ FD ]
Line_7 $$ if (matcher.find()) -->Line_8 $$ final String packageName = matcher.group(1)[ CD ]
Line_7 $$ if (matcher.find()) -->Line_10 $$ if (!packageName.contains(" "))[ CD ]
Line_7 $$ if (matcher.find()) -->Line_9 $$ final String packageVersion = matcher.group(2)[ CD ]
Line_6 $$ final Matcher matcher = PYPI_PATTERN.matcher(URLDecoder.decode(pyPackage, "UTF-8"))-->Line_7 $$ if (matcher.find()) [ FD ]
