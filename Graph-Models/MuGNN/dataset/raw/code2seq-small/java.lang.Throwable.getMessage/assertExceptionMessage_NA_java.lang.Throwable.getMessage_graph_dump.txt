Line_2 $$ private static void assertExceptionMessage(Exception exception, @Language("RegExp") String exceptionMessagePattern) -->Line_5 $$ fail(format("Expected exception message '%s' to match '%s'", exception.getMessage(), regex))[ FD ]
Line_2 $$ private static void assertExceptionMessage(Exception exception, @Language("RegExp") String exceptionMessagePattern) -->Line_3 $$ String regex = ".*Access Denied: " + exceptionMessagePattern[ CD ]
Line_4 $$ if (!exception.getMessage().matches(regex)) -->Line_5 $$ fail(format("Expected exception message '%s' to match '%s'", exception.getMessage(), regex))[ CD ]
Line_2 $$ private static void assertExceptionMessage(Exception exception, @Language("RegExp") String exceptionMessagePattern) -->Line_4 $$ if (!exception.getMessage().matches(regex)) [ FD ]
Line_2 $$ private static void assertExceptionMessage(Exception exception, @Language("RegExp") String exceptionMessagePattern) -->Line_4 $$ if (!exception.getMessage().matches(regex)) [ CD ]
Line_3 $$ String regex = ".*Access Denied: " + exceptionMessagePattern-->Line_4 $$ if (!exception.getMessage().matches(regex)) [ FD ]
Line_3 $$ String regex = ".*Access Denied: " + exceptionMessagePattern-->Line_5 $$ fail(format("Expected exception message '%s' to match '%s'", exception.getMessage(), regex))[ FD ]
