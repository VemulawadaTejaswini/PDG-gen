Line_2 $$ protected void doAction() -->Line_40 $$ setDocCommentPolicySetting(getDocCommentPolicy())[ CD ]
Line_11 $$ String nameError = validateName(extractedSuperName)-->Line_12 $$ if (nameError != null) [ FD ]
Line_31 $$ if (errorString[0] != null) -->Line_32 $$ if (errorString[0].length() > 0) [ CD ]
Line_2 $$ protected void doAction() -->Line_41 $$ closeOKAction()[ CD ]
Line_37 $$ if (!checkConflicts())-->Line_38 $$ return[ CD ]
Line_7 $$ if ("".equals(extractedSuperName)) -->Line_11 $$ String nameError = validateName(extractedSuperName)[ CD ]
Line_2 $$ protected void doAction() -->Line_3 $$ final String[] errorString = new String[] [ CD ]
Line_2 $$ protected void doAction() -->Line_7 $$ if ("".equals(extractedSuperName)) [ CD ]
Line_2 $$ protected void doAction() -->Line_5 $$ final String packageName = getTargetPackageName()[ CD ]
Line_7 $$ if ("".equals(extractedSuperName)) -->Line_8 $$ errorString[0] = getExtractedSuperNameNotSpecifiedMessage()[ CD ]
Line_2 $$ protected void doAction() -->Line_39 $$ executeRefactoring()[ CD ]
Line_11 $$ String nameError = validateName(extractedSuperName)-->Line_13 $$ errorString[0] = nameError[ FD ]
Line_7 $$ if ("".equals(extractedSuperName)) -->Line_12 $$ if (nameError != null) [ CD ]
Line_2 $$ protected void doAction() -->Line_31 $$ if (errorString[0] != null) [ CD ]
Line_32 $$ if (errorString[0].length() > 0) -->Line_33 $$ CommonRefactoringUtil.showErrorMessage(myRefactoringName, errorString[0], getHelpId(), myProject)[ CD ]
Line_12 $$ if (nameError != null) -->Line_16 $$ CommandProcessor.getInstance().executeCommand(myProject, new Runnable() [ CD ]
Line_31 $$ if (errorString[0] != null) -->Line_35 $$ return[ CD ]
Line_5 $$ final String packageName = getTargetPackageName()-->Line_6 $$ RecentsManager.getInstance(myProject).registerRecentEntry(getDestinationPackageRecentKey(), packageName)[ FD ]
Line_4 $$ final String extractedSuperName = getExtractedSuperName()-->Line_11 $$ String nameError = validateName(extractedSuperName)[ FD ]
Line_12 $$ if (nameError != null) -->Line_13 $$ errorString[0] = nameError[ CD ]
Line_4 $$ final String extractedSuperName = getExtractedSuperName()-->Line_7 $$ if ("".equals(extractedSuperName)) [ FD ]
Line_2 $$ protected void doAction() -->Line_6 $$ RecentsManager.getInstance(myProject).registerRecentEntry(getDestinationPackageRecentKey(), packageName)[ CD ]
Line_12 $$ if (nameError != null) -->Line_14 $$ myExtractedSuperNameField.requestFocusInWindow()[ CD ]
Line_2 $$ protected void doAction() -->Line_4 $$ final String extractedSuperName = getExtractedSuperName()[ CD ]
Line_2 $$ protected void doAction() -->Line_37 $$ if (!checkConflicts())[ CD ]
Line_7 $$ if ("".equals(extractedSuperName)) -->Line_9 $$ myExtractedSuperNameField.requestFocusInWindow()[ CD ]
