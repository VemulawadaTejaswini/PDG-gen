Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_16 $$ ExecutionFailureInfo failure = stageInfo.getFailureCause()[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_9 $$ assertEquals(stageInfo.getSubStages(), ImmutableList.of())[ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_4 $$ assertEquals(stateMachine.getLocation(), LOCATION)[ CD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_10 $$ assertEquals(stageInfo.getTasks(), ImmutableList.of())[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_8 $$ assertEquals(stageInfo.getSelf(), LOCATION)[ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_12 $$ assertSame(stageInfo.getPlan(), PLAN_FRAGMENT)[ CD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_9 $$ assertEquals(stageInfo.getSubStages(), ImmutableList.of())[ FD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_11 $$ assertEquals(stageInfo.getTypes(), ImmutableList.of(VARCHAR))[ FD ]
Line_16 $$ ExecutionFailureInfo failure = stageInfo.getFailureCause()-->Line_17 $$ assertEquals(failure.getMessage(), FAILED_CAUSE.getMessage())[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_11 $$ assertEquals(stageInfo.getTypes(), ImmutableList.of(VARCHAR))[ CD ]
Line_15 $$ if (expectedState == StageState.FAILED) -->Line_18 $$ assertEquals(failure.getType(), FAILED_CAUSE.getClass().getName())[ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_3 $$ assertEquals(stateMachine.getStageId(), STAGE_ID)[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_14 $$ assertEquals(stageInfo.getState(), expectedState)[ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_3 $$ assertEquals(stateMachine.getStageId(), STAGE_ID)[ CD ]
Line_15 $$ if (expectedState == StageState.FAILED) -->Line_16 $$ ExecutionFailureInfo failure = stageInfo.getFailureCause()[ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_5 $$ assertSame(stateMachine.getSession(), TEST_SESSION)[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_15 $$ if (expectedState == StageState.FAILED) [ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_13 $$ assertEquals(stateMachine.getState(), expectedState)[ FD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_7 $$ assertEquals(stageInfo.getStageId(), STAGE_ID)[ FD ]
Line_16 $$ ExecutionFailureInfo failure = stageInfo.getFailureCause()-->Line_18 $$ assertEquals(failure.getType(), FAILED_CAUSE.getClass().getName())[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_7 $$ assertEquals(stageInfo.getStageId(), STAGE_ID)[ CD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_12 $$ assertSame(stageInfo.getPlan(), PLAN_FRAGMENT)[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_5 $$ assertSame(stateMachine.getSession(), TEST_SESSION)[ CD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_8 $$ assertEquals(stageInfo.getSelf(), LOCATION)[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_15 $$ if (expectedState == StageState.FAILED) [ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_4 $$ assertEquals(stateMachine.getLocation(), LOCATION)[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)[ FD ]
Line_15 $$ if (expectedState == StageState.FAILED) -->Line_17 $$ assertEquals(failure.getMessage(), FAILED_CAUSE.getMessage())[ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)[ CD ]
Line_15 $$ if (expectedState == StageState.FAILED) -->Line_20 $$ assertNull(stageInfo.getFailureCause())[ CD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_20 $$ assertNull(stageInfo.getFailureCause())[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_14 $$ assertEquals(stageInfo.getState(), expectedState)[ FD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_13 $$ assertEquals(stateMachine.getState(), expectedState)[ CD ]
Line_2 $$ private static void assertState(StageStateMachine stateMachine, StageState expectedState) -->Line_10 $$ assertEquals(stageInfo.getTasks(), ImmutableList.of())[ CD ]
Line_6 $$ StageInfo stageInfo = stateMachine.getStageInfo(ImmutableList::<>of, ImmutableList::<>of)-->Line_14 $$ assertEquals(stageInfo.getState(), expectedState)[ FD ]
