Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_26 $$ testAssertions.run()[ CD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_28 $$ testAssertions.run()[ FD ]
Line_4 $$ final VirtualFile target = createProjectSubDir("target")-->Line_20 $$ target.delete(this)[ FD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_6 $$ createProjectSubDir("test-anno")[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_29 $$ resolveFoldersAndImport()[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_3 $$ createStdProjectFolders()[ CD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_12 $$ assertTestSources("project", "src/test/java", "target/generated-test-sources/foo")[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_16 $$ testAssertions.run()[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_28 $$ testAssertions.run()[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_5 $$ createProjectSubDirsWithFile("anno", "target/generated-sources/foo", "target/generated-sources/annotations", "target/generated-sources/test-annotations", "target/generated-test-sources/foo")[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_27 $$ importProject()[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_7 $$ importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>" + "<build>" + " <plugins>" + "  <plugin>" + "   <groupId>org.apache.maven.plugins</groupId>" + "   <artifactId>maven-compiler-plugin</artifactId>" + "   <version>2.3.2</version>" + "   <configuration>" + "     <generatedSourcesDirectory>$[ CD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_10 $$ assertSources("project", "anno", "src/main/java", "target/generated-sources/annotations", "target/generated-sources/foo", "target/generated-sources/test-annotations")[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_30 $$ testAssertions.run()[ CD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_11 $$ assertResources("project", "src/main/resources")[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_4 $$ final VirtualFile target = createProjectSubDir("target")[ CD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_8 $$ final Runnable testAssertions = new Runnable() [ CD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_30 $$ testAssertions.run()[ FD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_13 $$ assertTestResources("project", "src/test/resources")[ CD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_26 $$ testAssertions.run()[ FD ]
Line_2 $$ public void testSourceFoldersOrder() throws Exception -->Line_17 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_8 $$ final Runnable testAssertions = new Runnable() -->Line_16 $$ testAssertions.run()[ FD ]
