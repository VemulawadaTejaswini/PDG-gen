Line_15 $$ if (currentBeanDefinition != null) -->Line_16 $$ applyPropertyToBeanDefinition(name, value)[ CD ]
Line_13 $$ Binding binding = new Binding() -->Line_16 $$ applyPropertyToBeanDefinition(name, value)[ FD ]
Line_15 $$ if (currentBeanDefinition != null) -->Line_18 $$ super.setVariable(name, value)[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_26 $$ shell.evaluate(encodedResource.getReader(), "beans")[ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_30 $$ return getRegistry().getBeanDefinitionCount() - countBefore[ CD ]
Line_7 $$ Closure beans = new Closure(this) -->Line_22 $$ binding.setVariable("beans", beans)[ FD ]
Line_13 $$ Binding binding = new Binding() -->Line_15 $$ if (currentBeanDefinition != null) [ CD ]
Line_13 $$ Binding binding = new Binding() -->Line_18 $$ super.setVariable(name, value)[ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_7 $$ Closure beans = new Closure(this) [ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_28 $$ throw new BeanDefinitionParsingException(new Problem("Error evaluating Groovy script: " + ex.getMessage(), new Location(encodedResource.getResource()), null, ex))[ FD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_5 $$ return this.standardXmlBeanDefinitionReader.loadBeanDefinitions(encodedResource)[ FD ]
Line_4 $$ if (StringUtils.endsWithIgnoreCase(filename, ".xml")) -->Line_5 $$ return this.standardXmlBeanDefinitionReader.loadBeanDefinitions(encodedResource)[ CD ]
Line_7 $$ Closure beans = new Closure(this) -->Line_10 $$ return null[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_3 $$ String filename = encodedResource.getResource().getFilename()[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_4 $$ if (StringUtils.endsWithIgnoreCase(filename, ".xml")) [ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_23 $$ int countBefore = getRegistry().getBeanDefinitionCount()[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_22 $$ binding.setVariable("beans", beans)[ CD ]
Line_3 $$ String filename = encodedResource.getResource().getFilename()-->Line_4 $$ if (StringUtils.endsWithIgnoreCase(filename, ".xml")) [ FD ]
Line_7 $$ Closure beans = new Closure(this) -->Line_9 $$ invokeBeanDefiningClosure((Closure) args[0])[ CD ]
Line_2 $$ public int loadBeanDefinitions(EncodedResource encodedResource) throws BeanDefinitionStoreException -->Line_3 $$ String filename = encodedResource.getResource().getFilename()[ FD ]
