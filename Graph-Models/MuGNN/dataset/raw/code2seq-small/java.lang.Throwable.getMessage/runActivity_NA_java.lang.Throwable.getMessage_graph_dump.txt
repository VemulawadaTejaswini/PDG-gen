Line_20 $$ if (checkCondaUpdateNeeded(project)) -->Line_21 $$ application.executeOnPooledThread(new Runnable() [ CD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_8 $$ if (checkNeeded(project, service)) [ FD ]
Line_3 $$ final Application application = ApplicationManager.getApplication()-->Line_9 $$ application.executeOnPooledThread(new Runnable() [ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_4 $$ if (application.isUnitTestMode()) [ CD ]
Line_3 $$ final Application application = ApplicationManager.getApplication()-->Line_21 $$ application.executeOnPooledThread(new Runnable() [ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_20 $$ if (checkCondaUpdateNeeded(project)) [ CD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_20 $$ if (checkCondaUpdateNeeded(project)) [ FD ]
Line_8 $$ if (checkNeeded(project, service)) -->Line_9 $$ application.executeOnPooledThread(new Runnable() [ CD ]
Line_7 $$ final PyPackageService service = PyPackageService.getInstance()-->Line_8 $$ if (checkNeeded(project, service)) [ FD ]
Line_4 $$ if (application.isUnitTestMode()) -->Line_5 $$ return[ CD ]
Line_3 $$ final Application application = ApplicationManager.getApplication()-->Line_4 $$ if (application.isUnitTestMode()) [ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_7 $$ final PyPackageService service = PyPackageService.getInstance()[ CD ]
Line_21 $$ application.executeOnPooledThread(new Runnable() -->Line_23 $$ PyCondaPackageService.getInstance().updatePackagesCache()[ CD ]
Line_7 $$ final PyPackageService service = PyPackageService.getInstance()-->Line_12 $$ PyPIPackageUtil.INSTANCE.updatePyPICache(service)[ FD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_8 $$ if (checkNeeded(project, service)) [ CD ]
Line_2 $$ public void runActivity(@NotNull final Project project) -->Line_3 $$ final Application application = ApplicationManager.getApplication()[ CD ]
