Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_4 $$ return ComparisonFailureData.create(assertion)[ FD ]
Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_3 $$ if (isComparisonFailure(assertion)) [ FD ]
Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_20 $$ return null[ CD ]
Line_13 $$ final String message = assertion.getMessage()-->Line_16 $$ return ExpectedPatterns.createExceptionNotification(message)[ FD ]
Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_7 $$ final Throwable cause = assertion.getCause()[ FD ]
Line_13 $$ final String message = assertion.getMessage()-->Line_14 $$ if (message != null && acceptedByThreshold(message.length())) [ FD ]
Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_14 $$ if (message != null && acceptedByThreshold(message.length())) [ CD ]
Line_7 $$ final Throwable cause = assertion.getCause()-->Line_9 $$ return ComparisonFailureData.create(cause)[ FD ]
Line_8 $$ if (isComparisonFailure(cause)) -->Line_9 $$ return ComparisonFailureData.create(cause)[ CD ]
Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_13 $$ final String message = assertion.getMessage()[ CD ]
Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_3 $$ if (isComparisonFailure(assertion)) [ CD ]
Line_7 $$ final Throwable cause = assertion.getCause()-->Line_8 $$ if (isComparisonFailure(cause)) [ FD ]
Line_2 $$ static ComparisonFailureData createExceptionNotification(Throwable assertion) -->Line_13 $$ final String message = assertion.getMessage()[ FD ]
Line_3 $$ if (isComparisonFailure(assertion)) -->Line_4 $$ return ComparisonFailureData.create(assertion)[ CD ]
