Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_5 $$ createIndex("test2", Settings.EMPTY, "type", "value", "type=date,format=strict_date_optional_time")[ CD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_8 $$ DateTime dateTime1 = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeZone.UTC)[ CD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_10 $$ FieldStatsResponse response = client().prepareFieldStats().setFields("value").setIndexContraints(new IndexConstraint("value", MIN, GT, String.valueOf(dateTime1.getMillis()), "epoch_millis"), new IndexConstraint("value", MAX, LTE, String.valueOf(dateTime2.getMillis()), "epoch_millis")).setLevel("indices").get()[ CD ]
Line_8 $$ DateTime dateTime1 = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeZone.UTC)-->Line_10 $$ FieldStatsResponse response = client().prepareFieldStats().setFields("value").setIndexContraints(new IndexConstraint("value", MIN, GT, String.valueOf(dateTime1.getMillis()), "epoch_millis"), new IndexConstraint("value", MAX, LTE, String.valueOf(dateTime2.getMillis()), "epoch_millis")).setLevel("indices").get()[ FD ]
Line_10 $$ FieldStatsResponse response = client().prepareFieldStats().setFields("value").setIndexContraints(new IndexConstraint("value", MIN, GT, String.valueOf(dateTime1.getMillis()), "epoch_millis"), new IndexConstraint("value", MAX, LTE, String.valueOf(dateTime2.getMillis()), "epoch_millis")).setLevel("indices").get()-->Line_12 $$ assertThat(response.getIndicesMergedFieldStats().get("test2").get("value").getMinValueAsString(), equalTo("2014-01-02T00:00:00.000Z"))[ FD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_11 $$ assertThat(response.getIndicesMergedFieldStats().size(), equalTo(1))[ CD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_12 $$ assertThat(response.getIndicesMergedFieldStats().get("test2").get("value").getMinValueAsString(), equalTo("2014-01-02T00:00:00.000Z"))[ CD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_3 $$ createIndex("test1", Settings.EMPTY, "type", "value", "type=date,format=strict_date_optional_time")[ CD ]
Line_9 $$ DateTime dateTime2 = new DateTime(2014, 1, 2, 0, 0, 0, 0, DateTimeZone.UTC)-->Line_10 $$ FieldStatsResponse response = client().prepareFieldStats().setFields("value").setIndexContraints(new IndexConstraint("value", MIN, GT, String.valueOf(dateTime1.getMillis()), "epoch_millis"), new IndexConstraint("value", MAX, LTE, String.valueOf(dateTime2.getMillis()), "epoch_millis")).setLevel("indices").get()[ FD ]
Line_8 $$ DateTime dateTime1 = new DateTime(2014, 1, 1, 0, 0, 0, 0, DateTimeZone.UTC)-->Line_14 $$ client().prepareFieldStats().setFields("value").setIndexContraints(new IndexConstraint("value", MIN, GT, String.valueOf(dateTime1.getMillis()), "xyz")).setLevel("indices").get()[ FD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_6 $$ client().prepareIndex("test2", "type").setSource("value", "2014-01-02T00:00:00.000Z").get()[ CD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_9 $$ DateTime dateTime2 = new DateTime(2014, 1, 2, 0, 0, 0, 0, DateTimeZone.UTC)[ CD ]
Line_10 $$ FieldStatsResponse response = client().prepareFieldStats().setFields("value").setIndexContraints(new IndexConstraint("value", MIN, GT, String.valueOf(dateTime1.getMillis()), "epoch_millis"), new IndexConstraint("value", MAX, LTE, String.valueOf(dateTime2.getMillis()), "epoch_millis")).setLevel("indices").get()-->Line_11 $$ assertThat(response.getIndicesMergedFieldStats().size(), equalTo(1))[ FD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_7 $$ client().admin().indices().prepareRefresh().get()[ CD ]
Line_2 $$ public void testDateFiltering_optionalFormat() -->Line_4 $$ client().prepareIndex("test1", "type").setSource("value", "2014-01-01T00:00:00.000Z").get()[ CD ]
