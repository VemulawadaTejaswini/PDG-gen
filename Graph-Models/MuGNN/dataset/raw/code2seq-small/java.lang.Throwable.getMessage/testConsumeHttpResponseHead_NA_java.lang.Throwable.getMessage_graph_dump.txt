Line_4 $$ String wrongStatusLine = "Wrong status line"-->Line_6 $$ httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(wrongStatusLine.getBytes("US-ASCII"))))[ FD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_4 $$ String wrongStatusLine = "Wrong status line"[ CD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_3 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))[ CD ]
Line_3 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_6 $$ httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(wrongStatusLine.getBytes("US-ASCII"))))[ FD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_11 $$ String responseContentWrongEnding = "HTTP/1.1 200 OK\n"[ CD ]
Line_3 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_14 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentKeepAlive.getBytes("US-ASCII")))))[ FD ]
Line_3 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_12 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongEnding.getBytes("US-ASCII")))))[ FD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_18 $$ Assert.assertTrue(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentCorrectClose.getBytes("US-ASCII")))))[ CD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_16 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongClose.getBytes("US-ASCII")))))[ CD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_17 $$ String responseContentCorrectClose = "HTTP/1.1 200 OK\nkey:value\nconnection:close\n\n"[ CD ]
Line_3 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_16 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongClose.getBytes("US-ASCII")))))[ FD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_12 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongEnding.getBytes("US-ASCII")))))[ CD ]
Line_13 $$ String responseContentKeepAlive = "HTTP/1.1 200 OK\n\n"-->Line_14 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentKeepAlive.getBytes("US-ASCII")))))[ FD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_15 $$ String responseContentWrongClose = "HTTP/1.1 200 OK\nconnection:wrong\n\n"[ CD ]
Line_15 $$ String responseContentWrongClose = "HTTP/1.1 200 OK\nconnection:wrong\n\n"-->Line_16 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongClose.getBytes("US-ASCII")))))[ FD ]
Line_11 $$ String responseContentWrongEnding = "HTTP/1.1 200 OK\n"-->Line_12 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentWrongEnding.getBytes("US-ASCII")))))[ FD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_14 $$ Assert.assertFalse(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentKeepAlive.getBytes("US-ASCII")))))[ CD ]
Line_2 $$ public void testConsumeHttpResponseHead() throws Exception -->Line_13 $$ String responseContentKeepAlive = "HTTP/1.1 200 OK\n\n"[ CD ]
Line_3 $$ HttpClientSPIAgent httpClientSPIAgent = new HttpClientSPIAgent(_spiConfiguration, new MockRegistrationReference(new MockIntraband()))-->Line_18 $$ Assert.assertTrue(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentCorrectClose.getBytes("US-ASCII")))))[ FD ]
Line_17 $$ String responseContentCorrectClose = "HTTP/1.1 200 OK\nkey:value\nconnection:close\n\n"-->Line_18 $$ Assert.assertTrue(httpClientSPIAgent.consumeHttpResponseHead(new DataInputStream(new UnsyncByteArrayInputStream(responseContentCorrectClose.getBytes("US-ASCII")))))[ FD ]
