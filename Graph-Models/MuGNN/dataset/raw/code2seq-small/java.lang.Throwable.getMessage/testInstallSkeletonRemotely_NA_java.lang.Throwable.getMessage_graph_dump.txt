Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_5 $$ IntrabandProxyInstallationUtil.checkProxyMethodSignatures(skeletonProxyMethodSignatures, _stubProxyMethodSignatures)[ CD ]
Line_16 $$ throwable = throwable.getCause()-->Line_19 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_10 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, null)-->Line_12 $$ skeletonProxyMethodSignaturesFuture.get()[ FD ]
Line_6 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())-->Line_7 $$ Assert.assertSame(AsyncIntrabandProxySkeleton.class, intrabandProxySkeleton.getClass())[ FD ]
Line_15 $$ Throwable throwable = ee.getCause()-->Line_19 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_16 $$ throwable = throwable.getCause()-->Line_20 $$ Assert.assertEquals("Target locator is null", throwable.getMessage())[ FD ]
Line_3 $$ Future<String[]> skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, TestClass.class, _targetLocator)-->Line_23 $$ skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()[ FD ]
Line_22 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, _targetLocator)-->Line_23 $$ skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_6 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())[ CD ]
Line_15 $$ Throwable throwable = ee.getCause()-->Line_20 $$ Assert.assertEquals("Target locator is null", throwable.getMessage())[ FD ]
Line_4 $$ String[] skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()-->Line_5 $$ IntrabandProxyInstallationUtil.checkProxyMethodSignatures(skeletonProxyMethodSignatures, _stubProxyMethodSignatures)[ FD ]
Line_17 $$ throwable = throwable.getCause()-->Line_19 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_15 $$ Throwable throwable = ee.getCause()-->Line_18 $$ throwable = throwable.getCause()[ FD ]
Line_4 $$ String[] skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()-->Line_23 $$ skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_4 $$ String[] skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()[ CD ]
Line_6 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())-->Line_9 $$ Assert.assertEquals(_targetLocator, ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_targetLocator"))[ FD ]
Line_18 $$ throwable = throwable.getCause()-->Line_20 $$ Assert.assertEquals("Target locator is null", throwable.getMessage())[ FD ]
Line_4 $$ String[] skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()-->Line_25 $$ IntrabandProxyInstallationUtil.checkProxyMethodSignatures(skeletonProxyMethodSignatures, new String[] [ FD ]
Line_3 $$ Future<String[]> skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, TestClass.class, _targetLocator)-->Line_4 $$ String[] skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_7 $$ Assert.assertSame(AsyncIntrabandProxySkeleton.class, intrabandProxySkeleton.getClass())[ CD ]
Line_15 $$ Throwable throwable = ee.getCause()-->Line_16 $$ throwable = throwable.getCause()[ FD ]
Line_16 $$ throwable = throwable.getCause()-->Line_17 $$ throwable = throwable.getCause()[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_9 $$ Assert.assertEquals(_targetLocator, ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_targetLocator"))[ CD ]
Line_10 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, null)-->Line_22 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, _targetLocator)[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_22 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, _targetLocator)[ CD ]
Line_10 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, null)-->Line_23 $$ skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()[ FD ]
Line_3 $$ Future<String[]> skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, TestClass.class, _targetLocator)-->Line_12 $$ skeletonProxyMethodSignaturesFuture.get()[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_3 $$ Future<String[]> skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, TestClass.class, _targetLocator)[ CD ]
Line_8 $$ intrabandProxySkeleton = ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_intrabandProxySkeleton")-->Line_9 $$ Assert.assertEquals(_targetLocator, ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_targetLocator"))[ FD ]
Line_17 $$ throwable = throwable.getCause()-->Line_20 $$ Assert.assertEquals("Target locator is null", throwable.getMessage())[ FD ]
Line_3 $$ Future<String[]> skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, TestClass.class, _targetLocator)-->Line_10 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, null)[ FD ]
Line_23 $$ skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()-->Line_25 $$ IntrabandProxyInstallationUtil.checkProxyMethodSignatures(skeletonProxyMethodSignatures, new String[] [ FD ]
Line_16 $$ throwable = throwable.getCause()-->Line_18 $$ throwable = throwable.getCause()[ FD ]
Line_18 $$ throwable = throwable.getCause()-->Line_19 $$ Assert.assertSame(NullPointerException.class, throwable.getClass())[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_8 $$ intrabandProxySkeleton = ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_intrabandProxySkeleton")[ CD ]
Line_17 $$ throwable = throwable.getCause()-->Line_18 $$ throwable = throwable.getCause()[ FD ]
Line_15 $$ Throwable throwable = ee.getCause()-->Line_17 $$ throwable = throwable.getCause()[ FD ]
Line_3 $$ Future<String[]> skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, TestClass.class, _targetLocator)-->Line_22 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, _targetLocator)[ FD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_23 $$ skeletonProxyMethodSignatures = skeletonProxyMethodSignaturesFuture.get()[ CD ]
Line_2 $$ public void testInstallSkeletonRemotely() throws Exception -->Line_10 $$ skeletonProxyMethodSignaturesFuture = IntrabandProxyInstallationUtil.installSkeleton(_mockRegistrationReference, _classLoader, TestClass.class, null)[ CD ]
Line_6 $$ IntrabandProxySkeleton intrabandProxySkeleton = IntrabandProxySkeletonRegistryUtil.get(TestClass.class.getName())-->Line_8 $$ intrabandProxySkeleton = ReflectionTestUtil.getFieldValue(intrabandProxySkeleton, "_intrabandProxySkeleton")[ FD ]
