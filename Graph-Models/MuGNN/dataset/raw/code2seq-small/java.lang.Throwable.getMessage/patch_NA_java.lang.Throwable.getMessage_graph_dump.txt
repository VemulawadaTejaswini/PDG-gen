Line_6 $$ FileInputStream targetInputStream = null-->Line_25 $$ StreamUtil.cleanUp(targetInputStream)[ FD ]
Line_15 $$ patchedFilePath = Files.createTempFile(String.valueOf(targetFilePath.getFileName()), ".tmp")-->Line_16 $$ patchedFileOutputStream = Files.newOutputStream(patchedFilePath)[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_8 $$ Path patchedFilePath = null[ CD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_13 $$ targetInputStream = new FileInputStream(targetFilePath.toString())[ FD ]
Line_11 $$ ReadableByteChannel deltaReadableByteChannel = null-->Line_29 $$ StreamUtil.cleanUp(deltaReadableByteChannel)[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_10 $$ WritableByteChannel patchedWritableByteChannel = null[ CD ]
Line_10 $$ WritableByteChannel patchedWritableByteChannel = null-->Line_28 $$ StreamUtil.cleanUp(patchedWritableByteChannel)[ FD ]
Line_11 $$ ReadableByteChannel deltaReadableByteChannel = null-->Line_18 $$ deltaReadableByteChannel = Channels.newChannel(deltaInputStream)[ FD ]
Line_14 $$ targetFileChannel = targetInputStream.getChannel()-->Line_20 $$ DeltaUtil.patch(targetFileChannel, patchedWritableByteChannel, deltaByteChannelReader)[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_15 $$ patchedFilePath = Files.createTempFile(String.valueOf(targetFilePath.getFileName()), ".tmp")[ FD ]
Line_9 $$ OutputStream patchedFileOutputStream = null-->Line_27 $$ StreamUtil.cleanUp(patchedFileOutputStream)[ FD ]
Line_18 $$ deltaReadableByteChannel = Channels.newChannel(deltaInputStream)-->Line_29 $$ StreamUtil.cleanUp(deltaReadableByteChannel)[ FD ]
Line_10 $$ WritableByteChannel patchedWritableByteChannel = null-->Line_17 $$ patchedWritableByteChannel = Channels.newChannel(patchedFileOutputStream)[ FD ]
Line_7 $$ FileChannel targetFileChannel = null-->Line_20 $$ DeltaUtil.patch(targetFileChannel, patchedWritableByteChannel, deltaByteChannelReader)[ FD ]
Line_6 $$ FileInputStream targetInputStream = null-->Line_13 $$ targetInputStream = new FileInputStream(targetFilePath.toString())[ FD ]
Line_6 $$ FileInputStream targetInputStream = null-->Line_14 $$ targetFileChannel = targetInputStream.getChannel()[ FD ]
Line_13 $$ targetInputStream = new FileInputStream(targetFilePath.toString())-->Line_14 $$ targetFileChannel = targetInputStream.getChannel()[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_3 $$ if (Files.notExists(targetFilePath)) [ CD ]
Line_13 $$ targetInputStream = new FileInputStream(targetFilePath.toString())-->Line_25 $$ StreamUtil.cleanUp(targetInputStream)[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_11 $$ ReadableByteChannel deltaReadableByteChannel = null[ CD ]
Line_16 $$ patchedFileOutputStream = Files.newOutputStream(patchedFilePath)-->Line_17 $$ patchedWritableByteChannel = Channels.newChannel(patchedFileOutputStream)[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_32 $$ Files.move(patchedFilePath, targetFilePath, StandardCopyOption.REPLACE_EXISTING)[ FD ]
Line_17 $$ patchedWritableByteChannel = Channels.newChannel(patchedFileOutputStream)-->Line_20 $$ DeltaUtil.patch(targetFileChannel, patchedWritableByteChannel, deltaByteChannelReader)[ FD ]
Line_16 $$ patchedFileOutputStream = Files.newOutputStream(patchedFilePath)-->Line_27 $$ StreamUtil.cleanUp(patchedFileOutputStream)[ FD ]
Line_9 $$ OutputStream patchedFileOutputStream = null-->Line_16 $$ patchedFileOutputStream = Files.newOutputStream(patchedFilePath)[ FD ]
Line_8 $$ Path patchedFilePath = null-->Line_32 $$ Files.move(patchedFilePath, targetFilePath, StandardCopyOption.REPLACE_EXISTING)[ FD ]
Line_7 $$ FileChannel targetFileChannel = null-->Line_26 $$ StreamUtil.cleanUp(targetFileChannel)[ FD ]
Line_8 $$ Path patchedFilePath = null-->Line_16 $$ patchedFileOutputStream = Files.newOutputStream(patchedFilePath)[ FD ]
Line_15 $$ patchedFilePath = Files.createTempFile(String.valueOf(targetFilePath.getFileName()), ".tmp")-->Line_32 $$ Files.move(patchedFilePath, targetFilePath, StandardCopyOption.REPLACE_EXISTING)[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_7 $$ FileChannel targetFileChannel = null[ CD ]
Line_19 $$ ByteChannelReader deltaByteChannelReader = new ByteChannelReader(deltaReadableByteChannel)-->Line_20 $$ DeltaUtil.patch(targetFileChannel, patchedWritableByteChannel, deltaByteChannelReader)[ FD ]
Line_17 $$ patchedWritableByteChannel = Channels.newChannel(patchedFileOutputStream)-->Line_28 $$ StreamUtil.cleanUp(patchedWritableByteChannel)[ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_18 $$ deltaReadableByteChannel = Channels.newChannel(deltaInputStream)[ FD ]
Line_8 $$ Path patchedFilePath = null-->Line_15 $$ patchedFilePath = Files.createTempFile(String.valueOf(targetFilePath.getFileName()), ".tmp")[ FD ]
Line_3 $$ if (Files.notExists(targetFilePath)) -->Line_4 $$ return null[ CD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_3 $$ if (Files.notExists(targetFilePath)) [ FD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_6 $$ FileInputStream targetInputStream = null[ CD ]
Line_2 $$ public static Path patch(Path targetFilePath, InputStream deltaInputStream) -->Line_9 $$ OutputStream patchedFileOutputStream = null[ CD ]
Line_9 $$ OutputStream patchedFileOutputStream = null-->Line_17 $$ patchedWritableByteChannel = Channels.newChannel(patchedFileOutputStream)[ FD ]
Line_10 $$ WritableByteChannel patchedWritableByteChannel = null-->Line_20 $$ DeltaUtil.patch(targetFileChannel, patchedWritableByteChannel, deltaByteChannelReader)[ FD ]
Line_14 $$ targetFileChannel = targetInputStream.getChannel()-->Line_26 $$ StreamUtil.cleanUp(targetFileChannel)[ FD ]
Line_7 $$ FileChannel targetFileChannel = null-->Line_14 $$ targetFileChannel = targetInputStream.getChannel()[ FD ]
