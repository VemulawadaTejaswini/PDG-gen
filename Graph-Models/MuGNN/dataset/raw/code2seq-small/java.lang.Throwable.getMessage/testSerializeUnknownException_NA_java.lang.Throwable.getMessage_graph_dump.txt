Line_3 $$ BytesStreamOutput out = new BytesStreamOutput()-->Line_7 $$ StreamInput in = StreamInput.wrap(out.bytes())[ FD ]
Line_11 $$ ParsingException e = (ParsingException) throwable.getCause()-->Line_15 $$ assertEquals(ParsingException.getColumnNumber(), e.getColumnNumber())[ FD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_11 $$ ParsingException e = (ParsingException) throwable.getCause()[ CD ]
Line_11 $$ ParsingException e = (ParsingException) throwable.getCause()-->Line_12 $$ assertEquals(ParsingException.getIndex(), e.getIndex())[ FD ]
Line_4 $$ ParsingException ParsingException = new ParsingException(1, 2, "foobar", null)-->Line_15 $$ assertEquals(ParsingException.getColumnNumber(), e.getColumnNumber())[ FD ]
Line_11 $$ ParsingException e = (ParsingException) throwable.getCause()-->Line_13 $$ assertEquals(ParsingException.getMessage(), e.getMessage())[ FD ]
Line_8 $$ Throwable throwable = in.readThrowable()-->Line_11 $$ ParsingException e = (ParsingException) throwable.getCause()[ FD ]
Line_5 $$ Throwable ex = new Throwable("wtf", ParsingException)-->Line_6 $$ out.writeThrowable(ex)[ FD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_14 $$ assertEquals(ParsingException.getLineNumber(), e.getLineNumber())[ CD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_5 $$ Throwable ex = new Throwable("wtf", ParsingException)[ CD ]
Line_8 $$ Throwable throwable = in.readThrowable()-->Line_9 $$ assertEquals("wtf", throwable.getMessage())[ FD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_13 $$ assertEquals(ParsingException.getMessage(), e.getMessage())[ CD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_8 $$ Throwable throwable = in.readThrowable()[ CD ]
Line_3 $$ BytesStreamOutput out = new BytesStreamOutput()-->Line_6 $$ out.writeThrowable(ex)[ FD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_9 $$ assertEquals("wtf", throwable.getMessage())[ CD ]
Line_7 $$ StreamInput in = StreamInput.wrap(out.bytes())-->Line_8 $$ Throwable throwable = in.readThrowable()[ FD ]
Line_4 $$ ParsingException ParsingException = new ParsingException(1, 2, "foobar", null)-->Line_13 $$ assertEquals(ParsingException.getMessage(), e.getMessage())[ FD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_10 $$ assertTrue(throwable instanceof ElasticsearchException)[ CD ]
Line_11 $$ ParsingException e = (ParsingException) throwable.getCause()-->Line_14 $$ assertEquals(ParsingException.getLineNumber(), e.getLineNumber())[ FD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_7 $$ StreamInput in = StreamInput.wrap(out.bytes())[ CD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_12 $$ assertEquals(ParsingException.getIndex(), e.getIndex())[ CD ]
Line_4 $$ ParsingException ParsingException = new ParsingException(1, 2, "foobar", null)-->Line_14 $$ assertEquals(ParsingException.getLineNumber(), e.getLineNumber())[ FD ]
Line_4 $$ ParsingException ParsingException = new ParsingException(1, 2, "foobar", null)-->Line_12 $$ assertEquals(ParsingException.getIndex(), e.getIndex())[ FD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_3 $$ BytesStreamOutput out = new BytesStreamOutput()[ CD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_6 $$ out.writeThrowable(ex)[ CD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_15 $$ assertEquals(ParsingException.getColumnNumber(), e.getColumnNumber())[ CD ]
Line_2 $$ public void testSerializeUnknownException() throws IOException -->Line_4 $$ ParsingException ParsingException = new ParsingException(1, 2, "foobar", null)[ CD ]
