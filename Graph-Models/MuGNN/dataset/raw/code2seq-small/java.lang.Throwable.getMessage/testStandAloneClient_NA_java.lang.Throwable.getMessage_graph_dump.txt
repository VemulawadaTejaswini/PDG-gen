Line_3 $$ Client client = new Client(LongWritable.class, conf)-->Line_6 $$ client.call(new LongWritable(RANDOM.nextLong()), address, null, null, 0, conf)[ FD ]
Line_9 $$ String message = e.getMessage()-->Line_11 $$ assertTrue("Did not find " + addressText + " in " + message, message.contains(addressText))[ FD ]
Line_12 $$ Throwable cause = e.getCause()-->Line_13 $$ assertNotNull("No nested exception in " + e, cause)[ FD ]
Line_12 $$ Throwable cause = e.getCause()-->Line_14 $$ String causeText = cause.getMessage()[ FD ]
Line_4 $$ InetSocketAddress address = new InetSocketAddress("127.0.0.1", 10)-->Line_10 $$ String addressText = address.getHostName() + ":" + address.getPort()[ FD ]
Line_10 $$ String addressText = address.getHostName() + ":" + address.getPort()-->Line_11 $$ assertTrue("Did not find " + addressText + " in " + message, message.contains(addressText))[ FD ]
Line_4 $$ InetSocketAddress address = new InetSocketAddress("127.0.0.1", 10)-->Line_6 $$ client.call(new LongWritable(RANDOM.nextLong()), address, null, null, 0, conf)[ FD ]
Line_2 $$ public void testStandAloneClient() throws IOException -->Line_4 $$ InetSocketAddress address = new InetSocketAddress("127.0.0.1", 10)[ CD ]
Line_9 $$ String message = e.getMessage()-->Line_15 $$ assertTrue("Did not find " + causeText + " in " + message, message.contains(causeText))[ FD ]
Line_2 $$ public void testStandAloneClient() throws IOException -->Line_3 $$ Client client = new Client(LongWritable.class, conf)[ CD ]
Line_14 $$ String causeText = cause.getMessage()-->Line_15 $$ assertTrue("Did not find " + causeText + " in " + message, message.contains(causeText))[ FD ]
