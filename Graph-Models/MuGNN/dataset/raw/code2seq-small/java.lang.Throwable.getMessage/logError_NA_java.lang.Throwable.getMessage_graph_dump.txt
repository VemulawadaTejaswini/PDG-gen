Line_22 $$ sb = new StringBundler()-->Line_64 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_66 $$ sb.append(_screenshotCount)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_71 $$ log("descriptionLog", sb.toString(), "descriptionLog")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_69 $$ sb.append(".jpg\" width=\"630\" />")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_62 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_69 $$ sb.append(".jpg\" width=\"630\" />")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_5 $$ String throwableMessage = throwable.getMessage()[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_47 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_24 $$ sb.append("Command failure <b>")[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_53 $$ sb.append(_screenshotErrorCount - 1)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_67 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ CD ]
Line_81 $$ sb = new StringBundler()-->Line_94 $$ sb.append("\" ")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_60 $$ sb.append("<h3>Screenshot of action after failure</h3>")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_71 $$ log("descriptionLog", sb.toString(), "descriptionLog")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_89 $$ sb.append(" with parameters ")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_67 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_64 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_92 $$ sb.append("\"")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_8 $$ sb.append("errorCount.innerHTML = '")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_26 $$ sb.append("</b>")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_3 $$ send("", "fail")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_49 $$ sb.append("<img alt=\"")[ FD ]
Line_16 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\n", "\\n")-->Line_18 $$ sb.append(stackTrace)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_61 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_80 $$ if (failTest) -->Line_97 $$ sb.append(": ")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_94 $$ sb.append("\" ")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_9 $$ sb.append(_errorCount)[ CD ]
Line_81 $$ sb = new StringBundler()-->Line_97 $$ sb.append(": ")[ FD ]
Line_28 $$ if (arguments.length == 1) -->Line_29 $$ sb.append(" with parameter ")[ CD ]
Line_77 $$ webElementText = webElement.getText()-->Line_75 $$ while (webElementText.equals("Disable Pause After Error")) [ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_70 $$ sb.append("<br />")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_62 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_84 $$ sb.append("\"")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_99 $$ BaseTestCase.fail(sb.toString())[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_56 $$ log("errorLog", sb.toString(), "errorLog")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_44 $$ sb.append("<h3>Screenshot of action before failure</h3>")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_41 $$ log("actionCommandLog", sb.toString(), "selenium")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_5 $$ String throwableMessage = throwable.getMessage()[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_48 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_60 $$ sb.append("<h3>Screenshot of action after failure</h3>")[ CD ]
Line_59 $$ sb = new StringBundler()-->Line_64 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_48 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_87 $$ sb.append(" with parameter ")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_94 $$ sb.append("\" ")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_94 $$ sb.append("\" ")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_46 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_51 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_63 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_86 $$ if (arguments.length == 1) -->Line_88 $$ if (arguments.length > 1) [ CD ]
Line_88 $$ if (arguments.length > 1) -->Line_89 $$ sb.append(" with parameters ")[ CD ]
Line_81 $$ sb = new StringBundler()-->Line_93 $$ sb.append(HtmlUtil.escape(String.valueOf(argument)))[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_69 $$ sb.append(".jpg\" width=\"630\" />")[ FD ]
Line_15 $$ stackTrace = StringEscapeUtils.escapeEcmaScript(stackTrace)-->Line_18 $$ sb.append(stackTrace)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_21 $$ _javascriptExecutor.executeScript(sb.toString())[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_45 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_69 $$ sb.append(".jpg\" width=\"630\" />")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_20 $$ sb.append("errorList.appendChild(newLine);")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_48 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_71 $$ log("descriptionLog", sb.toString(), "descriptionLog")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_7 $$ sb.append("errorCount = window.document.getElementById('errorCount');")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_83 $$ sb.append(method.getName())[ FD ]
Line_15 $$ stackTrace = StringEscapeUtils.escapeEcmaScript(stackTrace)-->Line_16 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\n", "\\n")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_62 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_85 $$ if (arguments != null) -->Line_86 $$ if (arguments.length == 1) [ CD ]
Line_59 $$ sb = new StringBundler()-->Line_87 $$ sb.append(" with parameter ")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_99 $$ BaseTestCase.fail(sb.toString())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_66 $$ sb.append(_screenshotCount)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_50 $$ sb.append(_screenshotCount)[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_8 $$ sb.append("errorCount.innerHTML = '")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_45 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_84 $$ sb.append("\"")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_71 $$ log("descriptionLog", sb.toString(), "descriptionLog")[ FD ]
Line_76 $$ webElement = _webDriver.findElement(By.id("pauseError"))-->Line_77 $$ webElementText = webElement.getText()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_52 $$ sb.append("ScreenshotBeforeAction")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_89 $$ sb.append(" with parameters ")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_70 $$ sb.append("<br />")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_75 $$ while (webElementText.equals("Disable Pause After Error")) [ CD ]
Line_73 $$ WebElement webElement = _webDriver.findElement(By.id("pauseError"))-->Line_77 $$ webElementText = webElement.getText()[ FD ]
Line_80 $$ if (failTest) -->Line_83 $$ sb.append(method.getName())[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_44 $$ sb.append("<h3>Screenshot of action before failure</h3>")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_19 $$ sb.append("';")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_29 $$ sb.append(" with parameter ")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_20 $$ sb.append("errorList.appendChild(newLine);")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_89 $$ sb.append(" with parameters ")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_97 $$ sb.append(": ")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_71 $$ log("descriptionLog", sb.toString(), "descriptionLog")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_82 $$ sb.append("Command failure \"")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_41 $$ log("actionCommandLog", sb.toString(), "selenium")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_56 $$ log("errorLog", sb.toString(), "errorLog")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_83 $$ sb.append(method.getName())[ FD ]
Line_74 $$ String webElementText = webElement.getText()-->Line_75 $$ while (webElementText.equals("Disable Pause After Error")) [ FD ]
Line_5 $$ String throwableMessage = throwable.getMessage()-->Line_40 $$ sb.append(throwableMessage)[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_45 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_92 $$ sb.append("\"")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_43 $$ sb = new StringBundler()[ FD ]
Line_73 $$ WebElement webElement = _webDriver.findElement(By.id("pauseError"))-->Line_76 $$ webElement = _webDriver.findElement(By.id("pauseError"))[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_55 $$ sb.append("<br />")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_63 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_80 $$ if (failTest) -->Line_84 $$ sb.append("\"")[ CD ]
Line_75 $$ while (webElementText.equals("Disable Pause After Error")) -->Line_77 $$ webElementText = webElement.getText()[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_69 $$ sb.append(".jpg\" width=\"630\" />")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_55 $$ sb.append("<br />")[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_59 $$ sb = new StringBundler()[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_14 $$ String stackTrace = generateStackTrace(throwable)[ CD ]
Line_17 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\t", "\\t")-->Line_18 $$ sb.append(stackTrace)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_61 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_63 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_31 $$ sb.append(" with parameters ")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_72 $$ log("errorLog", sb.toString(), "errorLog")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_39 $$ sb.append(": ")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_72 $$ log("errorLog", sb.toString(), "errorLog")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_74 $$ String webElementText = webElement.getText()[ CD ]
Line_59 $$ sb = new StringBundler()-->Line_83 $$ sb.append(method.getName())[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_44 $$ sb.append("<h3>Screenshot of action before failure</h3>")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_72 $$ log("errorLog", sb.toString(), "errorLog")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_40 $$ sb.append(throwableMessage)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_11 $$ sb.append("errorList = window.document.getElementById('errorList');")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_46 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_16 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\n", "\\n")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_80 $$ if (failTest) [ CD ]
Line_43 $$ sb = new StringBundler()-->Line_70 $$ sb.append("<br />")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_83 $$ sb.append(method.getName())[ FD ]
Line_15 $$ stackTrace = StringEscapeUtils.escapeEcmaScript(stackTrace)-->Line_17 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\t", "\\t")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_45 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_12 $$ sb.append("var newLine = window.document.createElement('div');")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_51 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_62 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_48 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_98 $$ sb.append(throwableMessage)[ FD ]
Line_27 $$ if (arguments != null) -->Line_28 $$ if (arguments.length == 1) [ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_84 $$ sb.append("\"")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_10 $$ sb.append("';")[ CD ]
Line_73 $$ WebElement webElement = _webDriver.findElement(By.id("pauseError"))-->Line_74 $$ String webElementText = webElement.getText()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_44 $$ sb.append("<h3>Screenshot of action before failure</h3>")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_35 $$ sb.append(String.valueOf(argument))[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_46 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_64 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_81 $$ sb = new StringBundler()-->Line_83 $$ sb.append(method.getName())[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_51 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_59 $$ sb = new StringBundler()[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_49 $$ sb.append("<img alt=\"")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_18 $$ sb.append(stackTrace)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_87 $$ sb.append(" with parameter ")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_7 $$ sb.append("errorCount = window.document.getElementById('errorCount');")[ CD ]
Line_81 $$ sb = new StringBundler()-->Line_92 $$ sb.append("\"")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_11 $$ sb.append("errorList = window.document.getElementById('errorList');")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_99 $$ BaseTestCase.fail(sb.toString())[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_54 $$ sb.append(".jpg\" width=\"630\" />")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_67 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_23 $$ sb.append("<font color=\"red\">")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_34 $$ sb.append("<b>")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_25 $$ sb.append(method.getName())[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_56 $$ log("errorLog", sb.toString(), "errorLog")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_25 $$ sb.append(method.getName())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_22 $$ sb = new StringBundler()[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_39 $$ sb.append(": ")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_81 $$ sb = new StringBundler()[ FD ]
Line_5 $$ String throwableMessage = throwable.getMessage()-->Line_98 $$ sb.append(throwableMessage)[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_66 $$ sb.append(_screenshotCount)[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_98 $$ sb.append(throwableMessage)[ FD ]
Line_81 $$ sb = new StringBundler()-->Line_98 $$ sb.append(throwableMessage)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_81 $$ sb = new StringBundler()[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_14 $$ String stackTrace = generateStackTrace(throwable)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_31 $$ sb.append(" with parameters ")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_85 $$ if (arguments != null) [ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_43 $$ sb = new StringBundler()[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_97 $$ sb.append(": ")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_52 $$ sb.append("ScreenshotBeforeAction")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_26 $$ sb.append("</b>")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_66 $$ sb.append(_screenshotCount)[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_68 $$ sb.append(_screenshotCount)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_53 $$ sb.append(_screenshotErrorCount - 1)[ CD ]
Line_59 $$ sb = new StringBundler()-->Line_61 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_83 $$ sb.append(method.getName())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_23 $$ sb.append("<font color=\"red\">")[ FD ]
Line_80 $$ if (failTest) -->Line_99 $$ BaseTestCase.fail(sb.toString())[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_97 $$ sb.append(": ")[ FD ]
Line_33 $$ for (Object argument : arguments) -->Line_93 $$ sb.append(HtmlUtil.escape(String.valueOf(argument)))[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_61 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_36 $$ sb.append("</b> ")[ FD ]
Line_14 $$ String stackTrace = generateStackTrace(throwable)-->Line_15 $$ stackTrace = StringEscapeUtils.escapeEcmaScript(stackTrace)[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_63 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_68 $$ sb.append(_screenshotCount)[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_50 $$ sb.append(_screenshotCount)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_68 $$ sb.append(_screenshotCount)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_22 $$ sb = new StringBundler()[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_60 $$ sb.append("<h3>Screenshot of action after failure</h3>")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_15 $$ stackTrace = StringEscapeUtils.escapeEcmaScript(stackTrace)[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_92 $$ sb.append("\"")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_65 $$ sb.append("<img alt=\"")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_27 $$ if (arguments != null) [ FD ]
Line_86 $$ if (arguments.length == 1) -->Line_87 $$ sb.append(" with parameter ")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_10 $$ sb.append("';")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_56 $$ log("errorLog", sb.toString(), "errorLog")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_59 $$ sb = new StringBundler()[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_59 $$ sb = new StringBundler()[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_25 $$ sb.append(method.getName())[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_47 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_40 $$ sb.append(throwableMessage)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_53 $$ sb.append(_screenshotErrorCount - 1)[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_23 $$ sb.append("<font color=\"red\">")[ FD ]
Line_74 $$ String webElementText = webElement.getText()-->Line_77 $$ webElementText = webElement.getText()[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_93 $$ sb.append(HtmlUtil.escape(String.valueOf(argument)))[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_41 $$ log("actionCommandLog", sb.toString(), "selenium")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_21 $$ _javascriptExecutor.executeScript(sb.toString())[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_61 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_36 $$ sb.append("</b> ")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_97 $$ sb.append(": ")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_9 $$ sb.append(_errorCount)[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_47 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_6 $$ StringBundler sb = new StringBundler()[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_66 $$ sb.append(_screenshotCount)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_93 $$ sb.append(HtmlUtil.escape(String.valueOf(argument)))[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_27 $$ if (arguments != null) [ CD ]
Line_43 $$ sb = new StringBundler()-->Line_82 $$ sb.append("Command failure \"")[ FD ]
Line_81 $$ sb = new StringBundler()-->Line_87 $$ sb.append(" with parameter ")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_93 $$ sb.append(HtmlUtil.escape(String.valueOf(argument)))[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_99 $$ BaseTestCase.fail(sb.toString())[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_81 $$ sb = new StringBundler()[ FD ]
Line_75 $$ while (webElementText.equals("Disable Pause After Error")) -->Line_78 $$ Thread.sleep(1000)[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_92 $$ sb.append("\"")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_72 $$ log("errorLog", sb.toString(), "errorLog")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_73 $$ WebElement webElement = _webDriver.findElement(By.id("pauseError"))[ CD ]
Line_28 $$ if (arguments.length == 1) -->Line_30 $$ if (arguments.length > 1) [ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_57 $$ _liferaySelenium.saveScreenshot()[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_52 $$ sb.append("ScreenshotBeforeAction")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_55 $$ sb.append("<br />")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_54 $$ sb.append(".jpg\" width=\"630\" />")[ CD ]
Line_81 $$ sb = new StringBundler()-->Line_89 $$ sb.append(" with parameters ")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_51 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_81 $$ sb = new StringBundler()[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_65 $$ sb.append("<img alt=\"")[ FD ]
Line_14 $$ String stackTrace = generateStackTrace(throwable)-->Line_16 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\n", "\\n")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_67 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ FD ]
Line_81 $$ sb = new StringBundler()-->Line_84 $$ sb.append("\"")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_19 $$ sb.append("';")[ FD ]
Line_30 $$ if (arguments.length > 1) -->Line_31 $$ sb.append(" with parameters ")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_70 $$ sb.append("<br />")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_26 $$ sb.append("</b>")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_89 $$ sb.append(" with parameters ")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_17 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\t", "\\t")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_29 $$ sb.append(" with parameter ")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_25 $$ sb.append(method.getName())[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_24 $$ sb.append("Command failure <b>")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_47 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_65 $$ sb.append("<img alt=\"")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_55 $$ sb.append("<br />")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_12 $$ sb.append("var newLine = window.document.createElement('div');")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_65 $$ sb.append("<img alt=\"")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_82 $$ sb.append("Command failure \"")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_43 $$ sb = new StringBundler()[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_62 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_14 $$ String stackTrace = generateStackTrace(throwable)-->Line_18 $$ sb.append(stackTrace)[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_46 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_18 $$ sb.append(stackTrace)[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_49 $$ sb.append("<img alt=\"")[ CD ]
Line_43 $$ sb = new StringBundler()-->Line_63 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_54 $$ sb.append(".jpg\" width=\"630\" />")[ FD ]
Line_81 $$ sb = new StringBundler()-->Line_99 $$ BaseTestCase.fail(sb.toString())[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_39 $$ sb.append(": ")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_34 $$ sb.append("<b>")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_24 $$ sb.append("Command failure <b>")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_68 $$ sb.append(_screenshotCount)[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_98 $$ sb.append(throwableMessage)[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_49 $$ sb.append("<img alt=\"")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_50 $$ sb.append(_screenshotCount)[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_98 $$ sb.append(throwableMessage)[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_94 $$ sb.append("\" ")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_35 $$ sb.append(String.valueOf(argument))[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_65 $$ sb.append("<img alt=\"")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_82 $$ sb.append("Command failure \"")[ FD ]
Line_81 $$ sb = new StringBundler()-->Line_82 $$ sb.append("Command failure \"")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_93 $$ sb.append(HtmlUtil.escape(String.valueOf(argument)))[ FD ]
Line_80 $$ if (failTest) -->Line_82 $$ sb.append("Command failure \"")[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_68 $$ sb.append(_screenshotCount)[ FD ]
Line_75 $$ while (webElementText.equals("Disable Pause After Error")) -->Line_76 $$ webElement = _webDriver.findElement(By.id("pauseError"))[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_87 $$ sb.append(" with parameter ")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_67 $$ sb.append("\" height=\"450\" src=\"screenshots/")[ FD ]
Line_33 $$ for (Object argument : arguments) -->Line_35 $$ sb.append(String.valueOf(argument))[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_50 $$ sb.append(_screenshotCount)[ FD ]
Line_14 $$ String stackTrace = generateStackTrace(throwable)-->Line_17 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\t", "\\t")[ FD ]
Line_16 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\n", "\\n")-->Line_17 $$ stackTrace = StringUtil.replace(stackTrace, "\\\\t", "\\t")[ FD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_40 $$ sb.append(throwableMessage)[ CD ]
Line_2 $$ public void logError(Method method, Object[] arguments, Throwable throwable, boolean failTest) throws Exception -->Line_13 $$ sb.append("newLine.innerHTML = '")[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_54 $$ sb.append(".jpg\" width=\"630\" />")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_53 $$ sb.append(_screenshotErrorCount - 1)[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_70 $$ sb.append("<br />")[ FD ]
Line_80 $$ if (failTest) -->Line_85 $$ if (arguments != null) [ CD ]
Line_43 $$ sb = new StringBundler()-->Line_72 $$ log("errorLog", sb.toString(), "errorLog")[ FD ]
Line_80 $$ if (failTest) -->Line_98 $$ sb.append(throwableMessage)[ CD ]
Line_22 $$ sb = new StringBundler()-->Line_60 $$ sb.append("<h3>Screenshot of action after failure</h3>")[ FD ]
Line_59 $$ sb = new StringBundler()-->Line_60 $$ sb.append("<h3>Screenshot of action after failure</h3>")[ FD ]
Line_43 $$ sb = new StringBundler()-->Line_84 $$ sb.append("\"")[ FD ]
Line_80 $$ if (failTest) -->Line_81 $$ sb = new StringBundler()[ CD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_13 $$ sb.append("newLine.innerHTML = '")[ FD ]
Line_6 $$ StringBundler sb = new StringBundler()-->Line_64 $$ sb.append("&nbsp;&nbsp;&nbsp;&nbsp;")[ FD ]
Line_22 $$ sb = new StringBundler()-->Line_52 $$ sb.append("ScreenshotBeforeAction")[ FD ]
