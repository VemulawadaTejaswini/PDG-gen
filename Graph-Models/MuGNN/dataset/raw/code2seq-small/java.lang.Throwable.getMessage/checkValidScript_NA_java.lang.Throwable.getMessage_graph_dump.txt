Line_2 $$ public static String checkValidScript(String scriptText) -->Line_6 $$ final Script script = scriptFile.exists() ? shell.parse(scriptFile) : shell.parse(scriptText)[ FD ]
Line_15 $$ final SyntaxErrorMessage errorMessage = (SyntaxErrorMessage) error-->Line_16 $$ final SyntaxException cause = errorMessage.getCause()[ FD ]
Line_14 $$ if (error instanceof SyntaxErrorMessage) -->Line_17 $$ return cause.getMessage()[ CD ]
Line_5 $$ final GroovyShell shell = new GroovyShell()-->Line_6 $$ final Script script = scriptFile.exists() ? shell.parse(scriptFile) : shell.parse(scriptText)[ FD ]
Line_16 $$ final SyntaxException cause = errorMessage.getCause()-->Line_17 $$ return cause.getMessage()[ FD ]
Line_4 $$ final File scriptFile = new File(scriptText)-->Line_6 $$ final Script script = scriptFile.exists() ? shell.parse(scriptFile) : shell.parse(scriptText)[ FD ]
Line_14 $$ if (error instanceof SyntaxErrorMessage) -->Line_16 $$ final SyntaxException cause = errorMessage.getCause()[ CD ]
Line_14 $$ if (error instanceof SyntaxErrorMessage) -->Line_15 $$ final SyntaxErrorMessage errorMessage = (SyntaxErrorMessage) error[ CD ]
Line_11 $$ final ErrorCollector errorCollector = e.getErrorCollector()-->Line_12 $$ final List<Message> errors = errorCollector.getErrors()[ FD ]
Line_13 $$ for (Message error : errors) -->Line_14 $$ if (error instanceof SyntaxErrorMessage) [ FD ]
