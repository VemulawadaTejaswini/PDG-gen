Line_16 $$ Field field = sessionImplementor.getJdbcCoordinator().getClass().getDeclaredField("currentBatch")-->Line_25 $$ assertEquals(0, ((Map) field.get(batch)).size())[ FD ]
Line_2 $$ public void testBasicInsertion() -->Line_4 $$ session.getTransaction().begin()[ CD ]
Line_19 $$ if (batch == null) -->Line_22 $$ assertEquals(NonBatchingBatch.class, batch.getClass())[ CD ]
Line_3 $$ Session session = openSession()-->Line_4 $$ session.getTransaction().begin()[ FD ]
Line_15 $$ SessionImplementor sessionImplementor = (SessionImplementor) session-->Line_18 $$ Batch batch = (Batch) field.get(sessionImplementor.getJdbcCoordinator())[ FD ]
Line_16 $$ Field field = sessionImplementor.getJdbcCoordinator().getClass().getDeclaredField("currentBatch")-->Line_23 $$ field = AbstractBatchImpl.class.getDeclaredField("statements")[ FD ]
Line_18 $$ Batch batch = (Batch) field.get(sessionImplementor.getJdbcCoordinator())-->Line_25 $$ assertEquals(0, ((Map) field.get(batch)).size())[ FD ]
Line_16 $$ Field field = sessionImplementor.getJdbcCoordinator().getClass().getDeclaredField("currentBatch")-->Line_18 $$ Batch batch = (Batch) field.get(sessionImplementor.getJdbcCoordinator())[ FD ]
Line_3 $$ Session session = openSession()-->Line_8 $$ session.persist(new User(3, "ok"))[ FD ]
Line_18 $$ Batch batch = (Batch) field.get(sessionImplementor.getJdbcCoordinator())-->Line_22 $$ assertEquals(NonBatchingBatch.class, batch.getClass())[ FD ]
Line_19 $$ if (batch == null) -->Line_25 $$ assertEquals(0, ((Map) field.get(batch)).size())[ CD ]
Line_16 $$ Field field = sessionImplementor.getJdbcCoordinator().getClass().getDeclaredField("currentBatch")-->Line_17 $$ field.setAccessible(true)[ FD ]
Line_3 $$ Session session = openSession()-->Line_6 $$ session.persist(new User(1, "ok"))[ FD ]
Line_23 $$ field = AbstractBatchImpl.class.getDeclaredField("statements")-->Line_25 $$ assertEquals(0, ((Map) field.get(batch)).size())[ FD ]
Line_3 $$ Session session = openSession()-->Line_7 $$ session.persist(new User(2, null))[ FD ]
Line_2 $$ public void testBasicInsertion() -->Line_3 $$ Session session = openSession()[ CD ]
Line_3 $$ Session session = openSession()-->Line_31 $$ session.getTransaction().rollback()[ FD ]
Line_3 $$ Session session = openSession()-->Line_32 $$ session.close()[ FD ]
Line_3 $$ Session session = openSession()-->Line_9 $$ session.flush()[ FD ]
Line_18 $$ Batch batch = (Batch) field.get(sessionImplementor.getJdbcCoordinator())-->Line_19 $$ if (batch == null) [ FD ]
Line_16 $$ Field field = sessionImplementor.getJdbcCoordinator().getClass().getDeclaredField("currentBatch")-->Line_24 $$ field.setAccessible(true)[ FD ]
Line_19 $$ if (batch == null) -->Line_24 $$ field.setAccessible(true)[ CD ]
Line_15 $$ SessionImplementor sessionImplementor = (SessionImplementor) session-->Line_16 $$ Field field = sessionImplementor.getJdbcCoordinator().getClass().getDeclaredField("currentBatch")[ FD ]
Line_19 $$ if (batch == null) -->Line_23 $$ field = AbstractBatchImpl.class.getDeclaredField("statements")[ CD ]
Line_23 $$ field = AbstractBatchImpl.class.getDeclaredField("statements")-->Line_24 $$ field.setAccessible(true)[ FD ]
