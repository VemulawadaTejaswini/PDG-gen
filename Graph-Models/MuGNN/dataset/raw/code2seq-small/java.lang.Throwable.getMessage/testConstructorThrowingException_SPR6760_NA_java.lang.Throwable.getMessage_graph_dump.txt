Line_8 $$ Object o = expr.getValue(eContext)-->Line_31 $$ o = expr.getValue(eContext)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()[ CD ]
Line_34 $$ if (e instanceof SpelEvaluationException) -->Line_36 $$ fail("Should not have been wrapped")[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_12 $$ o = expr.getValue(eContext)[ FD ]
Line_12 $$ o = expr.getValue(eContext)-->Line_15 $$ o = expr.getValue(eContext)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_10 $$ assertEquals(1, parser.parseExpression("counter").getValue(eContext))[ CD ]
Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_17 $$ assertEquals(2, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_12 $$ o = expr.getValue(eContext)[ CD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_6 $$ eContext.setRootObject(new Tester())[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_17 $$ assertEquals(2, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_8 $$ Object o = expr.getValue(eContext)-->Line_9 $$ assertEquals(o, 3)[ FD ]
Line_8 $$ Object o = expr.getValue(eContext)-->Line_12 $$ o = expr.getValue(eContext)[ FD ]
Line_12 $$ o = expr.getValue(eContext)-->Line_13 $$ assertEquals(0, o)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_28 $$ assertEquals(3, parser.parseExpression("counter").getValue(eContext))[ CD ]
Line_12 $$ o = expr.getValue(eContext)-->Line_20 $$ o = expr.getValue(eContext)[ FD ]
Line_12 $$ o = expr.getValue(eContext)-->Line_16 $$ assertEquals(3, o)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_4 $$ Expression expr = parser.parseExpression("new org.springframework.expression.spel.ConstructorInvocationTests$Tester(#bar).i")[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_6 $$ eContext.setRootObject(new Tester())[ FD ]
Line_4 $$ Expression expr = parser.parseExpression("new org.springframework.expression.spel.ConstructorInvocationTests$Tester(#bar).i")-->Line_31 $$ o = expr.getValue(eContext)[ FD ]
Line_23 $$ int idx = e.getMessage().indexOf("Tester")-->Line_24 $$ if (idx == -1) [ FD ]
Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_28 $$ assertEquals(3, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_4 $$ Expression expr = parser.parseExpression("new org.springframework.expression.spel.ConstructorInvocationTests$Tester(#bar).i")[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_29 $$ eContext.setVariable("bar", 1)[ CD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_7 $$ eContext.setVariable("bar", 3)[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_18 $$ eContext.setVariable("bar", 4)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_11 $$ eContext.setVariable("bar", new PlaceOfBirth("London"))[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_7 $$ eContext.setVariable("bar", 3)[ FD ]
Line_4 $$ Expression expr = parser.parseExpression("new org.springframework.expression.spel.ConstructorInvocationTests$Tester(#bar).i")-->Line_15 $$ o = expr.getValue(eContext)[ FD ]
Line_20 $$ o = expr.getValue(eContext)-->Line_31 $$ o = expr.getValue(eContext)[ FD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_28 $$ assertEquals(3, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_20 $$ o = expr.getValue(eContext)[ FD ]
Line_12 $$ o = expr.getValue(eContext)-->Line_31 $$ o = expr.getValue(eContext)[ FD ]
Line_15 $$ o = expr.getValue(eContext)-->Line_20 $$ o = expr.getValue(eContext)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_18 $$ eContext.setVariable("bar", 4)[ CD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_9 $$ assertEquals(o, 3)[ CD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_14 $$ eContext.setVariable("bar", 3)[ FD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_15 $$ o = expr.getValue(eContext)[ FD ]
Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_10 $$ assertEquals(1, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_39 $$ assertEquals(4, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_13 $$ assertEquals(0, o)[ CD ]
Line_4 $$ Expression expr = parser.parseExpression("new org.springframework.expression.spel.ConstructorInvocationTests$Tester(#bar).i")-->Line_20 $$ o = expr.getValue(eContext)[ FD ]
Line_15 $$ o = expr.getValue(eContext)-->Line_16 $$ assertEquals(3, o)[ FD ]
Line_3 $$ SpelExpressionParser parser = new SpelExpressionParser()-->Line_39 $$ assertEquals(4, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_14 $$ eContext.setVariable("bar", 3)[ CD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_16 $$ assertEquals(3, o)[ CD ]
Line_8 $$ Object o = expr.getValue(eContext)-->Line_13 $$ assertEquals(0, o)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_15 $$ o = expr.getValue(eContext)[ CD ]
Line_8 $$ Object o = expr.getValue(eContext)-->Line_15 $$ o = expr.getValue(eContext)[ FD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_11 $$ eContext.setVariable("bar", new PlaceOfBirth("London"))[ FD ]
Line_24 $$ if (idx == -1) -->Line_25 $$ fail("Expected reference to Tester in :" + e.getMessage())[ CD ]
Line_4 $$ Expression expr = parser.parseExpression("new org.springframework.expression.spel.ConstructorInvocationTests$Tester(#bar).i")-->Line_8 $$ Object o = expr.getValue(eContext)[ FD ]
Line_4 $$ Expression expr = parser.parseExpression("new org.springframework.expression.spel.ConstructorInvocationTests$Tester(#bar).i")-->Line_12 $$ o = expr.getValue(eContext)[ FD ]
Line_8 $$ Object o = expr.getValue(eContext)-->Line_20 $$ o = expr.getValue(eContext)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_39 $$ assertEquals(4, parser.parseExpression("counter").getValue(eContext))[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_8 $$ Object o = expr.getValue(eContext)[ FD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_17 $$ assertEquals(2, parser.parseExpression("counter").getValue(eContext))[ CD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_29 $$ eContext.setVariable("bar", 1)[ FD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_10 $$ assertEquals(1, parser.parseExpression("counter").getValue(eContext))[ FD ]
Line_15 $$ o = expr.getValue(eContext)-->Line_31 $$ o = expr.getValue(eContext)[ FD ]
Line_5 $$ StandardEvaluationContext eContext = TestScenarioCreator.getTestEvaluationContext()-->Line_31 $$ o = expr.getValue(eContext)[ FD ]
Line_8 $$ Object o = expr.getValue(eContext)-->Line_16 $$ assertEquals(3, o)[ FD ]
Line_34 $$ if (e instanceof SpelEvaluationException) -->Line_35 $$ e.printStackTrace()[ CD ]
Line_2 $$ public void testConstructorThrowingException_SPR6760() -->Line_8 $$ Object o = expr.getValue(eContext)[ CD ]
