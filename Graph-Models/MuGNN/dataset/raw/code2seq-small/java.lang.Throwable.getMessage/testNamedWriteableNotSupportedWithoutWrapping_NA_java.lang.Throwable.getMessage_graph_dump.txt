Line_3 $$ BytesStreamOutput out = new BytesStreamOutput()-->Line_5 $$ out.writeNamedWriteable(testNamedWriteable)[ FD ]
Line_2 $$ public void testNamedWriteableNotSupportedWithoutWrapping() throws IOException -->Line_5 $$ out.writeNamedWriteable(testNamedWriteable)[ CD ]
Line_6 $$ StreamInput in = StreamInput.wrap(out.bytes().toBytes())-->Line_8 $$ in.readNamedWriteable(BaseNamedWriteable.class)[ FD ]
Line_2 $$ public void testNamedWriteableNotSupportedWithoutWrapping() throws IOException -->Line_4 $$ TestNamedWriteable testNamedWriteable = new TestNamedWriteable("test1", "test2")[ CD ]
Line_2 $$ public void testNamedWriteableNotSupportedWithoutWrapping() throws IOException -->Line_6 $$ StreamInput in = StreamInput.wrap(out.bytes().toBytes())[ CD ]
Line_3 $$ BytesStreamOutput out = new BytesStreamOutput()-->Line_6 $$ StreamInput in = StreamInput.wrap(out.bytes().toBytes())[ FD ]
Line_4 $$ TestNamedWriteable testNamedWriteable = new TestNamedWriteable("test1", "test2")-->Line_5 $$ out.writeNamedWriteable(testNamedWriteable)[ FD ]
Line_2 $$ public void testNamedWriteableNotSupportedWithoutWrapping() throws IOException -->Line_3 $$ BytesStreamOutput out = new BytesStreamOutput()[ CD ]
