Line_9 $$ payload = out.toByteArray()-->Line_13 $$ this.marshaller.marshal(payload, result)[ FD ]
Line_5 $$ if (byte[].class == getSerializedPayloadClass()) -->Line_13 $$ this.marshaller.marshal(payload, result)[ CD ]
Line_11 $$ Writer writer = new StringWriter()-->Line_14 $$ payload = writer.toString()[ FD ]
Line_9 $$ payload = out.toByteArray()-->Line_14 $$ payload = writer.toString()[ FD ]
Line_5 $$ if (byte[].class == getSerializedPayloadClass()) -->Line_9 $$ payload = out.toByteArray()[ CD ]
Line_2 $$ protected Object convertToInternal(Object payload, MessageHeaders headers, Object conversionHint) -->Line_13 $$ this.marshaller.marshal(payload, result)[ FD ]
Line_2 $$ protected Object convertToInternal(Object payload, MessageHeaders headers, Object conversionHint) -->Line_3 $$ Assert.notNull(this.marshaller, "Property 'marshaller' is required")[ CD ]
Line_5 $$ if (byte[].class == getSerializedPayloadClass()) -->Line_11 $$ Writer writer = new StringWriter()[ CD ]
Line_5 $$ if (byte[].class == getSerializedPayloadClass()) -->Line_14 $$ payload = writer.toString()[ CD ]
Line_6 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_9 $$ payload = out.toByteArray()[ FD ]
Line_7 $$ Result result = new StreamResult(out)-->Line_13 $$ this.marshaller.marshal(payload, result)[ FD ]
Line_5 $$ if (byte[].class == getSerializedPayloadClass()) -->Line_7 $$ Result result = new StreamResult(out)[ CD ]
Line_2 $$ protected Object convertToInternal(Object payload, MessageHeaders headers, Object conversionHint) -->Line_8 $$ this.marshaller.marshal(payload, result)[ FD ]
Line_5 $$ if (byte[].class == getSerializedPayloadClass()) -->Line_6 $$ ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_2 $$ protected Object convertToInternal(Object payload, MessageHeaders headers, Object conversionHint) -->Line_9 $$ payload = out.toByteArray()[ FD ]
Line_7 $$ Result result = new StreamResult(out)-->Line_8 $$ this.marshaller.marshal(payload, result)[ FD ]
Line_2 $$ protected Object convertToInternal(Object payload, MessageHeaders headers, Object conversionHint) -->Line_14 $$ payload = writer.toString()[ FD ]
Line_5 $$ if (byte[].class == getSerializedPayloadClass()) -->Line_8 $$ this.marshaller.marshal(payload, result)[ CD ]
Line_2 $$ protected Object convertToInternal(Object payload, MessageHeaders headers, Object conversionHint) -->Line_19 $$ return payload[ CD ]
