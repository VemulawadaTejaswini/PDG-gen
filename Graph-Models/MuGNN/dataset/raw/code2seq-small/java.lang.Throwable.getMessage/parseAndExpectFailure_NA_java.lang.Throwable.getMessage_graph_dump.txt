Line_3 $$ XContentParser parser = JsonXContent.jsonXContent.createParser(brokenJson)-->Line_5 $$ new RestApiParser().parse(parser)[ FD ]
Line_2 $$ private void parseAndExpectFailure(String brokenJson, String expectedErrorMessage) throws Exception -->Line_3 $$ XContentParser parser = JsonXContent.jsonXContent.createParser(brokenJson)[ FD ]
Line_2 $$ private void parseAndExpectFailure(String brokenJson, String expectedErrorMessage) throws Exception -->Line_8 $$ assertThat(e.getMessage(), containsString(expectedErrorMessage))[ FD ]
Line_2 $$ private void parseAndExpectFailure(String brokenJson, String expectedErrorMessage) throws Exception -->Line_3 $$ XContentParser parser = JsonXContent.jsonXContent.createParser(brokenJson)[ CD ]
