Line_4 $$ Path dirName = new Path(TEST_DIR, "fail.mapfile")-->Line_11 $$ when(spyFs.mkdirs(dirName)).thenReturn(false)[ FD ]
Line_4 $$ Path dirName = new Path(TEST_DIR, "fail.mapfile")-->Line_9 $$ Path pathSpy = spy(dirName)[ FD ]
Line_8 $$ FileSystem spyFs = spy(fs)-->Line_10 $$ when(pathSpy.getFileSystem(conf)).thenReturn(spyFs)[ FD ]
Line_8 $$ FileSystem spyFs = spy(fs)-->Line_11 $$ when(spyFs.mkdirs(dirName)).thenReturn(false)[ FD ]
Line_5 $$ MapFile.Writer writer = null-->Line_17 $$ IOUtils.cleanup(null, writer)[ FD ]
Line_12 $$ writer = new MapFile.Writer(conf, pathSpy, MapFile.Writer.keyClass(IntWritable.class), MapFile.Writer.valueClass(Text.class))-->Line_17 $$ IOUtils.cleanup(null, writer)[ FD ]
Line_2 $$ public void testWriteWithFailDirCreation() -->Line_4 $$ Path dirName = new Path(TEST_DIR, "fail.mapfile")[ CD ]
Line_5 $$ MapFile.Writer writer = null-->Line_12 $$ writer = new MapFile.Writer(conf, pathSpy, MapFile.Writer.keyClass(IntWritable.class), MapFile.Writer.valueClass(Text.class))[ FD ]
Line_3 $$ String ERROR_MESSAGE = "Mkdirs failed to create directory"-->Line_15 $$ assertTrue("testWriteWithFailDirCreation ex error !!!", ex.getMessage().startsWith(ERROR_MESSAGE))[ FD ]
Line_9 $$ Path pathSpy = spy(dirName)-->Line_10 $$ when(pathSpy.getFileSystem(conf)).thenReturn(spyFs)[ FD ]
Line_2 $$ public void testWriteWithFailDirCreation() -->Line_5 $$ MapFile.Writer writer = null[ CD ]
Line_2 $$ public void testWriteWithFailDirCreation() -->Line_3 $$ String ERROR_MESSAGE = "Mkdirs failed to create directory"[ CD ]
Line_7 $$ FileSystem fs = FileSystem.getLocal(conf)-->Line_8 $$ FileSystem spyFs = spy(fs)[ FD ]
