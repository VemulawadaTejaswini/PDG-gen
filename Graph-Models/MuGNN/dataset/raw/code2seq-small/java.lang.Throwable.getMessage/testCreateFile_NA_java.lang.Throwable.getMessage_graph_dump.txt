Line_8 $$ File testfile = new File(TEST_DIR, "testCreateFile")-->Line_10 $$ FileDescriptor fd = NativeIO.Windows.createFile(testfile.getCanonicalPath(), NativeIO.Windows.GENERIC_READ, NativeIO.Windows.FILE_SHARE_READ | NativeIO.Windows.FILE_SHARE_WRITE | NativeIO.Windows.FILE_SHARE_DELETE, NativeIO.Windows.OPEN_EXISTING)[ FD ]
Line_8 $$ File testfile = new File(TEST_DIR, "testCreateFile")-->Line_9 $$ assertTrue("Create test subject", testfile.exists() || testfile.createNewFile())[ FD ]
Line_3 $$ if (!Path.WINDOWS) -->Line_4 $$ return[ CD ]
Line_2 $$ public void testCreateFile() throws Exception -->Line_6 $$ LOG.info("Open a file on Windows with SHARE_DELETE shared mode")[ CD ]
Line_2 $$ public void testCreateFile() throws Exception -->Line_3 $$ if (!Path.WINDOWS) [ CD ]
Line_11 $$ FileInputStream fin = new FileInputStream(fd)-->Line_21 $$ fin.close()[ FD ]
Line_15 $$ boolean renamed = testfile.renameTo(newfile)-->Line_16 $$ assertTrue("Rename failed.", renamed)[ FD ]
Line_14 $$ File newfile = new File(TEST_DIR, "testRenamedFile")-->Line_15 $$ boolean renamed = testfile.renameTo(newfile)[ FD ]
Line_11 $$ FileInputStream fin = new FileInputStream(fd)-->Line_13 $$ fin.read()[ FD ]
Line_8 $$ File testfile = new File(TEST_DIR, "testCreateFile")-->Line_15 $$ boolean renamed = testfile.renameTo(newfile)[ FD ]
Line_11 $$ FileInputStream fin = new FileInputStream(fd)-->Line_17 $$ fin.read()[ FD ]
