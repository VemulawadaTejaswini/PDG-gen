Line_2 $$ public void testNoReplicaUnderRecovery() throws IOException -->Line_14 $$ verify(namenode, never()).commitBlockSynchronization(any(ExtendedBlock.class), anyLong(), anyLong(), anyBoolean(), anyBoolean(), any(DatanodeID[].class), any(String[].class))[ CD ]
Line_13 $$ DatanodeProtocol namenode = dn.getActiveNamenodeForBP(POOL_ID)-->Line_14 $$ verify(namenode, never()).commitBlockSynchronization(any(ExtendedBlock.class), anyLong(), anyLong(), anyBoolean(), anyBoolean(), any(DatanodeID[].class), any(String[].class))[ FD ]
Line_2 $$ public void testNoReplicaUnderRecovery() throws IOException -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ public void testNoReplicaUnderRecovery() throws IOException -->Line_6 $$ dn.data.createRbw(StorageType.DEFAULT, block)[ CD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_4 $$ LOG.debug("Running " + GenericTestUtils.getMethodName())[ CD ]
Line_2 $$ public void testNoReplicaUnderRecovery() throws IOException -->Line_13 $$ DatanodeProtocol namenode = dn.getActiveNamenodeForBP(POOL_ID)[ CD ]
