Line_7 $$ if (uriPath.getScheme() == null || uriPath.getScheme().equals(FILE_SCHEME)) -->Line_8 $$ validPaths.add(new Path(uriPath.getPath()).toString())[ CD ]
Line_18 $$ String[] arrValidPaths = new String[validPaths.size()]-->Line_19 $$ validPaths.toArray(arrValidPaths)[ FD ]
Line_2 $$ public static String[] validatePaths(String[] paths) -->Line_18 $$ String[] arrValidPaths = new String[validPaths.size()][ CD ]
Line_6 $$ URI uriPath = (new Path(paths[i])).toUri()-->Line_7 $$ if (uriPath.getScheme() == null || uriPath.getScheme().equals(FILE_SCHEME)) [ FD ]
Line_6 $$ URI uriPath = (new Path(paths[i])).toUri()-->Line_8 $$ validPaths.add(new Path(uriPath.getPath()).toString())[ FD ]
Line_3 $$ ArrayList<String> validPaths = new ArrayList<String>()-->Line_18 $$ String[] arrValidPaths = new String[validPaths.size()][ FD ]
Line_2 $$ public static String[] validatePaths(String[] paths) -->Line_19 $$ validPaths.toArray(arrValidPaths)[ CD ]
Line_2 $$ public static String[] validatePaths(String[] paths) -->Line_20 $$ return arrValidPaths[ CD ]
Line_7 $$ if (uriPath.getScheme() == null || uriPath.getScheme().equals(FILE_SCHEME)) -->Line_10 $$ LOG.warn(paths[i] + " is not a valid path. Path should be with " + FILE_SCHEME + " scheme or without scheme")[ CD ]
Line_2 $$ public static String[] validatePaths(String[] paths) -->Line_4 $$ for (int i = 0; i < paths.length; ++i) [ CD ]
Line_3 $$ ArrayList<String> validPaths = new ArrayList<String>()-->Line_8 $$ validPaths.add(new Path(uriPath.getPath()).toString())[ FD ]
Line_2 $$ public static String[] validatePaths(String[] paths) -->Line_3 $$ ArrayList<String> validPaths = new ArrayList<String>()[ CD ]
Line_3 $$ ArrayList<String> validPaths = new ArrayList<String>()-->Line_19 $$ validPaths.toArray(arrValidPaths)[ FD ]
