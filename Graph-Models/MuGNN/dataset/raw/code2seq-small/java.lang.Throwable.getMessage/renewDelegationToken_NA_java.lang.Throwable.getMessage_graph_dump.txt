Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_31 $$ respToken.setNextExpirationTime(renewTime)[ CD ]
Line_8 $$ resp = callerUGI.doAs(new PrivilegedExceptionAction<RenewDelegationTokenResponse>() -->Line_10 $$ return rm.getClientRMService().renewDelegationToken(req)[ CD ]
Line_4 $$ org.apache.hadoop.yarn.api.records.Token dToken = BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind().toString(), token.getPassword(), token.getService().toString())-->Line_5 $$ final RenewDelegationTokenRequest req = RenewDelegationTokenRequest.newInstance(dToken)[ FD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_29 $$ long renewTime = resp.getNextExpirationTime()[ CD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_3 $$ Token<RMDelegationTokenIdentifier> token = extractToken(tokenData.getToken())[ CD ]
Line_6 $$ RenewDelegationTokenResponse resp-->Line_29 $$ long renewTime = resp.getNextExpirationTime()[ FD ]
Line_3 $$ Token<RMDelegationTokenIdentifier> token = extractToken(tokenData.getToken())-->Line_4 $$ org.apache.hadoop.yarn.api.records.Token dToken = BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind().toString(), token.getPassword(), token.getService().toString())[ FD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_5 $$ final RenewDelegationTokenRequest req = RenewDelegationTokenRequest.newInstance(dToken)[ CD ]
Line_15 $$ if (ue.getCause().getCause() instanceof InvalidToken) -->Line_17 $$ if (ue.getCause().getCause() instanceof org.apache.hadoop.security.AccessControlException) [ CD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_32 $$ return Response.status(Status.OK).entity(respToken).build()[ CD ]
Line_14 $$ if (ue.getCause() instanceof YarnException) -->Line_20 $$ LOG.info("Renew delegation token request failed", ue)[ CD ]
Line_5 $$ final RenewDelegationTokenRequest req = RenewDelegationTokenRequest.newInstance(dToken)-->Line_10 $$ return rm.getClientRMService().renewDelegationToken(req)[ FD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_4 $$ org.apache.hadoop.yarn.api.records.Token dToken = BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind().toString(), token.getPassword(), token.getService().toString())[ CD ]
Line_14 $$ if (ue.getCause() instanceof YarnException) -->Line_15 $$ if (ue.getCause().getCause() instanceof InvalidToken) [ CD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_8 $$ resp = callerUGI.doAs(new PrivilegedExceptionAction<RenewDelegationTokenResponse>() [ FD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_6 $$ RenewDelegationTokenResponse resp[ CD ]
Line_2 $$ private Response renewDelegationToken(DelegationToken tokenData, HttpServletRequest hsr, UserGroupInformation callerUGI) throws AuthorizationException, IOException, InterruptedException, Exception -->Line_3 $$ Token<RMDelegationTokenIdentifier> token = extractToken(tokenData.getToken())[ FD ]
Line_6 $$ RenewDelegationTokenResponse resp-->Line_8 $$ resp = callerUGI.doAs(new PrivilegedExceptionAction<RenewDelegationTokenResponse>() [ FD ]
Line_17 $$ if (ue.getCause().getCause() instanceof org.apache.hadoop.security.AccessControlException) -->Line_18 $$ return Response.status(Status.FORBIDDEN).entity(ue.getCause().getCause().getMessage()).build()[ CD ]
Line_8 $$ resp = callerUGI.doAs(new PrivilegedExceptionAction<RenewDelegationTokenResponse>() -->Line_29 $$ long renewTime = resp.getNextExpirationTime()[ FD ]
