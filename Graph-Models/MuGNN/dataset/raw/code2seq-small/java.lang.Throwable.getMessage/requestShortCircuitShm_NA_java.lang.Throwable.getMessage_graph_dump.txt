Line_5 $$ DomainSocket sock = peer.getDomainSocket()-->Line_32 $$ IOUtils.cleanup(null, sock)[ FD ]
Line_3 $$ NewShmInfo shmInfo = null-->Line_34 $$ IOUtils.cleanup(null, shmInfo)[ FD ]
Line_4 $$ boolean success = false-->Line_22 $$ success = true[ FD ]
Line_22 $$ success = true-->Line_31 $$ if ((!success) && (peer == null)) [ FD ]
Line_2 $$ public void requestShortCircuitShm(String clientName) throws IOException -->Line_4 $$ boolean success = false[ CD ]
Line_3 $$ NewShmInfo shmInfo = null-->Line_21 $$ sendShmSuccessResponse(sock, shmInfo)[ FD ]
Line_2 $$ public void requestShortCircuitShm(String clientName) throws IOException -->Line_3 $$ NewShmInfo shmInfo = null[ CD ]
Line_12 $$ shmInfo = datanode.shortCircuitRegistry.createNewMemorySegment(clientName, sock)-->Line_34 $$ IOUtils.cleanup(null, shmInfo)[ FD ]
Line_2 $$ public void requestShortCircuitShm(String clientName) throws IOException -->Line_26 $$ BlockSender.ClientTraceLog.info(String.format("cliID: %s, src: 127.0.0.1, dest: 127.0.0.1, " + "op: REQUEST_SHORT_CIRCUIT_SHM," + " shmId: %016x%016x, srvID: %s, success: true", clientName, shmInfo.shmId.getHi(), shmInfo.shmId.getLo(), datanode.getDatanodeUuid()))[ FD ]
Line_5 $$ DomainSocket sock = peer.getDomainSocket()-->Line_7 $$ if (sock == null) [ FD ]
Line_7 $$ if (sock == null) -->Line_9 $$ return[ CD ]
Line_2 $$ public void requestShortCircuitShm(String clientName) throws IOException -->Line_5 $$ DomainSocket sock = peer.getDomainSocket()[ CD ]
Line_24 $$ if (ClientTraceLog.isInfoEnabled()) -->Line_25 $$ if (success) [ CD ]
Line_25 $$ if (success) -->Line_26 $$ BlockSender.ClientTraceLog.info(String.format("cliID: %s, src: 127.0.0.1, dest: 127.0.0.1, " + "op: REQUEST_SHORT_CIRCUIT_SHM," + " shmId: %016x%016x, srvID: %s, success: true", clientName, shmInfo.shmId.getHi(), shmInfo.shmId.getLo(), datanode.getDatanodeUuid()))[ CD ]
Line_4 $$ boolean success = false-->Line_31 $$ if ((!success) && (peer == null)) [ FD ]
Line_2 $$ public void requestShortCircuitShm(String clientName) throws IOException -->Line_28 $$ BlockSender.ClientTraceLog.info(String.format("cliID: %s, src: 127.0.0.1, dest: 127.0.0.1, " + "op: REQUEST_SHORT_CIRCUIT_SHM, " + "shmId: n/a, srvID: %s, success: false", clientName, datanode.getDatanodeUuid()))[ FD ]
Line_5 $$ DomainSocket sock = peer.getDomainSocket()-->Line_21 $$ sendShmSuccessResponse(sock, shmInfo)[ FD ]
Line_2 $$ public void requestShortCircuitShm(String clientName) throws IOException -->Line_12 $$ shmInfo = datanode.shortCircuitRegistry.createNewMemorySegment(clientName, sock)[ FD ]
Line_25 $$ if (success) -->Line_28 $$ BlockSender.ClientTraceLog.info(String.format("cliID: %s, src: 127.0.0.1, dest: 127.0.0.1, " + "op: REQUEST_SHORT_CIRCUIT_SHM, " + "shmId: n/a, srvID: %s, success: false", clientName, datanode.getDatanodeUuid()))[ CD ]
Line_5 $$ DomainSocket sock = peer.getDomainSocket()-->Line_12 $$ shmInfo = datanode.shortCircuitRegistry.createNewMemorySegment(clientName, sock)[ FD ]
Line_7 $$ if (sock == null) -->Line_8 $$ sendShmErrorResponse(ERROR_INVALID, "Bad request from " + peer + ": must request a shared " + "memory segment over a UNIX domain socket.")[ CD ]
Line_31 $$ if ((!success) && (peer == null)) -->Line_32 $$ IOUtils.cleanup(null, sock)[ CD ]
Line_3 $$ NewShmInfo shmInfo = null-->Line_12 $$ shmInfo = datanode.shortCircuitRegistry.createNewMemorySegment(clientName, sock)[ FD ]
Line_12 $$ shmInfo = datanode.shortCircuitRegistry.createNewMemorySegment(clientName, sock)-->Line_21 $$ sendShmSuccessResponse(sock, shmInfo)[ FD ]
