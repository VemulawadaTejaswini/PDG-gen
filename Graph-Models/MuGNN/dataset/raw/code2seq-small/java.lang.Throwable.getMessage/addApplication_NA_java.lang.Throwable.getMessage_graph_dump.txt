Line_10 $$ RMApp rmApp = rmContext.getRMApps().get(applicationId)-->Line_11 $$ rmApp.setQueue(queueName)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_7 $$ if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME) || overrideWithQueueMappings) [ FD ]
Line_20 $$ CSQueue queue = getQueue(queueName)-->Line_38 $$ queue.getMetrics().submitApp(user)[ FD ]
Line_39 $$ SchedulerApplication<FiCaSchedulerApp> application = new SchedulerApplication<FiCaSchedulerApp>(queue, user)-->Line_40 $$ applications.put(applicationId, application)[ FD ]
Line_7 $$ if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME) || overrideWithQueueMappings) -->Line_10 $$ RMApp rmApp = rmContext.getRMApps().get(applicationId)[ CD ]
Line_7 $$ if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME) || overrideWithQueueMappings) -->Line_11 $$ rmApp.setQueue(queueName)[ CD ]
Line_9 $$ queueName = mappedQueue-->Line_32 $$ queue.submitApplication(applicationId, user, queueName)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_42 $$ if (isAppRecovering) [ CD ]
Line_20 $$ CSQueue queue = getQueue(queueName)-->Line_21 $$ if (queue == null) [ FD ]
Line_5 $$ String mappedQueue = getMappedQueue(user)-->Line_9 $$ queueName = mappedQueue[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_32 $$ queue.submitApplication(applicationId, user, queueName)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_11 $$ rmApp.setQueue(queueName)[ FD ]
Line_9 $$ queueName = mappedQueue-->Line_20 $$ CSQueue queue = getQueue(queueName)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_41 $$ LOG.info("Accepted application " + applicationId + " from user: " + user + ", in queue: " + queueName)[ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_20 $$ CSQueue queue = getQueue(queueName)[ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_3 $$ if (mappings != null && mappings.size() > 0) [ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_5 $$ String mappedQueue = getMappedQueue(user)[ FD ]
Line_21 $$ if (queue == null) -->Line_24 $$ return[ CD ]
Line_42 $$ if (isAppRecovering) -->Line_43 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_5 $$ String mappedQueue = getMappedQueue(user)-->Line_6 $$ if (mappedQueue != null) [ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_20 $$ CSQueue queue = getQueue(queueName)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_10 $$ RMApp rmApp = rmContext.getRMApps().get(applicationId)[ FD ]
Line_9 $$ queueName = mappedQueue-->Line_11 $$ rmApp.setQueue(queueName)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_38 $$ queue.getMetrics().submitApp(user)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_40 $$ applications.put(applicationId, application)[ FD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_39 $$ SchedulerApplication<FiCaSchedulerApp> application = new SchedulerApplication<FiCaSchedulerApp>(queue, user)[ CD ]
Line_6 $$ if (mappedQueue != null) -->Line_7 $$ if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME) || overrideWithQueueMappings) [ CD ]
Line_42 $$ if (isAppRecovering) -->Line_47 $$ rmContext.getDispatcher().getEventHandler().handle(new RMAppEvent(applicationId, RMAppEventType.APP_ACCEPTED))[ CD ]
Line_26 $$ if (!(queue instanceof LeafQueue)) -->Line_29 $$ return[ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_40 $$ applications.put(applicationId, application)[ CD ]
Line_7 $$ if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME) || overrideWithQueueMappings) -->Line_8 $$ LOG.info("Application " + applicationId + " user " + user + " mapping [" + queueName + "] to [" + mappedQueue + "] override " + overrideWithQueueMappings)[ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_9 $$ queueName = mappedQueue[ FD ]
Line_43 $$ if (LOG.isDebugEnabled()) -->Line_44 $$ LOG.debug(applicationId + " is recovering. Skip notifying APP_ACCEPTED")[ CD ]
Line_21 $$ if (queue == null) -->Line_23 $$ this.rmContext.getDispatcher().getEventHandler().handle(new RMAppRejectedEvent(applicationId, message))[ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_26 $$ if (!(queue instanceof LeafQueue)) [ CD ]
Line_26 $$ if (!(queue instanceof LeafQueue)) -->Line_28 $$ this.rmContext.getDispatcher().getEventHandler().handle(new RMAppRejectedEvent(applicationId, message))[ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_38 $$ queue.getMetrics().submitApp(user)[ CD ]
Line_2 $$ private synchronized void addApplication(ApplicationId applicationId, String queueName, String user, boolean isAppRecovering) -->Line_21 $$ if (queue == null) [ CD ]
Line_20 $$ CSQueue queue = getQueue(queueName)-->Line_32 $$ queue.submitApplication(applicationId, user, queueName)[ FD ]
Line_7 $$ if (queueName.equals(YarnConfiguration.DEFAULT_QUEUE_NAME) || overrideWithQueueMappings) -->Line_9 $$ queueName = mappedQueue[ CD ]
