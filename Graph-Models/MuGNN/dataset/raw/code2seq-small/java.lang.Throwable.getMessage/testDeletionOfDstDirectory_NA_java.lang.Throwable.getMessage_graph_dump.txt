Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_12 $$ src = getTestPath("testDeletionOfDstDirectory/dir/src")[ CD ]
Line_14 $$ int count = 0-->Line_23 $$ count++[ FD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")-->Line_9 $$ rename(src, dst, false, false, true, Rename.OVERWRITE)[ FD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstDirectory/dir/src")-->Line_26 $$ Assert.assertFalse(exists(fc, src))[ FD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_4 $$ Path dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_10 $$ Assert.assertEquals(fileCount - 1, namesystem.getFilesTotal())[ CD ]
Line_15 $$ boolean exception = true-->Line_19 $$ exception = false[ FD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstDirectory/dir/src")-->Line_12 $$ src = getTestPath("testDeletionOfDstDirectory/dir/src")[ FD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstDirectory/dir/src")-->Line_18 $$ exists(fc, src)[ FD ]
Line_19 $$ exception = false-->Line_16 $$ while (exception && count < 5) [ FD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_6 $$ fc.mkdir(dst, FileContext.DEFAULT_PERM, true)[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_16 $$ while (exception && count < 5) [ CD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")-->Line_13 $$ dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")[ FD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_5 $$ fc.mkdir(src, FileContext.DEFAULT_PERM, true)[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_7 $$ FSNamesystem namesystem = cluster.getNamesystem()[ CD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")-->Line_6 $$ fc.mkdir(dst, FileContext.DEFAULT_PERM, true)[ FD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_27 $$ Assert.assertTrue(exists(fc, dst))[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_13 $$ dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_9 $$ rename(src, dst, false, false, true, Rename.OVERWRITE)[ CD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstDirectory/dir/src")-->Line_9 $$ rename(src, dst, false, false, true, Rename.OVERWRITE)[ FD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_14 $$ int count = 0[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_8 $$ long fileCount = namesystem.getFilesTotal()[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_26 $$ Assert.assertFalse(exists(fc, src))[ CD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_3 $$ Path src = getTestPath("testDeletionOfDstDirectory/dir/src")[ CD ]
Line_7 $$ FSNamesystem namesystem = cluster.getNamesystem()-->Line_8 $$ long fileCount = namesystem.getFilesTotal()[ FD ]
Line_12 $$ src = getTestPath("testDeletionOfDstDirectory/dir/src")-->Line_26 $$ Assert.assertFalse(exists(fc, src))[ FD ]
Line_12 $$ src = getTestPath("testDeletionOfDstDirectory/dir/src")-->Line_18 $$ exists(fc, src)[ FD ]
Line_13 $$ dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")-->Line_27 $$ Assert.assertTrue(exists(fc, dst))[ FD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_15 $$ boolean exception = true[ CD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstDirectory/dir/src")-->Line_5 $$ fc.mkdir(src, FileContext.DEFAULT_PERM, true)[ FD ]
Line_7 $$ FSNamesystem namesystem = cluster.getNamesystem()-->Line_10 $$ Assert.assertEquals(fileCount - 1, namesystem.getFilesTotal())[ FD ]
Line_15 $$ boolean exception = true-->Line_16 $$ while (exception && count < 5) [ FD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstDirectory/newdir/dst")-->Line_27 $$ Assert.assertTrue(exists(fc, dst))[ FD ]
Line_2 $$ public void testDeletionOfDstDirectory() throws Exception -->Line_11 $$ restartCluster(false)[ CD ]
