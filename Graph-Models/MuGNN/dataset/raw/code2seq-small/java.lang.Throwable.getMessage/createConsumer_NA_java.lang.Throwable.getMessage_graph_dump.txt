Line_5 $$ Method method = (isSubscriptionDurable() ? createSharedDurableConsumerMethod : createSharedConsumerMethod)-->Line_7 $$ return (MessageConsumer) method.invoke(session, destination, getSubscriptionName(), getMessageSelector())[ FD ]
Line_4 $$ if (isSubscriptionShared()) -->Line_5 $$ Method method = (isSubscriptionDurable() ? createSharedDurableConsumerMethod : createSharedConsumerMethod)[ CD ]
Line_3 $$ if (isPubSubDomain() && destination instanceof Topic) -->Line_4 $$ if (isSubscriptionShared()) [ CD ]
Line_2 $$ protected MessageConsumer createConsumer(Session session, Destination destination) throws JMSException -->Line_18 $$ return session.createDurableSubscriber((Topic) destination, getSubscriptionName(), getMessageSelector(), isPubSubNoLocal())[ FD ]
Line_4 $$ if (isSubscriptionShared()) -->Line_17 $$ if (isSubscriptionDurable()) [ CD ]
Line_2 $$ protected MessageConsumer createConsumer(Session session, Destination destination) throws JMSException -->Line_7 $$ return (MessageConsumer) method.invoke(session, destination, getSubscriptionName(), getMessageSelector())[ FD ]
Line_2 $$ protected MessageConsumer createConsumer(Session session, Destination destination) throws JMSException -->Line_20 $$ return session.createConsumer(destination, getMessageSelector(), isPubSubNoLocal())[ FD ]
Line_3 $$ if (isPubSubDomain() && destination instanceof Topic) -->Line_23 $$ return session.createConsumer(destination, getMessageSelector())[ CD ]
Line_17 $$ if (isSubscriptionDurable()) -->Line_18 $$ return session.createDurableSubscriber((Topic) destination, getSubscriptionName(), getMessageSelector(), isPubSubNoLocal())[ CD ]
Line_2 $$ protected MessageConsumer createConsumer(Session session, Destination destination) throws JMSException -->Line_23 $$ return session.createConsumer(destination, getMessageSelector())[ FD ]
Line_2 $$ protected MessageConsumer createConsumer(Session session, Destination destination) throws JMSException -->Line_3 $$ if (isPubSubDomain() && destination instanceof Topic) [ CD ]
Line_17 $$ if (isSubscriptionDurable()) -->Line_20 $$ return session.createConsumer(destination, getMessageSelector(), isPubSubNoLocal())[ CD ]
