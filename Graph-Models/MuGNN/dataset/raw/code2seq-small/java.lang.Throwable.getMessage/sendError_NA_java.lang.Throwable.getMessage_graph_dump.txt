Line_12 $$ if ((e instanceof NoSuchLayoutException) || (e instanceof PrincipalException)) -->Line_14 $$ if (Validator.isNotNull(msg)) [ CD ]
Line_61 $$ ServletContext servletContext = session.getServletContext()-->Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) -->Line_52 $$ redirect = null[ CD ]
Line_37 $$ status = HttpServletResponse.SC_BAD_REQUEST-->Line_67 $$ response.sendError(status, e.getMessage())[ FD ]
Line_26 $$ if (status == 0) -->Line_27 $$ if (e instanceof PrincipalException) [ CD ]
Line_32 $$ if (name.startsWith("NoSuch") && name.endsWith("Exception")) -->Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND[ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_54 $$ if (Validator.isNotNull(redirect)) [ CD ]
Line_55 $$ HttpSession session = PortalSessionThreadLocal.getHttpSession()-->Line_61 $$ ServletContext servletContext = session.getServletContext()[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_7 $$ if (e instanceof NoSuchImageException) [ FD ]
Line_20 $$ if ((e instanceof SystemException) && _log.isWarnEnabled()) -->Line_21 $$ _log.warn(e, e)[ CD ]
Line_26 $$ if (status == 0) -->Line_36 $$ if (status == 0) [ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_69 $$ String currentURL = (String) request.getAttribute(WebKeys.CURRENT_URL)[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_9 $$ _logWebServerServlet.warn(e, e)[ FD ]
Line_55 $$ HttpSession session = PortalSessionThreadLocal.getHttpSession()-->Line_57 $$ session = request.getSession()[ FD ]
Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) [ FD ]
Line_52 $$ redirect = null-->Line_54 $$ if (Validator.isNotNull(redirect)) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_64 $$ requestDispatcher.forward(request, response)[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_26 $$ if (status == 0) [ FD ]
Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)-->Line_63 $$ if (requestDispatcher != null) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_40 $$ String redirect = null[ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_37 $$ status = HttpServletResponse.SC_BAD_REQUEST[ FD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_63 $$ if (requestDispatcher != null) [ CD ]
Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN-->Line_67 $$ response.sendError(status, e.getMessage())[ FD ]
Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND-->Line_37 $$ status = HttpServletResponse.SC_BAD_REQUEST[ FD ]
Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_46 $$ redirect = PATH_MAIN + "/portal/status"[ FD ]
Line_40 $$ String redirect = null-->Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND[ FD ]
Line_56 $$ if (session == null) -->Line_57 $$ session = request.getSession()[ CD ]
Line_49 $$ if (_log.isWarnEnabled()) -->Line_50 $$ _log.warn("Unable to redirect to missing URI: " + redirect)[ CD ]
Line_57 $$ session = request.getSession()-->Line_61 $$ ServletContext servletContext = session.getServletContext()[ FD ]
Line_37 $$ status = HttpServletResponse.SC_BAD_REQUEST-->Line_70 $$ response.sendError(status, "Current URL " + currentURL)[ FD ]
Line_66 $$ if (e != null) -->Line_70 $$ response.sendError(status, "Current URL " + currentURL)[ CD ]
Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)-->Line_64 $$ requestDispatcher.forward(request, response)[ FD ]
Line_7 $$ if (e instanceof NoSuchImageException) -->Line_8 $$ if (_logWebServerServlet.isWarnEnabled()) [ CD ]
Line_27 $$ if (e instanceof PrincipalException) -->Line_32 $$ if (name.startsWith("NoSuch") && name.endsWith("Exception")) [ CD ]
Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND-->Line_70 $$ response.sendError(status, "Current URL " + currentURL)[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND[ FD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_56 $$ if (session == null) [ CD ]
Line_55 $$ HttpSession session = PortalSessionThreadLocal.getHttpSession()-->Line_56 $$ if (session == null) [ FD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_61 $$ ServletContext servletContext = session.getServletContext()[ CD ]
Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND-->Line_67 $$ response.sendError(status, e.getMessage())[ FD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_66 $$ if (e != null) [ CD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_55 $$ HttpSession session = PortalSessionThreadLocal.getHttpSession()[ CD ]
Line_37 $$ status = HttpServletResponse.SC_BAD_REQUEST-->Line_59 $$ response.setStatus(status)[ FD ]
Line_40 $$ String redirect = null-->Line_54 $$ if (Validator.isNotNull(redirect)) [ FD ]
Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_46 $$ redirect = PATH_MAIN + "/portal/status"[ FD ]
Line_36 $$ if (status == 0) -->Line_37 $$ status = HttpServletResponse.SC_BAD_REQUEST[ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) [ FD ]
Line_7 $$ if (e instanceof NoSuchImageException) -->Line_11 $$ if ((e instanceof PortalException) && _log.isDebugEnabled()) [ CD ]
Line_57 $$ session = request.getSession()-->Line_60 $$ SessionErrors.add(session, e.getClass(), e)[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_57 $$ session = request.getSession()[ FD ]
Line_27 $$ if (e instanceof PrincipalException) -->Line_31 $$ name = name.substring(name.lastIndexOf(CharPool.PERIOD) + 1)[ CD ]
Line_40 $$ String redirect = null-->Line_46 $$ redirect = PATH_MAIN + "/portal/status"[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_13 $$ String msg = e.getMessage()[ FD ]
Line_13 $$ String msg = e.getMessage()-->Line_14 $$ if (Validator.isNotNull(msg)) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_70 $$ response.sendError(status, "Current URL " + currentURL)[ FD ]
Line_40 $$ String redirect = null-->Line_52 $$ redirect = null[ FD ]
Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND-->Line_59 $$ response.setStatus(status)[ FD ]
Line_46 $$ redirect = PATH_MAIN + "/portal/status"-->Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_23 $$ if (response.isCommitted()) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_60 $$ SessionErrors.add(session, e.getClass(), e)[ FD ]
Line_46 $$ redirect = PATH_MAIN + "/portal/status"-->Line_54 $$ if (Validator.isNotNull(redirect)) [ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_4 $$ String currentURL = (String) request.getAttribute(WebKeys.CURRENT_URL)[ CD ]
Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN-->Line_70 $$ response.sendError(status, "Current URL " + currentURL)[ FD ]
Line_63 $$ if (requestDispatcher != null) -->Line_64 $$ requestDispatcher.forward(request, response)[ CD ]
Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN-->Line_36 $$ if (status == 0) [ FD ]
Line_30 $$ String name = e.getClass().getName()-->Line_32 $$ if (name.startsWith("NoSuch") && name.endsWith("Exception")) [ FD ]
Line_40 $$ String redirect = null-->Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ CD ]
Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND[ FD ]
Line_12 $$ if ((e instanceof NoSuchLayoutException) || (e instanceof PrincipalException)) -->Line_13 $$ String msg = e.getMessage()[ CD ]
Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN-->Line_37 $$ status = HttpServletResponse.SC_BAD_REQUEST[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_23 $$ if (response.isCommitted()) [ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_36 $$ if (status == 0) [ FD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_59 $$ response.setStatus(status)[ CD ]
Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_54 $$ if (Validator.isNotNull(redirect)) [ FD ]
Line_14 $$ if (Validator.isNotNull(msg)) -->Line_15 $$ _log.debug(msg)[ CD ]
Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND-->Line_36 $$ if (status == 0) [ FD ]
Line_52 $$ redirect = null-->Line_62 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_4 $$ String currentURL = (String) request.getAttribute(WebKeys.CURRENT_URL)[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_41 $$ if ((e instanceof NoSuchGroupException) && Validator.isNotNull(PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND)) [ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_18 $$ _log.debug(e, e)[ FD ]
Line_3 $$ if (_log.isDebugEnabled()) -->Line_5 $$ _log.debug("Current URL " + currentURL + " generates exception: " + e.getMessage())[ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_27 $$ if (e instanceof PrincipalException) [ FD ]
Line_41 $$ if ((e instanceof NoSuchGroupException) && Validator.isNotNull(PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND)) -->Line_43 $$ if ((e instanceof NoSuchLayoutException) && Validator.isNotNull(PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND)) [ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_7 $$ if (e instanceof NoSuchImageException) [ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_59 $$ response.setStatus(status)[ FD ]
Line_66 $$ if (e != null) -->Line_67 $$ response.sendError(status, e.getMessage())[ CD ]
Line_31 $$ name = name.substring(name.lastIndexOf(CharPool.PERIOD) + 1)-->Line_32 $$ if (name.startsWith("NoSuch") && name.endsWith("Exception")) [ FD ]
Line_55 $$ HttpSession session = PortalSessionThreadLocal.getHttpSession()-->Line_60 $$ SessionErrors.add(session, e.getClass(), e)[ FD ]
Line_11 $$ if ((e instanceof PortalException) && _log.isDebugEnabled()) -->Line_20 $$ if ((e instanceof SystemException) && _log.isWarnEnabled()) [ CD ]
Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_3 $$ if (_log.isDebugEnabled()) [ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_5 $$ _log.debug("Current URL " + currentURL + " generates exception: " + e.getMessage())[ FD ]
Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN-->Line_59 $$ response.setStatus(status)[ FD ]
Line_23 $$ if (response.isCommitted()) -->Line_24 $$ return[ CD ]
Line_13 $$ String msg = e.getMessage()-->Line_15 $$ _log.debug(msg)[ FD ]
Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_52 $$ redirect = null[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_21 $$ _log.warn(e, e)[ FD ]
Line_12 $$ if ((e instanceof NoSuchLayoutException) || (e instanceof PrincipalException)) -->Line_18 $$ _log.debug(e, e)[ CD ]
Line_30 $$ String name = e.getClass().getName()-->Line_31 $$ name = name.substring(name.lastIndexOf(CharPool.PERIOD) + 1)[ FD ]
Line_41 $$ if ((e instanceof NoSuchGroupException) && Validator.isNotNull(PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND)) -->Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND[ CD ]
Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_52 $$ redirect = null[ FD ]
Line_54 $$ if (Validator.isNotNull(redirect)) -->Line_60 $$ SessionErrors.add(session, e.getClass(), e)[ CD ]
Line_11 $$ if ((e instanceof PortalException) && _log.isDebugEnabled()) -->Line_12 $$ if ((e instanceof NoSuchLayoutException) || (e instanceof PrincipalException)) [ CD ]
Line_40 $$ String redirect = null-->Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND[ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_30 $$ String name = e.getClass().getName()[ FD ]
Line_45 $$ if (PropsValues.LAYOUT_SHOW_HTTP_STATUS) -->Line_46 $$ redirect = PATH_MAIN + "/portal/status"[ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_67 $$ response.sendError(status, e.getMessage())[ FD ]
Line_43 $$ if ((e instanceof NoSuchLayoutException) && Validator.isNotNull(PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND)) -->Line_44 $$ redirect = PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND[ CD ]
Line_27 $$ if (e instanceof PrincipalException) -->Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN[ CD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) [ CD ]
Line_27 $$ if (e instanceof PrincipalException) -->Line_30 $$ String name = e.getClass().getName()[ CD ]
Line_46 $$ redirect = PATH_MAIN + "/portal/status"-->Line_52 $$ redirect = null[ FD ]
Line_40 $$ String redirect = null-->Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_26 $$ if (status == 0) [ CD ]
Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN-->Line_33 $$ status = HttpServletResponse.SC_NOT_FOUND[ FD ]
Line_43 $$ if ((e instanceof NoSuchLayoutException) && Validator.isNotNull(PropsValues.LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND)) -->Line_45 $$ if (PropsValues.LAYOUT_SHOW_HTTP_STATUS) [ CD ]
Line_42 $$ redirect = PropsValues.SITES_FRIENDLY_URL_PAGE_NOT_FOUND-->Line_54 $$ if (Validator.isNotNull(redirect)) [ FD ]
Line_46 $$ redirect = PATH_MAIN + "/portal/status"-->Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_66 $$ if (e != null) [ FD ]
Line_2 $$ public void sendError(int status, Exception e, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_28 $$ status = HttpServletResponse.SC_FORBIDDEN[ FD ]
Line_8 $$ if (_logWebServerServlet.isWarnEnabled()) -->Line_9 $$ _logWebServerServlet.warn(e, e)[ CD ]
Line_48 $$ if (Validator.equals(redirect, request.getRequestURI())) -->Line_49 $$ if (_log.isWarnEnabled()) [ CD ]
