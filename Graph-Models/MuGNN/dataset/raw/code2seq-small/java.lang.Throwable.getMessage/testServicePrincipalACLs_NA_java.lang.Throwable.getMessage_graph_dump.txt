Line_3 $$ Configuration conf = new Configuration()-->Line_20 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 128)[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_15 $$ conf.set(KMSACLs.Type.CREATE.getConfigKey(), "client")[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_21 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_7 $$ conf = createBaseKMSConf(testDir)[ CD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_17 $$ runServer(null, null, testDir, new KMSCallable() [ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_11 $$ conf.set("hadoop.kms.authentication.kerberos.name.rules", "DEFAULT")[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_11 $$ conf.set("hadoop.kms.authentication.kerberos.name.rules", "DEFAULT")[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_8 $$ conf.set("hadoop.kms.authentication.type", "kerberos")[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_10 $$ conf.set("hadoop.kms.authentication.kerberos.principal", "HTTP/localhost")[ CD ]
Line_17 $$ runServer(null, null, testDir, new KMSCallable() -->Line_47 $$ return null[ CD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_6 $$ File testDir = getTestDir()[ CD ]
Line_6 $$ File testDir = getTestDir()-->Line_7 $$ conf = createBaseKMSConf(testDir)[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_8 $$ conf.set("hadoop.kms.authentication.type", "kerberos")[ CD ]
Line_39 $$ KeyProvider.KeyVersion kv = kp.createKey("ck1", new KeyProvider.Options(conf))-->Line_40 $$ Assert.assertNull(kv.getMaterial())[ FD ]
Line_12 $$ for (KMSACLs.Type type : KMSACLs.Type.values()) -->Line_13 $$ conf.set(type.getConfigKey(), " ")[ FD ]
Line_23 $$ doAs("client", new PrivilegedExceptionAction<Void>() -->Line_32 $$ return null[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_9 $$ conf.set("hadoop.kms.authentication.kerberos.keytab", keytab.getAbsolutePath())[ FD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_16 $$ writeConf(testDir, conf)[ FD ]
Line_27 $$ KeyProvider.KeyVersion kv = kp.createKey("ck0", new KeyProvider.Options(conf))-->Line_28 $$ Assert.assertNull(kv.getMaterial())[ FD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_9 $$ conf.set("hadoop.kms.authentication.kerberos.keytab", keytab.getAbsolutePath())[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_5 $$ UserGroupInformation.setConfiguration(conf)[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_16 $$ writeConf(testDir, conf)[ CD ]
Line_17 $$ runServer(null, null, testDir, new KMSCallable() -->Line_21 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_13 $$ conf.set(type.getConfigKey(), " ")[ FD ]
Line_6 $$ File testDir = getTestDir()-->Line_16 $$ writeConf(testDir, conf)[ FD ]
Line_27 $$ KeyProvider.KeyVersion kv = kp.createKey("ck0", new KeyProvider.Options(conf))-->Line_40 $$ Assert.assertNull(kv.getMaterial())[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_4 $$ conf.set("hadoop.security.authentication", "kerberos")[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_8 $$ conf.set("hadoop.kms.authentication.type", "kerberos")[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_11 $$ conf.set("hadoop.kms.authentication.kerberos.name.rules", "DEFAULT")[ FD ]
Line_17 $$ runServer(null, null, testDir, new KMSCallable() -->Line_35 $$ doAs("client/host", new PrivilegedExceptionAction<Void>() [ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_15 $$ conf.set(KMSACLs.Type.CREATE.getConfigKey(), "client")[ FD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_15 $$ conf.set(KMSACLs.Type.CREATE.getConfigKey(), "client")[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_16 $$ writeConf(testDir, conf)[ FD ]
Line_17 $$ runServer(null, null, testDir, new KMSCallable() -->Line_23 $$ doAs("client", new PrivilegedExceptionAction<Void>() [ CD ]
Line_26 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_39 $$ KeyProvider.KeyVersion kv = kp.createKey("ck1", new KeyProvider.Options(conf))[ FD ]
Line_26 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_27 $$ KeyProvider.KeyVersion kv = kp.createKey("ck0", new KeyProvider.Options(conf))[ FD ]
Line_38 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_39 $$ KeyProvider.KeyVersion kv = kp.createKey("ck1", new KeyProvider.Options(conf))[ FD ]
Line_6 $$ File testDir = getTestDir()-->Line_17 $$ runServer(null, null, testDir, new KMSCallable() [ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_5 $$ UserGroupInformation.setConfiguration(conf)[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_13 $$ conf.set(type.getConfigKey(), " ")[ FD ]
Line_17 $$ runServer(null, null, testDir, new KMSCallable() -->Line_19 $$ final Configuration conf = new Configuration()[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_10 $$ conf.set("hadoop.kms.authentication.kerberos.principal", "HTTP/localhost")[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_17 $$ runServer(null, null, testDir, new KMSCallable() -->Line_22 $$ final URI uri = createKMSUri(getKMSUrl())[ CD ]
Line_19 $$ final Configuration conf = new Configuration()-->Line_20 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 128)[ FD ]
Line_17 $$ runServer(null, null, testDir, new KMSCallable() -->Line_20 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 128)[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_4 $$ conf.set("hadoop.security.authentication", "kerberos")[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_7 $$ conf = createBaseKMSConf(testDir)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_10 $$ conf.set("hadoop.kms.authentication.kerberos.principal", "HTTP/localhost")[ FD ]
Line_35 $$ doAs("client/host", new PrivilegedExceptionAction<Void>() -->Line_44 $$ return null[ CD ]
Line_19 $$ final Configuration conf = new Configuration()-->Line_21 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_21 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ FD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_20 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 128)[ FD ]
Line_2 $$ public void testServicePrincipalACLs() throws Exception -->Line_9 $$ conf.set("hadoop.kms.authentication.kerberos.keytab", keytab.getAbsolutePath())[ CD ]
