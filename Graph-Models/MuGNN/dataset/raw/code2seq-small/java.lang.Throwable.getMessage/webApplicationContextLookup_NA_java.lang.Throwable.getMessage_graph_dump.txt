Line_3 $$ MockServletContext servletContext = new MockServletContext()-->Line_11 $$ RequestContextUtils.getWebApplicationContext(request, servletContext)[ FD ]
Line_2 $$ public void webApplicationContextLookup() -->Line_15 $$ servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, new StaticWebApplicationContext())[ CD ]
Line_2 $$ public void webApplicationContextLookup() -->Line_4 $$ MockHttpServletRequest request = new MockHttpServletRequest(servletContext, "GET", "/invalid.do")[ CD ]
Line_2 $$ public void webApplicationContextLookup() -->Line_3 $$ MockServletContext servletContext = new MockServletContext()[ CD ]
Line_4 $$ MockHttpServletRequest request = new MockHttpServletRequest(servletContext, "GET", "/invalid.do")-->Line_11 $$ RequestContextUtils.getWebApplicationContext(request, servletContext)[ FD ]
Line_3 $$ MockServletContext servletContext = new MockServletContext()-->Line_15 $$ servletContext.setAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE, new StaticWebApplicationContext())[ FD ]
Line_4 $$ MockHttpServletRequest request = new MockHttpServletRequest(servletContext, "GET", "/invalid.do")-->Line_17 $$ RequestContextUtils.getWebApplicationContext(request, servletContext)[ FD ]
Line_3 $$ MockServletContext servletContext = new MockServletContext()-->Line_17 $$ RequestContextUtils.getWebApplicationContext(request, servletContext)[ FD ]
Line_4 $$ MockHttpServletRequest request = new MockHttpServletRequest(servletContext, "GET", "/invalid.do")-->Line_6 $$ RequestContextUtils.getWebApplicationContext(request)[ FD ]
