Line_10 $$ return loginUgi.doAs(new PrivilegedExceptionAction<InterDatanodeProtocol>() -->Line_12 $$ return new InterDatanodeProtocolTranslatorPB(addr, loginUgi, conf, NetUtils.getDefaultSocketFactory(conf), socketTimeout)[ CD ]
Line_2 $$ public static InterDatanodeProtocol createInterDataNodeProtocolProxy(DatanodeID datanodeid, final Configuration conf, final int socketTimeout, final boolean connectToDnViaHostname) throws IOException -->Line_5 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ public static InterDatanodeProtocol createInterDataNodeProtocolProxy(DatanodeID datanodeid, final Configuration conf, final int socketTimeout, final boolean connectToDnViaHostname) throws IOException -->Line_3 $$ final String dnAddr = datanodeid.getIpcAddr(connectToDnViaHostname)[ CD ]
Line_5 $$ if (LOG.isDebugEnabled()) -->Line_6 $$ LOG.debug("Connecting to datanode " + dnAddr + " addr=" + addr)[ CD ]
Line_2 $$ public static InterDatanodeProtocol createInterDataNodeProtocolProxy(DatanodeID datanodeid, final Configuration conf, final int socketTimeout, final boolean connectToDnViaHostname) throws IOException -->Line_3 $$ final String dnAddr = datanodeid.getIpcAddr(connectToDnViaHostname)[ FD ]
Line_8 $$ final UserGroupInformation loginUgi = UserGroupInformation.getLoginUser()-->Line_10 $$ return loginUgi.doAs(new PrivilegedExceptionAction<InterDatanodeProtocol>() [ FD ]
Line_3 $$ final String dnAddr = datanodeid.getIpcAddr(connectToDnViaHostname)-->Line_4 $$ final InetSocketAddress addr = NetUtils.createSocketAddr(dnAddr)[ FD ]
Line_2 $$ public static InterDatanodeProtocol createInterDataNodeProtocolProxy(DatanodeID datanodeid, final Configuration conf, final int socketTimeout, final boolean connectToDnViaHostname) throws IOException -->Line_8 $$ final UserGroupInformation loginUgi = UserGroupInformation.getLoginUser()[ CD ]
Line_2 $$ public static InterDatanodeProtocol createInterDataNodeProtocolProxy(DatanodeID datanodeid, final Configuration conf, final int socketTimeout, final boolean connectToDnViaHostname) throws IOException -->Line_12 $$ return new InterDatanodeProtocolTranslatorPB(addr, loginUgi, conf, NetUtils.getDefaultSocketFactory(conf), socketTimeout)[ FD ]
Line_2 $$ public static InterDatanodeProtocol createInterDataNodeProtocolProxy(DatanodeID datanodeid, final Configuration conf, final int socketTimeout, final boolean connectToDnViaHostname) throws IOException -->Line_4 $$ final InetSocketAddress addr = NetUtils.createSocketAddr(dnAddr)[ CD ]
