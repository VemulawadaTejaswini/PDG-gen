Line_2 $$ private void handleWithFragment(FromElement fromElement, AST hqlWithNode) throws SemanticException -->Line_4 $$ withClause(hqlWithNode)[ FD ]
Line_5 $$ AST hqlSqlWithNode = returnAST-->Line_7 $$ LOG.debug("handleWithFragment() : " + getASTPrinter().showAsString(hqlSqlWithNode, "-- with clause --"))[ FD ]
Line_5 $$ AST hqlSqlWithNode = returnAST-->Line_11 $$ traverser.traverseDepthFirst(hqlSqlWithNode)[ FD ]
Line_9 $$ WithClauseVisitor visitor = new WithClauseVisitor(fromElement, queryTranslatorImpl)-->Line_12 $$ String withClauseJoinAlias = visitor.getJoinAlias()[ FD ]
Line_16 $$ FromElement referencedFromElement = visitor.getReferencedFromElement()-->Line_17 $$ if (referencedFromElement != fromElement) [ FD ]
Line_6 $$ if (LOG.isDebugEnabled()) -->Line_7 $$ LOG.debug("handleWithFragment() : " + getASTPrinter().showAsString(hqlSqlWithNode, "-- with clause --"))[ CD ]
Line_12 $$ String withClauseJoinAlias = visitor.getJoinAlias()-->Line_13 $$ if (withClauseJoinAlias == null) [ FD ]
Line_10 $$ NodeTraverser traverser = new NodeTraverser(visitor)-->Line_11 $$ traverser.traverseDepthFirst(hqlSqlWithNode)[ FD ]
Line_12 $$ String withClauseJoinAlias = visitor.getJoinAlias()-->Line_23 $$ fromElement.setWithClauseFragment(withClauseJoinAlias, "(" + sql.getSQL() + ")")[ FD ]
Line_2 $$ private void handleWithFragment(FromElement fromElement, AST hqlWithNode) throws SemanticException -->Line_14 $$ withClauseJoinAlias = fromElement.getCollectionTableAlias()[ FD ]
Line_13 $$ if (withClauseJoinAlias == null) -->Line_17 $$ if (referencedFromElement != fromElement) [ CD ]
Line_2 $$ private void handleWithFragment(FromElement fromElement, AST hqlWithNode) throws SemanticException -->Line_17 $$ if (referencedFromElement != fromElement) [ FD ]
Line_12 $$ String withClauseJoinAlias = visitor.getJoinAlias()-->Line_14 $$ withClauseJoinAlias = fromElement.getCollectionTableAlias()[ FD ]
Line_21 $$ SqlGenerator sql = new SqlGenerator(getSessionFactoryHelper().getFactory())-->Line_22 $$ sql.whereExpr(hqlSqlWithNode.getFirstChild())[ FD ]
Line_14 $$ withClauseJoinAlias = fromElement.getCollectionTableAlias()-->Line_23 $$ fromElement.setWithClauseFragment(withClauseJoinAlias, "(" + sql.getSQL() + ")")[ FD ]
Line_2 $$ private void handleWithFragment(FromElement fromElement, AST hqlWithNode) throws SemanticException -->Line_23 $$ fromElement.setWithClauseFragment(withClauseJoinAlias, "(" + sql.getSQL() + ")")[ FD ]
Line_13 $$ if (withClauseJoinAlias == null) -->Line_16 $$ FromElement referencedFromElement = visitor.getReferencedFromElement()[ CD ]
Line_21 $$ SqlGenerator sql = new SqlGenerator(getSessionFactoryHelper().getFactory())-->Line_23 $$ fromElement.setWithClauseFragment(withClauseJoinAlias, "(" + sql.getSQL() + ")")[ FD ]
Line_5 $$ AST hqlSqlWithNode = returnAST-->Line_22 $$ sql.whereExpr(hqlSqlWithNode.getFirstChild())[ FD ]
Line_9 $$ WithClauseVisitor visitor = new WithClauseVisitor(fromElement, queryTranslatorImpl)-->Line_16 $$ FromElement referencedFromElement = visitor.getReferencedFromElement()[ FD ]
Line_13 $$ if (withClauseJoinAlias == null) -->Line_14 $$ withClauseJoinAlias = fromElement.getCollectionTableAlias()[ CD ]
Line_17 $$ if (referencedFromElement != fromElement) -->Line_18 $$ LOG.warnf("with-clause expressions do not reference the from-clause element to which the " + "with-clause was associated.  The query may not work as expected [%s]", queryTranslatorImpl.getQueryString())[ CD ]
