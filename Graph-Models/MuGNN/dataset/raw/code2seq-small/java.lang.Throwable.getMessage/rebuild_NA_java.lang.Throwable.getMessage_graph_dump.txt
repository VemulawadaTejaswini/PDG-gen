Line_13 $$ StreamResultFuture resultFuture = streamer.fetchAsync()-->Line_14 $$ resultFuture.get()[ FD ]
Line_10 $$ if (sourceDc != null)-->Line_11 $$ streamer.addSourceFilter(new RangeStreamer.SingleDatacenterFilter(DatabaseDescriptor.getEndpointSnitch(), sourceDc))[ CD ]
Line_8 $$ RangeStreamer streamer = new RangeStreamer(tokenMetadata, null, FBUtilities.getBroadcastAddress(), "Rebuild", !replacing && useStrictConsistency, DatabaseDescriptor.getEndpointSnitch(), streamStateStore, false)-->Line_12 $$ streamer.addRanges(keyspaceName, getLocalRanges(keyspaceName))[ FD ]
Line_8 $$ RangeStreamer streamer = new RangeStreamer(tokenMetadata, null, FBUtilities.getBroadcastAddress(), "Rebuild", !replacing && useStrictConsistency, DatabaseDescriptor.getEndpointSnitch(), streamStateStore, false)-->Line_13 $$ StreamResultFuture resultFuture = streamer.fetchAsync()[ FD ]
Line_8 $$ RangeStreamer streamer = new RangeStreamer(tokenMetadata, null, FBUtilities.getBroadcastAddress(), "Rebuild", !replacing && useStrictConsistency, DatabaseDescriptor.getEndpointSnitch(), streamStateStore, false)-->Line_9 $$ streamer.addSourceFilter(new RangeStreamer.FailureDetectorSourceFilter(FailureDetector.instance))[ FD ]
Line_2 $$ public void rebuild(String sourceDc) -->Line_10 $$ if (sourceDc != null)[ FD ]
Line_2 $$ public void rebuild(String sourceDc) -->Line_6 $$ logger.info("rebuild from dc: [ CD ]
Line_2 $$ public void rebuild(String sourceDc) -->Line_3 $$ if (!isRebuilding.compareAndSet(false, true)) [ CD ]
Line_8 $$ RangeStreamer streamer = new RangeStreamer(tokenMetadata, null, FBUtilities.getBroadcastAddress(), "Rebuild", !replacing && useStrictConsistency, DatabaseDescriptor.getEndpointSnitch(), streamStateStore, false)-->Line_11 $$ streamer.addSourceFilter(new RangeStreamer.SingleDatacenterFilter(DatabaseDescriptor.getEndpointSnitch(), sourceDc))[ FD ]
