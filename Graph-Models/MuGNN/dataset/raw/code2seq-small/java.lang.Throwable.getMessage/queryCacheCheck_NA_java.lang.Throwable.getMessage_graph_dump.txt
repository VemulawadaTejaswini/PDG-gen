Line_10 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()-->Line_11 $$ stats.clear()[ FD ]
Line_15 $$ Query query = em.createQuery(queryString)-->Line_21 $$ query.getResultList()[ FD ]
Line_13 $$ String queryString = "from Employee e where e.id > " + id-->Line_14 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)[ FD ]
Line_9 $$ EntityManager em = emf.createEntityManager()-->Line_15 $$ Query query = em.createQuery(queryString)[ FD ]
Line_14 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)-->Line_18 $$ assertEquals("Expected 1 miss in cache" + generateQueryCacheStats(queryStats), 1, queryStats.getCacheMissCount())[ FD ]
Line_13 $$ String queryString = "from Employee e where e.id > " + id-->Line_15 $$ Query query = em.createQuery(queryString)[ FD ]
Line_14 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)-->Line_19 $$ assertEquals("Expected 1 put in cache" + generateQueryCacheStats(queryStats), 1, queryStats.getCachePutCount())[ FD ]
Line_9 $$ EntityManager em = emf.createEntityManager()-->Line_10 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()[ FD ]
Line_14 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)-->Line_20 $$ assertEquals("Expected no hits in cache" + generateQueryCacheStats(queryStats), 0, queryStats.getCacheHitCount())[ FD ]
Line_14 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)-->Line_22 $$ assertEquals("Expected 1 hit in cache" + generateQueryCacheStats(queryStats), 1, queryStats.getCacheHitCount())[ FD ]
Line_2 $$ public String queryCacheCheck(String id) -->Line_10 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()[ CD ]
Line_2 $$ public String queryCacheCheck(String id) -->Line_28 $$ return "OK"[ CD ]
Line_2 $$ public String queryCacheCheck(String id) -->Line_11 $$ stats.clear()[ CD ]
Line_2 $$ public String queryCacheCheck(String id) -->Line_9 $$ EntityManager em = emf.createEntityManager()[ CD ]
Line_9 $$ EntityManager em = emf.createEntityManager()-->Line_26 $$ em.close()[ FD ]
Line_15 $$ Query query = em.createQuery(queryString)-->Line_16 $$ query.setHint("org.hibernate.cacheable", true)[ FD ]
Line_10 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()-->Line_14 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)[ FD ]
Line_15 $$ Query query = em.createQuery(queryString)-->Line_17 $$ query.getResultList()[ FD ]
