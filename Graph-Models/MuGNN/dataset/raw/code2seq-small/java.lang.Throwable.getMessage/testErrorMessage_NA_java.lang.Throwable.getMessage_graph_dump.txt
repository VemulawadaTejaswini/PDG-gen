Line_9 $$ TransportFuture<StringMessageResponse> res = serviceB.submitRequest(nodeA, "sayHelloException", new StringMessageRequest("moshe"), new BaseTransportResponseHandler<StringMessageResponse>() -->Line_11 $$ return new StringMessageResponse()[ CD ]
Line_2 $$ public void testErrorMessage() -->Line_29 $$ serviceA.removeHandler("sayHelloException")[ CD ]
Line_2 $$ public void testErrorMessage() -->Line_9 $$ TransportFuture<StringMessageResponse> res = serviceB.submitRequest(nodeA, "sayHelloException", new StringMessageRequest("moshe"), new BaseTransportResponseHandler<StringMessageResponse>() [ CD ]
Line_2 $$ public void testErrorMessage() -->Line_3 $$ serviceA.registerRequestHandler("sayHelloException", StringMessageRequest::<>new, ThreadPool.Names.GENERIC, new TransportRequestHandler<StringMessageRequest>() [ CD ]
Line_9 $$ TransportFuture<StringMessageResponse> res = serviceB.submitRequest(nodeA, "sayHelloException", new StringMessageRequest("moshe"), new BaseTransportResponseHandler<StringMessageResponse>() -->Line_14 $$ return ThreadPool.Names.GENERIC[ CD ]
Line_9 $$ TransportFuture<StringMessageResponse> res = serviceB.submitRequest(nodeA, "sayHelloException", new StringMessageRequest("moshe"), new BaseTransportResponseHandler<StringMessageResponse>() -->Line_17 $$ fail("got response instead of exception")[ CD ]
Line_9 $$ TransportFuture<StringMessageResponse> res = serviceB.submitRequest(nodeA, "sayHelloException", new StringMessageRequest("moshe"), new BaseTransportResponseHandler<StringMessageResponse>() -->Line_20 $$ assertThat("bad message !!!", equalTo(exp.getCause().getMessage()))[ CD ]
Line_9 $$ TransportFuture<StringMessageResponse> res = serviceB.submitRequest(nodeA, "sayHelloException", new StringMessageRequest("moshe"), new BaseTransportResponseHandler<StringMessageResponse>() -->Line_20 $$ assertThat("bad message !!!", equalTo(exp.getCause().getMessage()))[ FD ]
Line_3 $$ serviceA.registerRequestHandler("sayHelloException", StringMessageRequest::<>new, ThreadPool.Names.GENERIC, new TransportRequestHandler<StringMessageRequest>() -->Line_5 $$ assertThat("moshe", equalTo(request.message))[ CD ]
