Line_5 $$ ByteArrayIndexInput indexInput = new ByteArrayIndexInput("test", input)-->Line_18 $$ indexInput.seek(seek)[ FD ]
Line_3 $$ for (int i = 0; i < 100; i++) -->Line_4 $$ byte[] input = randomUnicodeOfLength(randomIntBetween(1, 1000)).getBytes(StandardCharsets.UTF_8)[ CD ]
Line_5 $$ ByteArrayIndexInput indexInput = new ByteArrayIndexInput("test", input)-->Line_7 $$ randomReadAndSlice(indexInput, firstReadLen)[ FD ]
Line_6 $$ int firstReadLen = randomIntBetween(0, input.length - 1)-->Line_7 $$ randomReadAndSlice(indexInput, firstReadLen)[ FD ]
Line_2 $$ public void testSeekOverflow() throws IOException -->Line_3 $$ for (int i = 0; i < 100; i++) [ CD ]
Line_17 $$ int seek = input.length + randomIntBetween(1, 100)-->Line_18 $$ indexInput.seek(seek)[ FD ]
Line_3 $$ for (int i = 0; i < 100; i++) -->Line_7 $$ randomReadAndSlice(indexInput, firstReadLen)[ CD ]
Line_5 $$ ByteArrayIndexInput indexInput = new ByteArrayIndexInput("test", input)-->Line_11 $$ indexInput.seek(Integer.MAX_VALUE + 4L)[ FD ]
Line_3 $$ for (int i = 0; i < 100; i++) -->Line_6 $$ int firstReadLen = randomIntBetween(0, input.length - 1)[ CD ]
Line_5 $$ ByteArrayIndexInput indexInput = new ByteArrayIndexInput("test", input)-->Line_14 $$ indexInput.seek(-randomIntBetween(1, 10))[ FD ]
Line_3 $$ for (int i = 0; i < 100; i++) -->Line_5 $$ ByteArrayIndexInput indexInput = new ByteArrayIndexInput("test", input)[ CD ]
