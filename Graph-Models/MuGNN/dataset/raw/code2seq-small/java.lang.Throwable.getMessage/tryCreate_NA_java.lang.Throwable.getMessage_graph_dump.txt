Line_12 $$ LocalHistoryAction action = LocalHistoryAction.NULL-->Line_24 $$ action.finish()[ FD ]
Line_9 $$ final String commandName = getActionName(inputString)-->Line_14 $$ action = LocalHistory.getInstance().startAction(commandName)[ FD ]
Line_34 $$ if (errorMessage == null || errorMessage.length() == 0) -->Line_35 $$ errorMessage = exception[0].toString()[ CD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_44 $$ return PsiUtilCore.toPsiElementArray(result)[ CD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_9 $$ final String commandName = getActionName(inputString)[ CD ]
Line_12 $$ LocalHistoryAction action = LocalHistoryAction.NULL-->Line_14 $$ action = LocalHistory.getInstance().startAction(commandName)[ FD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_3 $$ if (inputString.length() == 0) [ FD ]
Line_31 $$ if (exception[0] != null) -->Line_37 $$ Messages.showMessageDialog(myProject, errorMessage, myErrorTitle, Messages.getErrorIcon())[ CD ]
Line_18 $$ for (int i = 0; i < myCreatedElements[0].length; i++) -->Line_19 $$ myCreatedElements[0][i] = manager.createSmartPsiElementPointer(psiElements[i])[ CD ]
Line_3 $$ if (inputString.length() == 0) -->Line_5 $$ return PsiElement.EMPTY_ARRAY[ CD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_10 $$ new WriteCommandAction(myProject, commandName) [ CD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_8 $$ final SmartPsiElementPointer[][] myCreatedElements = [ CD ]
Line_31 $$ if (exception[0] != null) -->Line_33 $$ String errorMessage = CreateElementActionBase.filterMessage(exception[0].getMessage())[ CD ]
Line_3 $$ if (inputString.length() == 0) -->Line_4 $$ Messages.showMessageDialog(myProject, IdeBundle.message("error.name.should.be.specified"), CommonBundle.getErrorTitle(), Messages.getErrorIcon())[ CD ]
Line_10 $$ new WriteCommandAction(myProject, commandName) -->Line_44 $$ return PsiUtilCore.toPsiElementArray(result)[ FD ]
Line_10 $$ new WriteCommandAction(myProject, commandName) -->Line_12 $$ LocalHistoryAction action = LocalHistoryAction.NULL[ CD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_9 $$ final String commandName = getActionName(inputString)[ FD ]
Line_31 $$ if (exception[0] != null) -->Line_38 $$ return PsiElement.EMPTY_ARRAY[ CD ]
Line_31 $$ if (exception[0] != null) -->Line_34 $$ if (errorMessage == null || errorMessage.length() == 0) [ CD ]
Line_10 $$ new WriteCommandAction(myProject, commandName) -->Line_28 $$ return UndoConfirmationPolicy.REQUEST_CONFIRMATION[ CD ]
Line_14 $$ action = LocalHistory.getInstance().startAction(commandName)-->Line_24 $$ action.finish()[ FD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_15 $$ PsiElement[] psiElements = create(inputString)[ FD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_3 $$ if (inputString.length() == 0) [ CD ]
Line_31 $$ if (exception[0] != null) -->Line_32 $$ LOG.info(exception[0])[ CD ]
Line_10 $$ new WriteCommandAction(myProject, commandName) -->Line_42 $$ ContainerUtil.addIfNotNull(pointer.getElement(), result)[ FD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_7 $$ final Exception[] exception = new Exception[1][ CD ]
Line_17 $$ SmartPointerManager manager = SmartPointerManager.getInstance(myProject)-->Line_19 $$ myCreatedElements[0][i] = manager.createSmartPsiElementPointer(psiElements[i])[ FD ]
Line_2 $$ public PsiElement[] tryCreate(@NotNull final String inputString) -->Line_31 $$ if (exception[0] != null) [ CD ]
