Line_11 $$ for (String host : hosts) -->Line_14 $$ List<IdeaPluginDescriptor> plugins = RepositoryHelper.loadPlugins(host, indicator)[ FD ]
Line_15 $$ for (IdeaPluginDescriptor plugin : plugins) -->Line_16 $$ if (unique.add(plugin.getPluginId())) [ FD ]
Line_6 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_33 $$ if (!list.isEmpty()) [ FD ]
Line_11 $$ for (String host : hosts) -->Line_25 $$ if (host != ApplicationInfoEx.getInstanceEx().getBuiltinPluginsUrl()) [ FD ]
Line_30 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_32 $$ setDownloadStatus(false)[ CD ]
Line_33 $$ if (!list.isEmpty()) -->Line_38 $$ modifyPluginsList(list)[ CD ]
Line_33 $$ if (!list.isEmpty()) -->Line_39 $$ propagateUpdates(list)[ CD ]
Line_11 $$ for (String host : hosts) -->Line_13 $$ if (host == null || acceptHost(host)) [ FD ]
Line_6 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_17 $$ list.add(plugin)[ FD ]
Line_6 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_39 $$ propagateUpdates(list)[ FD ]
Line_11 $$ for (String host : hosts) -->Line_22 $$ LOG.info(host, e)[ FD ]
Line_7 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()-->Line_41 $$ if (!errors.isEmpty()) [ FD ]
Line_45 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) -->Line_46 $$ loadPluginsFromHostInBackground()[ CD ]
Line_11 $$ for (String host : hosts) -->Line_26 $$ errors.put(host, String.format("'%s' for '%s'", e.getMessage(), host))[ FD ]
Line_4 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_10 $$ Set<PluginId> unique = ContainerUtil.newHashSet()[ CD ]
Line_41 $$ if (!errors.isEmpty()) -->Line_44 $$ String ok = CommonBundle.message("button.retry"), cancel = CommonBundle.getCancelButtonText()[ CD ]
Line_4 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_9 $$ List<String> hosts = RepositoryHelper.getPluginHosts()[ CD ]
Line_13 $$ if (host == null || acceptHost(host)) -->Line_14 $$ List<IdeaPluginDescriptor> plugins = RepositoryHelper.loadPlugins(host, indicator)[ CD ]
Line_10 $$ Set<PluginId> unique = ContainerUtil.newHashSet()-->Line_16 $$ if (unique.add(plugin.getPluginId())) [ FD ]
Line_41 $$ if (!errors.isEmpty()) -->Line_45 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ CD ]
Line_7 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()-->Line_26 $$ errors.put(host, String.format("'%s' for '%s'", e.getMessage(), host))[ FD ]
Line_30 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_41 $$ if (!errors.isEmpty()) [ CD ]
Line_33 $$ if (!list.isEmpty()) -->Line_34 $$ InstalledPluginsState state = InstalledPluginsState.getInstance()[ CD ]
Line_34 $$ InstalledPluginsState state = InstalledPluginsState.getInstance()-->Line_36 $$ state.onDescriptorDownload(descriptor)[ FD ]
Line_41 $$ if (!errors.isEmpty()) -->Line_43 $$ String title = IdeBundle.message("title.plugins")[ CD ]
Line_44 $$ String ok = CommonBundle.message("button.retry"), cancel = CommonBundle.getCancelButtonText()-->Line_45 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ FD ]
Line_30 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_33 $$ if (!list.isEmpty()) [ CD ]
Line_11 $$ for (String host : hosts) -->Line_24 $$ LOG.info(host, e)[ FD ]
Line_2 $$ protected void loadPluginsFromHostInBackground() -->Line_3 $$ setDownloadStatus(true)[ CD ]
Line_43 $$ String title = IdeBundle.message("title.plugins")-->Line_45 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ FD ]
Line_4 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_7 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()[ CD ]
Line_6 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()-->Line_38 $$ modifyPluginsList(list)[ FD ]
Line_2 $$ protected void loadPluginsFromHostInBackground() -->Line_4 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() [ CD ]
Line_4 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_30 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_25 $$ if (host != ApplicationInfoEx.getInstanceEx().getBuiltinPluginsUrl()) -->Line_26 $$ errors.put(host, String.format("'%s' for '%s'", e.getMessage(), host))[ CD ]
Line_16 $$ if (unique.add(plugin.getPluginId())) -->Line_17 $$ list.add(plugin)[ CD ]
Line_35 $$ for (IdeaPluginDescriptor descriptor : list) -->Line_36 $$ state.onDescriptorDownload(descriptor)[ FD ]
Line_41 $$ if (!errors.isEmpty()) -->Line_42 $$ String message = IdeBundle.message("error.list.of.plugins.was.not.loaded", StringUtil.join(errors.keySet(), ", "), StringUtil.join(errors.values(), ",\n"))[ CD ]
Line_42 $$ String message = IdeBundle.message("error.list.of.plugins.was.not.loaded", StringUtil.join(errors.keySet(), ", "), StringUtil.join(errors.values(), ",\n"))-->Line_45 $$ if (Messages.showOkCancelDialog(message, title, ok, cancel, Messages.getErrorIcon()) == Messages.OK) [ FD ]
Line_15 $$ for (IdeaPluginDescriptor plugin : plugins) -->Line_17 $$ list.add(plugin)[ FD ]
Line_7 $$ final Map<String, String> errors = ContainerUtil.newLinkedHashMap()-->Line_42 $$ String message = IdeBundle.message("error.list.of.plugins.was.not.loaded", StringUtil.join(errors.keySet(), ", "), StringUtil.join(errors.values(), ",\n"))[ FD ]
Line_4 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_8 $$ ProgressIndicator indicator = new EmptyProgressIndicator()[ CD ]
Line_8 $$ ProgressIndicator indicator = new EmptyProgressIndicator()-->Line_14 $$ List<IdeaPluginDescriptor> plugins = RepositoryHelper.loadPlugins(host, indicator)[ FD ]
Line_4 $$ ApplicationManager.getApplication().executeOnPooledThread(new Runnable() -->Line_6 $$ final List<IdeaPluginDescriptor> list = ContainerUtil.newArrayList()[ CD ]
