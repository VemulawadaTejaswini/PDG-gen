Line_44 $$ for (String tag : tags) -->Line_47 $$ if (instancetag.equals(tag)) [ FD ]
Line_2 $$ public List<DiscoveryNode> buildDynamicNodes() -->Line_114 $$ return cachedDiscoNodes[ CD ]
Line_30 $$ String status = instance.getStatus()-->Line_31 $$ logger.trace("gce instance [ FD ]
Line_3 $$ if (refreshInterval.millis() != 0) -->Line_4 $$ if (cachedDiscoNodes != null && (refreshInterval.millis() < 0 || (System.currentTimeMillis() - lastRefresh) < refreshInterval.millis())) [ CD ]
Line_65 $$ String ip_public = null-->Line_69 $$ if (ip_public == null) [ FD ]
Line_89 $$ String address = ip_private-->Line_94 $$ address = address.concat(":").concat((String) es_port)[ FD ]
Line_68 $$ for (NetworkInterface networkInterface : interfaces) -->Line_70 $$ if (networkInterface.getAccessConfigs() != null) [ FD ]
Line_71 $$ for (AccessConfig accessConfig : networkInterface.getAccessConfigs()) -->Line_72 $$ if (Strings.hasText(accessConfig.getNatIP())) [ FD ]
Line_37 $$ if (tags.length > 0) -->Line_38 $$ logger.trace("start filtering instance [ CD ]
Line_66 $$ String ip_private = null-->Line_101 $$ logger.trace("adding [ FD ]
Line_3 $$ if (refreshInterval.millis() != 0) -->Line_9 $$ lastRefresh = System.currentTimeMillis()[ CD ]
Line_4 $$ if (cachedDiscoNodes != null && (refreshInterval.millis() < 0 || (System.currentTimeMillis() - lastRefresh) < refreshInterval.millis())) -->Line_5 $$ if (logger.isTraceEnabled())[ CD ]
Line_13 $$ String ipAddress = null-->Line_17 $$ ipAddress = NetworkAddress.formatAddress(inetAddress)[ FD ]
Line_90 $$ if (instance.getMetadata() != null && instance.getMetadata().containsKey("es_port")) -->Line_93 $$ if (es_port instanceof String) [ CD ]
Line_27 $$ for (Instance instance : instances) -->Line_43 $$ logger.trace("comparing instance tags [ FD ]
Line_93 $$ if (es_port instanceof String) -->Line_96 $$ logger.trace("es_port is instance of [ CD ]
Line_86 $$ if (ip_private.equals(ipAddress)) -->Line_89 $$ String address = ip_private[ CD ]
Line_36 $$ boolean filterByTag = false-->Line_41 $$ filterByTag = true[ FD ]
Line_80 $$ ip_private = networkInterface.getNetworkIP()-->Line_106 $$ logger.warn("failed to add [ FD ]
Line_23 $$ if (instances == null) -->Line_24 $$ logger.trace("no instance found for project [[ CD ]
Line_71 $$ for (AccessConfig accessConfig : networkInterface.getAccessConfigs()) -->Line_73 $$ ip_public = accessConfig.getNatIP()[ FD ]
Line_28 $$ String name = instance.getName()-->Line_63 $$ logger.trace("instance [ FD ]
Line_68 $$ for (NetworkInterface networkInterface : interfaces) -->Line_80 $$ ip_private = networkInterface.getNetworkIP()[ FD ]
Line_65 $$ String ip_public = null-->Line_73 $$ ip_public = accessConfig.getNatIP()[ FD ]
Line_91 $$ Object es_port = instance.getMetadata().get("es_port")-->Line_92 $$ logger.trace("es_port is defined with [ FD ]
Line_48 $$ found = true-->Line_52 $$ if (!found) [ FD ]
Line_66 $$ String ip_private = null-->Line_79 $$ if (ip_private == null) [ FD ]
Line_39 $$ if (instance.getTags() == null || instance.getTags().isEmpty() || instance.getTags().getItems() == null || instance.getTags().getItems().isEmpty()) -->Line_43 $$ logger.trace("comparing instance tags [ CD ]
Line_5 $$ if (logger.isTraceEnabled())-->Line_6 $$ logger.trace("using cache to retrieve node list")[ CD ]
Line_86 $$ if (ip_private.equals(ipAddress)) -->Line_87 $$ logger.trace("current node found. Ignoring [ CD ]
Line_30 $$ String status = instance.getStatus()-->Line_32 $$ if (Status.TERMINATED.equals(status)) [ FD ]
Line_52 $$ if (!found) -->Line_53 $$ filterByTag = true[ CD ]
Line_69 $$ if (ip_public == null) -->Line_70 $$ if (networkInterface.getAccessConfigs() != null) [ CD ]
Line_4 $$ if (cachedDiscoNodes != null && (refreshInterval.millis() < 0 || (System.currentTimeMillis() - lastRefresh) < refreshInterval.millis())) -->Line_7 $$ return cachedDiscoNodes[ CD ]
Line_28 $$ String name = instance.getName()-->Line_33 $$ logger.debug("node [ FD ]
Line_22 $$ Collection<Instance> instances = gceComputeService.instances()-->Line_23 $$ if (instances == null) [ FD ]
Line_91 $$ Object es_port = instance.getMetadata().get("es_port")-->Line_96 $$ logger.trace("es_port is instance of [ FD ]
Line_89 $$ String address = ip_private-->Line_99 $$ TransportAddress[] addresses = transportService.addressesFromString(address, 1)[ FD ]
Line_28 $$ String name = instance.getName()-->Line_60 $$ logger.trace("filtering out instance [ FD ]
Line_41 $$ filterByTag = true-->Line_53 $$ filterByTag = true[ FD ]
Line_66 $$ String ip_private = null-->Line_106 $$ logger.warn("failed to add [ FD ]
Line_72 $$ if (Strings.hasText(accessConfig.getNatIP())) -->Line_73 $$ ip_public = accessConfig.getNatIP()[ CD ]
Line_29 $$ String type = instance.getMachineType()-->Line_101 $$ logger.trace("adding [ FD ]
Line_28 $$ String name = instance.getName()-->Line_40 $$ logger.trace("no tags for this instance but we asked for tags. [ FD ]
Line_2 $$ public List<DiscoveryNode> buildDynamicNodes() -->Line_3 $$ if (refreshInterval.millis() != 0) [ CD ]
Line_94 $$ address = address.concat(":").concat((String) es_port)-->Line_99 $$ TransportAddress[] addresses = transportService.addressesFromString(address, 1)[ FD ]
Line_45 $$ boolean found = false-->Line_52 $$ if (!found) [ FD ]
Line_13 $$ String ipAddress = null-->Line_86 $$ if (ip_private.equals(ipAddress)) [ FD ]
Line_86 $$ if (ip_private.equals(ipAddress)) -->Line_99 $$ TransportAddress[] addresses = transportService.addressesFromString(address, 1)[ CD ]
Line_86 $$ if (ip_private.equals(ipAddress)) -->Line_90 $$ if (instance.getMetadata() != null && instance.getMetadata().containsKey("es_port")) [ CD ]
Line_28 $$ String name = instance.getName()-->Line_106 $$ logger.warn("failed to add [ FD ]
Line_27 $$ for (Instance instance : instances) -->Line_46 $$ for (String instancetag : instance.getTags().getItems()) [ FD ]
Line_68 $$ for (NetworkInterface networkInterface : interfaces) -->Line_71 $$ for (AccessConfig accessConfig : networkInterface.getAccessConfigs()) [ FD ]
Line_66 $$ String ip_private = null-->Line_86 $$ if (ip_private.equals(ipAddress)) [ FD ]
Line_28 $$ String name = instance.getName()-->Line_87 $$ logger.trace("current node found. Ignoring [ FD ]
Line_80 $$ ip_private = networkInterface.getNetworkIP()-->Line_87 $$ logger.trace("current node found. Ignoring [ FD ]
Line_100 $$ for (TransportAddress transportAddress : addresses) -->Line_101 $$ logger.trace("adding [ FD ]
Line_30 $$ String status = instance.getStatus()-->Line_101 $$ logger.trace("adding [ FD ]
Line_2 $$ public List<DiscoveryNode> buildDynamicNodes() -->Line_11 $$ logger.debug("start building nodes list using GCE API")[ CD ]
Line_27 $$ for (Instance instance : instances) -->Line_91 $$ Object es_port = instance.getMetadata().get("es_port")[ FD ]
Line_93 $$ if (es_port instanceof String) -->Line_94 $$ address = address.concat(":").concat((String) es_port)[ CD ]
Line_2 $$ public List<DiscoveryNode> buildDynamicNodes() -->Line_113 $$ logger.debug("using dynamic discovery nodes [ CD ]
Line_66 $$ String ip_private = null-->Line_87 $$ logger.trace("current node found. Ignoring [ FD ]
Line_27 $$ for (Instance instance : instances) -->Line_39 $$ if (instance.getTags() == null || instance.getTags().isEmpty() || instance.getTags().getItems() == null || instance.getTags().getItems().isEmpty()) [ FD ]
Line_23 $$ if (instances == null) -->Line_25 $$ return cachedDiscoNodes[ CD ]
Line_27 $$ for (Instance instance : instances) -->Line_30 $$ String status = instance.getStatus()[ FD ]
Line_27 $$ for (Instance instance : instances) -->Line_29 $$ String type = instance.getMachineType()[ FD ]
Line_47 $$ if (instancetag.equals(tag)) -->Line_48 $$ found = true[ CD ]
Line_59 $$ if (filterByTag) -->Line_60 $$ logger.trace("filtering out instance [ CD ]
Line_27 $$ for (Instance instance : instances) -->Line_67 $$ List<NetworkInterface> interfaces = instance.getNetworkInterfaces()[ FD ]
Line_79 $$ if (ip_private == null) -->Line_80 $$ ip_private = networkInterface.getNetworkIP()[ CD ]
Line_36 $$ boolean filterByTag = false-->Line_53 $$ filterByTag = true[ FD ]
Line_46 $$ for (String instancetag : instance.getTags().getItems()) -->Line_47 $$ if (instancetag.equals(tag)) [ FD ]
Line_39 $$ if (instance.getTags() == null || instance.getTags().isEmpty() || instance.getTags().getItems() == null || instance.getTags().getItems().isEmpty()) -->Line_41 $$ filterByTag = true[ CD ]
Line_28 $$ String name = instance.getName()-->Line_31 $$ logger.trace("gce instance [ FD ]
Line_37 $$ if (tags.length > 0) -->Line_39 $$ if (instance.getTags() == null || instance.getTags().isEmpty() || instance.getTags().getItems() == null || instance.getTags().getItems().isEmpty()) [ CD ]
Line_17 $$ ipAddress = NetworkAddress.formatAddress(inetAddress)-->Line_86 $$ if (ip_private.equals(ipAddress)) [ FD ]
Line_27 $$ for (Instance instance : instances) -->Line_28 $$ String name = instance.getName()[ FD ]
Line_15 $$ InetAddress inetAddress = networkService.resolvePublishHostAddresses(null)-->Line_17 $$ ipAddress = NetworkAddress.formatAddress(inetAddress)[ FD ]
Line_2 $$ public List<DiscoveryNode> buildDynamicNodes() -->Line_13 $$ String ipAddress = null[ CD ]
Line_91 $$ Object es_port = instance.getMetadata().get("es_port")-->Line_93 $$ if (es_port instanceof String) [ FD ]
Line_45 $$ boolean found = false-->Line_48 $$ found = true[ FD ]
Line_80 $$ ip_private = networkInterface.getNetworkIP()-->Line_86 $$ if (ip_private.equals(ipAddress)) [ FD ]
Line_80 $$ ip_private = networkInterface.getNetworkIP()-->Line_101 $$ logger.trace("adding [ FD ]
Line_90 $$ if (instance.getMetadata() != null && instance.getMetadata().containsKey("es_port")) -->Line_92 $$ logger.trace("es_port is defined with [ CD ]
Line_90 $$ if (instance.getMetadata() != null && instance.getMetadata().containsKey("es_port")) -->Line_91 $$ Object es_port = instance.getMetadata().get("es_port")[ CD ]
Line_27 $$ for (Instance instance : instances) -->Line_90 $$ if (instance.getMetadata() != null && instance.getMetadata().containsKey("es_port")) [ FD ]
Line_2 $$ public List<DiscoveryNode> buildDynamicNodes() -->Line_112 $$ logger.debug("[ CD ]
Line_15 $$ InetAddress inetAddress = networkService.resolvePublishHostAddresses(null)-->Line_16 $$ if (inetAddress != null) [ FD ]
Line_32 $$ if (Status.TERMINATED.equals(status)) -->Line_33 $$ logger.debug("node [ CD ]
Line_59 $$ if (filterByTag) -->Line_63 $$ logger.trace("instance [ CD ]
Line_16 $$ if (inetAddress != null) -->Line_17 $$ ipAddress = NetworkAddress.formatAddress(inetAddress)[ CD ]
Line_27 $$ for (Instance instance : instances) -->Line_60 $$ logger.trace("filtering out instance [ FD ]
Line_28 $$ String name = instance.getName()-->Line_38 $$ logger.trace("start filtering instance [ FD ]
Line_28 $$ String name = instance.getName()-->Line_101 $$ logger.trace("adding [ FD ]
Line_39 $$ if (instance.getTags() == null || instance.getTags().isEmpty() || instance.getTags().getItems() == null || instance.getTags().getItems().isEmpty()) -->Line_40 $$ logger.trace("no tags for this instance but we asked for tags. [ CD ]
Line_66 $$ String ip_private = null-->Line_80 $$ ip_private = networkInterface.getNetworkIP()[ FD ]
