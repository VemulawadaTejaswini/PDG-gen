Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_22 $$ return new CannotAcquireLockException(ex.getMessage(), ex)[ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_13 $$ return new EmptyResultDataAccessException(ex.getMessage(), 1, ex)[ FD ]
Line_6 $$ if (ex instanceof IllegalArgumentException) -->Line_7 $$ return new InvalidDataAccessApiUsageException(ex.getMessage(), ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_33 $$ if (ex instanceof TransactionRequiredException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_7 $$ return new InvalidDataAccessApiUsageException(ex.getMessage(), ex)[ FD ]
Line_3 $$ if (ex instanceof IllegalStateException) -->Line_4 $$ return new InvalidDataAccessApiUsageException(ex.getMessage(), ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_12 $$ if (ex instanceof NoResultException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_3 $$ if (ex instanceof IllegalStateException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_34 $$ return new InvalidDataAccessApiUsageException(ex.getMessage(), ex)[ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_6 $$ if (ex instanceof IllegalArgumentException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_18 $$ if (ex instanceof QueryTimeoutException) [ CD ]
Line_36 $$ if (ex instanceof PersistenceException) -->Line_37 $$ return new JpaSystemException((PersistenceException) ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_27 $$ if (ex instanceof OptimisticLockException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_15 $$ if (ex instanceof NonUniqueResultException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_24 $$ if (ex instanceof PessimisticLockException) [ FD ]
Line_33 $$ if (ex instanceof TransactionRequiredException) -->Line_34 $$ return new InvalidDataAccessApiUsageException(ex.getMessage(), ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_15 $$ if (ex instanceof NonUniqueResultException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_16 $$ return new IncorrectResultSizeDataAccessException(ex.getMessage(), 1, ex)[ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_30 $$ if (ex instanceof EntityExistsException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_19 $$ return new org.springframework.dao.QueryTimeoutException(ex.getMessage(), ex)[ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_33 $$ if (ex instanceof TransactionRequiredException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_6 $$ if (ex instanceof IllegalArgumentException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_36 $$ if (ex instanceof PersistenceException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_21 $$ if (ex instanceof LockTimeoutException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_4 $$ return new InvalidDataAccessApiUsageException(ex.getMessage(), ex)[ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_24 $$ if (ex instanceof PessimisticLockException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_3 $$ if (ex instanceof IllegalStateException) [ FD ]
Line_24 $$ if (ex instanceof PessimisticLockException) -->Line_25 $$ return new PessimisticLockingFailureException(ex.getMessage(), ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_12 $$ if (ex instanceof NoResultException) [ CD ]
Line_30 $$ if (ex instanceof EntityExistsException) -->Line_31 $$ return new DataIntegrityViolationException(ex.getMessage(), ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_39 $$ return null[ CD ]
Line_12 $$ if (ex instanceof NoResultException) -->Line_13 $$ return new EmptyResultDataAccessException(ex.getMessage(), 1, ex)[ CD ]
Line_27 $$ if (ex instanceof OptimisticLockException) -->Line_28 $$ return new JpaOptimisticLockingFailureException((OptimisticLockException) ex)[ CD ]
Line_15 $$ if (ex instanceof NonUniqueResultException) -->Line_16 $$ return new IncorrectResultSizeDataAccessException(ex.getMessage(), 1, ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_36 $$ if (ex instanceof PersistenceException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_21 $$ if (ex instanceof LockTimeoutException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_9 $$ if (ex instanceof EntityNotFoundException) [ FD ]
Line_9 $$ if (ex instanceof EntityNotFoundException) -->Line_10 $$ return new JpaObjectRetrievalFailureException((EntityNotFoundException) ex)[ CD ]
Line_18 $$ if (ex instanceof QueryTimeoutException) -->Line_19 $$ return new org.springframework.dao.QueryTimeoutException(ex.getMessage(), ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_27 $$ if (ex instanceof OptimisticLockException) [ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_30 $$ if (ex instanceof EntityExistsException) [ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_31 $$ return new DataIntegrityViolationException(ex.getMessage(), ex)[ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_9 $$ if (ex instanceof EntityNotFoundException) [ CD ]
Line_21 $$ if (ex instanceof LockTimeoutException) -->Line_22 $$ return new CannotAcquireLockException(ex.getMessage(), ex)[ CD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_25 $$ return new PessimisticLockingFailureException(ex.getMessage(), ex)[ FD ]
Line_2 $$ public static DataAccessException convertJpaAccessExceptionIfPossible(RuntimeException ex) -->Line_18 $$ if (ex instanceof QueryTimeoutException) [ FD ]
