Line_2 $$ void registerError(String methodName, String operationName, Throwable e) -->Line_3 $$ if (myPostponedError == null) [ CD ]
Line_4 $$ Throwable err = e.getCause()-->Line_5 $$ if (err == null) [ FD ]
Line_11 $$ if (errMessage != null) -->Line_12 $$ message.append(errMessage)[ CD ]
Line_8 $$ final StringBuilder message = new StringBuilder()-->Line_9 $$ message.append("Operation '").append(operationName).append("' failed for ").append(myClassName).append(".").append(methodName).append("(): ")[ FD ]
Line_10 $$ final String errMessage = err.getMessage()-->Line_12 $$ message.append(errMessage)[ FD ]
Line_2 $$ void registerError(String methodName, String operationName, Throwable e) -->Line_9 $$ message.append("Operation '").append(operationName).append("' failed for ").append(myClassName).append(".").append(methodName).append("(): ")[ FD ]
Line_2 $$ void registerError(String methodName, String operationName, Throwable e) -->Line_4 $$ Throwable err = e.getCause()[ FD ]
Line_8 $$ final StringBuilder message = new StringBuilder()-->Line_17 $$ myPostponedError = new RuntimeException(message.toString(), err)[ FD ]
Line_14 $$ final ByteArrayOutputStream out = new ByteArrayOutputStream()-->Line_16 $$ message.append('\n').append(out.toString())[ FD ]
Line_6 $$ err = e-->Line_10 $$ final String errMessage = err.getMessage()[ FD ]
Line_3 $$ if (myPostponedError == null) -->Line_8 $$ final StringBuilder message = new StringBuilder()[ CD ]
Line_4 $$ Throwable err = e.getCause()-->Line_6 $$ err = e[ FD ]
Line_3 $$ if (myPostponedError == null) -->Line_9 $$ message.append("Operation '").append(operationName).append("' failed for ").append(myClassName).append(".").append(methodName).append("(): ")[ CD ]
Line_3 $$ if (myPostponedError == null) -->Line_15 $$ err.printStackTrace(new PrintStream(out))[ CD ]
Line_3 $$ if (myPostponedError == null) -->Line_11 $$ if (errMessage != null) [ CD ]
Line_5 $$ if (err == null) -->Line_6 $$ err = e[ CD ]
Line_4 $$ Throwable err = e.getCause()-->Line_10 $$ final String errMessage = err.getMessage()[ FD ]
Line_3 $$ if (myPostponedError == null) -->Line_16 $$ message.append('\n').append(out.toString())[ CD ]
Line_2 $$ void registerError(String methodName, String operationName, Throwable e) -->Line_19 $$ if (myInstrumented) [ CD ]
Line_8 $$ final StringBuilder message = new StringBuilder()-->Line_12 $$ message.append(errMessage)[ FD ]
Line_3 $$ if (myPostponedError == null) -->Line_14 $$ final ByteArrayOutputStream out = new ByteArrayOutputStream()[ CD ]
Line_4 $$ Throwable err = e.getCause()-->Line_15 $$ err.printStackTrace(new PrintStream(out))[ FD ]
Line_3 $$ if (myPostponedError == null) -->Line_10 $$ final String errMessage = err.getMessage()[ CD ]
Line_8 $$ final StringBuilder message = new StringBuilder()-->Line_16 $$ message.append('\n').append(out.toString())[ FD ]
Line_10 $$ final String errMessage = err.getMessage()-->Line_11 $$ if (errMessage != null) [ FD ]
Line_3 $$ if (myPostponedError == null) -->Line_5 $$ if (err == null) [ CD ]
Line_6 $$ err = e-->Line_15 $$ err.printStackTrace(new PrintStream(out))[ FD ]
Line_3 $$ if (myPostponedError == null) -->Line_4 $$ Throwable err = e.getCause()[ CD ]
Line_2 $$ void registerError(String methodName, String operationName, Throwable e) -->Line_6 $$ err = e[ FD ]
Line_19 $$ if (myInstrumented) -->Line_20 $$ processPostponedErrors()[ CD ]
