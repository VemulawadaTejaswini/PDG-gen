Line_3 $$ EntityManager em = emf.createEntityManager()-->Line_21 $$ em.close()[ FD ]
Line_2 $$ public String queryCacheCheckIfEmpty(String id) -->Line_23 $$ return "OK"[ CD ]
Line_10 $$ Query query = em.createQuery(queryString)-->Line_12 $$ query.getResultList()[ FD ]
Line_9 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)-->Line_14 $$ assertEquals("Expected 1 put in cache" + generateQueryCacheStats(queryStats), 1, queryStats.getCachePutCount())[ FD ]
Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()-->Line_5 $$ stats.clear()[ FD ]
Line_8 $$ String queryString = "from Employee e where e.id > " + id-->Line_9 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)[ FD ]
Line_10 $$ Query query = em.createQuery(queryString)-->Line_11 $$ query.setHint("org.hibernate.cacheable", true)[ FD ]
Line_2 $$ public String queryCacheCheckIfEmpty(String id) -->Line_3 $$ EntityManager em = emf.createEntityManager()[ CD ]
Line_3 $$ EntityManager em = emf.createEntityManager()-->Line_10 $$ Query query = em.createQuery(queryString)[ FD ]
Line_9 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)-->Line_13 $$ assertEquals("Expected 1 miss in cache" + generateQueryCacheStats(queryStats), 1, queryStats.getCacheMissCount())[ FD ]
Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()-->Line_9 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)[ FD ]
Line_2 $$ public String queryCacheCheckIfEmpty(String id) -->Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()[ CD ]
Line_8 $$ String queryString = "from Employee e where e.id > " + id-->Line_10 $$ Query query = em.createQuery(queryString)[ FD ]
Line_2 $$ public String queryCacheCheckIfEmpty(String id) -->Line_5 $$ stats.clear()[ CD ]
Line_3 $$ EntityManager em = emf.createEntityManager()-->Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()[ FD ]
Line_9 $$ QueryStatistics queryStats = stats.getQueryStatistics(queryString)-->Line_15 $$ assertEquals("Expected no hits in cache" + generateQueryCacheStats(queryStats), 0, queryStats.getCacheHitCount())[ FD ]
