Line_4 $$ final ProjectJdkImpl sdk-->Line_8 $$ sdk = new ProjectJdkImpl(sdkName, sdkType)[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_16 $$ Messages.showErrorDialog("Error configuring SDK: " + e.getMessage() + ".\nPlease make sure that " + FileUtil.toSystemDependentName(homeDir.getPath()) + " is a valid home path for this SDK type.", "Error Configuring SDK")[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_13 $$ sdkType.setupSdkPaths(sdk)[ FD ]
Line_8 $$ sdk = new ProjectJdkImpl(sdkName, sdkType)-->Line_10 $$ sdk.setSdkAdditionalData(additionalData)[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_3 $$ final List<Sdk> sdksList = Arrays.asList(allSdks)[ FD ]
Line_4 $$ final ProjectJdkImpl sdk-->Line_12 $$ sdk.setHomePath(sdkPath)[ FD ]
Line_9 $$ if (additionalData != null) -->Line_10 $$ sdk.setSdkAdditionalData(additionalData)[ CD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_15 $$ if (!silent) [ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_10 $$ sdk.setSdkAdditionalData(additionalData)[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_4 $$ final ProjectJdkImpl sdk[ CD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_6 $$ String sdkPath = sdkType.sdkPath(homeDir)[ FD ]
Line_6 $$ String sdkPath = sdkType.sdkPath(homeDir)-->Line_12 $$ sdk.setHomePath(sdkPath)[ FD ]
Line_8 $$ sdk = new ProjectJdkImpl(sdkName, sdkType)-->Line_12 $$ sdk.setHomePath(sdkPath)[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_3 $$ final List<Sdk> sdksList = Arrays.asList(allSdks)[ CD ]
Line_6 $$ String sdkPath = sdkType.sdkPath(homeDir)-->Line_7 $$ final String sdkName = customSdkSuggestedName == null ? createUniqueSdkName(sdkType, sdkPath, sdksList) : createUniqueSdkName(customSdkSuggestedName, sdksList)[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_7 $$ final String sdkName = customSdkSuggestedName == null ? createUniqueSdkName(sdkType, sdkPath, sdksList) : createUniqueSdkName(customSdkSuggestedName, sdksList)[ FD ]
Line_15 $$ if (!silent) -->Line_16 $$ Messages.showErrorDialog("Error configuring SDK: " + e.getMessage() + ".\nPlease make sure that " + FileUtil.toSystemDependentName(homeDir.getPath()) + " is a valid home path for this SDK type.", "Error Configuring SDK")[ CD ]
Line_4 $$ final ProjectJdkImpl sdk-->Line_13 $$ sdkType.setupSdkPaths(sdk)[ FD ]
Line_3 $$ final List<Sdk> sdksList = Arrays.asList(allSdks)-->Line_7 $$ final String sdkName = customSdkSuggestedName == null ? createUniqueSdkName(sdkType, sdkPath, sdksList) : createUniqueSdkName(customSdkSuggestedName, sdksList)[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_20 $$ return sdk[ CD ]
Line_8 $$ sdk = new ProjectJdkImpl(sdkName, sdkType)-->Line_13 $$ sdkType.setupSdkPaths(sdk)[ FD ]
Line_4 $$ final ProjectJdkImpl sdk-->Line_10 $$ sdk.setSdkAdditionalData(additionalData)[ FD ]
Line_2 $$ public static Sdk setupSdk(@NotNull Sdk[] allSdks, @NotNull VirtualFile homeDir, final SdkType sdkType, final boolean silent, @Nullable final SdkAdditionalData additionalData, @Nullable final String customSdkSuggestedName) -->Line_9 $$ if (additionalData != null) [ FD ]
