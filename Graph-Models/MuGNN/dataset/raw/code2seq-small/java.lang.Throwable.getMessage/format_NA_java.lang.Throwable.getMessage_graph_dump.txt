Line_10 $$ int suppressedFailureCount = count - MAX_CAUSES-->Line_14 $$ sb.append(String.format("%n    ...and %d more failures.", suppressedFailureCount))[ FD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_11 $$ if (suppressedFailureCount == 1) [ CD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_17 $$ sb.append(String.format("%nSee the complete log at: ")).append(logLocation)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(message)-->Line_12 $$ sb.append(String.format("%n    ...and %d more failure.", suppressedFailureCount))[ FD ]
Line_10 $$ int suppressedFailureCount = count - MAX_CAUSES-->Line_12 $$ sb.append(String.format("%n    ...and %d more failure.", suppressedFailureCount))[ FD ]
Line_5 $$ for (Throwable cause : causes) -->Line_7 $$ sb.append(String.format("%n    %s", cause.getMessage()))[ FD ]
Line_10 $$ int suppressedFailureCount = count - MAX_CAUSES-->Line_13 $$ if (suppressedFailureCount > 1) [ FD ]
Line_11 $$ if (suppressedFailureCount == 1) -->Line_12 $$ sb.append(String.format("%n    ...and %d more failure.", suppressedFailureCount))[ CD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_16 $$ if (logLocation != null) [ CD ]
Line_11 $$ if (suppressedFailureCount == 1) -->Line_13 $$ if (suppressedFailureCount > 1) [ CD ]
Line_6 $$ if (count++ < MAX_CAUSES) -->Line_7 $$ sb.append(String.format("%n    %s", cause.getMessage()))[ CD ]
Line_10 $$ int suppressedFailureCount = count - MAX_CAUSES-->Line_11 $$ if (suppressedFailureCount == 1) [ FD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_10 $$ int suppressedFailureCount = count - MAX_CAUSES[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(message)-->Line_17 $$ sb.append(String.format("%nSee the complete log at: ")).append(logLocation)[ FD ]
Line_13 $$ if (suppressedFailureCount > 1) -->Line_14 $$ sb.append(String.format("%n    ...and %d more failures.", suppressedFailureCount))[ CD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_3 $$ StringBuilder sb = new StringBuilder(message)[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(message)-->Line_7 $$ sb.append(String.format("%n    %s", cause.getMessage()))[ FD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_16 $$ if (logLocation != null) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(message)-->Line_19 $$ return sb.toString()[ FD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_19 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(message)-->Line_14 $$ sb.append(String.format("%n    ...and %d more failures.", suppressedFailureCount))[ FD ]
Line_16 $$ if (logLocation != null) -->Line_17 $$ sb.append(String.format("%nSee the complete log at: ")).append(logLocation)[ CD ]
Line_4 $$ int count = 0-->Line_6 $$ if (count++ < MAX_CAUSES) [ FD ]
Line_2 $$ private static String format(String message, Iterable<? extends Throwable> causes, String logLocation) -->Line_4 $$ int count = 0[ CD ]
