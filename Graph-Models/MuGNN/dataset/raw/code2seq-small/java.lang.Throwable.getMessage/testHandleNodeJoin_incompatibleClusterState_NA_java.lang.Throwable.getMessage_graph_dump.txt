Line_14 $$ DiscoveryNode node = state.nodes().localNode()-->Line_15 $$ zenDiscovery.handleJoinRequest(node, stateWithCustomMetaData, new MembershipAction.JoinCallback() [ FD ]
Line_8 $$ ClusterService clusterService = internalCluster().getInstance(ClusterService.class, node1)-->Line_9 $$ final ClusterState state = clusterService.state()[ FD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_9 $$ final ClusterState state = clusterService.state()[ CD ]
Line_9 $$ final ClusterState state = clusterService.state()-->Line_10 $$ MetaData.Builder mdBuilder = MetaData.builder(state.metaData())[ FD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_3 $$ Settings nodeSettings = Settings.settingsBuilder().put("discovery.type", "zen").build()[ CD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_7 $$ ZenDiscovery zenDiscovery = (ZenDiscovery) internalCluster().getInstance(Discovery.class, masterOnlyNode)[ CD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_14 $$ DiscoveryNode node = state.nodes().localNode()[ CD ]
Line_3 $$ Settings nodeSettings = Settings.settingsBuilder().put("discovery.type", "zen").build()-->Line_5 $$ String masterOnlyNode = internalCluster().startMasterOnlyNode(nodeSettings)[ FD ]
Line_13 $$ final AtomicReference<IllegalStateException> holder = new AtomicReference()-->Line_19 $$ holder.set((IllegalStateException) t)[ FD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_8 $$ ClusterService clusterService = internalCluster().getInstance(ClusterService.class, node1)[ CD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_5 $$ String masterOnlyNode = internalCluster().startMasterOnlyNode(nodeSettings)[ CD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_13 $$ final AtomicReference<IllegalStateException> holder = new AtomicReference()[ CD ]
Line_9 $$ final ClusterState state = clusterService.state()-->Line_12 $$ ClusterState stateWithCustomMetaData = ClusterState.builder(state).metaData(mdBuilder).build()[ FD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_23 $$ assertThat(holder.get().getMessage(), equalTo("failure when sending a validation request to node"))[ CD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_22 $$ assertThat(holder.get(), notNullValue())[ CD ]
Line_10 $$ MetaData.Builder mdBuilder = MetaData.builder(state.metaData())-->Line_11 $$ mdBuilder.putCustom(CustomMetaData.TYPE, new CustomMetaData("data"))[ FD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_10 $$ MetaData.Builder mdBuilder = MetaData.builder(state.metaData())[ CD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_12 $$ ClusterState stateWithCustomMetaData = ClusterState.builder(state).metaData(mdBuilder).build()[ CD ]
Line_13 $$ final AtomicReference<IllegalStateException> holder = new AtomicReference()-->Line_22 $$ assertThat(holder.get(), notNullValue())[ FD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_6 $$ String node1 = internalCluster().startNode(nodeSettings)[ CD ]
Line_9 $$ final ClusterState state = clusterService.state()-->Line_14 $$ DiscoveryNode node = state.nodes().localNode()[ FD ]
Line_7 $$ ZenDiscovery zenDiscovery = (ZenDiscovery) internalCluster().getInstance(Discovery.class, masterOnlyNode)-->Line_15 $$ zenDiscovery.handleJoinRequest(node, stateWithCustomMetaData, new MembershipAction.JoinCallback() [ FD ]
Line_13 $$ final AtomicReference<IllegalStateException> holder = new AtomicReference()-->Line_23 $$ assertThat(holder.get().getMessage(), equalTo("failure when sending a validation request to node"))[ FD ]
Line_5 $$ String masterOnlyNode = internalCluster().startMasterOnlyNode(nodeSettings)-->Line_7 $$ ZenDiscovery zenDiscovery = (ZenDiscovery) internalCluster().getInstance(Discovery.class, masterOnlyNode)[ FD ]
Line_3 $$ Settings nodeSettings = Settings.settingsBuilder().put("discovery.type", "zen").build()-->Line_6 $$ String node1 = internalCluster().startNode(nodeSettings)[ FD ]
Line_12 $$ ClusterState stateWithCustomMetaData = ClusterState.builder(state).metaData(mdBuilder).build()-->Line_15 $$ zenDiscovery.handleJoinRequest(node, stateWithCustomMetaData, new MembershipAction.JoinCallback() [ FD ]
Line_10 $$ MetaData.Builder mdBuilder = MetaData.builder(state.metaData())-->Line_12 $$ ClusterState stateWithCustomMetaData = ClusterState.builder(state).metaData(mdBuilder).build()[ FD ]
Line_15 $$ zenDiscovery.handleJoinRequest(node, stateWithCustomMetaData, new MembershipAction.JoinCallback() -->Line_19 $$ holder.set((IllegalStateException) t)[ CD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_15 $$ zenDiscovery.handleJoinRequest(node, stateWithCustomMetaData, new MembershipAction.JoinCallback() [ CD ]
Line_6 $$ String node1 = internalCluster().startNode(nodeSettings)-->Line_8 $$ ClusterService clusterService = internalCluster().getInstance(ClusterService.class, node1)[ FD ]
Line_2 $$ public void testHandleNodeJoin_incompatibleClusterState() throws UnknownHostException -->Line_11 $$ mdBuilder.putCustom(CustomMetaData.TYPE, new CustomMetaData("data"))[ CD ]
