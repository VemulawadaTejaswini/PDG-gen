Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_29 $$ if (e instanceof UnsupportedOperationException) [ FD ]
Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_22 $$ s = Response.Status.FORBIDDEN-->Line_24 $$ s = Response.Status.FORBIDDEN[ FD ]
Line_18 $$ e = toCause(e)-->Line_29 $$ if (e instanceof UnsupportedOperationException) [ FD ]
Line_18 $$ e = toCause(e)-->Line_31 $$ if (e instanceof IllegalArgumentException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_21 $$ if (e instanceof SecurityException) [ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_27 $$ if (e instanceof IOException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_27 $$ if (e instanceof IOException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_37 $$ final String js = JsonUtil.toJsonString(e)[ FD ]
Line_20 $$ final Response.Status s-->Line_32 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_14 $$ if (e instanceof RemoteException) [ FD ]
Line_20 $$ final Response.Status s-->Line_28 $$ s = Response.Status.FORBIDDEN[ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_14 $$ if (e instanceof RemoteException) [ FD ]
Line_20 $$ final Response.Status s-->Line_26 $$ s = Response.Status.NOT_FOUND[ FD ]
Line_24 $$ s = Response.Status.FORBIDDEN-->Line_26 $$ s = Response.Status.NOT_FOUND[ FD ]
Line_12 $$ e = toCause(e)-->Line_31 $$ if (e instanceof IllegalArgumentException) [ FD ]
Line_28 $$ s = Response.Status.FORBIDDEN-->Line_32 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_17 $$ if (e instanceof SecurityException) [ FD ]
Line_12 $$ e = toCause(e)-->Line_34 $$ LOG.warn("INTERNAL_SERVER_ERROR", e)[ FD ]
Line_32 $$ s = Response.Status.BAD_REQUEST-->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ FD ]
Line_12 $$ e = toCause(e)-->Line_23 $$ if (e instanceof AuthorizationException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_7 $$ if (e instanceof ParamException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_12 $$ e = toCause(e)[ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_17 $$ if (e instanceof SecurityException) [ FD ]
Line_24 $$ s = Response.Status.FORBIDDEN-->Line_30 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_7 $$ if (e instanceof ParamException) -->Line_8 $$ final ParamException paramexception = (ParamException) e[ CD ]
Line_8 $$ final ParamException paramexception = (ParamException) e-->Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)[ FD ]
Line_30 $$ s = Response.Status.BAD_REQUEST-->Line_32 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_12 $$ e = toCause(e)-->Line_29 $$ if (e instanceof UnsupportedOperationException) [ FD ]
Line_22 $$ s = Response.Status.FORBIDDEN-->Line_26 $$ s = Response.Status.NOT_FOUND[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)[ FD ]
Line_12 $$ e = toCause(e)-->Line_18 $$ e = toCause(e)[ FD ]
Line_21 $$ if (e instanceof SecurityException) -->Line_23 $$ if (e instanceof AuthorizationException) [ CD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_31 $$ if (e instanceof IllegalArgumentException) [ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_12 $$ e = toCause(e)[ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_25 $$ if (e instanceof FileNotFoundException) [ FD ]
Line_18 $$ e = toCause(e)-->Line_25 $$ if (e instanceof FileNotFoundException) [ FD ]
Line_18 $$ e = toCause(e)-->Line_27 $$ if (e instanceof IOException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_11 $$ if (e instanceof ContainerException) [ FD ]
Line_26 $$ s = Response.Status.NOT_FOUND-->Line_30 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_29 $$ if (e instanceof UnsupportedOperationException) [ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_37 $$ final String js = JsonUtil.toJsonString(e)[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_4 $$ LOG.trace("GOT EXCEPITION", e)[ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_23 $$ if (e instanceof AuthorizationException) [ FD ]
Line_14 $$ if (e instanceof RemoteException) -->Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()[ CD ]
Line_28 $$ s = Response.Status.FORBIDDEN-->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ FD ]
Line_28 $$ s = Response.Status.FORBIDDEN-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_23 $$ if (e instanceof AuthorizationException) [ FD ]
Line_29 $$ if (e instanceof UnsupportedOperationException) -->Line_31 $$ if (e instanceof IllegalArgumentException) [ CD ]
Line_18 $$ e = toCause(e)-->Line_23 $$ if (e instanceof AuthorizationException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_20 $$ final Response.Status s[ CD ]
Line_12 $$ e = toCause(e)-->Line_27 $$ if (e instanceof IOException) [ FD ]
Line_24 $$ s = Response.Status.FORBIDDEN-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_37 $$ final String js = JsonUtil.toJsonString(e)[ FD ]
Line_23 $$ if (e instanceof AuthorizationException) -->Line_25 $$ if (e instanceof FileNotFoundException) [ CD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_18 $$ e = toCause(e)[ FD ]
Line_26 $$ s = Response.Status.NOT_FOUND-->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ FD ]
Line_24 $$ s = Response.Status.FORBIDDEN-->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_14 $$ if (e instanceof RemoteException) [ CD ]
Line_26 $$ s = Response.Status.NOT_FOUND-->Line_32 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_22 $$ s = Response.Status.FORBIDDEN-->Line_32 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_18 $$ e = toCause(e)-->Line_37 $$ final String js = JsonUtil.toJsonString(e)[ FD ]
Line_25 $$ if (e instanceof FileNotFoundException) -->Line_26 $$ s = Response.Status.NOT_FOUND[ CD ]
Line_32 $$ s = Response.Status.BAD_REQUEST-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_26 $$ s = Response.Status.NOT_FOUND-->Line_28 $$ s = Response.Status.FORBIDDEN[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_11 $$ if (e instanceof ContainerException) [ CD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_6 $$ response.setContentType(null)[ CD ]
Line_3 $$ if (LOG.isTraceEnabled()) -->Line_4 $$ LOG.trace("GOT EXCEPITION", e)[ CD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_7 $$ if (e instanceof ParamException) [ CD ]
Line_31 $$ if (e instanceof IllegalArgumentException) -->Line_34 $$ LOG.warn("INTERNAL_SERVER_ERROR", e)[ CD ]
Line_17 $$ if (e instanceof SecurityException) -->Line_18 $$ e = toCause(e)[ CD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_21 $$ if (e instanceof SecurityException) [ CD ]
Line_24 $$ s = Response.Status.FORBIDDEN-->Line_28 $$ s = Response.Status.FORBIDDEN[ FD ]
Line_37 $$ final String js = JsonUtil.toJsonString(e)-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_22 $$ s = Response.Status.FORBIDDEN-->Line_28 $$ s = Response.Status.FORBIDDEN[ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_25 $$ if (e instanceof FileNotFoundException) [ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_27 $$ if (e instanceof IOException) [ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_21 $$ if (e instanceof SecurityException) [ FD ]
Line_22 $$ s = Response.Status.FORBIDDEN-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_30 $$ s = Response.Status.BAD_REQUEST-->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ FD ]
Line_12 $$ e = toCause(e)-->Line_14 $$ if (e instanceof RemoteException) [ FD ]
Line_7 $$ if (e instanceof ParamException) -->Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)[ CD ]
Line_18 $$ e = toCause(e)-->Line_34 $$ LOG.warn("INTERNAL_SERVER_ERROR", e)[ FD ]
Line_20 $$ final Response.Status s-->Line_24 $$ s = Response.Status.FORBIDDEN[ FD ]
Line_27 $$ if (e instanceof IOException) -->Line_29 $$ if (e instanceof UnsupportedOperationException) [ CD ]
Line_25 $$ if (e instanceof FileNotFoundException) -->Line_27 $$ if (e instanceof IOException) [ CD ]
Line_29 $$ if (e instanceof UnsupportedOperationException) -->Line_30 $$ s = Response.Status.BAD_REQUEST[ CD ]
Line_26 $$ s = Response.Status.NOT_FOUND-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_12 $$ e = toCause(e)-->Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_23 $$ if (e instanceof AuthorizationException) [ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_21 $$ if (e instanceof SecurityException) [ FD ]
Line_23 $$ if (e instanceof AuthorizationException) -->Line_24 $$ s = Response.Status.FORBIDDEN[ CD ]
Line_20 $$ final Response.Status s-->Line_30 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_34 $$ LOG.warn("INTERNAL_SERVER_ERROR", e)[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_34 $$ LOG.warn("INTERNAL_SERVER_ERROR", e)[ FD ]
Line_30 $$ s = Response.Status.BAD_REQUEST-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_11 $$ if (e instanceof ContainerException) -->Line_12 $$ e = toCause(e)[ CD ]
Line_27 $$ if (e instanceof IOException) -->Line_28 $$ s = Response.Status.FORBIDDEN[ CD ]
Line_24 $$ s = Response.Status.FORBIDDEN-->Line_32 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_20 $$ final Response.Status s-->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ FD ]
Line_12 $$ e = toCause(e)-->Line_21 $$ if (e instanceof SecurityException) [ FD ]
Line_31 $$ if (e instanceof IllegalArgumentException) -->Line_32 $$ s = Response.Status.BAD_REQUEST[ CD ]
Line_12 $$ e = toCause(e)-->Line_25 $$ if (e instanceof FileNotFoundException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_3 $$ if (LOG.isTraceEnabled()) [ CD ]
Line_12 $$ e = toCause(e)-->Line_17 $$ if (e instanceof SecurityException) [ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()[ FD ]
Line_20 $$ final Response.Status s-->Line_22 $$ s = Response.Status.FORBIDDEN[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_17 $$ if (e instanceof SecurityException) [ CD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_18 $$ e = toCause(e)[ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_34 $$ LOG.warn("INTERNAL_SERVER_ERROR", e)[ FD ]
Line_22 $$ s = Response.Status.FORBIDDEN-->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ FD ]
Line_22 $$ s = Response.Status.FORBIDDEN-->Line_30 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_18 $$ e = toCause(e)-->Line_21 $$ if (e instanceof SecurityException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_29 $$ if (e instanceof UnsupportedOperationException) [ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_18 $$ e = toCause(e)[ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ CD ]
Line_20 $$ final Response.Status s-->Line_38 $$ return Response.status(s).type(MediaType.APPLICATION_JSON).entity(js).build()[ FD ]
Line_28 $$ s = Response.Status.FORBIDDEN-->Line_30 $$ s = Response.Status.BAD_REQUEST[ FD ]
Line_12 $$ e = toCause(e)-->Line_37 $$ final String js = JsonUtil.toJsonString(e)[ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_11 $$ if (e instanceof ContainerException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_31 $$ if (e instanceof IllegalArgumentException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()[ FD ]
Line_15 $$ e = ((RemoteException) e).unwrapRemoteException()-->Line_17 $$ if (e instanceof SecurityException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_25 $$ if (e instanceof FileNotFoundException) [ FD ]
Line_9 $$ e = new IllegalArgumentException("Invalid value for webhdfs parameter \"" + paramexception.getParameterName() + "\": " + e.getCause().getMessage(), e)-->Line_31 $$ if (e instanceof IllegalArgumentException) [ FD ]
Line_2 $$ public Response toResponse(Exception e) -->Line_37 $$ final String js = JsonUtil.toJsonString(e)[ CD ]
Line_21 $$ if (e instanceof SecurityException) -->Line_22 $$ s = Response.Status.FORBIDDEN[ CD ]
Line_31 $$ if (e instanceof IllegalArgumentException) -->Line_35 $$ s = Response.Status.INTERNAL_SERVER_ERROR[ CD ]
