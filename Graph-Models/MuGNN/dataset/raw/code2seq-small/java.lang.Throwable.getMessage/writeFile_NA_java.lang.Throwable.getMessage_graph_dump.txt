Line_9 $$ if (!metaModelPackage.isEmpty()) -->Line_10 $$ pw.println("package " + metaModelPackage + ";")[ CD ]
Line_8 $$ PrintWriter pw = new PrintWriter(os)-->Line_16 $$ pw.close()[ FD ]
Line_2 $$ public static void writeFile(MetaEntity entity, Context context) -->Line_13 $$ pw.println(entity.generateImports())[ FD ]
Line_6 $$ FileObject fo = context.getProcessingEnvironment().getFiler().createSourceFile(getFullyQualifiedClassName(entity, metaModelPackage))-->Line_7 $$ OutputStream os = fo.openOutputStream()[ FD ]
Line_4 $$ String metaModelPackage = entity.getPackageName()-->Line_6 $$ FileObject fo = context.getProcessingEnvironment().getFiler().createSourceFile(getFullyQualifiedClassName(entity, metaModelPackage))[ FD ]
Line_8 $$ PrintWriter pw = new PrintWriter(os)-->Line_13 $$ pw.println(entity.generateImports())[ FD ]
Line_2 $$ public static void writeFile(MetaEntity entity, Context context) -->Line_20 $$ context.logMessage(Diagnostic.Kind.ERROR, "Problem opening file to write MetaModel for " + entity.getSimpleName() + ioEx.getMessage())[ FD ]
Line_2 $$ public static void writeFile(MetaEntity entity, Context context) -->Line_5 $$ String body = generateBody(entity, context).toString()[ FD ]
Line_2 $$ public static void writeFile(MetaEntity entity, Context context) -->Line_4 $$ String metaModelPackage = entity.getPackageName()[ FD ]
Line_4 $$ String metaModelPackage = entity.getPackageName()-->Line_9 $$ if (!metaModelPackage.isEmpty()) [ FD ]
Line_2 $$ public static void writeFile(MetaEntity entity, Context context) -->Line_18 $$ context.logMessage(Diagnostic.Kind.ERROR, "Problem with Filer: " + filerEx.getMessage())[ FD ]
Line_8 $$ PrintWriter pw = new PrintWriter(os)-->Line_11 $$ pw.println()[ FD ]
Line_8 $$ PrintWriter pw = new PrintWriter(os)-->Line_14 $$ pw.println(body)[ FD ]
Line_9 $$ if (!metaModelPackage.isEmpty()) -->Line_11 $$ pw.println()[ CD ]
Line_8 $$ PrintWriter pw = new PrintWriter(os)-->Line_15 $$ pw.flush()[ FD ]
Line_2 $$ public static void writeFile(MetaEntity entity, Context context) -->Line_6 $$ FileObject fo = context.getProcessingEnvironment().getFiler().createSourceFile(getFullyQualifiedClassName(entity, metaModelPackage))[ FD ]
Line_8 $$ PrintWriter pw = new PrintWriter(os)-->Line_10 $$ pw.println("package " + metaModelPackage + ";")[ FD ]
Line_5 $$ String body = generateBody(entity, context).toString()-->Line_14 $$ pw.println(body)[ FD ]
