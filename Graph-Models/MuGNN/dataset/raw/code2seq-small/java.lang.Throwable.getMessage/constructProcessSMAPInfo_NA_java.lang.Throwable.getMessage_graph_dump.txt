Line_25 $$ Matcher memInfo = MEM_INFO_PATTERN.matcher(line)-->Line_27 $$ String key = memInfo.group(1).trim()[ FD ]
Line_2 $$ private static void constructProcessSMAPInfo(ProcessTreeSmapMemInfo pInfo, String procfsDir) -->Line_3 $$ BufferedReader in = null[ CD ]
Line_15 $$ for (String line : lines) -->Line_16 $$ line = line.trim()[ FD ]
Line_3 $$ BufferedReader in = null-->Line_14 $$ List<String> lines = IOUtils.readLines(in)[ FD ]
Line_12 $$ in = new BufferedReader(fReader)-->Line_45 $$ IOUtils.closeQuietly(in)[ FD ]
Line_8 $$ if (!file.exists()) -->Line_9 $$ return[ CD ]
Line_12 $$ in = new BufferedReader(fReader)-->Line_14 $$ List<String> lines = IOUtils.readLines(in)[ FD ]
Line_13 $$ ProcessSmapMemoryInfo memoryMappingInfo = null-->Line_32 $$ memoryMappingInfo.setMemInfo(key, value)[ FD ]
Line_26 $$ if (memInfo.find()) -->Line_29 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_26 $$ if (memInfo.find()) -->Line_28 $$ String value = memInfo.group(2).replace(KB, "").trim()[ CD ]
Line_7 $$ File file = new File(pidDir, SMAPS)-->Line_8 $$ if (!file.exists()) [ FD ]
Line_2 $$ private static void constructProcessSMAPInfo(ProcessTreeSmapMemInfo pInfo, String procfsDir) -->Line_6 $$ File pidDir = new File(procfsDir, pInfo.getPid())[ FD ]
Line_16 $$ line = line.trim()-->Line_18 $$ Matcher address = ADDRESS_PATTERN.matcher(line)[ FD ]
Line_4 $$ FileReader fReader = null-->Line_11 $$ fReader = new FileReader(file)[ FD ]
Line_2 $$ private static void constructProcessSMAPInfo(ProcessTreeSmapMemInfo pInfo, String procfsDir) -->Line_22 $$ pInfo.getMemoryInfoList().add(memoryMappingInfo)[ FD ]
Line_19 $$ if (address.find()) -->Line_22 $$ pInfo.getMemoryInfoList().add(memoryMappingInfo)[ CD ]
Line_26 $$ if (memInfo.find()) -->Line_32 $$ memoryMappingInfo.setMemInfo(key, value)[ CD ]
Line_15 $$ for (String line : lines) -->Line_18 $$ Matcher address = ADDRESS_PATTERN.matcher(line)[ FD ]
Line_27 $$ String key = memInfo.group(1).trim()-->Line_32 $$ memoryMappingInfo.setMemInfo(key, value)[ FD ]
Line_2 $$ private static void constructProcessSMAPInfo(ProcessTreeSmapMemInfo pInfo, String procfsDir) -->Line_4 $$ FileReader fReader = null[ CD ]
Line_3 $$ BufferedReader in = null-->Line_12 $$ in = new BufferedReader(fReader)[ FD ]
Line_20 $$ memoryMappingInfo = new ProcessSmapMemoryInfo(line)-->Line_22 $$ pInfo.getMemoryInfoList().add(memoryMappingInfo)[ FD ]
Line_25 $$ Matcher memInfo = MEM_INFO_PATTERN.matcher(line)-->Line_26 $$ if (memInfo.find()) [ FD ]
Line_13 $$ ProcessSmapMemoryInfo memoryMappingInfo = null-->Line_20 $$ memoryMappingInfo = new ProcessSmapMemoryInfo(line)[ FD ]
Line_25 $$ Matcher memInfo = MEM_INFO_PATTERN.matcher(line)-->Line_28 $$ String value = memInfo.group(2).replace(KB, "").trim()[ FD ]
Line_20 $$ memoryMappingInfo = new ProcessSmapMemoryInfo(line)-->Line_32 $$ memoryMappingInfo.setMemInfo(key, value)[ FD ]
Line_3 $$ BufferedReader in = null-->Line_45 $$ IOUtils.closeQuietly(in)[ FD ]
Line_13 $$ ProcessSmapMemoryInfo memoryMappingInfo = null-->Line_21 $$ memoryMappingInfo.setPermission(address.group(4))[ FD ]
Line_15 $$ for (String line : lines) -->Line_25 $$ Matcher memInfo = MEM_INFO_PATTERN.matcher(line)[ FD ]
Line_20 $$ memoryMappingInfo = new ProcessSmapMemoryInfo(line)-->Line_21 $$ memoryMappingInfo.setPermission(address.group(4))[ FD ]
Line_29 $$ if (LOG.isDebugEnabled()) -->Line_30 $$ LOG.debug("MemInfo : " + key + " : Value  : " + value)[ CD ]
Line_19 $$ if (address.find()) -->Line_21 $$ memoryMappingInfo.setPermission(address.group(4))[ CD ]
Line_26 $$ if (memInfo.find()) -->Line_27 $$ String key = memInfo.group(1).trim()[ CD ]
Line_18 $$ Matcher address = ADDRESS_PATTERN.matcher(line)-->Line_21 $$ memoryMappingInfo.setPermission(address.group(4))[ FD ]
Line_28 $$ String value = memInfo.group(2).replace(KB, "").trim()-->Line_32 $$ memoryMappingInfo.setMemInfo(key, value)[ FD ]
Line_16 $$ line = line.trim()-->Line_25 $$ Matcher memInfo = MEM_INFO_PATTERN.matcher(line)[ FD ]
Line_19 $$ if (address.find()) -->Line_20 $$ memoryMappingInfo = new ProcessSmapMemoryInfo(line)[ CD ]
Line_18 $$ Matcher address = ADDRESS_PATTERN.matcher(line)-->Line_19 $$ if (address.find()) [ FD ]
Line_13 $$ ProcessSmapMemoryInfo memoryMappingInfo = null-->Line_22 $$ pInfo.getMemoryInfoList().add(memoryMappingInfo)[ FD ]
