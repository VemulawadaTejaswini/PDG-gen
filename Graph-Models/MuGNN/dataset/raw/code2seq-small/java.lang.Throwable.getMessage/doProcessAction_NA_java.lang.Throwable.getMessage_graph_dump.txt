Line_16 $$ redirect = themeDisplay.getURLSignIn()-->Line_19 $$ actionResponse.sendRedirect(redirect)[ FD ]
Line_14 $$ String redirect = readOpenIdResponse(themeDisplay, actionRequest)-->Line_18 $$ redirect = PortalUtil.escapeRedirect(redirect)[ FD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_30 $$ SessionErrors.add(actionRequest, e.getClass())[ FD ]
Line_24 $$ if (e instanceof OpenIDException) -->Line_25 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_19 $$ actionResponse.sendRedirect(redirect)[ FD ]
Line_16 $$ redirect = themeDisplay.getURLSignIn()-->Line_18 $$ redirect = PortalUtil.escapeRedirect(redirect)[ FD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_7 $$ if (actionRequest.getRemoteUser() != null) [ CD ]
Line_13 $$ if (cmd.equals(Constants.READ)) -->Line_15 $$ if (Validator.isNull(redirect)) [ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_7 $$ if (actionRequest.getRemoteUser() != null) -->Line_9 $$ return[ CD ]
Line_18 $$ redirect = PortalUtil.escapeRedirect(redirect)-->Line_19 $$ actionResponse.sendRedirect(redirect)[ FD ]
Line_11 $$ String cmd = ParamUtil.getString(actionRequest, Constants.CMD)-->Line_13 $$ if (cmd.equals(Constants.READ)) [ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_21 $$ sendOpenIdRequest(themeDisplay, actionRequest, actionResponse)[ FD ]
Line_25 $$ if (_log.isInfoEnabled()) -->Line_26 $$ _log.info("Error communicating with OpenID provider: " + e.getMessage())[ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_28 $$ SessionErrors.add(actionRequest, e.getClass())[ FD ]
Line_13 $$ if (cmd.equals(Constants.READ)) -->Line_21 $$ sendOpenIdRequest(themeDisplay, actionRequest, actionResponse)[ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_21 $$ sendOpenIdRequest(themeDisplay, actionRequest, actionResponse)[ FD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_29 $$ if (e instanceof UserEmailAddressException.MustNotBeDuplicate) -->Line_30 $$ SessionErrors.add(actionRequest, e.getClass())[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_4 $$ if (!_openId.isEnabled(themeDisplay.getCompanyId())) [ FD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ if (!_openId.isEnabled(themeDisplay.getCompanyId())) [ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_5 $$ throw new PrincipalException.MustBeEnabled(themeDisplay.getCompanyId(), OpenId.class.getName())[ FD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_8 $$ actionResponse.sendRedirect(themeDisplay.getPathMain())[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_8 $$ actionResponse.sendRedirect(themeDisplay.getPathMain())[ FD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_16 $$ redirect = themeDisplay.getURLSignIn()[ FD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_11 $$ String cmd = ParamUtil.getString(actionRequest, Constants.CMD)[ CD ]
Line_24 $$ if (e instanceof OpenIDException) -->Line_28 $$ SessionErrors.add(actionRequest, e.getClass())[ CD ]
Line_3 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_14 $$ String redirect = readOpenIdResponse(themeDisplay, actionRequest)[ FD ]
Line_14 $$ String redirect = readOpenIdResponse(themeDisplay, actionRequest)-->Line_15 $$ if (Validator.isNull(redirect)) [ FD ]
Line_29 $$ if (e instanceof UserEmailAddressException.MustNotBeDuplicate) -->Line_32 $$ _log.error("Error processing the OpenID login", e)[ CD ]
Line_13 $$ if (cmd.equals(Constants.READ)) -->Line_19 $$ actionResponse.sendRedirect(redirect)[ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_14 $$ String redirect = readOpenIdResponse(themeDisplay, actionRequest)[ FD ]
Line_13 $$ if (cmd.equals(Constants.READ)) -->Line_14 $$ String redirect = readOpenIdResponse(themeDisplay, actionRequest)[ CD ]
Line_14 $$ String redirect = readOpenIdResponse(themeDisplay, actionRequest)-->Line_16 $$ redirect = themeDisplay.getURLSignIn()[ FD ]
Line_7 $$ if (actionRequest.getRemoteUser() != null) -->Line_8 $$ actionResponse.sendRedirect(themeDisplay.getPathMain())[ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_7 $$ if (actionRequest.getRemoteUser() != null) [ FD ]
Line_13 $$ if (cmd.equals(Constants.READ)) -->Line_18 $$ redirect = PortalUtil.escapeRedirect(redirect)[ CD ]
Line_14 $$ String redirect = readOpenIdResponse(themeDisplay, actionRequest)-->Line_19 $$ actionResponse.sendRedirect(redirect)[ FD ]
Line_24 $$ if (e instanceof OpenIDException) -->Line_29 $$ if (e instanceof UserEmailAddressException.MustNotBeDuplicate) [ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_33 $$ PortalUtil.sendError(e, actionRequest, actionResponse)[ FD ]
Line_29 $$ if (e instanceof UserEmailAddressException.MustNotBeDuplicate) -->Line_33 $$ PortalUtil.sendError(e, actionRequest, actionResponse)[ CD ]
Line_2 $$ public void doProcessAction(ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_11 $$ String cmd = ParamUtil.getString(actionRequest, Constants.CMD)[ FD ]
Line_15 $$ if (Validator.isNull(redirect)) -->Line_16 $$ redirect = themeDisplay.getURLSignIn()[ CD ]
