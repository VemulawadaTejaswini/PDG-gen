Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_4 $$ final ModifiableModuleModel model = ModuleManager.getInstance(project).getModifiableModel()[ FD ]
Line_14 $$ final Module primaryModule = addPrimaryModuleDependency(project, newModule)-->Line_15 $$ if (primaryModule != null) [ FD ]
Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_22 $$ callback.projectOpened(project, newModule)[ FD ]
Line_17 $$ if (dotIdeaDir != null) -->Line_18 $$ updateVcsMapping(primaryModule, dotIdeaDir.getParent())[ CD ]
Line_21 $$ if (callback != null) -->Line_22 $$ callback.projectOpened(project, newModule)[ CD ]
Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_16 $$ VirtualFile dotIdeaDir = imlFile.getParent()[ FD ]
Line_16 $$ VirtualFile dotIdeaDir = imlFile.getParent()-->Line_17 $$ if (dotIdeaDir != null) [ FD ]
Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_21 $$ if (callback != null) [ FD ]
Line_4 $$ final ModifiableModuleModel model = ModuleManager.getInstance(project).getModifiableModel()-->Line_5 $$ final Module module = model.loadModule(imlFile.getPath())[ FD ]
Line_12 $$ final Module newModule = ModuleManager.getInstance(project).findModuleByName(module.getName())-->Line_22 $$ callback.projectOpened(project, newModule)[ FD ]
Line_4 $$ final ModifiableModuleModel model = ModuleManager.getInstance(project).getModifiableModel()-->Line_8 $$ model.commit()[ FD ]
Line_5 $$ final Module module = model.loadModule(imlFile.getPath())-->Line_12 $$ final Module newModule = ModuleManager.getInstance(project).findModuleByName(module.getName())[ FD ]
Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_5 $$ final Module module = model.loadModule(imlFile.getPath())[ FD ]
Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_14 $$ final Module primaryModule = addPrimaryModuleDependency(project, newModule)[ FD ]
Line_15 $$ if (primaryModule != null) -->Line_17 $$ if (dotIdeaDir != null) [ CD ]
Line_14 $$ final Module primaryModule = addPrimaryModuleDependency(project, newModule)-->Line_18 $$ updateVcsMapping(primaryModule, dotIdeaDir.getParent())[ FD ]
Line_15 $$ if (primaryModule != null) -->Line_16 $$ VirtualFile dotIdeaDir = imlFile.getParent()[ CD ]
Line_12 $$ final Module newModule = ModuleManager.getInstance(project).findModuleByName(module.getName())-->Line_14 $$ final Module primaryModule = addPrimaryModuleDependency(project, newModule)[ FD ]
Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_26 $$ Messages.showErrorDialog(project, "Cannot attach project: " + ex.getMessage(), CommonBundle.getErrorTitle())[ FD ]
Line_6 $$ AccessToken token = WriteAction.start()-->Line_10 $$ token.finish()[ FD ]
Line_16 $$ VirtualFile dotIdeaDir = imlFile.getParent()-->Line_18 $$ updateVcsMapping(primaryModule, dotIdeaDir.getParent())[ FD ]
Line_2 $$ private static void attachModule(Project project, VirtualFile imlFile, @Nullable ProjectOpenedCallback callback) -->Line_12 $$ final Module newModule = ModuleManager.getInstance(project).findModuleByName(module.getName())[ FD ]
