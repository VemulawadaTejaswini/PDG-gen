Line_3 $$ Collection<String> targetIds = getTargetIds(targetNodeToActivate)-->Line_9 $$ targetIds.remove(targetNodeToActivate)[ FD ]
Line_2 $$ private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive) throws IOException -->Line_4 $$ if (targetIds == null) [ CD ]
Line_17 $$ if (proto.getServiceStatus().getState() == HAServiceState.ACTIVE) -->Line_18 $$ errOut.println("transitionToActive: Node " + targetId + " is already active")[ CD ]
Line_11 $$ HAServiceTarget target = resolveTarget(targetId)-->Line_16 $$ HAServiceProtocol proto = target.getProxy(getConf(), 5000)[ FD ]
Line_2 $$ private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive) throws IOException -->Line_30 $$ return false[ CD ]
Line_4 $$ if (targetIds == null) -->Line_6 $$ printUsage(errOut, "-transitionToActive")[ CD ]
Line_17 $$ if (proto.getServiceStatus().getState() == HAServiceState.ACTIVE) -->Line_20 $$ return true[ CD ]
Line_23 $$ if (!forceActive) -->Line_25 $$ printUsage(errOut, "-transitionToActive")[ CD ]
Line_16 $$ HAServiceProtocol proto = target.getProxy(getConf(), 5000)-->Line_17 $$ if (proto.getServiceStatus().getState() == HAServiceState.ACTIVE) [ FD ]
Line_23 $$ if (!forceActive) -->Line_24 $$ errOut.println("Unexpected error occurred  " + e.getMessage())[ CD ]
Line_23 $$ if (!forceActive) -->Line_26 $$ return true[ CD ]
Line_2 $$ private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive) throws IOException -->Line_3 $$ Collection<String> targetIds = getTargetIds(targetNodeToActivate)[ FD ]
Line_11 $$ HAServiceTarget target = resolveTarget(targetId)-->Line_12 $$ if (!checkManualStateManagementOK(target)) [ FD ]
Line_2 $$ private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive) throws IOException -->Line_3 $$ Collection<String> targetIds = getTargetIds(targetNodeToActivate)[ CD ]
Line_3 $$ Collection<String> targetIds = getTargetIds(targetNodeToActivate)-->Line_4 $$ if (targetIds == null) [ FD ]
Line_2 $$ private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive) throws IOException -->Line_9 $$ targetIds.remove(targetNodeToActivate)[ CD ]
Line_12 $$ if (!checkManualStateManagementOK(target)) -->Line_13 $$ return true[ CD ]
Line_4 $$ if (targetIds == null) -->Line_7 $$ return true[ CD ]
Line_17 $$ if (proto.getServiceStatus().getState() == HAServiceState.ACTIVE) -->Line_19 $$ printUsage(errOut, "-transitionToActive")[ CD ]
Line_4 $$ if (targetIds == null) -->Line_5 $$ errOut.println("transitionToActive: No target node in the " + "current configuration")[ CD ]
Line_2 $$ private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive) throws IOException -->Line_23 $$ if (!forceActive) [ FD ]
Line_2 $$ private boolean isOtherTargetNodeActive(String targetNodeToActivate, boolean forceActive) throws IOException -->Line_9 $$ targetIds.remove(targetNodeToActivate)[ FD ]
Line_10 $$ for (String targetId : targetIds) -->Line_11 $$ HAServiceTarget target = resolveTarget(targetId)[ FD ]
