Line_2 $$ private void checkSkip() throws Exception -->Line_11 $$ testSkip1(HALF_CHUNK_SIZE)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_17 $$ testSkip1(FILE_SIZE - 1)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_15 $$ stm.seek(0)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_26 $$ stm.seek(0)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_7 $$ testSkip1(HALF_CHUNK_SIZE)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_13 $$ testSkip1(1)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_6 $$ testSkip1(HALF_CHUNK_SIZE)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_8 $$ stm.seek(0)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_5 $$ testSkip1(BYTES_PER_SUM)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_19 $$ IOUtils.skipFully(stm, FILE_SIZE)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_10 $$ testSkip1(BYTES_PER_SUM)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_9 $$ testSkip1(HALF_CHUNK_SIZE + 1)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_12 $$ stm.seek(0)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_18 $$ stm.seek(0)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_14 $$ testSkip1(1)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_4 $$ stm.seek(0)[ CD ]
Line_2 $$ private void checkSkip() throws Exception -->Line_33 $$ stm.seek(10)[ CD ]
