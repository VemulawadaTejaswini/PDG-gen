Line_4 $$ String path = actionMapping.getPath()-->Line_11 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))[ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_6 $$ LiferayPortletConfig liferayPortletConfig = (LiferayPortletConfig) request.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG)[ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_27 $$ processForwardConfig(request, response, forwardConfig)[ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_25 $$ ForwardConfig forwardConfig = actionMapping.findForward(_PATH_PORTAL_PORTLET_ACCESS_DENIED)[ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_3 $$ long companyId = PortalUtil.getCompanyId(request)[ CD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_3 $$ long companyId = PortalUtil.getCompanyId(request)[ FD ]
Line_3 $$ long companyId = PortalUtil.getCompanyId(request)-->Line_7 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, liferayPortletConfig.getPortletId())[ FD ]
Line_11 $$ String strutsPath = path.substring(1, path.lastIndexOf(CharPool.SLASH))-->Line_12 $$ if (!strutsPath.equals(portlet.getStrutsPath()) && !strutsPath.equals(portlet.getParentStrutsPath())) [ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_15 $$ ForwardConfig forwardConfig = actionMapping.findForward(_PATH_PORTAL_PORTLET_INACTIVE)[ FD ]
Line_8 $$ if (portlet == null) -->Line_9 $$ return false[ CD ]
Line_7 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, liferayPortletConfig.getPortletId())-->Line_14 $$ if (!portlet.isActive()) [ FD ]
Line_15 $$ ForwardConfig forwardConfig = actionMapping.findForward(_PATH_PORTAL_PORTLET_INACTIVE)-->Line_27 $$ processForwardConfig(request, response, forwardConfig)[ FD ]
Line_7 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, liferayPortletConfig.getPortletId())-->Line_13 $$ throw new PrincipalException.MustBePortletStrutsPath(strutsPath, portlet.getPortletId())[ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_4 $$ String path = actionMapping.getPath()[ CD ]
Line_15 $$ ForwardConfig forwardConfig = actionMapping.findForward(_PATH_PORTAL_PORTLET_INACTIVE)-->Line_17 $$ processForwardConfig(request, response, forwardConfig)[ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_4 $$ String path = actionMapping.getPath()[ FD ]
Line_14 $$ if (!portlet.isActive()) -->Line_19 $$ return false[ CD ]
Line_6 $$ LiferayPortletConfig liferayPortletConfig = (LiferayPortletConfig) request.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG)-->Line_7 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, liferayPortletConfig.getPortletId())[ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_16 $$ if (!action) [ FD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_31 $$ return true[ CD ]
Line_14 $$ if (!portlet.isActive()) -->Line_15 $$ ForwardConfig forwardConfig = actionMapping.findForward(_PATH_PORTAL_PORTLET_INACTIVE)[ CD ]
Line_7 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, liferayPortletConfig.getPortletId())-->Line_12 $$ if (!strutsPath.equals(portlet.getStrutsPath()) && !strutsPath.equals(portlet.getParentStrutsPath())) [ FD ]
Line_12 $$ if (!strutsPath.equals(portlet.getStrutsPath()) && !strutsPath.equals(portlet.getParentStrutsPath())) -->Line_14 $$ if (!portlet.isActive()) [ CD ]
Line_22 $$ if (_log.isWarnEnabled()) -->Line_23 $$ _log.warn(e.getMessage())[ CD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_17 $$ processForwardConfig(request, response, forwardConfig)[ FD ]
Line_7 $$ Portlet portlet = PortletLocalServiceUtil.getPortletById(companyId, liferayPortletConfig.getPortletId())-->Line_8 $$ if (portlet == null) [ FD ]
Line_16 $$ if (!action) -->Line_17 $$ processForwardConfig(request, response, forwardConfig)[ CD ]
Line_26 $$ if (!action) -->Line_27 $$ processForwardConfig(request, response, forwardConfig)[ CD ]
Line_2 $$ protected boolean processRoles(HttpServletRequest request, HttpServletResponse response, ActionMapping actionMapping, boolean action) throws IOException, ServletException -->Line_26 $$ if (!action) [ FD ]
Line_14 $$ if (!portlet.isActive()) -->Line_16 $$ if (!action) [ CD ]
