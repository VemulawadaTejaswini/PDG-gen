Line_2 $$ public void testGetObjectTypeWithNoTargetOrTargetSource() -->Line_13 $$ assertTrue("Has correct object type", ITestBean.class.isAssignableFrom(pfb.getObjectType()))[ CD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_12 $$ FactoryBean<?> pfb = (ProxyFactoryBean) bf.getBean("&noTarget")[ FD ]
Line_2 $$ public void testGetObjectTypeWithNoTargetOrTargetSource() -->Line_5 $$ ITestBean tb = (ITestBean) bf.getBean("noTarget")[ CD ]
Line_2 $$ public void testGetObjectTypeWithNoTargetOrTargetSource() -->Line_12 $$ FactoryBean<?> pfb = (ProxyFactoryBean) bf.getBean("&noTarget")[ CD ]
Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()-->Line_5 $$ ITestBean tb = (ITestBean) bf.getBean("noTarget")[ FD ]
Line_2 $$ public void testGetObjectTypeWithNoTargetOrTargetSource() -->Line_4 $$ new XmlBeanDefinitionReader(bf).loadBeanDefinitions(new ClassPathResource(TARGETSOURCE_CONTEXT, CLASS))[ CD ]
Line_2 $$ public void testGetObjectTypeWithNoTargetOrTargetSource() -->Line_3 $$ DefaultListableBeanFactory bf = new DefaultListableBeanFactory()[ CD ]
Line_5 $$ ITestBean tb = (ITestBean) bf.getBean("noTarget")-->Line_7 $$ tb.getName()[ FD ]
Line_12 $$ FactoryBean<?> pfb = (ProxyFactoryBean) bf.getBean("&noTarget")-->Line_13 $$ assertTrue("Has correct object type", ITestBean.class.isAssignableFrom(pfb.getObjectType()))[ FD ]
