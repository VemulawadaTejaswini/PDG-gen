Line_20 $$ if (!interceptor.preHandleRender(request, response, mappedHandler.getHandler())) -->Line_22 $$ return[ CD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_61 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_18 $$ for (int i = 0; i < interceptors.length; i++) -->Line_20 $$ if (!interceptor.preHandleRender(request, response, mappedHandler.getHandler())) [ CD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_20 $$ if (!interceptor.preHandleRender(request, response, mappedHandler.getHandler())) [ FD ]
Line_24 $$ interceptorIndex = i-->Line_21 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_29 $$ if (request.getParameter(ACTION_EXCEPTION_RENDER_PARAMETER) != null) -->Line_31 $$ if (ex != null) [ CD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_11 $$ mappedHandler = getHandler(request)[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_67 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_18 $$ for (int i = 0; i < interceptors.length; i++) -->Line_42 $$ for (int i = interceptors.length - 1; i >= 0; i--) [ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_39 $$ HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler())[ FD ]
Line_12 $$ if (mappedHandler == null || mappedHandler.getHandler() == null) -->Line_13 $$ noHandlerFound(request, response)[ CD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_39 $$ HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler())[ FD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_67 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_9 $$ ModelAndView mv-->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_55 $$ render(mv, request, response)[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_61 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_9 $$ ModelAndView mv-->Line_55 $$ render(mv, request, response)[ FD ]
Line_57 $$ if (logger.isDebugEnabled()) -->Line_58 $$ logger.debug("Null ModelAndView returned to DispatcherPortlet with name '" + getPortletName() + "': assuming HandlerAdapter completed request handling")[ CD ]
Line_18 $$ for (int i = 0; i < interceptors.length; i++) -->Line_24 $$ interceptorIndex = i[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_63 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_49 $$ mv = ex.getModelAndView()-->Line_52 $$ mv = processHandlerException(request, response, handler, ex)[ FD ]
Line_41 $$ if (interceptors != null) -->Line_42 $$ for (int i = interceptors.length - 1; i >= 0; i--) [ CD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())[ FD ]
Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())-->Line_49 $$ mv = ex.getModelAndView()[ FD ]
Line_9 $$ ModelAndView mv-->Line_54 $$ if (mv != null && !mv.isEmpty()) [ FD ]
Line_24 $$ interceptorIndex = i-->Line_67 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)-->Line_49 $$ mv = ex.getModelAndView()[ FD ]
Line_18 $$ for (int i = 0; i < interceptors.length; i++) -->Line_19 $$ HandlerInterceptor interceptor = interceptors[i][ CD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_29 $$ if (request.getParameter(ACTION_EXCEPTION_RENDER_PARAMETER) != null) [ FD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_12 $$ if (mappedHandler == null || mappedHandler.getHandler() == null) [ FD ]
Line_16 $$ HandlerInterceptor[] interceptors = mappedHandler.getInterceptors()-->Line_41 $$ if (interceptors != null) [ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_61 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_9 $$ ModelAndView mv-->Line_52 $$ mv = processHandlerException(request, response, handler, ex)[ FD ]
Line_54 $$ if (mv != null && !mv.isEmpty()) -->Line_55 $$ render(mv, request, response)[ CD ]
Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)-->Line_67 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_21 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_51 $$ Object handler = (mappedHandler != null ? mappedHandler.getHandler() : null)[ FD ]
Line_18 $$ for (int i = 0; i < interceptors.length; i++) -->Line_24 $$ interceptorIndex = i[ CD ]
Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())-->Line_54 $$ if (mv != null && !mv.isEmpty()) [ FD ]
Line_7 $$ int interceptorIndex = -1-->Line_21 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_7 $$ int interceptorIndex = -1-->Line_61 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_63 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)-->Line_63 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_29 $$ if (request.getParameter(ACTION_EXCEPTION_RENDER_PARAMETER) != null) -->Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)[ CD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_16 $$ HandlerInterceptor[] interceptors = mappedHandler.getInterceptors()[ FD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_16 $$ HandlerInterceptor[] interceptors = mappedHandler.getInterceptors()[ FD ]
Line_9 $$ ModelAndView mv-->Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_20 $$ if (!interceptor.preHandleRender(request, response, mappedHandler.getHandler())) [ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_12 $$ if (mappedHandler == null || mappedHandler.getHandler() == null) [ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_13 $$ noHandlerFound(request, response)[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_21 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_6 $$ HandlerExecutionChain mappedHandler = null[ CD ]
Line_19 $$ HandlerInterceptor interceptor = interceptors[i]-->Line_20 $$ if (!interceptor.preHandleRender(request, response, mappedHandler.getHandler())) [ FD ]
Line_27 $$ PortletSession session = request.getPortletSession(false)-->Line_28 $$ if (session != null) [ FD ]
Line_27 $$ PortletSession session = request.getPortletSession(false)-->Line_36 $$ session.removeAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)[ FD ]
Line_49 $$ mv = ex.getModelAndView()-->Line_54 $$ if (mv != null && !mv.isEmpty()) [ FD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_21 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_24 $$ interceptorIndex = i-->Line_63 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_27 $$ PortletSession session = request.getPortletSession(false)-->Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)[ FD ]
Line_39 $$ HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler())-->Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())[ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_51 $$ Object handler = (mappedHandler != null ? mappedHandler.getHandler() : null)[ FD ]
Line_51 $$ Object handler = (mappedHandler != null ? mappedHandler.getHandler() : null)-->Line_52 $$ mv = processHandlerException(request, response, handler, ex)[ FD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())[ FD ]
Line_52 $$ mv = processHandlerException(request, response, handler, ex)-->Line_54 $$ if (mv != null && !mv.isEmpty()) [ FD ]
Line_7 $$ int interceptorIndex = -1-->Line_24 $$ interceptorIndex = i[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_27 $$ PortletSession session = request.getPortletSession(false)[ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_67 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_20 $$ if (!interceptor.preHandleRender(request, response, mappedHandler.getHandler())) [ FD ]
Line_42 $$ for (int i = interceptors.length - 1; i >= 0; i--) -->Line_43 $$ HandlerInterceptor interceptor = interceptors[i][ CD ]
Line_19 $$ HandlerInterceptor interceptor = interceptors[i]-->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ FD ]
Line_7 $$ int interceptorIndex = -1-->Line_67 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())-->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ FD ]
Line_3 $$ if (logger.isDebugEnabled()) -->Line_4 $$ logger.debug("DispatcherPortlet with name '" + getPortletName() + "' received render request")[ CD ]
Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)-->Line_52 $$ mv = processHandlerException(request, response, handler, ex)[ FD ]
Line_16 $$ HandlerInterceptor[] interceptors = mappedHandler.getInterceptors()-->Line_17 $$ if (interceptors != null) [ FD ]
Line_28 $$ if (session != null) -->Line_29 $$ if (request.getParameter(ACTION_EXCEPTION_RENDER_PARAMETER) != null) [ CD ]
Line_24 $$ interceptorIndex = i-->Line_61 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ FD ]
Line_49 $$ mv = ex.getModelAndView()-->Line_55 $$ render(mv, request, response)[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ FD ]
Line_17 $$ if (interceptors != null) -->Line_18 $$ for (int i = 0; i < interceptors.length; i++) [ CD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ FD ]
Line_54 $$ if (mv != null && !mv.isEmpty()) -->Line_57 $$ if (logger.isDebugEnabled()) [ CD ]
Line_9 $$ ModelAndView mv-->Line_49 $$ mv = ex.getModelAndView()[ FD ]
Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())-->Line_55 $$ render(mv, request, response)[ FD ]
Line_6 $$ HandlerExecutionChain mappedHandler = null-->Line_11 $$ mappedHandler = getHandler(request)[ FD ]
Line_40 $$ mv = ha.handleRender(request, response, mappedHandler.getHandler())-->Line_52 $$ mv = processHandlerException(request, response, handler, ex)[ FD ]
Line_42 $$ for (int i = interceptors.length - 1; i >= 0; i--) -->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ CD ]
Line_7 $$ int interceptorIndex = -1-->Line_63 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)-->Line_31 $$ if (ex != null) [ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_52 $$ mv = processHandlerException(request, response, handler, ex)[ FD ]
Line_12 $$ if (mappedHandler == null || mappedHandler.getHandler() == null) -->Line_14 $$ return[ CD ]
Line_30 $$ Exception ex = (Exception) session.getAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)-->Line_48 $$ logger.debug("ModelAndViewDefiningException encountered", ex)[ FD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_3 $$ if (logger.isDebugEnabled()) [ CD ]
Line_20 $$ if (!interceptor.preHandleRender(request, response, mappedHandler.getHandler())) -->Line_21 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, null)[ CD ]
Line_2 $$ protected void doRenderService(RenderRequest request, RenderResponse response) throws Exception -->Line_7 $$ int interceptorIndex = -1[ CD ]
Line_43 $$ HandlerInterceptor interceptor = interceptors[i]-->Line_44 $$ interceptor.postHandleRender(request, response, mappedHandler.getHandler(), mv)[ FD ]
Line_11 $$ mappedHandler = getHandler(request)-->Line_63 $$ triggerAfterRenderCompletion(mappedHandler, interceptorIndex, request, response, ex)[ FD ]
Line_29 $$ if (request.getParameter(ACTION_EXCEPTION_RENDER_PARAMETER) != null) -->Line_36 $$ session.removeAttribute(ACTION_EXCEPTION_SESSION_ATTRIBUTE)[ CD ]
Line_31 $$ if (ex != null) -->Line_32 $$ logger.debug("Render phase found exception caught during action phase - rethrowing it")[ CD ]
Line_52 $$ mv = processHandlerException(request, response, handler, ex)-->Line_55 $$ render(mv, request, response)[ FD ]
