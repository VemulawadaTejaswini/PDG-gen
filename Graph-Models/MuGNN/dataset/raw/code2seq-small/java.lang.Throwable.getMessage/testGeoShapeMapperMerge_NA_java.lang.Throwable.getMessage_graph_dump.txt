Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_32 $$ assertThat(strategy.getGrid(), instanceOf(GeohashPrefixTree.class))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_18 $$ GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper[ CD ]
Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_31 $$ assertThat(strategy, instanceOf(RecursivePrefixTreeStrategy.class))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_22 $$ assertThat(strategy.getDistErrPct(), equalTo(0.01))[ CD ]
Line_29 $$ geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper-->Line_35 $$ assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(ShapeBuilder.Orientation.CW))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_23 $$ assertThat(strategy.getGrid().getMaxLevels(), equalTo(GeoUtils.geoHashLevelsForPrecision(1d)))[ CD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_21 $$ assertThat(strategy.getGrid(), instanceOf(GeohashPrefixTree.class))[ FD ]
Line_6 $$ String stage2Mapping = XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("shape").field("type", "geo_shape").field("tree", "quadtree").field("strategy", "term").field("precision", "1km").field("tree_levels", 26).field("distance_error_pct", 26).field("orientation", "cw").endObject().endObject().endObject().endObject().string()-->Line_25 $$ stage2Mapping = XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("shape").field("type", "geo_shape").field("precision", "1m").field("tree_levels", 8).field("distance_error_pct", 0.001).field("orientation", "cw").endObject().endObject().endObject().endObject().string()[ FD ]
Line_16 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("shape")-->Line_28 $$ assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_27 $$ fieldMapper = docMapper.mappers().getMapper("shape")[ CD ]
Line_4 $$ MapperService mapperService = createIndex("test").mapperService()-->Line_5 $$ DocumentMapper docMapper = mapperService.merge("type", new CompressedXContent(stage1Mapping), true, false)[ FD ]
Line_5 $$ DocumentMapper docMapper = mapperService.merge("type", new CompressedXContent(stage1Mapping), true, false)-->Line_26 $$ docMapper = mapperService.merge("type", new CompressedXContent(stage2Mapping), false, false)[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_28 $$ assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class))[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_17 $$ assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class))[ CD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_32 $$ assertThat(strategy.getGrid(), instanceOf(GeohashPrefixTree.class))[ FD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()[ FD ]
Line_4 $$ MapperService mapperService = createIndex("test").mapperService()-->Line_26 $$ docMapper = mapperService.merge("type", new CompressedXContent(stage2Mapping), false, false)[ FD ]
Line_16 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("shape")-->Line_17 $$ assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class))[ FD ]
Line_27 $$ fieldMapper = docMapper.mappers().getMapper("shape")-->Line_28 $$ assertThat(fieldMapper, instanceOf(GeoShapeFieldMapper.class))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_5 $$ DocumentMapper docMapper = mapperService.merge("type", new CompressedXContent(stage1Mapping), true, false)[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_16 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("shape")[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_25 $$ stage2Mapping = XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("shape").field("type", "geo_shape").field("precision", "1m").field("tree_levels", 8).field("distance_error_pct", 0.001).field("orientation", "cw").endObject().endObject().endObject().endObject().string()[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_26 $$ docMapper = mapperService.merge("type", new CompressedXContent(stage2Mapping), false, false)[ CD ]
Line_18 $$ GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper-->Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()[ FD ]
Line_18 $$ GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper-->Line_24 $$ assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(ShapeBuilder.Orientation.CCW))[ FD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_31 $$ assertThat(strategy, instanceOf(RecursivePrefixTreeStrategy.class))[ FD ]
Line_4 $$ MapperService mapperService = createIndex("test").mapperService()-->Line_8 $$ mapperService.merge("type", new CompressedXContent(stage2Mapping), false, false)[ FD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_33 $$ assertThat(strategy.getDistErrPct(), equalTo(0.001))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_34 $$ assertThat(strategy.getGrid().getMaxLevels(), equalTo(GeoUtils.geoHashLevelsForPrecision(1d)))[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()[ CD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_23 $$ assertThat(strategy.getGrid().getMaxLevels(), equalTo(GeoUtils.geoHashLevelsForPrecision(1d)))[ FD ]
Line_18 $$ GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper-->Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()[ FD ]
Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_33 $$ assertThat(strategy.getDistErrPct(), equalTo(0.001))[ FD ]
Line_16 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("shape")-->Line_27 $$ fieldMapper = docMapper.mappers().getMapper("shape")[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_32 $$ assertThat(strategy.getGrid(), instanceOf(GeohashPrefixTree.class))[ CD ]
Line_18 $$ GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper-->Line_35 $$ assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(ShapeBuilder.Orientation.CW))[ FD ]
Line_18 $$ GeoShapeFieldMapper geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper-->Line_29 $$ geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper[ FD ]
Line_29 $$ geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper-->Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_24 $$ assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(ShapeBuilder.Orientation.CCW))[ CD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_20 $$ assertThat(strategy, instanceOf(RecursivePrefixTreeStrategy.class))[ FD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_22 $$ assertThat(strategy.getDistErrPct(), equalTo(0.01))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_21 $$ assertThat(strategy.getGrid(), instanceOf(GeohashPrefixTree.class))[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_20 $$ assertThat(strategy, instanceOf(RecursivePrefixTreeStrategy.class))[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_31 $$ assertThat(strategy, instanceOf(RecursivePrefixTreeStrategy.class))[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_33 $$ assertThat(strategy.getDistErrPct(), equalTo(0.001))[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_35 $$ assertThat(geoShapeFieldMapper.fieldType().orientation(), equalTo(ShapeBuilder.Orientation.CW))[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_29 $$ geoShapeFieldMapper = (GeoShapeFieldMapper) fieldMapper[ CD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_3 $$ String stage1Mapping = XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("shape").field("type", "geo_shape").field("tree", "geohash").field("strategy", "recursive").field("precision", "1m").field("tree_levels", 8).field("distance_error_pct", 0.01).field("orientation", "ccw").endObject().endObject().endObject().endObject().string()[ CD ]
Line_5 $$ DocumentMapper docMapper = mapperService.merge("type", new CompressedXContent(stage1Mapping), true, false)-->Line_27 $$ fieldMapper = docMapper.mappers().getMapper("shape")[ FD ]
Line_19 $$ PrefixTreeStrategy strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_34 $$ assertThat(strategy.getGrid().getMaxLevels(), equalTo(GeoUtils.geoHashLevelsForPrecision(1d)))[ FD ]
Line_26 $$ docMapper = mapperService.merge("type", new CompressedXContent(stage2Mapping), false, false)-->Line_27 $$ fieldMapper = docMapper.mappers().getMapper("shape")[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_6 $$ String stage2Mapping = XContentFactory.jsonBuilder().startObject().startObject("type").startObject("properties").startObject("shape").field("type", "geo_shape").field("tree", "quadtree").field("strategy", "term").field("precision", "1km").field("tree_levels", 26).field("distance_error_pct", 26).field("orientation", "cw").endObject().endObject().endObject().endObject().string()[ CD ]
Line_30 $$ strategy = geoShapeFieldMapper.fieldType().defaultStrategy()-->Line_34 $$ assertThat(strategy.getGrid().getMaxLevels(), equalTo(GeoUtils.geoHashLevelsForPrecision(1d)))[ FD ]
Line_2 $$ public void testGeoShapeMapperMerge() throws Exception -->Line_4 $$ MapperService mapperService = createIndex("test").mapperService()[ CD ]
Line_5 $$ DocumentMapper docMapper = mapperService.merge("type", new CompressedXContent(stage1Mapping), true, false)-->Line_16 $$ FieldMapper fieldMapper = docMapper.mappers().getMapper("shape")[ FD ]
