Line_2 $$ public void testFailOnValueType() throws IOException -->Line_7 $$ ObjectParser<TestStruct, Void> objectParser = new ObjectParser("foo")[ CD ]
Line_2 $$ public void testFailOnValueType() throws IOException -->Line_9 $$ objectParser.declareField(( i,  c,  x) -> c.test = i.text(), new ParseField("numeric_value"), ObjectParser.ValueType.FLOAT)[ CD ]
Line_7 $$ ObjectParser<TestStruct, Void> objectParser = new ObjectParser("foo")-->Line_12 $$ objectParser.parse(parser, s)[ FD ]
Line_7 $$ ObjectParser<TestStruct, Void> objectParser = new ObjectParser("foo")-->Line_9 $$ objectParser.declareField(( i,  c,  x) -> c.test = i.text(), new ParseField("numeric_value"), ObjectParser.ValueType.FLOAT)[ FD ]
Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("-->Line_10 $$ parser.setParseFieldMatcher(ParseFieldMatcher.STRICT)[ FD ]
Line_2 $$ public void testFailOnValueType() throws IOException -->Line_10 $$ parser.setParseFieldMatcher(ParseFieldMatcher.STRICT)[ CD ]
Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("-->Line_12 $$ objectParser.parse(parser, s)[ FD ]
Line_8 $$ TestStruct s = new TestStruct()-->Line_12 $$ objectParser.parse(parser, s)[ FD ]
Line_2 $$ public void testFailOnValueType() throws IOException -->Line_8 $$ TestStruct s = new TestStruct()[ CD ]
Line_2 $$ public void testFailOnValueType() throws IOException -->Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("[ CD ]
