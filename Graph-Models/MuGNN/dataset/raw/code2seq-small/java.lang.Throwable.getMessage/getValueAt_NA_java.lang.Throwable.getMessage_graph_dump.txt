Line_8 $$ int r = row % CHUNK_ROW_SIZE-->Line_10 $$ if (r < data.length) [ FD ]
Line_6 $$ if (chunk.isDone()) -->Line_7 $$ Object[][] data = chunk.get().getData()[ CD ]
Line_3 $$ Pair<Integer, Integer> key = itemToChunkKey(row, col)-->Line_5 $$ ListenableFuture<ArrayChunk> chunk = myChunkCache.get(key)[ FD ]
Line_2 $$ public Object getValueAt(final int row, final int col) -->Line_3 $$ Pair<Integer, Integer> key = itemToChunkKey(row, col)[ FD ]
Line_6 $$ if (chunk.isDone()) -->Line_16 $$ chunk.addListener(new Runnable() [ CD ]
Line_9 $$ int c = col % CHUNK_COL_SIZE-->Line_11 $$ if (c < data[r].length) [ FD ]
Line_5 $$ ListenableFuture<ArrayChunk> chunk = myChunkCache.get(key)-->Line_6 $$ if (chunk.isDone()) [ FD ]
Line_5 $$ ListenableFuture<ArrayChunk> chunk = myChunkCache.get(key)-->Line_16 $$ chunk.addListener(new Runnable() [ FD ]
Line_18 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_20 $$ fireTableCellUpdated(row, col)[ CD ]
Line_6 $$ if (chunk.isDone()) -->Line_9 $$ int c = col % CHUNK_COL_SIZE[ CD ]
Line_2 $$ public Object getValueAt(final int row, final int col) -->Line_20 $$ fireTableCellUpdated(row, col)[ FD ]
Line_16 $$ chunk.addListener(new Runnable() -->Line_18 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_10 $$ if (r < data.length) -->Line_11 $$ if (c < data[r].length) [ CD ]
Line_2 $$ public Object getValueAt(final int row, final int col) -->Line_3 $$ Pair<Integer, Integer> key = itemToChunkKey(row, col)[ CD ]
Line_11 $$ if (c < data[r].length) -->Line_12 $$ return myProvider.correctStringValue(data[r][c])[ CD ]
Line_6 $$ if (chunk.isDone()) -->Line_8 $$ int r = row % CHUNK_ROW_SIZE[ CD ]
Line_5 $$ ListenableFuture<ArrayChunk> chunk = myChunkCache.get(key)-->Line_7 $$ Object[][] data = chunk.get().getData()[ FD ]
Line_6 $$ if (chunk.isDone()) -->Line_10 $$ if (r < data.length) [ CD ]
