Line_2 $$ public static void deleteSyncFile(final SyncFile syncFile, final boolean notify) -->Line_4 $$ doDeleteSyncFile(syncFile, notify)[ FD ]
Line_11 $$ for (SyncFile childSyncFile : childSyncFiles) -->Line_13 $$ doDeleteSyncFile(childSyncFile, notify)[ FD ]
Line_8 $$ Callable<Object> callable = new Callable<Object>() -->Line_15 $$ return null[ CD ]
Line_2 $$ public static void deleteSyncFile(final SyncFile syncFile, final boolean notify) -->Line_13 $$ doDeleteSyncFile(childSyncFile, notify)[ FD ]
Line_8 $$ Callable<Object> callable = new Callable<Object>() -->Line_10 $$ List<SyncFile> childSyncFiles = _syncFilePersistence.findByParentFilePathName(syncFile.getFilePathName())[ CD ]
Line_11 $$ for (SyncFile childSyncFile : childSyncFiles) -->Line_12 $$ childSyncFile.setUiEvent(syncFile.getUiEvent())[ FD ]
Line_2 $$ public static void deleteSyncFile(final SyncFile syncFile, final boolean notify) -->Line_12 $$ childSyncFile.setUiEvent(syncFile.getUiEvent())[ FD ]
Line_2 $$ public static void deleteSyncFile(final SyncFile syncFile, final boolean notify) -->Line_5 $$ if (!syncFile.isFolder()) [ FD ]
Line_8 $$ Callable<Object> callable = new Callable<Object>() -->Line_18 $$ _syncFilePersistence.callBatchTasks(callable)[ FD ]
Line_20 $$ if (_logger.isDebugEnabled()) -->Line_21 $$ _logger.debug(sqle.getMessage(), sqle)[ CD ]
Line_5 $$ if (!syncFile.isFolder()) -->Line_6 $$ return[ CD ]
Line_2 $$ public static void deleteSyncFile(final SyncFile syncFile, final boolean notify) -->Line_10 $$ List<SyncFile> childSyncFiles = _syncFilePersistence.findByParentFilePathName(syncFile.getFilePathName())[ FD ]
