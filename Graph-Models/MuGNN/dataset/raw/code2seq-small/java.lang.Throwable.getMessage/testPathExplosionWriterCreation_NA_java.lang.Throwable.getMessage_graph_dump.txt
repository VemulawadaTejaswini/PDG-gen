Line_5 $$ MapFile.Writer writer = null-->Line_11 $$ writer = new MapFile.Writer(conf, pathSpy, MapFile.Writer.keyClass(IntWritable.class), MapFile.Writer.valueClass(IntWritable.class))[ FD ]
Line_5 $$ MapFile.Writer writer = null-->Line_18 $$ IOUtils.cleanup(null, writer)[ FD ]
Line_2 $$ public void testPathExplosionWriterCreation() -->Line_4 $$ String TEST_ERROR_MESSAGE = "Mkdirs failed to create directory " + path.getName()[ CD ]
Line_3 $$ Path path = new Path(TEST_DIR, "testPathExplosionWriterCreation.mapfile")-->Line_8 $$ Path pathSpy = spy(path)[ FD ]
Line_2 $$ public void testPathExplosionWriterCreation() -->Line_5 $$ MapFile.Writer writer = null[ CD ]
Line_8 $$ Path pathSpy = spy(path)-->Line_10 $$ when(pathSpy.getFileSystem(conf)).thenReturn(fsSpy)[ FD ]
Line_4 $$ String TEST_ERROR_MESSAGE = "Mkdirs failed to create directory " + path.getName()-->Line_14 $$ assertEquals("testPathExplosionWriterCreation ex message error !!!", ex.getMessage(), TEST_ERROR_MESSAGE)[ FD ]
Line_7 $$ FileSystem fsSpy = spy(FileSystem.get(conf))-->Line_9 $$ when(fsSpy.mkdirs(path)).thenThrow(new IOException(TEST_ERROR_MESSAGE))[ FD ]
Line_7 $$ FileSystem fsSpy = spy(FileSystem.get(conf))-->Line_10 $$ when(pathSpy.getFileSystem(conf)).thenReturn(fsSpy)[ FD ]
Line_3 $$ Path path = new Path(TEST_DIR, "testPathExplosionWriterCreation.mapfile")-->Line_4 $$ String TEST_ERROR_MESSAGE = "Mkdirs failed to create directory " + path.getName()[ FD ]
Line_11 $$ writer = new MapFile.Writer(conf, pathSpy, MapFile.Writer.keyClass(IntWritable.class), MapFile.Writer.valueClass(IntWritable.class))-->Line_18 $$ IOUtils.cleanup(null, writer)[ FD ]
Line_2 $$ public void testPathExplosionWriterCreation() -->Line_3 $$ Path path = new Path(TEST_DIR, "testPathExplosionWriterCreation.mapfile")[ CD ]
Line_3 $$ Path path = new Path(TEST_DIR, "testPathExplosionWriterCreation.mapfile")-->Line_9 $$ when(fsSpy.mkdirs(path)).thenThrow(new IOException(TEST_ERROR_MESSAGE))[ FD ]
