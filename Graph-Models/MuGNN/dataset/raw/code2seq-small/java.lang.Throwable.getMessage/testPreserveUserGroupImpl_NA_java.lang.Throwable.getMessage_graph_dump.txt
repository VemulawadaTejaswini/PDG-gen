Line_12 $$ EnumSet<DistCpOptions.FileAttribute> fileAttributes = EnumSet.noneOf(DistCpOptions.FileAttribute.class)-->Line_16 $$ fileAttributes.add(DistCpOptions.FileAttribute.PERMISSION)[ FD ]
Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)-->Line_32 $$ Assert.assertTrue(preserve || !source.getOwner().equals(target.getOwner()))[ FD ]
Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)-->Line_34 $$ Assert.assertTrue(preserve || !source.getPermission().equals(target.getPermission()))[ FD ]
Line_13 $$ if (preserve) -->Line_15 $$ fileAttributes.add(DistCpOptions.FileAttribute.GROUP)[ CD ]
Line_28 $$ if (!source.isDirectory()) -->Line_35 $$ Assert.assertTrue(source.isDirectory() || source.getReplication() != target.getReplication())[ CD ]
Line_2 $$ private void testPreserveUserGroupImpl(boolean preserve) -->Line_29 $$ Assert.assertTrue(!preserve || source.getOwner().equals(target.getOwner()))[ FD ]
Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)-->Line_35 $$ Assert.assertTrue(source.isDirectory() || source.getReplication() != target.getReplication())[ FD ]
Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)-->Line_29 $$ Assert.assertTrue(!preserve || source.getOwner().equals(target.getOwner()))[ FD ]
Line_12 $$ EnumSet<DistCpOptions.FileAttribute> fileAttributes = EnumSet.noneOf(DistCpOptions.FileAttribute.class)-->Line_14 $$ fileAttributes.add(DistCpOptions.FileAttribute.USER)[ FD ]
Line_20 $$ for (Path path : pathList) -->Line_22 $$ copyMapper.map(new Text(DistCpUtils.getRelativePath(new Path(SOURCE_PATH), path)), new CopyListingFileStatus(fileStatus), context)[ FD ]
Line_13 $$ if (preserve) -->Line_16 $$ fileAttributes.add(DistCpOptions.FileAttribute.PERMISSION)[ CD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_30 $$ Assert.assertTrue(!preserve || source.getGroup().equals(target.getGroup()))[ FD ]
Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)-->Line_30 $$ Assert.assertTrue(!preserve || source.getGroup().equals(target.getGroup()))[ FD ]
Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)-->Line_33 $$ Assert.assertTrue(preserve || !source.getGroup().equals(target.getGroup()))[ FD ]
Line_20 $$ for (Path path : pathList) -->Line_25 $$ final Path targetPath = new Path(path.toString().replaceAll(SOURCE_PATH, TARGET_PATH))[ FD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_29 $$ Assert.assertTrue(!preserve || source.getOwner().equals(target.getOwner()))[ FD ]
Line_25 $$ final Path targetPath = new Path(path.toString().replaceAll(SOURCE_PATH, TARGET_PATH))-->Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)[ FD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_31 $$ Assert.assertTrue(!preserve || source.getPermission().equals(target.getPermission()))[ FD ]
Line_28 $$ if (!source.isDirectory()) -->Line_34 $$ Assert.assertTrue(preserve || !source.getPermission().equals(target.getPermission()))[ CD ]
Line_12 $$ EnumSet<DistCpOptions.FileAttribute> fileAttributes = EnumSet.noneOf(DistCpOptions.FileAttribute.class)-->Line_18 $$ configuration.set(DistCpOptionSwitch.PRESERVE_STATUS.getConfigLabel(), DistCpUtils.packAttributes(fileAttributes))[ FD ]
Line_7 $$ FileSystem fs = cluster.getFileSystem()-->Line_26 $$ final FileStatus source = fs.getFileStatus(path)[ FD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_28 $$ if (!source.isDirectory()) [ FD ]
Line_20 $$ for (Path path : pathList) -->Line_21 $$ final FileStatus fileStatus = fs.getFileStatus(path)[ FD ]
Line_11 $$ Configuration configuration = context.getConfiguration()-->Line_18 $$ configuration.set(DistCpOptionSwitch.PRESERVE_STATUS.getConfigLabel(), DistCpUtils.packAttributes(fileAttributes))[ FD ]
Line_7 $$ FileSystem fs = cluster.getFileSystem()-->Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)[ FD ]
Line_10 $$ Mapper<Text, CopyListingFileStatus, Text, Text>.Context<Text, CopyListingFileStatus, Text, Text> context = stubContext.getContext()-->Line_22 $$ copyMapper.map(new Text(DistCpUtils.getRelativePath(new Path(SOURCE_PATH), path)), new CopyListingFileStatus(fileStatus), context)[ FD ]
Line_10 $$ Mapper<Text, CopyListingFileStatus, Text, Text>.Context<Text, CopyListingFileStatus, Text, Text> context = stubContext.getContext()-->Line_11 $$ Configuration configuration = context.getConfiguration()[ FD ]
Line_7 $$ FileSystem fs = cluster.getFileSystem()-->Line_21 $$ final FileStatus fileStatus = fs.getFileStatus(path)[ FD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_35 $$ Assert.assertTrue(source.isDirectory() || source.getReplication() != target.getReplication())[ FD ]
Line_10 $$ Mapper<Text, CopyListingFileStatus, Text, Text>.Context<Text, CopyListingFileStatus, Text, Text> context = stubContext.getContext()-->Line_19 $$ copyMapper.setup(context)[ FD ]
Line_28 $$ if (!source.isDirectory()) -->Line_33 $$ Assert.assertTrue(preserve || !source.getGroup().equals(target.getGroup()))[ CD ]
Line_13 $$ if (preserve) -->Line_14 $$ fileAttributes.add(DistCpOptions.FileAttribute.USER)[ CD ]
Line_28 $$ if (!source.isDirectory()) -->Line_32 $$ Assert.assertTrue(preserve || !source.getOwner().equals(target.getOwner()))[ CD ]
Line_28 $$ if (!source.isDirectory()) -->Line_30 $$ Assert.assertTrue(!preserve || source.getGroup().equals(target.getGroup()))[ CD ]
Line_28 $$ if (!source.isDirectory()) -->Line_29 $$ Assert.assertTrue(!preserve || source.getOwner().equals(target.getOwner()))[ CD ]
Line_2 $$ private void testPreserveUserGroupImpl(boolean preserve) -->Line_30 $$ Assert.assertTrue(!preserve || source.getGroup().equals(target.getGroup()))[ FD ]
Line_9 $$ StubContext stubContext = new StubContext(getConfiguration(), null, 0)-->Line_10 $$ Mapper<Text, CopyListingFileStatus, Text, Text>.Context<Text, CopyListingFileStatus, Text, Text> context = stubContext.getContext()[ FD ]
Line_2 $$ private void testPreserveUserGroupImpl(boolean preserve) -->Line_31 $$ Assert.assertTrue(!preserve || source.getPermission().equals(target.getPermission()))[ FD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_34 $$ Assert.assertTrue(preserve || !source.getPermission().equals(target.getPermission()))[ FD ]
Line_12 $$ EnumSet<DistCpOptions.FileAttribute> fileAttributes = EnumSet.noneOf(DistCpOptions.FileAttribute.class)-->Line_15 $$ fileAttributes.add(DistCpOptions.FileAttribute.GROUP)[ FD ]
Line_8 $$ CopyMapper copyMapper = new CopyMapper()-->Line_19 $$ copyMapper.setup(context)[ FD ]
Line_28 $$ if (!source.isDirectory()) -->Line_31 $$ Assert.assertTrue(!preserve || source.getPermission().equals(target.getPermission()))[ CD ]
Line_27 $$ final FileStatus target = fs.getFileStatus(targetPath)-->Line_31 $$ Assert.assertTrue(!preserve || source.getPermission().equals(target.getPermission()))[ FD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_32 $$ Assert.assertTrue(preserve || !source.getOwner().equals(target.getOwner()))[ FD ]
Line_20 $$ for (Path path : pathList) -->Line_26 $$ final FileStatus source = fs.getFileStatus(path)[ FD ]
Line_8 $$ CopyMapper copyMapper = new CopyMapper()-->Line_22 $$ copyMapper.map(new Text(DistCpUtils.getRelativePath(new Path(SOURCE_PATH), path)), new CopyListingFileStatus(fileStatus), context)[ FD ]
Line_26 $$ final FileStatus source = fs.getFileStatus(path)-->Line_33 $$ Assert.assertTrue(preserve || !source.getGroup().equals(target.getGroup()))[ FD ]
