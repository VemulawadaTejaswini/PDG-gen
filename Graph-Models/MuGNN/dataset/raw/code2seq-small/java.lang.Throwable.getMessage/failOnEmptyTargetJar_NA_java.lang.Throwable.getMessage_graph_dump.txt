Line_3 $$ final File sourceJar = new File(myOlderDir, "lib/empty.jar")-->Line_4 $$ FileUtil.copy(new File(myOlderDir, "lib/annotations.jar"), sourceJar)[ FD ]
Line_6 $$ final File targetJar = new File(myNewerDir, "lib/empty.jar")-->Line_8 $$ targetJar.delete()[ FD ]
Line_14 $$ final String reason = e.getMessage()-->Line_15 $$ assertEquals("Corrupted target file: " + targetJar, reason)[ FD ]
Line_6 $$ final File targetJar = new File(myNewerDir, "lib/empty.jar")-->Line_17 $$ targetJar.delete()[ FD ]
Line_7 $$ if (targetJar.exists())-->Line_8 $$ targetJar.delete()[ CD ]
Line_6 $$ final File targetJar = new File(myNewerDir, "lib/empty.jar")-->Line_7 $$ if (targetJar.exists())[ FD ]
Line_2 $$ public void failOnEmptyTargetJar() throws Exception -->Line_4 $$ FileUtil.copy(new File(myOlderDir, "lib/annotations.jar"), sourceJar)[ CD ]
Line_2 $$ public void failOnEmptyTargetJar() throws Exception -->Line_3 $$ final File sourceJar = new File(myOlderDir, "lib/empty.jar")[ CD ]
Line_6 $$ final File targetJar = new File(myNewerDir, "lib/empty.jar")-->Line_9 $$ assertTrue(targetJar.createNewFile())[ FD ]
Line_3 $$ final File sourceJar = new File(myOlderDir, "lib/empty.jar")-->Line_20 $$ sourceJar.delete()[ FD ]
