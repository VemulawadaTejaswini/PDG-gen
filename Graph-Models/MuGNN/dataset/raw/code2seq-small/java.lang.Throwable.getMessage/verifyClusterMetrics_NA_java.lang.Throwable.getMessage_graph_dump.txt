Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_24 $$ assertTrue(message, isAllMetricAssertionDone)[ CD ]
Line_4 $$ QueueMetrics metrics = rm.getResourceScheduler().getRootQueueMetrics()-->Line_10 $$ assertMetric("appsSubmitted", appsSubmitted, metrics.getAppsSubmitted())[ FD ]
Line_4 $$ QueueMetrics metrics = rm.getResourceScheduler().getRootQueueMetrics()-->Line_11 $$ assertMetric("appsPending", appsPending, metrics.getAppsPending())[ FD ]
Line_4 $$ QueueMetrics metrics = rm.getResourceScheduler().getRootQueueMetrics()-->Line_13 $$ assertMetric("availableMB", availableMB, metrics.getAvailableMB())[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_10 $$ assertMetric("appsSubmitted", appsSubmitted, metrics.getAppsSubmitted())[ FD ]
Line_6 $$ boolean isAllMetricAssertionDone = false-->Line_24 $$ assertTrue(message, isAllMetricAssertionDone)[ FD ]
Line_3 $$ int timeoutSecs = 0-->Line_8 $$ while (timeoutSecs++ < 5) [ FD ]
Line_16 $$ isAllMetricAssertionDone = true-->Line_24 $$ assertTrue(message, isAllMetricAssertionDone)[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_15 $$ assertMetric("activeNodes", activeNodes, clusterMetrics.getNumActiveNMs())[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_11 $$ assertMetric("appsPending", appsPending, metrics.getAppsPending())[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_4 $$ QueueMetrics metrics = rm.getResourceScheduler().getRootQueueMetrics()[ CD ]
Line_5 $$ ClusterMetrics clusterMetrics = ClusterMetrics.getMetrics()-->Line_15 $$ assertMetric("activeNodes", activeNodes, clusterMetrics.getNumActiveNMs())[ FD ]
Line_7 $$ String message = null-->Line_19 $$ message = e.getMessage()[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_13 $$ assertMetric("availableMB", availableMB, metrics.getAvailableMB())[ FD ]
Line_7 $$ String message = null-->Line_24 $$ assertTrue(message, isAllMetricAssertionDone)[ FD ]
Line_4 $$ QueueMetrics metrics = rm.getResourceScheduler().getRootQueueMetrics()-->Line_14 $$ assertMetric("activeApplications", activeApplications, metrics.getActiveApps())[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_5 $$ ClusterMetrics clusterMetrics = ClusterMetrics.getMetrics()[ CD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_6 $$ boolean isAllMetricAssertionDone = false[ CD ]
Line_19 $$ message = e.getMessage()-->Line_24 $$ assertTrue(message, isAllMetricAssertionDone)[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_12 $$ assertMetric("containersPending", containersPending, metrics.getPendingContainers())[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_7 $$ String message = null[ CD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_14 $$ assertMetric("activeApplications", activeApplications, metrics.getActiveApps())[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_3 $$ int timeoutSecs = 0[ CD ]
Line_4 $$ QueueMetrics metrics = rm.getResourceScheduler().getRootQueueMetrics()-->Line_12 $$ assertMetric("containersPending", containersPending, metrics.getPendingContainers())[ FD ]
Line_2 $$ private void verifyClusterMetrics(int activeNodes, int appsSubmitted, int appsPending, int containersPending, int availableMB, int activeApplications) throws Exception -->Line_8 $$ while (timeoutSecs++ < 5) [ CD ]
Line_6 $$ boolean isAllMetricAssertionDone = false-->Line_16 $$ isAllMetricAssertionDone = true[ FD ]
