Line_9 $$ FSImage img = namesystem.getFSImage()-->Line_11 $$ long thisCheckpointTxId = img.getLastAppliedOrWrittenTxId()[ FD ]
Line_4 $$ final long txid-->Line_35 $$ TransferFsImage.uploadImageFromStorage(activeNNAddress, conf, namesystem.getFSImage().getStorage(), imageType, txid, canceler)[ FD ]
Line_18 $$ imageType = NameNodeFile.IMAGE_ROLLBACK-->Line_35 $$ TransferFsImage.uploadImageFromStorage(activeNNAddress, conf, namesystem.getFSImage().getStorage(), imageType, txid, canceler)[ FD ]
Line_13 $$ if (thisCheckpointTxId == prevCheckpointTxId) -->Line_15 $$ return[ CD ]
Line_2 $$ private void doCheckpoint() throws InterruptedException, IOException -->Line_33 $$ Future<Void> upload = executor.submit(new Callable<Void>() [ CD ]
Line_18 $$ imageType = NameNodeFile.IMAGE_ROLLBACK-->Line_20 $$ imageType = NameNodeFile.IMAGE[ FD ]
Line_9 $$ FSImage img = namesystem.getFSImage()-->Line_10 $$ long prevCheckpointTxId = img.getStorage().getMostRecentCheckpointTxId()[ FD ]
Line_20 $$ imageType = NameNodeFile.IMAGE-->Line_22 $$ img.saveNamespace(namesystem, imageType, canceler)[ FD ]
Line_5 $$ final NameNodeFile imageType-->Line_20 $$ imageType = NameNodeFile.IMAGE[ FD ]
Line_17 $$ if (namesystem.isRollingUpgrade() && !namesystem.getFSImage().hasRollbackFSImage()) -->Line_18 $$ imageType = NameNodeFile.IMAGE_ROLLBACK[ CD ]
Line_10 $$ long prevCheckpointTxId = img.getStorage().getMostRecentCheckpointTxId()-->Line_13 $$ if (thisCheckpointTxId == prevCheckpointTxId) [ FD ]
Line_25 $$ String outputDir = checkpointConf.getLegacyOivImageDir()-->Line_27 $$ img.saveLegacyOIVImage(namesystem, outputDir, canceler)[ FD ]
Line_2 $$ private void doCheckpoint() throws InterruptedException, IOException -->Line_32 $$ ExecutorService executor = Executors.newSingleThreadExecutor(uploadThreadFactory)[ CD ]
Line_18 $$ imageType = NameNodeFile.IMAGE_ROLLBACK-->Line_22 $$ img.saveNamespace(namesystem, imageType, canceler)[ FD ]
Line_23 $$ txid = img.getStorage().getMostRecentCheckpointTxId()-->Line_35 $$ TransferFsImage.uploadImageFromStorage(activeNNAddress, conf, namesystem.getFSImage().getStorage(), imageType, txid, canceler)[ FD ]
Line_5 $$ final NameNodeFile imageType-->Line_18 $$ imageType = NameNodeFile.IMAGE_ROLLBACK[ FD ]
Line_13 $$ if (thisCheckpointTxId == prevCheckpointTxId) -->Line_14 $$ LOG.info("A checkpoint was triggered but the Standby Node has not " + "received any transactions since the last checkpoint at txid " + thisCheckpointTxId + ". Skipping...")[ CD ]
Line_4 $$ final long txid-->Line_23 $$ txid = img.getStorage().getMostRecentCheckpointTxId()[ FD ]
Line_25 $$ String outputDir = checkpointConf.getLegacyOivImageDir()-->Line_26 $$ if (outputDir != null && !outputDir.isEmpty()) [ FD ]
Line_26 $$ if (outputDir != null && !outputDir.isEmpty()) -->Line_27 $$ img.saveLegacyOIVImage(namesystem, outputDir, canceler)[ CD ]
Line_2 $$ private void doCheckpoint() throws InterruptedException, IOException -->Line_4 $$ final long txid[ CD ]
Line_33 $$ Future<Void> upload = executor.submit(new Callable<Void>() -->Line_43 $$ upload.cancel(true)[ FD ]
Line_5 $$ final NameNodeFile imageType-->Line_22 $$ img.saveNamespace(namesystem, imageType, canceler)[ FD ]
Line_32 $$ ExecutorService executor = Executors.newSingleThreadExecutor(uploadThreadFactory)-->Line_33 $$ Future<Void> upload = executor.submit(new Callable<Void>() [ FD ]
Line_11 $$ long thisCheckpointTxId = img.getLastAppliedOrWrittenTxId()-->Line_13 $$ if (thisCheckpointTxId == prevCheckpointTxId) [ FD ]
Line_9 $$ FSImage img = namesystem.getFSImage()-->Line_23 $$ txid = img.getStorage().getMostRecentCheckpointTxId()[ FD ]
Line_2 $$ private void doCheckpoint() throws InterruptedException, IOException -->Line_5 $$ final NameNodeFile imageType[ CD ]
Line_2 $$ private void doCheckpoint() throws InterruptedException, IOException -->Line_6 $$ namesystem.longReadLockInterruptibly()[ CD ]
Line_2 $$ private void doCheckpoint() throws InterruptedException, IOException -->Line_39 $$ executor.shutdown()[ CD ]
Line_33 $$ Future<Void> upload = executor.submit(new Callable<Void>() -->Line_41 $$ upload.get()[ FD ]
Line_5 $$ final NameNodeFile imageType-->Line_35 $$ TransferFsImage.uploadImageFromStorage(activeNNAddress, conf, namesystem.getFSImage().getStorage(), imageType, txid, canceler)[ FD ]
Line_33 $$ Future<Void> upload = executor.submit(new Callable<Void>() -->Line_35 $$ TransferFsImage.uploadImageFromStorage(activeNNAddress, conf, namesystem.getFSImage().getStorage(), imageType, txid, canceler)[ CD ]
Line_9 $$ FSImage img = namesystem.getFSImage()-->Line_22 $$ img.saveNamespace(namesystem, imageType, canceler)[ FD ]
Line_33 $$ Future<Void> upload = executor.submit(new Callable<Void>() -->Line_36 $$ return null[ CD ]
Line_32 $$ ExecutorService executor = Executors.newSingleThreadExecutor(uploadThreadFactory)-->Line_39 $$ executor.shutdown()[ FD ]
Line_17 $$ if (namesystem.isRollingUpgrade() && !namesystem.getFSImage().hasRollbackFSImage()) -->Line_20 $$ imageType = NameNodeFile.IMAGE[ CD ]
Line_20 $$ imageType = NameNodeFile.IMAGE-->Line_35 $$ TransferFsImage.uploadImageFromStorage(activeNNAddress, conf, namesystem.getFSImage().getStorage(), imageType, txid, canceler)[ FD ]
Line_9 $$ FSImage img = namesystem.getFSImage()-->Line_27 $$ img.saveLegacyOIVImage(namesystem, outputDir, canceler)[ FD ]
