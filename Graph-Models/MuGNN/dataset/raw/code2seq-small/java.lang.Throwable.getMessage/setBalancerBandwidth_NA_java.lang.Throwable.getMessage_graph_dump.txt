Line_17 $$ DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_19 $$ URI dfsUri = dfs.getUri()[ FD ]
Line_21 $$ if (isHaEnabled) -->Line_29 $$ dfs.setBalancerBandwidth(bandwidth)[ CD ]
Line_21 $$ if (isHaEnabled) -->Line_22 $$ String nsId = dfsUri.getHost()[ CD ]
Line_6 $$ bandwidth = Long.parseLong(argv[idx])-->Line_25 $$ proxy.getProxy().setBalancerBandwidth(bandwidth)[ FD ]
Line_24 $$ for (ProxyAndInfo<ClientProtocol> proxy : proxies) -->Line_26 $$ System.out.println("Balancer bandwidth is set to " + bandwidth + " for " + proxy.getAddress())[ FD ]
Line_21 $$ if (isHaEnabled) -->Line_30 $$ System.out.println("Balancer bandwidth is set to " + bandwidth)[ CD ]
Line_19 $$ URI dfsUri = dfs.getUri()-->Line_20 $$ boolean isHaEnabled = HAUtil.isLogicalUri(dfsConf, dfsUri)[ FD ]
Line_3 $$ long bandwidth-->Line_29 $$ dfs.setBalancerBandwidth(bandwidth)[ FD ]
Line_18 $$ Configuration dfsConf = dfs.getConf()-->Line_20 $$ boolean isHaEnabled = HAUtil.isLogicalUri(dfsConf, dfsUri)[ FD ]
Line_3 $$ long bandwidth-->Line_25 $$ proxy.getProxy().setBalancerBandwidth(bandwidth)[ FD ]
Line_24 $$ for (ProxyAndInfo<ClientProtocol> proxy : proxies) -->Line_25 $$ proxy.getProxy().setBalancerBandwidth(bandwidth)[ FD ]
Line_4 $$ int exitCode = -1-->Line_32 $$ exitCode = 0[ FD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_17 $$ DistributedFileSystem dfs = (DistributedFileSystem) fs[ CD ]
Line_13 $$ if (!(fs instanceof DistributedFileSystem)) -->Line_15 $$ return exitCode[ CD ]
Line_18 $$ Configuration dfsConf = dfs.getConf()-->Line_23 $$ List<ProxyAndInfo<ClientProtocol>> proxies = HAUtil.getProxiesForAllNameNodesInNameservice(dfsConf, nsId, ClientProtocol.class)[ FD ]
Line_17 $$ DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_18 $$ Configuration dfsConf = dfs.getConf()[ FD ]
Line_13 $$ if (!(fs instanceof DistributedFileSystem)) -->Line_14 $$ System.err.println("FileSystem is " + fs.getUri())[ CD ]
Line_17 $$ DistributedFileSystem dfs = (DistributedFileSystem) fs-->Line_29 $$ dfs.setBalancerBandwidth(bandwidth)[ FD ]
Line_22 $$ String nsId = dfsUri.getHost()-->Line_23 $$ List<ProxyAndInfo<ClientProtocol>> proxies = HAUtil.getProxiesForAllNameNodesInNameservice(dfsConf, nsId, ClientProtocol.class)[ FD ]
Line_19 $$ URI dfsUri = dfs.getUri()-->Line_22 $$ String nsId = dfsUri.getHost()[ FD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_33 $$ return exitCode[ CD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_21 $$ if (isHaEnabled) [ CD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_18 $$ Configuration dfsConf = dfs.getConf()[ CD ]
Line_6 $$ bandwidth = Long.parseLong(argv[idx])-->Line_29 $$ dfs.setBalancerBandwidth(bandwidth)[ FD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_32 $$ exitCode = 0[ CD ]
Line_12 $$ FileSystem fs = getFS()-->Line_14 $$ System.err.println("FileSystem is " + fs.getUri())[ FD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_13 $$ if (!(fs instanceof DistributedFileSystem)) [ CD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_12 $$ FileSystem fs = getFS()[ CD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_19 $$ URI dfsUri = dfs.getUri()[ CD ]
Line_3 $$ long bandwidth-->Line_6 $$ bandwidth = Long.parseLong(argv[idx])[ FD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_20 $$ boolean isHaEnabled = HAUtil.isLogicalUri(dfsConf, dfsUri)[ CD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_3 $$ long bandwidth[ CD ]
Line_21 $$ if (isHaEnabled) -->Line_23 $$ List<ProxyAndInfo<ClientProtocol>> proxies = HAUtil.getProxiesForAllNameNodesInNameservice(dfsConf, nsId, ClientProtocol.class)[ CD ]
Line_2 $$ public int setBalancerBandwidth(String[] argv, int idx) throws IOException -->Line_4 $$ int exitCode = -1[ CD ]
