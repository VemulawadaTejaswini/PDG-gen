Line_10 $$ first = e-->Line_16 $$ assertEquals(first.getMessage(), second.getMessage())[ FD ]
Line_4 $$ UnsupportedOperationException first = null-->Line_16 $$ assertEquals(first.getMessage(), second.getMessage())[ FD ]
Line_13 $$ UnsupportedOperationException second = methodInCallStack(keyItem)-->Line_15 $$ assertEquals(first.getCause(), second.getCause())[ FD ]
Line_13 $$ UnsupportedOperationException second = methodInCallStack(keyItem)-->Line_16 $$ assertEquals(first.getMessage(), second.getMessage())[ FD ]
Line_13 $$ UnsupportedOperationException second = methodInCallStack(keyItem)-->Line_18 $$ assertTrue("Cached stack should have been rewritten with a reference to  methodInCallStack", contain(second, AbstractJCacheAnnotationTests.class.getName(), "methodInCallStack"))[ FD ]
Line_3 $$ final String keyItem = name.getMethodName()-->Line_13 $$ UnsupportedOperationException second = methodInCallStack(keyItem)[ FD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_13 $$ UnsupportedOperationException second = methodInCallStack(keyItem)[ CD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_12 $$ assertEquals("First call should not have been cached", ref + 1, service.exceptionInvocations())[ CD ]
Line_10 $$ first = e-->Line_17 $$ assertFalse("Original stack must not contain any reference to methodInCallStack", contain(first, AbstractJCacheAnnotationTests.class.getName(), "methodInCallStack"))[ FD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_16 $$ assertEquals(first.getMessage(), second.getMessage())[ CD ]
Line_3 $$ final String keyItem = name.getMethodName()-->Line_7 $$ service.cacheWithException(keyItem, true)[ FD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_5 $$ long ref = service.exceptionInvocations()[ CD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_15 $$ assertEquals(first.getCause(), second.getCause())[ CD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_14 $$ assertEquals("Second call should have been cached", ref + 1, service.exceptionInvocations())[ CD ]
Line_4 $$ UnsupportedOperationException first = null-->Line_15 $$ assertEquals(first.getCause(), second.getCause())[ FD ]
Line_4 $$ UnsupportedOperationException first = null-->Line_17 $$ assertFalse("Original stack must not contain any reference to methodInCallStack", contain(first, AbstractJCacheAnnotationTests.class.getName(), "methodInCallStack"))[ FD ]
Line_4 $$ UnsupportedOperationException first = null-->Line_10 $$ first = e[ FD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_18 $$ assertTrue("Cached stack should have been rewritten with a reference to  methodInCallStack", contain(second, AbstractJCacheAnnotationTests.class.getName(), "methodInCallStack"))[ CD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_4 $$ UnsupportedOperationException first = null[ CD ]
Line_10 $$ first = e-->Line_15 $$ assertEquals(first.getCause(), second.getCause())[ FD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_17 $$ assertFalse("Original stack must not contain any reference to methodInCallStack", contain(first, AbstractJCacheAnnotationTests.class.getName(), "methodInCallStack"))[ CD ]
Line_2 $$ public void cacheExceptionRewriteCallStack() -->Line_3 $$ final String keyItem = name.getMethodName()[ CD ]
