Line_2 $$ public Object getComponentInstance(final PicoContainer container) throws PicoException, ProcessCanceledException -->Line_29 $$ return myComponentInstance[ CD ]
Line_2 $$ public Object getComponentInstance(final PicoContainer container) throws PicoException, ProcessCanceledException -->Line_8 $$ Object componentInstance = getDelegate().getComponentInstance(container)[ FD ]
Line_24 $$ if (myComponentInstance instanceof PluginAware) -->Line_26 $$ pluginAware.setPluginDescriptor(myPluginDescriptor)[ CD ]
Line_25 $$ PluginAware pluginAware = (PluginAware) myComponentInstance-->Line_26 $$ pluginAware.setPluginDescriptor(myPluginDescriptor)[ FD ]
Line_8 $$ Object componentInstance = getDelegate().getComponentInstance(container)-->Line_11 $$ XmlSerializer.deserializeInto(componentInstance, myExtensionElement)[ FD ]
Line_2 $$ public Object getComponentInstance(final PicoContainer container) throws PicoException, ProcessCanceledException -->Line_3 $$ if (myComponentInstance == null) [ CD ]
Line_24 $$ if (myComponentInstance instanceof PluginAware) -->Line_25 $$ PluginAware pluginAware = (PluginAware) myComponentInstance[ CD ]
Line_5 $$ if (Element.class.equals(getComponentImplementation())) -->Line_8 $$ Object componentInstance = getDelegate().getComponentInstance(container)[ CD ]
Line_3 $$ if (myComponentInstance == null) -->Line_24 $$ if (myComponentInstance instanceof PluginAware) [ CD ]
Line_5 $$ if (Element.class.equals(getComponentImplementation())) -->Line_9 $$ if (myDeserializeInstance) [ CD ]
