Line_9 $$ error = null-->Line_12 $$ error = "unsupported operation"[ FD ]
Line_16 $$ status = Status.ERROR_INVALID-->Line_19 $$ bld.setStatus(status)[ FD ]
Line_2 $$ public void releaseShortCircuitFds(SlotId slotId) throws IOException -->Line_3 $$ boolean success = false[ CD ]
Line_9 $$ error = null-->Line_20 $$ if (error != null) [ FD ]
Line_15 $$ error = e.getMessage()-->Line_21 $$ bld.setError(error)[ FD ]
Line_3 $$ boolean success = false-->Line_27 $$ BlockSender.ClientTraceLog.info(String.format("src: 127.0.0.1, dest: 127.0.0.1, op: RELEASE_SHORT_CIRCUIT_FDS," + " shmId: %016x%016x, slotIdx: %d, srvID: %s, success: %b", slotId.getShmId().getHi(), slotId.getShmId().getLo(), slotId.getSlotIdx(), datanode.getDatanodeUuid(), success))[ FD ]
Line_26 $$ if (ClientTraceLog.isInfoEnabled()) -->Line_27 $$ BlockSender.ClientTraceLog.info(String.format("src: 127.0.0.1, dest: 127.0.0.1, op: RELEASE_SHORT_CIRCUIT_FDS," + " shmId: %016x%016x, slotIdx: %d, srvID: %s, success: %b", slotId.getShmId().getHi(), slotId.getShmId().getLo(), slotId.getSlotIdx(), datanode.getDatanodeUuid(), success))[ CD ]
Line_10 $$ status = Status.SUCCESS-->Line_16 $$ status = Status.ERROR_INVALID[ FD ]
Line_6 $$ Status status-->Line_13 $$ status = Status.ERROR_UNSUPPORTED[ FD ]
Line_20 $$ if (error != null) -->Line_21 $$ bld.setError(error)[ CD ]
Line_13 $$ status = Status.ERROR_UNSUPPORTED-->Line_16 $$ status = Status.ERROR_INVALID[ FD ]
Line_13 $$ status = Status.ERROR_UNSUPPORTED-->Line_19 $$ bld.setStatus(status)[ FD ]
Line_5 $$ String error-->Line_9 $$ error = null[ FD ]
Line_6 $$ Status status-->Line_19 $$ bld.setStatus(status)[ FD ]
Line_24 $$ success = true-->Line_27 $$ BlockSender.ClientTraceLog.info(String.format("src: 127.0.0.1, dest: 127.0.0.1, op: RELEASE_SHORT_CIRCUIT_FDS," + " shmId: %016x%016x, slotIdx: %d, srvID: %s, success: %b", slotId.getShmId().getHi(), slotId.getShmId().getLo(), slotId.getSlotIdx(), datanode.getDatanodeUuid(), success))[ FD ]
Line_10 $$ status = Status.SUCCESS-->Line_13 $$ status = Status.ERROR_UNSUPPORTED[ FD ]
Line_3 $$ boolean success = false-->Line_24 $$ success = true[ FD ]
Line_5 $$ String error-->Line_12 $$ error = "unsupported operation"[ FD ]
Line_9 $$ error = null-->Line_21 $$ bld.setError(error)[ FD ]
Line_2 $$ public void releaseShortCircuitFds(SlotId slotId) throws IOException -->Line_27 $$ BlockSender.ClientTraceLog.info(String.format("src: 127.0.0.1, dest: 127.0.0.1, op: RELEASE_SHORT_CIRCUIT_FDS," + " shmId: %016x%016x, slotIdx: %d, srvID: %s, success: %b", slotId.getShmId().getHi(), slotId.getShmId().getLo(), slotId.getSlotIdx(), datanode.getDatanodeUuid(), success))[ FD ]
Line_12 $$ error = "unsupported operation"-->Line_15 $$ error = e.getMessage()[ FD ]
Line_5 $$ String error-->Line_20 $$ if (error != null) [ FD ]
Line_2 $$ public void releaseShortCircuitFds(SlotId slotId) throws IOException -->Line_8 $$ datanode.shortCircuitRegistry.unregisterSlot(slotId)[ FD ]
Line_6 $$ Status status-->Line_10 $$ status = Status.SUCCESS[ FD ]
Line_18 $$ ReleaseShortCircuitAccessResponseProto.Builder bld = ReleaseShortCircuitAccessResponseProto.newBuilder()-->Line_19 $$ bld.setStatus(status)[ FD ]
Line_12 $$ error = "unsupported operation"-->Line_20 $$ if (error != null) [ FD ]
Line_5 $$ String error-->Line_15 $$ error = e.getMessage()[ FD ]
Line_12 $$ error = "unsupported operation"-->Line_21 $$ bld.setError(error)[ FD ]
Line_10 $$ status = Status.SUCCESS-->Line_19 $$ bld.setStatus(status)[ FD ]
Line_18 $$ ReleaseShortCircuitAccessResponseProto.Builder bld = ReleaseShortCircuitAccessResponseProto.newBuilder()-->Line_23 $$ bld.build().writeDelimitedTo(socketOut)[ FD ]
Line_5 $$ String error-->Line_21 $$ bld.setError(error)[ FD ]
Line_9 $$ error = null-->Line_15 $$ error = e.getMessage()[ FD ]
Line_6 $$ Status status-->Line_16 $$ status = Status.ERROR_INVALID[ FD ]
Line_15 $$ error = e.getMessage()-->Line_20 $$ if (error != null) [ FD ]
Line_18 $$ ReleaseShortCircuitAccessResponseProto.Builder bld = ReleaseShortCircuitAccessResponseProto.newBuilder()-->Line_21 $$ bld.setError(error)[ FD ]
