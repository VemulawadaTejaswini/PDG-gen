Line_6 $$ final Object elt = Array.get(array, i)-->Line_8 $$ Array.set(result, i, persister.getElementType().deepCopy(elt, persister.getFactory()))[ FD ]
Line_3 $$ final int length = Array.getLength(array)-->Line_4 $$ final Serializable result = (Serializable) Array.newInstance(persister.getElementClass(), length)[ FD ]
Line_2 $$ public Serializable getSnapshot(CollectionPersister persister) throws HibernateException -->Line_3 $$ final int length = Array.getLength(array)[ CD ]
Line_2 $$ public Serializable getSnapshot(CollectionPersister persister) throws HibernateException -->Line_8 $$ Array.set(result, i, persister.getElementType().deepCopy(elt, persister.getFactory()))[ FD ]
Line_3 $$ final int length = Array.getLength(array)-->Line_5 $$ for (int i = 0; i < length; i++) [ FD ]
Line_5 $$ for (int i = 0; i < length; i++) -->Line_6 $$ final Object elt = Array.get(array, i)[ FD ]
Line_4 $$ final Serializable result = (Serializable) Array.newInstance(persister.getElementClass(), length)-->Line_8 $$ Array.set(result, i, persister.getElementType().deepCopy(elt, persister.getFactory()))[ FD ]
Line_2 $$ public Serializable getSnapshot(CollectionPersister persister) throws HibernateException -->Line_4 $$ final Serializable result = (Serializable) Array.newInstance(persister.getElementClass(), length)[ FD ]
Line_5 $$ for (int i = 0; i < length; i++) -->Line_6 $$ final Object elt = Array.get(array, i)[ CD ]
Line_2 $$ public Serializable getSnapshot(CollectionPersister persister) throws HibernateException -->Line_14 $$ return result[ CD ]
Line_2 $$ public Serializable getSnapshot(CollectionPersister persister) throws HibernateException -->Line_4 $$ final Serializable result = (Serializable) Array.newInstance(persister.getElementClass(), length)[ CD ]
Line_5 $$ for (int i = 0; i < length; i++) -->Line_8 $$ Array.set(result, i, persister.getElementType().deepCopy(elt, persister.getFactory()))[ FD ]
Line_2 $$ public Serializable getSnapshot(CollectionPersister persister) throws HibernateException -->Line_5 $$ for (int i = 0; i < length; i++) [ CD ]
