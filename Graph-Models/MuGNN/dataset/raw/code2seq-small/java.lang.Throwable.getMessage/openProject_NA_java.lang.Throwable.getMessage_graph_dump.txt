Line_13 $$ Project existing = findAndFocusExistingProjectForPath(path)-->Line_14 $$ if (existing != null)[ FD ]
Line_9 $$ String message = IdeBundle.message("error.project.file.does.not.exist", new File(file, Project.DIRECTORY_STORE_FOLDER).getPath())-->Line_10 $$ Messages.showErrorDialog(message, CommonBundle.getErrorTitle())[ FD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_14 $$ if (existing != null)[ CD ]
Line_4 $$ if (!file.exists()) -->Line_5 $$ Messages.showErrorDialog(IdeBundle.message("error.project.file.does.not.exist", path), CommonBundle.getErrorTitle())[ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_3 $$ File file = new File(path)[ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_30 $$ project = projectManager.loadAndOpenProject(path)[ FD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_16 $$ Project[] openProjects = ProjectManager.getInstance().getOpenProjects()[ CD ]
Line_18 $$ int exitCode = confirmOpenNewProject(false)-->Line_19 $$ if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) [ FD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_13 $$ Project existing = findAndFocusExistingProjectForPath(path)[ CD ]
Line_3 $$ File file = new File(path)-->Line_4 $$ if (!file.exists()) [ FD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_8 $$ if (file.isDirectory() && !new File(file, Project.DIRECTORY_STORE_FOLDER).exists()) [ CD ]
Line_21 $$ if (!closeAndDispose(toClose))-->Line_22 $$ return null[ CD ]
Line_3 $$ File file = new File(path)-->Line_8 $$ if (file.isDirectory() && !new File(file, Project.DIRECTORY_STORE_FOLDER).exists()) [ FD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_27 $$ ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx()[ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_13 $$ Project existing = findAndFocusExistingProjectForPath(path)[ FD ]
Line_19 $$ if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) -->Line_23 $$ if (exitCode != GeneralSettings.OPEN_PROJECT_NEW_WINDOW) [ CD ]
Line_8 $$ if (file.isDirectory() && !new File(file, Project.DIRECTORY_STORE_FOLDER).exists()) -->Line_11 $$ return null[ CD ]
Line_20 $$ final Project toClose = projectToClose != null ? projectToClose : openProjects[openProjects.length - 1]-->Line_21 $$ if (!closeAndDispose(toClose))[ FD ]
Line_8 $$ if (file.isDirectory() && !new File(file, Project.DIRECTORY_STORE_FOLDER).exists()) -->Line_10 $$ Messages.showErrorDialog(message, CommonBundle.getErrorTitle())[ CD ]
Line_27 $$ ProjectManagerEx projectManager = ProjectManagerEx.getInstanceEx()-->Line_30 $$ project = projectManager.loadAndOpenProject(path)[ FD ]
Line_4 $$ if (!file.exists()) -->Line_6 $$ return null[ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_4 $$ if (!file.exists()) [ CD ]
Line_14 $$ if (existing != null)-->Line_15 $$ return existing[ CD ]
Line_17 $$ if (!forceOpenInNewFrame && openProjects.length > 0) -->Line_18 $$ int exitCode = confirmOpenNewProject(false)[ CD ]
Line_23 $$ if (exitCode != GeneralSettings.OPEN_PROJECT_NEW_WINDOW) -->Line_24 $$ return null[ CD ]
Line_17 $$ if (!forceOpenInNewFrame && openProjects.length > 0) -->Line_19 $$ if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) [ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_17 $$ if (!forceOpenInNewFrame && openProjects.length > 0) [ CD ]
Line_19 $$ if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) -->Line_21 $$ if (!closeAndDispose(toClose))[ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_28 $$ Project project = null[ CD ]
Line_8 $$ if (file.isDirectory() && !new File(file, Project.DIRECTORY_STORE_FOLDER).exists()) -->Line_9 $$ String message = IdeBundle.message("error.project.file.does.not.exist", new File(file, Project.DIRECTORY_STORE_FOLDER).getPath())[ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_40 $$ return project[ CD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_5 $$ Messages.showErrorDialog(IdeBundle.message("error.project.file.does.not.exist", path), CommonBundle.getErrorTitle())[ FD ]
Line_2 $$ public static Project openProject(final String path, @Nullable Project projectToClose, boolean forceOpenInNewFrame) -->Line_17 $$ if (!forceOpenInNewFrame && openProjects.length > 0) [ FD ]
Line_18 $$ int exitCode = confirmOpenNewProject(false)-->Line_23 $$ if (exitCode != GeneralSettings.OPEN_PROJECT_NEW_WINDOW) [ FD ]
Line_28 $$ Project project = null-->Line_30 $$ project = projectManager.loadAndOpenProject(path)[ FD ]
Line_19 $$ if (exitCode == GeneralSettings.OPEN_PROJECT_SAME_WINDOW) -->Line_20 $$ final Project toClose = projectToClose != null ? projectToClose : openProjects[openProjects.length - 1][ CD ]
