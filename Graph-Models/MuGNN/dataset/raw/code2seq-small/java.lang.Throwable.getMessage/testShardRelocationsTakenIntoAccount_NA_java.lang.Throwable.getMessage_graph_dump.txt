Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_6 $$ usagesBuilder.put("node2", new DiskUsage("node2", "n2", "/dev/null", 100, 40))[ CD ]
Line_4 $$ ImmutableOpenMap.Builder<String, DiskUsage> usagesBuilder = ImmutableOpenMap.builder()-->Line_6 $$ usagesBuilder.put("node2", new DiskUsage("node2", "n2", "/dev/null", 100, 40))[ FD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_7 $$ usagesBuilder.put("node3", new DiskUsage("node3", "n3", "/dev/null", 100, 40))[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_41 $$ clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).put(newNode("node3"))).build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_11 $$ shardSizesBuilder.put("[test][0][r]", 14L)[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_10 $$ shardSizesBuilder.put("[test][0][p]", 14L)[ CD ]
Line_9 $$ ImmutableOpenMap.Builder<String, Long> shardSizesBuilder = ImmutableOpenMap.builder()-->Line_10 $$ shardSizesBuilder.put("[test][0][p]", 14L)[ FD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_15 $$ final ClusterInfo clusterInfo = new DevNullClusterInfo(usages, usages, shardSizes)[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_12 $$ shardSizesBuilder.put("[test2][0][p]", 1L)[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_36 $$ routingTable = strategy.applyStartedShards(clusterState, clusterState.getRoutingNodes().shardsWithState(INITIALIZING)).routingTable()[ CD ]
Line_9 $$ ImmutableOpenMap.Builder<String, Long> shardSizesBuilder = ImmutableOpenMap.builder()-->Line_13 $$ shardSizesBuilder.put("[test2][0][r]", 1L)[ FD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_34 $$ assertThat(clusterState.getRoutingNodes().shardsWithState(INITIALIZING).size(), equalTo(4))[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_8 $$ ImmutableOpenMap<String, DiskUsage> usages = usagesBuilder.build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_46 $$ logShardStates(clusterState)[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_28 $$ ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.DEFAULT).metaData(metaData).routingTable(routingTable).build()[ CD ]
Line_17 $$ ClusterInfoService cis = new ClusterInfoService() -->Line_20 $$ return clusterInfo[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_17 $$ ClusterInfoService cis = new ClusterInfoService() [ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_26 $$ MetaData metaData = MetaData.builder().put(IndexMetaData.builder("test").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).put(IndexMetaData.builder("test2").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_31 $$ routingTable = strategy.reroute(clusterState, "reroute").routingTable()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_32 $$ clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build()[ CD ]
Line_4 $$ ImmutableOpenMap.Builder<String, DiskUsage> usagesBuilder = ImmutableOpenMap.builder()-->Line_5 $$ usagesBuilder.put("node1", new DiskUsage("node1", "n1", "/dev/null", 100, 40))[ FD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_37 $$ clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_45 $$ clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_27 $$ RoutingTable routingTable = RoutingTable.builder().addAsNew(metaData.index("test")).addAsNew(metaData.index("test2")).build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_3 $$ Settings diskSettings = settingsBuilder().put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_DISK_THRESHOLD_ENABLED_SETTING.getKey(), true).put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_INCLUDE_RELOCATIONS_SETTING.getKey(), true).put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_LOW_DISK_WATERMARK_SETTING.getKey(), 0.7).put(DiskThresholdDecider.CLUSTER_ROUTING_ALLOCATION_HIGH_DISK_WATERMARK_SETTING.getKey(), 0.8).build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_9 $$ ImmutableOpenMap.Builder<String, Long> shardSizesBuilder = ImmutableOpenMap.builder()[ CD ]
Line_4 $$ ImmutableOpenMap.Builder<String, DiskUsage> usagesBuilder = ImmutableOpenMap.builder()-->Line_8 $$ ImmutableOpenMap<String, DiskUsage> usages = usagesBuilder.build()[ FD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_5 $$ usagesBuilder.put("node1", new DiskUsage("node1", "n1", "/dev/null", 100, 40))[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_14 $$ ImmutableOpenMap<String, Long> shardSizes = shardSizesBuilder.build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_38 $$ logShardStates(clusterState)[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_16 $$ AllocationDeciders deciders = new AllocationDeciders(Settings.EMPTY, new HashSet(Arrays.asList(new SameShardAllocationDecider(Settings.EMPTY), new DiskThresholdDecider(diskSettings))))[ CD ]
Line_4 $$ ImmutableOpenMap.Builder<String, DiskUsage> usagesBuilder = ImmutableOpenMap.builder()-->Line_7 $$ usagesBuilder.put("node3", new DiskUsage("node3", "n3", "/dev/null", 100, 40))[ FD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_13 $$ shardSizesBuilder.put("[test2][0][r]", 1L)[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_30 $$ clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().put(newNode("node1")).put(newNode("node2"))).build()[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_33 $$ logShardStates(clusterState)[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_39 $$ assertThat(clusterState.getRoutingNodes().shardsWithState(ShardRoutingState.STARTED).size(), equalTo(4))[ CD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_4 $$ ImmutableOpenMap.Builder<String, DiskUsage> usagesBuilder = ImmutableOpenMap.builder()[ CD ]
Line_9 $$ ImmutableOpenMap.Builder<String, Long> shardSizesBuilder = ImmutableOpenMap.builder()-->Line_14 $$ ImmutableOpenMap<String, Long> shardSizes = shardSizesBuilder.build()[ FD ]
Line_2 $$ public void testShardRelocationsTakenIntoAccount() -->Line_44 $$ routingTable = strategy.reroute(clusterState, cmds).routingTable()[ CD ]
Line_9 $$ ImmutableOpenMap.Builder<String, Long> shardSizesBuilder = ImmutableOpenMap.builder()-->Line_12 $$ shardSizesBuilder.put("[test2][0][p]", 1L)[ FD ]
Line_9 $$ ImmutableOpenMap.Builder<String, Long> shardSizesBuilder = ImmutableOpenMap.builder()-->Line_11 $$ shardSizesBuilder.put("[test][0][r]", 14L)[ FD ]
