Line_6 $$ ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()-->Line_38 $$ healthResponse = client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()[ FD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_3 $$ Settings clusterSettings = Settings.builder().put(DestructiveOperations.REQUIRES_NAME_SETTING.getKey(), true).build()[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_38 $$ healthResponse = client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()[ CD ]
Line_38 $$ healthResponse = client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()-->Line_39 $$ assertThat(healthResponse.isTimedOut(), equalTo(false))[ FD ]
Line_33 $$ CloseIndexResponse closeIndexResponse = client().admin().indices().prepareClose("test3", "test2").execute().actionGet()-->Line_34 $$ assertThat(closeIndexResponse.isAcknowledged(), equalTo(true))[ FD ]
Line_36 $$ Client client = client()-->Line_38 $$ healthResponse = client.admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()[ FD ]
Line_3 $$ Settings clusterSettings = Settings.builder().put(DestructiveOperations.REQUIRES_NAME_SETTING.getKey(), true).build()-->Line_4 $$ assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(clusterSettings))[ FD ]
Line_6 $$ ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()-->Line_39 $$ assertThat(healthResponse.isTimedOut(), equalTo(false))[ FD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_39 $$ assertThat(healthResponse.isTimedOut(), equalTo(false))[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_6 $$ ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_35 $$ assertIndexIsClosed("test2", "test3")[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_37 $$ createIndex("test_no_close")[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_33 $$ CloseIndexResponse closeIndexResponse = client().admin().indices().prepareClose("test3", "test2").execute().actionGet()[ CD ]
Line_36 $$ Client client = client()-->Line_42 $$ client.admin().indices().prepareClose("test_no_close").execute().actionGet()[ FD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_4 $$ assertAcked(client().admin().cluster().prepareUpdateSettings().setTransientSettings(clusterSettings))[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_7 $$ assertThat(healthResponse.isTimedOut(), equalTo(false))[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_40 $$ client().admin().cluster().prepareUpdateSettings().setTransientSettings(Settings.builder().put(TransportCloseIndexAction.CLUSTER_INDICES_CLOSE_ENABLE_SETTING.getKey(), false)).get()[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_5 $$ createIndex("test1", "test2", "test3")[ CD ]
Line_6 $$ ClusterHealthResponse healthResponse = client().admin().cluster().prepareHealth().setWaitForGreenStatus().execute().actionGet()-->Line_7 $$ assertThat(healthResponse.isTimedOut(), equalTo(false))[ FD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_34 $$ assertThat(closeIndexResponse.isAcknowledged(), equalTo(true))[ CD ]
Line_2 $$ public void testCloseAllRequiresName() -->Line_36 $$ Client client = client()[ CD ]
