Line_18 $$ if (file != null) -->Line_27 $$ out.println(" Number of racks:\t\t" + networktopology.getNumOfRacks())[ CD ]
Line_18 $$ if (file != null) -->Line_25 $$ out.println(res)[ CD ]
Line_18 $$ if (file != null) -->Line_38 $$ out.print("\n\nPath '" + path + "' " + NONEXISTENT_STATUS)[ CD ]
Line_41 $$ String errMsg = "Fsck on path '" + path + "' " + FAILURE_STATUS-->Line_42 $$ LOG.warn(errMsg, e)[ FD ]
Line_32 $$ if (res.isHealthy()) -->Line_33 $$ out.print("\n\nThe filesystem under path '" + path + "' " + HEALTHY_STATUS)[ CD ]
Line_18 $$ if (file != null) -->Line_23 $$ Result res = new Result(conf)[ CD ]
Line_10 $$ SnapshottableDirectoryStatus[] snapshotDirs = namenode.getRpcServer().getSnapshottableDirListing()-->Line_11 $$ if (snapshotDirs != null) [ FD ]
Line_19 $$ if (showCorruptFileBlocks) -->Line_21 $$ return[ CD ]
Line_23 $$ Result res = new Result(conf)-->Line_25 $$ out.println(res)[ FD ]
Line_23 $$ Result res = new Result(conf)-->Line_24 $$ check(path, file, res)[ FD ]
Line_12 $$ for (SnapshottableDirectoryStatus dir : snapshotDirs) -->Line_13 $$ snapshottableDirs.add(dir.getFullPath().toString())[ FD ]
Line_9 $$ if (snapshottableDirs != null) -->Line_10 $$ SnapshottableDirectoryStatus[] snapshotDirs = namenode.getRpcServer().getSnapshottableDirListing()[ CD ]
Line_5 $$ String msg = "FSCK started by " + UserGroupInformation.getCurrentUser() + " from " + remoteAddress + " for path " + path + " at " + new Date()-->Line_6 $$ LOG.info(msg)[ FD ]
Line_18 $$ if (file != null) -->Line_24 $$ check(path, file, res)[ CD ]
Line_19 $$ if (showCorruptFileBlocks) -->Line_20 $$ listCorruptFileBlocks()[ CD ]
Line_18 $$ if (file != null) -->Line_28 $$ out.println("FSCK ended at " + new Date() + " in " + (Time.now() - startTime + " milliseconds"))[ CD ]
Line_18 $$ if (file != null) -->Line_32 $$ if (res.isHealthy()) [ CD ]
Line_18 $$ if (file != null) -->Line_26 $$ out.println(" Number of data-nodes:\t\t" + totalDatanodes)[ CD ]
Line_9 $$ if (snapshottableDirs != null) -->Line_11 $$ if (snapshotDirs != null) [ CD ]
Line_18 $$ if (file != null) -->Line_29 $$ if (internalError) [ CD ]
Line_17 $$ final HdfsFileStatus file = namenode.getRpcServer().getFileInfo(path)-->Line_24 $$ check(path, file, res)[ FD ]
Line_23 $$ Result res = new Result(conf)-->Line_32 $$ if (res.isHealthy()) [ FD ]
Line_32 $$ if (res.isHealthy()) -->Line_35 $$ out.print("\n\nThe filesystem under path '" + path + "' " + CORRUPT_STATUS)[ CD ]
Line_18 $$ if (file != null) -->Line_19 $$ if (showCorruptFileBlocks) [ CD ]
Line_5 $$ String msg = "FSCK started by " + UserGroupInformation.getCurrentUser() + " from " + remoteAddress + " for path " + path + " at " + new Date()-->Line_7 $$ out.println(msg)[ FD ]
Line_17 $$ final HdfsFileStatus file = namenode.getRpcServer().getFileInfo(path)-->Line_18 $$ if (file != null) [ FD ]
Line_2 $$ public void fsck() -->Line_3 $$ final long startTime = Time.now()[ CD ]
