Line_29 $$ if (startedEnd != null && !startedEnd.isEmpty()) -->Line_31 $$ sEnd = Long.parseLong(startedEnd)[ CD ]
Line_120 $$ if (finalStatusQuery != null && !finalStatusQuery.isEmpty()) -->Line_121 $$ FinalApplicationStatus.valueOf(finalStatusQuery)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_24 $$ sBegin = Long.parseLong(startedBegin)[ FD ]
Line_22 $$ if (startedBegin != null && !startedBegin.isEmpty()) -->Line_25 $$ if (sBegin < 0) [ CD ]
Line_31 $$ sEnd = Long.parseLong(startedEnd)-->Line_73 $$ request.setStartRange(sBegin, sEnd)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_22 $$ if (startedBegin != null && !startedBegin.isEmpty()) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_126 $$ AppInfo app = new AppInfo(rmapp, hasAccess(rmapp, hsr), WebAppUtils.getHttpSchemePrefix(conf))[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_53 $$ if (fBegin > fEnd) [ CD ]
Line_17 $$ countNum = Long.parseLong(count)-->Line_18 $$ if (countNum <= 0) [ FD ]
Line_39 $$ if (finishBegin != null && !finishBegin.isEmpty()) -->Line_41 $$ fBegin = Long.parseLong(finishBegin)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_67 $$ Set<String> appStates = parseQueries(statesQuery, true)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_65 $$ statesQuery.add(stateQuery)[ FD ]
Line_105 $$ Set<String> users = new HashSet<String>(1)-->Line_106 $$ users.add(userQuery)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()[ CD ]
Line_68 $$ if (!appStates.isEmpty()) -->Line_69 $$ checkAppStates = true[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_10 $$ long sBegin = 0[ CD ]
Line_13 $$ long fEnd = Long.MAX_VALUE-->Line_48 $$ fEnd = Long.parseLong(finishEnd)[ FD ]
Line_23 $$ checkStart = true-->Line_30 $$ checkStart = true[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_60 $$ Set<String> appTags = parseQueries(applicationTags, false)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_116 $$ final ConcurrentMap<ApplicationId, RMApp> apps = rm.getRMContext().getRMApps()[ CD ]
Line_92 $$ if (rs instanceof CapacityScheduler) -->Line_93 $$ CapacityScheduler cs = (CapacityScheduler) rs[ CD ]
Line_9 $$ long countNum = 0-->Line_17 $$ countNum = Long.parseLong(count)[ FD ]
Line_11 $$ long sEnd = Long.MAX_VALUE-->Line_31 $$ sEnd = Long.parseLong(startedEnd)[ FD ]
Line_22 $$ if (startedBegin != null && !startedBegin.isEmpty()) -->Line_23 $$ checkStart = true[ CD ]
Line_41 $$ fBegin = Long.parseLong(finishBegin)-->Line_53 $$ if (fBegin > fEnd) [ FD ]
Line_12 $$ long fBegin = 0-->Line_41 $$ fBegin = Long.parseLong(finishBegin)[ FD ]
Line_67 $$ Set<String> appStates = parseQueries(statesQuery, true)-->Line_68 $$ if (!appStates.isEmpty()) [ FD ]
Line_41 $$ fBegin = Long.parseLong(finishBegin)-->Line_42 $$ if (fBegin < 0) [ FD ]
Line_31 $$ sEnd = Long.parseLong(startedEnd)-->Line_32 $$ if (sEnd < 0) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_90 $$ if (queueQuery != null && !queueQuery.isEmpty()) [ FD ]
Line_93 $$ CapacityScheduler cs = (CapacityScheduler) rs-->Line_95 $$ cs.getQueueInfo(queueQuery, false, false)[ FD ]
Line_48 $$ fEnd = Long.parseLong(finishEnd)-->Line_53 $$ if (fBegin > fEnd) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_129 $$ return allApps[ CD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_85 $$ request.setApplicationTags(appTags)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_15 $$ if (count != null && !count.isEmpty()) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_57 $$ if (!appTypes.isEmpty()) [ CD ]
Line_104 $$ if (userQuery != null && !userQuery.isEmpty()) -->Line_106 $$ users.add(userQuery)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_48 $$ fEnd = Long.parseLong(finishEnd)[ FD ]
Line_119 $$ RMApp rmapp = apps.get(report.getApplicationId())-->Line_122 $$ if (!rmapp.getFinalApplicationStatus().toString().equalsIgnoreCase(finalStatusQuery)) [ FD ]
Line_119 $$ RMApp rmapp = apps.get(report.getApplicationId())-->Line_126 $$ AppInfo app = new AppInfo(rmapp, hasAccess(rmapp, hsr), WebAppUtils.getHttpSchemePrefix(conf))[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_11 $$ long sEnd = Long.MAX_VALUE[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_64 $$ if (stateQuery != null && !stateQuery.isEmpty()) [ CD ]
Line_15 $$ if (count != null && !count.isEmpty()) -->Line_17 $$ countNum = Long.parseLong(count)[ CD ]
Line_24 $$ sBegin = Long.parseLong(startedBegin)-->Line_73 $$ request.setStartRange(sBegin, sEnd)[ FD ]
Line_24 $$ sBegin = Long.parseLong(startedBegin)-->Line_36 $$ if (sBegin > sEnd) [ FD ]
Line_126 $$ AppInfo app = new AppInfo(rmapp, hasAccess(rmapp, hsr), WebAppUtils.getHttpSchemePrefix(conf))-->Line_127 $$ allApps.add(app)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_78 $$ if (checkCount) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_106 $$ users.add(userQuery)[ FD ]
Line_48 $$ fEnd = Long.parseLong(finishEnd)-->Line_49 $$ if (fEnd < 0) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_84 $$ if (checkAppTags) [ CD ]
Line_24 $$ sBegin = Long.parseLong(startedBegin)-->Line_25 $$ if (sBegin < 0) [ FD ]
Line_90 $$ if (queueQuery != null && !queueQuery.isEmpty()) -->Line_101 $$ queues.add(queueQuery)[ CD ]
Line_7 $$ boolean checkAppStates = false-->Line_69 $$ checkAppStates = true[ FD ]
Line_91 $$ ResourceScheduler rs = rm.getResourceScheduler()-->Line_92 $$ if (rs instanceof CapacityScheduler) [ FD ]
Line_15 $$ if (count != null && !count.isEmpty()) -->Line_18 $$ if (countNum <= 0) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_39 $$ if (finishBegin != null && !finishBegin.isEmpty()) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_109 $$ List<ApplicationReport> appReports = null[ CD ]
Line_12 $$ long fBegin = 0-->Line_42 $$ if (fBegin < 0) [ FD ]
Line_46 $$ if (finishEnd != null && !finishEnd.isEmpty()) -->Line_47 $$ checkEnd = true[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_101 $$ queues.add(queueQuery)[ FD ]
Line_29 $$ if (startedEnd != null && !startedEnd.isEmpty()) -->Line_30 $$ checkStart = true[ CD ]
Line_39 $$ if (finishBegin != null && !finishBegin.isEmpty()) -->Line_40 $$ checkEnd = true[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_104 $$ if (userQuery != null && !userQuery.isEmpty()) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_75 $$ if (checkEnd) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_56 $$ Set<String> appTypes = parseQueries(applicationTypes, false)[ CD ]
Line_12 $$ long fBegin = 0-->Line_76 $$ request.setFinishRange(fBegin, fEnd)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_31 $$ sEnd = Long.parseLong(startedEnd)[ FD ]
Line_11 $$ long sEnd = Long.MAX_VALUE-->Line_36 $$ if (sBegin > sEnd) [ FD ]
Line_57 $$ if (!appTypes.isEmpty()) -->Line_58 $$ checkAppTypes = true[ CD ]
Line_3 $$ boolean checkCount = false-->Line_16 $$ checkCount = true[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_67 $$ Set<String> appStates = parseQueries(statesQuery, true)[ FD ]
Line_31 $$ sEnd = Long.parseLong(startedEnd)-->Line_36 $$ if (sBegin > sEnd) [ FD ]
Line_6 $$ boolean checkAppTypes = false-->Line_58 $$ checkAppTypes = true[ FD ]
Line_5 $$ boolean checkEnd = false-->Line_47 $$ checkEnd = true[ FD ]
Line_104 $$ if (userQuery != null && !userQuery.isEmpty()) -->Line_107 $$ request.setUsers(users)[ CD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_107 $$ request.setUsers(users)[ FD ]
Line_4 $$ boolean checkStart = false-->Line_30 $$ checkStart = true[ FD ]
Line_81 $$ if (checkAppTypes) -->Line_82 $$ request.setApplicationTypes(appTypes)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_12 $$ long fBegin = 0[ CD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_73 $$ request.setStartRange(sBegin, sEnd)[ FD ]
Line_87 $$ if (checkAppStates) -->Line_88 $$ request.setApplicationStates(appStates)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_3 $$ boolean checkCount = false[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_39 $$ if (finishBegin != null && !finishBegin.isEmpty()) [ FD ]
Line_90 $$ if (queueQuery != null && !queueQuery.isEmpty()) -->Line_100 $$ Set<String> queues = new HashSet<String>(1)[ CD ]
Line_109 $$ List<ApplicationReport> appReports = null-->Line_111 $$ appReports = rm.getClientRMService().getApplications(request, false).getApplicationList()[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_95 $$ cs.getQueueInfo(queueQuery, false, false)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_6 $$ boolean checkAppTypes = false[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_68 $$ if (!appStates.isEmpty()) [ CD ]
Line_17 $$ countNum = Long.parseLong(count)-->Line_79 $$ request.setLimit(countNum)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_46 $$ if (finishEnd != null && !finishEnd.isEmpty()) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_81 $$ if (checkAppTypes) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_29 $$ if (startedEnd != null && !startedEnd.isEmpty()) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_8 $$ boolean checkAppTags = false[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_60 $$ Set<String> appTags = parseQueries(applicationTags, false)[ CD ]
Line_10 $$ long sBegin = 0-->Line_73 $$ request.setStartRange(sBegin, sEnd)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_7 $$ boolean checkAppStates = false[ CD ]
Line_116 $$ final ConcurrentMap<ApplicationId, RMApp> apps = rm.getRMContext().getRMApps()-->Line_119 $$ RMApp rmapp = apps.get(report.getApplicationId())[ FD ]
Line_100 $$ Set<String> queues = new HashSet<String>(1)-->Line_102 $$ request.setQueues(queues)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_4 $$ boolean checkStart = false[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_9 $$ long countNum = 0[ CD ]
Line_84 $$ if (checkAppTags) -->Line_85 $$ request.setApplicationTags(appTags)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_87 $$ if (checkAppStates) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_41 $$ fBegin = Long.parseLong(finishBegin)[ FD ]
Line_56 $$ Set<String> appTypes = parseQueries(applicationTypes, false)-->Line_57 $$ if (!appTypes.isEmpty()) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_17 $$ countNum = Long.parseLong(count)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_121 $$ FinalApplicationStatus.valueOf(finalStatusQuery)[ FD ]
Line_10 $$ long sBegin = 0-->Line_25 $$ if (sBegin < 0) [ FD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_82 $$ request.setApplicationTypes(appTypes)[ FD ]
Line_56 $$ Set<String> appTypes = parseQueries(applicationTypes, false)-->Line_82 $$ request.setApplicationTypes(appTypes)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_120 $$ if (finalStatusQuery != null && !finalStatusQuery.isEmpty()) [ FD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_111 $$ appReports = rm.getClientRMService().getApplications(request, false).getApplicationList()[ FD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_79 $$ request.setLimit(countNum)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_14 $$ init()[ CD ]
Line_120 $$ if (finalStatusQuery != null && !finalStatusQuery.isEmpty()) -->Line_122 $$ if (!rmapp.getFinalApplicationStatus().toString().equalsIgnoreCase(finalStatusQuery)) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_64 $$ if (stateQuery != null && !stateQuery.isEmpty()) [ FD ]
Line_46 $$ if (finishEnd != null && !finishEnd.isEmpty()) -->Line_48 $$ fEnd = Long.parseLong(finishEnd)[ CD ]
Line_39 $$ if (finishBegin != null && !finishBegin.isEmpty()) -->Line_42 $$ if (fBegin < 0) [ CD ]
Line_29 $$ if (startedEnd != null && !startedEnd.isEmpty()) -->Line_32 $$ if (sEnd < 0) [ CD ]
Line_60 $$ Set<String> appTags = parseQueries(applicationTags, false)-->Line_85 $$ request.setApplicationTags(appTags)[ FD ]
Line_9 $$ long countNum = 0-->Line_18 $$ if (countNum <= 0) [ FD ]
Line_10 $$ long sBegin = 0-->Line_24 $$ sBegin = Long.parseLong(startedBegin)[ FD ]
Line_61 $$ if (!appTags.isEmpty()) -->Line_62 $$ checkAppTags = true[ CD ]
Line_90 $$ if (queueQuery != null && !queueQuery.isEmpty()) -->Line_92 $$ if (rs instanceof CapacityScheduler) [ CD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_102 $$ request.setQueues(queues)[ FD ]
Line_15 $$ if (count != null && !count.isEmpty()) -->Line_16 $$ checkCount = true[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_22 $$ if (startedBegin != null && !startedBegin.isEmpty()) [ FD ]
Line_48 $$ fEnd = Long.parseLong(finishEnd)-->Line_76 $$ request.setFinishRange(fBegin, fEnd)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_46 $$ if (finishEnd != null && !finishEnd.isEmpty()) [ CD ]
Line_13 $$ long fEnd = Long.MAX_VALUE-->Line_49 $$ if (fEnd < 0) [ FD ]
Line_72 $$ if (checkStart) -->Line_73 $$ request.setStartRange(sBegin, sEnd)[ CD ]
Line_118 $$ for (ApplicationReport report : appReports) -->Line_119 $$ RMApp rmapp = apps.get(report.getApplicationId())[ FD ]
Line_4 $$ boolean checkStart = false-->Line_23 $$ checkStart = true[ FD ]
Line_75 $$ if (checkEnd) -->Line_76 $$ request.setFinishRange(fBegin, fEnd)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_29 $$ if (startedEnd != null && !startedEnd.isEmpty()) [ FD ]
Line_90 $$ if (queueQuery != null && !queueQuery.isEmpty()) -->Line_91 $$ ResourceScheduler rs = rm.getResourceScheduler()[ CD ]
Line_12 $$ long fBegin = 0-->Line_53 $$ if (fBegin > fEnd) [ FD ]
Line_13 $$ long fEnd = Long.MAX_VALUE-->Line_76 $$ request.setFinishRange(fBegin, fEnd)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_13 $$ long fEnd = Long.MAX_VALUE[ CD ]
Line_105 $$ Set<String> users = new HashSet<String>(1)-->Line_107 $$ request.setUsers(users)[ FD ]
Line_64 $$ if (stateQuery != null && !stateQuery.isEmpty()) -->Line_65 $$ statesQuery.add(stateQuery)[ CD ]
Line_41 $$ fBegin = Long.parseLong(finishBegin)-->Line_76 $$ request.setFinishRange(fBegin, fEnd)[ FD ]
Line_100 $$ Set<String> queues = new HashSet<String>(1)-->Line_101 $$ queues.add(queueQuery)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_15 $$ if (count != null && !count.isEmpty()) [ FD ]
Line_90 $$ if (queueQuery != null && !queueQuery.isEmpty()) -->Line_102 $$ request.setQueues(queues)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_90 $$ if (queueQuery != null && !queueQuery.isEmpty()) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_36 $$ if (sBegin > sEnd) [ CD ]
Line_9 $$ long countNum = 0-->Line_79 $$ request.setLimit(countNum)[ FD ]
Line_22 $$ if (startedBegin != null && !startedBegin.isEmpty()) -->Line_24 $$ sBegin = Long.parseLong(startedBegin)[ CD ]
Line_46 $$ if (finishEnd != null && !finishEnd.isEmpty()) -->Line_49 $$ if (fEnd < 0) [ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_72 $$ if (checkStart) [ CD ]
Line_78 $$ if (checkCount) -->Line_79 $$ request.setLimit(countNum)[ CD ]
Line_11 $$ long sEnd = Long.MAX_VALUE-->Line_32 $$ if (sEnd < 0) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_56 $$ Set<String> appTypes = parseQueries(applicationTypes, false)[ FD ]
Line_60 $$ Set<String> appTags = parseQueries(applicationTags, false)-->Line_61 $$ if (!appTags.isEmpty()) [ FD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_76 $$ request.setFinishRange(fBegin, fEnd)[ FD ]
Line_117 $$ AppsInfo allApps = new AppsInfo()-->Line_127 $$ allApps.add(app)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_5 $$ boolean checkEnd = false[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_117 $$ AppsInfo allApps = new AppsInfo()[ CD ]
Line_67 $$ Set<String> appStates = parseQueries(statesQuery, true)-->Line_88 $$ request.setApplicationStates(appStates)[ FD ]
Line_5 $$ boolean checkEnd = false-->Line_40 $$ checkEnd = true[ FD ]
Line_8 $$ boolean checkAppTags = false-->Line_62 $$ checkAppTags = true[ FD ]
Line_11 $$ long sEnd = Long.MAX_VALUE-->Line_73 $$ request.setStartRange(sBegin, sEnd)[ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_122 $$ if (!rmapp.getFinalApplicationStatus().toString().equalsIgnoreCase(finalStatusQuery)) [ FD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_104 $$ if (userQuery != null && !userQuery.isEmpty()) [ CD ]
Line_10 $$ long sBegin = 0-->Line_36 $$ if (sBegin > sEnd) [ FD ]
Line_71 $$ GetApplicationsRequest request = GetApplicationsRequest.newInstance()-->Line_88 $$ request.setApplicationStates(appStates)[ FD ]
Line_13 $$ long fEnd = Long.MAX_VALUE-->Line_53 $$ if (fBegin > fEnd) [ FD ]
Line_40 $$ checkEnd = true-->Line_47 $$ checkEnd = true[ FD ]
Line_104 $$ if (userQuery != null && !userQuery.isEmpty()) -->Line_105 $$ Set<String> users = new HashSet<String>(1)[ CD ]
Line_2 $$ public AppsInfo getApps(@Context HttpServletRequest hsr, @QueryParam("state") String stateQuery, @QueryParam("states") Set<String> statesQuery, @QueryParam("finalStatus") String finalStatusQuery, @QueryParam("user") String userQuery, @QueryParam("queue") String queueQuery, @QueryParam("limit") String count, @QueryParam("startedTimeBegin") String startedBegin, @QueryParam("startedTimeEnd") String startedEnd, @QueryParam("finishedTimeBegin") String finishBegin, @QueryParam("finishedTimeEnd") String finishEnd, @QueryParam("applicationTypes") Set<String> applicationTypes, @QueryParam("applicationTags") Set<String> applicationTags) -->Line_61 $$ if (!appTags.isEmpty()) [ CD ]
