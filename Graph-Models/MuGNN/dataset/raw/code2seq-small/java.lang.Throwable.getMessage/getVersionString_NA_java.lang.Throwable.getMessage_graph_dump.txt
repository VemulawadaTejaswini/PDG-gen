Line_3 $$ if (isRemote(sdk)) -->Line_7 $$ if (StringUtil.isEmpty(versionString)) [ CD ]
Line_3 $$ if (isRemote(sdk)) -->Line_6 $$ String versionString = data.getVersionString()[ CD ]
Line_11 $$ versionString = remoteInterpreterManager.getInterpreterVersion(null, data)-->Line_14 $$ versionString = "undefined"[ FD ]
Line_2 $$ public String getVersionString(@NotNull Sdk sdk) -->Line_3 $$ if (isRemote(sdk)) [ FD ]
Line_14 $$ versionString = "undefined"-->Line_17 $$ data.setVersionString(versionString)[ FD ]
Line_6 $$ String versionString = data.getVersionString()-->Line_7 $$ if (StringUtil.isEmpty(versionString)) [ FD ]
Line_6 $$ String versionString = data.getVersionString()-->Line_11 $$ versionString = remoteInterpreterManager.getInterpreterVersion(null, data)[ FD ]
Line_7 $$ if (StringUtil.isEmpty(versionString)) -->Line_9 $$ if (remoteInterpreterManager != null) [ CD ]
Line_7 $$ if (StringUtil.isEmpty(versionString)) -->Line_17 $$ data.setVersionString(versionString)[ CD ]
Line_3 $$ if (isRemote(sdk)) -->Line_19 $$ return versionString[ CD ]
Line_8 $$ final PythonRemoteInterpreterManager remoteInterpreterManager = PythonRemoteInterpreterManager.getInstance()-->Line_11 $$ versionString = remoteInterpreterManager.getInterpreterVersion(null, data)[ FD ]
Line_6 $$ String versionString = data.getVersionString()-->Line_14 $$ versionString = "undefined"[ FD ]
Line_2 $$ public String getVersionString(@NotNull Sdk sdk) -->Line_4 $$ final PyRemoteSdkAdditionalDataBase data = (PyRemoteSdkAdditionalDataBase) sdk.getSdkAdditionalData()[ FD ]
Line_3 $$ if (isRemote(sdk)) -->Line_21 $$ return getVersionString(sdk.getHomePath())[ CD ]
Line_11 $$ versionString = remoteInterpreterManager.getInterpreterVersion(null, data)-->Line_17 $$ data.setVersionString(versionString)[ FD ]
Line_8 $$ final PythonRemoteInterpreterManager remoteInterpreterManager = PythonRemoteInterpreterManager.getInstance()-->Line_9 $$ if (remoteInterpreterManager != null) [ FD ]
Line_4 $$ final PyRemoteSdkAdditionalDataBase data = (PyRemoteSdkAdditionalDataBase) sdk.getSdkAdditionalData()-->Line_17 $$ data.setVersionString(versionString)[ FD ]
Line_4 $$ final PyRemoteSdkAdditionalDataBase data = (PyRemoteSdkAdditionalDataBase) sdk.getSdkAdditionalData()-->Line_11 $$ versionString = remoteInterpreterManager.getInterpreterVersion(null, data)[ FD ]
Line_6 $$ String versionString = data.getVersionString()-->Line_17 $$ data.setVersionString(versionString)[ FD ]
Line_3 $$ if (isRemote(sdk)) -->Line_4 $$ final PyRemoteSdkAdditionalDataBase data = (PyRemoteSdkAdditionalDataBase) sdk.getSdkAdditionalData()[ CD ]
Line_7 $$ if (StringUtil.isEmpty(versionString)) -->Line_8 $$ final PythonRemoteInterpreterManager remoteInterpreterManager = PythonRemoteInterpreterManager.getInstance()[ CD ]
Line_2 $$ public String getVersionString(@NotNull Sdk sdk) -->Line_3 $$ if (isRemote(sdk)) [ CD ]
Line_2 $$ public String getVersionString(@NotNull Sdk sdk) -->Line_21 $$ return getVersionString(sdk.getHomePath())[ FD ]
Line_4 $$ final PyRemoteSdkAdditionalDataBase data = (PyRemoteSdkAdditionalDataBase) sdk.getSdkAdditionalData()-->Line_6 $$ String versionString = data.getVersionString()[ FD ]
