Line_26 $$ doAs("client", new PrivilegedExceptionAction<Void>() -->Line_28 $$ KeyProvider kp = new KMSClientProvider(uri, conf)[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_16 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ FD ]
Line_21 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_29 $$ KeyProviderDelegationTokenExtension kpdte = KeyProviderDelegationTokenExtension.createKeyProviderDelegationTokenExtension(kp)[ FD ]
Line_28 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_37 $$ kp.createKey("kA", new KeyProvider.Options(conf))[ FD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_18 $$ final Credentials credentials = new Credentials()[ CD ]
Line_28 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_29 $$ KeyProviderDelegationTokenExtension kpdte = KeyProviderDelegationTokenExtension.createKeyProviderDelegationTokenExtension(kp)[ FD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_34 $$ nonKerberosUgi.addCredentials(credentials)[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_11 $$ conf.set("hadoop.kms.authentication.kerberos.name.rules", "DEFAULT")[ FD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_8 $$ conf.set("hadoop.kms.authentication.type", "kerberos")[ FD ]
Line_43 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_44 $$ kp.createKey("kD", new KeyProvider.Options(conf))[ FD ]
Line_41 $$ nonKerberosUgi.doAs(new PrivilegedExceptionAction<Void>() -->Line_44 $$ kp.createKey("kD", new KeyProvider.Options(conf))[ CD ]
Line_18 $$ final Credentials credentials = new Credentials()-->Line_30 $$ kpdte.addDelegationTokens("foo", credentials)[ FD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_11 $$ conf.set("hadoop.kms.authentication.kerberos.name.rules", "DEFAULT")[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_16 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ FD ]
Line_21 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_37 $$ kp.createKey("kA", new KeyProvider.Options(conf))[ FD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_4 $$ conf.set("hadoop.security.authentication", "kerberos")[ CD ]
Line_41 $$ nonKerberosUgi.doAs(new PrivilegedExceptionAction<Void>() -->Line_43 $$ KeyProvider kp = new KMSClientProvider(uri, conf)[ CD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_8 $$ conf.set("hadoop.kms.authentication.type", "kerberos")[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_9 $$ conf.set("hadoop.kms.authentication.kerberos.keytab", keytab.getAbsolutePath())[ FD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_41 $$ nonKerberosUgi.doAs(new PrivilegedExceptionAction<Void>() [ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_12 $$ writeConf(testDir, conf)[ FD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_10 $$ conf.set("hadoop.kms.authentication.kerberos.principal", "HTTP/localhost")[ CD ]
Line_21 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_44 $$ kp.createKey("kD", new KeyProvider.Options(conf))[ FD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_13 $$ runServer(null, null, testDir, new KMSCallable() [ CD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_6 $$ final File testDir = getTestDir()[ CD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_26 $$ doAs("client", new PrivilegedExceptionAction<Void>() [ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_9 $$ conf.set("hadoop.kms.authentication.kerberos.keytab", keytab.getAbsolutePath())[ FD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_5 $$ UserGroupInformation.setConfiguration(conf)[ CD ]
Line_15 $$ final Configuration conf = new Configuration()-->Line_16 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_5 $$ UserGroupInformation.setConfiguration(conf)[ FD ]
Line_19 $$ final UserGroupInformation nonKerberosUgi = UserGroupInformation.getCurrentUser()-->Line_41 $$ nonKerberosUgi.doAs(new PrivilegedExceptionAction<Void>() [ FD ]
Line_26 $$ doAs("client", new PrivilegedExceptionAction<Void>() -->Line_31 $$ return null[ CD ]
Line_21 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_22 $$ kp.createKey("kA", new KeyProvider.Options(conf))[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_8 $$ conf.set("hadoop.kms.authentication.type", "kerberos")[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_11 $$ conf.set("hadoop.kms.authentication.kerberos.name.rules", "DEFAULT")[ FD ]
Line_6 $$ final File testDir = getTestDir()-->Line_12 $$ writeConf(testDir, conf)[ FD ]
Line_6 $$ final File testDir = getTestDir()-->Line_7 $$ conf = createBaseKMSConf(testDir)[ FD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_15 $$ final Configuration conf = new Configuration()[ CD ]
Line_26 $$ doAs("client", new PrivilegedExceptionAction<Void>() -->Line_29 $$ KeyProviderDelegationTokenExtension kpdte = KeyProviderDelegationTokenExtension.createKeyProviderDelegationTokenExtension(kp)[ CD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_9 $$ conf.set("hadoop.kms.authentication.kerberos.keytab", keytab.getAbsolutePath())[ CD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_48 $$ return null[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_10 $$ conf.set("hadoop.kms.authentication.kerberos.principal", "HTTP/localhost")[ FD ]
Line_26 $$ doAs("client", new PrivilegedExceptionAction<Void>() -->Line_30 $$ kpdte.addDelegationTokens("foo", credentials)[ CD ]
Line_29 $$ KeyProviderDelegationTokenExtension kpdte = KeyProviderDelegationTokenExtension.createKeyProviderDelegationTokenExtension(kp)-->Line_30 $$ kpdte.addDelegationTokens("foo", credentials)[ FD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_16 $$ conf.setInt(KeyProvider.DEFAULT_BITLENGTH_NAME, 64)[ CD ]
Line_18 $$ final Credentials credentials = new Credentials()-->Line_34 $$ nonKerberosUgi.addCredentials(credentials)[ FD ]
Line_41 $$ nonKerberosUgi.doAs(new PrivilegedExceptionAction<Void>() -->Line_45 $$ return null[ CD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_19 $$ final UserGroupInformation nonKerberosUgi = UserGroupInformation.getCurrentUser()[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_4 $$ conf.set("hadoop.security.authentication", "kerberos")[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_7 $$ conf = createBaseKMSConf(testDir)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_10 $$ conf.set("hadoop.kms.authentication.kerberos.principal", "HTTP/localhost")[ FD ]
Line_6 $$ final File testDir = getTestDir()-->Line_13 $$ runServer(null, null, testDir, new KMSCallable() [ FD ]
Line_19 $$ final UserGroupInformation nonKerberosUgi = UserGroupInformation.getCurrentUser()-->Line_34 $$ nonKerberosUgi.addCredentials(credentials)[ FD ]
Line_13 $$ runServer(null, null, testDir, new KMSCallable() -->Line_17 $$ final URI uri = createKMSUri(getKMSUrl())[ CD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_7 $$ conf = createBaseKMSConf(testDir)[ CD ]
Line_28 $$ KeyProvider kp = new KMSClientProvider(uri, conf)-->Line_44 $$ kp.createKey("kD", new KeyProvider.Options(conf))[ FD ]
Line_2 $$ public void testDelegationTokenAccess() throws Exception -->Line_12 $$ writeConf(testDir, conf)[ CD ]
Line_7 $$ conf = createBaseKMSConf(testDir)-->Line_12 $$ writeConf(testDir, conf)[ FD ]
