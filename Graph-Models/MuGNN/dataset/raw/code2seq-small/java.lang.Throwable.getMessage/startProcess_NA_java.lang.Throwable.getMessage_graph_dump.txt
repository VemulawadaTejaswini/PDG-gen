Line_3 $$ ProgramRunner runner = new DefaultProgramRunner() -->Line_8 $$ return true[ CD ]
Line_2 $$ private void startProcess(Target target, Parameters configuration, @NotNull Pair<Target, Parameters> key) -->Line_11 $$ Executor executor = DefaultRunExecutor.getRunExecutorInstance()[ CD ]
Line_2 $$ private void startProcess(Target target, Parameters configuration, @NotNull Pair<Target, Parameters> key) -->Line_21 $$ processHandler.addProcessListener(getProcessListener(key))[ FD ]
Line_2 $$ private void startProcess(Target target, Parameters configuration, @NotNull Pair<Target, Parameters> key) -->Line_3 $$ ProgramRunner runner = new DefaultProgramRunner() [ CD ]
Line_2 $$ private void startProcess(Target target, Parameters configuration, @NotNull Pair<Target, Parameters> key) -->Line_14 $$ RunProfileState state = getRunProfileState(target, configuration, executor)[ FD ]
Line_2 $$ private void startProcess(Target target, Parameters configuration, @NotNull Pair<Target, Parameters> key) -->Line_22 $$ processHandler.startNotify()[ CD ]
Line_3 $$ ProgramRunner runner = new DefaultProgramRunner() -->Line_15 $$ ExecutionResult result = state.execute(executor, runner)[ FD ]
Line_3 $$ ProgramRunner runner = new DefaultProgramRunner() -->Line_5 $$ return "MyRunner"[ CD ]
Line_2 $$ private void startProcess(Target target, Parameters configuration, @NotNull Pair<Target, Parameters> key) -->Line_18 $$ dropProcessInfo(key, e instanceof ExecutionException ? e.getMessage() : ExceptionUtil.getUserStackTrace(e, LOG), null)[ FD ]
Line_2 $$ private void startProcess(Target target, Parameters configuration, @NotNull Pair<Target, Parameters> key) -->Line_21 $$ processHandler.addProcessListener(getProcessListener(key))[ CD ]
