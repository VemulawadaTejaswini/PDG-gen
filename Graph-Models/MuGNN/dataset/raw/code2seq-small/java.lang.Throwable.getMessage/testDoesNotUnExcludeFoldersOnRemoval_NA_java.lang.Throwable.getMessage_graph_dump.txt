Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_19 $$ importProject()[ CD ]
Line_4 $$ final VirtualFile subDir = createProjectSubDir("target/foo")-->Line_13 $$ subDir.delete(this)[ FD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_6 $$ importProject("<groupId>test</groupId>" + "<artifactId>project</artifactId>" + "<version>1</version>")[ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_4 $$ final VirtualFile subDir = createProjectSubDir("target/foo")[ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_9 $$ assertResources("project", "src/main/resources")[ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_8 $$ assertSources("project", "src/main/java", "target/generated-sources/baz")[ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_20 $$ assertExcludes("project", "target/foo")[ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_7 $$ assertExcludes("project", "target/foo")[ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_10 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_3 $$ createStdProjectFolders()[ CD ]
Line_2 $$ public void testDoesNotUnExcludeFoldersOnRemoval() throws Exception -->Line_5 $$ createProjectSubDirsWithFile("target/generated-sources/baz")[ CD ]
