Line_6 $$ UserGroupInformation tmpUser = UserGroupInformation.createRemoteUser("guest")-->Line_27 $$ final FileSystem tmpFS = tmpUser.doAs(new PrivilegedAction<FileSystem>() [ FD ]
Line_8 $$ final StubContext stubContext = tmpUser.doAs(new PrivilegedAction<StubContext>() -->Line_43 $$ Assert.assertEquals(stubContext.getWriter().values().size(), 1)[ FD ]
Line_8 $$ final StubContext stubContext = tmpUser.doAs(new PrivilegedAction<StubContext>() -->Line_44 $$ Assert.assertTrue(stubContext.getWriter().values().get(0).toString().startsWith("SKIP"))[ FD ]
Line_7 $$ final CopyMapper copyMapper = new CopyMapper()-->Line_42 $$ copyMapper.map(new Text("/src/file"), new CopyListingFileStatus(tmpFS.getFileStatus(new Path(SOURCE_PATH + "/src/file"))), context)[ FD ]
Line_6 $$ UserGroupInformation tmpUser = UserGroupInformation.createRemoteUser("guest")-->Line_38 $$ tmpUser.doAs(new PrivilegedAction<Integer>() [ FD ]
Line_8 $$ final StubContext stubContext = tmpUser.doAs(new PrivilegedAction<StubContext>() -->Line_45 $$ Assert.assertTrue(stubContext.getWriter().values().get(0).toString().contains(SOURCE_PATH + "/src/file"))[ FD ]
Line_38 $$ tmpUser.doAs(new PrivilegedAction<Integer>() -->Line_49 $$ return null[ CD ]
Line_8 $$ final StubContext stubContext = tmpUser.doAs(new PrivilegedAction<StubContext>() -->Line_18 $$ final Mapper<Text, CopyListingFileStatus, Text, Text>.Context<Text, CopyListingFileStatus, Text, Text> context = stubContext.getContext()[ FD ]
Line_6 $$ UserGroupInformation tmpUser = UserGroupInformation.createRemoteUser("guest")-->Line_8 $$ final StubContext stubContext = tmpUser.doAs(new PrivilegedAction<StubContext>() [ FD ]
Line_7 $$ final CopyMapper copyMapper = new CopyMapper()-->Line_41 $$ copyMapper.setup(context)[ FD ]
