Line_2 $$ private void importScript(NamedReader namedReader, List<Exporter> exporters) throws Exception -->Line_5 $$ if (statements != null) [ CD ]
Line_8 $$ String trimmedSql = statement.trim()-->Line_24 $$ LOG.unsuccessful(trimmedSql)[ FD ]
Line_7 $$ if (statement != null) -->Line_8 $$ String trimmedSql = statement.trim()[ CD ]
Line_8 $$ String trimmedSql = statement.trim()-->Line_12 $$ if (!StringHelper.isEmpty(trimmedSql)) [ FD ]
Line_6 $$ for (String statement : statements) -->Line_7 $$ if (statement != null) [ FD ]
Line_15 $$ if (exporter.acceptsImportScripts()) -->Line_16 $$ exporter.export(trimmedSql)[ CD ]
Line_2 $$ private void importScript(NamedReader namedReader, List<Exporter> exporters) throws Exception -->Line_3 $$ BufferedReader reader = new BufferedReader(namedReader.getReader())[ FD ]
Line_10 $$ trimmedSql = trimmedSql.substring(0, statement.length() - 1)-->Line_24 $$ LOG.unsuccessful(trimmedSql)[ FD ]
Line_7 $$ if (statement != null) -->Line_12 $$ if (!StringHelper.isEmpty(trimmedSql)) [ CD ]
Line_3 $$ BufferedReader reader = new BufferedReader(namedReader.getReader())-->Line_4 $$ String[] statements = importSqlCommandExtractor.extractCommands(reader)[ FD ]
Line_2 $$ private void importScript(NamedReader namedReader, List<Exporter> exporters) throws Exception -->Line_3 $$ BufferedReader reader = new BufferedReader(namedReader.getReader())[ CD ]
Line_10 $$ trimmedSql = trimmedSql.substring(0, statement.length() - 1)-->Line_12 $$ if (!StringHelper.isEmpty(trimmedSql)) [ FD ]
Line_8 $$ String trimmedSql = statement.trim()-->Line_10 $$ trimmedSql = trimmedSql.substring(0, statement.length() - 1)[ FD ]
Line_9 $$ if (trimmedSql.endsWith(";")) -->Line_10 $$ trimmedSql = trimmedSql.substring(0, statement.length() - 1)[ CD ]
Line_8 $$ String trimmedSql = statement.trim()-->Line_16 $$ exporter.export(trimmedSql)[ FD ]
Line_6 $$ for (String statement : statements) -->Line_10 $$ trimmedSql = trimmedSql.substring(0, statement.length() - 1)[ FD ]
Line_6 $$ for (String statement : statements) -->Line_8 $$ String trimmedSql = statement.trim()[ FD ]
Line_7 $$ if (statement != null) -->Line_9 $$ if (trimmedSql.endsWith(";")) [ CD ]
Line_10 $$ trimmedSql = trimmedSql.substring(0, statement.length() - 1)-->Line_16 $$ exporter.export(trimmedSql)[ FD ]
Line_14 $$ for (Exporter exporter : exporters) -->Line_15 $$ if (exporter.acceptsImportScripts()) [ FD ]
Line_8 $$ String trimmedSql = statement.trim()-->Line_9 $$ if (trimmedSql.endsWith(";")) [ FD ]
Line_14 $$ for (Exporter exporter : exporters) -->Line_16 $$ exporter.export(trimmedSql)[ FD ]
Line_2 $$ private void importScript(NamedReader namedReader, List<Exporter> exporters) throws Exception -->Line_21 $$ throw new ImportScriptException("Error during statement execution (file: '" + namedReader.getName() + "'): " + trimmedSql, e)[ FD ]
Line_2 $$ private void importScript(NamedReader namedReader, List<Exporter> exporters) throws Exception -->Line_4 $$ String[] statements = importSqlCommandExtractor.extractCommands(reader)[ CD ]
Line_4 $$ String[] statements = importSqlCommandExtractor.extractCommands(reader)-->Line_5 $$ if (statements != null) [ FD ]
