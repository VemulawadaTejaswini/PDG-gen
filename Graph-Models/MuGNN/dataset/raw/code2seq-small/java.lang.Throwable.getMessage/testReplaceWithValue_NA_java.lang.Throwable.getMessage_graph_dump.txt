Line_2 $$ public void testReplaceWithValue() -->Line_28 $$ _assertEventQueue(Event.MAP_KEY_FOR_QUERY, Event.UNMAP_VALUE_FOR_QUERY)[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_29 $$ Assert.assertFalse(_concurrentMap.replace(_testKey, _testValue, _testValue2))[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_27 $$ Assert.assertSame(_testValue2, _concurrentMap.get(_testKey))[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_24 $$ _assertEventQueue(Event.MAP_KEY, Event.MAP_VALUE)[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_25 $$ Assert.assertTrue(_concurrentMap.replace(_testKey, _testValue, _testValue2))[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_22 $$ _assertEventQueue(Event.MAP_KEY_FOR_QUERY, Event.MAP_VALUE, Event.UNMAP_VALUE)[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_26 $$ _assertEventQueue(Event.MAP_KEY_FOR_QUERY, Event.MAP_VALUE, Event.UNMAP_VALUE_FOR_QUERY, Event.UNMAP_VALUE)[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_23 $$ Assert.assertNull(_concurrentMap.put(_testKey, _testValue))[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_30 $$ _assertEventQueue(Event.MAP_KEY_FOR_QUERY, Event.MAP_VALUE, Event.UNMAP_VALUE_FOR_QUERY, Event.UNMAP_VALUE)[ CD ]
Line_2 $$ public void testReplaceWithValue() -->Line_21 $$ Assert.assertFalse(_concurrentMap.replace(_testKey, _testValue, _testValue2))[ CD ]
