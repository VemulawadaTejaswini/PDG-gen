Line_24 $$ firstError = t-->Line_38 $$ fail(firstError.getMessage())[ FD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_6 $$ createIndex("test")[ CD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_40 $$ internalCluster().wipeIndices("test")[ CD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_15 $$ logger.info("verifying indexed content")[ CD ]
Line_5 $$ Throwable firstError = null-->Line_23 $$ if (firstError == null) [ FD ]
Line_10 $$ for (int j = 0; j < numOfDocs; j++) -->Line_11 $$ builders.add(client().prepareIndex("test", "type").setSource("field", "value"))[ CD ]
Line_5 $$ Throwable firstError = null-->Line_37 $$ if (firstError != null) [ FD ]
Line_7 $$ int numOfDocs = randomIntBetween(10, 100)-->Line_10 $$ for (int j = 0; j < numOfDocs; j++) [ FD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_8 $$ logger.info("indexing [[ CD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_17 $$ for (int j = 0; j < numOfChecks; j++) [ CD ]
Line_24 $$ firstError = t-->Line_33 $$ firstError = t[ FD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_10 $$ for (int j = 0; j < numOfDocs; j++) [ CD ]
Line_24 $$ firstError = t-->Line_37 $$ if (firstError != null) [ FD ]
Line_32 $$ if (firstError == null) -->Line_33 $$ firstError = t[ CD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_5 $$ Throwable firstError = null[ CD ]
Line_5 $$ Throwable firstError = null-->Line_38 $$ fail(firstError.getMessage())[ FD ]
Line_33 $$ firstError = t-->Line_38 $$ fail(firstError.getMessage())[ FD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_13 $$ indexRandom(true, builders)[ CD ]
Line_10 $$ for (int j = 0; j < numOfDocs; j++) -->Line_17 $$ for (int j = 0; j < numOfChecks; j++) [ FD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_7 $$ int numOfDocs = randomIntBetween(10, 100)[ CD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_37 $$ if (firstError != null) [ CD ]
Line_23 $$ if (firstError == null) -->Line_24 $$ firstError = t[ CD ]
Line_9 $$ List<IndexRequestBuilder> builders = new ArrayList(numOfDocs)-->Line_13 $$ indexRandom(true, builders)[ FD ]
Line_33 $$ firstError = t-->Line_37 $$ if (firstError != null) [ FD ]
Line_2 $$ public void testAutoGenerateIdNoDuplicates() throws Exception -->Line_3 $$ int numberOfIterations = scaledRandomIntBetween(10, 50)[ CD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_14 $$ ensureYellow("test")[ CD ]
Line_7 $$ int numOfDocs = randomIntBetween(10, 100)-->Line_8 $$ logger.info("indexing [[ FD ]
Line_37 $$ if (firstError != null) -->Line_38 $$ fail(firstError.getMessage())[ CD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_16 $$ int numOfChecks = randomIntBetween(8, 12)[ CD ]
Line_9 $$ List<IndexRequestBuilder> builders = new ArrayList(numOfDocs)-->Line_11 $$ builders.add(client().prepareIndex("test", "type").setSource("field", "value"))[ FD ]
Line_24 $$ firstError = t-->Line_23 $$ if (firstError == null) [ FD ]
Line_3 $$ int numberOfIterations = scaledRandomIntBetween(10, 50)-->Line_4 $$ for (int i = 0; i < numberOfIterations; i++) [ FD ]
Line_5 $$ Throwable firstError = null-->Line_32 $$ if (firstError == null) [ FD ]
Line_33 $$ firstError = t-->Line_32 $$ if (firstError == null) [ FD ]
Line_7 $$ int numOfDocs = randomIntBetween(10, 100)-->Line_20 $$ assertHitCount(client().prepareSearch("test").get(), numOfDocs)[ FD ]
Line_24 $$ firstError = t-->Line_32 $$ if (firstError == null) [ FD ]
Line_2 $$ public void testAutoGenerateIdNoDuplicates() throws Exception -->Line_4 $$ for (int i = 0; i < numberOfIterations; i++) [ CD ]
Line_33 $$ firstError = t-->Line_23 $$ if (firstError == null) [ FD ]
Line_4 $$ for (int i = 0; i < numberOfIterations; i++) -->Line_9 $$ List<IndexRequestBuilder> builders = new ArrayList(numOfDocs)[ CD ]
Line_5 $$ Throwable firstError = null-->Line_24 $$ firstError = t[ FD ]
Line_7 $$ int numOfDocs = randomIntBetween(10, 100)-->Line_29 $$ assertHitCount(client().prepareSearch("test").setTypes("type").get(), numOfDocs)[ FD ]
Line_5 $$ Throwable firstError = null-->Line_33 $$ firstError = t[ FD ]
