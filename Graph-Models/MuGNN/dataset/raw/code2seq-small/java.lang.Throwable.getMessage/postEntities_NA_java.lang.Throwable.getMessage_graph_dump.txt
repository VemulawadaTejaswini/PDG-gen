Line_13 $$ existingEntity = store.getEntity(entityID.getId(), entityID.getType(), EnumSet.of(Field.PRIMARY_FILTERS))-->Line_14 $$ if (existingEntity != null && !timelineACLsManager.checkAccess(callerUGI, existingEntity)) [ FD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_34 $$ error.setEntityType(entityID.getType())[ FD ]
Line_48 $$ TimelinePutResponse response = store.put(entitiesToPut)-->Line_49 $$ response.addErrors(errors)[ FD ]
Line_11 $$ TimelineEntity existingEntity = null-->Line_13 $$ existingEntity = store.getEntity(entityID.getId(), entityID.getType(), EnumSet.of(Field.PRIMARY_FILTERS))[ FD ]
Line_10 $$ EntityIdentifier entityID = new EntityIdentifier(entity.getEntityId(), entity.getEntityType())-->Line_34 $$ error.setEntityType(entityID.getType())[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_8 $$ List<TimelinePutResponse.TimelinePutError> errors = new ArrayList<TimelinePutResponse.TimelinePutError>()[ CD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_50 $$ return response[ CD ]
Line_41 $$ if (LOG.isDebugEnabled()) -->Line_42 $$ LOG.debug("Storing the entity " + entityID + ", JSON-style content: " + TimelineUtils.dumpTimelineRecordtoJSON(entity))[ CD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_49 $$ response.addErrors(errors)[ CD ]
Line_11 $$ TimelineEntity existingEntity = null-->Line_27 $$ if (existingEntity == null) [ FD ]
Line_10 $$ EntityIdentifier entityID = new EntityIdentifier(entity.getEntityId(), entity.getEntityType())-->Line_21 $$ error.setEntityType(entityID.getType())[ FD ]
Line_10 $$ EntityIdentifier entityID = new EntityIdentifier(entity.getEntityId(), entity.getEntityType())-->Line_20 $$ error.setEntityId(entityID.getId())[ FD ]
Line_10 $$ EntityIdentifier entityID = new EntityIdentifier(entity.getEntityId(), entity.getEntityType())-->Line_13 $$ existingEntity = store.getEntity(entityID.getId(), entityID.getType(), EnumSet.of(Field.PRIMARY_FILTERS))[ FD ]
Line_27 $$ if (existingEntity == null) -->Line_28 $$ injectOwnerInfo(entity, callerUGI.getShortUserName())[ CD ]
Line_6 $$ List<EntityIdentifier> entityIDs = new ArrayList<EntityIdentifier>()-->Line_46 $$ LOG.debug("Storing entities: " + CSV_JOINER.join(entityIDs))[ FD ]
Line_10 $$ EntityIdentifier entityID = new EntityIdentifier(entity.getEntityId(), entity.getEntityType())-->Line_33 $$ error.setEntityId(entityID.getId())[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_48 $$ TimelinePutResponse response = store.put(entitiesToPut)[ CD ]
Line_3 $$ if (entities == null) -->Line_4 $$ return new TimelinePutResponse()[ CD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_20 $$ error.setEntityId(entityID.getId())[ FD ]
Line_7 $$ TimelineEntities entitiesToPut = new TimelineEntities()-->Line_40 $$ entitiesToPut.addEntity(entity)[ FD ]
Line_8 $$ List<TimelinePutResponse.TimelinePutError> errors = new ArrayList<TimelinePutResponse.TimelinePutError>()-->Line_36 $$ errors.add(error)[ FD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_21 $$ error.setEntityType(entityID.getType())[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_9 $$ for (TimelineEntity entity : entities.getEntities()) [ FD ]
Line_13 $$ existingEntity = store.getEntity(entityID.getId(), entityID.getType(), EnumSet.of(Field.PRIMARY_FILTERS))-->Line_27 $$ if (existingEntity == null) [ FD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_36 $$ errors.add(error)[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_14 $$ if (existingEntity != null && !timelineACLsManager.checkAccess(callerUGI, existingEntity)) [ FD ]
Line_10 $$ EntityIdentifier entityID = new EntityIdentifier(entity.getEntityId(), entity.getEntityType())-->Line_39 $$ entityIDs.add(entityID)[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_28 $$ injectOwnerInfo(entity, callerUGI.getShortUserName())[ FD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_23 $$ errors.add(error)[ FD ]
Line_8 $$ List<TimelinePutResponse.TimelinePutError> errors = new ArrayList<TimelinePutResponse.TimelinePutError>()-->Line_23 $$ errors.add(error)[ FD ]
Line_9 $$ for (TimelineEntity entity : entities.getEntities()) -->Line_42 $$ LOG.debug("Storing the entity " + entityID + ", JSON-style content: " + TimelineUtils.dumpTimelineRecordtoJSON(entity))[ FD ]
Line_6 $$ List<EntityIdentifier> entityIDs = new ArrayList<EntityIdentifier>()-->Line_39 $$ entityIDs.add(entityID)[ FD ]
Line_9 $$ for (TimelineEntity entity : entities.getEntities()) -->Line_40 $$ entitiesToPut.addEntity(entity)[ FD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_35 $$ error.setErrorCode(TimelinePutResponse.TimelinePutError.SYSTEM_FILTER_CONFLICT)[ FD ]
Line_9 $$ for (TimelineEntity entity : entities.getEntities()) -->Line_28 $$ injectOwnerInfo(entity, callerUGI.getShortUserName())[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_6 $$ List<EntityIdentifier> entityIDs = new ArrayList<EntityIdentifier>()[ CD ]
Line_7 $$ TimelineEntities entitiesToPut = new TimelineEntities()-->Line_48 $$ TimelinePutResponse response = store.put(entitiesToPut)[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_7 $$ TimelineEntities entitiesToPut = new TimelineEntities()[ CD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_22 $$ error.setErrorCode(TimelinePutResponse.TimelinePutError.ACCESS_DENIED)[ FD ]
Line_45 $$ if (LOG.isDebugEnabled()) -->Line_46 $$ LOG.debug("Storing entities: " + CSV_JOINER.join(entityIDs))[ CD ]
Line_8 $$ List<TimelinePutResponse.TimelinePutError> errors = new ArrayList<TimelinePutResponse.TimelinePutError>()-->Line_49 $$ response.addErrors(errors)[ FD ]
Line_9 $$ for (TimelineEntity entity : entities.getEntities()) -->Line_10 $$ EntityIdentifier entityID = new EntityIdentifier(entity.getEntityId(), entity.getEntityType())[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_3 $$ if (entities == null) [ CD ]
Line_19 $$ TimelinePutResponse.TimelinePutError error = new TimelinePutResponse.TimelinePutError()-->Line_33 $$ error.setEntityId(entityID.getId())[ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_3 $$ if (entities == null) [ FD ]
Line_2 $$ public TimelinePutResponse postEntities(TimelineEntities entities, UserGroupInformation callerUGI) throws YarnException, IOException -->Line_45 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_11 $$ TimelineEntity existingEntity = null-->Line_14 $$ if (existingEntity != null && !timelineACLsManager.checkAccess(callerUGI, existingEntity)) [ FD ]
