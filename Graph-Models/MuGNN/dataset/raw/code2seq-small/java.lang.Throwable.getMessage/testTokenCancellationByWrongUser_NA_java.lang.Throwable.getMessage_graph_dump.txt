Line_2 $$ public void testTokenCancellationByWrongUser() -->Line_6 $$ UserGroupInformation[] kerbTestRenewers = [ CD ]
Line_2 $$ public void testTokenCancellationByWrongUser() -->Line_3 $$ RMContext rmContext = mock(RMContext.class)[ CD ]
Line_7 $$ for (final UserGroupInformation tokOwner : kerbTestOwners) -->Line_35 $$ checkTokenCancellation(tokOwner, tokRenewer)[ FD ]
Line_2 $$ public void testTokenCancellationByWrongUser() -->Line_4 $$ final ClientRMService rmService = new ClientRMService(rmContext, null, null, null, null, dtsm)[ CD ]
Line_8 $$ for (final UserGroupInformation tokRenewer : kerbTestRenewers) -->Line_13 $$ checkTokenCancellation(rmService, tokOwner, tokRenewer)[ FD ]
Line_8 $$ for (final UserGroupInformation tokRenewer : kerbTestRenewers) -->Line_35 $$ checkTokenCancellation(tokOwner, tokRenewer)[ FD ]
Line_7 $$ for (final UserGroupInformation tokOwner : kerbTestOwners) -->Line_14 $$ Assert.fail("We should not reach here; token owner = " + tokOwner.getUserName() + ", renewer = " + tokRenewer.getUserName())[ FD ]
Line_8 $$ for (final UserGroupInformation tokRenewer : kerbTestRenewers) -->Line_14 $$ Assert.fail("We should not reach here; token owner = " + tokOwner.getUserName() + ", renewer = " + tokRenewer.getUserName())[ FD ]
Line_2 $$ public void testTokenCancellationByWrongUser() -->Line_5 $$ UserGroupInformation[] kerbTestOwners = [ CD ]
Line_8 $$ for (final UserGroupInformation tokRenewer : kerbTestRenewers) -->Line_36 $$ Assert.fail("We should not reach here; token owner = " + tokOwner.getUserName() + ", renewer = " + tokRenewer.getUserName())[ FD ]
Line_7 $$ for (final UserGroupInformation tokOwner : kerbTestOwners) -->Line_36 $$ Assert.fail("We should not reach here; token owner = " + tokOwner.getUserName() + ", renewer = " + tokRenewer.getUserName())[ FD ]
Line_4 $$ final ClientRMService rmService = new ClientRMService(rmContext, null, null, null, null, dtsm)-->Line_13 $$ checkTokenCancellation(rmService, tokOwner, tokRenewer)[ FD ]
Line_7 $$ for (final UserGroupInformation tokOwner : kerbTestOwners) -->Line_13 $$ checkTokenCancellation(rmService, tokOwner, tokRenewer)[ FD ]
