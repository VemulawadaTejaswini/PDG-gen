Line_2 $$ static void makeBlockPoolDataDir(Collection<File> dataDirs, Configuration conf) throws IOException -->Line_6 $$ FsPermission permission = new FsPermission(conf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY, DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT))[ CD ]
Line_6 $$ FsPermission permission = new FsPermission(conf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY, DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT))-->Line_9 $$ DiskChecker.checkDir(localFS, new Path(data.toURI()), permission)[ FD ]
Line_2 $$ static void makeBlockPoolDataDir(Collection<File> dataDirs, Configuration conf) throws IOException -->Line_4 $$ conf = new HdfsConfiguration()[ FD ]
Line_2 $$ static void makeBlockPoolDataDir(Collection<File> dataDirs, Configuration conf) throws IOException -->Line_3 $$ if (conf == null)[ FD ]
Line_7 $$ for (File data : dataDirs) -->Line_11 $$ LOG.warn("Invalid directory in: " + data.getCanonicalPath() + ": " + e.getMessage())[ FD ]
Line_2 $$ static void makeBlockPoolDataDir(Collection<File> dataDirs, Configuration conf) throws IOException -->Line_5 $$ LocalFileSystem localFS = FileSystem.getLocal(conf)[ FD ]
Line_4 $$ conf = new HdfsConfiguration()-->Line_5 $$ LocalFileSystem localFS = FileSystem.getLocal(conf)[ FD ]
Line_3 $$ if (conf == null)-->Line_4 $$ conf = new HdfsConfiguration()[ CD ]
Line_2 $$ static void makeBlockPoolDataDir(Collection<File> dataDirs, Configuration conf) throws IOException -->Line_6 $$ FsPermission permission = new FsPermission(conf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY, DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT))[ FD ]
Line_4 $$ conf = new HdfsConfiguration()-->Line_6 $$ FsPermission permission = new FsPermission(conf.get(DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY, DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT))[ FD ]
Line_5 $$ LocalFileSystem localFS = FileSystem.getLocal(conf)-->Line_9 $$ DiskChecker.checkDir(localFS, new Path(data.toURI()), permission)[ FD ]
Line_7 $$ for (File data : dataDirs) -->Line_9 $$ DiskChecker.checkDir(localFS, new Path(data.toURI()), permission)[ FD ]
Line_2 $$ static void makeBlockPoolDataDir(Collection<File> dataDirs, Configuration conf) throws IOException -->Line_5 $$ LocalFileSystem localFS = FileSystem.getLocal(conf)[ CD ]
Line_2 $$ static void makeBlockPoolDataDir(Collection<File> dataDirs, Configuration conf) throws IOException -->Line_3 $$ if (conf == null)[ CD ]
