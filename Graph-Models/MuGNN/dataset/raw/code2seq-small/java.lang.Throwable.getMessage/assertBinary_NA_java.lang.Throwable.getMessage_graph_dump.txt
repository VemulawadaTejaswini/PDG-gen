Line_7 $$ XContentParser jsonParser = xContent.createParser(expected.bytes())-->Line_19 $$ assertThat(jsonParser.currentName(), equalTo(testParser.currentName()))[ FD ]
Line_10 $$ XContentParser.Token token1 = jsonParser.nextToken()-->Line_16 $$ assertThat(token1, equalTo(token2))[ FD ]
Line_6 $$ XContent xContent = XContentFactory.xContent(builder.contentType())-->Line_7 $$ XContentParser jsonParser = xContent.createParser(expected.bytes())[ FD ]
Line_7 $$ XContentParser jsonParser = xContent.createParser(expected.bytes())-->Line_26 $$ assertThat(jsonParser.numberValue(), equalTo(testParser.numberValue()))[ FD ]
Line_12 $$ if (token1 == null) -->Line_13 $$ assertThat(token2, nullValue())[ CD ]
Line_7 $$ XContentParser jsonParser = xContent.createParser(expected.bytes())-->Line_10 $$ XContentParser.Token token1 = jsonParser.nextToken()[ FD ]
Line_8 $$ XContentParser testParser = xContent.createParser(builder.bytes())-->Line_11 $$ XContentParser.Token token2 = testParser.nextToken()[ FD ]
Line_10 $$ XContentParser.Token token1 = jsonParser.nextToken()-->Line_12 $$ if (token1 == null) [ FD ]
Line_8 $$ XContentParser testParser = xContent.createParser(builder.bytes())-->Line_25 $$ assertThat(jsonParser.numberType(), equalTo(testParser.numberType()))[ FD ]
Line_2 $$ protected void assertBinary(XContentBuilder expected, XContentBuilder builder) -->Line_8 $$ XContentParser testParser = xContent.createParser(builder.bytes())[ FD ]
Line_9 $$ while (true) -->Line_11 $$ XContentParser.Token token2 = testParser.nextToken()[ CD ]
Line_2 $$ protected void assertBinary(XContentBuilder expected, XContentBuilder builder) -->Line_4 $$ assertNotNull(expected)[ FD ]
Line_2 $$ protected void assertBinary(XContentBuilder expected, XContentBuilder builder) -->Line_6 $$ XContent xContent = XContentFactory.xContent(builder.contentType())[ FD ]
Line_2 $$ protected void assertBinary(XContentBuilder expected, XContentBuilder builder) -->Line_4 $$ assertNotNull(expected)[ CD ]
Line_8 $$ XContentParser testParser = xContent.createParser(builder.bytes())-->Line_22 $$ assertThat(jsonParser.text(), equalTo(testParser.text()))[ FD ]
Line_8 $$ XContentParser testParser = xContent.createParser(builder.bytes())-->Line_26 $$ assertThat(jsonParser.numberValue(), equalTo(testParser.numberValue()))[ FD ]
Line_2 $$ protected void assertBinary(XContentBuilder expected, XContentBuilder builder) -->Line_3 $$ assertNotNull(builder)[ CD ]
Line_9 $$ while (true) -->Line_12 $$ if (token1 == null) [ CD ]
Line_2 $$ protected void assertBinary(XContentBuilder expected, XContentBuilder builder) -->Line_3 $$ assertNotNull(builder)[ FD ]
Line_9 $$ while (true) -->Line_16 $$ assertThat(token1, equalTo(token2))[ CD ]
Line_8 $$ XContentParser testParser = xContent.createParser(builder.bytes())-->Line_19 $$ assertThat(jsonParser.currentName(), equalTo(testParser.currentName()))[ FD ]
Line_2 $$ protected void assertBinary(XContentBuilder expected, XContentBuilder builder) -->Line_7 $$ XContentParser jsonParser = xContent.createParser(expected.bytes())[ FD ]
Line_11 $$ XContentParser.Token token2 = testParser.nextToken()-->Line_13 $$ assertThat(token2, nullValue())[ FD ]
Line_7 $$ XContentParser jsonParser = xContent.createParser(expected.bytes())-->Line_22 $$ assertThat(jsonParser.text(), equalTo(testParser.text()))[ FD ]
Line_9 $$ while (true) -->Line_10 $$ XContentParser.Token token1 = jsonParser.nextToken()[ CD ]
Line_12 $$ if (token1 == null) -->Line_14 $$ return[ CD ]
Line_11 $$ XContentParser.Token token2 = testParser.nextToken()-->Line_16 $$ assertThat(token1, equalTo(token2))[ FD ]
Line_6 $$ XContent xContent = XContentFactory.xContent(builder.contentType())-->Line_8 $$ XContentParser testParser = xContent.createParser(builder.bytes())[ FD ]
Line_7 $$ XContentParser jsonParser = xContent.createParser(expected.bytes())-->Line_25 $$ assertThat(jsonParser.numberType(), equalTo(testParser.numberType()))[ FD ]
