Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()-->Line_6 $$ SecondLevelCacheStatistics emp2LCStats = stats.getSecondLevelCacheStatistics(CACHE_REGION_NAME + "Employee")[ FD ]
Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()-->Line_5 $$ stats.clear()[ FD ]
Line_3 $$ EntityManager em = emf.createEntityManager()-->Line_8 $$ createEmployee(em, "Jan", "Ostrava", 20)[ FD ]
Line_3 $$ EntityManager em = emf.createEntityManager()-->Line_16 $$ em.close()[ FD ]
Line_2 $$ public String addEntitiesAndEvictAll(String CACHE_REGION_NAME) -->Line_18 $$ return "OK"[ CD ]
Line_6 $$ SecondLevelCacheStatistics emp2LCStats = stats.getSecondLevelCacheStatistics(CACHE_REGION_NAME + "Employee")-->Line_11 $$ assertTrue("Expected entities stored in the cache" + generateEntityCacheStats(emp2LCStats), emp2LCStats.getElementCountInMemory() > 0)[ FD ]
Line_2 $$ public String addEntitiesAndEvictAll(String CACHE_REGION_NAME) -->Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()[ CD ]
Line_3 $$ EntityManager em = emf.createEntityManager()-->Line_9 $$ createEmployee(em, "Martin", "Brno", 30)[ FD ]
Line_2 $$ public String addEntitiesAndEvictAll(String CACHE_REGION_NAME) -->Line_5 $$ stats.clear()[ CD ]
Line_2 $$ public String addEntitiesAndEvictAll(String CACHE_REGION_NAME) -->Line_6 $$ SecondLevelCacheStatistics emp2LCStats = stats.getSecondLevelCacheStatistics(CACHE_REGION_NAME + "Employee")[ CD ]
Line_2 $$ public String addEntitiesAndEvictAll(String CACHE_REGION_NAME) -->Line_3 $$ EntityManager em = emf.createEntityManager()[ CD ]
Line_6 $$ SecondLevelCacheStatistics emp2LCStats = stats.getSecondLevelCacheStatistics(CACHE_REGION_NAME + "Employee")-->Line_10 $$ assertEquals("There are 2 puts in the 2LC" + generateEntityCacheStats(emp2LCStats), 2, emp2LCStats.getPutCount())[ FD ]
Line_3 $$ EntityManager em = emf.createEntityManager()-->Line_4 $$ Statistics stats = em.unwrap(Session.class).getSessionFactory().getStatistics()[ FD ]
