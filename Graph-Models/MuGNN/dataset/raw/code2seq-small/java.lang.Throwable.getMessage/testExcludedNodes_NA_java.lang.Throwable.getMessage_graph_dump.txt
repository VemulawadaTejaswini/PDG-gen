Line_2 $$ public void testExcludedNodes() throws IOException -->Line_4 $$ FileSystem fs = cluster.getFileSystem()[ CD ]
Line_2 $$ public void testExcludedNodes() throws IOException -->Line_5 $$ Path filePath = new Path("/testExcludedNodes")[ CD ]
Line_2 $$ public void testExcludedNodes() throws IOException -->Line_6 $$ cluster.stopDataNode(AppendTestUtil.nextInt(3))[ CD ]
Line_5 $$ Path filePath = new Path("/testExcludedNodes")-->Line_7 $$ OutputStream out = fs.create(filePath, true, 4096, (short) 3, fs.getDefaultBlockSize(filePath))[ FD ]
Line_7 $$ OutputStream out = fs.create(filePath, true, 4096, (short) 3, fs.getDefaultBlockSize(filePath))-->Line_8 $$ out.write(20)[ FD ]
Line_4 $$ FileSystem fs = cluster.getFileSystem()-->Line_7 $$ OutputStream out = fs.create(filePath, true, 4096, (short) 3, fs.getDefaultBlockSize(filePath))[ FD ]
Line_7 $$ OutputStream out = fs.create(filePath, true, 4096, (short) 3, fs.getDefaultBlockSize(filePath))-->Line_10 $$ out.close()[ FD ]
Line_2 $$ public void testExcludedNodes() throws IOException -->Line_8 $$ out.write(20)[ CD ]
Line_2 $$ public void testExcludedNodes() throws IOException -->Line_7 $$ OutputStream out = fs.create(filePath, true, 4096, (short) 3, fs.getDefaultBlockSize(filePath))[ CD ]
Line_2 $$ public void testExcludedNodes() throws IOException -->Line_3 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()[ CD ]
