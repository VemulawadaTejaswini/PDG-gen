Line_36 $$ if (showNotification) -->Line_37 $$ LOG.warn("IPython Notebook connection refused: " + e.getMessage())[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_14 $$ cell.updatePanel(null, (List<IpnbOutputCell>) connection.getOutput().clone())[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_6 $$ final String messageId = connection.execute(codePanel.getCell().getSourceAsString())[ CD ]
Line_19 $$ final IpnbCodePanel cell = myUpdateMap.remove(parentMessageId)-->Line_21 $$ cell.updatePanel(payload, null)[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_10 $$ if (!myUpdateMap.containsKey(parentMessageId))[ CD ]
Line_17 $$ if (!myUpdateMap.containsKey(parentMessageId))-->Line_18 $$ return[ CD ]
Line_2 $$ private boolean startConnection(@NotNull final IpnbCodePanel codePanel, @NotNull final String path, @NotNull final String urlString, final boolean showNotification) -->Line_26 $$ final IpnbConnection connection = getConnection(codePanel, urlString, listener)[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_20 $$ if (payload != null) [ CD ]
Line_6 $$ final String messageId = connection.execute(codePanel.getCell().getSourceAsString())-->Line_7 $$ myUpdateMap.put(messageId, codePanel)[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_17 $$ if (!myUpdateMap.containsKey(parentMessageId))[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_17 $$ if (!myUpdateMap.containsKey(parentMessageId))[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_13 $$ cell.getCell().setPromptNumber(connection.getExecCount())[ CD ]
Line_29 $$ if (showNotification) -->Line_30 $$ showWarning(codePanel.getFileEditor(), "Please, check IPython Notebook URL in <a href=\"\">Settings->Tools->IPython Notebook</a>", new IpnbSettingsAdapter())[ CD ]
Line_12 $$ final IpnbCodePanel cell = myUpdateMap.get(parentMessageId)-->Line_14 $$ cell.updatePanel(null, (List<IpnbOutputCell>) connection.getOutput().clone())[ FD ]
Line_2 $$ private boolean startConnection(@NotNull final IpnbCodePanel codePanel, @NotNull final String path, @NotNull final String urlString, final boolean showNotification) -->Line_7 $$ myUpdateMap.put(messageId, codePanel)[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_21 $$ cell.updatePanel(payload, null)[ FD ]
Line_29 $$ if (showNotification) -->Line_31 $$ LOG.warn("IPython Notebook connection refused: " + e.getMessage())[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_14 $$ cell.updatePanel(null, (List<IpnbOutputCell>) connection.getOutput().clone())[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_10 $$ if (!myUpdateMap.containsKey(parentMessageId))[ FD ]
Line_2 $$ private boolean startConnection(@NotNull final IpnbCodePanel codePanel, @NotNull final String path, @NotNull final String urlString, final boolean showNotification) -->Line_41 $$ return true[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_13 $$ cell.getCell().setPromptNumber(connection.getExecCount())[ FD ]
Line_2 $$ private boolean startConnection(@NotNull final IpnbCodePanel codePanel, @NotNull final String path, @NotNull final String urlString, final boolean showNotification) -->Line_6 $$ final String messageId = connection.execute(codePanel.getCell().getSourceAsString())[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_12 $$ final IpnbCodePanel cell = myUpdateMap.get(parentMessageId)[ FD ]
Line_2 $$ private boolean startConnection(@NotNull final IpnbCodePanel codePanel, @NotNull final String path, @NotNull final String urlString, final boolean showNotification) -->Line_30 $$ showWarning(codePanel.getFileEditor(), "Please, check IPython Notebook URL in <a href=\"\">Settings->Tools->IPython Notebook</a>", new IpnbSettingsAdapter())[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_12 $$ final IpnbCodePanel cell = myUpdateMap.get(parentMessageId)[ CD ]
Line_10 $$ if (!myUpdateMap.containsKey(parentMessageId))-->Line_11 $$ return[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_20 $$ if (payload != null) [ FD ]
Line_2 $$ private boolean startConnection(@NotNull final IpnbCodePanel codePanel, @NotNull final String path, @NotNull final String urlString, final boolean showNotification) -->Line_27 $$ myKernels.put(path, connection)[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_19 $$ final IpnbCodePanel cell = myUpdateMap.remove(parentMessageId)[ FD ]
Line_20 $$ if (payload != null) -->Line_21 $$ cell.updatePanel(payload, null)[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_7 $$ myUpdateMap.put(messageId, codePanel)[ CD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_27 $$ myKernels.put(path, connection)[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_6 $$ final String messageId = connection.execute(codePanel.getCell().getSourceAsString())[ FD ]
Line_12 $$ final IpnbCodePanel cell = myUpdateMap.get(parentMessageId)-->Line_21 $$ cell.updatePanel(payload, null)[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_19 $$ final IpnbCodePanel cell = myUpdateMap.remove(parentMessageId)[ CD ]
Line_12 $$ final IpnbCodePanel cell = myUpdateMap.get(parentMessageId)-->Line_13 $$ cell.getCell().setPromptNumber(connection.getExecCount())[ FD ]
Line_4 $$ final IpnbConnectionListenerBase listener = new IpnbConnectionListenerBase() -->Line_26 $$ final IpnbConnection connection = getConnection(codePanel, urlString, listener)[ FD ]
