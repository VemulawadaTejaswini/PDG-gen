Line_2 $$ public MavenProjectReaderResult resolveProject(MavenGeneralSettings generalSettings, MavenEmbedderWrapper embedder, VirtualFile file, MavenExplicitProfiles explicitProfiles, MavenProjectReaderProjectLocator locator) throws MavenProcessCanceledException -->Line_23 $$ result.readingProblems.add(MavenProjectProblem.createSyntaxProblem(file.getPath(), MavenProjectProblem.ProblemType.SYNTAX))[ FD ]
Line_2 $$ public MavenProjectReaderResult resolveProject(MavenGeneralSettings generalSettings, MavenEmbedderWrapper embedder, VirtualFile file, MavenExplicitProfiles explicitProfiles, MavenProjectReaderProjectLocator locator) throws MavenProcessCanceledException -->Line_4 $$ MavenServerExecutionResult result = embedder.resolveProject(file, explicitProfiles.getEnabledProfiles(), explicitProfiles.getDisabledProfiles())[ FD ]
Line_6 $$ if (projectData == null) -->Line_10 $$ return temp[ CD ]
Line_2 $$ public MavenProjectReaderResult resolveProject(MavenGeneralSettings generalSettings, MavenEmbedderWrapper embedder, VirtualFile file, MavenExplicitProfiles explicitProfiles, MavenProjectReaderProjectLocator locator) throws MavenProcessCanceledException -->Line_12 $$ return new MavenProjectReaderResult(projectData.mavenModel, projectData.mavenModelMap, new MavenExplicitProfiles(projectData.activatedProfiles, explicitProfiles.getDisabledProfiles()), projectData.nativeMavenProject, result.problems, result.unresolvedArtifacts)[ FD ]
Line_2 $$ public MavenProjectReaderResult resolveProject(MavenGeneralSettings generalSettings, MavenEmbedderWrapper embedder, VirtualFile file, MavenExplicitProfiles explicitProfiles, MavenProjectReaderProjectLocator locator) throws MavenProcessCanceledException -->Line_18 $$ MavenProjectReaderResult result = readProject(generalSettings, file, explicitProfiles, locator)[ FD ]
Line_20 $$ if (message != null) -->Line_21 $$ result.readingProblems.add(MavenProjectProblem.createStructureProblem(file.getPath(), message))[ CD ]
Line_6 $$ if (projectData == null) -->Line_8 $$ temp.readingProblems.addAll(result.problems)[ CD ]
Line_2 $$ public MavenProjectReaderResult resolveProject(MavenGeneralSettings generalSettings, MavenEmbedderWrapper embedder, VirtualFile file, MavenExplicitProfiles explicitProfiles, MavenProjectReaderProjectLocator locator) throws MavenProcessCanceledException -->Line_7 $$ MavenProjectReaderResult temp = readProject(generalSettings, file, explicitProfiles, locator)[ FD ]
Line_2 $$ public MavenProjectReaderResult resolveProject(MavenGeneralSettings generalSettings, MavenEmbedderWrapper embedder, VirtualFile file, MavenExplicitProfiles explicitProfiles, MavenProjectReaderProjectLocator locator) throws MavenProcessCanceledException -->Line_21 $$ result.readingProblems.add(MavenProjectProblem.createStructureProblem(file.getPath(), message))[ FD ]
Line_20 $$ if (message != null) -->Line_23 $$ result.readingProblems.add(MavenProjectProblem.createSyntaxProblem(file.getPath(), MavenProjectProblem.ProblemType.SYNTAX))[ CD ]
Line_5 $$ MavenServerExecutionResult.ProjectData projectData = result.projectData-->Line_6 $$ if (projectData == null) [ FD ]
Line_6 $$ if (projectData == null) -->Line_9 $$ temp.unresolvedArtifactIds.addAll(result.unresolvedArtifacts)[ CD ]
Line_19 $$ String message = e.getMessage()-->Line_21 $$ result.readingProblems.add(MavenProjectProblem.createStructureProblem(file.getPath(), message))[ FD ]
Line_19 $$ String message = e.getMessage()-->Line_20 $$ if (message != null) [ FD ]
Line_6 $$ if (projectData == null) -->Line_7 $$ MavenProjectReaderResult temp = readProject(generalSettings, file, explicitProfiles, locator)[ CD ]
