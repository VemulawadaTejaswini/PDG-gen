Line_2 $$ public void testCheckCompatibilityConflict() -->Line_19 $$ FieldMapper f3 = new FakeFieldMapper("foo", ft3)[ CD ]
Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())-->Line_21 $$ lookup.copyAndAddAll("type2", newList(f3), false)[ FD ]
Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())-->Line_27 $$ lookup.copyAndAddAll("type2", newList(f3), true)[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_3 $$ FieldMapper f1 = new FakeFieldMapper("foo")[ CD ]
Line_8 $$ FieldMapper f2 = new FakeFieldMapper("foo", ft2)-->Line_10 $$ lookup.copyAndAddAll("type2", newList(f2), false)[ FD ]
Line_4 $$ FieldTypeLookup lookup = new FieldTypeLookup()-->Line_15 $$ lookup.copyAndAddAll("type", newList(f2), false)[ FD ]
Line_4 $$ FieldTypeLookup lookup = new FieldTypeLookup()-->Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())[ FD ]
Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())-->Line_10 $$ lookup.copyAndAddAll("type2", newList(f2), false)[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_6 $$ MappedFieldType ft2 = FakeFieldMapper.makeFieldType("foo")[ CD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_7 $$ ft2.setBoost(2.0f)[ CD ]
Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())-->Line_15 $$ lookup.copyAndAddAll("type", newList(f2), false)[ FD ]
Line_3 $$ FieldMapper f1 = new FakeFieldMapper("foo")-->Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_4 $$ FieldTypeLookup lookup = new FieldTypeLookup()[ CD ]
Line_4 $$ FieldTypeLookup lookup = new FieldTypeLookup()-->Line_10 $$ lookup.copyAndAddAll("type2", newList(f2), false)[ FD ]
Line_4 $$ FieldTypeLookup lookup = new FieldTypeLookup()-->Line_27 $$ lookup.copyAndAddAll("type2", newList(f3), true)[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())[ CD ]
Line_19 $$ FieldMapper f3 = new FakeFieldMapper("foo", ft3)-->Line_21 $$ lookup.copyAndAddAll("type2", newList(f3), false)[ FD ]
Line_17 $$ MappedFieldType ft3 = FakeFieldMapper.makeFieldType("foo")-->Line_18 $$ ft3.setStored(true)[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_16 $$ lookup.copyAndAddAll("type2", newList(f2), true)[ CD ]
Line_8 $$ FieldMapper f2 = new FakeFieldMapper("foo", ft2)-->Line_16 $$ lookup.copyAndAddAll("type2", newList(f2), true)[ FD ]
Line_19 $$ FieldMapper f3 = new FakeFieldMapper("foo", ft3)-->Line_27 $$ lookup.copyAndAddAll("type2", newList(f3), true)[ FD ]
Line_4 $$ FieldTypeLookup lookup = new FieldTypeLookup()-->Line_21 $$ lookup.copyAndAddAll("type2", newList(f3), false)[ FD ]
Line_5 $$ lookup = lookup.copyAndAddAll("type", newList(f1), randomBoolean())-->Line_16 $$ lookup.copyAndAddAll("type2", newList(f2), true)[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_8 $$ FieldMapper f2 = new FakeFieldMapper("foo", ft2)[ CD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_18 $$ ft3.setStored(true)[ CD ]
Line_8 $$ FieldMapper f2 = new FakeFieldMapper("foo", ft2)-->Line_15 $$ lookup.copyAndAddAll("type", newList(f2), false)[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_15 $$ lookup.copyAndAddAll("type", newList(f2), false)[ CD ]
Line_6 $$ MappedFieldType ft2 = FakeFieldMapper.makeFieldType("foo")-->Line_7 $$ ft2.setBoost(2.0f)[ FD ]
Line_4 $$ FieldTypeLookup lookup = new FieldTypeLookup()-->Line_16 $$ lookup.copyAndAddAll("type2", newList(f2), true)[ FD ]
Line_2 $$ public void testCheckCompatibilityConflict() -->Line_17 $$ MappedFieldType ft3 = FakeFieldMapper.makeFieldType("foo")[ CD ]
