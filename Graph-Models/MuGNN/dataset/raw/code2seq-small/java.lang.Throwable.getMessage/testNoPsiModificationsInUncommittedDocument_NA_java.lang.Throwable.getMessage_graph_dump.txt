Line_2 $$ public void testNoPsiModificationsInUncommittedDocument() -->Line_4 $$ Document document = file.getViewProvider().getDocument()[ CD ]
Line_2 $$ public void testNoPsiModificationsInUncommittedDocument() -->Line_6 $$ PsiClass psiClass = file.getClasses()[0][ CD ]
Line_2 $$ public void testNoPsiModificationsInUncommittedDocument() -->Line_13 $$ assertEquals("class A[ CD ]
Line_6 $$ PsiClass psiClass = file.getClasses()[0]-->Line_13 $$ assertEquals("class A[ FD ]
Line_4 $$ Document document = file.getViewProvider().getDocument()-->Line_14 $$ assertEquals(" class A[ FD ]
Line_6 $$ PsiClass psiClass = file.getClasses()[0]-->Line_8 $$ psiClass.addBefore(PsiParserFacade.SERVICE.getInstance(getProject()).createWhiteSpaceFromText(" "), psiClass.getLBrace())[ FD ]
Line_4 $$ Document document = file.getViewProvider().getDocument()-->Line_5 $$ document.insertString(0, " ")[ FD ]
Line_2 $$ public void testNoPsiModificationsInUncommittedDocument() -->Line_3 $$ final PsiJavaFile file = (PsiJavaFile) myFixture.addFileToProject("a.java", "class A[ CD ]
Line_2 $$ public void testNoPsiModificationsInUncommittedDocument() -->Line_5 $$ document.insertString(0, " ")[ CD ]
Line_2 $$ public void testNoPsiModificationsInUncommittedDocument() -->Line_14 $$ assertEquals(" class A[ CD ]
Line_3 $$ final PsiJavaFile file = (PsiJavaFile) myFixture.addFileToProject("a.java", "class A-->Line_4 $$ Document document = file.getViewProvider().getDocument()[ FD ]
Line_3 $$ final PsiJavaFile file = (PsiJavaFile) myFixture.addFileToProject("a.java", "class A-->Line_6 $$ PsiClass psiClass = file.getClasses()[0][ FD ]
