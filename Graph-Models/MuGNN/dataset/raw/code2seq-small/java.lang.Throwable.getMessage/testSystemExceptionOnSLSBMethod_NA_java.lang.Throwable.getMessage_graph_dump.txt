Line_6 $$ final String exceptionState = "bafasfaj;l"-->Line_8 $$ exceptionThrowingBean.alwaysThrowSystemException(exceptionState)[ FD ]
Line_6 $$ final String exceptionState = "bafasfaj;l"-->Line_14 $$ Assert.assertEquals("Unexpected state in the system exception", exceptionState, cause.getMessage())[ FD ]
Line_12 $$ final Throwable cause = ejbe.getCause()-->Line_14 $$ Assert.assertEquals("Unexpected state in the system exception", exceptionState, cause.getMessage())[ FD ]
Line_4 $$ final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.createProxy(locator)-->Line_5 $$ Assert.assertNotNull("Received a null proxy", exceptionThrowingBean)[ FD ]
Line_2 $$ public void testSystemExceptionOnSLSBMethod() throws Exception -->Line_6 $$ final String exceptionState = "bafasfaj;l"[ CD ]
Line_4 $$ final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.createProxy(locator)-->Line_8 $$ exceptionThrowingBean.alwaysThrowSystemException(exceptionState)[ FD ]
Line_2 $$ public void testSystemExceptionOnSLSBMethod() throws Exception -->Line_5 $$ Assert.assertNotNull("Received a null proxy", exceptionThrowingBean)[ CD ]
Line_2 $$ public void testSystemExceptionOnSLSBMethod() throws Exception -->Line_4 $$ final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.createProxy(locator)[ CD ]
Line_2 $$ public void testSystemExceptionOnSLSBMethod() throws Exception -->Line_3 $$ final StatelessEJBLocator<ExceptionThrowingRemote> locator = new StatelessEJBLocator<ExceptionThrowingRemote>(ExceptionThrowingRemote.class, APP_NAME, MODULE_NAME, ExceptionThrowingBean.class.getSimpleName(), "")[ CD ]
Line_3 $$ final StatelessEJBLocator<ExceptionThrowingRemote> locator = new StatelessEJBLocator<ExceptionThrowingRemote>(ExceptionThrowingRemote.class, APP_NAME, MODULE_NAME, ExceptionThrowingBean.class.getSimpleName(), "")-->Line_4 $$ final ExceptionThrowingRemote exceptionThrowingBean = EJBClient.createProxy(locator)[ FD ]
