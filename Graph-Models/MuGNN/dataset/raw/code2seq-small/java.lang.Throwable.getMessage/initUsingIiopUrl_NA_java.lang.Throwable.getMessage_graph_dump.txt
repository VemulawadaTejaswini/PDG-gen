Line_13 $$ String tmpUrl = "corbaloc:iiop:" + addr.host + ":" + addr.port + "/NameService"-->Line_14 $$ org.omg.CORBA.Object rootCtx = defOrb.string_to_object(tmpUrl)[ FD ]
Line_4 $$ IiopUrl parsedUrl = new IiopUrl(url)-->Line_16 $$ return parsedUrl.getStringName()[ FD ]
Line_2 $$ private String initUsingIiopUrl(ORB defOrb, String url, Hashtable env) throws NamingException -->Line_20 $$ ORB orb = CorbaUtils.getOrb(addr.host, addr.port, env)[ FD ]
Line_2 $$ private String initUsingIiopUrl(ORB defOrb, String url, Hashtable env) throws NamingException -->Line_14 $$ org.omg.CORBA.Object rootCtx = defOrb.string_to_object(tmpUrl)[ FD ]
Line_2 $$ private String initUsingIiopUrl(ORB defOrb, String url, Hashtable env) throws NamingException -->Line_15 $$ setOrbAndRootContext(defOrb, rootCtx)[ FD ]
Line_7 $$ NamingException savedException = null-->Line_27 $$ if (savedException != null) [ FD ]
Line_8 $$ for (int i = 0; i < addrs.size(); i++) -->Line_9 $$ addr = (IiopUrl.Address) addrs.elementAt(i)[ CD ]
Line_7 $$ NamingException savedException = null-->Line_24 $$ savedException = ne[ FD ]
Line_14 $$ org.omg.CORBA.Object rootCtx = defOrb.string_to_object(tmpUrl)-->Line_15 $$ setOrbAndRootContext(defOrb, rootCtx)[ FD ]
Line_4 $$ IiopUrl parsedUrl = new IiopUrl(url)-->Line_5 $$ Vector addrs = parsedUrl.getAddresses()[ FD ]
Line_2 $$ private String initUsingIiopUrl(ORB defOrb, String url, Hashtable env) throws NamingException -->Line_11 $$ if (defOrb != null) [ FD ]
Line_8 $$ for (int i = 0; i < addrs.size(); i++) -->Line_9 $$ addr = (IiopUrl.Address) addrs.elementAt(i)[ FD ]
Line_5 $$ Vector addrs = parsedUrl.getAddresses()-->Line_8 $$ for (int i = 0; i < addrs.size(); i++) [ FD ]
Line_5 $$ Vector addrs = parsedUrl.getAddresses()-->Line_9 $$ addr = (IiopUrl.Address) addrs.elementAt(i)[ FD ]
Line_4 $$ IiopUrl parsedUrl = new IiopUrl(url)-->Line_22 $$ return parsedUrl.getStringName()[ FD ]
Line_24 $$ savedException = ne-->Line_27 $$ if (savedException != null) [ FD ]
Line_20 $$ ORB orb = CorbaUtils.getOrb(addr.host, addr.port, env)-->Line_21 $$ setOrbAndRootContext(orb, (String) null)[ FD ]
Line_2 $$ private String initUsingIiopUrl(ORB defOrb, String url, Hashtable env) throws NamingException -->Line_30 $$ throw IIOPLogger.ROOT_LOGGER.invalidURLOrIOR(url)[ FD ]
Line_6 $$ IiopUrl.Address addr-->Line_9 $$ addr = (IiopUrl.Address) addrs.elementAt(i)[ FD ]
