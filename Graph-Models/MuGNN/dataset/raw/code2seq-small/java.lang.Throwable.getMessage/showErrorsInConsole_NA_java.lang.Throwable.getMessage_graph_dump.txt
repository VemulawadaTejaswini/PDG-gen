Line_4 $$ DefaultActionGroup actionGroup = new DefaultActionGroup(createRerunAction())-->Line_5 $$ final ActionToolbar actionToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, actionGroup, false)[ FD ]
Line_6 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_7 $$ panel.add(actionToolbar.getComponent(), BorderLayout.WEST)[ FD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_16 $$ actionGroup.add(createCloseAction(defaultExecutor, contentDescriptor))[ CD ]
Line_8 $$ NewErrorTreeViewPanel errorViewPanel = new NewErrorTreeViewPanel(getProject(), null, false, false, null)-->Line_13 $$ errorViewPanel.addMessage(MessageCategory.ERROR, messages, null, -1, -1, null)[ FD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_15 $$ final RunContentDescriptor contentDescriptor = new RunContentDescriptor(null, myProcessHandler, panel, "Error running console")[ CD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_14 $$ panel.add(errorViewPanel, BorderLayout.CENTER)[ CD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_7 $$ panel.add(actionToolbar.getComponent(), BorderLayout.WEST)[ CD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_4 $$ DefaultActionGroup actionGroup = new DefaultActionGroup(createRerunAction())[ CD ]
Line_9 $$ String[] messages = StringUtil.isNotEmpty(e.getMessage()) ? StringUtil.splitByLines(e.getMessage()) : ArrayUtil.EMPTY_STRING_ARRAY-->Line_13 $$ errorViewPanel.addMessage(MessageCategory.ERROR, messages, null, -1, -1, null)[ FD ]
Line_4 $$ DefaultActionGroup actionGroup = new DefaultActionGroup(createRerunAction())-->Line_16 $$ actionGroup.add(createCloseAction(defaultExecutor, contentDescriptor))[ FD ]
Line_10 $$ if (messages.length == 0) -->Line_11 $$ messages = new String[] [ CD ]
Line_9 $$ String[] messages = StringUtil.isNotEmpty(e.getMessage()) ? StringUtil.splitByLines(e.getMessage()) : ArrayUtil.EMPTY_STRING_ARRAY-->Line_11 $$ messages = new String[] [ FD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_6 $$ final JPanel panel = new JPanel(new BorderLayout())[ CD ]
Line_6 $$ final JPanel panel = new JPanel(new BorderLayout())-->Line_14 $$ panel.add(errorViewPanel, BorderLayout.CENTER)[ FD ]
Line_15 $$ final RunContentDescriptor contentDescriptor = new RunContentDescriptor(null, myProcessHandler, panel, "Error running console")-->Line_17 $$ showConsole(defaultExecutor, contentDescriptor)[ FD ]
Line_3 $$ final Executor defaultExecutor = DefaultRunExecutor.getRunExecutorInstance()-->Line_17 $$ showConsole(defaultExecutor, contentDescriptor)[ FD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_3 $$ final Executor defaultExecutor = DefaultRunExecutor.getRunExecutorInstance()[ CD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_10 $$ if (messages.length == 0) [ CD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_5 $$ final ActionToolbar actionToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, actionGroup, false)[ CD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_9 $$ String[] messages = StringUtil.isNotEmpty(e.getMessage()) ? StringUtil.splitByLines(e.getMessage()) : ArrayUtil.EMPTY_STRING_ARRAY[ FD ]
Line_11 $$ messages = new String[] -->Line_13 $$ errorViewPanel.addMessage(MessageCategory.ERROR, messages, null, -1, -1, null)[ FD ]
Line_15 $$ final RunContentDescriptor contentDescriptor = new RunContentDescriptor(null, myProcessHandler, panel, "Error running console")-->Line_16 $$ actionGroup.add(createCloseAction(defaultExecutor, contentDescriptor))[ FD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_17 $$ showConsole(defaultExecutor, contentDescriptor)[ CD ]
Line_5 $$ final ActionToolbar actionToolbar = ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN, actionGroup, false)-->Line_7 $$ panel.add(actionToolbar.getComponent(), BorderLayout.WEST)[ FD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_9 $$ String[] messages = StringUtil.isNotEmpty(e.getMessage()) ? StringUtil.splitByLines(e.getMessage()) : ArrayUtil.EMPTY_STRING_ARRAY[ CD ]
Line_3 $$ final Executor defaultExecutor = DefaultRunExecutor.getRunExecutorInstance()-->Line_16 $$ actionGroup.add(createCloseAction(defaultExecutor, contentDescriptor))[ FD ]
Line_8 $$ NewErrorTreeViewPanel errorViewPanel = new NewErrorTreeViewPanel(getProject(), null, false, false, null)-->Line_14 $$ panel.add(errorViewPanel, BorderLayout.CENTER)[ FD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_8 $$ NewErrorTreeViewPanel errorViewPanel = new NewErrorTreeViewPanel(getProject(), null, false, false, null)[ CD ]
Line_2 $$ private void showErrorsInConsole(Exception e) -->Line_13 $$ errorViewPanel.addMessage(MessageCategory.ERROR, messages, null, -1, -1, null)[ CD ]
