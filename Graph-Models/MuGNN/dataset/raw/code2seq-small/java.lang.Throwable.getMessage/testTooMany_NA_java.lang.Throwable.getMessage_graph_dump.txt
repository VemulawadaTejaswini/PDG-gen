Line_2 $$ public void testTooMany() -->Line_20 $$ pool.stop()[ CD ]
Line_4 $$ Pool<MockBean> pool = new StrictMaxPool<MockBean>(factory, 10, 1, TimeUnit.SECONDS)-->Line_17 $$ pool.release(beans[i])[ FD ]
Line_4 $$ Pool<MockBean> pool = new StrictMaxPool<MockBean>(factory, 10, 1, TimeUnit.SECONDS)-->Line_5 $$ pool.start()[ FD ]
Line_4 $$ Pool<MockBean> pool = new StrictMaxPool<MockBean>(factory, 10, 1, TimeUnit.SECONDS)-->Line_8 $$ beans[i] = pool.get()[ FD ]
Line_2 $$ public void testTooMany() -->Line_5 $$ pool.start()[ CD ]
Line_7 $$ for (int i = 0; i < beans.length; i++) -->Line_16 $$ for (int i = 0; i < beans.length; i++) [ FD ]
Line_2 $$ public void testTooMany() -->Line_16 $$ for (int i = 0; i < beans.length; i++) [ CD ]
Line_2 $$ public void testTooMany() -->Line_3 $$ StatelessObjectFactory<MockBean> factory = new MockFactory()[ CD ]
Line_2 $$ public void testTooMany() -->Line_6 $$ MockBean[] beans = new MockBean[10][ CD ]
Line_2 $$ public void testTooMany() -->Line_21 $$ assertEquals(10, MockBean.getPostConstructs())[ CD ]
Line_2 $$ public void testTooMany() -->Line_22 $$ assertEquals(10, MockBean.getPreDestroys())[ CD ]
Line_7 $$ for (int i = 0; i < beans.length; i++) -->Line_8 $$ beans[i] = pool.get()[ CD ]
Line_2 $$ public void testTooMany() -->Line_7 $$ for (int i = 0; i < beans.length; i++) [ CD ]
Line_2 $$ public void testTooMany() -->Line_4 $$ Pool<MockBean> pool = new StrictMaxPool<MockBean>(factory, 10, 1, TimeUnit.SECONDS)[ CD ]
Line_16 $$ for (int i = 0; i < beans.length; i++) -->Line_17 $$ pool.release(beans[i])[ CD ]
Line_4 $$ Pool<MockBean> pool = new StrictMaxPool<MockBean>(factory, 10, 1, TimeUnit.SECONDS)-->Line_20 $$ pool.stop()[ FD ]
Line_16 $$ for (int i = 0; i < beans.length; i++) -->Line_18 $$ beans[i] = null[ CD ]
Line_4 $$ Pool<MockBean> pool = new StrictMaxPool<MockBean>(factory, 10, 1, TimeUnit.SECONDS)-->Line_11 $$ pool.get()[ FD ]
