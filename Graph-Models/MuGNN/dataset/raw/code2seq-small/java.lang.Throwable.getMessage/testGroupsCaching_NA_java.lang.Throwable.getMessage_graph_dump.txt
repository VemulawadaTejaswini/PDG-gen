Line_4 $$ Groups groups = new Groups(conf)-->Line_13 $$ LOG.error("We are not supposed to get here." + groups.getGroups("user1").toString())[ FD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_11 $$ assertTrue(groups.getGroups("me").size() == 2)[ CD ]
Line_4 $$ Groups groups = new Groups(conf)-->Line_6 $$ groups.refresh()[ FD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_21 $$ FakeGroupMapping.clearBlackList()[ CD ]
Line_16 $$ if (!ioe.getMessage().startsWith("No groups found")) -->Line_17 $$ LOG.error("Got unexpected exception: " + ioe.getMessage())[ CD ]
Line_4 $$ Groups groups = new Groups(conf)-->Line_9 $$ assertTrue(groups.getGroups("me").size() == 2)[ FD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_5 $$ groups.cacheGroupsAdd(Arrays.asList(myGroups))[ CD ]
Line_4 $$ Groups groups = new Groups(conf)-->Line_11 $$ assertTrue(groups.getGroups("me").size() == 2)[ FD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_8 $$ FakeGroupMapping.addToBlackList("user1")[ CD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_10 $$ FakeGroupMapping.addToBlackList("me")[ CD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_7 $$ FakeGroupMapping.clearBlackList()[ CD ]
Line_4 $$ Groups groups = new Groups(conf)-->Line_22 $$ assertTrue(groups.getGroups("user1").size() == 2)[ FD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_9 $$ assertTrue(groups.getGroups("me").size() == 2)[ CD ]
Line_16 $$ if (!ioe.getMessage().startsWith("No groups found")) -->Line_18 $$ fail()[ CD ]
Line_4 $$ Groups groups = new Groups(conf)-->Line_5 $$ groups.cacheGroupsAdd(Arrays.asList(myGroups))[ FD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_4 $$ Groups groups = new Groups(conf)[ CD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_6 $$ groups.refresh()[ CD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_22 $$ assertTrue(groups.getGroups("user1").size() == 2)[ CD ]
Line_2 $$ public void testGroupsCaching() throws Exception -->Line_3 $$ conf.setLong(CommonConfigurationKeys.HADOOP_SECURITY_GROUPS_NEGATIVE_CACHE_SECS, 0)[ CD ]
