Line_8 $$ for (VirtualFile classFile : classChildren) -->Line_11 $$ inputStream = classFile.openStream()[ FD ]
Line_6 $$ final Indexer indexer = new Indexer()-->Line_12 $$ indexer.index(inputStream)[ FD ]
Line_5 $$ final VirtualFile virtualFile = VFS.getChild(uri)-->Line_7 $$ final List<VirtualFile> classChildren = virtualFile.getChildren(new SuffixMatchFilter(".class", VisitorAttributes.RECURSE_LEAVES_ONLY))[ FD ]
Line_9 $$ InputStream inputStream = null-->Line_14 $$ VFSUtils.safeClose(inputStream)[ FD ]
Line_9 $$ InputStream inputStream = null-->Line_12 $$ indexer.index(inputStream)[ FD ]
Line_11 $$ inputStream = classFile.openStream()-->Line_14 $$ VFSUtils.safeClose(inputStream)[ FD ]
Line_6 $$ final Indexer indexer = new Indexer()-->Line_17 $$ final Index index = indexer.complete()[ FD ]
Line_9 $$ InputStream inputStream = null-->Line_11 $$ inputStream = classFile.openStream()[ FD ]
Line_4 $$ URI uri = getURI("/ra16annoadminobj.rar")-->Line_5 $$ final VirtualFile virtualFile = VFS.getChild(uri)[ FD ]
Line_18 $$ AnnotationRepository ar = new JandexAnnotationRepositoryImpl(index, Thread.currentThread().getContextClassLoader())-->Line_19 $$ annotations.process(ar, null, Thread.currentThread().getContextClassLoader())[ FD ]
Line_11 $$ inputStream = classFile.openStream()-->Line_12 $$ indexer.index(inputStream)[ FD ]
