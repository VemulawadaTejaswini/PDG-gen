Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_34 $$ CommandProcessor.getInstance().executeCommand(project, new Runnable() [ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_43 $$ Messages.showMessageDialog(project, UIDesignerBundle.message("snapshot.save.error", ex.getMessage()), UIDesignerBundle.message("snapshot.title"), Messages.getErrorIcon())[ FD ]
Line_11 $$ if (dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE) -->Line_12 $$ final int id = dlg.getSelectedComponentId()[ CD ]
Line_32 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_34 $$ CommandProcessor.getInstance().executeCommand(project, new Runnable() [ CD ]
Line_9 $$ final MyDialog dlg = new MyDialog(project, client, dir)-->Line_12 $$ final int id = dlg.getSelectedComponentId()[ FD ]
Line_13 $$ final Ref<Object> result = new Ref<Object>()-->Line_19 $$ result.set(ex)[ FD ]
Line_37 $$ PsiFile formFile = PsiFileFactory.getInstance(dir.getProject()).createFileFromText(dlg.getFormName() + GuiFormFileType.DOT_DEFAULT_EXTENSION, snapshot1)-->Line_38 $$ formFile = (PsiFile) dir.add(formFile)[ FD ]
Line_37 $$ PsiFile formFile = PsiFileFactory.getInstance(dir.getProject()).createFileFromText(dlg.getFormName() + GuiFormFileType.DOT_DEFAULT_EXTENSION, snapshot1)-->Line_41 $$ view.selectElement(formFile)[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_38 $$ formFile = (PsiFile) dir.add(formFile)[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_54 $$ Messages.showErrorDialog(project, UIDesignerBundle.message("snapshot.connection.broken"), UIDesignerBundle.message("snapshot.title"))[ FD ]
Line_9 $$ final MyDialog dlg = new MyDialog(project, client, dir)-->Line_37 $$ PsiFile formFile = PsiFileFactory.getInstance(dir.getProject()).createFileFromText(dlg.getFormName() + GuiFormFileType.DOT_DEFAULT_EXTENSION, snapshot1)[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_37 $$ PsiFile formFile = PsiFileFactory.getInstance(dir.getProject()).createFileFromText(dlg.getFormName() + GuiFormFileType.DOT_DEFAULT_EXTENSION, snapshot1)[ FD ]
Line_13 $$ final Ref<Object> result = new Ref<Object>()-->Line_24 $$ if (result.get() instanceof String) [ FD ]
Line_24 $$ if (result.get() instanceof String) -->Line_28 $$ Messages.showMessageDialog(project, UIDesignerBundle.message("snapshot.create.error", ex.getMessage()), UIDesignerBundle.message("snapshot.title"), Messages.getErrorIcon())[ CD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_11 $$ if (dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE) [ CD ]
Line_13 $$ final Ref<Object> result = new Ref<Object>()-->Line_27 $$ Exception ex = (Exception) result.get()[ FD ]
Line_11 $$ if (dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE) -->Line_14 $$ ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() [ CD ]
Line_38 $$ formFile = (PsiFile) dir.add(formFile)-->Line_40 $$ formFile.getViewProvider().getDocument().setText(snapshot1)[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_28 $$ Messages.showMessageDialog(project, UIDesignerBundle.message("snapshot.create.error", ex.getMessage()), UIDesignerBundle.message("snapshot.title"), Messages.getErrorIcon())[ FD ]
Line_38 $$ formFile = (PsiFile) dir.add(formFile)-->Line_41 $$ view.selectElement(formFile)[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_56 $$ client.dispose()[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_10 $$ dlg.show()[ CD ]
Line_11 $$ if (dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE) -->Line_30 $$ if (snapshot != null) [ CD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_4 $$ client.suspendSwing()[ FD ]
Line_11 $$ if (dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE) -->Line_13 $$ final Ref<Object> result = new Ref<Object>()[ CD ]
Line_37 $$ PsiFile formFile = PsiFileFactory.getInstance(dir.getProject()).createFileFromText(dlg.getFormName() + GuiFormFileType.DOT_DEFAULT_EXTENSION, snapshot1)-->Line_39 $$ formFile.getVirtualFile().setCharset(CharsetToolkit.UTF8_CHARSET)[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_17 $$ result.set(client.createSnapshot(id))[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_14 $$ ProgressManager.getInstance().runProcessWithProgressSynchronously(new Runnable() [ FD ]
Line_13 $$ final Ref<Object> result = new Ref<Object>()-->Line_25 $$ snapshot = (String) result.get()[ FD ]
Line_30 $$ if (snapshot != null) -->Line_32 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_13 $$ final Ref<Object> result = new Ref<Object>()-->Line_17 $$ result.set(client.createSnapshot(id))[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_52 $$ client.resumeSwing()[ FD ]
Line_38 $$ formFile = (PsiFile) dir.add(formFile)-->Line_39 $$ formFile.getVirtualFile().setCharset(CharsetToolkit.UTF8_CHARSET)[ FD ]
Line_9 $$ final MyDialog dlg = new MyDialog(project, client, dir)-->Line_11 $$ if (dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE) [ FD ]
Line_12 $$ final int id = dlg.getSelectedComponentId()-->Line_17 $$ result.set(client.createSnapshot(id))[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_41 $$ view.selectElement(formFile)[ FD ]
Line_11 $$ if (dlg.getExitCode() == DialogWrapper.OK_EXIT_CODE) -->Line_24 $$ if (result.get() instanceof String) [ CD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_56 $$ client.dispose()[ CD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_6 $$ Messages.showMessageDialog(project, UIDesignerBundle.message("snapshot.connection.error"), UIDesignerBundle.message("snapshot.title"), Messages.getInformationIcon())[ FD ]
Line_2 $$ private static void runSnapShooterSession(final SnapShotClient client, final Project project, final PsiDirectory dir, final IdeView view) -->Line_9 $$ final MyDialog dlg = new MyDialog(project, client, dir)[ CD ]
Line_37 $$ PsiFile formFile = PsiFileFactory.getInstance(dir.getProject()).createFileFromText(dlg.getFormName() + GuiFormFileType.DOT_DEFAULT_EXTENSION, snapshot1)-->Line_40 $$ formFile.getViewProvider().getDocument().setText(snapshot1)[ FD ]
Line_9 $$ final MyDialog dlg = new MyDialog(project, client, dir)-->Line_10 $$ dlg.show()[ FD ]
