Line_2 $$ public void testIndexOptionsSingleIndexNoExpandWildcards() -->Line_43 $$ assertEquals(2, results.length)[ CD ]
Line_2 $$ public void testIndexOptionsSingleIndexNoExpandWildcards() -->Line_4 $$ ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(mdBuilder).build()[ CD ]
Line_6 $$ IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictSingleIndexNoExpandForbidClosed())-->Line_35 $$ indexNameExpressionResolver.concreteIndices(context, "foofoo-closed", "foofoobar")[ FD ]
Line_6 $$ IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictSingleIndexNoExpandForbidClosed())-->Line_21 $$ indexNameExpressionResolver.concreteIndices(context, "foofoobar")[ FD ]
Line_42 $$ String[] results = indexNameExpressionResolver.concreteIndices(context, "foo", "barbaz")-->Line_44 $$ assertThat(results, arrayContainingInAnyOrder("foo", "foofoo"))[ FD ]
Line_6 $$ IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictSingleIndexNoExpandForbidClosed())-->Line_28 $$ indexNameExpressionResolver.concreteIndices(context, "foo", "foofoobar")[ FD ]
Line_2 $$ public void testIndexOptionsSingleIndexNoExpandWildcards() -->Line_42 $$ String[] results = indexNameExpressionResolver.concreteIndices(context, "foo", "barbaz")[ CD ]
Line_6 $$ IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictSingleIndexNoExpandForbidClosed())-->Line_42 $$ String[] results = indexNameExpressionResolver.concreteIndices(context, "foo", "barbaz")[ FD ]
Line_6 $$ IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictSingleIndexNoExpandForbidClosed())-->Line_7 $$ indexNameExpressionResolver.concreteIndices(context, "baz*")[ FD ]
Line_3 $$ MetaData.Builder mdBuilder = MetaData.builder().put(indexBuilder("foo").putAlias(AliasMetaData.builder("foofoobar"))).put(indexBuilder("foobar").putAlias(AliasMetaData.builder("foofoobar"))).put(indexBuilder("foofoo-closed").state(IndexMetaData.State.CLOSE)).put(indexBuilder("foofoo").putAlias(AliasMetaData.builder("barbaz")))-->Line_4 $$ ClusterState state = ClusterState.builder(new ClusterName("_name")).metaData(mdBuilder).build()[ FD ]
Line_2 $$ public void testIndexOptionsSingleIndexNoExpandWildcards() -->Line_3 $$ MetaData.Builder mdBuilder = MetaData.builder().put(indexBuilder("foo").putAlias(AliasMetaData.builder("foofoobar"))).put(indexBuilder("foobar").putAlias(AliasMetaData.builder("foofoobar"))).put(indexBuilder("foofoo-closed").state(IndexMetaData.State.CLOSE)).put(indexBuilder("foofoo").putAlias(AliasMetaData.builder("barbaz")))[ CD ]
Line_6 $$ IndexNameExpressionResolver.Context context = new IndexNameExpressionResolver.Context(state, IndicesOptions.strictSingleIndexNoExpandForbidClosed())-->Line_14 $$ indexNameExpressionResolver.concreteIndices(context, "foo", "baz*")[ FD ]
Line_2 $$ public void testIndexOptionsSingleIndexNoExpandWildcards() -->Line_44 $$ assertThat(results, arrayContainingInAnyOrder("foo", "foofoo"))[ CD ]
