Line_2 $$ public void testExtractMethods() throws Exception -->Line_42 $$ Assert.assertEquals("doStuff2-()V", proxyMethodSignatures[1])[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_33 $$ Assert.assertEquals(2, proxyMethods.size())[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_32 $$ List<Method> proxyMethods = methodsBag.proxyMethods[ CD ]
Line_32 $$ List<Method> proxyMethods = methodsBag.proxyMethods-->Line_33 $$ Assert.assertEquals(2, proxyMethods.size())[ FD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_39 $$ String[] proxyMethodSignatures = methodsBag.proxyMethodSignatures[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_40 $$ Assert.assertEquals(2, proxyMethodSignatures.length)[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_29 $$ Assert.assertEquals(2, idMethods.size())[ CD ]
Line_36 $$ List<Method> emptyMethods = methodsBag.emptyMethods-->Line_38 $$ Assert.assertEquals(TestExtractMethodsClass5.class.getMethod("doStuff4"), emptyMethods.get(0))[ FD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_28 $$ List<Method> idMethods = methodsBag.idMethods[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_34 $$ Assert.assertEquals(TestExtractMethodsClass5.class.getMethod("doStuff1"), proxyMethods.get(0))[ CD ]
Line_36 $$ List<Method> emptyMethods = methodsBag.emptyMethods-->Line_37 $$ Assert.assertEquals(1, emptyMethods.size())[ FD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_38 $$ Assert.assertEquals(TestExtractMethodsClass5.class.getMethod("doStuff4"), emptyMethods.get(0))[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_37 $$ Assert.assertEquals(1, emptyMethods.size())[ CD ]
Line_28 $$ List<Method> idMethods = methodsBag.idMethods-->Line_30 $$ Assert.assertTrue(idMethods.contains(TestExtractMethodsClass5.class.getMethod("getId1")))[ FD ]
Line_28 $$ List<Method> idMethods = methodsBag.idMethods-->Line_29 $$ Assert.assertEquals(2, idMethods.size())[ FD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_27 $$ MethodsBag methodsBag = IntrabandProxyUtil.extractMethods(TestExtractMethodsClass5.class)[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_35 $$ Assert.assertEquals(TestExtractMethodsClass5.class.getMethod("doStuff2"), proxyMethods.get(1))[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_36 $$ List<Method> emptyMethods = methodsBag.emptyMethods[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_41 $$ Assert.assertEquals("doStuff1-()V", proxyMethodSignatures[0])[ CD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_30 $$ Assert.assertTrue(idMethods.contains(TestExtractMethodsClass5.class.getMethod("getId1")))[ CD ]
Line_28 $$ List<Method> idMethods = methodsBag.idMethods-->Line_31 $$ Assert.assertTrue(idMethods.contains(TestExtractMethodsClass5.class.getMethod("getId2")))[ FD ]
Line_32 $$ List<Method> proxyMethods = methodsBag.proxyMethods-->Line_34 $$ Assert.assertEquals(TestExtractMethodsClass5.class.getMethod("doStuff1"), proxyMethods.get(0))[ FD ]
Line_2 $$ public void testExtractMethods() throws Exception -->Line_31 $$ Assert.assertTrue(idMethods.contains(TestExtractMethodsClass5.class.getMethod("getId2")))[ CD ]
Line_32 $$ List<Method> proxyMethods = methodsBag.proxyMethods-->Line_35 $$ Assert.assertEquals(TestExtractMethodsClass5.class.getMethod("doStuff2"), proxyMethods.get(1))[ FD ]
