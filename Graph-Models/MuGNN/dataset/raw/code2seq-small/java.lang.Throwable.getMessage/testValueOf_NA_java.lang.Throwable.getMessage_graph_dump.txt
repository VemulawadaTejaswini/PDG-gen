Line_2 $$ public void testValueOf() throws IOException -->Line_33 $$ final INodeFile f = INodeFile.valueOf(from, path)[ CD ]
Line_3 $$ final String path = "/testValueOf"-->Line_33 $$ final INodeFile f = INodeFile.valueOf(from, path)[ FD ]
Line_6 $$ final INode from = null-->Line_33 $$ final INodeFile f = INodeFile.valueOf(from, path)[ FD ]
Line_6 $$ final INode from = null-->Line_36 $$ INodeDirectory.valueOf(from, path)[ FD ]
Line_3 $$ final String path = "/testValueOf"-->Line_8 $$ INodeFile.valueOf(from, path)[ FD ]
Line_6 $$ final INode from = null-->Line_44 $$ INodeFile.valueOf(from, path)[ FD ]
Line_3 $$ final String path = "/testValueOf"-->Line_36 $$ INodeDirectory.valueOf(from, path)[ FD ]
Line_3 $$ final String path = "/testValueOf"-->Line_25 $$ INodeDirectory.valueOf(from, path)[ FD ]
Line_6 $$ final INode from = null-->Line_25 $$ INodeDirectory.valueOf(from, path)[ FD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_34 $$ assertTrue(f == from)[ CD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_3 $$ final String path = "/testValueOf"[ CD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_50 $$ assertTrue(d == from)[ CD ]
Line_6 $$ final INode from = null-->Line_14 $$ INodeDirectory.valueOf(from, path)[ FD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_4 $$ final short replication = 3[ CD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_32 $$ from.asFile().toUnderConstruction("client", "machine")[ CD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_6 $$ final INode from = null[ CD ]
Line_6 $$ final INode from = null-->Line_32 $$ from.asFile().toUnderConstruction("client", "machine")[ FD ]
Line_6 $$ final INode from = null-->Line_49 $$ final INodeDirectory d = INodeDirectory.valueOf(from, path)[ FD ]
Line_3 $$ final String path = "/testValueOf"-->Line_14 $$ INodeDirectory.valueOf(from, path)[ FD ]
Line_6 $$ final INode from = null-->Line_8 $$ INodeFile.valueOf(from, path)[ FD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_22 $$ final INodeFile f = INodeFile.valueOf(from, path)[ CD ]
Line_3 $$ final String path = "/testValueOf"-->Line_44 $$ INodeFile.valueOf(from, path)[ FD ]
Line_3 $$ final String path = "/testValueOf"-->Line_22 $$ final INodeFile f = INodeFile.valueOf(from, path)[ FD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_21 $$ final INode from = createINodeFile(replication, preferredBlockSize)[ CD ]
Line_4 $$ final short replication = 3-->Line_21 $$ final INode from = createINodeFile(replication, preferredBlockSize)[ FD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_23 $$ assertTrue(f == from)[ CD ]
Line_2 $$ public void testValueOf() throws IOException -->Line_49 $$ final INodeDirectory d = INodeDirectory.valueOf(from, path)[ CD ]
Line_6 $$ final INode from = null-->Line_22 $$ final INodeFile f = INodeFile.valueOf(from, path)[ FD ]
Line_3 $$ final String path = "/testValueOf"-->Line_49 $$ final INodeDirectory d = INodeDirectory.valueOf(from, path)[ FD ]
