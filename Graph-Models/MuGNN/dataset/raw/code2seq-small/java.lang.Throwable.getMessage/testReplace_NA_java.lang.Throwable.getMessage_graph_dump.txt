Line_2 $$ public void testReplace() -->Line_90 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_15 $$ Assert.assertEquals(_VALUE_2, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_70 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_101 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_49 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_27 $$ _defaultPortalCacheReplicator.reset()[ CD ]
Line_2 $$ public void testReplace() -->Line_80 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_99 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_82 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_91 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_30 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_6 $$ Assert.assertEquals(_VALUE_2, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_71 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_13 $$ _defaultPortalCacheReplicator.reset()[ CD ]
Line_2 $$ public void testReplace() -->Line_11 $$ _defaultPortalCacheReplicator.assertActionsCount(1)[ CD ]
Line_2 $$ public void testReplace() -->Line_4 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_52 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_89 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_7 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_8 $$ _defaultPortalCacheListener.assertActionsCount(1)[ CD ]
Line_2 $$ public void testReplace() -->Line_3 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_20 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_24 $$ _defaultPortalCacheListener.reset()[ CD ]
Line_2 $$ public void testReplace() -->Line_41 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_92 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_5 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.replace(_KEY_1, _VALUE_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_14 $$ Assert.assertNull(_memoryPortalCache.replace(_KEY_2, _VALUE_2, 10))[ CD ]
Line_2 $$ public void testReplace() -->Line_32 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_17 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_23 $$ _defaultPortalCacheListener.assertUpdated(_KEY_1, _VALUE_1)[ CD ]
Line_2 $$ public void testReplace() -->Line_61 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_18 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_9 $$ _defaultPortalCacheListener.assertUpdated(_KEY_1, _VALUE_2)[ CD ]
Line_2 $$ public void testReplace() -->Line_10 $$ _defaultPortalCacheListener.reset()[ CD ]
Line_2 $$ public void testReplace() -->Line_19 $$ Assert.assertTrue(_memoryPortalCache.replace(_KEY_1, _VALUE_2, _VALUE_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_22 $$ _defaultPortalCacheListener.assertActionsCount(1)[ CD ]
Line_2 $$ public void testReplace() -->Line_59 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_79 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_72 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_69 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_62 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_50 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_25 $$ _defaultPortalCacheReplicator.assertActionsCount(1)[ CD ]
Line_2 $$ public void testReplace() -->Line_26 $$ _defaultPortalCacheReplicator.assertUpdated(_KEY_1, _VALUE_1)[ CD ]
Line_2 $$ public void testReplace() -->Line_40 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_102 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_60 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_31 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_51 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_12 $$ _defaultPortalCacheReplicator.assertUpdated(_KEY_1, _VALUE_2)[ CD ]
Line_2 $$ public void testReplace() -->Line_81 $$ _defaultPortalCacheListener.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_39 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_100 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_21 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_42 $$ _defaultPortalCacheReplicator.assertActionsCount(0)[ CD ]
Line_2 $$ public void testReplace() -->Line_29 $$ Assert.assertEquals(_VALUE_1, _memoryPortalCache.get(_KEY_1))[ CD ]
Line_2 $$ public void testReplace() -->Line_16 $$ Assert.assertNull(_memoryPortalCache.get(_KEY_2))[ CD ]
Line_2 $$ public void testReplace() -->Line_28 $$ Assert.assertFalse(_memoryPortalCache.replace(_KEY_1, _VALUE_2, _VALUE_1, 10))[ CD ]
