Line_7 $$ BeanFactory beanFactory = mock(BeanFactory.class)-->Line_8 $$ given(beanFactory.getBean("entityInterceptor", org.hibernate.Interceptor.class)).willReturn(entityInterceptor, entityInterceptor2)[ FD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_11 $$ interceptor.setEntityInterceptorBeanName("entityInterceptor")[ CD ]
Line_4 $$ org.hibernate.Interceptor entityInterceptor2 = mock(org.hibernate.Interceptor.class)-->Line_8 $$ given(beanFactory.getBean("entityInterceptor", org.hibernate.Interceptor.class)).willReturn(entityInterceptor, entityInterceptor2)[ FD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_3 $$ org.hibernate.Interceptor entityInterceptor = mock(org.hibernate.Interceptor.class)[ CD ]
Line_9 $$ HibernateInterceptor interceptor = new HibernateInterceptor()-->Line_11 $$ interceptor.setEntityInterceptorBeanName("entityInterceptor")[ FD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_7 $$ BeanFactory beanFactory = mock(BeanFactory.class)[ CD ]
Line_4 $$ org.hibernate.Interceptor entityInterceptor2 = mock(org.hibernate.Interceptor.class)-->Line_6 $$ given(sessionFactory.openSession(entityInterceptor2)).willReturn(session)[ FD ]
Line_7 $$ BeanFactory beanFactory = mock(BeanFactory.class)-->Line_12 $$ interceptor.setBeanFactory(beanFactory)[ FD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_6 $$ given(sessionFactory.openSession(entityInterceptor2)).willReturn(session)[ CD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_20 $$ verify(session, times(2)).flush()[ CD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_13 $$ for (int i = 0; i < 2; i++) [ CD ]
Line_9 $$ HibernateInterceptor interceptor = new HibernateInterceptor()-->Line_15 $$ interceptor.invoke(invocation)[ FD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_21 $$ verify(session, times(2)).close()[ CD ]
Line_3 $$ org.hibernate.Interceptor entityInterceptor = mock(org.hibernate.Interceptor.class)-->Line_5 $$ given(sessionFactory.openSession(entityInterceptor)).willReturn(session)[ FD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_9 $$ HibernateInterceptor interceptor = new HibernateInterceptor()[ CD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_4 $$ org.hibernate.Interceptor entityInterceptor2 = mock(org.hibernate.Interceptor.class)[ CD ]
Line_9 $$ HibernateInterceptor interceptor = new HibernateInterceptor()-->Line_10 $$ interceptor.setSessionFactory(sessionFactory)[ FD ]
Line_3 $$ org.hibernate.Interceptor entityInterceptor = mock(org.hibernate.Interceptor.class)-->Line_8 $$ given(beanFactory.getBean("entityInterceptor", org.hibernate.Interceptor.class)).willReturn(entityInterceptor, entityInterceptor2)[ FD ]
Line_9 $$ HibernateInterceptor interceptor = new HibernateInterceptor()-->Line_12 $$ interceptor.setBeanFactory(beanFactory)[ FD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_5 $$ given(sessionFactory.openSession(entityInterceptor)).willReturn(session)[ CD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_8 $$ given(beanFactory.getBean("entityInterceptor", org.hibernate.Interceptor.class)).willReturn(entityInterceptor, entityInterceptor2)[ CD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_12 $$ interceptor.setBeanFactory(beanFactory)[ CD ]
Line_2 $$ public void testInterceptorWithEntityInterceptorBeanName() throws HibernateException -->Line_10 $$ interceptor.setSessionFactory(sessionFactory)[ CD ]
