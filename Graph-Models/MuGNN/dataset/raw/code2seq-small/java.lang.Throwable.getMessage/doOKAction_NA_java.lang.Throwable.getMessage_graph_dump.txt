Line_19 $$ List<ConversionRunner> usedRunners = new ArrayList<ConversionRunner>()-->Line_25 $$ usedRunners.add(runner)[ FD ]
Line_20 $$ for (ConversionRunner runner : myConversionRunners) -->Line_21 $$ if (runner.isConversionNeeded()) [ FD ]
Line_21 $$ if (runner.isConversionNeeded()) -->Line_23 $$ runner.process()[ CD ]
Line_21 $$ if (runner.isConversionNeeded()) -->Line_22 $$ runner.preProcess()[ CD ]
Line_3 $$ final List<File> nonexistentFiles = myContext.getNonExistingModuleFiles()-->Line_4 $$ if (!nonexistentFiles.isEmpty() && !myNonExistingFilesMessageShown) [ FD ]
Line_4 $$ if (!nonexistentFiles.isEmpty() && !myNonExistingFilesMessageShown) -->Line_5 $$ final String filesString = getFilesString(nonexistentFiles)[ CD ]
Line_4 $$ if (!nonexistentFiles.isEmpty() && !myNonExistingFilesMessageShown) -->Line_6 $$ final String message = IdeBundle.message("message.text.files.do.not.exist", filesString)[ CD ]
Line_20 $$ for (ConversionRunner runner : myConversionRunners) -->Line_25 $$ usedRunners.add(runner)[ FD ]
Line_8 $$ if (res != Messages.YES) -->Line_9 $$ super.doOKAction()[ CD ]
Line_3 $$ final List<File> nonexistentFiles = myContext.getNonExistingModuleFiles()-->Line_5 $$ final String filesString = getFilesString(nonexistentFiles)[ FD ]
Line_20 $$ for (ConversionRunner runner : myConversionRunners) -->Line_22 $$ runner.preProcess()[ FD ]
Line_19 $$ List<ConversionRunner> usedRunners = new ArrayList<ConversionRunner>()-->Line_28 $$ myContext.saveFiles(myAffectedFiles, usedRunners)[ FD ]
Line_20 $$ for (ConversionRunner runner : myConversionRunners) -->Line_24 $$ runner.postProcess()[ FD ]
Line_20 $$ for (ConversionRunner runner : myConversionRunners) -->Line_23 $$ runner.process()[ FD ]
Line_4 $$ if (!nonexistentFiles.isEmpty() && !myNonExistingFilesMessageShown) -->Line_8 $$ if (res != Messages.YES) [ CD ]
Line_21 $$ if (runner.isConversionNeeded()) -->Line_24 $$ runner.postProcess()[ CD ]
Line_4 $$ if (!nonexistentFiles.isEmpty() && !myNonExistingFilesMessageShown) -->Line_7 $$ final int res = Messages.showYesNoDialog(getContentPane(), message, IdeBundle.message("dialog.title.convert.project"), Messages.getQuestionIcon())[ CD ]
Line_2 $$ protected void doOKAction() -->Line_4 $$ if (!nonexistentFiles.isEmpty() && !myNonExistingFilesMessageShown) [ CD ]
Line_6 $$ final String message = IdeBundle.message("message.text.files.do.not.exist", filesString)-->Line_7 $$ final int res = Messages.showYesNoDialog(getContentPane(), message, IdeBundle.message("dialog.title.convert.project"), Messages.getQuestionIcon())[ FD ]
Line_15 $$ if (!checkReadOnlyFiles()) -->Line_16 $$ return[ CD ]
Line_21 $$ if (runner.isConversionNeeded()) -->Line_25 $$ usedRunners.add(runner)[ CD ]
Line_8 $$ if (res != Messages.YES) -->Line_10 $$ return[ CD ]
Line_2 $$ protected void doOKAction() -->Line_3 $$ final List<File> nonexistentFiles = myContext.getNonExistingModuleFiles()[ CD ]
Line_7 $$ final int res = Messages.showYesNoDialog(getContentPane(), message, IdeBundle.message("dialog.title.convert.project"), Messages.getQuestionIcon())-->Line_8 $$ if (res != Messages.YES) [ FD ]
Line_5 $$ final String filesString = getFilesString(nonexistentFiles)-->Line_6 $$ final String message = IdeBundle.message("message.text.files.do.not.exist", filesString)[ FD ]
