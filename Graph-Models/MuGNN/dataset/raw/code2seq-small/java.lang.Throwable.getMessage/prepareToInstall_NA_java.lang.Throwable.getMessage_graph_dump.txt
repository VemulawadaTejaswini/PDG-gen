Line_24 $$ if (myFile == null) -->Line_34 $$ return false[ CD ]
Line_43 $$ if (descriptor != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) -->Line_45 $$ return false[ CD ]
Line_7 $$ if (!Boolean.getBoolean(StartupActionScriptManager.STARTUP_WIZARD_MODE) && PluginManager.isPluginInstalled(PluginId.getId(myPluginId))) -->Line_8 $$ descriptor = PluginManager.getPlugin(PluginId.getId(myPluginId))[ CD ]
Line_7 $$ if (!Boolean.getBoolean(StartupActionScriptManager.STARTUP_WIZARD_MODE) && PluginManager.isPluginInstalled(PluginId.getId(myPluginId))) -->Line_9 $$ LOG.assertTrue(descriptor != null)[ CD ]
Line_7 $$ if (!Boolean.getBoolean(StartupActionScriptManager.STARTUP_WIZARD_MODE) && PluginManager.isPluginInstalled(PluginId.getId(myPluginId))) -->Line_10 $$ if (myPluginVersion != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) [ CD ]
Line_37 $$ if (actualDescriptor != null) -->Line_47 $$ setDescriptor(actualDescriptor)[ CD ]
Line_28 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_30 $$ Messages.showErrorDialog(text, title)[ CD ]
Line_8 $$ descriptor = PluginManager.getPlugin(PluginId.getId(myPluginId))-->Line_14 $$ myOldFile = descriptor.getPath()[ FD ]
Line_48 $$ if (PluginManagerCore.isIncompatible(actualDescriptor, myBuildNumber)) -->Line_50 $$ return false[ CD ]
Line_39 $$ if (state != null && state.wasUpdated(actualDescriptor.getPluginId())) -->Line_40 $$ return false[ CD ]
Line_8 $$ descriptor = PluginManager.getPlugin(PluginId.getId(myPluginId))-->Line_43 $$ if (descriptor != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) [ FD ]
Line_26 $$ final String text = IdeBundle.message("error.plugin.was.not.installed", getPluginName(), errorMessage)-->Line_30 $$ Messages.showErrorDialog(text, title)[ FD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_37 $$ if (actualDescriptor != null) [ CD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_36 $$ IdeaPluginDescriptorImpl actualDescriptor = loadDescriptionFromJar(myFile)[ CD ]
Line_7 $$ if (!Boolean.getBoolean(StartupActionScriptManager.STARTUP_WIZARD_MODE) && PluginManager.isPluginInstalled(PluginId.getId(myPluginId))) -->Line_14 $$ myOldFile = descriptor.getPath()[ CD ]
Line_6 $$ IdeaPluginDescriptor descriptor = null-->Line_10 $$ if (myPluginVersion != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) [ FD ]
Line_43 $$ if (descriptor != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) -->Line_44 $$ LOG.info("Plugin " + myPluginId + ": current version (max) " + myPluginVersion)[ CD ]
Line_25 $$ if (ApplicationManager.getApplication() != null) -->Line_28 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_24 $$ if (myFile == null) [ CD ]
Line_37 $$ if (actualDescriptor != null) -->Line_48 $$ if (PluginManagerCore.isIncompatible(actualDescriptor, myBuildNumber)) [ CD ]
Line_25 $$ if (ApplicationManager.getApplication() != null) -->Line_27 $$ final String title = IdeBundle.message("title.failed.to.download")[ CD ]
Line_6 $$ IdeaPluginDescriptor descriptor = null-->Line_8 $$ descriptor = PluginManager.getPlugin(PluginId.getId(myPluginId))[ FD ]
Line_8 $$ descriptor = PluginManager.getPlugin(PluginId.getId(myPluginId))-->Line_10 $$ if (myPluginVersion != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) [ FD ]
Line_10 $$ if (myPluginVersion != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) -->Line_11 $$ LOG.info("Plugin " + myPluginId + ": current version (max) " + myPluginVersion)[ CD ]
Line_25 $$ if (ApplicationManager.getApplication() != null) -->Line_26 $$ final String text = IdeBundle.message("error.plugin.was.not.installed", getPluginName(), errorMessage)[ CD ]
Line_10 $$ if (myPluginVersion != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) -->Line_12 $$ return false[ CD ]
Line_16 $$ String errorMessage = IdeBundle.message("unknown.error")-->Line_22 $$ errorMessage = ex.getMessage()[ FD ]
Line_6 $$ IdeaPluginDescriptor descriptor = null-->Line_14 $$ myOldFile = descriptor.getPath()[ FD ]
Line_24 $$ if (myFile == null) -->Line_25 $$ if (ApplicationManager.getApplication() != null) [ CD ]
Line_48 $$ if (PluginManagerCore.isIncompatible(actualDescriptor, myBuildNumber)) -->Line_49 $$ LOG.info("Plugin " + myPluginId + " is incompatible with current installation " + "(since:" + actualDescriptor.getSinceBuild() + " until:" + actualDescriptor.getUntilBuild() + ")")[ CD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_16 $$ String errorMessage = IdeBundle.message("unknown.error")[ CD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_53 $$ return true[ CD ]
Line_22 $$ errorMessage = ex.getMessage()-->Line_26 $$ final String text = IdeBundle.message("error.plugin.was.not.installed", getPluginName(), errorMessage)[ FD ]
Line_37 $$ if (actualDescriptor != null) -->Line_42 $$ myPluginVersion = actualDescriptor.getVersion()[ CD ]
Line_37 $$ if (actualDescriptor != null) -->Line_38 $$ InstalledPluginsState state = InstalledPluginsState.getInstanceIfLoaded()[ CD ]
Line_37 $$ if (actualDescriptor != null) -->Line_39 $$ if (state != null && state.wasUpdated(actualDescriptor.getPluginId())) [ CD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_7 $$ if (!Boolean.getBoolean(StartupActionScriptManager.STARTUP_WIZARD_MODE) && PluginManager.isPluginInstalled(PluginId.getId(myPluginId))) [ CD ]
Line_3 $$ if (myFile != null) -->Line_4 $$ return true[ CD ]
Line_27 $$ final String title = IdeBundle.message("title.failed.to.download")-->Line_30 $$ Messages.showErrorDialog(text, title)[ FD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_6 $$ IdeaPluginDescriptor descriptor = null[ CD ]
Line_6 $$ IdeaPluginDescriptor descriptor = null-->Line_43 $$ if (descriptor != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) [ FD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_3 $$ if (myFile != null) [ CD ]
Line_2 $$ public boolean prepareToInstall(@NotNull ProgressIndicator indicator) throws IOException -->Line_18 $$ myFile = downloadPlugin(indicator)[ FD ]
Line_37 $$ if (actualDescriptor != null) -->Line_43 $$ if (descriptor != null && compareVersionsSkipBrokenAndIncompatible(descriptor, myPluginVersion) <= 0) [ CD ]
Line_16 $$ String errorMessage = IdeBundle.message("unknown.error")-->Line_26 $$ final String text = IdeBundle.message("error.plugin.was.not.installed", getPluginName(), errorMessage)[ FD ]
