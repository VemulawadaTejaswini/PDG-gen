Line_4 $$ if (value instanceof Exception) -->Line_5 $$ final Exception exception = (Exception) value[ CD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_3 $$ final Object value = infos[0][ CD ]
Line_13 $$ final int argumentCount = ((Integer) infos[1]).intValue()-->Line_18 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.too.few.arguments", argumentCount, validators.length)[ FD ]
Line_20 $$ final PsiType argumentType = (PsiType) infos[2]-->Line_22 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.arguments.do.not.match.type", argumentType.getPresentableText(), validator.getSpecifier())[ FD ]
Line_4 $$ if (value instanceof Exception) -->Line_10 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.malformed")[ CD ]
Line_4 $$ if (value instanceof Exception) -->Line_6 $$ final String message = exception.getMessage()[ CD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_12 $$ final FormatDecode.Validator[] validators = (FormatDecode.Validator[]) value[ CD ]
Line_5 $$ final Exception exception = (Exception) value-->Line_6 $$ final String message = exception.getMessage()[ FD ]
Line_13 $$ final int argumentCount = ((Integer) infos[1]).intValue()-->Line_15 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.too.many.arguments", argumentCount, validators.length)[ FD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_22 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.arguments.do.not.match.type", argumentType.getPresentableText(), validator.getSpecifier())[ CD ]
Line_17 $$ if (validators.length > argumentCount) -->Line_18 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.too.few.arguments", argumentCount, validators.length)[ CD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_13 $$ final int argumentCount = ((Integer) infos[1]).intValue()[ CD ]
Line_13 $$ final int argumentCount = ((Integer) infos[1]).intValue()-->Line_17 $$ if (validators.length > argumentCount) [ FD ]
Line_6 $$ final String message = exception.getMessage()-->Line_7 $$ if (message != null) [ FD ]
Line_3 $$ final Object value = infos[0]-->Line_4 $$ if (value instanceof Exception) [ FD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_21 $$ final FormatDecode.Validator validator = (FormatDecode.Validator) infos[3][ CD ]
Line_21 $$ final FormatDecode.Validator validator = (FormatDecode.Validator) infos[3]-->Line_22 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.arguments.do.not.match.type", argumentType.getPresentableText(), validator.getSpecifier())[ FD ]
Line_7 $$ if (message != null) -->Line_8 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.illegal", message)[ CD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_14 $$ if (validators.length < argumentCount) [ CD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_17 $$ if (validators.length > argumentCount) [ CD ]
Line_14 $$ if (validators.length < argumentCount) -->Line_15 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.too.many.arguments", argumentCount, validators.length)[ CD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_20 $$ final PsiType argumentType = (PsiType) infos[2][ CD ]
Line_2 $$ public String buildErrorString(Object... infos) -->Line_4 $$ if (value instanceof Exception) [ CD ]
Line_6 $$ final String message = exception.getMessage()-->Line_8 $$ return InspectionGadgetsBundle.message("malformed.format.string.problem.descriptor.illegal", message)[ FD ]
Line_4 $$ if (value instanceof Exception) -->Line_7 $$ if (message != null) [ CD ]
Line_13 $$ final int argumentCount = ((Integer) infos[1]).intValue()-->Line_14 $$ if (validators.length < argumentCount) [ FD ]
