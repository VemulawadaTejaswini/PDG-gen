Line_14 $$ expectedExceptionPath = localFs.makeQualified(expectedExceptionPath)-->Line_16 $$ Assert.assertEquals("Input path does not exist: " + expectedExceptionPath.toString(), e.getMessage())[ FD ]
Line_2 $$ public void testListStatusErrorOnNonExistantDir() throws IOException -->Line_4 $$ conf.setInt(FileInputFormat.LIST_STATUS_NUM_THREADS, numThreads)[ CD ]
Line_2 $$ public void testListStatusErrorOnNonExistantDir() throws IOException -->Line_6 $$ JobConf jobConf = new JobConf(conf)[ CD ]
Line_2 $$ public void testListStatusErrorOnNonExistantDir() throws IOException -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_6 $$ JobConf jobConf = new JobConf(conf)-->Line_10 $$ fif.listStatus(jobConf)[ FD ]
Line_13 $$ Path expectedExceptionPath = new Path(TEST_ROOT_DIR, "input2")-->Line_14 $$ expectedExceptionPath = localFs.makeQualified(expectedExceptionPath)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_5 $$ org.apache.hadoop.mapreduce.lib.input.TestFileInputFormat.configureTestErrorOnNonExistantDir(conf, localFs)[ FD ]
Line_2 $$ public void testListStatusErrorOnNonExistantDir() throws IOException -->Line_8 $$ fif.configure(jobConf)[ CD ]
Line_7 $$ TextInputFormat fif = new TextInputFormat()-->Line_10 $$ fif.listStatus(jobConf)[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_4 $$ conf.setInt(FileInputFormat.LIST_STATUS_NUM_THREADS, numThreads)[ FD ]
Line_13 $$ Path expectedExceptionPath = new Path(TEST_ROOT_DIR, "input2")-->Line_16 $$ Assert.assertEquals("Input path does not exist: " + expectedExceptionPath.toString(), e.getMessage())[ FD ]
Line_2 $$ public void testListStatusErrorOnNonExistantDir() throws IOException -->Line_5 $$ org.apache.hadoop.mapreduce.lib.input.TestFileInputFormat.configureTestErrorOnNonExistantDir(conf, localFs)[ CD ]
Line_6 $$ JobConf jobConf = new JobConf(conf)-->Line_8 $$ fif.configure(jobConf)[ FD ]
Line_2 $$ public void testListStatusErrorOnNonExistantDir() throws IOException -->Line_7 $$ TextInputFormat fif = new TextInputFormat()[ CD ]
Line_7 $$ TextInputFormat fif = new TextInputFormat()-->Line_8 $$ fif.configure(jobConf)[ FD ]
