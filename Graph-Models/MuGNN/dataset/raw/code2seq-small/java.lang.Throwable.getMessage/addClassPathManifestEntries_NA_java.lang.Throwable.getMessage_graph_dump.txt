Line_5 $$ for (String url : StringUtils.delimitedListToStringArray(javaClassPathProperty, System.getProperty("path.separator"))) -->Line_7 $$ if (url.endsWith(ResourceUtils.JAR_FILE_EXTENSION)) [ FD ]
Line_7 $$ if (url.endsWith(ResourceUtils.JAR_FILE_EXTENSION)) -->Line_9 $$ if (jarResource.exists()) [ CD ]
Line_7 $$ if (url.endsWith(ResourceUtils.JAR_FILE_EXTENSION)) -->Line_8 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + ResourceUtils.FILE_URL_PREFIX + url + ResourceUtils.JAR_URL_SEPARATOR)[ CD ]
Line_8 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + ResourceUtils.FILE_URL_PREFIX + url + ResourceUtils.JAR_URL_SEPARATOR)-->Line_9 $$ if (jarResource.exists()) [ FD ]
Line_4 $$ String javaClassPathProperty = System.getProperty("java.class.path")-->Line_5 $$ for (String url : StringUtils.delimitedListToStringArray(javaClassPathProperty, System.getProperty("path.separator"))) [ FD ]
Line_2 $$ protected void addClassPathManifestEntries(Set<Resource> result) -->Line_10 $$ result.add(jarResource)[ FD ]
Line_14 $$ if (logger.isDebugEnabled()) -->Line_15 $$ logger.debug("Cannot search for matching files underneath [" + url + "] because it cannot be converted to a valid 'jar:' URL: " + ex.getMessage())[ CD ]
Line_9 $$ if (jarResource.exists()) -->Line_10 $$ result.add(jarResource)[ CD ]
Line_8 $$ UrlResource jarResource = new UrlResource(ResourceUtils.JAR_URL_PREFIX + ResourceUtils.FILE_URL_PREFIX + url + ResourceUtils.JAR_URL_SEPARATOR)-->Line_10 $$ result.add(jarResource)[ FD ]
Line_20 $$ if (logger.isDebugEnabled()) -->Line_21 $$ logger.debug("Failed to evaluate 'java.class.path' manifest entries: " + ex)[ CD ]
