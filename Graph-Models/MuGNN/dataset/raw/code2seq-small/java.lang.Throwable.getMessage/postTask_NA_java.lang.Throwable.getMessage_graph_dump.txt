Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "step-sources")-->Line_4 $$ setHeaders(request, "application/json")[ FD ]
Line_2 $$ public static void postTask(final Project project, @NotNull final Task task, final int lessonId) -->Line_5 $$ final Gson gson = new GsonBuilder().setPrettyPrinting().excludeFieldsWithoutExposeAnnotation().create()[ CD ]
Line_11 $$ final CloseableHttpResponse response = ourClient.execute(request)-->Line_14 $$ final HttpEntity responseEntity = response.getEntity()[ FD ]
Line_5 $$ final Gson gson = new GsonBuilder().setPrettyPrinting().excludeFieldsWithoutExposeAnnotation().create()-->Line_8 $$ final String requestBody = gson.toJson(new StepSourceWrapper(project, task, lessonId))[ FD ]
Line_13 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) -->Line_15 $$ final String responseString = responseEntity != null ? EntityUtils.toString(responseEntity) : ""[ CD ]
Line_2 $$ public static void postTask(final Project project, @NotNull final Task task, final int lessonId) -->Line_4 $$ setHeaders(request, "application/json")[ CD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_8 $$ final String requestBody = gson.toJson(new StepSourceWrapper(project, task, lessonId))[ CD ]
Line_11 $$ final CloseableHttpResponse response = ourClient.execute(request)-->Line_12 $$ final StatusLine line = response.getStatusLine()[ FD ]
Line_14 $$ final HttpEntity responseEntity = response.getEntity()-->Line_15 $$ final String responseString = responseEntity != null ? EntityUtils.toString(responseEntity) : ""[ FD ]
Line_2 $$ public static void postTask(final Project project, @NotNull final Task task, final int lessonId) -->Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_9 $$ request.setEntity(new StringEntity(requestBody, ContentType.APPLICATION_JSON))[ CD ]
Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "step-sources")-->Line_11 $$ final CloseableHttpResponse response = ourClient.execute(request)[ FD ]
Line_13 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) -->Line_14 $$ final HttpEntity responseEntity = response.getEntity()[ CD ]
Line_2 $$ public static void postTask(final Project project, @NotNull final Task task, final int lessonId) -->Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "step-sources")[ CD ]
Line_13 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) -->Line_16 $$ LOG.error("Failed to push " + responseString)[ CD ]
Line_12 $$ final StatusLine line = response.getStatusLine()-->Line_13 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) [ FD ]
Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "step-sources")-->Line_9 $$ request.setEntity(new StringEntity(requestBody, ContentType.APPLICATION_JSON))[ FD ]
