Line_10 $$ rte.retryTask(new Callable<Boolean>() -->Line_15 $$ if (result.hasDefined("outcome") && "success".equals(result.get("outcome").asString())) [ CD ]
Line_10 $$ rte.retryTask(new Callable<Boolean>() -->Line_14 $$ ModelNode result = client.execute(new OperationBuilder(readOp).build())[ CD ]
Line_14 $$ ModelNode result = client.execute(new OperationBuilder(readOp).build())-->Line_15 $$ if (result.hasDefined("outcome") && "success".equals(result.get("outcome").asString())) [ FD ]
Line_9 $$ RetryTaskExecutor<Boolean> rte = new RetryTaskExecutor()-->Line_10 $$ rte.retryTask(new Callable<Boolean>() [ FD ]
Line_10 $$ rte.retryTask(new Callable<Boolean>() -->Line_13 $$ readOp.get("name").set("server-state")[ CD ]
Line_2 $$ public static void restartServer(final ModelControllerClient client) -->Line_14 $$ ModelNode result = client.execute(new OperationBuilder(readOp).build())[ FD ]
Line_2 $$ public static void restartServer(final ModelControllerClient client) -->Line_4 $$ applyUpdates(Arrays.asList(createOpNode(null, "reload")), client)[ FD ]
Line_14 $$ ModelNode result = client.execute(new OperationBuilder(readOp).build())-->Line_16 $$ if ((result.hasDefined("result")) && (result.get("result").asString().equals("running")))[ FD ]
Line_10 $$ rte.retryTask(new Callable<Boolean>() -->Line_12 $$ ModelNode readOp = createOpNode(null, READ_ATTRIBUTE_OPERATION)[ CD ]
Line_16 $$ if ((result.hasDefined("result")) && (result.get("result").asString().equals("running")))-->Line_17 $$ return true[ CD ]
Line_15 $$ if (result.hasDefined("outcome") && "success".equals(result.get("outcome").asString())) -->Line_16 $$ if ((result.hasDefined("result")) && (result.get("result").asString().equals("running")))[ CD ]
Line_2 $$ public static void restartServer(final ModelControllerClient client) -->Line_26 $$ log.info("Server is up.")[ CD ]
Line_10 $$ rte.retryTask(new Callable<Boolean>() -->Line_19 $$ log.info("Server is down.")[ CD ]
Line_12 $$ ModelNode readOp = createOpNode(null, READ_ATTRIBUTE_OPERATION)-->Line_13 $$ readOp.get("name").set("server-state")[ FD ]
