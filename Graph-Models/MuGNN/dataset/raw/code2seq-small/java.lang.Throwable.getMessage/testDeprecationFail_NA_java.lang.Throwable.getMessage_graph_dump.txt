Line_2 $$ public void testDeprecationFail() throws IOException -->Line_20 $$ objectParser.parse(parser, s)[ CD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_7 $$ ObjectParser<TestStruct, Void> objectParser = new ObjectParser("foo")[ CD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_18 $$ parser = XContentType.JSON.xContent().createParser("[ CD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_8 $$ TestStruct s = new TestStruct()[ CD ]
Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("-->Line_19 $$ parser.setParseFieldMatcher(ParseFieldMatcher.EMPTY)[ FD ]
Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("-->Line_20 $$ objectParser.parse(parser, s)[ FD ]
Line_7 $$ ObjectParser<TestStruct, Void> objectParser = new ObjectParser("foo")-->Line_12 $$ objectParser.parse(parser, s)[ FD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_19 $$ parser.setParseFieldMatcher(ParseFieldMatcher.EMPTY)[ CD ]
Line_18 $$ parser = XContentType.JSON.xContent().createParser("-->Line_20 $$ objectParser.parse(parser, s)[ FD ]
Line_18 $$ parser = XContentType.JSON.xContent().createParser("-->Line_19 $$ parser.setParseFieldMatcher(ParseFieldMatcher.EMPTY)[ FD ]
Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("-->Line_10 $$ parser.setParseFieldMatcher(ParseFieldMatcher.STRICT)[ FD ]
Line_7 $$ ObjectParser<TestStruct, Void> objectParser = new ObjectParser("foo")-->Line_9 $$ objectParser.declareField(( i,  v,  c) -> v.test = i.text(), new ParseField("test", "old_test"), ObjectParser.ValueType.STRING)[ FD ]
Line_7 $$ ObjectParser<TestStruct, Void> objectParser = new ObjectParser("foo")-->Line_20 $$ objectParser.parse(parser, s)[ FD ]
Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("-->Line_12 $$ objectParser.parse(parser, s)[ FD ]
Line_8 $$ TestStruct s = new TestStruct()-->Line_12 $$ objectParser.parse(parser, s)[ FD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_9 $$ objectParser.declareField(( i,  v,  c) -> v.test = i.text(), new ParseField("test", "old_test"), ObjectParser.ValueType.STRING)[ CD ]
Line_8 $$ TestStruct s = new TestStruct()-->Line_20 $$ objectParser.parse(parser, s)[ FD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_21 $$ assertEquals("foo", s.test)[ CD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("[ CD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_10 $$ parser.setParseFieldMatcher(ParseFieldMatcher.STRICT)[ CD ]
Line_2 $$ public void testDeprecationFail() throws IOException -->Line_17 $$ assertNull(s.test)[ CD ]
Line_3 $$ XContentParser parser = XContentType.JSON.xContent().createParser("-->Line_18 $$ parser = XContentType.JSON.xContent().createParser("[ FD ]
