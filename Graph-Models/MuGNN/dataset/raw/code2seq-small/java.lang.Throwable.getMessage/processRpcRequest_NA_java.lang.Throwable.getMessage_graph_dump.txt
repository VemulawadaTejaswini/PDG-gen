Line_18 $$ Call call = new Call(header.getCallId(), header.getRetryCount(), rpcRequest, this, ProtoUtil.convert(header.getRpcKind()), header.getClientId().toByteArray())-->Line_19 $$ callQueue.put(call)[ FD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_18 $$ Call call = new Call(header.getCallId(), header.getRetryCount(), rpcRequest, this, ProtoUtil.convert(header.getRpcKind()), header.getClientId().toByteArray())[ CD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_3 $$ Class<? extends Writable> rpcRequestClass = getRpcRequestWrapper(header.getRpcKind())[ FD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_6 $$ final String err = "Unknown rpc kind in rpc header" + header.getRpcKind()[ FD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_12 $$ rpcRequest.readFields(dis)[ FD ]
Line_9 $$ Writable rpcRequest-->Line_12 $$ rpcRequest.readFields(dis)[ FD ]
Line_3 $$ Class<? extends Writable> rpcRequestClass = getRpcRequestWrapper(header.getRpcKind())-->Line_4 $$ if (rpcRequestClass == null) [ FD ]
Line_4 $$ if (rpcRequestClass == null) -->Line_5 $$ LOG.warn("Unknown rpc kind " + header.getRpcKind() + " from client " + getHostAddress())[ CD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_4 $$ if (rpcRequestClass == null) [ CD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_20 $$ incRpcCount()[ CD ]
Line_3 $$ Class<? extends Writable> rpcRequestClass = getRpcRequestWrapper(header.getRpcKind())-->Line_11 $$ rpcRequest = ReflectionUtils.newInstance(rpcRequestClass, conf)[ FD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_9 $$ Writable rpcRequest[ CD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_5 $$ LOG.warn("Unknown rpc kind " + header.getRpcKind() + " from client " + getHostAddress())[ FD ]
Line_9 $$ Writable rpcRequest-->Line_11 $$ rpcRequest = ReflectionUtils.newInstance(rpcRequestClass, conf)[ FD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_19 $$ callQueue.put(call)[ CD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_3 $$ Class<? extends Writable> rpcRequestClass = getRpcRequestWrapper(header.getRpcKind())[ CD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_18 $$ Call call = new Call(header.getCallId(), header.getRetryCount(), rpcRequest, this, ProtoUtil.convert(header.getRpcKind()), header.getClientId().toByteArray())[ FD ]
Line_11 $$ rpcRequest = ReflectionUtils.newInstance(rpcRequestClass, conf)-->Line_12 $$ rpcRequest.readFields(dis)[ FD ]
Line_2 $$ private void processRpcRequest(RpcRequestHeaderProto header, DataInputStream dis) throws WrappedRpcServerException, InterruptedException -->Line_14 $$ LOG.warn("Unable to read call parameters for client " + getHostAddress() + "on connection protocol " + this.protocolName + " for rpcKind " + header.getRpcKind(), t)[ FD ]
Line_4 $$ if (rpcRequestClass == null) -->Line_6 $$ final String err = "Unknown rpc kind in rpc header" + header.getRpcKind()[ CD ]
