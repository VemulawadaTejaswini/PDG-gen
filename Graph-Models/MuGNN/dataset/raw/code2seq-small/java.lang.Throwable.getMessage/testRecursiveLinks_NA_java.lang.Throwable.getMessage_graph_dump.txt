Line_5 $$ Path link2 = new Path(testBaseDir1() + "/link2")-->Line_6 $$ wrapper.createSymlink(link1, link2, false)[ FD ]
Line_4 $$ Path link1 = new Path(testBaseDir1() + "/link1")-->Line_13 $$ assertEquals("Possible cyclic loop while following symbolic link " + link1.toString(), x.getMessage())[ FD ]
Line_2 $$ public void testRecursiveLinks() throws IOException -->Line_6 $$ wrapper.createSymlink(link1, link2, false)[ CD ]
Line_4 $$ Path link1 = new Path(testBaseDir1() + "/link1")-->Line_6 $$ wrapper.createSymlink(link1, link2, false)[ FD ]
Line_4 $$ Path link1 = new Path(testBaseDir1() + "/link1")-->Line_7 $$ wrapper.createSymlink(link2, link1, false)[ FD ]
Line_5 $$ Path link2 = new Path(testBaseDir1() + "/link2")-->Line_7 $$ wrapper.createSymlink(link2, link1, false)[ FD ]
Line_4 $$ Path link1 = new Path(testBaseDir1() + "/link1")-->Line_9 $$ readFile(link1)[ FD ]
Line_2 $$ public void testRecursiveLinks() throws IOException -->Line_7 $$ wrapper.createSymlink(link2, link1, false)[ CD ]
Line_2 $$ public void testRecursiveLinks() throws IOException -->Line_5 $$ Path link2 = new Path(testBaseDir1() + "/link2")[ CD ]
Line_2 $$ public void testRecursiveLinks() throws IOException -->Line_4 $$ Path link1 = new Path(testBaseDir1() + "/link1")[ CD ]
