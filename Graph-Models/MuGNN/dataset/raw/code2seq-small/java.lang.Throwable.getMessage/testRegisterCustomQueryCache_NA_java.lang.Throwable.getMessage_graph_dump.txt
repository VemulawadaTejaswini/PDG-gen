Line_2 $$ public void testRegisterCustomQueryCache() throws IOException -->Line_5 $$ module.registerQueryCache("custom", ( a,  b) -> new CustomQueryCache())[ CD ]
Line_4 $$ IndexModule module = new IndexModule(IndexSettingsModule.newIndexSettings(new Index("foo"), indexSettings), null, new AnalysisRegistry(null, environment))-->Line_12 $$ IndexService indexService = module.newIndexService(nodeEnvironment, deleter, nodeServicesProvider, mapperRegistry)[ FD ]
Line_2 $$ public void testRegisterCustomQueryCache() throws IOException -->Line_4 $$ IndexModule module = new IndexModule(IndexSettingsModule.newIndexSettings(new Index("foo"), indexSettings), null, new AnalysisRegistry(null, environment))[ CD ]
Line_4 $$ IndexModule module = new IndexModule(IndexSettingsModule.newIndexSettings(new Index("foo"), indexSettings), null, new AnalysisRegistry(null, environment))-->Line_7 $$ module.registerQueryCache("custom", ( a,  b) -> new CustomQueryCache())[ FD ]
Line_2 $$ public void testRegisterCustomQueryCache() throws IOException -->Line_13 $$ assertTrue(indexService.cache().query() instanceof CustomQueryCache)[ CD ]
Line_12 $$ IndexService indexService = module.newIndexService(nodeEnvironment, deleter, nodeServicesProvider, mapperRegistry)-->Line_14 $$ indexService.close("simon says", false)[ FD ]
Line_4 $$ IndexModule module = new IndexModule(IndexSettingsModule.newIndexSettings(new Index("foo"), indexSettings), null, new AnalysisRegistry(null, environment))-->Line_5 $$ module.registerQueryCache("custom", ( a,  b) -> new CustomQueryCache())[ FD ]
Line_2 $$ public void testRegisterCustomQueryCache() throws IOException -->Line_12 $$ IndexService indexService = module.newIndexService(nodeEnvironment, deleter, nodeServicesProvider, mapperRegistry)[ CD ]
Line_2 $$ public void testRegisterCustomQueryCache() throws IOException -->Line_3 $$ Settings indexSettings = Settings.settingsBuilder().put(IndexModule.QUERY_CACHE_TYPE, "custom").put("path.home", createTempDir().toString()).put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build()[ CD ]
Line_2 $$ public void testRegisterCustomQueryCache() throws IOException -->Line_14 $$ indexService.close("simon says", false)[ CD ]
Line_12 $$ IndexService indexService = module.newIndexService(nodeEnvironment, deleter, nodeServicesProvider, mapperRegistry)-->Line_13 $$ assertTrue(indexService.cache().query() instanceof CustomQueryCache)[ FD ]
Line_3 $$ Settings indexSettings = Settings.settingsBuilder().put(IndexModule.QUERY_CACHE_TYPE, "custom").put("path.home", createTempDir().toString()).put(IndexMetaData.SETTING_VERSION_CREATED, Version.CURRENT).build()-->Line_4 $$ IndexModule module = new IndexModule(IndexSettingsModule.newIndexSettings(new Index("foo"), indexSettings), null, new AnalysisRegistry(null, environment))[ FD ]
