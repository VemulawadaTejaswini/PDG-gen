Line_3 $$ Map<String, String> props = new HashMap()-->Line_5 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD, "10")[ FD ]
Line_2 $$ public void testValidSetting() -->Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)[ CD ]
Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)-->Line_32 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold * 2)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_12 $$ Assert.assertEquals(10, bufferedIncrementConfiguration.getStandbyQueueThreshold())[ CD ]
Line_2 $$ public void testValidSetting() -->Line_7 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME, "30")[ CD ]
Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)-->Line_29 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)-->Line_31 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_33 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_7 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME, "30")[ FD ]
Line_2 $$ public void testValidSetting() -->Line_9 $$ PropsUtilAdvice.setProps(props)[ CD ]
Line_2 $$ public void testValidSetting() -->Line_33 $$ Assert.assertEquals(0, standbyTime)[ CD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_23 $$ long standbyTimeUpperLimit = bufferedIncrementConfiguration.getStandbyTimeUpperLimit()[ FD ]
Line_2 $$ public void testValidSetting() -->Line_4 $$ props.put(PropsKeys.BUFFERED_INCREMENT_ENABLED, "false")[ CD ]
Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)-->Line_32 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold * 2)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_22 $$ int standbyQueueThreshold = bufferedIncrementConfiguration.getStandbyQueueThreshold()[ CD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_31 $$ Assert.assertEquals(0, standbyTime)[ CD ]
Line_2 $$ public void testValidSetting() -->Line_23 $$ long standbyTimeUpperLimit = bufferedIncrementConfiguration.getStandbyTimeUpperLimit()[ CD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_27 $$ Assert.assertEquals(standbyTimeUpperLimit * 1000 / 2, standbyTime)[ CD ]
Line_2 $$ public void testValidSetting() -->Line_32 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold * 2)[ CD ]
Line_32 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold * 2)-->Line_33 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)[ CD ]
Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)-->Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_15 $$ Assert.assertEquals(40, bufferedIncrementConfiguration.getThreadpoolMaxSize())[ CD ]
Line_2 $$ public void testValidSetting() -->Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)[ CD ]
Line_22 $$ int standbyQueueThreshold = bufferedIncrementConfiguration.getStandbyQueueThreshold()-->Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_16 $$ Assert.assertTrue(bufferedIncrementConfiguration.isStandbyEnabled())[ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_4 $$ props.put(PropsKeys.BUFFERED_INCREMENT_ENABLED, "false")[ FD ]
Line_2 $$ public void testValidSetting() -->Line_14 $$ Assert.assertEquals(30, bufferedIncrementConfiguration.getThreadpoolKeepAliveTime())[ CD ]
Line_2 $$ public void testValidSetting() -->Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)[ CD ]
Line_2 $$ public void testValidSetting() -->Line_29 $$ Assert.assertEquals(0, standbyTime)[ CD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_27 $$ Assert.assertEquals(standbyTimeUpperLimit * 1000 / 2, standbyTime)[ FD ]
Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)-->Line_31 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_18 $$ bufferedIncrementConfiguration.calculateStandbyTime(-1)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)[ CD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_14 $$ Assert.assertEquals(30, bufferedIncrementConfiguration.getThreadpoolKeepAliveTime())[ FD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_6 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT, "20")[ FD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)[ FD ]
Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)-->Line_33 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_8 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE, "40")[ CD ]
Line_2 $$ public void testValidSetting() -->Line_25 $$ Assert.assertEquals(standbyTimeUpperLimit * 1000, standbyTime)[ CD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_15 $$ Assert.assertEquals(40, bufferedIncrementConfiguration.getThreadpoolMaxSize())[ FD ]
Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)-->Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)[ FD ]
Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)-->Line_29 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_16 $$ Assert.assertTrue(bufferedIncrementConfiguration.isStandbyEnabled())[ FD ]
Line_2 $$ public void testValidSetting() -->Line_5 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD, "10")[ CD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_12 $$ Assert.assertEquals(10, bufferedIncrementConfiguration.getStandbyQueueThreshold())[ FD ]
Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)-->Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)[ FD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_31 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)-->Line_32 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold * 2)[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_32 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold * 2)[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_22 $$ int standbyQueueThreshold = bufferedIncrementConfiguration.getStandbyQueueThreshold()[ FD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)[ FD ]
Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)-->Line_33 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_3 $$ Map<String, String> props = new HashMap()[ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_8 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE, "40")[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_11 $$ Assert.assertFalse(bufferedIncrementConfiguration.isEnabled())[ FD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_25 $$ Assert.assertEquals(standbyTimeUpperLimit * 1000, standbyTime)[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)[ FD ]
Line_28 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold)-->Line_33 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_30 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold + 1)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_11 $$ Assert.assertFalse(bufferedIncrementConfiguration.isEnabled())[ CD ]
Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)-->Line_27 $$ Assert.assertEquals(standbyTimeUpperLimit * 1000 / 2, standbyTime)[ FD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_32 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold * 2)[ FD ]
Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)-->Line_29 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_26 $$ standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(standbyQueueThreshold / 2)-->Line_31 $$ Assert.assertEquals(0, standbyTime)[ FD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_9 $$ PropsUtilAdvice.setProps(props)[ FD ]
Line_2 $$ public void testValidSetting() -->Line_13 $$ Assert.assertEquals(20, bufferedIncrementConfiguration.getStandbyTimeUpperLimit())[ CD ]
Line_2 $$ public void testValidSetting() -->Line_6 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT, "20")[ CD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_24 $$ long standbyTime = bufferedIncrementConfiguration.calculateStandbyTime(0)[ FD ]
Line_10 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_13 $$ Assert.assertEquals(20, bufferedIncrementConfiguration.getStandbyTimeUpperLimit())[ FD ]
