Line_5 $$ OutputType type = OutputType.NORMAL-->Line_17 $$ doPrint(LINE_SEPARATOR + composeLine(MavenServerConsole.LEVEL_ERROR, message), type)[ FD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_10 $$ if (level == MavenServerConsole.LEVEL_FATAL) [ CD ]
Line_7 $$ type = OutputType.ERROR-->Line_17 $$ doPrint(LINE_SEPARATOR + composeLine(MavenServerConsole.LEVEL_ERROR, message), type)[ FD ]
Line_5 $$ OutputType type = OutputType.NORMAL-->Line_9 $$ doPrint(composeLine(level, string), type)[ FD ]
Line_10 $$ if (level == MavenServerConsole.LEVEL_FATAL) -->Line_11 $$ setOutputPaused(false)[ CD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_9 $$ doPrint(composeLine(level, string), type)[ CD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_3 $$ if (isSuppressed(level))[ CD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_9 $$ doPrint(composeLine(level, string), type)[ FD ]
Line_6 $$ if (throwable != null || level == MavenServerConsole.LEVEL_WARN || level == MavenServerConsole.LEVEL_ERROR || level == MavenServerConsole.LEVEL_FATAL) -->Line_7 $$ type = OutputType.ERROR[ CD ]
Line_15 $$ if (message != null) -->Line_16 $$ message += LINE_SEPARATOR[ CD ]
Line_13 $$ if (throwable != null) -->Line_14 $$ String message = throwable.getMessage()[ CD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_5 $$ OutputType type = OutputType.NORMAL[ CD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_10 $$ if (level == MavenServerConsole.LEVEL_FATAL) [ FD ]
Line_13 $$ if (throwable != null) -->Line_15 $$ if (message != null) [ CD ]
Line_3 $$ if (isSuppressed(level))-->Line_4 $$ return[ CD ]
Line_15 $$ if (message != null) -->Line_17 $$ doPrint(LINE_SEPARATOR + composeLine(MavenServerConsole.LEVEL_ERROR, message), type)[ CD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_6 $$ if (throwable != null || level == MavenServerConsole.LEVEL_WARN || level == MavenServerConsole.LEVEL_ERROR || level == MavenServerConsole.LEVEL_FATAL) [ CD ]
Line_5 $$ OutputType type = OutputType.NORMAL-->Line_7 $$ type = OutputType.ERROR[ FD ]
Line_14 $$ String message = throwable.getMessage()-->Line_16 $$ message += LINE_SEPARATOR[ FD ]
Line_7 $$ type = OutputType.ERROR-->Line_9 $$ doPrint(composeLine(level, string), type)[ FD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_13 $$ if (throwable != null) [ FD ]
Line_16 $$ message += LINE_SEPARATOR-->Line_17 $$ doPrint(LINE_SEPARATOR + composeLine(MavenServerConsole.LEVEL_ERROR, message), type)[ FD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_3 $$ if (isSuppressed(level))[ FD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_13 $$ if (throwable != null) [ CD ]
Line_14 $$ String message = throwable.getMessage()-->Line_17 $$ doPrint(LINE_SEPARATOR + composeLine(MavenServerConsole.LEVEL_ERROR, message), type)[ FD ]
Line_14 $$ String message = throwable.getMessage()-->Line_15 $$ if (message != null) [ FD ]
Line_2 $$ public void printMessage(int level, String string, Throwable throwable) -->Line_14 $$ String message = throwable.getMessage()[ FD ]
