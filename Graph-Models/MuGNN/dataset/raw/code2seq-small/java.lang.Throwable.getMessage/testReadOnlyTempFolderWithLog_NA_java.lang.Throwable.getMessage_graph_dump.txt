Line_20 $$ Throwable throwable = logRecord.getThrown()-->Line_21 $$ Assert.assertEquals(Exception.class, throwable.getClass())[ FD ]
Line_10 $$ String oldTmpDirName = System.getProperty("java.io.tmpdir")-->Line_15 $$ System.setProperty("java.io.tmpdir", oldTmpDirName)[ FD ]
Line_20 $$ Throwable throwable = logRecord.getThrown()-->Line_22 $$ String message = throwable.getMessage()[ FD ]
Line_18 $$ LogRecord logRecord = logRecords.get(0)-->Line_19 $$ Assert.assertEquals("Unable to detect FIFO support", logRecord.getMessage())[ FD ]
Line_18 $$ LogRecord logRecord = logRecords.get(0)-->Line_20 $$ Throwable throwable = logRecord.getThrown()[ FD ]
Line_22 $$ String message = throwable.getMessage()-->Line_23 $$ Assert.assertTrue(message.startsWith("Unable to create FIFO with command \"mkfifo\", " + "external process returned "))[ FD ]
Line_7 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_18 $$ LogRecord logRecord = logRecords.get(0)[ FD ]
Line_2 $$ public void testReadOnlyTempFolderWithLog() -->Line_3 $$ if (!_shouldTest()) [ CD ]
Line_8 $$ File newTmpDir = new File("newTmpDir")-->Line_11 $$ System.setProperty("java.io.tmpdir", newTmpDir.getAbsolutePath())[ FD ]
Line_3 $$ if (!_shouldTest()) -->Line_4 $$ return[ CD ]
Line_7 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()-->Line_17 $$ Assert.assertEquals(1, logRecords.size())[ FD ]
Line_6 $$ try (CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(FIFOUtil.class.getName(), Level.WARNING)) -->Line_7 $$ List<LogRecord> logRecords = captureHandler.getLogRecords()[ FD ]
Line_8 $$ File newTmpDir = new File("newTmpDir")-->Line_9 $$ newTmpDir.delete()[ FD ]
