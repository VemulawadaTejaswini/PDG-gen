Line_2 $$ private boolean sendException(BuildEvent event, boolean isFailOnError) -->Line_3 $$ Throwable exception = event.getException()[ FD ]
Line_4 $$ if (exception != null) -->Line_9 $$ myMessagePriority.sendMessage(MESSAGE, Project.MSG_WARN, exception.getMessage())[ CD ]
Line_4 $$ if (exception != null) -->Line_5 $$ if (isFailOnError) [ CD ]
Line_2 $$ private boolean sendException(BuildEvent event, boolean isFailOnError) -->Line_6 $$ myAlwaysSend.sendMessage(EXCEPTION, event.getPriority(), exception)[ FD ]
Line_5 $$ if (isFailOnError) -->Line_6 $$ myAlwaysSend.sendMessage(EXCEPTION, event.getPriority(), exception)[ CD ]
Line_5 $$ if (isFailOnError) -->Line_7 $$ return true[ CD ]
Line_2 $$ private boolean sendException(BuildEvent event, boolean isFailOnError) -->Line_11 $$ return false[ CD ]
Line_3 $$ Throwable exception = event.getException()-->Line_6 $$ myAlwaysSend.sendMessage(EXCEPTION, event.getPriority(), exception)[ FD ]
Line_2 $$ private boolean sendException(BuildEvent event, boolean isFailOnError) -->Line_4 $$ if (exception != null) [ CD ]
Line_2 $$ private boolean sendException(BuildEvent event, boolean isFailOnError) -->Line_3 $$ Throwable exception = event.getException()[ CD ]
Line_3 $$ Throwable exception = event.getException()-->Line_9 $$ myMessagePriority.sendMessage(MESSAGE, Project.MSG_WARN, exception.getMessage())[ FD ]
Line_3 $$ Throwable exception = event.getException()-->Line_4 $$ if (exception != null) [ FD ]
