Line_14 $$ schemaCreator.doCreation(metadata, false, new Target() -->Line_21 $$ commands.add(action)[ CD ]
Line_3 $$ Map settings = new HashMap()-->Line_6 $$ ServiceRegistry serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(settings)[ FD ]
Line_3 $$ Map settings = new HashMap()-->Line_5 $$ settings.put(AvailableSettings.DIALECT, SQLServerDialect.class.getName())[ FD ]
Line_8 $$ MetadataSources ms = new MetadataSources(serviceRegistry)-->Line_10 $$ ms.addAnnotatedClass(Person.class)[ FD ]
Line_2 $$ public void testGeneratedSql() -->Line_5 $$ settings.put(AvailableSettings.DIALECT, SQLServerDialect.class.getName())[ CD ]
Line_8 $$ MetadataSources ms = new MetadataSources(serviceRegistry)-->Line_11 $$ final Metadata metadata = ms.buildMetadata()[ FD ]
Line_2 $$ public void testGeneratedSql() -->Line_4 $$ settings.putAll(Environment.getProperties())[ CD ]
Line_14 $$ schemaCreator.doCreation(metadata, false, new Target() -->Line_16 $$ return false[ CD ]
Line_2 $$ public void testGeneratedSql() -->Line_3 $$ Map settings = new HashMap()[ CD ]
Line_13 $$ final List<String> commands = new ArrayList<String>()-->Line_21 $$ commands.add(action)[ FD ]
Line_2 $$ public void testGeneratedSql() -->Line_6 $$ ServiceRegistry serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(settings)[ CD ]
Line_8 $$ MetadataSources ms = new MetadataSources(serviceRegistry)-->Line_9 $$ ms.addAnnotatedClass(Address.class)[ FD ]
Line_6 $$ ServiceRegistry serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(settings)-->Line_34 $$ ServiceRegistryBuilder.destroy(serviceRegistry)[ FD ]
Line_6 $$ ServiceRegistry serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(settings)-->Line_12 $$ final SchemaCreator schemaCreator = serviceRegistry.getService(SchemaManagementTool.class).getSchemaCreator(serviceRegistry.getService(ConfigurationService.class).getSettings())[ FD ]
Line_13 $$ final List<String> commands = new ArrayList<String>()-->Line_30 $$ Assert.assertEquals("Wrong SQL", expectedMappingTableSql, commands.get(2))[ FD ]
Line_11 $$ final Metadata metadata = ms.buildMetadata()-->Line_14 $$ schemaCreator.doCreation(metadata, false, new Target() [ FD ]
Line_14 $$ schemaCreator.doCreation(metadata, false, new Target() -->Line_21 $$ commands.add(action)[ FD ]
Line_12 $$ final SchemaCreator schemaCreator = serviceRegistry.getService(SchemaManagementTool.class).getSchemaCreator(serviceRegistry.getService(ConfigurationService.class).getSettings())-->Line_14 $$ schemaCreator.doCreation(metadata, false, new Target() [ FD ]
Line_3 $$ Map settings = new HashMap()-->Line_4 $$ settings.putAll(Environment.getProperties())[ FD ]
