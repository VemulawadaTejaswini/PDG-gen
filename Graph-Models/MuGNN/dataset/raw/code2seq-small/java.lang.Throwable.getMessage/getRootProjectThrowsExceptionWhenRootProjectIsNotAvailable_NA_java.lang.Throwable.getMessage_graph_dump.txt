Line_9 $$ ProjectInternal rootProject = context.mock(ProjectInternal.class)-->Line_11 $$ assertThat(gradle.getRootProject(), sameInstance(rootProject))[ FD ]
Line_2 $$ public void getRootProjectThrowsExceptionWhenRootProjectIsNotAvailable() -->Line_11 $$ assertThat(gradle.getRootProject(), sameInstance(rootProject))[ CD ]
Line_2 $$ public void getRootProjectThrowsExceptionWhenRootProjectIsNotAvailable() -->Line_10 $$ gradle.setRootProject(rootProject)[ CD ]
Line_9 $$ ProjectInternal rootProject = context.mock(ProjectInternal.class)-->Line_10 $$ gradle.setRootProject(rootProject)[ FD ]
Line_2 $$ public void getRootProjectThrowsExceptionWhenRootProjectIsNotAvailable() -->Line_9 $$ ProjectInternal rootProject = context.mock(ProjectInternal.class)[ CD ]
