Line_13 $$ TransportFuture<TransportResponse.Empty> res = serviceB.submitRequest(nodeA, "sayHello", TransportRequest.Empty.INSTANCE, TransportRequestOptions.builder().withCompress(true).build(), new BaseTransportResponseHandler<TransportResponse.Empty>() -->Line_23 $$ exp.printStackTrace()[ CD ]
Line_13 $$ TransportFuture<TransportResponse.Empty> res = serviceB.submitRequest(nodeA, "sayHello", TransportRequest.Empty.INSTANCE, TransportRequestOptions.builder().withCompress(true).build(), new BaseTransportResponseHandler<TransportResponse.Empty>() -->Line_18 $$ return ThreadPool.Names.GENERIC[ CD ]
Line_13 $$ TransportFuture<TransportResponse.Empty> res = serviceB.submitRequest(nodeA, "sayHello", TransportRequest.Empty.INSTANCE, TransportRequestOptions.builder().withCompress(true).build(), new BaseTransportResponseHandler<TransportResponse.Empty>() -->Line_23 $$ exp.printStackTrace()[ FD ]
Line_2 $$ public void testVoidMessageCompressed() -->Line_3 $$ serviceA.registerRequestHandler("sayHello", TransportRequest.Empty::<>new, ThreadPool.Names.GENERIC, new TransportRequestHandler<TransportRequest.Empty>() [ CD ]
Line_13 $$ TransportFuture<TransportResponse.Empty> res = serviceB.submitRequest(nodeA, "sayHello", TransportRequest.Empty.INSTANCE, TransportRequestOptions.builder().withCompress(true).build(), new BaseTransportResponseHandler<TransportResponse.Empty>() -->Line_24 $$ assertThat("got exception instead of a response: " + exp.getMessage(), false, equalTo(true))[ CD ]
Line_3 $$ serviceA.registerRequestHandler("sayHello", TransportRequest.Empty::<>new, ThreadPool.Names.GENERIC, new TransportRequestHandler<TransportRequest.Empty>() -->Line_6 $$ channel.sendResponse(TransportResponse.Empty.INSTANCE, TransportResponseOptions.builder().withCompress(true).build())[ FD ]
Line_13 $$ TransportFuture<TransportResponse.Empty> res = serviceB.submitRequest(nodeA, "sayHello", TransportRequest.Empty.INSTANCE, TransportRequestOptions.builder().withCompress(true).build(), new BaseTransportResponseHandler<TransportResponse.Empty>() -->Line_15 $$ return TransportResponse.Empty.INSTANCE[ CD ]
Line_13 $$ TransportFuture<TransportResponse.Empty> res = serviceB.submitRequest(nodeA, "sayHello", TransportRequest.Empty.INSTANCE, TransportRequestOptions.builder().withCompress(true).build(), new BaseTransportResponseHandler<TransportResponse.Empty>() -->Line_24 $$ assertThat("got exception instead of a response: " + exp.getMessage(), false, equalTo(true))[ FD ]
Line_2 $$ public void testVoidMessageCompressed() -->Line_33 $$ serviceA.removeHandler("sayHello")[ CD ]
Line_2 $$ public void testVoidMessageCompressed() -->Line_13 $$ TransportFuture<TransportResponse.Empty> res = serviceB.submitRequest(nodeA, "sayHello", TransportRequest.Empty.INSTANCE, TransportRequestOptions.builder().withCompress(true).build(), new BaseTransportResponseHandler<TransportResponse.Empty>() [ CD ]
