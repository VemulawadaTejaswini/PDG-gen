Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_39 $$ status.fail(new RecoveryFailedException(status.state(), "end of test. OK.", null), false)[ FD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_35 $$ status.renameAllTempFiles()[ CD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_36 $$ strings = Sets.newHashSet(status.store().directory().listAll())[ CD ]
Line_3 $$ IndexService service = createIndex("foo")-->Line_4 $$ IndexShard indexShard = service.getShardOrNull(0)[ FD ]
Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_14 $$ IndexOutput openIndexOutput = status.getOpenIndexOutput("foo.bar")[ FD ]
Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_19 $$ status.openAndPutIndexOutput("foo.bar", new StoreFileMetaData("foo.bar", 8), status.store())[ FD ]
Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_24 $$ status.removeOpenIndexOutputs("foo.bar")[ FD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_24 $$ status.removeOpenIndexOutputs("foo.bar")[ CD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_34 $$ indexShard.close("foo", false)[ CD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_3 $$ IndexService service = createIndex("foo")[ CD ]
Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_12 $$ try (IndexOutput indexOutput = status.openAndPutIndexOutput("foo.bar", new StoreFileMetaData("foo.bar", 8), status.store())) [ FD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_33 $$ assertNotNull(expectedFile)[ CD ]
Line_4 $$ IndexShard indexShard = service.getShardOrNull(0)-->Line_34 $$ indexShard.close("foo", false)[ FD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() [ CD ]
Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_25 $$ Set<String> strings = Sets.newHashSet(status.store().directory().listAll())[ FD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_5 $$ DiscoveryNode node = new DiscoveryNode("foo", new LocalTransportAddress("bar"), Version.CURRENT)[ CD ]
Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_36 $$ strings = Sets.newHashSet(status.store().directory().listAll())[ FD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_39 $$ status.fail(new RecoveryFailedException(status.state(), "end of test. OK.", null), false)[ CD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_37 $$ assertTrue(strings.toString(), strings.contains("foo.bar"))[ CD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_25 $$ Set<String> strings = Sets.newHashSet(status.store().directory().listAll())[ CD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_38 $$ assertFalse(strings.toString(), strings.contains(expectedFile))[ CD ]
Line_2 $$ public void testRenameTempFiles() throws IOException -->Line_4 $$ IndexShard indexShard = service.getShardOrNull(0)[ CD ]
Line_6 $$ RecoveryStatus status = new RecoveryStatus(indexShard, node, new RecoveryTarget.RecoveryListener() -->Line_35 $$ status.renameAllTempFiles()[ FD ]
