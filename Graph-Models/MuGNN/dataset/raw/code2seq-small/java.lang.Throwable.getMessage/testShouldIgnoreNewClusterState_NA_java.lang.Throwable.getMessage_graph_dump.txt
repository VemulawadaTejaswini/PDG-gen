Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_48 $$ assertFalse("should not ignore, because current state doesn't have a master", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()[ CD ]
Line_6 $$ DiscoveryNodes.Builder newNodes = DiscoveryNodes.builder()-->Line_11 $$ newState.nodes(newNodes)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_21 $$ currentNodes = DiscoveryNodes.builder()[ CD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_25 $$ currentState.version(2)[ FD ]
Line_41 $$ if (randomBoolean()) -->Line_42 $$ currentState.version(2)[ CD ]
Line_24 $$ if (randomBoolean()) -->Line_28 $$ currentState.version(1)[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_39 $$ currentNodes.masterNodeId(null)[ CD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_20 $$ assertFalse("should not ignore, because new state's version is higher to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_21 $$ currentNodes = DiscoveryNodes.builder()-->Line_39 $$ currentNodes.masterNodeId(null)[ FD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_26 $$ newState.version(1)[ FD ]
Line_41 $$ if (randomBoolean()) -->Line_46 $$ newState.version(2)[ CD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_46 $$ newState.version(2)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_7 $$ newNodes.masterNodeId("a").put(new DiscoveryNode("a", DummyTransportAddress.INSTANCE, Version.CURRENT))[ CD ]
Line_24 $$ if (randomBoolean()) -->Line_29 $$ newState.version(2)[ CD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_12 $$ currentState.version(2)[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_9 $$ currentState.nodes(currentNodes)[ FD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_21 $$ currentNodes = DiscoveryNodes.builder()[ FD ]
Line_41 $$ if (randomBoolean()) -->Line_43 $$ newState.version(1)[ CD ]
Line_6 $$ DiscoveryNodes.Builder newNodes = DiscoveryNodes.builder()-->Line_7 $$ newNodes.masterNodeId("a").put(new DiscoveryNode("a", DummyTransportAddress.INSTANCE, Version.CURRENT))[ FD ]
Line_3 $$ ClusterName clusterName = new ClusterName("abc")-->Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_17 $$ assertFalse("should not ignore, because new state's version is equal to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_9 $$ currentState.nodes(currentNodes)[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_3 $$ ClusterName clusterName = new ClusterName("abc")[ CD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_9 $$ currentState.nodes(currentNodes)[ FD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_29 $$ newState.version(2)[ FD ]
Line_21 $$ currentNodes = DiscoveryNodes.builder()-->Line_31 $$ currentState.nodes(currentNodes)[ FD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_19 $$ newState.version(2)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_15 $$ currentState.version(1)[ CD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_18 $$ currentState.version(1)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_5 $$ currentNodes.masterNodeId("a").put(new DiscoveryNode("a", DummyTransportAddress.INSTANCE, Version.CURRENT))[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_11 $$ newState.nodes(newNodes)[ CD ]
Line_38 $$ currentNodes = DiscoveryNodes.builder()-->Line_39 $$ currentNodes.masterNodeId(null)[ FD ]
Line_24 $$ if (randomBoolean()) -->Line_25 $$ currentState.version(2)[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_22 $$ currentNodes.masterNodeId("b").put(new DiscoveryNode("b", DummyTransportAddress.INSTANCE, Version.CURRENT))[ CD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_33 $$ shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build())[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_19 $$ newState.version(2)[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_20 $$ assertFalse("should not ignore, because new state's version is higher to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_48 $$ assertFalse("should not ignore, because current state doesn't have a master", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ CD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_20 $$ assertFalse("should not ignore, because new state's version is higher to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_31 $$ currentState.nodes(currentNodes)[ CD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_17 $$ assertFalse("should not ignore, because new state's version is equal to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_14 $$ assertTrue("should ignore, because new state's version is lower to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_16 $$ newState.version(1)[ CD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_33 $$ shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build())[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_41 $$ if (randomBoolean()) [ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_38 $$ currentNodes = DiscoveryNodes.builder()[ CD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_15 $$ currentState.version(1)[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_17 $$ assertFalse("should not ignore, because new state's version is equal to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_5 $$ currentNodes.masterNodeId("a").put(new DiscoveryNode("a", DummyTransportAddress.INSTANCE, Version.CURRENT))[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_14 $$ assertTrue("should ignore, because new state's version is lower to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ CD ]
Line_41 $$ if (randomBoolean()) -->Line_45 $$ currentState.version(1)[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_13 $$ newState.version(1)[ CD ]
Line_21 $$ currentNodes = DiscoveryNodes.builder()-->Line_38 $$ currentNodes = DiscoveryNodes.builder()[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_45 $$ currentState.version(1)[ FD ]
Line_38 $$ currentNodes = DiscoveryNodes.builder()-->Line_40 $$ currentState.nodes(currentNodes)[ FD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_40 $$ currentState.nodes(currentNodes)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)[ CD ]
Line_21 $$ currentNodes = DiscoveryNodes.builder()-->Line_22 $$ currentNodes.masterNodeId("b").put(new DiscoveryNode("b", DummyTransportAddress.INSTANCE, Version.CURRENT))[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_40 $$ currentState.nodes(currentNodes)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_40 $$ currentState.nodes(currentNodes)[ CD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_39 $$ currentNodes.masterNodeId(null)[ FD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_13 $$ newState.version(1)[ FD ]
Line_24 $$ if (randomBoolean()) -->Line_26 $$ newState.version(1)[ CD ]
Line_3 $$ ClusterName clusterName = new ClusterName("abc")-->Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_12 $$ currentState.version(2)[ CD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_31 $$ currentState.nodes(currentNodes)[ FD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_14 $$ assertTrue("should ignore, because new state's version is lower to current state's version", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_18 $$ currentState.version(1)[ CD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_24 $$ if (randomBoolean()) [ CD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_11 $$ newState.nodes(newNodes)[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)[ CD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_43 $$ newState.version(1)[ FD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_22 $$ currentNodes.masterNodeId("b").put(new DiscoveryNode("b", DummyTransportAddress.INSTANCE, Version.CURRENT))[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_28 $$ currentState.version(1)[ FD ]
Line_21 $$ currentNodes = DiscoveryNodes.builder()-->Line_40 $$ currentState.nodes(currentNodes)[ FD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_16 $$ newState.version(1)[ FD ]
Line_10 $$ ClusterState.Builder newState = ClusterState.builder(clusterName)-->Line_48 $$ assertFalse("should not ignore, because current state doesn't have a master", shouldIgnoreOrRejectNewClusterState(logger, currentState.build(), newState.build()))[ FD ]
Line_2 $$ public void testShouldIgnoreNewClusterState() -->Line_6 $$ DiscoveryNodes.Builder newNodes = DiscoveryNodes.builder()[ CD ]
Line_4 $$ DiscoveryNodes.Builder currentNodes = DiscoveryNodes.builder()-->Line_38 $$ currentNodes = DiscoveryNodes.builder()[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_31 $$ currentState.nodes(currentNodes)[ FD ]
Line_8 $$ ClusterState.Builder currentState = ClusterState.builder(clusterName)-->Line_42 $$ currentState.version(2)[ FD ]
