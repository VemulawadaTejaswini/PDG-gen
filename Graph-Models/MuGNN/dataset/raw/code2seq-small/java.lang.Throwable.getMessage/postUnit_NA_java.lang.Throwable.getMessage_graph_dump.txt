Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "units")-->Line_11 $$ request.setEntity(new StringEntity(requestBody, ContentType.APPLICATION_JSON))[ FD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_6 $$ unitWrapper.unit = new Unit()[ CD ]
Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "units")-->Line_13 $$ final CloseableHttpResponse response = ourClient.execute(request)[ FD ]
Line_5 $$ final UnitWrapper unitWrapper = new UnitWrapper()-->Line_10 $$ String requestBody = new Gson().toJson(unitWrapper)[ FD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_8 $$ unitWrapper.unit.position = position[ CD ]
Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "units")-->Line_4 $$ setHeaders(request, "application/json")[ FD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_8 $$ unitWrapper.unit.position = position[ FD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_9 $$ unitWrapper.unit.section = sectionId[ CD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_5 $$ final UnitWrapper unitWrapper = new UnitWrapper()[ CD ]
Line_13 $$ final CloseableHttpResponse response = ourClient.execute(request)-->Line_14 $$ final HttpEntity responseEntity = response.getEntity()[ FD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_11 $$ request.setEntity(new StringEntity(requestBody, ContentType.APPLICATION_JSON))[ CD ]
Line_16 $$ final StatusLine line = response.getStatusLine()-->Line_17 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) [ FD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "units")[ CD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_7 $$ unitWrapper.unit.lesson = lessonId[ CD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_10 $$ String requestBody = new Gson().toJson(unitWrapper)[ CD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_9 $$ unitWrapper.unit.section = sectionId[ FD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_7 $$ unitWrapper.unit.lesson = lessonId[ FD ]
Line_17 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) -->Line_18 $$ LOG.error("Failed to push " + responseString)[ CD ]
Line_2 $$ private static void postUnit(int lessonId, int position, int sectionId) -->Line_4 $$ setHeaders(request, "application/json")[ CD ]
Line_14 $$ final HttpEntity responseEntity = response.getEntity()-->Line_15 $$ final String responseString = responseEntity != null ? EntityUtils.toString(responseEntity) : ""[ FD ]
Line_13 $$ final CloseableHttpResponse response = ourClient.execute(request)-->Line_16 $$ final StatusLine line = response.getStatusLine()[ FD ]
