Line_8 $$ byte[] outBuffer = new byte[1024], inBuffer = new byte[1024]-->Line_15 $$ decompressor.setInput(inBuffer, 0, lenRead)[ FD ]
Line_12 $$ if (decompressor.needsInput())-->Line_13 $$ lenRead = query.remaining() < 1024 ? query.remaining() : 1024[ CD ]
Line_13 $$ lenRead = query.remaining() < 1024 ? query.remaining() : 1024-->Line_15 $$ decompressor.setInput(inBuffer, 0, lenRead)[ FD ]
Line_8 $$ byte[] outBuffer = new byte[1024], inBuffer = new byte[1024]-->Line_17 $$ decompressed.write(outBuffer, 0, lenWrite)[ FD ]
Line_11 $$ while (true) -->Line_15 $$ decompressor.setInput(inBuffer, 0, lenRead)[ CD ]
Line_3 $$ String queryString = null-->Line_26 $$ queryString = ByteBufferUtil.string(query)[ FD ]
Line_11 $$ while (true) -->Line_17 $$ while ((lenWrite = decompressor.inflate(outBuffer)) != 0) decompressed.write(outBuffer, 0, lenWrite)[ CD ]
Line_7 $$ DataOutputBuffer decompressed = new DataOutputBuffer()-->Line_22 $$ queryString = new String(decompressed.getData(), 0, decompressed.getLength(), StandardCharsets.UTF_8)[ FD ]
Line_9 $$ Inflater decompressor = new Inflater()-->Line_12 $$ if (decompressor.needsInput())[ FD ]
Line_10 $$ int lenRead = 0-->Line_14 $$ query.get(inBuffer, 0, lenRead)[ FD ]
Line_9 $$ Inflater decompressor = new Inflater()-->Line_17 $$ while ((lenWrite = decompressor.inflate(outBuffer)) != 0) decompressed.write(outBuffer, 0, lenWrite)[ FD ]
Line_22 $$ queryString = new String(decompressed.getData(), 0, decompressed.getLength(), StandardCharsets.UTF_8)-->Line_26 $$ queryString = ByteBufferUtil.string(query)[ FD ]
Line_9 $$ Inflater decompressor = new Inflater()-->Line_21 $$ decompressor.end()[ FD ]
Line_2 $$ private static String uncompress(ByteBuffer query, Compression compression) throws InvalidRequestException -->Line_26 $$ queryString = ByteBufferUtil.string(query)[ FD ]
Line_2 $$ private static String uncompress(ByteBuffer query, Compression compression) throws InvalidRequestException -->Line_14 $$ query.get(inBuffer, 0, lenRead)[ FD ]
Line_9 $$ Inflater decompressor = new Inflater()-->Line_18 $$ if (decompressor.finished())[ FD ]
Line_10 $$ int lenRead = 0-->Line_15 $$ decompressor.setInput(inBuffer, 0, lenRead)[ FD ]
Line_13 $$ lenRead = query.remaining() < 1024 ? query.remaining() : 1024-->Line_14 $$ query.get(inBuffer, 0, lenRead)[ FD ]
Line_9 $$ Inflater decompressor = new Inflater()-->Line_15 $$ decompressor.setInput(inBuffer, 0, lenRead)[ FD ]
Line_11 $$ while (true) -->Line_14 $$ query.get(inBuffer, 0, lenRead)[ CD ]
Line_11 $$ while (true) -->Line_18 $$ if (decompressor.finished())[ CD ]
Line_8 $$ byte[] outBuffer = new byte[1024], inBuffer = new byte[1024]-->Line_14 $$ query.get(inBuffer, 0, lenRead)[ FD ]
Line_2 $$ private static String uncompress(ByteBuffer query, Compression compression) throws InvalidRequestException -->Line_13 $$ lenRead = query.remaining() < 1024 ? query.remaining() : 1024[ FD ]
Line_2 $$ private static String uncompress(ByteBuffer query, Compression compression) throws InvalidRequestException -->Line_3 $$ String queryString = null[ CD ]
Line_16 $$ int lenWrite = 0-->Line_17 $$ while ((lenWrite = decompressor.inflate(outBuffer)) != 0) decompressed.write(outBuffer, 0, lenWrite)[ FD ]
Line_8 $$ byte[] outBuffer = new byte[1024], inBuffer = new byte[1024]-->Line_17 $$ while ((lenWrite = decompressor.inflate(outBuffer)) != 0) decompressed.write(outBuffer, 0, lenWrite)[ FD ]
Line_10 $$ int lenRead = 0-->Line_13 $$ lenRead = query.remaining() < 1024 ? query.remaining() : 1024[ FD ]
Line_16 $$ int lenWrite = 0-->Line_17 $$ decompressed.write(outBuffer, 0, lenWrite)[ FD ]
Line_11 $$ while (true) -->Line_16 $$ int lenWrite = 0[ CD ]
Line_7 $$ DataOutputBuffer decompressed = new DataOutputBuffer()-->Line_17 $$ decompressed.write(outBuffer, 0, lenWrite)[ FD ]
Line_11 $$ while (true) -->Line_12 $$ if (decompressor.needsInput())[ CD ]
Line_3 $$ String queryString = null-->Line_22 $$ queryString = new String(decompressed.getData(), 0, decompressed.getLength(), StandardCharsets.UTF_8)[ FD ]
Line_2 $$ private static String uncompress(ByteBuffer query, Compression compression) throws InvalidRequestException -->Line_37 $$ return queryString[ CD ]
