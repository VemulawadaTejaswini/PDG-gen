Line_8 $$ InterDatanodeProtocol dn1 = mock(InterDatanodeProtocol.class)-->Line_11 $$ verify(dn1).updateReplicaUnderRecovery(block, RECOVERY_ID, REPLICA_LEN1)[ FD ]
Line_9 $$ InterDatanodeProtocol dn2 = mock(InterDatanodeProtocol.class)-->Line_10 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_12 $$ verify(dn2).updateReplicaUnderRecovery(block, RECOVERY_ID, REPLICA_LEN1)[ CD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_11 $$ verify(dn1).updateReplicaUnderRecovery(block, RECOVERY_ID, REPLICA_LEN1)[ CD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_8 $$ InterDatanodeProtocol dn1 = mock(InterDatanodeProtocol.class)[ CD ]
Line_7 $$ ReplicaRecoveryInfo replica2 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 2, ReplicaState.FINALIZED)-->Line_14 $$ replica2 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN2, GEN_STAMP - 2, ReplicaState.FINALIZED)[ FD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_7 $$ ReplicaRecoveryInfo replica2 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 2, ReplicaState.FINALIZED)[ CD ]
Line_8 $$ InterDatanodeProtocol dn1 = mock(InterDatanodeProtocol.class)-->Line_16 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_6 $$ ReplicaRecoveryInfo replica1 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 1, ReplicaState.FINALIZED)-->Line_16 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_8 $$ InterDatanodeProtocol dn1 = mock(InterDatanodeProtocol.class)-->Line_10 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_13 $$ replica1 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 1, ReplicaState.FINALIZED)[ CD ]
Line_7 $$ ReplicaRecoveryInfo replica2 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 2, ReplicaState.FINALIZED)-->Line_16 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_7 $$ ReplicaRecoveryInfo replica2 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 2, ReplicaState.FINALIZED)-->Line_10 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_6 $$ ReplicaRecoveryInfo replica1 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 1, ReplicaState.FINALIZED)[ CD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_9 $$ InterDatanodeProtocol dn2 = mock(InterDatanodeProtocol.class)[ CD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_10 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ CD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_3 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_6 $$ ReplicaRecoveryInfo replica1 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 1, ReplicaState.FINALIZED)-->Line_13 $$ replica1 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 1, ReplicaState.FINALIZED)[ FD ]
Line_14 $$ replica2 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN2, GEN_STAMP - 2, ReplicaState.FINALIZED)-->Line_16 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_6 $$ ReplicaRecoveryInfo replica1 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 1, ReplicaState.FINALIZED)-->Line_10 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_9 $$ InterDatanodeProtocol dn2 = mock(InterDatanodeProtocol.class)-->Line_12 $$ verify(dn2).updateReplicaUnderRecovery(block, RECOVERY_ID, REPLICA_LEN1)[ FD ]
Line_3 $$ if (LOG.isDebugEnabled()) -->Line_4 $$ LOG.debug("Running " + GenericTestUtils.getMethodName())[ CD ]
Line_13 $$ replica1 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN1, GEN_STAMP - 1, ReplicaState.FINALIZED)-->Line_16 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
Line_2 $$ public void testFinalizedReplicas() throws IOException -->Line_14 $$ replica2 = new ReplicaRecoveryInfo(BLOCK_ID, REPLICA_LEN2, GEN_STAMP - 2, ReplicaState.FINALIZED)[ CD ]
Line_9 $$ InterDatanodeProtocol dn2 = mock(InterDatanodeProtocol.class)-->Line_16 $$ testSyncReplicas(replica1, replica2, dn1, dn2, REPLICA_LEN1)[ FD ]
