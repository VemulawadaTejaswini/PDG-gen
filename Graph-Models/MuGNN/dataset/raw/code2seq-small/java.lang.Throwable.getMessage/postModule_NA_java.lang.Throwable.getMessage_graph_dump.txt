Line_14 $$ final CloseableHttpResponse response = ourClient.execute(request)-->Line_17 $$ final StatusLine line = response.getStatusLine()[ FD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_8 $$ section.position = position[ FD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_4 $$ setHeaders(request, "application/json")[ CD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_6 $$ section.course = courseId[ CD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_10 $$ sectionContainer.section = section[ CD ]
Line_5 $$ final Section section = new Section()-->Line_10 $$ sectionContainer.section = section[ FD ]
Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "sections")-->Line_14 $$ final CloseableHttpResponse response = ourClient.execute(request)[ FD ]
Line_15 $$ final HttpEntity responseEntity = response.getEntity()-->Line_16 $$ final String responseString = responseEntity != null ? EntityUtils.toString(responseEntity) : ""[ FD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_12 $$ request.setEntity(new StringEntity(requestBody, ContentType.APPLICATION_JSON))[ CD ]
Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "sections")-->Line_12 $$ request.setEntity(new StringEntity(requestBody, ContentType.APPLICATION_JSON))[ FD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "sections")[ CD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_11 $$ String requestBody = new Gson().toJson(sectionContainer)[ CD ]
Line_9 $$ final SectionWrapper sectionContainer = new SectionWrapper()-->Line_11 $$ String requestBody = new Gson().toJson(sectionContainer)[ FD ]
Line_18 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) -->Line_19 $$ LOG.error("Failed to push " + responseString)[ CD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_5 $$ final Section section = new Section()[ CD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_26 $$ return -1[ CD ]
Line_3 $$ final HttpPost request = new HttpPost(stepicApiUrl + "sections")-->Line_4 $$ setHeaders(request, "application/json")[ FD ]
Line_16 $$ final String responseString = responseEntity != null ? EntityUtils.toString(responseEntity) : ""-->Line_21 $$ final Section postedSection = new Gson().fromJson(responseString, SectionContainer.class).sections.get(0)[ FD ]
Line_14 $$ final CloseableHttpResponse response = ourClient.execute(request)-->Line_15 $$ final HttpEntity responseEntity = response.getEntity()[ FD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_6 $$ section.course = courseId[ FD ]
Line_17 $$ final StatusLine line = response.getStatusLine()-->Line_18 $$ if (line.getStatusCode() != HttpStatus.SC_CREATED) [ FD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_8 $$ section.position = position[ CD ]
Line_2 $$ private static int postModule(int courseId, int position, @NotNull final String title) -->Line_9 $$ final SectionWrapper sectionContainer = new SectionWrapper()[ CD ]
