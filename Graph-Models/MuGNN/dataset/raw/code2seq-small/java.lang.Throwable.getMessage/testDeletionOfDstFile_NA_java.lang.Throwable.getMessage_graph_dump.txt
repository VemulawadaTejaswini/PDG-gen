Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_16 $$ src = getTestPath("testDeletionOfDstFile/dir/src")[ CD ]
Line_7 $$ final FSNamesystem namesystem = cluster.getNamesystem()-->Line_8 $$ final long blocks = namesystem.getBlocksTotal()[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_10 $$ rename(src, dst, false, false, true, Rename.OVERWRITE)[ CD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstFile/dir/src")-->Line_16 $$ src = getTestPath("testDeletionOfDstFile/dir/src")[ FD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstFile/newdir/dst")-->Line_6 $$ createFile(dst)[ FD ]
Line_7 $$ final FSNamesystem namesystem = cluster.getNamesystem()-->Line_12 $$ Assert.assertEquals(fileCount - 1, namesystem.getFilesTotal())[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_4 $$ Path dst = getTestPath("testDeletionOfDstFile/newdir/dst")[ CD ]
Line_16 $$ src = getTestPath("testDeletionOfDstFile/dir/src")-->Line_28 $$ Assert.assertFalse(exists(fc, src))[ FD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstFile/dir/src")-->Line_10 $$ rename(src, dst, false, false, true, Rename.OVERWRITE)[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_11 $$ Assert.assertEquals(blocks - 1, namesystem.getBlocksTotal())[ CD ]
Line_21 $$ exception = false-->Line_18 $$ while (exception && count < 5) [ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_28 $$ Assert.assertFalse(exists(fc, src))[ CD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_3 $$ Path src = getTestPath("testDeletionOfDstFile/dir/src")[ CD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstFile/newdir/dst")-->Line_29 $$ Assert.assertTrue(exists(fc, dst))[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_18 $$ while (exception && count < 5) [ CD ]
Line_14 $$ int count = 0-->Line_25 $$ count++[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_8 $$ final long blocks = namesystem.getBlocksTotal()[ CD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_9 $$ final long fileCount = namesystem.getFilesTotal()[ CD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_29 $$ Assert.assertTrue(exists(fc, dst))[ CD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_15 $$ boolean exception = true[ CD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstFile/newdir/dst")-->Line_17 $$ dst = getTestPath("testDeletionOfDstFile/newdir/dst")[ FD ]
Line_17 $$ dst = getTestPath("testDeletionOfDstFile/newdir/dst")-->Line_29 $$ Assert.assertTrue(exists(fc, dst))[ FD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstFile/dir/src")-->Line_5 $$ createFile(src)[ FD ]
Line_7 $$ final FSNamesystem namesystem = cluster.getNamesystem()-->Line_9 $$ final long fileCount = namesystem.getFilesTotal()[ FD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstFile/dir/src")-->Line_28 $$ Assert.assertFalse(exists(fc, src))[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_6 $$ createFile(dst)[ CD ]
Line_7 $$ final FSNamesystem namesystem = cluster.getNamesystem()-->Line_11 $$ Assert.assertEquals(blocks - 1, namesystem.getBlocksTotal())[ FD ]
Line_15 $$ boolean exception = true-->Line_18 $$ while (exception && count < 5) [ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_5 $$ createFile(src)[ CD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_13 $$ restartCluster(false)[ CD ]
Line_16 $$ src = getTestPath("testDeletionOfDstFile/dir/src")-->Line_20 $$ exists(fc, src)[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_17 $$ dst = getTestPath("testDeletionOfDstFile/newdir/dst")[ CD ]
Line_4 $$ Path dst = getTestPath("testDeletionOfDstFile/newdir/dst")-->Line_10 $$ rename(src, dst, false, false, true, Rename.OVERWRITE)[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_7 $$ final FSNamesystem namesystem = cluster.getNamesystem()[ CD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_14 $$ int count = 0[ CD ]
Line_3 $$ Path src = getTestPath("testDeletionOfDstFile/dir/src")-->Line_20 $$ exists(fc, src)[ FD ]
Line_2 $$ public void testDeletionOfDstFile() throws Exception -->Line_12 $$ Assert.assertEquals(fileCount - 1, namesystem.getFilesTotal())[ CD ]
Line_15 $$ boolean exception = true-->Line_21 $$ exception = false[ FD ]
