Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_22 $$ Assert.assertNotNull(data)[ CD ]
Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) [ FD ]
Line_27 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_29 $$ writeApplicationAttemptStartData(appAttemptId)[ FD ]
Line_21 $$ ApplicationAttemptHistoryData data = store.getApplicationAttempt(appAttemptId)-->Line_22 $$ Assert.assertNotNull(data)[ FD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_21 $$ ApplicationAttemptHistoryData data = store.getApplicationAttempt(appAttemptId)[ FD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_27 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ FD ]
Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_23 $$ Assert.assertEquals(appAttemptId.toString(), data.getHost())[ FD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_12 $$ writeApplicationStartData(appId)[ CD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_15 $$ writeApplicationAttemptStartData(appAttemptId)[ FD ]
Line_11 $$ int numAppAttempts = 5-->Line_18 $$ Assert.assertEquals(numAppAttempts, store.getApplicationAttempts(appId).size())[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_23 $$ Assert.assertEquals(appAttemptId.toString(), data.getHost())[ FD ]
Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_24 $$ Assert.assertEquals(appAttemptId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_11 $$ int numAppAttempts = 5-->Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) [ FD ]
Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_16 $$ writeApplicationAttemptFinishData(appAttemptId)[ CD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_23 $$ Assert.assertEquals(appAttemptId.toString(), data.getHost())[ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_18 $$ Assert.assertEquals(numAppAttempts, store.getApplicationAttempts(appId).size())[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_29 $$ writeApplicationAttemptStartData(appAttemptId)[ FD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_16 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_21 $$ ApplicationAttemptHistoryData data = store.getApplicationAttempt(appAttemptId)[ CD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) [ CD ]
Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_23 $$ Assert.assertEquals(appAttemptId.toString(), data.getHost())[ CD ]
Line_27 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_35 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_6 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_29 $$ writeApplicationAttemptStartData(appAttemptId)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_27 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ FD ]
Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ CD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_15 $$ writeApplicationAttemptStartData(appAttemptId)[ CD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_27 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_35 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ CD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_27 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ CD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) [ CD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_24 $$ Assert.assertEquals(appAttemptId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_16 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_24 $$ Assert.assertEquals(appAttemptId.toString(), data.getDiagnosticsInfo())[ CD ]
Line_13 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_21 $$ ApplicationAttemptHistoryData data = store.getApplicationAttempt(appAttemptId)[ FD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_11 $$ int numAppAttempts = 5[ CD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_18 $$ Assert.assertEquals(numAppAttempts, store.getApplicationAttempts(appId).size())[ CD ]
Line_11 $$ int numAppAttempts = 5-->Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) [ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_12 $$ writeApplicationStartData(appId)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_21 $$ ApplicationAttemptHistoryData data = store.getApplicationAttempt(appAttemptId)[ FD ]
Line_19 $$ for (int i = 1; i <= numAppAttempts; ++i) -->Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)[ FD ]
Line_21 $$ ApplicationAttemptHistoryData data = store.getApplicationAttempt(appAttemptId)-->Line_24 $$ Assert.assertEquals(appAttemptId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_27 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_24 $$ Assert.assertEquals(appAttemptId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ CD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_15 $$ writeApplicationAttemptStartData(appAttemptId)[ FD ]
Line_14 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_35 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_26 $$ writeApplicationFinishData(appId)[ FD ]
Line_21 $$ ApplicationAttemptHistoryData data = store.getApplicationAttempt(appAttemptId)-->Line_23 $$ Assert.assertEquals(appAttemptId.toString(), data.getHost())[ FD ]
Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_35 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_20 $$ appAttemptId = ApplicationAttemptId.newInstance(appId, i)-->Line_29 $$ writeApplicationAttemptStartData(appAttemptId)[ FD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)[ CD ]
Line_2 $$ public void testReadWriteApplicationAttemptHistory() throws Exception -->Line_26 $$ writeApplicationFinishData(appId)[ CD ]
