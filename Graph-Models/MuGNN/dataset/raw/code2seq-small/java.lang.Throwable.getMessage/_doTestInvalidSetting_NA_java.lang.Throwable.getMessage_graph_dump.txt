Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_22 $$ Assert.assertEquals(-1, bufferedIncrementConfiguration.getStandbyQueueThreshold())[ FD ]
Line_5 $$ if (level == Level.OFF) -->Line_6 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD, "1")[ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_10 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT, "1")[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_3 $$ Map<String, String> props = new HashMap()[ CD ]
Line_5 $$ if (level == Level.OFF) -->Line_9 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD, "-1")[ CD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_20 $$ Assert.assertEquals(-1, bufferedIncrementConfiguration.getStandbyTimeUpperLimit())[ FD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_23 $$ Assert.assertEquals(1, bufferedIncrementConfiguration.getStandbyTimeUpperLimit())[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_25 $$ Assert.assertEquals(0, bufferedIncrementConfiguration.getThreadpoolKeepAliveTime())[ CD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_14 $$ PropsUtilAdvice.setProps(props)[ CD ]
Line_18 $$ if (level == Level.OFF) -->Line_23 $$ Assert.assertEquals(1, bufferedIncrementConfiguration.getStandbyTimeUpperLimit())[ CD ]
Line_5 $$ if (level == Level.OFF) -->Line_7 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT, "-1")[ CD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_17 $$ Assert.assertFalse(bufferedIncrementConfiguration.isEnabled())[ FD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_26 $$ Assert.assertEquals(1, bufferedIncrementConfiguration.getThreadpoolMaxSize())[ FD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_25 $$ Assert.assertEquals(0, bufferedIncrementConfiguration.getThreadpoolKeepAliveTime())[ FD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_19 $$ Assert.assertEquals(1, bufferedIncrementConfiguration.getStandbyQueueThreshold())[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_15 $$ CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(BufferedIncrementConfiguration.class.getName(), level)[ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_13 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE, "-4")[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_13 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE, "-4")[ CD ]
Line_18 $$ if (level == Level.OFF) -->Line_19 $$ Assert.assertEquals(1, bufferedIncrementConfiguration.getStandbyQueueThreshold())[ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_4 $$ props.put(PropsKeys.BUFFERED_INCREMENT_ENABLED, "false")[ FD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_27 $$ Assert.assertFalse(bufferedIncrementConfiguration.isStandbyEnabled())[ FD ]
Line_18 $$ if (level == Level.OFF) -->Line_22 $$ Assert.assertEquals(-1, bufferedIncrementConfiguration.getStandbyQueueThreshold())[ CD ]
Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)-->Line_29 $$ bufferedIncrementConfiguration.calculateStandbyTime(0)[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_15 $$ CaptureHandler captureHandler = JDKLoggerTestUtil.configureJDKLogger(BufferedIncrementConfiguration.class.getName(), level)[ FD ]
Line_5 $$ if (level == Level.OFF) -->Line_10 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT, "1")[ CD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_18 $$ if (level == Level.OFF) [ CD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_27 $$ Assert.assertFalse(bufferedIncrementConfiguration.isStandbyEnabled())[ CD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_12 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME, "-3")[ CD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_18 $$ if (level == Level.OFF) [ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_26 $$ Assert.assertEquals(1, bufferedIncrementConfiguration.getThreadpoolMaxSize())[ CD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_16 $$ BufferedIncrementConfiguration bufferedIncrementConfiguration = new BufferedIncrementConfiguration(StringPool.BLANK)[ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_14 $$ PropsUtilAdvice.setProps(props)[ FD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_7 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT, "-1")[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_5 $$ if (level == Level.OFF) [ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_33 $$ return captureHandler[ CD ]
Line_18 $$ if (level == Level.OFF) -->Line_20 $$ Assert.assertEquals(-1, bufferedIncrementConfiguration.getStandbyTimeUpperLimit())[ CD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_5 $$ if (level == Level.OFF) [ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_6 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD, "1")[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_4 $$ props.put(PropsKeys.BUFFERED_INCREMENT_ENABLED, "false")[ CD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_12 $$ props.put(PropsKeys.BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME, "-3")[ FD ]
Line_3 $$ Map<String, String> props = new HashMap()-->Line_9 $$ props.put(PropsKeys.BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD, "-1")[ FD ]
Line_2 $$ private CaptureHandler _doTestInvalidSetting(Level level) -->Line_17 $$ Assert.assertFalse(bufferedIncrementConfiguration.isEnabled())[ CD ]
