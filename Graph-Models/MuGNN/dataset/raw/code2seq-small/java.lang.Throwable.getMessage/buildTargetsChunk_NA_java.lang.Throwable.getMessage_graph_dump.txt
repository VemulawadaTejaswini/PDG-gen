Line_3 $$ final BuildFSState fsState = myProjectDescriptor.fsState-->Line_16 $$ fsState.clearContextChunk(context)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_15 $$ fsState.clearContextRoundData(context)[ FD ]
Line_23 $$ final StringBuilder message = new StringBuilder()-->Line_24 $$ message.append(chunk.getPresentableName()).append(": ").append(e.getClass().getName())[ FD ]
Line_3 $$ final BuildFSState fsState = myProjectDescriptor.fsState-->Line_13 $$ fsState.beforeChunkBuildStart(context, chunk)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_50 $$ Utils.REMOVED_SOURCES_KEY.set(context, null)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_35 $$ final Map<BuildTarget<?>, Collection<String>> map = Utils.REMOVED_SOURCES_KEY.get(context)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_17 $$ BuildOperations.markTargetsUpToDate(context, chunk)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_14 $$ doneSomething |= runBuildersForChunk(context, chunk)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_12 $$ doneSomething = processDeletedPaths(context, chunk.getTargets())[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_7 $$ sendBuildingTargetMessages(chunk.getTargets(), BuildingTargetProgressMessage.Event.STARTED)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_8 $$ Utils.ERRORS_DETECTED_KEY.set(context, Boolean.FALSE)[ FD ]
Line_4 $$ boolean doneSomething-->Line_14 $$ doneSomething |= runBuildersForChunk(context, chunk)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_13 $$ fsState.beforeChunkBuildStart(context, chunk)[ FD ]
Line_23 $$ final StringBuilder message = new StringBuilder()-->Line_27 $$ message.append(": ").append(exceptionMessage)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_3 $$ final BuildFSState fsState = myProjectDescriptor.fsState[ CD ]
Line_25 $$ final String exceptionMessage = e.getMessage()-->Line_27 $$ message.append(": ").append(exceptionMessage)[ FD ]
Line_31 $$ for (BuildRootDescriptor rd : context.getProjectDescriptor().getBuildRootIndex().clearTempRoots(context)) -->Line_32 $$ context.getProjectDescriptor().fsState.clearRecompile(rd)[ FD ]
Line_3 $$ final BuildFSState fsState = myProjectDescriptor.fsState-->Line_42 $$ fsState.registerDeleted(target, new File(path), null)[ FD ]
Line_35 $$ final Map<BuildTarget<?>, Collection<String>> map = Utils.REMOVED_SOURCES_KEY.get(context)-->Line_36 $$ if (map != null) [ FD ]
Line_37 $$ for (Map.Entry<BuildTarget<?>, Collection<String>> entry : map.entrySet()) -->Line_38 $$ final BuildTarget<?> target = entry.getKey()[ FD ]
Line_37 $$ for (Map.Entry<BuildTarget<?>, Collection<String>> entry : map.entrySet()) -->Line_39 $$ final Collection<String> paths = entry.getValue()[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_32 $$ context.getProjectDescriptor().fsState.clearRecompile(rd)[ FD ]
Line_39 $$ final Collection<String> paths = entry.getValue()-->Line_40 $$ if (paths != null) [ FD ]
Line_9 $$ for (BuildTarget<?> target : chunk.getTargets()) -->Line_10 $$ BuildOperations.ensureFSStateInitialized(context, target)[ FD ]
Line_25 $$ final String exceptionMessage = e.getMessage()-->Line_26 $$ if (exceptionMessage != null) [ FD ]
Line_12 $$ doneSomething = processDeletedPaths(context, chunk.getTargets())-->Line_14 $$ doneSomething |= runBuildersForChunk(context, chunk)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_4 $$ boolean doneSomething[ CD ]
Line_4 $$ boolean doneSomething-->Line_12 $$ doneSomething = processDeletedPaths(context, chunk.getTargets())[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_52 $$ sendBuildingTargetMessages(chunk.getTargets(), BuildingTargetProgressMessage.Event.FINISHED)[ FD ]
Line_26 $$ if (exceptionMessage != null) -->Line_27 $$ message.append(": ").append(exceptionMessage)[ CD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_16 $$ fsState.clearContextChunk(context)[ FD ]
Line_9 $$ for (BuildTarget<?> target : chunk.getTargets()) -->Line_42 $$ fsState.registerDeleted(target, new File(path), null)[ FD ]
Line_3 $$ final BuildFSState fsState = myProjectDescriptor.fsState-->Line_15 $$ fsState.clearContextRoundData(context)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_6 $$ context.setCompilationStartStamp(chunk.getTargets(), System.currentTimeMillis())[ FD ]
Line_23 $$ final StringBuilder message = new StringBuilder()-->Line_29 $$ throw new ProjectBuildException(message.toString(), e)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_9 $$ for (BuildTarget<?> target : chunk.getTargets()) [ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_10 $$ BuildOperations.ensureFSStateInitialized(context, target)[ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_24 $$ message.append(chunk.getPresentableName()).append(": ").append(e.getClass().getName())[ FD ]
Line_35 $$ final Map<BuildTarget<?>, Collection<String>> map = Utils.REMOVED_SOURCES_KEY.get(context)-->Line_37 $$ for (Map.Entry<BuildTarget<?>, Collection<String>> entry : map.entrySet()) [ FD ]
Line_2 $$ private void buildTargetsChunk(CompileContext context, final BuildTargetChunk chunk) throws ProjectBuildException -->Line_31 $$ for (BuildRootDescriptor rd : context.getProjectDescriptor().getBuildRootIndex().clearTempRoots(context)) [ FD ]
