Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_17 $$ writeContainerFinishData(containerId)[ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_22 $$ ContainerHistoryData data = store.getContainer(containerId)[ FD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_7 $$ writeContainerFinishData(containerId)[ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_16 $$ writeContainerStartData(containerId)[ FD ]
Line_14 $$ for (int i = 1; i <= numContainers; ++i) -->Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_17 $$ writeContainerFinishData(containerId)[ FD ]
Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_25 $$ Assert.assertEquals(containerId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_25 $$ Assert.assertEquals(containerId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_31 $$ containerId = ContainerId.newInstance(appAttemptId, 1)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_19 $$ Assert.assertEquals(numContainers, store.getContainers(appAttemptId).size())[ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_33 $$ writeContainerStartData(containerId)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_29 $$ Assert.assertEquals(ContainerId.newInstance(appAttemptId, 1), masterContainer.getContainerId())[ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_25 $$ Assert.assertEquals(containerId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_20 $$ for (int i = 1; i <= numContainers; ++i) -->Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ CD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_16 $$ writeContainerStartData(containerId)[ FD ]
Line_31 $$ containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_39 $$ writeContainerFinishData(containerId)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_31 $$ containerId = ContainerId.newInstance(appAttemptId, 1)[ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_39 $$ writeContainerFinishData(containerId)[ FD ]
Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_39 $$ writeContainerFinishData(containerId)[ FD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_24 $$ Assert.assertEquals(Priority.newInstance(containerId.getId()), data.getPriority())[ FD ]
Line_27 $$ ContainerHistoryData masterContainer = store.getAMContainer(appAttemptId)-->Line_29 $$ Assert.assertEquals(ContainerId.newInstance(appAttemptId, 1), masterContainer.getContainerId())[ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_27 $$ ContainerHistoryData masterContainer = store.getAMContainer(appAttemptId)[ CD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_12 $$ writeApplicationAttemptStartData(appAttemptId)[ CD ]
Line_14 $$ for (int i = 1; i <= numContainers; ++i) -->Line_16 $$ writeContainerStartData(containerId)[ CD ]
Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_24 $$ Assert.assertEquals(Priority.newInstance(containerId.getId()), data.getPriority())[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_14 $$ for (int i = 1; i <= numContainers; ++i) [ CD ]
Line_31 $$ containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_33 $$ writeContainerStartData(containerId)[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_30 $$ writeApplicationAttemptFinishData(appAttemptId)[ CD ]
Line_22 $$ ContainerHistoryData data = store.getContainer(containerId)-->Line_23 $$ Assert.assertNotNull(data)[ FD ]
Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)-->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ FD ]
Line_13 $$ int numContainers = 5-->Line_19 $$ Assert.assertEquals(numContainers, store.getContainers(appAttemptId).size())[ FD ]
Line_14 $$ for (int i = 1; i <= numContainers; ++i) -->Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_20 $$ for (int i = 1; i <= numContainers; ++i) -->Line_25 $$ Assert.assertEquals(containerId.toString(), data.getDiagnosticsInfo())[ CD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)[ CD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_3 $$ ApplicationId appId = ApplicationId.newInstance(0, 1)[ CD ]
Line_14 $$ for (int i = 1; i <= numContainers; ++i) -->Line_17 $$ writeContainerFinishData(containerId)[ CD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_19 $$ Assert.assertEquals(numContainers, store.getContainers(appAttemptId).size())[ CD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_24 $$ Assert.assertEquals(Priority.newInstance(containerId.getId()), data.getPriority())[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_29 $$ Assert.assertEquals(ContainerId.newInstance(appAttemptId, 1), masterContainer.getContainerId())[ CD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_12 $$ writeApplicationAttemptStartData(appAttemptId)[ FD ]
Line_20 $$ for (int i = 1; i <= numContainers; ++i) -->Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_30 $$ writeApplicationAttemptFinishData(appAttemptId)[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)[ CD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_22 $$ ContainerHistoryData data = store.getContainer(containerId)-->Line_24 $$ Assert.assertEquals(Priority.newInstance(containerId.getId()), data.getPriority())[ FD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_39 $$ writeContainerFinishData(containerId)[ FD ]
Line_20 $$ for (int i = 1; i <= numContainers; ++i) -->Line_24 $$ Assert.assertEquals(Priority.newInstance(containerId.getId()), data.getPriority())[ CD ]
Line_13 $$ int numContainers = 5-->Line_20 $$ for (int i = 1; i <= numContainers; ++i) [ FD ]
Line_20 $$ for (int i = 1; i <= numContainers; ++i) -->Line_23 $$ Assert.assertNotNull(data)[ CD ]
Line_27 $$ ContainerHistoryData masterContainer = store.getAMContainer(appAttemptId)-->Line_28 $$ Assert.assertNotNull(masterContainer)[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_31 $$ containerId = ContainerId.newInstance(appAttemptId, 1)[ CD ]
Line_22 $$ ContainerHistoryData data = store.getContainer(containerId)-->Line_25 $$ Assert.assertEquals(containerId.toString(), data.getDiagnosticsInfo())[ FD ]
Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_22 $$ ContainerHistoryData data = store.getContainer(containerId)[ FD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_31 $$ containerId = ContainerId.newInstance(appAttemptId, 1)[ FD ]
Line_20 $$ for (int i = 1; i <= numContainers; ++i) -->Line_22 $$ ContainerHistoryData data = store.getContainer(containerId)[ CD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_27 $$ ContainerHistoryData masterContainer = store.getAMContainer(appAttemptId)[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_13 $$ int numContainers = 5[ CD ]
Line_13 $$ int numContainers = 5-->Line_14 $$ for (int i = 1; i <= numContainers; ++i) [ FD ]
Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_31 $$ containerId = ContainerId.newInstance(appAttemptId, 1)[ FD ]
Line_14 $$ for (int i = 1; i <= numContainers; ++i) -->Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ CD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_33 $$ writeContainerStartData(containerId)[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_20 $$ for (int i = 1; i <= numContainers; ++i) [ CD ]
Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)-->Line_33 $$ writeContainerStartData(containerId)[ FD ]
Line_14 $$ for (int i = 1; i <= numContainers; ++i) -->Line_20 $$ for (int i = 1; i <= numContainers; ++i) [ FD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_21 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_4 $$ ApplicationAttemptId appAttemptId = ApplicationAttemptId.newInstance(appId, 1)-->Line_15 $$ containerId = ContainerId.newInstance(appAttemptId, i)[ FD ]
Line_2 $$ public void testReadWriteContainerHistory() throws Exception -->Line_28 $$ Assert.assertNotNull(masterContainer)[ CD ]
Line_5 $$ ContainerId containerId = ContainerId.newInstance(appAttemptId, 1)-->Line_22 $$ ContainerHistoryData data = store.getContainer(containerId)[ FD ]
