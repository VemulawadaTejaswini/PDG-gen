Line_3 $$ final SocketWelder serverSocketWelder = new SocketWelder()-->Line_4 $$ final SocketWelder clientSocketWelder = WelderTestUtil.transform(serverSocketWelder)[ FD ]
Line_4 $$ final SocketWelder clientSocketWelder = WelderTestUtil.transform(serverSocketWelder)-->Line_24 $$ clientSocketWelder.destroy()[ FD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_3 $$ final SocketWelder serverSocketWelder = new SocketWelder()[ CD ]
Line_12 $$ FutureTask<MockRegistrationReference> clientWeldingTask = new FutureTask<MockRegistrationReference>(new Callable<MockRegistrationReference>() -->Line_14 $$ return (MockRegistrationReference) clientSocketWelder.weld(new MockIntraband())[ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_4 $$ final SocketWelder clientSocketWelder = WelderTestUtil.transform(serverSocketWelder)[ CD ]
Line_5 $$ FutureTask<MockRegistrationReference> serverWeldingTask = new FutureTask<MockRegistrationReference>(new Callable<MockRegistrationReference>() -->Line_7 $$ return (MockRegistrationReference) serverSocketWelder.weld(new MockIntraband())[ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_5 $$ FutureTask<MockRegistrationReference> serverWeldingTask = new FutureTask<MockRegistrationReference>(new Callable<MockRegistrationReference>() [ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_20 $$ MockRegistrationReference clientMockRegistrationReference = clientWeldingTask.get()[ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_23 $$ serverSocketWelder.destroy()[ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_11 $$ serverWeldingThread.start()[ CD ]
Line_4 $$ final SocketWelder clientSocketWelder = WelderTestUtil.transform(serverSocketWelder)-->Line_14 $$ return (MockRegistrationReference) clientSocketWelder.weld(new MockIntraband())[ FD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_24 $$ clientSocketWelder.destroy()[ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_19 $$ MockRegistrationReference serverMockRegistrationReference = serverWeldingTask.get()[ CD ]
Line_4 $$ final SocketWelder clientSocketWelder = WelderTestUtil.transform(serverSocketWelder)-->Line_32 $$ clientSocketWelder.weld(new MockIntraband())[ FD ]
Line_3 $$ final SocketWelder serverSocketWelder = new SocketWelder()-->Line_26 $$ serverSocketWelder.weld(new MockIntraband())[ FD ]
Line_3 $$ final SocketWelder serverSocketWelder = new SocketWelder()-->Line_23 $$ serverSocketWelder.destroy()[ FD ]
Line_5 $$ FutureTask<MockRegistrationReference> serverWeldingTask = new FutureTask<MockRegistrationReference>(new Callable<MockRegistrationReference>() -->Line_19 $$ MockRegistrationReference serverMockRegistrationReference = serverWeldingTask.get()[ FD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_21 $$ WelderTestUtil.assertConnectted(serverMockRegistrationReference.getScatteringByteChannel(), clientMockRegistrationReference.getGatheringByteChannel())[ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_22 $$ WelderTestUtil.assertConnectted(clientMockRegistrationReference.getScatteringByteChannel(), serverMockRegistrationReference.getGatheringByteChannel())[ CD ]
Line_2 $$ public void testWeldSolingerOn() throws Exception -->Line_18 $$ clientWeldingThread.start()[ CD ]
Line_3 $$ final SocketWelder serverSocketWelder = new SocketWelder()-->Line_7 $$ return (MockRegistrationReference) serverSocketWelder.weld(new MockIntraband())[ FD ]
