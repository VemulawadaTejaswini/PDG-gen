Line_4 $$ if (myName == null) -->Line_5 $$ myName = project.getName()[ CD ]
Line_2 $$ public Module commitModule(@NotNull final Project project, @Nullable final ModifiableModuleModel model) -->Line_5 $$ myName = project.getName()[ FD ]
Line_2 $$ public Module commitModule(@NotNull final Project project, @Nullable final ModifiableModuleModel model) -->Line_3 $$ if (canCreateModule()) [ CD ]
Line_11 $$ return ApplicationManager.getApplication().runWriteAction(new ThrowableComputable<Module, Exception>() -->Line_13 $$ return createAndCommitIfNeeded(project, model, true)[ CD ]
Line_3 $$ if (canCreateModule()) -->Line_4 $$ if (myName == null) [ CD ]
Line_2 $$ public Module commitModule(@NotNull final Project project, @Nullable final ModifiableModuleModel model) -->Line_21 $$ return null[ CD ]
Line_2 $$ public Module commitModule(@NotNull final Project project, @Nullable final ModifiableModuleModel model) -->Line_13 $$ return createAndCommitIfNeeded(project, model, true)[ FD ]
Line_3 $$ if (canCreateModule()) -->Line_7 $$ if (myModuleFilePath == null) [ CD ]
Line_2 $$ public Module commitModule(@NotNull final Project project, @Nullable final ModifiableModuleModel model) -->Line_8 $$ myModuleFilePath = project.getBaseDir().getPath() + File.separator + myName + ModuleFileType.DOT_DEFAULT_EXTENSION[ FD ]
