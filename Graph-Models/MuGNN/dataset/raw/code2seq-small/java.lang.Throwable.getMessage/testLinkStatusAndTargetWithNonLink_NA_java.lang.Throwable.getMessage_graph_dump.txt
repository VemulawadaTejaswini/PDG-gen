Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_9 $$ createAndWriteFile(file)[ CD ]
Line_7 $$ Path file = new Path(testBaseDir1(), "file")-->Line_10 $$ assertEquals(wrapper.getFileStatus(file), wrapper.getFileLinkStatus(file))[ FD ]
Line_5 $$ Path dir = new Path(testBaseDir1())-->Line_11 $$ assertEquals(wrapper.getFileStatus(dir), wrapper.getFileLinkStatus(dir))[ FD ]
Line_7 $$ Path file = new Path(testBaseDir1(), "file")-->Line_8 $$ Path fileQual = new Path(schemeAuth, file.toString())[ FD ]
Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_11 $$ assertEquals(wrapper.getFileStatus(dir), wrapper.getFileLinkStatus(dir))[ CD ]
Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_10 $$ assertEquals(wrapper.getFileStatus(file), wrapper.getFileLinkStatus(file))[ CD ]
Line_5 $$ Path dir = new Path(testBaseDir1())-->Line_6 $$ Path dirQual = new Path(schemeAuth, dir.toString())[ FD ]
Line_5 $$ Path dir = new Path(testBaseDir1())-->Line_19 $$ wrapper.getLinkTarget(dir)[ FD ]
Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_5 $$ Path dir = new Path(testBaseDir1())[ CD ]
Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_8 $$ Path fileQual = new Path(schemeAuth, file.toString())[ CD ]
Line_7 $$ Path file = new Path(testBaseDir1(), "file")-->Line_9 $$ createAndWriteFile(file)[ FD ]
Line_7 $$ Path file = new Path(testBaseDir1(), "file")-->Line_13 $$ wrapper.getLinkTarget(file)[ FD ]
Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_4 $$ Path schemeAuth = new Path(testURI().toString())[ CD ]
Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_7 $$ Path file = new Path(testBaseDir1(), "file")[ CD ]
Line_2 $$ public void testLinkStatusAndTargetWithNonLink() throws IOException -->Line_6 $$ Path dirQual = new Path(schemeAuth, dir.toString())[ CD ]
