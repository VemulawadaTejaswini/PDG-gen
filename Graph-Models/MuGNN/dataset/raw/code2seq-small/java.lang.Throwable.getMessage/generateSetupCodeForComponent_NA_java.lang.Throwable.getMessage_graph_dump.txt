Line_3 $$ String className-->Line_26 $$ className = myFormLoader.getClassToBindName(nestedFormContainer)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_28 $$ className = getComponentCodeGenerator(lwComponent.getParent()).mapComponentClass(lwComponent.getComponentClassName())[ FD ]
Line_38 $$ if ((componentClass.getModifiers() & (Modifier.PRIVATE | Modifier.ABSTRACT)) != 0) -->Line_39 $$ creatable = false[ CD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_63 $$ if (binding == null) [ CD ]
Line_30 $$ Type componentType = typeFromClassName(className)-->Line_47 $$ componentType = Type.getType(componentClass.getDescriptor())[ FD ]
Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)-->Line_76 $$ generateComponentProperties(lwComponent, componentClass, generator, componentLocal)[ FD ]
Line_39 $$ creatable = false-->Line_42 $$ creatable = false[ FD ]
Line_85 $$ LwContainer container = (LwContainer) lwComponent-->Line_87 $$ for (int i = 0; i < container.getComponentCount(); i++) [ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_52 $$ throw new CodeGenerationException(lwComponent.getId(), e.getMessage(), e)[ FD ]
Line_4 $$ if (lwComponent instanceof LwNestedForm) -->Line_15 $$ if (nestedFormContainer.getComponentCount() == 0) [ CD ]
Line_42 $$ creatable = false-->Line_45 $$ if (!creatable) [ FD ]
Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)-->Line_46 $$ componentClass = Utils.suggestReplacementClass(componentClass)[ FD ]
Line_62 $$ final String binding = lwComponent.getBinding()-->Line_63 $$ if (binding == null) [ FD ]
Line_11 $$ nestedFormContainer = myFormLoader.loadForm(nestedForm.getFormFileName())-->Line_18 $$ if (nestedFormContainer.getComponent(0).getBinding() == null) [ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_19 $$ throw new CodeGenerationException(lwComponent.getId(), "No binding on root component of nested form " + nestedForm.getFormFileName())[ FD ]
Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)-->Line_82 $$ parentCodeGenerator.generateComponentLayout(lwComponent, generator, componentLocal, parentLocal)[ FD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_59 $$ generator.storeLocal(componentLocal)[ CD ]
Line_4 $$ if (lwComponent instanceof LwNestedForm) -->Line_6 $$ LwNestedForm nestedForm = (LwNestedForm) lwComponent[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_82 $$ parentCodeGenerator.generateComponentLayout(lwComponent, generator, componentLocal, parentLocal)[ FD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_56 $$ generator.newInstance(componentType)[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_3 $$ String className[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_76 $$ generateComponentProperties(lwComponent, componentClass, generator, componentLocal)[ FD ]
Line_85 $$ LwContainer container = (LwContainer) lwComponent-->Line_88 $$ generateSetupCodeForComponent((LwComponent) container.getComponent(i), generator, componentLocal)[ FD ]
Line_26 $$ className = myFormLoader.getClassToBindName(nestedFormContainer)-->Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)[ FD ]
Line_37 $$ boolean creatable = true-->Line_39 $$ creatable = false[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_60 $$ generateFieldBinding(lwComponent, generator, componentLocal)[ FD ]
Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)-->Line_86 $$ generateBorder(container, generator, componentLocal)[ FD ]
Line_4 $$ if (lwComponent instanceof LwNestedForm) -->Line_7 $$ if (myFormLoader == null) [ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_79 $$ if (lwComponent instanceof LwNestedForm) [ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_84 $$ if (lwComponent instanceof LwContainer) [ CD ]
Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)-->Line_41 $$ if (!componentClass.hasDefaultPublicConstructor()) [ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_68 $$ generator.storeLocal(componentLocal)[ FD ]
Line_26 $$ className = myFormLoader.getClassToBindName(nestedFormContainer)-->Line_28 $$ className = getComponentCodeGenerator(lwComponent.getParent()).mapComponentClass(lwComponent.getComponentClassName())[ FD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_67 $$ generator.getField(getMainClassType(), binding, Type.getType((String) myFieldDescMap.get(binding)))[ CD ]
Line_26 $$ className = myFormLoader.getClassToBindName(nestedFormContainer)-->Line_30 $$ Type componentType = typeFromClassName(className)[ FD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_58 $$ generator.invokeConstructor(componentType, Method.getMethod("void <init>()"))[ CD ]
Line_84 $$ if (lwComponent instanceof LwContainer) -->Line_85 $$ LwContainer container = (LwContainer) lwComponent[ CD ]
Line_47 $$ componentType = Type.getType(componentClass.getDescriptor())-->Line_56 $$ generator.newInstance(componentType)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_84 $$ if (lwComponent instanceof LwContainer) [ FD ]
Line_15 $$ if (nestedFormContainer.getComponentCount() == 0) -->Line_16 $$ return[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_31 $$ int componentLocal = generator.newLocal(componentType)[ FD ]
Line_84 $$ if (lwComponent instanceof LwContainer) -->Line_86 $$ generateBorder(container, generator, componentLocal)[ CD ]
Line_77 $$ if (!(lwComponent.getParent() instanceof LwRootContainer)) -->Line_78 $$ final LayoutCodeGenerator parentCodeGenerator = getComponentCodeGenerator(lwComponent.getParent())[ CD ]
Line_3 $$ String className-->Line_30 $$ Type componentType = typeFromClassName(className)[ FD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_76 $$ generateComponentProperties(lwComponent, componentClass, generator, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_78 $$ final LayoutCodeGenerator parentCodeGenerator = getComponentCodeGenerator(lwComponent.getParent())[ FD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_73 $$ getComponentCodeGenerator(lwContainer).generateContainerLayout(lwContainer, generator, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)[ CD ]
Line_6 $$ LwNestedForm nestedForm = (LwNestedForm) lwComponent-->Line_11 $$ nestedFormContainer = myFormLoader.loadForm(nestedForm.getFormFileName())[ FD ]
Line_85 $$ LwContainer container = (LwContainer) lwComponent-->Line_86 $$ generateBorder(container, generator, componentLocal)[ FD ]
Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)-->Line_47 $$ componentType = Type.getType(componentClass.getDescriptor())[ FD ]
Line_71 $$ LwContainer lwContainer = (LwContainer) lwComponent-->Line_72 $$ if (!lwContainer.isCustomCreate() || lwContainer.getComponentCount() > 0) [ FD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_60 $$ generateFieldBinding(lwComponent, generator, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_13 $$ throw new CodeGenerationException(lwComponent.getId(), e.getMessage())[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_34 $$ validateFieldBinding(lwComponent, componentClass)[ CD ]
Line_4 $$ if (lwComponent instanceof LwNestedForm) -->Line_5 $$ LwRootContainer nestedFormContainer[ CD ]
Line_39 $$ creatable = false-->Line_45 $$ if (!creatable) [ FD ]
Line_77 $$ if (!(lwComponent.getParent() instanceof LwRootContainer)) -->Line_79 $$ if (lwComponent instanceof LwNestedForm) [ CD ]
Line_87 $$ for (int i = 0; i < container.getComponentCount(); i++) -->Line_88 $$ generateSetupCodeForComponent((LwComponent) container.getComponent(i), generator, componentLocal)[ FD ]
Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)-->Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_32 $$ myIdToLocalMap.put(lwComponent.getId(), new Integer(componentLocal))[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_4 $$ if (lwComponent instanceof LwNestedForm) [ CD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_82 $$ parentCodeGenerator.generateComponentLayout(lwComponent, generator, componentLocal, parentLocal)[ FD ]
Line_46 $$ componentClass = Utils.suggestReplacementClass(componentClass)-->Line_76 $$ generateComponentProperties(lwComponent, componentClass, generator, componentLocal)[ FD ]
Line_6 $$ LwNestedForm nestedForm = (LwNestedForm) lwComponent-->Line_22 $$ Utils.validateNestedFormLoop(nestedForm.getFormFileName(), myFormLoader)[ FD ]
Line_4 $$ if (lwComponent instanceof LwNestedForm) -->Line_28 $$ className = getComponentCodeGenerator(lwComponent.getParent()).mapComponentClass(lwComponent.getComponentClassName())[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_4 $$ if (lwComponent instanceof LwNestedForm) [ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_34 $$ validateFieldBinding(lwComponent, componentClass)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_73 $$ getComponentCodeGenerator(lwContainer).generateContainerLayout(lwContainer, generator, componentLocal)[ FD ]
Line_62 $$ final String binding = lwComponent.getBinding()-->Line_67 $$ generator.getField(getMainClassType(), binding, Type.getType((String) myFieldDescMap.get(binding)))[ FD ]
Line_46 $$ componentClass = Utils.suggestReplacementClass(componentClass)-->Line_47 $$ componentType = Type.getType(componentClass.getDescriptor())[ FD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_59 $$ generator.storeLocal(componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_58 $$ generator.invokeConstructor(componentType, Method.getMethod("void <init>()"))[ FD ]
Line_79 $$ if (lwComponent instanceof LwNestedForm) -->Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_59 $$ generator.storeLocal(componentLocal)[ FD ]
Line_6 $$ LwNestedForm nestedForm = (LwNestedForm) lwComponent-->Line_19 $$ throw new CodeGenerationException(lwComponent.getId(), "No binding on root component of nested form " + nestedForm.getFormFileName())[ FD ]
Line_84 $$ if (lwComponent instanceof LwContainer) -->Line_87 $$ for (int i = 0; i < container.getComponentCount(); i++) [ CD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_88 $$ generateSetupCodeForComponent((LwComponent) container.getComponent(i), generator, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_31 $$ int componentLocal = generator.newLocal(componentType)[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_50 $$ throw new CodeGenerationException(lwComponent.getId(), e.getMessage(), e)[ FD ]
Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)-->Line_34 $$ validateFieldBinding(lwComponent, componentClass)[ FD ]
Line_70 $$ if (lwComponent instanceof LwContainer) -->Line_71 $$ LwContainer lwContainer = (LwContainer) lwComponent[ CD ]
Line_3 $$ String className-->Line_28 $$ className = getComponentCodeGenerator(lwComponent.getParent()).mapComponentClass(lwComponent.getComponentClassName())[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) [ CD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_57 $$ generator.dup()[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_57 $$ generator.dup()[ FD ]
Line_28 $$ className = getComponentCodeGenerator(lwComponent.getParent()).mapComponentClass(lwComponent.getComponentClassName())-->Line_30 $$ Type componentType = typeFromClassName(className)[ FD ]
Line_4 $$ if (lwComponent instanceof LwNestedForm) -->Line_18 $$ if (nestedFormContainer.getComponent(0).getBinding() == null) [ CD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_68 $$ generator.storeLocal(componentLocal)[ FD ]
Line_5 $$ LwRootContainer nestedFormContainer-->Line_18 $$ if (nestedFormContainer.getComponent(0).getBinding() == null) [ FD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_86 $$ generateBorder(container, generator, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_66 $$ generator.loadThis()[ FD ]
Line_28 $$ className = getComponentCodeGenerator(lwComponent.getParent()).mapComponentClass(lwComponent.getComponentClassName())-->Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)[ FD ]
Line_31 $$ int componentLocal = generator.newLocal(componentType)-->Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) [ FD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_62 $$ final String binding = lwComponent.getBinding()[ CD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_68 $$ generator.storeLocal(componentLocal)[ CD ]
Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)-->Line_38 $$ if ((componentClass.getModifiers() & (Modifier.PRIVATE | Modifier.ABSTRACT)) != 0) [ FD ]
Line_4 $$ if (lwComponent instanceof LwNestedForm) -->Line_26 $$ className = myFormLoader.getClassToBindName(nestedFormContainer)[ CD ]
Line_72 $$ if (!lwContainer.isCustomCreate() || lwContainer.getComponentCount() > 0) -->Line_73 $$ getComponentCodeGenerator(lwContainer).generateContainerLayout(lwContainer, generator, componentLocal)[ CD ]
Line_3 $$ String className-->Line_33 $$ InstrumentationClassFinder.PseudoClass componentClass = getComponentClass(className, myFinder)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)[ FD ]
Line_47 $$ componentType = Type.getType(componentClass.getDescriptor())-->Line_58 $$ generator.invokeConstructor(componentType, Method.getMethod("void <init>()"))[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_67 $$ generator.getField(getMainClassType(), binding, Type.getType((String) myFieldDescMap.get(binding)))[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_70 $$ if (lwComponent instanceof LwContainer) [ CD ]
Line_45 $$ if (!creatable) -->Line_47 $$ componentType = Type.getType(componentClass.getDescriptor())[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_76 $$ generateComponentProperties(lwComponent, componentClass, generator, componentLocal)[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_77 $$ if (!(lwComponent.getParent() instanceof LwRootContainer)) [ FD ]
Line_5 $$ LwRootContainer nestedFormContainer-->Line_26 $$ className = myFormLoader.getClassToBindName(nestedFormContainer)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_64 $$ throw new CodeGenerationException(lwComponent.getId(), "Only components bound to fields can have custom creation code")[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_70 $$ if (lwComponent instanceof LwContainer) [ FD ]
Line_41 $$ if (!componentClass.hasDefaultPublicConstructor()) -->Line_42 $$ creatable = false[ CD ]
Line_70 $$ if (lwComponent instanceof LwContainer) -->Line_72 $$ if (!lwContainer.isCustomCreate() || lwContainer.getComponentCount() > 0) [ CD ]
Line_45 $$ if (!creatable) -->Line_46 $$ componentClass = Utils.suggestReplacementClass(componentClass)[ CD ]
Line_30 $$ Type componentType = typeFromClassName(className)-->Line_58 $$ generator.invokeConstructor(componentType, Method.getMethod("void <init>()"))[ FD ]
Line_38 $$ if ((componentClass.getModifiers() & (Modifier.PRIVATE | Modifier.ABSTRACT)) != 0) -->Line_41 $$ if (!componentClass.hasDefaultPublicConstructor()) [ CD ]
Line_46 $$ componentClass = Utils.suggestReplacementClass(componentClass)-->Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_86 $$ generateBorder(container, generator, componentLocal)[ FD ]
Line_30 $$ Type componentType = typeFromClassName(className)-->Line_56 $$ generator.newInstance(componentType)[ FD ]
Line_71 $$ LwContainer lwContainer = (LwContainer) lwComponent-->Line_73 $$ getComponentCodeGenerator(lwContainer).generateContainerLayout(lwContainer, generator, componentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_56 $$ generator.newInstance(componentType)[ FD ]
Line_5 $$ LwRootContainer nestedFormContainer-->Line_15 $$ if (nestedFormContainer.getComponentCount() == 0) [ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_88 $$ generateSetupCodeForComponent((LwComponent) container.getComponent(i), generator, componentLocal)[ FD ]
Line_11 $$ nestedFormContainer = myFormLoader.loadForm(nestedForm.getFormFileName())-->Line_15 $$ if (nestedFormContainer.getComponentCount() == 0) [ FD ]
Line_77 $$ if (!(lwComponent.getParent() instanceof LwRootContainer)) -->Line_82 $$ parentCodeGenerator.generateComponentLayout(lwComponent, generator, componentLocal, parentLocal)[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_62 $$ final String binding = lwComponent.getBinding()[ FD ]
Line_87 $$ for (int i = 0; i < container.getComponentCount(); i++) -->Line_88 $$ generateSetupCodeForComponent((LwComponent) container.getComponent(i), generator, componentLocal)[ CD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_32 $$ myIdToLocalMap.put(lwComponent.getId(), new Integer(componentLocal))[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_35 $$ if (myIgnoreCustomCreation) [ CD ]
Line_37 $$ boolean creatable = true-->Line_42 $$ creatable = false[ FD ]
Line_37 $$ boolean creatable = true-->Line_45 $$ if (!creatable) [ FD ]
Line_80 $$ componentLocal = getNestedFormComponent(generator, componentClass, componentLocal)-->Line_88 $$ generateSetupCodeForComponent((LwComponent) container.getComponent(i), generator, componentLocal)[ FD ]
Line_5 $$ LwRootContainer nestedFormContainer-->Line_11 $$ nestedFormContainer = myFormLoader.loadForm(nestedForm.getFormFileName())[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_77 $$ if (!(lwComponent.getParent() instanceof LwRootContainer)) [ CD ]
Line_78 $$ final LayoutCodeGenerator parentCodeGenerator = getComponentCodeGenerator(lwComponent.getParent())-->Line_82 $$ parentCodeGenerator.generateComponentLayout(lwComponent, generator, componentLocal, parentLocal)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_24 $$ throw new CodeGenerationException(lwComponent.getId(), "Recursive form nesting is not allowed")[ FD ]
Line_30 $$ Type componentType = typeFromClassName(className)-->Line_31 $$ int componentLocal = generator.newLocal(componentType)[ FD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_66 $$ generator.loadThis()[ CD ]
Line_11 $$ nestedFormContainer = myFormLoader.loadForm(nestedForm.getFormFileName())-->Line_26 $$ className = myFormLoader.getClassToBindName(nestedFormContainer)[ FD ]
Line_2 $$ private void generateSetupCodeForComponent(final LwComponent lwComponent, final GeneratorAdapter generator, final int parentLocal) throws CodeGenerationException -->Line_30 $$ Type componentType = typeFromClassName(className)[ CD ]
Line_55 $$ if (!lwComponent.isCustomCreate() || myIgnoreCustomCreation) -->Line_60 $$ generateFieldBinding(lwComponent, generator, componentLocal)[ CD ]
