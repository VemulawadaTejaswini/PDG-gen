Line_13 $$ MetaData newMetaData = client().admin().cluster().prepareState().get().getState().getMetaData()-->Line_15 $$ request.process(newMetaData, new MappingMetaData(currentMapper), true, "new-index")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_8 $$ IndexRequest oldIndexDateIndexRequest = new IndexRequest("old-index", "type", "1").source(source).timestamp("1970-01-01")[ CD ]
Line_7 $$ MetaData metaData = client().admin().cluster().prepareState().get().getState().getMetaData()-->Line_11 $$ oldIndexTimestampIndexRequest.process(metaData, new MappingMetaData(docMapper), true, "old-index")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_4 $$ BytesReference source = XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes()[ CD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_3 $$ String mapping = XContentFactory.jsonBuilder().startObject().startObject("type").startObject("_timestamp").field("enabled", true).field("format", "dateOptionalTime").endObject().endObject().endObject().string()[ CD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_15 $$ request.process(newMetaData, new MappingMetaData(currentMapper), true, "new-index")[ CD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_11 $$ oldIndexTimestampIndexRequest.process(metaData, new MappingMetaData(docMapper), true, "old-index")[ CD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_13 $$ MetaData newMetaData = client().admin().cluster().prepareState().get().getState().getMetaData()[ CD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_9 $$ oldIndexDateIndexRequest.process(metaData, new MappingMetaData(docMapper), true, "old-index")[ CD ]
Line_14 $$ IndexRequest request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1970-01-01")-->Line_16 $$ request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1234567890")[ FD ]
Line_13 $$ MetaData newMetaData = client().admin().cluster().prepareState().get().getState().getMetaData()-->Line_18 $$ request.process(newMetaData, new MappingMetaData(currentMapper), true, "new-index")[ FD ]
Line_4 $$ BytesReference source = XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes()-->Line_8 $$ IndexRequest oldIndexDateIndexRequest = new IndexRequest("old-index", "type", "1").source(source).timestamp("1970-01-01")[ FD ]
Line_4 $$ BytesReference source = XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes()-->Line_16 $$ request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1234567890")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_12 $$ DocumentMapper currentMapper = createIndex("new-index").mapperService().documentMapperParser().parse("type", new CompressedXContent(mapping))[ CD ]
Line_10 $$ IndexRequest oldIndexTimestampIndexRequest = new IndexRequest("old-index", "type", "1").source(source).timestamp("1234567890")-->Line_11 $$ oldIndexTimestampIndexRequest.process(metaData, new MappingMetaData(docMapper), true, "old-index")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_6 $$ DocumentMapper docMapper = createIndex("old-index", oldSettings).mapperService().documentMapperParser().parse("type", new CompressedXContent(mapping))[ CD ]
Line_14 $$ IndexRequest request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1970-01-01")-->Line_15 $$ request.process(newMetaData, new MappingMetaData(currentMapper), true, "new-index")[ FD ]
Line_4 $$ BytesReference source = XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes()-->Line_14 $$ IndexRequest request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1970-01-01")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_7 $$ MetaData metaData = client().admin().cluster().prepareState().get().getState().getMetaData()[ CD ]
Line_4 $$ BytesReference source = XContentFactory.jsonBuilder().startObject().field("field", "value").endObject().bytes()-->Line_10 $$ IndexRequest oldIndexTimestampIndexRequest = new IndexRequest("old-index", "type", "1").source(source).timestamp("1234567890")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_14 $$ IndexRequest request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1970-01-01")[ CD ]
Line_16 $$ request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1234567890")-->Line_18 $$ request.process(newMetaData, new MappingMetaData(currentMapper), true, "new-index")[ FD ]
Line_5 $$ Settings oldSettings = settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, randomVersionBetween(random(), Version.V_0_90_0, Version.V_1_6_0)).build()-->Line_6 $$ DocumentMapper docMapper = createIndex("old-index", oldSettings).mapperService().documentMapperParser().parse("type", new CompressedXContent(mapping))[ FD ]
Line_8 $$ IndexRequest oldIndexDateIndexRequest = new IndexRequest("old-index", "type", "1").source(source).timestamp("1970-01-01")-->Line_9 $$ oldIndexDateIndexRequest.process(metaData, new MappingMetaData(docMapper), true, "old-index")[ FD ]
Line_7 $$ MetaData metaData = client().admin().cluster().prepareState().get().getState().getMetaData()-->Line_9 $$ oldIndexDateIndexRequest.process(metaData, new MappingMetaData(docMapper), true, "old-index")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_16 $$ request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1234567890")[ CD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_5 $$ Settings oldSettings = settingsBuilder().put(IndexMetaData.SETTING_VERSION_CREATED, randomVersionBetween(random(), Version.V_0_90_0, Version.V_1_6_0)).build()[ CD ]
Line_14 $$ IndexRequest request = new IndexRequest("new-index", "type", "1").source(source).timestamp("1970-01-01")-->Line_18 $$ request.process(newMetaData, new MappingMetaData(currentMapper), true, "new-index")[ FD ]
Line_2 $$ public void testThatIndicesBefore2xMustSupportUnixTimestampsInAnyDateFormat() throws Exception -->Line_10 $$ IndexRequest oldIndexTimestampIndexRequest = new IndexRequest("old-index", "type", "1").source(source).timestamp("1234567890")[ CD ]
