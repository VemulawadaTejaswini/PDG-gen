Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_21 $$ client.start()[ CD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_19 $$ TimelineClient client = TimelineClient.createTimelineClient()[ CD ]
Line_27 $$ TimelinePutResponse response = client.putEntities(entities.getEntities().toArray(new TimelineEntity[entities.getEntities().size()]))-->Line_28 $$ if (response.getErrors().size() == 0) [ FD ]
Line_19 $$ TimelineClient client = TimelineClient.createTimelineClient()-->Line_21 $$ client.start()[ FD ]
Line_8 $$ ObjectMapper mapper = new ObjectMapper()-->Line_12 $$ entities = mapper.readValue(jsonFile, TimelineEntities.class)[ FD ]
Line_19 $$ TimelineClient client = TimelineClient.createTimelineClient()-->Line_20 $$ client.init(conf)[ FD ]
Line_10 $$ TimelineEntities entities = null-->Line_27 $$ TimelinePutResponse response = client.putEntities(entities.getEntities().toArray(new TimelineEntity[entities.getEntities().size()]))[ FD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_4 $$ if (!jsonFile.exists()) [ CD ]
Line_4 $$ if (!jsonFile.exists()) -->Line_6 $$ return[ CD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_18 $$ Configuration conf = new YarnConfiguration()[ CD ]
Line_31 $$ for (TimelinePutResponse.TimelinePutError error : response.getErrors()) -->Line_32 $$ System.out.println("TimelineEntity [" + error.getEntityType() + ":" + error.getEntityId() + "] is not successfully put. Error code: " + error.getErrorCode())[ FD ]
Line_19 $$ TimelineClient client = TimelineClient.createTimelineClient()-->Line_24 $$ Token<TimelineDelegationTokenIdentifier> token = client.getDelegationToken(UserGroupInformation.getCurrentUser().getUserName())[ FD ]
Line_23 $$ if (UserGroupInformation.isSecurityEnabled() && conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED, false)) -->Line_24 $$ Token<TimelineDelegationTokenIdentifier> token = client.getDelegationToken(UserGroupInformation.getCurrentUser().getUserName())[ CD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_8 $$ ObjectMapper mapper = new ObjectMapper()[ CD ]
Line_18 $$ Configuration conf = new YarnConfiguration()-->Line_23 $$ if (UserGroupInformation.isSecurityEnabled() && conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED, false)) [ FD ]
Line_19 $$ TimelineClient client = TimelineClient.createTimelineClient()-->Line_39 $$ client.stop()[ FD ]
Line_8 $$ ObjectMapper mapper = new ObjectMapper()-->Line_9 $$ YarnJacksonJaxbJsonProvider.configObjectMapper(mapper)[ FD ]
Line_4 $$ if (!jsonFile.exists()) -->Line_5 $$ System.out.println("Error: File [" + jsonFile.getAbsolutePath() + "] doesn't exist")[ CD ]
Line_27 $$ TimelinePutResponse response = client.putEntities(entities.getEntities().toArray(new TimelineEntity[entities.getEntities().size()]))-->Line_31 $$ for (TimelinePutResponse.TimelinePutError error : response.getErrors()) [ FD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_20 $$ client.init(conf)[ CD ]
Line_3 $$ File jsonFile = new File(path)-->Line_5 $$ System.out.println("Error: File [" + jsonFile.getAbsolutePath() + "] doesn't exist")[ FD ]
Line_3 $$ File jsonFile = new File(path)-->Line_4 $$ if (!jsonFile.exists()) [ FD ]
Line_12 $$ entities = mapper.readValue(jsonFile, TimelineEntities.class)-->Line_27 $$ TimelinePutResponse response = client.putEntities(entities.getEntities().toArray(new TimelineEntity[entities.getEntities().size()]))[ FD ]
Line_10 $$ TimelineEntities entities = null-->Line_12 $$ entities = mapper.readValue(jsonFile, TimelineEntities.class)[ FD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_3 $$ File jsonFile = new File(path)[ CD ]
Line_28 $$ if (response.getErrors().size() == 0) -->Line_29 $$ System.out.println("Timeline data is successfully put")[ CD ]
Line_23 $$ if (UserGroupInformation.isSecurityEnabled() && conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED, false)) -->Line_25 $$ UserGroupInformation.getCurrentUser().addToken(token)[ CD ]
Line_3 $$ File jsonFile = new File(path)-->Line_12 $$ entities = mapper.readValue(jsonFile, TimelineEntities.class)[ FD ]
Line_18 $$ Configuration conf = new YarnConfiguration()-->Line_20 $$ client.init(conf)[ FD ]
Line_19 $$ TimelineClient client = TimelineClient.createTimelineClient()-->Line_27 $$ TimelinePutResponse response = client.putEntities(entities.getEntities().toArray(new TimelineEntity[entities.getEntities().size()]))[ FD ]
Line_24 $$ Token<TimelineDelegationTokenIdentifier> token = client.getDelegationToken(UserGroupInformation.getCurrentUser().getUserName())-->Line_25 $$ UserGroupInformation.getCurrentUser().addToken(token)[ FD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_9 $$ YarnJacksonJaxbJsonProvider.configObjectMapper(mapper)[ CD ]
Line_2 $$ private static void putTimelineEntitiesInJSONFile(String path) -->Line_10 $$ TimelineEntities entities = null[ CD ]
