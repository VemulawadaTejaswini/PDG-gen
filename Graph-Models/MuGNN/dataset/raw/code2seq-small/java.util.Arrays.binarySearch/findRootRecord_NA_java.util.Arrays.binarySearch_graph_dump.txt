Line_7 $$ final DataInputStream input = readAttribute(1, ourChildrenAttr)-->Line_27 $$ input.close()[ FD ]
Line_31 $$ int id-->Line_33 $$ id = createRecord()[ FD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_24 $$ prevId = ids[i] = id[ CD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_20 $$ if (name == root) [ CD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_23 $$ prevNameId = names[i] = name[ CD ]
Line_30 $$ final DataOutputStream output = writeAttribute(1, ourChildrenAttr)-->Line_37 $$ saveNameIdSequenceWithDeltas(names, ids, output)[ FD ]
Line_14 $$ ids = ArrayUtil.newIntArray(count)-->Line_34 $$ int index = Arrays.binarySearch(ids, id)[ FD ]
Line_18 $$ final int name = DataInputOutputUtil.readINT(input) + prevNameId-->Line_20 $$ if (name == root) [ FD ]
Line_9 $$ int[] ids = ArrayUtil.EMPTY_INT_ARRAY-->Line_35 $$ ids = ArrayUtil.insert(ids, -index - 1, id)[ FD ]
Line_2 $$ public static int findRootRecord(@NotNull String rootUrl) -->Line_6 $$ final int root = getNames().enumerate(rootUrl)[ FD ]
Line_7 $$ final DataInputStream input = readAttribute(1, ourChildrenAttr)-->Line_12 $$ final int count = DataInputOutputUtil.readINT(input)[ FD ]
Line_18 $$ final int name = DataInputOutputUtil.readINT(input) + prevNameId-->Line_23 $$ prevNameId = names[i] = name[ FD ]
Line_9 $$ int[] ids = ArrayUtil.EMPTY_INT_ARRAY-->Line_34 $$ int index = Arrays.binarySearch(ids, id)[ FD ]
Line_8 $$ int[] names = ArrayUtil.EMPTY_INT_ARRAY-->Line_13 $$ names = ArrayUtil.newIntArray(count)[ FD ]
Line_12 $$ final int count = DataInputOutputUtil.readINT(input)-->Line_14 $$ ids = ArrayUtil.newIntArray(count)[ FD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_19 $$ final int id = DataInputOutputUtil.readINT(input) + prevId[ CD ]
Line_34 $$ int index = Arrays.binarySearch(ids, id)-->Line_35 $$ ids = ArrayUtil.insert(ids, -index - 1, id)[ FD ]
Line_16 $$ int prevNameId = 0-->Line_23 $$ prevNameId = names[i] = name[ FD ]
Line_35 $$ ids = ArrayUtil.insert(ids, -index - 1, id)-->Line_37 $$ saveNameIdSequenceWithDeltas(names, ids, output)[ FD ]
Line_30 $$ final DataOutputStream output = writeAttribute(1, ourChildrenAttr)-->Line_39 $$ output.close()[ FD ]
Line_13 $$ names = ArrayUtil.newIntArray(count)-->Line_37 $$ saveNameIdSequenceWithDeltas(names, ids, output)[ FD ]
Line_12 $$ final int count = DataInputOutputUtil.readINT(input)-->Line_13 $$ names = ArrayUtil.newIntArray(count)[ FD ]
Line_34 $$ int index = Arrays.binarySearch(ids, id)-->Line_36 $$ names = ArrayUtil.insert(names, -index - 1, root)[ FD ]
Line_15 $$ int prevId = 0-->Line_24 $$ prevId = ids[i] = id[ FD ]
Line_19 $$ final int id = DataInputOutputUtil.readINT(input) + prevId-->Line_33 $$ id = createRecord()[ FD ]
Line_20 $$ if (name == root) -->Line_21 $$ return id[ CD ]
Line_12 $$ final int count = DataInputOutputUtil.readINT(input)-->Line_17 $$ for (int i = 0; i < count; i++) [ FD ]
Line_36 $$ names = ArrayUtil.insert(names, -index - 1, root)-->Line_37 $$ saveNameIdSequenceWithDeltas(names, ids, output)[ FD ]
Line_31 $$ int id-->Line_34 $$ int index = Arrays.binarySearch(ids, id)[ FD ]
Line_33 $$ id = createRecord()-->Line_34 $$ int index = Arrays.binarySearch(ids, id)[ FD ]
Line_31 $$ int id-->Line_35 $$ ids = ArrayUtil.insert(ids, -index - 1, id)[ FD ]
Line_7 $$ final DataInputStream input = readAttribute(1, ourChildrenAttr)-->Line_18 $$ final int name = DataInputOutputUtil.readINT(input) + prevNameId[ FD ]
Line_8 $$ int[] names = ArrayUtil.EMPTY_INT_ARRAY-->Line_36 $$ names = ArrayUtil.insert(names, -index - 1, root)[ FD ]
Line_6 $$ final int root = getNames().enumerate(rootUrl)-->Line_36 $$ names = ArrayUtil.insert(names, -index - 1, root)[ FD ]
Line_2 $$ public static int findRootRecord(@NotNull String rootUrl) -->Line_3 $$ w.lock()[ CD ]
Line_8 $$ int[] names = ArrayUtil.EMPTY_INT_ARRAY-->Line_37 $$ saveNameIdSequenceWithDeltas(names, ids, output)[ FD ]
Line_19 $$ final int id = DataInputOutputUtil.readINT(input) + prevId-->Line_34 $$ int index = Arrays.binarySearch(ids, id)[ FD ]
Line_7 $$ final DataInputStream input = readAttribute(1, ourChildrenAttr)-->Line_10 $$ if (input != null) [ FD ]
Line_17 $$ for (int i = 0; i < count; i++) -->Line_18 $$ final int name = DataInputOutputUtil.readINT(input) + prevNameId[ CD ]
Line_6 $$ final int root = getNames().enumerate(rootUrl)-->Line_20 $$ if (name == root) [ FD ]
Line_14 $$ ids = ArrayUtil.newIntArray(count)-->Line_35 $$ ids = ArrayUtil.insert(ids, -index - 1, id)[ FD ]
Line_9 $$ int[] ids = ArrayUtil.EMPTY_INT_ARRAY-->Line_37 $$ saveNameIdSequenceWithDeltas(names, ids, output)[ FD ]
Line_13 $$ names = ArrayUtil.newIntArray(count)-->Line_36 $$ names = ArrayUtil.insert(names, -index - 1, root)[ FD ]
Line_14 $$ ids = ArrayUtil.newIntArray(count)-->Line_37 $$ saveNameIdSequenceWithDeltas(names, ids, output)[ FD ]
Line_7 $$ final DataInputStream input = readAttribute(1, ourChildrenAttr)-->Line_19 $$ final int id = DataInputOutputUtil.readINT(input) + prevId[ FD ]
Line_19 $$ final int id = DataInputOutputUtil.readINT(input) + prevId-->Line_35 $$ ids = ArrayUtil.insert(ids, -index - 1, id)[ FD ]
Line_33 $$ id = createRecord()-->Line_35 $$ ids = ArrayUtil.insert(ids, -index - 1, id)[ FD ]
Line_9 $$ int[] ids = ArrayUtil.EMPTY_INT_ARRAY-->Line_14 $$ ids = ArrayUtil.newIntArray(count)[ FD ]
Line_19 $$ final int id = DataInputOutputUtil.readINT(input) + prevId-->Line_24 $$ prevId = ids[i] = id[ FD ]
