Line_39 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(DLFileEntry.class.getName(), uploadPortletRequest)-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_43 $$ if (cmd.equals(Constants.ADD_DYNAMIC)) -->Line_44 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()[ CD ]
Line_39 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(DLFileEntry.class.getName(), uploadPortletRequest)-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_8 $$ long folderId = ParamUtil.getLong(uploadPortletRequest, "folderId")-->Line_14 $$ if (folderId > 0) [ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)[ FD ]
Line_20 $$ InputStream inputStream = null-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_27 $$ if (cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC) || (size > 0)) -->Line_28 $$ String portletName = portletConfig.getPortletName()[ CD ]
Line_14 $$ if (folderId > 0) -->Line_16 $$ if (folder.getGroupId() != themeDisplay.getScopeGroupId()) [ CD ]
Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_5 $$ String cmd = ParamUtil.getString(uploadPortletRequest, Constants.CMD)[ FD ]
Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_30 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ FD ]
Line_11 $$ String description = ParamUtil.getString(uploadPortletRequest, "description")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_13 $$ boolean majorVersion = ParamUtil.getBoolean(uploadPortletRequest, "majorVersion")[ CD ]
Line_43 $$ if (cmd.equals(Constants.ADD_DYNAMIC)) -->Line_46 $$ JSONPortletResponseUtil.writeJSON(actionRequest, actionResponse, jsonObject)[ CD ]
Line_14 $$ if (folderId > 0) -->Line_15 $$ Folder folder = _dlAppService.getFolder(folderId)[ CD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_22 $$ String contentType = uploadPortletRequest.getContentType("file")[ FD ]
Line_22 $$ String contentType = uploadPortletRequest.getContentType("file")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_8 $$ long folderId = ParamUtil.getLong(uploadPortletRequest, "folderId")-->Line_15 $$ Folder folder = _dlAppService.getFolder(folderId)[ FD ]
Line_27 $$ if (cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC) || (size > 0)) -->Line_29 $$ if (portletName.equals(DLPortletKeys.MEDIA_GALLERY_DISPLAY)) [ CD ]
Line_38 $$ inputStream = uploadPortletRequest.getFileAsStream("file")-->Line_55 $$ StreamUtil.cleanUp(inputStream)[ FD ]
Line_5 $$ String cmd = ParamUtil.getString(uploadPortletRequest, Constants.CMD)-->Line_41 $$ if (cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC)) [ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_20 $$ InputStream inputStream = null[ CD ]
Line_8 $$ long folderId = ParamUtil.getLong(uploadPortletRequest, "folderId")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_6 $$ long fileEntryId = ParamUtil.getLong(uploadPortletRequest, "fileEntryId")[ FD ]
Line_31 $$ DLPortletInstanceSettings dlPortletInstanceSettings = DLPortletInstanceSettings.getInstance(themeDisplay.getLayout(), portletDisplay.getId())-->Line_32 $$ String[] mimeTypes = dlPortletInstanceSettings.getMimeTypes()[ FD ]
Line_6 $$ long fileEntryId = ParamUtil.getLong(uploadPortletRequest, "fileEntryId")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_39 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(DLFileEntry.class.getName(), uploadPortletRequest)[ FD ]
Line_43 $$ if (cmd.equals(Constants.ADD_DYNAMIC)) -->Line_45 $$ jsonObject.put("fileEntryId", fileEntry.getFileEntryId())[ CD ]
Line_25 $$ contentType = MimeTypesUtil.getContentType(title)-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)[ CD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_46 $$ JSONPortletResponseUtil.writeJSON(actionRequest, actionResponse, jsonObject)[ FD ]
Line_40 $$ FileEntry fileEntry = null-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_23 $$ long size = uploadPortletRequest.getSize("file")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_11 $$ String description = ParamUtil.getString(uploadPortletRequest, "description")[ FD ]
Line_41 $$ if (cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC)) -->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ CD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_23 $$ long size = uploadPortletRequest.getSize("file")[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_12 $$ String changeLog = ParamUtil.getString(uploadPortletRequest, "changeLog")[ FD ]
Line_25 $$ contentType = MimeTypesUtil.getContentType(title)-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_9 $$ String sourceFileName = uploadPortletRequest.getFileName("file")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_25 $$ contentType = MimeTypesUtil.getContentType(title)-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_10 $$ String title = ParamUtil.getString(uploadPortletRequest, "title")[ CD ]
Line_5 $$ String cmd = ParamUtil.getString(uploadPortletRequest, Constants.CMD)-->Line_43 $$ if (cmd.equals(Constants.ADD_DYNAMIC)) [ FD ]
Line_6 $$ long fileEntryId = ParamUtil.getLong(uploadPortletRequest, "fileEntryId")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_7 $$ long repositoryId = ParamUtil.getLong(uploadPortletRequest, "repositoryId")[ FD ]
Line_40 $$ FileEntry fileEntry = null-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_11 $$ String description = ParamUtil.getString(uploadPortletRequest, "description")[ CD ]
Line_29 $$ if (portletName.equals(DLPortletKeys.MEDIA_GALLERY_DISPLAY)) -->Line_30 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()[ CD ]
Line_30 $$ PortletDisplay portletDisplay = themeDisplay.getPortletDisplay()-->Line_31 $$ DLPortletInstanceSettings dlPortletInstanceSettings = DLPortletInstanceSettings.getInstance(themeDisplay.getLayout(), portletDisplay.getId())[ FD ]
Line_44 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_45 $$ jsonObject.put("fileEntryId", fileEntry.getFileEntryId())[ FD ]
Line_41 $$ if (cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC)) -->Line_43 $$ if (cmd.equals(Constants.ADD_DYNAMIC)) [ CD ]
Line_48 $$ if (cmd.equals(Constants.UPDATE_AND_CHECKIN)) -->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ CD ]
Line_12 $$ String changeLog = ParamUtil.getString(uploadPortletRequest, "changeLog")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_29 $$ if (portletName.equals(DLPortletKeys.MEDIA_GALLERY_DISPLAY)) -->Line_33 $$ if (Arrays.binarySearch(mimeTypes, contentType) < 0) [ CD ]
Line_12 $$ String changeLog = ParamUtil.getString(uploadPortletRequest, "changeLog")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_32 $$ String[] mimeTypes = dlPortletInstanceSettings.getMimeTypes()-->Line_33 $$ if (Arrays.binarySearch(mimeTypes, contentType) < 0) [ FD ]
Line_40 $$ FileEntry fileEntry = null-->Line_45 $$ jsonObject.put("fileEntryId", fileEntry.getFileEntryId())[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_8 $$ long folderId = ParamUtil.getLong(uploadPortletRequest, "folderId")[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_28 $$ String portletName = portletConfig.getPortletName()[ FD ]
Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_31 $$ DLPortletInstanceSettings dlPortletInstanceSettings = DLPortletInstanceSettings.getInstance(themeDisplay.getLayout(), portletDisplay.getId())[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_10 $$ String title = ParamUtil.getString(uploadPortletRequest, "title")[ FD ]
Line_11 $$ String description = ParamUtil.getString(uploadPortletRequest, "description")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_29 $$ if (portletName.equals(DLPortletKeys.MEDIA_GALLERY_DISPLAY)) -->Line_31 $$ DLPortletInstanceSettings dlPortletInstanceSettings = DLPortletInstanceSettings.getInstance(themeDisplay.getLayout(), portletDisplay.getId())[ CD ]
Line_24 $$ if ((cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC)) && (size == 0)) -->Line_25 $$ contentType = MimeTypesUtil.getContentType(title)[ CD ]
Line_28 $$ String portletName = portletConfig.getPortletName()-->Line_29 $$ if (portletName.equals(DLPortletKeys.MEDIA_GALLERY_DISPLAY)) [ FD ]
Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)-->Line_45 $$ jsonObject.put("fileEntryId", fileEntry.getFileEntryId())[ FD ]
Line_29 $$ if (portletName.equals(DLPortletKeys.MEDIA_GALLERY_DISPLAY)) -->Line_32 $$ String[] mimeTypes = dlPortletInstanceSettings.getMimeTypes()[ CD ]
Line_10 $$ String title = ParamUtil.getString(uploadPortletRequest, "title")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_13 $$ boolean majorVersion = ParamUtil.getBoolean(uploadPortletRequest, "majorVersion")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_22 $$ String contentType = uploadPortletRequest.getContentType("file")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_22 $$ String contentType = uploadPortletRequest.getContentType("file")-->Line_33 $$ if (Arrays.binarySearch(mimeTypes, contentType) < 0) [ FD ]
Line_20 $$ InputStream inputStream = null-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_9 $$ String sourceFileName = uploadPortletRequest.getFileName("file")[ FD ]
Line_7 $$ long repositoryId = ParamUtil.getLong(uploadPortletRequest, "repositoryId")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_10 $$ String title = ParamUtil.getString(uploadPortletRequest, "title")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_15 $$ Folder folder = _dlAppService.getFolder(folderId)-->Line_16 $$ if (folder.getGroupId() != themeDisplay.getScopeGroupId()) [ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_8 $$ long folderId = ParamUtil.getLong(uploadPortletRequest, "folderId")[ CD ]
Line_12 $$ String changeLog = ParamUtil.getString(uploadPortletRequest, "changeLog")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_9 $$ String sourceFileName = uploadPortletRequest.getFileName("file")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_38 $$ inputStream = uploadPortletRequest.getFileAsStream("file")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_5 $$ String cmd = ParamUtil.getString(uploadPortletRequest, Constants.CMD)-->Line_48 $$ if (cmd.equals(Constants.UPDATE_AND_CHECKIN)) [ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_6 $$ long fileEntryId = ParamUtil.getLong(uploadPortletRequest, "fileEntryId")[ CD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_12 $$ String changeLog = ParamUtil.getString(uploadPortletRequest, "changeLog")[ CD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_38 $$ inputStream = uploadPortletRequest.getFileAsStream("file")[ FD ]
Line_39 $$ ServiceContext serviceContext = ServiceContextFactory.getInstance(DLFileEntry.class.getName(), uploadPortletRequest)-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_14 $$ if (folderId > 0) [ CD ]
Line_10 $$ String title = ParamUtil.getString(uploadPortletRequest, "title")-->Line_25 $$ contentType = MimeTypesUtil.getContentType(title)[ FD ]
Line_44 $$ JSONObject jsonObject = JSONFactoryUtil.createJSONObject()-->Line_46 $$ JSONPortletResponseUtil.writeJSON(actionRequest, actionResponse, jsonObject)[ FD ]
Line_22 $$ String contentType = uploadPortletRequest.getContentType("file")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_38 $$ inputStream = uploadPortletRequest.getFileAsStream("file")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_23 $$ long size = uploadPortletRequest.getSize("file")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_5 $$ String cmd = ParamUtil.getString(uploadPortletRequest, Constants.CMD)-->Line_27 $$ if (cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC) || (size > 0)) [ FD ]
Line_40 $$ FileEntry fileEntry = null-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_10 $$ String title = ParamUtil.getString(uploadPortletRequest, "title")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_41 $$ if (cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC)) -->Line_48 $$ if (cmd.equals(Constants.UPDATE_AND_CHECKIN)) [ CD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_7 $$ long repositoryId = ParamUtil.getLong(uploadPortletRequest, "repositoryId")[ CD ]
Line_22 $$ String contentType = uploadPortletRequest.getContentType("file")-->Line_25 $$ contentType = MimeTypesUtil.getContentType(title)[ FD ]
Line_3 $$ UploadPortletRequest uploadPortletRequest = PortalUtil.getUploadPortletRequest(actionRequest)-->Line_13 $$ boolean majorVersion = ParamUtil.getBoolean(uploadPortletRequest, "majorVersion")[ FD ]
Line_5 $$ String cmd = ParamUtil.getString(uploadPortletRequest, Constants.CMD)-->Line_24 $$ if ((cmd.equals(Constants.ADD) || cmd.equals(Constants.ADD_DYNAMIC)) && (size == 0)) [ FD ]
Line_20 $$ InputStream inputStream = null-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_9 $$ String sourceFileName = uploadPortletRequest.getFileName("file")[ CD ]
Line_48 $$ if (cmd.equals(Constants.UPDATE_AND_CHECKIN)) -->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ CD ]
Line_13 $$ boolean majorVersion = ParamUtil.getBoolean(uploadPortletRequest, "majorVersion")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_23 $$ long size = uploadPortletRequest.getSize("file")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_20 $$ InputStream inputStream = null-->Line_38 $$ inputStream = uploadPortletRequest.getFileAsStream("file")[ FD ]
Line_38 $$ inputStream = uploadPortletRequest.getFileAsStream("file")-->Line_42 $$ fileEntry = _dlAppService.addFileEntry(repositoryId, folderId, sourceFileName, contentType, title, description, changeLog, inputStream, size, serviceContext)[ FD ]
Line_9 $$ String sourceFileName = uploadPortletRequest.getFileName("file")-->Line_49 $$ fileEntry = _dlAppService.updateFileEntryAndCheckIn(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
Line_25 $$ contentType = MimeTypesUtil.getContentType(title)-->Line_33 $$ if (Arrays.binarySearch(mimeTypes, contentType) < 0) [ FD ]
Line_20 $$ InputStream inputStream = null-->Line_55 $$ StreamUtil.cleanUp(inputStream)[ FD ]
Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_16 $$ if (folder.getGroupId() != themeDisplay.getScopeGroupId()) [ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_4 $$ ThemeDisplay themeDisplay = (ThemeDisplay) actionRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_2 $$ protected FileEntry updateFileEntry(PortletConfig portletConfig, ActionRequest actionRequest, ActionResponse actionResponse) throws Exception -->Line_5 $$ String cmd = ParamUtil.getString(uploadPortletRequest, Constants.CMD)[ CD ]
Line_11 $$ String description = ParamUtil.getString(uploadPortletRequest, "description")-->Line_51 $$ fileEntry = _dlAppService.updateFileEntry(fileEntryId, sourceFileName, contentType, title, description, changeLog, majorVersion, inputStream, size, serviceContext)[ FD ]
