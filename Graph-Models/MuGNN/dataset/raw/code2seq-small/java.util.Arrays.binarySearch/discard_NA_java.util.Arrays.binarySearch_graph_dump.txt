Line_8 $$ int index = toDiscard[i]-->Line_10 $$ discarded.add(index)[ FD ]
Line_8 $$ int index = toDiscard[i]-->Line_9 $$ if (Arrays.binarySearch(sorted1, index) >= 0) [ FD ]
Line_5 $$ TIntArrayList discarded = new TIntArrayList(toDiscard.length)-->Line_16 $$ return discarded.toNativeArray()[ FD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_4 $$ int[] sorted1 = createSorted(needed)[ CD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_5 $$ TIntArrayList discarded = new TIntArrayList(toDiscard.length)[ CD ]
Line_6 $$ TIntArrayList oldIndecies = new TIntArrayList(toDiscard.length)-->Line_14 $$ myOldIndecies[arrayIndex] = oldIndecies.toNativeArray()[ FD ]
Line_9 $$ if (Arrays.binarySearch(sorted1, index) >= 0) -->Line_11 $$ oldIndecies.add(i)[ CD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_15 $$ myDiscardedLengths[arrayIndex] = discarded.size()[ CD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_6 $$ TIntArrayList oldIndecies = new TIntArrayList(toDiscard.length)[ CD ]
Line_7 $$ for (int i = 0; i < toDiscard.length; i++) -->Line_11 $$ oldIndecies.add(i)[ FD ]
Line_5 $$ TIntArrayList discarded = new TIntArrayList(toDiscard.length)-->Line_10 $$ discarded.add(index)[ FD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_16 $$ return discarded.toNativeArray()[ CD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_3 $$ myOriginalLengths[arrayIndex] = toDiscard.length[ CD ]
Line_7 $$ for (int i = 0; i < toDiscard.length; i++) -->Line_8 $$ int index = toDiscard[i][ CD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_7 $$ for (int i = 0; i < toDiscard.length; i++) [ CD ]
Line_4 $$ int[] sorted1 = createSorted(needed)-->Line_9 $$ if (Arrays.binarySearch(sorted1, index) >= 0) [ FD ]
Line_9 $$ if (Arrays.binarySearch(sorted1, index) >= 0) -->Line_10 $$ discarded.add(index)[ CD ]
Line_6 $$ TIntArrayList oldIndecies = new TIntArrayList(toDiscard.length)-->Line_11 $$ oldIndecies.add(i)[ FD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_4 $$ int[] sorted1 = createSorted(needed)[ FD ]
Line_5 $$ TIntArrayList discarded = new TIntArrayList(toDiscard.length)-->Line_15 $$ myDiscardedLengths[arrayIndex] = discarded.size()[ FD ]
Line_2 $$ private int[] discard(int[] needed, int[] toDiscard, int arrayIndex) -->Line_14 $$ myOldIndecies[arrayIndex] = oldIndecies.toNativeArray()[ CD ]
Line_7 $$ for (int i = 0; i < toDiscard.length; i++) -->Line_9 $$ if (Arrays.binarySearch(sorted1, index) >= 0) [ CD ]
