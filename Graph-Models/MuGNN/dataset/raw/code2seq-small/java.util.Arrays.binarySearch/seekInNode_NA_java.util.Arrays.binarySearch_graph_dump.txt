Line_5 $$ if (forwards) -->Line_7 $$ ub = getKeyEnd(node)[ CD ]
Line_5 $$ if (forwards) -->Line_10 $$ lb = 0[ CD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_13 $$ if (find >= 0) [ CD ]
Line_4 $$ int lb, ub-->Line_9 $$ ub = position[ FD ]
Line_9 $$ ub = position-->Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)[ FD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_19 $$ this.position = delta - 1 - find[ CD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_18 $$ int delta = isLeaf() & !forwards ? -1 : 0[ FD ]
Line_4 $$ int lb, ub-->Line_10 $$ lb = 0[ FD ]
Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)-->Line_19 $$ this.position = delta - 1 - find[ FD ]
Line_13 $$ if (find >= 0) -->Line_16 $$ return true[ CD ]
Line_13 $$ if (find >= 0) -->Line_14 $$ this.position = find[ CD ]
Line_5 $$ if (forwards) -->Line_6 $$ lb = position + 1[ CD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_3 $$ int position = this.position[ CD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_4 $$ int lb, ub[ CD ]
Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)-->Line_13 $$ if (find >= 0) [ FD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_18 $$ int delta = isLeaf() & !forwards ? -1 : 0[ CD ]
Line_4 $$ int lb, ub-->Line_7 $$ ub = getKeyEnd(node)[ FD ]
Line_5 $$ if (forwards) -->Line_9 $$ ub = position[ CD ]
Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)-->Line_14 $$ this.position = find[ FD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_20 $$ return false[ CD ]
Line_3 $$ int position = this.position-->Line_6 $$ lb = position + 1[ FD ]
Line_6 $$ lb = position + 1-->Line_10 $$ lb = 0[ FD ]
Line_10 $$ lb = 0-->Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)[ FD ]
Line_4 $$ int lb, ub-->Line_6 $$ lb = position + 1[ FD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)[ FD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_5 $$ if (forwards) [ CD ]
Line_7 $$ ub = getKeyEnd(node)-->Line_9 $$ ub = position[ FD ]
Line_6 $$ lb = position + 1-->Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)[ FD ]
Line_7 $$ ub = getKeyEnd(node)-->Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)[ FD ]
Line_2 $$ boolean seekInNode(K key, boolean forwards) -->Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)[ CD ]
Line_3 $$ int position = this.position-->Line_9 $$ ub = position[ FD ]
Line_4 $$ int lb, ub-->Line_12 $$ int find = Arrays.binarySearch((K[]) node, lb, ub, key, comparator)[ FD ]
