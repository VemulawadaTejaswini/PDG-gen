Line_8 $$ if ((this.pos - start) == 2 || (this.pos - start) == 3) -->Line_9 $$ String asString = new String(subarray).toUpperCase()[ CD ]
Line_10 $$ int idx = Arrays.binarySearch(ALTERNATIVE_OPERATOR_NAMES, asString)-->Line_11 $$ if (idx >= 0) [ FD ]
Line_2 $$ private void lexIdentifier() -->Line_4 $$ do [ CD ]
Line_11 $$ if (idx >= 0) -->Line_13 $$ return[ CD ]
Line_2 $$ private void lexIdentifier() -->Line_16 $$ this.tokens.add(new Token(TokenKind.IDENTIFIER, subarray, start, this.pos))[ CD ]
Line_2 $$ private void lexIdentifier() -->Line_8 $$ if ((this.pos - start) == 2 || (this.pos - start) == 3) [ CD ]
Line_9 $$ String asString = new String(subarray).toUpperCase()-->Line_10 $$ int idx = Arrays.binarySearch(ALTERNATIVE_OPERATOR_NAMES, asString)[ FD ]
Line_9 $$ String asString = new String(subarray).toUpperCase()-->Line_12 $$ pushOneCharOrTwoCharToken(TokenKind.valueOf(asString), start, subarray)[ FD ]
Line_4 $$ do -->Line_5 $$ this.pos++[ CD ]
Line_2 $$ private void lexIdentifier() -->Line_7 $$ char[] subarray = subarray(start, this.pos)[ CD ]
Line_2 $$ private void lexIdentifier() -->Line_3 $$ int start = this.pos[ CD ]
Line_8 $$ if ((this.pos - start) == 2 || (this.pos - start) == 3) -->Line_10 $$ int idx = Arrays.binarySearch(ALTERNATIVE_OPERATOR_NAMES, asString)[ CD ]
Line_11 $$ if (idx >= 0) -->Line_12 $$ pushOneCharOrTwoCharToken(TokenKind.valueOf(asString), start, subarray)[ CD ]
Line_3 $$ int start = this.pos-->Line_12 $$ pushOneCharOrTwoCharToken(TokenKind.valueOf(asString), start, subarray)[ FD ]
Line_3 $$ int start = this.pos-->Line_7 $$ char[] subarray = subarray(start, this.pos)[ FD ]
Line_7 $$ char[] subarray = subarray(start, this.pos)-->Line_12 $$ pushOneCharOrTwoCharToken(TokenKind.valueOf(asString), start, subarray)[ FD ]
Line_8 $$ if ((this.pos - start) == 2 || (this.pos - start) == 3) -->Line_11 $$ if (idx >= 0) [ CD ]
