Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_11 $$ int prevDisplayGapStart = insertionIndex > 0 ? myGapDisplayStarts[insertionIndex - 1] : 0[ CD ]
Line_12 $$ if (insertionIndex < myGapDisplayStarts.length) -->Line_13 $$ int prevDisplayGapLength = insertionIndex > 0 ? myGapDisplayStarts[insertionIndex] - myGapDisplayStarts[insertionIndex - 1] : myGapDisplayStarts[0][ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_9 $$ int insertionIndex = -bsResult - 1[ CD ]
Line_7 $$ if (bsResult >= 0)-->Line_8 $$ return myGapDisplayStarts[bsResult][ CD ]
Line_6 $$ final int bsResult = Arrays.binarySearch(myGapPhysicalStarts, physicalIndex)-->Line_7 $$ if (bsResult >= 0)[ FD ]
Line_13 $$ int prevDisplayGapLength = insertionIndex > 0 ? myGapDisplayStarts[insertionIndex] - myGapDisplayStarts[insertionIndex - 1] : myGapDisplayStarts[0]-->Line_14 $$ if (physicalIndex - prevPhysGapStart > prevDisplayGapLength)[ FD ]
Line_4 $$ if (myGapPhysicalStarts.length == 0)-->Line_5 $$ return physicalIndex[ CD ]
Line_14 $$ if (physicalIndex - prevPhysGapStart > prevDisplayGapLength)-->Line_15 $$ return myGapDisplayStarts[insertionIndex][ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_4 $$ if (myGapPhysicalStarts.length == 0)[ CD ]
Line_9 $$ int insertionIndex = -bsResult - 1-->Line_12 $$ if (insertionIndex < myGapDisplayStarts.length) [ FD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_12 $$ if (insertionIndex < myGapDisplayStarts.length) [ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_6 $$ final int bsResult = Arrays.binarySearch(myGapPhysicalStarts, physicalIndex)[ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_4 $$ if (myGapPhysicalStarts.length == 0)[ FD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_7 $$ if (bsResult >= 0)[ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_6 $$ final int bsResult = Arrays.binarySearch(myGapPhysicalStarts, physicalIndex)[ FD ]
Line_6 $$ final int bsResult = Arrays.binarySearch(myGapPhysicalStarts, physicalIndex)-->Line_9 $$ int insertionIndex = -bsResult - 1[ FD ]
Line_12 $$ if (insertionIndex < myGapDisplayStarts.length) -->Line_14 $$ if (physicalIndex - prevPhysGapStart > prevDisplayGapLength)[ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_10 $$ int prevPhysGapStart = insertionIndex > 0 ? myGapPhysicalStarts[insertionIndex - 1] : 0[ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_3 $$ getValue()[ CD ]
Line_2 $$ public int physicalToDisplay(int physicalIndex) -->Line_17 $$ return physicalIndex - prevPhysGapStart + prevDisplayGapStart[ CD ]
