Line_39 $$ y -= numberHeight-->Line_41 $$ y += 5[ FD ]
Line_116 $$ y -= 3-->Line_122 $$ y += 27[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_95 $$ g.drawLine(lastX, lastY, (int) pixel.x, (int) pixel.y)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_64 $$ int ySplit = isExpanded ? Math.min(10, chartHeight / (numberHeight * 3)) : 4-->Line_65 $$ for (int i = 0; i <= ySplit; i++) [ FD ]
Line_45 $$ String label = axisLabel(maxX * percent)-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_48 $$ if (i != 0 && i != xSplit) -->Line_49 $$ g.setColor(Color.lightGray)[ CD ]
Line_39 $$ y -= numberHeight-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_37 $$ int y = height-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_90 $$ g.setStroke(new BasicStroke(isExpanded ? 3 : 2))[ CD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_72 $$ if (i != 0 && i != ySplit) [ CD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_10 $$ if (!isExpanded)[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_3 $$ super.paintComponent(graphics)[ FD ]
Line_101 $$ Point point = points.get(i)-->Line_102 $$ Point pixel = pointToPixel(point)[ FD ]
Line_111 $$ int y = (int) pixel.y - pointSize / 2-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_33 $$ g.setColor(Color.black)[ FD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_117 $$ if (y < chartY + numberHeight + 3)-->Line_119 $$ if (n > 1) [ CD ]
Line_37 $$ int y = height-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_50 $$ g.drawLine(x, chartY + 1, x, chartY + chartHeight)[ FD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_87 $$ g.drawString(title, x, y + numberHeight)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_58 $$ g.drawString(label, x, y + numberHeight)[ FD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_66 $$ float percent = i / (float) ySplit[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_90 $$ g.setStroke(new BasicStroke(isExpanded ? 3 : 2))[ FD ]
Line_41 $$ y += 5-->Line_122 $$ y += 27[ FD ]
Line_54 $$ if (isExpanded) -->Line_58 $$ g.drawString(label, x, y + numberHeight)[ CD ]
Line_113 $$ if (isExpanded) -->Line_124 $$ g.drawString(label, x, y)[ CD ]
Line_14 $$ int maxAxisLabelWidth-->Line_17 $$ maxAxisLabelWidth = metrics.stringWidth("100%")[ FD ]
Line_54 $$ if (isExpanded) -->Line_55 $$ x -= labelWidth / 2[ CD ]
Line_67 $$ String label = axisLabel(maxY * percent)-->Line_68 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_111 $$ int y = (int) pixel.y - pointSize / 2[ CD ]
Line_9 $$ int width = getWidth()-->Line_12 $$ width = Math.max(100, width)[ FD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_103 $$ if (overIndex == i)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_85 $$ g.fillRect(x - 2, y - 2, titleWidth + 4, numberHeight + 4)[ CD ]
Line_42 $$ int xSplit = (int) Math.min(10, chartWidth / (maxAxisLabelWidth * 1.5f))-->Line_43 $$ for (int i = 0; i <= xSplit; i++) [ FD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_53 $$ g.drawLine(x, y - 4, x, y - 8)[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_31 $$ g.setColor(Color.white)[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_58 $$ g.drawString(label, x, y + numberHeight)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_89 $$ g.setColor(Color.blue)[ FD ]
Line_54 $$ if (isExpanded) -->Line_56 $$ if (i == xSplit)[ CD ]
Line_39 $$ y -= numberHeight-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_113 $$ if (isExpanded) -->Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))[ CD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_119 $$ if (n > 1) [ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_5 $$ FontMetrics metrics = g.getFontMetrics()[ CD ]
Line_37 $$ int y = height-->Line_116 $$ y -= 3[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_75 $$ g.setColor(Color.black)[ FD ]
Line_72 $$ if (i != 0 && i != ySplit) -->Line_73 $$ g.setColor(Color.lightGray)[ CD ]
Line_111 $$ int y = (int) pixel.y - pointSize / 2-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_15 $$ int yAxisWidth[ CD ]
Line_109 $$ int pointSize = isExpanded ? POINT_SIZE_EXPANDED : POINT_SIZE-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_53 $$ g.drawLine(x, y - 4, x, y - 8)[ FD ]
Line_91 $$ int lastX = -1, lastY = -1-->Line_95 $$ g.drawLine(lastX, lastY, (int) pixel.x, (int) pixel.y)[ FD ]
Line_92 $$ for (Point point : points) -->Line_93 $$ Point pixel = pointToPixel(point)[ FD ]
Line_41 $$ y += 5-->Line_118 $$ y += 27[ FD ]
Line_70 $$ if (isExpanded)-->Line_71 $$ g.drawString(label, yAxisWidth - 6 - labelWidth, y + numberHeight / 2)[ CD ]
Line_94 $$ if (lastX != -1)-->Line_95 $$ g.drawLine(lastX, lastY, (int) pixel.x, (int) pixel.y)[ CD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_57 $$ x = Math.min(x, width - labelWidth)[ FD ]
Line_91 $$ int lastX = -1, lastY = -1-->Line_97 $$ lastY = (int) pixel.y[ FD ]
Line_15 $$ int yAxisWidth-->Line_25 $$ yAxisWidth = 2[ FD ]
Line_39 $$ y -= numberHeight-->Line_122 $$ y += 27[ FD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_58 $$ g.drawString(label, x, y + numberHeight)[ FD ]
Line_116 $$ y -= 3-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_57 $$ x = Math.min(x, width - labelWidth)[ FD ]
Line_45 $$ String label = axisLabel(maxX * percent)-->Line_108 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_122 $$ y += 27-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_97 $$ lastY = (int) pixel.y-->Line_99 $$ g.drawLine(lastX, lastY, chartX + chartWidth - 1, lastY)[ FD ]
Line_57 $$ x = Math.min(x, width - labelWidth)-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_104 $$ g.setColor(Color.red)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))[ FD ]
Line_57 $$ x = Math.min(x, width - labelWidth)-->Line_53 $$ g.drawLine(x, y - 4, x, y - 8)[ FD ]
Line_122 $$ y += 27-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_32 $$ g.fillRect(chartX, chartY, chartWidth, chartHeight)[ FD ]
Line_110 $$ int x = (int) pixel.x - pointSize / 2-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_118 $$ y += 27-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_5 $$ FontMetrics metrics = g.getFontMetrics()-->Line_17 $$ maxAxisLabelWidth = metrics.stringWidth("100%")[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_4 $$ Graphics2D g = (Graphics2D) graphics[ CD ]
Line_5 $$ FontMetrics metrics = g.getFontMetrics()-->Line_68 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_101 $$ Point point = points.get(i)[ FD ]
Line_18 $$ yAxisWidth = maxAxisLabelWidth + 8-->Line_25 $$ yAxisWidth = 2[ FD ]
Line_91 $$ int lastX = -1, lastY = -1-->Line_96 $$ lastX = (int) pixel.x[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_6 $$ if (numberHeight == 0) [ CD ]
Line_111 $$ int y = (int) pixel.y - pointSize / 2-->Line_116 $$ y -= 3[ FD ]
Line_14 $$ int maxAxisLabelWidth-->Line_18 $$ yAxisWidth = maxAxisLabelWidth + 8[ FD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_101 $$ Point point = points.get(i)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_114 $$ g.setColor(Color.black)[ FD ]
Line_5 $$ FontMetrics metrics = g.getFontMetrics()-->Line_81 $$ int titleWidth = metrics.stringWidth(title)[ FD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) [ FD ]
Line_121 $$ if (y < chartY + chartHeight - 27 && comparePoint.y > point.y)-->Line_122 $$ y += 27[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_43 $$ for (int i = 0; i <= xSplit; i++) [ CD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_48 $$ if (i != 0 && i != xSplit) [ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_34 $$ g.drawRect(chartX, chartY, chartWidth, chartHeight)[ FD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_103 $$ if (overIndex == i)[ FD ]
Line_48 $$ if (i != 0 && i != xSplit) -->Line_50 $$ g.drawLine(x, chartY + 1, x, chartY + chartHeight)[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_38 $$ if (isExpanded)[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_64 $$ int ySplit = isExpanded ? Math.min(10, chartHeight / (numberHeight * 3)) : 4[ CD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_67 $$ String label = axisLabel(maxY * percent)[ CD ]
Line_82 $$ int x = yAxisWidth + chartWidth / 2 - titleWidth / 2-->Line_87 $$ g.drawString(title, x, y + numberHeight)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_38 $$ if (isExpanded)-->Line_41 $$ y += 5[ CD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_44 $$ float percent = i / (float) xSplit[ CD ]
Line_39 $$ y -= numberHeight-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_37 $$ int y = height-->Line_74 $$ g.drawLine(chartX, y, chartX + chartWidth - 1, y)[ FD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_53 $$ g.drawLine(x, y - 4, x, y - 8)[ FD ]
Line_92 $$ for (Point point : points) -->Line_102 $$ Point pixel = pointToPixel(point)[ FD ]
Line_45 $$ String label = axisLabel(maxX * percent)-->Line_58 $$ g.drawString(label, x, y + numberHeight)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) [ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_32 $$ g.fillRect(chartX, chartY, chartWidth, chartHeight)[ CD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_108 $$ int labelWidth = metrics.stringWidth(label)[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_74 $$ g.drawLine(chartX, y, chartX + chartWidth - 1, y)[ FD ]
Line_57 $$ x = Math.min(x, width - labelWidth)-->Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))[ FD ]
Line_16 $$ if (isExpanded) -->Line_17 $$ maxAxisLabelWidth = metrics.stringWidth("100%")[ CD ]
Line_45 $$ String label = axisLabel(maxX * percent)-->Line_68 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) [ FD ]
Line_91 $$ int lastX = -1, lastY = -1-->Line_99 $$ g.drawLine(lastX, lastY, chartX + chartWidth - 1, lastY)[ FD ]
Line_18 $$ yAxisWidth = maxAxisLabelWidth + 8-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_39 $$ y -= numberHeight-->Line_118 $$ y += 27[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_49 $$ g.setColor(Color.lightGray)[ FD ]
Line_122 $$ y += 27-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_41 $$ y += 5-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_65 $$ for (int i = 0; i <= ySplit; i++) [ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_85 $$ g.fillRect(x - 2, y - 2, titleWidth + 4, numberHeight + 4)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_9 $$ int width = getWidth()[ CD ]
Line_11 $$ width = Math.min(150, width)-->Line_12 $$ width = Math.max(100, width)[ FD ]
Line_45 $$ String label = axisLabel(maxX * percent)-->Line_46 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_65 $$ for (int i = 0; i <= ySplit; i++) [ CD ]
Line_15 $$ int yAxisWidth-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_13 $$ int height = getHeight()[ CD ]
Line_67 $$ String label = axisLabel(maxY * percent)-->Line_71 $$ g.drawString(label, yAxisWidth - 6 - labelWidth, y + numberHeight / 2)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_106 $$ g.setColor(Color.black)[ FD ]
Line_82 $$ int x = yAxisWidth + chartWidth / 2 - titleWidth / 2-->Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_42 $$ int xSplit = (int) Math.min(10, chartWidth / (maxAxisLabelWidth * 1.5f))[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_84 $$ g.setColor(Color.white)[ CD ]
Line_119 $$ if (n > 1) -->Line_120 $$ Point comparePoint = i == n - 1 ? points.get(i - 1) : points.get(i + 1)[ CD ]
Line_110 $$ int x = (int) pixel.x - pointSize / 2-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_103 $$ if (overIndex == i)-->Line_106 $$ g.setColor(Color.black)[ CD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_53 $$ g.drawLine(x, y - 4, x, y - 8)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_12 $$ width = Math.max(100, width)[ CD ]
Line_25 $$ yAxisWidth = 2-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_87 $$ g.drawString(title, x, y + numberHeight)[ FD ]
Line_57 $$ x = Math.min(x, width - labelWidth)-->Line_87 $$ g.drawString(title, x, y + numberHeight)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_14 $$ int maxAxisLabelWidth[ CD ]
Line_17 $$ maxAxisLabelWidth = metrics.stringWidth("100%")-->Line_24 $$ maxAxisLabelWidth = 0[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_82 $$ int x = yAxisWidth + chartWidth / 2 - titleWidth / 2[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_71 $$ g.drawString(label, yAxisWidth - 6 - labelWidth, y + numberHeight / 2)[ FD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_31 $$ g.setColor(Color.white)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_3 $$ super.paintComponent(graphics)[ CD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_50 $$ g.drawLine(x, chartY + 1, x, chartY + chartHeight)[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_101 $$ Point point = points.get(i)[ CD ]
Line_39 $$ y -= numberHeight-->Line_116 $$ y -= 3[ FD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_68 $$ int labelWidth = metrics.stringWidth(label)[ CD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_116 $$ y -= 3-->Line_118 $$ y += 27[ FD ]
Line_57 $$ x = Math.min(x, width - labelWidth)-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_38 $$ if (isExpanded)-->Line_39 $$ y -= numberHeight[ CD ]
Line_118 $$ y += 27-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_118 $$ y += 27-->Line_122 $$ y += 27[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_110 $$ int x = (int) pixel.x - pointSize / 2[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_5 $$ FontMetrics metrics = g.getFontMetrics()[ FD ]
Line_111 $$ int y = (int) pixel.y - pointSize / 2-->Line_118 $$ y += 27[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ CD ]
Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_72 $$ if (i != 0 && i != ySplit) -->Line_75 $$ g.setColor(Color.black)[ CD ]
Line_111 $$ int y = (int) pixel.y - pointSize / 2-->Line_122 $$ y += 27[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_89 $$ g.setColor(Color.blue)[ CD ]
Line_57 $$ x = Math.min(x, width - labelWidth)-->Line_50 $$ g.drawLine(x, chartY + 1, x, chartY + chartHeight)[ FD ]
Line_41 $$ y += 5-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_16 $$ if (isExpanded) -->Line_24 $$ maxAxisLabelWidth = 0[ CD ]
Line_39 $$ y -= numberHeight-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_14 $$ int maxAxisLabelWidth-->Line_24 $$ maxAxisLabelWidth = 0[ FD ]
Line_9 $$ int width = getWidth()-->Line_11 $$ width = Math.min(150, width)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_99 $$ g.drawLine(lastX, lastY, chartX + chartWidth - 1, lastY)[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_113 $$ if (isExpanded) [ CD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_74 $$ g.drawLine(chartX, y, chartX + chartWidth - 1, y)[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_109 $$ int pointSize = isExpanded ? POINT_SIZE_EXPANDED : POINT_SIZE[ CD ]
Line_110 $$ int x = (int) pixel.x - pointSize / 2-->Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))[ FD ]
Line_117 $$ if (y < chartY + numberHeight + 3)-->Line_118 $$ y += 27[ CD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_56 $$ if (i == xSplit)[ FD ]
Line_91 $$ int lastX = -1, lastY = -1-->Line_94 $$ if (lastX != -1)[ FD ]
Line_48 $$ if (i != 0 && i != xSplit) -->Line_51 $$ g.setColor(Color.black)[ CD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)[ CD ]
Line_72 $$ if (i != 0 && i != ySplit) -->Line_74 $$ g.drawLine(chartX, y, chartX + chartWidth - 1, y)[ CD ]
Line_45 $$ String label = axisLabel(maxX * percent)-->Line_71 $$ g.drawString(label, yAxisWidth - 6 - labelWidth, y + numberHeight / 2)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_16 $$ if (isExpanded) [ CD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_50 $$ g.drawLine(x, chartY + 1, x, chartY + chartHeight)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_81 $$ int titleWidth = metrics.stringWidth(title)[ CD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_118 $$ y += 27[ FD ]
Line_56 $$ if (i == xSplit)-->Line_57 $$ x = Math.min(x, width - labelWidth)[ CD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_113 $$ if (isExpanded) -->Line_114 $$ g.setColor(Color.black)[ CD ]
Line_116 $$ y -= 3-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_107 $$ String label = valueLabel(point.y)-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_103 $$ if (overIndex == i)-->Line_104 $$ g.setColor(Color.red)[ CD ]
Line_37 $$ int y = height-->Line_39 $$ y -= numberHeight[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_7 $$ numberHeight = getFont().layoutGlyphVector(g.getFontRenderContext(), new char[] [ FD ]
Line_16 $$ if (isExpanded) -->Line_18 $$ yAxisWidth = maxAxisLabelWidth + 8[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_51 $$ g.setColor(Color.black)[ FD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_55 $$ x -= labelWidth / 2[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_73 $$ g.setColor(Color.lightGray)[ FD ]
Line_37 $$ int y = height-->Line_122 $$ y += 27[ FD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_54 $$ if (isExpanded) [ CD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_107 $$ String label = valueLabel(point.y)[ CD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_101 $$ Point point = points.get(i)[ FD ]
Line_96 $$ lastX = (int) pixel.x-->Line_99 $$ g.drawLine(lastX, lastY, chartX + chartWidth - 1, lastY)[ FD ]
Line_116 $$ y -= 3-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_17 $$ maxAxisLabelWidth = metrics.stringWidth("100%")-->Line_18 $$ yAxisWidth = maxAxisLabelWidth + 8[ FD ]
Line_57 $$ x = Math.min(x, width - labelWidth)-->Line_58 $$ g.drawString(label, x, y + numberHeight)[ FD ]
Line_41 $$ y += 5-->Line_74 $$ g.drawLine(chartX, y, chartX + chartWidth - 1, y)[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_103 $$ if (overIndex == i)[ FD ]
Line_41 $$ y += 5-->Line_77 $$ g.drawLine(yAxisWidth - 4, y, yAxisWidth, y)[ FD ]
Line_5 $$ FontMetrics metrics = g.getFontMetrics()-->Line_108 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_67 $$ String label = axisLabel(maxY * percent)-->Line_108 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_46 $$ int labelWidth = metrics.stringWidth(label)-->Line_55 $$ x -= labelWidth / 2[ FD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_103 $$ if (overIndex == i)[ CD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_122 $$ y += 27[ FD ]
Line_107 $$ String label = valueLabel(point.y)-->Line_108 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_37 $$ int y = height-->Line_118 $$ y += 27[ FD ]
Line_39 $$ y -= numberHeight-->Line_74 $$ g.drawLine(chartX, y, chartX + chartWidth - 1, y)[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_86 $$ g.setColor(Color.lightGray)[ FD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_46 $$ int labelWidth = metrics.stringWidth(label)[ CD ]
Line_5 $$ FontMetrics metrics = g.getFontMetrics()-->Line_46 $$ int labelWidth = metrics.stringWidth(label)[ FD ]
Line_15 $$ int yAxisWidth-->Line_18 $$ yAxisWidth = maxAxisLabelWidth + 8[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_33 $$ g.setColor(Color.black)[ CD ]
Line_115 $$ x = Math.max(chartX + 2, Math.min(chartX + chartWidth - labelWidth, x))-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_82 $$ int x = yAxisWidth + chartWidth / 2 - titleWidth / 2-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_113 $$ if (isExpanded) -->Line_117 $$ if (y < chartY + numberHeight + 3)[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_87 $$ g.drawString(title, x, y + numberHeight)[ CD ]
Line_42 $$ int xSplit = (int) Math.min(10, chartWidth / (maxAxisLabelWidth * 1.5f))-->Line_56 $$ if (i == xSplit)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_91 $$ int lastX = -1, lastY = -1[ CD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_70 $$ if (isExpanded)[ CD ]
Line_37 $$ int y = height-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_82 $$ int x = yAxisWidth + chartWidth / 2 - titleWidth / 2-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_37 $$ int y = height-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_34 $$ g.drawRect(chartX, chartY, chartWidth, chartHeight)[ CD ]
Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)-->Line_116 $$ y -= 3[ FD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_87 $$ g.drawString(title, x, y + numberHeight)[ FD ]
Line_37 $$ int y = height-->Line_41 $$ y += 5[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_99 $$ g.drawLine(lastX, lastY, chartX + chartWidth - 1, lastY)[ CD ]
Line_111 $$ int y = (int) pixel.y - pointSize / 2-->Line_117 $$ if (y < chartY + numberHeight + 3)[ FD ]
Line_119 $$ if (n > 1) -->Line_121 $$ if (y < chartY + chartHeight - 27 && comparePoint.y > point.y)[ CD ]
Line_41 $$ y += 5-->Line_116 $$ y -= 3[ FD ]
Line_47 $$ int x = (int) (yAxisWidth + chartWidth * percent)-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_67 $$ String label = axisLabel(maxY * percent)-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_113 $$ if (isExpanded) -->Line_116 $$ y -= 3[ CD ]
Line_65 $$ for (int i = 0; i <= ySplit; i++) -->Line_69 $$ int y = (int) (chartY + chartHeight - chartHeight * percent)[ CD ]
Line_43 $$ for (int i = 0; i <= xSplit; i++) -->Line_45 $$ String label = axisLabel(maxX * percent)[ CD ]
Line_4 $$ Graphics2D g = (Graphics2D) graphics-->Line_84 $$ g.setColor(Color.white)[ FD ]
Line_55 $$ x -= labelWidth / 2-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_10 $$ if (!isExpanded)-->Line_11 $$ width = Math.min(150, width)[ CD ]
Line_100 $$ for (int i = 0, n = points.size(); i < n; i++) -->Line_102 $$ Point pixel = pointToPixel(point)[ CD ]
Line_16 $$ if (isExpanded) -->Line_25 $$ yAxisWidth = 2[ CD ]
Line_118 $$ y += 27-->Line_112 $$ g.fillOval(x, y, pointSize, pointSize)[ FD ]
Line_41 $$ y += 5-->Line_124 $$ g.drawString(label, x, y)[ FD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_37 $$ int y = height[ CD ]
Line_2 $$ protected void paintComponent(Graphics graphics) -->Line_86 $$ g.setColor(Color.lightGray)[ CD ]
