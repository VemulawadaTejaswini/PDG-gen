Line_3 $$ ArrayList<String[]> pathes = new ArrayList<String[]>()-->Line_40 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_21 $$ String commonHead = headBuilder.execute()[ FD ]
Line_40 $$ String special = concat(pathes.get(i), headLimit, tailLimit)-->Line_41 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ FD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)[ CD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_12 $$ buffer.append(mySeparator)[ CD ]
Line_2 $$ private void buildFragments() -->Line_37 $$ int tailLimit = tailBuilder.getIndex()[ CD ]
Line_39 $$ ItemWrapper item = myView.getItemByIndex(i)-->Line_41 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ FD ]
Line_38 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_40 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ FD ]
Line_2 $$ private void buildFragments() -->Line_22 $$ final int headLimit = headBuilder.getIndex()[ CD ]
Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)-->Line_41 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_27 $$ buffer.insert(0, fragment + mySeparator)[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_12 $$ buffer.append(mySeparator)[ FD ]
Line_23 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_27 $$ buffer.insert(0, fragment + mySeparator)[ CD ]
Line_23 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_27 $$ buffer.insert(0, fragment + mySeparator)[ FD ]
Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)-->Line_6 $$ pathes.add(ArrayUtil.toStringArray(FileUtil.splitPath(item.getPresentableUrl())))[ FD ]
Line_38 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_40 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_39 $$ ItemWrapper item = myView.getItemByIndex(i)[ FD ]
Line_3 $$ ArrayList<String[]> pathes = new ArrayList<String[]>()-->Line_6 $$ pathes.add(ArrayUtil.toStringArray(FileUtil.splitPath(item.getPresentableUrl())))[ FD ]
Line_2 $$ private void buildFragments() -->Line_36 $$ String commonTail = tailBuilder.execute()[ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_38 $$ for (int i = 0; i < myView.getItemsSize(); i++) [ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_13 $$ buffer.append(fragment)[ FD ]
Line_2 $$ private void buildFragments() -->Line_21 $$ String commonHead = headBuilder.execute()[ CD ]
Line_2 $$ private void buildFragments() -->Line_38 $$ for (int i = 0; i < myView.getItemsSize(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)[ FD ]
Line_2 $$ private void buildFragments() -->Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) [ CD ]
Line_23 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_32 $$ int result = path.length - 1 - index[ CD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_22 $$ final int headLimit = headBuilder.getIndex()[ FD ]
Line_2 $$ private void buildFragments() -->Line_3 $$ ArrayList<String[]> pathes = new ArrayList<String[]>()[ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_6 $$ pathes.add(ArrayUtil.toStringArray(FileUtil.splitPath(item.getPresentableUrl())))[ CD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_18 $$ return path.length > index ? index : -1[ CD ]
Line_2 $$ private void buildFragments() -->Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) [ CD ]
Line_38 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_39 $$ ItemWrapper item = myView.getItemByIndex(i)[ CD ]
Line_23 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_33 $$ return result > headLimit ? result : -1[ CD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_13 $$ buffer.append(fragment)[ CD ]
Line_38 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_39 $$ ItemWrapper item = myView.getItemByIndex(i)[ FD ]
Line_38 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_41 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_40 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ FD ]
