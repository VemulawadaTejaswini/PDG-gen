Line_31 $$ ItemWrapper item = myView.getItemByIndex(i)-->Line_33 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_10 $$ buffer.append(mySeparator)[ CD ]
Line_2 $$ private void buildFragments() -->Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) [ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_31 $$ ItemWrapper item = myView.getItemByIndex(i)[ FD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_32 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ FD ]
Line_19 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_25 $$ return result > headLimit ? result : -1[ CD ]
Line_2 $$ private void buildFragments() -->Line_28 $$ String commonTail = tailBuilder.execute()[ CD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_10 $$ buffer.append(mySeparator)[ FD ]
Line_30 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_31 $$ ItemWrapper item = myView.getItemByIndex(i)[ FD ]
Line_30 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_31 $$ ItemWrapper item = myView.getItemByIndex(i)[ CD ]
Line_2 $$ private void buildFragments() -->Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) [ CD ]
Line_2 $$ private void buildFragments() -->Line_30 $$ for (int i = 0; i < myView.getItemsSize(); i++) [ CD ]
Line_30 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_32 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ FD ]
Line_2 $$ private void buildFragments() -->Line_18 $$ final int headLimit = headBuilder.getIndex()[ CD ]
Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)-->Line_6 $$ pathes.add(ArrayUtil.toStringArray(FileUtil.splitPath(item.getPresentableUrl())))[ FD ]
Line_19 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_24 $$ int result = path.length - 1 - index[ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)[ CD ]
Line_30 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_32 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ CD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)[ FD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_30 $$ for (int i = 0; i < myView.getItemsSize(); i++) [ FD ]
Line_3 $$ ArrayList<String[]> pathes = new ArrayList<String[]>()-->Line_32 $$ String special = concat(pathes.get(i), headLimit, tailLimit)[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_11 $$ buffer.append(fragment)[ CD ]
Line_5 $$ ItemWrapper item = myView.getItemByIndex(i)-->Line_33 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_14 $$ return path.length > index ? index : -1[ CD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_18 $$ final int headLimit = headBuilder.getIndex()[ FD ]
Line_4 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_6 $$ pathes.add(ArrayUtil.toStringArray(FileUtil.splitPath(item.getPresentableUrl())))[ CD ]
Line_19 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_21 $$ buffer.insert(0, fragment + mySeparator)[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_17 $$ String commonHead = headBuilder.execute()[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_21 $$ buffer.insert(0, fragment + mySeparator)[ FD ]
Line_2 $$ private void buildFragments() -->Line_29 $$ int tailLimit = tailBuilder.getIndex()[ CD ]
Line_30 $$ for (int i = 0; i < myView.getItemsSize(); i++) -->Line_33 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ CD ]
Line_2 $$ private void buildFragments() -->Line_17 $$ String commonHead = headBuilder.execute()[ CD ]
Line_32 $$ String special = concat(pathes.get(i), headLimit, tailLimit)-->Line_33 $$ item.setFragments(createFragments(commonHead, special, commonTail))[ FD ]
Line_19 $$ FragmentBuilder tailBuilder = new FragmentBuilder(pathes) -->Line_21 $$ buffer.insert(0, fragment + mySeparator)[ CD ]
Line_3 $$ ArrayList<String[]> pathes = new ArrayList<String[]>()-->Line_6 $$ pathes.add(ArrayUtil.toStringArray(FileUtil.splitPath(item.getPresentableUrl())))[ FD ]
Line_8 $$ FragmentBuilder headBuilder = new FragmentBuilder(pathes) -->Line_11 $$ buffer.append(fragment)[ FD ]
Line_2 $$ private void buildFragments() -->Line_3 $$ ArrayList<String[]> pathes = new ArrayList<String[]>()[ CD ]
