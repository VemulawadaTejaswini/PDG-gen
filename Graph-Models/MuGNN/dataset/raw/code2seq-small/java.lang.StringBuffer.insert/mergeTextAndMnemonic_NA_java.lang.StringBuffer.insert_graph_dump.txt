Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_4 $$ text = ""[ FD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_8 $$ index = mnemonicIndex[ FD ]
Line_8 $$ index = mnemonicIndex-->Line_10 $$ index = -1[ FD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_12 $$ final StringBuffer buffer = new StringBuffer(text)[ CD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_7 $$ if (mnemonicIndex >= 0 && mnemonicIndex < text.length() && Character.toUpperCase(text.charAt(mnemonicIndex)) == mnemonic) [ FD ]
Line_7 $$ if (mnemonicIndex >= 0 && mnemonicIndex < text.length() && Character.toUpperCase(text.charAt(mnemonicIndex)) == mnemonic) -->Line_10 $$ index = -1[ CD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_7 $$ if (mnemonicIndex >= 0 && mnemonicIndex < text.length() && Character.toUpperCase(text.charAt(mnemonicIndex)) == mnemonic) [ CD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_6 $$ final int index[ CD ]
Line_6 $$ final int index-->Line_10 $$ index = -1[ FD ]
Line_10 $$ index = -1-->Line_13 $$ if (index != -1) [ FD ]
Line_12 $$ final StringBuffer buffer = new StringBuffer(text)-->Line_21 $$ return buffer.toString()[ FD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_21 $$ return buffer.toString()[ CD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_3 $$ if (text == null) [ CD ]
Line_4 $$ text = ""-->Line_7 $$ if (mnemonicIndex >= 0 && mnemonicIndex < text.length() && Character.toUpperCase(text.charAt(mnemonicIndex)) == mnemonic) [ FD ]
Line_3 $$ if (text == null) -->Line_4 $$ text = ""[ CD ]
Line_15 $$ for (int i = buffer.length() - 1; i >= 0; i--) -->Line_17 $$ buffer.insert(i, '&')[ FD ]
Line_13 $$ if (index != -1) -->Line_15 $$ for (int i = buffer.length() - 1; i >= 0; i--) [ CD ]
Line_12 $$ final StringBuffer buffer = new StringBuffer(text)-->Line_17 $$ buffer.insert(i, '&')[ FD ]
Line_12 $$ final StringBuffer buffer = new StringBuffer(text)-->Line_15 $$ for (int i = buffer.length() - 1; i >= 0; i--) [ FD ]
Line_15 $$ for (int i = buffer.length() - 1; i >= 0; i--) -->Line_16 $$ if (buffer.charAt(i) == '&' && i != index) [ FD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_13 $$ if (index != -1) [ CD ]
Line_6 $$ final int index-->Line_8 $$ index = mnemonicIndex[ FD ]
Line_16 $$ if (buffer.charAt(i) == '&' && i != index) -->Line_17 $$ buffer.insert(i, '&')[ CD ]
Line_6 $$ final int index-->Line_13 $$ if (index != -1) [ FD ]
Line_8 $$ index = mnemonicIndex-->Line_13 $$ if (index != -1) [ FD ]
Line_15 $$ for (int i = buffer.length() - 1; i >= 0; i--) -->Line_16 $$ if (buffer.charAt(i) == '&' && i != index) [ CD ]
Line_8 $$ index = mnemonicIndex-->Line_14 $$ buffer.insert(index, '&')[ FD ]
Line_6 $$ final int index-->Line_14 $$ buffer.insert(index, '&')[ FD ]
Line_12 $$ final StringBuffer buffer = new StringBuffer(text)-->Line_16 $$ if (buffer.charAt(i) == '&' && i != index) [ FD ]
Line_2 $$ private static String mergeTextAndMnemonic(String text, final int mnemonic, final int mnemonicIndex) -->Line_3 $$ if (text == null) [ FD ]
Line_12 $$ final StringBuffer buffer = new StringBuffer(text)-->Line_14 $$ buffer.insert(index, '&')[ FD ]
Line_13 $$ if (index != -1) -->Line_14 $$ buffer.insert(index, '&')[ CD ]
Line_10 $$ index = -1-->Line_14 $$ buffer.insert(index, '&')[ FD ]
Line_7 $$ if (mnemonicIndex >= 0 && mnemonicIndex < text.length() && Character.toUpperCase(text.charAt(mnemonicIndex)) == mnemonic) -->Line_8 $$ index = mnemonicIndex[ CD ]
