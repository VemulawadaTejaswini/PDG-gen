Line_5 $$ if (paths.length == 0)-->Line_6 $$ return "empty"[ CD ]
Line_2 $$ private String toStringPaths(TreePath[] paths) -->Line_3 $$ if (paths == null)[ CD ]
Line_2 $$ private String toStringPaths(TreePath[] paths) -->Line_14 $$ return sb.toString()[ CD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_10 $$ sb.append(", ")[ FD ]
Line_3 $$ if (paths == null)-->Line_4 $$ return "null"[ CD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_9 $$ if (sb.length() > 0) [ FD ]
Line_2 $$ private String toStringPaths(TreePath[] paths) -->Line_3 $$ if (paths == null)[ FD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_12 $$ sb.append(path.toString())[ FD ]
Line_8 $$ for (TreePath path : paths) -->Line_12 $$ sb.append(path.toString())[ FD ]
Line_7 $$ final StringBuilder sb = new StringBuilder()-->Line_14 $$ return sb.toString()[ FD ]
Line_9 $$ if (sb.length() > 0) -->Line_10 $$ sb.append(", ")[ CD ]
Line_2 $$ private String toStringPaths(TreePath[] paths) -->Line_5 $$ if (paths.length == 0)[ CD ]
Line_2 $$ private String toStringPaths(TreePath[] paths) -->Line_7 $$ final StringBuilder sb = new StringBuilder()[ CD ]
