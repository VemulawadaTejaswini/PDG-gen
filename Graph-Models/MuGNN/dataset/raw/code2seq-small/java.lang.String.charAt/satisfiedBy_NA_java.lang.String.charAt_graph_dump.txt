Line_5 $$ final GrLiteral expression = (GrLiteral) element-->Line_12 $$ final String text = expression.getText()[ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_3 $$ if (!(element instanceof GrLiteral))[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_9 $$ if (!PsiType.INT.equals(type) && !PsiType.LONG.equals(type) && !type.equalsToText("java.lang.Integer") && !type.equalsToText("java.lang.Long")) [ CD ]
Line_6 $$ final PsiType type = expression.getType()-->Line_7 $$ if (type == null)[ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_16 $$ if (text.startsWith("0x") || text.startsWith("0X")) [ CD ]
Line_12 $$ final String text = expression.getText()-->Line_25 $$ return text.charAt(0) != '0'[ FD ]
Line_3 $$ if (!(element instanceof GrLiteral))-->Line_4 $$ return false[ CD ]
Line_19 $$ if (text.startsWith("0b") || text.startsWith("0B")) -->Line_20 $$ return false[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_5 $$ final GrLiteral expression = (GrLiteral) element[ CD ]
Line_12 $$ final String text = expression.getText()-->Line_22 $$ if ("0".equals(text) || "0L".equals(text)) [ FD ]
Line_9 $$ if (!PsiType.INT.equals(type) && !PsiType.LONG.equals(type) && !type.equalsToText("java.lang.Integer") && !type.equalsToText("java.lang.Long")) -->Line_10 $$ return false[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_6 $$ final PsiType type = expression.getType()[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_12 $$ final String text = expression.getText()[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_19 $$ if (text.startsWith("0b") || text.startsWith("0B")) [ CD ]
Line_6 $$ final PsiType type = expression.getType()-->Line_9 $$ if (!PsiType.INT.equals(type) && !PsiType.LONG.equals(type) && !type.equalsToText("java.lang.Integer") && !type.equalsToText("java.lang.Long")) [ FD ]
Line_16 $$ if (text.startsWith("0x") || text.startsWith("0X")) -->Line_17 $$ return true[ CD ]
Line_7 $$ if (type == null)-->Line_8 $$ return false[ CD ]
Line_12 $$ final String text = expression.getText()-->Line_13 $$ if (text == null || text.isEmpty()) [ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_25 $$ return text.charAt(0) != '0'[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_22 $$ if ("0".equals(text) || "0L".equals(text)) [ CD ]
Line_5 $$ final GrLiteral expression = (GrLiteral) element-->Line_6 $$ final PsiType type = expression.getType()[ FD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_13 $$ if (text == null || text.isEmpty()) [ CD ]
Line_13 $$ if (text == null || text.isEmpty()) -->Line_14 $$ return false[ CD ]
Line_22 $$ if ("0".equals(text) || "0L".equals(text)) -->Line_23 $$ return true[ CD ]
Line_2 $$ public boolean satisfiedBy(PsiElement element) -->Line_7 $$ if (type == null)[ CD ]
Line_12 $$ final String text = expression.getText()-->Line_16 $$ if (text.startsWith("0x") || text.startsWith("0X")) [ FD ]
Line_12 $$ final String text = expression.getText()-->Line_19 $$ if (text.startsWith("0b") || text.startsWith("0B")) [ FD ]
