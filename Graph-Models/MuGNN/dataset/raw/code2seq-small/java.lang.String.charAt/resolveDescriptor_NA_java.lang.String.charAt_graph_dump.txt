Line_5 $$ int index = 0, counter = 0-->Line_7 $$ while (index < len) [ FD ]
Line_6 $$ int len = par.length()-->Line_7 $$ while (index < len) [ FD ]
Line_11 $$ if (c == '[') -->Line_12 $$ index++[ CD ]
Line_7 $$ while (index < len) -->Line_8 $$ char c = par.charAt(index)[ CD ]
Line_5 $$ int index = 0, counter = 0-->Line_10 $$ index = par.indexOf(";", index)[ FD ]
Line_7 $$ while (index < len) -->Line_16 $$ index++[ CD ]
Line_10 $$ index = par.indexOf(";", index)-->Line_16 $$ index++[ FD ]
Line_10 $$ index = par.indexOf(";", index)-->Line_12 $$ index++[ FD ]
Line_5 $$ int index = 0, counter = 0-->Line_12 $$ index++[ FD ]
Line_2 $$ private void resolveDescriptor(String descr) -->Line_3 $$ String[] arr = descr.split("[()]")[ CD ]
Line_8 $$ char c = par.charAt(index)-->Line_9 $$ if (c == 'L') [ FD ]
Line_4 $$ String par = arr[1]-->Line_10 $$ index = par.indexOf(";", index)[ FD ]
Line_8 $$ char c = par.charAt(index)-->Line_11 $$ if (c == '[') [ FD ]
Line_4 $$ String par = arr[1]-->Line_8 $$ char c = par.charAt(index)[ FD ]
Line_5 $$ int index = 0, counter = 0-->Line_16 $$ index++[ FD ]
Line_2 $$ private void resolveDescriptor(String descr) -->Line_5 $$ int index = 0, counter = 0[ CD ]
Line_9 $$ if (c == 'L') -->Line_11 $$ if (c == '[') [ CD ]
Line_2 $$ private void resolveDescriptor(String descr) -->Line_6 $$ int len = par.length()[ CD ]
Line_5 $$ int index = 0, counter = 0-->Line_8 $$ char c = par.charAt(index)[ FD ]
Line_7 $$ while (index < len) -->Line_15 $$ counter++[ CD ]
Line_9 $$ if (c == 'L') -->Line_10 $$ index = par.indexOf(";", index)[ CD ]
Line_4 $$ String par = arr[1]-->Line_6 $$ int len = par.length()[ FD ]
Line_2 $$ private void resolveDescriptor(String descr) -->Line_7 $$ while (index < len) [ CD ]
Line_7 $$ while (index < len) -->Line_9 $$ if (c == 'L') [ CD ]
Line_5 $$ int index = 0, counter = 0-->Line_15 $$ counter++[ FD ]
Line_2 $$ private void resolveDescriptor(String descr) -->Line_19 $$ isVoid = "V".equals(arr[2])[ CD ]
Line_2 $$ private void resolveDescriptor(String descr) -->Line_4 $$ String par = arr[1][ CD ]
Line_10 $$ index = par.indexOf(";", index)-->Line_7 $$ while (index < len) [ FD ]
Line_2 $$ private void resolveDescriptor(String descr) -->Line_3 $$ String[] arr = descr.split("[()]")[ FD ]
Line_10 $$ index = par.indexOf(";", index)-->Line_8 $$ char c = par.charAt(index)[ FD ]
