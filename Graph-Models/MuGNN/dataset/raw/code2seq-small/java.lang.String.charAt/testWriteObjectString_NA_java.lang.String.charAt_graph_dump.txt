Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_11 $$ for (int i = 0; i < asciiString.length(); i++) [ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_5 $$ serializer.writeObject(asciiString)[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_17 $$ byteBuffer = serializer.toByteBuffer()[ FD ]
Line_11 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_23 $$ Assert.assertEquals(nonAsciiString.charAt(i), byteBuffer.getChar())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_4 $$ Serializer serializer = new Serializer()[ CD ]
Line_15 $$ serializer = new Serializer()-->Line_16 $$ serializer.writeObject(nonAsciiString)[ FD ]
Line_4 $$ Serializer serializer = new Serializer()-->Line_16 $$ serializer.writeObject(nonAsciiString)[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_21 $$ Assert.assertEquals(nonAsciiString.length(), byteBuffer.getInt())[ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_7 $$ Assert.assertEquals(6 + asciiString.length(), byteBuffer.limit())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_10 $$ Assert.assertEquals(asciiString.length(), byteBuffer.getInt())[ CD ]
Line_2 $$ public void testWriteObjectString() -->Line_15 $$ serializer = new Serializer()[ CD ]
Line_2 $$ public void testWriteObjectString() -->Line_16 $$ serializer.writeObject(nonAsciiString)[ CD ]
Line_2 $$ public void testWriteObjectString() -->Line_8 $$ Assert.assertEquals(SerializationConstants.TC_STRING, byteBuffer.get())[ CD ]
Line_2 $$ public void testWriteObjectString() -->Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()[ CD ]
Line_11 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_12 $$ Assert.assertEquals(asciiString.charAt(i), byteBuffer.get())[ FD ]
Line_17 $$ byteBuffer = serializer.toByteBuffer()-->Line_20 $$ Assert.assertEquals(0, byteBuffer.get())[ FD ]
Line_17 $$ byteBuffer = serializer.toByteBuffer()-->Line_19 $$ Assert.assertEquals(SerializationConstants.TC_STRING, byteBuffer.get())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_9 $$ Assert.assertEquals(1, byteBuffer.get())[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_20 $$ Assert.assertEquals(0, byteBuffer.get())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_21 $$ Assert.assertEquals(nonAsciiString.length(), byteBuffer.getInt())[ CD ]
Line_14 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_22 $$ for (int i = 0; i < nonAsciiString.length(); i++) [ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_19 $$ Assert.assertEquals(SerializationConstants.TC_STRING, byteBuffer.get())[ CD ]
Line_2 $$ public void testWriteObjectString() -->Line_22 $$ for (int i = 0; i < nonAsciiString.length(); i++) [ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_19 $$ Assert.assertEquals(SerializationConstants.TC_STRING, byteBuffer.get())[ FD ]
Line_14 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_18 $$ Assert.assertEquals(6 + nonAsciiString.length() * 2, byteBuffer.limit())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_17 $$ byteBuffer = serializer.toByteBuffer()[ CD ]
Line_11 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_12 $$ Assert.assertEquals(asciiString.charAt(i), byteBuffer.get())[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_9 $$ Assert.assertEquals(1, byteBuffer.get())[ FD ]
Line_4 $$ Serializer serializer = new Serializer()-->Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_10 $$ Assert.assertEquals(asciiString.length(), byteBuffer.getInt())[ FD ]
Line_4 $$ Serializer serializer = new Serializer()-->Line_17 $$ byteBuffer = serializer.toByteBuffer()[ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_12 $$ Assert.assertEquals(asciiString.charAt(i), byteBuffer.get())[ FD ]
Line_3 $$ String asciiString = "abcdefghijklmn"-->Line_10 $$ Assert.assertEquals(asciiString.length(), byteBuffer.getInt())[ FD ]
Line_15 $$ serializer = new Serializer()-->Line_17 $$ byteBuffer = serializer.toByteBuffer()[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_12 $$ Assert.assertEquals(asciiString.charAt(i), byteBuffer.get())[ FD ]
Line_14 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_21 $$ Assert.assertEquals(nonAsciiString.length(), byteBuffer.getInt())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_7 $$ Assert.assertEquals(6 + asciiString.length(), byteBuffer.limit())[ CD ]
Line_22 $$ for (int i = 0; i < nonAsciiString.length(); i++) -->Line_23 $$ Assert.assertEquals(nonAsciiString.charAt(i), byteBuffer.getChar())[ FD ]
Line_14 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_16 $$ serializer.writeObject(nonAsciiString)[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_5 $$ serializer.writeObject(asciiString)[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_18 $$ Assert.assertEquals(6 + nonAsciiString.length() * 2, byteBuffer.limit())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_20 $$ Assert.assertEquals(0, byteBuffer.get())[ CD ]
Line_22 $$ for (int i = 0; i < nonAsciiString.length(); i++) -->Line_23 $$ Assert.assertEquals(nonAsciiString.charAt(i), byteBuffer.getChar())[ CD ]
Line_17 $$ byteBuffer = serializer.toByteBuffer()-->Line_23 $$ Assert.assertEquals(nonAsciiString.charAt(i), byteBuffer.getChar())[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_7 $$ Assert.assertEquals(6 + asciiString.length(), byteBuffer.limit())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_14 $$ String nonAsciiString = "非ASCII Code中文测试"[ CD ]
Line_11 $$ for (int i = 0; i < asciiString.length(); i++) -->Line_22 $$ for (int i = 0; i < nonAsciiString.length(); i++) [ FD ]
Line_14 $$ String nonAsciiString = "非ASCII Code中文测试"-->Line_23 $$ Assert.assertEquals(nonAsciiString.charAt(i), byteBuffer.getChar())[ FD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_8 $$ Assert.assertEquals(SerializationConstants.TC_STRING, byteBuffer.get())[ FD ]
Line_17 $$ byteBuffer = serializer.toByteBuffer()-->Line_18 $$ Assert.assertEquals(6 + nonAsciiString.length() * 2, byteBuffer.limit())[ FD ]
Line_17 $$ byteBuffer = serializer.toByteBuffer()-->Line_21 $$ Assert.assertEquals(nonAsciiString.length(), byteBuffer.getInt())[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_11 $$ for (int i = 0; i < asciiString.length(); i++) [ CD ]
Line_2 $$ public void testWriteObjectString() -->Line_3 $$ String asciiString = "abcdefghijklmn"[ CD ]
Line_4 $$ Serializer serializer = new Serializer()-->Line_5 $$ serializer.writeObject(asciiString)[ FD ]
Line_2 $$ public void testWriteObjectString() -->Line_18 $$ Assert.assertEquals(6 + nonAsciiString.length() * 2, byteBuffer.limit())[ CD ]
Line_6 $$ ByteBuffer byteBuffer = serializer.toByteBuffer()-->Line_23 $$ Assert.assertEquals(nonAsciiString.charAt(i), byteBuffer.getChar())[ FD ]
Line_4 $$ Serializer serializer = new Serializer()-->Line_15 $$ serializer = new Serializer()[ FD ]
