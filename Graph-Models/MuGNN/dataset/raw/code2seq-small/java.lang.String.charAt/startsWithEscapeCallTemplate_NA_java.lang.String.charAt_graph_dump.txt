Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_15 $$ for (int i = 0; i < max; i++) [ CD ]
Line_16 $$ final char c = Character.toLowerCase(checkString.charAt(i))-->Line_20 $$ if (c == fixture.charAt(fixturePosition)) [ FD ]
Line_3 $$ if (!(sqlString.startsWith("-->Line_4 $$ return false[ CD ]
Line_10 $$ final String checkString = sqlString.substring(1, chopLocation + 4)-->Line_16 $$ final char c = Character.toLowerCase(checkString.charAt(i))[ FD ]
Line_15 $$ for (int i = 0; i < max; i++) -->Line_17 $$ if (Character.isWhitespace(c)) [ CD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_3 $$ if (!(sqlString.startsWith("[ FD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_3 $$ if (!(sqlString.startsWith("[ CD ]
Line_12 $$ int fixturePosition = 0-->Line_21 $$ fixturePosition++[ FD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_11 $$ final String fixture = "?=call"[ CD ]
Line_10 $$ final String checkString = sqlString.substring(1, chopLocation + 4)-->Line_14 $$ final int max = checkString.length()[ FD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_7 $$ if (chopLocation <= 0) [ CD ]
Line_11 $$ final String fixture = "?=call"-->Line_20 $$ if (c == fixture.charAt(fixturePosition)) [ FD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_27 $$ return matches[ CD ]
Line_15 $$ for (int i = 0; i < max; i++) -->Line_16 $$ final char c = Character.toLowerCase(checkString.charAt(i))[ FD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_10 $$ final String checkString = sqlString.substring(1, chopLocation + 4)[ CD ]
Line_6 $$ final int chopLocation = sqlString.indexOf("call")-->Line_7 $$ if (chopLocation <= 0) [ FD ]
Line_20 $$ if (c == fixture.charAt(fixturePosition)) -->Line_21 $$ fixturePosition++[ CD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_13 $$ boolean matches = true[ CD ]
Line_12 $$ int fixturePosition = 0-->Line_20 $$ if (c == fixture.charAt(fixturePosition)) [ FD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_12 $$ int fixturePosition = 0[ CD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_10 $$ final String checkString = sqlString.substring(1, chopLocation + 4)[ FD ]
Line_15 $$ for (int i = 0; i < max; i++) -->Line_16 $$ final char c = Character.toLowerCase(checkString.charAt(i))[ CD ]
Line_16 $$ final char c = Character.toLowerCase(checkString.charAt(i))-->Line_17 $$ if (Character.isWhitespace(c)) [ FD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_6 $$ final int chopLocation = sqlString.indexOf("call")[ FD ]
Line_15 $$ for (int i = 0; i < max; i++) -->Line_24 $$ matches = false[ CD ]
Line_14 $$ final int max = checkString.length()-->Line_15 $$ for (int i = 0; i < max; i++) [ FD ]
Line_13 $$ boolean matches = true-->Line_24 $$ matches = false[ FD ]
Line_15 $$ for (int i = 0; i < max; i++) -->Line_20 $$ if (c == fixture.charAt(fixturePosition)) [ CD ]
Line_7 $$ if (chopLocation <= 0) -->Line_8 $$ return false[ CD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_6 $$ final int chopLocation = sqlString.indexOf("call")[ CD ]
Line_2 $$ public static boolean startsWithEscapeCallTemplate(String sqlString) -->Line_14 $$ final int max = checkString.length()[ CD ]
