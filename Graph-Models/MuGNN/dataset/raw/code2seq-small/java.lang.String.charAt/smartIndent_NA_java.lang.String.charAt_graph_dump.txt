Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_35 $$ CharSequence text = myDocument.getCharsSequence()[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_11 $$ int selectionSegment = myTemplate.getVariableSegmentNumber(TemplateImpl.SELECTION)[ CD ]
Line_5 $$ if (endLineNum == startLineNum) -->Line_6 $$ return[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_5 $$ if (endLineNum == startLineNum) [ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_47 $$ for (int i = startLineNum + 1; i <= endLineNum; i++) [ CD ]
Line_11 $$ int selectionSegment = myTemplate.getVariableSegmentNumber(TemplateImpl.SELECTION)-->Line_12 $$ if (selectionSegment >= 0) [ FD ]
Line_25 $$ for (; indentLineNum >= 0; indentLineNum--) -->Line_27 $$ if (lineLength > 0) [ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_31 $$ if (indentLineNum < 0) [ CD ]
Line_36 $$ for (int i = 0; i < lineLength; i++) -->Line_49 $$ myDocument.insertString(myDocument.getLineStartOffset(i), StringUtil.repeatSymbol(' ', selectionIndent))[ FD ]
Line_26 $$ lineLength = myDocument.getLineEndOffset(indentLineNum) - myDocument.getLineStartOffset(indentLineNum)-->Line_27 $$ if (lineLength > 0) [ FD ]
Line_11 $$ int selectionSegment = myTemplate.getVariableSegmentNumber(TemplateImpl.SELECTION)-->Line_21 $$ selectionEndLine = myDocument.getLineNumber(mySegments.getSegmentEnd(selectionSegment))[ FD ]
Line_36 $$ for (int i = 0; i < lineLength; i++) -->Line_51 $$ myDocument.insertString(myDocument.getLineStartOffset(i), stringToInsert)[ FD ]
Line_34 $$ StringBuilder buffer = new StringBuilder()-->Line_46 $$ String stringToInsert = buffer.toString()[ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_12 $$ if (selectionSegment >= 0) [ CD ]
Line_24 $$ int lineLength = 0-->Line_26 $$ lineLength = myDocument.getLineEndOffset(indentLineNum) - myDocument.getLineStartOffset(indentLineNum)[ FD ]
Line_48 $$ if (i > selectionStartLine && i <= selectionEndLine) -->Line_51 $$ myDocument.insertString(myDocument.getLineStartOffset(i), stringToInsert)[ CD ]
Line_25 $$ for (; indentLineNum >= 0; indentLineNum--) -->Line_26 $$ lineLength = myDocument.getLineEndOffset(indentLineNum) - myDocument.getLineStartOffset(indentLineNum)[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_23 $$ int indentLineNum = startLineNum[ CD ]
Line_34 $$ StringBuilder buffer = new StringBuilder()-->Line_41 $$ buffer.append(ch)[ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_8 $$ int selectionIndent = -1[ CD ]
Line_31 $$ if (indentLineNum < 0) -->Line_32 $$ return[ CD ]
Line_14 $$ selectionIndent = 0-->Line_49 $$ myDocument.insertString(myDocument.getLineStartOffset(i), StringUtil.repeatSymbol(' ', selectionIndent))[ FD ]
Line_12 $$ if (selectionSegment >= 0) -->Line_21 $$ selectionEndLine = myDocument.getLineNumber(mySegments.getSegmentEnd(selectionSegment))[ CD ]
Line_12 $$ if (selectionSegment >= 0) -->Line_14 $$ selectionIndent = 0[ CD ]
Line_34 $$ StringBuilder buffer = new StringBuilder()-->Line_43 $$ if (buffer.length() == 0 && selectionIndent <= 0) [ FD ]
Line_46 $$ String stringToInsert = buffer.toString()-->Line_51 $$ myDocument.insertString(myDocument.getLineStartOffset(i), stringToInsert)[ FD ]
Line_16 $$ while (selectionStart > 0 && templateText.charAt(selectionStart - 1) == ' ') -->Line_17 $$ selectionIndent++[ CD ]
Line_24 $$ int lineLength = 0-->Line_27 $$ if (lineLength > 0) [ FD ]
Line_8 $$ int selectionIndent = -1-->Line_14 $$ selectionIndent = 0[ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_9 $$ int selectionStartLine = -1[ CD ]
Line_35 $$ CharSequence text = myDocument.getCharsSequence()-->Line_37 $$ char ch = text.charAt(myDocument.getLineStartOffset(indentLineNum) + i)[ FD ]
Line_43 $$ if (buffer.length() == 0 && selectionIndent <= 0) -->Line_44 $$ return[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_43 $$ if (buffer.length() == 0 && selectionIndent <= 0) [ CD ]
Line_36 $$ for (int i = 0; i < lineLength; i++) -->Line_37 $$ char ch = text.charAt(myDocument.getLineStartOffset(indentLineNum) + i)[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_25 $$ for (; indentLineNum >= 0; indentLineNum--) [ CD ]
Line_11 $$ int selectionSegment = myTemplate.getVariableSegmentNumber(TemplateImpl.SELECTION)-->Line_20 $$ selectionStartLine = myDocument.getLineNumber(mySegments.getSegmentStart(selectionSegment))[ FD ]
Line_23 $$ int indentLineNum = startLineNum-->Line_37 $$ char ch = text.charAt(myDocument.getLineStartOffset(indentLineNum) + i)[ FD ]
Line_12 $$ if (selectionSegment >= 0) -->Line_16 $$ while (selectionStart > 0 && templateText.charAt(selectionStart - 1) == ' ') [ CD ]
Line_8 $$ int selectionIndent = -1-->Line_49 $$ myDocument.insertString(myDocument.getLineStartOffset(i), StringUtil.repeatSymbol(' ', selectionIndent))[ FD ]
Line_12 $$ if (selectionSegment >= 0) -->Line_20 $$ selectionStartLine = myDocument.getLineNumber(mySegments.getSegmentStart(selectionSegment))[ CD ]
Line_12 $$ if (selectionSegment >= 0) -->Line_13 $$ int selectionStart = myTemplate.getSegmentOffset(selectionSegment)[ CD ]
Line_47 $$ for (int i = startLineNum + 1; i <= endLineNum; i++) -->Line_51 $$ myDocument.insertString(myDocument.getLineStartOffset(i), stringToInsert)[ FD ]
Line_3 $$ int startLineNum = myDocument.getLineNumber(startOffset)-->Line_5 $$ if (endLineNum == startLineNum) [ FD ]
Line_36 $$ for (int i = 0; i < lineLength; i++) -->Line_38 $$ if (ch != ' ' && ch != '\t') [ CD ]
Line_48 $$ if (i > selectionStartLine && i <= selectionEndLine) -->Line_49 $$ myDocument.insertString(myDocument.getLineStartOffset(i), StringUtil.repeatSymbol(' ', selectionIndent))[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_4 $$ int endLineNum = myDocument.getLineNumber(endOffset)[ CD ]
Line_36 $$ for (int i = 0; i < lineLength; i++) -->Line_47 $$ for (int i = startLineNum + 1; i <= endLineNum; i++) [ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_3 $$ int startLineNum = myDocument.getLineNumber(startOffset)[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_4 $$ int endLineNum = myDocument.getLineNumber(endOffset)[ FD ]
Line_15 $$ String templateText = myTemplate.getTemplateText()-->Line_16 $$ while (selectionStart > 0 && templateText.charAt(selectionStart - 1) == ' ') [ FD ]
Line_23 $$ int indentLineNum = startLineNum-->Line_25 $$ for (; indentLineNum >= 0; indentLineNum--) [ FD ]
Line_47 $$ for (int i = startLineNum + 1; i <= endLineNum; i++) -->Line_48 $$ if (i > selectionStartLine && i <= selectionEndLine) [ CD ]
Line_23 $$ int indentLineNum = startLineNum-->Line_26 $$ lineLength = myDocument.getLineEndOffset(indentLineNum) - myDocument.getLineStartOffset(indentLineNum)[ FD ]
Line_16 $$ while (selectionStart > 0 && templateText.charAt(selectionStart - 1) == ' ') -->Line_18 $$ selectionStart--[ CD ]
Line_37 $$ char ch = text.charAt(myDocument.getLineStartOffset(indentLineNum) + i)-->Line_41 $$ buffer.append(ch)[ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_34 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_11 $$ int selectionSegment = myTemplate.getVariableSegmentNumber(TemplateImpl.SELECTION)-->Line_13 $$ int selectionStart = myTemplate.getSegmentOffset(selectionSegment)[ FD ]
Line_8 $$ int selectionIndent = -1-->Line_17 $$ selectionIndent++[ FD ]
Line_24 $$ int lineLength = 0-->Line_36 $$ for (int i = 0; i < lineLength; i++) [ FD ]
Line_23 $$ int indentLineNum = startLineNum-->Line_31 $$ if (indentLineNum < 0) [ FD ]
Line_13 $$ int selectionStart = myTemplate.getSegmentOffset(selectionSegment)-->Line_18 $$ selectionStart--[ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_24 $$ int lineLength = 0[ CD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_3 $$ int startLineNum = myDocument.getLineNumber(startOffset)[ FD ]
Line_14 $$ selectionIndent = 0-->Line_17 $$ selectionIndent++[ FD ]
Line_36 $$ for (int i = 0; i < lineLength; i++) -->Line_41 $$ buffer.append(ch)[ CD ]
Line_4 $$ int endLineNum = myDocument.getLineNumber(endOffset)-->Line_47 $$ for (int i = startLineNum + 1; i <= endLineNum; i++) [ FD ]
Line_47 $$ for (int i = startLineNum + 1; i <= endLineNum; i++) -->Line_49 $$ myDocument.insertString(myDocument.getLineStartOffset(i), StringUtil.repeatSymbol(' ', selectionIndent))[ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_10 $$ int selectionEndLine = -1[ CD ]
Line_9 $$ int selectionStartLine = -1-->Line_20 $$ selectionStartLine = myDocument.getLineNumber(mySegments.getSegmentStart(selectionSegment))[ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_36 $$ for (int i = 0; i < lineLength; i++) [ CD ]
Line_12 $$ if (selectionSegment >= 0) -->Line_15 $$ String templateText = myTemplate.getTemplateText()[ CD ]
Line_4 $$ int endLineNum = myDocument.getLineNumber(endOffset)-->Line_5 $$ if (endLineNum == startLineNum) [ FD ]
Line_26 $$ lineLength = myDocument.getLineEndOffset(indentLineNum) - myDocument.getLineStartOffset(indentLineNum)-->Line_36 $$ for (int i = 0; i < lineLength; i++) [ FD ]
Line_2 $$ private void smartIndent(int startOffset, int endOffset) -->Line_46 $$ String stringToInsert = buffer.toString()[ CD ]
Line_10 $$ int selectionEndLine = -1-->Line_21 $$ selectionEndLine = myDocument.getLineNumber(mySegments.getSegmentEnd(selectionSegment))[ FD ]
