Line_3 $$ final DomElement domElement = DomUtil.getDomElement(element)-->Line_4 $$ if (domElement == null) [ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_11 $$ final String text = ElementManipulators.getValueText(element)[ FD ]
Line_20 $$ final char ch = text.charAt(endIndex)-->Line_26 $$ if (ch == '[ FD ]
Line_13 $$ int startIndex-->Line_36 $$ endIndex = startIndex[ FD ]
Line_13 $$ int startIndex-->Line_15 $$ while ((startIndex = text.indexOf("@[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_34 $$ refs.add(new AntDomMacrodefAttributeReference(element, new TextRange(valueBeginingOffset + startIndex, valueBeginingOffset + endIndex)))[ FD ]
Line_11 $$ final String text = ElementManipulators.getValueText(element)-->Line_15 $$ while ((startIndex = text.indexOf("@[ FD ]
Line_11 $$ final String text = ElementManipulators.getValueText(element)-->Line_31 $$ if (nestedBrackets > 0 || endIndex == text.length())[ FD ]
Line_21 $$ if (ch == '}') -->Line_22 $$ if (nestedBrackets == 0) [ CD ]
Line_14 $$ int endIndex = -1-->Line_15 $$ while ((startIndex = text.indexOf("@[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_33 $$ if (endIndex >= startIndex) [ CD ]
Line_19 $$ while (text.length() > endIndex) -->Line_20 $$ final char ch = text.charAt(endIndex)[ CD ]
Line_26 $$ if (ch == '-->Line_27 $$ ++nestedBrackets[ CD ]
Line_14 $$ int endIndex = -1-->Line_20 $$ final char ch = text.charAt(endIndex)[ FD ]
Line_17 $$ endIndex = startIndex-->Line_19 $$ while (text.length() > endIndex) [ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_7 $$ final AntDomMacroDef macrodef = domElement.getParentOfType(AntDomMacroDef.class, true)[ CD ]
Line_36 $$ endIndex = startIndex-->Line_15 $$ while ((startIndex = text.indexOf("@[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_12 $$ final int valueBeginingOffset = Math.abs(element.getTextRange().getStartOffset() - element.getValueTextRange().getStartOffset())[ CD ]
Line_14 $$ int endIndex = -1-->Line_36 $$ endIndex = startIndex[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_36 $$ endIndex = startIndex[ CD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_19 $$ while (text.length() > endIndex) [ CD ]
Line_13 $$ int startIndex-->Line_16 $$ startIndex += 2[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_3 $$ final DomElement domElement = DomUtil.getDomElement(element)[ FD ]
Line_17 $$ endIndex = startIndex-->Line_29 $$ ++endIndex[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_8 $$ if (macrodef == null) [ CD ]
Line_11 $$ final String text = ElementManipulators.getValueText(element)-->Line_19 $$ while (text.length() > endIndex) [ FD ]
Line_14 $$ int endIndex = -1-->Line_29 $$ ++endIndex[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_36 $$ endIndex = startIndex[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_14 $$ int endIndex = -1[ CD ]
Line_7 $$ final AntDomMacroDef macrodef = domElement.getParentOfType(AntDomMacroDef.class, true)-->Line_8 $$ if (macrodef == null) [ FD ]
Line_8 $$ if (macrodef == null) -->Line_9 $$ return[ CD ]
Line_21 $$ if (ch == '}') -->Line_25 $$ --nestedBrackets[ CD ]
Line_18 $$ int nestedBrackets = 0-->Line_25 $$ --nestedBrackets[ FD ]
Line_14 $$ int endIndex = -1-->Line_33 $$ if (endIndex >= startIndex) [ FD ]
Line_3 $$ final DomElement domElement = DomUtil.getDomElement(element)-->Line_7 $$ final AntDomMacroDef macrodef = domElement.getParentOfType(AntDomMacroDef.class, true)[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_17 $$ endIndex = startIndex[ FD ]
Line_36 $$ endIndex = startIndex-->Line_33 $$ if (endIndex >= startIndex) [ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_16 $$ startIndex += 2[ CD ]
Line_11 $$ final String text = ElementManipulators.getValueText(element)-->Line_20 $$ final char ch = text.charAt(endIndex)[ FD ]
Line_20 $$ final char ch = text.charAt(endIndex)-->Line_21 $$ if (ch == '}') [ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_18 $$ int nestedBrackets = 0[ CD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_4 $$ if (domElement == null) [ CD ]
Line_19 $$ while (text.length() > endIndex) -->Line_21 $$ if (ch == '}') [ CD ]
Line_18 $$ int nestedBrackets = 0-->Line_22 $$ if (nestedBrackets == 0) [ FD ]
Line_17 $$ endIndex = startIndex-->Line_20 $$ final char ch = text.charAt(endIndex)[ FD ]
Line_21 $$ if (ch == '}') -->Line_26 $$ if (ch == '[ CD ]
Line_18 $$ int nestedBrackets = 0-->Line_27 $$ ++nestedBrackets[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_33 $$ if (endIndex >= startIndex) [ FD ]
Line_17 $$ endIndex = startIndex-->Line_15 $$ while ((startIndex = text.indexOf("@[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_16 $$ startIndex += 2[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_12 $$ final int valueBeginingOffset = Math.abs(element.getTextRange().getStartOffset() - element.getValueTextRange().getStartOffset())[ FD ]
Line_17 $$ endIndex = startIndex-->Line_33 $$ if (endIndex >= startIndex) [ FD ]
Line_16 $$ startIndex += 2-->Line_36 $$ endIndex = startIndex[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_3 $$ final DomElement domElement = DomUtil.getDomElement(element)[ CD ]
Line_16 $$ startIndex += 2-->Line_17 $$ endIndex = startIndex[ FD ]
Line_4 $$ if (domElement == null) -->Line_5 $$ return[ CD ]
Line_13 $$ int startIndex-->Line_17 $$ endIndex = startIndex[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_31 $$ if (nestedBrackets > 0 || endIndex == text.length())[ CD ]
Line_14 $$ int endIndex = -1-->Line_17 $$ endIndex = startIndex[ FD ]
Line_15 $$ while ((startIndex = text.indexOf("@-->Line_17 $$ endIndex = startIndex[ CD ]
Line_31 $$ if (nestedBrackets > 0 || endIndex == text.length())-->Line_32 $$ return[ CD ]
Line_13 $$ int startIndex-->Line_33 $$ if (endIndex >= startIndex) [ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_15 $$ while ((startIndex = text.indexOf("@[ CD ]
Line_19 $$ while (text.length() > endIndex) -->Line_29 $$ ++endIndex[ CD ]
Line_16 $$ startIndex += 2-->Line_33 $$ if (endIndex >= startIndex) [ FD ]
Line_33 $$ if (endIndex >= startIndex) -->Line_34 $$ refs.add(new AntDomMacrodefAttributeReference(element, new TextRange(valueBeginingOffset + startIndex, valueBeginingOffset + endIndex)))[ CD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_13 $$ int startIndex[ CD ]
Line_17 $$ endIndex = startIndex-->Line_36 $$ endIndex = startIndex[ FD ]
Line_2 $$ public static void addMacrodefParameterRefs(@NotNull XmlAttributeValue element, final Collection<PsiReference> refs) -->Line_11 $$ final String text = ElementManipulators.getValueText(element)[ CD ]
Line_14 $$ int endIndex = -1-->Line_19 $$ while (text.length() > endIndex) [ FD ]
