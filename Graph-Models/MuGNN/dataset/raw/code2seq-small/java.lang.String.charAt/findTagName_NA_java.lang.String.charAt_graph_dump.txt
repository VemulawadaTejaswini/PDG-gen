Line_4 $$ int openTag = text.indexOf('<', myIndex)-->Line_9 $$ openTag++[ FD ]
Line_20 $$ if (closeTag == -1)-->Line_21 $$ return null[ CD ]
Line_2 $$ private String findTagName(String text) -->Line_28 $$ if (myIsOpeningTag) [ CD ]
Line_2 $$ private String findTagName(String text) -->Line_22 $$ int i = text.indexOf('<', openTag + 1)[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_20 $$ if (closeTag == -1)[ CD ]
Line_2 $$ private String findTagName(String text) -->Line_4 $$ int openTag = text.indexOf('<', myIndex)[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_40 $$ return tagName[ CD ]
Line_11 $$ if (text.charAt(openTag + 1) == '/') -->Line_13 $$ openTag++[ CD ]
Line_15 $$ if (!isValidTagFirstChar(text.charAt(openTag + 1))) -->Line_17 $$ return ""[ CD ]
Line_5 $$ if (openTag == -1) -->Line_6 $$ return null[ CD ]
Line_8 $$ while (text.charAt(openTag + 1) == '<') -->Line_9 $$ openTag++[ CD ]
Line_2 $$ private String findTagName(String text) -->Line_19 $$ int closeTag = text.indexOf('>', openTag + 1)[ FD ]
Line_4 $$ int openTag = text.indexOf('<', myIndex)-->Line_5 $$ if (openTag == -1) [ FD ]
Line_4 $$ int openTag = text.indexOf('<', myIndex)-->Line_31 $$ mySkipped.add(TextRange.from(openTag, tagName.length() + 2))[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_19 $$ int closeTag = text.indexOf('>', openTag + 1)[ CD ]
Line_2 $$ private String findTagName(String text) -->Line_22 $$ int i = text.indexOf('<', openTag + 1)[ CD ]
Line_23 $$ if (i != -1 && i < closeTag) -->Line_25 $$ return ""[ CD ]
Line_28 $$ if (myIsOpeningTag) -->Line_35 $$ if (myTags.containsKey(tagName)) [ CD ]
Line_4 $$ int openTag = text.indexOf('<', myIndex)-->Line_13 $$ openTag++[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_15 $$ if (!isValidTagFirstChar(text.charAt(openTag + 1))) [ CD ]
Line_2 $$ private String findTagName(String text) -->Line_11 $$ if (text.charAt(openTag + 1) == '/') [ FD ]
Line_2 $$ private String findTagName(String text) -->Line_8 $$ while (text.charAt(openTag + 1) == '<') [ CD ]
Line_2 $$ private String findTagName(String text) -->Line_39 $$ myIndex = Math.max(myStartOffset, myEndOffset + 1)[ CD ]
Line_30 $$ if (myTags.containsKey(tagName)) -->Line_31 $$ mySkipped.add(TextRange.from(openTag, tagName.length() + 2))[ CD ]
Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)-->Line_31 $$ mySkipped.add(TextRange.from(openTag, tagName.length() + 2))[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_15 $$ if (!isValidTagFirstChar(text.charAt(openTag + 1))) [ FD ]
Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)-->Line_30 $$ if (myTags.containsKey(tagName)) [ FD ]
Line_2 $$ private String findTagName(String text) -->Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)[ FD ]
Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)-->Line_35 $$ if (myTags.containsKey(tagName)) [ FD ]
Line_2 $$ private String findTagName(String text) -->Line_5 $$ if (openTag == -1) [ CD ]
Line_2 $$ private String findTagName(String text) -->Line_8 $$ while (text.charAt(openTag + 1) == '<') [ FD ]
Line_2 $$ private String findTagName(String text) -->Line_23 $$ if (i != -1 && i < closeTag) [ CD ]
Line_19 $$ int closeTag = text.indexOf('>', openTag + 1)-->Line_20 $$ if (closeTag == -1)[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)[ CD ]
Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)-->Line_29 $$ myStartOffset = openTag + tagName.length() + 2[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_4 $$ int openTag = text.indexOf('<', myIndex)[ CD ]
Line_28 $$ if (myIsOpeningTag) -->Line_30 $$ if (myTags.containsKey(tagName)) [ CD ]
Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)-->Line_36 $$ mySkipped.add(TextRange.from(openTag - 1, tagName.length() + 3))[ FD ]
Line_2 $$ private String findTagName(String text) -->Line_11 $$ if (text.charAt(openTag + 1) == '/') [ CD ]
Line_35 $$ if (myTags.containsKey(tagName)) -->Line_36 $$ mySkipped.add(TextRange.from(openTag - 1, tagName.length() + 3))[ CD ]
Line_19 $$ int closeTag = text.indexOf('>', openTag + 1)-->Line_27 $$ final String tagName = text.substring(openTag + 1, closeTag)[ FD ]
