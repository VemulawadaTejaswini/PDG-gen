Line_6 $$ int index2 = range2.getStartOffset()-->Line_11 $$ index2++[ FD ]
Line_5 $$ int index1 = range1.getStartOffset()-->Line_10 $$ index1++[ FD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_6 $$ int index2 = range2.getStartOffset()[ FD ]
Line_6 $$ int index2 = range2.getStartOffset()-->Line_8 $$ if (text1.charAt(index1) != text2.charAt(index2))[ FD ]
Line_5 $$ int index1 = range1.getStartOffset()-->Line_7 $$ while (index1 < range1.getEndOffset()) [ FD ]
Line_7 $$ while (index1 < range1.getEndOffset()) -->Line_11 $$ index2++[ CD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_5 $$ int index1 = range1.getStartOffset()[ FD ]
Line_7 $$ while (index1 < range1.getEndOffset()) -->Line_8 $$ if (text1.charAt(index1) != text2.charAt(index2))[ CD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_5 $$ int index1 = range1.getStartOffset()[ CD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_7 $$ while (index1 < range1.getEndOffset()) [ CD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_7 $$ while (index1 < range1.getEndOffset()) [ FD ]
Line_5 $$ int index1 = range1.getStartOffset()-->Line_8 $$ if (text1.charAt(index1) != text2.charAt(index2))[ FD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_8 $$ if (text1.charAt(index1) != text2.charAt(index2))[ FD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_3 $$ if (range1.getLength() != range2.getLength())[ CD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_13 $$ return true[ CD ]
Line_7 $$ while (index1 < range1.getEndOffset()) -->Line_10 $$ index1++[ CD ]
Line_8 $$ if (text1.charAt(index1) != text2.charAt(index2))-->Line_9 $$ return false[ CD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_3 $$ if (range1.getLength() != range2.getLength())[ FD ]
Line_2 $$ private static boolean compareSubstring(@NotNull String text1, @NotNull TextRange range1, @NotNull String text2, @NotNull TextRange range2) -->Line_6 $$ int index2 = range2.getStartOffset()[ CD ]
Line_3 $$ if (range1.getLength() != range2.getLength())-->Line_4 $$ return false[ CD ]
