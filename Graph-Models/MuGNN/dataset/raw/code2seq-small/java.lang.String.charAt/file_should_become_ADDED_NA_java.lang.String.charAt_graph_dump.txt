Line_2 $$ public void file_should_become_ADDED(String filePath) throws Throwable -->Line_7 $$ assertTrue("File status is not-changed: " + status, !status.isEmpty())[ CD ]
Line_6 $$ String status = git(repo, "status --porcelain " + vf.getPath())-->Line_7 $$ assertTrue("File status is not-changed: " + status, !status.isEmpty())[ FD ]
Line_5 $$ GitRepository repo = GitCucumberWorld.myPlatformFacade.getRepositoryManager(GitCucumberWorld.myProject).getRepositoryForFile(vf)-->Line_6 $$ String status = git(repo, "status --porcelain " + vf.getPath())[ FD ]
Line_2 $$ public void file_should_become_ADDED(String filePath) throws Throwable -->Line_3 $$ VirtualFile vf = GitCucumberWorld.myProjectDir.findFileByRelativePath(filePath)[ FD ]
Line_2 $$ public void file_should_become_ADDED(String filePath) throws Throwable -->Line_3 $$ VirtualFile vf = GitCucumberWorld.myProjectDir.findFileByRelativePath(filePath)[ CD ]
Line_3 $$ VirtualFile vf = GitCucumberWorld.myProjectDir.findFileByRelativePath(filePath)-->Line_6 $$ String status = git(repo, "status --porcelain " + vf.getPath())[ FD ]
Line_2 $$ public void file_should_become_ADDED(String filePath) throws Throwable -->Line_8 $$ assertTrue("File status is not added: " + status, 'A' == status.charAt(0))[ CD ]
Line_6 $$ String status = git(repo, "status --porcelain " + vf.getPath())-->Line_8 $$ assertTrue("File status is not added: " + status, 'A' == status.charAt(0))[ FD ]
Line_3 $$ VirtualFile vf = GitCucumberWorld.myProjectDir.findFileByRelativePath(filePath)-->Line_4 $$ assertNotNull(vf)[ FD ]
Line_3 $$ VirtualFile vf = GitCucumberWorld.myProjectDir.findFileByRelativePath(filePath)-->Line_5 $$ GitRepository repo = GitCucumberWorld.myPlatformFacade.getRepositoryManager(GitCucumberWorld.myProject).getRepositoryForFile(vf)[ FD ]
Line_2 $$ public void file_should_become_ADDED(String filePath) throws Throwable -->Line_6 $$ String status = git(repo, "status --porcelain " + vf.getPath())[ CD ]
Line_2 $$ public void file_should_become_ADDED(String filePath) throws Throwable -->Line_4 $$ assertNotNull(vf)[ CD ]
Line_2 $$ public void file_should_become_ADDED(String filePath) throws Throwable -->Line_5 $$ GitRepository repo = GitCucumberWorld.myPlatformFacade.getRepositoryManager(GitCucumberWorld.myProject).getRepositoryForFile(vf)[ CD ]
