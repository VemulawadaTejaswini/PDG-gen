Line_6 $$ final StringBuilder buf = new StringBuilder(text.length())-->Line_14 $$ buf.append(c)[ FD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_7 $$ for (int i = 0, length = text.length(); i < length; i++) [ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder(text.length())-->Line_11 $$ buf.append(' ')[ FD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_6 $$ final StringBuilder buf = new StringBuilder(text.length())[ FD ]
Line_8 $$ char c = text.charAt(i)-->Line_9 $$ if (c <= ' ' || Character.isSpaceChar(c)) [ FD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_6 $$ final StringBuilder buf = new StringBuilder(text.length())[ CD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_7 $$ for (int i = 0, length = text.length(); i < length; i++) [ CD ]
Line_9 $$ if (c <= ' ' || Character.isSpaceChar(c)) -->Line_14 $$ buf.append(c)[ CD ]
Line_10 $$ if (buf.length() == 0 || buf.charAt(buf.length() - 1) != ' ') -->Line_11 $$ buf.append(' ')[ CD ]
Line_9 $$ if (c <= ' ' || Character.isSpaceChar(c)) -->Line_10 $$ if (buf.length() == 0 || buf.charAt(buf.length() - 1) != ' ') [ CD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_8 $$ char c = text.charAt(i)[ FD ]
Line_7 $$ for (int i = 0, length = text.length(); i < length; i++) -->Line_9 $$ if (c <= ' ' || Character.isSpaceChar(c)) [ CD ]
Line_8 $$ char c = text.charAt(i)-->Line_14 $$ buf.append(c)[ FD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_3 $$ if (text.isEmpty()) [ FD ]
Line_6 $$ final StringBuilder buf = new StringBuilder(text.length())-->Line_10 $$ if (buf.length() == 0 || buf.charAt(buf.length() - 1) != ' ') [ FD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_3 $$ if (text.isEmpty()) [ CD ]
Line_3 $$ if (text.isEmpty()) -->Line_4 $$ return null[ CD ]
Line_7 $$ for (int i = 0, length = text.length(); i < length; i++) -->Line_8 $$ char c = text.charAt(i)[ FD ]
Line_7 $$ for (int i = 0, length = text.length(); i < length; i++) -->Line_8 $$ char c = text.charAt(i)[ CD ]
Line_2 $$ private static StringBuilder normalizeSpaces(@NotNull String text) -->Line_17 $$ return buf[ CD ]
