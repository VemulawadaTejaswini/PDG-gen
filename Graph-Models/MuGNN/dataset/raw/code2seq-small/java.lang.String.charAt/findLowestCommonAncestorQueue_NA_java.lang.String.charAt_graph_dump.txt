Line_6 $$ for (int i = 0; i < Math.max(name1.length(), name2.length()); i++) -->Line_9 $$ if (name1.charAt(i) == '.') [ FD ]
Line_2 $$ FSQueue findLowestCommonAncestorQueue(FSQueue queue1, FSQueue queue2) -->Line_6 $$ for (int i = 0; i < Math.max(name1.length(), name2.length()); i++) [ CD ]
Line_7 $$ if (name1.length() <= i || name2.length() <= i || name1.charAt(i) != name2.charAt(i)) -->Line_9 $$ if (name1.charAt(i) == '.') [ CD ]
Line_2 $$ FSQueue findLowestCommonAncestorQueue(FSQueue queue1, FSQueue queue2) -->Line_3 $$ String name1 = queue1.getName()[ FD ]
Line_7 $$ if (name1.length() <= i || name2.length() <= i || name1.charAt(i) != name2.charAt(i)) -->Line_8 $$ return queueMgr.getQueue(name1.substring(0, lastPeriodIndex))[ CD ]
Line_9 $$ if (name1.charAt(i) == '.') -->Line_10 $$ lastPeriodIndex = i[ CD ]
Line_2 $$ FSQueue findLowestCommonAncestorQueue(FSQueue queue1, FSQueue queue2) -->Line_4 $$ String name2 = queue2.getName()[ FD ]
Line_2 $$ FSQueue findLowestCommonAncestorQueue(FSQueue queue1, FSQueue queue2) -->Line_4 $$ String name2 = queue2.getName()[ CD ]
Line_2 $$ FSQueue findLowestCommonAncestorQueue(FSQueue queue1, FSQueue queue2) -->Line_3 $$ String name1 = queue1.getName()[ CD ]
Line_6 $$ for (int i = 0; i < Math.max(name1.length(), name2.length()); i++) -->Line_7 $$ if (name1.length() <= i || name2.length() <= i || name1.charAt(i) != name2.charAt(i)) [ FD ]
Line_3 $$ String name1 = queue1.getName()-->Line_8 $$ return queueMgr.getQueue(name1.substring(0, lastPeriodIndex))[ FD ]
Line_10 $$ lastPeriodIndex = i-->Line_8 $$ return queueMgr.getQueue(name1.substring(0, lastPeriodIndex))[ FD ]
Line_3 $$ String name1 = queue1.getName()-->Line_6 $$ for (int i = 0; i < Math.max(name1.length(), name2.length()); i++) [ FD ]
Line_4 $$ String name2 = queue2.getName()-->Line_6 $$ for (int i = 0; i < Math.max(name1.length(), name2.length()); i++) [ FD ]
Line_2 $$ FSQueue findLowestCommonAncestorQueue(FSQueue queue1, FSQueue queue2) -->Line_5 $$ int lastPeriodIndex = -1[ CD ]
Line_6 $$ for (int i = 0; i < Math.max(name1.length(), name2.length()); i++) -->Line_10 $$ lastPeriodIndex = i[ FD ]
Line_6 $$ for (int i = 0; i < Math.max(name1.length(), name2.length()); i++) -->Line_7 $$ if (name1.length() <= i || name2.length() <= i || name1.charAt(i) != name2.charAt(i)) [ CD ]
Line_3 $$ String name1 = queue1.getName()-->Line_9 $$ if (name1.charAt(i) == '.') [ FD ]
Line_5 $$ int lastPeriodIndex = -1-->Line_10 $$ lastPeriodIndex = i[ FD ]
Line_4 $$ String name2 = queue2.getName()-->Line_7 $$ if (name1.length() <= i || name2.length() <= i || name1.charAt(i) != name2.charAt(i)) [ FD ]
Line_3 $$ String name1 = queue1.getName()-->Line_7 $$ if (name1.length() <= i || name2.length() <= i || name1.charAt(i) != name2.charAt(i)) [ FD ]
Line_5 $$ int lastPeriodIndex = -1-->Line_8 $$ return queueMgr.getQueue(name1.substring(0, lastPeriodIndex))[ FD ]
Line_2 $$ FSQueue findLowestCommonAncestorQueue(FSQueue queue1, FSQueue queue2) -->Line_13 $$ return queue1[ CD ]
