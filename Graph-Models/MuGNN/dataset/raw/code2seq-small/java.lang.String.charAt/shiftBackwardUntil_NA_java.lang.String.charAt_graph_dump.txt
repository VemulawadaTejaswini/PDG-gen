Line_5 $$ while (true) -->Line_8 $$ char c = buffer.charAt(offset)[ CD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_10 $$ for (i = 0; i < chars.length(); i++) [ FD ]
Line_5 $$ while (true) -->Line_6 $$ if (offset < 0)[ CD ]
Line_5 $$ while (true) -->Line_9 $$ int i[ CD ]
Line_9 $$ int i-->Line_10 $$ for (i = 0; i < chars.length(); i++) [ FD ]
Line_10 $$ for (i = 0; i < chars.length(); i++) -->Line_11 $$ if (c == chars.charAt(i))[ FD ]
Line_10 $$ for (i = 0; i < chars.length(); i++) -->Line_14 $$ if (i < chars.length())[ FD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_14 $$ if (i < chars.length())[ FD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_6 $$ if (offset < 0)[ FD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_16 $$ offset--[ FD ]
Line_8 $$ char c = buffer.charAt(offset)-->Line_11 $$ if (c == chars.charAt(i))[ FD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_3 $$ if (offset >= buffer.length())[ CD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_3 $$ if (offset >= buffer.length())[ FD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_18 $$ return offset[ CD ]
Line_10 $$ for (i = 0; i < chars.length(); i++) -->Line_11 $$ if (c == chars.charAt(i))[ CD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_8 $$ char c = buffer.charAt(offset)[ FD ]
Line_5 $$ while (true) -->Line_16 $$ offset--[ CD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_11 $$ if (c == chars.charAt(i))[ FD ]
Line_5 $$ while (true) -->Line_10 $$ for (i = 0; i < chars.length(); i++) [ CD ]
Line_5 $$ while (true) -->Line_14 $$ if (i < chars.length())[ CD ]
Line_3 $$ if (offset >= buffer.length())-->Line_4 $$ return offset[ CD ]
Line_9 $$ int i-->Line_14 $$ if (i < chars.length())[ FD ]
Line_2 $$ public static int shiftBackwardUntil(@NotNull CharSequence buffer, int offset, @NotNull String chars) -->Line_5 $$ while (true) [ CD ]
Line_9 $$ int i-->Line_11 $$ if (c == chars.charAt(i))[ FD ]
