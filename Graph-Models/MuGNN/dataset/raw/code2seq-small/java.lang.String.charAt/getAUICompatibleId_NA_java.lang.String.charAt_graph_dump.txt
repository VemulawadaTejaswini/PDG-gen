Line_2 $$ public String getAUICompatibleId(String text) -->Line_7 $$ int lastReplacementIndex = 0[ CD ]
Line_24 $$ lastReplacementIndex = i + 1-->Line_30 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_6 $$ StringBundler sb = null-->Line_13 $$ if (sb == null) [ FD ]
Line_6 $$ StringBundler sb = null-->Line_19 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_6 $$ StringBundler sb = null-->Line_21 $$ sb.append(StringUtil.toHexString(c))[ FD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_6 $$ StringBundler sb = null[ CD ]
Line_14 $$ sb = new StringBundler()-->Line_23 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_19 $$ sb.append(CharPool.UNDERLINE)[ CD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_9 $$ char c = text.charAt(i)[ FD ]
Line_20 $$ if (c != CharPool.UNDERLINE) -->Line_21 $$ sb.append(StringUtil.toHexString(c))[ CD ]
Line_7 $$ int lastReplacementIndex = 0-->Line_30 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_29 $$ if (lastReplacementIndex < text.length()) -->Line_30 $$ sb.append(text.substring(lastReplacementIndex))[ CD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_24 $$ lastReplacementIndex = i + 1[ CD ]
Line_14 $$ sb = new StringBundler()-->Line_30 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_6 $$ StringBundler sb = null-->Line_17 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_7 $$ int lastReplacementIndex = 0-->Line_17 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_14 $$ sb = new StringBundler()-->Line_26 $$ if (sb == null) [ FD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_13 $$ if (sb == null) [ CD ]
Line_24 $$ lastReplacementIndex = i + 1-->Line_29 $$ if (lastReplacementIndex < text.length()) [ FD ]
Line_14 $$ sb = new StringBundler()-->Line_32 $$ return sb.toString()[ FD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_16 $$ if (i > lastReplacementIndex) [ CD ]
Line_9 $$ char c = text.charAt(i)-->Line_20 $$ if (c != CharPool.UNDERLINE) [ FD ]
Line_7 $$ int lastReplacementIndex = 0-->Line_24 $$ lastReplacementIndex = i + 1[ FD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_3 $$ if (Validator.isNull(text)) [ CD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_9 $$ char c = text.charAt(i)[ CD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_29 $$ if (lastReplacementIndex < text.length()) [ FD ]
Line_6 $$ StringBundler sb = null-->Line_30 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_16 $$ if (i > lastReplacementIndex) [ FD ]
Line_24 $$ lastReplacementIndex = i + 1-->Line_17 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_9 $$ char c = text.charAt(i)-->Line_10 $$ if (((c <= 127) && (Validator.isChar(c) || Validator.isDigit(c))) || ((c > 127) && (c != CharPool.FIGURE_SPACE) && (c != CharPool.NARROW_NO_BREAK_SPACE) && (c != CharPool.NO_BREAK_SPACE))) [ FD ]
Line_16 $$ if (i > lastReplacementIndex) -->Line_17 $$ sb.append(text.substring(lastReplacementIndex, i))[ CD ]
Line_13 $$ if (sb == null) -->Line_14 $$ sb = new StringBundler()[ CD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_32 $$ return sb.toString()[ CD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_10 $$ if (((c <= 127) && (Validator.isChar(c) || Validator.isDigit(c))) || ((c > 127) && (c != CharPool.FIGURE_SPACE) && (c != CharPool.NARROW_NO_BREAK_SPACE) && (c != CharPool.NO_BREAK_SPACE))) [ CD ]
Line_7 $$ int lastReplacementIndex = 0-->Line_29 $$ if (lastReplacementIndex < text.length()) [ FD ]
Line_6 $$ StringBundler sb = null-->Line_14 $$ sb = new StringBundler()[ FD ]
Line_3 $$ if (Validator.isNull(text)) -->Line_4 $$ return text[ CD ]
Line_14 $$ sb = new StringBundler()-->Line_21 $$ sb.append(StringUtil.toHexString(c))[ FD ]
Line_14 $$ sb = new StringBundler()-->Line_13 $$ if (sb == null) [ FD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_3 $$ if (Validator.isNull(text)) [ FD ]
Line_7 $$ int lastReplacementIndex = 0-->Line_16 $$ if (i > lastReplacementIndex) [ FD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_20 $$ if (c != CharPool.UNDERLINE) [ CD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_23 $$ sb.append(CharPool.UNDERLINE)[ CD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_24 $$ lastReplacementIndex = i + 1[ FD ]
Line_14 $$ sb = new StringBundler()-->Line_19 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_30 $$ sb.append(text.substring(lastReplacementIndex))[ FD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_8 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_6 $$ StringBundler sb = null-->Line_26 $$ if (sb == null) [ FD ]
Line_6 $$ StringBundler sb = null-->Line_32 $$ return sb.toString()[ FD ]
Line_24 $$ lastReplacementIndex = i + 1-->Line_16 $$ if (i > lastReplacementIndex) [ FD ]
Line_6 $$ StringBundler sb = null-->Line_23 $$ sb.append(CharPool.UNDERLINE)[ FD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_17 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_26 $$ if (sb == null) [ CD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_8 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_14 $$ sb = new StringBundler()-->Line_17 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_17 $$ sb.append(text.substring(lastReplacementIndex, i))[ FD ]
Line_9 $$ char c = text.charAt(i)-->Line_21 $$ sb.append(StringUtil.toHexString(c))[ FD ]
Line_26 $$ if (sb == null) -->Line_27 $$ return text[ CD ]
Line_2 $$ public String getAUICompatibleId(String text) -->Line_29 $$ if (lastReplacementIndex < text.length()) [ CD ]
Line_8 $$ for (int i = 0; i < text.length(); i++) -->Line_9 $$ char c = text.charAt(i)[ FD ]
