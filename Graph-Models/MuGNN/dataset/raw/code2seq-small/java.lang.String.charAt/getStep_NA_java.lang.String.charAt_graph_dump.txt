Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_21 $$ return new WildcardPrefixPatternStep(source.substring(pos), caseSensitive)[ FD ]
Line_23 $$ for (int i = 0; i < source.length(); i++) -->Line_25 $$ if (ch == '?' || ch == '*') [ CD ]
Line_15 $$ for (int i = pos; i < source.length(); i++) -->Line_23 $$ for (int i = 0; i < source.length(); i++) [ FD ]
Line_3 $$ if (source.length() == 0) -->Line_4 $$ return new FixedPatternStep(source, caseSensitive)[ CD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_6 $$ char ch = source.charAt(0)[ FD ]
Line_6 $$ char ch = source.charAt(0)-->Line_7 $$ if (ch == '*') [ FD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_29 $$ return new FixedPatternStep(source, caseSensitive)[ CD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_23 $$ for (int i = 0; i < source.length(); i++) [ CD ]
Line_25 $$ if (ch == '?' || ch == '*') -->Line_26 $$ return new RegExpPatternStep(source, caseSensitive)[ CD ]
Line_8 $$ int pos = 1-->Line_10 $$ pos++[ FD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_3 $$ if (source.length() == 0) [ FD ]
Line_8 $$ int pos = 1-->Line_12 $$ if (pos == source.length()) [ FD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_24 $$ ch = source.charAt(i)[ FD ]
Line_9 $$ while (pos < source.length() && source.charAt(pos) == '*') -->Line_10 $$ pos++[ CD ]
Line_15 $$ for (int i = pos; i < source.length(); i++) -->Line_16 $$ ch = source.charAt(i)[ CD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_16 $$ ch = source.charAt(i)[ FD ]
Line_15 $$ for (int i = pos; i < source.length(); i++) -->Line_24 $$ ch = source.charAt(i)[ FD ]
Line_15 $$ for (int i = pos; i < source.length(); i++) -->Line_17 $$ if (ch == '?' || ch == '*') [ CD ]
Line_8 $$ int pos = 1-->Line_9 $$ while (pos < source.length() && source.charAt(pos) == '*') [ FD ]
Line_7 $$ if (ch == '*') -->Line_12 $$ if (pos == source.length()) [ CD ]
Line_6 $$ char ch = source.charAt(0)-->Line_16 $$ ch = source.charAt(i)[ FD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_7 $$ if (ch == '*') [ CD ]
Line_7 $$ if (ch == '*') -->Line_21 $$ return new WildcardPrefixPatternStep(source.substring(pos), caseSensitive)[ CD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_9 $$ while (pos < source.length() && source.charAt(pos) == '*') [ FD ]
Line_6 $$ char ch = source.charAt(0)-->Line_24 $$ ch = source.charAt(i)[ FD ]
Line_17 $$ if (ch == '?' || ch == '*') -->Line_18 $$ return new RegExpPatternStep(source, caseSensitive)[ CD ]
Line_23 $$ for (int i = 0; i < source.length(); i++) -->Line_24 $$ ch = source.charAt(i)[ FD ]
Line_16 $$ ch = source.charAt(i)-->Line_24 $$ ch = source.charAt(i)[ FD ]
Line_12 $$ if (pos == source.length()) -->Line_13 $$ return ANY_WILDCARD_PATTERN_STEP[ CD ]
Line_15 $$ for (int i = pos; i < source.length(); i++) -->Line_16 $$ ch = source.charAt(i)[ FD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_12 $$ if (pos == source.length()) [ FD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_3 $$ if (source.length() == 0) [ CD ]
Line_8 $$ int pos = 1-->Line_21 $$ return new WildcardPrefixPatternStep(source.substring(pos), caseSensitive)[ FD ]
Line_23 $$ for (int i = 0; i < source.length(); i++) -->Line_24 $$ ch = source.charAt(i)[ CD ]
Line_7 $$ if (ch == '*') -->Line_8 $$ int pos = 1[ CD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_23 $$ for (int i = 0; i < source.length(); i++) [ FD ]
Line_7 $$ if (ch == '*') -->Line_15 $$ for (int i = pos; i < source.length(); i++) [ CD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_15 $$ for (int i = pos; i < source.length(); i++) [ FD ]
Line_2 $$ public static PatternStep getStep(String source, boolean caseSensitive) -->Line_6 $$ char ch = source.charAt(0)[ CD ]
Line_7 $$ if (ch == '*') -->Line_9 $$ while (pos < source.length() && source.charAt(pos) == '*') [ CD ]
