Line_9 $$ if (ch == '%') -->Line_22 $$ if (!type.isAllowed(ch)) [ CD ]
Line_10 $$ if ((i + 2) < length) -->Line_13 $$ int u = Character.digit(hex1, 16)[ CD ]
Line_6 $$ int length = source.length()-->Line_10 $$ if ((i + 2) < length) [ FD ]
Line_11 $$ char hex1 = source.charAt(i + 1)-->Line_13 $$ int u = Character.digit(hex1, 16)[ FD ]
Line_18 $$ i += 2-->Line_20 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_16 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_10 $$ if ((i + 2) < length) -->Line_18 $$ i += 2[ CD ]
Line_12 $$ char hex2 = source.charAt(i + 2)-->Line_14 $$ int l = Character.digit(hex2, 16)[ FD ]
Line_7 $$ for (int i = 0; i < length; i++) -->Line_8 $$ char ch = source.charAt(i)[ CD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_6 $$ int length = source.length()[ CD ]
Line_6 $$ int length = source.length()-->Line_7 $$ for (int i = 0; i < length; i++) [ FD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_22 $$ if (!type.isAllowed(ch)) [ FD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_8 $$ char ch = source.charAt(i)[ FD ]
Line_10 $$ if ((i + 2) < length) -->Line_12 $$ char hex2 = source.charAt(i + 2)[ CD ]
Line_9 $$ if (ch == '%') -->Line_10 $$ if ((i + 2) < length) [ CD ]
Line_10 $$ if ((i + 2) < length) -->Line_11 $$ char hex1 = source.charAt(i + 1)[ CD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_11 $$ char hex1 = source.charAt(i + 1)[ FD ]
Line_18 $$ i += 2-->Line_16 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_18 $$ i += 2-->Line_8 $$ char ch = source.charAt(i)[ FD ]
Line_7 $$ for (int i = 0; i < length; i++) -->Line_16 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_7 $$ for (int i = 0; i < length; i++) -->Line_18 $$ i += 2[ FD ]
Line_7 $$ for (int i = 0; i < length; i++) -->Line_9 $$ if (ch == '%') [ CD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_6 $$ int length = source.length()[ FD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_23 $$ throw new IllegalArgumentException("Invalid character '" + ch + "' for " + type.name() + " in \"" + source + "\"")[ FD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_20 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_3 $$ if (source == null) [ FD ]
Line_10 $$ if ((i + 2) < length) -->Line_14 $$ int l = Character.digit(hex2, 16)[ CD ]
Line_3 $$ if (source == null) -->Line_4 $$ return[ CD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_7 $$ for (int i = 0; i < length; i++) [ CD ]
Line_8 $$ char ch = source.charAt(i)-->Line_22 $$ if (!type.isAllowed(ch)) [ FD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_12 $$ char hex2 = source.charAt(i + 2)[ FD ]
Line_8 $$ char ch = source.charAt(i)-->Line_9 $$ if (ch == '%') [ FD ]
Line_10 $$ if ((i + 2) < length) -->Line_15 $$ if (u == -1 || l == -1) [ CD ]
Line_2 $$ private static void verifyUriComponent(String source, Type type) -->Line_3 $$ if (source == null) [ CD ]
Line_18 $$ i += 2-->Line_7 $$ for (int i = 0; i < length; i++) [ FD ]
Line_7 $$ for (int i = 0; i < length; i++) -->Line_20 $$ throw new IllegalArgumentException("Invalid encoded sequence \"" + source.substring(i) + "\"")[ FD ]
Line_7 $$ for (int i = 0; i < length; i++) -->Line_8 $$ char ch = source.charAt(i)[ FD ]
