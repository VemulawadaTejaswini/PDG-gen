Line_16 $$ String name = propertyName-->Line_18 $$ name = Character.toUpperCase(name.charAt(0)) + name.substring(1)[ FD ]
Line_16 $$ String name = propertyName-->Line_17 $$ if (!name.isEmpty() && !prefix.isEmpty() && !StringUtil.endsWithChar(prefix, '_')) [ FD ]
Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD) -->Line_13 $$ return buffer.toString()[ CD ]
Line_18 $$ name = Character.toUpperCase(name.charAt(0)) + name.substring(1)-->Line_21 $$ name = changeIfNotIdentifier(name)[ FD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_20 $$ name = prefix + name + getSuffixByVariableKind(variableKind)[ CD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD) [ FD ]
Line_18 $$ name = Character.toUpperCase(name.charAt(0)) + name.substring(1)-->Line_20 $$ name = prefix + name + getSuffixByVariableKind(variableKind)[ FD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_15 $$ String prefix = getPrefixByVariableKind(variableKind)[ FD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_15 $$ String prefix = getPrefixByVariableKind(variableKind)[ CD ]
Line_16 $$ String name = propertyName-->Line_20 $$ name = prefix + name + getSuffixByVariableKind(variableKind)[ FD ]
Line_16 $$ String name = propertyName-->Line_21 $$ name = changeIfNotIdentifier(name)[ FD ]
Line_6 $$ for (int i = 0; i < words.length; i++) -->Line_11 $$ buffer.append(StringUtil.toUpperCase(word))[ CD ]
Line_20 $$ name = prefix + name + getSuffixByVariableKind(variableKind)-->Line_21 $$ name = changeIfNotIdentifier(name)[ FD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_4 $$ String[] words = NameUtil.nameToWords(propertyName)[ FD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_13 $$ return buffer.toString()[ FD ]
Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD) -->Line_5 $$ StringBuilder buffer = new StringBuilder()[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_11 $$ buffer.append(StringUtil.toUpperCase(word))[ FD ]
Line_6 $$ for (int i = 0; i < words.length; i++) -->Line_7 $$ String word = words[i][ CD ]
Line_6 $$ for (int i = 0; i < words.length; i++) -->Line_8 $$ if (i > 0) [ CD ]
Line_8 $$ if (i > 0) -->Line_9 $$ buffer.append("_")[ CD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_17 $$ if (!name.isEmpty() && !prefix.isEmpty() && !StringUtil.endsWithChar(prefix, '_')) [ CD ]
Line_15 $$ String prefix = getPrefixByVariableKind(variableKind)-->Line_17 $$ if (!name.isEmpty() && !prefix.isEmpty() && !StringUtil.endsWithChar(prefix, '_')) [ FD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD) [ CD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_20 $$ name = prefix + name + getSuffixByVariableKind(variableKind)[ FD ]
Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD) -->Line_6 $$ for (int i = 0; i < words.length; i++) [ CD ]
Line_17 $$ if (!name.isEmpty() && !prefix.isEmpty() && !StringUtil.endsWithChar(prefix, '_')) -->Line_18 $$ name = Character.toUpperCase(name.charAt(0)) + name.substring(1)[ CD ]
Line_5 $$ StringBuilder buffer = new StringBuilder()-->Line_9 $$ buffer.append("_")[ FD ]
Line_7 $$ String word = words[i]-->Line_11 $$ buffer.append(StringUtil.toUpperCase(word))[ FD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_16 $$ String name = propertyName[ CD ]
Line_6 $$ for (int i = 0; i < words.length; i++) -->Line_8 $$ if (i > 0) [ FD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_22 $$ return name[ CD ]
Line_2 $$ public String propertyNameToVariableName(@NotNull String propertyName, @NotNull VariableKind variableKind) -->Line_21 $$ name = changeIfNotIdentifier(name)[ CD ]
Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD) -->Line_4 $$ String[] words = NameUtil.nameToWords(propertyName)[ CD ]
