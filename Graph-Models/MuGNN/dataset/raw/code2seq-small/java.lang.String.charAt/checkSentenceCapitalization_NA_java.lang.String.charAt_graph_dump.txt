Line_2 $$ private static boolean checkSentenceCapitalization(@NotNull String value) -->Line_16 $$ return true[ CD ]
Line_2 $$ private static boolean checkSentenceCapitalization(@NotNull String value) -->Line_3 $$ String[] words = value.split(" ")[ CD ]
Line_6 $$ if (!StringUtil.isCapitalized(words[0]))-->Line_7 $$ return false[ CD ]
Line_9 $$ String word = words[i]-->Line_10 $$ if (StringUtil.isCapitalized(word)) [ FD ]
Line_10 $$ if (StringUtil.isCapitalized(word)) -->Line_13 $$ return false[ CD ]
Line_4 $$ if (words.length == 0)-->Line_5 $$ return true[ CD ]
Line_2 $$ private static boolean checkSentenceCapitalization(@NotNull String value) -->Line_4 $$ if (words.length == 0)[ CD ]
Line_2 $$ private static boolean checkSentenceCapitalization(@NotNull String value) -->Line_3 $$ String[] words = value.split(" ")[ FD ]
Line_8 $$ for (int i = 1; i < words.length; i++) -->Line_9 $$ String word = words[i][ CD ]
Line_10 $$ if (StringUtil.isCapitalized(word)) -->Line_11 $$ if (word.length() == 1 || !Character.isLowerCase(word.charAt(1)))[ CD ]
Line_8 $$ for (int i = 1; i < words.length; i++) -->Line_10 $$ if (StringUtil.isCapitalized(word)) [ CD ]
Line_2 $$ private static boolean checkSentenceCapitalization(@NotNull String value) -->Line_6 $$ if (!StringUtil.isCapitalized(words[0]))[ CD ]
Line_2 $$ private static boolean checkSentenceCapitalization(@NotNull String value) -->Line_8 $$ for (int i = 1; i < words.length; i++) [ CD ]
Line_9 $$ String word = words[i]-->Line_11 $$ if (word.length() == 1 || !Character.isLowerCase(word.charAt(1)))[ FD ]
