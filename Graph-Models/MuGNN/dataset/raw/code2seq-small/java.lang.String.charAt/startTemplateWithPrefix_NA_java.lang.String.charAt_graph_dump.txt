Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_4 $$ String key = template.getKey()[ FD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_10 $$ startOffset -= argument.length()[ FD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_12 $$ startTemplateWithPrefix(editor, template, startOffset, processor, argument)[ CD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_12 $$ startTemplateWithPrefix(editor, template, startOffset, processor, argument)[ FD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_5 $$ int startOffset = caretOffset - key.length()[ CD ]
Line_4 $$ String key = template.getKey()-->Line_5 $$ int startOffset = caretOffset - key.length()[ FD ]
Line_10 $$ startOffset -= argument.length()-->Line_12 $$ startTemplateWithPrefix(editor, template, startOffset, processor, argument)[ FD ]
Line_5 $$ int startOffset = caretOffset - key.length()-->Line_8 $$ startOffset--[ FD ]
Line_5 $$ int startOffset = caretOffset - key.length()-->Line_12 $$ startTemplateWithPrefix(editor, template, startOffset, processor, argument)[ FD ]
Line_6 $$ if (argument != null) -->Line_7 $$ if (!isDelimiter(key.charAt(key.length() - 1))) [ CD ]
Line_7 $$ if (!isDelimiter(key.charAt(key.length() - 1))) -->Line_8 $$ startOffset--[ CD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_3 $$ final int caretOffset = editor.getCaretModel().getOffset()[ FD ]
Line_5 $$ int startOffset = caretOffset - key.length()-->Line_10 $$ startOffset -= argument.length()[ FD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_6 $$ if (argument != null) [ FD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_3 $$ final int caretOffset = editor.getCaretModel().getOffset()[ CD ]
Line_4 $$ String key = template.getKey()-->Line_7 $$ if (!isDelimiter(key.charAt(key.length() - 1))) [ FD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_6 $$ if (argument != null) [ CD ]
Line_2 $$ public void startTemplateWithPrefix(final Editor editor, final TemplateImpl template, @Nullable final PairProcessor<String, String> processor, @Nullable String argument) -->Line_4 $$ String key = template.getKey()[ CD ]
Line_6 $$ if (argument != null) -->Line_10 $$ startOffset -= argument.length()[ CD ]
