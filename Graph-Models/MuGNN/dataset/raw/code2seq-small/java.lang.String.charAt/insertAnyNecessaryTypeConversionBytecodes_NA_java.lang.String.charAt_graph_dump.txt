Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_40 $$ if (targetDescriptor == 'F') [ FD ]
Line_5 $$ if (stackTop == 'I' || stackTop == 'B' || stackTop == 'S' || stackTop == 'C') -->Line_16 $$ if (stackTop == 'J') [ CD ]
Line_31 $$ if (targetDescriptor == 'J') -->Line_33 $$ if (targetDescriptor == 'I') [ CD ]
Line_27 $$ if (stackTop == 'F') -->Line_38 $$ if (stackTop == 'D') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_7 $$ mv.visitInsn(I2D)[ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_9 $$ mv.visitInsn(I2F)[ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_6 $$ if (targetDescriptor == 'D') [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_42 $$ if (targetDescriptor == 'J') [ FD ]
Line_4 $$ char stackTop = stackDescriptor.charAt(0)-->Line_27 $$ if (stackTop == 'F') [ FD ]
Line_21 $$ if (targetDescriptor == 'J') -->Line_22 $$ if (targetDescriptor == 'I') [ CD ]
Line_5 $$ if (stackTop == 'I' || stackTop == 'B' || stackTop == 'S' || stackTop == 'C') -->Line_6 $$ if (targetDescriptor == 'D') [ CD ]
Line_4 $$ char stackTop = stackDescriptor.charAt(0)-->Line_16 $$ if (stackTop == 'J') [ FD ]
Line_10 $$ if (targetDescriptor == 'J') -->Line_12 $$ if (targetDescriptor == 'I') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_12 $$ if (targetDescriptor == 'I') [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_10 $$ if (targetDescriptor == 'J') [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_23 $$ mv.visitInsn(L2I)[ FD ]
Line_31 $$ if (targetDescriptor == 'J') -->Line_32 $$ mv.visitInsn(F2L)[ CD ]
Line_38 $$ if (stackTop == 'D') -->Line_39 $$ if (targetDescriptor == 'D') [ CD ]
Line_42 $$ if (targetDescriptor == 'J') -->Line_43 $$ mv.visitInsn(D2L)[ CD ]
Line_17 $$ if (targetDescriptor == 'D') -->Line_18 $$ mv.visitInsn(L2D)[ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_22 $$ if (targetDescriptor == 'I') [ FD ]
Line_39 $$ if (targetDescriptor == 'D') -->Line_40 $$ if (targetDescriptor == 'F') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_31 $$ if (targetDescriptor == 'J') [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_21 $$ if (targetDescriptor == 'J') [ FD ]
Line_33 $$ if (targetDescriptor == 'I') -->Line_34 $$ mv.visitInsn(F2I)[ CD ]
Line_16 $$ if (stackTop == 'J') -->Line_17 $$ if (targetDescriptor == 'D') [ CD ]
Line_27 $$ if (stackTop == 'F') -->Line_28 $$ if (targetDescriptor == 'D') [ CD ]
Line_19 $$ if (targetDescriptor == 'F') -->Line_21 $$ if (targetDescriptor == 'J') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_30 $$ if (targetDescriptor == 'F') [ FD ]
Line_28 $$ if (targetDescriptor == 'D') -->Line_30 $$ if (targetDescriptor == 'F') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_43 $$ mv.visitInsn(D2L)[ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_29 $$ mv.visitInsn(F2D)[ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_45 $$ mv.visitInsn(D2I)[ FD ]
Line_40 $$ if (targetDescriptor == 'F') -->Line_41 $$ mv.visitInsn(D2F)[ CD ]
Line_22 $$ if (targetDescriptor == 'I') -->Line_23 $$ mv.visitInsn(L2I)[ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_3 $$ if (CodeFlow.isPrimitive(stackDescriptor)) [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_8 $$ if (targetDescriptor == 'F') [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_4 $$ char stackTop = stackDescriptor.charAt(0)[ FD ]
Line_30 $$ if (targetDescriptor == 'F') -->Line_31 $$ if (targetDescriptor == 'J') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_39 $$ if (targetDescriptor == 'D') [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_28 $$ if (targetDescriptor == 'D') [ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_11 $$ mv.visitInsn(I2L)[ FD ]
Line_28 $$ if (targetDescriptor == 'D') -->Line_29 $$ mv.visitInsn(F2D)[ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_3 $$ if (CodeFlow.isPrimitive(stackDescriptor)) [ CD ]
Line_8 $$ if (targetDescriptor == 'F') -->Line_10 $$ if (targetDescriptor == 'J') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_18 $$ mv.visitInsn(L2D)[ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_32 $$ mv.visitInsn(F2L)[ FD ]
Line_6 $$ if (targetDescriptor == 'D') -->Line_8 $$ if (targetDescriptor == 'F') [ CD ]
Line_19 $$ if (targetDescriptor == 'F') -->Line_20 $$ mv.visitInsn(L2F)[ CD ]
Line_16 $$ if (stackTop == 'J') -->Line_27 $$ if (stackTop == 'F') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_33 $$ if (targetDescriptor == 'I') [ FD ]
Line_4 $$ char stackTop = stackDescriptor.charAt(0)-->Line_38 $$ if (stackTop == 'D') [ FD ]
Line_17 $$ if (targetDescriptor == 'D') -->Line_19 $$ if (targetDescriptor == 'F') [ CD ]
Line_40 $$ if (targetDescriptor == 'F') -->Line_42 $$ if (targetDescriptor == 'J') [ CD ]
Line_42 $$ if (targetDescriptor == 'J') -->Line_44 $$ if (targetDescriptor == 'I') [ CD ]
Line_6 $$ if (targetDescriptor == 'D') -->Line_7 $$ mv.visitInsn(I2D)[ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_41 $$ mv.visitInsn(D2F)[ FD ]
Line_10 $$ if (targetDescriptor == 'J') -->Line_11 $$ mv.visitInsn(I2L)[ CD ]
Line_3 $$ if (CodeFlow.isPrimitive(stackDescriptor)) -->Line_5 $$ if (stackTop == 'I' || stackTop == 'B' || stackTop == 'S' || stackTop == 'C') [ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_19 $$ if (targetDescriptor == 'F') [ FD ]
Line_3 $$ if (CodeFlow.isPrimitive(stackDescriptor)) -->Line_4 $$ char stackTop = stackDescriptor.charAt(0)[ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_44 $$ if (targetDescriptor == 'I') [ FD ]
Line_8 $$ if (targetDescriptor == 'F') -->Line_9 $$ mv.visitInsn(I2F)[ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_34 $$ mv.visitInsn(F2I)[ FD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_17 $$ if (targetDescriptor == 'D') [ FD ]
Line_44 $$ if (targetDescriptor == 'I') -->Line_45 $$ mv.visitInsn(D2I)[ CD ]
Line_2 $$ public static void insertAnyNecessaryTypeConversionBytecodes(MethodVisitor mv, char targetDescriptor, String stackDescriptor) -->Line_20 $$ mv.visitInsn(L2F)[ FD ]
