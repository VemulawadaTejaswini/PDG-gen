Line_32 $$ CompositeAttributeTagDescriptor parentDescriptor-->Line_35 $$ ourAttributeTable.put(attrName, parentDescriptor)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_14 $$ value.setName(htmlTagName)[ FD ]
Line_7 $$ final Element element = (Element) object-->Line_26 $$ String attrName = element.getAttributeValue(NAME_ATTR)[ FD ]
Line_2 $$ private static void loadHtmlElements(final String resourceName, Collection<String> htmlTagNames) throws JDOMException, IOException -->Line_4 $$ final List elements = document.getRootElement().getChildren(TAG_ELEMENT_NAME)[ CD ]
Line_8 $$ String htmlTagName = element.getAttributeValue(NAME_ATTR)-->Line_9 $$ htmlTagNames.add(htmlTagName)[ FD ]
Line_29 $$ if (previousDescriptor == null) -->Line_32 $$ CompositeAttributeTagDescriptor parentDescriptor[ CD ]
Line_7 $$ final Element element = (Element) object-->Line_43 $$ value.setDescription(element.getAttributeValue(DESCRIPTION_ATTR))[ FD ]
Line_18 $$ String attributeValue = element.getAttributeValue(DTD_ATTR)-->Line_47 $$ value.setDtd(attributeValue.charAt(0))[ FD ]
Line_7 $$ final Element element = (Element) object-->Line_51 $$ StringTokenizer tokenizer = new StringTokenizer(element.getAttributeValue(RELATED_TAGS_ATTR), ",")[ FD ]
Line_32 $$ CompositeAttributeTagDescriptor parentDescriptor-->Line_38 $$ parentDescriptor = (CompositeAttributeTagDescriptor) previousDescriptor[ FD ]
Line_29 $$ if (previousDescriptor == null) -->Line_30 $$ ourAttributeTable.put(attrName, value)[ CD ]
Line_8 $$ String htmlTagName = element.getAttributeValue(NAME_ATTR)-->Line_14 $$ value.setName(htmlTagName)[ FD ]
Line_29 $$ if (previousDescriptor == null) -->Line_33 $$ if (!(previousDescriptor instanceof CompositeAttributeTagDescriptor)) [ CD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_12 $$ value.setHelpRef(baseHtmlExtDocUrl + element.getAttributeValue(HELPREF_ATTR))[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_59 $$ value.setSetOfParentTags(new String[tokenCount - (value.isParentSetIsExclusionSet() ? 1 : 0)])[ FD ]
Line_2 $$ private static void loadHtmlElements(final String resourceName, Collection<String> htmlTagNames) throws JDOMException, IOException -->Line_9 $$ htmlTagNames.add(htmlTagName)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_40 $$ parentDescriptor.attributes.add(value)[ FD ]
Line_2 $$ private static void loadHtmlElements(final String resourceName, Collection<String> htmlTagNames) throws JDOMException, IOException -->Line_23 $$ final List attributes = document.getRootElement().getChildren(ATTRIBUTE_ELEMENT_NAME)[ CD ]
Line_7 $$ final Element element = (Element) object-->Line_45 $$ String attributeValue = element.getAttributeValue(DTD_ATTR)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_44 $$ value.setName(attrName)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_61 $$ value.getSetOfParentTags()[i - (value.isParentSetIsExclusionSet() ? 1 : 0)] = s[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_30 $$ ourAttributeTable.put(attrName, value)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_20 $$ value.setDtd(attributeValue.charAt(0))[ FD ]
Line_19 $$ if (attributeValue.length() > 0) -->Line_20 $$ value.setDtd(attributeValue.charAt(0))[ CD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_43 $$ value.setDescription(element.getAttributeValue(DESCRIPTION_ATTR))[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_49 $$ value.setType(element.getAttributeValue(TYPE_ATTR))[ FD ]
Line_54 $$ final String s = tokenizer.nextToken()-->Line_61 $$ value.getSetOfParentTags()[i - (value.isParentSetIsExclusionSet() ? 1 : 0)] = s[ FD ]
Line_52 $$ int tokenCount = tokenizer.countTokens()-->Line_53 $$ for (int i = 0; i < tokenCount; ++i) [ FD ]
Line_2 $$ private static void loadHtmlElements(final String resourceName, Collection<String> htmlTagNames) throws JDOMException, IOException -->Line_3 $$ final Document document = JDOMUtil.loadDocument(HtmlDescriptorsTable.class.getResourceAsStream(resourceName))[ CD ]
Line_18 $$ String attributeValue = element.getAttributeValue(DTD_ATTR)-->Line_20 $$ value.setDtd(attributeValue.charAt(0))[ FD ]
Line_58 $$ if (value.getSetOfParentTags() == null) -->Line_59 $$ value.setSetOfParentTags(new String[tokenCount - (value.isParentSetIsExclusionSet() ? 1 : 0)])[ CD ]
Line_7 $$ final Element element = (Element) object-->Line_13 $$ value.setDescription(element.getAttributeValue(DESCRIPTION_ATTR))[ FD ]
Line_33 $$ if (!(previousDescriptor instanceof CompositeAttributeTagDescriptor)) -->Line_36 $$ parentDescriptor.attributes.add(previousDescriptor)[ CD ]
Line_29 $$ if (previousDescriptor == null) -->Line_40 $$ parentDescriptor.attributes.add(value)[ CD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_64 $$ Arrays.sort(value.getSetOfParentTags())[ FD ]
Line_55 $$ if (s.equals("!")) -->Line_58 $$ if (value.getSetOfParentTags() == null) [ CD ]
Line_55 $$ if (s.equals("!")) -->Line_61 $$ value.getSetOfParentTags()[i - (value.isParentSetIsExclusionSet() ? 1 : 0)] = s[ CD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_42 $$ value.setHelpRef(element.getAttributeValue(HELPREF_ATTR))[ FD ]
Line_26 $$ String attrName = element.getAttributeValue(NAME_ATTR)-->Line_44 $$ value.setName(attrName)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_16 $$ value.setHasEndTag(element.getAttribute(ENDTAG_ATTR).getBooleanValue())[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_56 $$ value.setParentSetIsExclusionSet(true)[ FD ]
Line_46 $$ if (attributeValue.length() > 0) -->Line_47 $$ value.setDtd(attributeValue.charAt(0))[ CD ]
Line_33 $$ if (!(previousDescriptor instanceof CompositeAttributeTagDescriptor)) -->Line_34 $$ parentDescriptor = new CompositeAttributeTagDescriptor()[ CD ]
Line_51 $$ StringTokenizer tokenizer = new StringTokenizer(element.getAttributeValue(RELATED_TAGS_ATTR), ",")-->Line_54 $$ final String s = tokenizer.nextToken()[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_50 $$ value.setHasDefaultValue(element.getAttribute(DEFAULT_ATTR).getBooleanValue())[ FD ]
Line_34 $$ parentDescriptor = new CompositeAttributeTagDescriptor()-->Line_35 $$ ourAttributeTable.put(attrName, parentDescriptor)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_11 $$ ourTagTable.put(htmlTagName, value)[ FD ]
Line_54 $$ final String s = tokenizer.nextToken()-->Line_55 $$ if (s.equals("!")) [ FD ]
Line_7 $$ final Element element = (Element) object-->Line_12 $$ value.setHelpRef(baseHtmlExtDocUrl + element.getAttributeValue(HELPREF_ATTR))[ FD ]
Line_26 $$ String attrName = element.getAttributeValue(NAME_ATTR)-->Line_30 $$ ourAttributeTable.put(attrName, value)[ FD ]
Line_7 $$ final Element element = (Element) object-->Line_49 $$ value.setType(element.getAttributeValue(TYPE_ATTR))[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_13 $$ value.setDescription(element.getAttributeValue(DESCRIPTION_ATTR))[ FD ]
Line_8 $$ String htmlTagName = element.getAttributeValue(NAME_ATTR)-->Line_11 $$ ourTagTable.put(htmlTagName, value)[ FD ]
Line_55 $$ if (s.equals("!")) -->Line_56 $$ value.setParentSetIsExclusionSet(true)[ CD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_15 $$ value.setHasStartTag(element.getAttribute(STARTTAG_ATTR).getBooleanValue())[ FD ]
Line_33 $$ if (!(previousDescriptor instanceof CompositeAttributeTagDescriptor)) -->Line_35 $$ ourAttributeTable.put(attrName, parentDescriptor)[ CD ]
Line_26 $$ String attrName = element.getAttributeValue(NAME_ATTR)-->Line_35 $$ ourAttributeTable.put(attrName, parentDescriptor)[ FD ]
Line_2 $$ private static void loadHtmlElements(final String resourceName, Collection<String> htmlTagNames) throws JDOMException, IOException -->Line_3 $$ final Document document = JDOMUtil.loadDocument(HtmlDescriptorsTable.class.getResourceAsStream(resourceName))[ FD ]
Line_7 $$ final Element element = (Element) object-->Line_8 $$ String htmlTagName = element.getAttributeValue(NAME_ATTR)[ FD ]
Line_32 $$ CompositeAttributeTagDescriptor parentDescriptor-->Line_34 $$ parentDescriptor = new CompositeAttributeTagDescriptor()[ FD ]
Line_28 $$ HtmlAttributeDescriptor previousDescriptor = ourAttributeTable.get(attrName)-->Line_36 $$ parentDescriptor.attributes.add(previousDescriptor)[ FD ]
Line_18 $$ String attributeValue = element.getAttributeValue(DTD_ATTR)-->Line_46 $$ if (attributeValue.length() > 0) [ FD ]
Line_33 $$ if (!(previousDescriptor instanceof CompositeAttributeTagDescriptor)) -->Line_38 $$ parentDescriptor = (CompositeAttributeTagDescriptor) previousDescriptor[ CD ]
Line_7 $$ final Element element = (Element) object-->Line_18 $$ String attributeValue = element.getAttributeValue(DTD_ATTR)[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_47 $$ value.setDtd(attributeValue.charAt(0))[ FD ]
Line_3 $$ final Document document = JDOMUtil.loadDocument(HtmlDescriptorsTable.class.getResourceAsStream(resourceName))-->Line_5 $$ final String baseHtmlExtDocUrl = document.getRootElement().getAttribute(BASE_HELP_REF_ATTR).getValue()[ FD ]
Line_2 $$ private static void loadHtmlElements(final String resourceName, Collection<String> htmlTagNames) throws JDOMException, IOException -->Line_5 $$ final String baseHtmlExtDocUrl = document.getRootElement().getAttribute(BASE_HELP_REF_ATTR).getValue()[ CD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_17 $$ value.setEmpty(element.getAttribute(EMPTY_ATTR).getBooleanValue())[ FD ]
Line_34 $$ parentDescriptor = new CompositeAttributeTagDescriptor()-->Line_38 $$ parentDescriptor = (CompositeAttributeTagDescriptor) previousDescriptor[ FD ]
Line_10 $$ HtmlTagDescriptor value = new HtmlTagDescriptor()-->Line_58 $$ if (value.getSetOfParentTags() == null) [ FD ]
Line_3 $$ final Document document = JDOMUtil.loadDocument(HtmlDescriptorsTable.class.getResourceAsStream(resourceName))-->Line_4 $$ final List elements = document.getRootElement().getChildren(TAG_ELEMENT_NAME)[ FD ]
Line_53 $$ for (int i = 0; i < tokenCount; ++i) -->Line_54 $$ final String s = tokenizer.nextToken()[ CD ]
Line_7 $$ final Element element = (Element) object-->Line_15 $$ value.setHasStartTag(element.getAttribute(STARTTAG_ATTR).getBooleanValue())[ FD ]
Line_28 $$ HtmlAttributeDescriptor previousDescriptor = ourAttributeTable.get(attrName)-->Line_29 $$ if (previousDescriptor == null) [ FD ]
Line_26 $$ String attrName = element.getAttributeValue(NAME_ATTR)-->Line_28 $$ HtmlAttributeDescriptor previousDescriptor = ourAttributeTable.get(attrName)[ FD ]
Line_18 $$ String attributeValue = element.getAttributeValue(DTD_ATTR)-->Line_19 $$ if (attributeValue.length() > 0) [ FD ]
Line_7 $$ final Element element = (Element) object-->Line_42 $$ value.setHelpRef(element.getAttributeValue(HELPREF_ATTR))[ FD ]
Line_3 $$ final Document document = JDOMUtil.loadDocument(HtmlDescriptorsTable.class.getResourceAsStream(resourceName))-->Line_23 $$ final List attributes = document.getRootElement().getChildren(ATTRIBUTE_ELEMENT_NAME)[ FD ]
Line_7 $$ final Element element = (Element) object-->Line_16 $$ value.setHasEndTag(element.getAttribute(ENDTAG_ATTR).getBooleanValue())[ FD ]
Line_51 $$ StringTokenizer tokenizer = new StringTokenizer(element.getAttributeValue(RELATED_TAGS_ATTR), ",")-->Line_52 $$ int tokenCount = tokenizer.countTokens()[ FD ]
Line_7 $$ final Element element = (Element) object-->Line_50 $$ value.setHasDefaultValue(element.getAttribute(DEFAULT_ATTR).getBooleanValue())[ FD ]
Line_7 $$ final Element element = (Element) object-->Line_17 $$ value.setEmpty(element.getAttribute(EMPTY_ATTR).getBooleanValue())[ FD ]
Line_53 $$ for (int i = 0; i < tokenCount; ++i) -->Line_55 $$ if (s.equals("!")) [ CD ]
