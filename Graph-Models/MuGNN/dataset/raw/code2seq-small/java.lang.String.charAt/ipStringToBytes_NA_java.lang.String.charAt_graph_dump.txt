Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_4 $$ boolean hasDot = false[ CD ]
Line_21 $$ if (ipString == null) -->Line_22 $$ return null[ CD ]
Line_20 $$ ipString = convertDottedQuadToHex(ipString)-->Line_21 $$ if (ipString == null) [ FD ]
Line_20 $$ ipString = convertDottedQuadToHex(ipString)-->Line_25 $$ return textToNumericFormatV6(ipString)[ FD ]
Line_5 $$ for (int i = 0; i < ipString.length(); i++) -->Line_6 $$ char c = ipString.charAt(i)[ FD ]
Line_3 $$ boolean hasColon = false-->Line_13 $$ hasColon = true[ FD ]
Line_4 $$ boolean hasDot = false-->Line_18 $$ if (hasColon) [ FD ]
Line_6 $$ char c = ipString.charAt(i)-->Line_7 $$ if (c == '.') [ FD ]
Line_8 $$ hasDot = true-->Line_18 $$ if (hasColon) [ FD ]
Line_20 $$ ipString = convertDottedQuadToHex(ipString)-->Line_27 $$ return textToNumericFormatV4(ipString)[ FD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_3 $$ boolean hasColon = false[ CD ]
Line_9 $$ if (c == ':') -->Line_13 $$ hasColon = true[ CD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_18 $$ if (hasColon) [ CD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_6 $$ char c = ipString.charAt(i)[ FD ]
Line_9 $$ if (c == ':') -->Line_14 $$ if (Character.digit(c, 16) == -1) [ CD ]
Line_19 $$ if (hasDot) -->Line_21 $$ if (ipString == null) [ CD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_29 $$ return null[ CD ]
Line_9 $$ if (c == ':') -->Line_10 $$ if (hasDot) [ CD ]
Line_18 $$ if (hasColon) -->Line_25 $$ return textToNumericFormatV6(ipString)[ CD ]
Line_19 $$ if (hasDot) -->Line_20 $$ ipString = convertDottedQuadToHex(ipString)[ CD ]
Line_4 $$ boolean hasDot = false-->Line_8 $$ hasDot = true[ FD ]
Line_7 $$ if (c == '.') -->Line_8 $$ hasDot = true[ CD ]
Line_26 $$ if (hasDot) -->Line_27 $$ return textToNumericFormatV4(ipString)[ CD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_20 $$ ipString = convertDottedQuadToHex(ipString)[ FD ]
Line_6 $$ char c = ipString.charAt(i)-->Line_9 $$ if (c == ':') [ FD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_25 $$ return textToNumericFormatV6(ipString)[ FD ]
Line_18 $$ if (hasColon) -->Line_26 $$ if (hasDot) [ CD ]
Line_14 $$ if (Character.digit(c, 16) == -1) -->Line_15 $$ return null[ CD ]
Line_18 $$ if (hasColon) -->Line_19 $$ if (hasDot) [ CD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_5 $$ for (int i = 0; i < ipString.length(); i++) [ FD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_5 $$ for (int i = 0; i < ipString.length(); i++) [ CD ]
Line_7 $$ if (c == '.') -->Line_9 $$ if (c == ':') [ CD ]
Line_5 $$ for (int i = 0; i < ipString.length(); i++) -->Line_6 $$ char c = ipString.charAt(i)[ CD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_21 $$ if (ipString == null) [ FD ]
Line_2 $$ private static byte[] ipStringToBytes(String ipString) -->Line_27 $$ return textToNumericFormatV4(ipString)[ FD ]
Line_10 $$ if (hasDot) -->Line_11 $$ return null[ CD ]
Line_6 $$ char c = ipString.charAt(i)-->Line_14 $$ if (Character.digit(c, 16) == -1) [ FD ]
Line_5 $$ for (int i = 0; i < ipString.length(); i++) -->Line_7 $$ if (c == '.') [ CD ]
