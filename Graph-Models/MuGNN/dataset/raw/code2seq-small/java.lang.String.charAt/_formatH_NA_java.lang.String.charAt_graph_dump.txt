Line_5 $$ char c = s.charAt(i)-->Line_6 $$ if (Character.isUpperCase(c)) [ FD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_5 $$ char c = s.charAt(i)[ CD ]
Line_6 $$ if (Character.isUpperCase(c)) -->Line_10 $$ sb.append(c)[ CD ]
Line_6 $$ if (Character.isUpperCase(c)) -->Line_7 $$ sb.append(CharPool.SPACE)[ CD ]
Line_2 $$ private static String _formatH(String s) -->Line_5 $$ char c = s.charAt(i)[ FD ]
Line_2 $$ private static String _formatH(String s) -->Line_3 $$ StringBuilder sb = new StringBuilder(s.length() * 2)[ FD ]
Line_5 $$ char c = s.charAt(i)-->Line_8 $$ sb.append(Character.toLowerCase(c))[ FD ]
Line_2 $$ private static String _formatH(String s) -->Line_13 $$ return sb.toString().trim()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() * 2)-->Line_8 $$ sb.append(Character.toLowerCase(c))[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() * 2)-->Line_13 $$ return sb.toString().trim()[ FD ]
Line_2 $$ private static String _formatH(String s) -->Line_4 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() * 2)-->Line_7 $$ sb.append(CharPool.SPACE)[ FD ]
Line_6 $$ if (Character.isUpperCase(c)) -->Line_8 $$ sb.append(Character.toLowerCase(c))[ CD ]
Line_2 $$ private static String _formatH(String s) -->Line_4 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(s.length() * 2)-->Line_10 $$ sb.append(c)[ FD ]
Line_2 $$ private static String _formatH(String s) -->Line_3 $$ StringBuilder sb = new StringBuilder(s.length() * 2)[ CD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_6 $$ if (Character.isUpperCase(c)) [ CD ]
Line_5 $$ char c = s.charAt(i)-->Line_10 $$ sb.append(c)[ FD ]
Line_4 $$ for (int i = 0; i < s.length(); i++) -->Line_5 $$ char c = s.charAt(i)[ FD ]
