Line_3 $$ String name = type.getName()-->Line_13 $$ if (name.equals("long")) [ FD ]
Line_20 $$ if (name.equals("float")) -->Line_21 $$ return "F"[ CD ]
Line_2 $$ public static String toDescriptor(Class<?> type) -->Line_4 $$ if (type.isPrimitive()) [ FD ]
Line_22 $$ if (name.equals("short")) -->Line_23 $$ return "S"[ CD ]
Line_27 $$ if (name.equals("double")) -->Line_28 $$ return "D"[ CD ]
Line_38 $$ if (name.charAt(0) != '[') -->Line_39 $$ return "L" + type.getName().replace('.', '/')[ CD ]
Line_3 $$ String name = type.getName()-->Line_42 $$ return name.substring(0, name.length() - 1).replace('.', '/')[ FD ]
Line_2 $$ public static String toDescriptor(Class<?> type) -->Line_48 $$ return null[ CD ]
Line_9 $$ if (name.equals("byte")) -->Line_10 $$ return "B"[ CD ]
Line_4 $$ if (type.isPrimitive()) -->Line_38 $$ if (name.charAt(0) != '[') [ CD ]
Line_2 $$ public static String toDescriptor(Class<?> type) -->Line_39 $$ return "L" + type.getName().replace('.', '/')[ FD ]
Line_13 $$ if (name.equals("long")) -->Line_15 $$ if (name.equals("void")) [ CD ]
Line_13 $$ if (name.equals("long")) -->Line_14 $$ return "J"[ CD ]
Line_15 $$ if (name.equals("void")) -->Line_16 $$ return "V"[ CD ]
Line_2 $$ public static String toDescriptor(Class<?> type) -->Line_4 $$ if (type.isPrimitive()) [ CD ]
Line_11 $$ if (name.equals("char")) -->Line_13 $$ if (name.equals("long")) [ CD ]
Line_3 $$ String name = type.getName()-->Line_22 $$ if (name.equals("short")) [ FD ]
Line_3 $$ String name = type.getName()-->Line_11 $$ if (name.equals("char")) [ FD ]
Line_11 $$ if (name.equals("char")) -->Line_12 $$ return "C"[ CD ]
Line_3 $$ String name = type.getName()-->Line_38 $$ if (name.charAt(0) != '[') [ FD ]
Line_20 $$ if (name.equals("float")) -->Line_22 $$ if (name.equals("short")) [ CD ]
Line_41 $$ if (name.endsWith(";")) -->Line_44 $$ return name[ CD ]
Line_9 $$ if (name.equals("byte")) -->Line_11 $$ if (name.equals("char")) [ CD ]
Line_3 $$ String name = type.getName()-->Line_15 $$ if (name.equals("void")) [ FD ]
Line_3 $$ String name = type.getName()-->Line_9 $$ if (name.equals("byte")) [ FD ]
Line_3 $$ String name = type.getName()-->Line_5 $$ switch(name.length()) [ FD ]
Line_3 $$ String name = type.getName()-->Line_27 $$ if (name.equals("double")) [ FD ]
Line_3 $$ String name = type.getName()-->Line_32 $$ if (name.equals("boolean")) [ FD ]
Line_32 $$ if (name.equals("boolean")) -->Line_33 $$ return "Z"[ CD ]
Line_41 $$ if (name.endsWith(";")) -->Line_42 $$ return name.substring(0, name.length() - 1).replace('.', '/')[ CD ]
Line_38 $$ if (name.charAt(0) != '[') -->Line_41 $$ if (name.endsWith(";")) [ CD ]
Line_2 $$ public static String toDescriptor(Class<?> type) -->Line_3 $$ String name = type.getName()[ FD ]
Line_2 $$ public static String toDescriptor(Class<?> type) -->Line_3 $$ String name = type.getName()[ CD ]
Line_3 $$ String name = type.getName()-->Line_41 $$ if (name.endsWith(";")) [ FD ]
Line_3 $$ String name = type.getName()-->Line_20 $$ if (name.equals("float")) [ FD ]
