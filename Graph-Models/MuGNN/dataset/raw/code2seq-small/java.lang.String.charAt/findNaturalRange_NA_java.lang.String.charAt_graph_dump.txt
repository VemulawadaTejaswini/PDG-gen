Line_3 $$ while (start > 0) -->Line_4 $$ if (!isNatural(editorText.charAt(start - 1))) [ CD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_9 $$ while (end < editorText.length()) [ CD ]
Line_3 $$ while (start > 0) -->Line_7 $$ start--[ CD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_4 $$ if (!isNatural(editorText.charAt(start - 1))) [ FD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_3 $$ while (start > 0) [ FD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_9 $$ while (end < editorText.length()) [ FD ]
Line_9 $$ while (end < editorText.length()) -->Line_11 $$ if (!isNatural(c)) [ CD ]
Line_9 $$ while (end < editorText.length()) -->Line_10 $$ final char c = editorText.charAt(end)[ CD ]
Line_9 $$ while (end < editorText.length()) -->Line_14 $$ end++[ CD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_16 $$ return new TextRange(start, end)[ CD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_7 $$ start--[ FD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_14 $$ end++[ FD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_3 $$ while (start > 0) [ CD ]
Line_2 $$ private static TextRange findNaturalRange(String editorText, int start, int end) -->Line_10 $$ final char c = editorText.charAt(end)[ FD ]
Line_10 $$ final char c = editorText.charAt(end)-->Line_11 $$ if (!isNatural(c)) [ FD ]
