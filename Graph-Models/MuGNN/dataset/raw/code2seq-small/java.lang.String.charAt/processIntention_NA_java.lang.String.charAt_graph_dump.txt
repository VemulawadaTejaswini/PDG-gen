Line_28 $$ final String newStatementText = "if(" + conditionText + ") " + lhsText + " = true; else " + lhsText + " = false;"-->Line_29 $$ PsiReplacementUtil.replaceStatement(statement, newStatementText)[ FD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_20 $$ final PsiJavaToken sign = assignmentExpression.getOperationSign()[ CD ]
Line_2 $$ public void processIntention(@NotNull PsiElement element) -->Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) [ CD ]
Line_23 $$ if (signText.length() == 2) -->Line_26 $$ conditionText = rhsText[ CD ]
Line_14 $$ final PsiExpression lhs = assignmentExpression.getLExpression()-->Line_19 $$ final String lhsText = lhs.getText()[ FD ]
Line_31 $$ final PsiReturnStatement returnStatement = (PsiReturnStatement) statement-->Line_32 $$ final PsiExpression returnValue = returnStatement.getReturnValue()[ FD ]
Line_10 $$ final PsiExpression rhs = assignmentExpression.getRExpression()-->Line_18 $$ final String rhsText = rhs.getText()[ FD ]
Line_21 $$ final String signText = sign.getText()-->Line_23 $$ if (signText.length() == 2) [ FD ]
Line_9 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) assignmentStatement.getExpression()-->Line_14 $$ final PsiExpression lhs = assignmentExpression.getLExpression()[ FD ]
Line_49 $$ final PsiExpression initializer = variable.getInitializer()-->Line_59 $$ initializer.delete()[ FD ]
Line_49 $$ final PsiExpression initializer = variable.getInitializer()-->Line_54 $$ final String newStatementText = "if(" + initializer.getText() + ") " + name + "=true; else " + name + "=false;"[ FD ]
Line_24 $$ conditionText = lhsText + signText.charAt(0) + rhsText-->Line_26 $$ conditionText = rhsText[ FD ]
Line_43 $$ final PsiDeclarationStatement declarationStatement = (PsiDeclarationStatement) statement-->Line_57 $$ final PsiElement newElement = declarationStatement.getParent().addAfter(newStatement, declarationStatement)[ FD ]
Line_49 $$ final PsiExpression initializer = variable.getInitializer()-->Line_50 $$ if (initializer == null) [ FD ]
Line_8 $$ final PsiExpressionStatement assignmentStatement = (PsiExpressionStatement) statement-->Line_9 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) assignmentStatement.getExpression()[ FD ]
Line_23 $$ if (signText.length() == 2) -->Line_24 $$ conditionText = lhsText + signText.charAt(0) + rhsText[ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_9 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) assignmentStatement.getExpression()[ CD ]
Line_32 $$ final PsiExpression returnValue = returnStatement.getReturnValue()-->Line_33 $$ if (returnValue == null) [ FD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_55 $$ final Project project = statement.getProject()[ CD ]
Line_20 $$ final PsiJavaToken sign = assignmentExpression.getOperationSign()-->Line_21 $$ final String signText = sign.getText()[ FD ]
Line_21 $$ final String signText = sign.getText()-->Line_24 $$ conditionText = lhsText + signText.charAt(0) + rhsText[ FD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_22 $$ final String conditionText[ CD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_58 $$ CodeStyleManager.getInstance(project).reformat(newElement)[ CD ]
Line_45 $$ if (!(declaredElement instanceof PsiLocalVariable)) -->Line_46 $$ return[ CD ]
Line_2 $$ public void processIntention(@NotNull PsiElement element) -->Line_6 $$ final PsiStatement statement = (PsiStatement) element[ CD ]
Line_2 $$ public void processIntention(@NotNull PsiElement element) -->Line_3 $$ if (!(element instanceof PsiStatement)) [ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_11 $$ if (rhs == null) [ CD ]
Line_6 $$ final PsiStatement statement = (PsiStatement) element-->Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) [ FD ]
Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) -->Line_33 $$ if (returnValue == null) [ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_15 $$ if (ErrorUtil.containsDeepError(lhs) || ErrorUtil.containsDeepError(rhs)) [ CD ]
Line_15 $$ if (ErrorUtil.containsDeepError(lhs) || ErrorUtil.containsDeepError(rhs)) -->Line_16 $$ return[ CD ]
Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) -->Line_31 $$ final PsiReturnStatement returnStatement = (PsiReturnStatement) statement[ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_28 $$ final String newStatementText = "if(" + conditionText + ") " + lhsText + " = true; else " + lhsText + " = false;"[ CD ]
Line_28 $$ final String newStatementText = "if(" + conditionText + ") " + lhsText + " = true; else " + lhsText + " = false;"-->Line_56 $$ final PsiStatement newStatement = JavaPsiFacade.getElementFactory(project).createStatementFromText(newStatementText, statement)[ FD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_53 $$ final String name = variable.getName()[ CD ]
Line_6 $$ final PsiStatement statement = (PsiStatement) element-->Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) [ FD ]
Line_22 $$ final String conditionText-->Line_26 $$ conditionText = rhsText[ FD ]
Line_22 $$ final String conditionText-->Line_24 $$ conditionText = lhsText + signText.charAt(0) + rhsText[ FD ]
Line_6 $$ final PsiStatement statement = (PsiStatement) element-->Line_41 $$ PsiReplacementUtil.replaceStatement(statement, newStatementText)[ FD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_18 $$ final String rhsText = rhs.getText()[ CD ]
Line_28 $$ final String newStatementText = "if(" + conditionText + ") " + lhsText + " = true; else " + lhsText + " = false;"-->Line_41 $$ PsiReplacementUtil.replaceStatement(statement, newStatementText)[ FD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_48 $$ final PsiLocalVariable variable = (PsiLocalVariable) declaredElement[ CD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_50 $$ if (initializer == null) [ CD ]
Line_55 $$ final Project project = statement.getProject()-->Line_58 $$ CodeStyleManager.getInstance(project).reformat(newElement)[ FD ]
Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) -->Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) [ CD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_43 $$ final PsiDeclarationStatement declarationStatement = (PsiDeclarationStatement) statement[ CD ]
Line_6 $$ final PsiStatement statement = (PsiStatement) element-->Line_29 $$ PsiReplacementUtil.replaceStatement(statement, newStatementText)[ FD ]
Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) -->Line_41 $$ PsiReplacementUtil.replaceStatement(statement, newStatementText)[ CD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_45 $$ if (!(declaredElement instanceof PsiLocalVariable)) [ CD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_57 $$ final PsiElement newElement = declarationStatement.getParent().addAfter(newStatement, declarationStatement)[ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_19 $$ final String lhsText = lhs.getText()[ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_21 $$ final String signText = sign.getText()[ CD ]
Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) -->Line_32 $$ final PsiExpression returnValue = returnStatement.getReturnValue()[ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_23 $$ if (signText.length() == 2) [ CD ]
Line_50 $$ if (initializer == null) -->Line_51 $$ return[ CD ]
Line_14 $$ final PsiExpression lhs = assignmentExpression.getLExpression()-->Line_15 $$ if (ErrorUtil.containsDeepError(lhs) || ErrorUtil.containsDeepError(rhs)) [ FD ]
Line_57 $$ final PsiElement newElement = declarationStatement.getParent().addAfter(newStatement, declarationStatement)-->Line_58 $$ CodeStyleManager.getInstance(project).reformat(newElement)[ FD ]
Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) -->Line_36 $$ if (ErrorUtil.containsDeepError(returnValue)) [ CD ]
Line_6 $$ final PsiStatement statement = (PsiStatement) element-->Line_56 $$ final PsiStatement newStatement = JavaPsiFacade.getElementFactory(project).createStatementFromText(newStatementText, statement)[ FD ]
Line_32 $$ final PsiExpression returnValue = returnStatement.getReturnValue()-->Line_39 $$ final String valueText = returnValue.getText()[ FD ]
Line_9 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) assignmentStatement.getExpression()-->Line_10 $$ final PsiExpression rhs = assignmentExpression.getRExpression()[ FD ]
Line_3 $$ if (!(element instanceof PsiStatement)) -->Line_4 $$ return[ CD ]
Line_18 $$ final String rhsText = rhs.getText()-->Line_26 $$ conditionText = rhsText[ FD ]
Line_11 $$ if (rhs == null) -->Line_12 $$ return[ CD ]
Line_10 $$ final PsiExpression rhs = assignmentExpression.getRExpression()-->Line_11 $$ if (rhs == null) [ FD ]
Line_33 $$ if (returnValue == null) -->Line_34 $$ return[ CD ]
Line_6 $$ final PsiStatement statement = (PsiStatement) element-->Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) [ FD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_10 $$ final PsiExpression rhs = assignmentExpression.getRExpression()[ CD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_56 $$ final PsiStatement newStatement = JavaPsiFacade.getElementFactory(project).createStatementFromText(newStatementText, statement)[ CD ]
Line_18 $$ final String rhsText = rhs.getText()-->Line_24 $$ conditionText = lhsText + signText.charAt(0) + rhsText[ FD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_44 $$ final PsiElement declaredElement = declarationStatement.getDeclaredElements()[0][ CD ]
Line_48 $$ final PsiLocalVariable variable = (PsiLocalVariable) declaredElement-->Line_49 $$ final PsiExpression initializer = variable.getInitializer()[ FD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_49 $$ final PsiExpression initializer = variable.getInitializer()[ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_29 $$ PsiReplacementUtil.replaceStatement(statement, newStatementText)[ CD ]
Line_42 $$ if (ExpandBooleanPredicate.isBooleanDeclaration(statement)) -->Line_59 $$ initializer.delete()[ CD ]
Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) -->Line_39 $$ final String valueText = returnValue.getText()[ CD ]
Line_10 $$ final PsiExpression rhs = assignmentExpression.getRExpression()-->Line_15 $$ if (ErrorUtil.containsDeepError(lhs) || ErrorUtil.containsDeepError(rhs)) [ FD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_30 $$ if (ExpandBooleanPredicate.isBooleanReturn(statement)) [ CD ]
Line_55 $$ final Project project = statement.getProject()-->Line_56 $$ final PsiStatement newStatement = JavaPsiFacade.getElementFactory(project).createStatementFromText(newStatementText, statement)[ FD ]
Line_6 $$ final PsiStatement statement = (PsiStatement) element-->Line_55 $$ final Project project = statement.getProject()[ FD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_8 $$ final PsiExpressionStatement assignmentStatement = (PsiExpressionStatement) statement[ CD ]
Line_32 $$ final PsiExpression returnValue = returnStatement.getReturnValue()-->Line_36 $$ if (ErrorUtil.containsDeepError(returnValue)) [ FD ]
Line_56 $$ final PsiStatement newStatement = JavaPsiFacade.getElementFactory(project).createStatementFromText(newStatementText, statement)-->Line_57 $$ final PsiElement newElement = declarationStatement.getParent().addAfter(newStatement, declarationStatement)[ FD ]
Line_9 $$ final PsiAssignmentExpression assignmentExpression = (PsiAssignmentExpression) assignmentStatement.getExpression()-->Line_20 $$ final PsiJavaToken sign = assignmentExpression.getOperationSign()[ FD ]
Line_43 $$ final PsiDeclarationStatement declarationStatement = (PsiDeclarationStatement) statement-->Line_44 $$ final PsiElement declaredElement = declarationStatement.getDeclaredElements()[0][ FD ]
Line_36 $$ if (ErrorUtil.containsDeepError(returnValue)) -->Line_37 $$ return[ CD ]
Line_7 $$ if (ExpandBooleanPredicate.isBooleanAssignment(statement)) -->Line_14 $$ final PsiExpression lhs = assignmentExpression.getLExpression()[ CD ]
Line_48 $$ final PsiLocalVariable variable = (PsiLocalVariable) declaredElement-->Line_53 $$ final String name = variable.getName()[ FD ]
