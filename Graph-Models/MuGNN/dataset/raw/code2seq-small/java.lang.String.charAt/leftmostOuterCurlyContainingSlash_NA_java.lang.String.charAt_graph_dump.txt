Line_22 $$ seenSlash = true-->Line_18 $$ if (--curlyOpen == 0 && leftmost != -1 && seenSlash) [ FD ]
Line_7 $$ char c = filePattern.charAt(i)-->Line_13 $$ if (c == '[ FD ]
Line_3 $$ int curlyOpen = 0-->Line_14 $$ if (curlyOpen++ == 0) [ FD ]
Line_6 $$ for (int i = offset; i < filePattern.length(); i++) -->Line_7 $$ char c = filePattern.charAt(i)[ FD ]
Line_7 $$ char c = filePattern.charAt(i)-->Line_8 $$ if (c == '\\') [ FD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_7 $$ char c = filePattern.charAt(i)[ FD ]
Line_8 $$ if (c == '\\') -->Line_9 $$ i++[ CD ]
Line_5 $$ boolean seenSlash = false-->Line_22 $$ seenSlash = true[ FD ]
Line_3 $$ int curlyOpen = 0-->Line_18 $$ if (--curlyOpen == 0 && leftmost != -1 && seenSlash) [ FD ]
Line_6 $$ for (int i = offset; i < filePattern.length(); i++) -->Line_15 $$ leftmost = i[ FD ]
Line_17 $$ if (c == '}' && curlyOpen > 0) -->Line_18 $$ if (--curlyOpen == 0 && leftmost != -1 && seenSlash) [ CD ]
Line_21 $$ if (c == '/' && curlyOpen > 0) -->Line_22 $$ seenSlash = true[ CD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_25 $$ return -1[ CD ]
Line_6 $$ for (int i = offset; i < filePattern.length(); i++) -->Line_10 $$ if (i >= filePattern.length()) [ FD ]
Line_13 $$ if (c == '-->Line_14 $$ if (curlyOpen++ == 0) [ CD ]
Line_4 $$ int leftmost = -1-->Line_15 $$ leftmost = i[ FD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_6 $$ for (int i = offset; i < filePattern.length(); i++) [ FD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_3 $$ int curlyOpen = 0[ CD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_5 $$ boolean seenSlash = false[ CD ]
Line_6 $$ for (int i = offset; i < filePattern.length(); i++) -->Line_7 $$ char c = filePattern.charAt(i)[ CD ]
Line_5 $$ boolean seenSlash = false-->Line_18 $$ if (--curlyOpen == 0 && leftmost != -1 && seenSlash) [ FD ]
Line_6 $$ for (int i = offset; i < filePattern.length(); i++) -->Line_9 $$ i++[ FD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_10 $$ if (i >= filePattern.length()) [ FD ]
Line_13 $$ if (c == '-->Line_17 $$ if (c == '}' && curlyOpen > 0) [ CD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_4 $$ int leftmost = -1[ CD ]
Line_2 $$ private static int leftmostOuterCurlyContainingSlash(String filePattern, int offset) throws IOException -->Line_6 $$ for (int i = offset; i < filePattern.length(); i++) [ CD ]
Line_18 $$ if (--curlyOpen == 0 && leftmost != -1 && seenSlash) -->Line_19 $$ return leftmost[ CD ]
Line_8 $$ if (c == '\\') -->Line_10 $$ if (i >= filePattern.length()) [ CD ]
Line_14 $$ if (curlyOpen++ == 0) -->Line_15 $$ leftmost = i[ CD ]
Line_17 $$ if (c == '}' && curlyOpen > 0) -->Line_21 $$ if (c == '/' && curlyOpen > 0) [ CD ]
Line_6 $$ for (int i = offset; i < filePattern.length(); i++) -->Line_8 $$ if (c == '\\') [ CD ]
Line_8 $$ if (c == '\\') -->Line_13 $$ if (c == '[ CD ]
