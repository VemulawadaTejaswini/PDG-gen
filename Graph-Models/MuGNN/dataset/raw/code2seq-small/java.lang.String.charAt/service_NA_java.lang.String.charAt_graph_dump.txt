Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_6 $$ request.setAttribute(WebKeys.FRIENDLY_URL, getFriendlyURL(pathInfo))[ FD ]
Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) -->Line_45 $$ if (forcePermanentRedirect) [ CD ]
Line_13 $$ if (request.getAttribute(WebKeys.LAST_PATH) == null) -->Line_16 $$ if (lifecycle.equals("1")) [ CD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_5 $$ String pathInfo = getPathInfo(request)[ CD ]
Line_45 $$ if (forcePermanentRedirect) -->Line_49 $$ response.sendRedirect(redirect)[ CD ]
Line_4 $$ String redirect = mainPath-->Line_32 $$ if (Validator.isNull(redirect)) [ FD ]
Line_32 $$ if (Validator.isNull(redirect)) -->Line_33 $$ redirect = mainPath[ CD ]
Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) -->Line_39 $$ ServletContext servletContext = getServletContext()[ CD ]
Line_11 $$ redirect = (String) redirectArray[0]-->Line_32 $$ if (Validator.isNull(redirect)) [ FD ]
Line_19 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo, request.getParameterMap())-->Line_21 $$ request.setAttribute(WebKeys.LAST_PATH, lastPath)[ FD ]
Line_13 $$ if (request.getAttribute(WebKeys.LAST_PATH) == null) -->Line_14 $$ LastPath lastPath = null[ CD ]
Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) -->Line_40 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ CD ]
Line_13 $$ if (request.getAttribute(WebKeys.LAST_PATH) == null) -->Line_15 $$ String lifecycle = ParamUtil.getString(request, "p_p_lifecycle")[ CD ]
Line_8 $$ boolean forcePermanentRedirect = false-->Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) [ FD ]
Line_5 $$ String pathInfo = getPathInfo(request)-->Line_6 $$ request.setAttribute(WebKeys.FRIENDLY_URL, getFriendlyURL(pathInfo))[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_19 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo, request.getParameterMap())[ FD ]
Line_15 $$ String lifecycle = ParamUtil.getString(request, "p_p_lifecycle")-->Line_16 $$ if (lifecycle.equals("1")) [ FD ]
Line_7 $$ Object[] redirectArray = null-->Line_10 $$ redirectArray = getRedirect(request, pathInfo, mainPath, request.getParameterMap())[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_46 $$ response.setHeader("Location", redirect)[ FD ]
Line_33 $$ redirect = mainPath-->Line_46 $$ response.setHeader("Location", redirect)[ FD ]
Line_12 $$ forcePermanentRedirect = (Boolean) redirectArray[1]-->Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) [ FD ]
Line_35 $$ if (_log.isDebugEnabled()) -->Line_36 $$ _log.debug("Redirect " + redirect)[ CD ]
Line_40 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)-->Line_41 $$ if (requestDispatcher != null) [ FD ]
Line_14 $$ LastPath lastPath = null-->Line_19 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo, request.getParameterMap())[ FD ]
Line_33 $$ redirect = mainPath-->Line_49 $$ response.sendRedirect(redirect)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_7 $$ Object[] redirectArray = null[ CD ]
Line_16 $$ if (lifecycle.equals("1")) -->Line_19 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo, request.getParameterMap())[ CD ]
Line_11 $$ redirect = (String) redirectArray[0]-->Line_49 $$ response.sendRedirect(redirect)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_42 $$ requestDispatcher.forward(request, response)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_49 $$ response.sendRedirect(redirect)[ FD ]
Line_5 $$ String pathInfo = getPathInfo(request)-->Line_10 $$ redirectArray = getRedirect(request, pathInfo, mainPath, request.getParameterMap())[ FD ]
Line_17 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo)-->Line_19 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo, request.getParameterMap())[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_15 $$ String lifecycle = ParamUtil.getString(request, "p_p_lifecycle")[ FD ]
Line_4 $$ String redirect = mainPath-->Line_33 $$ redirect = mainPath[ FD ]
Line_11 $$ redirect = (String) redirectArray[0]-->Line_33 $$ redirect = mainPath[ FD ]
Line_8 $$ boolean forcePermanentRedirect = false-->Line_12 $$ forcePermanentRedirect = (Boolean) redirectArray[1][ FD ]
Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) -->Line_41 $$ if (requestDispatcher != null) [ CD ]
Line_14 $$ LastPath lastPath = null-->Line_21 $$ request.setAttribute(WebKeys.LAST_PATH, lastPath)[ FD ]
Line_14 $$ LastPath lastPath = null-->Line_17 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo)[ FD ]
Line_45 $$ if (forcePermanentRedirect) -->Line_47 $$ response.setStatus(HttpServletResponse.SC_MOVED_PERMANENTLY)[ CD ]
Line_16 $$ if (lifecycle.equals("1")) -->Line_17 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo)[ CD ]
Line_17 $$ lastPath = new LastPath(_friendlyURLPathPrefix, pathInfo)-->Line_21 $$ request.setAttribute(WebKeys.LAST_PATH, lastPath)[ FD ]
Line_4 $$ String redirect = mainPath-->Line_46 $$ response.setHeader("Location", redirect)[ FD ]
Line_33 $$ redirect = mainPath-->Line_40 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_3 $$ String mainPath = Portal.PATH_MAIN[ CD ]
Line_39 $$ ServletContext servletContext = getServletContext()-->Line_40 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_4 $$ String redirect = mainPath-->Line_40 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_11 $$ redirect = (String) redirectArray[0]-->Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) [ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_8 $$ boolean forcePermanentRedirect = false[ CD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_10 $$ redirectArray = getRedirect(request, pathInfo, mainPath, request.getParameterMap())[ FD ]
Line_3 $$ String mainPath = Portal.PATH_MAIN-->Line_10 $$ redirectArray = getRedirect(request, pathInfo, mainPath, request.getParameterMap())[ FD ]
Line_24 $$ if (_log.isWarnEnabled()) -->Line_25 $$ _log.warn(e)[ CD ]
Line_11 $$ redirect = (String) redirectArray[0]-->Line_46 $$ response.setHeader("Location", redirect)[ FD ]
Line_41 $$ if (requestDispatcher != null) -->Line_42 $$ requestDispatcher.forward(request, response)[ CD ]
Line_27 $$ if ((e instanceof NoSuchGroupException) || (e instanceof NoSuchLayoutException)) -->Line_29 $$ return[ CD ]
Line_11 $$ redirect = (String) redirectArray[0]-->Line_40 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)[ FD ]
Line_4 $$ String redirect = mainPath-->Line_49 $$ response.sendRedirect(redirect)[ FD ]
Line_4 $$ String redirect = mainPath-->Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) [ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) [ CD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_13 $$ if (request.getAttribute(WebKeys.LAST_PATH) == null) [ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_21 $$ request.setAttribute(WebKeys.LAST_PATH, lastPath)[ FD ]
Line_27 $$ if ((e instanceof NoSuchGroupException) || (e instanceof NoSuchLayoutException)) -->Line_28 $$ PortalUtil.sendError(HttpServletResponse.SC_NOT_FOUND, e, request, response)[ CD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_28 $$ PortalUtil.sendError(HttpServletResponse.SC_NOT_FOUND, e, request, response)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_32 $$ if (Validator.isNull(redirect)) [ CD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_47 $$ response.setStatus(HttpServletResponse.SC_MOVED_PERMANENTLY)[ FD ]
Line_13 $$ if (request.getAttribute(WebKeys.LAST_PATH) == null) -->Line_21 $$ request.setAttribute(WebKeys.LAST_PATH, lastPath)[ CD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_5 $$ String pathInfo = getPathInfo(request)[ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_35 $$ if (_log.isDebugEnabled()) [ CD ]
Line_40 $$ RequestDispatcher requestDispatcher = servletContext.getRequestDispatcher(redirect)-->Line_42 $$ requestDispatcher.forward(request, response)[ FD ]
Line_3 $$ String mainPath = Portal.PATH_MAIN-->Line_33 $$ redirect = mainPath[ FD ]
Line_45 $$ if (forcePermanentRedirect) -->Line_46 $$ response.setHeader("Location", redirect)[ CD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_4 $$ String redirect = mainPath[ CD ]
Line_33 $$ redirect = mainPath-->Line_38 $$ if ((redirect.charAt(0) == CharPool.SLASH) && !forcePermanentRedirect) [ FD ]
Line_2 $$ public void service(HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException -->Line_6 $$ request.setAttribute(WebKeys.FRIENDLY_URL, getFriendlyURL(pathInfo))[ CD ]
Line_4 $$ String redirect = mainPath-->Line_11 $$ redirect = (String) redirectArray[0][ FD ]
