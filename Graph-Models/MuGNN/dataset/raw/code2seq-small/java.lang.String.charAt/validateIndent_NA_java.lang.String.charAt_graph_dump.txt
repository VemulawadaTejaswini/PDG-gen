Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_4 $$ String lastLineIndent = indent.substring(lastLF + 1)[ CD ]
Line_6 $$ int tabs = 0-->Line_13 $$ tabs++[ FD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_6 $$ int tabs = 0[ CD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_15 $$ final int problemStart = tokenStart + lastLF + 1[ CD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_3 $$ int lastLF = indent.lastIndexOf('\n')[ CD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_4 $$ String lastLineIndent = indent.substring(lastLF + 1)[ FD ]
Line_8 $$ for (int i = 0; i < length; i++) -->Line_10 $$ if (c == ' ')[ CD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_5 $$ int spaces = 0[ CD ]
Line_7 $$ final int length = lastLineIndent.length()-->Line_8 $$ for (int i = 0; i < length; i++) [ FD ]
Line_7 $$ final int length = lastLineIndent.length()-->Line_24 $$ reportProblem("Inconsistent indentation: previous line used spaces, this line uses tabs", problemStart, length)[ FD ]
Line_16 $$ if (spaces > 0 && tabs > 0) -->Line_17 $$ reportProblem("Inconsistent indentation: mix of tabs and spaces", problemStart, length)[ CD ]
Line_10 $$ if (c == ' ')-->Line_11 $$ spaces++[ CD ]
Line_8 $$ for (int i = 0; i < length; i++) -->Line_9 $$ final char c = lastLineIndent.charAt(i)[ FD ]
Line_7 $$ final int length = lastLineIndent.length()-->Line_22 $$ reportProblem("Inconsistent indentation: previous line used tabs, this line uses spaces", problemStart, length)[ FD ]
Line_4 $$ String lastLineIndent = indent.substring(lastLF + 1)-->Line_7 $$ final int length = lastLineIndent.length()[ FD ]
Line_15 $$ final int problemStart = tokenStart + lastLF + 1-->Line_17 $$ reportProblem("Inconsistent indentation: mix of tabs and spaces", problemStart, length)[ FD ]
Line_16 $$ if (spaces > 0 && tabs > 0) -->Line_21 $$ if (spaces > 0 && myLastTabs > 0) [ CD ]
Line_23 $$ if (tabs > 0 && myLastSpaces > 0) -->Line_24 $$ reportProblem("Inconsistent indentation: previous line used spaces, this line uses tabs", problemStart, length)[ CD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_16 $$ if (spaces > 0 && tabs > 0) [ CD ]
Line_15 $$ final int problemStart = tokenStart + lastLF + 1-->Line_24 $$ reportProblem("Inconsistent indentation: previous line used spaces, this line uses tabs", problemStart, length)[ FD ]
Line_21 $$ if (spaces > 0 && myLastTabs > 0) -->Line_23 $$ if (tabs > 0 && myLastSpaces > 0) [ CD ]
Line_8 $$ for (int i = 0; i < length; i++) -->Line_9 $$ final char c = lastLineIndent.charAt(i)[ CD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_7 $$ final int length = lastLineIndent.length()[ CD ]
Line_16 $$ if (spaces > 0 && tabs > 0) -->Line_26 $$ if (spaces > 0 || tabs > 0) [ CD ]
Line_10 $$ if (c == ' ')-->Line_12 $$ if (c == '\t')[ CD ]
Line_4 $$ String lastLineIndent = indent.substring(lastLF + 1)-->Line_9 $$ final char c = lastLineIndent.charAt(i)[ FD ]
Line_21 $$ if (spaces > 0 && myLastTabs > 0) -->Line_22 $$ reportProblem("Inconsistent indentation: previous line used tabs, this line uses spaces", problemStart, length)[ CD ]
Line_7 $$ final int length = lastLineIndent.length()-->Line_17 $$ reportProblem("Inconsistent indentation: mix of tabs and spaces", problemStart, length)[ FD ]
Line_9 $$ final char c = lastLineIndent.charAt(i)-->Line_12 $$ if (c == '\t')[ FD ]
Line_15 $$ final int problemStart = tokenStart + lastLF + 1-->Line_22 $$ reportProblem("Inconsistent indentation: previous line used tabs, this line uses spaces", problemStart, length)[ FD ]
Line_9 $$ final char c = lastLineIndent.charAt(i)-->Line_10 $$ if (c == ' ')[ FD ]
Line_5 $$ int spaces = 0-->Line_11 $$ spaces++[ FD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_8 $$ for (int i = 0; i < length; i++) [ CD ]
Line_12 $$ if (c == '\t')-->Line_13 $$ tabs++[ CD ]
Line_2 $$ private void validateIndent(final int tokenStart, String indent) -->Line_3 $$ int lastLF = indent.lastIndexOf('\n')[ FD ]
