Line_3 $$ s = StringUtil.replace(s, CharPool.DASH, CharPool.SPACE)-->Line_5 $$ StringBuilder sb = new StringBuilder(StringUtil.toLowerCase(s))[ FD ]
Line_4 $$ s = StringUtil.replace(s, CharPool.UNDERLINE, CharPool.SPACE)-->Line_8 $$ sb.setCharAt(i, Character.toUpperCase(s.charAt(i)))[ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_7 $$ if ((i == 0) || (s.charAt(i - 1) == ' ')) [ CD ]
Line_2 $$ private static String _formatJ(String s) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_4 $$ s = StringUtil.replace(s, CharPool.UNDERLINE, CharPool.SPACE)-->Line_5 $$ StringBuilder sb = new StringBuilder(StringUtil.toLowerCase(s))[ FD ]
Line_3 $$ s = StringUtil.replace(s, CharPool.DASH, CharPool.SPACE)-->Line_7 $$ if ((i == 0) || (s.charAt(i - 1) == ' ')) [ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_5 $$ StringBuilder sb = new StringBuilder(StringUtil.toLowerCase(s))[ FD ]
Line_6 $$ for (int i = 0; i < s.length(); i++) -->Line_8 $$ sb.setCharAt(i, Character.toUpperCase(s.charAt(i)))[ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_11 $$ return sb.toString()[ CD ]
Line_5 $$ StringBuilder sb = new StringBuilder(StringUtil.toLowerCase(s))-->Line_11 $$ return sb.toString()[ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_7 $$ if ((i == 0) || (s.charAt(i - 1) == ' ')) [ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_3 $$ s = StringUtil.replace(s, CharPool.DASH, CharPool.SPACE)[ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_6 $$ for (int i = 0; i < s.length(); i++) [ CD ]
Line_3 $$ s = StringUtil.replace(s, CharPool.DASH, CharPool.SPACE)-->Line_8 $$ sb.setCharAt(i, Character.toUpperCase(s.charAt(i)))[ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_4 $$ s = StringUtil.replace(s, CharPool.UNDERLINE, CharPool.SPACE)[ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_8 $$ sb.setCharAt(i, Character.toUpperCase(s.charAt(i)))[ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_4 $$ s = StringUtil.replace(s, CharPool.UNDERLINE, CharPool.SPACE)[ CD ]
Line_3 $$ s = StringUtil.replace(s, CharPool.DASH, CharPool.SPACE)-->Line_4 $$ s = StringUtil.replace(s, CharPool.UNDERLINE, CharPool.SPACE)[ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_3 $$ s = StringUtil.replace(s, CharPool.DASH, CharPool.SPACE)[ CD ]
Line_4 $$ s = StringUtil.replace(s, CharPool.UNDERLINE, CharPool.SPACE)-->Line_7 $$ if ((i == 0) || (s.charAt(i - 1) == ' ')) [ FD ]
Line_2 $$ private static String _formatJ(String s) -->Line_5 $$ StringBuilder sb = new StringBuilder(StringUtil.toLowerCase(s))[ CD ]
Line_3 $$ s = StringUtil.replace(s, CharPool.DASH, CharPool.SPACE)-->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_7 $$ if ((i == 0) || (s.charAt(i - 1) == ' ')) -->Line_8 $$ sb.setCharAt(i, Character.toUpperCase(s.charAt(i)))[ CD ]
Line_4 $$ s = StringUtil.replace(s, CharPool.UNDERLINE, CharPool.SPACE)-->Line_6 $$ for (int i = 0; i < s.length(); i++) [ FD ]
Line_5 $$ StringBuilder sb = new StringBuilder(StringUtil.toLowerCase(s))-->Line_8 $$ sb.setCharAt(i, Character.toUpperCase(s.charAt(i)))[ FD ]
