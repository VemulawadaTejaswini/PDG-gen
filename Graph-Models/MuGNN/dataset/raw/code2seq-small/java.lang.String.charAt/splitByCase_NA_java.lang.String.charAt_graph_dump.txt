Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_35 $$ add(text, result, i, s)[ FD ]
Line_17 $$ s = -1-->Line_32 $$ s = i - 1[ FD ]
Line_26 $$ s = i-->Line_29 $$ s = i[ FD ]
Line_17 $$ s = -1-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_30 $$ if (i - s >= 1 && type == Character.LOWERCASE_LETTER && prevType == Character.UPPERCASE_LETTER) -->Line_31 $$ add(text, result, i - 1, s)[ CD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_28 $$ add(text, result, i, s)[ FD ]
Line_15 $$ if (s >= 0) -->Line_16 $$ add(text, result, i, s)[ CD ]
Line_27 $$ if (s >= 0 && type == Character.UPPERCASE_LETTER && prevType == Character.LOWERCASE_LETTER) -->Line_29 $$ s = i[ CD ]
Line_17 $$ s = -1-->Line_25 $$ if (s < 0) [ FD ]
Line_5 $$ int s = -1-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_3 $$ List<TextRange> result = new ArrayList<TextRange>()-->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_36 $$ s = -1-->Line_34 $$ if (s >= 0) [ FD ]
Line_7 $$ while (i < range.getEndOffset()) -->Line_9 $$ if (ch >= '぀' && ch <= 'ゟ' || ch >= '゠' && ch <= 'ヿ' || ch >= '一' && ch <= '鿿' || ch >= '豈' && ch <= '﫿' || ch >= '＀' && ch <= '￯') [ CD ]
Line_23 $$ final int type = Character.getType(ch)-->Line_38 $$ prevType = type[ FD ]
Line_26 $$ s = i-->Line_36 $$ s = -1[ FD ]
Line_32 $$ s = i - 1-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_29 $$ s = i-->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_5 $$ int s = -1-->Line_41 $$ if (s >= 0) [ FD ]
Line_32 $$ s = i - 1-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_32 $$ s = i - 1[ FD ]
Line_26 $$ s = i-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_29 $$ s = i[ FD ]
Line_5 $$ int s = -1-->Line_34 $$ if (s >= 0) [ FD ]
Line_7 $$ while (i < range.getEndOffset()) -->Line_8 $$ final char ch = text.charAt(i)[ CD ]
Line_3 $$ List<TextRange> result = new ArrayList<TextRange>()-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_3 $$ List<TextRange> result = new ArrayList<TextRange>()-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_36 $$ s = -1-->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_44 $$ return result[ CD ]
Line_32 $$ s = i - 1-->Line_15 $$ if (s >= 0) [ FD ]
Line_32 $$ s = i - 1-->Line_34 $$ if (s >= 0) [ FD ]
Line_25 $$ if (s < 0) -->Line_26 $$ s = i[ CD ]
Line_17 $$ s = -1-->Line_26 $$ s = i[ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_32 $$ s = i - 1-->Line_36 $$ s = -1[ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_5 $$ int s = -1-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_29 $$ s = i-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_17 $$ s = -1-->Line_15 $$ if (s >= 0) [ FD ]
Line_29 $$ s = i-->Line_25 $$ if (s < 0) [ FD ]
Line_17 $$ s = -1-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_36 $$ s = -1-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_26 $$ s = i-->Line_25 $$ if (s < 0) [ FD ]
Line_26 $$ s = i-->Line_41 $$ if (s >= 0) [ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_26 $$ s = i[ FD ]
Line_32 $$ s = i - 1-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_41 $$ if (s >= 0) -->Line_42 $$ add(text, result, i, s)[ CD ]
Line_5 $$ int s = -1-->Line_17 $$ s = -1[ FD ]
Line_5 $$ int s = -1-->Line_25 $$ if (s < 0) [ FD ]
Line_3 $$ List<TextRange> result = new ArrayList<TextRange>()-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_5 $$ int s = -1-->Line_29 $$ s = i[ FD ]
Line_24 $$ if (type == Character.LOWERCASE_LETTER || type == Character.UPPERCASE_LETTER || type == Character.TITLECASE_LETTER || type == Character.OTHER_LETTER || type == Character.MODIFIER_LETTER || type == Character.OTHER_PUNCTUATION) -->Line_34 $$ if (s >= 0) [ CD ]
Line_29 $$ s = i-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_29 $$ s = i-->Line_34 $$ if (s >= 0) [ FD ]
Line_5 $$ int s = -1-->Line_32 $$ s = i - 1[ FD ]
Line_5 $$ int s = -1-->Line_26 $$ s = i[ FD ]
Line_17 $$ s = -1-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_36 $$ s = -1-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_19 $$ prevType = Character.MATH_SYMBOL-->Line_38 $$ prevType = type[ FD ]
Line_5 $$ int s = -1-->Line_36 $$ s = -1[ FD ]
Line_26 $$ s = i-->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_26 $$ s = i-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_29 $$ s = i-->Line_36 $$ s = -1[ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_16 $$ add(text, result, i, s)[ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_9 $$ if (ch >= '぀' && ch <= 'ゟ' || ch >= '゠' && ch <= 'ヿ' || ch >= '一' && ch <= '鿿' || ch >= '豈' && ch <= '﫿' || ch >= '＀' && ch <= '￯') -->Line_20 $$ ++i[ CD ]
Line_4 $$ int i = range.getStartOffset()-->Line_39 $$ i++[ FD ]
Line_29 $$ s = i-->Line_32 $$ s = i - 1[ FD ]
Line_5 $$ int s = -1-->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_5 $$ int s = -1[ CD ]
Line_36 $$ s = -1-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_29 $$ s = i-->Line_15 $$ if (s >= 0) [ FD ]
Line_26 $$ s = i-->Line_34 $$ if (s >= 0) [ FD ]
Line_36 $$ s = -1-->Line_15 $$ if (s >= 0) [ FD ]
Line_26 $$ s = i-->Line_32 $$ s = i - 1[ FD ]
Line_26 $$ s = i-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_5 $$ int s = -1-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_3 $$ List<TextRange> result = new ArrayList<TextRange>()-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_27 $$ if (s >= 0 && type == Character.UPPERCASE_LETTER && prevType == Character.LOWERCASE_LETTER) -->Line_30 $$ if (i - s >= 1 && type == Character.LOWERCASE_LETTER && prevType == Character.UPPERCASE_LETTER) [ CD ]
Line_9 $$ if (ch >= '぀' && ch <= 'ゟ' || ch >= '゠' && ch <= 'ヿ' || ch >= '一' && ch <= '鿿' || ch >= '豈' && ch <= '﫿' || ch >= '＀' && ch <= '￯') -->Line_15 $$ if (s >= 0) [ CD ]
Line_4 $$ int i = range.getStartOffset()-->Line_7 $$ while (i < range.getEndOffset()) [ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_8 $$ final char ch = text.charAt(i)[ FD ]
Line_7 $$ while (i < range.getEndOffset()) -->Line_23 $$ final int type = Character.getType(ch)[ CD ]
Line_36 $$ s = -1-->Line_25 $$ if (s < 0) [ FD ]
Line_34 $$ if (s >= 0) -->Line_35 $$ add(text, result, i, s)[ CD ]
Line_30 $$ if (i - s >= 1 && type == Character.LOWERCASE_LETTER && prevType == Character.UPPERCASE_LETTER) -->Line_32 $$ s = i - 1[ CD ]
Line_25 $$ if (s < 0) -->Line_27 $$ if (s >= 0 && type == Character.UPPERCASE_LETTER && prevType == Character.LOWERCASE_LETTER) [ CD ]
Line_17 $$ s = -1-->Line_34 $$ if (s >= 0) [ FD ]
Line_17 $$ s = -1-->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_4 $$ int i = range.getStartOffset()-->Line_20 $$ ++i[ FD ]
Line_7 $$ while (i < range.getEndOffset()) -->Line_39 $$ i++[ CD ]
Line_32 $$ s = i - 1-->Line_41 $$ if (s >= 0) [ FD ]
Line_7 $$ while (i < range.getEndOffset()) -->Line_24 $$ if (type == Character.LOWERCASE_LETTER || type == Character.UPPERCASE_LETTER || type == Character.TITLECASE_LETTER || type == Character.OTHER_LETTER || type == Character.MODIFIER_LETTER || type == Character.OTHER_PUNCTUATION) [ CD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_6 $$ int prevType = Character.MATH_SYMBOL[ CD ]
Line_26 $$ s = i-->Line_16 $$ add(text, result, i, s)[ FD ]
Line_27 $$ if (s >= 0 && type == Character.UPPERCASE_LETTER && prevType == Character.LOWERCASE_LETTER) -->Line_28 $$ add(text, result, i, s)[ CD ]
Line_15 $$ if (s >= 0) -->Line_17 $$ s = -1[ CD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_4 $$ int i = range.getStartOffset()[ CD ]
Line_36 $$ s = -1-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_9 $$ if (ch >= '぀' && ch <= 'ゟ' || ch >= '゠' && ch <= 'ヿ' || ch >= '一' && ch <= '鿿' || ch >= '豈' && ch <= '﫿' || ch >= '＀' && ch <= '￯') -->Line_19 $$ prevType = Character.MATH_SYMBOL[ CD ]
Line_32 $$ s = i - 1-->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_31 $$ add(text, result, i - 1, s)[ FD ]
Line_26 $$ s = i-->Line_15 $$ if (s >= 0) [ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_4 $$ int i = range.getStartOffset()[ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_41 $$ if (s >= 0) [ CD ]
Line_36 $$ s = -1-->Line_41 $$ if (s >= 0) [ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_8 $$ final char ch = text.charAt(i)[ FD ]
Line_7 $$ while (i < range.getEndOffset()) -->Line_38 $$ prevType = type[ CD ]
Line_6 $$ int prevType = Character.MATH_SYMBOL-->Line_38 $$ prevType = type[ FD ]
Line_34 $$ if (s >= 0) -->Line_36 $$ s = -1[ CD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_7 $$ while (i < range.getEndOffset()) [ CD ]
Line_32 $$ s = i - 1-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_17 $$ s = -1-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_29 $$ s = i-->Line_28 $$ add(text, result, i, s)[ FD ]
Line_17 $$ s = -1-->Line_41 $$ if (s >= 0) [ FD ]
Line_24 $$ if (type == Character.LOWERCASE_LETTER || type == Character.UPPERCASE_LETTER || type == Character.TITLECASE_LETTER || type == Character.OTHER_LETTER || type == Character.MODIFIER_LETTER || type == Character.OTHER_PUNCTUATION) -->Line_25 $$ if (s < 0) [ CD ]
Line_29 $$ s = i-->Line_41 $$ if (s >= 0) [ FD ]
Line_6 $$ int prevType = Character.MATH_SYMBOL-->Line_19 $$ prevType = Character.MATH_SYMBOL[ FD ]
Line_17 $$ s = -1-->Line_29 $$ s = i[ FD ]
Line_8 $$ final char ch = text.charAt(i)-->Line_23 $$ final int type = Character.getType(ch)[ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_42 $$ add(text, result, i, s)[ FD ]
Line_32 $$ s = i - 1-->Line_25 $$ if (s < 0) [ FD ]
Line_17 $$ s = -1-->Line_36 $$ s = -1[ FD ]
Line_5 $$ int s = -1-->Line_15 $$ if (s >= 0) [ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_7 $$ while (i < range.getEndOffset()) [ FD ]
Line_5 $$ int s = -1-->Line_35 $$ add(text, result, i, s)[ FD ]
Line_29 $$ s = i-->Line_42 $$ add(text, result, i, s)[ FD ]
Line_2 $$ private static List<TextRange> splitByCase(@NotNull String text, @NotNull TextRange range) -->Line_3 $$ List<TextRange> result = new ArrayList<TextRange>()[ CD ]
