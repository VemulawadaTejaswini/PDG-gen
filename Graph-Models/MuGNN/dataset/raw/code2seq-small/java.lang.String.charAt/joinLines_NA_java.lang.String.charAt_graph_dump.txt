Line_3 $$ while (true) -->Line_14 $$ if (addSpace) [ CD ]
Line_2 $$ private static String joinLines(String s, boolean addSpace) -->Line_18 $$ s = s.substring(0, lineBreakStart) + s.substring(lineBreakEnd)[ FD ]
Line_7 $$ int lineBreakEnd = lineBreakStart + 1-->Line_12 $$ lineBreakEnd++[ FD ]
Line_9 $$ while (lineBreakEnd < s.length() && (s.charAt(lineBreakEnd) == ' ' || s.charAt(lineBreakEnd) == '\n')) -->Line_12 $$ lineBreakEnd++[ CD ]
Line_18 $$ s = s.substring(0, lineBreakStart) + s.substring(lineBreakEnd)-->Line_16 $$ s = s.substring(0, lineBreakStart) + separator + s.substring(lineBreakEnd)[ FD ]
Line_3 $$ while (true) -->Line_9 $$ while (lineBreakEnd < s.length() && (s.charAt(lineBreakEnd) == ' ' || s.charAt(lineBreakEnd) == '\n')) [ CD ]
Line_2 $$ private static String joinLines(String s, boolean addSpace) -->Line_9 $$ while (lineBreakEnd < s.length() && (s.charAt(lineBreakEnd) == ' ' || s.charAt(lineBreakEnd) == '\n')) [ FD ]
Line_2 $$ private static String joinLines(String s, boolean addSpace) -->Line_3 $$ while (true) [ CD ]
Line_2 $$ private static String joinLines(String s, boolean addSpace) -->Line_4 $$ int lineBreakStart = s.indexOf('\n')[ FD ]
Line_10 $$ if (s.charAt(lineBreakEnd) == '\n')-->Line_11 $$ blankLines++[ CD ]
Line_4 $$ int lineBreakStart = s.indexOf('\n')-->Line_18 $$ s = s.substring(0, lineBreakStart) + s.substring(lineBreakEnd)[ FD ]
Line_2 $$ private static String joinLines(String s, boolean addSpace) -->Line_16 $$ s = s.substring(0, lineBreakStart) + separator + s.substring(lineBreakEnd)[ FD ]
Line_4 $$ int lineBreakStart = s.indexOf('\n')-->Line_16 $$ s = s.substring(0, lineBreakStart) + separator + s.substring(lineBreakEnd)[ FD ]
Line_7 $$ int lineBreakEnd = lineBreakStart + 1-->Line_10 $$ if (s.charAt(lineBreakEnd) == '\n')[ FD ]
Line_4 $$ int lineBreakStart = s.indexOf('\n')-->Line_5 $$ if (lineBreakStart < 0)[ FD ]
Line_14 $$ if (addSpace) -->Line_16 $$ s = s.substring(0, lineBreakStart) + separator + s.substring(lineBreakEnd)[ CD ]
Line_7 $$ int lineBreakEnd = lineBreakStart + 1-->Line_18 $$ s = s.substring(0, lineBreakStart) + s.substring(lineBreakEnd)[ FD ]
Line_16 $$ s = s.substring(0, lineBreakStart) + separator + s.substring(lineBreakEnd)-->Line_4 $$ int lineBreakStart = s.indexOf('\n')[ FD ]
Line_9 $$ while (lineBreakEnd < s.length() && (s.charAt(lineBreakEnd) == ' ' || s.charAt(lineBreakEnd) == '\n')) -->Line_10 $$ if (s.charAt(lineBreakEnd) == '\n')[ CD ]
Line_8 $$ int blankLines = 0-->Line_11 $$ blankLines++[ FD ]
Line_3 $$ while (true) -->Line_5 $$ if (lineBreakStart < 0)[ CD ]
Line_2 $$ private static String joinLines(String s, boolean addSpace) -->Line_21 $$ return s[ CD ]
Line_2 $$ private static String joinLines(String s, boolean addSpace) -->Line_10 $$ if (s.charAt(lineBreakEnd) == '\n')[ FD ]
Line_7 $$ int lineBreakEnd = lineBreakStart + 1-->Line_16 $$ s = s.substring(0, lineBreakStart) + separator + s.substring(lineBreakEnd)[ FD ]
Line_7 $$ int lineBreakEnd = lineBreakStart + 1-->Line_9 $$ while (lineBreakEnd < s.length() && (s.charAt(lineBreakEnd) == ' ' || s.charAt(lineBreakEnd) == '\n')) [ FD ]
Line_18 $$ s = s.substring(0, lineBreakStart) + s.substring(lineBreakEnd)-->Line_4 $$ int lineBreakStart = s.indexOf('\n')[ FD ]
Line_3 $$ while (true) -->Line_7 $$ int lineBreakEnd = lineBreakStart + 1[ CD ]
Line_3 $$ while (true) -->Line_4 $$ int lineBreakStart = s.indexOf('\n')[ CD ]
Line_3 $$ while (true) -->Line_8 $$ int blankLines = 0[ CD ]
Line_16 $$ s = s.substring(0, lineBreakStart) + separator + s.substring(lineBreakEnd)-->Line_18 $$ s = s.substring(0, lineBreakStart) + s.substring(lineBreakEnd)[ FD ]
Line_14 $$ if (addSpace) -->Line_18 $$ s = s.substring(0, lineBreakStart) + s.substring(lineBreakEnd)[ CD ]
