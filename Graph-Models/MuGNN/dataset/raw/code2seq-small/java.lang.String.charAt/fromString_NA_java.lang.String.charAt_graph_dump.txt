Line_2 $$ public static TypePath fromString(final String typePath) -->Line_3 $$ if (typePath == null || typePath.length() == 0) [ CD ]
Line_9 $$ for (int i = 0; i < n; ) -->Line_10 $$ char c = typePath.charAt(i++)[ CD ]
Line_7 $$ ByteVector out = new ByteVector(n)-->Line_14 $$ out.put11(INNER_TYPE, 0)[ FD ]
Line_24 $$ i += 1-->Line_9 $$ for (int i = 0; i < n; ) [ FD ]
Line_7 $$ ByteVector out = new ByteVector(n)-->Line_12 $$ out.put11(ARRAY_ELEMENT, 0)[ FD ]
Line_10 $$ char c = typePath.charAt(i++)-->Line_19 $$ while (i < n && (c = typePath.charAt(i)) >= '0' && c <= '9') [ FD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_7 $$ ByteVector out = new ByteVector(n)[ CD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_29 $$ out.data[0] = (byte) (out.length / 2)[ CD ]
Line_11 $$ if (c == '[') -->Line_12 $$ out.put11(ARRAY_ELEMENT, 0)[ CD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_30 $$ return new TypePath(out.data, 0)[ CD ]
Line_3 $$ if (typePath == null || typePath.length() == 0) -->Line_4 $$ return null[ CD ]
Line_10 $$ char c = typePath.charAt(i++)-->Line_11 $$ if (c == '[') [ FD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_19 $$ while (i < n && (c = typePath.charAt(i)) >= '0' && c <= '9') [ FD ]
Line_24 $$ i += 1-->Line_23 $$ if (i < n && typePath.charAt(i) == ';') [ FD ]
Line_15 $$ if (c == '*') -->Line_16 $$ out.put11(WILDCARD_BOUND, 0)[ CD ]
Line_10 $$ char c = typePath.charAt(i++)-->Line_13 $$ if (c == '.') [ FD ]
Line_9 $$ for (int i = 0; i < n; ) -->Line_10 $$ char c = typePath.charAt(i++)[ FD ]
Line_7 $$ ByteVector out = new ByteVector(n)-->Line_16 $$ out.put11(WILDCARD_BOUND, 0)[ FD ]
Line_6 $$ int n = typePath.length()-->Line_9 $$ for (int i = 0; i < n; ) [ FD ]
Line_19 $$ while (i < n && (c = typePath.charAt(i)) >= '0' && c <= '9') -->Line_20 $$ typeArg = typeArg * 10 + c - '0'[ CD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_6 $$ int n = typePath.length()[ FD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_10 $$ char c = typePath.charAt(i++)[ FD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_8 $$ out.putByte(0)[ CD ]
Line_9 $$ for (int i = 0; i < n; ) -->Line_21 $$ i += 1[ FD ]
Line_10 $$ char c = typePath.charAt(i++)-->Line_15 $$ if (c == '*') [ FD ]
Line_21 $$ i += 1-->Line_23 $$ if (i < n && typePath.charAt(i) == ';') [ FD ]
Line_17 $$ if (c >= '0' && c <= '9') -->Line_18 $$ int typeArg = c - '0'[ CD ]
Line_23 $$ if (i < n && typePath.charAt(i) == ';') -->Line_24 $$ i += 1[ CD ]
Line_21 $$ i += 1-->Line_24 $$ i += 1[ FD ]
Line_18 $$ int typeArg = c - '0'-->Line_26 $$ out.put11(TYPE_ARGUMENT, typeArg)[ FD ]
Line_7 $$ ByteVector out = new ByteVector(n)-->Line_8 $$ out.putByte(0)[ FD ]
Line_17 $$ if (c >= '0' && c <= '9') -->Line_23 $$ if (i < n && typePath.charAt(i) == ';') [ CD ]
Line_17 $$ if (c >= '0' && c <= '9') -->Line_26 $$ out.put11(TYPE_ARGUMENT, typeArg)[ CD ]
Line_21 $$ i += 1-->Line_19 $$ while (i < n && (c = typePath.charAt(i)) >= '0' && c <= '9') [ FD ]
Line_9 $$ for (int i = 0; i < n; ) -->Line_11 $$ if (c == '[') [ CD ]
Line_9 $$ for (int i = 0; i < n; ) -->Line_19 $$ while (i < n && (c = typePath.charAt(i)) >= '0' && c <= '9') [ FD ]
Line_9 $$ for (int i = 0; i < n; ) -->Line_24 $$ i += 1[ FD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_3 $$ if (typePath == null || typePath.length() == 0) [ FD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_9 $$ for (int i = 0; i < n; ) [ CD ]
Line_7 $$ ByteVector out = new ByteVector(n)-->Line_26 $$ out.put11(TYPE_ARGUMENT, typeArg)[ FD ]
Line_13 $$ if (c == '.') -->Line_15 $$ if (c == '*') [ CD ]
Line_24 $$ i += 1-->Line_10 $$ char c = typePath.charAt(i++)[ FD ]
Line_19 $$ while (i < n && (c = typePath.charAt(i)) >= '0' && c <= '9') -->Line_21 $$ i += 1[ CD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_6 $$ int n = typePath.length()[ CD ]
Line_2 $$ public static TypePath fromString(final String typePath) -->Line_23 $$ if (i < n && typePath.charAt(i) == ';') [ FD ]
Line_17 $$ if (c >= '0' && c <= '9') -->Line_19 $$ while (i < n && (c = typePath.charAt(i)) >= '0' && c <= '9') [ CD ]
Line_13 $$ if (c == '.') -->Line_14 $$ out.put11(INNER_TYPE, 0)[ CD ]
Line_11 $$ if (c == '[') -->Line_13 $$ if (c == '.') [ CD ]
Line_9 $$ for (int i = 0; i < n; ) -->Line_23 $$ if (i < n && typePath.charAt(i) == ';') [ FD ]
Line_15 $$ if (c == '*') -->Line_17 $$ if (c >= '0' && c <= '9') [ CD ]
Line_18 $$ int typeArg = c - '0'-->Line_20 $$ typeArg = typeArg * 10 + c - '0'[ FD ]
Line_20 $$ typeArg = typeArg * 10 + c - '0'-->Line_26 $$ out.put11(TYPE_ARGUMENT, typeArg)[ FD ]
