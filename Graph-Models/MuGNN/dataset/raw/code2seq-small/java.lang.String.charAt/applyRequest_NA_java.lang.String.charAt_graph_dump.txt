Line_68 $$ if (mappings.isEmpty()) -->Line_69 $$ return currentState[ CD ]
Line_36 $$ final Map<String, MappingMetaData> mappings = new HashMap()-->Line_52 $$ mappings.put(index, new MappingMetaData(mergedMapper))[ FD ]
Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)-->Line_27 $$ mappingType = newMapper.type()[ FD ]
Line_5 $$ for (String index : request.indices()) -->Line_56 $$ logger.info("[[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_36 $$ final Map<String, MappingMetaData> mappings = new HashMap()[ CD ]
Line_9 $$ if (MapperService.DEFAULT_MAPPING.equals(request.type())) -->Line_13 $$ if (existingMapper != null) [ CD ]
Line_3 $$ String mappingType = request.type()-->Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_4 $$ CompressedXContent mappingUpdateSource = new CompressedXContent(request.source())[ CD ]
Line_8 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(request.type())-->Line_13 $$ if (existingMapper != null) [ FD ]
Line_77 $$ MappingMetaData mappingMd = mappings.get(indexName)-->Line_79 $$ builder.put(IndexMetaData.builder(indexMetaData).putMapping(mappingMd))[ FD ]
Line_26 $$ if (mappingType == null) -->Line_27 $$ mappingType = newMapper.type()[ CD ]
Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)-->Line_28 $$ if (mappingType.equals(newMapper.type()) == false) [ FD ]
Line_3 $$ String mappingType = request.type()-->Line_33 $$ if (!MapperService.DEFAULT_MAPPING.equals(mappingType) && !PercolatorService.TYPE_NAME.equals(mappingType) && mappingType.charAt(0) == '_') [ FD ]
Line_7 $$ DocumentMapper newMapper-->Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)[ FD ]
Line_45 $$ existingSource = existingMapper.mappingSource()-->Line_49 $$ if (existingSource != null) [ FD ]
Line_48 $$ CompressedXContent updatedSource = mergedMapper.mappingSource()-->Line_50 $$ if (existingSource.equals(updatedSource)) [ FD ]
Line_5 $$ for (String index : request.indices()) -->Line_17 $$ IndexMetaData indexMetaData = currentState.metaData().index(index)[ FD ]
Line_8 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(request.type())-->Line_14 $$ existingMapper.merge(newMapper.mapping(), request.updateAllTypes())[ FD ]
Line_45 $$ existingSource = existingMapper.mappingSource()-->Line_50 $$ if (existingSource.equals(updatedSource)) [ FD ]
Line_53 $$ if (logger.isDebugEnabled()) -->Line_54 $$ logger.debug("[[ CD ]
Line_3 $$ String mappingType = request.type()-->Line_43 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(mappingType)[ FD ]
Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)-->Line_27 $$ mappingType = newMapper.type()[ FD ]
Line_36 $$ final Map<String, MappingMetaData> mappings = new HashMap()-->Line_60 $$ mappings.put(index, new MappingMetaData(mergedMapper))[ FD ]
Line_3 $$ String mappingType = request.type()-->Line_62 $$ logger.debug("[[ FD ]
Line_71 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData())-->Line_82 $$ return ClusterState.builder(currentState).metaData(builder).build()[ FD ]
Line_3 $$ String mappingType = request.type()-->Line_28 $$ if (mappingType.equals(newMapper.type()) == false) [ FD ]
Line_17 $$ IndexMetaData indexMetaData = currentState.metaData().index(index)-->Line_18 $$ for (ObjectCursor<MappingMetaData> mapping : indexMetaData.getMappings().values()) [ FD ]
Line_26 $$ if (mappingType == null) -->Line_28 $$ if (mappingType.equals(newMapper.type()) == false) [ CD ]
Line_8 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(request.type())-->Line_45 $$ existingSource = existingMapper.mappingSource()[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_33 $$ if (!MapperService.DEFAULT_MAPPING.equals(mappingType) && !PercolatorService.TYPE_NAME.equals(mappingType) && mappingType.charAt(0) == '_') [ CD ]
Line_42 $$ CompressedXContent existingSource = null-->Line_45 $$ existingSource = existingMapper.mappingSource()[ FD ]
Line_7 $$ DocumentMapper newMapper-->Line_16 $$ if (newMapper.parentFieldMapper().active()) [ FD ]
Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())-->Line_54 $$ logger.debug("[[ FD ]
Line_48 $$ CompressedXContent updatedSource = mergedMapper.mappingSource()-->Line_62 $$ logger.debug("[[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_82 $$ return ClusterState.builder(currentState).metaData(builder).build()[ CD ]
Line_5 $$ for (String index : request.indices()) -->Line_60 $$ mappings.put(index, new MappingMetaData(mergedMapper))[ FD ]
Line_48 $$ CompressedXContent updatedSource = mergedMapper.mappingSource()-->Line_54 $$ logger.debug("[[ FD ]
Line_16 $$ if (newMapper.parentFieldMapper().active()) -->Line_17 $$ IndexMetaData indexMetaData = currentState.metaData().index(index)[ CD ]
Line_50 $$ if (existingSource.equals(updatedSource)) -->Line_53 $$ if (logger.isDebugEnabled()) [ CD ]
Line_7 $$ DocumentMapper newMapper-->Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)[ FD ]
Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)-->Line_16 $$ if (newMapper.parentFieldMapper().active()) [ FD ]
Line_49 $$ if (existingSource != null) -->Line_60 $$ mappings.put(index, new MappingMetaData(mergedMapper))[ CD ]
Line_3 $$ String mappingType = request.type()-->Line_27 $$ mappingType = newMapper.type()[ FD ]
Line_27 $$ mappingType = newMapper.type()-->Line_43 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(mappingType)[ FD ]
Line_6 $$ IndexService indexService = indicesService.indexServiceSafe(index)-->Line_39 $$ if (indexService == null) [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_3 $$ String mappingType = request.type()[ CD ]
Line_4 $$ CompressedXContent mappingUpdateSource = new CompressedXContent(request.source())-->Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)[ FD ]
Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())-->Line_48 $$ CompressedXContent updatedSource = mergedMapper.mappingSource()[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_5 $$ for (String index : request.indices()) [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_9 $$ if (MapperService.DEFAULT_MAPPING.equals(request.type())) [ FD ]
Line_63 $$ if (logger.isInfoEnabled()) -->Line_64 $$ logger.info("[[ CD ]
Line_77 $$ MappingMetaData mappingMd = mappings.get(indexName)-->Line_78 $$ if (mappingMd != null) [ FD ]
Line_5 $$ for (String index : request.indices()) -->Line_62 $$ logger.debug("[[ FD ]
Line_6 $$ IndexService indexService = indicesService.indexServiceSafe(index)-->Line_8 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(request.type())[ FD ]
Line_27 $$ mappingType = newMapper.type()-->Line_28 $$ if (mappingType.equals(newMapper.type()) == false) [ FD ]
Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)-->Line_16 $$ if (newMapper.parentFieldMapper().active()) [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_17 $$ IndexMetaData indexMetaData = currentState.metaData().index(index)[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())[ FD ]
Line_27 $$ mappingType = newMapper.type()-->Line_64 $$ logger.info("[[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)[ FD ]
Line_72 $$ for (String indexName : request.indices()) -->Line_77 $$ MappingMetaData mappingMd = mappings.get(indexName)[ FD ]
Line_3 $$ String mappingType = request.type()-->Line_26 $$ if (mappingType == null) [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_72 $$ for (String indexName : request.indices()) [ FD ]
Line_7 $$ DocumentMapper newMapper-->Line_28 $$ if (mappingType.equals(newMapper.type()) == false) [ FD ]
Line_17 $$ IndexMetaData indexMetaData = currentState.metaData().index(index)-->Line_79 $$ builder.put(IndexMetaData.builder(indexMetaData).putMapping(mappingMd))[ FD ]
Line_6 $$ IndexService indexService = indicesService.indexServiceSafe(index)-->Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)[ FD ]
Line_55 $$ if (logger.isInfoEnabled()) -->Line_56 $$ logger.info("[[ CD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_4 $$ CompressedXContent mappingUpdateSource = new CompressedXContent(request.source())[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_8 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(request.type())[ FD ]
Line_27 $$ mappingType = newMapper.type()-->Line_62 $$ logger.debug("[[ FD ]
Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)-->Line_19 $$ if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) [ FD ]
Line_9 $$ if (MapperService.DEFAULT_MAPPING.equals(request.type())) -->Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)[ CD ]
Line_42 $$ CompressedXContent existingSource = null-->Line_49 $$ if (existingSource != null) [ FD ]
Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)-->Line_14 $$ existingMapper.merge(newMapper.mapping(), request.updateAllTypes())[ FD ]
Line_7 $$ DocumentMapper newMapper-->Line_14 $$ existingMapper.merge(newMapper.mapping(), request.updateAllTypes())[ FD ]
Line_5 $$ for (String index : request.indices()) -->Line_64 $$ logger.info("[[ FD ]
Line_78 $$ if (mappingMd != null) -->Line_79 $$ builder.put(IndexMetaData.builder(indexMetaData).putMapping(mappingMd))[ CD ]
Line_5 $$ for (String index : request.indices()) -->Line_6 $$ IndexService indexService = indicesService.indexServiceSafe(index)[ FD ]
Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())-->Line_56 $$ logger.info("[[ FD ]
Line_5 $$ for (String index : request.indices()) -->Line_54 $$ logger.debug("[[ FD ]
Line_6 $$ IndexService indexService = indicesService.indexServiceSafe(index)-->Line_43 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(mappingType)[ FD ]
Line_6 $$ IndexService indexService = indicesService.indexServiceSafe(index)-->Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)[ FD ]
Line_4 $$ CompressedXContent mappingUpdateSource = new CompressedXContent(request.source())-->Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())[ FD ]
Line_7 $$ DocumentMapper newMapper-->Line_27 $$ mappingType = newMapper.type()[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_14 $$ existingMapper.merge(newMapper.mapping(), request.updateAllTypes())[ FD ]
Line_4 $$ CompressedXContent mappingUpdateSource = new CompressedXContent(request.source())-->Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)[ FD ]
Line_13 $$ if (existingMapper != null) -->Line_16 $$ if (newMapper.parentFieldMapper().active()) [ CD ]
Line_7 $$ DocumentMapper newMapper-->Line_19 $$ if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) [ FD ]
Line_50 $$ if (existingSource.equals(updatedSource)) -->Line_52 $$ mappings.put(index, new MappingMetaData(mergedMapper))[ CD ]
Line_6 $$ IndexService indexService = indicesService.indexServiceSafe(index)-->Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())[ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_82 $$ return ClusterState.builder(currentState).metaData(builder).build()[ FD ]
Line_72 $$ for (String indexName : request.indices()) -->Line_73 $$ IndexMetaData indexMetaData = currentState.metaData().index(indexName)[ FD ]
Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)-->Line_14 $$ existingMapper.merge(newMapper.mapping(), request.updateAllTypes())[ FD ]
Line_17 $$ IndexMetaData indexMetaData = currentState.metaData().index(index)-->Line_74 $$ if (indexMetaData == null) [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_37 $$ for (String index : request.indices()) [ FD ]
Line_9 $$ if (MapperService.DEFAULT_MAPPING.equals(request.type())) -->Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)[ CD ]
Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)-->Line_28 $$ if (mappingType.equals(newMapper.type()) == false) [ FD ]
Line_49 $$ if (existingSource != null) -->Line_50 $$ if (existingSource.equals(updatedSource)) [ CD ]
Line_61 $$ if (logger.isDebugEnabled()) -->Line_62 $$ logger.debug("[[ CD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_3 $$ String mappingType = request.type()[ FD ]
Line_27 $$ mappingType = newMapper.type()-->Line_47 $$ DocumentMapper mergedMapper = indexService.mapperService().merge(mappingType, mappingUpdateSource, true, request.updateAllTypes())[ FD ]
Line_36 $$ final Map<String, MappingMetaData> mappings = new HashMap()-->Line_68 $$ if (mappings.isEmpty()) [ FD ]
Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)-->Line_12 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, existingMapper == null)[ FD ]
Line_42 $$ CompressedXContent existingSource = null-->Line_50 $$ if (existingSource.equals(updatedSource)) [ FD ]
Line_36 $$ final Map<String, MappingMetaData> mappings = new HashMap()-->Line_77 $$ MappingMetaData mappingMd = mappings.get(indexName)[ FD ]
Line_8 $$ DocumentMapper existingMapper = indexService.mapperService().documentMapper(request.type())-->Line_44 $$ if (existingMapper != null) [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_73 $$ IndexMetaData indexMetaData = currentState.metaData().index(indexName)[ FD ]
Line_44 $$ if (existingMapper != null) -->Line_45 $$ existingSource = existingMapper.mappingSource()[ CD ]
Line_53 $$ if (logger.isDebugEnabled()) -->Line_55 $$ if (logger.isInfoEnabled()) [ CD ]
Line_71 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData())-->Line_79 $$ builder.put(IndexMetaData.builder(indexMetaData).putMapping(mappingMd))[ FD ]
Line_27 $$ mappingType = newMapper.type()-->Line_33 $$ if (!MapperService.DEFAULT_MAPPING.equals(mappingType) && !PercolatorService.TYPE_NAME.equals(mappingType) && mappingType.charAt(0) == '_') [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_71 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData())[ CD ]
Line_5 $$ for (String index : request.indices()) -->Line_38 $$ IndexService indexService = indicesService.indexService(index)[ FD ]
Line_3 $$ String mappingType = request.type()-->Line_64 $$ logger.info("[[ FD ]
Line_13 $$ if (existingMapper != null) -->Line_14 $$ existingMapper.merge(newMapper.mapping(), request.updateAllTypes())[ CD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_71 $$ MetaData.Builder builder = MetaData.builder(currentState.metaData())[ FD ]
Line_49 $$ if (existingSource != null) -->Line_61 $$ if (logger.isDebugEnabled()) [ CD ]
Line_61 $$ if (logger.isDebugEnabled()) -->Line_63 $$ if (logger.isInfoEnabled()) [ CD ]
Line_5 $$ for (String index : request.indices()) -->Line_52 $$ mappings.put(index, new MappingMetaData(mergedMapper))[ FD ]
Line_10 $$ newMapper = indexService.mapperService().parse(request.type(), mappingUpdateSource, false)-->Line_19 $$ if (newMapper.parentFieldMapper().type().equals(mapping.value.type())) [ FD ]
Line_2 $$ private ClusterState applyRequest(ClusterState currentState, PutMappingClusterStateUpdateRequest request) throws IOException -->Line_68 $$ if (mappings.isEmpty()) [ CD ]
