Line_10 $$ if (module1.charAt(diff - 1) == '/') -->Line_17 $$ return module1.substring(0, index)[ CD ]
Line_3 $$ int diff = indexOfFirstDifference(module1, module2)-->Line_13 $$ int index = module1.lastIndexOf('/', diff)[ FD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_11 $$ return module1.substring(0, diff)[ FD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_13 $$ int index = module1.lastIndexOf('/', diff)[ FD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_4 $$ if (diff == 0) [ CD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_10 $$ if (module1.charAt(diff - 1) == '/') [ CD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_7 $$ if (diff == module1.length()) [ FD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_3 $$ int diff = indexOfFirstDifference(module1, module2)[ FD ]
Line_7 $$ if (diff == module1.length()) -->Line_8 $$ return module1[ CD ]
Line_14 $$ if (index < 0) -->Line_15 $$ return null[ CD ]
Line_10 $$ if (module1.charAt(diff - 1) == '/') -->Line_13 $$ int index = module1.lastIndexOf('/', diff)[ CD ]
Line_13 $$ int index = module1.lastIndexOf('/', diff)-->Line_14 $$ if (index < 0) [ FD ]
Line_3 $$ int diff = indexOfFirstDifference(module1, module2)-->Line_7 $$ if (diff == module1.length()) [ FD ]
Line_4 $$ if (diff == 0) -->Line_5 $$ return null[ CD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_17 $$ return module1.substring(0, index)[ FD ]
Line_3 $$ int diff = indexOfFirstDifference(module1, module2)-->Line_11 $$ return module1.substring(0, diff)[ FD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_7 $$ if (diff == module1.length()) [ CD ]
Line_13 $$ int index = module1.lastIndexOf('/', diff)-->Line_17 $$ return module1.substring(0, index)[ FD ]
Line_10 $$ if (module1.charAt(diff - 1) == '/') -->Line_11 $$ return module1.substring(0, diff)[ CD ]
Line_3 $$ int diff = indexOfFirstDifference(module1, module2)-->Line_4 $$ if (diff == 0) [ FD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_3 $$ int diff = indexOfFirstDifference(module1, module2)[ CD ]
Line_10 $$ if (module1.charAt(diff - 1) == '/') -->Line_14 $$ if (index < 0) [ CD ]
Line_2 $$ private static String findCommonParentModule(String module1, String module2) -->Line_10 $$ if (module1.charAt(diff - 1) == '/') [ FD ]
