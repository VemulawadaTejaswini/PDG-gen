Line_5 $$ char c = str.charAt(position)-->Line_6 $$ if (c <= maxDelimChar && delimiters.indexOf(c) >= 0) [ FD ]
Line_11 $$ if (retDelims && startPos == position) -->Line_13 $$ if (c <= maxDelimChar && delimiters.indexOf(c) >= 0) [ CD ]
Line_11 $$ if (retDelims && startPos == position) -->Line_12 $$ char c = str.charAt(position)[ CD ]
Line_3 $$ int position = startPos-->Line_5 $$ char c = str.charAt(position)[ FD ]
Line_4 $$ while (position < maxPosition) -->Line_6 $$ if (c <= maxDelimChar && delimiters.indexOf(c) >= 0) [ CD ]
Line_5 $$ char c = str.charAt(position)-->Line_13 $$ if (c <= maxDelimChar && delimiters.indexOf(c) >= 0) [ FD ]
Line_3 $$ int position = startPos-->Line_14 $$ position++[ FD ]
Line_2 $$ private int scanToken(int startPos) -->Line_3 $$ int position = startPos[ CD ]
Line_3 $$ int position = startPos-->Line_12 $$ char c = str.charAt(position)[ FD ]
Line_13 $$ if (c <= maxDelimChar && delimiters.indexOf(c) >= 0) -->Line_14 $$ position++[ CD ]
Line_3 $$ int position = startPos-->Line_4 $$ while (position < maxPosition) [ FD ]
Line_4 $$ while (position < maxPosition) -->Line_5 $$ char c = str.charAt(position)[ CD ]
Line_3 $$ int position = startPos-->Line_9 $$ position++[ FD ]
Line_4 $$ while (position < maxPosition) -->Line_9 $$ position++[ CD ]
Line_12 $$ char c = str.charAt(position)-->Line_13 $$ if (c <= maxDelimChar && delimiters.indexOf(c) >= 0) [ FD ]
Line_2 $$ private int scanToken(int startPos) -->Line_17 $$ return position[ CD ]
Line_2 $$ private int scanToken(int startPos) -->Line_11 $$ if (retDelims && startPos == position) [ CD ]
Line_2 $$ private int scanToken(int startPos) -->Line_4 $$ while (position < maxPosition) [ CD ]
