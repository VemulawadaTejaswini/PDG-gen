Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_19 $$ if (i == -1) [ FD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_12 $$ keywords = keywords.trim()[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_20 $$ i = keywords.length()[ FD ]
Line_20 $$ i = keywords.length()-->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_32 $$ while (!Character.isWhitespace(c)) -->Line_33 $$ i++[ CD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_20 $$ i = keywords.length()[ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_34 $$ if (i == keywords.length()) [ FD ]
Line_17 $$ int pos = i + 1-->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_15 $$ char c = keywords.charAt(i)[ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_14 $$ for (int i = 0; i < keywords.length(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_28 $$ i++[ FD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_12 $$ keywords = keywords.trim()[ FD ]
Line_20 $$ i = keywords.length()-->Line_28 $$ i++[ FD ]
Line_15 $$ char c = keywords.charAt(i)-->Line_27 $$ while (Character.isWhitespace(c)) [ FD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_24 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_33 $$ i++[ FD ]
Line_15 $$ char c = keywords.charAt(i)-->Line_32 $$ while (!Character.isWhitespace(c)) [ FD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_14 $$ for (int i = 0; i < keywords.length(); i++) [ FD ]
Line_20 $$ i = keywords.length()-->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)[ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_9 $$ if (lowerCase) [ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_15 $$ char c = keywords.charAt(i)[ FD ]
Line_20 $$ i = keywords.length()-->Line_22 $$ if (i > pos) [ FD ]
Line_20 $$ i = keywords.length()-->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_6 $$ if (_CUSTOM_SQL_AUTO_ESCAPE_WILDCARDS_ENABLED) -->Line_7 $$ keywords = escapeWildCards(keywords)[ CD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_34 $$ if (i == keywords.length()) [ FD ]
Line_15 $$ char c = keywords.charAt(i)-->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_15 $$ char c = keywords.charAt(i)[ CD ]
Line_9 $$ if (lowerCase) -->Line_10 $$ keywords = StringUtil.toLowerCase(keywords)[ CD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_20 $$ i = keywords.length()[ FD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_15 $$ char c = keywords.charAt(i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_32 $$ while (!Character.isWhitespace(c)) -->Line_34 $$ if (i == keywords.length()) [ CD ]
Line_22 $$ if (i > pos) -->Line_23 $$ String keyword = keywords.substring(pos, i)[ CD ]
Line_20 $$ i = keywords.length()-->Line_34 $$ if (i == keywords.length()) [ FD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_32 $$ while (!Character.isWhitespace(c)) [ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_14 $$ for (int i = 0; i < keywords.length(); i++) [ CD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_10 $$ keywords = StringUtil.toLowerCase(keywords)[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_17 $$ int pos = i + 1-->Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)[ FD ]
Line_29 $$ c = keywords.charAt(i)-->Line_27 $$ while (Character.isWhitespace(c)) [ FD ]
Line_17 $$ int pos = i + 1-->Line_22 $$ if (i > pos) [ FD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_14 $$ for (int i = 0; i < keywords.length(); i++) [ FD ]
Line_27 $$ while (Character.isWhitespace(c)) -->Line_29 $$ c = keywords.charAt(i)[ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_3 $$ if (Validator.isNull(keywords)) [ FD ]
Line_27 $$ while (Character.isWhitespace(c)) -->Line_28 $$ i++[ CD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_16 $$ if (c == CharPool.QUOTE) [ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_3 $$ if (Validator.isNull(keywords)) [ CD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_19 $$ if (i == -1) [ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_12 $$ keywords = keywords.trim()[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_22 $$ if (i > pos) [ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_34 $$ if (i == keywords.length()) [ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_14 $$ for (int i = 0; i < keywords.length(); i++) [ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_13 $$ List<String> keywordsList = new ArrayList()[ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_6 $$ if (_CUSTOM_SQL_AUTO_ESCAPE_WILDCARDS_ENABLED) [ CD ]
Line_13 $$ List<String> keywordsList = new ArrayList()-->Line_40 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ FD ]
Line_20 $$ i = keywords.length()-->Line_14 $$ for (int i = 0; i < keywords.length(); i++) [ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_33 $$ i++[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_34 $$ if (i == keywords.length()) [ FD ]
Line_17 $$ int pos = i + 1-->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_20 $$ i = keywords.length()-->Line_19 $$ if (i == -1) [ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_29 $$ c = keywords.charAt(i)-->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_13 $$ List<String> keywordsList = new ArrayList()-->Line_43 $$ return keywordsList.toArray(new String[keywordsList.size()])[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_20 $$ i = keywords.length()[ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_23 $$ String keyword = keywords.substring(pos, i)-->Line_24 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_28 $$ i++[ FD ]
Line_19 $$ if (i == -1) -->Line_20 $$ i = keywords.length()[ CD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_17 $$ int pos = i + 1[ CD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)[ FD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)[ FD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_7 $$ keywords = escapeWildCards(keywords)[ FD ]
Line_22 $$ if (i > pos) -->Line_24 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ CD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_20 $$ i = keywords.length()[ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_20 $$ i = keywords.length()-->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_40 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ FD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_22 $$ if (i > pos) [ CD ]
Line_37 $$ c = keywords.charAt(i)-->Line_32 $$ while (!Character.isWhitespace(c)) [ FD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_34 $$ if (i == keywords.length()) [ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)[ FD ]
Line_13 $$ List<String> keywordsList = new ArrayList()-->Line_24 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ FD ]
Line_23 $$ String keyword = keywords.substring(pos, i)-->Line_40 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ FD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_20 $$ i = keywords.length()[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_43 $$ return keywordsList.toArray(new String[keywordsList.size()])[ CD ]
Line_15 $$ char c = keywords.charAt(i)-->Line_16 $$ if (c == CharPool.QUOTE) [ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)[ FD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_40 $$ keywordsList.add(insertWildcard(keyword, wildcardMode))[ CD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_34 $$ if (i == keywords.length()) [ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_22 $$ if (i > pos) [ FD ]
Line_20 $$ i = keywords.length()-->Line_33 $$ i++[ FD ]
Line_10 $$ keywords = StringUtil.toLowerCase(keywords)-->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_39 $$ String keyword = keywords.substring(pos, i)[ CD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_19 $$ if (i == -1) [ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_10 $$ keywords = StringUtil.toLowerCase(keywords)[ FD ]
Line_15 $$ char c = keywords.charAt(i)-->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_32 $$ while (!Character.isWhitespace(c)) -->Line_37 $$ c = keywords.charAt(i)[ CD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_12 $$ keywords = keywords.trim()[ CD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_14 $$ for (int i = 0; i < keywords.length(); i++) [ FD ]
Line_29 $$ c = keywords.charAt(i)-->Line_32 $$ while (!Character.isWhitespace(c)) [ FD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_37 $$ c = keywords.charAt(i)[ FD ]
Line_20 $$ i = keywords.length()-->Line_15 $$ char c = keywords.charAt(i)[ FD ]
Line_16 $$ if (c == CharPool.QUOTE) -->Line_27 $$ while (Character.isWhitespace(c)) [ CD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_15 $$ char c = keywords.charAt(i)[ FD ]
Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)-->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_3 $$ if (Validator.isNull(keywords)) -->Line_4 $$ return new String[] [ CD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_15 $$ char c = keywords.charAt(i)[ FD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_18 $$ i = keywords.indexOf(CharPool.QUOTE, pos)[ FD ]
Line_7 $$ keywords = escapeWildCards(keywords)-->Line_23 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_14 $$ for (int i = 0; i < keywords.length(); i++) -->Line_29 $$ c = keywords.charAt(i)[ FD ]
Line_2 $$ public String[] keywords(String keywords, boolean lowerCase, WildcardMode wildcardMode) -->Line_39 $$ String keyword = keywords.substring(pos, i)[ FD ]
Line_12 $$ keywords = keywords.trim()-->Line_15 $$ char c = keywords.charAt(i)[ FD ]
