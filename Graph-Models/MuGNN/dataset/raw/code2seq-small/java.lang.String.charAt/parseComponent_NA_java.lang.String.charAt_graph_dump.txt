Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_6 $$ int j = 0[ CD ]
Line_8 $$ boolean escaped = false-->Line_12 $$ escaped = false[ FD ]
Line_28 $$ if (kindSep < 0) -->Line_33 $$ for (int i = kindSep + 1; i < len; i++) [ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_27 $$ comp.id = new String(newStr, 0, j)[ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_40 $$ if (isMeta(compStr.charAt(i + 1))) [ FD ]
Line_36 $$ escaped = false-->Line_41 $$ escaped = true[ FD ]
Line_33 $$ for (int i = kindSep + 1; i < len; i++) -->Line_46 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_51 $$ return comp[ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) [ CD ]
Line_28 $$ if (kindSep < 0) -->Line_29 $$ comp.kind = ""[ CD ]
Line_17 $$ escaped = true-->Line_32 $$ escaped = false[ FD ]
Line_34 $$ if (escaped) -->Line_36 $$ escaped = false[ CD ]
Line_8 $$ boolean escaped = false-->Line_17 $$ escaped = true[ FD ]
Line_12 $$ escaped = false-->Line_41 $$ escaped = true[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_8 $$ boolean escaped = false[ CD ]
Line_32 $$ escaped = false-->Line_41 $$ escaped = true[ FD ]
Line_6 $$ int j = 0-->Line_46 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_11 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_35 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_24 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_13 $$ if (compStr.charAt(i) == escapeChar) [ FD ]
Line_38 $$ if (i + 1 >= len) -->Line_40 $$ if (isMeta(compStr.charAt(i + 1))) [ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_39 $$ throw IIOPLogger.ROOT_LOGGER.unescapedCharacter(compStr)[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_21 $$ if (compStr.charAt(i) == kindSeparator) [ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_5 $$ int len = compStr.length()[ CD ]
Line_37 $$ if (compStr.charAt(i) == escapeChar) -->Line_46 $$ newStr[j++] = compStr.charAt(i)[ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_4 $$ int kindSep = -1[ CD ]
Line_5 $$ int len = compStr.length()-->Line_38 $$ if (i + 1 >= len) [ FD ]
Line_4 $$ int kindSep = -1-->Line_28 $$ if (kindSep < 0) [ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_46 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_8 $$ boolean escaped = false-->Line_32 $$ escaped = false[ FD ]
Line_17 $$ escaped = true-->Line_41 $$ escaped = true[ FD ]
Line_12 $$ escaped = false-->Line_17 $$ escaped = true[ FD ]
Line_12 $$ escaped = false-->Line_32 $$ escaped = false[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_7 $$ char[] newStr = new char[len][ CD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_37 $$ if (compStr.charAt(i) == escapeChar) [ FD ]
Line_32 $$ escaped = false-->Line_36 $$ escaped = false[ FD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_24 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_28 $$ if (kindSep < 0) -->Line_49 $$ comp.kind = new String(newStr, 0, j)[ CD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_22 $$ kindSep = i[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_19 $$ throw IIOPLogger.ROOT_LOGGER.invalidEscapedCharacter(compStr)[ FD ]
Line_40 $$ if (isMeta(compStr.charAt(i + 1))) -->Line_41 $$ escaped = true[ CD ]
Line_6 $$ int j = 0-->Line_31 $$ j = 0[ FD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_10 $$ if (escaped) [ CD ]
Line_14 $$ if (i + 1 >= len) -->Line_16 $$ if (isMeta(compStr.charAt(i + 1))) [ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_5 $$ int len = compStr.length()[ FD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_21 $$ if (compStr.charAt(i) == kindSeparator) [ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_37 $$ if (compStr.charAt(i) == escapeChar) [ FD ]
Line_6 $$ int j = 0-->Line_11 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_4 $$ int kindSep = -1-->Line_22 $$ kindSep = i[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_28 $$ if (kindSep < 0) [ CD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_13 $$ if (compStr.charAt(i) == escapeChar) [ FD ]
Line_31 $$ j = 0-->Line_46 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_8 $$ boolean escaped = false-->Line_41 $$ escaped = true[ FD ]
Line_6 $$ int j = 0-->Line_35 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_13 $$ if (compStr.charAt(i) == escapeChar) -->Line_14 $$ if (i + 1 >= len) [ CD ]
Line_34 $$ if (escaped) -->Line_37 $$ if (compStr.charAt(i) == escapeChar) [ CD ]
Line_16 $$ if (isMeta(compStr.charAt(i + 1))) -->Line_17 $$ escaped = true[ CD ]
Line_22 $$ kindSep = i-->Line_28 $$ if (kindSep < 0) [ FD ]
Line_8 $$ boolean escaped = false-->Line_36 $$ escaped = false[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_16 $$ if (isMeta(compStr.charAt(i + 1))) [ FD ]
Line_28 $$ if (kindSep < 0) -->Line_32 $$ escaped = false[ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_15 $$ throw IIOPLogger.ROOT_LOGGER.unescapedCharacter(compStr)[ FD ]
Line_10 $$ if (escaped) -->Line_13 $$ if (compStr.charAt(i) == escapeChar) [ CD ]
Line_6 $$ int j = 0-->Line_24 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_5 $$ int len = compStr.length()-->Line_33 $$ for (int i = kindSep + 1; i < len; i++) [ FD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_46 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_10 $$ if (escaped) -->Line_12 $$ escaped = false[ CD ]
Line_21 $$ if (compStr.charAt(i) == kindSeparator) -->Line_22 $$ kindSep = i[ CD ]
Line_10 $$ if (escaped) -->Line_11 $$ newStr[j++] = compStr.charAt(i)[ CD ]
Line_33 $$ for (int i = kindSep + 1; i < len; i++) -->Line_34 $$ if (escaped) [ CD ]
Line_37 $$ if (compStr.charAt(i) == escapeChar) -->Line_38 $$ if (i + 1 >= len) [ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_11 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_5 $$ int len = compStr.length()-->Line_14 $$ if (i + 1 >= len) [ FD ]
Line_28 $$ if (kindSep < 0) -->Line_31 $$ j = 0[ CD ]
Line_34 $$ if (escaped) -->Line_35 $$ newStr[j++] = compStr.charAt(i)[ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_3 $$ NameComponent comp = new NameComponent()[ CD ]
Line_33 $$ for (int i = kindSep + 1; i < len; i++) -->Line_37 $$ if (compStr.charAt(i) == escapeChar) [ FD ]
Line_13 $$ if (compStr.charAt(i) == escapeChar) -->Line_21 $$ if (compStr.charAt(i) == kindSeparator) [ CD ]
Line_21 $$ if (compStr.charAt(i) == kindSeparator) -->Line_24 $$ newStr[j++] = compStr.charAt(i)[ CD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_43 $$ throw IIOPLogger.ROOT_LOGGER.invalidEscapedCharacter(compStr)[ FD ]
Line_12 $$ escaped = false-->Line_36 $$ escaped = false[ FD ]
Line_2 $$ private static NameComponent parseComponent(String compStr) throws InvalidNameException -->Line_35 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_9 $$ for (int i = 0; i < len && kindSep < 0; i++) -->Line_33 $$ for (int i = kindSep + 1; i < len; i++) [ FD ]
Line_31 $$ j = 0-->Line_35 $$ newStr[j++] = compStr.charAt(i)[ FD ]
Line_17 $$ escaped = true-->Line_36 $$ escaped = false[ FD ]
Line_33 $$ for (int i = kindSep + 1; i < len; i++) -->Line_35 $$ newStr[j++] = compStr.charAt(i)[ FD ]
