Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)-->Line_75 $$ pos = layoutFriendlyURLCompositeFriendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR)[ FD ]
Line_71 $$ String layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLComposite.getFriendlyURL()-->Line_78 $$ layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLCompositeFriendlyURL.substring(0, pos)[ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)-->Line_43 $$ if (group == null) [ FD ]
Line_56 $$ if (Validator.isNull(friendlyURL)) -->Line_57 $$ request.setAttribute(WebKeys.REDIRECT_TO_DEFAULT_LAYOUT, Boolean.TRUE)[ CD ]
Line_35 $$ if (user != null) -->Line_36 $$ group = user.getGroup()[ CD ]
Line_6 $$ String friendlyURL = null-->Line_56 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_11 $$ friendlyURL = path[ FD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_23 $$ group = user.getGroup()[ FD ]
Line_43 $$ if (group == null) -->Line_46 $$ sb.append(companyId)[ CD ]
Line_61 $$ ServiceContext serviceContext = ServiceContextThreadLocal.getServiceContext()-->Line_64 $$ ServiceContextThreadLocal.pushServiceContext(serviceContext)[ FD ]
Line_28 $$ long groupId = GetterUtil.getLong(screenName)-->Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_52 $$ friendlyURL = null[ FD ]
Line_16 $$ long companyId = PortalInstances.getCompanyId(request)-->Line_21 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)[ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)[ FD ]
Line_20 $$ if (_user || !Validator.isNumber(screenName)) -->Line_28 $$ long groupId = GetterUtil.getLong(screenName)[ CD ]
Line_72 $$ if (Validator.isNull(layoutFriendlyURLCompositeFriendlyURL)) -->Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)[ CD ]
Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()-->Line_89 $$ if (layout.matches(request, friendlyURL)) [ FD ]
Line_21 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)-->Line_23 $$ group = user.getGroup()[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_3 $$ if (Validator.isNull(path) || (path.charAt(0) != CharPool.SLASH)) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_63 $$ serviceContext = ServiceContextFactory.getInstance(request)[ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_54 $$ friendlyURL = path.substring(pos)[ FD ]
Line_52 $$ friendlyURL = null-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_19 $$ String screenName = friendlyURL.substring(1)-->Line_34 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)[ FD ]
Line_11 $$ friendlyURL = path-->Line_48 $$ sb.append(friendlyURL)[ FD ]
Line_36 $$ group = user.getGroup()-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_70 $$ Locale locale = PortalUtil.getLocale(request)-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_11 $$ friendlyURL = path[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_56 $$ if (Validator.isNull(friendlyURL)) [ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_18 $$ if (group == null) [ CD ]
Line_71 $$ String layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLComposite.getFriendlyURL()-->Line_81 $$ Locale originalLocale = setAlternativeLayoutFriendlyURL(request, layout, layoutFriendlyURLCompositeFriendlyURL)[ FD ]
Line_23 $$ group = user.getGroup()-->Line_36 $$ group = user.getGroup()[ FD ]
Line_18 $$ if (group == null) -->Line_20 $$ if (_user || !Validator.isNumber(screenName)) [ CD ]
Line_11 $$ friendlyURL = path-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_53 $$ if ((pos != -1) && ((pos + 1) != path.length())) [ FD ]
Line_81 $$ Locale originalLocale = setAlternativeLayoutFriendlyURL(request, layout, layoutFriendlyURLCompositeFriendlyURL)-->Line_82 $$ String redirect = PortalUtil.getLocalizedFriendlyURL(request, layout, locale, originalLocale)[ FD ]
Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)-->Line_87 $$ List<Layout> layouts = LayoutLocalServiceUtil.getLayouts(group.getGroupId(), _private, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID)[ FD ]
Line_31 $$ if (_log.isDebugEnabled()) -->Line_32 $$ _log.debug("No group exists with friendly URL " + groupId + ". Try fetching by screen name instead.")[ CD ]
Line_36 $$ group = user.getGroup()-->Line_43 $$ if (group == null) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_70 $$ Locale locale = PortalUtil.getLocale(request)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_9 $$ friendlyURL = path.substring(0, pos)[ FD ]
Line_11 $$ friendlyURL = path-->Line_89 $$ if (layout.matches(request, friendlyURL)) [ FD ]
Line_77 $$ if (pos != -1) -->Line_78 $$ layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLCompositeFriendlyURL.substring(0, pos)[ CD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_56 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_44 $$ StringBundler sb = new StringBundler(5)-->Line_47 $$ sb.append(", friendlyURL=")[ FD ]
Line_37 $$ if (_log.isWarnEnabled()) -->Line_38 $$ _log.warn("No user or group exists with friendly URL " + groupId)[ CD ]
Line_52 $$ friendlyURL = null-->Line_54 $$ friendlyURL = path.substring(pos)[ FD ]
Line_23 $$ group = user.getGroup()-->Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)[ FD ]
Line_54 $$ friendlyURL = path.substring(pos)-->Line_56 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_52 $$ friendlyURL = null[ CD ]
Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)-->Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_81 $$ Locale originalLocale = setAlternativeLayoutFriendlyURL(request, layout, layoutFriendlyURLCompositeFriendlyURL)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_13 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_43 $$ if (group == null) -->Line_48 $$ sb.append(friendlyURL)[ CD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_18 $$ if (group == null) [ FD ]
Line_30 $$ if (group == null) -->Line_34 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)[ CD ]
Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)-->Line_81 $$ Locale originalLocale = setAlternativeLayoutFriendlyURL(request, layout, layoutFriendlyURLCompositeFriendlyURL)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_69 $$ request.setAttribute(WebKeys.LAYOUT, layout)[ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_52 $$ friendlyURL = null[ FD ]
Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)-->Line_36 $$ group = user.getGroup()[ FD ]
Line_36 $$ group = user.getGroup()-->Line_87 $$ List<Layout> layouts = LayoutLocalServiceUtil.getLayouts(group.getGroupId(), _private, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID)[ FD ]
Line_35 $$ if (user != null) -->Line_37 $$ if (_log.isWarnEnabled()) [ CD ]
Line_19 $$ String screenName = friendlyURL.substring(1)-->Line_28 $$ long groupId = GetterUtil.getLong(screenName)[ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_13 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_44 $$ StringBundler sb = new StringBundler(5)-->Line_45 $$ sb.append("[ FD ]
Line_6 $$ String friendlyURL = null-->Line_89 $$ if (layout.matches(request, friendlyURL)) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ CD ]
Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)-->Line_76 $$ if (pos != 0) [ FD ]
Line_20 $$ if (_user || !Validator.isNumber(screenName)) -->Line_30 $$ if (group == null) [ CD ]
Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)-->Line_30 $$ if (group == null) [ FD ]
Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_44 $$ StringBundler sb = new StringBundler(5)-->Line_48 $$ sb.append(friendlyURL)[ FD ]
Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_10 $$ if (path.length() > 1) -->Line_11 $$ friendlyURL = path[ CD ]
Line_19 $$ String screenName = friendlyURL.substring(1)-->Line_21 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)[ FD ]
Line_53 $$ if ((pos != -1) && ((pos + 1) != path.length())) -->Line_54 $$ friendlyURL = path.substring(pos)[ CD ]
Line_11 $$ friendlyURL = path-->Line_56 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_89 $$ if (layout.matches(request, friendlyURL)) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_16 $$ long companyId = PortalInstances.getCompanyId(request)[ CD ]
Line_19 $$ String screenName = friendlyURL.substring(1)-->Line_20 $$ if (_user || !Validator.isNumber(screenName)) [ FD ]
Line_22 $$ if (user != null) -->Line_24 $$ if (_log.isWarnEnabled()) [ CD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)[ FD ]
Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) -->Line_83 $$ return new Object[] [ CD ]
Line_89 $$ if (layout.matches(request, friendlyURL)) -->Line_90 $$ String redirect = PortalUtil.getLayoutActualURL(layout, mainPath)[ CD ]
Line_21 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)-->Line_22 $$ if (user != null) [ FD ]
Line_16 $$ long companyId = PortalInstances.getCompanyId(request)-->Line_34 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)[ FD ]
Line_71 $$ String layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLComposite.getFriendlyURL()-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_54 $$ friendlyURL = path.substring(pos)-->Line_89 $$ if (layout.matches(request, friendlyURL)) [ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_19 $$ String screenName = friendlyURL.substring(1)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)[ CD ]
Line_62 $$ if (serviceContext == null) -->Line_64 $$ ServiceContextThreadLocal.pushServiceContext(serviceContext)[ CD ]
Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)-->Line_75 $$ pos = layoutFriendlyURLCompositeFriendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR)[ FD ]
Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_8 $$ if (pos != -1) -->Line_9 $$ friendlyURL = path.substring(0, pos)[ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_13 $$ if (Validator.isNull(friendlyURL)) [ CD ]
Line_23 $$ group = user.getGroup()-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)-->Line_77 $$ if (pos != -1) [ FD ]
Line_59 $$ Map<String, Object> requestContext = new HashMap()-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_53 $$ if ((pos != -1) && ((pos + 1) != path.length())) [ CD ]
Line_8 $$ if (pos != -1) -->Line_10 $$ if (path.length() > 1) [ CD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_30 $$ if (group == null) [ FD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_61 $$ ServiceContext serviceContext = ServiceContextThreadLocal.getServiceContext()-->Line_62 $$ if (serviceContext == null) [ FD ]
Line_16 $$ long companyId = PortalInstances.getCompanyId(request)-->Line_46 $$ sb.append(companyId)[ FD ]
Line_78 $$ layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLCompositeFriendlyURL.substring(0, pos)-->Line_81 $$ Locale originalLocale = setAlternativeLayoutFriendlyURL(request, layout, layoutFriendlyURLCompositeFriendlyURL)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_60 $$ requestContext.put("request", request)[ CD ]
Line_70 $$ Locale locale = PortalUtil.getLocale(request)-->Line_82 $$ String redirect = PortalUtil.getLocalizedFriendlyURL(request, layout, locale, originalLocale)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_97 $$ return new Object[] [ CD ]
Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()-->Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)[ FD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)-->Line_78 $$ layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLCompositeFriendlyURL.substring(0, pos)[ FD ]
Line_23 $$ group = user.getGroup()-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_6 $$ String friendlyURL = null[ CD ]
Line_30 $$ if (group == null) -->Line_31 $$ if (_log.isDebugEnabled()) [ CD ]
Line_6 $$ String friendlyURL = null-->Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)[ FD ]
Line_71 $$ String layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLComposite.getFriendlyURL()-->Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)[ FD ]
Line_44 $$ StringBundler sb = new StringBundler(5)-->Line_46 $$ sb.append(companyId)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_19 $$ String screenName = friendlyURL.substring(1)[ FD ]
Line_71 $$ String layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLComposite.getFriendlyURL()-->Line_72 $$ if (Validator.isNull(layoutFriendlyURLCompositeFriendlyURL)) [ FD ]
Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()-->Line_82 $$ String redirect = PortalUtil.getLocalizedFriendlyURL(request, layout, locale, originalLocale)[ FD ]
Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()-->Line_90 $$ String redirect = PortalUtil.getLayoutActualURL(layout, mainPath)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_16 $$ long companyId = PortalInstances.getCompanyId(request)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_75 $$ pos = layoutFriendlyURLCompositeFriendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR)-->Line_76 $$ if (pos != 0) [ FD ]
Line_30 $$ if (group == null) -->Line_35 $$ if (user != null) [ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_57 $$ request.setAttribute(WebKeys.REDIRECT_TO_DEFAULT_LAYOUT, Boolean.TRUE)[ FD ]
Line_89 $$ if (layout.matches(request, friendlyURL)) -->Line_91 $$ return new Object[] [ CD ]
Line_70 $$ Locale locale = PortalUtil.getLocale(request)-->Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_8 $$ if (pos != -1) [ CD ]
Line_71 $$ String layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLComposite.getFriendlyURL()-->Line_75 $$ pos = layoutFriendlyURLCompositeFriendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR)[ FD ]
Line_61 $$ ServiceContext serviceContext = ServiceContextThreadLocal.getServiceContext()-->Line_63 $$ serviceContext = ServiceContextFactory.getInstance(request)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_60 $$ requestContext.put("request", request)[ FD ]
Line_43 $$ if (group == null) -->Line_47 $$ sb.append(", friendlyURL=")[ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)[ FD ]
Line_36 $$ group = user.getGroup()-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_89 $$ if (layout.matches(request, friendlyURL)) [ FD ]
Line_3 $$ if (Validator.isNull(path) || (path.charAt(0) != CharPool.SLASH)) -->Line_4 $$ return new Object[] [ CD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_43 $$ if (group == null) -->Line_44 $$ StringBundler sb = new StringBundler(5)[ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)[ CD ]
Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)-->Line_8 $$ if (pos != -1) [ FD ]
Line_16 $$ long companyId = PortalInstances.getCompanyId(request)-->Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)[ FD ]
Line_43 $$ if (group == null) -->Line_45 $$ sb.append("[ CD ]
Line_11 $$ friendlyURL = path-->Line_54 $$ friendlyURL = path.substring(pos)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_48 $$ sb.append(friendlyURL)[ FD ]
Line_23 $$ group = user.getGroup()-->Line_30 $$ if (group == null) [ FD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_36 $$ group = user.getGroup()[ FD ]
Line_20 $$ if (_user || !Validator.isNumber(screenName)) -->Line_21 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)[ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_61 $$ ServiceContext serviceContext = ServiceContextThreadLocal.getServiceContext()[ CD ]
Line_75 $$ pos = layoutFriendlyURLCompositeFriendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR)-->Line_78 $$ layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLCompositeFriendlyURL.substring(0, pos)[ FD ]
Line_24 $$ if (_log.isWarnEnabled()) -->Line_25 $$ _log.warn("No user exists with friendly URL " + screenName)[ CD ]
Line_52 $$ friendlyURL = null-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_11 $$ friendlyURL = path-->Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)[ FD ]
Line_21 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)-->Line_36 $$ group = user.getGroup()[ FD ]
Line_43 $$ if (group == null) -->Line_49 $$ sb.append("}")[ CD ]
Line_75 $$ pos = layoutFriendlyURLCompositeFriendlyURL.indexOf(Portal.FRIENDLY_URL_SEPARATOR)-->Line_77 $$ if (pos != -1) [ FD ]
Line_20 $$ if (_user || !Validator.isNumber(screenName)) -->Line_22 $$ if (user != null) [ CD ]
Line_76 $$ if (pos != 0) -->Line_77 $$ if (pos != -1) [ CD ]
Line_44 $$ StringBundler sb = new StringBundler(5)-->Line_50 $$ throw new NoSuchGroupException(sb.toString())[ FD ]
Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()-->Line_69 $$ request.setAttribute(WebKeys.LAYOUT, layout)[ FD ]
Line_6 $$ String friendlyURL = null-->Line_54 $$ friendlyURL = path.substring(pos)[ FD ]
Line_11 $$ friendlyURL = path-->Line_13 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_59 $$ Map<String, Object> requestContext = new HashMap()[ CD ]
Line_52 $$ friendlyURL = null-->Line_89 $$ if (layout.matches(request, friendlyURL)) [ FD ]
Line_68 $$ Layout layout = layoutFriendlyURLComposite.getLayout()-->Line_81 $$ Locale originalLocale = setAlternativeLayoutFriendlyURL(request, layout, layoutFriendlyURLCompositeFriendlyURL)[ FD ]
Line_11 $$ friendlyURL = path-->Line_19 $$ String screenName = friendlyURL.substring(1)[ FD ]
Line_23 $$ group = user.getGroup()-->Line_43 $$ if (group == null) [ FD ]
Line_62 $$ if (serviceContext == null) -->Line_63 $$ serviceContext = ServiceContextFactory.getInstance(request)[ CD ]
Line_73 $$ layoutFriendlyURLCompositeFriendlyURL = layout.getFriendlyURL(locale)-->Line_78 $$ layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLCompositeFriendlyURL.substring(0, pos)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_90 $$ String redirect = PortalUtil.getLayoutActualURL(layout, mainPath)[ FD ]
Line_59 $$ Map<String, Object> requestContext = new HashMap()-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_63 $$ serviceContext = ServiceContextFactory.getInstance(request)-->Line_64 $$ ServiceContextThreadLocal.pushServiceContext(serviceContext)[ FD ]
Line_54 $$ friendlyURL = path.substring(pos)-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_78 $$ layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLCompositeFriendlyURL.substring(0, pos)-->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_3 $$ if (Validator.isNull(path) || (path.charAt(0) != CharPool.SLASH)) [ CD ]
Line_18 $$ if (group == null) -->Line_19 $$ String screenName = friendlyURL.substring(1)[ CD ]
Line_23 $$ group = user.getGroup()-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_76 $$ if (pos != 0) -->Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) [ CD ]
Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) -->Line_82 $$ String redirect = PortalUtil.getLocalizedFriendlyURL(request, layout, locale, originalLocale)[ CD ]
Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)-->Line_54 $$ friendlyURL = path.substring(pos)[ FD ]
Line_54 $$ friendlyURL = path.substring(pos)-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_9 $$ friendlyURL = path.substring(0, pos)[ FD ]
Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_59 $$ Map<String, Object> requestContext = new HashMap()-->Line_60 $$ requestContext.put("request", request)[ FD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_87 $$ List<Layout> layouts = LayoutLocalServiceUtil.getLayouts(group.getGroupId(), _private, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID)[ FD ]
Line_21 $$ User user = UserLocalServiceUtil.fetchUserByScreenName(companyId, screenName)-->Line_35 $$ if (user != null) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_43 $$ if (group == null) [ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_82 $$ String redirect = PortalUtil.getLocalizedFriendlyURL(request, layout, locale, originalLocale)[ FD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_36 $$ group = user.getGroup()-->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_54 $$ friendlyURL = path.substring(pos)[ FD ]
Line_20 $$ if (_user || !Validator.isNumber(screenName)) -->Line_29 $$ group = GroupLocalServiceUtil.fetchGroup(groupId)[ CD ]
Line_7 $$ int pos = path.indexOf(CharPool.SLASH, 1)-->Line_9 $$ friendlyURL = path.substring(0, pos)[ FD ]
Line_11 $$ friendlyURL = path-->Line_52 $$ friendlyURL = null[ FD ]
Line_22 $$ if (user != null) -->Line_23 $$ group = user.getGroup()[ CD ]
Line_6 $$ String friendlyURL = null-->Line_11 $$ friendlyURL = path[ FD ]
Line_52 $$ friendlyURL = null-->Line_56 $$ if (Validator.isNull(friendlyURL)) [ FD ]
Line_23 $$ group = user.getGroup()-->Line_87 $$ List<Layout> layouts = LayoutLocalServiceUtil.getLayouts(group.getGroupId(), _private, LayoutConstants.DEFAULT_PARENT_LAYOUT_ID)[ FD ]
Line_9 $$ friendlyURL = path.substring(0, pos)-->Line_48 $$ sb.append(friendlyURL)[ FD ]
Line_80 $$ if (isI18nRedirect(request, group.getGroupId()) || !StringUtil.equalsIgnoreCase(layoutFriendlyURLCompositeFriendlyURL, layout.getFriendlyURL(locale))) -->Line_81 $$ Locale originalLocale = setAlternativeLayoutFriendlyURL(request, layout, layoutFriendlyURLCompositeFriendlyURL)[ CD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_96 $$ String actualURL = PortalUtil.getActualURL(group.getGroupId(), _private, mainPath, friendlyURL, params, requestContext)[ FD ]
Line_11 $$ friendlyURL = path-->Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)[ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_10 $$ if (path.length() > 1) [ FD ]
Line_2 $$ protected Object[] getRedirect(HttpServletRequest request, String path, String mainPath, Map<String, String[]> params) throws Exception -->Line_62 $$ if (serviceContext == null) [ CD ]
Line_17 $$ Group group = GroupLocalServiceUtil.fetchFriendlyURLGroup(companyId, friendlyURL)-->Line_43 $$ if (group == null) [ FD ]
Line_13 $$ if (Validator.isNull(friendlyURL)) -->Line_14 $$ return new Object[] [ CD ]
Line_44 $$ StringBundler sb = new StringBundler(5)-->Line_49 $$ sb.append("}")[ FD ]
Line_67 $$ LayoutFriendlyURLComposite layoutFriendlyURLComposite = PortalUtil.getLayoutFriendlyURLComposite(group.getGroupId(), _private, friendlyURL, params, requestContext)-->Line_71 $$ String layoutFriendlyURLCompositeFriendlyURL = layoutFriendlyURLComposite.getFriendlyURL()[ FD ]
