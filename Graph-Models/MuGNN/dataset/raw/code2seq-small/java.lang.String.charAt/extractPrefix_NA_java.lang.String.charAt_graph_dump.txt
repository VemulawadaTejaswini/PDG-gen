Line_5 $$ if (text.isEmpty() || caretOffset == 0) -->Line_6 $$ return ""[ CD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_5 $$ if (text.isEmpty() || caretOffset == 0) [ CD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_4 $$ final int caretOffset = parameters.getOffset()[ CD ]
Line_18 $$ if (prefixStart < caretOffset && text.charAt(prefixStart) == '#') -->Line_19 $$ prefixStart++[ CD ]
Line_8 $$ int stopAt = text.lastIndexOf('-->Line_14 $$ stopAt = text.lastIndexOf(' ', caretOffset - 1)[ FD ]
Line_3 $$ String text = parameters.getOriginalFile().getText()-->Line_21 $$ return StringUtil.trimLeading(text.substring(prefixStart, caretOffset))[ FD ]
Line_8 $$ int stopAt = text.lastIndexOf('-->Line_11 $$ stopAt = caretOffset - 1[ FD ]
Line_17 $$ int prefixStart = stopAt + 1-->Line_18 $$ if (prefixStart < caretOffset && text.charAt(prefixStart) == '#') [ FD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_18 $$ if (prefixStart < caretOffset && text.charAt(prefixStart) == '#') [ CD ]
Line_3 $$ String text = parameters.getOriginalFile().getText()-->Line_10 $$ if (text.charAt(caretOffset - 1) == ':') [ FD ]
Line_3 $$ String text = parameters.getOriginalFile().getText()-->Line_5 $$ if (text.isEmpty() || caretOffset == 0) [ FD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_9 $$ if (stopAt <= text.lastIndexOf('}', caretOffset - 1)) [ CD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_8 $$ int stopAt = text.lastIndexOf('[ CD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_17 $$ int prefixStart = stopAt + 1[ CD ]
Line_9 $$ if (stopAt <= text.lastIndexOf('}', caretOffset - 1)) -->Line_10 $$ if (text.charAt(caretOffset - 1) == ':') [ CD ]
Line_17 $$ int prefixStart = stopAt + 1-->Line_21 $$ return StringUtil.trimLeading(text.substring(prefixStart, caretOffset))[ FD ]
Line_8 $$ int stopAt = text.lastIndexOf('-->Line_9 $$ if (stopAt <= text.lastIndexOf('}', caretOffset - 1)) [ FD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_4 $$ final int caretOffset = parameters.getOffset()[ FD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_3 $$ String text = parameters.getOriginalFile().getText()[ FD ]
Line_10 $$ if (text.charAt(caretOffset - 1) == ':') -->Line_11 $$ stopAt = caretOffset - 1[ CD ]
Line_3 $$ String text = parameters.getOriginalFile().getText()-->Line_8 $$ int stopAt = text.lastIndexOf('[ FD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_21 $$ return StringUtil.trimLeading(text.substring(prefixStart, caretOffset))[ CD ]
Line_17 $$ int prefixStart = stopAt + 1-->Line_19 $$ prefixStart++[ FD ]
Line_3 $$ String text = parameters.getOriginalFile().getText()-->Line_9 $$ if (stopAt <= text.lastIndexOf('}', caretOffset - 1)) [ FD ]
Line_3 $$ String text = parameters.getOriginalFile().getText()-->Line_18 $$ if (prefixStart < caretOffset && text.charAt(prefixStart) == '#') [ FD ]
Line_4 $$ final int caretOffset = parameters.getOffset()-->Line_11 $$ stopAt = caretOffset - 1[ FD ]
Line_4 $$ final int caretOffset = parameters.getOffset()-->Line_21 $$ return StringUtil.trimLeading(text.substring(prefixStart, caretOffset))[ FD ]
Line_3 $$ String text = parameters.getOriginalFile().getText()-->Line_14 $$ stopAt = text.lastIndexOf(' ', caretOffset - 1)[ FD ]
Line_2 $$ private static String extractPrefix(CompletionParameters parameters) -->Line_3 $$ String text = parameters.getOriginalFile().getText()[ CD ]
Line_10 $$ if (text.charAt(caretOffset - 1) == ':') -->Line_14 $$ stopAt = text.lastIndexOf(' ', caretOffset - 1)[ CD ]
Line_11 $$ stopAt = caretOffset - 1-->Line_14 $$ stopAt = text.lastIndexOf(' ', caretOffset - 1)[ FD ]
