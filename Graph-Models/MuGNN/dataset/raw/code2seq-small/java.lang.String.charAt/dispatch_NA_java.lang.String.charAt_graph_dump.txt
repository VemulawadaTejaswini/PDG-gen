Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_12 $$ String servletPath = null[ CD ]
Line_49 $$ if (strutsURLEncoder) -->Line_51 $$ URLEncoder strutsURLEncoderObj = new StrutsURLEncoder(portletServletRequest.getContextPath(), themeDisplay.getPathMain(), (String) _liferayPortletContext.getAttribute(Globals.SERVLET_KEY), (LiferayPortletURL) portletResponseImpl.createRenderURL())[ CD ]
Line_13 $$ if (_path != null) -->Line_23 $$ Set<String> servletURLPatterns = portletApp.getServletURLPatterns()[ CD ]
Line_49 $$ if (strutsURLEncoder) -->Line_50 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ CD ]
Line_4 $$ PortletRequestImpl portletRequestImpl = PortletRequestImpl.getPortletRequestImpl(portletRequest)-->Line_21 $$ Portlet portlet = portletRequestImpl.getPortlet()[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_3 $$ checkCalledFlushBuffer(include, portletResponse)[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_4 $$ PortletRequestImpl portletRequestImpl = PortletRequestImpl.getPortletRequestImpl(portletRequest)[ CD ]
Line_11 $$ String requestURI = null-->Line_41 $$ requestURI = contextPath + pathNoQueryString[ FD ]
Line_13 $$ if (_path != null) -->Line_15 $$ int pos = _path.indexOf(CharPool.QUESTION)[ CD ]
Line_4 $$ PortletRequestImpl portletRequestImpl = PortletRequestImpl.getPortletRequestImpl(portletRequest)-->Line_19 $$ httpServletRequest = createDynamicServletRequest(httpServletRequest, portletRequestImpl, toParameterMap(queryString))[ FD ]
Line_27 $$ if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) -->Line_29 $$ servletPath = urlPattern[ CD ]
Line_9 $$ String pathInfo = null-->Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_8 $$ httpServletRequest.setAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE, portletResponse)[ CD ]
Line_47 $$ if (urlEncoder != null) -->Line_49 $$ if (strutsURLEncoder) [ CD ]
Line_25 $$ if (urlPattern.endsWith("/*")) -->Line_27 $$ if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) [ CD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_8 $$ httpServletRequest.setAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE, portletResponse)[ FD ]
Line_13 $$ if (_path != null) -->Line_34 $$ if (pathInfo == null) [ CD ]
Line_26 $$ urlPattern = urlPattern.substring(0, urlPattern.length() - 2)-->Line_29 $$ servletPath = urlPattern[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_7 $$ httpServletRequest.setAttribute(JavaConstants.JAVAX_PORTLET_REQUEST, portletRequest)[ CD ]
Line_37 $$ String contextPath = portletRequest.getContextPath()-->Line_38 $$ if (contextPath.equals(StringPool.SLASH)) [ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_6 $$ HttpServletRequest httpServletRequest = PortalUtil.getHttpServletRequest(portletRequest)[ FD ]
Line_24 $$ for (String urlPattern : servletURLPatterns) -->Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())[ FD ]
Line_46 $$ URLEncoder urlEncoder = _portlet.getURLEncoderInstance()-->Line_48 $$ portletResponseImpl.setURLEncoder(urlEncoder)[ FD ]
Line_9 $$ String pathInfo = null-->Line_34 $$ if (pathInfo == null) [ FD ]
Line_18 $$ queryString = _path.substring(pos + 1)-->Line_19 $$ httpServletRequest = createDynamicServletRequest(httpServletRequest, portletRequestImpl, toParameterMap(queryString))[ FD ]
Line_26 $$ urlPattern = urlPattern.substring(0, urlPattern.length() - 2)-->Line_27 $$ if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) [ FD ]
Line_34 $$ if (pathInfo == null) -->Line_35 $$ pathInfo = pathNoQueryString[ CD ]
Line_17 $$ pathNoQueryString = _path.substring(0, pos)-->Line_39 $$ requestURI = pathNoQueryString[ FD ]
Line_22 $$ PortletApp portletApp = portlet.getPortletApp()-->Line_23 $$ Set<String> servletURLPatterns = portletApp.getServletURLPatterns()[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_9 $$ String pathInfo = null[ CD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_45 $$ PortletServletResponse portletServletResponse = new PortletServletResponse(PortalUtil.getHttpServletResponse(portletResponse), portletResponse, include)[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_47 $$ if (urlEncoder != null) [ CD ]
Line_38 $$ if (contextPath.equals(StringPool.SLASH)) -->Line_39 $$ requestURI = pathNoQueryString[ CD ]
Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())-->Line_35 $$ pathInfo = pathNoQueryString[ FD ]
Line_5 $$ PortletResponseImpl portletResponseImpl = PortletResponseImpl.getPortletResponseImpl(portletResponse)-->Line_52 $$ portletResponseImpl.setURLEncoder(strutsURLEncoderObj)[ FD ]
Line_17 $$ pathNoQueryString = _path.substring(0, pos)-->Line_41 $$ requestURI = contextPath + pathNoQueryString[ FD ]
Line_24 $$ for (String urlPattern : servletURLPatterns) -->Line_26 $$ urlPattern = urlPattern.substring(0, urlPattern.length() - 2)[ FD ]
Line_44 $$ PortletServletRequest portletServletRequest = new PortletServletRequest(httpServletRequest, portletRequest, pathInfo, queryString, requestURI, servletPath, _named, include)-->Line_51 $$ URLEncoder strutsURLEncoderObj = new StrutsURLEncoder(portletServletRequest.getContextPath(), themeDisplay.getPathMain(), (String) _liferayPortletContext.getAttribute(Globals.SERVLET_KEY), (LiferayPortletURL) portletResponseImpl.createRenderURL())[ FD ]
Line_14 $$ String pathNoQueryString = _path-->Line_27 $$ if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) [ FD ]
Line_13 $$ if (_path != null) -->Line_16 $$ if (pos != -1) [ CD ]
Line_24 $$ for (String urlPattern : servletURLPatterns) -->Line_29 $$ servletPath = urlPattern[ FD ]
Line_13 $$ if (_path != null) -->Line_38 $$ if (contextPath.equals(StringPool.SLASH)) [ CD ]
Line_47 $$ if (urlEncoder != null) -->Line_48 $$ portletResponseImpl.setURLEncoder(urlEncoder)[ CD ]
Line_21 $$ Portlet portlet = portletRequestImpl.getPortlet()-->Line_22 $$ PortletApp portletApp = portlet.getPortletApp()[ FD ]
Line_14 $$ String pathNoQueryString = _path-->Line_35 $$ pathInfo = pathNoQueryString[ FD ]
Line_17 $$ pathNoQueryString = _path.substring(0, pos)-->Line_35 $$ pathInfo = pathNoQueryString[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_44 $$ PortletServletRequest portletServletRequest = new PortletServletRequest(httpServletRequest, portletRequest, pathInfo, queryString, requestURI, servletPath, _named, include)[ CD ]
Line_6 $$ HttpServletRequest httpServletRequest = PortalUtil.getHttpServletRequest(portletRequest)-->Line_19 $$ httpServletRequest = createDynamicServletRequest(httpServletRequest, portletRequestImpl, toParameterMap(queryString))[ FD ]
Line_46 $$ URLEncoder urlEncoder = _portlet.getURLEncoderInstance()-->Line_47 $$ if (urlEncoder != null) [ FD ]
Line_17 $$ pathNoQueryString = _path.substring(0, pos)-->Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())[ FD ]
Line_26 $$ urlPattern = urlPattern.substring(0, urlPattern.length() - 2)-->Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())[ FD ]
Line_6 $$ HttpServletRequest httpServletRequest = PortalUtil.getHttpServletRequest(portletRequest)-->Line_7 $$ httpServletRequest.setAttribute(JavaConstants.JAVAX_PORTLET_REQUEST, portletRequest)[ FD ]
Line_13 $$ if (_path != null) -->Line_37 $$ String contextPath = portletRequest.getContextPath()[ CD ]
Line_55 $$ if (include) -->Line_56 $$ _requestDispatcher.include(portletServletRequest, portletServletResponse)[ CD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_6 $$ HttpServletRequest httpServletRequest = PortalUtil.getHttpServletRequest(portletRequest)[ CD ]
Line_12 $$ String servletPath = null-->Line_29 $$ servletPath = urlPattern[ FD ]
Line_13 $$ if (_path != null) -->Line_22 $$ PortletApp portletApp = portlet.getPortletApp()[ CD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_3 $$ checkCalledFlushBuffer(include, portletResponse)[ CD ]
Line_24 $$ for (String urlPattern : servletURLPatterns) -->Line_25 $$ if (urlPattern.endsWith("/*")) [ FD ]
Line_37 $$ String contextPath = portletRequest.getContextPath()-->Line_41 $$ requestURI = contextPath + pathNoQueryString[ FD ]
Line_15 $$ int pos = _path.indexOf(CharPool.QUESTION)-->Line_16 $$ if (pos != -1) [ FD ]
Line_6 $$ HttpServletRequest httpServletRequest = PortalUtil.getHttpServletRequest(portletRequest)-->Line_8 $$ httpServletRequest.setAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE, portletResponse)[ FD ]
Line_16 $$ if (pos != -1) -->Line_17 $$ pathNoQueryString = _path.substring(0, pos)[ CD ]
Line_14 $$ String pathNoQueryString = _path-->Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())[ FD ]
Line_39 $$ requestURI = pathNoQueryString-->Line_41 $$ requestURI = contextPath + pathNoQueryString[ FD ]
Line_11 $$ String requestURI = null-->Line_39 $$ requestURI = pathNoQueryString[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_47 $$ if (urlEncoder != null) [ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_4 $$ PortletRequestImpl portletRequestImpl = PortletRequestImpl.getPortletRequestImpl(portletRequest)[ FD ]
Line_14 $$ String pathNoQueryString = _path-->Line_17 $$ pathNoQueryString = _path.substring(0, pos)[ FD ]
Line_50 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)-->Line_51 $$ URLEncoder strutsURLEncoderObj = new StrutsURLEncoder(portletServletRequest.getContextPath(), themeDisplay.getPathMain(), (String) _liferayPortletContext.getAttribute(Globals.SERVLET_KEY), (LiferayPortletURL) portletResponseImpl.createRenderURL())[ FD ]
Line_55 $$ if (include) -->Line_58 $$ _requestDispatcher.forward(portletServletRequest, portletServletResponse)[ CD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_5 $$ PortletResponseImpl portletResponseImpl = PortletResponseImpl.getPortletResponseImpl(portletResponse)[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_5 $$ PortletResponseImpl portletResponseImpl = PortletResponseImpl.getPortletResponseImpl(portletResponse)[ CD ]
Line_24 $$ for (String urlPattern : servletURLPatterns) -->Line_27 $$ if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) [ FD ]
Line_45 $$ PortletServletResponse portletServletResponse = new PortletServletResponse(PortalUtil.getHttpServletResponse(portletResponse), portletResponse, include)-->Line_58 $$ _requestDispatcher.forward(portletServletRequest, portletServletResponse)[ FD ]
Line_44 $$ PortletServletRequest portletServletRequest = new PortletServletRequest(httpServletRequest, portletRequest, pathInfo, queryString, requestURI, servletPath, _named, include)-->Line_56 $$ _requestDispatcher.include(portletServletRequest, portletServletResponse)[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_50 $$ ThemeDisplay themeDisplay = (ThemeDisplay) portletRequest.getAttribute(WebKeys.THEME_DISPLAY)[ FD ]
Line_51 $$ URLEncoder strutsURLEncoderObj = new StrutsURLEncoder(portletServletRequest.getContextPath(), themeDisplay.getPathMain(), (String) _liferayPortletContext.getAttribute(Globals.SERVLET_KEY), (LiferayPortletURL) portletResponseImpl.createRenderURL())-->Line_52 $$ portletResponseImpl.setURLEncoder(strutsURLEncoderObj)[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_10 $$ String queryString = null[ CD ]
Line_45 $$ PortletServletResponse portletServletResponse = new PortletServletResponse(PortalUtil.getHttpServletResponse(portletResponse), portletResponse, include)-->Line_56 $$ _requestDispatcher.include(portletServletRequest, portletServletResponse)[ FD ]
Line_16 $$ if (pos != -1) -->Line_19 $$ httpServletRequest = createDynamicServletRequest(httpServletRequest, portletRequestImpl, toParameterMap(queryString))[ CD ]
Line_13 $$ if (_path != null) -->Line_21 $$ Portlet portlet = portletRequestImpl.getPortlet()[ CD ]
Line_9 $$ String pathInfo = null-->Line_35 $$ pathInfo = pathNoQueryString[ FD ]
Line_14 $$ String pathNoQueryString = _path-->Line_39 $$ requestURI = pathNoQueryString[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_45 $$ PortletServletResponse portletServletResponse = new PortletServletResponse(PortalUtil.getHttpServletResponse(portletResponse), portletResponse, include)[ CD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_46 $$ URLEncoder urlEncoder = _portlet.getURLEncoderInstance()[ CD ]
Line_13 $$ if (_path != null) -->Line_14 $$ String pathNoQueryString = _path[ CD ]
Line_10 $$ String queryString = null-->Line_19 $$ httpServletRequest = createDynamicServletRequest(httpServletRequest, portletRequestImpl, toParameterMap(queryString))[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_11 $$ String requestURI = null[ CD ]
Line_27 $$ if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) -->Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())[ CD ]
Line_5 $$ PortletResponseImpl portletResponseImpl = PortletResponseImpl.getPortletResponseImpl(portletResponse)-->Line_51 $$ URLEncoder strutsURLEncoderObj = new StrutsURLEncoder(portletServletRequest.getContextPath(), themeDisplay.getPathMain(), (String) _liferayPortletContext.getAttribute(Globals.SERVLET_KEY), (LiferayPortletURL) portletResponseImpl.createRenderURL())[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_7 $$ httpServletRequest.setAttribute(JavaConstants.JAVAX_PORTLET_REQUEST, portletRequest)[ FD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_37 $$ String contextPath = portletRequest.getContextPath()[ FD ]
Line_5 $$ PortletResponseImpl portletResponseImpl = PortletResponseImpl.getPortletResponseImpl(portletResponse)-->Line_48 $$ portletResponseImpl.setURLEncoder(urlEncoder)[ FD ]
Line_16 $$ if (pos != -1) -->Line_18 $$ queryString = _path.substring(pos + 1)[ CD ]
Line_25 $$ if (urlPattern.endsWith("/*")) -->Line_26 $$ urlPattern = urlPattern.substring(0, urlPattern.length() - 2)[ CD ]
Line_49 $$ if (strutsURLEncoder) -->Line_52 $$ portletResponseImpl.setURLEncoder(strutsURLEncoderObj)[ CD ]
Line_2 $$ protected void dispatch(PortletRequest portletRequest, PortletResponse portletResponse, boolean strutsURLEncoder, boolean include) throws IOException, PortletException -->Line_13 $$ if (_path != null) [ CD ]
Line_10 $$ String queryString = null-->Line_18 $$ queryString = _path.substring(pos + 1)[ FD ]
Line_38 $$ if (contextPath.equals(StringPool.SLASH)) -->Line_41 $$ requestURI = contextPath + pathNoQueryString[ CD ]
Line_44 $$ PortletServletRequest portletServletRequest = new PortletServletRequest(httpServletRequest, portletRequest, pathInfo, queryString, requestURI, servletPath, _named, include)-->Line_58 $$ _requestDispatcher.forward(portletServletRequest, portletServletResponse)[ FD ]
Line_15 $$ int pos = _path.indexOf(CharPool.QUESTION)-->Line_17 $$ pathNoQueryString = _path.substring(0, pos)[ FD ]
Line_28 $$ pathInfo = pathNoQueryString.substring(urlPattern.length())-->Line_34 $$ if (pathInfo == null) [ FD ]
Line_17 $$ pathNoQueryString = _path.substring(0, pos)-->Line_27 $$ if ((pathNoQueryString.length() > urlPattern.length()) && pathNoQueryString.startsWith(urlPattern) && (pathNoQueryString.charAt(urlPattern.length()) == CharPool.SLASH)) [ FD ]
Line_14 $$ String pathNoQueryString = _path-->Line_41 $$ requestURI = contextPath + pathNoQueryString[ FD ]
