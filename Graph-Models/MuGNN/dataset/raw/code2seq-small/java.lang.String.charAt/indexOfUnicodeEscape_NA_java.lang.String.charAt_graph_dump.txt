Line_11 $$ while (previousChar >= 0 && text.charAt(previousChar) == '\\') -->Line_12 $$ isEscape = !isEscape[ CD ]
Line_11 $$ while (previousChar >= 0 && text.charAt(previousChar) == '\\') -->Line_13 $$ previousChar--[ CD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_3 $$ final int length = text.length()[ FD ]
Line_9 $$ boolean isEscape = true-->Line_15 $$ if (!isEscape) [ FD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_31 $$ if (offset <= escapeEnd) [ FD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_15 $$ if (!isEscape) [ CD ]
Line_9 $$ boolean isEscape = true-->Line_12 $$ isEscape = !isEscape[ FD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_11 $$ while (previousChar >= 0 && text.charAt(previousChar) == '\\') [ CD ]
Line_19 $$ do -->Line_21 $$ if (nextChar >= length) [ CD ]
Line_10 $$ int previousChar = i - 1-->Line_11 $$ while (previousChar >= 0 && text.charAt(previousChar) == '\\') [ FD ]
Line_5 $$ final char c = text.charAt(i)-->Line_6 $$ if (c != '\\') [ FD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_6 $$ if (c != '\\') [ CD ]
Line_3 $$ final int length = text.length()-->Line_4 $$ for (int i = 0; i < length; i++) [ FD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_19 $$ do [ CD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_26 $$ if (nextChar == i + 1 || nextChar + 3 >= length) [ CD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_29 $$ if (StringUtil.isHexDigit(text.charAt(nextChar)) && StringUtil.isHexDigit(text.charAt(nextChar + 1)) && StringUtil.isHexDigit(text.charAt(nextChar + 2)) && StringUtil.isHexDigit(text.charAt(nextChar + 3))) [ FD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_9 $$ boolean isEscape = true[ CD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_5 $$ final char c = text.charAt(i)[ CD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_29 $$ if (StringUtil.isHexDigit(text.charAt(nextChar)) && StringUtil.isHexDigit(text.charAt(nextChar + 1)) && StringUtil.isHexDigit(text.charAt(nextChar + 2)) && StringUtil.isHexDigit(text.charAt(nextChar + 3))) [ CD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_3 $$ final int length = text.length()[ CD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_5 $$ final char c = text.charAt(i)[ FD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_4 $$ for (int i = 0; i < length; i++) [ CD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_5 $$ final char c = text.charAt(i)[ FD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_19 $$ do [ FD ]
Line_3 $$ final int length = text.length()-->Line_21 $$ if (nextChar >= length) [ FD ]
Line_12 $$ isEscape = !isEscape-->Line_15 $$ if (!isEscape) [ FD ]
Line_29 $$ if (StringUtil.isHexDigit(text.charAt(nextChar)) && StringUtil.isHexDigit(text.charAt(nextChar + 1)) && StringUtil.isHexDigit(text.charAt(nextChar + 2)) && StringUtil.isHexDigit(text.charAt(nextChar + 3))) -->Line_31 $$ if (offset <= escapeEnd) [ CD ]
Line_4 $$ for (int i = 0; i < length; i++) -->Line_10 $$ int previousChar = i - 1[ CD ]
Line_31 $$ if (offset <= escapeEnd) -->Line_32 $$ return i[ CD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_36 $$ return -1[ CD ]
Line_2 $$ private static int indexOfUnicodeEscape(@NotNull String text, int offset) -->Line_11 $$ while (previousChar >= 0 && text.charAt(previousChar) == '\\') [ FD ]
Line_10 $$ int previousChar = i - 1-->Line_13 $$ previousChar--[ FD ]
