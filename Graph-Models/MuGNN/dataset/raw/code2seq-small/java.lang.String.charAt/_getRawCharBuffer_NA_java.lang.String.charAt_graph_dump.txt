Line_6 $$ if (!_validChars.get(rawChar) && (escapeSpaces || (rawChar != CharPool.SPACE))) -->Line_7 $$ count++[ CD ]
Line_4 $$ for (int i = start; i < rawString.length(); i++) -->Line_10 $$ i++[ FD ]
Line_9 $$ if (((i + 1) < rawString.length()) && Character.isLowSurrogate(rawString.charAt(i + 1))) -->Line_10 $$ i++[ CD ]
Line_2 $$ private static CharBuffer _getRawCharBuffer(String rawString, int start, boolean escapeSpaces) -->Line_4 $$ for (int i = start; i < rawString.length(); i++) [ CD ]
Line_8 $$ if (Character.isHighSurrogate(rawChar)) -->Line_9 $$ if (((i + 1) < rawString.length()) && Character.isLowSurrogate(rawString.charAt(i + 1))) [ CD ]
Line_5 $$ char rawChar = rawString.charAt(i)-->Line_6 $$ if (!_validChars.get(rawChar) && (escapeSpaces || (rawChar != CharPool.SPACE))) [ FD ]
Line_5 $$ char rawChar = rawString.charAt(i)-->Line_8 $$ if (Character.isHighSurrogate(rawChar)) [ FD ]
Line_6 $$ if (!_validChars.get(rawChar) && (escapeSpaces || (rawChar != CharPool.SPACE))) -->Line_8 $$ if (Character.isHighSurrogate(rawChar)) [ CD ]
Line_2 $$ private static CharBuffer _getRawCharBuffer(String rawString, int start, boolean escapeSpaces) -->Line_3 $$ int count = 0[ CD ]
Line_2 $$ private static CharBuffer _getRawCharBuffer(String rawString, int start, boolean escapeSpaces) -->Line_18 $$ return CharBuffer.wrap(rawString, start, start + count)[ CD ]
Line_3 $$ int count = 0-->Line_11 $$ count++[ FD ]
Line_9 $$ if (((i + 1) < rawString.length()) && Character.isLowSurrogate(rawString.charAt(i + 1))) -->Line_11 $$ count++[ CD ]
Line_4 $$ for (int i = start; i < rawString.length(); i++) -->Line_6 $$ if (!_validChars.get(rawChar) && (escapeSpaces || (rawChar != CharPool.SPACE))) [ CD ]
Line_4 $$ for (int i = start; i < rawString.length(); i++) -->Line_5 $$ char rawChar = rawString.charAt(i)[ FD ]
Line_2 $$ private static CharBuffer _getRawCharBuffer(String rawString, int start, boolean escapeSpaces) -->Line_5 $$ char rawChar = rawString.charAt(i)[ FD ]
Line_2 $$ private static CharBuffer _getRawCharBuffer(String rawString, int start, boolean escapeSpaces) -->Line_18 $$ return CharBuffer.wrap(rawString, start, start + count)[ FD ]
Line_3 $$ int count = 0-->Line_7 $$ count++[ FD ]
Line_4 $$ for (int i = start; i < rawString.length(); i++) -->Line_5 $$ char rawChar = rawString.charAt(i)[ CD ]
Line_2 $$ private static CharBuffer _getRawCharBuffer(String rawString, int start, boolean escapeSpaces) -->Line_9 $$ if (((i + 1) < rawString.length()) && Character.isLowSurrogate(rawString.charAt(i + 1))) [ FD ]
Line_2 $$ private static CharBuffer _getRawCharBuffer(String rawString, int start, boolean escapeSpaces) -->Line_4 $$ for (int i = start; i < rawString.length(); i++) [ FD ]
