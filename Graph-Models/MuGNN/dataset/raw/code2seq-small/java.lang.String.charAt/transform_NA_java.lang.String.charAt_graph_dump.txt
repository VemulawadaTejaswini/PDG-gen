Line_2 $$ public Version transform(String original) -->Line_44 $$ DefaultVersion base = null[ CD ]
Line_36 $$ startPart = pos-->Line_42 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_2 $$ public Version transform(String original) -->Line_12 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_11 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_19 $$ if (ch >= '0' && ch <= '9') [ CD ]
Line_30 $$ if (digit) -->Line_36 $$ startPart = pos[ CD ]
Line_22 $$ endBase = parts.size() + 1-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_23 $$ endBaseStr = pos-->Line_21 $$ if (endBaseStr == 0) [ FD ]
Line_6 $$ int pos = 0-->Line_42 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_2 $$ public Version transform(String original) -->Line_6 $$ int pos = 0[ CD ]
Line_5 $$ int startPart = 0-->Line_41 $$ if (pos > startPart) [ FD ]
Line_36 $$ startPart = pos-->Line_35 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_26 $$ startPart = pos-->Line_25 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_5 $$ int startPart = 0-->Line_13 $$ startPart = pos + 1[ FD ]
Line_2 $$ public Version transform(String original) -->Line_35 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_13 $$ startPart = pos + 1-->Line_25 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_7 $$ int endBase = 0-->Line_32 $$ endBase = parts.size() + 1[ FD ]
Line_31 $$ if (endBaseStr == 0) -->Line_33 $$ endBaseStr = pos[ CD ]
Line_36 $$ startPart = pos-->Line_12 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_36 $$ startPart = pos-->Line_25 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_23 $$ endBaseStr = pos-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_26 $$ startPart = pos-->Line_12 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_33 $$ endBaseStr = pos-->Line_21 $$ if (endBaseStr == 0) [ FD ]
Line_7 $$ int endBase = 0-->Line_16 $$ endBase = parts.size()[ FD ]
Line_6 $$ int pos = 0-->Line_23 $$ endBaseStr = pos[ FD ]
Line_30 $$ if (digit) -->Line_31 $$ if (endBaseStr == 0) [ CD ]
Line_8 $$ int endBaseStr = 0-->Line_31 $$ if (endBaseStr == 0) [ FD ]
Line_8 $$ int endBaseStr = 0-->Line_45 $$ if (endBaseStr > 0) [ FD ]
Line_5 $$ int startPart = 0-->Line_25 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_2 $$ public Version transform(String original) -->Line_41 $$ if (pos > startPart) [ CD ]
Line_4 $$ boolean digit = false-->Line_20 $$ if (!digit && pos > startPart) [ FD ]
Line_2 $$ public Version transform(String original) -->Line_9 $$ for (; pos < original.length(); pos++) [ CD ]
Line_21 $$ if (endBaseStr == 0) -->Line_22 $$ endBase = parts.size() + 1[ CD ]
Line_2 $$ public Version transform(String original) -->Line_48 $$ return new DefaultVersion(original, parts, base)[ CD ]
Line_8 $$ int endBaseStr = 0-->Line_23 $$ endBaseStr = pos[ FD ]
Line_13 $$ startPart = pos + 1-->Line_12 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_7 $$ int endBase = 0-->Line_22 $$ endBase = parts.size() + 1[ FD ]
Line_23 $$ endBaseStr = pos-->Line_45 $$ if (endBaseStr > 0) [ FD ]
Line_13 $$ startPart = pos + 1-->Line_35 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_2 $$ public Version transform(String original) -->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_14 $$ digit = false-->Line_28 $$ digit = true[ FD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_12 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_33 $$ endBaseStr = pos-->Line_31 $$ if (endBaseStr == 0) [ FD ]
Line_45 $$ if (endBaseStr > 0) -->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ CD ]
Line_31 $$ if (endBaseStr == 0) -->Line_32 $$ endBase = parts.size() + 1[ CD ]
Line_5 $$ int startPart = 0-->Line_12 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_35 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_26 $$ startPart = pos-->Line_41 $$ if (pos > startPart) [ FD ]
Line_28 $$ digit = true-->Line_20 $$ if (!digit && pos > startPart) [ FD ]
Line_28 $$ digit = true-->Line_38 $$ digit = false[ FD ]
Line_8 $$ int endBaseStr = 0-->Line_33 $$ endBaseStr = pos[ FD ]
Line_2 $$ public Version transform(String original) -->Line_7 $$ int endBase = 0[ CD ]
Line_13 $$ startPart = pos + 1-->Line_26 $$ startPart = pos[ FD ]
Line_2 $$ public Version transform(String original) -->Line_9 $$ for (; pos < original.length(); pos++) [ FD ]
Line_23 $$ endBaseStr = pos-->Line_33 $$ endBaseStr = pos[ FD ]
Line_6 $$ int pos = 0-->Line_36 $$ startPart = pos[ FD ]
Line_26 $$ startPart = pos-->Line_35 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_36 $$ startPart = pos-->Line_41 $$ if (pos > startPart) [ FD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_16 $$ endBase = parts.size()[ FD ]
Line_33 $$ endBaseStr = pos-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_14 $$ digit = false-->Line_20 $$ if (!digit && pos > startPart) [ FD ]
Line_19 $$ if (ch >= '0' && ch <= '9') -->Line_28 $$ digit = true[ CD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_42 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_17 $$ endBaseStr = pos-->Line_31 $$ if (endBaseStr == 0) [ FD ]
Line_4 $$ boolean digit = false-->Line_14 $$ digit = false[ FD ]
Line_6 $$ int pos = 0-->Line_41 $$ if (pos > startPart) [ FD ]
Line_5 $$ int startPart = 0-->Line_35 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_38 $$ digit = false-->Line_20 $$ if (!digit && pos > startPart) [ FD ]
Line_8 $$ int endBaseStr = 0-->Line_17 $$ endBaseStr = pos[ FD ]
Line_17 $$ endBaseStr = pos-->Line_33 $$ endBaseStr = pos[ FD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_25 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_6 $$ int pos = 0-->Line_12 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_30 $$ if (digit) -->Line_35 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_6 $$ int pos = 0-->Line_25 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_13 $$ startPart = pos + 1-->Line_42 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_32 $$ endBase = parts.size() + 1-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_2 $$ public Version transform(String original) -->Line_10 $$ char ch = original.charAt(pos)[ FD ]
Line_6 $$ int pos = 0-->Line_13 $$ startPart = pos + 1[ FD ]
Line_23 $$ endBaseStr = pos-->Line_31 $$ if (endBaseStr == 0) [ FD ]
Line_15 $$ if (ch != '.' && endBaseStr == 0) -->Line_16 $$ endBase = parts.size()[ CD ]
Line_6 $$ int pos = 0-->Line_33 $$ endBaseStr = pos[ FD ]
Line_9 $$ for (; pos < original.length(); pos++) -->Line_10 $$ char ch = original.charAt(pos)[ CD ]
Line_5 $$ int startPart = 0-->Line_42 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_13 $$ startPart = pos + 1-->Line_41 $$ if (pos > startPart) [ FD ]
Line_16 $$ endBase = parts.size()-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_26 $$ startPart = pos-->Line_42 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_19 $$ if (ch >= '0' && ch <= '9') -->Line_20 $$ if (!digit && pos > startPart) [ CD ]
Line_2 $$ public Version transform(String original) -->Line_42 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_21 $$ if (endBaseStr == 0) -->Line_23 $$ endBaseStr = pos[ CD ]
Line_20 $$ if (!digit && pos > startPart) -->Line_25 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_17 $$ endBaseStr = pos-->Line_23 $$ endBaseStr = pos[ FD ]
Line_2 $$ public Version transform(String original) -->Line_8 $$ int endBaseStr = 0[ CD ]
Line_19 $$ if (ch >= '0' && ch <= '9') -->Line_38 $$ digit = false[ CD ]
Line_8 $$ int endBaseStr = 0-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_32 $$ endBase = parts.size() + 1[ FD ]
Line_9 $$ for (; pos < original.length(); pos++) -->Line_11 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') [ CD ]
Line_11 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_14 $$ digit = false[ CD ]
Line_2 $$ public Version transform(String original) -->Line_4 $$ boolean digit = false[ CD ]
Line_8 $$ int endBaseStr = 0-->Line_21 $$ if (endBaseStr == 0) [ FD ]
Line_19 $$ if (ch >= '0' && ch <= '9') -->Line_30 $$ if (digit) [ CD ]
Line_16 $$ endBase = parts.size()-->Line_22 $$ endBase = parts.size() + 1[ FD ]
Line_41 $$ if (pos > startPart) -->Line_42 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_4 $$ boolean digit = false-->Line_28 $$ digit = true[ FD ]
Line_44 $$ DefaultVersion base = null-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_11 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_12 $$ parts.add(original.substring(startPart, pos))[ CD ]
Line_4 $$ boolean digit = false-->Line_38 $$ digit = false[ FD ]
Line_14 $$ digit = false-->Line_38 $$ digit = false[ FD ]
Line_6 $$ int pos = 0-->Line_9 $$ for (; pos < original.length(); pos++) [ FD ]
Line_11 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_13 $$ startPart = pos + 1[ CD ]
Line_2 $$ public Version transform(String original) -->Line_25 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_2 $$ public Version transform(String original) -->Line_45 $$ if (endBaseStr > 0) [ CD ]
Line_17 $$ endBaseStr = pos-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_20 $$ if (!digit && pos > startPart) -->Line_26 $$ startPart = pos[ CD ]
Line_5 $$ int startPart = 0-->Line_36 $$ startPart = pos[ FD ]
Line_3 $$ List<String> parts = new ArrayList<String>()-->Line_22 $$ endBase = parts.size() + 1[ FD ]
Line_5 $$ int startPart = 0-->Line_26 $$ startPart = pos[ FD ]
Line_7 $$ int endBase = 0-->Line_46 $$ base = new DefaultVersion(original.substring(0, endBaseStr), parts.subList(0, endBase), null)[ FD ]
Line_6 $$ int pos = 0-->Line_26 $$ startPart = pos[ FD ]
Line_6 $$ int pos = 0-->Line_10 $$ char ch = original.charAt(pos)[ FD ]
Line_22 $$ endBase = parts.size() + 1-->Line_32 $$ endBase = parts.size() + 1[ FD ]
Line_17 $$ endBaseStr = pos-->Line_21 $$ if (endBaseStr == 0) [ FD ]
Line_26 $$ startPart = pos-->Line_36 $$ startPart = pos[ FD ]
Line_17 $$ endBaseStr = pos-->Line_45 $$ if (endBaseStr > 0) [ FD ]
Line_6 $$ int pos = 0-->Line_17 $$ endBaseStr = pos[ FD ]
Line_11 $$ if (ch == '.' || ch == '_' || ch == '-' || ch == '+') -->Line_15 $$ if (ch != '.' && endBaseStr == 0) [ CD ]
Line_13 $$ startPart = pos + 1-->Line_36 $$ startPart = pos[ FD ]
Line_16 $$ endBase = parts.size()-->Line_32 $$ endBase = parts.size() + 1[ FD ]
Line_2 $$ public Version transform(String original) -->Line_3 $$ List<String> parts = new ArrayList<String>()[ CD ]
Line_20 $$ if (!digit && pos > startPart) -->Line_21 $$ if (endBaseStr == 0) [ CD ]
Line_6 $$ int pos = 0-->Line_35 $$ parts.add(original.substring(startPart, pos))[ FD ]
Line_2 $$ public Version transform(String original) -->Line_5 $$ int startPart = 0[ CD ]
Line_33 $$ endBaseStr = pos-->Line_45 $$ if (endBaseStr > 0) [ FD ]
Line_15 $$ if (ch != '.' && endBaseStr == 0) -->Line_17 $$ endBaseStr = pos[ CD ]
