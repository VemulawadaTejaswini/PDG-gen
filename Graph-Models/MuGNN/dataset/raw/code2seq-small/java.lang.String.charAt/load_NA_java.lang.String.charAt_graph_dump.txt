Line_11 $$ reader = new BufferedReader(new FileReader(filename))-->Line_29 $$ if (reader != null) [ FD ]
Line_12 $$ String line = reader.readLine()-->Line_14 $$ line = line.trim()[ FD ]
Line_17 $$ if (columns.length == 2) -->Line_20 $$ LOG.warn("Line does not have two columns. Ignoring. " + line)[ CD ]
Line_9 $$ BufferedReader reader = null-->Line_31 $$ reader.close()[ FD ]
Line_2 $$ private Map<String, String> load() -->Line_5 $$ if (StringUtils.isBlank(filename)) [ CD ]
Line_9 $$ BufferedReader reader = null-->Line_23 $$ line = reader.readLine()[ FD ]
Line_2 $$ private Map<String, String> load() -->Line_9 $$ BufferedReader reader = null[ CD ]
Line_12 $$ String line = reader.readLine()-->Line_23 $$ line = reader.readLine()[ FD ]
Line_14 $$ line = line.trim()-->Line_15 $$ if (line.length() != 0 && line.charAt(0) != '#') [ FD ]
Line_23 $$ line = reader.readLine()-->Line_14 $$ line = line.trim()[ FD ]
Line_2 $$ private Map<String, String> load() -->Line_38 $$ return loadMap[ CD ]
Line_15 $$ if (line.length() != 0 && line.charAt(0) != '#') -->Line_16 $$ String[] columns = line.split("\\s+")[ CD ]
Line_9 $$ BufferedReader reader = null-->Line_11 $$ reader = new BufferedReader(new FileReader(filename))[ FD ]
Line_23 $$ line = reader.readLine()-->Line_15 $$ if (line.length() != 0 && line.charAt(0) != '#') [ FD ]
Line_5 $$ if (StringUtils.isBlank(filename)) -->Line_6 $$ LOG.warn(NET_TOPOLOGY_TABLE_MAPPING_FILE_KEY + " not configured. ")[ CD ]
Line_15 $$ if (line.length() != 0 && line.charAt(0) != '#') -->Line_17 $$ if (columns.length == 2) [ CD ]
Line_5 $$ if (StringUtils.isBlank(filename)) -->Line_7 $$ return null[ CD ]
Line_2 $$ private Map<String, String> load() -->Line_4 $$ String filename = getConf().get(NET_TOPOLOGY_TABLE_MAPPING_FILE_KEY, null)[ CD ]
Line_9 $$ BufferedReader reader = null-->Line_29 $$ if (reader != null) [ FD ]
Line_12 $$ String line = reader.readLine()-->Line_13 $$ while (line != null) [ FD ]
Line_17 $$ if (columns.length == 2) -->Line_18 $$ loadMap.put(columns[0], columns[1])[ CD ]
Line_11 $$ reader = new BufferedReader(new FileReader(filename))-->Line_31 $$ reader.close()[ FD ]
Line_2 $$ private Map<String, String> load() -->Line_3 $$ Map<String, String> loadMap = new HashMap<String, String>()[ CD ]
Line_3 $$ Map<String, String> loadMap = new HashMap<String, String>()-->Line_18 $$ loadMap.put(columns[0], columns[1])[ FD ]
Line_23 $$ line = reader.readLine()-->Line_13 $$ while (line != null) [ FD ]
Line_12 $$ String line = reader.readLine()-->Line_16 $$ String[] columns = line.split("\\s+")[ FD ]
Line_13 $$ while (line != null) -->Line_23 $$ line = reader.readLine()[ CD ]
Line_12 $$ String line = reader.readLine()-->Line_15 $$ if (line.length() != 0 && line.charAt(0) != '#') [ FD ]
Line_14 $$ line = line.trim()-->Line_13 $$ while (line != null) [ FD ]
Line_9 $$ BufferedReader reader = null-->Line_12 $$ String line = reader.readLine()[ FD ]
Line_23 $$ line = reader.readLine()-->Line_16 $$ String[] columns = line.split("\\s+")[ FD ]
Line_14 $$ line = line.trim()-->Line_16 $$ String[] columns = line.split("\\s+")[ FD ]
Line_4 $$ String filename = getConf().get(NET_TOPOLOGY_TABLE_MAPPING_FILE_KEY, null)-->Line_5 $$ if (StringUtils.isBlank(filename)) [ FD ]
Line_11 $$ reader = new BufferedReader(new FileReader(filename))-->Line_12 $$ String line = reader.readLine()[ FD ]
Line_14 $$ line = line.trim()-->Line_23 $$ line = reader.readLine()[ FD ]
Line_13 $$ while (line != null) -->Line_14 $$ line = line.trim()[ CD ]
Line_13 $$ while (line != null) -->Line_15 $$ if (line.length() != 0 && line.charAt(0) != '#') [ CD ]
Line_11 $$ reader = new BufferedReader(new FileReader(filename))-->Line_23 $$ line = reader.readLine()[ FD ]
