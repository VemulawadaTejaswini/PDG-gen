Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)-->Line_12 $$ sb.append('\t')[ FD ]
Line_11 $$ if (c == 't')-->Line_12 $$ sb.append('\t')[ CD ]
Line_6 $$ char c = token.charAt(i)-->Line_9 $$ if (c == 'n')[ FD ]
Line_6 $$ char c = token.charAt(i)-->Line_16 $$ sb.append(c)[ FD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_4 $$ int i = 1[ CD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_22 $$ return sb.toString()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)-->Line_10 $$ sb.append('\n')[ FD ]
Line_8 $$ c = token.charAt(++i)-->Line_11 $$ if (c == 't')[ FD ]
Line_13 $$ if (c == 'f')-->Line_16 $$ sb.append(c)[ CD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_6 $$ char c = token.charAt(i)[ FD ]
Line_5 $$ while (i < token.length() - 1) -->Line_20 $$ i++[ CD ]
Line_8 $$ c = token.charAt(++i)-->Line_9 $$ if (c == 'n')[ FD ]
Line_5 $$ while (i < token.length() - 1) -->Line_7 $$ if (c == '\\') [ CD ]
Line_6 $$ char c = token.charAt(i)-->Line_18 $$ sb.append(c)[ FD ]
Line_13 $$ if (c == 'f')-->Line_14 $$ sb.append('\f')[ CD ]
Line_4 $$ int i = 1-->Line_8 $$ c = token.charAt(++i)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)-->Line_14 $$ sb.append('\f')[ FD ]
Line_11 $$ if (c == 't')-->Line_13 $$ if (c == 'f')[ CD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_8 $$ c = token.charAt(++i)[ FD ]
Line_7 $$ if (c == '\\') -->Line_9 $$ if (c == 'n')[ CD ]
Line_6 $$ char c = token.charAt(i)-->Line_8 $$ c = token.charAt(++i)[ FD ]
Line_5 $$ while (i < token.length() - 1) -->Line_6 $$ char c = token.charAt(i)[ CD ]
Line_4 $$ int i = 1-->Line_6 $$ char c = token.charAt(i)[ FD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_5 $$ while (i < token.length() - 1) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)-->Line_16 $$ sb.append(c)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)-->Line_22 $$ return sb.toString()[ FD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)[ CD ]
Line_4 $$ int i = 1-->Line_20 $$ i++[ FD ]
Line_6 $$ char c = token.charAt(i)-->Line_7 $$ if (c == '\\') [ FD ]
Line_6 $$ char c = token.charAt(i)-->Line_11 $$ if (c == 't')[ FD ]
Line_4 $$ int i = 1-->Line_5 $$ while (i < token.length() - 1) [ FD ]
Line_8 $$ c = token.charAt(++i)-->Line_16 $$ sb.append(c)[ FD ]
Line_8 $$ c = token.charAt(++i)-->Line_7 $$ if (c == '\\') [ FD ]
Line_9 $$ if (c == 'n')-->Line_10 $$ sb.append('\n')[ CD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_5 $$ while (i < token.length() - 1) [ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)-->Line_18 $$ sb.append(c)[ FD ]
Line_9 $$ if (c == 'n')-->Line_11 $$ if (c == 't')[ CD ]
Line_8 $$ c = token.charAt(++i)-->Line_18 $$ sb.append(c)[ FD ]
Line_6 $$ char c = token.charAt(i)-->Line_13 $$ if (c == 'f')[ FD ]
Line_8 $$ c = token.charAt(++i)-->Line_13 $$ if (c == 'f')[ FD ]
Line_2 $$ private static String parseStringLiteral(String token) -->Line_3 $$ StringBuilder sb = new StringBuilder(token.length() - 2)[ FD ]
Line_7 $$ if (c == '\\') -->Line_8 $$ c = token.charAt(++i)[ CD ]
Line_7 $$ if (c == '\\') -->Line_18 $$ sb.append(c)[ CD ]
