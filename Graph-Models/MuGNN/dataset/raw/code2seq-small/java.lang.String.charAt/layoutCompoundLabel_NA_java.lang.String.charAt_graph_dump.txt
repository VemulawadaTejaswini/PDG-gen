Line_3 $$ if (icon != null) -->Line_7 $$ iconR.width = iconR.height = 0[ CD ]
Line_9 $$ boolean textIsEmpty = (text == null) || (text.length == 0) || (text.length == 1 && ((text[0] == null) || "".equals(text[0])))-->Line_19 $$ if (!textIsEmpty) [ FD ]
Line_49 $$ if (horizontalTextPosition != CENTER) -->Line_50 $$ textR.y = iconR.height - textR.height[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_74 $$ if (horizontalAlignment == LEFT) [ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_10 $$ String rettext = ""[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_84 $$ iconR.y += dy[ CD ]
Line_10 $$ String rettext = ""-->Line_37 $$ textR.width = SwingUtilities.computeStringWidth(fm, rettext)[ FD ]
Line_26 $$ if (textR.width > availTextWidth && text.length == 1) -->Line_29 $$ int nChars[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_55 $$ if (horizontalTextPosition == LEFT) [ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_62 $$ int labelR_x = Math.min(iconR.x, textR.x)[ CD ]
Line_20 $$ int availTextWidth-->Line_32 $$ if (totalWidth > availTextWidth) [ FD ]
Line_64 $$ int labelR_y = Math.min(iconR.y, textR.y)-->Line_68 $$ dy = viewR.y - labelR_y[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_40 $$ if (verticalTextPosition == TOP) [ FD ]
Line_72 $$ dy = (viewR.y + viewR.height) - (labelR_y + labelR_height)-->Line_82 $$ textR.y += dy[ FD ]
Line_68 $$ dy = viewR.y - labelR_y-->Line_84 $$ iconR.y += dy[ FD ]
Line_66 $$ int dx, dy-->Line_82 $$ textR.y += dy[ FD ]
Line_30 $$ for (nChars = 0; nChars < text[0].length(); nChars++) -->Line_31 $$ totalWidth += fm.charWidth(text[0].charAt(nChars))[ CD ]
Line_66 $$ int dx, dy-->Line_75 $$ dx = viewR.x - labelR_x[ FD ]
Line_76 $$ if (horizontalAlignment == RIGHT) -->Line_79 $$ dx = (viewR.x + (viewR.width / 2)) - (labelR_x + (labelR_width / 2))[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_18 $$ int gap = (textIsEmpty || (icon == null)) ? 0 : textIconGap[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_19 $$ if (!textIsEmpty) [ CD ]
Line_46 $$ if (verticalTextPosition == CENTER) -->Line_49 $$ if (horizontalTextPosition != CENTER) [ CD ]
Line_21 $$ if (horizontalTextPosition == CENTER) -->Line_24 $$ availTextWidth = viewR.width - (iconR.width + gap)[ CD ]
Line_68 $$ dy = viewR.y - labelR_y-->Line_72 $$ dy = (viewR.y + viewR.height) - (labelR_y + labelR_height)[ FD ]
Line_57 $$ if (horizontalTextPosition == CENTER) -->Line_58 $$ textR.x = (iconR.width / 2) - (textR.width / 2)[ CD ]
Line_36 $$ rettext = text[0].substring(0, nChars) + clipString-->Line_37 $$ textR.width = SwingUtilities.computeStringWidth(fm, rettext)[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_57 $$ if (horizontalTextPosition == CENTER) [ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_85 $$ return rettext[ CD ]
Line_77 $$ dx = (viewR.x + viewR.width) - (labelR_x + labelR_width)-->Line_83 $$ iconR.x += dx[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_5 $$ iconR.height = icon.getIconHeight()[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_28 $$ int totalWidth = SwingUtilities.computeStringWidth(fm, clipString)[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_40 $$ if (verticalTextPosition == TOP) [ CD ]
Line_66 $$ int dx, dy-->Line_79 $$ dx = (viewR.x + (viewR.width / 2)) - (labelR_x + (labelR_width / 2))[ FD ]
Line_79 $$ dx = (viewR.x + (viewR.width / 2)) - (labelR_x + (labelR_width / 2))-->Line_83 $$ iconR.x += dx[ FD ]
Line_75 $$ dx = viewR.x - labelR_x-->Line_79 $$ dx = (viewR.x + (viewR.width / 2)) - (labelR_x + (labelR_width / 2))[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_11 $$ if (textIsEmpty) [ CD ]
Line_76 $$ if (horizontalAlignment == RIGHT) -->Line_77 $$ dx = (viewR.x + viewR.width) - (labelR_x + labelR_width)[ CD ]
Line_28 $$ int totalWidth = SwingUtilities.computeStringWidth(fm, clipString)-->Line_31 $$ totalWidth += fm.charWidth(text[0].charAt(nChars))[ FD ]
Line_66 $$ int dx, dy-->Line_68 $$ dy = viewR.y - labelR_y[ FD ]
Line_26 $$ if (textR.width > availTextWidth && text.length == 1) -->Line_27 $$ String clipString = "..."[ CD ]
Line_75 $$ dx = viewR.x - labelR_x-->Line_81 $$ textR.x += dx[ FD ]
Line_10 $$ String rettext = ""-->Line_36 $$ rettext = text[0].substring(0, nChars) + clipString[ FD ]
Line_70 $$ dy = (viewR.y + (viewR.height / 2)) - (labelR_y + (labelR_height / 2))-->Line_84 $$ iconR.y += dy[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_69 $$ if (verticalAlignment == CENTER) [ FD ]
Line_31 $$ totalWidth += fm.charWidth(text[0].charAt(nChars))-->Line_32 $$ if (totalWidth > availTextWidth) [ FD ]
Line_70 $$ dy = (viewR.y + (viewR.height / 2)) - (labelR_y + (labelR_height / 2))-->Line_82 $$ textR.y += dy[ FD ]
Line_24 $$ availTextWidth = viewR.width - (iconR.width + gap)-->Line_32 $$ if (totalWidth > availTextWidth) [ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_65 $$ int labelR_height = Math.max(iconR.y + iconR.height, textR.y + textR.height) - labelR_y[ CD ]
Line_26 $$ if (textR.width > availTextWidth && text.length == 1) -->Line_30 $$ for (nChars = 0; nChars < text[0].length(); nChars++) [ CD ]
Line_41 $$ if (horizontalTextPosition != CENTER) -->Line_42 $$ textR.y = 0[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_66 $$ int dx, dy[ CD ]
Line_28 $$ int totalWidth = SwingUtilities.computeStringWidth(fm, clipString)-->Line_32 $$ if (totalWidth > availTextWidth) [ FD ]
Line_22 $$ availTextWidth = viewR.width-->Line_24 $$ availTextWidth = viewR.width - (iconR.width + gap)[ FD ]
Line_11 $$ if (textIsEmpty) -->Line_12 $$ textR.width = textR.height = 0[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_63 $$ int labelR_width = Math.max(iconR.x + iconR.width, textR.x + textR.width) - labelR_x[ CD ]
Line_26 $$ if (textR.width > availTextWidth && text.length == 1) -->Line_36 $$ rettext = text[0].substring(0, nChars) + clipString[ CD ]
Line_27 $$ String clipString = "..."-->Line_36 $$ rettext = text[0].substring(0, nChars) + clipString[ FD ]
Line_20 $$ int availTextWidth-->Line_24 $$ availTextWidth = viewR.width - (iconR.width + gap)[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_76 $$ if (horizontalAlignment == RIGHT) [ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_3 $$ if (icon != null) [ CD ]
Line_3 $$ if (icon != null) -->Line_5 $$ iconR.height = icon.getIconHeight()[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_83 $$ iconR.x += dx[ CD ]
Line_62 $$ int labelR_x = Math.min(iconR.x, textR.x)-->Line_75 $$ dx = viewR.x - labelR_x[ FD ]
Line_66 $$ int dx, dy-->Line_81 $$ textR.x += dx[ FD ]
Line_46 $$ if (verticalTextPosition == CENTER) -->Line_47 $$ textR.y = (iconR.height / 2) - (textR.height / 2)[ CD ]
Line_40 $$ if (verticalTextPosition == TOP) -->Line_41 $$ if (horizontalTextPosition != CENTER) [ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_3 $$ if (icon != null) [ FD ]
Line_77 $$ dx = (viewR.x + viewR.width) - (labelR_x + labelR_width)-->Line_79 $$ dx = (viewR.x + (viewR.width / 2)) - (labelR_x + (labelR_width / 2))[ FD ]
Line_11 $$ if (textIsEmpty) -->Line_14 $$ Dimension dim = computeMultiLineDimension(fm, text)[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_46 $$ if (verticalTextPosition == CENTER) [ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_49 $$ if (horizontalTextPosition != CENTER) [ FD ]
Line_68 $$ dy = viewR.y - labelR_y-->Line_70 $$ dy = (viewR.y + (viewR.height / 2)) - (labelR_y + (labelR_height / 2))[ FD ]
Line_30 $$ for (nChars = 0; nChars < text[0].length(); nChars++) -->Line_36 $$ rettext = text[0].substring(0, nChars) + clipString[ FD ]
Line_74 $$ if (horizontalAlignment == LEFT) -->Line_75 $$ dx = viewR.x - labelR_x[ CD ]
Line_49 $$ if (horizontalTextPosition != CENTER) -->Line_52 $$ textR.y = (iconR.height + gap)[ CD ]
Line_29 $$ int nChars-->Line_30 $$ for (nChars = 0; nChars < text[0].length(); nChars++) [ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_81 $$ textR.x += dx[ CD ]
Line_11 $$ if (textIsEmpty) -->Line_16 $$ textR.height = dim.height[ CD ]
Line_26 $$ if (textR.width > availTextWidth && text.length == 1) -->Line_37 $$ textR.width = SwingUtilities.computeStringWidth(fm, rettext)[ CD ]
Line_55 $$ if (horizontalTextPosition == LEFT) -->Line_56 $$ textR.x = -(textR.width + gap)[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_74 $$ if (horizontalAlignment == LEFT) [ FD ]
Line_29 $$ int nChars-->Line_36 $$ rettext = text[0].substring(0, nChars) + clipString[ FD ]
Line_75 $$ dx = viewR.x - labelR_x-->Line_77 $$ dx = (viewR.x + viewR.width) - (labelR_x + labelR_width)[ FD ]
Line_29 $$ int nChars-->Line_31 $$ totalWidth += fm.charWidth(text[0].charAt(nChars))[ FD ]
Line_72 $$ dy = (viewR.y + viewR.height) - (labelR_y + labelR_height)-->Line_84 $$ iconR.y += dy[ FD ]
Line_41 $$ if (horizontalTextPosition != CENTER) -->Line_44 $$ textR.y = -(textR.height + gap)[ CD ]
Line_57 $$ if (horizontalTextPosition == CENTER) -->Line_60 $$ textR.x = (iconR.width + gap)[ CD ]
Line_55 $$ if (horizontalTextPosition == LEFT) -->Line_57 $$ if (horizontalTextPosition == CENTER) [ CD ]
Line_11 $$ if (textIsEmpty) -->Line_15 $$ textR.width = dim.width[ CD ]
Line_27 $$ String clipString = "..."-->Line_28 $$ int totalWidth = SwingUtilities.computeStringWidth(fm, clipString)[ FD ]
Line_30 $$ for (nChars = 0; nChars < text[0].length(); nChars++) -->Line_31 $$ totalWidth += fm.charWidth(text[0].charAt(nChars))[ FD ]
Line_66 $$ int dx, dy-->Line_70 $$ dy = (viewR.y + (viewR.height / 2)) - (labelR_y + (labelR_height / 2))[ FD ]
Line_77 $$ dx = (viewR.x + viewR.width) - (labelR_x + labelR_width)-->Line_81 $$ textR.x += dx[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_4 $$ iconR.width = icon.getIconWidth()[ FD ]
Line_20 $$ int availTextWidth-->Line_22 $$ availTextWidth = viewR.width[ FD ]
Line_66 $$ int dx, dy-->Line_83 $$ iconR.x += dx[ FD ]
Line_68 $$ dy = viewR.y - labelR_y-->Line_82 $$ textR.y += dy[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_9 $$ boolean textIsEmpty = (text == null) || (text.length == 0) || (text.length == 1 && ((text[0] == null) || "".equals(text[0])))[ CD ]
Line_69 $$ if (verticalAlignment == CENTER) -->Line_70 $$ dy = (viewR.y + (viewR.height / 2)) - (labelR_y + (labelR_height / 2))[ CD ]
Line_26 $$ if (textR.width > availTextWidth && text.length == 1) -->Line_28 $$ int totalWidth = SwingUtilities.computeStringWidth(fm, clipString)[ CD ]
Line_74 $$ if (horizontalAlignment == LEFT) -->Line_76 $$ if (horizontalAlignment == RIGHT) [ CD ]
Line_75 $$ dx = viewR.x - labelR_x-->Line_83 $$ iconR.x += dx[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_64 $$ int labelR_y = Math.min(iconR.y, textR.y)[ CD ]
Line_67 $$ if (verticalAlignment == TOP) -->Line_68 $$ dy = viewR.y - labelR_y[ CD ]
Line_19 $$ if (!textIsEmpty) -->Line_21 $$ if (horizontalTextPosition == CENTER) [ CD ]
Line_21 $$ if (horizontalTextPosition == CENTER) -->Line_22 $$ availTextWidth = viewR.width[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_67 $$ if (verticalAlignment == TOP) [ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_21 $$ if (horizontalTextPosition == CENTER) [ FD ]
Line_79 $$ dx = (viewR.x + (viewR.width / 2)) - (labelR_x + (labelR_width / 2))-->Line_81 $$ textR.x += dx[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_14 $$ Dimension dim = computeMultiLineDimension(fm, text)[ FD ]
Line_67 $$ if (verticalAlignment == TOP) -->Line_69 $$ if (verticalAlignment == CENTER) [ CD ]
Line_70 $$ dy = (viewR.y + (viewR.height / 2)) - (labelR_y + (labelR_height / 2))-->Line_72 $$ dy = (viewR.y + viewR.height) - (labelR_y + labelR_height)[ FD ]
Line_30 $$ for (nChars = 0; nChars < text[0].length(); nChars++) -->Line_32 $$ if (totalWidth > availTextWidth) [ CD ]
Line_22 $$ availTextWidth = viewR.width-->Line_32 $$ if (totalWidth > availTextWidth) [ FD ]
Line_19 $$ if (!textIsEmpty) -->Line_26 $$ if (textR.width > availTextWidth && text.length == 1) [ CD ]
Line_40 $$ if (verticalTextPosition == TOP) -->Line_46 $$ if (verticalTextPosition == CENTER) [ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_37 $$ textR.width = SwingUtilities.computeStringWidth(fm, rettext)[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_31 $$ totalWidth += fm.charWidth(text[0].charAt(nChars))[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_67 $$ if (verticalAlignment == TOP) [ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_55 $$ if (horizontalTextPosition == LEFT) [ CD ]
Line_3 $$ if (icon != null) -->Line_4 $$ iconR.width = icon.getIconWidth()[ CD ]
Line_66 $$ int dx, dy-->Line_84 $$ iconR.y += dy[ FD ]
Line_66 $$ int dx, dy-->Line_72 $$ dy = (viewR.y + viewR.height) - (labelR_y + labelR_height)[ FD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_41 $$ if (horizontalTextPosition != CENTER) [ FD ]
Line_66 $$ int dx, dy-->Line_77 $$ dx = (viewR.x + viewR.width) - (labelR_x + labelR_width)[ FD ]
Line_69 $$ if (verticalAlignment == CENTER) -->Line_72 $$ dy = (viewR.y + viewR.height) - (labelR_y + labelR_height)[ CD ]
Line_2 $$ public static String layoutCompoundLabel(FontMetrics fm, String[] text, Icon icon, int verticalAlignment, int horizontalAlignment, int verticalTextPosition, int horizontalTextPosition, Rectangle viewR, Rectangle iconR, Rectangle textR, int textIconGap) -->Line_82 $$ textR.y += dy[ CD ]
Line_19 $$ if (!textIsEmpty) -->Line_20 $$ int availTextWidth[ CD ]
