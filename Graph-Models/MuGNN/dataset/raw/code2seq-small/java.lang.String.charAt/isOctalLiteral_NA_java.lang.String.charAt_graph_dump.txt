Line_2 $$ private static boolean isOctalLiteral(PsiLiteralExpression literal) -->Line_11 $$ return text.charAt(0) == '0' && !text.startsWith("0x") && !text.startsWith("0X")[ CD ]
Line_2 $$ private static boolean isOctalLiteral(PsiLiteralExpression literal) -->Line_7 $$ final String text = literal.getText()[ FD ]
Line_2 $$ private static boolean isOctalLiteral(PsiLiteralExpression literal) -->Line_4 $$ if (!PsiType.INT.equals(type) && !PsiType.LONG.equals(type)) [ CD ]
Line_2 $$ private static boolean isOctalLiteral(PsiLiteralExpression literal) -->Line_3 $$ final PsiType type = literal.getType()[ CD ]
Line_8 $$ if ("0".equals(text) || "0L".equals(text)) -->Line_9 $$ return false[ CD ]
Line_2 $$ private static boolean isOctalLiteral(PsiLiteralExpression literal) -->Line_3 $$ final PsiType type = literal.getType()[ FD ]
Line_3 $$ final PsiType type = literal.getType()-->Line_4 $$ if (!PsiType.INT.equals(type) && !PsiType.LONG.equals(type)) [ FD ]
Line_7 $$ final String text = literal.getText()-->Line_11 $$ return text.charAt(0) == '0' && !text.startsWith("0x") && !text.startsWith("0X")[ FD ]
Line_2 $$ private static boolean isOctalLiteral(PsiLiteralExpression literal) -->Line_8 $$ if ("0".equals(text) || "0L".equals(text)) [ CD ]
Line_7 $$ final String text = literal.getText()-->Line_8 $$ if ("0".equals(text) || "0L".equals(text)) [ FD ]
Line_4 $$ if (!PsiType.INT.equals(type) && !PsiType.LONG.equals(type)) -->Line_5 $$ return false[ CD ]
Line_2 $$ private static boolean isOctalLiteral(PsiLiteralExpression literal) -->Line_7 $$ final String text = literal.getText()[ CD ]
