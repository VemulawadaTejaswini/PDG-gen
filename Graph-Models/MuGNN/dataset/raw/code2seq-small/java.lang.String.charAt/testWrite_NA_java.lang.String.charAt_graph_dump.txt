Line_10 $$ int currentCharNumber = charArrayWriter.size()-->Line_11 $$ if (currentCharNumber > charNumber) [ FD ]
Line_6 $$ String unalignedOutput = "非对齐测试中文输出"-->Line_13 $$ Assert.assertEquals(unalignedOutput.charAt(charNumber - 1), charArrayWriter.toCharArray()[charNumber - 1])[ FD ]
Line_4 $$ WriterOutputStream writerOutputStream = new WriterOutputStream(charArrayWriter, StringPool.UTF8, true)-->Line_9 $$ writerOutputStream.write(b)[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_7 $$ byte[] unalignedInput = unalignedOutput.getBytes(StringPool.UTF8)[ CD ]
Line_3 $$ CharArrayWriter charArrayWriter = new CharArrayWriter()-->Line_10 $$ int currentCharNumber = charArrayWriter.size()[ FD ]
Line_10 $$ int currentCharNumber = charArrayWriter.size()-->Line_12 $$ charNumber = currentCharNumber[ FD ]
Line_3 $$ CharArrayWriter charArrayWriter = new CharArrayWriter()-->Line_13 $$ Assert.assertEquals(unalignedOutput.charAt(charNumber - 1), charArrayWriter.toCharArray()[charNumber - 1])[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_4 $$ WriterOutputStream writerOutputStream = new WriterOutputStream(charArrayWriter, StringPool.UTF8, true)[ CD ]
Line_6 $$ String unalignedOutput = "非对齐测试中文输出"-->Line_7 $$ byte[] unalignedInput = unalignedOutput.getBytes(StringPool.UTF8)[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_16 $$ Assert.assertEquals(unalignedOutput, charArrayWriter.toString())[ CD ]
Line_3 $$ CharArrayWriter charArrayWriter = new CharArrayWriter()-->Line_16 $$ Assert.assertEquals(unalignedOutput, charArrayWriter.toString())[ FD ]
Line_11 $$ if (currentCharNumber > charNumber) -->Line_12 $$ charNumber = currentCharNumber[ CD ]
Line_5 $$ int charNumber = 0-->Line_12 $$ charNumber = currentCharNumber[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_3 $$ CharArrayWriter charArrayWriter = new CharArrayWriter()[ CD ]
Line_11 $$ if (currentCharNumber > charNumber) -->Line_13 $$ Assert.assertEquals(unalignedOutput.charAt(charNumber - 1), charArrayWriter.toCharArray()[charNumber - 1])[ CD ]
Line_6 $$ String unalignedOutput = "非对齐测试中文输出"-->Line_16 $$ Assert.assertEquals(unalignedOutput, charArrayWriter.toString())[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_5 $$ int charNumber = 0[ CD ]
Line_8 $$ for (byte b : unalignedInput) -->Line_9 $$ writerOutputStream.write(b)[ FD ]
Line_2 $$ public void testWrite() throws IOException -->Line_6 $$ String unalignedOutput = "非对齐测试中文输出"[ CD ]
Line_5 $$ int charNumber = 0-->Line_11 $$ if (currentCharNumber > charNumber) [ FD ]
