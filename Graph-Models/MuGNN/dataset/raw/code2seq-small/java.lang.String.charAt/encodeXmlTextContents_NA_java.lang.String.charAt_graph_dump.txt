Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_3 $$ if (!toCode(displayText))[ CD ]
Line_5 $$ final FileElement dummyParent = DummyHolderFactory.createHolder(text.getManager(), null, SharedImplUtil.findCharTableByTree(text.getNode())).getTreeElement()-->Line_21 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_6 $$ int sectionStartOffset = 0[ CD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_3 $$ if (!toCode(displayText))-->Line_4 $$ return super.encodeXmlTextContents(displayText, text)[ CD ]
Line_6 $$ int sectionStartOffset = 0-->Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_7 $$ int offset = 0-->Line_17 $$ offset++[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_12 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ FD ]
Line_8 $$ while (offset < displayText.length()) -->Line_9 $$ if (toCode(displayText.charAt(offset))) [ CD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_20 $$ if (!plainSection.isEmpty()) [ CD ]
Line_7 $$ int offset = 0-->Line_15 $$ sectionStartOffset = offset + 1[ FD ]
Line_9 $$ if (toCode(displayText.charAt(offset))) -->Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ CD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_8 $$ while (offset < displayText.length()) [ CD ]
Line_5 $$ final FileElement dummyParent = DummyHolderFactory.createHolder(text.getManager(), null, SharedImplUtil.findCharTableByTree(text.getNode())).getTreeElement()-->Line_14 $$ dummyParent.rawAddChildren(createCharEntity(displayText.charAt(offset), dummyParent.getCharTable()))[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_9 $$ if (toCode(displayText.charAt(offset))) [ FD ]
Line_7 $$ int offset = 0-->Line_19 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)-->Line_11 $$ if (!plainSection.isEmpty()) [ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_24 $$ return dummyParent.getFirstChildNode()[ CD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_21 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_19 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_23 $$ dummyParent.acceptTree(new GeneratedMarkerVisitor())[ CD ]
Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)-->Line_20 $$ if (!plainSection.isEmpty()) [ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_5 $$ final FileElement dummyParent = DummyHolderFactory.createHolder(text.getManager(), null, SharedImplUtil.findCharTableByTree(text.getNode())).getTreeElement()[ FD ]
Line_5 $$ final FileElement dummyParent = DummyHolderFactory.createHolder(text.getManager(), null, SharedImplUtil.findCharTableByTree(text.getNode())).getTreeElement()-->Line_24 $$ return dummyParent.getFirstChildNode()[ FD ]
Line_7 $$ int offset = 0-->Line_14 $$ dummyParent.rawAddChildren(createCharEntity(displayText.charAt(offset), dummyParent.getCharTable()))[ FD ]
Line_6 $$ int sectionStartOffset = 0-->Line_19 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_7 $$ int offset = 0-->Line_9 $$ if (toCode(displayText.charAt(offset))) [ FD ]
Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)-->Line_12 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ FD ]
Line_19 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)-->Line_20 $$ if (!plainSection.isEmpty()) [ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_8 $$ while (offset < displayText.length()) [ FD ]
Line_7 $$ int offset = 0-->Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_20 $$ if (!plainSection.isEmpty()) -->Line_21 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ CD ]
Line_9 $$ if (toCode(displayText.charAt(offset))) -->Line_14 $$ dummyParent.rawAddChildren(createCharEntity(displayText.charAt(offset), dummyParent.getCharTable()))[ CD ]
Line_11 $$ if (!plainSection.isEmpty()) -->Line_12 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ CD ]
Line_6 $$ int sectionStartOffset = 0-->Line_15 $$ sectionStartOffset = offset + 1[ FD ]
Line_5 $$ final FileElement dummyParent = DummyHolderFactory.createHolder(text.getManager(), null, SharedImplUtil.findCharTableByTree(text.getNode())).getTreeElement()-->Line_12 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ FD ]
Line_9 $$ if (toCode(displayText.charAt(offset))) -->Line_15 $$ sectionStartOffset = offset + 1[ CD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_5 $$ final FileElement dummyParent = DummyHolderFactory.createHolder(text.getManager(), null, SharedImplUtil.findCharTableByTree(text.getNode())).getTreeElement()[ CD ]
Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)-->Line_21 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_14 $$ dummyParent.rawAddChildren(createCharEntity(displayText.charAt(offset), dummyParent.getCharTable()))[ FD ]
Line_8 $$ while (offset < displayText.length()) -->Line_17 $$ offset++[ CD ]
Line_15 $$ sectionStartOffset = offset + 1-->Line_10 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_15 $$ sectionStartOffset = offset + 1-->Line_19 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_19 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)[ CD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_7 $$ int offset = 0[ CD ]
Line_9 $$ if (toCode(displayText.charAt(offset))) -->Line_11 $$ if (!plainSection.isEmpty()) [ CD ]
Line_7 $$ int offset = 0-->Line_8 $$ while (offset < displayText.length()) [ FD ]
Line_19 $$ final String plainSection = displayText.substring(sectionStartOffset, offset)-->Line_21 $$ dummyParent.rawAddChildren((TreeElement) super.encodeXmlTextContents(plainSection, text))[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_3 $$ if (!toCode(displayText))[ FD ]
Line_5 $$ final FileElement dummyParent = DummyHolderFactory.createHolder(text.getManager(), null, SharedImplUtil.findCharTableByTree(text.getNode())).getTreeElement()-->Line_23 $$ dummyParent.acceptTree(new GeneratedMarkerVisitor())[ FD ]
Line_2 $$ public ASTNode encodeXmlTextContents(String displayText, PsiElement text) -->Line_4 $$ return super.encodeXmlTextContents(displayText, text)[ FD ]
