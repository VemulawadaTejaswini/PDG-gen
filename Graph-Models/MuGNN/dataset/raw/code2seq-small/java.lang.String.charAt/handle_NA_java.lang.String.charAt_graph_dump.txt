Line_3 $$ ListItem listItem = toListItem(line)-->Line_9 $$ if (listItem.isUnordered()) [ FD ]
Line_9 $$ if (listItem.isUnordered()) -->Line_10 $$ out = "<ul>" + out[ CD ]
Line_3 $$ ListItem listItem = toListItem(line)-->Line_4 $$ if (listItem != null) [ FD ]
Line_6 $$ String out = "<li>" + listItem.getBody()-->Line_15 $$ myLines.set(ind, out)[ FD ]
Line_4 $$ if (listItem != null) -->Line_15 $$ myLines.set(ind, out)[ CD ]
Line_4 $$ if (listItem != null) -->Line_7 $$ if (myFirstListItem == null) [ CD ]
Line_12 $$ out = "<ol>" + out-->Line_15 $$ myLines.set(ind, out)[ FD ]
Line_7 $$ if (myFirstListItem == null) -->Line_9 $$ if (listItem.isUnordered()) [ CD ]
Line_4 $$ if (listItem != null) -->Line_5 $$ finishLastListItem(false)[ CD ]
Line_18 $$ if (ind - 1 >= 0 && StringUtil.isEmptyOrSpaces(myLines.get(ind - 1)) && !Character.isWhitespace(line.charAt(0))) -->Line_19 $$ finishLastListItem(true)[ CD ]
Line_17 $$ if (myFirstListItem != null && !line.isEmpty() && !StringUtil.isEmptyOrSpaces(line)) -->Line_18 $$ if (ind - 1 >= 0 && StringUtil.isEmptyOrSpaces(myLines.get(ind - 1)) && !Character.isWhitespace(line.charAt(0))) [ CD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_21 $$ String m = StringUtil.trimLeading(line)[ FD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_4 $$ if (listItem != null) [ CD ]
Line_4 $$ if (listItem != null) -->Line_17 $$ if (myFirstListItem != null && !line.isEmpty() && !StringUtil.isEmptyOrSpaces(line)) [ CD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_15 $$ myLines.set(ind, out)[ FD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_3 $$ ListItem listItem = toListItem(line)[ FD ]
Line_18 $$ if (ind - 1 >= 0 && StringUtil.isEmptyOrSpaces(myLines.get(ind - 1)) && !Character.isWhitespace(line.charAt(0))) -->Line_21 $$ String m = StringUtil.trimLeading(line)[ CD ]
Line_10 $$ out = "<ul>" + out-->Line_15 $$ myLines.set(ind, out)[ FD ]
Line_18 $$ if (ind - 1 >= 0 && StringUtil.isEmptyOrSpaces(myLines.get(ind - 1)) && !Character.isWhitespace(line.charAt(0))) -->Line_22 $$ myLines.set(ind, m)[ CD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_18 $$ if (ind - 1 >= 0 && StringUtil.isEmptyOrSpaces(myLines.get(ind - 1)) && !Character.isWhitespace(line.charAt(0))) [ FD ]
Line_6 $$ String out = "<li>" + listItem.getBody()-->Line_12 $$ out = "<ol>" + out[ FD ]
Line_9 $$ if (listItem.isUnordered()) -->Line_12 $$ out = "<ol>" + out[ CD ]
Line_3 $$ ListItem listItem = toListItem(line)-->Line_6 $$ String out = "<li>" + listItem.getBody()[ FD ]
Line_10 $$ out = "<ul>" + out-->Line_12 $$ out = "<ol>" + out[ FD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_17 $$ if (myFirstListItem != null && !line.isEmpty() && !StringUtil.isEmptyOrSpaces(line)) [ FD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_22 $$ myLines.set(ind, m)[ FD ]
Line_6 $$ String out = "<li>" + listItem.getBody()-->Line_10 $$ out = "<ul>" + out[ FD ]
Line_4 $$ if (listItem != null) -->Line_6 $$ String out = "<li>" + listItem.getBody()[ CD ]
Line_2 $$ private void handle(int ind, @NotNull String line) -->Line_3 $$ ListItem listItem = toListItem(line)[ CD ]
Line_21 $$ String m = StringUtil.trimLeading(line)-->Line_22 $$ myLines.set(ind, m)[ FD ]
