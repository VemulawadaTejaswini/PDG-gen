Line_5 $$ char c = name.charAt(0)-->Line_6 $$ if (isVowel(c)) [ FD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_3 $$ if (isEmptyOrSpaces(name))[ FD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_9 $$ return "a" + Character.toUpperCase(c) + name.substring(1)[ CD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_3 $$ if (isEmptyOrSpaces(name))[ CD ]
Line_5 $$ char c = name.charAt(0)-->Line_9 $$ return "a" + Character.toUpperCase(c) + name.substring(1)[ FD ]
Line_6 $$ if (isVowel(c)) -->Line_7 $$ return "an" + Character.toUpperCase(c) + name.substring(1)[ CD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_5 $$ char c = name.charAt(0)[ FD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_9 $$ return "a" + Character.toUpperCase(c) + name.substring(1)[ FD ]
Line_3 $$ if (isEmptyOrSpaces(name))-->Line_4 $$ return name[ CD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_5 $$ char c = name.charAt(0)[ CD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_6 $$ if (isVowel(c)) [ CD ]
Line_5 $$ char c = name.charAt(0)-->Line_7 $$ return "an" + Character.toUpperCase(c) + name.substring(1)[ FD ]
Line_2 $$ public static String fixVariableNameDerivedFromPropertyName(@NotNull String name) -->Line_7 $$ return "an" + Character.toUpperCase(c) + name.substring(1)[ FD ]
