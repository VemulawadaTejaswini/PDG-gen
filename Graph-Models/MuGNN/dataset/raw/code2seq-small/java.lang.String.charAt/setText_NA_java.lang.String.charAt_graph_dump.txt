Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_35 $$ myText = text.isEmpty() ? "" : text[ FD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_4 $$ int oldDisplayedMnemonicIndex = myDisplayedMnemonicIndex[ CD ]
Line_13 $$ StringBuilder plainText = new StringBuilder()-->Line_33 $$ myText = plainText.length() == 0 ? "" : plainText.toString()[ FD ]
Line_22 $$ if (UISettings.getInstance().DISABLE_MNEMONICS_IN_CONTROLS) -->Line_26 $$ myMnemonic = Character.toUpperCase(ch)[ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_18 $$ if (i >= text.length())[ FD ]
Line_16 $$ if (myMnemonic == 0 && (ch == '_' || ch == '&')) -->Line_20 $$ ch = text.charAt(i)[ CD ]
Line_14 $$ for (int i = 0; i < text.length(); i++) -->Line_16 $$ if (myMnemonic == 0 && (ch == '_' || ch == '&')) [ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_7 $$ myDisplayedMnemonicIndex = -1[ CD ]
Line_15 $$ char ch = text.charAt(i)-->Line_31 $$ plainText.append(ch)[ FD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_8 $$ if (text != null) [ CD ]
Line_14 $$ for (int i = 0; i < text.length(); i++) -->Line_18 $$ if (i >= text.length())[ FD ]
Line_16 $$ if (myMnemonic == 0 && (ch == '_' || ch == '&')) -->Line_21 $$ if (ch != '_' && ch != '&') [ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_3 $$ int oldMnemonic = myMnemonic[ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_40 $$ myChangeSupport.firePropertyChange(PROP_TEXT, oldText, myText)[ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_15 $$ char ch = text.charAt(i)[ FD ]
Line_14 $$ for (int i = 0; i < text.length(); i++) -->Line_31 $$ plainText.append(ch)[ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_41 $$ if (myMnemonic != oldMnemonic) [ CD ]
Line_9 $$ if (text.indexOf(UIUtil.MNEMONIC) >= 0) -->Line_10 $$ text = text.replace(UIUtil.MNEMONIC, '&')[ CD ]
Line_15 $$ char ch = text.charAt(i)-->Line_20 $$ ch = text.charAt(i)[ FD ]
Line_5 $$ String oldText = myText-->Line_40 $$ myChangeSupport.firePropertyChange(PROP_TEXT, oldText, myText)[ FD ]
Line_14 $$ for (int i = 0; i < text.length(); i++) -->Line_15 $$ char ch = text.charAt(i)[ FD ]
Line_16 $$ if (myMnemonic == 0 && (ch == '_' || ch == '&')) -->Line_18 $$ if (i >= text.length())[ CD ]
Line_20 $$ ch = text.charAt(i)-->Line_26 $$ myMnemonic = Character.toUpperCase(ch)[ FD ]
Line_22 $$ if (UISettings.getInstance().DISABLE_MNEMONICS_IN_CONTROLS) -->Line_24 $$ myDisplayedMnemonicIndex = -1[ CD ]
Line_21 $$ if (ch != '_' && ch != '&') -->Line_22 $$ if (UISettings.getInstance().DISABLE_MNEMONICS_IN_CONTROLS) [ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_5 $$ String oldText = myText[ CD ]
Line_16 $$ if (myMnemonic == 0 && (ch == '_' || ch == '&')) -->Line_17 $$ i++[ CD ]
Line_4 $$ int oldDisplayedMnemonicIndex = myDisplayedMnemonicIndex-->Line_44 $$ if (myDisplayedMnemonicIndex != oldDisplayedMnemonicIndex) [ FD ]
Line_44 $$ if (myDisplayedMnemonicIndex != oldDisplayedMnemonicIndex) -->Line_45 $$ myChangeSupport.firePropertyChange(PROP_MNEMONIC_INDEX, new Integer(oldDisplayedMnemonicIndex), new Integer(myDisplayedMnemonicIndex))[ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_44 $$ if (myDisplayedMnemonicIndex != oldDisplayedMnemonicIndex) [ CD ]
Line_14 $$ for (int i = 0; i < text.length(); i++) -->Line_20 $$ ch = text.charAt(i)[ FD ]
Line_15 $$ char ch = text.charAt(i)-->Line_26 $$ myMnemonic = Character.toUpperCase(ch)[ FD ]
Line_13 $$ StringBuilder plainText = new StringBuilder()-->Line_31 $$ plainText.append(ch)[ FD ]
Line_14 $$ for (int i = 0; i < text.length(); i++) -->Line_17 $$ i++[ FD ]
Line_8 $$ if (text != null) -->Line_12 $$ if (mayContainMnemonic) [ CD ]
Line_8 $$ if (text != null) -->Line_9 $$ if (text.indexOf(UIUtil.MNEMONIC) >= 0) [ CD ]
Line_12 $$ if (mayContainMnemonic) -->Line_13 $$ StringBuilder plainText = new StringBuilder()[ CD ]
Line_3 $$ int oldMnemonic = myMnemonic-->Line_41 $$ if (myMnemonic != oldMnemonic) [ FD ]
Line_41 $$ if (myMnemonic != oldMnemonic) -->Line_42 $$ myChangeSupport.firePropertyChange(PROP_MNEMONIC_KEY, new Integer(oldMnemonic), new Integer(myMnemonic))[ CD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_8 $$ if (text != null) [ FD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_14 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_20 $$ ch = text.charAt(i)[ FD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_9 $$ if (text.indexOf(UIUtil.MNEMONIC) >= 0) [ FD ]
Line_2 $$ public void setText(@Nullable String text, boolean mayContainMnemonic) -->Line_10 $$ text = text.replace(UIUtil.MNEMONIC, '&')[ FD ]
Line_12 $$ if (mayContainMnemonic) -->Line_14 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_14 $$ for (int i = 0; i < text.length(); i++) -->Line_15 $$ char ch = text.charAt(i)[ CD ]
Line_20 $$ ch = text.charAt(i)-->Line_31 $$ plainText.append(ch)[ FD ]
