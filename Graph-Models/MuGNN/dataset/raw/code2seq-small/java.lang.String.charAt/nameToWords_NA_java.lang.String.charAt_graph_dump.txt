Line_17 $$ if (Character.isUpperCase(c)) -->Line_18 $$ if (lowerCaseCount > 0 || digitCount > 0 || specialCount > 0)[ CD ]
Line_5 $$ while (index < name.length()) -->Line_8 $$ int lowerCaseCount = 0[ CD ]
Line_12 $$ char c = name.charAt(index)-->Line_13 $$ if (Character.isDigit(c)) [ FD ]
Line_21 $$ if (Character.isLowerCase(c)) -->Line_30 $$ if (upperCaseCount > 0 || lowerCaseCount > 0 || digitCount > 0)[ CD ]
Line_5 $$ while (index < name.length()) -->Line_6 $$ int wordStart = index[ CD ]
Line_3 $$ List<String> array = new ArrayList<String>()-->Line_41 $$ return ArrayUtil.toStringArray(array)[ FD ]
Line_17 $$ if (Character.isUpperCase(c)) -->Line_21 $$ if (Character.isLowerCase(c)) [ CD ]
Line_4 $$ int index = 0-->Line_34 $$ index++[ FD ]
Line_9 $$ int digitCount = 0-->Line_16 $$ digitCount++[ FD ]
Line_21 $$ if (Character.isLowerCase(c)) -->Line_28 $$ lowerCaseCount++[ CD ]
Line_6 $$ int wordStart = index-->Line_36 $$ String word = name.substring(wordStart, index)[ FD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_4 $$ int index = 0[ CD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_12 $$ char c = name.charAt(index)[ FD ]
Line_21 $$ if (Character.isLowerCase(c)) -->Line_32 $$ specialCount++[ CD ]
Line_37 $$ if (!StringUtil.isEmptyOrSpaces(word)) -->Line_38 $$ array.add(word)[ CD ]
Line_17 $$ if (Character.isUpperCase(c)) -->Line_20 $$ upperCaseCount++[ CD ]
Line_21 $$ if (Character.isLowerCase(c)) -->Line_22 $$ if (digitCount > 0 || specialCount > 0)[ CD ]
Line_13 $$ if (Character.isDigit(c)) -->Line_14 $$ if (upperCaseCount > 0 || lowerCaseCount > 0 || specialCount > 0)[ CD ]
Line_13 $$ if (Character.isDigit(c)) -->Line_17 $$ if (Character.isUpperCase(c)) [ CD ]
Line_8 $$ int lowerCaseCount = 0-->Line_28 $$ lowerCaseCount++[ FD ]
Line_12 $$ char c = name.charAt(index)-->Line_17 $$ if (Character.isUpperCase(c)) [ FD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_5 $$ while (index < name.length()) [ FD ]
Line_24 $$ if (upperCaseCount > 1) -->Line_25 $$ index--[ CD ]
Line_4 $$ int index = 0-->Line_12 $$ char c = name.charAt(index)[ FD ]
Line_5 $$ while (index < name.length()) -->Line_11 $$ while (index < name.length()) [ CD ]
Line_11 $$ while (index < name.length()) -->Line_12 $$ char c = name.charAt(index)[ CD ]
Line_7 $$ int upperCaseCount = 0-->Line_20 $$ upperCaseCount++[ FD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_41 $$ return ArrayUtil.toStringArray(array)[ CD ]
Line_4 $$ int index = 0-->Line_36 $$ String word = name.substring(wordStart, index)[ FD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_36 $$ String word = name.substring(wordStart, index)[ FD ]
Line_11 $$ while (index < name.length()) -->Line_34 $$ index++[ CD ]
Line_4 $$ int index = 0-->Line_5 $$ while (index < name.length()) [ FD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_5 $$ while (index < name.length()) [ CD ]
Line_4 $$ int index = 0-->Line_11 $$ while (index < name.length()) [ FD ]
Line_5 $$ while (index < name.length()) -->Line_9 $$ int digitCount = 0[ CD ]
Line_4 $$ int index = 0-->Line_25 $$ index--[ FD ]
Line_7 $$ int upperCaseCount = 0-->Line_24 $$ if (upperCaseCount > 1) [ FD ]
Line_5 $$ while (index < name.length()) -->Line_37 $$ if (!StringUtil.isEmptyOrSpaces(word)) [ CD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_3 $$ List<String> array = new ArrayList<String>()[ CD ]
Line_21 $$ if (Character.isLowerCase(c)) -->Line_24 $$ if (upperCaseCount > 1) [ CD ]
Line_13 $$ if (Character.isDigit(c)) -->Line_16 $$ digitCount++[ CD ]
Line_12 $$ char c = name.charAt(index)-->Line_21 $$ if (Character.isLowerCase(c)) [ FD ]
Line_3 $$ List<String> array = new ArrayList<String>()-->Line_38 $$ array.add(word)[ FD ]
Line_5 $$ while (index < name.length()) -->Line_7 $$ int upperCaseCount = 0[ CD ]
Line_5 $$ while (index < name.length()) -->Line_36 $$ String word = name.substring(wordStart, index)[ CD ]
Line_10 $$ int specialCount = 0-->Line_32 $$ specialCount++[ FD ]
Line_2 $$ public static String[] nameToWords(@NotNull String name) -->Line_11 $$ while (index < name.length()) [ FD ]
Line_11 $$ while (index < name.length()) -->Line_13 $$ if (Character.isDigit(c)) [ CD ]
Line_5 $$ while (index < name.length()) -->Line_10 $$ int specialCount = 0[ CD ]
