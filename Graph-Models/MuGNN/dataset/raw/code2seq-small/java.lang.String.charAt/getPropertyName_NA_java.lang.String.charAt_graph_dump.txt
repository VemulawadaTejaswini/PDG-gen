Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_11 $$ return propertyName[ CD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_4 $$ final VariableKind variableKind = fieldElement.isModifierStatic() ? VariableKind.STATIC_FIELD : VariableKind.FIELD[ CD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_5 $$ final String propertyName = codeStyleManager.variableNameToPropertyName(fieldElement.getName(), variableKind)[ FD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_3 $$ final JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project)[ FD ]
Line_6 $$ if (!fieldElement.isModifierStatic() && fieldElement.isBoolean()) -->Line_7 $$ if (propertyName.startsWith("is") && propertyName.length() > "is".length() && Character.isUpperCase(propertyName.charAt("is".length()))) [ CD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_6 $$ if (!fieldElement.isModifierStatic() && fieldElement.isBoolean()) [ FD ]
Line_5 $$ final String propertyName = codeStyleManager.variableNameToPropertyName(fieldElement.getName(), variableKind)-->Line_7 $$ if (propertyName.startsWith("is") && propertyName.length() > "is".length() && Character.isUpperCase(propertyName.charAt("is".length()))) [ FD ]
Line_7 $$ if (propertyName.startsWith("is") && propertyName.length() > "is".length() && Character.isUpperCase(propertyName.charAt("is".length()))) -->Line_8 $$ return StringUtil.decapitalize(propertyName.substring("is".length()))[ CD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_3 $$ final JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project)[ CD ]
Line_3 $$ final JavaCodeStyleManager codeStyleManager = JavaCodeStyleManager.getInstance(project)-->Line_5 $$ final String propertyName = codeStyleManager.variableNameToPropertyName(fieldElement.getName(), variableKind)[ FD ]
Line_5 $$ final String propertyName = codeStyleManager.variableNameToPropertyName(fieldElement.getName(), variableKind)-->Line_8 $$ return StringUtil.decapitalize(propertyName.substring("is".length()))[ FD ]
Line_4 $$ final VariableKind variableKind = fieldElement.isModifierStatic() ? VariableKind.STATIC_FIELD : VariableKind.FIELD-->Line_5 $$ final String propertyName = codeStyleManager.variableNameToPropertyName(fieldElement.getName(), variableKind)[ FD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_4 $$ final VariableKind variableKind = fieldElement.isModifierStatic() ? VariableKind.STATIC_FIELD : VariableKind.FIELD[ FD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_6 $$ if (!fieldElement.isModifierStatic() && fieldElement.isBoolean()) [ CD ]
Line_2 $$ public static String getPropertyName(FieldElement fieldElement, Project project) -->Line_5 $$ final String propertyName = codeStyleManager.variableNameToPropertyName(fieldElement.getName(), variableKind)[ CD ]
