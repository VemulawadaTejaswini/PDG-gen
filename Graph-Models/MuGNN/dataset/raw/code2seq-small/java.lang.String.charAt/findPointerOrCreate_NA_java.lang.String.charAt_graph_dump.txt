Line_24 $$ FilePointerPartNode newNode = new FilePointerPartNode(pathRest, this, fileAndUrl)-->Line_34 $$ if (newNode != this) [ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_38 $$ FilePointerPartNode splittedAway = new FilePointerPartNode(part.substring(index - start), this, myFileAndUrl)[ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_4 $$ if (index == path.length() && index - start == part.length()) [ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_30 $$ if (index > start + 1 && index != path.length() && path.charAt(index - 1) == '/')[ FD ]
Line_11 $$ if (index - start == part.length()) -->Line_24 $$ FilePointerPartNode newNode = new FilePointerPartNode(pathRest, this, fileAndUrl)[ CD ]
Line_4 $$ if (index == path.length() && index - start == part.length()) -->Line_6 $$ if (leaves == null) [ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_3 $$ int index = indexOfFirstDifferentChar(path, start)[ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_35 $$ newNode.pointersUnder = pointersToStore[ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_51 $$ return newNode[ CD ]
Line_11 $$ if (index - start == part.length()) -->Line_28 $$ return newNode[ CD ]
Line_3 $$ int index = indexOfFirstDifferentChar(path, start)-->Line_32 $$ String pathRest = path.substring(index)[ FD ]
Line_11 $$ if (index - start == part.length()) -->Line_26 $$ children = ArrayUtil.append(children, newNode)[ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_11 $$ if (index - start == part.length()) [ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_15 $$ if (i != index && (i > index + 1 || path.charAt(index) != '/' || index == 0)) [ FD ]
Line_3 $$ int index = indexOfFirstDifferentChar(path, start)-->Line_15 $$ if (i != index && (i > index + 1 || path.charAt(index) != '/' || index == 0)) [ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_25 $$ newNode.pointersUnder += pointersToStore[ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_32 $$ String pathRest = path.substring(index)[ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_34 $$ if (newNode != this) [ CD ]
Line_13 $$ for (FilePointerPartNode child : children) -->Line_14 $$ int i = child.indexOfFirstDifferentChar(path, index)[ FD ]
Line_11 $$ if (index - start == part.length()) -->Line_23 $$ String pathRest = path.substring(index)[ CD ]
Line_30 $$ if (index > start + 1 && index != path.length() && path.charAt(index - 1) == '/')-->Line_31 $$ index--[ CD ]
Line_34 $$ if (newNode != this) -->Line_35 $$ newNode.pointersUnder = pointersToStore[ CD ]
Line_3 $$ int index = indexOfFirstDifferentChar(path, start)-->Line_31 $$ index--[ FD ]
Line_38 $$ FilePointerPartNode splittedAway = new FilePointerPartNode(part.substring(index - start), this, myFileAndUrl)-->Line_45 $$ splittedAway.associate(leaves, myFileAndUrl)[ FD ]
Line_38 $$ FilePointerPartNode splittedAway = new FilePointerPartNode(part.substring(index - start), this, myFileAndUrl)-->Line_41 $$ child.parent = splittedAway[ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_14 $$ int i = child.indexOfFirstDifferentChar(path, index)[ FD ]
Line_15 $$ if (i != index && (i > index + 1 || path.charAt(index) != '/' || index == 0)) -->Line_17 $$ if (node.leaves == null) [ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_46 $$ associate(null, null)[ CD ]
Line_3 $$ int index = indexOfFirstDifferentChar(path, start)-->Line_23 $$ String pathRest = path.substring(index)[ FD ]
Line_15 $$ if (i != index && (i > index + 1 || path.charAt(index) != '/' || index == 0)) -->Line_20 $$ return node[ CD ]
Line_11 $$ if (index - start == part.length()) -->Line_25 $$ newNode.pointersUnder += pointersToStore[ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_32 $$ String pathRest = path.substring(index)[ FD ]
Line_24 $$ FilePointerPartNode newNode = new FilePointerPartNode(pathRest, this, fileAndUrl)-->Line_26 $$ children = ArrayUtil.append(children, newNode)[ FD ]
Line_3 $$ int index = indexOfFirstDifferentChar(path, start)-->Line_16 $$ FilePointerPartNode node = child.findPointerOrCreate(path, index, fileAndUrl, pointersToStore)[ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_30 $$ if (index > start + 1 && index != path.length() && path.charAt(index - 1) == '/')[ CD ]
Line_3 $$ int index = indexOfFirstDifferentChar(path, start)-->Line_14 $$ int i = child.indexOfFirstDifferentChar(path, index)[ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_23 $$ String pathRest = path.substring(index)[ FD ]
Line_4 $$ if (index == path.length() && index - start == part.length()) -->Line_9 $$ return this[ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_3 $$ int index = indexOfFirstDifferentChar(path, start)[ FD ]
Line_15 $$ if (i != index && (i > index + 1 || path.charAt(index) != '/' || index == 0)) -->Line_16 $$ FilePointerPartNode node = child.findPointerOrCreate(path, index, fileAndUrl, pointersToStore)[ CD ]
Line_13 $$ for (FilePointerPartNode child : children) -->Line_16 $$ FilePointerPartNode node = child.findPointerOrCreate(path, index, fileAndUrl, pointersToStore)[ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_37 $$ String commonPredecessor = StringUtil.first(part, index - start, false)[ CD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_16 $$ FilePointerPartNode node = child.findPointerOrCreate(path, index, fileAndUrl, pointersToStore)[ FD ]
Line_23 $$ String pathRest = path.substring(index)-->Line_33 $$ FilePointerPartNode newNode = pathRest.isEmpty() ? this : new FilePointerPartNode(pathRest, this, fileAndUrl)[ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_4 $$ if (index == path.length() && index - start == part.length()) [ FD ]
Line_2 $$ FilePointerPartNode findPointerOrCreate(@NotNull String path, int start, @NotNull Pair<VirtualFile, String> fileAndUrl, int pointersToStore) -->Line_45 $$ splittedAway.associate(leaves, myFileAndUrl)[ CD ]
