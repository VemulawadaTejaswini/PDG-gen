Line_2 $$ private static String suggestNewName(Project project, PsiVariable variable) -->Line_3 $$ String name = variable.getName()[ FD ]
Line_2 $$ private static String suggestNewName(Project project, PsiVariable variable) -->Line_7 $$ return JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(name, variable, true)[ CD ]
Line_2 $$ private static String suggestNewName(Project project, PsiVariable variable) -->Line_3 $$ String name = variable.getName()[ CD ]
Line_2 $$ private static String suggestNewName(Project project, PsiVariable variable) -->Line_4 $$ if (name.length() > 1 && Character.isDigit(name.charAt(name.length() - 1))) [ CD ]
Line_3 $$ String name = variable.getName()-->Line_4 $$ if (name.length() > 1 && Character.isDigit(name.charAt(name.length() - 1))) [ FD ]
Line_3 $$ String name = variable.getName()-->Line_5 $$ name = name.substring(0, name.length() - 1)[ FD ]
Line_4 $$ if (name.length() > 1 && Character.isDigit(name.charAt(name.length() - 1))) -->Line_5 $$ name = name.substring(0, name.length() - 1)[ CD ]
Line_3 $$ String name = variable.getName()-->Line_7 $$ return JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(name, variable, true)[ FD ]
Line_5 $$ name = name.substring(0, name.length() - 1)-->Line_7 $$ return JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(name, variable, true)[ FD ]
Line_2 $$ private static String suggestNewName(Project project, PsiVariable variable) -->Line_7 $$ return JavaCodeStyleManager.getInstance(project).suggestUniqueVariableName(name, variable, true)[ FD ]
