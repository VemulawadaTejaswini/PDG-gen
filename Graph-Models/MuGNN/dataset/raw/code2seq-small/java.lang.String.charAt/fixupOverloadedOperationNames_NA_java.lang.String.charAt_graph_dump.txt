Line_14 $$ if (params.length == 0)-->Line_15 $$ b.append("__")[ CD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_33 $$ s = s.substring(idx + 3)[ FD ]
Line_19 $$ s = s.substring(2)-->Line_31 $$ b.append(s.substring(0, idx))[ FD ]
Line_19 $$ s = s.substring(2)-->Line_35 $$ s = s.substring(idx + 2)[ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_16 $$ for (int j = 0; j < params.length; ++j) [ CD ]
Line_29 $$ s = ""-->Line_31 $$ b.append(s.substring(0, idx))[ FD ]
Line_19 $$ s = s.substring(2)-->Line_29 $$ s = ""[ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_14 $$ if (params.length == 0)[ CD ]
Line_16 $$ for (int j = 0; j < params.length; ++j) -->Line_18 $$ if (s.startsWith("::"))[ CD ]
Line_35 $$ s = s.substring(idx + 2)-->Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') [ FD ]
Line_16 $$ for (int j = 0; j < params.length; ++j) -->Line_23 $$ b.append('_')[ CD ]
Line_24 $$ while (!"".equals(s)) -->Line_26 $$ b.append('_')[ CD ]
Line_35 $$ s = s.substring(idx + 2)-->Line_31 $$ b.append(s.substring(0, idx))[ FD ]
Line_33 $$ s = s.substring(idx + 3)-->Line_24 $$ while (!"".equals(s)) [ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_19 $$ s = s.substring(2)[ FD ]
Line_6 $$ OperationAnalysis oa = null-->Line_9 $$ oa = operations[opIdx][ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_6 $$ OperationAnalysis oa = null[ CD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_8 $$ for (int opIdx = 0; oa == null && opIdx < operations.length; ++opIdx) if (operations[opIdx].getMethod().equals(methods[i]))[ CD ]
Line_19 $$ s = s.substring(2)-->Line_33 $$ s = s.substring(idx + 3)[ FD ]
Line_21 $$ s = s.substring(1)-->Line_31 $$ b.append(s.substring(0, idx))[ FD ]
Line_35 $$ s = s.substring(idx + 2)-->Line_25 $$ int idx = s.indexOf("::")[ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_28 $$ b.append(s)[ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_21 $$ s = s.substring(1)[ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_29 $$ s = ""[ FD ]
Line_33 $$ s = s.substring(idx + 3)-->Line_35 $$ s = s.substring(idx + 2)[ FD ]
Line_21 $$ s = s.substring(1)-->Line_18 $$ if (s.startsWith("::"))[ FD ]
Line_18 $$ if (s.startsWith("::"))-->Line_19 $$ s = s.substring(2)[ CD ]
Line_9 $$ oa = operations[opIdx]-->Line_10 $$ if (oa == null)[ FD ]
Line_27 $$ if (idx == -1) -->Line_28 $$ b.append(s)[ CD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_20 $$ if (s.startsWith("_")) [ FD ]
Line_2 $$ protected void fixupOverloadedOperationNames() throws RMIIIOPViolationException -->Line_3 $$ for (int i = 0; i < methods.length; ++i) [ CD ]
Line_21 $$ s = s.substring(1)-->Line_35 $$ s = s.substring(idx + 2)[ FD ]
Line_29 $$ s = ""-->Line_28 $$ b.append(s)[ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_35 $$ s = s.substring(idx + 2)[ FD ]
Line_9 $$ oa = operations[opIdx]-->Line_13 $$ StringBuffer b = new StringBuffer(oa.getIDLName())[ FD ]
Line_25 $$ int idx = s.indexOf("::")-->Line_27 $$ if (idx == -1) [ FD ]
Line_6 $$ OperationAnalysis oa = null-->Line_10 $$ if (oa == null)[ FD ]
Line_16 $$ for (int j = 0; j < params.length; ++j) -->Line_20 $$ if (s.startsWith("_")) [ CD ]
Line_19 $$ s = s.substring(2)-->Line_24 $$ while (!"".equals(s)) [ FD ]
Line_24 $$ while (!"".equals(s)) -->Line_27 $$ if (idx == -1) [ CD ]
Line_21 $$ s = s.substring(1)-->Line_24 $$ while (!"".equals(s)) [ FD ]
Line_21 $$ s = s.substring(1)-->Line_29 $$ s = ""[ FD ]
Line_33 $$ s = s.substring(idx + 3)-->Line_25 $$ int idx = s.indexOf("::")[ FD ]
Line_29 $$ s = ""-->Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') [ FD ]
Line_6 $$ OperationAnalysis oa = null-->Line_13 $$ StringBuffer b = new StringBuffer(oa.getIDLName())[ FD ]
Line_29 $$ s = ""-->Line_35 $$ s = s.substring(idx + 2)[ FD ]
Line_27 $$ if (idx == -1) -->Line_31 $$ b.append(s.substring(0, idx))[ CD ]
Line_21 $$ s = s.substring(1)-->Line_25 $$ int idx = s.indexOf("::")[ FD ]
Line_21 $$ s = s.substring(1)-->Line_33 $$ s = s.substring(idx + 3)[ FD ]
Line_29 $$ s = ""-->Line_24 $$ while (!"".equals(s)) [ FD ]
Line_21 $$ s = s.substring(1)-->Line_20 $$ if (s.startsWith("_")) [ FD ]
Line_16 $$ for (int j = 0; j < params.length; ++j) -->Line_24 $$ while (!"".equals(s)) [ CD ]
Line_9 $$ oa = operations[opIdx]-->Line_40 $$ oa.setIDLName(b.toString())[ FD ]
Line_20 $$ if (s.startsWith("_")) -->Line_21 $$ s = s.substring(1)[ CD ]
Line_9 $$ oa = operations[opIdx]-->Line_12 $$ ParameterAnalysis[] params = oa.getParameters()[ FD ]
Line_33 $$ s = s.substring(idx + 3)-->Line_31 $$ b.append(s.substring(0, idx))[ FD ]
Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') -->Line_35 $$ s = s.substring(idx + 2)[ CD ]
Line_35 $$ s = s.substring(idx + 2)-->Line_24 $$ while (!"".equals(s)) [ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_10 $$ if (oa == null)[ CD ]
Line_16 $$ for (int j = 0; j < params.length; ++j) -->Line_17 $$ String s = params[j].getTypeIDLName()[ CD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_18 $$ if (s.startsWith("::"))[ FD ]
Line_33 $$ s = s.substring(idx + 3)-->Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') [ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_4 $$ if ((m_flags[i] & M_OVERLOADED) == 0)[ CD ]
Line_19 $$ s = s.substring(2)-->Line_20 $$ if (s.startsWith("_")) [ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_24 $$ while (!"".equals(s)) [ FD ]
Line_27 $$ if (idx == -1) -->Line_29 $$ s = ""[ CD ]
Line_19 $$ s = s.substring(2)-->Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') [ FD ]
Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') -->Line_33 $$ s = s.substring(idx + 3)[ CD ]
Line_35 $$ s = s.substring(idx + 2)-->Line_33 $$ s = s.substring(idx + 3)[ FD ]
Line_19 $$ s = s.substring(2)-->Line_28 $$ b.append(s)[ FD ]
Line_27 $$ if (idx == -1) -->Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') [ CD ]
Line_6 $$ OperationAnalysis oa = null-->Line_12 $$ ParameterAnalysis[] params = oa.getParameters()[ FD ]
Line_25 $$ int idx = s.indexOf("::")-->Line_31 $$ b.append(s.substring(0, idx))[ FD ]
Line_35 $$ s = s.substring(idx + 2)-->Line_28 $$ b.append(s)[ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_25 $$ int idx = s.indexOf("::")[ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_40 $$ oa.setIDLName(b.toString())[ CD ]
Line_19 $$ s = s.substring(2)-->Line_21 $$ s = s.substring(1)[ FD ]
Line_19 $$ s = s.substring(2)-->Line_18 $$ if (s.startsWith("::"))[ FD ]
Line_29 $$ s = ""-->Line_25 $$ int idx = s.indexOf("::")[ FD ]
Line_21 $$ s = s.substring(1)-->Line_19 $$ s = s.substring(2)[ FD ]
Line_6 $$ OperationAnalysis oa = null-->Line_40 $$ oa.setIDLName(b.toString())[ FD ]
Line_19 $$ s = s.substring(2)-->Line_25 $$ int idx = s.indexOf("::")[ FD ]
Line_8 $$ if (operations[opIdx].getMethod().equals(methods[i]))-->Line_9 $$ oa = operations[opIdx][ CD ]
Line_24 $$ while (!"".equals(s)) -->Line_25 $$ int idx = s.indexOf("::")[ CD ]
Line_21 $$ s = s.substring(1)-->Line_28 $$ b.append(s)[ FD ]
Line_33 $$ s = s.substring(idx + 3)-->Line_28 $$ b.append(s)[ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_7 $$ String javaName = methods[i].getName()[ CD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') [ FD ]
Line_17 $$ String s = params[j].getTypeIDLName()-->Line_31 $$ b.append(s.substring(0, idx))[ FD ]
Line_29 $$ s = ""-->Line_33 $$ s = s.substring(idx + 3)[ FD ]
Line_21 $$ s = s.substring(1)-->Line_32 $$ if (s.length() > idx + 2 && s.charAt(idx + 2) == '_') [ FD ]
Line_3 $$ for (int i = 0; i < methods.length; ++i) -->Line_12 $$ ParameterAnalysis[] params = oa.getParameters()[ CD ]
