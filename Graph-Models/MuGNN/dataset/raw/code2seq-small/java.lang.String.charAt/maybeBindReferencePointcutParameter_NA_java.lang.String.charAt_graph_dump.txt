Line_28 $$ if (!nonReferencePointcutTokens.contains(toMatch)) -->Line_30 $$ if (varName != null) [ CD ]
Line_7 $$ String[] tokens = StringUtils.tokenizeToStringArray(this.pointcutExpression, " ")-->Line_26 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_35 $$ if (varNames.size() > 1) [ FD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_31 $$ varNames.add(varName)[ FD ]
Line_9 $$ String toMatch = tokens[i]-->Line_10 $$ if (toMatch.startsWith("!")) [ FD ]
Line_11 $$ toMatch = toMatch.substring(1)-->Line_10 $$ if (toMatch.startsWith("!")) [ FD ]
Line_9 $$ String toMatch = tokens[i]-->Line_11 $$ toMatch = toMatch.substring(1)[ FD ]
Line_39 $$ if (isUnbound(j)) -->Line_40 $$ bindParameterName(j, varNames.get(0))[ CD ]
Line_13 $$ int firstParenIndex = toMatch.indexOf("(")-->Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)[ FD ]
Line_2 $$ private void maybeBindReferencePointcutParameter() -->Line_6 $$ List<String> varNames = new ArrayList<String>()[ CD ]
Line_2 $$ private void maybeBindReferencePointcutParameter() -->Line_7 $$ String[] tokens = StringUtils.tokenizeToStringArray(this.pointcutExpression, " ")[ CD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_40 $$ bindParameterName(j, varNames.get(0))[ FD ]
Line_27 $$ i += body.numTokensConsumed-->Line_8 $$ for (int i = 0; i < tokens.length; i++) [ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_27 $$ i += body.numTokensConsumed[ CD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_14 $$ if (firstParenIndex != -1) [ CD ]
Line_9 $$ String toMatch = tokens[i]-->Line_13 $$ int firstParenIndex = toMatch.indexOf("(")[ FD ]
Line_29 $$ String varName = maybeExtractVariableName(body.text)-->Line_31 $$ varNames.add(varName)[ FD ]
Line_35 $$ if (varNames.size() > 1) -->Line_37 $$ if (varNames.size() == 1) [ CD ]
Line_17 $$ if (tokens.length < i + 2) -->Line_21 $$ if (nextToken.charAt(0) != '(') [ CD ]
Line_2 $$ private void maybeBindReferencePointcutParameter() -->Line_35 $$ if (varNames.size() > 1) [ CD ]
Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)-->Line_13 $$ int firstParenIndex = toMatch.indexOf("(")[ FD ]
Line_38 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) -->Line_39 $$ if (isUnbound(j)) [ CD ]
Line_38 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) -->Line_39 $$ if (isUnbound(j)) [ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_9 $$ String toMatch = tokens[i][ CD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_37 $$ if (varNames.size() == 1) [ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_28 $$ if (!nonReferencePointcutTokens.contains(toMatch)) [ CD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_27 $$ i += body.numTokensConsumed[ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_13 $$ int firstParenIndex = toMatch.indexOf("(")[ CD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_26 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_13 $$ int firstParenIndex = toMatch.indexOf("(")-->Line_14 $$ if (firstParenIndex != -1) [ FD ]
Line_30 $$ if (varName != null) -->Line_31 $$ varNames.add(varName)[ CD ]
Line_38 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) -->Line_40 $$ bindParameterName(j, varNames.get(0))[ FD ]
Line_14 $$ if (firstParenIndex != -1) -->Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)[ CD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_26 $$ PointcutBody body = getPointcutBody(tokens, i)[ CD ]
Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)-->Line_10 $$ if (toMatch.startsWith("!")) [ FD ]
Line_37 $$ if (varNames.size() == 1) -->Line_38 $$ for (int j = 0; j < this.parameterNameBindings.length; j++) [ CD ]
Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)-->Line_11 $$ toMatch = toMatch.substring(1)[ FD ]
Line_20 $$ String nextToken = tokens[i + 1]-->Line_21 $$ if (nextToken.charAt(0) != '(') [ FD ]
Line_11 $$ toMatch = toMatch.substring(1)-->Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)[ FD ]
Line_9 $$ String toMatch = tokens[i]-->Line_28 $$ if (!nonReferencePointcutTokens.contains(toMatch)) [ FD ]
Line_11 $$ toMatch = toMatch.substring(1)-->Line_28 $$ if (!nonReferencePointcutTokens.contains(toMatch)) [ FD ]
Line_27 $$ i += body.numTokensConsumed-->Line_26 $$ PointcutBody body = getPointcutBody(tokens, i)[ FD ]
Line_2 $$ private void maybeBindReferencePointcutParameter() -->Line_3 $$ if (this.numberOfRemainingUnboundArguments > 1) [ CD ]
Line_28 $$ if (!nonReferencePointcutTokens.contains(toMatch)) -->Line_29 $$ String varName = maybeExtractVariableName(body.text)[ CD ]
Line_2 $$ private void maybeBindReferencePointcutParameter() -->Line_8 $$ for (int i = 0; i < tokens.length; i++) [ CD ]
Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)-->Line_28 $$ if (!nonReferencePointcutTokens.contains(toMatch)) [ FD ]
Line_17 $$ if (tokens.length < i + 2) -->Line_20 $$ String nextToken = tokens[i + 1][ CD ]
Line_9 $$ String toMatch = tokens[i]-->Line_15 $$ toMatch = toMatch.substring(0, firstParenIndex)[ FD ]
Line_8 $$ for (int i = 0; i < tokens.length; i++) -->Line_10 $$ if (toMatch.startsWith("!")) [ CD ]
Line_10 $$ if (toMatch.startsWith("!")) -->Line_11 $$ toMatch = toMatch.substring(1)[ CD ]
Line_11 $$ toMatch = toMatch.substring(1)-->Line_13 $$ int firstParenIndex = toMatch.indexOf("(")[ FD ]
Line_29 $$ String varName = maybeExtractVariableName(body.text)-->Line_30 $$ if (varName != null) [ FD ]
Line_6 $$ List<String> varNames = new ArrayList<String>()-->Line_36 $$ throw new AmbiguousBindingException("Found " + varNames.size() + " candidate reference pointcut variables but only one unbound argument slot")[ FD ]
Line_14 $$ if (firstParenIndex != -1) -->Line_17 $$ if (tokens.length < i + 2) [ CD ]
