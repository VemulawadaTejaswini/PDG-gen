Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_6 $$ final StringBuilder result = new StringBuilder()[ CD ]
Line_9 $$ final char ch = str.charAt(i)-->Line_27 $$ if (ch == '}') [ FD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_7 $$ final StringBuilder variable = new StringBuilder()[ CD ]
Line_12 $$ if (ch == '$')-->Line_15 $$ result.append(ch)[ CD ]
Line_18 $$ if (ch == '-->Line_23 $$ result.append('$').append(ch)[ CD ]
Line_8 $$ for (int i = 0; i < str.length(); i++) -->Line_9 $$ final char ch = str.charAt(i)[ FD ]
Line_27 $$ if (ch == '}') -->Line_28 $$ final String value = map.get(variable.toString())[ CD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_5 $$ int state = 0[ CD ]
Line_9 $$ final char ch = str.charAt(i)-->Line_23 $$ result.append('$').append(ch)[ FD ]
Line_6 $$ final StringBuilder result = new StringBuilder()-->Line_23 $$ result.append('$').append(ch)[ FD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_3 $$ if (str.indexOf("$[ FD ]
Line_9 $$ final char ch = str.charAt(i)-->Line_32 $$ variable.append(ch)[ FD ]
Line_13 $$ state = 1-->Line_22 $$ state = 0[ FD ]
Line_9 $$ final char ch = str.charAt(i)-->Line_18 $$ if (ch == '[ FD ]
Line_6 $$ final StringBuilder result = new StringBuilder()-->Line_37 $$ return result.toString()[ FD ]
Line_22 $$ state = 0-->Line_30 $$ state = 0[ FD ]
Line_8 $$ for (int i = 0; i < str.length(); i++) -->Line_9 $$ final char ch = str.charAt(i)[ CD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_3 $$ if (str.indexOf("$[ CD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_8 $$ for (int i = 0; i < str.length(); i++) [ FD ]
Line_5 $$ int state = 0-->Line_13 $$ state = 1[ FD ]
Line_6 $$ final StringBuilder result = new StringBuilder()-->Line_15 $$ result.append(ch)[ FD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_9 $$ final char ch = str.charAt(i)[ FD ]
Line_13 $$ state = 1-->Line_19 $$ state = 2[ FD ]
Line_7 $$ final StringBuilder variable = new StringBuilder()-->Line_28 $$ final String value = map.get(variable.toString())[ FD ]
Line_9 $$ final char ch = str.charAt(i)-->Line_12 $$ if (ch == '$')[ FD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_37 $$ return result.toString()[ CD ]
Line_5 $$ int state = 0-->Line_19 $$ state = 2[ FD ]
Line_27 $$ if (ch == '}') -->Line_30 $$ state = 0[ CD ]
Line_9 $$ final char ch = str.charAt(i)-->Line_15 $$ result.append(ch)[ FD ]
Line_18 $$ if (ch == '-->Line_19 $$ state = 2[ CD ]
Line_27 $$ if (ch == '}') -->Line_32 $$ variable.append(ch)[ CD ]
Line_12 $$ if (ch == '$')-->Line_13 $$ state = 1[ CD ]
Line_27 $$ if (ch == '}') -->Line_29 $$ result.append(value == null ? variable : value)[ CD ]
Line_13 $$ state = 1-->Line_30 $$ state = 0[ FD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_8 $$ for (int i = 0; i < str.length(); i++) [ CD ]
Line_6 $$ final StringBuilder result = new StringBuilder()-->Line_29 $$ result.append(value == null ? variable : value)[ FD ]
Line_2 $$ public static String expandProperties(final String str, final Map<String, String> map) -->Line_28 $$ final String value = map.get(variable.toString())[ FD ]
Line_19 $$ state = 2-->Line_22 $$ state = 0[ FD ]
Line_7 $$ final StringBuilder variable = new StringBuilder()-->Line_32 $$ variable.append(ch)[ FD ]
Line_3 $$ if (str.indexOf("$-->Line_4 $$ return str[ CD ]
Line_7 $$ final StringBuilder variable = new StringBuilder()-->Line_20 $$ variable.setLength(0)[ FD ]
Line_5 $$ int state = 0-->Line_30 $$ state = 0[ FD ]
Line_5 $$ int state = 0-->Line_22 $$ state = 0[ FD ]
Line_19 $$ state = 2-->Line_30 $$ state = 0[ FD ]
Line_18 $$ if (ch == '-->Line_22 $$ state = 0[ CD ]
Line_18 $$ if (ch == '-->Line_20 $$ variable.setLength(0)[ CD ]
