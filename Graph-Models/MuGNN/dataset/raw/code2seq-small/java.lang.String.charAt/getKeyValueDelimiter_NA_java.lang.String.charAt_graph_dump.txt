Line_13 $$ separatorText = " "-->Line_15 $$ LOG.assertTrue(separatorText.length() == 1, "\"" + separatorText + "\"")[ FD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_16 $$ return separatorText.charAt(0)[ CD ]
Line_7 $$ String separatorText = delimiter.getText()-->Line_11 $$ separatorText = separatorText.trim()[ FD ]
Line_7 $$ String separatorText = delimiter.getText()-->Line_8 $$ if (separatorText.isEmpty()) [ FD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_12 $$ if (separatorText.isEmpty()) [ CD ]
Line_7 $$ String separatorText = delimiter.getText()-->Line_12 $$ if (separatorText.isEmpty()) [ FD ]
Line_7 $$ String separatorText = delimiter.getText()-->Line_13 $$ separatorText = " "[ FD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_15 $$ LOG.assertTrue(separatorText.length() == 1, "\"" + separatorText + "\"")[ CD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_11 $$ separatorText = separatorText.trim()[ CD ]
Line_7 $$ String separatorText = delimiter.getText()-->Line_16 $$ return separatorText.charAt(0)[ FD ]
Line_13 $$ separatorText = " "-->Line_16 $$ return separatorText.charAt(0)[ FD ]
Line_11 $$ separatorText = separatorText.trim()-->Line_12 $$ if (separatorText.isEmpty()) [ FD ]
Line_3 $$ final PsiElement delimiter = findChildByType(PropertiesTokenTypes.KEY_VALUE_SEPARATOR)-->Line_4 $$ if (delimiter == null) [ FD ]
Line_11 $$ separatorText = separatorText.trim()-->Line_16 $$ return separatorText.charAt(0)[ FD ]
Line_4 $$ if (delimiter == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_3 $$ final PsiElement delimiter = findChildByType(PropertiesTokenTypes.KEY_VALUE_SEPARATOR)[ CD ]
Line_8 $$ if (separatorText.isEmpty()) -->Line_9 $$ return null[ CD ]
Line_11 $$ separatorText = separatorText.trim()-->Line_13 $$ separatorText = " "[ FD ]
Line_3 $$ final PsiElement delimiter = findChildByType(PropertiesTokenTypes.KEY_VALUE_SEPARATOR)-->Line_7 $$ String separatorText = delimiter.getText()[ FD ]
Line_12 $$ if (separatorText.isEmpty()) -->Line_13 $$ separatorText = " "[ CD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_7 $$ String separatorText = delimiter.getText()[ CD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_8 $$ if (separatorText.isEmpty()) [ CD ]
Line_2 $$ public Character getKeyValueDelimiter() -->Line_4 $$ if (delimiter == null) [ CD ]
Line_11 $$ separatorText = separatorText.trim()-->Line_15 $$ LOG.assertTrue(separatorText.length() == 1, "\"" + separatorText + "\"")[ FD ]
Line_7 $$ String separatorText = delimiter.getText()-->Line_15 $$ LOG.assertTrue(separatorText.length() == 1, "\"" + separatorText + "\"")[ FD ]
