Line_2 $$ public static String getRelativePath(FilePath parent, FilePath child) -->Line_4 $$ final String systemDependentParent = parent == null ? null : parent.getPath().replace('/', File.separatorChar)[ FD ]
Line_3 $$ final String systemDependentChild = child.getPath().replace('/', File.separatorChar)-->Line_5 $$ if (systemDependentParent == null || !systemDependentChild.startsWith(systemDependentParent)) [ FD ]
Line_2 $$ public static String getRelativePath(FilePath parent, FilePath child) -->Line_8 $$ final int beginOffset = (systemDependentParent.length() == 1 && '/' == systemDependentParent.charAt(0)) ? 0 : 1[ CD ]
Line_2 $$ public static String getRelativePath(FilePath parent, FilePath child) -->Line_9 $$ return systemDependentChild.substring(systemDependentParent.length() + beginOffset).replace('/', File.separatorChar)[ CD ]
Line_4 $$ final String systemDependentParent = parent == null ? null : parent.getPath().replace('/', File.separatorChar)-->Line_9 $$ return systemDependentChild.substring(systemDependentParent.length() + beginOffset).replace('/', File.separatorChar)[ FD ]
Line_2 $$ public static String getRelativePath(FilePath parent, FilePath child) -->Line_3 $$ final String systemDependentChild = child.getPath().replace('/', File.separatorChar)[ CD ]
Line_4 $$ final String systemDependentParent = parent == null ? null : parent.getPath().replace('/', File.separatorChar)-->Line_5 $$ if (systemDependentParent == null || !systemDependentChild.startsWith(systemDependentParent)) [ FD ]
Line_2 $$ public static String getRelativePath(FilePath parent, FilePath child) -->Line_5 $$ if (systemDependentParent == null || !systemDependentChild.startsWith(systemDependentParent)) [ CD ]
Line_2 $$ public static String getRelativePath(FilePath parent, FilePath child) -->Line_4 $$ final String systemDependentParent = parent == null ? null : parent.getPath().replace('/', File.separatorChar)[ CD ]
Line_4 $$ final String systemDependentParent = parent == null ? null : parent.getPath().replace('/', File.separatorChar)-->Line_8 $$ final int beginOffset = (systemDependentParent.length() == 1 && '/' == systemDependentParent.charAt(0)) ? 0 : 1[ FD ]
Line_3 $$ final String systemDependentChild = child.getPath().replace('/', File.separatorChar)-->Line_9 $$ return systemDependentChild.substring(systemDependentParent.length() + beginOffset).replace('/', File.separatorChar)[ FD ]
Line_2 $$ public static String getRelativePath(FilePath parent, FilePath child) -->Line_3 $$ final String systemDependentChild = child.getPath().replace('/', File.separatorChar)[ FD ]
Line_5 $$ if (systemDependentParent == null || !systemDependentChild.startsWith(systemDependentParent)) -->Line_6 $$ return systemDependentChild[ CD ]
