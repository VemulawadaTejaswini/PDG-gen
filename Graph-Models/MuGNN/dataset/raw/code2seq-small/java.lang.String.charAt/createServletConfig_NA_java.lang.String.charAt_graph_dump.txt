Line_374 $$ if (activity != null) -->Line_375 $$ suspendControllerInjectedValue.getValue().unRegisterActivity(activity)[ CD ]
Line_276 $$ errorPage = new ErrorPage(page.getLocation())-->Line_278 $$ d.addErrorPages(errorPage)[ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_162 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_391 $$ PredicatedHandler ph = predicatedHandlers.get(0)-->Line_392 $$ return Handlers.predicate(ph.getPredicate(), ph.getHandler().wrap(handler), handler)[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_213 $$ for (String url : mapping.getUrlPatterns()) [ FD ]
Line_175 $$ if (servlet.getMultipartConfig() != null) -->Line_176 $$ MultipartConfigMetaData mp = servlet.getMultipartConfig()[ CD ]
Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null-->Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(jspServlet.getName())[ FD ]
Line_63 $$ HashMap<String, JspPropertyGroup> propertyGroups = createJspConfig(mergedMetaData)-->Line_64 $$ JspServletBuilder.setupDeployment(d, propertyGroups, tldInfo, new UndertowJSPInstanceManager(new WebInjectionContainer(module.getClassLoader(), componentRegistryInjectedValue.getValue())))[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_175 $$ if (servlet.getMultipartConfig() != null) [ FD ]
Line_171 $$ for (final SecurityRoleRefMetaData ref : servlet.getSecurityRoleRefs()) -->Line_172 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_20 $$ if (externalResources != null && !externalResources.isEmpty()) -->Line_21 $$ List<ResourceManager> delegates = new ArrayList()[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_58 $$ JSPConfig jspConfig = servletContainer.getJspConfig()[ FD ]
Line_324 $$ if (securityDomain != null) -->Line_325 $$ d.addThreadSetupAction(new SecurityContextThreadSetupAction(securityDomain, securityDomainContextValue.getValue(), principalVersusRolesMap))[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_379 $$ d.addListener(new ListenerInfo(sl.getClass(), new ImmediateInstanceFactory<EventListener>(sl)))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_233 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_240 $$ for (final ServletContainerInitializer sci : scisMetaData.getScis()) -->Line_242 $$ d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getClass(), instanceFactory, scisMetaData.getHandlesTypes().get(sci)))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_32 $$ d.setTempDir(tempDir)[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_10 $$ d.setContextPath(resolveContextPath())[ FD ]
Line_258 $$ if (file.startsWith("/")) -->Line_259 $$ d.addWelcomePages(file.substring(1))[ CD ]
Line_191 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_201 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_133 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_196 $$ InstanceFactory<Filter> instanceFactory = createInstanceFactory(creator)[ FD ]
Line_161 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()-->Line_163 $$ securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed())[ FD ]
Line_194 $$ FilterInfo f-->Line_197 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_404 $$ d.setCrawlerSessionManagerConfig(servletContainer.getCrawlerSessionManagerConfig())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_289 $$ d.setDenyUncoveredHttpMethods(mergedMetaData.getDenyUncoveredHttpMethods() != null)[ FD ]
Line_292 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_295 $$ if (constraint.getAuthConstraint() == null) [ FD ]
Line_182 $$ ServletInfo defaultServlet = Servlets.servlet(DEFAULT_SERVLET_NAME, DefaultServlet.class)-->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_257 $$ for (String file : welcomeFiles) -->Line_261 $$ d.addWelcomePages(file)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_176 $$ MultipartConfigMetaData mp = servlet.getMultipartConfig()[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_228 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) [ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_150 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_164 $$ if (servlet.getServletSecurity().getHttpMethodConstraints() != null) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_39 $$ d.setMajorVersion(3)[ FD ]
Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) -->Line_344 $$ final AtomicReference<ServerActivity> serverActivity = new AtomicReference()[ CD ]
Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) -->Line_379 $$ d.addListener(new ListenerInfo(sl.getClass(), new ImmediateInstanceFactory<EventListener>(sl)))[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_12 $$ d.setDisplayName(mergedMetaData.getDescriptionGroup().getDisplayName())[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_179 $$ d.addServlet(s)[ FD ]
Line_22 $$ for (File resource : externalResources) -->Line_23 $$ delegates.add(new FileResourceManager(resource.getCanonicalFile(), 1024, true, mergedMetaData.isSymbolicLinkingEnabled(), "/"))[ FD ]
Line_293 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_300 $$ securityConstraint.addRolesAllowed(roleNames)[ FD ]
Line_399 $$ if (mergedMetaData.getDefaultEncoding() != null) -->Line_400 $$ d.setDefaultEncoding(mergedMetaData.getDefaultEncoding())[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_53 $$ if (d.getMajorVersion() == 2) [ FD ]
Line_52 $$ is22OrOlder = true-->Line_56 $$ is22OrOlder = false[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_163 $$ securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_51 $$ if (d.getMajorVersion() == 1) [ FD ]
Line_246 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_247 $$ addListener(module.getClassLoader(), componentRegistry, d, listener)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_33 $$ d.setClassLoader(module.getClassLoader())[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_121 $$ if (servlet.getJspFile() != null) [ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_59 $$ final Set<String> seenMappings = new HashSet()-->Line_73 $$ seenMappings.addAll(jspPropertyGroupMappings)[ FD ]
Line_323 $$ Map<String, Set<String>> principalVersusRolesMap = mergedMetaData.getPrincipalVersusRolesMap()-->Line_331 $$ for (Map.Entry<String, Set<String>> entry : principalVersusRolesMap.entrySet()) [ FD ]
Line_258 $$ if (file.startsWith("/")) -->Line_261 $$ d.addWelcomePages(file)[ CD ]
Line_80 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_96 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())[ FD ]
Line_56 $$ is22OrOlder = false-->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_388 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() -->Line_394 $$ return Handlers.predicates(predicatedHandlers, handler)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_45 $$ d.setServletStackTraces(servletContainer.getStackTraces())[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_186 $$ if (servletContainer.getDirectoryListingEnabled() != null) [ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_144 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_120 $$ final ServletInfo s-->Line_144 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_278 $$ d.addErrorPages(errorPage)[ FD ]
Line_50 $$ boolean is22OrOlder-->Line_54 $$ is22OrOlder = d.getMinorVersion() < 3[ FD ]
Line_126 $$ if (DEFAULT_SERVLET_NAME.equals(servlet.getName())) -->Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ CD ]
Line_310 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_314 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName(), loginConfig.getFormLoginConfig().getLoginPage(), loginConfig.getFormLoginConfig().getErrorPage()))[ FD ]
Line_98 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())-->Line_106 $$ if (list != null && !list.isEmpty()) [ FD ]
Line_115 $$ final List<JBossServletMetaData> servlets = new ArrayList<JBossServletMetaData>()-->Line_117 $$ servlets.add(servlet)[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_217 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) [ FD ]
Line_143 $$ if (servlet.getRunAs() != null) -->Line_144 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ CD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_172 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_69 $$ final Set<String> jspPropertyGroupMappings = propertyGroups.keySet()-->Line_73 $$ seenMappings.addAll(jspPropertyGroupMappings)[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_162 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null-->Line_109 $$ jspServlet.addMapping(urlPattern)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_43 $$ d.setEagerFilterInit(servletContainer.isEagerFilterInit())[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_233 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_187 $$ ServletInfo defaultServlet = d.getServlets().get(DEFAULT_SERVLET_NAME)[ FD ]
Line_214 $$ if (is22OrOlder && !url.startsWith("*") && !url.startsWith("/")) -->Line_215 $$ url = "/" + url[ CD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_346 $$ serverActivity.set(new ServerActivity() -->Line_351 $$ if (wsc.getConfiguredServerEndpoints().isEmpty()) [ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_76 $$ d.addServletContextAttribute(JspInitializationListener.CONTEXT_KEY, expressionFactoryWrappers)[ FD ]
Line_269 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_272 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))[ FD ]
Line_80 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(jspServlet.getName())[ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_142 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_165 $$ for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) -->Line_166 $$ securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_327 $$ d.addOuterHandlerChainWrapper(JACCContextIdHandler.wrapper(jaccContextId))[ FD ]
Line_199 $$ f = new FilterInfo(filter.getName(), filterClass)-->Line_201 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_215 $$ url = "/" + url-->Line_219 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_273 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) -->Line_276 $$ errorPage = new ErrorPage(page.getLocation())[ CD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_142 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_132 $$ Class<? extends Servlet> servletClass = (Class<? extends Servlet>) module.getClassLoader().loadClass(servlet.getServletClass())[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_155 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_195 $$ if (creator != null) -->Line_196 $$ InstanceFactory<Filter> instanceFactory = createInstanceFactory(creator)[ CD ]
Line_60 $$ HashMap<String, TagLibraryInfo> tldInfo = createTldsInfo(tldsMetaData, sharedTlds)-->Line_64 $$ JspServletBuilder.setupDeployment(d, propertyGroups, tldInfo, new UndertowJSPInstanceManager(new WebInjectionContainer(module.getClassLoader(), componentRegistryInjectedValue.getValue())))[ FD ]
Line_134 $$ if (creator != null) -->Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ CD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_156 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_37 $$ d.setMinorVersion(Integer.parseInt(servletVersion.charAt(2) + ""))[ FD ]
Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) -->Line_341 $$ webSocketDeploymentInfo.setBuffers(servletContainer.getWebsocketsBufferPool().getValue())[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_388 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() [ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_150 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) -->Line_343 $$ webSocketDeploymentInfo.setDispatchToWorkerThread(servletContainer.isDispatchWebsocketInvocationToWorker())[ CD ]
Line_401 $$ if (servletContainer.getDefaultEncoding() != null) -->Line_402 $$ d.setDefaultEncoding(servletContainer.getDefaultEncoding())[ CD ]
Line_50 $$ boolean is22OrOlder-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_42 $$ d.setIgnoreFlush(servletContainer.isIgnoreFlush())[ FD ]
Line_59 $$ final Set<String> seenMappings = new HashSet()-->Line_111 $$ seenMappings.addAll(mapping.getUrlPatterns())[ FD ]
Line_215 $$ url = "/" + url-->Line_222 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_54 $$ is22OrOlder = d.getMinorVersion() < 3-->Line_56 $$ is22OrOlder = false[ FD ]
Line_96 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_106 $$ if (list != null && !list.isEmpty()) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_28 $$ d.setResourceManager(resourceManager)[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_71 $$ jspServlet.addMapping(mapping)[ FD ]
Line_35 $$ if (servletVersion != null) -->Line_39 $$ d.setMajorVersion(3)[ CD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_170 $$ if (servlet.getSecurityRoleRefs() != null) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_179 $$ d.addServlet(s)[ FD ]
Line_191 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_203 $$ if (filter.getInitParam() != null) [ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_44 $$ d.setAllowNonStandardWrappers(servletContainer.isAllowNonStandardWrappers())[ FD ]
Line_311 $$ if (loginConfig != null) -->Line_313 $$ if (loginConfig.getFormLoginConfig() != null) [ CD ]
Line_213 $$ for (String url : mapping.getUrlPatterns()) -->Line_222 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_91 $$ d.addServletExtension(extension)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_147 $$ s.setLoadOnStartup(servlet.getLoadOnStartupInt())[ FD ]
Line_373 $$ final ServerActivity activity = serverActivity.get()-->Line_375 $$ suspendControllerInjectedValue.getValue().unRegisterActivity(activity)[ FD ]
Line_59 $$ final Set<String> seenMappings = new HashSet()-->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_194 $$ FilterInfo f-->Line_202 $$ d.addFilter(f)[ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_172 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_293 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_296 $$ securityConstraint.setEmptyRoleSemantic(PERMIT)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_242 $$ d.addServletContainerInitalizer(new ServletContainerInitializerInfo(sci.getClass(), instanceFactory, scisMetaData.getHandlesTypes().get(sci)))[ FD ]
Line_295 $$ if (constraint.getAuthConstraint() == null) -->Line_296 $$ securityConstraint.setEmptyRoleSemantic(PERMIT)[ CD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_156 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_344 $$ final AtomicReference<ServerActivity> serverActivity = new AtomicReference()-->Line_373 $$ final ServerActivity activity = serverActivity.get()[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_341 $$ webSocketDeploymentInfo.setBuffers(servletContainer.getWebsocketsBufferPool().getValue())[ FD ]
Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null-->Line_68 $$ d.addServlet(jspServlet)[ FD ]
Line_270 $$ final ErrorPage errorPage-->Line_272 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))[ FD ]
Line_292 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_294 $$ List<String> roleNames = constraint.getRoleNames()[ FD ]
Line_346 $$ serverActivity.set(new ServerActivity() -->Line_352 $$ listener.done()[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_325 $$ d.addThreadSetupAction(new SecurityContextThreadSetupAction(securityDomain, securityDomainContextValue.getValue(), principalVersusRolesMap))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_384 $$ d.addLocaleCharsetMapping(locale.getLocale(), locale.getEncoding())[ FD ]
Line_120 $$ final ServletInfo s-->Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ FD ]
Line_213 $$ for (String url : mapping.getUrlPatterns()) -->Line_215 $$ url = "/" + url[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_319 $$ d.getLoginConfig().addLastAuthMethod(method)[ FD ]
Line_154 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) -->Line_156 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_192 $$ Class<? extends Filter> filterClass = (Class<? extends Filter>) module.getClassLoader().loadClass(filter.getFilterClass())-->Line_193 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(filterClass)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_75 $$ d.addListener(new ListenerInfo(JspInitializationListener.class))[ FD ]
Line_84 $$ Boolean proactiveAuthentication = mergedMetaData.getProactiveAuthentication()-->Line_85 $$ if (proactiveAuthentication == null) [ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_160 $$ if (servlet.getServletSecurity() != null) [ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_144 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_369 $$ ServletContextListener sl = new ServletContextListener() -->Line_373 $$ final ServerActivity activity = serverActivity.get()[ CD ]
Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()-->Line_133 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_43 $$ d.setEagerFilterInit(servletContainer.isEagerFilterInit())[ FD ]
Line_120 $$ final ServletInfo s-->Line_156 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_80 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_290 $$ Set<String> securityRoleNames = mergedMetaData.getSecurityRoleNames()-->Line_297 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) [ FD ]
Line_191 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_197 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)[ FD ]
Line_60 $$ HashMap<String, TagLibraryInfo> tldInfo = createTldsInfo(tldsMetaData, sharedTlds)-->Line_66 $$ d.setJspConfigDescriptor(new JspConfigDescriptorImpl(tldInfo.values(), propertyGroups.values()))[ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_147 $$ s.setLoadOnStartup(servlet.getLoadOnStartupInt())[ FD ]
Line_62 $$ if (jspServlet != null) -->Line_68 $$ d.addServlet(jspServlet)[ CD ]
Line_255 $$ if (mergedMetaData.getWelcomeFileList() != null && mergedMetaData.getWelcomeFileList().getWelcomeFiles() != null) -->Line_265 $$ d.addWelcomePages("index.html", "index.htm", "index.jsp")[ CD ]
Line_80 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_98 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_64 $$ JspServletBuilder.setupDeployment(d, propertyGroups, tldInfo, new UndertowJSPInstanceManager(new WebInjectionContainer(module.getClassLoader(), componentRegistryInjectedValue.getValue())))[ FD ]
Line_323 $$ Map<String, Set<String>> principalVersusRolesMap = mergedMetaData.getPrincipalVersusRolesMap()-->Line_330 $$ if (principalVersusRolesMap != null) [ FD ]
Line_133 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_135 $$ InstanceFactory<Servlet> factory = createInstanceFactory(creator)[ FD ]
Line_120 $$ final ServletInfo s-->Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_121 $$ if (servlet.getJspFile() != null) -->Line_123 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ CD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()-->Line_193 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(filterClass)[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_18 $$ ResourceManager resourceManager = new ServletResourceManager(deploymentRoot, overlays, explodedDeployment, mergedMetaData.isSymbolicLinkingEnabled())-->Line_28 $$ d.setResourceManager(resourceManager)[ FD ]
Line_194 $$ FilterInfo f-->Line_201 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_269 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_274 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_265 $$ d.addWelcomePages("index.html", "index.htm", "index.jsp")[ FD ]
Line_125 $$ if (servlet.getServletClass() == null) -->Line_133 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)[ CD ]
Line_53 $$ if (d.getMajorVersion() == 2) -->Line_56 $$ is22OrOlder = false[ CD ]
Line_390 $$ if (predicatedHandlers.size() == 1) -->Line_391 $$ PredicatedHandler ph = predicatedHandlers.get(0)[ CD ]
Line_103 $$ if (jspServlet != null) -->Line_106 $$ if (list != null && !list.isEmpty()) [ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_219 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_59 $$ final Set<String> seenMappings = new HashSet()-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_182 $$ ServletInfo defaultServlet = Servlets.servlet(DEFAULT_SERVLET_NAME, DefaultServlet.class)-->Line_188 $$ defaultServlet.addInitParam(DefaultServlet.DIRECTORY_LISTING, servletContainer.getDirectoryListingEnabled().toString())[ FD ]
Line_96 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_100 $$ list.add(mapping)[ FD ]
Line_292 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_302 $$ if (constraint.getResourceCollections() != null) [ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)[ FD ]
Line_272 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))-->Line_274 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ FD ]
Line_295 $$ if (constraint.getAuthConstraint() == null) -->Line_297 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) [ CD ]
Line_303 $$ for (final WebResourceCollectionMetaData resourceCollection : constraint.getResourceCollections()) -->Line_304 $$ securityConstraint.addWebResourceCollection(new WebResourceCollection().addHttpMethods(resourceCollection.getHttpMethods()).addHttpMethodOmissions(resourceCollection.getHttpMethodOmissions()).addUrlPatterns(resourceCollection.getUrlPatterns()))[ FD ]
Line_120 $$ final ServletInfo s-->Line_155 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_346 $$ serverActivity.set(new ServerActivity() -->Line_348 $$ listener.done()[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_44 $$ d.setAllowNonStandardWrappers(servletContainer.isAllowNonStandardWrappers())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_252 $$ d.addInitParameter(param.getParamName(), param.getParamValue())[ FD ]
Line_355 $$ wsc.pause(new ServerWebSocketContainer.PauseListener() -->Line_357 $$ listener.done()[ CD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_150 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_21 $$ List<ResourceManager> delegates = new ArrayList()-->Line_23 $$ delegates.add(new FileResourceManager(resource.getCanonicalFile(), 1024, true, mergedMetaData.isSymbolicLinkingEnabled(), "/"))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_79 $$ d.setClassIntrospecter(new ComponentClassIntrospector(componentRegistry))[ FD ]
Line_197 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_202 $$ d.addFilter(f)[ FD ]
Line_120 $$ final ServletInfo s-->Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_153 $$ if (servlet.getInitParam() != null) [ FD ]
Line_63 $$ HashMap<String, JspPropertyGroup> propertyGroups = createJspConfig(mergedMetaData)-->Line_66 $$ d.setJspConfigDescriptor(new JspConfigDescriptorImpl(tldInfo.values(), propertyGroups.values()))[ FD ]
Line_186 $$ if (servletContainer.getDirectoryListingEnabled() != null) -->Line_188 $$ defaultServlet.addInitParam(DefaultServlet.DIRECTORY_LISTING, servletContainer.getDirectoryListingEnabled().toString())[ CD ]
Line_98 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())-->Line_100 $$ list.add(mapping)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_47 $$ if (servletContainer.getSessionPersistenceManager() != null) [ FD ]
Line_346 $$ serverActivity.set(new ServerActivity() -->Line_357 $$ listener.done()[ FD ]
Line_120 $$ final ServletInfo s-->Line_179 $$ d.addServlet(s)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_286 $$ d.addMimeMapping(new MimeMapping(mapping.getExtension(), mapping.getMimeType()))[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_281 $$ for (Map.Entry<String, String> entry : servletContainer.getMimeMappings().entrySet()) [ FD ]
Line_53 $$ if (d.getMajorVersion() == 2) -->Line_54 $$ is22OrOlder = d.getMinorVersion() < 3[ CD ]
Line_297 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) -->Line_300 $$ securityConstraint.addRolesAllowed(roleNames)[ CD ]
Line_50 $$ boolean is22OrOlder-->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_52 $$ is22OrOlder = true-->Line_54 $$ is22OrOlder = d.getMinorVersion() < 3[ FD ]
Line_62 $$ if (jspServlet != null) -->Line_69 $$ final Set<String> jspPropertyGroupMappings = propertyGroups.keySet()[ CD ]
Line_313 $$ if (loginConfig.getFormLoginConfig() != null) -->Line_316 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName()))[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_15 $$ d.setHostName(host.getValue().getName())[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_142 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) -->Line_342 $$ webSocketDeploymentInfo.setWorker(servletContainer.getWebsocketsWorker().getValue())[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_261 $$ d.addWelcomePages(file)[ FD ]
Line_120 $$ final ServletInfo s-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_54 $$ is22OrOlder = d.getMinorVersion() < 3-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_100 $$ list.add(mapping)[ FD ]
Line_324 $$ if (securityDomain != null) -->Line_326 $$ d.addInnerHandlerChainWrapper(SecurityContextAssociationHandler.wrapper(mergedMetaData.getRunAsIdentity()))[ CD ]
Line_273 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) -->Line_274 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ CD ]
Line_281 $$ for (Map.Entry<String, String> entry : servletContainer.getMimeMappings().entrySet()) -->Line_332 $$ d.addPrincipalVsRoleMappings(entry.getKey(), entry.getValue())[ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_177 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_324 $$ if (securityDomain != null) -->Line_327 $$ d.addOuterHandlerChainWrapper(JACCContextIdHandler.wrapper(jaccContextId))[ CD ]
Line_217 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) -->Line_222 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ CD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_129 $$ throw UndertowLogger.ROOT_LOGGER.servletClassNotDefined(servlet.getServletName())[ FD ]
Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null-->Line_103 $$ if (jspServlet != null) [ FD ]
Line_218 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) -->Line_219 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_274 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))-->Line_278 $$ d.addErrorPages(errorPage)[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_230 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_18 $$ ResourceManager resourceManager = new ServletResourceManager(deploymentRoot, overlays, explodedDeployment, mergedMetaData.isSymbolicLinkingEnabled())-->Line_19 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_404 $$ d.setCrawlerSessionManagerConfig(servletContainer.getCrawlerSessionManagerConfig())[ FD ]
Line_84 $$ Boolean proactiveAuthentication = mergedMetaData.getProactiveAuthentication()-->Line_86 $$ proactiveAuthentication = container.getValue().isProactiveAuth()[ FD ]
Line_58 $$ JSPConfig jspConfig = servletContainer.getJspConfig()-->Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null[ FD ]
Line_146 $$ if (servlet.getLoadOnStartupSet()) -->Line_147 $$ s.setLoadOnStartup(servlet.getLoadOnStartupInt())[ CD ]
Line_165 $$ for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) -->Line_319 $$ d.getLoginConfig().addLastAuthMethod(method)[ FD ]
Line_227 $$ for (String servletName : mapping.getServletNames()) -->Line_233 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_155 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_293 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_307 $$ d.addSecurityConstraint(securityConstraint)[ FD ]
Line_120 $$ final ServletInfo s-->Line_142 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_62 $$ if (jspServlet != null) -->Line_65 $$ if (mergedMetaData.getJspConfig() != null) [ CD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_156 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_62 $$ if (jspServlet != null) -->Line_73 $$ seenMappings.addAll(jspPropertyGroupMappings)[ CD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_218 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) [ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_401 $$ if (servletContainer.getDefaultEncoding() != null) [ FD ]
Line_120 $$ final ServletInfo s-->Line_147 $$ s.setLoadOnStartup(servlet.getLoadOnStartupInt())[ FD ]
Line_65 $$ if (mergedMetaData.getJspConfig() != null) -->Line_66 $$ d.setJspConfigDescriptor(new JspConfigDescriptorImpl(tldInfo.values(), propertyGroups.values()))[ CD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_98 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ FD ]
Line_194 $$ FilterInfo f-->Line_205 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_251 $$ for (ParamValueMetaData param : mergedMetaData.getContextParams()) -->Line_252 $$ d.addInitParameter(param.getParamName(), param.getParamValue())[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_125 $$ if (servlet.getServletClass() == null) [ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_142 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_160 $$ if (servlet.getServletSecurity() != null) -->Line_162 $$ s.setServletSecurityInfo(securityInfo)[ CD ]
Line_5 $$ if (!mergedMetaData.isMetadataComplete()) -->Line_6 $$ mergedMetaData.resolveAnnotations()[ CD ]
Line_96 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_98 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ FD ]
Line_390 $$ if (predicatedHandlers.size() == 1) -->Line_394 $$ return Handlers.predicates(predicatedHandlers, handler)[ CD ]
Line_388 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() -->Line_392 $$ return Handlers.predicate(ph.getPredicate(), ph.getHandler().wrap(handler), handler)[ FD ]
Line_191 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_204 $$ for (ParamValueMetaData initParam : filter.getInitParam()) [ FD ]
Line_120 $$ final ServletInfo s-->Line_123 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ FD ]
Line_125 $$ if (servlet.getServletClass() == null) -->Line_132 $$ Class<? extends Servlet> servletClass = (Class<? extends Servlet>) module.getClassLoader().loadClass(servlet.getServletClass())[ CD ]
Line_121 $$ if (servlet.getJspFile() != null) -->Line_125 $$ if (servlet.getServletClass() == null) [ CD ]
Line_97 $$ if (list == null) -->Line_98 $$ servletMappings.put(mapping.getServletName(), list = new ArrayList())[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_222 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_390 $$ if (predicatedHandlers.size() == 1) -->Line_392 $$ return Handlers.predicate(ph.getPredicate(), ph.getHandler().wrap(handler), handler)[ CD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_286 $$ d.addMimeMapping(new MimeMapping(mapping.getExtension(), mapping.getMimeType()))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_307 $$ d.addSecurityConstraint(securityConstraint)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_48 $$ d.setSessionPersistenceManager(servletContainer.getSessionPersistenceManager())[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_46 $$ d.setDisableCachingForSecuredPages(servletContainer.isDisableCachingForSecuredPages())[ FD ]
Line_310 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_312 $$ List<AuthMethodConfig> authMethod = authMethod(loginConfig.getAuthMethod())[ FD ]
Line_149 $$ if (servlet.getExecutorName() != null) -->Line_150 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ CD ]
Line_18 $$ ResourceManager resourceManager = new ServletResourceManager(deploymentRoot, overlays, explodedDeployment, mergedMetaData.isSymbolicLinkingEnabled())-->Line_26 $$ resourceManager = new DelegatingResourceManager(delegates)[ FD ]
Line_272 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))-->Line_276 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_342 $$ webSocketDeploymentInfo.setWorker(servletContainer.getWebsocketsWorker().getValue())[ FD ]
Line_388 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() -->Line_390 $$ if (predicatedHandlers.size() == 1) [ CD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_222 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.REQUEST)[ FD ]
Line_310 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_311 $$ if (loginConfig != null) [ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_147 $$ s.setLoadOnStartup(servlet.getLoadOnStartupInt())[ FD ]
Line_257 $$ for (String file : welcomeFiles) -->Line_258 $$ if (file.startsWith("/")) [ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_150 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_96 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())[ FD ]
Line_246 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_357 $$ listener.done()[ FD ]
Line_274 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))-->Line_276 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_212 $$ if (mapping.getUrlPatterns() != null) [ FD ]
Line_19 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)-->Line_28 $$ d.setResourceManager(resourceManager)[ FD ]
Line_103 $$ if (jspServlet != null) -->Line_104 $$ jspServlet.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(null))[ CD ]
Line_344 $$ final AtomicReference<ServerActivity> serverActivity = new AtomicReference()-->Line_346 $$ serverActivity.set(new ServerActivity() [ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_117 $$ servlets.add(servlet)[ FD ]
Line_62 $$ if (jspServlet != null) -->Line_74 $$ if (!expressionFactoryWrappers.isEmpty()) [ CD ]
Line_246 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_348 $$ listener.done()[ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_179 $$ d.addServlet(s)[ FD ]
Line_19 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)-->Line_26 $$ resourceManager = new DelegatingResourceManager(delegates)[ FD ]
Line_227 $$ for (String servletName : mapping.getServletNames()) -->Line_230 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_51 $$ if (d.getMajorVersion() == 1) -->Line_53 $$ if (d.getMajorVersion() == 2) [ CD ]
Line_346 $$ serverActivity.set(new ServerActivity() -->Line_348 $$ listener.done()[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_179 $$ d.addServlet(s)[ FD ]
Line_194 $$ FilterInfo f-->Line_199 $$ f = new FilterInfo(filter.getName(), filterClass)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_259 $$ d.addWelcomePages(file.substring(1))[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_172 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_125 $$ if (servlet.getServletClass() == null) -->Line_126 $$ if (DEFAULT_SERVLET_NAME.equals(servlet.getName())) [ CD ]
Line_34 $$ final String servletVersion = mergedMetaData.getServletVersion()-->Line_36 $$ d.setMajorVersion(Integer.parseInt(servletVersion.charAt(0) + ""))[ FD ]
Line_35 $$ if (servletVersion != null) -->Line_36 $$ d.setMajorVersion(Integer.parseInt(servletVersion.charAt(0) + ""))[ CD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_126 $$ if (DEFAULT_SERVLET_NAME.equals(servlet.getName())) [ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_162 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_402 $$ d.setDefaultEncoding(servletContainer.getDefaultEncoding())[ FD ]
Line_294 $$ List<String> roleNames = constraint.getRoleNames()-->Line_300 $$ securityConstraint.addRolesAllowed(roleNames)[ FD ]
Line_269 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_271 $$ if (page.getExceptionType() != null && !page.getExceptionType().isEmpty()) [ FD ]
Line_161 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()-->Line_166 $$ securityInfo.addHttpMethodSecurityInfo(new HttpMethodSecurityInfo().setEmptyRoleSemantic(method.getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(method.getTransportGuarantee())).addRolesAllowed(method.getRolesAllowed()).setMethod(method.getMethod()))[ FD ]
Line_218 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) -->Line_230 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_271 $$ if (page.getExceptionType() != null && !page.getExceptionType().isEmpty()) -->Line_272 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))[ CD ]
Line_324 $$ if (securityDomain != null) -->Line_328 $$ d.addLifecycleInterceptor(new RunAsLifecycleInterceptor(mergedMetaData.getRunAsIdentity()))[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_314 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName(), loginConfig.getFormLoginConfig().getLoginPage(), loginConfig.getFormLoginConfig().getErrorPage()))[ FD ]
Line_120 $$ final ServletInfo s-->Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_346 $$ serverActivity.set(new ServerActivity() -->Line_355 $$ wsc.pause(new ServerWebSocketContainer.PauseListener() [ CD ]
Line_197 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_199 $$ f = new FilterInfo(filter.getName(), filterClass)[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_144 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_297 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) -->Line_298 $$ securityConstraint.setEmptyRoleSemantic(AUTHENTICATE)[ CD ]
Line_11 $$ if (mergedMetaData.getDescriptionGroup() != null) -->Line_12 $$ d.setDisplayName(mergedMetaData.getDescriptionGroup().getDisplayName())[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_380 $$ d.addServletContextAttribute(WebSocketDeploymentInfo.ATTRIBUTE_NAME, webSocketDeploymentInfo)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_400 $$ d.setDefaultEncoding(mergedMetaData.getDefaultEncoding())[ FD ]
Line_133 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_134 $$ if (creator != null) [ FD ]
Line_160 $$ if (servlet.getServletSecurity() != null) -->Line_164 $$ if (servlet.getServletSecurity().getHttpMethodConstraints() != null) [ CD ]
Line_18 $$ ResourceManager resourceManager = new ServletResourceManager(deploymentRoot, overlays, explodedDeployment, mergedMetaData.isSymbolicLinkingEnabled())-->Line_25 $$ delegates.add(resourceManager)[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_19 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)-->Line_25 $$ delegates.add(resourceManager)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_267 $$ d.addWelcomePages(servletContainer.getWelcomeFiles())[ FD ]
Line_191 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_199 $$ f = new FilterInfo(filter.getName(), filterClass)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_150 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_144 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_48 $$ d.setSessionPersistenceManager(servletContainer.getSessionPersistenceManager())[ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_155 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) [ FD ]
Line_54 $$ is22OrOlder = d.getMinorVersion() < 3-->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_337 $$ d.addServletContextAttribute(attribute.getName(), attribute.getValue())[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_219 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_246 $$ for (ListenerMetaData listener : mergedMetaData.getListeners()) -->Line_352 $$ listener.done()[ FD ]
Line_199 $$ f = new FilterInfo(filter.getName(), filterClass)-->Line_202 $$ d.addFilter(f)[ FD ]
Line_336 $$ for (ServletContextAttribute attribute : attributes) -->Line_337 $$ d.addServletContextAttribute(attribute.getName(), attribute.getValue())[ FD ]
Line_120 $$ final ServletInfo s-->Line_177 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_270 $$ final ErrorPage errorPage-->Line_278 $$ d.addErrorPages(errorPage)[ FD ]
Line_257 $$ for (String file : welcomeFiles) -->Line_259 $$ d.addWelcomePages(file.substring(1))[ FD ]
Line_34 $$ final String servletVersion = mergedMetaData.getServletVersion()-->Line_35 $$ if (servletVersion != null) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_14 $$ d.setDeploymentName(deploymentName)[ FD ]
Line_80 $$ final Map<String, List<ServletMappingMetaData>> servletMappings = new HashMap()-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_270 $$ final ErrorPage errorPage-->Line_276 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_88 $$ d.setAuthenticationMode(proactiveAuthentication ? AuthenticationMode.PRO_ACTIVE : AuthenticationMode.CONSTRAINT_DRIVEN)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_402 $$ d.setDefaultEncoding(servletContainer.getDefaultEncoding())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_326 $$ d.addInnerHandlerChainWrapper(SecurityContextAssociationHandler.wrapper(mergedMetaData.getRunAsIdentity()))[ FD ]
Line_20 $$ if (externalResources != null && !externalResources.isEmpty()) -->Line_26 $$ resourceManager = new DelegatingResourceManager(delegates)[ CD ]
Line_195 $$ if (creator != null) -->Line_197 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)[ CD ]
Line_155 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) -->Line_156 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ CD ]
Line_351 $$ if (wsc.getConfiguredServerEndpoints().isEmpty()) -->Line_352 $$ listener.done()[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_54 $$ is22OrOlder = d.getMinorVersion() < 3[ FD ]
Line_81 $$ if (mergedMetaData.getExecutorName() != null) -->Line_82 $$ d.setExecutor(executorsByName.get(mergedMetaData.getExecutorName()).getValue())[ CD ]
Line_270 $$ final ErrorPage errorPage-->Line_274 $$ errorPage = new ErrorPage(page.getLocation(), Integer.parseInt(page.getErrorCode()))[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_123 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ FD ]
Line_255 $$ if (mergedMetaData.getWelcomeFileList() != null && mergedMetaData.getWelcomeFileList().getWelcomeFiles() != null) -->Line_256 $$ List<String> welcomeFiles = mergedMetaData.getWelcomeFileList().getWelcomeFiles()[ CD ]
Line_161 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()-->Line_162 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_149 $$ if (servlet.getExecutorName() != null) [ FD ]
Line_134 $$ if (creator != null) -->Line_135 $$ InstanceFactory<Servlet> factory = createInstanceFactory(creator)[ CD ]
Line_346 $$ serverActivity.set(new ServerActivity() -->Line_364 $$ wsc.resume()[ CD ]
Line_344 $$ final AtomicReference<ServerActivity> serverActivity = new AtomicReference()-->Line_367 $$ suspendControllerInjectedValue.getValue().registerActivity(serverActivity.get())[ FD ]
Line_351 $$ if (wsc.getConfiguredServerEndpoints().isEmpty()) -->Line_353 $$ return[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_66 $$ d.setJspConfigDescriptor(new JspConfigDescriptorImpl(tldInfo.values(), propertyGroups.values()))[ FD ]
Line_399 $$ if (mergedMetaData.getDefaultEncoding() != null) -->Line_401 $$ if (servletContainer.getDefaultEncoding() != null) [ CD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_162 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_202 $$ d.addFilter(f)[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_227 $$ for (String servletName : mapping.getServletNames()) [ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_19 $$ resourceManager = new CachingResourceManager(100, 10 * 1024 * 1024, servletContainer.getBufferCache(), resourceManager, explodedDeployment ? 2000 : -1)[ FD ]
Line_292 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_303 $$ for (final WebResourceCollectionMetaData resourceCollection : constraint.getResourceCollections()) [ FD ]
Line_134 $$ if (creator != null) -->Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)[ CD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_226 $$ if (mapping.getServletNames() != null) [ FD ]
Line_21 $$ List<ResourceManager> delegates = new ArrayList()-->Line_25 $$ delegates.add(resourceManager)[ FD ]
Line_310 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_313 $$ if (loginConfig.getFormLoginConfig() != null) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_282 $$ d.addMimeMapping(new MimeMapping(entry.getKey(), entry.getValue()))[ FD ]
Line_175 $$ if (servlet.getMultipartConfig() != null) -->Line_177 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ CD ]
Line_293 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_304 $$ securityConstraint.addWebResourceCollection(new WebResourceCollection().addHttpMethods(resourceCollection.getHttpMethods()).addHttpMethodOmissions(resourceCollection.getHttpMethodOmissions()).addUrlPatterns(resourceCollection.getUrlPatterns()))[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_156 $$ s.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_125 $$ if (servlet.getServletClass() == null) -->Line_134 $$ if (creator != null) [ CD ]
Line_51 $$ if (d.getMajorVersion() == 1) -->Line_52 $$ is22OrOlder = true[ CD ]
Line_35 $$ if (servletVersion != null) -->Line_37 $$ d.setMinorVersion(Integer.parseInt(servletVersion.charAt(2) + ""))[ CD ]
Line_160 $$ if (servlet.getServletSecurity() != null) -->Line_163 $$ securityInfo.setEmptyRoleSemantic(servlet.getServletSecurity().getEmptyRoleSemantic() == EmptyRoleSemanticType.DENY ? DENY : PERMIT).setTransportGuaranteeType(transportGuaranteeType(servlet.getServletSecurity().getTransportGuarantee())).addRolesAllowed(servlet.getServletSecurity().getRolesAllowed())[ CD ]
Line_62 $$ if (jspServlet != null) -->Line_64 $$ JspServletBuilder.setupDeployment(d, propertyGroups, tldInfo, new UndertowJSPInstanceManager(new WebInjectionContainer(module.getClassLoader(), componentRegistryInjectedValue.getValue())))[ CD ]
Line_269 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_273 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) [ FD ]
Line_369 $$ ServletContextListener sl = new ServletContextListener() -->Line_374 $$ if (activity != null) [ CD ]
Line_96 $$ List<ServletMappingMetaData> list = servletMappings.get(mapping.getServletName())-->Line_97 $$ if (list == null) [ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_229 $$ for (DispatcherType dispatcher : mapping.getDispatchers()) [ FD ]
Line_26 $$ resourceManager = new DelegatingResourceManager(delegates)-->Line_28 $$ d.setResourceManager(resourceManager)[ FD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_142 $$ s.setAsyncSupported(servlet.isAsyncSupported()).setJspFile(servlet.getJspFile()).setEnabled(servlet.isEnabled())[ FD ]
Line_133 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)-->Line_195 $$ if (creator != null) [ FD ]
Line_213 $$ for (String url : mapping.getUrlPatterns()) -->Line_219 $$ d.addFilterUrlMapping(mapping.getFilterName(), url, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_272 $$ errorPage = new ErrorPage(page.getLocation(), (Class<? extends Throwable>) module.getClassLoader().loadClass(page.getExceptionType()))-->Line_278 $$ d.addErrorPages(errorPage)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_40 $$ d.setMinorVersion(1)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ FD ]
Line_120 $$ final ServletInfo s-->Line_162 $$ s.setServletSecurityInfo(securityInfo)[ FD ]
Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null-->Line_71 $$ jspServlet.addMapping(mapping)[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_267 $$ d.addWelcomePages(servletContainer.getWelcomeFiles())[ FD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_188 $$ defaultServlet.addInitParam(DefaultServlet.DIRECTORY_LISTING, servletContainer.getDirectoryListingEnabled().toString())[ FD ]
Line_213 $$ for (String url : mapping.getUrlPatterns()) -->Line_214 $$ if (is22OrOlder && !url.startsWith("*") && !url.startsWith("/")) [ FD ]
Line_47 $$ if (servletContainer.getSessionPersistenceManager() != null) -->Line_48 $$ d.setSessionPersistenceManager(servletContainer.getSessionPersistenceManager())[ CD ]
Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)-->Line_144 $$ s.setRunAs(servlet.getRunAs().getRoleName())[ FD ]
Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null-->Line_62 $$ if (jspServlet != null) [ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_179 $$ d.addServlet(s)[ FD ]
Line_294 $$ List<String> roleNames = constraint.getRoleNames()-->Line_297 $$ if (roleNames.size() == 1 && roleNames.contains("*") && securityRoleNames.contains("*")) [ FD ]
Line_313 $$ if (loginConfig.getFormLoginConfig() != null) -->Line_314 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName(), loginConfig.getFormLoginConfig().getLoginPage(), loginConfig.getFormLoginConfig().getErrorPage()))[ CD ]
Line_108 $$ for (String urlPattern : mapping.getUrlPatterns()) -->Line_109 $$ jspServlet.addMapping(urlPattern)[ FD ]
Line_160 $$ if (servlet.getServletSecurity() != null) -->Line_161 $$ ServletSecurityInfo securityInfo = new ServletSecurityInfo()[ CD ]
Line_132 $$ Class<? extends Servlet> servletClass = (Class<? extends Servlet>) module.getClassLoader().loadClass(servlet.getServletClass())-->Line_133 $$ ManagedReferenceFactory creator = componentRegistry.createInstanceFactory(servletClass)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_247 $$ addListener(module.getClassLoader(), componentRegistry, d, listener)[ FD ]
Line_387 $$ if (predicatedHandlers != null && !predicatedHandlers.isEmpty()) -->Line_388 $$ d.addInitialHandlerChainWrapper(new HandlerWrapper() [ CD ]
Line_199 $$ f = new FilterInfo(filter.getName(), filterClass)-->Line_205 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_120 $$ final ServletInfo s-->Line_150 $$ s.setExecutor(executorsByName.get(servlet.getExecutorName()).getValue())[ FD ]
Line_311 $$ if (loginConfig != null) -->Line_312 $$ List<AuthMethodConfig> authMethod = authMethod(loginConfig.getAuthMethod())[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_42 $$ d.setIgnoreFlush(servletContainer.isIgnoreFlush())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_36 $$ d.setMajorVersion(Integer.parseInt(servletVersion.charAt(0) + ""))[ FD ]
Line_182 $$ ServletInfo defaultServlet = Servlets.servlet(DEFAULT_SERVLET_NAME, DefaultServlet.class)-->Line_184 $$ d.addServlet(defaultServlet)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_165 $$ for (HttpMethodConstraintMetaData method : servlet.getServletSecurity().getHttpMethodConstraints()) [ FD ]
Line_292 $$ for (SecurityConstraintMetaData constraint : mergedMetaData.getSecurityConstraints()) -->Line_293 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))[ FD ]
Line_181 $$ if (!mergedMetaData.getServlets().containsKey(ServletPathMatches.DEFAULT_SERVLET_NAME)) -->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_184 $$ d.addServlet(defaultServlet)[ FD ]
Line_281 $$ for (Map.Entry<String, String> entry : servletContainer.getMimeMappings().entrySet()) -->Line_282 $$ d.addMimeMapping(new MimeMapping(entry.getKey(), entry.getValue()))[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_108 $$ for (String urlPattern : mapping.getUrlPatterns()) [ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_177 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_181 $$ if (!mergedMetaData.getServlets().containsKey(ServletPathMatches.DEFAULT_SERVLET_NAME)) -->Line_182 $$ ServletInfo defaultServlet = Servlets.servlet(DEFAULT_SERVLET_NAME, DefaultServlet.class)[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_332 $$ d.addPrincipalVsRoleMappings(entry.getKey(), entry.getValue())[ FD ]
Line_85 $$ if (proactiveAuthentication == null) -->Line_86 $$ proactiveAuthentication = container.getValue().isProactiveAuth()[ CD ]
Line_186 $$ if (servletContainer.getDirectoryListingEnabled() != null) -->Line_187 $$ ServletInfo defaultServlet = d.getServlets().get(DEFAULT_SERVLET_NAME)[ CD ]
Line_16 $$ final ServletContainerService servletContainer = container.getValue()-->Line_343 $$ webSocketDeploymentInfo.setDispatchToWorkerThread(servletContainer.isDispatchWebsocketInvocationToWorker())[ FD ]
Line_74 $$ if (!expressionFactoryWrappers.isEmpty()) -->Line_75 $$ d.addListener(new ListenerInfo(JspInitializationListener.class))[ CD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_322 $$ d.addSecurityRoles(mergedMetaData.getSecurityRoleNames())[ FD ]
Line_2 $$ private DeploymentInfo createServletConfig() throws StartException -->Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()[ CD ]
Line_269 $$ for (final ErrorPageMetaData page : mergedMetaData.getErrorPages()) -->Line_276 $$ errorPage = new ErrorPage(page.getLocation())[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_316 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName()))[ FD ]
Line_50 $$ boolean is22OrOlder-->Line_56 $$ is22OrOlder = false[ FD ]
Line_310 $$ final LoginConfigMetaData loginConfig = mergedMetaData.getLoginConfig()-->Line_316 $$ d.setLoginConfig(new LoginConfig(loginConfig.getRealmName()))[ FD ]
Line_271 $$ if (page.getExceptionType() != null && !page.getExceptionType().isEmpty()) -->Line_273 $$ if (page.getErrorCode() != null && !page.getErrorCode().isEmpty()) [ CD ]
Line_52 $$ is22OrOlder = true-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_143 $$ if (servlet.getRunAs() != null) [ FD ]
Line_121 $$ if (servlet.getJspFile() != null) -->Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_230 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.valueOf(dispatcher.name()))[ FD ]
Line_103 $$ if (jspServlet != null) -->Line_105 $$ List<ServletMappingMetaData> list = servletMappings.get(jspServlet.getName())[ CD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_146 $$ if (servlet.getLoadOnStartupSet()) [ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_68 $$ d.addServlet(jspServlet)[ FD ]
Line_50 $$ boolean is22OrOlder-->Line_52 $$ is22OrOlder = true[ FD ]
Line_61 $$ final ServletInfo jspServlet = jspConfig != null ? jspConfig.createJSPServletInfo() : null-->Line_104 $$ jspServlet.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(null))[ FD ]
Line_176 $$ MultipartConfigMetaData mp = servlet.getMultipartConfig()-->Line_177 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_62 $$ if (jspServlet != null) -->Line_63 $$ HashMap<String, JspPropertyGroup> propertyGroups = createJspConfig(mergedMetaData)[ CD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_171 $$ for (final SecurityRoleRefMetaData ref : servlet.getSecurityRoleRefs()) [ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_123 $$ s.addHandlerChainWrapper(JspFileHandler.jspFileHandlerWrapper(servlet.getJspFile()))[ FD ]
Line_373 $$ final ServerActivity activity = serverActivity.get()-->Line_374 $$ if (activity != null) [ FD ]
Line_136 $$ s = new ServletInfo(servlet.getName(), servletClass, factory)-->Line_177 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_70 $$ for (final String mapping : jspPropertyGroupMappings) -->Line_111 $$ seenMappings.addAll(mapping.getUrlPatterns())[ FD ]
Line_35 $$ if (servletVersion != null) -->Line_40 $$ d.setMinorVersion(1)[ CD ]
Line_3 $$ final ComponentRegistry componentRegistry = componentRegistryInjectedValue.getValue()-->Line_247 $$ addListener(module.getClassLoader(), componentRegistry, d, listener)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_45 $$ d.setServletStackTraces(servletContainer.getStackTraces())[ FD ]
Line_120 $$ final ServletInfo s-->Line_172 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_116 $$ for (JBossServletMetaData servlet : mergedMetaData.getServlets()) -->Line_154 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) [ FD ]
Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) -->Line_345 $$ webSocketDeploymentInfo.addListener( wsc -> [ CD ]
Line_340 $$ if (servletContainer.isWebsocketsEnabled() && webSocketDeploymentInfo != null) -->Line_380 $$ d.addServletContextAttribute(WebSocketDeploymentInfo.ATTRIBUTE_NAME, webSocketDeploymentInfo)[ CD ]
Line_228 $$ if (mapping.getDispatchers() != null && !mapping.getDispatchers().isEmpty()) -->Line_233 $$ d.addFilterServletNameMapping(mapping.getFilterName(), servletName, javax.servlet.DispatcherType.REQUEST)[ CD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_46 $$ d.setDisableCachingForSecuredPages(servletContainer.isDisableCachingForSecuredPages())[ FD ]
Line_63 $$ HashMap<String, JspPropertyGroup> propertyGroups = createJspConfig(mergedMetaData)-->Line_69 $$ final Set<String> jspPropertyGroupMappings = propertyGroups.keySet()[ FD ]
Line_20 $$ if (externalResources != null && !externalResources.isEmpty()) -->Line_25 $$ delegates.add(resourceManager)[ CD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_82 $$ d.setExecutor(executorsByName.get(mergedMetaData.getExecutorName()).getValue())[ FD ]
Line_181 $$ if (!mergedMetaData.getServlets().containsKey(ServletPathMatches.DEFAULT_SERVLET_NAME)) -->Line_184 $$ d.addServlet(defaultServlet)[ CD ]
Line_34 $$ final String servletVersion = mergedMetaData.getServletVersion()-->Line_37 $$ d.setMinorVersion(Integer.parseInt(servletVersion.charAt(2) + ""))[ FD ]
Line_9 $$ final DeploymentInfo d = new DeploymentInfo()-->Line_328 $$ d.addLifecycleInterceptor(new RunAsLifecycleInterceptor(mergedMetaData.getRunAsIdentity()))[ FD ]
Line_154 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) -->Line_155 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_197 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_201 $$ f.setAsyncSupported(filter.isAsyncSupported())[ FD ]
Line_197 $$ f = new FilterInfo(filter.getName(), filterClass, instanceFactory)-->Line_205 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_90 $$ for (ServletExtension extension : servletExtensions) -->Line_91 $$ d.addServletExtension(extension)[ FD ]
Line_154 $$ for (ParamValueMetaData initParam : servlet.getInitParam()) -->Line_205 $$ f.addInitParam(initParam.getParamName(), initParam.getParamValue())[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_147 $$ s.setLoadOnStartup(servlet.getLoadOnStartupInt())[ FD ]
Line_74 $$ if (!expressionFactoryWrappers.isEmpty()) -->Line_76 $$ d.addServletContextAttribute(JspInitializationListener.CONTEXT_KEY, expressionFactoryWrappers)[ CD ]
Line_191 $$ for (final FilterMetaData filter : mergedMetaData.getFilters()) -->Line_192 $$ Class<? extends Filter> filterClass = (Class<? extends Filter>) module.getClassLoader().loadClass(filter.getFilterClass())[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_155 $$ if (!s.getInitParams().containsKey(initParam.getParamName())) [ FD ]
Line_52 $$ is22OrOlder = true-->Line_183 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, defaultServlet)[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_138 $$ s = new ServletInfo(servlet.getName(), servletClass)[ FD ]
Line_122 $$ s = new ServletInfo(servlet.getName(), JspServlet.class)-->Line_147 $$ s.setLoadOnStartup(servlet.getLoadOnStartupInt())[ FD ]
Line_293 $$ SecurityConstraint securityConstraint = new SecurityConstraint().setTransportGuaranteeType(transportGuaranteeType(constraint.getTransportGuarantee()))-->Line_298 $$ securityConstraint.setEmptyRoleSemantic(AUTHENTICATE)[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_172 $$ s.addSecurityRoleRef(ref.getRoleName(), ref.getRoleLink())[ FD ]
Line_127 $$ s = new ServletInfo(servlet.getName(), DefaultServlet.class)-->Line_177 $$ s.setMultipartConfig(Servlets.multipartConfig(mp.getLocation(), mp.getMaxFileSize(), mp.getMaxRequestSize(), mp.getFileSizeThreshold()))[ FD ]
Line_195 $$ if (creator != null) -->Line_199 $$ f = new FilterInfo(filter.getName(), filterClass)[ CD ]
Line_56 $$ is22OrOlder = false-->Line_152 $$ handleServletMappings(is22OrOlder, seenMappings, servletMappings, s)[ FD ]
