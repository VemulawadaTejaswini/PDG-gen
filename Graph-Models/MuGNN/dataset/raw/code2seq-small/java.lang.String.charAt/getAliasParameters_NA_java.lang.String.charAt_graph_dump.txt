Line_2 $$ public Map<Byte, AbstractType<?>> getAliasParameters() throws SyntaxException, ConfigurationException -->Line_6 $$ if (str.charAt(idx) != '(')[ CD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_24 $$ skipBlank()[ CD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_20 $$ skipBlank()[ CD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_15 $$ if (alias.length() != 1)[ CD ]
Line_28 $$ SyntaxException ex = new SyntaxException(String.format("Exception while parsing '%s' around char %d", str, idx))-->Line_29 $$ ex.initCause(e)[ FD ]
Line_15 $$ if (alias.length() != 1)-->Line_16 $$ throwSyntaxError("An alias should be a single character")[ CD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_21 $$ if (!(str.charAt(idx) == '=' && str.charAt(idx + 1) == '>'))[ CD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_17 $$ char aliasChar = alias.charAt(0)[ CD ]
Line_18 $$ if (aliasChar < 33 || aliasChar > 127)-->Line_19 $$ throwSyntaxError("An alias should be a single character in [0..9a..bA..B-+._&]")[ CD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_10 $$ if (str.charAt(idx) == ')') [ CD ]
Line_10 $$ if (str.charAt(idx) == ')') -->Line_12 $$ return map[ CD ]
Line_21 $$ if (!(str.charAt(idx) == '=' && str.charAt(idx + 1) == '>'))-->Line_22 $$ throwSyntaxError("expecting '=>' token")[ CD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_14 $$ String alias = readNextIdentifier()[ CD ]
Line_3 $$ Map<Byte, AbstractType<?>> map = new HashMap()-->Line_26 $$ map.put((byte) aliasChar, parse())[ FD ]
Line_14 $$ String alias = readNextIdentifier()-->Line_17 $$ char aliasChar = alias.charAt(0)[ FD ]
Line_9 $$ while (skipBlankAndComma()) -->Line_18 $$ if (aliasChar < 33 || aliasChar > 127)[ CD ]
Line_2 $$ public Map<Byte, AbstractType<?>> getAliasParameters() throws SyntaxException, ConfigurationException -->Line_3 $$ Map<Byte, AbstractType<?>> map = new HashMap()[ CD ]
Line_3 $$ Map<Byte, AbstractType<?>> map = new HashMap()-->Line_4 $$ if (isEOS())[ FD ]
Line_2 $$ public Map<Byte, AbstractType<?>> getAliasParameters() throws SyntaxException, ConfigurationException -->Line_4 $$ if (isEOS())[ CD ]
Line_14 $$ String alias = readNextIdentifier()-->Line_15 $$ if (alias.length() != 1)[ FD ]
Line_4 $$ if (isEOS())-->Line_5 $$ return map[ CD ]
Line_2 $$ public Map<Byte, AbstractType<?>> getAliasParameters() throws SyntaxException, ConfigurationException -->Line_9 $$ while (skipBlankAndComma()) [ CD ]
