Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_15 $$ return a[s1.length() - 1][s2.length() - 1][ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_4 $$ for (int i = 0; i < s1.length(); i++) [ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_10 $$ for (int i = 1; i < s1.length(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < s1.length(); i++) -->Line_12 $$ a[i][j] = min(min(a[i - 1][j - 1] + (s1.charAt(i) == s2.charAt(j) ? 0 : 1), a[i - 1][j] + 1), a[i][j - 1] + 1)[ FD ]
Line_11 $$ for (int j = 1; j < s2.length(); j++) -->Line_12 $$ a[i][j] = min(min(a[i - 1][j - 1] + (s1.charAt(i) == s2.charAt(j) ? 0 : 1), a[i - 1][j] + 1), a[i][j - 1] + 1)[ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_10 $$ for (int i = 1; i < s1.length(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < s1.length(); i++) -->Line_10 $$ for (int i = 1; i < s1.length(); i++) [ FD ]
Line_7 $$ for (int j = 0; j < s2.length(); j++) -->Line_8 $$ a[0][j] = j[ CD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_7 $$ for (int j = 0; j < s2.length(); j++) [ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_12 $$ a[i][j] = min(min(a[i - 1][j - 1] + (s1.charAt(i) == s2.charAt(j) ? 0 : 1), a[i - 1][j] + 1), a[i][j - 1] + 1)[ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_7 $$ for (int j = 0; j < s2.length(); j++) [ CD ]
Line_4 $$ for (int i = 0; i < s1.length(); i++) -->Line_5 $$ a[i][0] = i[ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_15 $$ return a[s1.length() - 1][s2.length() - 1][ CD ]
Line_7 $$ for (int j = 0; j < s2.length(); j++) -->Line_12 $$ a[i][j] = min(min(a[i - 1][j - 1] + (s1.charAt(i) == s2.charAt(j) ? 0 : 1), a[i - 1][j] + 1), a[i][j - 1] + 1)[ FD ]
Line_10 $$ for (int i = 1; i < s1.length(); i++) -->Line_11 $$ for (int j = 1; j < s2.length(); j++) [ CD ]
Line_7 $$ for (int j = 0; j < s2.length(); j++) -->Line_11 $$ for (int j = 1; j < s2.length(); j++) [ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_4 $$ for (int i = 0; i < s1.length(); i++) [ CD ]
Line_7 $$ for (int j = 0; j < s2.length(); j++) -->Line_8 $$ a[0][j] = j[ FD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_3 $$ int[][] a = new int[s1.length()][s2.length()][ FD ]
Line_11 $$ for (int j = 1; j < s2.length(); j++) -->Line_12 $$ a[i][j] = min(min(a[i - 1][j - 1] + (s1.charAt(i) == s2.charAt(j) ? 0 : 1), a[i - 1][j] + 1), a[i][j - 1] + 1)[ CD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_3 $$ int[][] a = new int[s1.length()][s2.length()][ CD ]
Line_2 $$ public static int difference(@NotNull String s1, @NotNull String s2) -->Line_11 $$ for (int j = 1; j < s2.length(); j++) [ FD ]
Line_10 $$ for (int i = 1; i < s1.length(); i++) -->Line_12 $$ a[i][j] = min(min(a[i - 1][j - 1] + (s1.charAt(i) == s2.charAt(j) ? 0 : 1), a[i - 1][j] + 1), a[i][j - 1] + 1)[ FD ]
Line_4 $$ for (int i = 0; i < s1.length(); i++) -->Line_5 $$ a[i][0] = i[ CD ]
