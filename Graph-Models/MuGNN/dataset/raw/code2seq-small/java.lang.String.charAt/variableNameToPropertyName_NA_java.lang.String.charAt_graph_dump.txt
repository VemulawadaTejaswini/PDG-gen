Line_15 $$ if (i < name.length()) -->Line_16 $$ c = name.charAt(i)[ CD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD || variableKind == VariableKind.STATIC_FIELD && name.contains("_")) [ CD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_15 $$ if (i < name.length()) [ FD ]
Line_16 $$ c = name.charAt(i)-->Line_11 $$ buffer.append(Character.toLowerCase(c))[ FD ]
Line_6 $$ char c = name.charAt(i)-->Line_8 $$ if (Character.isLowerCase(c)) [ FD ]
Line_16 $$ c = name.charAt(i)-->Line_8 $$ if (Character.isLowerCase(c)) [ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_17 $$ buffer.append(c)[ FD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_9 $$ return variableNameToPropertyNameInner(name, variableKind)[ FD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_15 $$ if (i < name.length()) [ CD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_5 $$ for (int i = 0; i < name.length(); i++) [ FD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_6 $$ char c = name.charAt(i)[ FD ]
Line_7 $$ if (c != '_') -->Line_8 $$ if (Character.isLowerCase(c)) [ CD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_11 $$ buffer.append(Character.toLowerCase(c))[ FD ]
Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD || variableKind == VariableKind.STATIC_FIELD && name.contains("_")) -->Line_20 $$ return buffer.toString()[ CD ]
Line_6 $$ char c = name.charAt(i)-->Line_16 $$ c = name.charAt(i)[ FD ]
Line_7 $$ if (c != '_') -->Line_11 $$ buffer.append(Character.toLowerCase(c))[ CD ]
Line_6 $$ char c = name.charAt(i)-->Line_11 $$ buffer.append(Character.toLowerCase(c))[ FD ]
Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD || variableKind == VariableKind.STATIC_FIELD && name.contains("_")) -->Line_5 $$ for (int i = 0; i < name.length(); i++) [ CD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD || variableKind == VariableKind.STATIC_FIELD && name.contains("_")) [ FD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_16 $$ c = name.charAt(i)[ FD ]
Line_4 $$ StringBuilder buffer = new StringBuilder()-->Line_20 $$ return buffer.toString()[ FD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_14 $$ i++[ CD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_22 $$ return variableNameToPropertyNameInner(name, variableKind)[ FD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_15 $$ if (i < name.length()) [ FD ]
Line_16 $$ c = name.charAt(i)-->Line_7 $$ if (c != '_') [ FD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_16 $$ c = name.charAt(i)[ FD ]
Line_6 $$ char c = name.charAt(i)-->Line_17 $$ buffer.append(c)[ FD ]
Line_15 $$ if (i < name.length()) -->Line_17 $$ buffer.append(c)[ CD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_7 $$ if (c != '_') [ CD ]
Line_2 $$ public String variableNameToPropertyName(@NotNull String name, @NotNull VariableKind variableKind) -->Line_22 $$ return variableNameToPropertyNameInner(name, variableKind)[ CD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_6 $$ char c = name.charAt(i)[ FD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_6 $$ char c = name.charAt(i)[ CD ]
Line_8 $$ if (Character.isLowerCase(c)) -->Line_9 $$ return variableNameToPropertyNameInner(name, variableKind)[ CD ]
Line_16 $$ c = name.charAt(i)-->Line_17 $$ buffer.append(c)[ FD ]
Line_6 $$ char c = name.charAt(i)-->Line_7 $$ if (c != '_') [ FD ]
Line_5 $$ for (int i = 0; i < name.length(); i++) -->Line_14 $$ i++[ FD ]
Line_3 $$ if (variableKind == VariableKind.STATIC_FINAL_FIELD || variableKind == VariableKind.STATIC_FIELD && name.contains("_")) -->Line_4 $$ StringBuilder buffer = new StringBuilder()[ CD ]
