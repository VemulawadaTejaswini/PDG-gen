Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_8 $$ boolean isAscii = true[ CD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_22 $$ state.initializeState(isAscii, length)[ CD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_24 $$ return matchWildcards(name, 0, 0, state)[ FD ]
Line_12 $$ isAscii = false-->Line_22 $$ state.initializeState(isAscii, length)[ FD ]
Line_9 $$ for (int i = 0; i < length; ++i) -->Line_14 $$ if (patternIndex < myMeaningfulCharacters.length && (c == myMeaningfulCharacters[patternIndex] || c == myMeaningfulCharacters[patternIndex + 1])) [ CD ]
Line_3 $$ if (name.length() < myMinNameLength) -->Line_4 $$ return null[ CD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_18 $$ if (patternIndex < myMinNameLength) [ CD ]
Line_21 $$ MatchingState state = myMatchingState.get()-->Line_26 $$ state.releaseState()[ FD ]
Line_6 $$ int length = name.length()-->Line_9 $$ for (int i = 0; i < length; ++i) [ FD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_21 $$ MatchingState state = myMatchingState.get()[ CD ]
Line_10 $$ char c = name.charAt(i)-->Line_11 $$ if (c >= 128) [ FD ]
Line_9 $$ for (int i = 0; i < length; ++i) -->Line_10 $$ char c = name.charAt(i)[ FD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_3 $$ if (name.length() < myMinNameLength) [ FD ]
Line_6 $$ int length = name.length()-->Line_22 $$ state.initializeState(isAscii, length)[ FD ]
Line_9 $$ for (int i = 0; i < length; ++i) -->Line_10 $$ char c = name.charAt(i)[ CD ]
Line_11 $$ if (c >= 128) -->Line_12 $$ isAscii = false[ CD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_6 $$ int length = name.length()[ FD ]
Line_8 $$ boolean isAscii = true-->Line_22 $$ state.initializeState(isAscii, length)[ FD ]
Line_7 $$ int patternIndex = 0-->Line_18 $$ if (patternIndex < myMinNameLength) [ FD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_7 $$ int patternIndex = 0[ CD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_10 $$ char c = name.charAt(i)[ FD ]
Line_18 $$ if (patternIndex < myMinNameLength) -->Line_19 $$ return null[ CD ]
Line_8 $$ boolean isAscii = true-->Line_12 $$ isAscii = false[ FD ]
Line_21 $$ MatchingState state = myMatchingState.get()-->Line_22 $$ state.initializeState(isAscii, length)[ FD ]
Line_9 $$ for (int i = 0; i < length; ++i) -->Line_11 $$ if (c >= 128) [ CD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_6 $$ int length = name.length()[ CD ]
Line_15 $$ patternIndex += 2-->Line_18 $$ if (patternIndex < myMinNameLength) [ FD ]
Line_7 $$ int patternIndex = 0-->Line_15 $$ patternIndex += 2[ FD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_3 $$ if (name.length() < myMinNameLength) [ CD ]
Line_14 $$ if (patternIndex < myMeaningfulCharacters.length && (c == myMeaningfulCharacters[patternIndex] || c == myMeaningfulCharacters[patternIndex + 1])) -->Line_15 $$ patternIndex += 2[ CD ]
Line_2 $$ public FList<TextRange> matchingFragments(@NotNull String name) -->Line_9 $$ for (int i = 0; i < length; ++i) [ CD ]
Line_21 $$ MatchingState state = myMatchingState.get()-->Line_24 $$ return matchWildcards(name, 0, 0, state)[ FD ]
