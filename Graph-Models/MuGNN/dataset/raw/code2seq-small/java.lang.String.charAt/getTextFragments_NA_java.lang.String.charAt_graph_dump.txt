Line_6 $$ final String text = literal.getText()-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_4 $$ if (result == null) -->Line_9 $$ while (pos < length) [ CD ]
Line_4 $$ if (result == null) -->Line_51 $$ final int contentEnd = text.charAt(0) == text.charAt(length - 1) ? length - 1 : length[ CD ]
Line_44 $$ pos += 2-->Line_9 $$ while (pos < length) [ FD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_14 $$ if (pos == length - 1) -->Line_15 $$ result.add(Pair.create(new TextRange(pos, pos + 1), "\\"))[ CD ]
Line_7 $$ final int length = text.length()-->Line_9 $$ while (pos < length) [ FD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_56 $$ literal.putUserData(STRING_FRAGMENTS, result)[ FD ]
Line_44 $$ pos += 2-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_40 $$ pos = i-->Line_46 $$ unescapedSequenceStart = pos[ FD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_53 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, length), text.substring(unescapedSequenceStart, contentEnd)))[ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_53 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, length), text.substring(unescapedSequenceStart, contentEnd)))[ FD ]
Line_4 $$ if (result == null) -->Line_55 $$ result = Collections.unmodifiableList(result)[ CD ]
Line_40 $$ pos = i-->Line_9 $$ while (pos < length) [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_44 $$ pos += 2[ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_29 $$ result.add(Pair.create(new TextRange(pos, pos + 2), ourEscapesTable.substring(idx + 1, idx + 2)))[ FD ]
Line_11 $$ if (unescapedSequenceStart != pos) -->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ CD ]
Line_30 $$ pos += 2-->Line_40 $$ pos = i[ FD ]
Line_6 $$ final String text = literal.getText()-->Line_43 $$ result.add(Pair.create(new TextRange(pos, pos + 2), text.substring(pos, pos + 2)))[ FD ]
Line_6 $$ final String text = literal.getText()-->Line_53 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, length), text.substring(unescapedSequenceStart, contentEnd)))[ FD ]
Line_6 $$ final String text = literal.getText()-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_4 $$ if (result == null) -->Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()[ CD ]
Line_2 $$ public static List<Pair<TextRange, String>> getTextFragments(@NotNull JsonStringLiteral literal) -->Line_6 $$ final String text = literal.getText()[ FD ]
Line_30 $$ pos += 2-->Line_9 $$ while (pos < length) [ FD ]
Line_44 $$ pos += 2-->Line_46 $$ unescapedSequenceStart = pos[ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_14 $$ if (pos == length - 1) [ FD ]
Line_34 $$ for (; i < pos + 6; i++) -->Line_35 $$ if (i == length || !StringUtil.isHexDigit(text.charAt(i))) [ CD ]
Line_44 $$ pos += 2-->Line_11 $$ if (unescapedSequenceStart != pos) [ FD ]
Line_6 $$ final String text = literal.getText()-->Line_7 $$ final int length = text.length()[ FD ]
Line_44 $$ pos += 2-->Line_14 $$ if (pos == length - 1) [ FD ]
Line_10 $$ if (text.charAt(pos) == '\\') -->Line_14 $$ if (pos == length - 1) [ CD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_40 $$ pos = i-->Line_14 $$ if (pos == length - 1) [ FD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_43 $$ result.add(Pair.create(new TextRange(pos, pos + 2), text.substring(pos, pos + 2)))[ FD ]
Line_6 $$ final String text = literal.getText()-->Line_35 $$ if (i == length || !StringUtil.isHexDigit(text.charAt(i))) [ FD ]
Line_46 $$ unescapedSequenceStart = pos-->Line_52 $$ if (unescapedSequenceStart < contentEnd) [ FD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_15 $$ result.add(Pair.create(new TextRange(pos, pos + 1), "\\"))[ FD ]
Line_6 $$ final String text = literal.getText()-->Line_51 $$ final int contentEnd = text.charAt(0) == text.charAt(length - 1) ? length - 1 : length[ FD ]
Line_30 $$ pos += 2-->Line_11 $$ if (unescapedSequenceStart != pos) [ FD ]
Line_4 $$ if (result == null) -->Line_8 $$ int pos = 1, unescapedSequenceStart = 1[ CD ]
Line_10 $$ if (text.charAt(pos) == '\\') -->Line_48 $$ pos++[ CD ]
Line_30 $$ pos += 2-->Line_14 $$ if (pos == length - 1) [ FD ]
Line_44 $$ pos += 2-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_33 $$ int i = pos + 2-->Line_40 $$ pos = i[ FD ]
Line_2 $$ public static List<Pair<TextRange, String>> getTextFragments(@NotNull JsonStringLiteral literal) -->Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)[ CD ]
Line_10 $$ if (text.charAt(pos) == '\\') -->Line_46 $$ unescapedSequenceStart = pos[ CD ]
Line_51 $$ final int contentEnd = text.charAt(0) == text.charAt(length - 1) ? length - 1 : length-->Line_53 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, length), text.substring(unescapedSequenceStart, contentEnd)))[ FD ]
Line_40 $$ pos = i-->Line_48 $$ pos++[ FD ]
Line_46 $$ unescapedSequenceStart = pos-->Line_53 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, length), text.substring(unescapedSequenceStart, contentEnd)))[ FD ]
Line_30 $$ pos += 2-->Line_43 $$ result.add(Pair.create(new TextRange(pos, pos + 2), text.substring(pos, pos + 2)))[ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_15 $$ result.add(Pair.create(new TextRange(pos, pos + 1), "\\"))[ FD ]
Line_4 $$ if (result == null) -->Line_56 $$ literal.putUserData(STRING_FRAGMENTS, result)[ CD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()[ FD ]
Line_44 $$ pos += 2-->Line_48 $$ pos++[ FD ]
Line_46 $$ unescapedSequenceStart = pos-->Line_11 $$ if (unescapedSequenceStart != pos) [ FD ]
Line_2 $$ public static List<Pair<TextRange, String>> getTextFragments(@NotNull JsonStringLiteral literal) -->Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)[ FD ]
Line_2 $$ public static List<Pair<TextRange, String>> getTextFragments(@NotNull JsonStringLiteral literal) -->Line_4 $$ if (result == null) [ CD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_29 $$ result.add(Pair.create(new TextRange(pos, pos + 2), ourEscapesTable.substring(idx + 1, idx + 2)))[ FD ]
Line_52 $$ if (unescapedSequenceStart < contentEnd) -->Line_53 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, length), text.substring(unescapedSequenceStart, contentEnd)))[ CD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_30 $$ pos += 2[ FD ]
Line_40 $$ pos = i-->Line_43 $$ result.add(Pair.create(new TextRange(pos, pos + 2), text.substring(pos, pos + 2)))[ FD ]
Line_33 $$ int i = pos + 2-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_10 $$ if (text.charAt(pos) == '\\') -->Line_11 $$ if (unescapedSequenceStart != pos) [ CD ]
Line_6 $$ final String text = literal.getText()-->Line_18 $$ final char next = text.charAt(pos + 1)[ FD ]
Line_40 $$ pos = i-->Line_44 $$ pos += 2[ FD ]
Line_9 $$ while (pos < length) -->Line_10 $$ if (text.charAt(pos) == '\\') [ CD ]
Line_30 $$ pos += 2-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_2 $$ public static List<Pair<TextRange, String>> getTextFragments(@NotNull JsonStringLiteral literal) -->Line_56 $$ literal.putUserData(STRING_FRAGMENTS, result)[ FD ]
Line_2 $$ public static List<Pair<TextRange, String>> getTextFragments(@NotNull JsonStringLiteral literal) -->Line_58 $$ return result[ CD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_55 $$ result = Collections.unmodifiableList(result)-->Line_56 $$ literal.putUserData(STRING_FRAGMENTS, result)[ FD ]
Line_4 $$ if (result == null) -->Line_7 $$ final int length = text.length()[ CD ]
Line_18 $$ final char next = text.charAt(pos + 1)-->Line_28 $$ final int idx = ourEscapesTable.indexOf(next)[ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_56 $$ literal.putUserData(STRING_FRAGMENTS, result)[ FD ]
Line_33 $$ int i = pos + 2-->Line_35 $$ if (i == length || !StringUtil.isHexDigit(text.charAt(i))) [ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_55 $$ result = Collections.unmodifiableList(result)[ FD ]
Line_33 $$ int i = pos + 2-->Line_34 $$ for (; i < pos + 6; i++) [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_10 $$ if (text.charAt(pos) == '\\') [ FD ]
Line_30 $$ pos += 2-->Line_48 $$ pos++[ FD ]
Line_30 $$ pos += 2-->Line_46 $$ unescapedSequenceStart = pos[ FD ]
Line_10 $$ if (text.charAt(pos) == '\\') -->Line_18 $$ final char next = text.charAt(pos + 1)[ CD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_46 $$ unescapedSequenceStart = pos[ FD ]
Line_40 $$ pos = i-->Line_10 $$ if (text.charAt(pos) == '\\') [ FD ]
Line_30 $$ pos += 2-->Line_10 $$ if (text.charAt(pos) == '\\') [ FD ]
Line_6 $$ final String text = literal.getText()-->Line_10 $$ if (text.charAt(pos) == '\\') [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_53 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, length), text.substring(unescapedSequenceStart, contentEnd)))[ FD ]
Line_40 $$ pos = i-->Line_11 $$ if (unescapedSequenceStart != pos) [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_52 $$ if (unescapedSequenceStart < contentEnd) [ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_43 $$ result.add(Pair.create(new TextRange(pos, pos + 2), text.substring(pos, pos + 2)))[ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_3 $$ List<Pair<TextRange, String>> result = literal.getUserData(STRING_FRAGMENTS)-->Line_4 $$ if (result == null) [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_40 $$ pos = i[ FD ]
Line_4 $$ if (result == null) -->Line_52 $$ if (unescapedSequenceStart < contentEnd) [ CD ]
Line_44 $$ pos += 2-->Line_43 $$ result.add(Pair.create(new TextRange(pos, pos + 2), text.substring(pos, pos + 2)))[ FD ]
Line_30 $$ pos += 2-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_11 $$ if (unescapedSequenceStart != pos) [ FD ]
Line_30 $$ pos += 2-->Line_44 $$ pos += 2[ FD ]
Line_4 $$ if (result == null) -->Line_6 $$ final String text = literal.getText()[ CD ]
Line_51 $$ final int contentEnd = text.charAt(0) == text.charAt(length - 1) ? length - 1 : length-->Line_52 $$ if (unescapedSequenceStart < contentEnd) [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_43 $$ result.add(Pair.create(new TextRange(pos, pos + 2), text.substring(pos, pos + 2)))[ FD ]
Line_40 $$ pos = i-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_46 $$ unescapedSequenceStart = pos-->Line_12 $$ result.add(Pair.create(new TextRange(unescapedSequenceStart, pos), text.substring(unescapedSequenceStart, pos)))[ FD ]
Line_5 $$ result = new ArrayList<Pair<TextRange, String>>()-->Line_55 $$ result = Collections.unmodifiableList(result)[ FD ]
Line_44 $$ pos += 2-->Line_10 $$ if (text.charAt(pos) == '\\') [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_40 $$ pos = i-->Line_39 $$ result.add(Pair.create(new TextRange(pos, i), text.substring(pos, i)))[ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_9 $$ while (pos < length) [ FD ]
Line_8 $$ int pos = 1, unescapedSequenceStart = 1-->Line_48 $$ pos++[ FD ]
