Line_53 $$ result = new HashSet()-->Line_71 $$ if (result == null) [ FD ]
Line_23 $$ if (indexOrPattern.charAt(0) == '-') -->Line_24 $$ if (i == 0) [ CD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_21 $$ result = new HashSet()-->Line_53 $$ result = new HashSet()[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_52 $$ if (result == null) [ FD ]
Line_53 $$ result = new HashSet()-->Line_42 $$ if (result != null) [ FD ]
Line_6 $$ Set<String> result = null-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
Line_6 $$ Set<String> result = null-->Line_61 $$ result.add(index)[ FD ]
Line_6 $$ Set<String> result = null-->Line_25 $$ result = new HashSet(availableIndices)[ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_32 $$ if (!availableIndices.contains(indexOrPattern)) [ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_21 $$ result = new HashSet()-->Line_63 $$ result.remove(index)[ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_3 $$ if (selectedIndices == null || selectedIndices.length == 0) [ CD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_31 $$ if (indexOrPattern.isEmpty() || !Regex.isSimpleMatchPattern(indexOrPattern)) [ FD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_21 $$ result = new HashSet()-->Line_12 $$ if (result != null) [ FD ]
Line_53 $$ result = new HashSet()-->Line_36 $$ if (result == null) [ FD ]
Line_21 $$ result = new HashSet()-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_19 $$ indexOrPattern = indexOrPattern.substring(1)[ FD ]
Line_23 $$ if (indexOrPattern.charAt(0) == '-') -->Line_28 $$ indexOrPattern = indexOrPattern.substring(1)[ CD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_9 $$ boolean add = true[ CD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_58 $$ if (Regex.simpleMatch(indexOrPattern, index)) [ FD ]
Line_53 $$ result = new HashSet()-->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_36 $$ if (result == null) -->Line_37 $$ result = new HashSet()[ CD ]
Line_52 $$ if (result == null) -->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ CD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_37 $$ result = new HashSet()[ FD ]
Line_57 $$ for (String index : availableIndices) -->Line_63 $$ result.remove(index)[ FD ]
Line_37 $$ result = new HashSet()-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_53 $$ result = new HashSet()[ FD ]
Line_6 $$ Set<String> result = null-->Line_63 $$ result.remove(index)[ FD ]
Line_37 $$ result = new HashSet()-->Line_71 $$ if (result == null) [ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_33 $$ if (!indicesOptions.ignoreUnavailable()) [ FD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_21 $$ result = new HashSet()-->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_6 $$ Set<String> result = null-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_9 $$ boolean add = true-->Line_18 $$ add = true[ FD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_11 $$ if (availableIndices.contains(indexOrPattern)) [ FD ]
Line_20 $$ if (i == 0) -->Line_21 $$ result = new HashSet()[ CD ]
Line_71 $$ if (result == null) -->Line_72 $$ return Collections.unmodifiableList(new ArrayList(Arrays.asList(selectedIndices)))[ CD ]
Line_56 $$ boolean found = false-->Line_59 $$ found = true[ FD ]
Line_37 $$ result = new HashSet()-->Line_12 $$ if (result != null) [ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_17 $$ if (indexOrPattern.charAt(0) == '+') [ FD ]
Line_17 $$ if (indexOrPattern.charAt(0) == '+') -->Line_18 $$ add = true[ CD ]
Line_53 $$ result = new HashSet()-->Line_52 $$ if (result == null) [ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_11 $$ if (availableIndices.contains(indexOrPattern)) [ FD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_32 $$ if (!availableIndices.contains(indexOrPattern)) [ FD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_11 $$ if (availableIndices.contains(indexOrPattern)) [ FD ]
Line_6 $$ Set<String> result = null-->Line_36 $$ if (result == null) [ FD ]
Line_37 $$ result = new HashSet()-->Line_61 $$ result.add(index)[ FD ]
Line_37 $$ result = new HashSet()-->Line_53 $$ result = new HashSet()[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_20 $$ if (i == 0) [ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_52 $$ if (result == null) [ CD ]
Line_33 $$ if (!indicesOptions.ignoreUnavailable()) -->Line_36 $$ if (result == null) [ CD ]
Line_43 $$ if (add) -->Line_44 $$ result.add(indexOrPattern)[ CD ]
Line_21 $$ result = new HashSet()-->Line_37 $$ result = new HashSet()[ FD ]
Line_6 $$ Set<String> result = null-->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_21 $$ result = new HashSet()-->Line_52 $$ if (result == null) [ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) [ CD ]
Line_6 $$ Set<String> result = null-->Line_21 $$ result = new HashSet()[ FD ]
Line_12 $$ if (result != null) -->Line_13 $$ result.add(indexOrPattern)[ CD ]
Line_21 $$ result = new HashSet()-->Line_42 $$ if (result != null) [ FD ]
Line_37 $$ result = new HashSet()-->Line_36 $$ if (result == null) [ FD ]
Line_6 $$ Set<String> result = null-->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_6 $$ Set<String> result = null-->Line_12 $$ if (result != null) [ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_31 $$ if (indexOrPattern.isEmpty() || !Regex.isSimpleMatchPattern(indexOrPattern)) [ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_71 $$ if (result == null) [ CD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_28 $$ indexOrPattern = indexOrPattern.substring(1)[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_42 $$ if (result != null) [ FD ]
Line_10 $$ if (!indexOrPattern.isEmpty()) -->Line_17 $$ if (indexOrPattern.charAt(0) == '+') [ CD ]
Line_53 $$ result = new HashSet()-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_36 $$ if (result == null) -->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ CD ]
Line_21 $$ result = new HashSet()-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_53 $$ result = new HashSet()-->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_63 $$ result.remove(index)[ FD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_10 $$ if (!indexOrPattern.isEmpty()) [ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_60 $$ if (add) -->Line_63 $$ result.remove(index)[ CD ]
Line_37 $$ result = new HashSet()-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_31 $$ if (indexOrPattern.isEmpty() || !Regex.isSimpleMatchPattern(indexOrPattern)) [ CD ]
Line_58 $$ if (Regex.simpleMatch(indexOrPattern, index)) -->Line_60 $$ if (add) [ CD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_58 $$ if (Regex.simpleMatch(indexOrPattern, index)) [ FD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
Line_32 $$ if (!availableIndices.contains(indexOrPattern)) -->Line_42 $$ if (result != null) [ CD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_17 $$ if (indexOrPattern.charAt(0) == '+') -->Line_19 $$ indexOrPattern = indexOrPattern.substring(1)[ CD ]
Line_6 $$ Set<String> result = null-->Line_53 $$ result = new HashSet()[ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_8 $$ String indexOrPattern = selectedIndices[i][ CD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_10 $$ if (!indexOrPattern.isEmpty()) [ FD ]
Line_42 $$ if (result != null) -->Line_43 $$ if (add) [ CD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_17 $$ if (indexOrPattern.charAt(0) == '+') [ FD ]
Line_23 $$ if (indexOrPattern.charAt(0) == '-') -->Line_27 $$ add = false[ CD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_32 $$ if (!availableIndices.contains(indexOrPattern)) [ FD ]
Line_53 $$ result = new HashSet()-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_67 $$ if (!found && !indicesOptions.allowNoIndices()) [ CD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_23 $$ if (indexOrPattern.charAt(0) == '-') [ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_67 $$ if (!found && !indicesOptions.allowNoIndices()) [ FD ]
Line_53 $$ result = new HashSet()-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_12 $$ if (result != null) [ FD ]
Line_6 $$ Set<String> result = null-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_21 $$ result = new HashSet()-->Line_71 $$ if (result == null) [ FD ]
Line_37 $$ result = new HashSet()-->Line_42 $$ if (result != null) [ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_58 $$ if (Regex.simpleMatch(indexOrPattern, index)) [ FD ]
Line_60 $$ if (add) -->Line_61 $$ result.add(index)[ CD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_43 $$ if (add) -->Line_46 $$ result.remove(indexOrPattern)[ CD ]
Line_32 $$ if (!availableIndices.contains(indexOrPattern)) -->Line_33 $$ if (!indicesOptions.ignoreUnavailable()) [ CD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_10 $$ if (!indexOrPattern.isEmpty()) [ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_6 $$ Set<String> result = null[ CD ]
Line_57 $$ for (String index : availableIndices) -->Line_58 $$ if (Regex.simpleMatch(indexOrPattern, index)) [ FD ]
Line_6 $$ Set<String> result = null-->Line_37 $$ result = new HashSet()[ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_23 $$ if (indexOrPattern.charAt(0) == '-') [ FD ]
Line_57 $$ for (String index : availableIndices) -->Line_61 $$ result.add(index)[ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_19 $$ indexOrPattern = indexOrPattern.substring(1)[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_71 $$ if (result == null) [ FD ]
Line_18 $$ add = true-->Line_27 $$ add = false[ FD ]
Line_37 $$ result = new HashSet()-->Line_63 $$ result.remove(index)[ FD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_28 $$ indexOrPattern = indexOrPattern.substring(1)[ FD ]
Line_53 $$ result = new HashSet()-->Line_61 $$ result.add(index)[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_61 $$ result.add(index)[ FD ]
Line_6 $$ Set<String> result = null-->Line_71 $$ if (result == null) [ FD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_23 $$ if (indexOrPattern.charAt(0) == '-') [ FD ]
Line_21 $$ result = new HashSet()-->Line_61 $$ result.add(index)[ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_36 $$ if (result == null) [ FD ]
Line_21 $$ result = new HashSet()-->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_9 $$ boolean add = true-->Line_27 $$ add = false[ FD ]
Line_28 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_11 $$ if (availableIndices.contains(indexOrPattern)) [ FD ]
Line_59 $$ found = true-->Line_67 $$ if (!found && !indicesOptions.allowNoIndices()) [ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_53 $$ result = new HashSet()-->Line_63 $$ result.remove(index)[ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_24 $$ if (i == 0) [ FD ]
Line_6 $$ Set<String> result = null-->Line_42 $$ if (result != null) [ FD ]
Line_58 $$ if (Regex.simpleMatch(indexOrPattern, index)) -->Line_59 $$ found = true[ CD ]
Line_17 $$ if (indexOrPattern.charAt(0) == '+') -->Line_23 $$ if (indexOrPattern.charAt(0) == '-') [ CD ]
Line_53 $$ result = new HashSet()-->Line_12 $$ if (result != null) [ FD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_10 $$ if (!indexOrPattern.isEmpty()) [ CD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_17 $$ if (indexOrPattern.charAt(0) == '+') [ FD ]
Line_11 $$ if (availableIndices.contains(indexOrPattern)) -->Line_12 $$ if (result != null) [ CD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_72 $$ return Collections.unmodifiableList(new ArrayList(Arrays.asList(selectedIndices)))[ FD ]
Line_37 $$ result = new HashSet()-->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_37 $$ result = new HashSet()-->Line_52 $$ if (result == null) [ FD ]
Line_25 $$ result = new HashSet(availableIndices)-->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_10 $$ if (!indexOrPattern.isEmpty()) -->Line_11 $$ if (availableIndices.contains(indexOrPattern)) [ CD ]
Line_52 $$ if (result == null) -->Line_53 $$ result = new HashSet()[ CD ]
Line_24 $$ if (i == 0) -->Line_25 $$ result = new HashSet(availableIndices)[ CD ]
Line_56 $$ boolean found = false-->Line_67 $$ if (!found && !indicesOptions.allowNoIndices()) [ FD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_32 $$ if (!availableIndices.contains(indexOrPattern)) [ FD ]
Line_31 $$ if (indexOrPattern.isEmpty() || !Regex.isSimpleMatchPattern(indexOrPattern)) -->Line_32 $$ if (!availableIndices.contains(indexOrPattern)) [ CD ]
Line_19 $$ indexOrPattern = indexOrPattern.substring(1)-->Line_31 $$ if (indexOrPattern.isEmpty() || !Regex.isSimpleMatchPattern(indexOrPattern)) [ FD ]
Line_21 $$ result = new HashSet()-->Line_13 $$ result.add(indexOrPattern)[ FD ]
Line_17 $$ if (indexOrPattern.charAt(0) == '+') -->Line_20 $$ if (i == 0) [ CD ]
Line_3 $$ if (selectedIndices == null || selectedIndices.length == 0) -->Line_4 $$ return availableIndices[ CD ]
Line_7 $$ for (int i = 0; i < selectedIndices.length; i++) -->Line_56 $$ boolean found = false[ CD ]
Line_8 $$ String indexOrPattern = selectedIndices[i]-->Line_44 $$ result.add(indexOrPattern)[ FD ]
Line_21 $$ result = new HashSet()-->Line_36 $$ if (result == null) [ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_38 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_6 $$ Set<String> result = null-->Line_52 $$ if (result == null) [ FD ]
Line_37 $$ result = new HashSet()-->Line_54 $$ result.addAll(availableIndices.subList(0, i))[ FD ]
Line_21 $$ result = new HashSet()-->Line_25 $$ result = new HashSet(availableIndices)[ FD ]
Line_2 $$ public static List<String> filterIndices(List<String> availableIndices, String[] selectedIndices, IndicesOptions indicesOptions) -->Line_74 $$ return Collections.unmodifiableList(new ArrayList(result))[ CD ]
Line_37 $$ result = new HashSet()-->Line_46 $$ result.remove(indexOrPattern)[ FD ]
