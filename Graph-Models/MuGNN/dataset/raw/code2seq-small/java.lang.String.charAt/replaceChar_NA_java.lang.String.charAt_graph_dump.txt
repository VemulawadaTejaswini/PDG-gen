Line_12 $$ if (newBuffer != null) -->Line_13 $$ newBuffer.append(c)[ CD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_5 $$ char c = buffer.charAt(i)[ FD ]
Line_8 $$ newBuffer = new StringBuilder(buffer.length())-->Line_7 $$ if (newBuffer == null) [ FD ]
Line_4 $$ for (int i = 0; i < buffer.length(); i++) -->Line_5 $$ char c = buffer.charAt(i)[ CD ]
Line_7 $$ if (newBuffer == null) -->Line_9 $$ newBuffer.append(buffer, 0, i)[ CD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_9 $$ newBuffer.append(buffer, 0, i)[ FD ]
Line_3 $$ StringBuilder newBuffer = null-->Line_13 $$ newBuffer.append(c)[ FD ]
Line_6 $$ if (c == oldChar) -->Line_7 $$ if (newBuffer == null) [ CD ]
Line_7 $$ if (newBuffer == null) -->Line_8 $$ newBuffer = new StringBuilder(buffer.length())[ CD ]
Line_3 $$ StringBuilder newBuffer = null-->Line_12 $$ if (newBuffer != null) [ FD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_3 $$ StringBuilder newBuffer = null[ CD ]
Line_8 $$ newBuffer = new StringBuilder(buffer.length())-->Line_16 $$ return newBuffer == null ? buffer : newBuffer.toString()[ FD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_4 $$ for (int i = 0; i < buffer.length(); i++) [ CD ]
Line_5 $$ char c = buffer.charAt(i)-->Line_6 $$ if (c == oldChar) [ FD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_6 $$ if (c == oldChar) [ FD ]
Line_8 $$ newBuffer = new StringBuilder(buffer.length())-->Line_13 $$ newBuffer.append(c)[ FD ]
Line_5 $$ char c = buffer.charAt(i)-->Line_13 $$ newBuffer.append(c)[ FD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_11 $$ newBuffer.append(newChar)[ FD ]
Line_3 $$ StringBuilder newBuffer = null-->Line_8 $$ newBuffer = new StringBuilder(buffer.length())[ FD ]
Line_3 $$ StringBuilder newBuffer = null-->Line_16 $$ return newBuffer == null ? buffer : newBuffer.toString()[ FD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_8 $$ newBuffer = new StringBuilder(buffer.length())[ FD ]
Line_6 $$ if (c == oldChar) -->Line_11 $$ newBuffer.append(newChar)[ CD ]
Line_8 $$ newBuffer = new StringBuilder(buffer.length())-->Line_9 $$ newBuffer.append(buffer, 0, i)[ FD ]
Line_8 $$ newBuffer = new StringBuilder(buffer.length())-->Line_11 $$ newBuffer.append(newChar)[ FD ]
Line_4 $$ for (int i = 0; i < buffer.length(); i++) -->Line_6 $$ if (c == oldChar) [ CD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_4 $$ for (int i = 0; i < buffer.length(); i++) [ FD ]
Line_4 $$ for (int i = 0; i < buffer.length(); i++) -->Line_9 $$ newBuffer.append(buffer, 0, i)[ FD ]
Line_3 $$ StringBuilder newBuffer = null-->Line_7 $$ if (newBuffer == null) [ FD ]
Line_3 $$ StringBuilder newBuffer = null-->Line_9 $$ newBuffer.append(buffer, 0, i)[ FD ]
Line_8 $$ newBuffer = new StringBuilder(buffer.length())-->Line_12 $$ if (newBuffer != null) [ FD ]
Line_2 $$ public static String replaceChar(@NotNull String buffer, char oldChar, char newChar) -->Line_16 $$ return newBuffer == null ? buffer : newBuffer.toString()[ CD ]
Line_3 $$ StringBuilder newBuffer = null-->Line_11 $$ newBuffer.append(newChar)[ FD ]
Line_6 $$ if (c == oldChar) -->Line_12 $$ if (newBuffer != null) [ CD ]
Line_4 $$ for (int i = 0; i < buffer.length(); i++) -->Line_5 $$ char c = buffer.charAt(i)[ FD ]
