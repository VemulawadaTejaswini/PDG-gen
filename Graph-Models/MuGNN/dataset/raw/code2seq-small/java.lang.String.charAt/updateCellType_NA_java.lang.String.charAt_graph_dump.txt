Line_23 $$ final IpnbCodeCell codeCell = new IpnbCodeCell("python", cell.getSource(), null, Lists.<IpnbOutputCell>newArrayList())-->Line_44 $$ cells.set(index, codeCell)[ FD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_23 $$ final IpnbCodeCell codeCell = new IpnbCodeCell("python", cell.getSource(), null, Lists.<IpnbOutputCell>newArrayList())[ FD ]
Line_17 $$ if (index >= 0)-->Line_18 $$ cells.set(index, markdownCell)[ CD ]
Line_20 $$ if (selectedItem.equals(codeCellType)) -->Line_26 $$ myIpnbFilePanel.replaceComponent(selectedCell, codeCell)[ CD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_56 $$ cells.set(index, headingCell)[ FD ]
Line_28 $$ if (selectedCell instanceof IpnbMarkdownPanel) -->Line_47 $$ if (selectedCell instanceof IpnbCodePanel) [ CD ]
Line_9 $$ if (level != cell.getLevel()) -->Line_10 $$ cell.setLevel(level)[ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_37 $$ cells.set(index, headingCell)[ FD ]
Line_6 $$ if (selectedItem.startsWith(headingCellType)) -->Line_7 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)[ CD ]
Line_58 $$ if (selectedItem.equals(markdownCellType)) -->Line_62 $$ if (index >= 0)[ CD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_49 $$ if (selectedItem.startsWith(headingCellType)) [ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_18 $$ cells.set(index, markdownCell)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_28 $$ if (selectedCell instanceof IpnbMarkdownPanel) [ FD ]
Line_47 $$ if (selectedCell instanceof IpnbCodePanel) -->Line_48 $$ final IpnbCodeCell cell = ((IpnbCodePanel) selectedCell).getCell()[ CD ]
Line_49 $$ if (selectedItem.startsWith(headingCellType)) -->Line_52 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()[ CD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_42 $$ final IpnbCodeCell codeCell = new IpnbCodeCell("python", cell.getSource(), null, Lists.<IpnbOutputCell>newArrayList())[ FD ]
Line_43 $$ if (index >= 0)-->Line_44 $$ cells.set(index, codeCell)[ CD ]
Line_49 $$ if (selectedItem.startsWith(headingCellType)) -->Line_58 $$ if (selectedItem.equals(markdownCellType)) [ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_25 $$ cells.set(index, codeCell)[ FD ]
Line_23 $$ final IpnbCodeCell codeCell = new IpnbCodeCell("python", cell.getSource(), null, Lists.<IpnbOutputCell>newArrayList())-->Line_45 $$ myIpnbFilePanel.replaceComponent(selectedCell, codeCell)[ FD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_35 $$ final IpnbHeadingCell headingCell = new IpnbHeadingCell(cell.getSource(), level)[ CD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_54 $$ final IpnbHeadingCell headingCell = new IpnbHeadingCell(cell.getSource(), level)[ FD ]
Line_4 $$ if (selectedCell instanceof IpnbHeadingPanel) -->Line_6 $$ if (selectedItem.startsWith(headingCellType)) [ CD ]
Line_28 $$ if (selectedCell instanceof IpnbMarkdownPanel) -->Line_29 $$ final IpnbMarkdownCell cell = ((IpnbMarkdownPanel) selectedCell).getCell()[ CD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_64 $$ myIpnbFilePanel.replaceComponent(selectedCell, markdownCell)[ FD ]
Line_13 $$ if (selectedItem.equals(markdownCellType)) -->Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())[ CD ]
Line_49 $$ if (selectedItem.startsWith(headingCellType)) -->Line_55 $$ if (index >= 0)[ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_44 $$ cells.set(index, codeCell)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_4 $$ if (selectedCell instanceof IpnbHeadingPanel) [ FD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_34 $$ final int index = cells.indexOf(((IpnbMarkdownPanel) selectedCell).getCell())[ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_18 $$ cells.set(index, markdownCell)[ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_62 $$ if (index >= 0)[ FD ]
Line_7 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)-->Line_8 $$ final int level = Character.getNumericValue(c)[ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_24 $$ if (index >= 0)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_45 $$ myIpnbFilePanel.replaceComponent(selectedCell, codeCell)[ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_37 $$ cells.set(index, headingCell)[ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_55 $$ if (index >= 0)[ FD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_61 $$ final IpnbMarkdownCell markdownCell = new IpnbMarkdownCell(cell.getSource())[ FD ]
Line_16 $$ final IpnbMarkdownCell markdownCell = new IpnbMarkdownCell(cell.getSource())-->Line_63 $$ cells.set(index, markdownCell)[ FD ]
Line_6 $$ if (selectedItem.startsWith(headingCellType)) -->Line_9 $$ if (level != cell.getLevel()) [ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_41 $$ final int index = cells.indexOf(((IpnbMarkdownPanel) selectedCell).getCell())[ FD ]
Line_39 $$ if (selectedItem.equals(codeCellType)) -->Line_45 $$ myIpnbFilePanel.replaceComponent(selectedCell, codeCell)[ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_56 $$ cells.set(index, headingCell)[ FD ]
Line_6 $$ if (selectedItem.startsWith(headingCellType)) -->Line_8 $$ final int level = Character.getNumericValue(c)[ CD ]
Line_28 $$ if (selectedCell instanceof IpnbMarkdownPanel) -->Line_30 $$ if (selectedItem.startsWith(headingCellType)) [ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_34 $$ final int index = cells.indexOf(((IpnbMarkdownPanel) selectedCell).getCell())[ FD ]
Line_9 $$ if (level != cell.getLevel()) -->Line_11 $$ selectedCell.updateCellView()[ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_60 $$ final int index = cells.indexOf(((IpnbCodePanel) selectedCell).getCell())[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_3 $$ selectedCell.updateCellSource()[ CD ]
Line_4 $$ if (selectedCell instanceof IpnbHeadingPanel) -->Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()[ CD ]
Line_6 $$ if (selectedItem.startsWith(headingCellType)) -->Line_13 $$ if (selectedItem.equals(markdownCellType)) [ CD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_19 $$ myIpnbFilePanel.replaceComponent(selectedCell, markdownCell)[ FD ]
Line_20 $$ if (selectedItem.equals(codeCellType)) -->Line_21 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()[ CD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_39 $$ if (selectedItem.equals(codeCellType)) [ CD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_36 $$ if (index >= 0)[ FD ]
Line_16 $$ final IpnbMarkdownCell markdownCell = new IpnbMarkdownCell(cell.getSource())-->Line_18 $$ cells.set(index, markdownCell)[ FD ]
Line_35 $$ final IpnbHeadingCell headingCell = new IpnbHeadingCell(cell.getSource(), level)-->Line_38 $$ myIpnbFilePanel.replaceComponent(selectedCell, headingCell)[ FD ]
Line_8 $$ final int level = Character.getNumericValue(c)-->Line_10 $$ cell.setLevel(level)[ FD ]
Line_39 $$ if (selectedItem.equals(codeCellType)) -->Line_41 $$ final int index = cells.indexOf(((IpnbMarkdownPanel) selectedCell).getCell())[ CD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_63 $$ cells.set(index, markdownCell)[ FD ]
Line_13 $$ if (selectedItem.equals(markdownCellType)) -->Line_20 $$ if (selectedItem.equals(codeCellType)) [ CD ]
Line_7 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)-->Line_51 $$ final int level = Character.getNumericValue(c)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_11 $$ selectedCell.updateCellView()[ FD ]
Line_13 $$ if (selectedItem.equals(markdownCellType)) -->Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()[ CD ]
Line_23 $$ final IpnbCodeCell codeCell = new IpnbCodeCell("python", cell.getSource(), null, Lists.<IpnbOutputCell>newArrayList())-->Line_26 $$ myIpnbFilePanel.replaceComponent(selectedCell, codeCell)[ FD ]
Line_39 $$ if (selectedItem.equals(codeCellType)) -->Line_40 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()[ CD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_26 $$ myIpnbFilePanel.replaceComponent(selectedCell, codeCell)[ FD ]
Line_24 $$ if (index >= 0)-->Line_25 $$ cells.set(index, codeCell)[ CD ]
Line_20 $$ if (selectedItem.equals(codeCellType)) -->Line_23 $$ final IpnbCodeCell codeCell = new IpnbCodeCell("python", cell.getSource(), null, Lists.<IpnbOutputCell>newArrayList())[ CD ]
Line_49 $$ if (selectedItem.startsWith(headingCellType)) -->Line_50 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)[ CD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_25 $$ cells.set(index, codeCell)[ FD ]
Line_20 $$ if (selectedItem.equals(codeCellType)) -->Line_24 $$ if (index >= 0)[ CD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_36 $$ if (index >= 0)[ CD ]
Line_49 $$ if (selectedItem.startsWith(headingCellType)) -->Line_53 $$ final int index = cells.indexOf(((IpnbCodePanel) selectedCell).getCell())[ CD ]
Line_13 $$ if (selectedItem.equals(markdownCellType)) -->Line_19 $$ myIpnbFilePanel.replaceComponent(selectedCell, markdownCell)[ CD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_9 $$ if (level != cell.getLevel()) [ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_39 $$ if (selectedItem.equals(codeCellType)) [ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_47 $$ if (selectedCell instanceof IpnbCodePanel) [ FD ]
Line_58 $$ if (selectedItem.equals(markdownCellType)) -->Line_60 $$ final int index = cells.indexOf(((IpnbCodePanel) selectedCell).getCell())[ CD ]
Line_4 $$ if (selectedCell instanceof IpnbHeadingPanel) -->Line_28 $$ if (selectedCell instanceof IpnbMarkdownPanel) [ CD ]
Line_7 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)-->Line_32 $$ final int level = Character.getNumericValue(c)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_6 $$ if (selectedItem.startsWith(headingCellType)) [ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_3 $$ selectedCell.updateCellSource()[ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_43 $$ if (index >= 0)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_30 $$ if (selectedItem.startsWith(headingCellType)) [ FD ]
Line_58 $$ if (selectedItem.equals(markdownCellType)) -->Line_59 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()[ CD ]
Line_23 $$ final IpnbCodeCell codeCell = new IpnbCodeCell("python", cell.getSource(), null, Lists.<IpnbOutputCell>newArrayList())-->Line_25 $$ cells.set(index, codeCell)[ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_44 $$ cells.set(index, codeCell)[ FD ]
Line_35 $$ final IpnbHeadingCell headingCell = new IpnbHeadingCell(cell.getSource(), level)-->Line_57 $$ myIpnbFilePanel.replaceComponent(selectedCell, headingCell)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_20 $$ if (selectedItem.equals(codeCellType)) [ FD ]
Line_36 $$ if (index >= 0)-->Line_37 $$ cells.set(index, headingCell)[ CD ]
Line_13 $$ if (selectedItem.equals(markdownCellType)) -->Line_16 $$ final IpnbMarkdownCell markdownCell = new IpnbMarkdownCell(cell.getSource())[ CD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_32 $$ final int level = Character.getNumericValue(c)[ CD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_13 $$ if (selectedItem.equals(markdownCellType)) [ FD ]
Line_39 $$ if (selectedItem.equals(codeCellType)) -->Line_43 $$ if (index >= 0)[ CD ]
Line_47 $$ if (selectedCell instanceof IpnbCodePanel) -->Line_49 $$ if (selectedItem.startsWith(headingCellType)) [ CD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_35 $$ final IpnbHeadingCell headingCell = new IpnbHeadingCell(cell.getSource(), level)[ FD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_16 $$ final IpnbMarkdownCell markdownCell = new IpnbMarkdownCell(cell.getSource())[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_58 $$ if (selectedItem.equals(markdownCellType)) [ FD ]
Line_49 $$ if (selectedItem.startsWith(headingCellType)) -->Line_57 $$ myIpnbFilePanel.replaceComponent(selectedCell, headingCell)[ CD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_57 $$ myIpnbFilePanel.replaceComponent(selectedCell, headingCell)[ FD ]
Line_13 $$ if (selectedItem.equals(markdownCellType)) -->Line_17 $$ if (index >= 0)[ CD ]
Line_49 $$ if (selectedItem.startsWith(headingCellType)) -->Line_51 $$ final int level = Character.getNumericValue(c)[ CD ]
Line_35 $$ final IpnbHeadingCell headingCell = new IpnbHeadingCell(cell.getSource(), level)-->Line_37 $$ cells.set(index, headingCell)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_38 $$ myIpnbFilePanel.replaceComponent(selectedCell, headingCell)[ FD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_63 $$ cells.set(index, markdownCell)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_31 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_50 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)[ FD ]
Line_16 $$ final IpnbMarkdownCell markdownCell = new IpnbMarkdownCell(cell.getSource())-->Line_64 $$ myIpnbFilePanel.replaceComponent(selectedCell, markdownCell)[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_4 $$ if (selectedCell instanceof IpnbHeadingPanel) [ CD ]
Line_8 $$ final int level = Character.getNumericValue(c)-->Line_9 $$ if (level != cell.getLevel()) [ FD ]
Line_35 $$ final IpnbHeadingCell headingCell = new IpnbHeadingCell(cell.getSource(), level)-->Line_56 $$ cells.set(index, headingCell)[ FD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_22 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())[ FD ]
Line_2 $$ private void updateCellType(@NotNull final String selectedItem, @NotNull final IpnbEditablePanel selectedCell) -->Line_7 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)[ FD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_53 $$ final int index = cells.indexOf(((IpnbCodePanel) selectedCell).getCell())[ FD ]
Line_14 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()-->Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())[ FD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_31 $$ final char c = selectedItem.charAt(selectedItem.length() - 1)[ CD ]
Line_62 $$ if (index >= 0)-->Line_63 $$ cells.set(index, markdownCell)[ CD ]
Line_15 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())-->Line_17 $$ if (index >= 0)[ FD ]
Line_16 $$ final IpnbMarkdownCell markdownCell = new IpnbMarkdownCell(cell.getSource())-->Line_19 $$ myIpnbFilePanel.replaceComponent(selectedCell, markdownCell)[ FD ]
Line_5 $$ final IpnbHeadingCell cell = ((IpnbHeadingPanel) selectedCell).getCell()-->Line_10 $$ cell.setLevel(level)[ FD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_33 $$ final List<IpnbCell> cells = myIpnbFilePanel.getIpnbFile().getCells()[ CD ]
Line_20 $$ if (selectedItem.equals(codeCellType)) -->Line_22 $$ final int index = cells.indexOf(((IpnbHeadingPanel) selectedCell).getCell())[ CD ]
Line_30 $$ if (selectedItem.startsWith(headingCellType)) -->Line_38 $$ myIpnbFilePanel.replaceComponent(selectedCell, headingCell)[ CD ]
Line_55 $$ if (index >= 0)-->Line_56 $$ cells.set(index, headingCell)[ CD ]
Line_58 $$ if (selectedItem.equals(markdownCellType)) -->Line_64 $$ myIpnbFilePanel.replaceComponent(selectedCell, markdownCell)[ CD ]
