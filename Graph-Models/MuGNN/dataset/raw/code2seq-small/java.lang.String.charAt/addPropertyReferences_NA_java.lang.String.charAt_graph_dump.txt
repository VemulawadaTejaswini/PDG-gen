Line_46 $$ endIndex = startIndex-->Line_20 $$ while ((startIndex = value.indexOf("$[ FD ]
Line_3 $$ final String value = xmlAttributeValue.getValue()-->Line_20 $$ while ((startIndex = value.indexOf("$[ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_6 $$ if (attrib != null) [ CD ]
Line_19 $$ int endIndex = -1-->Line_29 $$ final char ch = value.charAt(endIndex)[ FD ]
Line_3 $$ final String value = xmlAttributeValue.getValue()-->Line_21 $$ if (startIndex > 0 && value.charAt(startIndex - 1) == '$') [ FD ]
Line_25 $$ startIndex += 2-->Line_46 $$ endIndex = startIndex[ FD ]
Line_22 $$ endIndex = startIndex + 1-->Line_29 $$ final char ch = value.charAt(endIndex)[ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_42 $$ if (endIndex >= startIndex) [ CD ]
Line_22 $$ endIndex = startIndex + 1-->Line_46 $$ endIndex = startIndex[ FD ]
Line_28 $$ while (value.length() > endIndex) -->Line_38 $$ ++endIndex[ CD ]
Line_46 $$ endIndex = startIndex-->Line_42 $$ if (endIndex >= startIndex) [ FD ]
Line_3 $$ final String value = xmlAttributeValue.getValue()-->Line_28 $$ while (value.length() > endIndex) [ FD ]
Line_8 $$ if ("if".equals(name) || "unless".equals(name)) -->Line_12 $$ return[ CD ]
Line_26 $$ endIndex = startIndex-->Line_20 $$ while ((startIndex = value.indexOf("$[ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_27 $$ int nestedBrackets = 0[ CD ]
Line_29 $$ final char ch = value.charAt(endIndex)-->Line_30 $$ if (ch == '}') [ FD ]
Line_30 $$ if (ch == '}') -->Line_34 $$ --nestedBrackets[ CD ]
Line_7 $$ final String name = attrib.getName()-->Line_8 $$ if ("if".equals(name) || "unless".equals(name)) [ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_17 $$ final int valueBeginingOffset = Math.abs(xmlAttributeValue.getTextRange().getStartOffset() - xmlAttributeValue.getValueTextRange().getStartOffset())[ FD ]
Line_42 $$ if (endIndex >= startIndex) -->Line_44 $$ result.add(ref)[ CD ]
Line_19 $$ int endIndex = -1-->Line_46 $$ endIndex = startIndex[ FD ]
Line_27 $$ int nestedBrackets = 0-->Line_31 $$ if (nestedBrackets == 0) [ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_21 $$ if (startIndex > 0 && value.charAt(startIndex - 1) == '$') [ CD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_4 $$ final DomElement contextElement = context.getInvocationElement()[ FD ]
Line_3 $$ final String value = xmlAttributeValue.getValue()-->Line_29 $$ final char ch = value.charAt(endIndex)[ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_15 $$ if (xmlAttributeValue != null) [ CD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_25 $$ startIndex += 2[ CD ]
Line_15 $$ if (xmlAttributeValue != null) -->Line_17 $$ final int valueBeginingOffset = Math.abs(xmlAttributeValue.getTextRange().getStartOffset() - xmlAttributeValue.getValueTextRange().getStartOffset())[ CD ]
Line_22 $$ endIndex = startIndex + 1-->Line_26 $$ endIndex = startIndex[ FD ]
Line_22 $$ endIndex = startIndex + 1-->Line_38 $$ ++endIndex[ FD ]
Line_5 $$ final XmlAttribute attrib = PsiTreeUtil.getParentOfType(xmlAttributeValue, XmlAttribute.class)-->Line_6 $$ if (attrib != null) [ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_46 $$ endIndex = startIndex[ FD ]
Line_22 $$ endIndex = startIndex + 1-->Line_28 $$ while (value.length() > endIndex) [ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_25 $$ startIndex += 2[ FD ]
Line_18 $$ int startIndex-->Line_46 $$ endIndex = startIndex[ FD ]
Line_18 $$ int startIndex-->Line_42 $$ if (endIndex >= startIndex) [ FD ]
Line_18 $$ int startIndex-->Line_20 $$ while ((startIndex = value.indexOf("$[ FD ]
Line_30 $$ if (ch == '}') -->Line_35 $$ if (ch == '[ CD ]
Line_30 $$ if (ch == '}') -->Line_31 $$ if (nestedBrackets == 0) [ CD ]
Line_28 $$ while (value.length() > endIndex) -->Line_30 $$ if (ch == '}') [ CD ]
Line_26 $$ endIndex = startIndex-->Line_29 $$ final char ch = value.charAt(endIndex)[ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_26 $$ endIndex = startIndex[ FD ]
Line_19 $$ int endIndex = -1-->Line_20 $$ while ((startIndex = value.indexOf("$[ FD ]
Line_26 $$ endIndex = startIndex-->Line_46 $$ endIndex = startIndex[ FD ]
Line_27 $$ int nestedBrackets = 0-->Line_36 $$ ++nestedBrackets[ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_3 $$ final String value = xmlAttributeValue.getValue()[ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_3 $$ final String value = xmlAttributeValue.getValue()[ CD ]
Line_15 $$ if (xmlAttributeValue != null) -->Line_19 $$ int endIndex = -1[ CD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_44 $$ result.add(ref)[ FD ]
Line_8 $$ if ("if".equals(name) || "unless".equals(name)) -->Line_9 $$ final AntDomPropertyReference ref = new AntDomPropertyReference(contextElement, xmlAttributeValue, ElementManipulators.getValueTextRange(xmlAttributeValue))[ CD ]
Line_19 $$ int endIndex = -1-->Line_42 $$ if (endIndex >= startIndex) [ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_15 $$ if (xmlAttributeValue != null) [ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_22 $$ endIndex = startIndex + 1[ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_28 $$ while (value.length() > endIndex) [ CD ]
Line_19 $$ int endIndex = -1-->Line_26 $$ endIndex = startIndex[ FD ]
Line_25 $$ startIndex += 2-->Line_26 $$ endIndex = startIndex[ FD ]
Line_8 $$ if ("if".equals(name) || "unless".equals(name)) -->Line_10 $$ ref.setShouldBeSkippedByAnnotator(true)[ CD ]
Line_26 $$ endIndex = startIndex-->Line_28 $$ while (value.length() > endIndex) [ FD ]
Line_18 $$ int startIndex-->Line_26 $$ endIndex = startIndex[ FD ]
Line_35 $$ if (ch == '-->Line_36 $$ ++nestedBrackets[ CD ]
Line_19 $$ int endIndex = -1-->Line_22 $$ endIndex = startIndex + 1[ FD ]
Line_25 $$ startIndex += 2-->Line_22 $$ endIndex = startIndex + 1[ FD ]
Line_19 $$ int endIndex = -1-->Line_38 $$ ++endIndex[ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_11 $$ result.add(ref)[ FD ]
Line_8 $$ if ("if".equals(name) || "unless".equals(name)) -->Line_11 $$ result.add(ref)[ CD ]
Line_15 $$ if (xmlAttributeValue != null) -->Line_20 $$ while ((startIndex = value.indexOf("$[ CD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_46 $$ endIndex = startIndex[ CD ]
Line_15 $$ if (xmlAttributeValue != null) -->Line_18 $$ int startIndex[ CD ]
Line_18 $$ int startIndex-->Line_25 $$ startIndex += 2[ FD ]
Line_40 $$ if (nestedBrackets > 0 || endIndex > value.length())-->Line_41 $$ return[ CD ]
Line_26 $$ endIndex = startIndex-->Line_38 $$ ++endIndex[ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_5 $$ final XmlAttribute attrib = PsiTreeUtil.getParentOfType(xmlAttributeValue, XmlAttribute.class)[ CD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_9 $$ final AntDomPropertyReference ref = new AntDomPropertyReference(contextElement, xmlAttributeValue, ElementManipulators.getValueTextRange(xmlAttributeValue))[ FD ]
Line_9 $$ final AntDomPropertyReference ref = new AntDomPropertyReference(contextElement, xmlAttributeValue, ElementManipulators.getValueTextRange(xmlAttributeValue))-->Line_44 $$ result.add(ref)[ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_40 $$ if (nestedBrackets > 0 || endIndex > value.length())[ CD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_5 $$ final XmlAttribute attrib = PsiTreeUtil.getParentOfType(xmlAttributeValue, XmlAttribute.class)[ FD ]
Line_19 $$ int endIndex = -1-->Line_28 $$ while (value.length() > endIndex) [ FD ]
Line_28 $$ while (value.length() > endIndex) -->Line_29 $$ final char ch = value.charAt(endIndex)[ CD ]
Line_3 $$ final String value = xmlAttributeValue.getValue()-->Line_40 $$ if (nestedBrackets > 0 || endIndex > value.length())[ FD ]
Line_25 $$ startIndex += 2-->Line_42 $$ if (endIndex >= startIndex) [ FD ]
Line_21 $$ if (startIndex > 0 && value.charAt(startIndex - 1) == '$') -->Line_22 $$ endIndex = startIndex + 1[ CD ]
Line_9 $$ final AntDomPropertyReference ref = new AntDomPropertyReference(contextElement, xmlAttributeValue, ElementManipulators.getValueTextRange(xmlAttributeValue))-->Line_11 $$ result.add(ref)[ FD ]
Line_29 $$ final char ch = value.charAt(endIndex)-->Line_35 $$ if (ch == '[ FD ]
Line_6 $$ if (attrib != null) -->Line_8 $$ if ("if".equals(name) || "unless".equals(name)) [ CD ]
Line_18 $$ int startIndex-->Line_22 $$ endIndex = startIndex + 1[ FD ]
Line_22 $$ endIndex = startIndex + 1-->Line_42 $$ if (endIndex >= startIndex) [ FD ]
Line_6 $$ if (attrib != null) -->Line_7 $$ final String name = attrib.getName()[ CD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_42 $$ if (endIndex >= startIndex) [ FD ]
Line_20 $$ while ((startIndex = value.indexOf("$-->Line_26 $$ endIndex = startIndex[ CD ]
Line_5 $$ final XmlAttribute attrib = PsiTreeUtil.getParentOfType(xmlAttributeValue, XmlAttribute.class)-->Line_7 $$ final String name = attrib.getName()[ FD ]
Line_26 $$ endIndex = startIndex-->Line_42 $$ if (endIndex >= startIndex) [ FD ]
Line_27 $$ int nestedBrackets = 0-->Line_34 $$ --nestedBrackets[ FD ]
Line_2 $$ private static void addPropertyReferences(@NotNull ConvertContext context, final XmlAttributeValue xmlAttributeValue, final Collection<PsiReference> result) -->Line_4 $$ final DomElement contextElement = context.getInvocationElement()[ CD ]
Line_22 $$ endIndex = startIndex + 1-->Line_20 $$ while ((startIndex = value.indexOf("$[ FD ]
Line_9 $$ final AntDomPropertyReference ref = new AntDomPropertyReference(contextElement, xmlAttributeValue, ElementManipulators.getValueTextRange(xmlAttributeValue))-->Line_10 $$ ref.setShouldBeSkippedByAnnotator(true)[ FD ]
