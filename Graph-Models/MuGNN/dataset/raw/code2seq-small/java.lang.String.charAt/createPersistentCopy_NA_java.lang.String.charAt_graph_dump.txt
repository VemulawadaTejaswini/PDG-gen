Line_2 $$ SubstringWrapper createPersistentCopy(boolean asBytes) -->Line_15 $$ wrapper.start = 0[ CD ]
Line_6 $$ if (asBytes) -->Line_13 $$ wrapper.encodedString = new String(string.substring(start, start + len))[ CD ]
Line_4 $$ String string = (String) encodedString-->Line_5 $$ String substring = string.substring(start, start + len)[ FD ]
Line_2 $$ SubstringWrapper createPersistentCopy(boolean asBytes) -->Line_18 $$ return wrapper[ CD ]
Line_2 $$ SubstringWrapper createPersistentCopy(boolean asBytes) -->Line_3 $$ SubstringWrapper wrapper = new SubstringWrapper()[ CD ]
Line_6 $$ if (asBytes) -->Line_7 $$ byte[] bytes = new byte[len][ CD ]
Line_6 $$ if (asBytes) -->Line_8 $$ for (int i = 0; i < len; i++) [ CD ]
Line_4 $$ String string = (String) encodedString-->Line_9 $$ bytes[i] = (byte) string.charAt(i + start)[ FD ]
Line_4 $$ String string = (String) encodedString-->Line_13 $$ wrapper.encodedString = new String(string.substring(start, start + len))[ FD ]
Line_6 $$ if (asBytes) -->Line_11 $$ wrapper.encodedString = bytes[ CD ]
Line_8 $$ for (int i = 0; i < len; i++) -->Line_9 $$ bytes[i] = (byte) string.charAt(i + start)[ CD ]
Line_2 $$ SubstringWrapper createPersistentCopy(boolean asBytes) -->Line_6 $$ if (asBytes) [ CD ]
Line_7 $$ byte[] bytes = new byte[len]-->Line_11 $$ wrapper.encodedString = bytes[ FD ]
Line_2 $$ SubstringWrapper createPersistentCopy(boolean asBytes) -->Line_4 $$ String string = (String) encodedString[ CD ]
Line_2 $$ SubstringWrapper createPersistentCopy(boolean asBytes) -->Line_5 $$ String substring = string.substring(start, start + len)[ CD ]
