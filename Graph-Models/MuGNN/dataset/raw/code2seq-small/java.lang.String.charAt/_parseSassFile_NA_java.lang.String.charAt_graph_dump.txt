Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_5 $$ File file = new File(_docrootDirName, fileName)[ CD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_11 $$ StringBundler sb = new StringBundler()[ CD ]
Line_36 $$ if (!importFileName.isEmpty()) -->Line_41 $$ if (Validator.isNotNull(mediaQuery)) [ CD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_29 $$ String importFileName = null[ CD ]
Line_12 $$ while (true) -->Line_16 $$ int importY = content.indexOf(_CSS_IMPORT_END, importX + _CSS_IMPORT_BEGIN.length())[ CD ]
Line_30 $$ if (importY != mediaQueryImportX) -->Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)[ CD ]
Line_9 $$ String content = _read(file)-->Line_14 $$ int commentY = content.indexOf(_CSS_COMMENT_END, commentX + _CSS_COMMENT_BEGIN.length())[ FD ]
Line_28 $$ int mediaQueryImportY = content.indexOf(CharPool.SEMICOLON, importX + _CSS_IMPORT_BEGIN.length())-->Line_48 $$ pos = mediaQueryImportY + 1[ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_23 $$ pos = commentY[ CD ]
Line_23 $$ pos = commentY-->Line_25 $$ sb.append(content.substring(pos, importX))[ FD ]
Line_23 $$ pos = commentY-->Line_15 $$ int importX = content.indexOf(_CSS_IMPORT_BEGIN, pos)[ FD ]
Line_29 $$ String importFileName = null-->Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_42 $$ sassFile.addSassFragment(new SassFileWithMediaQuery(importSassFile, mediaQuery))[ FD ]
Line_9 $$ String content = _read(file)-->Line_18 $$ sb.append(content.substring(pos))[ FD ]
Line_48 $$ pos = mediaQueryImportY + 1-->Line_50 $$ pos = importY + _CSS_IMPORT_END.length()[ FD ]
Line_27 $$ int mediaQueryImportX = content.indexOf(CharPool.CLOSE_PARENTHESIS, importX + _CSS_IMPORT_BEGIN.length())-->Line_30 $$ if (importY != mediaQueryImportX) [ FD ]
Line_9 $$ String content = _read(file)-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_44 $$ sassFile.addSassFragment(importSassFile)[ FD ]
Line_56 $$ File rtlCustomFile = new File(_docrootDirName, rtlCustomFileName)-->Line_58 $$ _addSassString(sassFile, rtlCustomFileName, _read(rtlCustomFile))[ FD ]
Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)-->Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))[ FD ]
Line_31 $$ mediaQuery = content.substring(mediaQueryImportX + 1, mediaQueryImportY)-->Line_41 $$ if (Validator.isNotNull(mediaQuery)) [ FD ]
Line_29 $$ String importFileName = null-->Line_40 $$ SassFile importSassFile = _build(importFileName)[ FD ]
Line_3 $$ String fileName = sassFile.getFileName()-->Line_54 $$ _addSassString(sassFile, fileName, sb.toString())[ FD ]
Line_48 $$ pos = mediaQueryImportY + 1-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_12 $$ while (true) -->Line_17 $$ if ((importX == -1) || (importY == -1)) [ CD ]
Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)-->Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_57 $$ if (rtlCustomFile.exists()) [ CD ]
Line_9 $$ String content = _read(file)-->Line_16 $$ int importY = content.indexOf(_CSS_IMPORT_END, importX + _CSS_IMPORT_BEGIN.length())[ FD ]
Line_50 $$ pos = importY + _CSS_IMPORT_END.length()-->Line_18 $$ sb.append(content.substring(pos))[ FD ]
Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))-->Line_37 $$ if (importFileName.charAt(0) != CharPool.SLASH) [ FD ]
Line_40 $$ SassFile importSassFile = _build(importFileName)-->Line_44 $$ sassFile.addSassFragment(importSassFile)[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_3 $$ String fileName = sassFile.getFileName()[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_55 $$ String rtlCustomFileName = CSSBuilderUtil.getRtlCustomFileName(fileName)[ CD ]
Line_9 $$ String content = _read(file)-->Line_15 $$ int importX = content.indexOf(_CSS_IMPORT_BEGIN, pos)[ FD ]
Line_26 $$ String mediaQuery = StringPool.BLANK-->Line_31 $$ mediaQuery = content.substring(mediaQueryImportX + 1, mediaQueryImportY)[ FD ]
Line_3 $$ String fileName = sassFile.getFileName()-->Line_55 $$ String rtlCustomFileName = CSSBuilderUtil.getRtlCustomFileName(fileName)[ FD ]
Line_26 $$ String mediaQuery = StringPool.BLANK-->Line_41 $$ if (Validator.isNotNull(mediaQuery)) [ FD ]
Line_10 $$ int pos = 0-->Line_15 $$ int importX = content.indexOf(_CSS_IMPORT_BEGIN, pos)[ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_21 $$ commentY += _CSS_COMMENT_END.length()[ CD ]
Line_50 $$ pos = importY + _CSS_IMPORT_END.length()-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_47 $$ if (Validator.isNotNull(mediaQuery)) -->Line_48 $$ pos = mediaQueryImportY + 1[ CD ]
Line_30 $$ if (importY != mediaQueryImportX) -->Line_31 $$ mediaQuery = content.substring(mediaQueryImportX + 1, mediaQueryImportY)[ CD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_54 $$ _addSassString(sassFile, fileName, sb.toString())[ FD ]
Line_48 $$ pos = mediaQueryImportY + 1-->Line_25 $$ sb.append(content.substring(pos, importX))[ FD ]
Line_50 $$ pos = importY + _CSS_IMPORT_END.length()-->Line_25 $$ sb.append(content.substring(pos, importX))[ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_25 $$ sb.append(content.substring(pos, importX))[ CD ]
Line_56 $$ File rtlCustomFile = new File(_docrootDirName, rtlCustomFileName)-->Line_57 $$ if (rtlCustomFile.exists()) [ FD ]
Line_10 $$ int pos = 0-->Line_50 $$ pos = importY + _CSS_IMPORT_END.length()[ FD ]
Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)-->Line_40 $$ SassFile importSassFile = _build(importFileName)[ FD ]
Line_37 $$ if (importFileName.charAt(0) != CharPool.SLASH) -->Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))[ CD ]
Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)-->Line_40 $$ SassFile importSassFile = _build(importFileName)[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_9 $$ String content = _read(file)[ CD ]
Line_10 $$ int pos = 0-->Line_13 $$ int commentX = content.indexOf(_CSS_COMMENT_BEGIN, pos)[ FD ]
Line_9 $$ String content = _read(file)-->Line_31 $$ mediaQuery = content.substring(mediaQueryImportX + 1, mediaQueryImportY)[ FD ]
Line_21 $$ commentY += _CSS_COMMENT_END.length()-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_60 $$ sassFile.setElapsedTime(System.currentTimeMillis() - start)[ FD ]
Line_15 $$ int importX = content.indexOf(_CSS_IMPORT_BEGIN, pos)-->Line_25 $$ sb.append(content.substring(pos, importX))[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_56 $$ File rtlCustomFile = new File(_docrootDirName, rtlCustomFileName)[ CD ]
Line_57 $$ if (rtlCustomFile.exists()) -->Line_58 $$ _addSassString(sassFile, rtlCustomFileName, _read(rtlCustomFile))[ CD ]
Line_5 $$ File file = new File(_docrootDirName, fileName)-->Line_6 $$ if (!file.exists()) [ FD ]
Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)-->Line_37 $$ if (importFileName.charAt(0) != CharPool.SLASH) [ FD ]
Line_17 $$ if ((importX == -1) || (importY == -1)) -->Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) [ CD ]
Line_17 $$ if ((importX == -1) || (importY == -1)) -->Line_18 $$ sb.append(content.substring(pos))[ CD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_6 $$ if (!file.exists()) [ CD ]
Line_16 $$ int importY = content.indexOf(_CSS_IMPORT_END, importX + _CSS_IMPORT_BEGIN.length())-->Line_50 $$ pos = importY + _CSS_IMPORT_END.length()[ FD ]
Line_23 $$ pos = commentY-->Line_50 $$ pos = importY + _CSS_IMPORT_END.length()[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_58 $$ _addSassString(sassFile, rtlCustomFileName, _read(rtlCustomFile))[ FD ]
Line_21 $$ commentY += _CSS_COMMENT_END.length()-->Line_23 $$ pos = commentY[ FD ]
Line_10 $$ int pos = 0-->Line_25 $$ sb.append(content.substring(pos, importX))[ FD ]
Line_36 $$ if (!importFileName.isEmpty()) -->Line_37 $$ if (importFileName.charAt(0) != CharPool.SLASH) [ CD ]
Line_12 $$ while (true) -->Line_13 $$ int commentX = content.indexOf(_CSS_COMMENT_BEGIN, pos)[ CD ]
Line_9 $$ String content = _read(file)-->Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)[ FD ]
Line_48 $$ pos = mediaQueryImportY + 1-->Line_13 $$ int commentX = content.indexOf(_CSS_COMMENT_BEGIN, pos)[ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_28 $$ int mediaQueryImportY = content.indexOf(CharPool.SEMICOLON, importX + _CSS_IMPORT_BEGIN.length())[ CD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_26 $$ String mediaQuery = StringPool.BLANK[ CD ]
Line_14 $$ int commentY = content.indexOf(_CSS_COMMENT_END, commentX + _CSS_COMMENT_BEGIN.length())-->Line_21 $$ commentY += _CSS_COMMENT_END.length()[ FD ]
Line_16 $$ int importY = content.indexOf(_CSS_IMPORT_END, importX + _CSS_IMPORT_BEGIN.length())-->Line_30 $$ if (importY != mediaQueryImportX) [ FD ]
Line_9 $$ String content = _read(file)-->Line_27 $$ int mediaQueryImportX = content.indexOf(CharPool.CLOSE_PARENTHESIS, importX + _CSS_IMPORT_BEGIN.length())[ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_36 $$ if (!importFileName.isEmpty()) [ CD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_54 $$ _addSassString(sassFile, fileName, sb.toString())[ CD ]
Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))-->Line_36 $$ if (!importFileName.isEmpty()) [ FD ]
Line_23 $$ pos = commentY-->Line_18 $$ sb.append(content.substring(pos))[ FD ]
Line_10 $$ int pos = 0-->Line_23 $$ pos = commentY[ FD ]
Line_47 $$ if (Validator.isNotNull(mediaQuery)) -->Line_50 $$ pos = importY + _CSS_IMPORT_END.length()[ CD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_47 $$ if (Validator.isNotNull(mediaQuery)) [ CD ]
Line_41 $$ if (Validator.isNotNull(mediaQuery)) -->Line_42 $$ sassFile.addSassFragment(new SassFileWithMediaQuery(importSassFile, mediaQuery))[ CD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_60 $$ sassFile.setElapsedTime(System.currentTimeMillis() - start)[ CD ]
Line_6 $$ if (!file.exists()) -->Line_7 $$ return[ CD ]
Line_16 $$ int importY = content.indexOf(_CSS_IMPORT_END, importX + _CSS_IMPORT_BEGIN.length())-->Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)[ FD ]
Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)-->Line_36 $$ if (!importFileName.isEmpty()) [ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_3 $$ String fileName = sassFile.getFileName()[ CD ]
Line_48 $$ pos = mediaQueryImportY + 1-->Line_15 $$ int importX = content.indexOf(_CSS_IMPORT_BEGIN, pos)[ FD ]
Line_48 $$ pos = mediaQueryImportY + 1-->Line_18 $$ sb.append(content.substring(pos))[ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_4 $$ long start = System.currentTimeMillis()[ CD ]
Line_29 $$ String importFileName = null-->Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))[ FD ]
Line_36 $$ if (!importFileName.isEmpty()) -->Line_40 $$ SassFile importSassFile = _build(importFileName)[ CD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_12 $$ while (true) [ CD ]
Line_11 $$ StringBundler sb = new StringBundler()-->Line_54 $$ _addSassString(sassFile, fileName, sb.toString())[ FD ]
Line_29 $$ String importFileName = null-->Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)[ FD ]
Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)-->Line_37 $$ if (importFileName.charAt(0) != CharPool.SLASH) [ FD ]
Line_55 $$ String rtlCustomFileName = CSSBuilderUtil.getRtlCustomFileName(fileName)-->Line_58 $$ _addSassString(sassFile, rtlCustomFileName, _read(rtlCustomFile))[ FD ]
Line_10 $$ int pos = 0-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_9 $$ String content = _read(file)-->Line_13 $$ int commentX = content.indexOf(_CSS_COMMENT_BEGIN, pos)[ FD ]
Line_28 $$ int mediaQueryImportY = content.indexOf(CharPool.SEMICOLON, importX + _CSS_IMPORT_BEGIN.length())-->Line_31 $$ mediaQuery = content.substring(mediaQueryImportX + 1, mediaQueryImportY)[ FD ]
Line_31 $$ mediaQuery = content.substring(mediaQueryImportX + 1, mediaQueryImportY)-->Line_47 $$ if (Validator.isNotNull(mediaQuery)) [ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_10 $$ int pos = 0[ CD ]
Line_5 $$ File file = new File(_docrootDirName, fileName)-->Line_9 $$ String content = _read(file)[ FD ]
Line_14 $$ int commentY = content.indexOf(_CSS_COMMENT_END, commentX + _CSS_COMMENT_BEGIN.length())-->Line_23 $$ pos = commentY[ FD ]
Line_26 $$ String mediaQuery = StringPool.BLANK-->Line_47 $$ if (Validator.isNotNull(mediaQuery)) [ FD ]
Line_2 $$ private void _parseSassFile(SassFile sassFile) throws Exception -->Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))[ FD ]
Line_27 $$ int mediaQueryImportX = content.indexOf(CharPool.CLOSE_PARENTHESIS, importX + _CSS_IMPORT_BEGIN.length())-->Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)[ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_27 $$ int mediaQueryImportX = content.indexOf(CharPool.CLOSE_PARENTHESIS, importX + _CSS_IMPORT_BEGIN.length())[ CD ]
Line_10 $$ int pos = 0-->Line_48 $$ pos = mediaQueryImportY + 1[ FD ]
Line_29 $$ String importFileName = null-->Line_37 $$ if (importFileName.charAt(0) != CharPool.SLASH) [ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_30 $$ if (importY != mediaQueryImportX) [ CD ]
Line_11 $$ StringBundler sb = new StringBundler()-->Line_18 $$ sb.append(content.substring(pos))[ FD ]
Line_9 $$ String content = _read(file)-->Line_28 $$ int mediaQueryImportY = content.indexOf(CharPool.SEMICOLON, importX + _CSS_IMPORT_BEGIN.length())[ FD ]
Line_32 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), mediaQueryImportX)-->Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)[ FD ]
Line_29 $$ String importFileName = null-->Line_36 $$ if (!importFileName.isEmpty()) [ FD ]
Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)-->Line_36 $$ if (!importFileName.isEmpty()) [ FD ]
Line_41 $$ if (Validator.isNotNull(mediaQuery)) -->Line_44 $$ sassFile.addSassFragment(importSassFile)[ CD ]
Line_12 $$ while (true) -->Line_14 $$ int commentY = content.indexOf(_CSS_COMMENT_END, commentX + _CSS_COMMENT_BEGIN.length())[ CD ]
Line_23 $$ pos = commentY-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_9 $$ String content = _read(file)-->Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)[ FD ]
Line_23 $$ pos = commentY-->Line_48 $$ pos = mediaQueryImportY + 1[ FD ]
Line_23 $$ pos = commentY-->Line_13 $$ int commentX = content.indexOf(_CSS_COMMENT_BEGIN, pos)[ FD ]
Line_50 $$ pos = importY + _CSS_IMPORT_END.length()-->Line_15 $$ int importX = content.indexOf(_CSS_IMPORT_BEGIN, pos)[ FD ]
Line_50 $$ pos = importY + _CSS_IMPORT_END.length()-->Line_13 $$ int commentX = content.indexOf(_CSS_COMMENT_BEGIN, pos)[ FD ]
Line_38 $$ importFileName = _fixRelativePath(sassFile.getBaseDir().concat(importFileName))-->Line_40 $$ SassFile importSassFile = _build(importFileName)[ FD ]
Line_10 $$ int pos = 0-->Line_18 $$ sb.append(content.substring(pos))[ FD ]
Line_14 $$ int commentY = content.indexOf(_CSS_COMMENT_END, commentX + _CSS_COMMENT_BEGIN.length())-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_20 $$ if ((commentX != -1) && (commentY != -1) && (commentX < importX) && (commentY > importX)) -->Line_22 $$ sb.append(content.substring(pos, commentY))[ CD ]
Line_11 $$ StringBundler sb = new StringBundler()-->Line_22 $$ sb.append(content.substring(pos, commentY))[ FD ]
Line_12 $$ while (true) -->Line_15 $$ int importX = content.indexOf(_CSS_IMPORT_BEGIN, pos)[ CD ]
Line_9 $$ String content = _read(file)-->Line_25 $$ sb.append(content.substring(pos, importX))[ FD ]
Line_30 $$ if (importY != mediaQueryImportX) -->Line_34 $$ importFileName = content.substring(importX + _CSS_IMPORT_BEGIN.length(), importY)[ CD ]
Line_11 $$ StringBundler sb = new StringBundler()-->Line_25 $$ sb.append(content.substring(pos, importX))[ FD ]
