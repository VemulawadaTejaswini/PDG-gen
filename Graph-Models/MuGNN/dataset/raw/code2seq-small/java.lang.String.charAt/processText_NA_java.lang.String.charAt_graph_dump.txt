Line_6 $$ final char ch = text.charAt(i)-->Line_7 $$ if (!shouldConvert(ch)) [ FD ]
Line_6 $$ final char ch = text.charAt(i)-->Line_8 $$ sb.append(ch)[ FD ]
Line_2 $$ public String processText(final PsiElement element) -->Line_13 $$ return sb.toString()[ CD ]
Line_2 $$ public String processText(final PsiElement element) -->Line_4 $$ final StringBuilder sb = new StringBuilder()[ CD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_10 $$ convert(sb, ch)[ FD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_13 $$ return sb.toString()[ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_6 $$ final char ch = text.charAt(i)[ FD ]
Line_3 $$ final String text = element.getText()-->Line_6 $$ final char ch = text.charAt(i)[ FD ]
Line_2 $$ public String processText(final PsiElement element) -->Line_3 $$ final String text = element.getText()[ FD ]
Line_3 $$ final String text = element.getText()-->Line_5 $$ for (int i = 0; i < text.length(); i++) [ FD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_6 $$ final char ch = text.charAt(i)[ CD ]
Line_5 $$ for (int i = 0; i < text.length(); i++) -->Line_7 $$ if (!shouldConvert(ch)) [ CD ]
Line_6 $$ final char ch = text.charAt(i)-->Line_10 $$ convert(sb, ch)[ FD ]
Line_7 $$ if (!shouldConvert(ch)) -->Line_10 $$ convert(sb, ch)[ CD ]
Line_7 $$ if (!shouldConvert(ch)) -->Line_8 $$ sb.append(ch)[ CD ]
Line_4 $$ final StringBuilder sb = new StringBuilder()-->Line_8 $$ sb.append(ch)[ FD ]
Line_2 $$ public String processText(final PsiElement element) -->Line_5 $$ for (int i = 0; i < text.length(); i++) [ CD ]
Line_2 $$ public String processText(final PsiElement element) -->Line_3 $$ final String text = element.getText()[ CD ]
