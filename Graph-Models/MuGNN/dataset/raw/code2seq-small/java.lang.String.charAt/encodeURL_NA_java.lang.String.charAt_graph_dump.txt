Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_20 $$ if (sb == null) [ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_32 $$ sb.append("%26")[ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_22 $$ sb.append(rawURLString, 0, i)[ FD ]
Line_58 $$ i += charBuffer.length() - 1-->Line_54 $$ CharBuffer charBuffer = _getRawCharBuffer(rawURLString, i, escapeSpaces)[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_68 $$ sb.append(UnicodeFormatter.byteToHex(byteBuffer.get(), hexes, true))[ FD ]
Line_59 $$ ByteBuffer byteBuffer = null-->Line_66 $$ for (int j = byteBuffer.position(); j < byteBuffer.limit(); j++) [ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_54 $$ CharBuffer charBuffer = _getRawCharBuffer(rawURLString, i, escapeSpaces)[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_16 $$ sb.append(c)[ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_10 $$ CharsetEncoder charsetEncoder = null[ CD ]
Line_9 $$ StringBuilder sb = null-->Line_45 $$ sb.append("%2B")[ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_54 $$ CharBuffer charBuffer = _getRawCharBuffer(rawURLString, i, escapeSpaces)[ CD ]
Line_13 $$ char c = rawURLString.charAt(i)-->Line_14 $$ if (_validChars.get(c)) [ FD ]
Line_9 $$ StringBuilder sb = null-->Line_26 $$ sb.append("%2F")[ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_66 $$ for (int j = byteBuffer.position(); j < byteBuffer.limit(); j++) [ CD ]
Line_55 $$ if (charsetEncoder == null) -->Line_56 $$ charsetEncoder = CharsetEncoderUtil.getCharsetEncoder(charsetName)[ CD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_56 $$ charsetEncoder = CharsetEncoderUtil.getCharsetEncoder(charsetName)[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_15 $$ if (sb != null) [ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_6 $$ if (rawURLString.isEmpty()) [ FD ]
Line_20 $$ if (sb == null) -->Line_22 $$ sb.append(rawURLString, 0, i)[ CD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_3 $$ if (rawURLString == null) [ FD ]
Line_10 $$ CharsetEncoder charsetEncoder = null-->Line_56 $$ charsetEncoder = CharsetEncoderUtil.getCharsetEncoder(charsetName)[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_74 $$ return sb.toString()[ FD ]
Line_38 $$ if (escapeSpaces) -->Line_39 $$ sb.append("%20")[ CD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_11 $$ char[] hexes = new char[2][ CD ]
Line_10 $$ CharsetEncoder charsetEncoder = null-->Line_55 $$ if (charsetEncoder == null) [ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_45 $$ sb.append("%2B")[ FD ]
Line_58 $$ i += charBuffer.length() - 1-->Line_22 $$ sb.append(rawURLString, 0, i)[ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_58 $$ i += charBuffer.length() - 1[ FD ]
Line_54 $$ CharBuffer charBuffer = _getRawCharBuffer(rawURLString, i, escapeSpaces)-->Line_58 $$ i += charBuffer.length() - 1[ FD ]
Line_54 $$ CharBuffer charBuffer = _getRawCharBuffer(rawURLString, i, escapeSpaces)-->Line_61 $$ byteBuffer = charsetEncoder.encode(charBuffer)[ FD ]
Line_15 $$ if (sb != null) -->Line_16 $$ sb.append(c)[ CD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_22 $$ sb.append(rawURLString, 0, i)[ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_6 $$ if (rawURLString.isEmpty()) [ CD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_21 $$ sb = new StringBuilder(rawURLString.length())[ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_22 $$ sb.append(rawURLString, 0, i)[ FD ]
Line_56 $$ charsetEncoder = CharsetEncoderUtil.getCharsetEncoder(charsetName)-->Line_55 $$ if (charsetEncoder == null) [ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_26 $$ sb.append("%2F")[ FD ]
Line_14 $$ if (_validChars.get(c)) -->Line_15 $$ if (sb != null) [ CD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_58 $$ i += charBuffer.length() - 1[ CD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_55 $$ if (charsetEncoder == null) [ CD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_15 $$ if (sb != null) [ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_14 $$ if (_validChars.get(c)) [ CD ]
Line_9 $$ StringBuilder sb = null-->Line_32 $$ sb.append("%26")[ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) [ CD ]
Line_38 $$ if (escapeSpaces) -->Line_41 $$ sb.append(CharPool.PLUS)[ CD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_41 $$ sb.append(CharPool.PLUS)[ FD ]
Line_20 $$ if (sb == null) -->Line_21 $$ sb = new StringBuilder(rawURLString.length())[ CD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_59 $$ ByteBuffer byteBuffer = null[ CD ]
Line_9 $$ StringBuilder sb = null-->Line_22 $$ sb.append(rawURLString, 0, i)[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_67 $$ sb.append(CharPool.PERCENT)[ FD ]
Line_6 $$ if (rawURLString.isEmpty()) -->Line_7 $$ return StringPool.BLANK[ CD ]
Line_71 $$ if (sb == null) -->Line_72 $$ return rawURLString[ CD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_35 $$ sb.append("%25")[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_39 $$ sb.append("%20")[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_51 $$ sb.append("%3F")[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_68 $$ sb.append(UnicodeFormatter.byteToHex(byteBuffer.get(), hexes, true))[ FD ]
Line_58 $$ i += charBuffer.length() - 1-->Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) [ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_20 $$ if (sb == null) [ CD ]
Line_66 $$ for (int j = byteBuffer.position(); j < byteBuffer.limit(); j++) -->Line_67 $$ sb.append(CharPool.PERCENT)[ CD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_48 $$ sb.append("%3A")[ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_3 $$ if (rawURLString == null) [ CD ]
Line_61 $$ byteBuffer = charsetEncoder.encode(charBuffer)-->Line_68 $$ sb.append(UnicodeFormatter.byteToHex(byteBuffer.get(), hexes, true))[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_41 $$ sb.append(CharPool.PLUS)[ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_13 $$ char c = rawURLString.charAt(i)[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_29 $$ sb.append("%3D")[ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_71 $$ if (sb == null) [ CD ]
Line_59 $$ ByteBuffer byteBuffer = null-->Line_61 $$ byteBuffer = charsetEncoder.encode(charBuffer)[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_71 $$ if (sb == null) [ FD ]
Line_11 $$ char[] hexes = new char[2]-->Line_68 $$ sb.append(UnicodeFormatter.byteToHex(byteBuffer.get(), hexes, true))[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_71 $$ if (sb == null) [ FD ]
Line_61 $$ byteBuffer = charsetEncoder.encode(charBuffer)-->Line_66 $$ for (int j = byteBuffer.position(); j < byteBuffer.limit(); j++) [ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_9 $$ StringBuilder sb = null[ CD ]
Line_10 $$ CharsetEncoder charsetEncoder = null-->Line_61 $$ byteBuffer = charsetEncoder.encode(charBuffer)[ FD ]
Line_21 $$ sb = new StringBuilder(rawURLString.length())-->Line_74 $$ return sb.toString()[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_39 $$ sb.append("%20")[ FD ]
Line_3 $$ if (rawURLString == null) -->Line_4 $$ return null[ CD ]
Line_9 $$ StringBuilder sb = null-->Line_51 $$ sb.append("%3F")[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_20 $$ if (sb == null) [ FD ]
Line_9 $$ StringBuilder sb = null-->Line_67 $$ sb.append(CharPool.PERCENT)[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_21 $$ sb = new StringBuilder(rawURLString.length())[ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_54 $$ CharBuffer charBuffer = _getRawCharBuffer(rawURLString, i, escapeSpaces)[ FD ]
Line_58 $$ i += charBuffer.length() - 1-->Line_13 $$ char c = rawURLString.charAt(i)[ FD ]
Line_56 $$ charsetEncoder = CharsetEncoderUtil.getCharsetEncoder(charsetName)-->Line_61 $$ byteBuffer = charsetEncoder.encode(charBuffer)[ FD ]
Line_66 $$ for (int j = byteBuffer.position(); j < byteBuffer.limit(); j++) -->Line_68 $$ sb.append(UnicodeFormatter.byteToHex(byteBuffer.get(), hexes, true))[ CD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_13 $$ char c = rawURLString.charAt(i)[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_35 $$ sb.append("%25")[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_16 $$ sb.append(c)[ FD ]
Line_9 $$ StringBuilder sb = null-->Line_29 $$ sb.append("%3D")[ FD ]
Line_2 $$ public static String encodeURL(String rawURLString, String charsetName, boolean escapeSpaces) -->Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) [ FD ]
Line_59 $$ ByteBuffer byteBuffer = null-->Line_68 $$ sb.append(UnicodeFormatter.byteToHex(byteBuffer.get(), hexes, true))[ FD ]
Line_71 $$ if (sb == null) -->Line_74 $$ return sb.toString()[ CD ]
Line_9 $$ StringBuilder sb = null-->Line_48 $$ sb.append("%3A")[ FD ]
Line_13 $$ char c = rawURLString.charAt(i)-->Line_16 $$ sb.append(c)[ FD ]
Line_12 $$ for (int i = 0; i < rawURLString.length(); i++) -->Line_13 $$ char c = rawURLString.charAt(i)[ CD ]
