Line_12 $$ if (!(key instanceof PyStringLiteralExpression))-->Line_13 $$ return false[ CD ]
Line_14 $$ String str = ((PyStringLiteralExpression) key).getStringValue()-->Line_17 $$ if (str.length() == 0 || Character.isDigit(str.charAt(0)))[ FD ]
Line_15 $$ if (PyNames.isReserved(str))-->Line_16 $$ return false[ CD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_25 $$ return false[ CD ]
Line_10 $$ for (PyKeyValueExpression element : elements) -->Line_11 $$ PyExpression key = element.getKey()[ FD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_3 $$ if (!(file instanceof PyFile)) [ CD ]
Line_3 $$ if (!(file instanceof PyFile)) -->Line_4 $$ return false[ CD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_6 $$ PyDictLiteralExpression dictExpression = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyDictLiteralExpression.class)[ FD ]
Line_7 $$ if (dictExpression != null) -->Line_9 $$ if (elements.length != 0) [ CD ]
Line_6 $$ PyDictLiteralExpression dictExpression = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyDictLiteralExpression.class)-->Line_7 $$ if (dictExpression != null) [ FD ]
Line_7 $$ if (dictExpression != null) -->Line_8 $$ PyKeyValueExpression[] elements = dictExpression.getElements()[ CD ]
Line_19 $$ if (!StringUtil.isJavaIdentifier(str))-->Line_20 $$ return false[ CD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_7 $$ if (dictExpression != null) [ CD ]
Line_17 $$ if (str.length() == 0 || Character.isDigit(str.charAt(0)))-->Line_18 $$ return false[ CD ]
Line_14 $$ String str = ((PyStringLiteralExpression) key).getStringValue()-->Line_15 $$ if (PyNames.isReserved(str))[ FD ]
Line_2 $$ public boolean isAvailable(@NotNull Project project, Editor editor, PsiFile file) -->Line_6 $$ PyDictLiteralExpression dictExpression = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyDictLiteralExpression.class)[ CD ]
Line_14 $$ String str = ((PyStringLiteralExpression) key).getStringValue()-->Line_19 $$ if (!StringUtil.isJavaIdentifier(str))[ FD ]
Line_7 $$ if (dictExpression != null) -->Line_23 $$ return true[ CD ]
Line_6 $$ PyDictLiteralExpression dictExpression = PsiTreeUtil.getParentOfType(file.findElementAt(editor.getCaretModel().getOffset()), PyDictLiteralExpression.class)-->Line_8 $$ PyKeyValueExpression[] elements = dictExpression.getElements()[ FD ]
