Line_5 $$ if (s.startsWith("[")) -->Line_7 $$ if (arrayDimensions >= s.length()) [ CD ]
Line_12 $$ if (!s.endsWith(";"))-->Line_13 $$ return null[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_23 $$ if (Arrays.binarySearch(CanonicalPsiTypeConverterImpl.PRIMITIVES, s) >= 0) [ FD ]
Line_6 $$ int arrayDimensions = getArrayDimensions(s)-->Line_10 $$ final char c = s.charAt(arrayDimensions)[ FD ]
Line_17 $$ if (s.length() == arrayDimensions + 1) -->Line_18 $$ final List<PsiType> list = ourPrimitiveTypes.getKeysByValue(c)[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_6 $$ int arrayDimensions = getArrayDimensions(s)[ FD ]
Line_26 $$ final PsiClass aClass1 = DomJavaUtil.findClass(s, context.getFile(), context.getModule(), context.getSearchScope())-->Line_27 $$ return aClass1 == null ? null : createType(aClass1)[ FD ]
Line_14 $$ final PsiClass aClass = DomJavaUtil.findClass(s.substring(arrayDimensions + 1, s.length() - 1), context.getFile(), context.getModule(), null)-->Line_15 $$ return aClass == null ? null : makeArray(arrayDimensions, createType(aClass))[ FD ]
Line_7 $$ if (arrayDimensions >= s.length()) -->Line_8 $$ return null[ CD ]
Line_11 $$ if (c == 'L') -->Line_15 $$ return aClass == null ? null : makeArray(arrayDimensions, createType(aClass))[ CD ]
Line_11 $$ if (c == 'L') -->Line_14 $$ final PsiClass aClass = DomJavaUtil.findClass(s.substring(arrayDimensions + 1, s.length() - 1), context.getFile(), context.getModule(), null)[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_24 $$ return JavaPsiFacade.getInstance(context.getProject()).getElementFactory().createPrimitiveType(s)[ FD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_17 $$ if (s.length() == arrayDimensions + 1) [ FD ]
Line_10 $$ final char c = s.charAt(arrayDimensions)-->Line_18 $$ final List<PsiType> list = ourPrimitiveTypes.getKeysByValue(c)[ FD ]
Line_5 $$ if (s.startsWith("[")) -->Line_21 $$ return null[ CD ]
Line_17 $$ if (s.length() == arrayDimensions + 1) -->Line_19 $$ return list == null || list.isEmpty() ? null : makeArray(arrayDimensions, list.get(0))[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_5 $$ if (s.startsWith("[")) [ CD ]
Line_10 $$ final char c = s.charAt(arrayDimensions)-->Line_11 $$ if (c == 'L') [ FD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_26 $$ final PsiClass aClass1 = DomJavaUtil.findClass(s, context.getFile(), context.getModule(), context.getSearchScope())[ FD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_3 $$ if (s == null)[ FD ]
Line_23 $$ if (Arrays.binarySearch(CanonicalPsiTypeConverterImpl.PRIMITIVES, s) >= 0) -->Line_24 $$ return JavaPsiFacade.getInstance(context.getProject()).getElementFactory().createPrimitiveType(s)[ CD ]
Line_11 $$ if (c == 'L') -->Line_12 $$ if (!s.endsWith(";"))[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_10 $$ final char c = s.charAt(arrayDimensions)[ FD ]
Line_5 $$ if (s.startsWith("[")) -->Line_17 $$ if (s.length() == arrayDimensions + 1) [ CD ]
Line_3 $$ if (s == null)-->Line_4 $$ return null[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_23 $$ if (Arrays.binarySearch(CanonicalPsiTypeConverterImpl.PRIMITIVES, s) >= 0) [ CD ]
Line_6 $$ int arrayDimensions = getArrayDimensions(s)-->Line_7 $$ if (arrayDimensions >= s.length()) [ FD ]
Line_5 $$ if (s.startsWith("[")) -->Line_10 $$ final char c = s.charAt(arrayDimensions)[ CD ]
Line_5 $$ if (s.startsWith("[")) -->Line_11 $$ if (c == 'L') [ CD ]
Line_6 $$ int arrayDimensions = getArrayDimensions(s)-->Line_19 $$ return list == null || list.isEmpty() ? null : makeArray(arrayDimensions, list.get(0))[ FD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_14 $$ final PsiClass aClass = DomJavaUtil.findClass(s.substring(arrayDimensions + 1, s.length() - 1), context.getFile(), context.getModule(), null)[ FD ]
Line_6 $$ int arrayDimensions = getArrayDimensions(s)-->Line_15 $$ return aClass == null ? null : makeArray(arrayDimensions, createType(aClass))[ FD ]
Line_18 $$ final List<PsiType> list = ourPrimitiveTypes.getKeysByValue(c)-->Line_19 $$ return list == null || list.isEmpty() ? null : makeArray(arrayDimensions, list.get(0))[ FD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_26 $$ final PsiClass aClass1 = DomJavaUtil.findClass(s, context.getFile(), context.getModule(), context.getSearchScope())[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_12 $$ if (!s.endsWith(";"))[ FD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_27 $$ return aClass1 == null ? null : createType(aClass1)[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_7 $$ if (arrayDimensions >= s.length()) [ FD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_3 $$ if (s == null)[ CD ]
Line_5 $$ if (s.startsWith("[")) -->Line_6 $$ int arrayDimensions = getArrayDimensions(s)[ CD ]
Line_2 $$ public static PsiType convertFromString(final String s, final ConvertContext context) -->Line_5 $$ if (s.startsWith("[")) [ FD ]
