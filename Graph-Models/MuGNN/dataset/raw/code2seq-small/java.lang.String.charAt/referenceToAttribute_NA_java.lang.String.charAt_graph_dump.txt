Line_33 $$ attrib = attrib.substring(0, i)-->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_18 $$ for (int i = 1; i < attrib.length(); i++) [ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_12 $$ if (!StringUtil.startsWithChar(attrib, '$')) [ CD ]
Line_18 $$ for (int i = 1; i < attrib.length(); i++) -->Line_20 $$ if (currChar == '[ CD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_15 $$ attrib = attrib.substring(1)[ CD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_3 $$ while (attrib.startsWith("\\\\")) [ CD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_18 $$ for (int i = 1; i < attrib.length(); i++) [ FD ]
Line_20 $$ if (currChar == '-->Line_21 $$ cleanAttribute = null[ CD ]
Line_20 $$ if (currChar == '-->Line_23 $$ if (currChar == '}') [ CD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ FD ]
Line_18 $$ for (int i = 1; i < attrib.length(); i++) -->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_12 $$ if (!StringUtil.startsWithChar(attrib, '$')) [ FD ]
Line_18 $$ for (int i = 1; i < attrib.length(); i++) -->Line_19 $$ char currChar = attrib.charAt(i)[ FD ]
Line_6 $$ if (attrib.startsWith("\\$")) -->Line_7 $$ if (includeDummies) [ CD ]
Line_18 $$ for (int i = 1; i < attrib.length(); i++) -->Line_19 $$ char currChar = attrib.charAt(i)[ CD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_28 $$ attrib = cleanAttribute[ FD ]
Line_30 $$ for (int i = 0; i < attrib.length(); i++) -->Line_33 $$ attrib = attrib.substring(0, i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_16 $$ if (StringUtil.startsWithChar(attrib, '[ FD ]
Line_18 $$ for (int i = 1; i < attrib.length(); i++) -->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_6 $$ if (attrib.startsWith("\\$")) [ CD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_19 $$ char currChar = attrib.charAt(i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_8 $$ attrib = attrib.substring(1)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_19 $$ char currChar = attrib.charAt(i)[ FD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_38 $$ return attrib[ CD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_8 $$ attrib = attrib.substring(1)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_16 $$ if (StringUtil.startsWithChar(attrib, '[ FD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_28 $$ attrib = cleanAttribute[ FD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_16 $$ if (StringUtil.startsWithChar(attrib, '[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_12 $$ if (!StringUtil.startsWithChar(attrib, '$')) [ FD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_33 $$ attrib = attrib.substring(0, i)[ FD ]
Line_28 $$ attrib = cleanAttribute-->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ FD ]
Line_17 $$ String cleanAttribute = null-->Line_21 $$ cleanAttribute = null[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_19 $$ char currChar = attrib.charAt(i)[ FD ]
Line_15 $$ attrib = attrib.substring(1)-->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ FD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ FD ]
Line_21 $$ cleanAttribute = null-->Line_28 $$ attrib = cleanAttribute[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_30 $$ for (int i = 0; i < attrib.length(); i++) -->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_21 $$ cleanAttribute = null-->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_28 $$ attrib = cleanAttribute[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_6 $$ if (attrib.startsWith("\\$")) [ FD ]
Line_18 $$ for (int i = 1; i < attrib.length(); i++) -->Line_33 $$ attrib = attrib.substring(0, i)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_33 $$ attrib = attrib.substring(0, i)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_28 $$ attrib = cleanAttribute[ FD ]
Line_16 $$ if (StringUtil.startsWithChar(attrib, '-->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ CD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_33 $$ attrib = attrib.substring(0, i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_4 $$ attrib = attrib.substring(2)[ FD ]
Line_23 $$ if (currChar == '}') -->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ CD ]
Line_24 $$ cleanAttribute = attrib.substring(1, i)-->Line_28 $$ attrib = cleanAttribute[ FD ]
Line_16 $$ if (StringUtil.startsWithChar(attrib, '-->Line_18 $$ for (int i = 1; i < attrib.length(); i++) [ CD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_12 $$ if (!StringUtil.startsWithChar(attrib, '$')) [ FD ]
Line_28 $$ attrib = cleanAttribute-->Line_33 $$ attrib = attrib.substring(0, i)[ FD ]
Line_32 $$ if (currChar == '-->Line_33 $$ attrib = attrib.substring(0, i)[ CD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ FD ]
Line_19 $$ char currChar = attrib.charAt(i)-->Line_23 $$ if (currChar == '}') [ FD ]
Line_30 $$ for (int i = 0; i < attrib.length(); i++) -->Line_32 $$ if (currChar == '[ CD ]
Line_7 $$ if (includeDummies) -->Line_10 $$ return null[ CD ]
Line_17 $$ String cleanAttribute = null-->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ FD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_12 $$ if (!StringUtil.startsWithChar(attrib, '$')) -->Line_13 $$ return null[ CD ]
Line_28 $$ attrib = cleanAttribute-->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_18 $$ for (int i = 1; i < attrib.length(); i++) [ FD ]
Line_17 $$ String cleanAttribute = null-->Line_28 $$ attrib = cleanAttribute[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_3 $$ while (attrib.startsWith("\\\\")) [ FD ]
Line_7 $$ if (includeDummies) -->Line_8 $$ attrib = attrib.substring(1)[ CD ]
Line_16 $$ if (StringUtil.startsWithChar(attrib, '-->Line_28 $$ attrib = cleanAttribute[ CD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ FD ]
Line_30 $$ for (int i = 0; i < attrib.length(); i++) -->Line_31 $$ char currChar = attrib.charAt(i)[ CD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_15 $$ attrib = attrib.substring(1)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_6 $$ if (attrib.startsWith("\\$")) [ FD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_19 $$ char currChar = attrib.charAt(i)[ FD ]
Line_3 $$ while (attrib.startsWith("\\\\")) -->Line_4 $$ attrib = attrib.substring(2)[ CD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_33 $$ attrib = attrib.substring(0, i)[ FD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_16 $$ if (StringUtil.startsWithChar(attrib, '[ FD ]
Line_18 $$ for (int i = 1; i < attrib.length(); i++) -->Line_24 $$ cleanAttribute = attrib.substring(1, i)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_15 $$ attrib = attrib.substring(1)[ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_3 $$ while (attrib.startsWith("\\\\")) [ FD ]
Line_16 $$ if (StringUtil.startsWithChar(attrib, '-->Line_17 $$ String cleanAttribute = null[ CD ]
Line_33 $$ attrib = attrib.substring(0, i)-->Line_30 $$ for (int i = 0; i < attrib.length(); i++) [ FD ]
Line_2 $$ private static String referenceToAttribute(String attrib, boolean includeDummies) -->Line_16 $$ if (StringUtil.startsWithChar(attrib, '[ CD ]
Line_8 $$ attrib = attrib.substring(1)-->Line_18 $$ for (int i = 1; i < attrib.length(); i++) [ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_31 $$ char currChar = attrib.charAt(i)[ FD ]
Line_4 $$ attrib = attrib.substring(2)-->Line_15 $$ attrib = attrib.substring(1)[ FD ]
