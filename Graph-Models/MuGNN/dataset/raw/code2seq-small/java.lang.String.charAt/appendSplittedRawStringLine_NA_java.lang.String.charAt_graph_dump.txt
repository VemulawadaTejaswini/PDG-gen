Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_28 $$ chunkStart = k[ CD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_7 $$ if (k < line.length()) -->Line_9 $$ doubleQuoteUsed |= line.charAt(k) == '"'[ CD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_4 $$ int chunkStart = 0[ CD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_6 $$ for (int k = 0; k <= line.length(); k++) [ FD ]
Line_11 $$ final char chunkQuote-->Line_16 $$ chunkQuote = '"'[ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) [ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_8 $$ singleQuoteUsed |= line.charAt(k) == '\''[ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_8 $$ singleQuoteUsed |= line.charAt(k) == '\''[ FD ]
Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) -->Line_17 $$ singleQuoteUsed = false[ CD ]
Line_8 $$ singleQuoteUsed |= line.charAt(k) == '\''-->Line_17 $$ singleQuoteUsed = false[ FD ]
Line_27 $$ firstChunk = false-->Line_23 $$ if (!firstChunk) [ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_23 $$ if (!firstChunk) [ CD ]
Line_3 $$ boolean singleQuoteUsed = false, doubleQuoteUsed = false-->Line_8 $$ singleQuoteUsed |= line.charAt(k) == '\''[ FD ]
Line_16 $$ chunkQuote = '"'-->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_4 $$ int chunkStart = 0-->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_7 $$ if (k < line.length()) [ CD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_9 $$ doubleQuoteUsed |= line.charAt(k) == '"'[ FD ]
Line_9 $$ doubleQuoteUsed |= line.charAt(k) == '"'-->Line_14 $$ doubleQuoteUsed = false[ FD ]
Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) -->Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) [ CD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_18 $$ if (k == line.length()) [ FD ]
Line_23 $$ if (!firstChunk) -->Line_24 $$ result.append(" ")[ CD ]
Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) -->Line_16 $$ chunkQuote = '"'[ CD ]
Line_3 $$ boolean singleQuoteUsed = false, doubleQuoteUsed = false-->Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) [ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_27 $$ firstChunk = false[ CD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_5 $$ boolean firstChunk = true[ CD ]
Line_14 $$ doubleQuoteUsed = false-->Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) [ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_6 $$ for (int k = 0; k <= line.length(); k++) [ CD ]
Line_7 $$ if (k < line.length()) -->Line_8 $$ singleQuoteUsed |= line.charAt(k) == '\''[ CD ]
Line_3 $$ boolean singleQuoteUsed = false, doubleQuoteUsed = false-->Line_9 $$ doubleQuoteUsed |= line.charAt(k) == '"'[ FD ]
Line_16 $$ chunkQuote = '"'-->Line_19 $$ chunkQuote = info.getSingleQuote()[ FD ]
Line_28 $$ chunkStart = k-->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_13 $$ chunkQuote = '\''-->Line_19 $$ chunkQuote = info.getSingleQuote()[ FD ]
Line_3 $$ boolean singleQuoteUsed = false, doubleQuoteUsed = false-->Line_14 $$ doubleQuoteUsed = false[ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_24 $$ result.append(" ")[ FD ]
Line_13 $$ chunkQuote = '\''-->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_9 $$ doubleQuoteUsed |= line.charAt(k) == '"'[ FD ]
Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) -->Line_14 $$ doubleQuoteUsed = false[ CD ]
Line_11 $$ final char chunkQuote-->Line_19 $$ chunkQuote = info.getSingleQuote()[ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_18 $$ if (k == line.length()) [ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_7 $$ if (k < line.length()) [ FD ]
Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) -->Line_18 $$ if (k == line.length()) [ CD ]
Line_3 $$ boolean singleQuoteUsed = false, doubleQuoteUsed = false-->Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) [ FD ]
Line_18 $$ if (k == line.length()) -->Line_19 $$ chunkQuote = info.getSingleQuote()[ CD ]
Line_11 $$ final char chunkQuote-->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_5 $$ boolean firstChunk = true-->Line_27 $$ firstChunk = false[ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_28 $$ chunkStart = k[ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) [ FD ]
Line_3 $$ boolean singleQuoteUsed = false, doubleQuoteUsed = false-->Line_17 $$ singleQuoteUsed = false[ FD ]
Line_4 $$ int chunkStart = 0-->Line_28 $$ chunkStart = k[ FD ]
Line_19 $$ chunkQuote = info.getSingleQuote()-->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ FD ]
Line_8 $$ singleQuoteUsed |= line.charAt(k) == '\''-->Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) [ FD ]
Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) -->Line_13 $$ chunkQuote = '\''[ CD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_19 $$ chunkQuote = info.getSingleQuote()[ FD ]
Line_5 $$ boolean firstChunk = true-->Line_23 $$ if (!firstChunk) [ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_26 $$ result.append(info.getPrefix()).append(chunkQuote).append(line.substring(chunkStart, k)).append(chunkQuote)[ CD ]
Line_17 $$ singleQuoteUsed = false-->Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) [ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_3 $$ boolean singleQuoteUsed = false, doubleQuoteUsed = false[ CD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) [ CD ]
Line_9 $$ doubleQuoteUsed |= line.charAt(k) == '"'-->Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) [ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_7 $$ if (k < line.length()) [ FD ]
Line_6 $$ for (int k = 0; k <= line.length(); k++) -->Line_11 $$ final char chunkQuote[ CD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_15 $$ if ((k == line.length() || line.charAt(k) == '"') && singleQuoteUsed) [ FD ]
Line_13 $$ chunkQuote = '\''-->Line_16 $$ chunkQuote = '"'[ FD ]
Line_2 $$ private static void appendSplittedRawStringLine(@NotNull StringBuilder result, @NotNull StringNodeInfo info, @NotNull String line) -->Line_12 $$ if ((k == line.length() || line.charAt(k) == '\'') && doubleQuoteUsed) [ FD ]
Line_11 $$ final char chunkQuote-->Line_13 $$ chunkQuote = '\''[ FD ]
