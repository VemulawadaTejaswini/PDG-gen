Line_6 $$ final int offsetInElement = offset - insertedElement.getTextRange().getStartOffset()-->Line_16 $$ return text.substring(start + 1, offsetInElement).trim()[ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_6 $$ final int offsetInElement = offset - insertedElement.getTextRange().getStartOffset()[ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_9 $$ if (!idPart.accepts(text.charAt(start)))[ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_7 $$ int start = offsetInElement - 1[ CD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_3 $$ if (insertedElement == null)[ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_16 $$ return text.substring(start + 1, offsetInElement).trim()[ CD ]
Line_7 $$ int start = offsetInElement - 1-->Line_9 $$ if (!idPart.accepts(text.charAt(start)))[ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_6 $$ final int offsetInElement = offset - insertedElement.getTextRange().getStartOffset()[ CD ]
Line_8 $$ while (start >= 0) -->Line_11 $$ --start[ CD ]
Line_7 $$ int start = offsetInElement - 1-->Line_14 $$ start++[ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_3 $$ if (insertedElement == null)[ CD ]
Line_5 $$ final String text = insertedElement.getText()-->Line_13 $$ while (start + 1 < offsetInElement && !idStart.accepts(text.charAt(start + 1))) [ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_8 $$ while (start >= 0) [ CD ]
Line_8 $$ while (start >= 0) -->Line_9 $$ if (!idPart.accepts(text.charAt(start)))[ CD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_5 $$ final String text = insertedElement.getText()[ FD ]
Line_5 $$ final String text = insertedElement.getText()-->Line_9 $$ if (!idPart.accepts(text.charAt(start)))[ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_13 $$ while (start + 1 < offsetInElement && !idStart.accepts(text.charAt(start + 1))) [ CD ]
Line_3 $$ if (insertedElement == null)-->Line_4 $$ return ""[ CD ]
Line_7 $$ int start = offsetInElement - 1-->Line_11 $$ --start[ FD ]
Line_5 $$ final String text = insertedElement.getText()-->Line_16 $$ return text.substring(start + 1, offsetInElement).trim()[ FD ]
Line_7 $$ int start = offsetInElement - 1-->Line_8 $$ while (start >= 0) [ FD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_13 $$ while (start + 1 < offsetInElement && !idStart.accepts(text.charAt(start + 1))) [ FD ]
Line_13 $$ while (start + 1 < offsetInElement && !idStart.accepts(text.charAt(start + 1))) -->Line_14 $$ start++[ CD ]
Line_2 $$ public static String findIdentifierPrefix(PsiElement insertedElement, int offset, ElementPattern<Character> idPart, ElementPattern<Character> idStart) -->Line_5 $$ final String text = insertedElement.getText()[ CD ]
