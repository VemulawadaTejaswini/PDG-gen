Line_40 $$ int charRunLength = (utfBytes.length - utfIndex) / maxSize-->Line_61 $$ length -= charRunLength[ FD ]
Line_10 $$ for (int i = 0; i < length; i++) -->Line_11 $$ int ch = str.charAt(i)[ FD ]
Line_3 $$ int length = str.length()-->Line_46 $$ charRunLength = length[ FD ]
Line_43 $$ utfIndex = 0-->Line_55 $$ utfBytes[utfIndex++] = (byte) (0xe0 | (0x0f & (ch >> 12)))[ FD ]
Line_40 $$ int charRunLength = (utfBytes.length - utfIndex) / maxSize-->Line_45 $$ if (charRunLength > length)[ FD ]
Line_46 $$ charRunLength = length-->Line_61 $$ length -= charRunLength[ FD ]
Line_17 $$ utfCount += maxSize = 3-->Line_23 $$ if (utfCount == length) [ FD ]
Line_35 $$ int utfIndex = 2-->Line_55 $$ utfBytes[utfIndex++] = (byte) (0xe0 | (0x0f & (ch >> 12)))[ FD ]
Line_39 $$ while (length > 0) -->Line_45 $$ if (charRunLength > length)[ CD ]
Line_47 $$ for (int i = 0; i < charRunLength; i++) -->Line_49 $$ if ((ch > 0) && (ch <= 127)) [ CD ]
Line_49 $$ if ((ch > 0) && (ch <= 127)) -->Line_51 $$ if (ch <= 2047) [ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_3 $$ int length = str.length()[ FD ]
Line_21 $$ byte[] utfBytes = retrieveTemporaryBuffer(utfCount + 2)-->Line_31 $$ out.write(utfBytes, 0, runLength)[ FD ]
Line_10 $$ for (int i = 0; i < length; i++) -->Line_12 $$ if ((ch > 0) & (ch <= 127))[ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_11 $$ int ch = str.charAt(i)[ FD ]
Line_40 $$ int charRunLength = (utfBytes.length - utfIndex) / maxSize-->Line_47 $$ for (int i = 0; i < charRunLength; i++) [ FD ]
Line_46 $$ charRunLength = length-->Line_60 $$ offset += charRunLength[ FD ]
Line_12 $$ if ((ch > 0) & (ch <= 127))-->Line_13 $$ utfCount += 1[ CD ]
Line_12 $$ if ((ch > 0) & (ch <= 127))-->Line_14 $$ if (ch <= 2047)[ CD ]
Line_40 $$ int charRunLength = (utfBytes.length - utfIndex) / maxSize-->Line_46 $$ charRunLength = length[ FD ]
Line_14 $$ if (ch <= 2047)-->Line_15 $$ utfCount += 2[ CD ]
Line_13 $$ utfCount += 1-->Line_19 $$ if (utfCount > 65535)[ FD ]
Line_46 $$ charRunLength = length-->Line_45 $$ if (charRunLength > length)[ FD ]
Line_23 $$ if (utfCount == length) -->Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) [ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_31 $$ out.write(utfBytes, 0, runLength)[ FD ]
Line_23 $$ if (utfCount == length) -->Line_35 $$ int utfIndex = 2[ CD ]
Line_40 $$ int charRunLength = (utfBytes.length - utfIndex) / maxSize-->Line_60 $$ offset += charRunLength[ FD ]
Line_41 $$ if (charRunLength < 128 && charRunLength < length) -->Line_42 $$ out.write(utfBytes, 0, utfIndex)[ CD ]
Line_29 $$ offset -= firstIndex-->Line_60 $$ offset += charRunLength[ FD ]
Line_61 $$ length -= charRunLength-->Line_39 $$ while (length > 0) [ FD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_5 $$ out.write(zeroBytes)[ FD ]
Line_26 $$ int firstIndex = 2-->Line_32 $$ firstIndex = 0[ FD ]
Line_13 $$ utfCount += 1-->Line_15 $$ utfCount += 2[ FD ]
Line_10 $$ for (int i = 0; i < length; i++) -->Line_11 $$ int ch = str.charAt(i)[ CD ]
Line_23 $$ if (utfCount == length) -->Line_38 $$ utfBytes[1] = (byte) utfCount[ CD ]
Line_35 $$ int utfIndex = 2-->Line_52 $$ utfBytes[utfIndex++] = (byte) (0xc0 | (0x1f & (ch >> 6)))[ FD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_30 $$ utfBytes[i] = (byte) str.charAt(offset + i)[ FD ]
Line_51 $$ if (ch <= 2047) -->Line_55 $$ utfBytes[utfIndex++] = (byte) (0xe0 | (0x0f & (ch >> 12)))[ CD ]
Line_51 $$ if (ch <= 2047) -->Line_57 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & ch))[ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_8 $$ int utfCount = 0[ CD ]
Line_3 $$ int length = str.length()-->Line_23 $$ if (utfCount == length) [ FD ]
Line_39 $$ while (length > 0) -->Line_60 $$ offset += charRunLength[ CD ]
Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) -->Line_29 $$ offset -= firstIndex[ CD ]
Line_43 $$ utfIndex = 0-->Line_50 $$ utfBytes[utfIndex++] = (byte) ch[ FD ]
Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) -->Line_32 $$ firstIndex = 0[ CD ]
Line_39 $$ while (length > 0) -->Line_41 $$ if (charRunLength < 128 && charRunLength < length) [ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_21 $$ byte[] utfBytes = retrieveTemporaryBuffer(utfCount + 2)[ CD ]
Line_39 $$ while (length > 0) -->Line_47 $$ for (int i = 0; i < charRunLength; i++) [ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_42 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
Line_45 $$ if (charRunLength > length)-->Line_46 $$ charRunLength = length[ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_19 $$ if (utfCount > 65535)[ CD ]
Line_23 $$ if (utfCount == length) -->Line_26 $$ int firstIndex = 2[ CD ]
Line_49 $$ if ((ch > 0) && (ch <= 127)) -->Line_50 $$ utfBytes[utfIndex++] = (byte) ch[ CD ]
Line_28 $$ int runLength = Math.min(bufferLength - firstIndex, length - offset) + firstIndex-->Line_30 $$ for (int i = firstIndex; i < runLength; i++) utfBytes[i] = (byte) str.charAt(offset + i)[ FD ]
Line_51 $$ if (ch <= 2047) -->Line_53 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & ch))[ CD ]
Line_15 $$ utfCount += 2-->Line_17 $$ utfCount += maxSize = 3[ FD ]
Line_46 $$ charRunLength = length-->Line_47 $$ for (int i = 0; i < charRunLength; i++) [ FD ]
Line_43 $$ utfIndex = 0-->Line_42 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
Line_15 $$ utfCount += 2-->Line_19 $$ if (utfCount > 65535)[ FD ]
Line_61 $$ length -= charRunLength-->Line_45 $$ if (charRunLength > length)[ FD ]
Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) -->Line_28 $$ int runLength = Math.min(bufferLength - firstIndex, length - offset) + firstIndex[ CD ]
Line_43 $$ utfIndex = 0-->Line_57 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & ch))[ FD ]
Line_23 $$ if (utfCount == length) -->Line_39 $$ while (length > 0) [ CD ]
Line_48 $$ char ch = str.charAt(offset + i)-->Line_51 $$ if (ch <= 2047) [ FD ]
Line_30 $$ for (int i = firstIndex; i < runLength; i++) utfBytes[i] = (byte) str.charAt(offset + i)-->Line_47 $$ for (int i = 0; i < charRunLength; i++) [ FD ]
Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) -->Line_29 $$ offset -= firstIndex[ FD ]
Line_47 $$ for (int i = 0; i < charRunLength; i++) -->Line_48 $$ char ch = str.charAt(offset + i)[ CD ]
Line_8 $$ int utfCount = 0-->Line_15 $$ utfCount += 2[ FD ]
Line_10 $$ for (int i = 0; i < length; i++) -->Line_30 $$ for (int i = firstIndex; i < runLength; i++) utfBytes[i] = (byte) str.charAt(offset + i)[ FD ]
Line_3 $$ int length = str.length()-->Line_10 $$ for (int i = 0; i < length; i++) [ FD ]
Line_22 $$ int bufferLength = utfBytes.length-->Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) [ FD ]
Line_8 $$ int utfCount = 0-->Line_23 $$ if (utfCount == length) [ FD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_3 $$ int length = str.length()[ CD ]
Line_11 $$ int ch = str.charAt(i)-->Line_14 $$ if (ch <= 2047)[ FD ]
Line_11 $$ int ch = str.charAt(i)-->Line_51 $$ if (ch <= 2047) [ FD ]
Line_4 $$ if (length == 0) -->Line_5 $$ out.write(zeroBytes)[ CD ]
Line_14 $$ if (ch <= 2047)-->Line_17 $$ utfCount += maxSize = 3[ CD ]
Line_3 $$ int length = str.length()-->Line_45 $$ if (charRunLength > length)[ FD ]
Line_35 $$ int utfIndex = 2-->Line_56 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & (ch >> 6)))[ FD ]
Line_36 $$ int offset = 0-->Line_60 $$ offset += charRunLength[ FD ]
Line_3 $$ int length = str.length()-->Line_4 $$ if (length == 0) [ FD ]
Line_41 $$ if (charRunLength < 128 && charRunLength < length) -->Line_43 $$ utfIndex = 0[ CD ]
Line_17 $$ utfCount += maxSize = 3-->Line_19 $$ if (utfCount > 65535)[ FD ]
Line_35 $$ int utfIndex = 2-->Line_57 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & ch))[ FD ]
Line_8 $$ int utfCount = 0-->Line_17 $$ utfCount += maxSize = 3[ FD ]
Line_10 $$ for (int i = 0; i < length; i++) -->Line_47 $$ for (int i = 0; i < charRunLength; i++) [ FD ]
Line_43 $$ utfIndex = 0-->Line_56 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & (ch >> 6)))[ FD ]
Line_8 $$ int utfCount = 0-->Line_13 $$ utfCount += 1[ FD ]
Line_35 $$ int utfIndex = 2-->Line_43 $$ utfIndex = 0[ FD ]
Line_51 $$ if (ch <= 2047) -->Line_52 $$ utfBytes[utfIndex++] = (byte) (0xc0 | (0x1f & (ch >> 6)))[ CD ]
Line_9 $$ int maxSize = 2-->Line_17 $$ utfCount += maxSize = 3[ FD ]
Line_4 $$ if (length == 0) -->Line_6 $$ return[ CD ]
Line_21 $$ byte[] utfBytes = retrieveTemporaryBuffer(utfCount + 2)-->Line_63 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
Line_32 $$ firstIndex = 0-->Line_29 $$ offset -= firstIndex[ FD ]
Line_43 $$ utfIndex = 0-->Line_53 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & ch))[ FD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_4 $$ if (length == 0) [ CD ]
Line_21 $$ byte[] utfBytes = retrieveTemporaryBuffer(utfCount + 2)-->Line_42 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
Line_23 $$ if (utfCount == length) -->Line_25 $$ utfBytes[1] = (byte) utfCount[ CD ]
Line_15 $$ utfCount += 2-->Line_23 $$ if (utfCount == length) [ FD ]
Line_39 $$ while (length > 0) -->Line_61 $$ length -= charRunLength[ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_22 $$ int bufferLength = utfBytes.length[ CD ]
Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) -->Line_31 $$ out.write(utfBytes, 0, runLength)[ CD ]
Line_23 $$ if (utfCount == length) -->Line_36 $$ int offset = 0[ CD ]
Line_26 $$ int firstIndex = 2-->Line_29 $$ offset -= firstIndex[ FD ]
Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) -->Line_30 $$ for (int i = firstIndex; i < runLength; i++) utfBytes[i] = (byte) str.charAt(offset + i)[ CD ]
Line_23 $$ if (utfCount == length) -->Line_37 $$ utfBytes[0] = (byte) (utfCount >> 8)[ CD ]
Line_3 $$ int length = str.length()-->Line_39 $$ while (length > 0) [ FD ]
Line_3 $$ int length = str.length()-->Line_61 $$ length -= charRunLength[ FD ]
Line_23 $$ if (utfCount == length) -->Line_24 $$ utfBytes[0] = (byte) (utfCount >> 8)[ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_63 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
Line_43 $$ utfIndex = 0-->Line_52 $$ utfBytes[utfIndex++] = (byte) (0xc0 | (0x1f & (ch >> 6)))[ FD ]
Line_35 $$ int utfIndex = 2-->Line_53 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & ch))[ FD ]
Line_23 $$ if (utfCount == length) -->Line_63 $$ out.write(utfBytes, 0, utfIndex)[ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_10 $$ for (int i = 0; i < length; i++) [ CD ]
Line_61 $$ length -= charRunLength-->Line_46 $$ charRunLength = length[ FD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_23 $$ if (utfCount == length) [ CD ]
Line_3 $$ int length = str.length()-->Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) [ FD ]
Line_28 $$ int runLength = Math.min(bufferLength - firstIndex, length - offset) + firstIndex-->Line_31 $$ out.write(utfBytes, 0, runLength)[ FD ]
Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) -->Line_60 $$ offset += charRunLength[ FD ]
Line_13 $$ utfCount += 1-->Line_23 $$ if (utfCount == length) [ FD ]
Line_8 $$ int utfCount = 0-->Line_19 $$ if (utfCount > 65535)[ FD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_48 $$ char ch = str.charAt(offset + i)[ FD ]
Line_35 $$ int utfIndex = 2-->Line_63 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
Line_35 $$ int utfIndex = 2-->Line_50 $$ utfBytes[utfIndex++] = (byte) ch[ FD ]
Line_51 $$ if (ch <= 2047) -->Line_56 $$ utfBytes[utfIndex++] = (byte) (0x80 | (0x3f & (ch >> 6)))[ CD ]
Line_2 $$ public static void writeUTF(String str, DataOutput out) throws IOException -->Line_9 $$ int maxSize = 2[ CD ]
Line_29 $$ offset -= firstIndex-->Line_27 $$ for (int offset = 0; offset < length; offset += bufferLength) [ FD ]
Line_43 $$ utfIndex = 0-->Line_63 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
Line_39 $$ while (length > 0) -->Line_40 $$ int charRunLength = (utfBytes.length - utfIndex) / maxSize[ CD ]
Line_13 $$ utfCount += 1-->Line_17 $$ utfCount += maxSize = 3[ FD ]
Line_35 $$ int utfIndex = 2-->Line_42 $$ out.write(utfBytes, 0, utfIndex)[ FD ]
