Line_4 $$ int i = 0-->Line_15 $$ startLine = i[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_32 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_5 $$ int n = text.length()[ CD ]
Line_3 $$ int startLine = 0-->Line_29 $$ if (startLine == text.length()) [ FD ]
Line_3 $$ int startLine = 0-->Line_14 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_3 $$ int startLine = 0-->Line_15 $$ startLine = i[ FD ]
Line_3 $$ int startLine = 0-->Line_23 $$ startLine = i[ FD ]
Line_4 $$ int i = 0-->Line_22 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_4 $$ int i = 0-->Line_32 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_15 $$ startLine = i-->Line_14 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_5 $$ int n = text.length()-->Line_7 $$ while (i < n) [ FD ]
Line_6 $$ ArrayList<String> rc = new ArrayList<String>()-->Line_22 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_15 $$ startLine = i-->Line_22 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_23 $$ startLine = i-->Line_14 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_19 $$ if (i < n && text.charAt(i) == '\n') -->Line_20 $$ i++[ CD ]
Line_3 $$ int startLine = 0-->Line_22 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_11 $$ if (i < n && text.charAt(i) == '\r') -->Line_12 $$ i++[ CD ]
Line_4 $$ int i = 0-->Line_11 $$ if (i < n && text.charAt(i) == '\r') [ FD ]
Line_15 $$ startLine = i-->Line_23 $$ startLine = i[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_8 $$ switch(text.charAt(i)) [ FD ]
Line_3 $$ int startLine = 0-->Line_32 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_11 $$ if (i < n && text.charAt(i) == '\r') [ FD ]
Line_29 $$ if (startLine == text.length()) -->Line_32 $$ rc.add(text.substring(startLine, i))[ CD ]
Line_29 $$ if (startLine == text.length()) -->Line_30 $$ rc.add("")[ CD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_14 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_4 $$ int i = 0-->Line_7 $$ while (i < n) [ FD ]
Line_23 $$ startLine = i-->Line_32 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_4 $$ int i = 0-->Line_10 $$ i++[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_19 $$ if (i < n && text.charAt(i) == '\n') [ FD ]
Line_6 $$ ArrayList<String> rc = new ArrayList<String>()-->Line_30 $$ rc.add("")[ FD ]
Line_4 $$ int i = 0-->Line_14 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_6 $$ ArrayList<String> rc = new ArrayList<String>()[ CD ]
Line_4 $$ int i = 0-->Line_26 $$ i++[ FD ]
Line_6 $$ ArrayList<String> rc = new ArrayList<String>()-->Line_14 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_6 $$ ArrayList<String> rc = new ArrayList<String>()-->Line_32 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_22 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_4 $$ int i = 0-->Line_12 $$ i++[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_5 $$ int n = text.length()[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_4 $$ int i = 0[ CD ]
Line_4 $$ int i = 0-->Line_23 $$ startLine = i[ FD ]
Line_23 $$ startLine = i-->Line_29 $$ if (startLine == text.length()) [ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_29 $$ if (startLine == text.length()) [ CD ]
Line_15 $$ startLine = i-->Line_29 $$ if (startLine == text.length()) [ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_29 $$ if (startLine == text.length()) [ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_34 $$ return rc[ CD ]
Line_23 $$ startLine = i-->Line_22 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_4 $$ int i = 0-->Line_19 $$ if (i < n && text.charAt(i) == '\n') [ FD ]
Line_4 $$ int i = 0-->Line_8 $$ switch(text.charAt(i)) [ FD ]
Line_4 $$ int i = 0-->Line_20 $$ i++[ FD ]
Line_4 $$ int i = 0-->Line_18 $$ i++[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_7 $$ while (i < n) [ CD ]
Line_15 $$ startLine = i-->Line_32 $$ rc.add(text.substring(startLine, i))[ FD ]
Line_2 $$ public static List<String> splitText(String text) -->Line_3 $$ int startLine = 0[ CD ]
