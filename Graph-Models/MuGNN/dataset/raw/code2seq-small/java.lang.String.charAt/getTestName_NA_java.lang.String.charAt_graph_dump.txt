Line_2 $$ protected String getTestName(boolean lowercaseFirstLetter) -->Line_4 $$ assertTrue("Test name should start with 'test': " + name, name.startsWith("test"))[ CD ]
Line_3 $$ String name = getName()-->Line_4 $$ assertTrue("Test name should start with 'test': " + name, name.startsWith("test"))[ FD ]
Line_5 $$ name = name.substring("test".length())-->Line_6 $$ if (!name.isEmpty() && lowercaseFirstLetter && !PlatformTestUtil.isAllUppercaseName(name)) [ FD ]
Line_6 $$ if (!name.isEmpty() && lowercaseFirstLetter && !PlatformTestUtil.isAllUppercaseName(name)) -->Line_7 $$ name = Character.toLowerCase(name.charAt(0)) + name.substring(1)[ CD ]
Line_2 $$ protected String getTestName(boolean lowercaseFirstLetter) -->Line_6 $$ if (!name.isEmpty() && lowercaseFirstLetter && !PlatformTestUtil.isAllUppercaseName(name)) [ CD ]
Line_3 $$ String name = getName()-->Line_5 $$ name = name.substring("test".length())[ FD ]
Line_3 $$ String name = getName()-->Line_7 $$ name = Character.toLowerCase(name.charAt(0)) + name.substring(1)[ FD ]
Line_5 $$ name = name.substring("test".length())-->Line_7 $$ name = Character.toLowerCase(name.charAt(0)) + name.substring(1)[ FD ]
Line_3 $$ String name = getName()-->Line_6 $$ if (!name.isEmpty() && lowercaseFirstLetter && !PlatformTestUtil.isAllUppercaseName(name)) [ FD ]
Line_2 $$ protected String getTestName(boolean lowercaseFirstLetter) -->Line_5 $$ name = name.substring("test".length())[ CD ]
Line_2 $$ protected String getTestName(boolean lowercaseFirstLetter) -->Line_3 $$ String name = getName()[ CD ]
Line_2 $$ protected String getTestName(boolean lowercaseFirstLetter) -->Line_9 $$ return name[ CD ]
