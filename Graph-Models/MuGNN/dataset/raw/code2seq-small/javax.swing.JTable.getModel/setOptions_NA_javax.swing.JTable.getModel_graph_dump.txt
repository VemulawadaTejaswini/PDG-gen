Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_3 $$ if (inputOptions.containsKey(COLON_REPLACEMENT)) [ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_14 $$ myAnyName.setText((String) inputOptions.get(ANY_NAME))[ FD ]
Line_7 $$ if (inputOptions.containsKey(ELEMENT_DEFINE)) -->Line_8 $$ myElementDefine.setText((String) inputOptions.get(ELEMENT_DEFINE))[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_16 $$ myStrictAnyCheckBox.setSelected(inputOptions.get(STRICT_ANY) == Boolean.TRUE)[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_20 $$ myGenerateStartCheckBox.setSelected(inputOptions.get(GENERATE_START) == Boolean.TRUE)[ CD ]
Line_24 $$ final NamespaceMapModel model = (NamespaceMapModel) myNamespaceMap.getModel()-->Line_29 $$ model.addMapping(s.substring(prefix.length()), (String) inputOptions.get(s))[ FD ]
Line_13 $$ if (inputOptions.containsKey(ANY_NAME)) -->Line_14 $$ myAnyName.setText((String) inputOptions.get(ANY_NAME))[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_22 $$ myDefaultNS.setText((String) inputOptions.get(XMLNS))[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_4 $$ myColonReplacement.setText((String) inputOptions.get(COLON_REPLACEMENT))[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_20 $$ myGenerateStartCheckBox.setSelected(inputOptions.get(GENERATE_START) == Boolean.TRUE)[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_21 $$ if (inputOptions.containsKey(XMLNS)) [ CD ]
Line_26 $$ final String prefix = XMLNS + ":"-->Line_28 $$ if (s.startsWith(prefix)) [ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_13 $$ if (inputOptions.containsKey(ANY_NAME)) [ FD ]
Line_17 $$ if (inputOptions.containsKey(ANNOTATION_PREFIX)) -->Line_18 $$ myAnnotationPrefix.setText((String) inputOptions.get(ANNOTATION_PREFIX))[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_26 $$ final String prefix = XMLNS + ":"[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_10 $$ if (inputOptions.containsKey(ATTLIST_DEFINE)) [ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_16 $$ myStrictAnyCheckBox.setSelected(inputOptions.get(STRICT_ANY) == Boolean.TRUE)[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_7 $$ if (inputOptions.containsKey(ELEMENT_DEFINE)) [ CD ]
Line_28 $$ if (s.startsWith(prefix)) -->Line_29 $$ model.addMapping(s.substring(prefix.length()), (String) inputOptions.get(s))[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_29 $$ model.addMapping(s.substring(prefix.length()), (String) inputOptions.get(s))[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_3 $$ if (inputOptions.containsKey(COLON_REPLACEMENT)) [ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_17 $$ if (inputOptions.containsKey(ANNOTATION_PREFIX)) [ CD ]
Line_27 $$ for (String s : set) -->Line_29 $$ model.addMapping(s.substring(prefix.length()), (String) inputOptions.get(s))[ FD ]
Line_26 $$ final String prefix = XMLNS + ":"-->Line_29 $$ model.addMapping(s.substring(prefix.length()), (String) inputOptions.get(s))[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_13 $$ if (inputOptions.containsKey(ANY_NAME)) [ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_18 $$ myAnnotationPrefix.setText((String) inputOptions.get(ANNOTATION_PREFIX))[ FD ]
Line_10 $$ if (inputOptions.containsKey(ATTLIST_DEFINE)) -->Line_11 $$ myAttlistDefine.setText((String) inputOptions.get(ATTLIST_DEFINE))[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_21 $$ if (inputOptions.containsKey(XMLNS)) [ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_10 $$ if (inputOptions.containsKey(ATTLIST_DEFINE)) [ FD ]
Line_27 $$ for (String s : set) -->Line_28 $$ if (s.startsWith(prefix)) [ FD ]
Line_3 $$ if (inputOptions.containsKey(COLON_REPLACEMENT)) -->Line_4 $$ myColonReplacement.setText((String) inputOptions.get(COLON_REPLACEMENT))[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_6 $$ myInlineAttlistCheckBox.setSelected(inputOptions.get(INLINE_ATTLIST) == Boolean.TRUE)[ CD ]
Line_21 $$ if (inputOptions.containsKey(XMLNS)) -->Line_22 $$ myDefaultNS.setText((String) inputOptions.get(XMLNS))[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_17 $$ if (inputOptions.containsKey(ANNOTATION_PREFIX)) [ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_24 $$ final NamespaceMapModel model = (NamespaceMapModel) myNamespaceMap.getModel()[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_25 $$ final Set<String> set = inputOptions.keySet()[ CD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_11 $$ myAttlistDefine.setText((String) inputOptions.get(ATTLIST_DEFINE))[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_25 $$ final Set<String> set = inputOptions.keySet()[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_6 $$ myInlineAttlistCheckBox.setSelected(inputOptions.get(INLINE_ATTLIST) == Boolean.TRUE)[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_8 $$ myElementDefine.setText((String) inputOptions.get(ELEMENT_DEFINE))[ FD ]
Line_2 $$ public void setOptions(Map<String, ?> inputOptions) -->Line_7 $$ if (inputOptions.containsKey(ELEMENT_DEFINE)) [ FD ]
