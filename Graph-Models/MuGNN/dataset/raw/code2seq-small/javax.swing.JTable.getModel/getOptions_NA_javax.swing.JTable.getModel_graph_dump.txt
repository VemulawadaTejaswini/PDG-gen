Line_2 $$ public Map<String, ?> getOptions() -->Line_4 $$ map.put(INLINE_ATTLIST, myInlineAttlistCheckBox.isSelected())[ CD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_8 $$ setText(map, ANY_NAME, myAnyName)[ FD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_5 $$ setText(map, COLON_REPLACEMENT, myColonReplacement)[ CD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_9 $$ if (myStrictAnyCheckBox.isSelected()) [ CD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_7 $$ setText(map, ATTLIST_DEFINE, myAttlistDefine)[ FD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_21 $$ return map[ CD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()[ CD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_15 $$ map.put(XMLNS, myDefaultNS.getText())[ FD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_4 $$ map.put(INLINE_ATTLIST, myInlineAttlistCheckBox.isSelected())[ FD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_19 $$ map.put(XMLNS + ":" + parts[0], parts[1])[ FD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_5 $$ setText(map, COLON_REPLACEMENT, myColonReplacement)[ FD ]
Line_9 $$ if (myStrictAnyCheckBox.isSelected()) -->Line_10 $$ map.put(STRICT_ANY, Boolean.TRUE)[ CD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_12 $$ setText(map, ANNOTATION_PREFIX, myAnnotationPrefix)[ CD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_7 $$ setText(map, ATTLIST_DEFINE, myAttlistDefine)[ CD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_12 $$ setText(map, ANNOTATION_PREFIX, myAnnotationPrefix)[ FD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_13 $$ map.put(GENERATE_START, myGenerateStartCheckBox.isSelected())[ CD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_10 $$ map.put(STRICT_ANY, Boolean.TRUE)[ FD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_17 $$ final List<String[]> data = ((NamespaceMapModel) myNamespaceMap.getModel()).getData()[ CD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_6 $$ setText(map, ELEMENT_DEFINE, myElementDefine)[ CD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_14 $$ if (myDefaultNS.getText().trim().length() > 0) [ CD ]
Line_2 $$ public Map<String, ?> getOptions() -->Line_8 $$ setText(map, ANY_NAME, myAnyName)[ CD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_6 $$ setText(map, ELEMENT_DEFINE, myElementDefine)[ FD ]
Line_3 $$ final HashMap<String, Object> map = new LinkedHashMap<String, Object>()-->Line_13 $$ map.put(GENERATE_START, myGenerateStartCheckBox.isSelected())[ FD ]
Line_14 $$ if (myDefaultNS.getText().trim().length() > 0) -->Line_15 $$ map.put(XMLNS, myDefaultNS.getText())[ CD ]
