Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_9 $$ myComponent.getSliceTextField().setText(chunk.getSlicePresentation())[ FD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_19 $$ if (!inPlace) [ FD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_13 $$ fillColorRange(chunk.getMin(), chunk.getMax())[ FD ]
Line_19 $$ if (!inPlace) -->Line_20 $$ myComponent.getScrollPane().getViewport().setViewPosition(new Point(0, 0))[ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_3 $$ myPagingModel = new AsyncArrayTableModel(Math.min(chunk.getRows(), ROWS_IN_DEFAULT_VIEW), Math.min(chunk.getColumns(), COLUMNS_IN_DEFAULT_VIEW), this)[ FD ]
Line_14 $$ if (!isNumeric()) -->Line_17 $$ myComponent.getColoredCheckbox().setEnabled(true)[ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() [ CD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_25 $$ ((AsyncArrayTableModel) myTable.getModel()).fireTableCellUpdated(0, 0)[ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_5 $$ myDtypeKind = chunk.getType()[ FD ]
Line_14 $$ if (!isNumeric()) -->Line_15 $$ disableColor()[ CD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_11 $$ myDialog.setTitle(getTitlePresentation(chunk.getSlicePresentation()))[ CD ]
Line_19 $$ if (!inPlace) -->Line_21 $$ JBTableWithRowHeaders.RowHeaderTable rowTable = ((JBTableWithRowHeaders) myTable).getRowHeaderTable()[ CD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_19 $$ if (!inPlace) [ CD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_14 $$ if (!isNumeric()) [ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_4 $$ myPagingModel.addToCache(chunk)[ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_4 $$ myPagingModel.addToCache(chunk)[ FD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_13 $$ fillColorRange(chunk.getMin(), chunk.getMax())[ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_5 $$ myDtypeKind = chunk.getType()[ CD ]
Line_21 $$ JBTableWithRowHeaders.RowHeaderTable rowTable = ((JBTableWithRowHeaders) myTable).getRowHeaderTable()-->Line_22 $$ rowTable.setRowShift(0)[ FD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_26 $$ if (myTable.getColumnCount() > 0) [ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_11 $$ myDialog.setTitle(getTitlePresentation(chunk.getSlicePresentation()))[ FD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_24 $$ ((AsyncArrayTableModel) myTable.getModel()).fireTableDataChanged()[ CD ]
Line_26 $$ if (myTable.getColumnCount() > 0) -->Line_27 $$ myTable.setDefaultRenderer(myTable.getColumnClass(0), myTableCellRenderer)[ CD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_8 $$ myTable.setModel(myPagingModel)[ CD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_9 $$ myComponent.getSliceTextField().setText(chunk.getSlicePresentation())[ CD ]
Line_19 $$ if (!inPlace) -->Line_22 $$ rowTable.setRowShift(0)[ CD ]
Line_6 $$ UIUtil.invokeLaterIfNeeded(new Runnable() -->Line_10 $$ myComponent.getFormatTextField().setText(chunk.getFormat())[ CD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_12 $$ myTableCellRenderer = new ArrayTableCellRenderer(Double.MIN_VALUE, Double.MIN_VALUE, chunk.getType())[ FD ]
Line_2 $$ private void initUi(@NotNull final ArrayChunk chunk, final boolean inPlace) -->Line_10 $$ myComponent.getFormatTextField().setText(chunk.getFormat())[ FD ]
