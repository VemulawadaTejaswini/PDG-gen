Line_7 $$ String path = url.getPath()-->Line_18 $$ if (path.endsWith(StringPool.SLASH)) [ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_3 $$ List<URL> urLs = paclPolicy.getURLs()[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_34 $$ _classLoaderPACLPolicies.put(classLoader, paclPolicy)[ CD ]
Line_25 $$ url = new URL("file", "", -1, path + StringPool.SLASH)-->Line_26 $$ urLs.add(url)[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_16 $$ URL rootURL = urlContainer.getResource(StringPool.SLASH)[ CD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_12 $$ _urlPACLPolicies.put(new URLWrapper(url), paclPolicy)[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_17 $$ String path = rootURL.getPath()[ CD ]
Line_18 $$ if (path.endsWith(StringPool.SLASH)) -->Line_19 $$ path = path.substring(0, path.length() - 1)[ CD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_3 $$ List<URL> urLs = paclPolicy.getURLs()[ CD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_15 $$ URLContainer urlContainer = paclPolicy.getURLContainer()[ CD ]
Line_3 $$ List<URL> urLs = paclPolicy.getURLs()-->Line_23 $$ urLs.add(url)[ FD ]
Line_4 $$ if (classLoader instanceof URLClassLoader) -->Line_5 $$ URLClassLoader urlClassLoader = (URLClassLoader) classLoader[ CD ]
Line_6 $$ for (URL url : urlClassLoader.getURLs()) -->Line_28 $$ url = new URL("file", "", -1, path + "/WEB-INF/classes/*")[ FD ]
Line_6 $$ for (URL url : urlClassLoader.getURLs()) -->Line_7 $$ String path = url.getPath()[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_15 $$ URLContainer urlContainer = paclPolicy.getURLContainer()[ FD ]
Line_7 $$ String path = url.getPath()-->Line_19 $$ path = path.substring(0, path.length() - 1)[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_35 $$ refresh()[ CD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_4 $$ if (classLoader instanceof URLClassLoader) [ FD ]
Line_16 $$ URL rootURL = urlContainer.getResource(StringPool.SLASH)-->Line_17 $$ String path = rootURL.getPath()[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_18 $$ if (path.endsWith(StringPool.SLASH)) [ CD ]
Line_3 $$ List<URL> urLs = paclPolicy.getURLs()-->Line_29 $$ urLs.add(url)[ FD ]
Line_25 $$ url = new URL("file", "", -1, path + StringPool.SLASH)-->Line_29 $$ urLs.add(url)[ FD ]
Line_5 $$ URLClassLoader urlClassLoader = (URLClassLoader) classLoader-->Line_6 $$ for (URL url : urlClassLoader.getURLs()) [ FD ]
Line_6 $$ for (URL url : urlClassLoader.getURLs()) -->Line_11 $$ urLs.add(url)[ FD ]
Line_3 $$ List<URL> urLs = paclPolicy.getURLs()-->Line_11 $$ urLs.add(url)[ FD ]
Line_15 $$ URLContainer urlContainer = paclPolicy.getURLContainer()-->Line_16 $$ URL rootURL = urlContainer.getResource(StringPool.SLASH)[ FD ]
Line_6 $$ for (URL url : urlClassLoader.getURLs()) -->Line_23 $$ urLs.add(url)[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_24 $$ _urlPACLPolicies.put(new URLWrapper(url), paclPolicy)[ FD ]
Line_6 $$ for (URL url : urlClassLoader.getURLs()) -->Line_25 $$ url = new URL("file", "", -1, path + StringPool.SLASH)[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_30 $$ _urlPACLPolicies.put(new URLWrapper(url), paclPolicy)[ FD ]
Line_7 $$ String path = url.getPath()-->Line_8 $$ if (path.startsWith(PropsValues.LIFERAY_LIB_GLOBAL_SHARED_DIR)) [ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_34 $$ _classLoaderPACLPolicies.put(classLoader, paclPolicy)[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_4 $$ if (classLoader instanceof URLClassLoader) [ CD ]
Line_6 $$ for (URL url : urlClassLoader.getURLs()) -->Line_29 $$ urLs.add(url)[ FD ]
Line_25 $$ url = new URL("file", "", -1, path + StringPool.SLASH)-->Line_28 $$ url = new URL("file", "", -1, path + "/WEB-INF/classes/*")[ FD ]
Line_6 $$ for (URL url : urlClassLoader.getURLs()) -->Line_26 $$ urLs.add(url)[ FD ]
Line_28 $$ url = new URL("file", "", -1, path + "/WEB-INF/classes/*")-->Line_29 $$ urLs.add(url)[ FD ]
Line_2 $$ public static void register(ClassLoader classLoader, PACLPolicy paclPolicy) -->Line_27 $$ _urlPACLPolicies.put(new URLWrapper(url), paclPolicy)[ FD ]
Line_3 $$ List<URL> urLs = paclPolicy.getURLs()-->Line_26 $$ urLs.add(url)[ FD ]
