Line_18 $$ String fileName = fileList.next().getPath().getName()-->Line_20 $$ expectedFileNames.remove(fileName)[ FD ]
Line_6 $$ HarFileSystem hfs = new HarFileSystem(localFileSystem)-->Line_16 $$ RemoteIterator<LocatedFileStatus> fileList = hfs.listLocatedStatus(path)[ FD ]
Line_17 $$ while (fileList.hasNext()) -->Line_20 $$ expectedFileNames.remove(fileName)[ CD ]
Line_6 $$ HarFileSystem hfs = new HarFileSystem(localFileSystem)-->Line_7 $$ hfs.initialize(uri, new Configuration())[ FD ]
Line_5 $$ URI uri = new URI("har://" + testHarPath)-->Line_7 $$ hfs.initialize(uri, new Configuration())[ FD ]
Line_17 $$ while (fileList.hasNext()) -->Line_18 $$ String fileName = fileList.next().getPath().getName()[ CD ]
Line_16 $$ RemoteIterator<LocatedFileStatus> fileList = hfs.listLocatedStatus(path)-->Line_18 $$ String fileName = fileList.next().getPath().getName()[ FD ]
Line_16 $$ RemoteIterator<LocatedFileStatus> fileList = hfs.listLocatedStatus(path)-->Line_17 $$ while (fileList.hasNext()) [ FD ]
Line_18 $$ String fileName = fileList.next().getPath().getName()-->Line_19 $$ assertTrue(fileName + " not in expected files list", expectedFileNames.contains(fileName))[ FD ]
Line_17 $$ while (fileList.hasNext()) -->Line_19 $$ assertTrue(fileName + " not in expected files list", expectedFileNames.contains(fileName))[ CD ]
