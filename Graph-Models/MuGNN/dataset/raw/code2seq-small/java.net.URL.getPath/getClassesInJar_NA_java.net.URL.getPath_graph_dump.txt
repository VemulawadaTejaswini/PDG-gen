Line_11 $$ if (pu.getAnnotationIndex() != null) -->Line_47 $$ return getCachedClasses(pu, jarToScan, annotationsToLookFor)[ CD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_8 $$ if (pu == null) [ CD ]
Line_30 $$ String className = annotationInstance.target().toString()-->Line_32 $$ JPA_LOGGER.tracef("getClassesInJar found class %s with annotation %s", className, annClass.getName())[ FD ]
Line_13 $$ if (index == null) -->Line_15 $$ return new HashSet<Class<?>>()[ CD ]
Line_12 $$ Index index = getJarFileIndex(jarToScan, pu)-->Line_26 $$ List<AnnotationInstance> classesWithAnnotation = index.getAnnotations(annotation)[ FD ]
Line_25 $$ DotName annotation = DotName.createSimple(annClass.getName())-->Line_26 $$ List<AnnotationInstance> classesWithAnnotation = index.getAnnotations(annotation)[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_6 $$ JPA_LOGGER.tracef("getClassesInJar url=%s annotations=%s", jarToScan.getPath(), annotationsToLookFor)[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_6 $$ JPA_LOGGER.tracef("getClassesInJar url=%s annotations=%s", jarToScan.getPath(), annotationsToLookFor)[ CD ]
Line_33 $$ Class<?> clazz = pu.getNewTempClassLoader().loadClass(className)-->Line_35 $$ classesForAnnotation.add(clazz)[ FD ]
Line_11 $$ if (pu.getAnnotationIndex() != null) -->Line_45 $$ return result[ CD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_3 $$ if (jarToScan == null) [ CD ]
Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()-->Line_33 $$ Class<?> clazz = pu.getNewTempClassLoader().loadClass(className)[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_11 $$ if (pu.getAnnotationIndex() != null) [ CD ]
Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()-->Line_47 $$ return getCachedClasses(pu, jarToScan, annotationsToLookFor)[ FD ]
Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()-->Line_12 $$ Index index = getJarFileIndex(jarToScan, pu)[ FD ]
Line_11 $$ if (pu.getAnnotationIndex() != null) -->Line_17 $$ if (annotationsToLookFor == null) [ CD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_43 $$ cacheClasses(pu, jarToScan, annClass, classesForAnnotation)[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_47 $$ return getCachedClasses(pu, jarToScan, annotationsToLookFor)[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_14 $$ JPA_LOGGER.tracef("No classes to scan for annotations in jar '%s' (jars with classes '%s')", jarToScan, pu.getAnnotationIndex().keySet())[ FD ]
Line_11 $$ if (pu.getAnnotationIndex() != null) -->Line_20 $$ if (annotationsToLookFor.size() == 0) [ CD ]
Line_11 $$ if (pu.getAnnotationIndex() != null) -->Line_23 $$ Set<Class<?>> result = new HashSet<Class<?>>()[ CD ]
Line_33 $$ Class<?> clazz = pu.getNewTempClassLoader().loadClass(className)-->Line_34 $$ result.add(clazz)[ FD ]
Line_30 $$ String className = annotationInstance.target().toString()-->Line_33 $$ Class<?> clazz = pu.getNewTempClassLoader().loadClass(className)[ FD ]
Line_30 $$ String className = annotationInstance.target().toString()-->Line_37 $$ JPA_LOGGER.cannotLoadEntityClass(e, className)[ FD ]
Line_24 $$ for (Class<? extends Annotation> annClass : annotationsToLookFor) -->Line_32 $$ JPA_LOGGER.tracef("getClassesInJar found class %s with annotation %s", className, annClass.getName())[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()[ CD ]
Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()-->Line_14 $$ JPA_LOGGER.tracef("No classes to scan for annotations in jar '%s' (jars with classes '%s')", jarToScan, pu.getAnnotationIndex().keySet())[ FD ]
Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()-->Line_43 $$ cacheClasses(pu, jarToScan, annClass, classesForAnnotation)[ FD ]
Line_11 $$ if (pu.getAnnotationIndex() != null) -->Line_12 $$ Index index = getJarFileIndex(jarToScan, pu)[ CD ]
Line_24 $$ for (Class<? extends Annotation> annClass : annotationsToLookFor) -->Line_43 $$ cacheClasses(pu, jarToScan, annClass, classesForAnnotation)[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_20 $$ if (annotationsToLookFor.size() == 0) [ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_12 $$ Index index = getJarFileIndex(jarToScan, pu)[ FD ]
Line_11 $$ if (pu.getAnnotationIndex() != null) -->Line_13 $$ if (index == null) [ CD ]
Line_24 $$ for (Class<? extends Annotation> annClass : annotationsToLookFor) -->Line_25 $$ DotName annotation = DotName.createSimple(annClass.getName())[ FD ]
Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()-->Line_11 $$ if (pu.getAnnotationIndex() != null) [ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_17 $$ if (annotationsToLookFor == null) [ FD ]
Line_29 $$ if (annotationInstance.target() instanceof ClassInfo) -->Line_30 $$ String className = annotationInstance.target().toString()[ CD ]
Line_27 $$ Set<Class<?>> classesForAnnotation = new HashSet<Class<?>>()-->Line_43 $$ cacheClasses(pu, jarToScan, annClass, classesForAnnotation)[ FD ]
Line_2 $$ public Set<Class<?>> getClassesInJar(URL jarToScan, Set<Class<? extends Annotation>> annotationsToLookFor) -->Line_3 $$ if (jarToScan == null) [ FD ]
Line_27 $$ Set<Class<?>> classesForAnnotation = new HashSet<Class<?>>()-->Line_35 $$ classesForAnnotation.add(clazz)[ FD ]
Line_13 $$ if (index == null) -->Line_14 $$ JPA_LOGGER.tracef("No classes to scan for annotations in jar '%s' (jars with classes '%s')", jarToScan, pu.getAnnotationIndex().keySet())[ CD ]
Line_7 $$ PersistenceUnitMetadata pu = PERSISTENCE_UNIT_METADATA_TLS.get()-->Line_8 $$ if (pu == null) [ FD ]
Line_28 $$ for (AnnotationInstance annotationInstance : classesWithAnnotation) -->Line_30 $$ String className = annotationInstance.target().toString()[ FD ]
Line_23 $$ Set<Class<?>> result = new HashSet<Class<?>>()-->Line_34 $$ result.add(clazz)[ FD ]
Line_30 $$ String className = annotationInstance.target().toString()-->Line_39 $$ JPA_LOGGER.cannotLoadEntityClass(e, className)[ FD ]
Line_28 $$ for (AnnotationInstance annotationInstance : classesWithAnnotation) -->Line_29 $$ if (annotationInstance.target() instanceof ClassInfo) [ FD ]
Line_12 $$ Index index = getJarFileIndex(jarToScan, pu)-->Line_13 $$ if (index == null) [ FD ]
