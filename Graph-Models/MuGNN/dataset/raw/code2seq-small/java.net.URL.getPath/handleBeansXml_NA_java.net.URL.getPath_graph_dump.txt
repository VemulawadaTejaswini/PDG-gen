Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_23 $$ handle(urlPath, discoveredClasses)[ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_4 $$ String urlType = "file"[ CD ]
Line_14 $$ File dirOrArchive = new File(urlPath)-->Line_16 $$ urlPath = dirOrArchive.getParent()[ FD ]
Line_4 $$ String urlType = "file"-->Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) [ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_34 $$ WeldLogger.DEPLOYMENT_LOGGER.doNotUnderstandProtocol(url)[ FD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_11 $$ if (urlPath.indexOf('!') > 0) [ FD ]
Line_16 $$ urlPath = dirOrArchive.getParent()-->Line_19 $$ urlPath = URLDecoder.decode(urlPath, "UTF-8")[ FD ]
Line_5 $$ int colonIndex = urlPath.indexOf(":")-->Line_6 $$ if (colonIndex != -1) [ FD ]
Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) -->Line_23 $$ handle(urlPath, discoveredClasses)[ CD ]
Line_25 $$ if ("vfs".equals(urlType)) -->Line_35 $$ return false[ CD ]
Line_10 $$ urlPath = url.getPath()-->Line_16 $$ urlPath = dirOrArchive.getParent()[ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_3 $$ String urlPath = url.toExternalForm()[ CD ]
Line_11 $$ if (urlPath.indexOf('!') > 0) -->Line_16 $$ urlPath = dirOrArchive.getParent()[ CD ]
Line_7 $$ urlType = urlPath.substring(0, colonIndex)-->Line_25 $$ if ("vfs".equals(urlType)) [ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_6 $$ if (colonIndex != -1) [ CD ]
Line_11 $$ if (urlPath.indexOf('!') > 0) -->Line_14 $$ File dirOrArchive = new File(urlPath)[ CD ]
Line_6 $$ if (colonIndex != -1) -->Line_7 $$ urlType = urlPath.substring(0, colonIndex)[ CD ]
Line_14 $$ File dirOrArchive = new File(urlPath)-->Line_15 $$ dirOrArchive = dirOrArchive.getParentFile()[ FD ]
Line_10 $$ urlPath = url.getPath()-->Line_11 $$ if (urlPath.indexOf('!') > 0) [ FD ]
Line_15 $$ dirOrArchive = dirOrArchive.getParentFile()-->Line_16 $$ urlPath = dirOrArchive.getParent()[ FD ]
Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) -->Line_10 $$ urlPath = url.getPath()[ CD ]
Line_12 $$ urlPath = urlPath.substring(0, urlPath.indexOf('!'))-->Line_16 $$ urlPath = dirOrArchive.getParent()[ FD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_12 $$ urlPath = urlPath.substring(0, urlPath.indexOf('!'))[ FD ]
Line_12 $$ urlPath = urlPath.substring(0, urlPath.indexOf('!'))-->Line_19 $$ urlPath = URLDecoder.decode(urlPath, "UTF-8")[ FD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_10 $$ urlPath = url.getPath()[ FD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_16 $$ urlPath = dirOrArchive.getParent()[ FD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_5 $$ int colonIndex = urlPath.indexOf(":")[ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_28 $$ handle(vfsRoot, discoveredClasses)[ FD ]
Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) -->Line_25 $$ if ("vfs".equals(urlType)) [ CD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_27 $$ VirtualFile vfsRoot = VFS.getChild(url).getParent().getParent()[ FD ]
Line_7 $$ urlType = urlPath.substring(0, colonIndex)-->Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) [ FD ]
Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) -->Line_11 $$ if (urlPath.indexOf('!') > 0) [ CD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_7 $$ urlType = urlPath.substring(0, colonIndex)[ FD ]
Line_10 $$ urlPath = url.getPath()-->Line_19 $$ urlPath = URLDecoder.decode(urlPath, "UTF-8")[ FD ]
Line_25 $$ if ("vfs".equals(urlType)) -->Line_34 $$ WeldLogger.DEPLOYMENT_LOGGER.doNotUnderstandProtocol(url)[ CD ]
Line_4 $$ String urlType = "file"-->Line_25 $$ if ("vfs".equals(urlType)) [ FD ]
Line_12 $$ urlPath = urlPath.substring(0, urlPath.indexOf('!'))-->Line_23 $$ handle(urlPath, discoveredClasses)[ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_3 $$ String urlPath = url.toExternalForm()[ FD ]
Line_19 $$ urlPath = URLDecoder.decode(urlPath, "UTF-8")-->Line_23 $$ handle(urlPath, discoveredClasses)[ FD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_23 $$ handle(urlPath, discoveredClasses)[ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_10 $$ urlPath = url.getPath()[ FD ]
Line_4 $$ String urlType = "file"-->Line_7 $$ urlType = urlPath.substring(0, colonIndex)[ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_5 $$ int colonIndex = urlPath.indexOf(":")[ CD ]
Line_10 $$ urlPath = url.getPath()-->Line_12 $$ urlPath = urlPath.substring(0, urlPath.indexOf('!'))[ FD ]
Line_5 $$ int colonIndex = urlPath.indexOf(":")-->Line_7 $$ urlType = urlPath.substring(0, colonIndex)[ FD ]
Line_16 $$ urlPath = dirOrArchive.getParent()-->Line_23 $$ handle(urlPath, discoveredClasses)[ FD ]
Line_10 $$ urlPath = url.getPath()-->Line_23 $$ handle(urlPath, discoveredClasses)[ FD ]
Line_27 $$ VirtualFile vfsRoot = VFS.getChild(url).getParent().getParent()-->Line_28 $$ handle(vfsRoot, discoveredClasses)[ FD ]
Line_11 $$ if (urlPath.indexOf('!') > 0) -->Line_12 $$ urlPath = urlPath.substring(0, urlPath.indexOf('!'))[ CD ]
Line_11 $$ if (urlPath.indexOf('!') > 0) -->Line_15 $$ dirOrArchive = dirOrArchive.getParentFile()[ CD ]
Line_3 $$ String urlPath = url.toExternalForm()-->Line_19 $$ urlPath = URLDecoder.decode(urlPath, "UTF-8")[ FD ]
Line_2 $$ public boolean handleBeansXml(final URL url, final List<String> discoveredClasses) -->Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) [ CD ]
Line_9 $$ if ("file".equals(urlType) || "jar".equals(urlType)) -->Line_24 $$ return true[ CD ]
