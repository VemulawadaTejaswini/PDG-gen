Line_5 $$ URL url = clazz.getResource("/org/apache/jasper/JasperException.class")-->Line_6 $$ if (url == null) [ FD ]
Line_30 $$ Attributes.Name bundleVersionAttributesName = new Attributes.Name("Bundle-Version")-->Line_31 $$ if (attributes.containsKey(bundleVersionAttributesName)) [ FD ]
Line_11 $$ if (pos == -1) -->Line_12 $$ return[ CD ]
Line_10 $$ int pos = path.indexOf(CharPool.EXCLAMATION)-->Line_11 $$ if (pos == -1) [ FD ]
Line_17 $$ Attributes attributes = manifest.getMainAttributes()-->Line_25 $$ _jasperVersion = GetterUtil.getString(attributes.get(Attributes.Name.IMPLEMENTATION_VERSION))[ FD ]
Line_10 $$ int pos = path.indexOf(CharPool.EXCLAMATION)-->Line_14 $$ URI jarFileURI = new URI(path.substring(0, pos))[ FD ]
Line_9 $$ String path = url.getPath()-->Line_10 $$ int pos = path.indexOf(CharPool.EXCLAMATION)[ FD ]
Line_6 $$ if (url == null) -->Line_7 $$ return[ CD ]
Line_16 $$ Manifest manifest = jarFile.getManifest()-->Line_17 $$ Attributes attributes = manifest.getMainAttributes()[ FD ]
Line_17 $$ Attributes attributes = manifest.getMainAttributes()-->Line_24 $$ if (attributes.containsKey(Attributes.Name.IMPLEMENTATION_VERSION)) [ FD ]
Line_4 $$ Class<?> clazz = getClass()-->Line_5 $$ URL url = clazz.getResource("/org/apache/jasper/JasperException.class")[ FD ]
Line_5 $$ URL url = clazz.getResource("/org/apache/jasper/JasperException.class")-->Line_9 $$ String path = url.getPath()[ FD ]
Line_20 $$ if (_isValidJasperVersion(_jasperVersion)) -->Line_21 $$ return[ CD ]
Line_26 $$ if (_isValidJasperVersion(_jasperVersion)) -->Line_27 $$ return[ CD ]
Line_17 $$ Attributes attributes = manifest.getMainAttributes()-->Line_31 $$ if (attributes.containsKey(bundleVersionAttributesName)) [ FD ]
Line_15 $$ JarFile jarFile = new JarFile(new File(jarFileURI))-->Line_16 $$ Manifest manifest = jarFile.getManifest()[ FD ]
Line_18 $$ if (attributes.containsKey(Attributes.Name.SPECIFICATION_VERSION)) -->Line_19 $$ _jasperVersion = GetterUtil.getString(attributes.getValue(Attributes.Name.SPECIFICATION_VERSION))[ CD ]
Line_17 $$ Attributes attributes = manifest.getMainAttributes()-->Line_32 $$ _jasperVersion = GetterUtil.getString(attributes.get(bundleVersionAttributesName))[ FD ]
Line_24 $$ if (attributes.containsKey(Attributes.Name.IMPLEMENTATION_VERSION)) -->Line_26 $$ if (_isValidJasperVersion(_jasperVersion)) [ CD ]
Line_33 $$ if (_isValidJasperVersion(_jasperVersion)) -->Line_34 $$ return[ CD ]
Line_18 $$ if (attributes.containsKey(Attributes.Name.SPECIFICATION_VERSION)) -->Line_20 $$ if (_isValidJasperVersion(_jasperVersion)) [ CD ]
Line_9 $$ String path = url.getPath()-->Line_14 $$ URI jarFileURI = new URI(path.substring(0, pos))[ FD ]
Line_31 $$ if (attributes.containsKey(bundleVersionAttributesName)) -->Line_33 $$ if (_isValidJasperVersion(_jasperVersion)) [ CD ]
Line_17 $$ Attributes attributes = manifest.getMainAttributes()-->Line_19 $$ _jasperVersion = GetterUtil.getString(attributes.getValue(Attributes.Name.SPECIFICATION_VERSION))[ FD ]
Line_24 $$ if (attributes.containsKey(Attributes.Name.IMPLEMENTATION_VERSION)) -->Line_25 $$ _jasperVersion = GetterUtil.getString(attributes.get(Attributes.Name.IMPLEMENTATION_VERSION))[ CD ]
Line_31 $$ if (attributes.containsKey(bundleVersionAttributesName)) -->Line_32 $$ _jasperVersion = GetterUtil.getString(attributes.get(bundleVersionAttributesName))[ CD ]
Line_30 $$ Attributes.Name bundleVersionAttributesName = new Attributes.Name("Bundle-Version")-->Line_32 $$ _jasperVersion = GetterUtil.getString(attributes.get(bundleVersionAttributesName))[ FD ]
Line_17 $$ Attributes attributes = manifest.getMainAttributes()-->Line_18 $$ if (attributes.containsKey(Attributes.Name.SPECIFICATION_VERSION)) [ FD ]
