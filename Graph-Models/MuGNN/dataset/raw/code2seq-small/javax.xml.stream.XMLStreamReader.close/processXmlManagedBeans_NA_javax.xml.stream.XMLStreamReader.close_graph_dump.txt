Line_7 $$ for (final VirtualFile facesConfig : getConfigurationFiles(deploymentUnit)) -->Line_10 $$ is = facesConfig.openStream()[ FD ]
Line_11 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_12 $$ inputFactory.setXMLResolver(NoopXMLResolver.create())[ FD ]
Line_42 $$ if (className != null) -->Line_43 $$ managedBeanClasses.add(className.toString().trim())[ CD ]
Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_21 $$ parser.close()[ FD ]
Line_36 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_42 $$ if (className != null) [ CD ]
Line_32 $$ managedBeanClass = true-->Line_38 $$ managedBeanClass = false[ FD ]
Line_54 $$ if (is != null) -->Line_55 $$ is.close()[ CD ]
Line_24 $$ if (event == XMLStreamConstants.START_ELEMENT) -->Line_36 $$ if (event == XMLStreamConstants.END_ELEMENT) [ CD ]
Line_17 $$ boolean managedBeanClass = false-->Line_32 $$ managedBeanClass = true[ FD ]
Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_19 $$ int event = parser.next()[ FD ]
Line_14 $$ StringBuilder className = null-->Line_42 $$ if (className != null) [ FD ]
Line_15 $$ int indent = 0-->Line_25 $$ indent++[ FD ]
Line_15 $$ int indent = 0-->Line_39 $$ if (indent == 1) [ FD ]
Line_18 $$ while (true) -->Line_20 $$ if (event == XMLStreamConstants.END_DOCUMENT) [ CD ]
Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_27 $$ if (parser.getLocalName().equals(MANAGED_BEAN)) [ FD ]
Line_36 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_39 $$ if (indent == 1) [ CD ]
Line_42 $$ if (className != null) -->Line_44 $$ className = null[ CD ]
Line_33 $$ className = new StringBuilder()-->Line_47 $$ className.append(parser.getText())[ FD ]
Line_33 $$ className = new StringBuilder()-->Line_44 $$ className = null[ FD ]
Line_36 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_38 $$ managedBeanClass = false[ CD ]
Line_8 $$ InputStream is = null-->Line_55 $$ is.close()[ FD ]
Line_33 $$ className = new StringBuilder()-->Line_43 $$ managedBeanClasses.add(className.toString().trim())[ FD ]
Line_38 $$ managedBeanClass = false-->Line_46 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ FD ]
Line_36 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_46 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ CD ]
Line_17 $$ boolean managedBeanClass = false-->Line_38 $$ managedBeanClass = false[ FD ]
Line_39 $$ if (indent == 1) -->Line_40 $$ managedBean = false[ CD ]
Line_44 $$ className = null-->Line_47 $$ className.append(parser.getText())[ FD ]
Line_19 $$ int event = parser.next()-->Line_20 $$ if (event == XMLStreamConstants.END_DOCUMENT) [ FD ]
Line_10 $$ is = facesConfig.openStream()-->Line_55 $$ is.close()[ FD ]
Line_33 $$ className = new StringBuilder()-->Line_42 $$ if (className != null) [ FD ]
Line_14 $$ StringBuilder className = null-->Line_44 $$ className = null[ FD ]
Line_28 $$ managedBean = true-->Line_30 $$ if (indent == 3 && managedBean) [ FD ]
Line_16 $$ boolean managedBean = false-->Line_30 $$ if (indent == 3 && managedBean) [ FD ]
Line_44 $$ className = null-->Line_42 $$ if (className != null) [ FD ]
Line_20 $$ if (event == XMLStreamConstants.END_DOCUMENT) -->Line_21 $$ parser.close()[ CD ]
Line_31 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) -->Line_33 $$ className = new StringBuilder()[ CD ]
Line_36 $$ if (event == XMLStreamConstants.END_ELEMENT) -->Line_37 $$ indent--[ CD ]
Line_18 $$ while (true) -->Line_24 $$ if (event == XMLStreamConstants.START_ELEMENT) [ CD ]
Line_30 $$ if (indent == 3 && managedBean) -->Line_31 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) [ CD ]
Line_16 $$ boolean managedBean = false-->Line_40 $$ managedBean = false[ FD ]
Line_8 $$ InputStream is = null-->Line_10 $$ is = facesConfig.openStream()[ FD ]
Line_10 $$ is = facesConfig.openStream()-->Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)[ FD ]
Line_16 $$ boolean managedBean = false-->Line_28 $$ managedBean = true[ FD ]
Line_44 $$ className = null-->Line_43 $$ managedBeanClasses.add(className.toString().trim())[ FD ]
Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_47 $$ className.append(parser.getText())[ FD ]
Line_8 $$ InputStream is = null-->Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)[ FD ]
Line_18 $$ while (true) -->Line_19 $$ int event = parser.next()[ CD ]
Line_19 $$ int event = parser.next()-->Line_24 $$ if (event == XMLStreamConstants.START_ELEMENT) [ FD ]
Line_27 $$ if (parser.getLocalName().equals(MANAGED_BEAN)) -->Line_28 $$ managedBean = true[ CD ]
Line_26 $$ if (indent == 2) -->Line_30 $$ if (indent == 3 && managedBean) [ CD ]
Line_14 $$ StringBuilder className = null-->Line_43 $$ managedBeanClasses.add(className.toString().trim())[ FD ]
Line_19 $$ int event = parser.next()-->Line_36 $$ if (event == XMLStreamConstants.END_ELEMENT) [ FD ]
Line_17 $$ boolean managedBeanClass = false-->Line_46 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ FD ]
Line_46 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) -->Line_47 $$ className.append(parser.getText())[ CD ]
Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)-->Line_31 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) [ FD ]
Line_32 $$ managedBeanClass = true-->Line_46 $$ if (managedBeanClass && event == XMLStreamConstants.CHARACTERS) [ FD ]
Line_28 $$ managedBean = true-->Line_40 $$ managedBean = false[ FD ]
Line_24 $$ if (event == XMLStreamConstants.START_ELEMENT) -->Line_26 $$ if (indent == 2) [ CD ]
Line_24 $$ if (event == XMLStreamConstants.START_ELEMENT) -->Line_25 $$ indent++[ CD ]
Line_15 $$ int indent = 0-->Line_26 $$ if (indent == 2) [ FD ]
Line_26 $$ if (indent == 2) -->Line_27 $$ if (parser.getLocalName().equals(MANAGED_BEAN)) [ CD ]
Line_31 $$ if (parser.getLocalName().equals(MANAGED_BEAN_CLASS)) -->Line_32 $$ managedBeanClass = true[ CD ]
Line_14 $$ StringBuilder className = null-->Line_47 $$ className.append(parser.getText())[ FD ]
Line_14 $$ StringBuilder className = null-->Line_33 $$ className = new StringBuilder()[ FD ]
Line_15 $$ int indent = 0-->Line_37 $$ indent--[ FD ]
Line_7 $$ for (final VirtualFile facesConfig : getConfigurationFiles(deploymentUnit)) -->Line_51 $$ JSFLogger.ROOT_LOGGER.managedBeansConfigParseFailed(facesConfig)[ FD ]
Line_8 $$ InputStream is = null-->Line_54 $$ if (is != null) [ FD ]
Line_10 $$ is = facesConfig.openStream()-->Line_54 $$ if (is != null) [ FD ]
Line_40 $$ managedBean = false-->Line_30 $$ if (indent == 3 && managedBean) [ FD ]
Line_11 $$ final XMLInputFactory inputFactory = XMLInputFactory.newInstance()-->Line_13 $$ XMLStreamReader parser = inputFactory.createXMLStreamReader(is)[ FD ]
