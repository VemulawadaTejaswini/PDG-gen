Line_7 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_9 $$ streamReader.nextTag()[ FD ]
Line_7 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_8 $$ assertTrue(streamReader.hasNext())[ FD ]
Line_6 $$ StAXSource result = (StAXSource) converter.read(StAXSource.class, inputMessage)-->Line_7 $$ XMLStreamReader streamReader = result.getXMLStreamReader()[ FD ]
Line_7 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_10 $$ String s = streamReader.getLocalName()[ FD ]
Line_10 $$ String s = streamReader.getLocalName()-->Line_12 $$ s = streamReader.getElementText()[ FD ]
Line_7 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_12 $$ s = streamReader.getElementText()[ FD ]
Line_12 $$ s = streamReader.getElementText()-->Line_13 $$ assertEquals("Hello World", s)[ FD ]
Line_10 $$ String s = streamReader.getLocalName()-->Line_11 $$ assertEquals("root", s)[ FD ]
Line_4 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))-->Line_5 $$ inputMessage.getHeaders().setContentType(new MediaType("application", "xml"))[ FD ]
Line_7 $$ XMLStreamReader streamReader = result.getXMLStreamReader()-->Line_14 $$ streamReader.close()[ FD ]
Line_4 $$ MockHttpInputMessage inputMessage = new MockHttpInputMessage(BODY.getBytes("UTF-8"))-->Line_6 $$ StAXSource result = (StAXSource) converter.read(StAXSource.class, inputMessage)[ FD ]
Line_10 $$ String s = streamReader.getLocalName()-->Line_13 $$ assertEquals("Hello World", s)[ FD ]
