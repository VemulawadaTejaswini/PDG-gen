Line_9 $$ while (true) -->Line_10 $$ int b = bin_.read()[ CD ]
Line_22 $$ if (outBufOrNull != null) -->Line_24 $$ outBufOrNull.write(c)[ CD ]
Line_4 $$ int m = 0-->Line_27 $$ m = 0[ FD ]
Line_14 $$ if (c == cpat[m]) -->Line_27 $$ m = 0[ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_8 $$ bin_.mark(LL)[ CD ]
Line_14 $$ if (c == cpat[m]) -->Line_22 $$ if (outBufOrNull != null) [ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_4 $$ int m = 0[ CD ]
Line_9 $$ while (true) -->Line_14 $$ if (c == cpat[m]) [ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_24 $$ outBufOrNull.write(c)[ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_7 $$ int LL = 120000 * 10[ CD ]
Line_4 $$ int m = 0-->Line_16 $$ if (m == msup) [ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_3 $$ byte[] cpat = textPat.getBytes("UTF-8")[ FD ]
Line_30 $$ if (!includePat && match) -->Line_32 $$ if (outBufOrNull != null) [ CD ]
Line_16 $$ if (m == msup) -->Line_17 $$ match = true[ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_5 $$ boolean match = false[ CD ]
Line_4 $$ int m = 0-->Line_15 $$ m++[ FD ]
Line_10 $$ int b = bin_.read()-->Line_11 $$ if (b == -1)[ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_36 $$ return match[ CD ]
Line_7 $$ int LL = 120000 * 10-->Line_21 $$ bin_.mark(LL)[ FD ]
Line_14 $$ if (c == cpat[m]) -->Line_21 $$ bin_.mark(LL)[ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_22 $$ if (outBufOrNull != null) [ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_9 $$ while (true) [ CD ]
Line_6 $$ int msup = cpat.length-->Line_16 $$ if (m == msup) [ FD ]
Line_27 $$ m = 0-->Line_16 $$ if (m == msup) [ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_33 $$ outBufOrNull.write(cpat)[ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_3 $$ byte[] cpat = textPat.getBytes("UTF-8")[ CD ]
Line_5 $$ boolean match = false-->Line_30 $$ if (!includePat && match) [ FD ]
Line_14 $$ if (c == cpat[m]) -->Line_15 $$ m++[ CD ]
Line_7 $$ int LL = 120000 * 10-->Line_8 $$ bin_.mark(LL)[ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_23 $$ outBufOrNull.write(cpat, 0, m)[ FD ]
Line_17 $$ match = true-->Line_30 $$ if (!includePat && match) [ FD ]
Line_9 $$ while (true) -->Line_13 $$ byte c = (byte) b[ CD ]
Line_14 $$ if (c == cpat[m]) -->Line_16 $$ if (m == msup) [ CD ]
Line_13 $$ byte c = (byte) b-->Line_14 $$ if (c == cpat[m]) [ FD ]
Line_22 $$ if (outBufOrNull != null) -->Line_23 $$ outBufOrNull.write(cpat, 0, m)[ CD ]
Line_3 $$ byte[] cpat = textPat.getBytes("UTF-8")-->Line_33 $$ outBufOrNull.write(cpat)[ FD ]
Line_32 $$ if (outBufOrNull != null) -->Line_33 $$ outBufOrNull.write(cpat)[ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_6 $$ int msup = cpat.length[ CD ]
Line_4 $$ int m = 0-->Line_23 $$ outBufOrNull.write(cpat, 0, m)[ FD ]
Line_27 $$ m = 0-->Line_23 $$ outBufOrNull.write(cpat, 0, m)[ FD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_30 $$ if (!includePat && match) [ FD ]
Line_13 $$ byte c = (byte) b-->Line_24 $$ outBufOrNull.write(c)[ FD ]
Line_5 $$ boolean match = false-->Line_17 $$ match = true[ FD ]
Line_3 $$ byte[] cpat = textPat.getBytes("UTF-8")-->Line_23 $$ outBufOrNull.write(cpat, 0, m)[ FD ]
Line_27 $$ m = 0-->Line_15 $$ m++[ FD ]
Line_30 $$ if (!includePat && match) -->Line_31 $$ bin_.reset()[ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_30 $$ if (!includePat && match) [ CD ]
Line_2 $$ boolean fastReadUntilMatch(String textPat, boolean includePat, DataOutputBuffer outBufOrNull) throws IOException -->Line_32 $$ if (outBufOrNull != null) [ FD ]
Line_9 $$ while (true) -->Line_11 $$ if (b == -1)[ CD ]
