Line_13 $$ boolean atLeastOneCharWasChopped = false-->Line_17 $$ atLeastOneCharWasChopped = true[ FD ]
Line_12 $$ while (true) -->Line_13 $$ boolean atLeastOneCharWasChopped = false[ CD ]
Line_15 $$ if (sb.charAt(sb.length() - 1) == chars[i]) -->Line_17 $$ atLeastOneCharWasChopped = true[ CD ]
Line_11 $$ StringBuilder sb = new StringBuilder(source)-->Line_16 $$ sb.deleteCharAt(sb.length() - 1)[ FD ]
Line_15 $$ if (sb.charAt(sb.length() - 1) == chars[i]) -->Line_16 $$ sb.deleteCharAt(sb.length() - 1)[ CD ]
Line_13 $$ boolean atLeastOneCharWasChopped = false-->Line_20 $$ if (!atLeastOneCharWasChopped) [ FD ]
Line_11 $$ StringBuilder sb = new StringBuilder(source)-->Line_15 $$ if (sb.charAt(sb.length() - 1) == chars[i]) [ FD ]
Line_14 $$ for (int i = 0; i < chars.length && sb.length() > 0; i++) -->Line_15 $$ if (sb.charAt(sb.length() - 1) == chars[i]) [ CD ]
Line_12 $$ while (true) -->Line_14 $$ for (int i = 0; i < chars.length && sb.length() > 0; i++) [ CD ]
Line_11 $$ StringBuilder sb = new StringBuilder(source)-->Line_24 $$ return sb.toString()[ FD ]
Line_17 $$ atLeastOneCharWasChopped = true-->Line_20 $$ if (!atLeastOneCharWasChopped) [ FD ]
Line_12 $$ while (true) -->Line_20 $$ if (!atLeastOneCharWasChopped) [ CD ]
Line_11 $$ StringBuilder sb = new StringBuilder(source)-->Line_14 $$ for (int i = 0; i < chars.length && sb.length() > 0; i++) [ FD ]
