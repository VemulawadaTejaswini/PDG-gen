Line_5 $$ if (result.charAt(index) == ';' && (match == null || (result.charAt(index - 1) == '}' && !(match.getMatch() instanceof PsiDeclarationStatement) && !(match.getMatch() instanceof PsiNewExpression)) || (!match.isMultipleMatch() && match.getMatch() instanceof PsiComment) || (match.isMultipleMatch() && match.getAllSons().get(match.getAllSons().size() - 1).getMatch() instanceof PsiComment))) -->Line_10 $$ result.deleteCharAt(index)[ CD ]
Line_2 $$ private static int removeExtraSemicolon(ParameterInfo info, int offset, StringBuilder result, MatchResult match) -->Line_3 $$ if (info.isStatementContext()) [ CD ]
Line_2 $$ private static int removeExtraSemicolon(ParameterInfo info, int offset, StringBuilder result, MatchResult match) -->Line_3 $$ if (info.isStatementContext()) [ FD ]
Line_3 $$ if (info.isStatementContext()) -->Line_4 $$ int index = offset + info.getStartIndex()[ CD ]
Line_2 $$ private static int removeExtraSemicolon(ParameterInfo info, int offset, StringBuilder result, MatchResult match) -->Line_4 $$ int index = offset + info.getStartIndex()[ FD ]
Line_3 $$ if (info.isStatementContext()) -->Line_5 $$ if (result.charAt(index) == ';' && (match == null || (result.charAt(index - 1) == '}' && !(match.getMatch() instanceof PsiDeclarationStatement) && !(match.getMatch() instanceof PsiNewExpression)) || (!match.isMultipleMatch() && match.getMatch() instanceof PsiComment) || (match.isMultipleMatch() && match.getAllSons().get(match.getAllSons().size() - 1).getMatch() instanceof PsiComment))) [ CD ]
Line_4 $$ int index = offset + info.getStartIndex()-->Line_5 $$ if (result.charAt(index) == ';' && (match == null || (result.charAt(index - 1) == '}' && !(match.getMatch() instanceof PsiDeclarationStatement) && !(match.getMatch() instanceof PsiNewExpression)) || (!match.isMultipleMatch() && match.getMatch() instanceof PsiComment) || (match.isMultipleMatch() && match.getAllSons().get(match.getAllSons().size() - 1).getMatch() instanceof PsiComment))) [ FD ]
Line_4 $$ int index = offset + info.getStartIndex()-->Line_10 $$ result.deleteCharAt(index)[ FD ]
Line_5 $$ if (result.charAt(index) == ';' && (match == null || (result.charAt(index - 1) == '}' && !(match.getMatch() instanceof PsiDeclarationStatement) && !(match.getMatch() instanceof PsiNewExpression)) || (!match.isMultipleMatch() && match.getMatch() instanceof PsiComment) || (match.isMultipleMatch() && match.getAllSons().get(match.getAllSons().size() - 1).getMatch() instanceof PsiComment))) -->Line_11 $$ --offset[ CD ]
Line_2 $$ private static int removeExtraSemicolon(ParameterInfo info, int offset, StringBuilder result, MatchResult match) -->Line_11 $$ --offset[ FD ]
Line_2 $$ private static int removeExtraSemicolon(ParameterInfo info, int offset, StringBuilder result, MatchResult match) -->Line_14 $$ return offset[ CD ]
Line_2 $$ private static int removeExtraSemicolon(ParameterInfo info, int offset, StringBuilder result, MatchResult match) -->Line_10 $$ result.deleteCharAt(index)[ FD ]
Line_2 $$ private static int removeExtraSemicolon(ParameterInfo info, int offset, StringBuilder result, MatchResult match) -->Line_5 $$ if (result.charAt(index) == ';' && (match == null || (result.charAt(index - 1) == '}' && !(match.getMatch() instanceof PsiDeclarationStatement) && !(match.getMatch() instanceof PsiNewExpression)) || (!match.isMultipleMatch() && match.getMatch() instanceof PsiComment) || (match.isMultipleMatch() && match.getAllSons().get(match.getAllSons().size() - 1).getMatch() instanceof PsiComment))) [ FD ]
