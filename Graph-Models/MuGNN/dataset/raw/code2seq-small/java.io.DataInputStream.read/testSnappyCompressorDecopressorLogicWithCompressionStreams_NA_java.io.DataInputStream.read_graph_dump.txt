Line_20 $$ inflateIn = new DataInputStream(new BufferedInputStream(inflateFilter))-->Line_31 $$ inflateIn.close()[ FD ]
Line_21 $$ byte[] result = new byte[BYTE_SIZE]-->Line_22 $$ inflateIn.read(result)[ FD ]
Line_8 $$ DataOutputStream deflateOut = null-->Line_13 $$ deflateOut = new DataOutputStream(new BufferedOutputStream(deflateFilter))[ FD ]
Line_17 $$ DataInputBuffer deCompressedDataBuffer = new DataInputBuffer()-->Line_18 $$ deCompressedDataBuffer.reset(compressedDataBuffer.getData(), 0, compressedDataBuffer.getLength())[ FD ]
Line_5 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)-->Line_14 $$ deflateOut.write(bytes, 0, bytes.length)[ FD ]
Line_28 $$ if (deflateOut != null)-->Line_29 $$ deflateOut.close()[ CD ]
Line_13 $$ deflateOut = new DataOutputStream(new BufferedOutputStream(deflateFilter))-->Line_29 $$ deflateOut.close()[ FD ]
Line_9 $$ DataInputStream inflateIn = null-->Line_31 $$ inflateIn.close()[ FD ]
Line_8 $$ DataOutputStream deflateOut = null-->Line_28 $$ if (deflateOut != null)[ FD ]
Line_8 $$ DataOutputStream deflateOut = null-->Line_15 $$ deflateOut.flush()[ FD ]
Line_12 $$ CompressionOutputStream deflateFilter = new BlockCompressorStream(compressedDataBuffer, new SnappyCompressor(bufferSize), bufferSize, compressionOverhead)-->Line_16 $$ deflateFilter.finish()[ FD ]
Line_9 $$ DataInputStream inflateIn = null-->Line_30 $$ if (inflateIn != null)[ FD ]
Line_13 $$ deflateOut = new DataOutputStream(new BufferedOutputStream(deflateFilter))-->Line_14 $$ deflateOut.write(bytes, 0, bytes.length)[ FD ]
Line_13 $$ deflateOut = new DataOutputStream(new BufferedOutputStream(deflateFilter))-->Line_15 $$ deflateOut.flush()[ FD ]
Line_9 $$ DataInputStream inflateIn = null-->Line_22 $$ inflateIn.read(result)[ FD ]
Line_9 $$ DataInputStream inflateIn = null-->Line_20 $$ inflateIn = new DataInputStream(new BufferedInputStream(inflateFilter))[ FD ]
Line_20 $$ inflateIn = new DataInputStream(new BufferedInputStream(inflateFilter))-->Line_30 $$ if (inflateIn != null)[ FD ]
Line_13 $$ deflateOut = new DataOutputStream(new BufferedOutputStream(deflateFilter))-->Line_28 $$ if (deflateOut != null)[ FD ]
Line_21 $$ byte[] result = new byte[BYTE_SIZE]-->Line_23 $$ Assert.assertArrayEquals("original array not equals compress/decompressed array", result, bytes)[ FD ]
Line_4 $$ int BYTE_SIZE = 1024 * 100-->Line_5 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)[ FD ]
Line_20 $$ inflateIn = new DataInputStream(new BufferedInputStream(inflateFilter))-->Line_22 $$ inflateIn.read(result)[ FD ]
Line_11 $$ DataOutputBuffer compressedDataBuffer = new DataOutputBuffer()-->Line_18 $$ deCompressedDataBuffer.reset(compressedDataBuffer.getData(), 0, compressedDataBuffer.getLength())[ FD ]
Line_30 $$ if (inflateIn != null)-->Line_31 $$ inflateIn.close()[ CD ]
Line_8 $$ DataOutputStream deflateOut = null-->Line_14 $$ deflateOut.write(bytes, 0, bytes.length)[ FD ]
Line_8 $$ DataOutputStream deflateOut = null-->Line_29 $$ deflateOut.close()[ FD ]
Line_5 $$ byte[] bytes = BytesGenerator.get(BYTE_SIZE)-->Line_23 $$ Assert.assertArrayEquals("original array not equals compress/decompressed array", result, bytes)[ FD ]
