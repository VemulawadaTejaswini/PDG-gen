Line_75 $$ int pos = imagePos-->Line_77 $$ int faceLodSize = compressedData.getInt(pos)[ FD ]
Line_74 $$ if (!compressedData.isDirect()) -->Line_81 $$ compressedData.limit(pos)[ CD ]
Line_11 $$ DataInputStream in = null-->Line_14 $$ int fileSize = in.readInt()[ FD ]
Line_76 $$ for (int level = 0; level < numberOfMipmapLevels; level++) -->Line_78 $$ int faceLodSizeRounded = (faceLodSize + 3) & ~3[ CD ]
Line_10 $$ byte[] buffer = new byte[1024 * 10]-->Line_17 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_74 $$ if (!compressedData.isDirect()) -->Line_75 $$ int pos = imagePos[ CD ]
Line_79 $$ pos += faceLodSizeRounded * numberOfFaces + 4-->Line_83 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)[ FD ]
Line_79 $$ pos += faceLodSizeRounded * numberOfFaces + 4-->Line_81 $$ compressedData.limit(pos)[ FD ]
Line_75 $$ int pos = imagePos-->Line_79 $$ pos += faceLodSizeRounded * numberOfFaces + 4[ FD ]
Line_74 $$ if (!compressedData.isDirect()) -->Line_84 $$ directBuffer.order(compressedData.order())[ CD ]
Line_13 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))-->Line_23 $$ StreamUtils.closeQuietly(in)[ FD ]
Line_14 $$ int fileSize = in.readInt()-->Line_15 $$ compressedData = BufferUtils.newUnsafeByteBuffer(fileSize)[ FD ]
Line_10 $$ byte[] buffer = new byte[1024 * 10]-->Line_17 $$ compressedData.put(buffer, 0, readBytes)[ FD ]
Line_74 $$ if (!compressedData.isDirect()) -->Line_82 $$ compressedData.position(0)[ CD ]
Line_11 $$ DataInputStream in = null-->Line_13 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))[ FD ]
Line_75 $$ int pos = imagePos-->Line_81 $$ compressedData.limit(pos)[ FD ]
Line_83 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)-->Line_84 $$ directBuffer.order(compressedData.order())[ FD ]
Line_76 $$ for (int level = 0; level < numberOfMipmapLevels; level++) -->Line_79 $$ pos += faceLodSizeRounded * numberOfFaces + 4[ CD ]
Line_13 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))-->Line_14 $$ int fileSize = in.readInt()[ FD ]
Line_74 $$ if (!compressedData.isDirect()) -->Line_76 $$ for (int level = 0; level < numberOfMipmapLevels; level++) [ CD ]
Line_11 $$ DataInputStream in = null-->Line_23 $$ StreamUtils.closeQuietly(in)[ FD ]
Line_16 $$ int readBytes = 0-->Line_17 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_75 $$ int pos = imagePos-->Line_83 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)[ FD ]
Line_79 $$ pos += faceLodSizeRounded * numberOfFaces + 4-->Line_77 $$ int faceLodSize = compressedData.getInt(pos)[ FD ]
Line_52 $$ int endianTag = compressedData.getInt()-->Line_55 $$ if (endianTag != 0x04030201)[ FD ]
Line_76 $$ for (int level = 0; level < numberOfMipmapLevels; level++) -->Line_77 $$ int faceLodSize = compressedData.getInt(pos)[ CD ]
Line_83 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)-->Line_85 $$ directBuffer.put(compressedData)[ FD ]
Line_74 $$ if (!compressedData.isDirect()) -->Line_85 $$ directBuffer.put(compressedData)[ CD ]
Line_11 $$ DataInputStream in = null-->Line_17 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_74 $$ if (!compressedData.isDirect()) -->Line_83 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)[ CD ]
Line_13 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))-->Line_17 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_16 $$ int readBytes = 0-->Line_17 $$ compressedData.put(buffer, 0, readBytes)[ FD ]
Line_55 $$ if (endianTag != 0x04030201)-->Line_56 $$ compressedData.order(compressedData.order() == ByteOrder.BIG_ENDIAN ? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN)[ CD ]
