Line_4 $$ List<Integer> list = IntStream.range(0, INPUT_SIZE).collect(ArrayList::<>new, ArrayList::<>add, ArrayList::<>addAll)-->Line_6 $$ test(list.stream().mapToInt(Integer::<>intValue), MAX_ELEMENTS_COMPARATOR, IntStream.range(INPUT_SIZE - OUTPUT_SIZE, INPUT_SIZE).iterator())[ FD ]
Line_4 $$ List<Integer> list = IntStream.range(0, INPUT_SIZE).collect(ArrayList::<>new, ArrayList::<>add, ArrayList::<>addAll)-->Line_7 $$ test(list.stream().mapToInt(Integer::<>intValue), MIN_ELEMENTS_COMPARATOR, IntStream.range(0, OUTPUT_SIZE).map( x -> OUTPUT_SIZE - 1 - x).iterator())[ FD ]
Line_4 $$ List<Integer> list = IntStream.range(0, INPUT_SIZE).collect(ArrayList::<>new, ArrayList::<>add, ArrayList::<>addAll)-->Line_5 $$ Collections.shuffle(list)[ FD ]
