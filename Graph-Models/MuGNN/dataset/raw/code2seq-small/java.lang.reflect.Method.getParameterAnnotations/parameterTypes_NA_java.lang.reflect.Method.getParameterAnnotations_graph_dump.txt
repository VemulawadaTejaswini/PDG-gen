Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) -->Line_6 $$ Class<?> clazz = method.getParameterTypes()[i][ CD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_17 $$ checkArgument(explicitType != null, "Method %s argument %s does not have a @SqlType annotation", method, i)[ FD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_4 $$ ImmutableList.Builder<Type> types = ImmutableList.builder()[ CD ]
Line_6 $$ Class<?> clazz = method.getParameterTypes()[i]-->Line_7 $$ if (clazz == ConnectorSession.class) [ FD ]
Line_12 $$ if (annotation instanceof SqlType) -->Line_13 $$ explicitType = (SqlType) annotation[ CD ]
Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) -->Line_17 $$ checkArgument(explicitType != null, "Method %s argument %s does not have a @SqlType annotation", method, i)[ FD ]
Line_4 $$ ImmutableList.Builder<Type> types = ImmutableList.builder()-->Line_20 $$ return types.build()[ FD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_18 $$ types.add(type(typeManager, explicitType))[ FD ]
Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) -->Line_18 $$ types.add(type(typeManager, explicitType))[ CD ]
Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) -->Line_10 $$ SqlType explicitType = null[ CD ]
Line_10 $$ SqlType explicitType = null-->Line_13 $$ explicitType = (SqlType) annotation[ FD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_20 $$ return types.build()[ CD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_3 $$ Annotation[][] parameterAnnotations = method.getParameterAnnotations()[ FD ]
Line_4 $$ ImmutableList.Builder<Type> types = ImmutableList.builder()-->Line_18 $$ types.add(type(typeManager, explicitType))[ FD ]
Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) -->Line_7 $$ if (clazz == ConnectorSession.class) [ CD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) [ CD ]
Line_10 $$ SqlType explicitType = null-->Line_18 $$ types.add(type(typeManager, explicitType))[ FD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) [ FD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_6 $$ Class<?> clazz = method.getParameterTypes()[i][ FD ]
Line_11 $$ for (Annotation annotation : parameterAnnotations[i]) -->Line_12 $$ if (annotation instanceof SqlType) [ FD ]
Line_13 $$ explicitType = (SqlType) annotation-->Line_18 $$ types.add(type(typeManager, explicitType))[ FD ]
Line_2 $$ private static List<Type> parameterTypes(TypeManager typeManager, Method method) -->Line_3 $$ Annotation[][] parameterAnnotations = method.getParameterAnnotations()[ CD ]
Line_5 $$ for (int i = 0; i < method.getParameterTypes().length; i++) -->Line_17 $$ checkArgument(explicitType != null, "Method %s argument %s does not have a @SqlType annotation", method, i)[ CD ]
