Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)-->Line_27 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_7 $$ assertThat(terms, notNullValue())[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_23 $$ for (int i = 2; i < 10; i++) [ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_7 $$ assertThat(terms, notNullValue())[ CD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_14 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_22 $$ assertThat(terms.getBuckets().size(), equalTo(8))[ CD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))[ FD ]
Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()-->Line_30 $$ assertSearchResponse(response)[ FD ]
Line_16 $$ String[] excVals = -->Line_29 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).exclude(excVals)).execute().actionGet()[ FD ]
Line_23 $$ for (int i = 2; i < 10; i++) -->Line_44 $$ assertThat(key(bucket), equalTo("val" + nf.format(i)))[ FD ]
Line_31 $$ terms = response.getAggregations().get("terms")-->Line_34 $$ assertThat(terms.getBuckets().size(), equalTo(10))[ FD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_44 $$ assertThat(key(bucket), equalTo("val" + nf.format(i)))[ FD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_6 $$ Terms terms = response.getAggregations().get("terms")[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_31 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_31 $$ terms = response.getAggregations().get("terms")-->Line_33 $$ assertThat(terms.getName(), equalTo("terms"))[ FD ]
Line_31 $$ terms = response.getAggregations().get("terms")-->Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))[ FD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_36 $$ Terms.Bucket bucket = terms.getBucketByKey(key)[ FD ]
Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)-->Line_45 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_41 $$ for (int i = 2; i < 12; i++) [ CD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_18 $$ assertSearchResponse(response)[ FD ]
Line_39 $$ NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH)-->Line_40 $$ nf.setMinimumIntegerDigits(3)[ FD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_43 $$ assertThat(bucket, notNullValue())[ FD ]
Line_23 $$ for (int i = 2; i < 10; i++) -->Line_26 $$ assertThat(key(bucket), equalTo("val00" + i))[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_39 $$ NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH)[ CD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_21 $$ assertThat(terms.getName(), equalTo("terms"))[ FD ]
Line_39 $$ NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH)-->Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))[ FD ]
Line_39 $$ NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH)-->Line_44 $$ assertThat(key(bucket), equalTo("val" + nf.format(i)))[ FD ]
Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()-->Line_19 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))-->Line_45 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ FD ]
Line_10 $$ for (String incVal : incVals) -->Line_13 $$ assertThat(key(bucket), equalTo(incVal))[ FD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()[ FD ]
Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))-->Line_43 $$ assertThat(bucket, notNullValue())[ FD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_34 $$ assertThat(terms.getBuckets().size(), equalTo(10))[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)[ FD ]
Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)-->Line_43 $$ assertThat(bucket, notNullValue())[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_30 $$ assertSearchResponse(response)[ CD ]
Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)-->Line_37 $$ assertThat(bucket, nullValue())[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_19 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_34 $$ assertThat(terms.getBuckets().size(), equalTo(10))[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_40 $$ nf.setMinimumIntegerDigits(3)[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_9 $$ assertThat(terms.getBuckets().size(), equalTo(incVals.length))[ CD ]
Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)-->Line_26 $$ assertThat(key(bucket), equalTo("val00" + i))[ FD ]
Line_23 $$ for (int i = 2; i < 10; i++) -->Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))[ FD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_32 $$ assertThat(terms, notNullValue())[ CD ]
Line_10 $$ for (String incVal : incVals) -->Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)[ FD ]
Line_23 $$ for (int i = 2; i < 10; i++) -->Line_27 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ CD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_8 $$ assertThat(terms.getName(), equalTo("terms"))[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_20 $$ assertThat(terms, notNullValue())[ FD ]
Line_3 $$ String[] incVals = -->Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()[ FD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_26 $$ assertThat(key(bucket), equalTo("val00" + i))[ FD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_31 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_21 $$ assertThat(terms.getName(), equalTo("terms"))[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_33 $$ assertThat(terms.getName(), equalTo("terms"))[ CD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_32 $$ assertThat(terms, notNullValue())[ FD ]
Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()-->Line_18 $$ assertSearchResponse(response)[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_21 $$ assertThat(terms.getName(), equalTo("terms"))[ CD ]
Line_31 $$ terms = response.getAggregations().get("terms")-->Line_36 $$ Terms.Bucket bucket = terms.getBucketByKey(key)[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_19 $$ terms = response.getAggregations().get("terms")[ CD ]
Line_41 $$ for (int i = 2; i < 12; i++) -->Line_44 $$ assertThat(key(bucket), equalTo("val" + nf.format(i)))[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_20 $$ assertThat(terms, notNullValue())[ CD ]
Line_35 $$ for (String key : excVals) -->Line_36 $$ Terms.Bucket bucket = terms.getBucketByKey(key)[ FD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_20 $$ assertThat(terms, notNullValue())[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_8 $$ assertThat(terms.getName(), equalTo("terms"))[ CD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_13 $$ assertThat(key(bucket), equalTo(incVal))[ FD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_31 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_41 $$ for (int i = 2; i < 12; i++) -->Line_44 $$ assertThat(key(bucket), equalTo("val" + nf.format(i)))[ CD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_34 $$ assertThat(terms.getBuckets().size(), equalTo(10))[ FD ]
Line_41 $$ for (int i = 2; i < 12; i++) -->Line_45 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_3 $$ String[] incVals = [ CD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_45 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ FD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_37 $$ assertThat(bucket, nullValue())[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_31 $$ terms = response.getAggregations().get("terms")[ CD ]
Line_41 $$ for (int i = 2; i < 12; i++) -->Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))[ CD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)[ FD ]
Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)-->Line_25 $$ assertThat(bucket, notNullValue())[ FD ]
Line_23 $$ for (int i = 2; i < 10; i++) -->Line_25 $$ assertThat(bucket, notNullValue())[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_5 $$ assertSearchResponse(response)[ CD ]
Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()-->Line_29 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).exclude(excVals)).execute().actionGet()[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_33 $$ assertThat(terms.getName(), equalTo("terms"))[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_6 $$ Terms terms = response.getAggregations().get("terms")[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_29 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).exclude(excVals)).execute().actionGet()[ CD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_18 $$ assertSearchResponse(response)[ CD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_33 $$ assertThat(terms.getName(), equalTo("terms"))[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_9 $$ assertThat(terms.getBuckets().size(), equalTo(incVals.length))[ FD ]
Line_2 $$ public void testSingleValueFieldWithExactTermFiltering() throws Exception -->Line_16 $$ String[] excVals = [ CD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_27 $$ assertThat(bucket.getDocCount(), equalTo(1l))[ FD ]
Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)-->Line_44 $$ assertThat(key(bucket), equalTo("val" + nf.format(i)))[ FD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_30 $$ assertSearchResponse(response)[ FD ]
Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()-->Line_31 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_22 $$ assertThat(terms.getBuckets().size(), equalTo(8))[ FD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_19 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_41 $$ for (int i = 2; i < 12; i++) -->Line_43 $$ assertThat(bucket, notNullValue())[ CD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))[ FD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_29 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).exclude(excVals)).execute().actionGet()[ FD ]
Line_29 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).exclude(excVals)).execute().actionGet()-->Line_30 $$ assertSearchResponse(response)[ FD ]
Line_4 $$ SearchResponse response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals)).execute().actionGet()-->Line_5 $$ assertSearchResponse(response)[ FD ]
Line_23 $$ for (int i = 2; i < 10; i++) -->Line_24 $$ Terms.Bucket bucket = terms.getBucketByKey("val00" + i)[ CD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_36 $$ Terms.Bucket bucket = terms.getBucketByKey(key)[ FD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_12 $$ assertThat(bucket, notNullValue())[ FD ]
Line_29 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).exclude(excVals)).execute().actionGet()-->Line_31 $$ terms = response.getAggregations().get("terms")[ FD ]
Line_31 $$ terms = response.getAggregations().get("terms")-->Line_32 $$ assertThat(terms, notNullValue())[ FD ]
Line_41 $$ for (int i = 2; i < 12; i++) -->Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))[ FD ]
Line_19 $$ terms = response.getAggregations().get("terms")-->Line_32 $$ assertThat(terms, notNullValue())[ FD ]
Line_11 $$ Terms.Bucket bucket = terms.getBucketByKey(incVal)-->Line_25 $$ assertThat(bucket, notNullValue())[ FD ]
Line_23 $$ for (int i = 2; i < 10; i++) -->Line_41 $$ for (int i = 2; i < 12; i++) [ FD ]
Line_3 $$ String[] incVals = -->Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()[ FD ]
Line_6 $$ Terms terms = response.getAggregations().get("terms")-->Line_22 $$ assertThat(terms.getBuckets().size(), equalTo(8))[ FD ]
Line_42 $$ Terms.Bucket bucket = terms.getBucketByKey("val" + nf.format(i))-->Line_44 $$ assertThat(key(bucket), equalTo("val" + nf.format(i)))[ FD ]
Line_16 $$ String[] excVals = -->Line_17 $$ response = client().prepareSearch("idx").setTypes("high_card_type").addAggregation(terms("terms").executionHint(randomExecutionHint()).field(SINGLE_VALUED_FIELD_NAME).collectMode(randomFrom(SubAggCollectionMode.values())).include(incVals).exclude(excVals)).execute().actionGet()[ FD ]
