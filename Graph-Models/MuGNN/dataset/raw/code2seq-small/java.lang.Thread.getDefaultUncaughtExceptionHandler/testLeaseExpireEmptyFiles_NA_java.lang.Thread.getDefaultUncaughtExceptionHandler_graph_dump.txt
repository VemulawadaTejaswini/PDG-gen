Line_2 $$ public void testLeaseExpireEmptyFiles() throws Exception -->Line_3 $$ final Thread.UncaughtExceptionHandler oldUEH = Thread.getDefaultUncaughtExceptionHandler()[ CD ]
Line_4 $$ Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() -->Line_6 $$ if (e instanceof ConcurrentModificationException) [ CD ]
Line_4 $$ Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() -->Line_6 $$ if (e instanceof ConcurrentModificationException) [ FD ]
Line_2 $$ public void testLeaseExpireEmptyFiles() throws Exception -->Line_16 $$ conf.setInt(DFSConfigKeys.DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_KEY, 1000)[ CD ]
Line_2 $$ public void testLeaseExpireEmptyFiles() throws Exception -->Line_18 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(DATANODE_NUM).build()[ CD ]
Line_6 $$ if (e instanceof ConcurrentModificationException) -->Line_7 $$ LeaseManager.LOG.error("t=" + t, e)[ CD ]
Line_2 $$ public void testLeaseExpireEmptyFiles() throws Exception -->Line_17 $$ conf.setInt(DFSConfigKeys.DFS_HEARTBEAT_INTERVAL_KEY, 1)[ CD ]
Line_4 $$ Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() -->Line_7 $$ LeaseManager.LOG.error("t=" + t, e)[ FD ]
Line_2 $$ public void testLeaseExpireEmptyFiles() throws Exception -->Line_12 $$ System.out.println("testLeaseExpireEmptyFiles start")[ CD ]
Line_3 $$ final Thread.UncaughtExceptionHandler oldUEH = Thread.getDefaultUncaughtExceptionHandler()-->Line_32 $$ Thread.setDefaultUncaughtExceptionHandler(oldUEH)[ FD ]
Line_2 $$ public void testLeaseExpireEmptyFiles() throws Exception -->Line_4 $$ Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() [ CD ]
