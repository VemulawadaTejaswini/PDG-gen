Line_7 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_27 $$ long inclusionComparable = inclusion.comparable()[ CD ]
Line_10 $$ HeapElement candidate = queue.poll()-->Line_12 $$ if (exclusionComparable != candidate.comparable()) [ FD ]
Line_24 $$ if (inclusion == null) -->Line_25 $$ return[ CD ]
Line_8 $$ HeapElement inclusion = null-->Line_41 $$ reattach(inclusion)[ FD ]
Line_29 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_33 $$ if (0 == nInclusionsRemaining) [ CD ]
Line_9 $$ do -->Line_19 $$ reattach(candidate)[ CD ]
Line_7 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_37 $$ if (!excluded) [ CD ]
Line_2 $$ private void requirePending() -->Line_7 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) [ CD ]
Line_30 $$ HeapElement match = queue.poll()-->Line_32 $$ reattach(match)[ FD ]
Line_20 $$ if (0 == nInclusionsRemaining) -->Line_21 $$ return[ CD ]
Line_17 $$ exclusionComparable = candidate.comparable()-->Line_12 $$ if (exclusionComparable != candidate.comparable()) [ FD ]
Line_10 $$ HeapElement candidate = queue.poll()-->Line_11 $$ if (candidate.inclusion) [ FD ]
Line_13 $$ inclusion = candidate-->Line_24 $$ if (inclusion == null) [ FD ]
Line_2 $$ private void requirePending() -->Line_6 $$ long exclusionComparable = Long.MIN_VALUE[ CD ]
Line_8 $$ HeapElement inclusion = null-->Line_24 $$ if (inclusion == null) [ FD ]
Line_29 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_30 $$ HeapElement match = queue.poll()[ CD ]
Line_9 $$ do -->Line_10 $$ HeapElement candidate = queue.poll()[ CD ]
Line_9 $$ do -->Line_11 $$ if (candidate.inclusion) [ CD ]
Line_8 $$ HeapElement inclusion = null-->Line_13 $$ inclusion = candidate[ FD ]
Line_10 $$ HeapElement candidate = queue.poll()-->Line_19 $$ reattach(candidate)[ FD ]
Line_29 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_32 $$ reattach(match)[ CD ]
Line_7 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_9 $$ do [ CD ]
Line_7 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_24 $$ if (inclusion == null) [ CD ]
Line_10 $$ HeapElement candidate = queue.poll()-->Line_13 $$ inclusion = candidate[ FD ]
Line_37 $$ if (!excluded) -->Line_39 $$ return[ CD ]
Line_10 $$ HeapElement candidate = queue.poll()-->Line_17 $$ exclusionComparable = candidate.comparable()[ FD ]
Line_33 $$ if (0 == nInclusionsRemaining) -->Line_34 $$ return[ CD ]
Line_9 $$ do -->Line_20 $$ if (0 == nInclusionsRemaining) [ CD ]
Line_7 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_29 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) [ CD ]
Line_7 $$ while (0 != nInclusionsRemaining && !queue.isEmpty()) -->Line_8 $$ HeapElement inclusion = null[ CD ]
Line_8 $$ HeapElement inclusion = null-->Line_27 $$ long inclusionComparable = inclusion.comparable()[ FD ]
Line_29 $$ while (!queue.isEmpty() && queue.peek().comparable() == inclusionComparable) -->Line_31 $$ excluded |= !match.inclusion[ CD ]
Line_11 $$ if (candidate.inclusion) -->Line_12 $$ if (exclusionComparable != candidate.comparable()) [ CD ]
Line_2 $$ private void requirePending() -->Line_3 $$ if (null != pending) [ CD ]
Line_3 $$ if (null != pending) -->Line_4 $$ return[ CD ]
Line_6 $$ long exclusionComparable = Long.MIN_VALUE-->Line_12 $$ if (exclusionComparable != candidate.comparable()) [ FD ]
Line_11 $$ if (candidate.inclusion) -->Line_17 $$ exclusionComparable = candidate.comparable()[ CD ]
Line_13 $$ inclusion = candidate-->Line_27 $$ long inclusionComparable = inclusion.comparable()[ FD ]
Line_37 $$ if (!excluded) -->Line_41 $$ reattach(inclusion)[ CD ]
Line_13 $$ inclusion = candidate-->Line_41 $$ reattach(inclusion)[ FD ]
Line_6 $$ long exclusionComparable = Long.MIN_VALUE-->Line_17 $$ exclusionComparable = candidate.comparable()[ FD ]
Line_12 $$ if (exclusionComparable != candidate.comparable()) -->Line_13 $$ inclusion = candidate[ CD ]
