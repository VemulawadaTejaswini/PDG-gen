Line_9 $$ if (isExpectedError(reason)) -->Line_12 $$ log.warn(reason, "Error " + jobDescription + " %s: %s", taskId, taskUri)[ CD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_6 $$ if (reason instanceof RejectedExecutionException) [ CD ]
Line_17 $$ if (backoff.failure()) -->Line_19 $$ errorsSinceLastSuccess.forEach(exception::<>addSuppressed)[ CD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_3 $$ if (reason instanceof CancellationException) [ FD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_6 $$ if (reason instanceof RejectedExecutionException) [ FD ]
Line_17 $$ if (backoff.failure()) -->Line_18 $$ PrestoException exception = new PrestoException(TOO_MANY_REQUESTS_FAILED, format("%s (%s %s - %s failures, time since last success %s)", WORKER_NODE_ERROR, jobDescription, taskUri, backoff.getFailureCount(), backoff.getTimeSinceLastSuccess().convertTo(SECONDS)))[ CD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_17 $$ if (backoff.failure()) [ CD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_9 $$ if (isExpectedError(reason)) [ FD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_15 $$ errorsSinceLastSuccess.add(reason)[ FD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_9 $$ if (isExpectedError(reason)) [ CD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_10 $$ log.warn("Error " + jobDescription + " %s: %s: %s", taskId, reason.getMessage(), taskUri)[ FD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_3 $$ if (reason instanceof CancellationException) [ CD ]
Line_9 $$ if (isExpectedError(reason)) -->Line_10 $$ log.warn("Error " + jobDescription + " %s: %s: %s", taskId, reason.getMessage(), taskUri)[ CD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_12 $$ log.warn(reason, "Error " + jobDescription + " %s: %s", taskId, taskUri)[ FD ]
Line_2 $$ public void requestFailed(Throwable reason) throws PrestoException -->Line_14 $$ if (errorsSinceLastSuccess.size() < 10) [ CD ]
Line_14 $$ if (errorsSinceLastSuccess.size() < 10) -->Line_15 $$ errorsSinceLastSuccess.add(reason)[ CD ]
Line_3 $$ if (reason instanceof CancellationException) -->Line_4 $$ return[ CD ]
