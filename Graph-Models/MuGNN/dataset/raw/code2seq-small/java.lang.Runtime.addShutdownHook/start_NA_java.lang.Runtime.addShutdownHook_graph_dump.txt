Line_6 $$ final ClassLoader oldTccl = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()-->Line_38 $$ WildFlySecurityManager.setCurrentContextClassLoaderPrivileged(oldTccl)[ FD ]
Line_3 $$ final ServiceContainer serviceContainer = context.getController().getServiceContainer()-->Line_53 $$ if (serviceContainer != null) [ FD ]
Line_3 $$ final ServiceContainer serviceContainer = context.getController().getServiceContainer()-->Line_54 $$ serviceContainer.shutdown()[ FD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_3 $$ final ServiceContainer serviceContainer = context.getController().getServiceContainer()[ CD ]
Line_51 $$ Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() -->Line_53 $$ if (serviceContainer != null) [ CD ]
Line_4 $$ thread = new Thread(new Runnable() -->Line_6 $$ final ClassLoader oldTccl = WildFlySecurityManager.getCurrentContextClassLoaderPrivileged()[ CD ]
Line_41 $$ if (contextSelector instanceof LazyConnectionContextSelector) -->Line_42 $$ ((LazyConnectionContextSelector) contextSelector).close()[ CD ]
Line_15 $$ for (SetupAction action : setupActions) -->Line_16 $$ action.setup(Collections.<String, Object>emptyMap())[ FD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_50 $$ thread.start()[ CD ]
Line_23 $$ while (iterator.hasPrevious()) -->Line_24 $$ SetupAction action = iterator.previous()[ CD ]
Line_24 $$ SetupAction action = iterator.previous()-->Line_26 $$ action.teardown(Collections.<String, Object>emptyMap())[ FD ]
Line_28 $$ error = e-->Line_31 $$ if (error != null) [ FD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_3 $$ final ServiceContainer serviceContainer = context.getController().getServiceContainer()[ FD ]
Line_22 $$ Throwable error = null-->Line_31 $$ if (error != null) [ FD ]
Line_3 $$ final ServiceContainer serviceContainer = context.getController().getServiceContainer()-->Line_46 $$ serviceContainer.shutdown()[ FD ]
Line_15 $$ for (SetupAction action : setupActions) -->Line_26 $$ action.teardown(Collections.<String, Object>emptyMap())[ FD ]
Line_22 $$ Throwable error = null-->Line_28 $$ error = e[ FD ]
Line_53 $$ if (serviceContainer != null) -->Line_54 $$ serviceContainer.shutdown()[ CD ]
Line_21 $$ final ListIterator<SetupAction> iterator = setupActions.listIterator(setupActions.size())-->Line_23 $$ while (iterator.hasPrevious()) [ FD ]
Line_21 $$ final ListIterator<SetupAction> iterator = setupActions.listIterator(setupActions.size())-->Line_24 $$ SetupAction action = iterator.previous()[ FD ]
Line_2 $$ public synchronized void start(final StartContext context) throws StartException -->Line_51 $$ Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() [ CD ]
