Line_6 $$ if (Boolean.getBoolean("whip.static.instrument")) -->Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) [ CD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_19 $$ _dataFile.delete()[ CD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_36 $$ sb.append("disabled.")[ CD ]
Line_30 $$ if (instrumentation.isRedefineClassesSupported()) -->Line_31 $$ sb.append("supports ")[ CD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_29 $$ sb.append("restranforming classes. Instrumentation ")[ CD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_35 $$ sb.append("redefining classes. Dynamic instrumententation is ")[ CD ]
Line_24 $$ if (instrumentation.isRetransformClassesSupported()) -->Line_27 $$ sb.append("does not support ")[ CD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_37 $$ System.out.println(sb.toString())[ CD ]
Line_10 $$ runtime.addShutdownHook(new Thread() -->Line_12 $$ ProjectDataUtil.captureProjectData(true, Boolean.getBoolean("whip.static.instrument.use.data.file"))[ CD ]
Line_7 $$ final WhipClassFileTransformer whipClassFileTransformer = new WhipClassFileTransformer(includes, excludes)-->Line_8 $$ instrumentation.addTransformer(whipClassFileTransformer)[ FD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_22 $$ sb.append("Current JVM is not capable for dynamic ")[ CD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_4 $$ String[] includes = arguments[0].split(",")[ CD ]
Line_6 $$ if (Boolean.getBoolean("whip.static.instrument")) -->Line_10 $$ runtime.addShutdownHook(new Thread() [ CD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_3 $$ String[] arguments = agentArguments.split(";")[ CD ]
Line_30 $$ if (instrumentation.isRedefineClassesSupported()) -->Line_33 $$ sb.append("does not support ")[ CD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_8 $$ instrumentation.addTransformer(whipClassFileTransformer)[ FD ]
Line_6 $$ if (Boolean.getBoolean("whip.static.instrument")) -->Line_7 $$ final WhipClassFileTransformer whipClassFileTransformer = new WhipClassFileTransformer(includes, excludes)[ CD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_30 $$ if (instrumentation.isRedefineClassesSupported()) [ FD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_5 $$ String[] excludes = arguments[1].split(",")[ CD ]
Line_9 $$ Runtime runtime = Runtime.getRuntime()-->Line_10 $$ runtime.addShutdownHook(new Thread() [ FD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_30 $$ if (instrumentation.isRedefineClassesSupported()) [ CD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_23 $$ sb.append("instrumententation. Instrumentation ")[ CD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_6 $$ if (Boolean.getBoolean("whip.static.instrument")) [ CD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_24 $$ if (instrumentation.isRetransformClassesSupported()) [ FD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_3 $$ String[] arguments = agentArguments.split(";")[ FD ]
Line_6 $$ if (Boolean.getBoolean("whip.static.instrument")) -->Line_8 $$ instrumentation.addTransformer(whipClassFileTransformer)[ CD ]
Line_24 $$ if (instrumentation.isRetransformClassesSupported()) -->Line_25 $$ sb.append("supports ")[ CD ]
Line_6 $$ if (Boolean.getBoolean("whip.static.instrument")) -->Line_9 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) -->Line_24 $$ if (instrumentation.isRetransformClassesSupported()) [ CD ]
Line_2 $$ public static synchronized void premain(String agentArguments, Instrumentation instrumentation) -->Line_15 $$ if (instrumentation.isRedefineClassesSupported() && instrumentation.isRetransformClassesSupported()) [ FD ]
