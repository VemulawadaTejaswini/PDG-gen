Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_25 $$ cancelButton.addActionListener(new ActionListener() [ CD ]
Line_5 $$ final Map<String, ValidationResult.Option> result = new HashMap<String, ValidationResult.Option>()-->Line_72 $$ result.putAll(model.getResult())[ FD ]
Line_53 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_54 $$ TableColumn each = table.getColumnModel().getColumn(i)[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_21 $$ buttonsPanel.setBorder(BUTTONS_BORDER)[ CD ]
Line_53 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_54 $$ TableColumn each = table.getColumnModel().getColumn(i)[ FD ]
Line_11 $$ for (ValidationResult result : validationResults) -->Line_72 $$ result.putAll(model.getResult())[ FD ]
Line_34 $$ if (proceed) -->Line_42 $$ buttonsPanel.add(proceedButton)[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)[ CD ]
Line_53 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_55 $$ each.setPreferredWidth(MyTableModel.getColumnWidth(i, new Dimension(600, 400).width))[ FD ]
Line_10 $$ boolean proceed = true-->Line_13 $$ proceed = false[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_33 $$ buttonsPanel.add(cancelButton)[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_67 $$ dialog.add(buttonsPanel, BorderLayout.SOUTH)[ CD ]
Line_12 $$ if (result.options.contains(ValidationResult.Option.NONE)) -->Line_13 $$ proceed = false[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_67 $$ dialog.add(buttonsPanel, BorderLayout.SOUTH)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_50 $$ table.setDefaultRenderer(Object.class, new MyCellRenderer())[ CD ]
Line_24 $$ JButton cancelButton = new JButton(CANCEL_BUTTON_TITLE)-->Line_33 $$ buttonsPanel.add(cancelButton)[ FD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_39 $$ dialog.setVisible(false)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_53 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) [ CD ]
Line_20 $$ JPanel buttonsPanel = new JPanel()-->Line_33 $$ buttonsPanel.add(cancelButton)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_20 $$ JPanel buttonsPanel = new JPanel()[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_68 $$ dialog.getRootPane().setBorder(FRAME_BORDER)[ CD ]
Line_53 $$ for (int i = 0; i < table.getColumnModel().getColumnCount(); i++) -->Line_55 $$ each.setPreferredWidth(MyTableModel.getColumnWidth(i, new Dimension(600, 400).width))[ CD ]
Line_54 $$ TableColumn each = table.getColumnModel().getColumn(i)-->Line_55 $$ each.setPreferredWidth(MyTableModel.getColumnWidth(i, new Dimension(600, 400).width))[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_71 $$ dialog.setVisible(true)[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_43 $$ dialog.getRootPane().setDefaultButton(proceedButton)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_65 $$ dialog.add(label, BorderLayout.NORTH)[ CD ]
Line_2 $$ public Map<String, ValidationResult.Option> askUser(final List<ValidationResult> validationResults) throws OperationCancelledException -->Line_80 $$ checkCancelled()[ CD ]
Line_25 $$ cancelButton.addActionListener(new ActionListener() -->Line_30 $$ dialog.setVisible(false)[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_18 $$ dialog.setLayout(new BorderLayout())[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_10 $$ boolean proceed = true[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_70 $$ dialog.setLocationRelativeTo(null)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_58 $$ if (proceed) [ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_66 $$ dialog.add(new JScrollPane(table), BorderLayout.CENTER)[ CD ]
Line_20 $$ JPanel buttonsPanel = new JPanel()-->Line_21 $$ buttonsPanel.setBorder(BUTTONS_BORDER)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_48 $$ table.setCellSelectionEnabled(true)[ CD ]
Line_34 $$ if (proceed) -->Line_43 $$ dialog.getRootPane().setDefaultButton(proceedButton)[ CD ]
Line_20 $$ JPanel buttonsPanel = new JPanel()-->Line_67 $$ dialog.add(buttonsPanel, BorderLayout.SOUTH)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_70 $$ dialog.setLocationRelativeTo(null)[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_69 $$ dialog.setSize(new Dimension(600, 400))[ FD ]
Line_34 $$ if (proceed) -->Line_45 $$ dialog.getRootPane().setDefaultButton(cancelButton)[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_72 $$ result.putAll(model.getResult())[ CD ]
Line_3 $$ if (validationResults.isEmpty())-->Line_4 $$ return Collections.emptyMap()[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_19 $$ dialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE)[ CD ]
Line_25 $$ cancelButton.addActionListener(new ActionListener() -->Line_28 $$ isCancelled.set(true)[ CD ]
Line_25 $$ cancelButton.addActionListener(new ActionListener() -->Line_29 $$ myCancelButton.setEnabled(false)[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_64 $$ label.setBorder(LABEL_BORDER)[ CD ]
Line_24 $$ JButton cancelButton = new JButton(CANCEL_BUTTON_TITLE)-->Line_45 $$ dialog.getRootPane().setDefaultButton(cancelButton)[ FD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_65 $$ dialog.add(label, BorderLayout.NORTH)[ FD ]
Line_2 $$ public Map<String, ValidationResult.Option> askUser(final List<ValidationResult> validationResults) throws OperationCancelledException -->Line_5 $$ final Map<String, ValidationResult.Option> result = new HashMap<String, ValidationResult.Option>()[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_18 $$ dialog.setLayout(new BorderLayout())[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_30 $$ dialog.setVisible(false)[ FD ]
Line_2 $$ public Map<String, ValidationResult.Option> askUser(final List<ValidationResult> validationResults) throws OperationCancelledException -->Line_3 $$ if (validationResults.isEmpty())[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_52 $$ table.setModel(model)[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_68 $$ dialog.getRootPane().setBorder(FRAME_BORDER)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_22 $$ buttonsPanel.setLayout(new BoxLayout(buttonsPanel, BoxLayout.X_AXIS))[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_71 $$ dialog.setVisible(true)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_69 $$ dialog.setSize(new Dimension(600, 400))[ CD ]
Line_2 $$ public Map<String, ValidationResult.Option> askUser(final List<ValidationResult> validationResults) throws OperationCancelledException -->Line_81 $$ return result[ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_66 $$ dialog.add(new JScrollPane(table), BorderLayout.CENTER)[ FD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_19 $$ dialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_24 $$ JButton cancelButton = new JButton(CANCEL_BUTTON_TITLE)[ CD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_23 $$ buttonsPanel.add(Box.createHorizontalGlue())[ CD ]
Line_24 $$ JButton cancelButton = new JButton(CANCEL_BUTTON_TITLE)-->Line_25 $$ cancelButton.addActionListener(new ActionListener() [ FD ]
Line_2 $$ public Map<String, ValidationResult.Option> askUser(final List<ValidationResult> validationResults) throws OperationCancelledException -->Line_3 $$ if (validationResults.isEmpty())[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_34 $$ if (proceed) [ CD ]
Line_36 $$ proceedButton.addActionListener(new ActionListener() -->Line_39 $$ dialog.setVisible(false)[ CD ]
Line_20 $$ JPanel buttonsPanel = new JPanel()-->Line_42 $$ buttonsPanel.add(proceedButton)[ FD ]
Line_7 $$ SwingUtilities.invokeAndWait(new Runnable() -->Line_49 $$ table.setDefaultEditor(ValidationResult.Option.class, new MyCellEditor())[ CD ]
Line_20 $$ JPanel buttonsPanel = new JPanel()-->Line_22 $$ buttonsPanel.setLayout(new BoxLayout(buttonsPanel, BoxLayout.X_AXIS))[ FD ]
Line_20 $$ JPanel buttonsPanel = new JPanel()-->Line_23 $$ buttonsPanel.add(Box.createHorizontalGlue())[ FD ]
Line_34 $$ if (proceed) -->Line_36 $$ proceedButton.addActionListener(new ActionListener() [ CD ]
Line_17 $$ final JDialog dialog = new JDialog(myFrame, TITLE, true)-->Line_45 $$ dialog.getRootPane().setDefaultButton(cancelButton)[ FD ]
