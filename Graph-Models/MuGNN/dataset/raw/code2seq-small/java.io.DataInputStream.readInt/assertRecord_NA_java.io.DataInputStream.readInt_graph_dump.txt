Line_2 $$ private void assertRecord(int id, int prev, int next) throws IOException -->Line_4 $$ assertEquals(next, myStorage.getNextRecord(id))[ FD ]
Line_2 $$ private void assertRecord(int id, int prev, int next) throws IOException -->Line_3 $$ assertEquals(prev, myStorage.getPrevRecord(id))[ FD ]
Line_2 $$ private void assertRecord(int id, int prev, int next) throws IOException -->Line_5 $$ DataInputStream s = myStorage.readStream(id)[ FD ]
Line_2 $$ private void assertRecord(int id, int prev, int next) throws IOException -->Line_5 $$ DataInputStream s = myStorage.readStream(id)[ CD ]
Line_7 $$ for (int i = 0; i < 1000; i++) -->Line_8 $$ assertEquals(id, s.readInt())[ CD ]
Line_2 $$ private void assertRecord(int id, int prev, int next) throws IOException -->Line_8 $$ assertEquals(id, s.readInt())[ FD ]
Line_5 $$ DataInputStream s = myStorage.readStream(id)-->Line_8 $$ assertEquals(id, s.readInt())[ FD ]
Line_5 $$ DataInputStream s = myStorage.readStream(id)-->Line_11 $$ s.close()[ FD ]
Line_2 $$ private void assertRecord(int id, int prev, int next) throws IOException -->Line_3 $$ assertEquals(prev, myStorage.getPrevRecord(id))[ CD ]
Line_2 $$ private void assertRecord(int id, int prev, int next) throws IOException -->Line_4 $$ assertEquals(next, myStorage.getNextRecord(id))[ CD ]
