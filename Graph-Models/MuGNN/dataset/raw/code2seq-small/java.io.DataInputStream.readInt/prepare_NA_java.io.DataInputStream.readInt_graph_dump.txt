Line_2 $$ public void prepare() -->Line_28 $$ if (compressedData.get() != (byte) 0x04B)[ CD ]
Line_73 $$ int pos = imagePos-->Line_75 $$ int faceLodSize = compressedData.getInt(pos)[ FD ]
Line_11 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))-->Line_21 $$ StreamUtils.closeQuietly(in)[ FD ]
Line_11 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))-->Line_12 $$ int fileSize = in.readInt()[ FD ]
Line_73 $$ int pos = imagePos-->Line_77 $$ pos += faceLodSizeRounded * numberOfFaces + 4[ FD ]
Line_8 $$ byte[] buffer = new byte[1024 * 10]-->Line_15 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_81 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)-->Line_82 $$ directBuffer.order(compressedData.order())[ FD ]
Line_2 $$ public void prepare() -->Line_38 $$ if (compressedData.get() != (byte) 0x031)[ CD ]
Line_2 $$ public void prepare() -->Line_66 $$ if (numberOfMipmapLevels == 0) [ CD ]
Line_2 $$ public void prepare() -->Line_44 $$ if (compressedData.get() != (byte) 0x00A)[ CD ]
Line_2 $$ public void prepare() -->Line_63 $$ numberOfArrayElements = compressedData.getInt()[ CD ]
Line_11 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))-->Line_15 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_50 $$ int endianTag = compressedData.getInt()-->Line_53 $$ if (endianTag != 0x04030201)[ FD ]
Line_2 $$ public void prepare() -->Line_26 $$ if (compressedData.get() != (byte) 0x0AB)[ CD ]
Line_2 $$ public void prepare() -->Line_42 $$ if (compressedData.get() != (byte) 0x00D)[ CD ]
Line_2 $$ public void prepare() -->Line_48 $$ if (compressedData.get() != (byte) 0x00A)[ CD ]
Line_2 $$ public void prepare() -->Line_72 $$ if (!compressedData.isDirect()) [ CD ]
Line_74 $$ for (int level = 0; level < numberOfMipmapLevels; level++) -->Line_76 $$ int faceLodSizeRounded = (faceLodSize + 3) & ~3[ CD ]
Line_77 $$ pos += faceLodSizeRounded * numberOfFaces + 4-->Line_81 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)[ FD ]
Line_2 $$ public void prepare() -->Line_32 $$ if (compressedData.get() != (byte) 0x058)[ CD ]
Line_2 $$ public void prepare() -->Line_65 $$ numberOfMipmapLevels = compressedData.getInt()[ CD ]
Line_2 $$ public void prepare() -->Line_57 $$ glFormat = compressedData.getInt()[ CD ]
Line_72 $$ if (!compressedData.isDirect()) -->Line_81 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)[ CD ]
Line_8 $$ byte[] buffer = new byte[1024 * 10]-->Line_15 $$ compressedData.put(buffer, 0, readBytes)[ FD ]
Line_9 $$ DataInputStream in = null-->Line_21 $$ StreamUtils.closeQuietly(in)[ FD ]
Line_14 $$ int readBytes = 0-->Line_15 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_2 $$ public void prepare() -->Line_7 $$ if (file.name().endsWith(".zktx")) [ CD ]
Line_72 $$ if (!compressedData.isDirect()) -->Line_80 $$ compressedData.position(0)[ CD ]
Line_74 $$ for (int level = 0; level < numberOfMipmapLevels; level++) -->Line_77 $$ pos += faceLodSizeRounded * numberOfFaces + 4[ CD ]
Line_2 $$ public void prepare() -->Line_3 $$ if (compressedData != null)[ CD ]
Line_2 $$ public void prepare() -->Line_5 $$ if (file == null)[ CD ]
Line_14 $$ int readBytes = 0-->Line_15 $$ compressedData.put(buffer, 0, readBytes)[ FD ]
Line_72 $$ if (!compressedData.isDirect()) -->Line_73 $$ int pos = imagePos[ CD ]
Line_77 $$ pos += faceLodSizeRounded * numberOfFaces + 4-->Line_75 $$ int faceLodSize = compressedData.getInt(pos)[ FD ]
Line_2 $$ public void prepare() -->Line_55 $$ glType = compressedData.getInt()[ CD ]
Line_77 $$ pos += faceLodSizeRounded * numberOfFaces + 4-->Line_79 $$ compressedData.limit(pos)[ FD ]
Line_72 $$ if (!compressedData.isDirect()) -->Line_82 $$ directBuffer.order(compressedData.order())[ CD ]
Line_72 $$ if (!compressedData.isDirect()) -->Line_74 $$ for (int level = 0; level < numberOfMipmapLevels; level++) [ CD ]
Line_2 $$ public void prepare() -->Line_61 $$ pixelHeight = compressedData.getInt()[ CD ]
Line_2 $$ public void prepare() -->Line_64 $$ numberOfFaces = compressedData.getInt()[ CD ]
Line_9 $$ DataInputStream in = null-->Line_11 $$ in = new DataInputStream(new BufferedInputStream(new GZIPInputStream(file.read())))[ FD ]
Line_2 $$ public void prepare() -->Line_62 $$ pixelDepth = compressedData.getInt()[ CD ]
Line_2 $$ public void prepare() -->Line_50 $$ int endianTag = compressedData.getInt()[ CD ]
Line_74 $$ for (int level = 0; level < numberOfMipmapLevels; level++) -->Line_75 $$ int faceLodSize = compressedData.getInt(pos)[ CD ]
Line_73 $$ int pos = imagePos-->Line_79 $$ compressedData.limit(pos)[ FD ]
Line_2 $$ public void prepare() -->Line_70 $$ int bytesOfKeyValueData = compressedData.getInt()[ CD ]
Line_7 $$ if (file.name().endsWith(".zktx")) -->Line_24 $$ compressedData = ByteBuffer.wrap(file.readBytes())[ CD ]
Line_2 $$ public void prepare() -->Line_34 $$ if (compressedData.get() != (byte) 0x020)[ CD ]
Line_2 $$ public void prepare() -->Line_59 $$ glBaseInternalFormat = compressedData.getInt()[ CD ]
Line_81 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)-->Line_83 $$ directBuffer.put(compressedData)[ FD ]
Line_72 $$ if (!compressedData.isDirect()) -->Line_83 $$ directBuffer.put(compressedData)[ CD ]
Line_9 $$ DataInputStream in = null-->Line_12 $$ int fileSize = in.readInt()[ FD ]
Line_7 $$ if (file.name().endsWith(".zktx")) -->Line_9 $$ DataInputStream in = null[ CD ]
Line_2 $$ public void prepare() -->Line_60 $$ pixelWidth = compressedData.getInt()[ CD ]
Line_12 $$ int fileSize = in.readInt()-->Line_13 $$ compressedData = BufferUtils.newUnsafeByteBuffer(fileSize)[ FD ]
Line_7 $$ if (file.name().endsWith(".zktx")) -->Line_8 $$ byte[] buffer = new byte[1024 * 10][ CD ]
Line_2 $$ public void prepare() -->Line_36 $$ if (compressedData.get() != (byte) 0x031)[ CD ]
Line_2 $$ public void prepare() -->Line_30 $$ if (compressedData.get() != (byte) 0x054)[ CD ]
Line_2 $$ public void prepare() -->Line_46 $$ if (compressedData.get() != (byte) 0x01A)[ CD ]
Line_2 $$ public void prepare() -->Line_53 $$ if (endianTag != 0x04030201)[ CD ]
Line_53 $$ if (endianTag != 0x04030201)-->Line_54 $$ compressedData.order(compressedData.order() == ByteOrder.BIG_ENDIAN ? ByteOrder.LITTLE_ENDIAN : ByteOrder.BIG_ENDIAN)[ CD ]
Line_2 $$ public void prepare() -->Line_58 $$ glInternalFormat = compressedData.getInt()[ CD ]
Line_72 $$ if (!compressedData.isDirect()) -->Line_79 $$ compressedData.limit(pos)[ CD ]
Line_73 $$ int pos = imagePos-->Line_81 $$ ByteBuffer directBuffer = BufferUtils.newUnsafeByteBuffer(pos)[ FD ]
Line_2 $$ public void prepare() -->Line_56 $$ glTypeSize = compressedData.getInt()[ CD ]
Line_9 $$ DataInputStream in = null-->Line_15 $$ while ((readBytes = in.read(buffer)) != -1) compressedData.put(buffer, 0, readBytes)[ FD ]
Line_2 $$ public void prepare() -->Line_40 $$ if (compressedData.get() != (byte) 0x0BB)[ CD ]
Line_2 $$ public void prepare() -->Line_51 $$ if (endianTag != 0x04030201 && endianTag != 0x01020304)[ CD ]
