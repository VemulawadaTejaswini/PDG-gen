Line_2 $$ private static Map<String, String> readMap(DataInputStream in) throws IOException -->Line_5 $$ for (int i = 0; i < size; i++) [ CD ]
Line_4 $$ Map<String, String> map = new HashMap<String, String>()-->Line_7 $$ map.put(key, in.readUTF())[ FD ]
Line_5 $$ for (int i = 0; i < size; i++) -->Line_7 $$ map.put(key, in.readUTF())[ CD ]
Line_5 $$ for (int i = 0; i < size; i++) -->Line_6 $$ String key = in.readUTF()[ CD ]
Line_2 $$ private static Map<String, String> readMap(DataInputStream in) throws IOException -->Line_4 $$ Map<String, String> map = new HashMap<String, String>()[ CD ]
Line_2 $$ private static Map<String, String> readMap(DataInputStream in) throws IOException -->Line_6 $$ String key = in.readUTF()[ FD ]
Line_2 $$ private static Map<String, String> readMap(DataInputStream in) throws IOException -->Line_7 $$ map.put(key, in.readUTF())[ FD ]
Line_2 $$ private static Map<String, String> readMap(DataInputStream in) throws IOException -->Line_9 $$ return map[ CD ]
Line_2 $$ private static Map<String, String> readMap(DataInputStream in) throws IOException -->Line_3 $$ int size = in.readInt()[ FD ]
Line_3 $$ int size = in.readInt()-->Line_5 $$ for (int i = 0; i < size; i++) [ FD ]
Line_6 $$ String key = in.readUTF()-->Line_7 $$ map.put(key, in.readUTF())[ FD ]
Line_2 $$ private static Map<String, String> readMap(DataInputStream in) throws IOException -->Line_3 $$ int size = in.readInt()[ CD ]
