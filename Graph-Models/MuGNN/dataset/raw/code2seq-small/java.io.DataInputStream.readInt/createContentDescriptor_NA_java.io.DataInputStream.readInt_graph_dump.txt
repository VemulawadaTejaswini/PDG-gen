Line_5 $$ if (socket != null) -->Line_45 $$ thread.start()[ CD ]
Line_14 $$ while (read != -1) -->Line_18 $$ final RemoteConnection connection = new RemoteConnection(true, "127.0.0.1", String.valueOf(read), true)[ CD ]
Line_13 $$ int read = stream.readInt()-->Line_18 $$ final RemoteConnection connection = new RemoteConnection(true, "127.0.0.1", String.valueOf(read), true)[ FD ]
Line_6 $$ Thread thread = new Thread(getThreadName() + " debugger runner") -->Line_44 $$ thread.setDaemon(true)[ FD ]
Line_14 $$ while (read != -1) -->Line_19 $$ final DebugEnvironment env = new DefaultDebugEnvironment(environment, state, connection, true)[ CD ]
Line_2 $$ protected RunContentDescriptor createContentDescriptor(@NotNull final RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException -->Line_4 $$ final ServerSocket socket = ((JavaTestFrameworkRunnableState) state).getForkSocket()[ CD ]
Line_4 $$ final ServerSocket socket = ((JavaTestFrameworkRunnableState) state).getForkSocket()-->Line_9 $$ final Socket accept = socket.accept()[ FD ]
Line_5 $$ if (socket != null) -->Line_6 $$ Thread thread = new Thread(getThreadName() + " debugger runner") [ CD ]
Line_11 $$ DataInputStream stream = new DataInputStream(accept.getInputStream())-->Line_30 $$ read = stream.readInt()[ FD ]
Line_4 $$ final ServerSocket socket = ((JavaTestFrameworkRunnableState) state).getForkSocket()-->Line_5 $$ if (socket != null) [ FD ]
Line_14 $$ while (read != -1) -->Line_15 $$ final DebugProcess process = DebuggerManager.getInstance(environment.getProject()).getDebugProcess(res.getProcessHandler())[ CD ]
Line_15 $$ final DebugProcess process = DebuggerManager.getInstance(environment.getProject()).getDebugProcess(res.getProcessHandler())-->Line_16 $$ if (process == null)[ FD ]
Line_14 $$ while (read != -1) -->Line_20 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_6 $$ Thread thread = new Thread(getThreadName() + " debugger runner") -->Line_45 $$ thread.start()[ FD ]
Line_2 $$ protected RunContentDescriptor createContentDescriptor(@NotNull final RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException -->Line_3 $$ final RunContentDescriptor res = super.createContentDescriptor(state, environment)[ FD ]
Line_13 $$ int read = stream.readInt()-->Line_14 $$ while (read != -1) [ FD ]
Line_9 $$ final Socket accept = socket.accept()-->Line_36 $$ accept.close()[ FD ]
Line_2 $$ protected RunContentDescriptor createContentDescriptor(@NotNull final RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException -->Line_47 $$ return res[ CD ]
Line_11 $$ DataInputStream stream = new DataInputStream(accept.getInputStream())-->Line_13 $$ int read = stream.readInt()[ FD ]
Line_11 $$ DataInputStream stream = new DataInputStream(accept.getInputStream())-->Line_33 $$ stream.close()[ FD ]
Line_2 $$ protected RunContentDescriptor createContentDescriptor(@NotNull final RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException -->Line_15 $$ final DebugProcess process = DebuggerManager.getInstance(environment.getProject()).getDebugProcess(res.getProcessHandler())[ FD ]
Line_14 $$ while (read != -1) -->Line_30 $$ read = stream.readInt()[ CD ]
Line_3 $$ final RunContentDescriptor res = super.createContentDescriptor(state, environment)-->Line_15 $$ final DebugProcess process = DebuggerManager.getInstance(environment.getProject()).getDebugProcess(res.getProcessHandler())[ FD ]
Line_2 $$ protected RunContentDescriptor createContentDescriptor(@NotNull final RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException -->Line_5 $$ if (socket != null) [ CD ]
Line_19 $$ final DebugEnvironment env = new DefaultDebugEnvironment(environment, state, connection, true)-->Line_23 $$ ((DebugProcessImpl) process).reattach(env)[ FD ]
Line_9 $$ final Socket accept = socket.accept()-->Line_24 $$ accept.getOutputStream().write(0)[ FD ]
Line_5 $$ if (socket != null) -->Line_44 $$ thread.setDaemon(true)[ CD ]
Line_9 $$ final Socket accept = socket.accept()-->Line_11 $$ DataInputStream stream = new DataInputStream(accept.getInputStream())[ FD ]
Line_14 $$ while (read != -1) -->Line_16 $$ if (process == null)[ CD ]
Line_2 $$ protected RunContentDescriptor createContentDescriptor(@NotNull final RunProfileState state, @NotNull final ExecutionEnvironment environment) throws ExecutionException -->Line_3 $$ final RunContentDescriptor res = super.createContentDescriptor(state, environment)[ CD ]
