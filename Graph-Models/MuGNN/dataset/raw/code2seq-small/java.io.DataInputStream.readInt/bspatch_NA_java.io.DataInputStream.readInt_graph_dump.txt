Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_62 $$ diffIn.close()[ CD ]
Line_25 $$ byte[] newBuf = new byte[newsize + 1]-->Line_63 $$ newFileOut.write(newBuf, 0, newBuf.length - 1)[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_8 $$ long diffBlockLen = diffIn.readLong()[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_7 $$ long ctrlBlockLen = diffIn.readLong()[ CD ]
Line_57 $$ newpos += ctrl[1]-->Line_30 $$ while (newpos < newsize) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_4 $$ byte[] diffData = Utils.readBytes(diffFileIn)[ CD ]
Line_16 $$ GZIPInputStream extraBlockIn = new GZIPInputStream(in)-->Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_63 $$ newFileOut.write(newBuf, 0, newBuf.length - 1)[ FD ]
Line_30 $$ while (newpos < newsize) -->Line_31 $$ for (int i = 0; i <= 2; i++) [ CD ]
Line_57 $$ newpos += ctrl[1]-->Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_15 $$ in.skip(diffBlockLen + ctrlBlockLen + 32)[ CD ]
Line_57 $$ newpos += ctrl[1]-->Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_16 $$ GZIPInputStream extraBlockIn = new GZIPInputStream(in)[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_23 $$ byte[] oldBuf = oldFileByteOut.toByteArray()[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_29 $$ int nbytes[ CD ]
Line_3 $$ int oldpos, newpos-->Line_26 $$ oldpos = 0[ FD ]
Line_30 $$ while (newpos < newsize) -->Line_34 $$ if (newpos + ctrl[0] > newsize) [ CD ]
Line_9 $$ int newsize = (int) diffIn.readLong()-->Line_30 $$ while (newpos < newsize) [ FD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_6 $$ long headerMagic = diffIn.readLong()[ FD ]
Line_30 $$ while (newpos < newsize) -->Line_42 $$ for (int i = 0; i < ctrl[0]; i++) [ CD ]
Line_43 $$ if ((oldpos + i >= 0) && (oldpos + i < oldsize)) -->Line_44 $$ newBuf[newpos + i] += oldBuf[oldpos + i][ CD ]
Line_16 $$ GZIPInputStream extraBlockIn = new GZIPInputStream(in)-->Line_61 $$ extraBlockIn.close()[ FD ]
Line_47 $$ newpos += ctrl[0]-->Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_13 $$ GZIPInputStream diffBlockIn = new GZIPInputStream(in)[ CD ]
Line_13 $$ GZIPInputStream diffBlockIn = new GZIPInputStream(in)-->Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) [ FD ]
Line_27 $$ newpos = 0-->Line_57 $$ newpos += ctrl[1][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_4 $$ byte[] diffData = Utils.readBytes(diffFileIn)[ FD ]
Line_10 $$ InputStream in-->Line_15 $$ in.skip(diffBlockLen + ctrlBlockLen + 32)[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_11 $$ in = new ByteArrayInputStream(diffData)[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_19 $$ Utils.copyStream(oldFileIn, oldFileByteOut)[ FD ]
Line_30 $$ while (newpos < newsize) -->Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ CD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_7 $$ long ctrlBlockLen = diffIn.readLong()[ FD ]
Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) -->Line_39 $$ System.err.println("error reading from extraIn")[ CD ]
Line_9 $$ int newsize = (int) diffIn.readLong()-->Line_49 $$ if (newpos + ctrl[1] > newsize) [ FD ]
Line_11 $$ in = new ByteArrayInputStream(diffData)-->Line_14 $$ in = new ByteArrayInputStream(diffData)[ FD ]
Line_30 $$ while (newpos < newsize) -->Line_49 $$ if (newpos + ctrl[1] > newsize) [ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_30 $$ while (newpos < newsize) [ CD ]
Line_10 $$ InputStream in-->Line_14 $$ in = new ByteArrayInputStream(diffData)[ FD ]
Line_10 $$ InputStream in-->Line_11 $$ in = new ByteArrayInputStream(diffData)[ FD ]
Line_3 $$ int oldpos, newpos-->Line_27 $$ newpos = 0[ FD ]
Line_17 $$ ByteArrayOutputStream oldFileByteOut = new ByteArrayOutputStream()-->Line_19 $$ Utils.copyStream(oldFileIn, oldFileByteOut)[ FD ]
Line_26 $$ oldpos = 0-->Line_58 $$ oldpos += ctrl[2][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_9 $$ int newsize = (int) diffIn.readLong()[ CD ]
Line_31 $$ for (int i = 0; i <= 2; i++) -->Line_42 $$ for (int i = 0; i < ctrl[0]; i++) [ FD ]
Line_42 $$ for (int i = 0; i < ctrl[0]; i++) -->Line_43 $$ if ((oldpos + i >= 0) && (oldpos + i < oldsize)) [ CD ]
Line_48 $$ oldpos += ctrl[0]-->Line_58 $$ oldpos += ctrl[2][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_27 $$ newpos = 0[ CD ]
Line_3 $$ int oldpos, newpos-->Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) [ FD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_9 $$ int newsize = (int) diffIn.readLong()[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_17 $$ ByteArrayOutputStream oldFileByteOut = new ByteArrayOutputStream()[ CD ]
Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) -->Line_40 $$ return[ CD ]
Line_11 $$ in = new ByteArrayInputStream(diffData)-->Line_15 $$ in.skip(diffBlockLen + ctrlBlockLen + 32)[ FD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_62 $$ diffIn.close()[ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_63 $$ newFileOut.write(newBuf, 0, newBuf.length - 1)[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_60 $$ diffBlockIn.close()[ CD ]
Line_49 $$ if (newpos + ctrl[1] > newsize) -->Line_51 $$ return[ CD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_8 $$ long diffBlockLen = diffIn.readLong()[ FD ]
Line_30 $$ while (newpos < newsize) -->Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) [ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_24 $$ int oldsize = oldBuf.length[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_28 $$ int[] ctrl = new int[3][ CD ]
Line_47 $$ newpos += ctrl[0]-->Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_47 $$ newpos += ctrl[0]-->Line_57 $$ newpos += ctrl[1][ FD ]
Line_14 $$ in = new ByteArrayInputStream(diffData)-->Line_15 $$ in.skip(diffBlockLen + ctrlBlockLen + 32)[ FD ]
Line_25 $$ byte[] newBuf = new byte[newsize + 1]-->Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_14 $$ in = new ByteArrayInputStream(diffData)[ CD ]
Line_17 $$ ByteArrayOutputStream oldFileByteOut = new ByteArrayOutputStream()-->Line_23 $$ byte[] oldBuf = oldFileByteOut.toByteArray()[ FD ]
Line_34 $$ if (newpos + ctrl[0] > newsize) -->Line_35 $$ System.err.println("Corrupt patch\n")[ CD ]
Line_49 $$ if (newpos + ctrl[1] > newsize) -->Line_50 $$ System.err.println("Corrupt patch")[ CD ]
Line_5 $$ DataInputStream diffIn = new DataInputStream(new ByteArrayInputStream(diffData))-->Line_32 $$ ctrl[i] = diffIn.readInt()[ FD ]
Line_30 $$ while (newpos < newsize) -->Line_57 $$ newpos += ctrl[1][ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_3 $$ int oldpos, newpos[ CD ]
Line_31 $$ for (int i = 0; i <= 2; i++) -->Line_32 $$ ctrl[i] = diffIn.readInt()[ CD ]
Line_30 $$ while (newpos < newsize) -->Line_48 $$ oldpos += ctrl[0][ CD ]
Line_27 $$ newpos = 0-->Line_47 $$ newpos += ctrl[0][ FD ]
Line_3 $$ int oldpos, newpos-->Line_48 $$ oldpos += ctrl[0][ FD ]
Line_3 $$ int oldpos, newpos-->Line_30 $$ while (newpos < newsize) [ FD ]
Line_34 $$ if (newpos + ctrl[0] > newsize) -->Line_36 $$ return[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_12 $$ in.skip(ctrlBlockLen + 32)[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_6 $$ long headerMagic = diffIn.readLong()[ CD ]
Line_17 $$ ByteArrayOutputStream oldFileByteOut = new ByteArrayOutputStream()-->Line_21 $$ oldFileByteOut.close()[ FD ]
Line_13 $$ GZIPInputStream diffBlockIn = new GZIPInputStream(in)-->Line_60 $$ diffBlockIn.close()[ FD ]
Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) -->Line_55 $$ return[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_10 $$ InputStream in[ CD ]
Line_3 $$ int oldpos, newpos-->Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_25 $$ byte[] newBuf = new byte[newsize + 1]-->Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_27 $$ newpos = 0-->Line_38 $$ if (!Util.readFromStream(diffBlockIn, newBuf, newpos, ctrl[0])) [ FD ]
Line_30 $$ while (newpos < newsize) -->Line_58 $$ oldpos += ctrl[2][ CD ]
Line_47 $$ newpos += ctrl[0]-->Line_30 $$ while (newpos < newsize) [ FD ]
Line_11 $$ in = new ByteArrayInputStream(diffData)-->Line_12 $$ in.skip(ctrlBlockLen + 32)[ FD ]
Line_26 $$ oldpos = 0-->Line_48 $$ oldpos += ctrl[0][ FD ]
Line_3 $$ int oldpos, newpos-->Line_58 $$ oldpos += ctrl[2][ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_61 $$ extraBlockIn.close()[ CD ]
Line_30 $$ while (newpos < newsize) -->Line_47 $$ newpos += ctrl[0][ CD ]
Line_3 $$ int oldpos, newpos-->Line_57 $$ newpos += ctrl[1][ FD ]
Line_27 $$ newpos = 0-->Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) [ FD ]
Line_3 $$ int oldpos, newpos-->Line_47 $$ newpos += ctrl[0][ FD ]
Line_27 $$ newpos = 0-->Line_30 $$ while (newpos < newsize) [ FD ]
Line_9 $$ int newsize = (int) diffIn.readLong()-->Line_34 $$ if (newpos + ctrl[0] > newsize) [ FD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_26 $$ oldpos = 0[ CD ]
Line_2 $$ public static void bspatch(InputStream oldFileIn, OutputStream newFileOut, InputStream diffFileIn) throws IOException -->Line_25 $$ byte[] newBuf = new byte[newsize + 1][ CD ]
Line_10 $$ InputStream in-->Line_12 $$ in.skip(ctrlBlockLen + 32)[ FD ]
Line_53 $$ if (!Util.readFromStream(extraBlockIn, newBuf, newpos, ctrl[1])) -->Line_54 $$ System.err.println("error reading from extraIn")[ CD ]
