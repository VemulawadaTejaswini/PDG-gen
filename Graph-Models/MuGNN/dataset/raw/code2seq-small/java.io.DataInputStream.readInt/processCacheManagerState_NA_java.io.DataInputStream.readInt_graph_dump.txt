Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_12 $$ v.visit(ImageElement.CACHE_ENTRY_PATH, Text.readString(in))[ FD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_11 $$ for (int i = 0; i < numEntries; i++) [ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_4 $$ final int numPools = in.readInt()[ FD ]
Line_10 $$ final int numEntries = in.readInt()-->Line_11 $$ for (int i = 0; i < numEntries; i++) [ FD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_3 $$ v.visit(ImageElement.CACHE_NEXT_ENTRY_ID, in.readLong())[ CD ]
Line_11 $$ for (int i = 0; i < numEntries; i++) -->Line_14 $$ v.visit(ImageElement.CACHE_ENTRY_POOL_NAME, Text.readString(in))[ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_14 $$ v.visit(ImageElement.CACHE_ENTRY_POOL_NAME, Text.readString(in))[ FD ]
Line_11 $$ for (int i = 0; i < numEntries; i++) -->Line_12 $$ v.visit(ImageElement.CACHE_ENTRY_PATH, Text.readString(in))[ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_7 $$ processCachePoolPermission(in, v)[ FD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_3 $$ v.visit(ImageElement.CACHE_NEXT_ENTRY_ID, in.readLong())[ FD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_6 $$ v.visit(ImageElement.CACHE_POOL_NAME, Text.readString(in))[ FD ]
Line_5 $$ for (int i = 0; i < numPools; i++) -->Line_7 $$ processCachePoolPermission(in, v)[ CD ]
Line_4 $$ final int numPools = in.readInt()-->Line_5 $$ for (int i = 0; i < numPools; i++) [ FD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_4 $$ final int numPools = in.readInt()[ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_13 $$ v.visit(ImageElement.CACHE_ENTRY_REPLICATION, in.readShort())[ FD ]
Line_5 $$ for (int i = 0; i < numPools; i++) -->Line_11 $$ for (int i = 0; i < numEntries; i++) [ FD ]
Line_11 $$ for (int i = 0; i < numEntries; i++) -->Line_13 $$ v.visit(ImageElement.CACHE_ENTRY_REPLICATION, in.readShort())[ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_8 $$ v.visit(ImageElement.CACHE_POOL_WEIGHT, in.readInt())[ FD ]
Line_5 $$ for (int i = 0; i < numPools; i++) -->Line_6 $$ v.visit(ImageElement.CACHE_POOL_NAME, Text.readString(in))[ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_10 $$ final int numEntries = in.readInt()[ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_5 $$ for (int i = 0; i < numPools; i++) [ CD ]
Line_2 $$ private void processCacheManagerState(DataInputStream in, ImageVisitor v) throws IOException -->Line_10 $$ final int numEntries = in.readInt()[ FD ]
Line_5 $$ for (int i = 0; i < numPools; i++) -->Line_8 $$ v.visit(ImageElement.CACHE_POOL_WEIGHT, in.readInt())[ CD ]
