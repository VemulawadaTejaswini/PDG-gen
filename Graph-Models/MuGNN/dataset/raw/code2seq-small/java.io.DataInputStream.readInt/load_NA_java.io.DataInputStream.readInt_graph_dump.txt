Line_20 $$ IOException ioException = new IOException()-->Line_21 $$ ioException.initCause(e)[ FD ]
Line_2 $$ private static Collection<InternalExternalProjectInfo> load(@NotNull Project project) throws IOException -->Line_29 $$ return projects[ CD ]
Line_2 $$ private static Collection<InternalExternalProjectInfo> load(@NotNull Project project) throws IOException -->Line_4 $$ final File configurationFile = getProjectConfigurationFile(project)[ FD ]
Line_3 $$ SmartList<InternalExternalProjectInfo> projects = new SmartList<InternalExternalProjectInfo>()-->Line_17 $$ projects.add(projectDataDataNode)[ FD ]
Line_2 $$ private static Collection<InternalExternalProjectInfo> load(@NotNull Project project) throws IOException -->Line_7 $$ DataInputStream in = new DataInputStream(new BufferedInputStream(new FileInputStream(configurationFile)))[ CD ]
Line_13 $$ ObjectInputStream os = new ObjectInputStream(in)-->Line_24 $$ os.close()[ FD ]
Line_3 $$ SmartList<InternalExternalProjectInfo> projects = new SmartList<InternalExternalProjectInfo>()-->Line_5 $$ if (!configurationFile.isFile())[ FD ]
Line_3 $$ SmartList<InternalExternalProjectInfo> projects = new SmartList<InternalExternalProjectInfo>()-->Line_10 $$ if (!STORAGE_VERSION.equals(storage_version))[ FD ]
Line_12 $$ final int size = in.readInt()-->Line_15 $$ for (int i = 0; i < size; i++) [ FD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_17 $$ projects.add(projectDataDataNode)[ CD ]
Line_13 $$ ObjectInputStream os = new ObjectInputStream(in)-->Line_16 $$ InternalExternalProjectInfo projectDataDataNode = (InternalExternalProjectInfo) os.readObject()[ FD ]
Line_4 $$ final File configurationFile = getProjectConfigurationFile(project)-->Line_5 $$ if (!configurationFile.isFile())[ FD ]
Line_5 $$ if (!configurationFile.isFile())-->Line_6 $$ return projects[ CD ]
Line_16 $$ InternalExternalProjectInfo projectDataDataNode = (InternalExternalProjectInfo) os.readObject()-->Line_17 $$ projects.add(projectDataDataNode)[ FD ]
Line_15 $$ for (int i = 0; i < size; i++) -->Line_16 $$ InternalExternalProjectInfo projectDataDataNode = (InternalExternalProjectInfo) os.readObject()[ CD ]
Line_7 $$ DataInputStream in = new DataInputStream(new BufferedInputStream(new FileInputStream(configurationFile)))-->Line_27 $$ in.close()[ FD ]
Line_2 $$ private static Collection<InternalExternalProjectInfo> load(@NotNull Project project) throws IOException -->Line_5 $$ if (!configurationFile.isFile())[ CD ]
Line_7 $$ DataInputStream in = new DataInputStream(new BufferedInputStream(new FileInputStream(configurationFile)))-->Line_9 $$ final String storage_version = in.readUTF()[ FD ]
Line_2 $$ private static Collection<InternalExternalProjectInfo> load(@NotNull Project project) throws IOException -->Line_4 $$ final File configurationFile = getProjectConfigurationFile(project)[ CD ]
Line_7 $$ DataInputStream in = new DataInputStream(new BufferedInputStream(new FileInputStream(configurationFile)))-->Line_12 $$ final int size = in.readInt()[ FD ]
Line_2 $$ private static Collection<InternalExternalProjectInfo> load(@NotNull Project project) throws IOException -->Line_3 $$ SmartList<InternalExternalProjectInfo> projects = new SmartList<InternalExternalProjectInfo>()[ CD ]
Line_10 $$ if (!STORAGE_VERSION.equals(storage_version))-->Line_11 $$ return projects[ CD ]
Line_9 $$ final String storage_version = in.readUTF()-->Line_10 $$ if (!STORAGE_VERSION.equals(storage_version))[ FD ]
