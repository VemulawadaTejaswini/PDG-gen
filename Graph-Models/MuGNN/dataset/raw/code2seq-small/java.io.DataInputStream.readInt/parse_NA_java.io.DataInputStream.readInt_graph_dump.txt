Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_5 $$ if (type == '[ FD ]
Line_9 $$ if (type == 'T')-->Line_10 $$ return new JsonValue(true)[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_3 $$ if (type == '[')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_18 $$ return new JsonValue(oldFormat ? (long) din.readShort() : (long) din.readByte())[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_27 $$ if (type == 'D')[ FD ]
Line_27 $$ if (type == 'D')-->Line_28 $$ return new JsonValue(din.readDouble())[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_6 $$ return parseObject(din)[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_19 $$ if (type == 'I')[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_17 $$ if (type == 'i')[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_20 $$ return new JsonValue(oldFormat ? (long) din.readInt() : (long) din.readShort())[ FD ]
Line_17 $$ if (type == 'i')-->Line_19 $$ if (type == 'I')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_9 $$ if (type == 'T')[ FD ]
Line_23 $$ if (type == 'L')-->Line_24 $$ return new JsonValue(din.readLong())[ CD ]
Line_11 $$ if (type == 'F')-->Line_13 $$ if (type == 'B')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_21 $$ if (type == 'l')[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_25 $$ if (type == 'd')[ FD ]
Line_19 $$ if (type == 'I')-->Line_20 $$ return new JsonValue(oldFormat ? (long) din.readInt() : (long) din.readShort())[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_24 $$ return new JsonValue(din.readLong())[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_14 $$ return new JsonValue((long) readUChar(din))[ FD ]
Line_9 $$ if (type == 'T')-->Line_11 $$ if (type == 'F')[ CD ]
Line_21 $$ if (type == 'l')-->Line_22 $$ return new JsonValue((long) din.readInt())[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_26 $$ return new JsonValue(din.readFloat())[ FD ]
Line_15 $$ if (type == 'U')-->Line_17 $$ if (type == 'i')[ CD ]
Line_3 $$ if (type == '[')-->Line_4 $$ return parseArray(din)[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_11 $$ if (type == 'F')[ FD ]
Line_19 $$ if (type == 'I')-->Line_21 $$ if (type == 'l')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_16 $$ return new JsonValue((long) readUChar(din))[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_28 $$ return new JsonValue(din.readDouble())[ FD ]
Line_13 $$ if (type == 'B')-->Line_15 $$ if (type == 'U')[ CD ]
Line_15 $$ if (type == 'U')-->Line_16 $$ return new JsonValue((long) readUChar(din))[ CD ]
Line_23 $$ if (type == 'L')-->Line_25 $$ if (type == 'd')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_23 $$ if (type == 'L')[ FD ]
Line_17 $$ if (type == 'i')-->Line_18 $$ return new JsonValue(oldFormat ? (long) din.readShort() : (long) din.readByte())[ CD ]
Line_7 $$ if (type == 'Z')-->Line_8 $$ return new JsonValue(JsonValue.ValueType.nullValue)[ CD ]
Line_31 $$ if (type == 'a' || type == 'A')-->Line_32 $$ return parseData(din, type)[ CD ]
Line_5 $$ if (type == '-->Line_7 $$ if (type == 'Z')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_7 $$ if (type == 'Z')[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_32 $$ return parseData(din, type)[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_15 $$ if (type == 'U')[ FD ]
Line_27 $$ if (type == 'D')-->Line_29 $$ if (type == 's' || type == 'S')[ CD ]
Line_5 $$ if (type == '-->Line_6 $$ return parseObject(din)[ CD ]
Line_7 $$ if (type == 'Z')-->Line_9 $$ if (type == 'T')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_4 $$ return parseArray(din)[ FD ]
Line_13 $$ if (type == 'B')-->Line_14 $$ return new JsonValue((long) readUChar(din))[ CD ]
Line_21 $$ if (type == 'l')-->Line_23 $$ if (type == 'L')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_3 $$ if (type == '[')[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_22 $$ return new JsonValue((long) din.readInt())[ FD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_30 $$ return new JsonValue(parseString(din, type))[ FD ]
Line_25 $$ if (type == 'd')-->Line_27 $$ if (type == 'D')[ CD ]
Line_2 $$ protected JsonValue parse(final DataInputStream din, final byte type) throws IOException -->Line_13 $$ if (type == 'B')[ FD ]
Line_29 $$ if (type == 's' || type == 'S')-->Line_31 $$ if (type == 'a' || type == 'A')[ CD ]
Line_25 $$ if (type == 'd')-->Line_26 $$ return new JsonValue(din.readFloat())[ CD ]
Line_11 $$ if (type == 'F')-->Line_12 $$ return new JsonValue(false)[ CD ]
Line_29 $$ if (type == 's' || type == 'S')-->Line_30 $$ return new JsonValue(parseString(din, type))[ CD ]
Line_3 $$ if (type == '[')-->Line_5 $$ if (type == '[ CD ]
