Line_9 $$ final Graphics2D g = image.createGraphics()-->Line_10 $$ icon.paintIcon(new JPanel(), g, 0, 0)[ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_6 $$ final int w = Math.min(icon.getIconWidth(), maxWidth)[ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_13 $$ final int offX = icon.getIconWidth() > maxWidth ? (icon.getIconWidth() - maxWidth) / 2 : 0[ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_15 $$ for (int col = 0; col < w; col++) [ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_10 $$ icon.paintIcon(new JPanel(), g, 0, 0)[ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_6 $$ final int w = Math.min(icon.getIconWidth(), maxWidth)[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_7 $$ final int h = Math.min(icon.getIconHeight(), maxHeight)[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_14 $$ final int offY = icon.getIconHeight() > maxHeight ? (icon.getIconHeight() - maxHeight) / 2 : 0[ CD ]
Line_6 $$ final int w = Math.min(icon.getIconWidth(), maxWidth)-->Line_12 $$ final BufferedImage img = UIUtil.createImage(w, h, Transparency.TRANSLUCENT)[ FD ]
Line_16 $$ for (int row = 0; row < h; row++) -->Line_17 $$ img.setRGB(col, row, image.getRGB(col + offX, row + offY))[ FD ]
Line_6 $$ final int w = Math.min(icon.getIconWidth(), maxWidth)-->Line_15 $$ for (int col = 0; col < w; col++) [ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_14 $$ final int offY = icon.getIconHeight() > maxHeight ? (icon.getIconHeight() - maxHeight) / 2 : 0[ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_9 $$ final Graphics2D g = image.createGraphics()[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_11 $$ g.dispose()[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_7 $$ final int h = Math.min(icon.getIconHeight(), maxHeight)[ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_10 $$ icon.paintIcon(new JPanel(), g, 0, 0)[ CD ]
Line_7 $$ final int h = Math.min(icon.getIconHeight(), maxHeight)-->Line_12 $$ final BufferedImage img = UIUtil.createImage(w, h, Transparency.TRANSLUCENT)[ FD ]
Line_16 $$ for (int row = 0; row < h; row++) -->Line_17 $$ img.setRGB(col, row, image.getRGB(col + offX, row + offY))[ CD ]
Line_15 $$ for (int col = 0; col < w; col++) -->Line_17 $$ img.setRGB(col, row, image.getRGB(col + offX, row + offY))[ FD ]
Line_15 $$ for (int col = 0; col < w; col++) -->Line_16 $$ for (int row = 0; row < h; row++) [ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_8 $$ final BufferedImage image = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().createCompatibleImage(icon.getIconWidth(), icon.getIconHeight(), Transparency.TRANSLUCENT)[ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_20 $$ return new ImageIcon(img)[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_13 $$ final int offX = icon.getIconWidth() > maxWidth ? (icon.getIconWidth() - maxWidth) / 2 : 0[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_3 $$ if (icon.getIconHeight() <= maxHeight && icon.getIconWidth() <= maxWidth) [ CD ]
Line_3 $$ if (icon.getIconHeight() <= maxHeight && icon.getIconWidth() <= maxWidth) -->Line_4 $$ return icon[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_8 $$ final BufferedImage image = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().createCompatibleImage(icon.getIconWidth(), icon.getIconHeight(), Transparency.TRANSLUCENT)[ CD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_3 $$ if (icon.getIconHeight() <= maxHeight && icon.getIconWidth() <= maxWidth) [ FD ]
Line_2 $$ public static Icon cropIcon(@NotNull Icon icon, int maxWidth, int maxHeight) -->Line_12 $$ final BufferedImage img = UIUtil.createImage(w, h, Transparency.TRANSLUCENT)[ CD ]
Line_8 $$ final BufferedImage image = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().createCompatibleImage(icon.getIconWidth(), icon.getIconHeight(), Transparency.TRANSLUCENT)-->Line_17 $$ img.setRGB(col, row, image.getRGB(col + offX, row + offY))[ FD ]
Line_9 $$ final Graphics2D g = image.createGraphics()-->Line_11 $$ g.dispose()[ FD ]
Line_12 $$ final BufferedImage img = UIUtil.createImage(w, h, Transparency.TRANSLUCENT)-->Line_17 $$ img.setRGB(col, row, image.getRGB(col + offX, row + offY))[ FD ]
Line_7 $$ final int h = Math.min(icon.getIconHeight(), maxHeight)-->Line_16 $$ for (int row = 0; row < h; row++) [ FD ]
Line_8 $$ final BufferedImage image = GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice().getDefaultConfiguration().createCompatibleImage(icon.getIconWidth(), icon.getIconHeight(), Transparency.TRANSLUCENT)-->Line_9 $$ final Graphics2D g = image.createGraphics()[ FD ]
