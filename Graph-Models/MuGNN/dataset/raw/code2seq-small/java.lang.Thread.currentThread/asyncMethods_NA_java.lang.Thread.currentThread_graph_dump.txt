Line_5 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_7 $$ context.registerBeanDefinition("autoProxyCreator", new RootBeanDefinition(DefaultAdvisorAutoProxyCreator.class))[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_13 $$ Future<String> future = asyncTest.returnSomething(20)[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_26 $$ asyncTest.returnSomething(-1).get()[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_32 $$ asyncTest.returnSomethingListenable(0).get()[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_17 $$ CompletableFuture<String> completableFuture = asyncTest.returnSomethingCompletable(20)[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_15 $$ ListenableFuture<String> listenableFuture = asyncTest.returnSomethingListenable(20)[ FD ]
Line_15 $$ ListenableFuture<String> listenableFuture = asyncTest.returnSomethingListenable(20)-->Line_16 $$ assertEquals("20", listenableFuture.get())[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_38 $$ asyncTest.returnSomethingListenable(-1).get()[ FD ]
Line_13 $$ Future<String> future = asyncTest.returnSomething(20)-->Line_14 $$ assertEquals("20", future.get())[ FD ]
Line_5 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)[ FD ]
Line_5 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_6 $$ context.registerBeanDefinition("asyncTest", new RootBeanDefinition(AsyncMethodBean.class))[ FD ]
Line_5 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_8 $$ context.registerBeanDefinition("asyncAdvisor", new RootBeanDefinition(AsyncAnnotationAdvisor.class))[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_11 $$ asyncTest.doNothing(5)[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_20 $$ asyncTest.returnSomething(0).get()[ FD ]
Line_5 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_9 $$ context.refresh()[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_44 $$ asyncTest.returnSomethingCompletable(0).get()[ FD ]
Line_17 $$ CompletableFuture<String> completableFuture = asyncTest.returnSomethingCompletable(20)-->Line_18 $$ assertEquals("20", completableFuture.get())[ FD ]
Line_10 $$ AsyncMethodBean asyncTest = context.getBean("asyncTest", AsyncMethodBean.class)-->Line_12 $$ asyncTest.doSomething(10)[ FD ]
