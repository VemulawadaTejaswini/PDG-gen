Line_11 $$ if (myPopup != null) -->Line_12 $$ if (!canClose()) [ CD ]
Line_19 $$ final JRootPane root = myComponent.getRootPane()-->Line_21 $$ final Container popupWindow = root.getParent()[ FD ]
Line_22 $$ if (popupWindow != null && popupWindow.isShowing()) -->Line_23 $$ storeLocation(popupWindow.getLocationOnScreen())[ CD ]
Line_38 $$ if (LOG.isDebugEnabled()) -->Line_39 $$ LOG.debug("cancel before show @ " + Thread.currentThread())[ CD ]
Line_20 $$ if (root != null) -->Line_21 $$ final Container popupWindow = root.getParent()[ CD ]
Line_21 $$ final Container popupWindow = root.getParent()-->Line_23 $$ storeLocation(popupWindow.getLocationOnScreen())[ FD ]
Line_4 $$ if (myState == State.CANCEL || myState == State.DISPOSE) -->Line_5 $$ return[ CD ]
Line_21 $$ final Container popupWindow = root.getParent()-->Line_22 $$ if (popupWindow != null && popupWindow.isShowing()) [ FD ]
Line_35 $$ if (myFocusTrackback != null) -->Line_36 $$ myFocusTrackback.setForcedRestore(!myOk && myFocusable)[ CD ]
Line_12 $$ if (!canClose()) -->Line_13 $$ debugState("cannot cancel popup", State.CANCEL)[ CD ]
Line_31 $$ if (ApplicationManagerEx.getApplicationEx() != null) -->Line_32 $$ StackingPopupDispatcher.getInstance().onPopupHidden(this)[ CD ]
Line_34 $$ if (myInStack) -->Line_35 $$ if (myFocusTrackback != null) [ CD ]
Line_11 $$ if (myPopup != null) -->Line_27 $$ if (e instanceof MouseEvent) [ CD ]
Line_44 $$ for (JBPopupListener each : myListeners) -->Line_45 $$ each.onClosed(new LightweightWindowEvent(this, myOk))[ FD ]
Line_18 $$ if (myUseDimServiceForXYLocation) -->Line_20 $$ if (root != null) [ CD ]
Line_18 $$ if (myUseDimServiceForXYLocation) -->Line_19 $$ final JRootPane root = myComponent.getRootPane()[ CD ]
Line_12 $$ if (!canClose()) -->Line_15 $$ return[ CD ]
Line_19 $$ final JRootPane root = myComponent.getRootPane()-->Line_20 $$ if (root != null) [ FD ]
Line_35 $$ if (myFocusTrackback != null) -->Line_38 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_11 $$ if (myPopup != null) -->Line_43 $$ if (myListeners != null) [ CD ]
Line_11 $$ if (myPopup != null) -->Line_34 $$ if (myInStack) [ CD ]
Line_11 $$ if (myPopup != null) -->Line_30 $$ myPopup.hide(false)[ CD ]
Line_11 $$ if (myPopup != null) -->Line_42 $$ disposePopup()[ CD ]
Line_11 $$ if (myPopup != null) -->Line_17 $$ storeDimensionSize(myContent.getSize())[ CD ]
Line_20 $$ if (root != null) -->Line_22 $$ if (popupWindow != null && popupWindow.isShowing()) [ CD ]
Line_35 $$ if (myFocusTrackback != null) -->Line_37 $$ myFocusTrackback.restoreFocus()[ CD ]
Line_50 $$ if (myProjectDisposable != null) -->Line_51 $$ Disposer.dispose(myProjectDisposable)[ CD ]
Line_11 $$ if (myPopup != null) -->Line_18 $$ if (myUseDimServiceForXYLocation) [ CD ]
Line_11 $$ if (myPopup != null) -->Line_31 $$ if (ApplicationManagerEx.getApplicationEx() != null) [ CD ]
Line_27 $$ if (e instanceof MouseEvent) -->Line_28 $$ IdeEventQueue.getInstance().blockNextEvents((MouseEvent) e)[ CD ]
Line_9 $$ if (isDisposed())-->Line_10 $$ return[ CD ]
