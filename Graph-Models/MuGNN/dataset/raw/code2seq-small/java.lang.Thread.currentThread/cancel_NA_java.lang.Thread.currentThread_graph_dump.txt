Line_21 $$ if (popupWindow != null && popupWindow.isShowing()) -->Line_22 $$ storeLocation(popupWindow.getLocationOnScreen())[ CD ]
Line_37 $$ if (LOG.isDebugEnabled()) -->Line_38 $$ LOG.debug("cancel before show @ " + Thread.currentThread())[ CD ]
Line_17 $$ if (myUseDimServiceForXYLocation) -->Line_19 $$ if (root != null) [ CD ]
Line_10 $$ if (myPopup != null) -->Line_33 $$ if (myInStack) [ CD ]
Line_2 $$ public void cancel(InputEvent e) -->Line_49 $$ if (myProjectDisposable != null) [ CD ]
Line_10 $$ if (myPopup != null) -->Line_42 $$ if (myListeners != null) [ CD ]
Line_3 $$ if (myState == State.CANCEL || myState == State.DISPOSE) -->Line_4 $$ return[ CD ]
Line_19 $$ if (root != null) -->Line_20 $$ final Container popupWindow = root.getParent()[ CD ]
Line_11 $$ if (!canClose()) -->Line_14 $$ return[ CD ]
Line_2 $$ public void cancel(InputEvent e) -->Line_48 $$ Disposer.dispose(this, false)[ CD ]
Line_19 $$ if (root != null) -->Line_21 $$ if (popupWindow != null && popupWindow.isShowing()) [ CD ]
Line_2 $$ public void cancel(InputEvent e) -->Line_10 $$ if (myPopup != null) [ CD ]
Line_18 $$ final JRootPane root = myComponent.getRootPane()-->Line_20 $$ final Container popupWindow = root.getParent()[ FD ]
Line_2 $$ public void cancel(InputEvent e) -->Line_8 $$ if (isDisposed())[ CD ]
Line_2 $$ public void cancel(InputEvent e) -->Line_26 $$ if (e instanceof MouseEvent) [ FD ]
Line_2 $$ public void cancel(InputEvent e) -->Line_3 $$ if (myState == State.CANCEL || myState == State.DISPOSE) [ CD ]
Line_34 $$ if (myFocusTrackback != null) -->Line_37 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_34 $$ if (myFocusTrackback != null) -->Line_36 $$ myFocusTrackback.restoreFocus()[ CD ]
Line_10 $$ if (myPopup != null) -->Line_26 $$ if (e instanceof MouseEvent) [ CD ]
Line_34 $$ if (myFocusTrackback != null) -->Line_35 $$ myFocusTrackback.setForcedRestore(!myOk && myFocusable)[ CD ]
Line_10 $$ if (myPopup != null) -->Line_41 $$ disposePopup()[ CD ]
Line_30 $$ if (ApplicationManagerEx.getApplicationEx() != null) -->Line_31 $$ StackingPopupDispatcher.getInstance().onPopupHidden(this)[ CD ]
Line_20 $$ final Container popupWindow = root.getParent()-->Line_22 $$ storeLocation(popupWindow.getLocationOnScreen())[ FD ]
Line_33 $$ if (myInStack) -->Line_34 $$ if (myFocusTrackback != null) [ CD ]
Line_8 $$ if (isDisposed())-->Line_9 $$ return[ CD ]
Line_26 $$ if (e instanceof MouseEvent) -->Line_27 $$ IdeEventQueue.getInstance().blockNextEvents((MouseEvent) e)[ CD ]
Line_2 $$ public void cancel(InputEvent e) -->Line_6 $$ debugState("cancel popup", State.SHOWN)[ CD ]
Line_17 $$ if (myUseDimServiceForXYLocation) -->Line_18 $$ final JRootPane root = myComponent.getRootPane()[ CD ]
Line_20 $$ final Container popupWindow = root.getParent()-->Line_21 $$ if (popupWindow != null && popupWindow.isShowing()) [ FD ]
Line_10 $$ if (myPopup != null) -->Line_17 $$ if (myUseDimServiceForXYLocation) [ CD ]
Line_10 $$ if (myPopup != null) -->Line_30 $$ if (ApplicationManagerEx.getApplicationEx() != null) [ CD ]
Line_43 $$ for (JBPopupListener each : myListeners) -->Line_44 $$ each.onClosed(new LightweightWindowEvent(this, myOk))[ FD ]
Line_10 $$ if (myPopup != null) -->Line_29 $$ myPopup.hide(false)[ CD ]
Line_18 $$ final JRootPane root = myComponent.getRootPane()-->Line_19 $$ if (root != null) [ FD ]
Line_10 $$ if (myPopup != null) -->Line_16 $$ storeDimensionSize(myContent.getSize())[ CD ]
Line_10 $$ if (myPopup != null) -->Line_11 $$ if (!canClose()) [ CD ]
Line_49 $$ if (myProjectDisposable != null) -->Line_50 $$ Disposer.dispose(myProjectDisposable)[ CD ]
Line_11 $$ if (!canClose()) -->Line_12 $$ debugState("cannot cancel popup", State.CANCEL)[ CD ]
