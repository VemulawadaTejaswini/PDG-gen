Line_2 $$ public void invokedAsynchronously() -->Line_5 $$ testBean.test()[ CD ]
Line_4 $$ ITestBean testBean = context.getBean("target", ITestBean.class)-->Line_5 $$ testBean.test()[ FD ]
Line_2 $$ public void invokedAsynchronously() -->Line_6 $$ Thread mainThread = Thread.currentThread()[ CD ]
Line_2 $$ public void invokedAsynchronously() -->Line_9 $$ assertNotSame(mainThread, asyncThread)[ CD ]
Line_8 $$ Thread asyncThread = testBean.getThread()-->Line_9 $$ assertNotSame(mainThread, asyncThread)[ FD ]
Line_3 $$ ConfigurableApplicationContext context = initContext(new RootBeanDefinition(AsyncAnnotationBeanPostProcessor.class))-->Line_10 $$ context.close()[ FD ]
Line_3 $$ ConfigurableApplicationContext context = initContext(new RootBeanDefinition(AsyncAnnotationBeanPostProcessor.class))-->Line_4 $$ ITestBean testBean = context.getBean("target", ITestBean.class)[ FD ]
Line_2 $$ public void invokedAsynchronously() -->Line_8 $$ Thread asyncThread = testBean.getThread()[ CD ]
Line_2 $$ public void invokedAsynchronously() -->Line_7 $$ testBean.await(3000)[ CD ]
Line_2 $$ public void invokedAsynchronously() -->Line_3 $$ ConfigurableApplicationContext context = initContext(new RootBeanDefinition(AsyncAnnotationBeanPostProcessor.class))[ CD ]
Line_4 $$ ITestBean testBean = context.getBean("target", ITestBean.class)-->Line_7 $$ testBean.await(3000)[ FD ]
Line_4 $$ ITestBean testBean = context.getBean("target", ITestBean.class)-->Line_8 $$ Thread asyncThread = testBean.getThread()[ FD ]
Line_2 $$ public void invokedAsynchronously() -->Line_10 $$ context.close()[ CD ]
Line_6 $$ Thread mainThread = Thread.currentThread()-->Line_9 $$ assertNotSame(mainThread, asyncThread)[ FD ]
Line_2 $$ public void invokedAsynchronously() -->Line_4 $$ ITestBean testBean = context.getBean("target", ITestBean.class)[ CD ]
