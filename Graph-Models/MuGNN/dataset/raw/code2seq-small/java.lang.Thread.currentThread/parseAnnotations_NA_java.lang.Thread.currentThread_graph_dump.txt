Line_11 $$ if ((major >= 1) && (minor >= 5)) -->Line_19 $$ while (itor.hasNext()) [ CD ]
Line_2 $$ public void parseAnnotations() throws Exception -->Line_11 $$ if ((major >= 1) && (minor >= 5)) [ CD ]
Line_2 $$ public void parseAnnotations() throws Exception -->Line_4 $$ String[] version = v.split("\\.")[ CD ]
Line_26 $$ while (itor.hasNext()) -->Line_28 $$ Class filter = getWebAppContext().loadClass(holder.getClassName())[ CD ]
Line_2 $$ public void parseAnnotations() throws Exception -->Line_10 $$ int minor = Integer.parseInt(version[1])[ CD ]
Line_20 $$ ServletHolder holder = (ServletHolder) itor.next()-->Line_28 $$ Class filter = getWebAppContext().loadClass(holder.getClassName())[ FD ]
Line_26 $$ while (itor.hasNext()) -->Line_29 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), filter, null, _injections, _callbacks)[ CD ]
Line_34 $$ Object listener = itor.next()-->Line_35 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), listener.getClass(), null, _injections, _callbacks)[ FD ]
Line_11 $$ if ((major >= 1) && (minor >= 5)) -->Line_16 $$ Method parseAnnotationsMethod = annotationParserClass.getMethod("parseAnnotations", WebAppContext.class, Class.class, RunAsCollection.class, InjectionCollection.class, LifeCycleCallbackCollection.class)[ CD ]
Line_19 $$ while (itor.hasNext()) -->Line_21 $$ Class servlet = getWebAppContext().loadClass(holder.getClassName())[ CD ]
Line_26 $$ while (itor.hasNext()) -->Line_27 $$ FilterHolder holder = (FilterHolder) itor.next()[ CD ]
Line_2 $$ public void parseAnnotations() throws Exception -->Line_5 $$ if (version == null) [ CD ]
Line_16 $$ Method parseAnnotationsMethod = annotationParserClass.getMethod("parseAnnotations", WebAppContext.class, Class.class, RunAsCollection.class, InjectionCollection.class, LifeCycleCallbackCollection.class)-->Line_22 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), servlet, _runAsCollection, _injections, _callbacks)[ FD ]
Line_4 $$ String[] version = v.split("\\.")-->Line_5 $$ if (version == null) [ FD ]
Line_20 $$ ServletHolder holder = (ServletHolder) itor.next()-->Line_21 $$ Class servlet = getWebAppContext().loadClass(holder.getClassName())[ FD ]
Line_11 $$ if ((major >= 1) && (minor >= 5)) -->Line_33 $$ while (itor.hasNext()) [ CD ]
Line_16 $$ Method parseAnnotationsMethod = annotationParserClass.getMethod("parseAnnotations", WebAppContext.class, Class.class, RunAsCollection.class, InjectionCollection.class, LifeCycleCallbackCollection.class)-->Line_29 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), filter, null, _injections, _callbacks)[ FD ]
Line_19 $$ while (itor.hasNext()) -->Line_20 $$ ServletHolder holder = (ServletHolder) itor.next()[ CD ]
Line_19 $$ while (itor.hasNext()) -->Line_22 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), servlet, _runAsCollection, _injections, _callbacks)[ CD ]
Line_3 $$ String v = System.getProperty("java.version")-->Line_4 $$ String[] version = v.split("\\.")[ FD ]
Line_11 $$ if ((major >= 1) && (minor >= 5)) -->Line_38 $$ Log.info("Annotations are not supported on jvms prior to jdk1.5")[ CD ]
Line_11 $$ if ((major >= 1) && (minor >= 5)) -->Line_26 $$ while (itor.hasNext()) [ CD ]
Line_28 $$ Class filter = getWebAppContext().loadClass(holder.getClassName())-->Line_29 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), filter, null, _injections, _callbacks)[ FD ]
Line_2 $$ public void parseAnnotations() throws Exception -->Line_3 $$ String v = System.getProperty("java.version")[ CD ]
Line_2 $$ public void parseAnnotations() throws Exception -->Line_9 $$ int major = Integer.parseInt(version[0])[ CD ]
Line_5 $$ if (version == null) -->Line_6 $$ Log.info("Unable to determine jvm version, annotations will not be supported")[ CD ]
Line_27 $$ FilterHolder holder = (FilterHolder) itor.next()-->Line_28 $$ Class filter = getWebAppContext().loadClass(holder.getClassName())[ FD ]
Line_33 $$ while (itor.hasNext()) -->Line_34 $$ Object listener = itor.next()[ CD ]
Line_5 $$ if (version == null) -->Line_7 $$ return[ CD ]
Line_16 $$ Method parseAnnotationsMethod = annotationParserClass.getMethod("parseAnnotations", WebAppContext.class, Class.class, RunAsCollection.class, InjectionCollection.class, LifeCycleCallbackCollection.class)-->Line_35 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), listener.getClass(), null, _injections, _callbacks)[ FD ]
Line_33 $$ while (itor.hasNext()) -->Line_35 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), listener.getClass(), null, _injections, _callbacks)[ CD ]
Line_21 $$ Class servlet = getWebAppContext().loadClass(holder.getClassName())-->Line_22 $$ parseAnnotationsMethod.invoke(null, getWebAppContext(), servlet, _runAsCollection, _injections, _callbacks)[ FD ]
