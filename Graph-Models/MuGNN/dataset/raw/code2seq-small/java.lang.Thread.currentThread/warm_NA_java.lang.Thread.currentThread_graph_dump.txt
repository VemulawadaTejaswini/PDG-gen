Line_6 $$ final Settings indexSettings = settings.getSettings()-->Line_7 $$ if (!indexSettings.getAsBoolean(INDEX_WARMER_ENABLED, settings.getNodeSettings().getAsBoolean(INDEX_WARMER_ENABLED, true))) [ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_43 $$ shard.warmerService().onPostWarm(took)[ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_7 $$ if (!indexSettings.getAsBoolean(INDEX_WARMER_ENABLED, settings.getNodeSettings().getAsBoolean(INDEX_WARMER_ENABLED, true))) [ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_23 $$ terminationHandles.add(listener.warmTopReader(shard, searcher))[ FD ]
Line_34 $$ if (isTopReader) -->Line_35 $$ logger.warn("top warming has been interrupted", e)[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_7 $$ if (!indexSettings.getAsBoolean(INDEX_WARMER_ENABLED, settings.getNodeSettings().getAsBoolean(INDEX_WARMER_ENABLED, true))) [ FD ]
Line_45 $$ if (isTopReader) -->Line_46 $$ shard.warmerService().logger().trace("top warming took [[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_6 $$ final Settings indexSettings = settings.getSettings()[ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_18 $$ long time = System.nanoTime()[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_3 $$ if (shard.state() == IndexShardState.CLOSED) [ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_25 $$ terminationHandles.add(listener.warmNewReaders(shard, searcher))[ FD ]
Line_11 $$ if (isTopReader) -->Line_14 $$ logger.trace("[ CD ]
Line_34 $$ if (isTopReader) -->Line_37 $$ logger.warn("warming has been interrupted", e)[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_43 $$ shard.warmerService().onPostWarm(took)[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_44 $$ if (shard.warmerService().logger().isTraceEnabled()) [ CD ]
Line_22 $$ if (isTopReader) -->Line_25 $$ terminationHandles.add(listener.warmNewReaders(shard, searcher))[ CD ]
Line_19 $$ final List<TerminationHandle> terminationHandles = new ArrayList()-->Line_23 $$ terminationHandles.add(listener.warmTopReader(shard, searcher))[ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_17 $$ shard.warmerService().onPreWarm()[ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_19 $$ final List<TerminationHandle> terminationHandles = new ArrayList()[ CD ]
Line_11 $$ if (isTopReader) -->Line_12 $$ logger.trace("[ CD ]
Line_45 $$ if (isTopReader) -->Line_48 $$ shard.warmerService().logger().trace("warming took [[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_48 $$ shard.warmerService().logger().trace("warming took [[ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_17 $$ shard.warmerService().onPreWarm()[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_42 $$ long took = System.nanoTime() - time[ CD ]
Line_3 $$ if (shard.state() == IndexShardState.CLOSED) -->Line_4 $$ return[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_6 $$ final Settings indexSettings = settings.getSettings()[ CD ]
Line_7 $$ if (!indexSettings.getAsBoolean(INDEX_WARMER_ENABLED, settings.getNodeSettings().getAsBoolean(INDEX_WARMER_ENABLED, true))) -->Line_8 $$ return[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_46 $$ shard.warmerService().logger().trace("top warming took [[ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_3 $$ if (shard.state() == IndexShardState.CLOSED) [ FD ]
Line_42 $$ long took = System.nanoTime() - time-->Line_43 $$ shard.warmerService().onPostWarm(took)[ FD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_10 $$ if (logger.isTraceEnabled()) [ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_12 $$ logger.trace("[ FD ]
Line_19 $$ final List<TerminationHandle> terminationHandles = new ArrayList()-->Line_25 $$ terminationHandles.add(listener.warmNewReaders(shard, searcher))[ FD ]
Line_10 $$ if (logger.isTraceEnabled()) -->Line_11 $$ if (isTopReader) [ CD ]
Line_22 $$ if (isTopReader) -->Line_23 $$ terminationHandles.add(listener.warmTopReader(shard, searcher))[ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_14 $$ logger.trace("[ FD ]
Line_44 $$ if (shard.warmerService().logger().isTraceEnabled()) -->Line_45 $$ if (isTopReader) [ CD ]
Line_2 $$ public void warm(Engine.Searcher searcher, IndexShard shard, IndexSettings settings, boolean isTopReader) -->Line_44 $$ if (shard.warmerService().logger().isTraceEnabled()) [ FD ]
