Line_14 $$ while (true) -->Line_27 $$ if (LOG.isTraceEnabled()) [ CD ]
Line_14 $$ while (true) -->Line_31 $$ removeEvictable(replica, evictableMmapped)[ CD ]
Line_13 $$ Long evictionTimeNs = Long.valueOf(0)-->Line_33 $$ insertEvictable(evictionTimeNs, replica, evictable)[ FD ]
Line_27 $$ if (LOG.isTraceEnabled()) -->Line_28 $$ String rationale = needMoreSpace ? "because we need more space" : "because it's too old"[ CD ]
Line_15 $$ Entry<Long, ShortCircuitReplica> entry = evictableMmapped.ceilingEntry(evictionTimeNs)-->Line_16 $$ if (entry == null)[ FD ]
Line_14 $$ while (true) -->Line_20 $$ if (evictionTimeMs + maxEvictableMmapedLifespanMs >= now) [ CD ]
Line_14 $$ while (true) -->Line_15 $$ Entry<Long, ShortCircuitReplica> entry = evictableMmapped.ceilingEntry(evictionTimeNs)[ CD ]
Line_14 $$ while (true) -->Line_16 $$ if (entry == null)[ CD ]
Line_18 $$ evictionTimeNs = entry.getKey()-->Line_19 $$ long evictionTimeMs = TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS)[ FD ]
Line_20 $$ if (evictionTimeMs + maxEvictableMmapedLifespanMs >= now) -->Line_21 $$ if (evictableMmapped.size() < maxEvictableMmapedSize) [ CD ]
Line_14 $$ while (true) -->Line_34 $$ numDemoted++[ CD ]
Line_14 $$ while (true) -->Line_19 $$ long evictionTimeMs = TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS)[ CD ]
Line_14 $$ while (true) -->Line_33 $$ insertEvictable(evictionTimeNs, replica, evictable)[ CD ]
Line_13 $$ Long evictionTimeNs = Long.valueOf(0)-->Line_15 $$ Entry<Long, ShortCircuitReplica> entry = evictableMmapped.ceilingEntry(evictionTimeNs)[ FD ]
Line_14 $$ while (true) -->Line_26 $$ ShortCircuitReplica replica = entry.getValue()[ CD ]
Line_27 $$ if (LOG.isTraceEnabled()) -->Line_29 $$ LOG.trace("demoteOldEvictable: demoting " + replica + ": " + rationale + ": " + StringUtils.getStackTrace(Thread.currentThread()))[ CD ]
Line_14 $$ while (true) -->Line_18 $$ evictionTimeNs = entry.getKey()[ CD ]
Line_14 $$ while (true) -->Line_32 $$ munmap(replica)[ CD ]
Line_15 $$ Entry<Long, ShortCircuitReplica> entry = evictableMmapped.ceilingEntry(evictionTimeNs)-->Line_18 $$ evictionTimeNs = entry.getKey()[ FD ]
Line_12 $$ boolean needMoreSpace = false-->Line_24 $$ needMoreSpace = true[ FD ]
Line_26 $$ ShortCircuitReplica replica = entry.getValue()-->Line_33 $$ insertEvictable(evictionTimeNs, replica, evictable)[ FD ]
Line_26 $$ ShortCircuitReplica replica = entry.getValue()-->Line_32 $$ munmap(replica)[ FD ]
Line_13 $$ Long evictionTimeNs = Long.valueOf(0)-->Line_19 $$ long evictionTimeMs = TimeUnit.MILLISECONDS.convert(evictionTimeNs, TimeUnit.NANOSECONDS)[ FD ]
Line_13 $$ Long evictionTimeNs = Long.valueOf(0)-->Line_18 $$ evictionTimeNs = entry.getKey()[ FD ]
Line_18 $$ evictionTimeNs = entry.getKey()-->Line_33 $$ insertEvictable(evictionTimeNs, replica, evictable)[ FD ]
Line_15 $$ Entry<Long, ShortCircuitReplica> entry = evictableMmapped.ceilingEntry(evictionTimeNs)-->Line_26 $$ ShortCircuitReplica replica = entry.getValue()[ FD ]
Line_26 $$ ShortCircuitReplica replica = entry.getValue()-->Line_31 $$ removeEvictable(replica, evictableMmapped)[ FD ]
Line_11 $$ int numDemoted = 0-->Line_34 $$ numDemoted++[ FD ]
Line_20 $$ if (evictionTimeMs + maxEvictableMmapedLifespanMs >= now) -->Line_24 $$ needMoreSpace = true[ CD ]
Line_18 $$ evictionTimeNs = entry.getKey()-->Line_15 $$ Entry<Long, ShortCircuitReplica> entry = evictableMmapped.ceilingEntry(evictionTimeNs)[ FD ]
