Line_18 $$ List<Callable<ThreadStatus>> threads = new ArrayList<Callable<ThreadStatus>>()-->Line_21 $$ threads.add(new Callable<ThreadStatus>() [ FD ]
Line_20 $$ for (int i = 0; i < numThreads; i++) -->Line_21 $$ threads.add(new Callable<ThreadStatus>() [ CD ]
Line_26 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_43 $$ bkjm.close()[ FD ]
Line_8 $$ final NamespaceInfo nsi = newNSInfo()-->Line_28 $$ bkjm.format(nsi)[ FD ]
Line_26 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_41 $$ if (bkjm != null) [ FD ]
Line_17 $$ final int numThreads = 40-->Line_20 $$ for (int i = 0; i < numThreads; i++) [ FD ]
Line_17 $$ final int numThreads = 40-->Line_52 $$ ExecutorService service = Executors.newFixedThreadPool(numThreads)[ FD ]
Line_19 $$ final CyclicBarrier barrier = new CyclicBarrier(numThreads)-->Line_27 $$ barrier.await()[ FD ]
Line_12 $$ for (int i = 1; i < 100 * 2; i += 2) -->Line_14 $$ bkjm.finalizeLogSegment(i, i + 1)[ CD ]
Line_24 $$ BookKeeperJournalManager bkjm = null-->Line_41 $$ if (bkjm != null) [ FD ]
Line_12 $$ for (int i = 1; i < 100 * 2; i += 2) -->Line_13 $$ bkjm.startLogSegment(i, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ CD ]
Line_26 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)-->Line_28 $$ bkjm.format(nsi)[ FD ]
Line_24 $$ BookKeeperJournalManager bkjm = null-->Line_26 $$ bkjm = new BookKeeperJournalManager(conf, uri, nsi)[ FD ]
Line_24 $$ BookKeeperJournalManager bkjm = null-->Line_28 $$ bkjm.format(nsi)[ FD ]
Line_12 $$ for (int i = 1; i < 100 * 2; i += 2) -->Line_14 $$ bkjm.finalizeLogSegment(i, i + 1)[ FD ]
Line_12 $$ for (int i = 1; i < 100 * 2; i += 2) -->Line_13 $$ bkjm.startLogSegment(i, NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION)[ FD ]
Line_8 $$ final NamespaceInfo nsi = newNSInfo()-->Line_11 $$ bkjm.format(nsi)[ FD ]
Line_24 $$ BookKeeperJournalManager bkjm = null-->Line_43 $$ bkjm.close()[ FD ]
Line_12 $$ for (int i = 1; i < 100 * 2; i += 2) -->Line_20 $$ for (int i = 0; i < numThreads; i++) [ FD ]
Line_21 $$ threads.add(new Callable<ThreadStatus>() -->Line_24 $$ BookKeeperJournalManager bkjm = null[ CD ]
Line_18 $$ List<Callable<ThreadStatus>> threads = new ArrayList<Callable<ThreadStatus>>()-->Line_53 $$ List<Future<ThreadStatus>> statuses = service.invokeAll(threads, 60, TimeUnit.SECONDS)[ FD ]
