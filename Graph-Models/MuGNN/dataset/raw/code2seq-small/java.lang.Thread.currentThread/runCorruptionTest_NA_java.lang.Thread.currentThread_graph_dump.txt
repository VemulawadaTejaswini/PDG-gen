Line_13 $$ byte[] res = get(KEY.getBytes())-->Line_18 $$ if (!Arrays.equals(VALUE.getBytes(), res)) [ FD ]
Line_7 $$ executor.execute(new Runnable() -->Line_34 $$ File put = new File(basename + "-put")[ CD ]
Line_5 $$ ExecutorService executor = Executors.newFixedThreadPool(THREADPOOL_SIZE)-->Line_7 $$ executor.execute(new Runnable() [ FD ]
Line_36 $$ try (FileWriter pw = new FileWriter(put)) -->Line_40 $$ pw.write(new String(getdata))[ FD ]
Line_11 $$ for (int i = 0; i < 100000; i++) -->Line_13 $$ byte[] res = get(KEY.getBytes())[ CD ]
Line_11 $$ for (int i = 0; i < 100000; i++) -->Line_12 $$ put(KEY.getBytes(), VALUE.getBytes())[ CD ]
Line_7 $$ executor.execute(new Runnable() -->Line_33 $$ String basename = "bad-data-tid" + Thread.currentThread().getId()[ CD ]
Line_6 $$ for (int i = 0; i < THREADPOOL_SIZE; i++) -->Line_11 $$ for (int i = 0; i < 100000; i++) [ FD ]
Line_7 $$ executor.execute(new Runnable() -->Line_35 $$ File get = new File(basename + "-get")[ CD ]
Line_6 $$ for (int i = 0; i < THREADPOOL_SIZE; i++) -->Line_7 $$ executor.execute(new Runnable() [ CD ]
Line_5 $$ ExecutorService executor = Executors.newFixedThreadPool(THREADPOOL_SIZE)-->Line_49 $$ executor.shutdownNow()[ FD ]
Line_7 $$ executor.execute(new Runnable() -->Line_11 $$ for (int i = 0; i < 100000; i++) [ CD ]
Line_36 $$ try (FileWriter pw = new FileWriter(put)) -->Line_37 $$ pw.write(new String(putdata))[ FD ]
Line_4 $$ final CountDownLatch failure = new CountDownLatch(1)-->Line_46 $$ assert !failure.await(2, TimeUnit.MINUTES)[ FD ]
Line_11 $$ for (int i = 0; i < 100000; i++) -->Line_18 $$ if (!Arrays.equals(VALUE.getBytes(), res)) [ CD ]
