Line_2 $$ public void monitorInput(final Action<? super BuildCancellationToken> operation) -->Line_3 $$ Future<?> handle = null[ CD ]
Line_3 $$ Future<?> handle = null-->Line_23 $$ handle.cancel(true)[ FD ]
Line_22 $$ if (handle != null) -->Line_23 $$ handle.cancel(true)[ CD ]
Line_10 $$ if (c == KEY_CODE_CTRL_D || c == EOF) -->Line_11 $$ cancellationToken.cancel()[ CD ]
Line_3 $$ Future<?> handle = null-->Line_5 $$ handle = executorService.submit(new Runnable() [ FD ]
Line_8 $$ while (!Thread.currentThread().isInterrupted()) -->Line_9 $$ int c = input.read()[ CD ]
Line_3 $$ Future<?> handle = null-->Line_22 $$ if (handle != null) [ FD ]
Line_5 $$ handle = executorService.submit(new Runnable() -->Line_23 $$ handle.cancel(true)[ FD ]
Line_5 $$ handle = executorService.submit(new Runnable() -->Line_22 $$ if (handle != null) [ FD ]
Line_8 $$ while (!Thread.currentThread().isInterrupted()) -->Line_10 $$ if (c == KEY_CODE_CTRL_D || c == EOF) [ CD ]
Line_2 $$ public void monitorInput(final Action<? super BuildCancellationToken> operation) -->Line_20 $$ operation.execute(cancellationToken)[ FD ]
