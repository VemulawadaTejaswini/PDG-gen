Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_5 $$ classLoader = currentThread.getContextClassLoader()[ FD ]
Line_3 $$ if (classLoader == null) -->Line_4 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_9 $$ Constructor<?> constructor = clazz.getConstructor(parameterTypes)-->Line_10 $$ return constructor.newInstance(arguments)[ FD ]
Line_7 $$ Class<?> clazz = classLoader.loadClass(className)-->Line_12 $$ return clazz.newInstance()[ FD ]
Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_7 $$ Class<?> clazz = classLoader.loadClass(className)[ FD ]
Line_8 $$ if ((parameterTypes != null) && (arguments != null) && (parameterTypes.length > 0) && (arguments.length > 0) && (parameterTypes.length == arguments.length)) -->Line_10 $$ return constructor.newInstance(arguments)[ CD ]
Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_8 $$ if ((parameterTypes != null) && (arguments != null) && (parameterTypes.length > 0) && (arguments.length > 0) && (parameterTypes.length == arguments.length)) [ CD ]
Line_7 $$ Class<?> clazz = classLoader.loadClass(className)-->Line_9 $$ Constructor<?> constructor = clazz.getConstructor(parameterTypes)[ FD ]
Line_4 $$ Thread currentThread = Thread.currentThread()-->Line_5 $$ classLoader = currentThread.getContextClassLoader()[ FD ]
Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_7 $$ Class<?> clazz = classLoader.loadClass(className)[ CD ]
Line_3 $$ if (classLoader == null) -->Line_5 $$ classLoader = currentThread.getContextClassLoader()[ CD ]
Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_3 $$ if (classLoader == null) [ FD ]
Line_8 $$ if ((parameterTypes != null) && (arguments != null) && (parameterTypes.length > 0) && (arguments.length > 0) && (parameterTypes.length == arguments.length)) -->Line_12 $$ return clazz.newInstance()[ CD ]
Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_3 $$ if (classLoader == null) [ CD ]
Line_5 $$ classLoader = currentThread.getContextClassLoader()-->Line_7 $$ Class<?> clazz = classLoader.loadClass(className)[ FD ]
Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_9 $$ Constructor<?> constructor = clazz.getConstructor(parameterTypes)[ FD ]
Line_8 $$ if ((parameterTypes != null) && (arguments != null) && (parameterTypes.length > 0) && (arguments.length > 0) && (parameterTypes.length == arguments.length)) -->Line_9 $$ Constructor<?> constructor = clazz.getConstructor(parameterTypes)[ CD ]
Line_2 $$ public static Object newInstance(ClassLoader classLoader, String className, Class<?>[] parameterTypes, Object[] arguments) throws Exception -->Line_10 $$ return constructor.newInstance(arguments)[ FD ]
