Line_2 $$ public static CallSite bootstrap(MethodHandles.Lookup callerLookup, String name, MethodType type, long bindingId) -->Line_5 $$ checkArgument(classLoader instanceof DynamicClassLoader, "Expected %s's classloader to be of type %s", callerLookup.lookupClass().getName(), DynamicClassLoader.class.getName())[ FD ]
Line_6 $$ DynamicClassLoader dynamicClassLoader = (DynamicClassLoader) classLoader-->Line_7 $$ MethodHandle target = dynamicClassLoader.getCallSiteBindings().get(bindingId)[ FD ]
Line_2 $$ public static CallSite bootstrap(MethodHandles.Lookup callerLookup, String name, MethodType type, long bindingId) -->Line_4 $$ ClassLoader classLoader = callerLookup.lookupClass().getClassLoader()[ FD ]
Line_2 $$ public static CallSite bootstrap(MethodHandles.Lookup callerLookup, String name, MethodType type, long bindingId) -->Line_7 $$ MethodHandle target = dynamicClassLoader.getCallSiteBindings().get(bindingId)[ FD ]
Line_2 $$ public static CallSite bootstrap(MethodHandles.Lookup callerLookup, String name, MethodType type, long bindingId) -->Line_8 $$ checkArgument(target != null, "Binding %s for function %s%s not found", bindingId, name, type.parameterList())[ FD ]
Line_11 $$ if (e instanceof InterruptedException) -->Line_12 $$ Thread.currentThread().interrupt()[ CD ]
