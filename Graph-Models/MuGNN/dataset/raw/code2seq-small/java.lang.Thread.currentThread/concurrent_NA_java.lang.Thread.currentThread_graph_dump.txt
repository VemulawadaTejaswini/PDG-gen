Line_4 $$ ServiceExecutor executor = new StampedLockServiceExecutor()-->Line_17 $$ executor.execute(executeTask)[ FD ]
Line_5 $$ ExecutorService service = Executors.newFixedThreadPool(2)-->Line_17 $$ Future<?> executeFuture = service.submit(() -> executor.execute(executeTask))[ FD ]
Line_17 $$ Future<?> executeFuture = service.submit(() -> executor.execute(executeTask))-->Line_25 $$ executeFuture.get()[ FD ]
Line_4 $$ ServiceExecutor executor = new StampedLockServiceExecutor()-->Line_20 $$ executor.close(closeTask)[ FD ]
Line_20 $$ Future<?> closeFuture = service.submit(() -> executor.close(closeTask))-->Line_26 $$ closeFuture.get()[ FD ]
Line_5 $$ ExecutorService service = Executors.newFixedThreadPool(2)-->Line_30 $$ service.shutdownNow()[ FD ]
Line_7 $$ CountDownLatch executeLatch = new CountDownLatch(1)-->Line_11 $$ executeLatch.countDown()[ FD ]
Line_19 $$ Runnable closeTask = mock(Runnable.class)-->Line_20 $$ executor.close(closeTask)[ FD ]
Line_9 $$ Runnable executeTask = () -> -->Line_17 $$ executor.execute(executeTask)[ FD ]
Line_5 $$ ExecutorService service = Executors.newFixedThreadPool(2)-->Line_20 $$ Future<?> closeFuture = service.submit(() -> executor.close(closeTask))[ FD ]
Line_8 $$ CountDownLatch stopLatch = new CountDownLatch(1)-->Line_12 $$ stopLatch.await()[ FD ]
Line_7 $$ CountDownLatch executeLatch = new CountDownLatch(1)-->Line_18 $$ executeLatch.await()[ FD ]
Line_8 $$ CountDownLatch stopLatch = new CountDownLatch(1)-->Line_24 $$ stopLatch.countDown()[ FD ]
