Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_9 $$ context.registerBeanDefinition("asyncTest", listenerDef)[ FD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_7 $$ RootBeanDefinition listenerDef = new RootBeanDefinition(AsyncClassListener.class)[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_12 $$ context.refresh()[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_11 $$ context.registerBeanDefinition("asyncAdvisor", new RootBeanDefinition(AsyncAnnotationAdvisor.class))[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_13 $$ context.close()[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_3 $$ originalThreadName = Thread.currentThread().getName()[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_15 $$ assertEquals(2, listenerCalled)[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_14 $$ Thread.sleep(1000)[ CD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_11 $$ context.registerBeanDefinition("asyncAdvisor", new RootBeanDefinition(AsyncAnnotationAdvisor.class))[ FD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_12 $$ context.refresh()[ FD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_16 $$ assertEquals(2, listenerConstructed)[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_8 $$ listenerDef.setScope(RootBeanDefinition.SCOPE_PROTOTYPE)[ CD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_10 $$ context.registerBeanDefinition("autoProxyCreator", new RootBeanDefinition(DefaultAdvisorAutoProxyCreator.class))[ FD ]
Line_7 $$ RootBeanDefinition listenerDef = new RootBeanDefinition(AsyncClassListener.class)-->Line_9 $$ context.registerBeanDefinition("asyncTest", listenerDef)[ FD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_10 $$ context.registerBeanDefinition("autoProxyCreator", new RootBeanDefinition(DefaultAdvisorAutoProxyCreator.class))[ CD ]
Line_2 $$ public void asyncPrototypeClassListener() throws Exception -->Line_9 $$ context.registerBeanDefinition("asyncTest", listenerDef)[ CD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_13 $$ context.close()[ FD ]
Line_7 $$ RootBeanDefinition listenerDef = new RootBeanDefinition(AsyncClassListener.class)-->Line_8 $$ listenerDef.setScope(RootBeanDefinition.SCOPE_PROTOTYPE)[ FD ]
