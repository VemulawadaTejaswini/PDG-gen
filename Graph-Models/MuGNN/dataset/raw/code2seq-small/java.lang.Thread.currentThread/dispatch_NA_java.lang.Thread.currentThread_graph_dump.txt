Line_2 $$ protected void dispatch(Set<MessageListener> messageListeners, final Message message) -->Line_9 $$ populateThreadLocalsFromMessage(message)[ FD ]
Line_14 $$ if (Thread.currentThread() != currentThread) -->Line_15 $$ ThreadLocalCacheManager.clearAll(Lifecycle.REQUEST)[ CD ]
Line_3 $$ final Thread currentThread = Thread.currentThread()-->Line_14 $$ if (Thread.currentThread() != currentThread) [ FD ]
Line_6 $$ Runnable runnable = new MessageRunnable(message) -->Line_21 $$ threadPoolExecutor.execute(runnable)[ FD ]
Line_4 $$ ThreadPoolExecutor threadPoolExecutor = getThreadPoolExecutor()-->Line_21 $$ threadPoolExecutor.execute(runnable)[ FD ]
Line_14 $$ if (Thread.currentThread() != currentThread) -->Line_16 $$ CentralizedThreadLocal.clearShortLivedThreadLocals()[ CD ]
Line_2 $$ protected void dispatch(Set<MessageListener> messageListeners, final Message message) -->Line_10 $$ messageListener.receive(message)[ FD ]
Line_2 $$ protected void dispatch(Set<MessageListener> messageListeners, final Message message) -->Line_4 $$ ThreadPoolExecutor threadPoolExecutor = getThreadPoolExecutor()[ CD ]
Line_2 $$ protected void dispatch(Set<MessageListener> messageListeners, final Message message) -->Line_3 $$ final Thread currentThread = Thread.currentThread()[ CD ]
Line_5 $$ for (final MessageListener messageListener : messageListeners) -->Line_10 $$ messageListener.receive(message)[ FD ]
