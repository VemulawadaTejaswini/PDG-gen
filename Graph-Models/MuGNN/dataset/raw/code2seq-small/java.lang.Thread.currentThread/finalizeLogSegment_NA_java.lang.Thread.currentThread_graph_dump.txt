Line_2 $$ public void finalizeLogSegment(long firstTxId, long lastTxId) throws IOException -->Line_27 $$ String finalisedPath = finalizedLedgerZNode(firstTxId, lastTxId)[ FD ]
Line_4 $$ String inprogressPath = inprogressZNode(firstTxId)-->Line_38 $$ if (inprogressPath.equals(inprogressPathFromCI)) [ FD ]
Line_4 $$ String inprogressPath = inprogressZNode(firstTxId)-->Line_36 $$ zkc.delete(inprogressPath, inprogressStat.getVersion())[ FD ]
Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)-->Line_12 $$ if (l.getLedgerId() == currentLedger.getId()) [ FD ]
Line_6 $$ Stat inprogressStat = zkc.exists(inprogressPath, false)-->Line_36 $$ zkc.delete(inprogressPath, inprogressStat.getVersion())[ FD ]
Line_38 $$ if (inprogressPath.equals(inprogressPathFromCI)) -->Line_39 $$ ci.clear()[ CD ]
Line_4 $$ String inprogressPath = inprogressZNode(firstTxId)-->Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)[ FD ]
Line_2 $$ public void finalizeLogSegment(long firstTxId, long lastTxId) throws IOException -->Line_4 $$ String inprogressPath = inprogressZNode(firstTxId)[ FD ]
Line_6 $$ Stat inprogressStat = zkc.exists(inprogressPath, false)-->Line_7 $$ if (inprogressStat == null) [ FD ]
Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)-->Line_29 $$ l.write(zkc, finalisedPath)[ FD ]
Line_11 $$ if (currentLedger != null) -->Line_12 $$ if (l.getLedgerId() == currentLedger.getId()) [ CD ]
Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)-->Line_23 $$ if (l.getFirstTxId() != firstTxId) [ FD ]
Line_2 $$ public void finalizeLogSegment(long firstTxId, long lastTxId) throws IOException -->Line_23 $$ if (l.getFirstTxId() != firstTxId) [ FD ]
Line_27 $$ String finalisedPath = finalizedLedgerZNode(firstTxId, lastTxId)-->Line_29 $$ l.write(zkc, finalisedPath)[ FD ]
Line_4 $$ String inprogressPath = inprogressZNode(firstTxId)-->Line_6 $$ Stat inprogressStat = zkc.exists(inprogressPath, false)[ FD ]
Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)-->Line_26 $$ l.finalizeLedger(lastTxId)[ FD ]
Line_2 $$ public void finalizeLogSegment(long firstTxId, long lastTxId) throws IOException -->Line_4 $$ String inprogressPath = inprogressZNode(firstTxId)[ CD ]
Line_2 $$ public void finalizeLogSegment(long firstTxId, long lastTxId) throws IOException -->Line_3 $$ checkEnv()[ CD ]
Line_2 $$ public void finalizeLogSegment(long firstTxId, long lastTxId) throws IOException -->Line_26 $$ l.finalizeLedger(lastTxId)[ FD ]
Line_2 $$ public void finalizeLogSegment(long firstTxId, long lastTxId) throws IOException -->Line_35 $$ maxTxId.store(lastTxId)[ FD ]
Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)-->Line_20 $$ throw new IOException("Active ledger has different ID to inprogress. " + l.getLedgerId() + " found, " + currentLedger.getId() + " expected")[ FD ]
Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)-->Line_24 $$ throw new IOException("Transaction id not as expected, " + l.getFirstTxId() + " found, " + firstTxId + " expected")[ FD ]
Line_10 $$ EditLogLedgerMetadata l = EditLogLedgerMetadata.read(zkc, inprogressPath)-->Line_31 $$ if (!l.verify(zkc, finalisedPath)) [ FD ]
Line_37 $$ String inprogressPathFromCI = ci.read()-->Line_38 $$ if (inprogressPath.equals(inprogressPathFromCI)) [ FD ]
Line_27 $$ String finalisedPath = finalizedLedgerZNode(firstTxId, lastTxId)-->Line_31 $$ if (!l.verify(zkc, finalisedPath)) [ FD ]
