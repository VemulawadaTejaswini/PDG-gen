Line_10 $$ UrlClassLoader.Builder builder = UrlClassLoader.build().urls(filterClassPath(new ArrayList<URL>(classpath))).allowLock().usePersistentClasspathIndexForLocalClassDirectories().useCache()-->Line_12 $$ builder.allowBootstrapResources()[ FD ]
Line_5 $$ Collection<URL> classpath = new LinkedHashSet<URL>()-->Line_7 $$ addIDEALibraries(classpath)[ FD ]
Line_5 $$ Collection<URL> classpath = new LinkedHashSet<URL>()-->Line_6 $$ addParentClasspath(classpath, false)[ FD ]
Line_14 $$ UrlClassLoader newClassLoader = builder.get()-->Line_23 $$ Thread.currentThread().setContextClassLoader(newClassLoader)[ FD ]
Line_10 $$ UrlClassLoader.Builder builder = UrlClassLoader.build().urls(filterClassPath(new ArrayList<URL>(classpath))).allowLock().usePersistentClasspathIndexForLocalClassDirectories().useCache()-->Line_14 $$ UrlClassLoader newClassLoader = builder.get()[ FD ]
Line_5 $$ Collection<URL> classpath = new LinkedHashSet<URL>()-->Line_8 $$ addAdditionalClassPath(classpath)[ FD ]
Line_5 $$ Collection<URL> classpath = new LinkedHashSet<URL>()-->Line_9 $$ addParentClasspath(classpath, true)[ FD ]
Line_11 $$ if (Boolean.valueOf(System.getProperty(PROPERTY_ALLOW_BOOTSTRAP_RESOURCES, "true"))) -->Line_12 $$ builder.allowBootstrapResources()[ CD ]
