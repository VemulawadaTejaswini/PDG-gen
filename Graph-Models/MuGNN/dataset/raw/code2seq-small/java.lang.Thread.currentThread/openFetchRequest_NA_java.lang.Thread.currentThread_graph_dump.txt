Line_8 $$ if (fetchResponse.hasError()) -->Line_10 $$ log.warn("Fetch response has error: %d", errorCode)[ CD ]
Line_3 $$ if (messageAndOffsetIterator == null) -->Line_5 $$ FetchRequest req = new FetchRequestBuilder().clientId("presto-worker-" + Thread.currentThread().getName()).addFetch(split.getTopicName(), split.getPartitionId(), cursorOffset, KAFKA_READ_BUFFER_SIZE).build()[ CD ]
Line_5 $$ FetchRequest req = new FetchRequestBuilder().clientId("presto-worker-" + Thread.currentThread().getName()).addFetch(split.getTopicName(), split.getPartitionId(), cursorOffset, KAFKA_READ_BUFFER_SIZE).build()-->Line_7 $$ FetchResponse fetchResponse = consumer.fetch(req)[ FD ]
Line_9 $$ short errorCode = fetchResponse.errorCode(split.getTopicName(), split.getPartitionId())-->Line_10 $$ log.warn("Fetch response has error: %d", errorCode)[ FD ]
Line_7 $$ FetchResponse fetchResponse = consumer.fetch(req)-->Line_13 $$ messageAndOffsetIterator = fetchResponse.messageSet(split.getTopicName(), split.getPartitionId()).iterator()[ FD ]
Line_6 $$ SimpleConsumer consumer = consumerManager.getConsumer(split.getNodes().get(0))-->Line_7 $$ FetchResponse fetchResponse = consumer.fetch(req)[ FD ]
Line_7 $$ FetchResponse fetchResponse = consumer.fetch(req)-->Line_8 $$ if (fetchResponse.hasError()) [ FD ]
Line_3 $$ if (messageAndOffsetIterator == null) -->Line_13 $$ messageAndOffsetIterator = fetchResponse.messageSet(split.getTopicName(), split.getPartitionId()).iterator()[ CD ]
Line_7 $$ FetchResponse fetchResponse = consumer.fetch(req)-->Line_9 $$ short errorCode = fetchResponse.errorCode(split.getTopicName(), split.getPartitionId())[ FD ]
Line_3 $$ if (messageAndOffsetIterator == null) -->Line_8 $$ if (fetchResponse.hasError()) [ CD ]
Line_3 $$ if (messageAndOffsetIterator == null) -->Line_6 $$ SimpleConsumer consumer = consumerManager.getConsumer(split.getNodes().get(0))[ CD ]
Line_2 $$ private void openFetchRequest() -->Line_3 $$ if (messageAndOffsetIterator == null) [ CD ]
Line_8 $$ if (fetchResponse.hasError()) -->Line_9 $$ short errorCode = fetchResponse.errorCode(split.getTopicName(), split.getPartitionId())[ CD ]
Line_3 $$ if (messageAndOffsetIterator == null) -->Line_4 $$ log.debug("Fetching %d bytes from offset %d (%d - %d). %d messages read so far", KAFKA_READ_BUFFER_SIZE, cursorOffset, split.getStart(), split.getEnd(), totalMessages)[ CD ]
Line_3 $$ if (messageAndOffsetIterator == null) -->Line_7 $$ FetchResponse fetchResponse = consumer.fetch(req)[ CD ]
