Line_5 $$ Server jetty = createJettyServer(keystore, password)-->Line_15 $$ url = new URL(getJettyURL(jetty), "kms")[ FD ]
Line_2 $$ protected void runServer(String keystore, String password, File confDir, KMSCallable callable) throws Exception -->Line_18 $$ callable.call()[ FD ]
Line_15 $$ url = new URL(getJettyURL(jetty), "kms")-->Line_17 $$ callable.kmsUrl = url[ FD ]
Line_8 $$ URL url = cl.getResource("webapp")-->Line_9 $$ if (url == null) [ FD ]
Line_2 $$ protected void runServer(String keystore, String password, File confDir, KMSCallable callable) throws Exception -->Line_3 $$ System.setProperty(KMSConfiguration.KMS_CONFIG_DIR, confDir.getAbsolutePath())[ CD ]
Line_8 $$ URL url = cl.getResource("webapp")-->Line_15 $$ url = new URL(getJettyURL(jetty), "kms")[ FD ]
Line_2 $$ protected void runServer(String keystore, String password, File confDir, KMSCallable callable) throws Exception -->Line_5 $$ Server jetty = createJettyServer(keystore, password)[ FD ]
Line_5 $$ Server jetty = createJettyServer(keystore, password)-->Line_22 $$ jetty.stop()[ FD ]
Line_8 $$ URL url = cl.getResource("webapp")-->Line_17 $$ callable.kmsUrl = url[ FD ]
Line_2 $$ protected void runServer(String keystore, String password, File confDir, KMSCallable callable) throws Exception -->Line_4 $$ System.setProperty("log4j.configuration", "log4j.properties")[ CD ]
Line_8 $$ URL url = cl.getResource("webapp")-->Line_12 $$ WebAppContext context = new WebAppContext(url.getPath(), "/kms")[ FD ]
Line_2 $$ protected void runServer(String keystore, String password, File confDir, KMSCallable callable) throws Exception -->Line_3 $$ System.setProperty(KMSConfiguration.KMS_CONFIG_DIR, confDir.getAbsolutePath())[ FD ]
Line_5 $$ Server jetty = createJettyServer(keystore, password)-->Line_13 $$ jetty.addHandler(context)[ FD ]
Line_12 $$ WebAppContext context = new WebAppContext(url.getPath(), "/kms")-->Line_13 $$ jetty.addHandler(context)[ FD ]
Line_5 $$ Server jetty = createJettyServer(keystore, password)-->Line_20 $$ if (jetty != null && jetty.isRunning()) [ FD ]
Line_7 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_8 $$ URL url = cl.getResource("webapp")[ FD ]
Line_5 $$ Server jetty = createJettyServer(keystore, password)-->Line_14 $$ jetty.start()[ FD ]
Line_2 $$ protected void runServer(String keystore, String password, File confDir, KMSCallable callable) throws Exception -->Line_5 $$ Server jetty = createJettyServer(keystore, password)[ CD ]
