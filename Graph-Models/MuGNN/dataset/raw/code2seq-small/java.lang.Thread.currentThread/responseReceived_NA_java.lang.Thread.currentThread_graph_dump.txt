Line_13 $$ HttpURLConnection urlConnection = (HttpURLConnection) event.getConnectionObject()-->Line_15 $$ String requestMethod = urlConnection.getRequestMethod()[ FD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_14 $$ int contentLength = urlConnection.getContentLength()[ CD ]
Line_16 $$ long threadId = Thread.currentThread().getId()-->Line_17 $$ LOG.debug(String.format("SelfThrottlingIntercept:: ResponseReceived: threadId=%d, Status=%d, Elapsed(ms)=%d, ETAG=%s, contentLength=%d, requestMethod=%s", threadId, statusCode, elapsed, etag, contentLength, requestMethod))[ FD ]
Line_2 $$ public void responseReceived(ResponseReceivedEvent event) -->Line_6 $$ long elapsed = stopDate.getTime() - startDate.getTime()[ CD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_17 $$ LOG.debug(String.format("SelfThrottlingIntercept:: ResponseReceived: threadId=%d, Status=%d, Elapsed(ms)=%d, ETAG=%s, contentLength=%d, requestMethod=%s", threadId, statusCode, elapsed, etag, contentLength, requestMethod))[ CD ]
Line_3 $$ RequestResult result = event.getRequestResult()-->Line_12 $$ String etag = result.getEtag()[ FD ]
Line_12 $$ String etag = result.getEtag()-->Line_17 $$ LOG.debug(String.format("SelfThrottlingIntercept:: ResponseReceived: threadId=%d, Status=%d, Elapsed(ms)=%d, ETAG=%s, contentLength=%d, requestMethod=%s", threadId, statusCode, elapsed, etag, contentLength, requestMethod))[ FD ]
Line_4 $$ Date startDate = result.getStartDate()-->Line_6 $$ long elapsed = stopDate.getTime() - startDate.getTime()[ FD ]
Line_2 $$ public void responseReceived(ResponseReceivedEvent event) -->Line_5 $$ Date stopDate = result.getStopDate()[ CD ]
Line_15 $$ String requestMethod = urlConnection.getRequestMethod()-->Line_17 $$ LOG.debug(String.format("SelfThrottlingIntercept:: ResponseReceived: threadId=%d, Status=%d, Elapsed(ms)=%d, ETAG=%s, contentLength=%d, requestMethod=%s", threadId, statusCode, elapsed, etag, contentLength, requestMethod))[ FD ]
Line_6 $$ long elapsed = stopDate.getTime() - startDate.getTime()-->Line_17 $$ LOG.debug(String.format("SelfThrottlingIntercept:: ResponseReceived: threadId=%d, Status=%d, Elapsed(ms)=%d, ETAG=%s, contentLength=%d, requestMethod=%s", threadId, statusCode, elapsed, etag, contentLength, requestMethod))[ FD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_15 $$ String requestMethod = urlConnection.getRequestMethod()[ CD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_16 $$ long threadId = Thread.currentThread().getId()[ CD ]
Line_14 $$ int contentLength = urlConnection.getContentLength()-->Line_17 $$ LOG.debug(String.format("SelfThrottlingIntercept:: ResponseReceived: threadId=%d, Status=%d, Elapsed(ms)=%d, ETAG=%s, contentLength=%d, requestMethod=%s", threadId, statusCode, elapsed, etag, contentLength, requestMethod))[ FD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_12 $$ String etag = result.getEtag()[ CD ]
Line_3 $$ RequestResult result = event.getRequestResult()-->Line_11 $$ int statusCode = result.getStatusCode()[ FD ]
Line_5 $$ Date stopDate = result.getStopDate()-->Line_6 $$ long elapsed = stopDate.getTime() - startDate.getTime()[ FD ]
Line_2 $$ public void responseReceived(ResponseReceivedEvent event) -->Line_10 $$ if (LOG.isDebugEnabled()) [ CD ]
Line_2 $$ public void responseReceived(ResponseReceivedEvent event) -->Line_3 $$ RequestResult result = event.getRequestResult()[ CD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_11 $$ int statusCode = result.getStatusCode()[ CD ]
Line_10 $$ if (LOG.isDebugEnabled()) -->Line_13 $$ HttpURLConnection urlConnection = (HttpURLConnection) event.getConnectionObject()[ CD ]
Line_2 $$ public void responseReceived(ResponseReceivedEvent event) -->Line_13 $$ HttpURLConnection urlConnection = (HttpURLConnection) event.getConnectionObject()[ FD ]
Line_2 $$ public void responseReceived(ResponseReceivedEvent event) -->Line_4 $$ Date startDate = result.getStartDate()[ CD ]
Line_11 $$ int statusCode = result.getStatusCode()-->Line_17 $$ LOG.debug(String.format("SelfThrottlingIntercept:: ResponseReceived: threadId=%d, Status=%d, Elapsed(ms)=%d, ETAG=%s, contentLength=%d, requestMethod=%s", threadId, statusCode, elapsed, etag, contentLength, requestMethod))[ FD ]
Line_2 $$ public void responseReceived(ResponseReceivedEvent event) -->Line_3 $$ RequestResult result = event.getRequestResult()[ FD ]
Line_3 $$ RequestResult result = event.getRequestResult()-->Line_4 $$ Date startDate = result.getStartDate()[ FD ]
Line_3 $$ RequestResult result = event.getRequestResult()-->Line_5 $$ Date stopDate = result.getStopDate()[ FD ]
Line_13 $$ HttpURLConnection urlConnection = (HttpURLConnection) event.getConnectionObject()-->Line_14 $$ int contentLength = urlConnection.getContentLength()[ FD ]
Line_6 $$ long elapsed = stopDate.getTime() - startDate.getTime()-->Line_8 $$ this.lastE2Elatency = elapsed[ FD ]
