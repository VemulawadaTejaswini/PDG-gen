Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_3 $$ requireNonNull(executor, "executor is null")[ CD ]
Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_4 $$ if (executor.getClass() == GUAVA_SAME_THREAD_EXECUTOR_CLASS) [ FD ]
Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_4 $$ if (executor.getClass() == GUAVA_SAME_THREAD_EXECUTOR_CLASS) [ CD ]
Line_9 $$ executor.execute(new Runnable() -->Line_13 $$ isSameThreadExecutor.set(thisThread == Thread.currentThread())[ CD ]
Line_8 $$ final SettableFuture<Boolean> isSameThreadExecutor = SettableFuture.create()-->Line_13 $$ isSameThreadExecutor.set(thisThread == Thread.currentThread())[ FD ]
Line_4 $$ if (executor.getClass() == GUAVA_SAME_THREAD_EXECUTOR_CLASS) -->Line_5 $$ return true[ CD ]
Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_9 $$ executor.execute(new Runnable() [ CD ]
Line_8 $$ final SettableFuture<Boolean> isSameThreadExecutor = SettableFuture.create()-->Line_17 $$ return Futures.get(isSameThreadExecutor, 10, TimeUnit.SECONDS, Exception.class)[ FD ]
Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_9 $$ executor.execute(new Runnable() [ FD ]
Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_3 $$ requireNonNull(executor, "executor is null")[ FD ]
Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_8 $$ final SettableFuture<Boolean> isSameThreadExecutor = SettableFuture.create()[ CD ]
Line_2 $$ public static boolean isSameThreadExecutor(Executor executor) -->Line_7 $$ final Thread thisThread = Thread.currentThread()[ CD ]
