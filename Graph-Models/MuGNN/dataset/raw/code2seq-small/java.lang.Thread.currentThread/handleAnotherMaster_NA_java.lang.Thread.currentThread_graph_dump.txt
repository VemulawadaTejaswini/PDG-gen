Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_17 $$ logger.warn("failed to send rejoin request to [[ FD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_13 $$ logger.warn("failed to send rejoin request to [[ FD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_10 $$ transportService.connectToNode(otherMaster)[ FD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_5 $$ if (otherClusterStateVersion > localClusterState.version()) [ FD ]
Line_5 $$ if (otherClusterStateVersion > localClusterState.version()) -->Line_8 $$ logger.warn("discovered [[ CD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_11 $$ transportService.sendRequest(otherMaster, DISCOVERY_REJOIN_ACTION_NAME, new RejoinClusterRequest(localClusterState.nodes().localNodeId()), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) [ FD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_3 $$ assert localClusterState.nodes().localNodeMaster() : "handleAnotherMaster called but current node is not a master"[ FD ]
Line_11 $$ transportService.sendRequest(otherMaster, DISCOVERY_REJOIN_ACTION_NAME, new RejoinClusterRequest(localClusterState.nodes().localNodeId()), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_13 $$ logger.warn("failed to send rejoin request to [[ CD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_6 $$ return rejoin(localClusterState, "zen-disco-discovered another master with a new cluster_state [" + otherMaster + "][" + reason + "]")[ FD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_8 $$ logger.warn("discovered [[ FD ]
Line_2 $$ private ClusterState handleAnotherMaster(ClusterState localClusterState, final DiscoveryNode otherMaster, long otherClusterStateVersion, String reason) -->Line_5 $$ if (otherClusterStateVersion > localClusterState.version()) [ CD ]
Line_11 $$ transportService.sendRequest(otherMaster, DISCOVERY_REJOIN_ACTION_NAME, new RejoinClusterRequest(localClusterState.nodes().localNodeId()), new EmptyTransportResponseHandler(ThreadPool.Names.SAME) -->Line_13 $$ logger.warn("failed to send rejoin request to [[ FD ]
Line_5 $$ if (otherClusterStateVersion > localClusterState.version()) -->Line_19 $$ return localClusterState[ CD ]
Line_5 $$ if (otherClusterStateVersion > localClusterState.version()) -->Line_6 $$ return rejoin(localClusterState, "zen-disco-discovered another master with a new cluster_state [" + otherMaster + "][" + reason + "]")[ CD ]
