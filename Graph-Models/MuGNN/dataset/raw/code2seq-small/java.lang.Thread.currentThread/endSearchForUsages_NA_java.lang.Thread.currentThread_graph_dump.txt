Line_32 $$ for (Action action : notFoundActions) -->Line_33 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)[ FD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_12 $$ findStartedBalloonShown.set(false)[ FD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_20 $$ if (myOutOfScopeUsages.get() != 0) [ CD ]
Line_55 $$ List<String> lines = new ArrayList<String>()-->Line_77 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ FD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_17 $$ if (notFoundActions.isEmpty()) [ CD ]
Line_10 $$ if (myProcessPresentation.isCanceled()) -->Line_12 $$ findStartedBalloonShown.set(false)[ CD ]
Line_5 $$ if (usageCount == 0 && myProcessPresentation.isShowNotFoundMessage()) -->Line_45 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) [ CD ]
Line_10 $$ if (myProcessPresentation.isCanceled()) -->Line_13 $$ return[ CD ]
Line_26 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_62 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_34 $$ if (value == null)-->Line_35 $$ value = action.getValue(Action.NAME)[ CD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_28 $$ findStartedBalloonShown.set(false)[ FD ]
Line_45 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_21 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ FD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_81 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_85 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING[ CD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_19 $$ lines.add(StringUtil.escapeXml(message))[ CD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_4 $$ int usageCount = myUsageCountWithoutDefinition.get()[ CD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_50 $$ Usage usage = myFirstUsage.get()[ CD ]
Line_30 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_40 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_33 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)-->Line_34 $$ if (value == null)[ FD ]
Line_32 $$ for (Action action : notFoundActions) -->Line_35 $$ value = action.getValue(Action.NAME)[ FD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_18 $$ List<String> lines = new ArrayList<String>()[ CD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_61 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING[ CD ]
Line_39 $$ if (option > 0) -->Line_40 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ CD ]
Line_30 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_36 $$ titles.add((String) value)[ FD ]
Line_50 $$ Usage usage = myFirstUsage.get()-->Line_52 $$ usage.navigate(true)[ FD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_55 $$ List<String> lines = new ArrayList<String>()[ CD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_62 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ CD ]
Line_61 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_62 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_55 $$ List<String> lines = new ArrayList<String>()-->Line_56 $$ lines.add("Only one usage found.")[ FD ]
Line_38 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())-->Line_40 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_51 $$ if (usage.canNavigate()) -->Line_53 $$ flashUsageScriptaculously(usage)[ CD ]
Line_33 $$ Object value = action.getValue(FindUsagesProcessPresentation.NAME_WITH_MNEMONIC_KEY)-->Line_35 $$ value = action.getValue(Action.NAME)[ FD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_24 $$ lines.add(createOptionsHtml(mySearchFor))[ FD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_77 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ FD ]
Line_15 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_40 $$ notFoundActions.get(option - 1).actionPerformed(new ActionEvent(this, 0, titles.get(option)))[ FD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_10 $$ if (myProcessPresentation.isCanceled()) [ CD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_56 $$ lines.add("Only one usage found.")[ CD ]
Line_61 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_74 $$ lines = Collections.emptyList()-->Line_77 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ FD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_27 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ CD ]
Line_10 $$ if (myProcessPresentation.isCanceled()) -->Line_11 $$ notifyByFindBalloon(null, MessageType.WARNING, myProcessPresentation, myProject, Arrays.asList("Usage search was canceled"))[ CD ]
Line_55 $$ List<String> lines = new ArrayList<String>()-->Line_60 $$ lines.add(createOptionsHtml(mySearchFor))[ FD ]
Line_85 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_30 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_31 $$ titles.add(UsageViewBundle.message("dialog.button.ok"))[ FD ]
Line_91 $$ if (myListener != null) -->Line_92 $$ myListener.findingUsagesFinished(myUsageViewRef.get())[ CD ]
Line_50 $$ Usage usage = myFirstUsage.get()-->Line_51 $$ if (usage.canNavigate()) [ FD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_91 $$ if (myListener != null) [ CD ]
Line_26 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_45 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_67 $$ if (usageView != null) [ CD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_30 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)[ CD ]
Line_50 $$ Usage usage = myFirstUsage.get()-->Line_53 $$ flashUsageScriptaculously(usage)[ FD ]
Line_5 $$ if (usageCount == 0 && myProcessPresentation.isShowNotFoundMessage()) -->Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_20 $$ if (myOutOfScopeUsages.get() != 0) -->Line_21 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ CD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_62 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_55 $$ List<String> lines = new ArrayList<String>()-->Line_58 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ FD ]
Line_45 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_80 $$ if (!myProcessPresentation.getLargeFiles().isEmpty() || myOutOfScopeUsages.get() != 0 || myProcessPresentation.searchIncludingProjectFileUsages() != null) [ CD ]
Line_45 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_73 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) [ CD ]
Line_16 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())-->Line_19 $$ lines.add(StringUtil.escapeXml(message))[ FD ]
Line_23 $$ if (myProcessPresentation.isShowFindOptionsPrompt()) -->Line_24 $$ lines.add(createOptionsHtml(mySearchFor))[ CD ]
Line_67 $$ if (usageView != null) -->Line_68 $$ usageView.drainQueuedUsageNodes()[ CD ]
Line_26 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING-->Line_27 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_39 $$ if (option > 0) [ CD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_26 $$ MessageType type = myOutOfScopeUsages.get() == 0 ? MessageType.INFO : MessageType.WARNING[ CD ]
Line_51 $$ if (usage.canNavigate()) -->Line_52 $$ usage.navigate(true)[ CD ]
Line_74 $$ lines = Collections.emptyList()-->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_57 $$ if (myOutOfScopeUsages.get() != 0) [ CD ]
Line_16 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())-->Line_38 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ FD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_74 $$ lines = Collections.emptyList()[ FD ]
Line_73 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) -->Line_78 $$ hyperlinkListener = createSearchInProjectListener()[ CD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_16 $$ final String message = UsageViewBundle.message("dialog.no.usages.found.in", StringUtil.decapitalize(myPresentation.getUsagesString()), myPresentation.getScopeText(), myPresentation.getContextText())[ CD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_27 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_55 $$ List<String> lines = new ArrayList<String>()-->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_60 $$ lines.add(createOptionsHtml(mySearchFor))[ FD ]
Line_55 $$ List<String> lines = new ArrayList<String>()-->Line_74 $$ lines = Collections.emptyList()[ FD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_56 $$ lines.add("Only one usage found.")[ FD ]
Line_2 $$ private void endSearchForUsages(@NotNull final AtomicBoolean findStartedBalloonShown) -->Line_5 $$ if (usageCount == 0 && myProcessPresentation.isShowNotFoundMessage()) [ CD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_60 $$ lines.add(createOptionsHtml(mySearchFor))[ CD ]
Line_80 $$ if (!myProcessPresentation.getLargeFiles().isEmpty() || myOutOfScopeUsages.get() != 0 || myProcessPresentation.searchIncludingProjectFileUsages() != null) -->Line_81 $$ ApplicationManager.getApplication().invokeLater(new Runnable() [ CD ]
Line_45 $$ if (usageCount == 1 && !myProcessPresentation.isShowPanelIfOnlyOneUsage()) -->Line_66 $$ final UsageViewImpl usageView = myUsageViewRef.get()[ CD ]
Line_77 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())-->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ FD ]
Line_81 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_86 $$ notifyByFindBalloon(hyperlinkListener, type, myProcessPresentation, myProject, lines)[ CD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_23 $$ if (myProcessPresentation.isShowFindOptionsPrompt()) [ CD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_19 $$ lines.add(StringUtil.escapeXml(message))[ FD ]
Line_38 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())-->Line_39 $$ if (option > 0) [ FD ]
Line_73 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) -->Line_74 $$ lines = Collections.emptyList()[ CD ]
Line_15 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_30 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)[ FD ]
Line_30 $$ List<String> titles = new ArrayList<String>(notFoundActions.size() + 1)-->Line_38 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ FD ]
Line_15 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()-->Line_17 $$ if (notFoundActions.isEmpty()) [ FD ]
Line_55 $$ List<String> lines = new ArrayList<String>()-->Line_62 $$ notifyByFindBalloon(createGotToOptionsListener(mySearchFor), type, myProcessPresentation, myProject, lines)[ FD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_28 $$ findStartedBalloonShown.set(false)[ CD ]
Line_18 $$ List<String> lines = new ArrayList<String>()-->Line_58 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ FD ]
Line_73 $$ if (myOutOfScopeUsages.get() == 0 || getPsiElement(mySearchFor) == null) -->Line_77 $$ lines = Arrays.asList(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf), createSearchInProjectHtml())[ CD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_31 $$ titles.add(UsageViewBundle.message("dialog.button.ok"))[ CD ]
Line_6 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_15 $$ final List<Action> notFoundActions = myProcessPresentation.getNotFoundActions()[ CD ]
Line_57 $$ if (myOutOfScopeUsages.get() != 0) -->Line_58 $$ lines.add(UsageViewManagerImpl.outOfScopeMessage(myOutOfScopeUsages.get(), mySearchScopeToWarnOfFallingOutOf))[ CD ]
Line_67 $$ if (usageView != null) -->Line_69 $$ usageView.setSearchInProgress(false)[ CD ]
Line_17 $$ if (notFoundActions.isEmpty()) -->Line_38 $$ int option = Messages.showDialog(myProject, message, UsageViewBundle.message("dialog.title.information"), ArrayUtil.toStringArray(titles), 0, Messages.getInformationIcon())[ CD ]
Line_46 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_51 $$ if (usage.canNavigate()) [ CD ]
