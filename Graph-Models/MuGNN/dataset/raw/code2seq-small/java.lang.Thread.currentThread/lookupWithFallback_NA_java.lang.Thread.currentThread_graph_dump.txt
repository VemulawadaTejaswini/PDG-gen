Line_3 $$ ClassLoader originalClassLoader = ClassUtils.overrideThreadContextClassLoader(this.beanClassLoader)-->Line_19 $$ if (originalClassLoader != null) [ FD ]
Line_3 $$ ClassLoader originalClassLoader = ClassUtils.overrideThreadContextClassLoader(this.beanClassLoader)-->Line_20 $$ Thread.currentThread().setContextClassLoader(originalClassLoader)[ FD ]
Line_9 $$ if (this.defaultObject != null) -->Line_10 $$ if (logger.isDebugEnabled()) [ CD ]
Line_2 $$ protected Object lookupWithFallback() throws NamingException -->Line_3 $$ ClassLoader originalClassLoader = ClassUtils.overrideThreadContextClassLoader(this.beanClassLoader)[ CD ]
Line_9 $$ if (this.defaultObject != null) -->Line_15 $$ return this.defaultObject[ CD ]
Line_19 $$ if (originalClassLoader != null) -->Line_20 $$ Thread.currentThread().setContextClassLoader(originalClassLoader)[ CD ]
Line_10 $$ if (logger.isDebugEnabled()) -->Line_11 $$ logger.debug("JNDI lookup failed - returning specified default object instead", ex)[ CD ]
Line_10 $$ if (logger.isDebugEnabled()) -->Line_12 $$ if (logger.isInfoEnabled()) [ CD ]
Line_12 $$ if (logger.isInfoEnabled()) -->Line_13 $$ logger.info("JNDI lookup failed - returning specified default object instead: " + ex)[ CD ]
