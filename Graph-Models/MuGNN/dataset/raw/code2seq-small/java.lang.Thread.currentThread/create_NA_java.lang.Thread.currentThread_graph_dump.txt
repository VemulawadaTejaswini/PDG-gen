Line_11 $$ final Call call = queue.first.take()-->Line_12 $$ if (call != null) [ FD ]
Line_5 $$ final Thread thread = new Thread("Async Invocation Thread for " + process) -->Line_32 $$ thread.interrupt()[ FD ]
Line_29 $$ if (!disposed) -->Line_30 $$ disposed = true[ CD ]
Line_10 $$ while (!Thread.currentThread().isInterrupted()) -->Line_11 $$ final Call call = queue.first.take()[ CD ]
Line_11 $$ final Call call = queue.first.take()-->Line_13 $$ queue.second.offer(call.invoke())[ FD ]
Line_23 $$ final Disposable d = new Disposable() -->Line_29 $$ if (!disposed) [ CD ]
Line_29 $$ if (!disposed) -->Line_31 $$ ref.set(true)[ CD ]
Line_12 $$ if (call != null) -->Line_13 $$ queue.second.offer(call.invoke())[ CD ]
Line_68 $$ if (alarm.isDisposed()) -->Line_69 $$ return[ CD ]
Line_36 $$ process.addProcessListener(new ProcessAdapter() -->Line_47 $$ if (!willBeDestroyed) [ FD ]
Line_5 $$ final Thread thread = new Thread("Async Invocation Thread for " + process) -->Line_21 $$ thread.start()[ FD ]
Line_56 $$ final Runnable watchdog = new Runnable() -->Line_60 $$ ref.set(true)[ CD ]
Line_10 $$ while (!Thread.currentThread().isInterrupted()) -->Line_12 $$ if (call != null) [ CD ]
Line_29 $$ if (!disposed) -->Line_32 $$ thread.interrupt()[ CD ]
Line_36 $$ process.addProcessListener(new ProcessAdapter() -->Line_47 $$ if (!willBeDestroyed) [ CD ]
