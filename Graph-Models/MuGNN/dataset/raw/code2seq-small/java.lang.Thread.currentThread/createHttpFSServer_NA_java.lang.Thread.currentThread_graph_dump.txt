Line_13 $$ Writer w = new FileWriter(secretFile)-->Line_14 $$ w.write("secret")[ FD ]
Line_22 $$ Configuration conf = new Configuration(false)-->Line_34 $$ conf.set("httpfs.proxyuser." + HadoopUsersConfTestHelper.getHadoopProxyUser() + ".hosts", HadoopUsersConfTestHelper.getHadoopProxyUserHosts())[ FD ]
Line_46 $$ Server server = TestJettyHelper.getJettyServer()-->Line_48 $$ server.start()[ FD ]
Line_37 $$ os = new FileOutputStream(httpfsSite)-->Line_39 $$ os.close()[ FD ]
Line_41 $$ URL url = cl.getResource("webapp")-->Line_45 $$ WebAppContext context = new WebAppContext(url.getPath(), "/webhdfs")[ FD ]
Line_27 $$ OutputStream os = new FileOutputStream(hdfsSite)-->Line_28 $$ conf.writeXml(os)[ FD ]
Line_22 $$ Configuration conf = new Configuration(false)-->Line_32 $$ conf.set("httpfs.hadoop.config.dir", hadoopConfDir.toString())[ FD ]
Line_22 $$ Configuration conf = new Configuration(false)-->Line_33 $$ conf.set("httpfs.proxyuser." + HadoopUsersConfTestHelper.getHadoopProxyUser() + ".groups", HadoopUsersConfTestHelper.getHadoopProxyUserGroups())[ FD ]
Line_45 $$ WebAppContext context = new WebAppContext(url.getPath(), "/webhdfs")-->Line_47 $$ server.addHandler(context)[ FD ]
Line_22 $$ Configuration conf = new Configuration(false)-->Line_23 $$ conf.set(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY, fsDefaultName)[ FD ]
Line_12 $$ File secretFile = new File(new File(homeDir, "conf"), "secret")-->Line_35 $$ conf.set("httpfs.authentication.signature.secret.file", secretFile.getAbsolutePath())[ FD ]
Line_27 $$ OutputStream os = new FileOutputStream(hdfsSite)-->Line_29 $$ os.close()[ FD ]
Line_27 $$ OutputStream os = new FileOutputStream(hdfsSite)-->Line_37 $$ os = new FileOutputStream(httpfsSite)[ FD ]
Line_37 $$ os = new FileOutputStream(httpfsSite)-->Line_38 $$ conf.writeXml(os)[ FD ]
Line_41 $$ URL url = cl.getResource("webapp")-->Line_42 $$ if (url == null) [ FD ]
Line_27 $$ OutputStream os = new FileOutputStream(hdfsSite)-->Line_38 $$ conf.writeXml(os)[ FD ]
Line_22 $$ Configuration conf = new Configuration(false)-->Line_28 $$ conf.writeXml(os)[ FD ]
Line_46 $$ Server server = TestJettyHelper.getJettyServer()-->Line_47 $$ server.addHandler(context)[ FD ]
Line_7 $$ File homeDir = TestDirHelper.getTestDir()-->Line_11 $$ HttpFSServerWebApp.setHomeDirForCurrentThread(homeDir.getAbsolutePath())[ FD ]
Line_13 $$ Writer w = new FileWriter(secretFile)-->Line_15 $$ w.close()[ FD ]
Line_21 $$ String fsDefaultName = nnConf.get(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY)-->Line_23 $$ conf.set(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY, fsDefaultName)[ FD ]
Line_22 $$ Configuration conf = new Configuration(false)-->Line_38 $$ conf.writeXml(os)[ FD ]
Line_27 $$ OutputStream os = new FileOutputStream(hdfsSite)-->Line_39 $$ os.close()[ FD ]
Line_22 $$ Configuration conf = new Configuration(false)-->Line_35 $$ conf.set("httpfs.authentication.signature.secret.file", secretFile.getAbsolutePath())[ FD ]
Line_40 $$ ClassLoader cl = Thread.currentThread().getContextClassLoader()-->Line_41 $$ URL url = cl.getResource("webapp")[ FD ]
