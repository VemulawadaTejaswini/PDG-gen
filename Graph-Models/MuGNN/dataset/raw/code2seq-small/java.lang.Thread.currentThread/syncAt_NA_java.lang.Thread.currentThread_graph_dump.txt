Line_13 $$ ClockTickImpl clockTick = getTick(tick)-->Line_15 $$ throw new RuntimeException(String.format("Cannot wait for %s, as clock is currently at %s.", clockTick, currentTick))[ FD ]
Line_36 $$ if (clockTick.isImmediatelyAfter(currentTick)) -->Line_38 $$ synching.clear()[ CD ]
Line_13 $$ ClockTickImpl clockTick = getTick(tick)-->Line_14 $$ if (!clockTick.isImmediatelyAfter(currentTick)) [ FD ]
Line_13 $$ ClockTickImpl clockTick = getTick(tick)-->Line_27 $$ throw new RuntimeException(String.format("Timeout waiting for all threads to reach %s. Currently at %s.", clockTick, currentTick))[ FD ]
Line_25 $$ boolean signalled = condition.awaitUntil(expiry)-->Line_26 $$ if (!signalled) [ FD ]
Line_13 $$ ClockTickImpl clockTick = getTick(tick)-->Line_36 $$ if (clockTick.isImmediatelyAfter(currentTick)) [ FD ]
Line_13 $$ ClockTickImpl clockTick = getTick(tick)-->Line_34 $$ throw new RuntimeException(String.format("Could not wait for all threads to reach %s, as a failure has occurred in another test thread.", clockTick))[ FD ]
Line_20 $$ Date expiry = new Date(System.currentTimeMillis() + MAX_WAIT_TIME)-->Line_25 $$ boolean signalled = condition.awaitUntil(expiry)[ FD ]
Line_13 $$ ClockTickImpl clockTick = getTick(tick)-->Line_23 $$ while (failures.isEmpty() && currentTick != clockTick && !clockTick.allThreadsSynced(synching, active)) [ FD ]
