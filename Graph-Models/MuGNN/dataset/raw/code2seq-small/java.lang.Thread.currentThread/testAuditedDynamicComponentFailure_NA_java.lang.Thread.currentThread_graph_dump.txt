Line_7 $$ final String auditStrategy = getAuditStrategy()-->Line_8 $$ if (!StringTools.isEmpty(auditStrategy)) [ FD ]
Line_11 $$ final ServiceRegistry serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(config.getProperties())-->Line_18 $$ ServiceRegistryBuilder.destroy(serviceRegistry)[ FD ]
Line_8 $$ if (!StringTools.isEmpty(auditStrategy)) -->Line_9 $$ config.setProperty(EnversSettings.AUDIT_STRATEGY, auditStrategy)[ CD ]
Line_7 $$ final String auditStrategy = getAuditStrategy()-->Line_9 $$ config.setProperty(EnversSettings.AUDIT_STRATEGY, auditStrategy)[ FD ]
Line_4 $$ final Configuration config = new Configuration()-->Line_6 $$ config.addFile(new File(hbm.toURI()))[ FD ]
Line_5 $$ final URL hbm = Thread.currentThread().getContextClassLoader().getResource("mappings/dynamicComponents/mapAudited.hbm.xml")-->Line_6 $$ config.addFile(new File(hbm.toURI()))[ FD ]
Line_11 $$ final ServiceRegistry serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(config.getProperties())-->Line_13 $$ config.buildSessionFactory(serviceRegistry)[ FD ]
Line_4 $$ final Configuration config = new Configuration()-->Line_9 $$ config.setProperty(EnversSettings.AUDIT_STRATEGY, auditStrategy)[ FD ]
Line_4 $$ final Configuration config = new Configuration()-->Line_11 $$ final ServiceRegistry serviceRegistry = ServiceRegistryBuilder.buildServiceRegistry(config.getProperties())[ FD ]
Line_4 $$ final Configuration config = new Configuration()-->Line_13 $$ config.buildSessionFactory(serviceRegistry)[ FD ]
