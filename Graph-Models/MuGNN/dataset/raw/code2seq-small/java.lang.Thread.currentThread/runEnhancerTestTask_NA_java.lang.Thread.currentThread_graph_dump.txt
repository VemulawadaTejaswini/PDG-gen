Line_12 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_13 $$ taskObject.prepare()[ FD ]
Line_8 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_12 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()[ FD ]
Line_5 $$ EnhancerTestTask taskObject = null-->Line_14 $$ taskObject.execute()[ FD ]
Line_8 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_11 $$ Thread.currentThread().setContextClassLoader(cl)[ FD ]
Line_8 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_9 $$ EnhancerTestUtils.setupClassLoader(cl, task)[ FD ]
Line_6 $$ ClassLoader defaultCL = Thread.currentThread().getContextClassLoader()-->Line_24 $$ Thread.currentThread().setContextClassLoader(defaultCL)[ FD ]
Line_5 $$ EnhancerTestTask taskObject = null-->Line_13 $$ taskObject.prepare()[ FD ]
Line_12 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_20 $$ taskObject.complete()[ FD ]
Line_5 $$ EnhancerTestTask taskObject = null-->Line_20 $$ taskObject.complete()[ FD ]
Line_12 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_19 $$ if (taskObject != null) [ FD ]
Line_12 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()-->Line_14 $$ taskObject.execute()[ FD ]
Line_8 $$ ClassLoader cl = EnhancerTestUtils.getEnhancerClassLoader(task.getPackage().getName())-->Line_10 $$ EnhancerTestUtils.setupClassLoader(cl, task.newInstance().getAnnotatedClasses())[ FD ]
Line_5 $$ EnhancerTestTask taskObject = null-->Line_19 $$ if (taskObject != null) [ FD ]
Line_19 $$ if (taskObject != null) -->Line_20 $$ taskObject.complete()[ CD ]
Line_5 $$ EnhancerTestTask taskObject = null-->Line_12 $$ taskObject = ((Class<? extends EnhancerTestTask>) cl.loadClass(task.getName())).newInstance()[ FD ]
