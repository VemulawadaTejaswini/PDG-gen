Line_17 $$ long numBytes = rbw.getNumBytes()-->Line_21 $$ if (numBytes > bytesAcked) [ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_10 $$ rbw.stopWriter(datanode.getDnConf().getXceiverStopTimeout())[ CD ]
Line_16 $$ long bytesAcked = rbw.getBytesAcked()-->Line_21 $$ if (numBytes > bytesAcked) [ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_27 $$ bumpReplicaGS(rbw, newGS)[ FD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_11 $$ rbw.setWriter(Thread.currentThread())[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_11 $$ rbw.setWriter(Thread.currentThread())[ CD ]
Line_16 $$ long bytesAcked = rbw.getBytesAcked()-->Line_24 $$ rbw.setNumBytes(bytesAcked)[ FD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_24 $$ rbw.setNumBytes(bytesAcked)[ FD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_16 $$ long bytesAcked = rbw.getBytesAcked()[ FD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_10 $$ rbw.stopWriter(datanode.getDnConf().getXceiverStopTimeout())[ FD ]
Line_21 $$ if (numBytes > bytesAcked) -->Line_24 $$ rbw.setNumBytes(bytesAcked)[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_13 $$ if (replicaGenerationStamp < b.getGenerationStamp() || replicaGenerationStamp > newGS) [ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_3 $$ LOG.info("Recover RBW replica " + b)[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_9 $$ LOG.info("Recovering " + rbw)[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_17 $$ long numBytes = rbw.getNumBytes()[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_4 $$ ReplicaInfo replicaInfo = getReplicaInfo(b.getBlockPoolId(), b.getBlockId())[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_21 $$ if (numBytes > bytesAcked) [ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_4 $$ ReplicaInfo replicaInfo = getReplicaInfo(b.getBlockPoolId(), b.getBlockId())[ CD ]
Line_22 $$ final File replicafile = rbw.getBlockFile()-->Line_23 $$ truncateBlock(replicafile, rbw.getMetaFile(), numBytes, bytesAcked)[ FD ]
Line_16 $$ long bytesAcked = rbw.getBytesAcked()-->Line_25 $$ rbw.setLastChecksumAndDataLen(bytesAcked, null)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_27 $$ bumpReplicaGS(rbw, newGS)[ CD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_25 $$ rbw.setLastChecksumAndDataLen(bytesAcked, null)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_16 $$ long bytesAcked = rbw.getBytesAcked()[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_18 $$ if (bytesAcked < minBytesRcvd || numBytes > maxBytesRcvd) [ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo[ CD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_23 $$ truncateBlock(replicafile, rbw.getMetaFile(), numBytes, bytesAcked)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_5 $$ if (replicaInfo.getState() != ReplicaState.RBW) [ CD ]
Line_21 $$ if (numBytes > bytesAcked) -->Line_25 $$ rbw.setLastChecksumAndDataLen(bytesAcked, null)[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_28 $$ return rbw[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_14 $$ throw new ReplicaNotFoundException(ReplicaNotFoundException.UNEXPECTED_GS_REPLICA + b + ". Expected GS range is [" + b.getGenerationStamp() + ", " + newGS + "].")[ FD ]
Line_21 $$ if (numBytes > bytesAcked) -->Line_22 $$ final File replicafile = rbw.getBlockFile()[ CD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_22 $$ final File replicafile = rbw.getBlockFile()[ FD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_12 $$ long replicaGenerationStamp = rbw.getGenerationStamp()[ FD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_17 $$ long numBytes = rbw.getNumBytes()[ FD ]
Line_16 $$ long bytesAcked = rbw.getBytesAcked()-->Line_23 $$ truncateBlock(replicafile, rbw.getMetaFile(), numBytes, bytesAcked)[ FD ]
Line_8 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_27 $$ bumpReplicaGS(rbw, newGS)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_13 $$ if (replicaGenerationStamp < b.getGenerationStamp() || replicaGenerationStamp > newGS) [ FD ]
Line_17 $$ long numBytes = rbw.getNumBytes()-->Line_23 $$ truncateBlock(replicafile, rbw.getMetaFile(), numBytes, bytesAcked)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline recoverRbw(ExtendedBlock b, long newGS, long minBytesRcvd, long maxBytesRcvd) throws IOException -->Line_12 $$ long replicaGenerationStamp = rbw.getGenerationStamp()[ CD ]
Line_21 $$ if (numBytes > bytesAcked) -->Line_23 $$ truncateBlock(replicafile, rbw.getMetaFile(), numBytes, bytesAcked)[ CD ]
Line_4 $$ ReplicaInfo replicaInfo = getReplicaInfo(b.getBlockPoolId(), b.getBlockId())-->Line_5 $$ if (replicaInfo.getState() != ReplicaState.RBW) [ FD ]
