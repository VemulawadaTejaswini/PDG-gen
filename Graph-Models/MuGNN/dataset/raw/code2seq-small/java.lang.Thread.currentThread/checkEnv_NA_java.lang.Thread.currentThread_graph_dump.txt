Line_15 $$ VersionProto vp = builder.build()-->Line_18 $$ NamespaceInfo readns = PBHelper.convert(vp.getNamespaceInfo())[ FD ]
Line_19 $$ if (nsInfo.getNamespaceID() != readns.getNamespaceID() || !nsInfo.clusterID.equals(readns.getClusterID()) || !nsInfo.getBlockPoolID().equals(readns.getBlockPoolID())) -->Line_20 $$ String err = String.format("Environment mismatch. Running process %s" + ", stored in ZK %s", nsInfo, readns)[ CD ]
Line_20 $$ String err = String.format("Environment mismatch. Running process %s" + ", stored in ZK %s", nsInfo, readns)-->Line_21 $$ LOG.error(err)[ FD ]
Line_5 $$ Stat versionStat = zkc.exists(versionPath, false)-->Line_9 $$ byte[] d = zkc.getData(versionPath, false, versionStat)[ FD ]
Line_5 $$ Stat versionStat = zkc.exists(versionPath, false)-->Line_6 $$ if (versionStat == null) [ FD ]
Line_10 $$ VersionProto.Builder builder = VersionProto.newBuilder()-->Line_12 $$ if (!builder.isInitialized()) [ FD ]
Line_18 $$ NamespaceInfo readns = PBHelper.convert(vp.getNamespaceInfo())-->Line_19 $$ if (nsInfo.getNamespaceID() != readns.getNamespaceID() || !nsInfo.clusterID.equals(readns.getClusterID()) || !nsInfo.getBlockPoolID().equals(readns.getBlockPoolID())) [ FD ]
Line_18 $$ NamespaceInfo readns = PBHelper.convert(vp.getNamespaceInfo())-->Line_20 $$ String err = String.format("Environment mismatch. Running process %s" + ", stored in ZK %s", nsInfo, readns)[ FD ]
Line_2 $$ private synchronized void checkEnv() throws IOException -->Line_3 $$ if (!initialized) [ CD ]
Line_19 $$ if (nsInfo.getNamespaceID() != readns.getNamespaceID() || !nsInfo.clusterID.equals(readns.getClusterID()) || !nsInfo.getBlockPoolID().equals(readns.getBlockPoolID())) -->Line_21 $$ LOG.error(err)[ CD ]
Line_10 $$ VersionProto.Builder builder = VersionProto.newBuilder()-->Line_15 $$ VersionProto vp = builder.build()[ FD ]
Line_10 $$ VersionProto.Builder builder = VersionProto.newBuilder()-->Line_11 $$ TextFormat.merge(new String(d, UTF_8), builder)[ FD ]
