Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_19 $$ StartException exception = targetController.getStartException()[ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_16 $$ monitor.removeController(targetController)[ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_8 $$ Mode targetMode = modeToggle.get(targetState).get(targetController.getMode())[ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_3 $$ if (targetController.getState() == targetState)[ FD ]
Line_19 $$ StartException exception = targetController.getStartException()-->Line_20 $$ if (exception != null) [ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_6 $$ monitor.addController(targetController)[ CD ]
Line_5 $$ StabilityMonitor monitor = new StabilityMonitor()-->Line_16 $$ monitor.removeController(targetController)[ FD ]
Line_8 $$ Mode targetMode = modeToggle.get(targetState).get(targetController.getMode())-->Line_10 $$ targetController.setMode(targetMode)[ FD ]
Line_8 $$ Mode targetMode = modeToggle.get(targetState).get(targetController.getMode())-->Line_9 $$ if (targetMode != null) [ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_10 $$ targetController.setMode(targetMode)[ FD ]
Line_3 $$ if (targetController.getState() == targetState)-->Line_4 $$ return[ CD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_6 $$ monitor.addController(targetController)[ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_3 $$ if (targetController.getState() == targetState)[ CD ]
Line_5 $$ StabilityMonitor monitor = new StabilityMonitor()-->Line_12 $$ monitor.awaitStability()[ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_18 $$ if (targetState == State.UP) [ FD ]
Line_5 $$ StabilityMonitor monitor = new StabilityMonitor()-->Line_6 $$ monitor.addController(targetController)[ FD ]
Line_18 $$ if (targetState == State.UP) -->Line_20 $$ if (exception != null) [ CD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_18 $$ if (targetState == State.UP) [ CD ]
Line_9 $$ if (targetMode != null) -->Line_10 $$ targetController.setMode(targetMode)[ CD ]
Line_18 $$ if (targetState == State.UP) -->Line_19 $$ StartException exception = targetController.getStartException()[ CD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_5 $$ StabilityMonitor monitor = new StabilityMonitor()[ CD ]
