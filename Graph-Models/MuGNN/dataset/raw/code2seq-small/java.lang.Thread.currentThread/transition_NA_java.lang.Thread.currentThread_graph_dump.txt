Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_20 $$ if (targetState == State.UP) [ FD ]
Line_20 $$ if (targetState == State.UP) -->Line_22 $$ if (exception != null) [ CD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_7 $$ monitor.addController(targetController)[ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_12 $$ targetController.setMode(targetMode)[ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_18 $$ monitor.removeController(targetController)[ FD ]
Line_11 $$ if (targetMode != null) -->Line_12 $$ targetController.setMode(targetMode)[ CD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_6 $$ StabilityMonitor monitor = new StabilityMonitor()[ CD ]
Line_6 $$ StabilityMonitor monitor = new StabilityMonitor()-->Line_18 $$ monitor.removeController(targetController)[ FD ]
Line_6 $$ StabilityMonitor monitor = new StabilityMonitor()-->Line_14 $$ monitor.awaitStability()[ FD ]
Line_6 $$ StabilityMonitor monitor = new StabilityMonitor()-->Line_7 $$ monitor.addController(targetController)[ FD ]
Line_21 $$ StartException exception = targetController.getStartException()-->Line_22 $$ if (exception != null) [ FD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_20 $$ if (targetState == State.UP) [ CD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_7 $$ monitor.addController(targetController)[ CD ]
Line_20 $$ if (targetState == State.UP) -->Line_21 $$ StartException exception = targetController.getStartException()[ CD ]
Line_2 $$ private static <T> void transition(final ServiceController<T> targetController, final State targetState) throws StartException -->Line_21 $$ StartException exception = targetController.getStartException()[ FD ]
