Line_79 $$ for (int i = clients; i > 1; i -= killMax) -->Line_80 $$ Thread.sleep(cleanupInterval)[ CD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_99 $$ server.stop()[ FD ]
Line_16 $$ final CyclicBarrier callBarrier = new CyclicBarrier(clients)-->Line_34 $$ callBarrier.await()[ FD ]
Line_18 $$ final AtomicBoolean error = new AtomicBoolean()-->Line_81 $$ assertFalse(error.get())[ FD ]
Line_18 $$ final AtomicBoolean error = new AtomicBoolean()-->Line_86 $$ assertFalse(error.get())[ FD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_82 $$ assertEquals(i, server.getNumOpenConnections())[ FD ]
Line_95 $$ if (t != null) -->Line_96 $$ t.interrupt()[ CD ]
Line_18 $$ final AtomicBoolean error = new AtomicBoolean()-->Line_91 $$ assertFalse(error.get())[ FD ]
Line_79 $$ for (int i = clients; i > 1; i -= killMax) -->Line_81 $$ assertFalse(error.get())[ CD ]
Line_8 $$ final int killMax = 3-->Line_13 $$ conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_KILL_MAX_KEY, killMax)[ FD ]
Line_49 $$ threads[i] = new Thread(new Runnable() -->Line_53 $$ Client client = new Client(LongWritable.class, clientConf)[ CD ]
Line_18 $$ final AtomicBoolean error = new AtomicBoolean()-->Line_68 $$ assertFalse(error.get())[ FD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_42 $$ server.start()[ FD ]
Line_15 $$ final CyclicBarrier firstCallBarrier = new CyclicBarrier(2)-->Line_32 $$ firstCallBarrier.await()[ FD ]
Line_18 $$ final AtomicBoolean error = new AtomicBoolean()-->Line_38 $$ error.set(true)[ FD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_87 $$ assertEquals(1, server.getNumOpenConnections())[ FD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_69 $$ assertEquals(clients, server.getNumOpenConnections())[ FD ]
Line_48 $$ for (int i = 0; i < clients; i++) -->Line_49 $$ threads[i] = new Thread(new Runnable() [ CD ]
Line_79 $$ for (int i = clients; i > 1; i -= killMax) -->Line_82 $$ assertEquals(i, server.getNumOpenConnections())[ CD ]
Line_48 $$ for (int i = 0; i < clients; i++) -->Line_79 $$ for (int i = clients; i > 1; i -= killMax) [ FD ]
Line_48 $$ for (int i = 0; i < clients; i++) -->Line_64 $$ threads[i].start()[ CD ]
Line_95 $$ if (t != null) -->Line_97 $$ t.join()[ CD ]
Line_5 $$ final int maxIdle = 1000-->Line_11 $$ conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_CONNECTION_MAXIDLETIME_KEY, maxIdle)[ FD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_45 $$ final InetSocketAddress addr = NetUtils.getConnectAddress(server)[ FD ]
Line_8 $$ final int killMax = 3-->Line_79 $$ for (int i = clients; i > 1; i -= killMax) [ FD ]
Line_53 $$ Client client = new Client(LongWritable.class, clientConf)-->Line_55 $$ client.call(new LongWritable(Thread.currentThread().getId()), addr, null, null, 0, clientConf)[ FD ]
Line_17 $$ final CountDownLatch allCallLatch = new CountDownLatch(clients)-->Line_29 $$ allCallLatch.countDown()[ FD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_92 $$ assertEquals(0, server.getNumOpenConnections())[ FD ]
Line_79 $$ for (int i = clients; i > 1; i -= killMax) -->Line_82 $$ assertEquals(i, server.getNumOpenConnections())[ FD ]
Line_19 $$ final TestServer server = new TestServer(clients, false)-->Line_74 $$ assertEquals(clients, server.getNumOpenConnections())[ FD ]
Line_48 $$ for (int i = 0; i < clients; i++) -->Line_82 $$ assertEquals(i, server.getNumOpenConnections())[ FD ]
