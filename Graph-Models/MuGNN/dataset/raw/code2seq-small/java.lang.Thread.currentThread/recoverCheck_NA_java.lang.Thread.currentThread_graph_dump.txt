Line_15 $$ if (replicaInfo.getState() == ReplicaState.RBW) -->Line_16 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo[ CD ]
Line_2 $$ private ReplicaInfo recoverCheck(ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException -->Line_3 $$ ReplicaInfo replicaInfo = getReplicaInfo(b.getBlockPoolId(), b.getBlockId())[ CD ]
Line_15 $$ if (replicaInfo.getState() == ReplicaState.RBW) -->Line_19 $$ rbw.setWriter(Thread.currentThread())[ CD ]
Line_2 $$ private ReplicaInfo recoverCheck(ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException -->Line_10 $$ if (replicaGenerationStamp < b.getGenerationStamp() || replicaGenerationStamp > newGS) [ CD ]
Line_2 $$ private ReplicaInfo recoverCheck(ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException -->Line_3 $$ ReplicaInfo replicaInfo = getReplicaInfo(b.getBlockPoolId(), b.getBlockId())[ FD ]
Line_16 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_19 $$ rbw.setWriter(Thread.currentThread())[ FD ]
Line_2 $$ private ReplicaInfo recoverCheck(ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException -->Line_10 $$ if (replicaGenerationStamp < b.getGenerationStamp() || replicaGenerationStamp > newGS) [ FD ]
Line_16 $$ ReplicaBeingWritten rbw = (ReplicaBeingWritten) replicaInfo-->Line_22 $$ throw new ReplicaAlreadyExistsException("RBW replica " + replicaInfo + "bytesRcvd(" + rbw.getNumBytes() + "), bytesOnDisk(" + rbw.getBytesOnDisk() + "), and bytesAcked(" + rbw.getBytesAcked() + ") are not the same.")[ FD ]
Line_2 $$ private ReplicaInfo recoverCheck(ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException -->Line_15 $$ if (replicaInfo.getState() == ReplicaState.RBW) [ CD ]
Line_2 $$ private ReplicaInfo recoverCheck(ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException -->Line_11 $$ throw new ReplicaNotFoundException(ReplicaNotFoundException.UNEXPECTED_GS_REPLICA + replicaGenerationStamp + ". Expected GS range is [" + b.getGenerationStamp() + ", " + newGS + "].")[ FD ]
Line_2 $$ private ReplicaInfo recoverCheck(ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException -->Line_29 $$ return replicaInfo[ CD ]
Line_3 $$ ReplicaInfo replicaInfo = getReplicaInfo(b.getBlockPoolId(), b.getBlockId())-->Line_15 $$ if (replicaInfo.getState() == ReplicaState.RBW) [ FD ]
