Line_3 $$ List<Callable<Object>> tasks = new ArrayList()-->Line_5 $$ tasks.add(callable(() -> [ FD ]
Line_9 $$ List<Future<Object>> futures-->Line_11 $$ futures = backupExecutor.invokeAll(tasks)[ FD ]
Line_2 $$ private void executeDeletes(List<UUID> uuids, Consumer<UUID> consumer) -->Line_16 $$ boolean logged = false[ CD ]
Line_24 $$ if (!logged) -->Line_26 $$ log.error(e.getCause(), "Error deleting backup shard")[ CD ]
Line_2 $$ private void executeDeletes(List<UUID> uuids, Consumer<UUID> consumer) -->Line_3 $$ List<Callable<Object>> tasks = new ArrayList()[ CD ]
Line_24 $$ if (!logged) -->Line_25 $$ logged = true[ CD ]
Line_2 $$ private void executeDeletes(List<UUID> uuids, Consumer<UUID> consumer) -->Line_9 $$ List<Future<Object>> futures[ CD ]
Line_17 $$ for (Future<?> future : futures) -->Line_19 $$ future.get()[ FD ]
Line_16 $$ boolean logged = false-->Line_25 $$ logged = true[ FD ]
Line_3 $$ List<Callable<Object>> tasks = new ArrayList()-->Line_11 $$ futures = backupExecutor.invokeAll(tasks)[ FD ]
Line_16 $$ boolean logged = false-->Line_24 $$ if (!logged) [ FD ]
Line_2 $$ private void executeDeletes(List<UUID> uuids, Consumer<UUID> consumer) -->Line_6 $$ consumer.accept(uuid)[ FD ]
Line_4 $$ for (UUID uuid : uuids) -->Line_6 $$ consumer.accept(uuid)[ FD ]
