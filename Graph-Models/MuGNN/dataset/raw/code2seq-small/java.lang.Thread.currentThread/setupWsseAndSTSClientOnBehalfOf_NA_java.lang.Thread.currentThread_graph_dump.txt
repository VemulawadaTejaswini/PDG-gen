Line_19 $$ Map<String, Object> props = stsClient.getProperties()-->Line_23 $$ props.put(SecurityConstants.STS_TOKEN_USERNAME, "myclientkey")[ FD ]
Line_19 $$ Map<String, Object> props = stsClient.getProperties()-->Line_25 $$ props.put(SecurityConstants.STS_TOKEN_USE_CERT_FOR_KEYINFO, "true")[ FD ]
Line_19 $$ Map<String, Object> props = stsClient.getProperties()-->Line_24 $$ props.put(SecurityConstants.STS_TOKEN_PROPERTIES, Thread.currentThread().getContextClassLoader().getResource("META-INF/clientKeystore.properties"))[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_13 $$ ctx.put(SecurityConstants.SIGNATURE_PROPERTIES, Thread.currentThread().getContextClassLoader().getResource("META-INF/clientKeystore.properties"))[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_12 $$ ctx.put(SecurityConstants.ENCRYPT_USERNAME, "myactaskey")[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_26 $$ ctx.put(SecurityConstants.STS_CLIENT, stsClient)[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_15 $$ ctx.put(SecurityConstants.USERNAME, "alice")[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_10 $$ ctx.put(SecurityConstants.CALLBACK_HANDLER, new ClientCallbackHandler())[ FD ]
Line_19 $$ Map<String, Object> props = stsClient.getProperties()-->Line_20 $$ props.put(SecurityConstants.CALLBACK_HANDLER, new ClientCallbackHandler())[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_14 $$ ctx.put(SecurityConstants.SIGNATURE_USERNAME, "myclientkey")[ FD ]
Line_17 $$ STSClient stsClient = new STSClient(bus)-->Line_26 $$ ctx.put(SecurityConstants.STS_CLIENT, stsClient)[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_11 $$ ctx.put(SecurityConstants.ENCRYPT_PROPERTIES, Thread.currentThread().getContextClassLoader().getResource("META-INF/clientKeystore.properties"))[ FD ]
Line_17 $$ STSClient stsClient = new STSClient(bus)-->Line_18 $$ stsClient.setOnBehalfOf(new UsernameTokenCallbackHandler())[ FD ]
Line_17 $$ STSClient stsClient = new STSClient(bus)-->Line_19 $$ Map<String, Object> props = stsClient.getProperties()[ FD ]
Line_19 $$ Map<String, Object> props = stsClient.getProperties()-->Line_21 $$ props.put(SecurityConstants.ENCRYPT_PROPERTIES, Thread.currentThread().getContextClassLoader().getResource("META-INF/clientKeystore.properties"))[ FD ]
Line_19 $$ Map<String, Object> props = stsClient.getProperties()-->Line_22 $$ props.put(SecurityConstants.ENCRYPT_USERNAME, "mystskey")[ FD ]
Line_9 $$ Map<String, Object> ctx = proxy.getRequestContext()-->Line_16 $$ ctx.put(SecurityConstants.PASSWORD, "clarinet")[ FD ]
