Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_11 $$ context.close()[ FD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_13 $$ assertEquals(2, listenerCalled)[ CD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_14 $$ assertEquals(1, listenerConstructed)[ CD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_9 $$ context.registerBeanDefinition("asyncAdvisor", new RootBeanDefinition(AsyncAnnotationAdvisor.class))[ FD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_12 $$ Thread.sleep(1000)[ CD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_9 $$ context.registerBeanDefinition("asyncAdvisor", new RootBeanDefinition(AsyncAnnotationAdvisor.class))[ CD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_3 $$ originalThreadName = Thread.currentThread().getName()[ CD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_10 $$ context.refresh()[ FD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_8 $$ context.registerBeanDefinition("autoProxyCreator", new RootBeanDefinition(DefaultAdvisorAutoProxyCreator.class))[ CD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()[ CD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_10 $$ context.refresh()[ CD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_8 $$ context.registerBeanDefinition("autoProxyCreator", new RootBeanDefinition(DefaultAdvisorAutoProxyCreator.class))[ FD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_7 $$ context.registerBeanDefinition("asyncTest", new RootBeanDefinition(AsyncClassListener.class))[ CD ]
Line_6 $$ GenericApplicationContext context = new GenericApplicationContext()-->Line_7 $$ context.registerBeanDefinition("asyncTest", new RootBeanDefinition(AsyncClassListener.class))[ FD ]
Line_2 $$ public void asyncClassListener() throws Exception -->Line_11 $$ context.close()[ CD ]
