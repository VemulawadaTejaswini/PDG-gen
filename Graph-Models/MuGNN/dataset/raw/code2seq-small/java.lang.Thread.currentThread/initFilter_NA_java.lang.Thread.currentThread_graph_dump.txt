Line_2 $$ protected Filter initFilter(ServletContext servletContext, String filterClassName, String filterName, FilterConfig filterConfig) -->Line_11 $$ filter.init(filterConfig)[ FD ]
Line_5 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()-->Line_18 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
Line_10 $$ Filter filter = (Filter) InstanceFactory.newInstance(pluginClassLoader, filterClassName)-->Line_11 $$ filter.init(filterConfig)[ FD ]
Line_3 $$ ClassLoader pluginClassLoader = servletContext.getClassLoader()-->Line_17 $$ if (contextClassLoader != pluginClassLoader) [ FD ]
Line_3 $$ ClassLoader pluginClassLoader = servletContext.getClassLoader()-->Line_7 $$ currentThread.setContextClassLoader(pluginClassLoader)[ FD ]
Line_2 $$ protected Filter initFilter(ServletContext servletContext, String filterClassName, String filterName, FilterConfig filterConfig) -->Line_5 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ CD ]
Line_2 $$ protected Filter initFilter(ServletContext servletContext, String filterClassName, String filterName, FilterConfig filterConfig) -->Line_4 $$ Thread currentThread = Thread.currentThread()[ CD ]
Line_3 $$ ClassLoader pluginClassLoader = servletContext.getClassLoader()-->Line_6 $$ if (contextClassLoader != pluginClassLoader) [ FD ]
Line_5 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()-->Line_17 $$ if (contextClassLoader != pluginClassLoader) [ FD ]
Line_4 $$ Thread currentThread = Thread.currentThread()-->Line_7 $$ currentThread.setContextClassLoader(pluginClassLoader)[ FD ]
Line_2 $$ protected Filter initFilter(ServletContext servletContext, String filterClassName, String filterName, FilterConfig filterConfig) -->Line_3 $$ ClassLoader pluginClassLoader = servletContext.getClassLoader()[ CD ]
Line_3 $$ ClassLoader pluginClassLoader = servletContext.getClassLoader()-->Line_10 $$ Filter filter = (Filter) InstanceFactory.newInstance(pluginClassLoader, filterClassName)[ FD ]
Line_4 $$ Thread currentThread = Thread.currentThread()-->Line_5 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()[ FD ]
Line_2 $$ protected Filter initFilter(ServletContext servletContext, String filterClassName, String filterName, FilterConfig filterConfig) -->Line_3 $$ ClassLoader pluginClassLoader = servletContext.getClassLoader()[ FD ]
Line_6 $$ if (contextClassLoader != pluginClassLoader) -->Line_7 $$ currentThread.setContextClassLoader(pluginClassLoader)[ CD ]
Line_2 $$ protected Filter initFilter(ServletContext servletContext, String filterClassName, String filterName, FilterConfig filterConfig) -->Line_6 $$ if (contextClassLoader != pluginClassLoader) [ CD ]
Line_5 $$ ClassLoader contextClassLoader = currentThread.getContextClassLoader()-->Line_6 $$ if (contextClassLoader != pluginClassLoader) [ FD ]
Line_2 $$ protected Filter initFilter(ServletContext servletContext, String filterClassName, String filterName, FilterConfig filterConfig) -->Line_10 $$ Filter filter = (Filter) InstanceFactory.newInstance(pluginClassLoader, filterClassName)[ FD ]
Line_17 $$ if (contextClassLoader != pluginClassLoader) -->Line_18 $$ currentThread.setContextClassLoader(contextClassLoader)[ CD ]
Line_4 $$ Thread currentThread = Thread.currentThread()-->Line_18 $$ currentThread.setContextClassLoader(contextClassLoader)[ FD ]
