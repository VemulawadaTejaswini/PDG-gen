Line_19 $$ if (sendingController.getPublishingTimedOut()) -->Line_20 $$ DiscoveryNode[] pendingNodes = publishResponseHandler.pendingNodes()[ CD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_3 $$ final ClusterState clusterState = clusterChangedEvent.state()[ FD ]
Line_20 $$ DiscoveryNode[] pendingNodes = publishResponseHandler.pendingNodes()-->Line_22 $$ logger.warn("timed out waiting for all nodes to process published state [[ FD ]
Line_8 $$ if (sendFullVersion || !previousState.nodes().nodeExists(node.id())) -->Line_9 $$ sendFullClusterState(clusterState, serializedStates, node, publishTimeout, sendingController)[ CD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_3 $$ final ClusterState clusterState = clusterChangedEvent.state()[ CD ]
Line_5 $$ final TimeValue publishTimeout = discoverySettings.getPublishTimeout()-->Line_11 $$ sendClusterStateDiff(clusterState, serializedDiffs, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_16 $$ long timeLeftInNanos = Math.max(0, publishTimeout.nanos() - (System.nanoTime() - publishingStartInNanos))-->Line_18 $$ sendingController.setPublishingTimedOut(!publishResponseHandler.awaitAllNodes(TimeValue.timeValueNanos(timeLeftInNanos)))[ FD ]
Line_17 $$ final BlockingClusterStatePublishResponseHandler publishResponseHandler = sendingController.getPublishResponseHandler()-->Line_18 $$ sendingController.setPublishingTimedOut(!publishResponseHandler.awaitAllNodes(TimeValue.timeValueNanos(timeLeftInNanos)))[ FD ]
Line_7 $$ for (final DiscoveryNode node : nodesToPublishTo) -->Line_11 $$ sendClusterStateDiff(clusterState, serializedDiffs, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_7 $$ for (final DiscoveryNode node : nodesToPublishTo) -->Line_9 $$ sendFullClusterState(clusterState, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_9 $$ sendFullClusterState(clusterState, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_4 $$ final ClusterState previousState = clusterChangedEvent.previousState()[ FD ]
Line_19 $$ if (sendingController.getPublishingTimedOut()) -->Line_21 $$ if (pendingNodes.length > 0) [ CD ]
Line_5 $$ final TimeValue publishTimeout = discoverySettings.getPublishTimeout()-->Line_9 $$ sendFullClusterState(clusterState, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_11 $$ sendClusterStateDiff(clusterState, serializedDiffs, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_5 $$ final TimeValue publishTimeout = discoverySettings.getPublishTimeout()[ CD ]
Line_3 $$ final ClusterState clusterState = clusterChangedEvent.state()-->Line_11 $$ sendClusterStateDiff(clusterState, serializedDiffs, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_21 $$ if (pendingNodes.length > 0) -->Line_22 $$ logger.warn("timed out waiting for all nodes to process published state [[ CD ]
Line_5 $$ final TimeValue publishTimeout = discoverySettings.getPublishTimeout()-->Line_22 $$ logger.warn("timed out waiting for all nodes to process published state [[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_8 $$ if (sendFullVersion || !previousState.nodes().nodeExists(node.id())) [ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_6 $$ final long publishingStartInNanos = System.nanoTime()[ CD ]
Line_4 $$ final ClusterState previousState = clusterChangedEvent.previousState()-->Line_8 $$ if (sendFullVersion || !previousState.nodes().nodeExists(node.id())) [ FD ]
Line_17 $$ final BlockingClusterStatePublishResponseHandler publishResponseHandler = sendingController.getPublishResponseHandler()-->Line_20 $$ DiscoveryNode[] pendingNodes = publishResponseHandler.pendingNodes()[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_18 $$ sendingController.setPublishingTimedOut(!publishResponseHandler.awaitAllNodes(TimeValue.timeValueNanos(timeLeftInNanos)))[ FD ]
Line_7 $$ for (final DiscoveryNode node : nodesToPublishTo) -->Line_8 $$ if (sendFullVersion || !previousState.nodes().nodeExists(node.id())) [ FD ]
Line_5 $$ final TimeValue publishTimeout = discoverySettings.getPublishTimeout()-->Line_16 $$ long timeLeftInNanos = Math.max(0, publishTimeout.nanos() - (System.nanoTime() - publishingStartInNanos))[ FD ]
Line_3 $$ final ClusterState clusterState = clusterChangedEvent.state()-->Line_22 $$ logger.warn("timed out waiting for all nodes to process published state [[ FD ]
Line_8 $$ if (sendFullVersion || !previousState.nodes().nodeExists(node.id())) -->Line_11 $$ sendClusterStateDiff(clusterState, serializedDiffs, serializedStates, node, publishTimeout, sendingController)[ CD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_17 $$ final BlockingClusterStatePublishResponseHandler publishResponseHandler = sendingController.getPublishResponseHandler()[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_14 $$ sendingController.waitForCommit(discoverySettings.getCommitTimeout())[ CD ]
Line_3 $$ final ClusterState clusterState = clusterChangedEvent.state()-->Line_9 $$ sendFullClusterState(clusterState, serializedStates, node, publishTimeout, sendingController)[ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_4 $$ final ClusterState previousState = clusterChangedEvent.previousState()[ CD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_19 $$ if (sendingController.getPublishingTimedOut()) [ FD ]
Line_2 $$ private void innerPublish(final ClusterChangedEvent clusterChangedEvent, final Set<DiscoveryNode> nodesToPublishTo, final SendingController sendingController, final boolean sendFullVersion, final Map<Version, BytesReference> serializedStates, final Map<Version, BytesReference> serializedDiffs) -->Line_14 $$ sendingController.waitForCommit(discoverySettings.getCommitTimeout())[ FD ]
