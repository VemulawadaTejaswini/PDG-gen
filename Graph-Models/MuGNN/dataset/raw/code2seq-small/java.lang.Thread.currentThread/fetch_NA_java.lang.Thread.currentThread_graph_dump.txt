Line_14 $$ if (info.getInvalidTokenException() != null) -->Line_15 $$ LOG.warn(this + ": could not get " + key + " due to InvalidToken " + "exception.", info.getInvalidTokenException())[ CD ]
Line_18 $$ ShortCircuitReplica replica = info.getReplica()-->Line_28 $$ purge(replica)[ FD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_31 $$ ref(replica)[ CD ]
Line_18 $$ ShortCircuitReplica replica = info.getReplica()-->Line_31 $$ ref(replica)[ FD ]
Line_3 $$ ShortCircuitReplicaInfo info-->Line_15 $$ LOG.warn(this + ": could not get " + key + " due to InvalidToken " + "exception.", info.getInvalidTokenException())[ FD ]
Line_18 $$ ShortCircuitReplica replica = info.getReplica()-->Line_19 $$ if (replica == null) [ FD ]
Line_3 $$ ShortCircuitReplicaInfo info-->Line_8 $$ info = waitable.await()[ FD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_3 $$ ShortCircuitReplicaInfo info[ CD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_19 $$ if (replica == null) [ CD ]
Line_26 $$ if (replica.isStale()) -->Line_28 $$ purge(replica)[ CD ]
Line_3 $$ ShortCircuitReplicaInfo info-->Line_14 $$ if (info.getInvalidTokenException() != null) [ FD ]
Line_18 $$ ShortCircuitReplica replica = info.getReplica()-->Line_26 $$ if (replica.isStale()) [ FD ]
Line_8 $$ info = waitable.await()-->Line_14 $$ if (info.getInvalidTokenException() != null) [ FD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_18 $$ ShortCircuitReplica replica = info.getReplica()[ CD ]
Line_18 $$ ShortCircuitReplica replica = info.getReplica()-->Line_23 $$ if (replica.purged) [ FD ]
Line_19 $$ if (replica == null) -->Line_20 $$ LOG.warn(this + ": failed to get " + key)[ CD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_32 $$ return info[ CD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_26 $$ if (replica.isStale()) [ CD ]
Line_26 $$ if (replica.isStale()) -->Line_27 $$ LOG.info(this + ": got stale replica " + replica + ".  Removing " + "this replica from the replicaInfoMap and retrying.")[ CD ]
Line_3 $$ ShortCircuitReplicaInfo info-->Line_18 $$ ShortCircuitReplica replica = info.getReplica()[ FD ]
Line_8 $$ info = waitable.await()-->Line_18 $$ ShortCircuitReplica replica = info.getReplica()[ FD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_8 $$ info = waitable.await()[ FD ]
Line_19 $$ if (replica == null) -->Line_21 $$ return info[ CD ]
Line_5 $$ if (LOG.isTraceEnabled()) -->Line_6 $$ LOG.trace(this + ": found waitable for " + key)[ CD ]
Line_8 $$ info = waitable.await()-->Line_15 $$ LOG.warn(this + ": could not get " + key + " due to InvalidToken " + "exception.", info.getInvalidTokenException())[ FD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_14 $$ if (info.getInvalidTokenException() != null) [ CD ]
Line_14 $$ if (info.getInvalidTokenException() != null) -->Line_16 $$ return info[ CD ]
Line_2 $$ private ShortCircuitReplicaInfo fetch(ExtendedBlockId key, Waitable<ShortCircuitReplicaInfo> waitable) throws RetriableException -->Line_23 $$ if (replica.purged) [ CD ]
