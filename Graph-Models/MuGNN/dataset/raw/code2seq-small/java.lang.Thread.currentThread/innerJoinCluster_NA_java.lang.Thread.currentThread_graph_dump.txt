Line_9 $$ if (!joinThreadControl.joinThreadActive(currentThread)) -->Line_10 $$ logger.trace("thread is no longer in currentJoinThread. Stopping.")[ CD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_51 $$ return currentState[ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_39 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ FD ]
Line_2 $$ private void innerJoinCluster() -->Line_5 $$ nodeJoinController.startAccumulatingJoins()[ CD ]
Line_3 $$ DiscoveryNode masterNode = null-->Line_7 $$ masterNode = findMaster()[ FD ]
Line_42 $$ if (currentState.getNodes().masterNode() == null) -->Line_45 $$ return currentState[ CD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_47 $$ if (!currentState.getNodes().masterNode().equals(finalMasterNode)) [ FD ]
Line_2 $$ private void innerJoinCluster() -->Line_3 $$ DiscoveryNode masterNode = null[ CD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_54 $$ logger.error("unexpected error while trying to finalize cluster join", t)[ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_55 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ FD ]
Line_14 $$ final int requiredJoins = Math.max(0, electMaster.minimumMasterNodes() - 1)-->Line_15 $$ logger.debug("elected as master, waiting for incoming joins ([[ FD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_22 $$ logger.trace("cluster joins counter set to [[ CD ]
Line_38 $$ if (!success) -->Line_39 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ CD ]
Line_13 $$ if (clusterService.localNode().equals(masterNode)) -->Line_15 $$ logger.debug("elected as master, waiting for incoming joins ([[ CD ]
Line_2 $$ private void innerJoinCluster() -->Line_13 $$ if (clusterService.localNode().equals(masterNode)) [ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_18 $$ joinThreadControl.markThreadAsDone(currentThread)[ FD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_19 $$ nodesFD.updateNodesAndPing(state)[ CD ]
Line_3 $$ DiscoveryNode masterNode = null-->Line_31 $$ final boolean success = joinElectedMaster(masterNode)[ FD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_50 $$ joinThreadControl.markThreadAsDone(currentThread)[ CD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_18 $$ joinThreadControl.markThreadAsDone(currentThread)[ CD ]
Line_2 $$ private void innerJoinCluster() -->Line_6 $$ while (masterNode == null && joinThreadControl.joinThreadActive(currentThread)) [ CD ]
Line_9 $$ if (!joinThreadControl.joinThreadActive(currentThread)) -->Line_11 $$ return[ CD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_54 $$ logger.error("unexpected error while trying to finalize cluster join", t)[ FD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_42 $$ if (currentState.getNodes().masterNode() == null) [ FD ]
Line_2 $$ private void innerJoinCluster() -->Line_9 $$ if (!joinThreadControl.joinThreadActive(currentThread)) [ CD ]
Line_14 $$ final int requiredJoins = Math.max(0, electMaster.minimumMasterNodes() - 1)-->Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() [ FD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_25 $$ logger.trace("failed while waiting for nodes to join, rejoining", t)[ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_50 $$ joinThreadControl.markThreadAsDone(currentThread)[ FD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_38 $$ if (!success) [ CD ]
Line_7 $$ masterNode = findMaster()-->Line_31 $$ final boolean success = joinElectedMaster(masterNode)[ FD ]
Line_13 $$ if (clusterService.localNode().equals(masterNode)) -->Line_30 $$ nodeJoinController.stopAccumulatingJoins("not master")[ CD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_19 $$ nodesFD.updateNodesAndPing(state)[ FD ]
Line_6 $$ while (masterNode == null && joinThreadControl.joinThreadActive(currentThread)) -->Line_7 $$ masterNode = findMaster()[ CD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_25 $$ logger.trace("failed while waiting for nodes to join, rejoining", t)[ FD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_35 $$ return false[ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_6 $$ while (masterNode == null && joinThreadControl.joinThreadActive(currentThread)) [ FD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_42 $$ if (currentState.getNodes().masterNode() == null) [ CD ]
Line_42 $$ if (currentState.getNodes().masterNode() == null) -->Line_43 $$ logger.debug("no master node is set, despite of join request completing. retrying pings.")[ CD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_55 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ CD ]
Line_13 $$ if (clusterService.localNode().equals(masterNode)) -->Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() [ CD ]
Line_2 $$ private void innerJoinCluster() -->Line_4 $$ final Thread currentThread = Thread.currentThread()[ CD ]
Line_42 $$ if (currentState.getNodes().masterNode() == null) -->Line_44 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_9 $$ if (!joinThreadControl.joinThreadActive(currentThread)) [ FD ]
Line_13 $$ if (clusterService.localNode().equals(masterNode)) -->Line_31 $$ final boolean success = joinElectedMaster(masterNode)[ CD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_21 $$ long count = clusterJoinsCounter.incrementAndGet()[ CD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_26 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ CD ]
Line_38 $$ if (!success) -->Line_40 $$ return currentState[ CD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_48 $$ return joinThreadControl.stopRunningThreadAndRejoin(currentState, "master_switched_while_finalizing_join")[ FD ]
Line_47 $$ if (!currentState.getNodes().masterNode().equals(finalMasterNode)) -->Line_48 $$ return joinThreadControl.stopRunningThreadAndRejoin(currentState, "master_switched_while_finalizing_join")[ CD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_47 $$ if (!currentState.getNodes().masterNode().equals(finalMasterNode)) [ CD ]
Line_13 $$ if (clusterService.localNode().equals(masterNode)) -->Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() [ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_26 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ FD ]
Line_33 $$ clusterService.submitStateUpdateTask("finalize_join (" + masterNode + ")", new ClusterStateUpdateTask() -->Line_54 $$ logger.error("unexpected error while trying to finalize cluster join", t)[ FD ]
Line_13 $$ if (clusterService.localNode().equals(masterNode)) -->Line_14 $$ final int requiredJoins = Math.max(0, electMaster.minimumMasterNodes() - 1)[ CD ]
Line_4 $$ final Thread currentThread = Thread.currentThread()-->Line_44 $$ joinThreadControl.markThreadAsDoneAndStartNew(currentThread)[ FD ]
Line_3 $$ DiscoveryNode masterNode = null-->Line_13 $$ if (clusterService.localNode().equals(masterNode)) [ FD ]
Line_21 $$ long count = clusterJoinsCounter.incrementAndGet()-->Line_22 $$ logger.trace("cluster joins counter set to [[ FD ]
Line_7 $$ masterNode = findMaster()-->Line_13 $$ if (clusterService.localNode().equals(masterNode)) [ FD ]
Line_16 $$ nodeJoinController.waitToBeElectedAsMaster(requiredJoins, masterElectionWaitForJoinsTimeout, new NodeJoinController.ElectionCallback() -->Line_20 $$ sendInitialStateEventIfNeeded()[ CD ]
