Line_2 $$ public boolean cancelLeafStage(Duration timeout) -->Line_4 $$ URI uri = current().getPartialCancelUri()[ CD ]
Line_5 $$ if (uri == null) -->Line_6 $$ return false[ CD ]
Line_2 $$ public boolean cancelLeafStage(Duration timeout) -->Line_3 $$ checkState(!isClosed(), "client is closed")[ CD ]
Line_8 $$ Request request = prepareDelete().setHeader(USER_AGENT, USER_AGENT_VALUE).setUri(uri).build()-->Line_9 $$ HttpResponseFuture<StatusResponse> response = httpClient.executeAsync(request, createStatusResponseHandler())[ FD ]
Line_4 $$ URI uri = current().getPartialCancelUri()-->Line_5 $$ if (uri == null) [ FD ]
Line_4 $$ URI uri = current().getPartialCancelUri()-->Line_8 $$ Request request = prepareDelete().setHeader(USER_AGENT, USER_AGENT_VALUE).setUri(uri).build()[ FD ]
Line_2 $$ public boolean cancelLeafStage(Duration timeout) -->Line_11 $$ StatusResponse status = response.get(timeout.toMillis(), MILLISECONDS)[ FD ]
Line_11 $$ StatusResponse status = response.get(timeout.toMillis(), MILLISECONDS)-->Line_12 $$ return familyForStatusCode(status.getStatusCode()) == Family.SUCCESSFUL[ FD ]
Line_2 $$ public boolean cancelLeafStage(Duration timeout) -->Line_9 $$ HttpResponseFuture<StatusResponse> response = httpClient.executeAsync(request, createStatusResponseHandler())[ CD ]
Line_9 $$ HttpResponseFuture<StatusResponse> response = httpClient.executeAsync(request, createStatusResponseHandler())-->Line_11 $$ StatusResponse status = response.get(timeout.toMillis(), MILLISECONDS)[ FD ]
Line_2 $$ public boolean cancelLeafStage(Duration timeout) -->Line_5 $$ if (uri == null) [ CD ]
Line_2 $$ public boolean cancelLeafStage(Duration timeout) -->Line_8 $$ Request request = prepareDelete().setHeader(USER_AGENT, USER_AGENT_VALUE).setUri(uri).build()[ CD ]
