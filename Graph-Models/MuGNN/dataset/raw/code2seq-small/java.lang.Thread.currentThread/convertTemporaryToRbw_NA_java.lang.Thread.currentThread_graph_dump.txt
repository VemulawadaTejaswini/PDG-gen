Line_3 $$ final long blockId = b.getBlockId()-->Line_9 $$ final ReplicaInfo r = volumeMap.get(b.getBlockPoolId(), blockId)[ FD ]
Line_7 $$ final ReplicaInPipeline temp-->Line_30 $$ final File dest = moveBlockFiles(b.getLocalBlock(), temp.getBlockFile(), bpslice.getRbwDir())[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_5 $$ final long visible = b.getNumBytes()[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_10 $$ if (r == null) [ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_4 $$ final long expectedGs = b.getGenerationStamp()[ CD ]
Line_9 $$ final ReplicaInfo r = volumeMap.get(b.getBlockPoolId(), blockId)-->Line_10 $$ if (r == null) [ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_30 $$ final File dest = moveBlockFiles(b.getLocalBlock(), temp.getBlockFile(), bpslice.getRbwDir())[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_30 $$ final File dest = moveBlockFiles(b.getLocalBlock(), temp.getBlockFile(), bpslice.getRbwDir())[ CD ]
Line_25 $$ final FsVolumeImpl v = (FsVolumeImpl) temp.getVolume()-->Line_29 $$ BlockPoolSlice bpslice = v.getBlockPoolSlice(b.getBlockPoolId())[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_32 $$ rbw.setBytesAcked(visible)[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_29 $$ BlockPoolSlice bpslice = v.getBlockPoolSlice(b.getBlockPoolId())[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_31 $$ final ReplicaBeingWritten rbw = new ReplicaBeingWritten(blockId, numBytes, expectedGs, v, dest.getParentFile(), Thread.currentThread())[ CD ]
Line_5 $$ final long visible = b.getNumBytes()-->Line_22 $$ if (numBytes < visible) [ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_22 $$ if (numBytes < visible) [ CD ]
Line_5 $$ final long visible = b.getNumBytes()-->Line_32 $$ rbw.setBytesAcked(visible)[ FD ]
Line_30 $$ final File dest = moveBlockFiles(b.getLocalBlock(), temp.getBlockFile(), bpslice.getRbwDir())-->Line_31 $$ final ReplicaBeingWritten rbw = new ReplicaBeingWritten(blockId, numBytes, expectedGs, v, dest.getParentFile(), Thread.currentThread())[ FD ]
Line_16 $$ temp = (ReplicaInPipeline) r-->Line_30 $$ final File dest = moveBlockFiles(b.getLocalBlock(), temp.getBlockFile(), bpslice.getRbwDir())[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_25 $$ final FsVolumeImpl v = (FsVolumeImpl) temp.getVolume()[ CD ]
Line_4 $$ final long expectedGs = b.getGenerationStamp()-->Line_18 $$ if (temp.getGenerationStamp() != expectedGs) [ FD ]
Line_21 $$ final long numBytes = temp.getNumBytes()-->Line_22 $$ if (numBytes < visible) [ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_29 $$ BlockPoolSlice bpslice = v.getBlockPoolSlice(b.getBlockPoolId())[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_16 $$ temp = (ReplicaInPipeline) r[ CD ]
Line_31 $$ final ReplicaBeingWritten rbw = new ReplicaBeingWritten(blockId, numBytes, expectedGs, v, dest.getParentFile(), Thread.currentThread())-->Line_33 $$ volumeMap.add(b.getBlockPoolId(), rbw)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_33 $$ volumeMap.add(b.getBlockPoolId(), rbw)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_13 $$ if (r.getState() != ReplicaState.TEMPORARY) [ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_3 $$ final long blockId = b.getBlockId()[ FD ]
Line_7 $$ final ReplicaInPipeline temp-->Line_18 $$ if (temp.getGenerationStamp() != expectedGs) [ FD ]
Line_31 $$ final ReplicaBeingWritten rbw = new ReplicaBeingWritten(blockId, numBytes, expectedGs, v, dest.getParentFile(), Thread.currentThread())-->Line_32 $$ rbw.setBytesAcked(visible)[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_34 $$ return rbw[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_9 $$ final ReplicaInfo r = volumeMap.get(b.getBlockPoolId(), blockId)[ CD ]
Line_7 $$ final ReplicaInPipeline temp-->Line_25 $$ final FsVolumeImpl v = (FsVolumeImpl) temp.getVolume()[ FD ]
Line_16 $$ temp = (ReplicaInPipeline) r-->Line_21 $$ final long numBytes = temp.getNumBytes()[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_33 $$ volumeMap.add(b.getBlockPoolId(), rbw)[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_6 $$ LOG.info("Convert " + b + " from Temporary to RBW, visible length=" + visible)[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_9 $$ final ReplicaInfo r = volumeMap.get(b.getBlockPoolId(), blockId)[ FD ]
Line_29 $$ BlockPoolSlice bpslice = v.getBlockPoolSlice(b.getBlockPoolId())-->Line_30 $$ final File dest = moveBlockFiles(b.getLocalBlock(), temp.getBlockFile(), bpslice.getRbwDir())[ FD ]
Line_25 $$ final FsVolumeImpl v = (FsVolumeImpl) temp.getVolume()-->Line_26 $$ if (v == null) [ FD ]
Line_7 $$ final ReplicaInPipeline temp-->Line_21 $$ final long numBytes = temp.getNumBytes()[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_3 $$ final long blockId = b.getBlockId()[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_4 $$ final long expectedGs = b.getGenerationStamp()[ FD ]
Line_9 $$ final ReplicaInfo r = volumeMap.get(b.getBlockPoolId(), blockId)-->Line_13 $$ if (r.getState() != ReplicaState.TEMPORARY) [ FD ]
Line_16 $$ temp = (ReplicaInPipeline) r-->Line_18 $$ if (temp.getGenerationStamp() != expectedGs) [ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_7 $$ final ReplicaInPipeline temp[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_26 $$ if (v == null) [ CD ]
Line_16 $$ temp = (ReplicaInPipeline) r-->Line_25 $$ final FsVolumeImpl v = (FsVolumeImpl) temp.getVolume()[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_5 $$ final long visible = b.getNumBytes()[ CD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_18 $$ if (temp.getGenerationStamp() != expectedGs) [ CD ]
Line_7 $$ final ReplicaInPipeline temp-->Line_16 $$ temp = (ReplicaInPipeline) r[ FD ]
Line_2 $$ public synchronized ReplicaInPipeline convertTemporaryToRbw(final ExtendedBlock b) throws IOException -->Line_21 $$ final long numBytes = temp.getNumBytes()[ CD ]
