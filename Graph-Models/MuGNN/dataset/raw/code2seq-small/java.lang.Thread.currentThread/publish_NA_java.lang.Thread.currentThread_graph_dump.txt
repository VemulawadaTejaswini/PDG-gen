Line_6 $$ ClusterState clusterState = clusterChangedEvent.state()-->Line_22 $$ logger.trace("sending diff cluster state version [[ FD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_38 $$ assert nodeSpecificClusterState.nodes().masterNode() != null : "received a cluster state without a master"[ FD ]
Line_27 $$ if (newNodeSpecificClusterState == null) -->Line_28 $$ if (clusterStateBytes == null) [ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_62 $$ logger.error("unexpected failure during [[ FD ]
Line_6 $$ ClusterState clusterState = clusterChangedEvent.state()-->Line_15 $$ Diff diff = clusterState.diff(clusterChangedEvent.previousState())[ FD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_63 $$ publishResponseHandler.onFailure(discovery.localNode, t)[ FD ]
Line_45 $$ if (currentState.supersedes(nodeSpecificClusterState)) -->Line_46 $$ return currentState[ CD ]
Line_11 $$ ClusterState newNodeSpecificClusterState = null-->Line_31 $$ newNodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode)[ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_59 $$ return builder.build()[ CD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_37 $$ if (nodeSpecificClusterState.nodes().localNode() != null) [ FD ]
Line_21 $$ newNodeSpecificClusterState = discovery.lastProcessedClusterState.readDiffFrom(StreamInput.wrap(clusterStateDiffBytes)).apply(discovery.lastProcessedClusterState)-->Line_33 $$ discovery.lastProcessedClusterState = newNodeSpecificClusterState[ FD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_52 $$ ClusterState.Builder builder = ClusterState.builder(nodeSpecificClusterState)[ FD ]
Line_11 $$ ClusterState newNodeSpecificClusterState = null-->Line_33 $$ discovery.lastProcessedClusterState = newNodeSpecificClusterState[ FD ]
Line_37 $$ if (nodeSpecificClusterState.nodes().localNode() != null) -->Line_71 $$ publishResponseHandler.onResponse(discovery.localNode)[ CD ]
Line_6 $$ ClusterState clusterState = clusterChangedEvent.state()-->Line_24 $$ logger.warn("incompatible cluster state version [[ FD ]
Line_56 $$ if (nodeSpecificClusterState.metaData().version() == currentState.metaData().version()) -->Line_57 $$ builder.metaData(currentState.metaData())[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_62 $$ logger.error("unexpected failure during [[ CD ]
Line_31 $$ newNodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode)-->Line_33 $$ discovery.lastProcessedClusterState = newNodeSpecificClusterState[ FD ]
Line_14 $$ if (clusterStateDiffBytes == null) -->Line_18 $$ clusterStateDiffBytes = os.bytes().toBytes()[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_53 $$ if (nodeSpecificClusterState.routingTable().version() == currentState.routingTable().version()) [ CD ]
Line_18 $$ clusterStateDiffBytes = os.bytes().toBytes()-->Line_21 $$ newNodeSpecificClusterState = discovery.lastProcessedClusterState.readDiffFrom(StreamInput.wrap(clusterStateDiffBytes)).apply(discovery.lastProcessedClusterState)[ FD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_67 $$ publishResponseHandler.onResponse(discovery.localNode)[ FD ]
Line_11 $$ ClusterState newNodeSpecificClusterState = null-->Line_21 $$ newNodeSpecificClusterState = discovery.lastProcessedClusterState.readDiffFrom(StreamInput.wrap(clusterStateDiffBytes)).apply(discovery.lastProcessedClusterState)[ FD ]
Line_52 $$ ClusterState.Builder builder = ClusterState.builder(nodeSpecificClusterState)-->Line_57 $$ builder.metaData(currentState.metaData())[ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_52 $$ ClusterState.Builder builder = ClusterState.builder(nodeSpecificClusterState)[ CD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_77 $$ boolean awaited = publishResponseHandler.awaitAllNodes(publishTimeout)[ FD ]
Line_14 $$ if (clusterStateDiffBytes == null) -->Line_16 $$ BytesStreamOutput os = new BytesStreamOutput()[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_57 $$ builder.metaData(currentState.metaData())[ FD ]
Line_11 $$ ClusterState newNodeSpecificClusterState = null-->Line_27 $$ if (newNodeSpecificClusterState == null) [ FD ]
Line_37 $$ if (nodeSpecificClusterState.nodes().localNode() != null) -->Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() [ CD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_56 $$ if (nodeSpecificClusterState.metaData().version() == currentState.metaData().version()) [ FD ]
Line_53 $$ if (nodeSpecificClusterState.routingTable().version() == currentState.routingTable().version()) -->Line_54 $$ builder.routingTable(currentState.routingTable())[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_48 $$ if (currentState.blocks().hasGlobalBlock(discoverySettings.getNoMasterBlock())) [ FD ]
Line_15 $$ Diff diff = clusterState.diff(clusterChangedEvent.previousState())-->Line_17 $$ diff.writeTo(os)[ FD ]
Line_7 $$ for (final LocalDiscovery discovery : members) -->Line_8 $$ if (discovery.master) [ FD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_79 $$ DiscoveryNode[] pendingNodes = publishResponseHandler.pendingNodes()[ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_48 $$ if (currentState.blocks().hasGlobalBlock(discoverySettings.getNoMasterBlock())) [ CD ]
Line_78 $$ if (!awaited) -->Line_80 $$ if (pendingNodes.length > 0) [ CD ]
Line_5 $$ byte[] clusterStateDiffBytes = null-->Line_18 $$ clusterStateDiffBytes = os.bytes().toBytes()[ FD ]
Line_5 $$ byte[] clusterStateDiffBytes = null-->Line_14 $$ if (clusterStateDiffBytes == null) [ FD ]
Line_21 $$ newNodeSpecificClusterState = discovery.lastProcessedClusterState.readDiffFrom(StreamInput.wrap(clusterStateDiffBytes)).apply(discovery.lastProcessedClusterState)-->Line_27 $$ if (newNodeSpecificClusterState == null) [ FD ]
Line_6 $$ ClusterState clusterState = clusterChangedEvent.state()-->Line_81 $$ logger.warn("timed out waiting for all nodes to process published state [[ FD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_49 $$ logger.debug("got first state from fresh master [[ FD ]
Line_80 $$ if (pendingNodes.length > 0) -->Line_81 $$ logger.warn("timed out waiting for all nodes to process published state [[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_63 $$ publishResponseHandler.onFailure(discovery.localNode, t)[ CD ]
Line_16 $$ BytesStreamOutput os = new BytesStreamOutput()-->Line_18 $$ clusterStateDiffBytes = os.bytes().toBytes()[ FD ]
Line_14 $$ if (clusterStateDiffBytes == null) -->Line_15 $$ Diff diff = clusterState.diff(clusterChangedEvent.previousState())[ CD ]
Line_6 $$ ClusterState clusterState = clusterChangedEvent.state()-->Line_29 $$ clusterStateBytes = Builder.toBytes(clusterState)[ FD ]
Line_4 $$ byte[] clusterStateBytes = null-->Line_29 $$ clusterStateBytes = Builder.toBytes(clusterState)[ FD ]
Line_52 $$ ClusterState.Builder builder = ClusterState.builder(nodeSpecificClusterState)-->Line_59 $$ return builder.build()[ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_45 $$ if (currentState.supersedes(nodeSpecificClusterState)) [ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_45 $$ if (currentState.supersedes(nodeSpecificClusterState)) [ CD ]
Line_13 $$ if (discovery.lastProcessedClusterState != null && clusterChangedEvent.previousState().nodes().nodeExists(discovery.localNode.id())) -->Line_14 $$ if (clusterStateDiffBytes == null) [ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_54 $$ builder.routingTable(currentState.routingTable())[ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_63 $$ publishResponseHandler.onFailure(discovery.localNode, t)[ FD ]
Line_4 $$ byte[] clusterStateBytes = null-->Line_31 $$ newNodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode)[ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_56 $$ if (nodeSpecificClusterState.metaData().version() == currentState.metaData().version()) [ FD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_53 $$ if (nodeSpecificClusterState.routingTable().version() == currentState.routingTable().version()) [ FD ]
Line_4 $$ byte[] clusterStateBytes = null-->Line_28 $$ if (clusterStateBytes == null) [ FD ]
Line_16 $$ BytesStreamOutput os = new BytesStreamOutput()-->Line_17 $$ diff.writeTo(os)[ FD ]
Line_21 $$ newNodeSpecificClusterState = discovery.lastProcessedClusterState.readDiffFrom(StreamInput.wrap(clusterStateDiffBytes)).apply(discovery.lastProcessedClusterState)-->Line_31 $$ newNodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode)[ FD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_15 $$ Diff diff = clusterState.diff(clusterChangedEvent.previousState())[ FD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_36 $$ nodeSpecificClusterState.status(ClusterState.ClusterStateStatus.RECEIVED)[ FD ]
Line_48 $$ if (currentState.blocks().hasGlobalBlock(discoverySettings.getNoMasterBlock())) -->Line_49 $$ logger.debug("got first state from fresh master [[ CD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_71 $$ publishResponseHandler.onResponse(discovery.localNode)[ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_56 $$ if (nodeSpecificClusterState.metaData().version() == currentState.metaData().version()) [ CD ]
Line_5 $$ byte[] clusterStateDiffBytes = null-->Line_21 $$ newNodeSpecificClusterState = discovery.lastProcessedClusterState.readDiffFrom(StreamInput.wrap(clusterStateDiffBytes)).apply(discovery.lastProcessedClusterState)[ FD ]
Line_27 $$ if (newNodeSpecificClusterState == null) -->Line_31 $$ newNodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode)[ CD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_6 $$ ClusterState clusterState = clusterChangedEvent.state()[ FD ]
Line_78 $$ if (!awaited) -->Line_79 $$ DiscoveryNode[] pendingNodes = publishResponseHandler.pendingNodes()[ CD ]
Line_29 $$ clusterStateBytes = Builder.toBytes(clusterState)-->Line_31 $$ newNodeSpecificClusterState = ClusterState.Builder.fromBytes(clusterStateBytes, discovery.localNode)[ FD ]
Line_2 $$ private void publish(LocalDiscovery[] members, ClusterChangedEvent clusterChangedEvent, final BlockingClusterStatePublishResponseHandler publishResponseHandler) -->Line_13 $$ if (discovery.lastProcessedClusterState != null && clusterChangedEvent.previousState().nodes().nodeExists(discovery.localNode.id())) [ FD ]
Line_48 $$ if (currentState.blocks().hasGlobalBlock(discoverySettings.getNoMasterBlock())) -->Line_50 $$ return nodeSpecificClusterState[ CD ]
Line_14 $$ if (clusterStateDiffBytes == null) -->Line_17 $$ diff.writeTo(os)[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_42 $$ return false[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_53 $$ if (nodeSpecificClusterState.routingTable().version() == currentState.routingTable().version()) [ FD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_39 $$ assert !nodeSpecificClusterState.blocks().hasGlobalBlock(discoverySettings.getNoMasterBlock()) : "received a cluster state with a master block"[ FD ]
Line_52 $$ ClusterState.Builder builder = ClusterState.builder(nodeSpecificClusterState)-->Line_54 $$ builder.routingTable(currentState.routingTable())[ FD ]
Line_35 $$ final ClusterState nodeSpecificClusterState = newNodeSpecificClusterState-->Line_45 $$ if (currentState.supersedes(nodeSpecificClusterState)) [ FD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_66 $$ sendInitialStateEventIfNeeded()[ CD ]
Line_28 $$ if (clusterStateBytes == null) -->Line_29 $$ clusterStateBytes = Builder.toBytes(clusterState)[ CD ]
Line_40 $$ discovery.clusterService.submitStateUpdateTask("local-disco-receive(from master)", new ClusterStateUpdateTask() -->Line_67 $$ publishResponseHandler.onResponse(discovery.localNode)[ CD ]
