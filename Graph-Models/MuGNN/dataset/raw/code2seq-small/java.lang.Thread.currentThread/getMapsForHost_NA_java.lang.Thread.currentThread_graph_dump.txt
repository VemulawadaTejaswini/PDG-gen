Line_10 $$ TaskAttemptID id = itr.next()-->Line_22 $$ host.addKnownMap(id)[ FD ]
Line_3 $$ List<TaskAttemptID> list = host.getAndClearKnownMaps()-->Line_4 $$ Iterator<TaskAttemptID> itr = list.iterator()[ FD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_5 $$ List<TaskAttemptID> result = new ArrayList<TaskAttemptID>()[ CD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_4 $$ Iterator<TaskAttemptID> itr = list.iterator()[ CD ]
Line_10 $$ TaskAttemptID id = itr.next()-->Line_11 $$ if (!obsoleteMaps.contains(id) && !finishedMaps[id.getTaskID().getId()]) [ FD ]
Line_3 $$ List<TaskAttemptID> list = host.getAndClearKnownMaps()-->Line_7 $$ int totalSize = list.size()[ FD ]
Line_4 $$ Iterator<TaskAttemptID> itr = list.iterator()-->Line_20 $$ TaskAttemptID id = itr.next()[ FD ]
Line_10 $$ TaskAttemptID id = itr.next()-->Line_21 $$ if (!obsoleteMaps.contains(id) && !finishedMaps[id.getTaskID().getId()]) [ FD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_22 $$ host.addKnownMap(id)[ FD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_7 $$ int totalSize = list.size()[ CD ]
Line_5 $$ List<TaskAttemptID> result = new ArrayList<TaskAttemptID>()-->Line_12 $$ result.add(id)[ FD ]
Line_21 $$ if (!obsoleteMaps.contains(id) && !finishedMaps[id.getTaskID().getId()]) -->Line_22 $$ host.addKnownMap(id)[ CD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_3 $$ List<TaskAttemptID> list = host.getAndClearKnownMaps()[ CD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_26 $$ return result[ CD ]
Line_20 $$ TaskAttemptID id = itr.next()-->Line_22 $$ host.addKnownMap(id)[ FD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_6 $$ int includedMaps = 0[ CD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_25 $$ LOG.info("assigned " + includedMaps + " of " + totalSize + " to " + host + " to " + Thread.currentThread().getName())[ CD ]
Line_11 $$ if (!obsoleteMaps.contains(id) && !finishedMaps[id.getTaskID().getId()]) -->Line_12 $$ result.add(id)[ CD ]
Line_10 $$ TaskAttemptID id = itr.next()-->Line_12 $$ result.add(id)[ FD ]
Line_6 $$ int includedMaps = 0-->Line_13 $$ if (++includedMaps >= MAX_MAPS_AT_ONCE) [ FD ]
Line_4 $$ Iterator<TaskAttemptID> itr = list.iterator()-->Line_10 $$ TaskAttemptID id = itr.next()[ FD ]
Line_2 $$ public synchronized List<TaskAttemptID> getMapsForHost(MapHost host) -->Line_3 $$ List<TaskAttemptID> list = host.getAndClearKnownMaps()[ FD ]
Line_20 $$ TaskAttemptID id = itr.next()-->Line_21 $$ if (!obsoleteMaps.contains(id) && !finishedMaps[id.getTaskID().getId()]) [ FD ]
Line_11 $$ if (!obsoleteMaps.contains(id) && !finishedMaps[id.getTaskID().getId()]) -->Line_13 $$ if (++includedMaps >= MAX_MAPS_AT_ONCE) [ CD ]
