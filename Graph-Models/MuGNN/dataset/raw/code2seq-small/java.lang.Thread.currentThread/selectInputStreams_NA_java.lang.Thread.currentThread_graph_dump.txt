Line_11 $$ if (fromTxId >= l.getFirstTxId() && fromTxId <= lastTxId) -->Line_19 $$ elis.skipTo(fromTxId)[ CD ]
Line_11 $$ if (fromTxId >= l.getFirstTxId() && fromTxId <= lastTxId) -->Line_12 $$ LedgerHandle h[ CD ]
Line_14 $$ h = bkc.openLedgerNoRecovery(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())-->Line_16 $$ h = bkc.openLedger(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())[ FD ]
Line_5 $$ BookKeeperEditLogInputStream elis = null-->Line_23 $$ streams.add(elis)[ FD ]
Line_11 $$ if (fromTxId >= l.getFirstTxId() && fromTxId <= lastTxId) -->Line_18 $$ elis = new BookKeeperEditLogInputStream(h, l)[ CD ]
Line_2 $$ public void selectInputStreams(Collection<EditLogInputStream> streams, long fromTxId, boolean inProgressOk) throws IOException -->Line_19 $$ elis.skipTo(fromTxId)[ FD ]
Line_6 $$ for (EditLogLedgerMetadata l : currentLedgerList) -->Line_13 $$ if (l.isInProgress()) [ FD ]
Line_6 $$ for (EditLogLedgerMetadata l : currentLedgerList) -->Line_11 $$ if (fromTxId >= l.getFirstTxId() && fromTxId <= lastTxId) [ FD ]
Line_5 $$ BookKeeperEditLogInputStream elis = null-->Line_18 $$ elis = new BookKeeperEditLogInputStream(h, l)[ FD ]
Line_6 $$ for (EditLogLedgerMetadata l : currentLedgerList) -->Line_16 $$ h = bkc.openLedger(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())[ FD ]
Line_5 $$ BookKeeperEditLogInputStream elis = null-->Line_19 $$ elis.skipTo(fromTxId)[ FD ]
Line_6 $$ for (EditLogLedgerMetadata l : currentLedgerList) -->Line_9 $$ lastTxId = recoverLastTxId(l, false)[ FD ]
Line_2 $$ public void selectInputStreams(Collection<EditLogInputStream> streams, long fromTxId, boolean inProgressOk) throws IOException -->Line_3 $$ List<EditLogLedgerMetadata> currentLedgerList = getLedgerList(fromTxId, inProgressOk)[ CD ]
Line_13 $$ if (l.isInProgress()) -->Line_16 $$ h = bkc.openLedger(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())[ CD ]
Line_2 $$ public void selectInputStreams(Collection<EditLogInputStream> streams, long fromTxId, boolean inProgressOk) throws IOException -->Line_27 $$ fromTxId = elis.getLastTxId() + 1[ FD ]
Line_12 $$ LedgerHandle h-->Line_16 $$ h = bkc.openLedger(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())[ FD ]
Line_5 $$ BookKeeperEditLogInputStream elis = null-->Line_27 $$ fromTxId = elis.getLastTxId() + 1[ FD ]
Line_18 $$ elis = new BookKeeperEditLogInputStream(h, l)-->Line_27 $$ fromTxId = elis.getLastTxId() + 1[ FD ]
Line_5 $$ BookKeeperEditLogInputStream elis = null-->Line_24 $$ if (elis.getLastTxId() == HdfsConstants.INVALID_TXID) [ FD ]
Line_18 $$ elis = new BookKeeperEditLogInputStream(h, l)-->Line_24 $$ if (elis.getLastTxId() == HdfsConstants.INVALID_TXID) [ FD ]
Line_13 $$ if (l.isInProgress()) -->Line_14 $$ h = bkc.openLedgerNoRecovery(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())[ CD ]
Line_2 $$ public void selectInputStreams(Collection<EditLogInputStream> streams, long fromTxId, boolean inProgressOk) throws IOException -->Line_3 $$ List<EditLogLedgerMetadata> currentLedgerList = getLedgerList(fromTxId, inProgressOk)[ FD ]
Line_11 $$ if (fromTxId >= l.getFirstTxId() && fromTxId <= lastTxId) -->Line_13 $$ if (l.isInProgress()) [ CD ]
Line_12 $$ LedgerHandle h-->Line_14 $$ h = bkc.openLedgerNoRecovery(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())[ FD ]
Line_2 $$ public void selectInputStreams(Collection<EditLogInputStream> streams, long fromTxId, boolean inProgressOk) throws IOException -->Line_23 $$ streams.add(elis)[ FD ]
Line_6 $$ for (EditLogLedgerMetadata l : currentLedgerList) -->Line_8 $$ if (l.isInProgress()) [ FD ]
Line_24 $$ if (elis.getLastTxId() == HdfsConstants.INVALID_TXID) -->Line_25 $$ return[ CD ]
Line_8 $$ if (l.isInProgress()) -->Line_9 $$ lastTxId = recoverLastTxId(l, false)[ CD ]
Line_18 $$ elis = new BookKeeperEditLogInputStream(h, l)-->Line_23 $$ streams.add(elis)[ FD ]
Line_11 $$ if (fromTxId >= l.getFirstTxId() && fromTxId <= lastTxId) -->Line_21 $$ return[ CD ]
Line_6 $$ for (EditLogLedgerMetadata l : currentLedgerList) -->Line_7 $$ long lastTxId = l.getLastTxId()[ FD ]
Line_18 $$ elis = new BookKeeperEditLogInputStream(h, l)-->Line_19 $$ elis.skipTo(fromTxId)[ FD ]
Line_6 $$ for (EditLogLedgerMetadata l : currentLedgerList) -->Line_14 $$ h = bkc.openLedgerNoRecovery(l.getLedgerId(), BookKeeper.DigestType.MAC, digestpw.getBytes())[ FD ]
Line_7 $$ long lastTxId = l.getLastTxId()-->Line_9 $$ lastTxId = recoverLastTxId(l, false)[ FD ]
