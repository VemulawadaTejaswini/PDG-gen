Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_9 $$ slot.clear()[ CD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_12 $$ if (LOG.isTraceEnabled()) [ CD ]
Line_3 $$ int idx = allocatedSlots.nextClearBit(0)-->Line_7 $$ allocatedSlots.set(idx, true)[ FD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_3 $$ int idx = allocatedSlots.nextClearBit(0)[ CD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_15 $$ return slot[ CD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_8 $$ Slot slot = new Slot(calculateSlotAddress(idx), blockId)[ CD ]
Line_8 $$ Slot slot = new Slot(calculateSlotAddress(idx), blockId)-->Line_9 $$ slot.clear()[ FD ]
Line_8 $$ Slot slot = new Slot(calculateSlotAddress(idx), blockId)-->Line_11 $$ slots[idx] = slot[ FD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_11 $$ slots[idx] = slot[ CD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_7 $$ allocatedSlots.set(idx, true)[ CD ]
Line_12 $$ if (LOG.isTraceEnabled()) -->Line_13 $$ LOG.trace(this + ": allocAndRegisterSlot " + idx + ": allocatedSlots=" + allocatedSlots + StringUtils.getStackTrace(Thread.currentThread()))[ CD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_4 $$ if (idx >= slots.length) [ CD ]
Line_3 $$ int idx = allocatedSlots.nextClearBit(0)-->Line_4 $$ if (idx >= slots.length) [ FD ]
Line_2 $$ public final synchronized Slot allocAndRegisterSlot(ExtendedBlockId blockId) -->Line_10 $$ slot.makeValid()[ CD ]
Line_3 $$ int idx = allocatedSlots.nextClearBit(0)-->Line_8 $$ Slot slot = new Slot(calculateSlotAddress(idx), blockId)[ FD ]
Line_8 $$ Slot slot = new Slot(calculateSlotAddress(idx), blockId)-->Line_10 $$ slot.makeValid()[ FD ]
