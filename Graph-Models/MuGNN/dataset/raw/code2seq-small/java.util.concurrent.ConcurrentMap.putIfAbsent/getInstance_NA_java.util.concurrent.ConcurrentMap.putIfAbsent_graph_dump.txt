Line_3 $$ Object res = CACHE.get(className)-->Line_12 $$ res = oldValue[ FD ]
Line_2 $$ public static <T> T getInstance(@NotNull String className, ClassLoader classLoader) -->Line_15 $$ return (T) res[ CD ]
Line_10 $$ Object oldValue = CACHE.putIfAbsent(className, res)-->Line_11 $$ if (oldValue != null) [ FD ]
Line_2 $$ public static <T> T getInstance(@NotNull String className, ClassLoader classLoader) -->Line_6 $$ res = classLoader.loadClass(className).newInstance()[ FD ]
Line_4 $$ if (res == null) -->Line_10 $$ Object oldValue = CACHE.putIfAbsent(className, res)[ CD ]
Line_6 $$ res = classLoader.loadClass(className).newInstance()-->Line_10 $$ Object oldValue = CACHE.putIfAbsent(className, res)[ FD ]
Line_6 $$ res = classLoader.loadClass(className).newInstance()-->Line_12 $$ res = oldValue[ FD ]
Line_3 $$ Object res = CACHE.get(className)-->Line_4 $$ if (res == null) [ FD ]
Line_3 $$ Object res = CACHE.get(className)-->Line_10 $$ Object oldValue = CACHE.putIfAbsent(className, res)[ FD ]
Line_4 $$ if (res == null) -->Line_11 $$ if (oldValue != null) [ CD ]
Line_11 $$ if (oldValue != null) -->Line_12 $$ res = oldValue[ CD ]
Line_10 $$ Object oldValue = CACHE.putIfAbsent(className, res)-->Line_12 $$ res = oldValue[ FD ]
Line_3 $$ Object res = CACHE.get(className)-->Line_6 $$ res = classLoader.loadClass(className).newInstance()[ FD ]
Line_2 $$ public static <T> T getInstance(@NotNull String className, ClassLoader classLoader) -->Line_3 $$ Object res = CACHE.get(className)[ CD ]
Line_2 $$ public static <T> T getInstance(@NotNull String className, ClassLoader classLoader) -->Line_10 $$ Object oldValue = CACHE.putIfAbsent(className, res)[ FD ]
Line_2 $$ public static <T> T getInstance(@NotNull String className, ClassLoader classLoader) -->Line_4 $$ if (res == null) [ CD ]
Line_2 $$ public static <T> T getInstance(@NotNull String className, ClassLoader classLoader) -->Line_3 $$ Object res = CACHE.get(className)[ FD ]
