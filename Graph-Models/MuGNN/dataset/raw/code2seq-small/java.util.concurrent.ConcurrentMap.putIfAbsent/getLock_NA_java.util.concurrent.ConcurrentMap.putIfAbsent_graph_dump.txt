Line_2 $$ private Lock getLock(final String timedObjectId) -->Line_4 $$ if (lock == null) [ CD ]
Line_3 $$ Lock lock = locks.get(timedObjectId)-->Line_4 $$ if (lock == null) [ FD ]
Line_4 $$ if (lock == null) -->Line_6 $$ lock = locks.putIfAbsent(timedObjectId, addedLock)[ CD ]
Line_2 $$ private Lock getLock(final String timedObjectId) -->Line_6 $$ lock = locks.putIfAbsent(timedObjectId, addedLock)[ FD ]
Line_2 $$ private Lock getLock(final String timedObjectId) -->Line_3 $$ Lock lock = locks.get(timedObjectId)[ FD ]
Line_2 $$ private Lock getLock(final String timedObjectId) -->Line_3 $$ Lock lock = locks.get(timedObjectId)[ CD ]
Line_5 $$ final Lock addedLock = new ReentrantLock()-->Line_6 $$ lock = locks.putIfAbsent(timedObjectId, addedLock)[ FD ]
Line_3 $$ Lock lock = locks.get(timedObjectId)-->Line_8 $$ lock = addedLock[ FD ]
Line_4 $$ if (lock == null) -->Line_7 $$ if (lock == null) [ CD ]
Line_4 $$ if (lock == null) -->Line_5 $$ final Lock addedLock = new ReentrantLock()[ CD ]
Line_5 $$ final Lock addedLock = new ReentrantLock()-->Line_8 $$ lock = addedLock[ FD ]
Line_7 $$ if (lock == null) -->Line_8 $$ lock = addedLock[ CD ]
Line_6 $$ lock = locks.putIfAbsent(timedObjectId, addedLock)-->Line_8 $$ lock = addedLock[ FD ]
Line_3 $$ Lock lock = locks.get(timedObjectId)-->Line_7 $$ if (lock == null) [ FD ]
Line_2 $$ private Lock getLock(final String timedObjectId) -->Line_11 $$ return lock[ CD ]
Line_6 $$ lock = locks.putIfAbsent(timedObjectId, addedLock)-->Line_7 $$ if (lock == null) [ FD ]
Line_3 $$ Lock lock = locks.get(timedObjectId)-->Line_6 $$ lock = locks.putIfAbsent(timedObjectId, addedLock)[ FD ]
