Line_10 $$ Key key = buildKey(request, context)-->Line_12 $$ Value value = cache.computeIfAbsent(key, loader)[ FD ]
Line_13 $$ if (loader.isLoaded()) -->Line_24 $$ key.shard.requestCache().onHit()[ CD ]
Line_11 $$ Loader loader = new Loader(queryPhase, context)-->Line_13 $$ if (loader.isLoaded()) [ FD ]
Line_17 $$ if (!registeredClosedListeners.containsKey(cleanupKey)) -->Line_18 $$ Boolean previous = registeredClosedListeners.putIfAbsent(cleanupKey, Boolean.TRUE)[ CD ]
Line_13 $$ if (loader.isLoaded()) -->Line_28 $$ result.shardTarget(context.shardTarget())[ CD ]
Line_17 $$ if (!registeredClosedListeners.containsKey(cleanupKey)) -->Line_19 $$ if (previous == null) [ CD ]
Line_13 $$ if (loader.isLoaded()) -->Line_27 $$ result.readFromWithId(context.id(), value.reference.streamInput())[ CD ]
Line_19 $$ if (previous == null) -->Line_20 $$ ElasticsearchDirectoryReader.addReaderCloseListener(context.searcher().getDirectoryReader(), cleanupKey)[ CD ]
Line_13 $$ if (loader.isLoaded()) -->Line_14 $$ key.shard.requestCache().onMiss()[ CD ]
Line_13 $$ if (loader.isLoaded()) -->Line_17 $$ if (!registeredClosedListeners.containsKey(cleanupKey)) [ CD ]
Line_11 $$ Loader loader = new Loader(queryPhase, context)-->Line_12 $$ Value value = cache.computeIfAbsent(key, loader)[ FD ]
Line_18 $$ Boolean previous = registeredClosedListeners.putIfAbsent(cleanupKey, Boolean.TRUE)-->Line_19 $$ if (previous == null) [ FD ]
