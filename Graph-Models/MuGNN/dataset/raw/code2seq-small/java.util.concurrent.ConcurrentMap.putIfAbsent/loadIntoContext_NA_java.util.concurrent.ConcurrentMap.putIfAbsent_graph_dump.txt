Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_5 $$ Loader loader = new Loader(queryPhase, context)[ CD ]
Line_9 $$ CleanupKey cleanupKey = new CleanupKey(context.indexShard(), ((DirectoryReader) context.searcher().getIndexReader()).getVersion())-->Line_10 $$ if (!registeredClosedListeners.containsKey(cleanupKey)) [ FD ]
Line_5 $$ Loader loader = new Loader(queryPhase, context)-->Line_6 $$ Value value = cache.computeIfAbsent(key, loader)[ FD ]
Line_5 $$ Loader loader = new Loader(queryPhase, context)-->Line_7 $$ if (loader.isLoaded()) [ FD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_18 $$ final QuerySearchResult result = context.queryResult()[ FD ]
Line_12 $$ if (previous == null) -->Line_13 $$ ElasticsearchDirectoryReader.addReaderCloseListener(context.searcher().getDirectoryReader(), cleanupKey)[ CD ]
Line_10 $$ if (!registeredClosedListeners.containsKey(cleanupKey)) -->Line_12 $$ if (previous == null) [ CD ]
Line_7 $$ if (loader.isLoaded()) -->Line_19 $$ result.readFromWithId(context.id(), value.reference.streamInput())[ CD ]
Line_7 $$ if (loader.isLoaded()) -->Line_8 $$ key.shard.requestCache().onMiss()[ CD ]
Line_7 $$ if (loader.isLoaded()) -->Line_9 $$ CleanupKey cleanupKey = new CleanupKey(context.indexShard(), ((DirectoryReader) context.searcher().getIndexReader()).getVersion())[ CD ]
Line_9 $$ CleanupKey cleanupKey = new CleanupKey(context.indexShard(), ((DirectoryReader) context.searcher().getIndexReader()).getVersion())-->Line_11 $$ Boolean previous = registeredClosedListeners.putIfAbsent(cleanupKey, Boolean.TRUE)[ FD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_4 $$ Key key = buildKey(request, context)[ CD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_19 $$ result.readFromWithId(context.id(), value.reference.streamInput())[ FD ]
Line_7 $$ if (loader.isLoaded()) -->Line_17 $$ key.shard.requestCache().onHit()[ CD ]
Line_18 $$ final QuerySearchResult result = context.queryResult()-->Line_20 $$ result.shardTarget(context.shardTarget())[ FD ]
Line_11 $$ Boolean previous = registeredClosedListeners.putIfAbsent(cleanupKey, Boolean.TRUE)-->Line_12 $$ if (previous == null) [ FD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_9 $$ CleanupKey cleanupKey = new CleanupKey(context.indexShard(), ((DirectoryReader) context.searcher().getIndexReader()).getVersion())[ FD ]
Line_10 $$ if (!registeredClosedListeners.containsKey(cleanupKey)) -->Line_11 $$ Boolean previous = registeredClosedListeners.putIfAbsent(cleanupKey, Boolean.TRUE)[ CD ]
Line_18 $$ final QuerySearchResult result = context.queryResult()-->Line_19 $$ result.readFromWithId(context.id(), value.reference.streamInput())[ FD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_13 $$ ElasticsearchDirectoryReader.addReaderCloseListener(context.searcher().getDirectoryReader(), cleanupKey)[ FD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_3 $$ assert canCache(request, context)[ FD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_6 $$ Value value = cache.computeIfAbsent(key, loader)[ CD ]
Line_9 $$ CleanupKey cleanupKey = new CleanupKey(context.indexShard(), ((DirectoryReader) context.searcher().getIndexReader()).getVersion())-->Line_13 $$ ElasticsearchDirectoryReader.addReaderCloseListener(context.searcher().getDirectoryReader(), cleanupKey)[ FD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_7 $$ if (loader.isLoaded()) [ CD ]
Line_7 $$ if (loader.isLoaded()) -->Line_20 $$ result.shardTarget(context.shardTarget())[ CD ]
Line_4 $$ Key key = buildKey(request, context)-->Line_6 $$ Value value = cache.computeIfAbsent(key, loader)[ FD ]
Line_7 $$ if (loader.isLoaded()) -->Line_18 $$ final QuerySearchResult result = context.queryResult()[ CD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_4 $$ Key key = buildKey(request, context)[ FD ]
Line_7 $$ if (loader.isLoaded()) -->Line_10 $$ if (!registeredClosedListeners.containsKey(cleanupKey)) [ CD ]
Line_2 $$ public void loadIntoContext(final ShardSearchRequest request, final SearchContext context, final QueryPhase queryPhase) throws Exception -->Line_20 $$ result.shardTarget(context.shardTarget())[ FD ]
