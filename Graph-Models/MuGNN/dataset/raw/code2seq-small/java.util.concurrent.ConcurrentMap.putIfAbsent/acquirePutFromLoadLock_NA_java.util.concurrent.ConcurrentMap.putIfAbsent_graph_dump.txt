Line_32 $$ if (pending.lastInvalidationEnd != Long.MIN_VALUE) -->Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd[ CD ]
Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)-->Line_70 $$ pending = existing[ FD ]
Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp-->Line_40 $$ if (!valid && pending != null) [ FD ]
Line_55 $$ long regionInvalidationTimestamp = this.regionInvalidationTimestamp-->Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp[ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_41 $$ pending.releaseLock()[ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_70 $$ pending = existing[ FD ]
Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)-->Line_17 $$ locked = false[ FD ]
Line_29 $$ if (pending.hasInvalidator()) -->Line_30 $$ valid = false[ CD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_29 $$ if (pending.hasInvalidator()) [ FD ]
Line_70 $$ pending = existing-->Line_24 $$ final PendingPut toCancel = pending.remove(session)[ FD ]
Line_69 $$ if (existing != null) -->Line_70 $$ pending = existing[ CD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_24 $$ final PendingPut toCancel = pending.remove(session)[ FD ]
Line_10 $$ if (pending != null) -->Line_56 $$ if (txTimestamp <= regionInvalidationTimestamp) [ CD ]
Line_6 $$ boolean locked = false-->Line_42 $$ locked = false[ FD ]
Line_18 $$ pending = null-->Line_15 $$ if (pending.isRemoved()) [ FD ]
Line_10 $$ if (pending != null) -->Line_12 $$ if (locked) [ CD ]
Line_70 $$ pending = existing-->Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)[ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_16 $$ pending.releaseLock()[ FD ]
Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)-->Line_69 $$ if (existing != null) [ FD ]
Line_30 $$ valid = false-->Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd[ FD ]
Line_6 $$ boolean locked = false-->Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)[ FD ]
Line_13 $$ boolean valid = false-->Line_40 $$ if (!valid && pending != null) [ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_17 $$ locked = false-->Line_42 $$ locked = false[ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_63 $$ log.tracef("Region invalidated at %d, this transaction started at %d", regionInvalidationTimestamp, txTimestamp)[ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_25 $$ if (toCancel != null) -->Line_29 $$ if (pending.hasInvalidator()) [ CD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_4 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d)", cache.getName(), key, txTimestamp)[ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_24 $$ final PendingPut toCancel = pending.remove(session)[ FD ]
Line_13 $$ boolean valid = false-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)[ FD ]
Line_26 $$ valid = !toCancel.completed-->Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp[ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_75 $$ pending.releaseLock()[ FD ]
Line_70 $$ pending = existing-->Line_41 $$ pending.releaseLock()[ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_15 $$ if (pending.isRemoved()) [ FD ]
Line_70 $$ pending = existing-->Line_29 $$ if (pending.hasInvalidator()) [ FD ]
Line_18 $$ pending = null-->Line_75 $$ pending.releaseLock()[ FD ]
Line_25 $$ if (toCancel != null) -->Line_26 $$ valid = !toCancel.completed[ CD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd[ FD ]
Line_12 $$ if (locked) -->Line_13 $$ boolean valid = false[ CD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_18 $$ pending = null-->Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)[ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_15 $$ if (pending.isRemoved()) [ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_58 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) failed due to region invalidated at %d", cache.getName(), key, txTimestamp, regionInvalidationTimestamp)[ FD ]
Line_18 $$ pending = null-->Line_67 $$ pending = new PendingPutMap(pendingPut)[ FD ]
Line_26 $$ valid = !toCancel.completed-->Line_30 $$ valid = false[ FD ]
Line_10 $$ if (pending != null) -->Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)[ CD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_29 $$ if (pending.hasInvalidator()) [ FD ]
Line_6 $$ boolean locked = false-->Line_17 $$ locked = false[ FD ]
Line_30 $$ valid = false-->Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp[ FD ]
Line_74 $$ if (locked) -->Line_75 $$ pending.releaseLock()[ CD ]
Line_10 $$ if (pending != null) -->Line_67 $$ pending = new PendingPutMap(pendingPut)[ CD ]
Line_29 $$ if (pending.hasInvalidator()) -->Line_32 $$ if (pending.lastInvalidationEnd != Long.MIN_VALUE) [ CD ]
Line_12 $$ if (locked) -->Line_52 $$ return null[ CD ]
Line_13 $$ boolean valid = false-->Line_26 $$ valid = !toCancel.completed[ FD ]
Line_56 $$ if (txTimestamp <= regionInvalidationTimestamp) -->Line_60 $$ return null[ CD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_41 $$ pending.releaseLock()[ FD ]
Line_13 $$ boolean valid = false-->Line_30 $$ valid = false[ FD ]
Line_15 $$ if (pending.isRemoved()) -->Line_19 $$ if (trace) [ CD ]
Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd-->Line_40 $$ if (!valid && pending != null) [ FD ]
Line_25 $$ if (toCancel != null) -->Line_27 $$ toCancel.completed = true[ CD ]
Line_15 $$ if (pending.isRemoved()) -->Line_16 $$ pending.releaseLock()[ CD ]
Line_26 $$ valid = !toCancel.completed-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_56 $$ if (txTimestamp <= regionInvalidationTimestamp) -->Line_57 $$ if (trace) [ CD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_24 $$ final PendingPut toCancel = pending.remove(session)[ FD ]
Line_18 $$ pending = null-->Line_16 $$ pending.releaseLock()[ FD ]
Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_49 $$ if (trace) -->Line_50 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) failed to lock", cache.getName(), key, txTimestamp)[ CD ]
Line_40 $$ if (!valid && pending != null) -->Line_42 $$ locked = false[ CD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_56 $$ if (txTimestamp <= regionInvalidationTimestamp) [ FD ]
Line_56 $$ if (txTimestamp <= regionInvalidationTimestamp) -->Line_62 $$ if (trace) [ CD ]
Line_18 $$ pending = null-->Line_70 $$ pending = existing[ FD ]
Line_13 $$ boolean valid = false-->Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp[ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_8 $$ for (; ; ) [ CD ]
Line_10 $$ if (pending != null) -->Line_55 $$ long regionInvalidationTimestamp = this.regionInvalidationTimestamp[ CD ]
Line_3 $$ if (trace) -->Line_4 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d)", cache.getName(), key, txTimestamp)[ CD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_10 $$ if (pending != null) [ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_18 $$ pending = null[ FD ]
Line_10 $$ if (pending != null) -->Line_66 $$ PendingPut pendingPut = new PendingPut(session)[ CD ]
Line_55 $$ long regionInvalidationTimestamp = this.regionInvalidationTimestamp-->Line_56 $$ if (txTimestamp <= regionInvalidationTimestamp) [ FD ]
Line_30 $$ valid = false-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_15 $$ if (pending.isRemoved()) -->Line_18 $$ pending = null[ CD ]
Line_30 $$ valid = false-->Line_40 $$ if (!valid && pending != null) [ FD ]
Line_70 $$ pending = existing-->Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)[ FD ]
Line_70 $$ pending = existing-->Line_15 $$ if (pending.isRemoved()) [ FD ]
Line_26 $$ valid = !toCancel.completed-->Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd[ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_7 $$ PendingPutMap pending = pendingPuts.get(key)[ FD ]
Line_10 $$ if (pending != null) -->Line_69 $$ if (existing != null) [ CD ]
Line_19 $$ if (trace) -->Line_20 $$ log.tracef("Record removed when waiting for the lock.")[ CD ]
Line_26 $$ valid = !toCancel.completed-->Line_40 $$ if (!valid && pending != null) [ FD ]
Line_57 $$ if (trace) -->Line_58 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) failed due to region invalidated at %d", cache.getName(), key, txTimestamp, regionInvalidationTimestamp)[ CD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)[ FD ]
Line_70 $$ pending = existing-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_44 $$ if (trace) -->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ CD ]
Line_18 $$ pending = null-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_18 $$ pending = null-->Line_29 $$ if (pending.hasInvalidator()) [ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_67 $$ pending = new PendingPutMap(pendingPut)[ FD ]
Line_10 $$ if (pending != null) -->Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)[ CD ]
Line_55 $$ long regionInvalidationTimestamp = this.regionInvalidationTimestamp-->Line_58 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) failed due to region invalidated at %d", cache.getName(), key, txTimestamp, regionInvalidationTimestamp)[ FD ]
Line_70 $$ pending = existing-->Line_75 $$ pending.releaseLock()[ FD ]
Line_18 $$ pending = null-->Line_41 $$ pending.releaseLock()[ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp[ FD ]
Line_24 $$ final PendingPut toCancel = pending.remove(session)-->Line_25 $$ if (toCancel != null) [ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)[ FD ]
Line_32 $$ if (pending.lastInvalidationEnd != Long.MIN_VALUE) -->Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp[ CD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_70 $$ pending = existing[ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)[ FD ]
Line_18 $$ pending = null-->Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)[ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_6 $$ boolean locked = false[ CD ]
Line_15 $$ if (pending.isRemoved()) -->Line_17 $$ locked = false[ CD ]
Line_11 $$ locked = pending.acquireLock(100, TimeUnit.MILLISECONDS)-->Line_42 $$ locked = false[ FD ]
Line_18 $$ pending = null-->Line_10 $$ if (pending != null) [ FD ]
Line_70 $$ pending = existing-->Line_16 $$ pending.releaseLock()[ FD ]
Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd-->Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp[ FD ]
Line_12 $$ if (locked) -->Line_49 $$ if (trace) [ CD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_16 $$ pending.releaseLock()[ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_75 $$ pending.releaseLock()[ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_3 $$ if (trace) [ CD ]
Line_18 $$ pending = null-->Line_24 $$ final PendingPut toCancel = pending.remove(session)[ FD ]
Line_62 $$ if (trace) -->Line_63 $$ log.tracef("Region invalidated at %d, this transaction started at %d", regionInvalidationTimestamp, txTimestamp)[ CD ]
Line_55 $$ long regionInvalidationTimestamp = this.regionInvalidationTimestamp-->Line_63 $$ log.tracef("Region invalidated at %d, this transaction started at %d", regionInvalidationTimestamp, txTimestamp)[ FD ]
Line_7 $$ PendingPutMap pending = pendingPuts.get(key)-->Line_68 $$ PendingPutMap existing = pendingPuts.putIfAbsent(key, pending)[ FD ]
Line_67 $$ pending = new PendingPutMap(pendingPut)-->Line_10 $$ if (pending != null) [ FD ]
Line_13 $$ boolean valid = false-->Line_33 $$ valid = txTimestamp > pending.lastInvalidationEnd[ FD ]
Line_77 $$ if (t instanceof RuntimeException) -->Line_79 $$ if (t instanceof Error) [ CD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_7 $$ PendingPutMap pending = pendingPuts.get(key)[ CD ]
Line_35 $$ valid = txTimestamp > regionInvalidationTimestamp-->Line_45 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) ended with %s, valid: %s", cache.getName(), key, txTimestamp, pending, valid)[ FD ]
Line_2 $$ public Lock acquirePutFromLoadLock(SessionImplementor session, Object key, long txTimestamp) -->Line_50 $$ log.tracef("acquirePutFromLoadLock(%s#%s, %d) failed to lock", cache.getName(), key, txTimestamp)[ FD ]
Line_70 $$ pending = existing-->Line_10 $$ if (pending != null) [ FD ]
Line_40 $$ if (!valid && pending != null) -->Line_41 $$ pending.releaseLock()[ CD ]
