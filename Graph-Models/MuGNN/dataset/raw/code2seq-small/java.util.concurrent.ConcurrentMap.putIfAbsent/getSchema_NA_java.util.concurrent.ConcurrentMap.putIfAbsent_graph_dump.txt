Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_3 $$ Schema schema = SCHEMA_CACHE.get(schemaResource)[ CD ]
Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_9 $$ return previous != null ? previous : schema[ CD ]
Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_7 $$ schema = loadSchema(schemaResource)[ CD ]
Line_4 $$ if (schema != null) -->Line_5 $$ return schema[ CD ]
Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_8 $$ Schema previous = SCHEMA_CACHE.putIfAbsent(schemaResource, schema)[ FD ]
Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_3 $$ Schema schema = SCHEMA_CACHE.get(schemaResource)[ FD ]
Line_3 $$ Schema schema = SCHEMA_CACHE.get(schemaResource)-->Line_7 $$ schema = loadSchema(schemaResource)[ FD ]
Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_7 $$ schema = loadSchema(schemaResource)[ FD ]
Line_3 $$ Schema schema = SCHEMA_CACHE.get(schemaResource)-->Line_4 $$ if (schema != null) [ FD ]
Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_8 $$ Schema previous = SCHEMA_CACHE.putIfAbsent(schemaResource, schema)[ CD ]
Line_2 $$ public Schema getSchema(String schemaResource) throws XmlParsingException -->Line_4 $$ if (schema != null) [ CD ]
Line_7 $$ schema = loadSchema(schemaResource)-->Line_8 $$ Schema previous = SCHEMA_CACHE.putIfAbsent(schemaResource, schema)[ FD ]
Line_3 $$ Schema schema = SCHEMA_CACHE.get(schemaResource)-->Line_8 $$ Schema previous = SCHEMA_CACHE.putIfAbsent(schemaResource, schema)[ FD ]
