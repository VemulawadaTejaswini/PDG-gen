Line_4 $$ if (v != null)-->Line_5 $$ return v[ CD ]
Line_2 $$ public static <K, V> V cacheOrGet(@NotNull ConcurrentMap<K, V> map, @NotNull final K key, @NotNull final V defaultValue) -->Line_6 $$ V prev = map.putIfAbsent(key, defaultValue)[ CD ]
Line_2 $$ public static <K, V> V cacheOrGet(@NotNull ConcurrentMap<K, V> map, @NotNull final K key, @NotNull final V defaultValue) -->Line_6 $$ V prev = map.putIfAbsent(key, defaultValue)[ FD ]
Line_2 $$ public static <K, V> V cacheOrGet(@NotNull ConcurrentMap<K, V> map, @NotNull final K key, @NotNull final V defaultValue) -->Line_7 $$ return prev == null ? defaultValue : prev[ CD ]
Line_2 $$ public static <K, V> V cacheOrGet(@NotNull ConcurrentMap<K, V> map, @NotNull final K key, @NotNull final V defaultValue) -->Line_4 $$ if (v != null)[ CD ]
Line_2 $$ public static <K, V> V cacheOrGet(@NotNull ConcurrentMap<K, V> map, @NotNull final K key, @NotNull final V defaultValue) -->Line_3 $$ V v = map.get(key)[ CD ]
Line_2 $$ public static <K, V> V cacheOrGet(@NotNull ConcurrentMap<K, V> map, @NotNull final K key, @NotNull final V defaultValue) -->Line_3 $$ V v = map.get(key)[ FD ]
Line_3 $$ V v = map.get(key)-->Line_4 $$ if (v != null)[ FD ]
