Line_17 $$ InetAddress address = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress()-->Line_21 $$ AtomicLong old = connectionsPerClient.putIfAbsent(address, perIpCount)[ FD ]
Line_10 $$ if (count > limit) -->Line_13 $$ ctx.close()[ CD ]
Line_4 $$ final long count = counter.incrementAndGet()-->Line_10 $$ if (count > limit) [ FD ]
Line_18 $$ AtomicLong perIpCount = connectionsPerClient.get(address)-->Line_19 $$ if (perIpCount == null) [ FD ]
Line_22 $$ if (old != null) -->Line_23 $$ perIpCount = old[ CD ]
Line_5 $$ long limit = DatabaseDescriptor.getNativeTransportMaxConcurrentConnections()-->Line_8 $$ limit = Long.MAX_VALUE[ FD ]
Line_18 $$ AtomicLong perIpCount = connectionsPerClient.get(address)-->Line_20 $$ perIpCount = new AtomicLong(0)[ FD ]
Line_10 $$ if (count > limit) -->Line_15 $$ long perIpLimit = DatabaseDescriptor.getNativeTransportMaxConcurrentConnectionsPerIp()[ CD ]
Line_10 $$ if (count > limit) -->Line_33 $$ ctx.fireChannelActive()[ CD ]
Line_19 $$ if (perIpCount == null) -->Line_21 $$ AtomicLong old = connectionsPerClient.putIfAbsent(address, perIpCount)[ CD ]
Line_16 $$ if (perIpLimit > 0) -->Line_17 $$ InetAddress address = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress()[ CD ]
Line_18 $$ AtomicLong perIpCount = connectionsPerClient.get(address)-->Line_21 $$ AtomicLong old = connectionsPerClient.putIfAbsent(address, perIpCount)[ FD ]
Line_21 $$ AtomicLong old = connectionsPerClient.putIfAbsent(address, perIpCount)-->Line_23 $$ perIpCount = old[ FD ]
Line_10 $$ if (count > limit) -->Line_16 $$ if (perIpLimit > 0) [ CD ]
Line_15 $$ long perIpLimit = DatabaseDescriptor.getNativeTransportMaxConcurrentConnectionsPerIp()-->Line_16 $$ if (perIpLimit > 0) [ FD ]
Line_16 $$ if (perIpLimit > 0) -->Line_26 $$ if (perIpCount.incrementAndGet() > perIpLimit) [ CD ]
Line_15 $$ long perIpLimit = DatabaseDescriptor.getNativeTransportMaxConcurrentConnectionsPerIp()-->Line_26 $$ if (perIpCount.incrementAndGet() > perIpLimit) [ FD ]
Line_8 $$ limit = Long.MAX_VALUE-->Line_10 $$ if (count > limit) [ FD ]
Line_19 $$ if (perIpCount == null) -->Line_22 $$ if (old != null) [ CD ]
Line_20 $$ perIpCount = new AtomicLong(0)-->Line_26 $$ if (perIpCount.incrementAndGet() > perIpLimit) [ FD ]
Line_26 $$ if (perIpCount.incrementAndGet() > perIpLimit) -->Line_29 $$ ctx.close()[ CD ]
Line_26 $$ if (perIpCount.incrementAndGet() > perIpLimit) -->Line_30 $$ return[ CD ]
Line_16 $$ if (perIpLimit > 0) -->Line_18 $$ AtomicLong perIpCount = connectionsPerClient.get(address)[ CD ]
Line_20 $$ perIpCount = new AtomicLong(0)-->Line_23 $$ perIpCount = old[ FD ]
Line_18 $$ AtomicLong perIpCount = connectionsPerClient.get(address)-->Line_23 $$ perIpCount = old[ FD ]
Line_18 $$ AtomicLong perIpCount = connectionsPerClient.get(address)-->Line_26 $$ if (perIpCount.incrementAndGet() > perIpLimit) [ FD ]
Line_21 $$ AtomicLong old = connectionsPerClient.putIfAbsent(address, perIpCount)-->Line_22 $$ if (old != null) [ FD ]
Line_19 $$ if (perIpCount == null) -->Line_20 $$ perIpCount = new AtomicLong(0)[ CD ]
Line_20 $$ perIpCount = new AtomicLong(0)-->Line_21 $$ AtomicLong old = connectionsPerClient.putIfAbsent(address, perIpCount)[ FD ]
Line_23 $$ perIpCount = old-->Line_26 $$ if (perIpCount.incrementAndGet() > perIpLimit) [ FD ]
Line_17 $$ InetAddress address = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress()-->Line_18 $$ AtomicLong perIpCount = connectionsPerClient.get(address)[ FD ]
Line_5 $$ long limit = DatabaseDescriptor.getNativeTransportMaxConcurrentConnections()-->Line_10 $$ if (count > limit) [ FD ]
Line_16 $$ if (perIpLimit > 0) -->Line_19 $$ if (perIpCount == null) [ CD ]
