Line_2 $$ public Object getClient(Class<?> protocol, long clientVersion, InetSocketAddress addr, Configuration conf) -->Line_20 $$ Object retObject = constructor.newInstance(clientVersion, addr, conf)[ FD ]
Line_2 $$ public Object getClient(Class<?> protocol, long clientVersion, InetSocketAddress addr, Configuration conf) -->Line_9 $$ throw new YarnRuntimeException("Failed to load class: [" + getPBImplClassName(protocol) + "]", e)[ FD ]
Line_12 $$ constructor = pbClazz.getConstructor(Long.TYPE, InetSocketAddress.class, Configuration.class)-->Line_20 $$ Object retObject = constructor.newInstance(clientVersion, addr, conf)[ FD ]
Line_3 $$ Constructor<?> constructor = cache.get(protocol)-->Line_20 $$ Object retObject = constructor.newInstance(clientVersion, addr, conf)[ FD ]
Line_2 $$ public Object getClient(Class<?> protocol, long clientVersion, InetSocketAddress addr, Configuration conf) -->Line_4 $$ if (constructor == null) [ CD ]
Line_3 $$ Constructor<?> constructor = cache.get(protocol)-->Line_12 $$ constructor = pbClazz.getConstructor(Long.TYPE, InetSocketAddress.class, Configuration.class)[ FD ]
Line_3 $$ Constructor<?> constructor = cache.get(protocol)-->Line_13 $$ constructor.setAccessible(true)[ FD ]
Line_3 $$ Constructor<?> constructor = cache.get(protocol)-->Line_14 $$ cache.putIfAbsent(protocol, constructor)[ FD ]
Line_5 $$ Class<?> pbClazz = null-->Line_7 $$ pbClazz = localConf.getClassByName(getPBImplClassName(protocol))[ FD ]
Line_5 $$ Class<?> pbClazz = null-->Line_12 $$ constructor = pbClazz.getConstructor(Long.TYPE, InetSocketAddress.class, Configuration.class)[ FD ]
Line_4 $$ if (constructor == null) -->Line_5 $$ Class<?> pbClazz = null[ CD ]
Line_3 $$ Constructor<?> constructor = cache.get(protocol)-->Line_4 $$ if (constructor == null) [ FD ]
Line_2 $$ public Object getClient(Class<?> protocol, long clientVersion, InetSocketAddress addr, Configuration conf) -->Line_14 $$ cache.putIfAbsent(protocol, constructor)[ FD ]
Line_2 $$ public Object getClient(Class<?> protocol, long clientVersion, InetSocketAddress addr, Configuration conf) -->Line_7 $$ pbClazz = localConf.getClassByName(getPBImplClassName(protocol))[ FD ]
Line_12 $$ constructor = pbClazz.getConstructor(Long.TYPE, InetSocketAddress.class, Configuration.class)-->Line_14 $$ cache.putIfAbsent(protocol, constructor)[ FD ]
Line_7 $$ pbClazz = localConf.getClassByName(getPBImplClassName(protocol))-->Line_12 $$ constructor = pbClazz.getConstructor(Long.TYPE, InetSocketAddress.class, Configuration.class)[ FD ]
Line_2 $$ public Object getClient(Class<?> protocol, long clientVersion, InetSocketAddress addr, Configuration conf) -->Line_3 $$ Constructor<?> constructor = cache.get(protocol)[ CD ]
Line_2 $$ public Object getClient(Class<?> protocol, long clientVersion, InetSocketAddress addr, Configuration conf) -->Line_3 $$ Constructor<?> constructor = cache.get(protocol)[ FD ]
Line_12 $$ constructor = pbClazz.getConstructor(Long.TYPE, InetSocketAddress.class, Configuration.class)-->Line_13 $$ constructor.setAccessible(true)[ FD ]
