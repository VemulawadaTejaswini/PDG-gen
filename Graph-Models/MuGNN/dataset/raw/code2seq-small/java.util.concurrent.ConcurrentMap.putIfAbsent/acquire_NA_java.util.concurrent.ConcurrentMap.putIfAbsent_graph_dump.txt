Line_3 $$ while (true) -->Line_20 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) [ CD ]
Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_12 $$ if (perNodeLock == null) [ FD ]
Line_2 $$ public void acquire(T key) -->Line_3 $$ while (true) [ CD ]
Line_12 $$ if (perNodeLock == null) -->Line_14 $$ threadLocal.set(newLock)[ CD ]
Line_10 $$ KeyLock newLock = new KeyLock(fair)-->Line_14 $$ threadLocal.set(newLock)[ FD ]
Line_2 $$ public void acquire(T key) -->Line_8 $$ KeyLock perNodeLock = map.get(key)[ FD ]
Line_8 $$ KeyLock perNodeLock = map.get(key)-->Line_21 $$ perNodeLock.lock()[ FD ]
Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_9 $$ if (perNodeLock == null) [ FD ]
Line_3 $$ while (true) -->Line_19 $$ int i = perNodeLock.count.get()[ CD ]
Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_22 $$ threadLocal.set(perNodeLock)[ FD ]
Line_12 $$ if (perNodeLock == null) -->Line_13 $$ newLock.lock()[ CD ]
Line_20 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) -->Line_23 $$ return[ CD ]
Line_20 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) -->Line_22 $$ threadLocal.set(perNodeLock)[ CD ]
Line_12 $$ if (perNodeLock == null) -->Line_15 $$ return[ CD ]
Line_19 $$ int i = perNodeLock.count.get()-->Line_20 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) [ FD ]
Line_3 $$ while (true) -->Line_4 $$ if (threadLocal.get() != null) [ CD ]
Line_8 $$ KeyLock perNodeLock = map.get(key)-->Line_9 $$ if (perNodeLock == null) [ FD ]
Line_10 $$ KeyLock newLock = new KeyLock(fair)-->Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)[ FD ]
Line_10 $$ KeyLock newLock = new KeyLock(fair)-->Line_13 $$ newLock.lock()[ FD ]
Line_3 $$ while (true) -->Line_9 $$ if (perNodeLock == null) [ CD ]
Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)-->Line_21 $$ perNodeLock.lock()[ FD ]
Line_9 $$ if (perNodeLock == null) -->Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)[ CD ]
Line_8 $$ KeyLock perNodeLock = map.get(key)-->Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)[ FD ]
Line_8 $$ KeyLock perNodeLock = map.get(key)-->Line_12 $$ if (perNodeLock == null) [ FD ]
Line_20 $$ if (i > 0 && perNodeLock.count.compareAndSet(i, i + 1)) -->Line_21 $$ perNodeLock.lock()[ CD ]
Line_9 $$ if (perNodeLock == null) -->Line_12 $$ if (perNodeLock == null) [ CD ]
Line_3 $$ while (true) -->Line_8 $$ KeyLock perNodeLock = map.get(key)[ CD ]
Line_9 $$ if (perNodeLock == null) -->Line_10 $$ KeyLock newLock = new KeyLock(fair)[ CD ]
Line_2 $$ public void acquire(T key) -->Line_11 $$ perNodeLock = map.putIfAbsent(key, newLock)[ FD ]
Line_8 $$ KeyLock perNodeLock = map.get(key)-->Line_22 $$ threadLocal.set(perNodeLock)[ FD ]
