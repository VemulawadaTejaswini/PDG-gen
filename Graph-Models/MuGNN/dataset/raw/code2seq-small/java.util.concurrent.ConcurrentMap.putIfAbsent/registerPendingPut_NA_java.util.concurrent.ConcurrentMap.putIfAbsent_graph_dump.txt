Line_16 $$ if (txTimestamp <= invalidationTimestamp) -->Line_20 $$ return[ CD ]
Line_35 $$ if (!existing.hasInvalidator()) -->Line_36 $$ existing.put(pendingPut)[ CD ]
Line_41 $$ if (trace) -->Line_42 $$ log.tracef("registerPendingPut(%s#%s, %d) ended with %s", cache.getName(), key, txTimestamp, existing)[ CD ]
Line_29 $$ if (existing.isRemoved()) -->Line_30 $$ if (trace) [ CD ]
Line_23 $$ final PendingPutMap pendingForKey = new PendingPutMap(pendingPut)-->Line_52 $$ log.tracef("registerPendingPut(%s#%s, %d) registered using putIfAbsent: %s", cache.getName(), key, txTimestamp, pendingForKey)[ FD ]
Line_51 $$ if (trace) -->Line_52 $$ log.tracef("registerPendingPut(%s#%s, %d) registered using putIfAbsent: %s", cache.getName(), key, txTimestamp, pendingForKey)[ CD ]
Line_15 $$ long invalidationTimestamp = this.regionInvalidationTimestamp-->Line_16 $$ if (txTimestamp <= invalidationTimestamp) [ FD ]
Line_26 $$ if (existing != null) -->Line_51 $$ if (trace) [ CD ]
Line_15 $$ long invalidationTimestamp = this.regionInvalidationTimestamp-->Line_18 $$ log.tracef("registerPendingPut(%s#%s, %d) skipped due to region invalidation (%d)", cache.getName(), key, txTimestamp, invalidationTimestamp)[ FD ]
Line_24 $$ for (; ; ) -->Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)[ CD ]
Line_27 $$ if (existing.acquireLock(10, TimeUnit.SECONDS)) -->Line_41 $$ if (trace) [ CD ]
Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)-->Line_29 $$ if (existing.isRemoved()) [ FD ]
Line_17 $$ if (trace) -->Line_18 $$ log.tracef("registerPendingPut(%s#%s, %d) skipped due to region invalidation (%d)", cache.getName(), key, txTimestamp, invalidationTimestamp)[ CD ]
Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)-->Line_27 $$ if (existing.acquireLock(10, TimeUnit.SECONDS)) [ FD ]
Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)-->Line_36 $$ existing.put(pendingPut)[ FD ]
Line_23 $$ final PendingPutMap pendingForKey = new PendingPutMap(pendingPut)-->Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)[ FD ]
Line_30 $$ if (trace) -->Line_31 $$ log.tracef("Record removed when waiting for the lock.")[ CD ]
Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)-->Line_26 $$ if (existing != null) [ FD ]
Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)-->Line_39 $$ existing.releaseLock()[ FD ]
Line_22 $$ final PendingPut pendingPut = new PendingPut(session)-->Line_36 $$ existing.put(pendingPut)[ FD ]
Line_24 $$ for (; ; ) -->Line_26 $$ if (existing != null) [ CD ]
Line_24 $$ for (; ; ) -->Line_55 $$ return[ CD ]
Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)-->Line_42 $$ log.tracef("registerPendingPut(%s#%s, %d) ended with %s", cache.getName(), key, txTimestamp, existing)[ FD ]
Line_16 $$ if (txTimestamp <= invalidationTimestamp) -->Line_17 $$ if (trace) [ CD ]
Line_25 $$ final PendingPutMap existing = pendingPuts.putIfAbsent(key, pendingForKey)-->Line_35 $$ if (!existing.hasInvalidator()) [ FD ]
Line_45 $$ if (trace) -->Line_46 $$ log.tracef("registerPendingPut(%s#%s, %d) failed to acquire lock", cache.getName(), key, txTimestamp)[ CD ]
Line_27 $$ if (existing.acquireLock(10, TimeUnit.SECONDS)) -->Line_45 $$ if (trace) [ CD ]
Line_26 $$ if (existing != null) -->Line_27 $$ if (existing.acquireLock(10, TimeUnit.SECONDS)) [ CD ]
