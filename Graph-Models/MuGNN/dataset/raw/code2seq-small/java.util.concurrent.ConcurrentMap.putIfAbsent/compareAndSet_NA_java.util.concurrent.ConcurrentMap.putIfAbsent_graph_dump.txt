Line_2 $$ private static <K, V> boolean compareAndSet(ConcurrentMap<K, V> map, K key, V oldValue, V newValue) -->Line_3 $$ if (oldValue == null) [ FD ]
Line_2 $$ private static <K, V> boolean compareAndSet(ConcurrentMap<K, V> map, K key, V oldValue, V newValue) -->Line_3 $$ if (oldValue == null) [ CD ]
Line_3 $$ if (oldValue == null) -->Line_4 $$ return map.putIfAbsent(key, newValue) == null[ CD ]
Line_2 $$ private static <K, V> boolean compareAndSet(ConcurrentMap<K, V> map, K key, V oldValue, V newValue) -->Line_4 $$ return map.putIfAbsent(key, newValue) == null[ FD ]
Line_2 $$ private static <K, V> boolean compareAndSet(ConcurrentMap<K, V> map, K key, V oldValue, V newValue) -->Line_6 $$ return map.replace(key, oldValue, newValue)[ FD ]
Line_2 $$ private static <K, V> boolean compareAndSet(ConcurrentMap<K, V> map, K key, V oldValue, V newValue) -->Line_6 $$ return map.replace(key, oldValue, newValue)[ CD ]
