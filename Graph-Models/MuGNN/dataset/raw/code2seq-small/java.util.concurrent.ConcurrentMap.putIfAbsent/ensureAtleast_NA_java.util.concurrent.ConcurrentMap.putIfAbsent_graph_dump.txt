Line_3 $$ AtomicInteger i = map.get(cfId)-->Line_4 $$ if (i == null) [ FD ]
Line_5 $$ AtomicInteger i2 = map.putIfAbsent(cfId, i = new AtomicInteger())-->Line_6 $$ if (i2 != null)[ FD ]
Line_7 $$ i = i2-->Line_10 $$ int cur = i.get()[ FD ]
Line_3 $$ AtomicInteger i = map.get(cfId)-->Line_10 $$ int cur = i.get()[ FD ]
Line_5 $$ AtomicInteger i2 = map.putIfAbsent(cfId, i = new AtomicInteger())-->Line_10 $$ int cur = i.get()[ FD ]
Line_7 $$ i = i2-->Line_13 $$ if (i.compareAndSet(cur, value))[ FD ]
Line_10 $$ int cur = i.get()-->Line_11 $$ if (cur > value)[ FD ]
Line_3 $$ AtomicInteger i = map.get(cfId)-->Line_7 $$ i = i2[ FD ]
Line_9 $$ while (true) -->Line_11 $$ if (cur > value)[ CD ]
Line_4 $$ if (i == null) -->Line_6 $$ if (i2 != null)[ CD ]
Line_9 $$ while (true) -->Line_10 $$ int cur = i.get()[ CD ]
Line_10 $$ int cur = i.get()-->Line_13 $$ if (i.compareAndSet(cur, value))[ FD ]
Line_5 $$ AtomicInteger i2 = map.putIfAbsent(cfId, i = new AtomicInteger())-->Line_13 $$ if (i.compareAndSet(cur, value))[ FD ]
Line_4 $$ if (i == null) -->Line_5 $$ AtomicInteger i2 = map.putIfAbsent(cfId, i = new AtomicInteger())[ CD ]
Line_2 $$ private static void ensureAtleast(ConcurrentMap<UUID, AtomicInteger> map, UUID cfId, int value) -->Line_3 $$ AtomicInteger i = map.get(cfId)[ FD ]
Line_9 $$ while (true) -->Line_13 $$ if (i.compareAndSet(cur, value))[ CD ]
Line_2 $$ private static void ensureAtleast(ConcurrentMap<UUID, AtomicInteger> map, UUID cfId, int value) -->Line_11 $$ if (cur > value)[ FD ]
Line_6 $$ if (i2 != null)-->Line_7 $$ i = i2[ CD ]
Line_5 $$ AtomicInteger i2 = map.putIfAbsent(cfId, i = new AtomicInteger())-->Line_7 $$ i = i2[ FD ]
Line_2 $$ private static void ensureAtleast(ConcurrentMap<UUID, AtomicInteger> map, UUID cfId, int value) -->Line_13 $$ if (i.compareAndSet(cur, value))[ FD ]
Line_2 $$ private static void ensureAtleast(ConcurrentMap<UUID, AtomicInteger> map, UUID cfId, int value) -->Line_9 $$ while (true) [ CD ]
Line_2 $$ private static void ensureAtleast(ConcurrentMap<UUID, AtomicInteger> map, UUID cfId, int value) -->Line_4 $$ if (i == null) [ CD ]
Line_2 $$ private static void ensureAtleast(ConcurrentMap<UUID, AtomicInteger> map, UUID cfId, int value) -->Line_5 $$ AtomicInteger i2 = map.putIfAbsent(cfId, i = new AtomicInteger())[ FD ]
Line_2 $$ private static void ensureAtleast(ConcurrentMap<UUID, AtomicInteger> map, UUID cfId, int value) -->Line_3 $$ AtomicInteger i = map.get(cfId)[ CD ]
Line_3 $$ AtomicInteger i = map.get(cfId)-->Line_5 $$ AtomicInteger i2 = map.putIfAbsent(cfId, i = new AtomicInteger())[ FD ]
Line_3 $$ AtomicInteger i = map.get(cfId)-->Line_13 $$ if (i.compareAndSet(cur, value))[ FD ]
