Line_4 $$ if (value == null) -->Line_5 $$ value = accessCounts.putIfAbsent(path, new AtomicLong(1))[ CD ]
Line_2 $$ private long incrementAndGet(String path) -->Line_3 $$ AtomicLong value = accessCounts.get(path)[ FD ]
Line_2 $$ private long incrementAndGet(String path) -->Line_3 $$ AtomicLong value = accessCounts.get(path)[ CD ]
Line_3 $$ AtomicLong value = accessCounts.get(path)-->Line_4 $$ if (value == null) [ FD ]
Line_5 $$ value = accessCounts.putIfAbsent(path, new AtomicLong(1))-->Line_8 $$ return value.incrementAndGet()[ FD ]
Line_5 $$ value = accessCounts.putIfAbsent(path, new AtomicLong(1))-->Line_7 $$ if (value != null) [ FD ]
Line_3 $$ AtomicLong value = accessCounts.get(path)-->Line_7 $$ if (value != null) [ FD ]
Line_7 $$ if (value != null) -->Line_8 $$ return value.incrementAndGet()[ CD ]
Line_3 $$ AtomicLong value = accessCounts.get(path)-->Line_8 $$ return value.incrementAndGet()[ FD ]
Line_2 $$ private long incrementAndGet(String path) -->Line_7 $$ if (value != null) [ CD ]
Line_2 $$ private long incrementAndGet(String path) -->Line_5 $$ value = accessCounts.putIfAbsent(path, new AtomicLong(1))[ FD ]
Line_2 $$ private long incrementAndGet(String path) -->Line_10 $$ return 1[ CD ]
Line_2 $$ private long incrementAndGet(String path) -->Line_4 $$ if (value == null) [ CD ]
Line_3 $$ AtomicLong value = accessCounts.get(path)-->Line_5 $$ value = accessCounts.putIfAbsent(path, new AtomicLong(1))[ FD ]
