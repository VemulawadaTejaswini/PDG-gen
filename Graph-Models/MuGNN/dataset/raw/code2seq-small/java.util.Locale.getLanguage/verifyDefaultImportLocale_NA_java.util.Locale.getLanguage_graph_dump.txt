Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_28 $$ Assert.assertFalse(LocaleUtil.equals(LocaleUtil.fromLanguageId(expectedLocale), defaultImportLocale))[ FD ]
Line_7 $$ if (methodName.equals("getAvailableLocales")) -->Line_8 $$ return getContentAvailableLocales(portalAvailableLocales)[ CD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_8 $$ return getContentAvailableLocales(portalAvailableLocales)[ FD ]
Line_4 $$ languageUtil.setLanguage((Language) ProxyUtil.newProxyInstance(Language.class.getClassLoader(), new Class<?>[] -->Line_6 $$ String methodName = method.getName()[ FD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_25 $$ if (expectedResult) [ CD ]
Line_6 $$ String methodName = method.getName()-->Line_10 $$ if (methodName.equals("isAvailableLocale")) [ FD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_12 $$ Locale[] portalLocales = getContentAvailableLocales(portalAvailableLocales)[ FD ]
Line_4 $$ languageUtil.setLanguage((Language) ProxyUtil.newProxyInstance(Language.class.getClassLoader(), new Class<?>[] -->Line_6 $$ String methodName = method.getName()[ CD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_26 $$ Assert.assertTrue(LocaleUtil.equals(LocaleUtil.fromLanguageId(expectedLocale), defaultImportLocale))[ FD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_19 $$ LocaleUtil.setDefault(locale.getLanguage(), locale.getCountry(), locale.getVariant())[ CD ]
Line_3 $$ LanguageUtil languageUtil = new LanguageUtil()-->Line_4 $$ languageUtil.setLanguage((Language) ProxyUtil.newProxyInstance(Language.class.getClassLoader(), new Class<?>[] [ FD ]
Line_11 $$ Locale locale = (Locale) args[0]-->Line_13 $$ return ArrayUtil.contains(portalLocales, locale)[ FD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_18 $$ Locale locale = LocaleUtil.fromLanguageId(defaultContentLocale)[ FD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_22 $$ Locale contentDefaultLocale = LocaleUtil.fromLanguageId("es_ES")[ CD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_18 $$ Locale locale = LocaleUtil.fromLanguageId(defaultContentLocale)[ CD ]
Line_25 $$ if (expectedResult) -->Line_28 $$ Assert.assertFalse(LocaleUtil.equals(LocaleUtil.fromLanguageId(expectedLocale), defaultImportLocale))[ CD ]
Line_4 $$ languageUtil.setLanguage((Language) ProxyUtil.newProxyInstance(Language.class.getClassLoader(), new Class<?>[] -->Line_7 $$ if (methodName.equals("getAvailableLocales")) [ CD ]
Line_12 $$ Locale[] portalLocales = getContentAvailableLocales(portalAvailableLocales)-->Line_13 $$ return ArrayUtil.contains(portalLocales, locale)[ FD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_21 $$ localizationUtil.setLocalization(new LocalizationImpl())[ CD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_3 $$ LanguageUtil languageUtil = new LanguageUtil()[ CD ]
Line_10 $$ if (methodName.equals("isAvailableLocale")) -->Line_11 $$ Locale locale = (Locale) args[0][ CD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_24 $$ Locale defaultImportLocale = LocalizationUtil.getDefaultImportLocale("com.liferay.portal.className", 0L, contentDefaultLocale, contentAvailableLocales)[ CD ]
Line_10 $$ if (methodName.equals("isAvailableLocale")) -->Line_12 $$ Locale[] portalLocales = getContentAvailableLocales(portalAvailableLocales)[ CD ]
Line_25 $$ if (expectedResult) -->Line_26 $$ Assert.assertTrue(LocaleUtil.equals(LocaleUtil.fromLanguageId(expectedLocale), defaultImportLocale))[ CD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_23 $$ Locale[] contentAvailableLocales = getContentAvailableLocales("es_ES,en_US,de_DE")[ CD ]
Line_6 $$ String methodName = method.getName()-->Line_7 $$ if (methodName.equals("getAvailableLocales")) [ FD ]
Line_2 $$ protected void verifyDefaultImportLocale(String defaultContentLocale, final String portalAvailableLocales, String expectedLocale, boolean expectedResult) -->Line_4 $$ languageUtil.setLanguage((Language) ProxyUtil.newProxyInstance(Language.class.getClassLoader(), new Class<?>[] [ CD ]
Line_4 $$ languageUtil.setLanguage((Language) ProxyUtil.newProxyInstance(Language.class.getClassLoader(), new Class<?>[] -->Line_10 $$ if (methodName.equals("isAvailableLocale")) [ CD ]
Line_11 $$ Locale locale = (Locale) args[0]-->Line_19 $$ LocaleUtil.setDefault(locale.getLanguage(), locale.getCountry(), locale.getVariant())[ FD ]
Line_10 $$ if (methodName.equals("isAvailableLocale")) -->Line_13 $$ return ArrayUtil.contains(portalLocales, locale)[ CD ]
