Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_4 $$ if (!locale.equals(ROOT_LOCALE)) [ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(baseFileHandle.name())-->Line_12 $$ sb.append('_')[ FD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_7 $$ String variant = locale.getVariant()[ FD ]
Line_15 $$ if (!emptyCountry) -->Line_16 $$ sb.append(language).append('_').append(country)[ CD ]
Line_4 $$ if (!locale.equals(ROOT_LOCALE)) -->Line_6 $$ String country = locale.getCountry()[ CD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_5 $$ String language = locale.getLanguage()[ FD ]
Line_10 $$ boolean emptyVariant = "".equals(variant)-->Line_13 $$ if (!emptyVariant) [ FD ]
Line_9 $$ boolean emptyCountry = "".equals(country)-->Line_15 $$ if (!emptyCountry) [ FD ]
Line_7 $$ String variant = locale.getVariant()-->Line_14 $$ sb.append(language).append('_').append(country).append('_').append(variant)[ FD ]
Line_5 $$ String language = locale.getLanguage()-->Line_14 $$ sb.append(language).append('_').append(country).append('_').append(variant)[ FD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_22 $$ return baseFileHandle.sibling(sb.append(".properties").toString())[ CD ]
Line_4 $$ if (!locale.equals(ROOT_LOCALE)) -->Line_11 $$ if (!(emptyLanguage && emptyCountry && emptyVariant)) [ CD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_3 $$ StringBuilder sb = new StringBuilder(baseFileHandle.name())[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(baseFileHandle.name())-->Line_16 $$ sb.append(language).append('_').append(country)[ FD ]
Line_4 $$ if (!locale.equals(ROOT_LOCALE)) -->Line_10 $$ boolean emptyVariant = "".equals(variant)[ CD ]
Line_15 $$ if (!emptyCountry) -->Line_18 $$ sb.append(language)[ CD ]
Line_4 $$ if (!locale.equals(ROOT_LOCALE)) -->Line_5 $$ String language = locale.getLanguage()[ CD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_3 $$ StringBuilder sb = new StringBuilder(baseFileHandle.name())[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(baseFileHandle.name())-->Line_14 $$ sb.append(language).append('_').append(country).append('_').append(variant)[ FD ]
Line_6 $$ String country = locale.getCountry()-->Line_16 $$ sb.append(language).append('_').append(country)[ FD ]
Line_5 $$ String language = locale.getLanguage()-->Line_16 $$ sb.append(language).append('_').append(country)[ FD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_4 $$ if (!locale.equals(ROOT_LOCALE)) [ CD ]
Line_13 $$ if (!emptyVariant) -->Line_14 $$ sb.append(language).append('_').append(country).append('_').append(variant)[ CD ]
Line_11 $$ if (!(emptyLanguage && emptyCountry && emptyVariant)) -->Line_12 $$ sb.append('_')[ CD ]
Line_13 $$ if (!emptyVariant) -->Line_15 $$ if (!emptyCountry) [ CD ]
Line_7 $$ String variant = locale.getVariant()-->Line_10 $$ boolean emptyVariant = "".equals(variant)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(baseFileHandle.name())-->Line_22 $$ return baseFileHandle.sibling(sb.append(".properties").toString())[ FD ]
Line_4 $$ if (!locale.equals(ROOT_LOCALE)) -->Line_8 $$ boolean emptyLanguage = "".equals(language)[ CD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_6 $$ String country = locale.getCountry()[ FD ]
Line_4 $$ if (!locale.equals(ROOT_LOCALE)) -->Line_9 $$ boolean emptyCountry = "".equals(country)[ CD ]
Line_6 $$ String country = locale.getCountry()-->Line_14 $$ sb.append(language).append('_').append(country).append('_').append(variant)[ FD ]
Line_2 $$ private static FileHandle toFileHandle(FileHandle baseFileHandle, Locale locale) -->Line_22 $$ return baseFileHandle.sibling(sb.append(".properties").toString())[ FD ]
Line_4 $$ if (!locale.equals(ROOT_LOCALE)) -->Line_7 $$ String variant = locale.getVariant()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(baseFileHandle.name())-->Line_18 $$ sb.append(language)[ FD ]
Line_6 $$ String country = locale.getCountry()-->Line_9 $$ boolean emptyCountry = "".equals(country)[ FD ]
Line_5 $$ String language = locale.getLanguage()-->Line_8 $$ boolean emptyLanguage = "".equals(language)[ FD ]
Line_5 $$ String language = locale.getLanguage()-->Line_18 $$ sb.append(language)[ FD ]
Line_11 $$ if (!(emptyLanguage && emptyCountry && emptyVariant)) -->Line_13 $$ if (!emptyVariant) [ CD ]
