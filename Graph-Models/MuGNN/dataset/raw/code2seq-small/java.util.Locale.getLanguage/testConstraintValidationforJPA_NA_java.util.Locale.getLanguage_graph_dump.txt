Line_5 $$ SoccerPlayer socplayer = slsb.createSoccerPlayer("LEONARDO", "", "SOCCER", "REAL MADRID")-->Line_6 $$ socplayer.setFirstName("Christiano")[ FD ]
Line_13 $$ String stacktrace = w.toString()-->Line_17 $$ Assert.assertTrue(stacktrace.contains("propertyPath=lastName, rootBeanClass=class org.jboss.as.test.integration.jpa.beanvalidation.SoccerPlayer"))[ FD ]
Line_5 $$ SoccerPlayer socplayer = slsb.createSoccerPlayer("LEONARDO", "", "SOCCER", "REAL MADRID")-->Line_7 $$ socplayer.setLastName("")[ FD ]
Line_3 $$ SLSBInheritance slsb = lookup("SLSBInheritance", SLSBInheritance.class)-->Line_9 $$ socplayer = slsb.updateSoccerPlayer(socplayer)[ FD ]
Line_5 $$ SoccerPlayer socplayer = slsb.createSoccerPlayer("LEONARDO", "", "SOCCER", "REAL MADRID")-->Line_8 $$ socplayer.setGame("FOOTBALL")[ FD ]
Line_14 $$ if (Locale.getDefault().getLanguage().equals("en")) -->Line_17 $$ Assert.assertTrue(stacktrace.contains("propertyPath=lastName, rootBeanClass=class org.jboss.as.test.integration.jpa.beanvalidation.SoccerPlayer"))[ CD ]
Line_2 $$ public void testConstraintValidationforJPA() throws NamingException, SQLException -->Line_3 $$ SLSBInheritance slsb = lookup("SLSBInheritance", SLSBInheritance.class)[ CD ]
Line_5 $$ SoccerPlayer socplayer = slsb.createSoccerPlayer("LEONARDO", "", "SOCCER", "REAL MADRID")-->Line_9 $$ socplayer = slsb.updateSoccerPlayer(socplayer)[ FD ]
Line_14 $$ if (Locale.getDefault().getLanguage().equals("en")) -->Line_15 $$ Assert.assertTrue(stacktrace.contains("interpolatedMessage='may not be empty', propertyPath=lastName, rootBeanClass=class org.jboss.as.test.integration.jpa.beanvalidation.SoccerPlayer"))[ CD ]
Line_11 $$ StringWriter w = new StringWriter()-->Line_13 $$ String stacktrace = w.toString()[ FD ]
Line_13 $$ String stacktrace = w.toString()-->Line_15 $$ Assert.assertTrue(stacktrace.contains("interpolatedMessage='may not be empty', propertyPath=lastName, rootBeanClass=class org.jboss.as.test.integration.jpa.beanvalidation.SoccerPlayer"))[ FD ]
Line_3 $$ SLSBInheritance slsb = lookup("SLSBInheritance", SLSBInheritance.class)-->Line_5 $$ SoccerPlayer socplayer = slsb.createSoccerPlayer("LEONARDO", "", "SOCCER", "REAL MADRID")[ FD ]
