Line_2 $$ private static void doRemove(DynamicToolWindowWrapper wrapper, DefaultMutableTreeNode node, DefaultMutableTreeNode parent) -->Line_3 $$ DefaultMutableTreeNode toSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ? node.getNextNode() : node.getPreviousNode())[ FD ]
Line_2 $$ private static void doRemove(DynamicToolWindowWrapper wrapper, DefaultMutableTreeNode node, DefaultMutableTreeNode parent) -->Line_3 $$ DefaultMutableTreeNode toSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ? node.getNextNode() : node.getPreviousNode())[ CD ]
Line_2 $$ private static void doRemove(DynamicToolWindowWrapper wrapper, DefaultMutableTreeNode node, DefaultMutableTreeNode parent) -->Line_6 $$ wrapper.setSelectedNode(toSelect)[ FD ]
Line_3 $$ DefaultMutableTreeNode toSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ? node.getNextNode() : node.getPreviousNode())-->Line_6 $$ wrapper.setSelectedNode(toSelect)[ FD ]
Line_3 $$ DefaultMutableTreeNode toSelect = (parent.getChildAfter(node) != null || parent.getChildCount() == 1 ? node.getNextNode() : node.getPreviousNode())-->Line_5 $$ if (toSelect != null) [ FD ]
Line_2 $$ private static void doRemove(DynamicToolWindowWrapper wrapper, DefaultMutableTreeNode node, DefaultMutableTreeNode parent) -->Line_4 $$ wrapper.removeFromParent(parent, node)[ FD ]
Line_2 $$ private static void doRemove(DynamicToolWindowWrapper wrapper, DefaultMutableTreeNode node, DefaultMutableTreeNode parent) -->Line_5 $$ if (toSelect != null) [ CD ]
Line_2 $$ private static void doRemove(DynamicToolWindowWrapper wrapper, DefaultMutableTreeNode node, DefaultMutableTreeNode parent) -->Line_4 $$ wrapper.removeFromParent(parent, node)[ CD ]
Line_5 $$ if (toSelect != null) -->Line_6 $$ wrapper.setSelectedNode(toSelect)[ CD ]
