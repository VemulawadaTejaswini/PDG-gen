Line_10 $$ boolean found = false-->Line_18 $$ Assert.assertTrue(found)[ FD ]
Line_2 $$ public void testSystemProperties() throws Exception -->Line_23 $$ assertNoMBean(testName)[ CD ]
Line_2 $$ public void testSystemProperties() throws Exception -->Line_5 $$ assertNoMBean(testName)[ CD ]
Line_4 $$ ObjectName testName = new ObjectName(RESOLVED_DOMAIN + ":system-property=mbeantest")-->Line_23 $$ assertNoMBean(testName)[ FD ]
Line_12 $$ if (s.equals("mbeantest")) -->Line_13 $$ found = true[ CD ]
Line_2 $$ public void testSystemProperties() throws Exception -->Line_4 $$ ObjectName testName = new ObjectName(RESOLVED_DOMAIN + ":system-property=mbeantest")[ CD ]
Line_13 $$ found = true-->Line_18 $$ Assert.assertTrue(found)[ FD ]
Line_2 $$ public void testSystemProperties() throws Exception -->Line_6 $$ connection.invoke(RESOLVED_ROOT_MODEL_NAME, "addSystemProperty", new Object[] [ CD ]
Line_2 $$ public void testSystemProperties() throws Exception -->Line_24 $$ Assert.assertEquals(initialNames.length, getSystemPropertyNames().length)[ CD ]
Line_10 $$ boolean found = false-->Line_13 $$ found = true[ FD ]
Line_11 $$ for (String s : newNames) -->Line_12 $$ if (s.equals("mbeantest")) [ FD ]
Line_2 $$ public void testSystemProperties() throws Exception -->Line_3 $$ String[] initialNames = getSystemPropertyNames()[ CD ]
Line_4 $$ ObjectName testName = new ObjectName(RESOLVED_DOMAIN + ":system-property=mbeantest")-->Line_5 $$ assertNoMBean(testName)[ FD ]
