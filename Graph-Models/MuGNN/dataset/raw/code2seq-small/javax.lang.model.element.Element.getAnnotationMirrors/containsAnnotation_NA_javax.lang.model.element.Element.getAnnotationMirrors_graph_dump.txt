Line_2 $$ public static boolean containsAnnotation(Element element, String... annotations) -->Line_13 $$ return false[ CD ]
Line_9 $$ if (annotationClassNames.contains(mirror.getAnnotationType().toString())) -->Line_10 $$ return true[ CD ]
Line_2 $$ public static boolean containsAnnotation(Element element, String... annotations) -->Line_7 $$ List<? extends AnnotationMirror> annotationMirrors = element.getAnnotationMirrors()[ FD ]
Line_2 $$ public static boolean containsAnnotation(Element element, String... annotations) -->Line_5 $$ List<String> annotationClassNames = new ArrayList<String>()[ CD ]
Line_5 $$ List<String> annotationClassNames = new ArrayList<String>()-->Line_6 $$ Collections.addAll(annotationClassNames, annotations)[ FD ]
Line_2 $$ public static boolean containsAnnotation(Element element, String... annotations) -->Line_6 $$ Collections.addAll(annotationClassNames, annotations)[ FD ]
Line_5 $$ List<String> annotationClassNames = new ArrayList<String>()-->Line_9 $$ if (annotationClassNames.contains(mirror.getAnnotationType().toString())) [ FD ]
Line_8 $$ for (AnnotationMirror mirror : annotationMirrors) -->Line_9 $$ if (annotationClassNames.contains(mirror.getAnnotationType().toString())) [ FD ]
Line_2 $$ public static boolean containsAnnotation(Element element, String... annotations) -->Line_6 $$ Collections.addAll(annotationClassNames, annotations)[ CD ]
Line_2 $$ public static boolean containsAnnotation(Element element, String... annotations) -->Line_7 $$ List<? extends AnnotationMirror> annotationMirrors = element.getAnnotationMirrors()[ CD ]
