Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_18 $$ if (!data.isEmpty()) [ CD ]
Line_3 $$ JComponent content = popup.getContent()-->Line_28 $$ Insets insets = ((AbstractPopup) popup).getPopupBorder().getBorderInsets(content)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_15 $$ int rowsToShow = Math.min(30, data.size())[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_4 $$ Window window = SwingUtilities.windowForComponent(content)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_3 $$ JComponent content = popup.getContent()[ CD ]
Line_31 $$ Dimension newDim = rectangle.getSize()-->Line_34 $$ window.setMaximumSize(newDim)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_36 $$ window.repaint()[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_3 $$ JComponent content = popup.getContent()[ FD ]
Line_6 $$ int width = calcMaxWidth(table)-->Line_13 $$ int newWidth = Math.max(width, d.width + width - myWidth)[ FD ]
Line_7 $$ width = (int) Math.max(d.getWidth(), width)-->Line_13 $$ int newWidth = Math.max(width, d.width + width - myWidth)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_21 $$ table.setSize(rectangle.getSize())[ CD ]
Line_9 $$ width = Math.max((int) headerSize.getWidth(), width)-->Line_13 $$ int newWidth = Math.max(width, d.width + width - myWidth)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_17 $$ Rectangle rectangle = fitToScreen(dimension, popupPosition, table)[ FD ]
Line_17 $$ Rectangle rectangle = fitToScreen(dimension, popupPosition, table)-->Line_31 $$ Dimension newDim = rectangle.getSize()[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_10 $$ width = Math.max(myWidth, width)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_15 $$ int rowsToShow = Math.min(30, data.size())[ CD ]
Line_10 $$ width = Math.max(myWidth, width)-->Line_13 $$ int newWidth = Math.max(width, d.width + width - myWidth)[ FD ]
Line_17 $$ Rectangle rectangle = fitToScreen(dimension, popupPosition, table)-->Line_21 $$ table.setSize(rectangle.getSize())[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_6 $$ int width = calcMaxWidth(table)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_7 $$ width = (int) Math.max(d.getWidth(), width)[ CD ]
Line_6 $$ int width = calcMaxWidth(table)-->Line_10 $$ width = Math.max(myWidth, width)[ FD ]
Line_31 $$ Dimension newDim = rectangle.getSize()-->Line_33 $$ window.setMinimumSize(newDim)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_35 $$ window.validate()[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_21 $$ table.setSize(rectangle.getSize())[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_32 $$ window.setBounds(rectangle)[ CD ]
Line_7 $$ width = (int) Math.max(d.getWidth(), width)-->Line_9 $$ width = Math.max((int) headerSize.getWidth(), width)[ FD ]
Line_6 $$ int width = calcMaxWidth(table)-->Line_9 $$ width = Math.max((int) headerSize.getWidth(), width)[ FD ]
Line_4 $$ Window window = SwingUtilities.windowForComponent(content)-->Line_5 $$ Dimension d = window.getSize()[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_33 $$ window.setMinimumSize(newDim)[ CD ]
Line_9 $$ width = Math.max((int) headerSize.getWidth(), width)-->Line_10 $$ width = Math.max(myWidth, width)[ FD ]
Line_18 $$ if (!data.isEmpty()) -->Line_19 $$ ScrollingUtil.ensureSelectionExists(table)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_16 $$ Dimension dimension = new Dimension(newWidth, table.getRowHeight() * rowsToShow)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_13 $$ int newWidth = Math.max(width, d.width + width - myWidth)[ CD ]
Line_3 $$ JComponent content = popup.getContent()-->Line_4 $$ Window window = SwingUtilities.windowForComponent(content)[ FD ]
Line_16 $$ Dimension dimension = new Dimension(newWidth, table.getRowHeight() * rowsToShow)-->Line_17 $$ Rectangle rectangle = fitToScreen(dimension, popupPosition, table)[ FD ]
Line_6 $$ int width = calcMaxWidth(table)-->Line_7 $$ width = (int) Math.max(d.getWidth(), width)[ FD ]
Line_8 $$ Dimension headerSize = ((AbstractPopup) popup).getHeaderPreferredSize()-->Line_9 $$ width = Math.max((int) headerSize.getWidth(), width)[ FD ]
Line_4 $$ Window window = SwingUtilities.windowForComponent(content)-->Line_35 $$ window.validate()[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_5 $$ Dimension d = window.getSize()[ CD ]
Line_5 $$ Dimension d = window.getSize()-->Line_7 $$ width = (int) Math.max(d.getWidth(), width)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_27 $$ int footerBorder = footer == 0 ? 0 : 1[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_19 $$ ScrollingUtil.ensureSelectionExists(table)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_16 $$ Dimension dimension = new Dimension(newWidth, table.getRowHeight() * rowsToShow)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_28 $$ Insets insets = ((AbstractPopup) popup).getPopupBorder().getBorderInsets(content)[ CD ]
Line_17 $$ Rectangle rectangle = fitToScreen(dimension, popupPosition, table)-->Line_30 $$ ScreenUtil.fitToScreen(rectangle)[ FD ]
Line_4 $$ Window window = SwingUtilities.windowForComponent(content)-->Line_32 $$ window.setBounds(rectangle)[ FD ]
Line_4 $$ Window window = SwingUtilities.windowForComponent(content)-->Line_33 $$ window.setMinimumSize(newDim)[ FD ]
Line_4 $$ Window window = SwingUtilities.windowForComponent(content)-->Line_34 $$ window.setMaximumSize(newDim)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_18 $$ if (!data.isEmpty()) [ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_29 $$ rectangle.height += headerSize.height + footer + footerBorder + insets.top + insets.bottom[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_11 $$ if (myWidth == -1)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_17 $$ Rectangle rectangle = fitToScreen(dimension, popupPosition, table)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_30 $$ ScreenUtil.fitToScreen(rectangle)[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_31 $$ Dimension newDim = rectangle.getSize()[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_8 $$ Dimension headerSize = ((AbstractPopup) popup).getHeaderPreferredSize()[ CD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_34 $$ window.setMaximumSize(newDim)[ CD ]
Line_4 $$ Window window = SwingUtilities.windowForComponent(content)-->Line_36 $$ window.repaint()[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_26 $$ int footer = footerSize.height[ CD ]
Line_17 $$ Rectangle rectangle = fitToScreen(dimension, popupPosition, table)-->Line_32 $$ window.setBounds(rectangle)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_6 $$ int width = calcMaxWidth(table)[ FD ]
Line_2 $$ private void setSizeAndDimensions(@NotNull JTable table, @NotNull JBPopup popup, @NotNull RelativePoint popupPosition, @NotNull List<UsageNode> data) -->Line_9 $$ width = Math.max((int) headerSize.getWidth(), width)[ CD ]
Line_7 $$ width = (int) Math.max(d.getWidth(), width)-->Line_10 $$ width = Math.max(myWidth, width)[ FD ]
