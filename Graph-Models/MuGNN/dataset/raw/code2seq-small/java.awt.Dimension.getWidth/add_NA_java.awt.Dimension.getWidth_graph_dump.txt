Line_13 $$ final Dimension dimension = myInnerSplitter.getSize()-->Line_14 $$ final double width = dimension.getWidth() / 2[ FD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_20 $$ myInnerSplitter.setLastComponent(comp)[ FD ]
Line_12 $$ if (idx == 1) -->Line_22 $$ myInnerSplitter.setLastSize((int) width)[ CD ]
Line_5 $$ if (idx == 0) -->Line_7 $$ if (myParentSplitter.getProportion() < 0.05f) [ CD ]
Line_12 $$ if (idx == 1) -->Line_21 $$ myInnerSplitter.setFirstSize((int) width)[ CD ]
Line_3 $$ final int idx = myInnerSplitterContents.size()-->Line_4 $$ myInnerSplitterContents.put(key, idx)[ FD ]
Line_7 $$ if (myParentSplitter.getProportion() < 0.05f) -->Line_8 $$ myParentSplitter.setProportion(0.25f)[ CD ]
Line_12 $$ if (idx == 1) -->Line_20 $$ myInnerSplitter.setLastComponent(comp)[ CD ]
Line_12 $$ if (idx == 1) -->Line_14 $$ final double width = dimension.getWidth() / 2[ CD ]
Line_12 $$ if (idx == 1) -->Line_15 $$ myInnerSplitter.setInnerComponent(comp)[ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_4 $$ myInnerSplitterContents.put(key, idx)[ FD ]
Line_5 $$ if (idx == 0) -->Line_11 $$ myInnerSplitter.setFirstSize((int) (myParentSplitter.getSize().getWidth() * myParentSplitter.getProportion()))[ CD ]
Line_12 $$ if (idx == 1) -->Line_16 $$ myInnerSplitter.setFirstSize((int) width)[ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_5 $$ if (idx == 0) [ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_25 $$ myRefresher.run()[ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_4 $$ myInnerSplitterContents.put(key, idx)[ CD ]
Line_12 $$ if (idx == 1) -->Line_13 $$ final Dimension dimension = myInnerSplitter.getSize()[ CD ]
Line_3 $$ final int idx = myInnerSplitterContents.size()-->Line_5 $$ if (idx == 0) [ FD ]
Line_5 $$ if (idx == 0) -->Line_10 $$ myInnerSplitter.setFirstComponent(comp)[ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_15 $$ myInnerSplitter.setInnerComponent(comp)[ FD ]
Line_3 $$ final int idx = myInnerSplitterContents.size()-->Line_12 $$ if (idx == 1) [ FD ]
Line_5 $$ if (idx == 0) -->Line_12 $$ if (idx == 1) [ CD ]
Line_5 $$ if (idx == 0) -->Line_6 $$ myParentSplitter.setFirstComponent(myInnerSplitter)[ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_24 $$ updateBorders()[ CD ]
Line_13 $$ final Dimension dimension = myInnerSplitter.getSize()-->Line_19 $$ final double width = dimension.getWidth() / 3[ FD ]
Line_12 $$ if (idx == 1) -->Line_18 $$ final Dimension dimension = myInnerSplitter.getSize()[ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_3 $$ final int idx = myInnerSplitterContents.size()[ CD ]
Line_2 $$ public void add(final CommittedChangesFilterKey key, final JComponent comp) -->Line_10 $$ myInnerSplitter.setFirstComponent(comp)[ FD ]
