Line_8 $$ Path testFile = this.getDataPath("security/unresolved-plugin-security.policy")-->Line_9 $$ PermissionCollection actual = PluginSecurity.parsePermissions(Terminal.DEFAULT, testFile, scratch)[ FD ]
Line_7 $$ Path scratch = createTempDir()-->Line_9 $$ PermissionCollection actual = PluginSecurity.parsePermissions(Terminal.DEFAULT, testFile, scratch)[ FD ]
Line_10 $$ List<Permission> permissions = Collections.list(actual.elements())-->Line_12 $$ assertEquals("org.fake.FakePermission fakeName", PluginSecurity.formatPermission(permissions.get(0)))[ FD ]
Line_10 $$ List<Permission> permissions = Collections.list(actual.elements())-->Line_11 $$ assertEquals(1, permissions.size())[ FD ]
Line_9 $$ PermissionCollection actual = PluginSecurity.parsePermissions(Terminal.DEFAULT, testFile, scratch)-->Line_10 $$ List<Permission> permissions = Collections.list(actual.elements())[ FD ]
