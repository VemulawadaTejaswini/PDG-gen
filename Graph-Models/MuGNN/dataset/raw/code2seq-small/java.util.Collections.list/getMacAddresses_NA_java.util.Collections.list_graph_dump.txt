Line_10 $$ byte[] hardwareAddress = networkInterface.getHardwareAddress()-->Line_11 $$ if (ArrayUtil.isEmpty(hardwareAddress)) [ FD ]
Line_16 $$ for (int i = 0; i < hexString.length(); i += 2) -->Line_17 $$ if (i != 0) [ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder((hardwareAddress.length * 3) - 1)-->Line_23 $$ _macAddresses.add(sb.toString())[ FD ]
Line_16 $$ for (int i = 0; i < hexString.length(); i += 2) -->Line_20 $$ sb.append(Character.toLowerCase(hexString.charAt(i)))[ CD ]
Line_15 $$ String hexString = StringUtil.bytesToHexString(hardwareAddress)-->Line_20 $$ sb.append(Character.toLowerCase(hexString.charAt(i)))[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder((hardwareAddress.length * 3) - 1)-->Line_21 $$ sb.append(Character.toLowerCase(hexString.charAt(i + 1)))[ FD ]
Line_3 $$ if (_macAddresses != null) -->Line_4 $$ return new HashSet(_macAddresses)[ CD ]
Line_2 $$ public static Set<String> getMacAddresses() -->Line_29 $$ return new HashSet(_macAddresses)[ CD ]
Line_14 $$ StringBuilder sb = new StringBuilder((hardwareAddress.length * 3) - 1)-->Line_20 $$ sb.append(Character.toLowerCase(hexString.charAt(i)))[ FD ]
Line_15 $$ String hexString = StringUtil.bytesToHexString(hardwareAddress)-->Line_16 $$ for (int i = 0; i < hexString.length(); i += 2) [ FD ]
Line_2 $$ public static Set<String> getMacAddresses() -->Line_3 $$ if (_macAddresses != null) [ CD ]
Line_17 $$ if (i != 0) -->Line_18 $$ sb.append(CharPool.COLON)[ CD ]
Line_16 $$ for (int i = 0; i < hexString.length(); i += 2) -->Line_21 $$ sb.append(Character.toLowerCase(hexString.charAt(i + 1)))[ CD ]
Line_16 $$ for (int i = 0; i < hexString.length(); i += 2) -->Line_20 $$ sb.append(Character.toLowerCase(hexString.charAt(i)))[ FD ]
Line_16 $$ for (int i = 0; i < hexString.length(); i += 2) -->Line_17 $$ if (i != 0) [ FD ]
Line_10 $$ byte[] hardwareAddress = networkInterface.getHardwareAddress()-->Line_15 $$ String hexString = StringUtil.bytesToHexString(hardwareAddress)[ FD ]
Line_9 $$ for (NetworkInterface networkInterface : networkInterfaces) -->Line_10 $$ byte[] hardwareAddress = networkInterface.getHardwareAddress()[ FD ]
Line_15 $$ String hexString = StringUtil.bytesToHexString(hardwareAddress)-->Line_21 $$ sb.append(Character.toLowerCase(hexString.charAt(i + 1)))[ FD ]
Line_14 $$ StringBuilder sb = new StringBuilder((hardwareAddress.length * 3) - 1)-->Line_18 $$ sb.append(CharPool.COLON)[ FD ]
