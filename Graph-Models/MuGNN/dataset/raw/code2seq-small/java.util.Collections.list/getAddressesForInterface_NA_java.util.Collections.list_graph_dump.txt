Line_2 $$ static InetAddress[] getAddressesForInterface(String name) throws SocketException -->Line_3 $$ NetworkInterface intf = NetworkInterface.getByName(name)[ FD ]
Line_3 $$ NetworkInterface intf = NetworkInterface.getByName(name)-->Line_10 $$ List<InetAddress> list = Collections.list(intf.getInetAddresses())[ FD ]
Line_3 $$ NetworkInterface intf = NetworkInterface.getByName(name)-->Line_7 $$ if (!intf.isUp()) [ FD ]
Line_2 $$ static InetAddress[] getAddressesForInterface(String name) throws SocketException -->Line_10 $$ List<InetAddress> list = Collections.list(intf.getInetAddresses())[ CD ]
Line_2 $$ static InetAddress[] getAddressesForInterface(String name) throws SocketException -->Line_7 $$ if (!intf.isUp()) [ CD ]
Line_2 $$ static InetAddress[] getAddressesForInterface(String name) throws SocketException -->Line_3 $$ NetworkInterface intf = NetworkInterface.getByName(name)[ CD ]
Line_2 $$ static InetAddress[] getAddressesForInterface(String name) throws SocketException -->Line_4 $$ if (intf == null) [ CD ]
Line_2 $$ static InetAddress[] getAddressesForInterface(String name) throws SocketException -->Line_14 $$ return list.toArray(new InetAddress[list.size()])[ CD ]
Line_2 $$ static InetAddress[] getAddressesForInterface(String name) throws SocketException -->Line_11 $$ if (list.isEmpty()) [ CD ]
Line_10 $$ List<InetAddress> list = Collections.list(intf.getInetAddresses())-->Line_11 $$ if (list.isEmpty()) [ FD ]
Line_10 $$ List<InetAddress> list = Collections.list(intf.getInetAddresses())-->Line_14 $$ return list.toArray(new InetAddress[list.size()])[ FD ]
Line_3 $$ NetworkInterface intf = NetworkInterface.getByName(name)-->Line_4 $$ if (intf == null) [ FD ]
