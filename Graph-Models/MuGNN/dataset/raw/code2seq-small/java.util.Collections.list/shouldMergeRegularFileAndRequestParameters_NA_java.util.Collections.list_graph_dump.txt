Line_8 $$ MockHttpServletRequest mockHttpServletRequest = (MockHttpServletRequest) liferayServletRequest.getRequest()-->Line_9 $$ mockHttpServletRequest.addParameter(parameter, parameter)[ FD ]
Line_7 $$ String parameter = RandomTestUtil.randomString()-->Line_9 $$ mockHttpServletRequest.addParameter(parameter, parameter)[ FD ]
Line_12 $$ List<String> parameterNamesList = Collections.list(parameterNames)-->Line_19 $$ Assert.assertTrue(parameterNamesList.contains(parameter))[ FD ]
Line_4 $$ Map<String, FileItem[]> fileParameters = PortletContainerTestUtil.getFileParameters(10, _bytes)-->Line_16 $$ for (Map.Entry<String, FileItem[]> entry : fileParameters.entrySet()) [ FD ]
Line_7 $$ String parameter = RandomTestUtil.randomString()-->Line_19 $$ Assert.assertTrue(parameterNamesList.contains(parameter))[ FD ]
Line_12 $$ List<String> parameterNamesList = Collections.list(parameterNames)-->Line_17 $$ Assert.assertTrue(parameterNamesList.contains(entry.getKey()))[ FD ]
Line_6 $$ LiferayServletRequest liferayServletRequest = PortletContainerTestUtil.getMultipartRequest(_fileNameParameter, _bytes)-->Line_10 $$ UploadServletRequestImpl uploadServletRequest = new UploadServletRequestImpl((HttpServletRequest) liferayServletRequest.getRequest(), fileParameters, regularParameters)[ FD ]
Line_12 $$ List<String> parameterNamesList = Collections.list(parameterNames)-->Line_14 $$ Assert.assertTrue(parameterNamesList.contains(entry.getKey()))[ FD ]
Line_11 $$ Enumeration<String> parameterNames = uploadServletRequest.getParameterNames()-->Line_12 $$ List<String> parameterNamesList = Collections.list(parameterNames)[ FD ]
Line_10 $$ UploadServletRequestImpl uploadServletRequest = new UploadServletRequestImpl((HttpServletRequest) liferayServletRequest.getRequest(), fileParameters, regularParameters)-->Line_11 $$ Enumeration<String> parameterNames = uploadServletRequest.getParameterNames()[ FD ]
Line_6 $$ LiferayServletRequest liferayServletRequest = PortletContainerTestUtil.getMultipartRequest(_fileNameParameter, _bytes)-->Line_8 $$ MockHttpServletRequest mockHttpServletRequest = (MockHttpServletRequest) liferayServletRequest.getRequest()[ FD ]
Line_13 $$ for (Map.Entry<String, List<String>> entry : regularParameters.entrySet()) -->Line_14 $$ Assert.assertTrue(parameterNamesList.contains(entry.getKey()))[ FD ]
Line_5 $$ Map<String, List<String>> regularParameters = PortletContainerTestUtil.getRegularParameters(10)-->Line_13 $$ for (Map.Entry<String, List<String>> entry : regularParameters.entrySet()) [ FD ]
Line_13 $$ for (Map.Entry<String, List<String>> entry : regularParameters.entrySet()) -->Line_17 $$ Assert.assertTrue(parameterNamesList.contains(entry.getKey()))[ FD ]
