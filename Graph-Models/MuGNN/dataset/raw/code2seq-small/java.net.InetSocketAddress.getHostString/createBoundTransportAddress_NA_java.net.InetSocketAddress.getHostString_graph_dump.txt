Line_11 $$ if (DEFAULT_PROFILE.equals(name)) -->Line_12 $$ publishHosts = settings.getAsArray("transport.netty.publish_host", settings.getAsArray("transport.publish_host", settings.getAsArray("transport.host", null)))[ CD ]
Line_5 $$ for (int i = 0; i < boundAddresses.size(); i++) -->Line_6 $$ InetSocketAddress boundAddress = boundAddresses.get(i)[ FD ]
Line_5 $$ for (int i = 0; i < boundAddresses.size(); i++) -->Line_6 $$ InetSocketAddress boundAddress = boundAddresses.get(i)[ CD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_3 $$ String[] boundAddressesHostStrings = new String[boundAddresses.size()][ CD ]
Line_12 $$ publishHosts = settings.getAsArray("transport.netty.publish_host", settings.getAsArray("transport.publish_host", settings.getAsArray("transport.host", null)))-->Line_18 $$ publishInetAddress = networkService.resolvePublishHostAddresses(publishHosts)[ FD ]
Line_32 $$ if (boundInetAddress.isAnyLocalAddress() || boundInetAddress.equals(publishInetAddress)) -->Line_33 $$ publishPort = boundAddress.getPort()[ CD ]
Line_14 $$ publishHosts = profileSettings.getAsArray("publish_host", boundAddressesHostStrings)-->Line_18 $$ publishInetAddress = networkService.resolvePublishHostAddresses(publishHosts)[ FD ]
Line_22 $$ Integer publishPort-->Line_26 $$ publishPort = profileSettings.getAsInt("publish_port", null)[ FD ]
Line_22 $$ Integer publishPort-->Line_33 $$ publishPort = boundAddress.getPort()[ FD ]
Line_5 $$ for (int i = 0; i < boundAddresses.size(); i++) -->Line_7 $$ boundAddressesHostStrings[i] = boundAddress.getHostString()[ CD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_14 $$ publishHosts = profileSettings.getAsArray("publish_host", boundAddressesHostStrings)[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_16 $$ final InetAddress publishInetAddress[ CD ]
Line_23 $$ if (DEFAULT_PROFILE.equals(name)) -->Line_26 $$ publishPort = profileSettings.getAsInt("publish_port", null)[ CD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_26 $$ publishPort = profileSettings.getAsInt("publish_port", null)[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_5 $$ for (int i = 0; i < boundAddresses.size(); i++) [ CD ]
Line_6 $$ InetSocketAddress boundAddress = boundAddresses.get(i)-->Line_31 $$ InetAddress boundInetAddress = boundAddress.getAddress()[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_23 $$ if (DEFAULT_PROFILE.equals(name)) [ CD ]
Line_16 $$ final InetAddress publishInetAddress-->Line_43 $$ logger.warn("Publish port not found by matching publish address [[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_43 $$ logger.warn("Publish port not found by matching publish address [[ FD ]
Line_10 $$ final String[] publishHosts-->Line_12 $$ publishHosts = settings.getAsArray("transport.netty.publish_host", settings.getAsArray("transport.publish_host", settings.getAsArray("transport.host", null)))[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_45 $$ final TransportAddress publishAddress = new InetSocketTransportAddress(new InetSocketAddress(publishInetAddress, publishPort))[ CD ]
Line_22 $$ Integer publishPort-->Line_24 $$ publishPort = settings.getAsInt("transport.netty.publish_port", settings.getAsInt("transport.publish_port", null))[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_4 $$ TransportAddress[] transportBoundAddresses = new TransportAddress[boundAddresses.size()][ FD ]
Line_3 $$ String[] boundAddressesHostStrings = new String[boundAddresses.size()]-->Line_14 $$ publishHosts = profileSettings.getAsArray("publish_host", boundAddressesHostStrings)[ FD ]
Line_18 $$ publishInetAddress = networkService.resolvePublishHostAddresses(publishHosts)-->Line_32 $$ if (boundInetAddress.isAnyLocalAddress() || boundInetAddress.equals(publishInetAddress)) [ FD ]
Line_26 $$ publishPort = profileSettings.getAsInt("publish_port", null)-->Line_43 $$ logger.warn("Publish port not found by matching publish address [[ FD ]
Line_10 $$ final String[] publishHosts-->Line_14 $$ publishHosts = profileSettings.getAsArray("publish_host", boundAddressesHostStrings)[ FD ]
Line_24 $$ publishPort = settings.getAsInt("transport.netty.publish_port", settings.getAsInt("transport.publish_port", null))-->Line_26 $$ publishPort = profileSettings.getAsInt("publish_port", null)[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_3 $$ String[] boundAddressesHostStrings = new String[boundAddresses.size()][ FD ]
Line_22 $$ Integer publishPort-->Line_43 $$ logger.warn("Publish port not found by matching publish address [[ FD ]
Line_33 $$ publishPort = boundAddress.getPort()-->Line_43 $$ logger.warn("Publish port not found by matching publish address [[ FD ]
Line_24 $$ publishPort = settings.getAsInt("transport.netty.publish_port", settings.getAsInt("transport.publish_port", null))-->Line_43 $$ logger.warn("Publish port not found by matching publish address [[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_10 $$ final String[] publishHosts[ CD ]
Line_5 $$ for (int i = 0; i < boundAddresses.size(); i++) -->Line_8 $$ transportBoundAddresses[i] = new InetSocketTransportAddress(boundAddress)[ CD ]
Line_16 $$ final InetAddress publishInetAddress-->Line_18 $$ publishInetAddress = networkService.resolvePublishHostAddresses(publishHosts)[ FD ]
Line_6 $$ InetSocketAddress boundAddress = boundAddresses.get(i)-->Line_7 $$ boundAddressesHostStrings[i] = boundAddress.getHostString()[ FD ]
Line_10 $$ final String[] publishHosts-->Line_18 $$ publishInetAddress = networkService.resolvePublishHostAddresses(publishHosts)[ FD ]
Line_11 $$ if (DEFAULT_PROFILE.equals(name)) -->Line_14 $$ publishHosts = profileSettings.getAsArray("publish_host", boundAddressesHostStrings)[ CD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_4 $$ TransportAddress[] transportBoundAddresses = new TransportAddress[boundAddresses.size()][ CD ]
Line_12 $$ publishHosts = settings.getAsArray("transport.netty.publish_host", settings.getAsArray("transport.publish_host", settings.getAsArray("transport.host", null)))-->Line_14 $$ publishHosts = profileSettings.getAsArray("publish_host", boundAddressesHostStrings)[ FD ]
Line_6 $$ InetSocketAddress boundAddress = boundAddresses.get(i)-->Line_33 $$ publishPort = boundAddress.getPort()[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_22 $$ Integer publishPort[ CD ]
Line_24 $$ publishPort = settings.getAsInt("transport.netty.publish_port", settings.getAsInt("transport.publish_port", null))-->Line_33 $$ publishPort = boundAddress.getPort()[ FD ]
Line_30 $$ for (InetSocketAddress boundAddress : boundAddresses) -->Line_31 $$ InetAddress boundInetAddress = boundAddress.getAddress()[ FD ]
Line_30 $$ for (InetSocketAddress boundAddress : boundAddresses) -->Line_33 $$ publishPort = boundAddress.getPort()[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_11 $$ if (DEFAULT_PROFILE.equals(name)) [ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_46 $$ return new BoundTransportAddress(transportBoundAddresses, publishAddress)[ CD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_5 $$ for (int i = 0; i < boundAddresses.size(); i++) [ FD ]
Line_26 $$ publishPort = profileSettings.getAsInt("publish_port", null)-->Line_33 $$ publishPort = boundAddress.getPort()[ FD ]
Line_16 $$ final InetAddress publishInetAddress-->Line_32 $$ if (boundInetAddress.isAnyLocalAddress() || boundInetAddress.equals(publishInetAddress)) [ FD ]
Line_18 $$ publishInetAddress = networkService.resolvePublishHostAddresses(publishHosts)-->Line_43 $$ logger.warn("Publish port not found by matching publish address [[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_6 $$ InetSocketAddress boundAddress = boundAddresses.get(i)[ FD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_11 $$ if (DEFAULT_PROFILE.equals(name)) [ CD ]
Line_23 $$ if (DEFAULT_PROFILE.equals(name)) -->Line_24 $$ publishPort = settings.getAsInt("transport.netty.publish_port", settings.getAsInt("transport.publish_port", null))[ CD ]
Line_2 $$ private BoundTransportAddress createBoundTransportAddress(String name, Settings profileSettings, List<InetSocketAddress> boundAddresses) -->Line_23 $$ if (DEFAULT_PROFILE.equals(name)) [ FD ]
Line_31 $$ InetAddress boundInetAddress = boundAddress.getAddress()-->Line_32 $$ if (boundInetAddress.isAnyLocalAddress() || boundInetAddress.equals(publishInetAddress)) [ FD ]
