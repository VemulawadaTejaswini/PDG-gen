Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_19 $$ writeRaw(name)[ CD ]
Line_10 $$ if (indent != null) -->Line_11 $$ writeRaw(SystemProperties.getInstance().getLineSeparator())[ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_18 $$ writeRaw("<")[ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_3 $$ if (!XmlValidation.isValidXmlName(name)) [ FD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_17 $$ elements.add(name)[ FD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_6 $$ if (context == Context.CData) [ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_9 $$ maybeFinishStartTag()[ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_19 $$ writeRaw(name)[ FD ]
Line_10 $$ if (indent != null) -->Line_12 $$ for (int i = 0; i < elements.size(); i++) [ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_4 $$ throw new IllegalArgumentException(String.format("Invalid element name: '%s'", name))[ FD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_20 $$ return this[ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_10 $$ if (indent != null) [ CD ]
Line_12 $$ for (int i = 0; i < elements.size(); i++) -->Line_13 $$ writeRaw(indent)[ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_17 $$ elements.add(name)[ CD ]
Line_2 $$ public SimpleMarkupWriter startElement(String name) throws IOException -->Line_3 $$ if (!XmlValidation.isValidXmlName(name)) [ CD ]
