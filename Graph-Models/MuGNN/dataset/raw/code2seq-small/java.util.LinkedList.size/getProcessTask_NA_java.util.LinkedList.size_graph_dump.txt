Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_7 $$ arguments.addAll(commandArguments)[ FD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_3 $$ setGlobalSearchPath(globalSearchPath)[ FD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_7 $$ arguments.addAll(commandArguments)[ CD ]
Line_9 $$ StringBundler sb = new StringBundler(arguments.size() * 2)-->Line_14 $$ _log.info("Excecuting command '" + sb.toString() + "'")[ FD ]
Line_8 $$ if (_log.isInfoEnabled()) -->Line_9 $$ StringBundler sb = new StringBundler(arguments.size() * 2)[ CD ]
Line_4 $$ LinkedList<String> arguments = new LinkedList()-->Line_6 $$ arguments.addAll(resourceLimits)[ FD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_5 $$ arguments.addAll(_instance.getCommand())[ CD ]
Line_4 $$ LinkedList<String> arguments = new LinkedList()-->Line_7 $$ arguments.addAll(commandArguments)[ FD ]
Line_4 $$ LinkedList<String> arguments = new LinkedList()-->Line_5 $$ arguments.addAll(_instance.getCommand())[ FD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_6 $$ arguments.addAll(resourceLimits)[ FD ]
Line_9 $$ StringBundler sb = new StringBundler(arguments.size() * 2)-->Line_11 $$ sb.append(argument)[ FD ]
Line_4 $$ LinkedList<String> arguments = new LinkedList()-->Line_16 $$ return getProcessTask(arguments)[ FD ]
Line_8 $$ if (_log.isInfoEnabled()) -->Line_14 $$ _log.info("Excecuting command '" + sb.toString() + "'")[ CD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_8 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_3 $$ setGlobalSearchPath(globalSearchPath)[ CD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_16 $$ return getProcessTask(arguments)[ CD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_4 $$ LinkedList<String> arguments = new LinkedList()[ CD ]
Line_9 $$ StringBundler sb = new StringBundler(arguments.size() * 2)-->Line_12 $$ sb.append(StringPool.SPACE)[ FD ]
Line_4 $$ LinkedList<String> arguments = new LinkedList()-->Line_9 $$ StringBundler sb = new StringBundler(arguments.size() * 2)[ FD ]
Line_2 $$ public ProcessTask getProcessTask(String globalSearchPath, List<String> resourceLimits, List<String> commandArguments) throws Exception -->Line_6 $$ arguments.addAll(resourceLimits)[ CD ]
Line_10 $$ for (String argument : arguments) -->Line_11 $$ sb.append(argument)[ FD ]
