Line_83 $$ finalParameter = "true".equals(((Text) field.getFirstChild()).getData())-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())-->Line_33 $$ doc = parse(builder, (InputStream) resource, null)[ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_62 $$ if ("configuration".equals(prop.getTagName())) [ CD ]
Line_20 $$ doc = parse(builder, (URL) resource)-->Line_47 $$ root = doc.getDocumentElement()[ FD ]
Line_7 $$ DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance()-->Line_9 $$ docBuilderFactory.setNamespaceAware(true)[ FD ]
Line_5 $$ Object resource = wrapper.getResource()-->Line_35 $$ if (resource instanceof Properties) [ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_58 $$ Node propNode = props.item(i)[ FD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_77 $$ Element field = (Element) fieldNode[ CD ]
Line_70 $$ String value = null-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_87 $$ source.add(name)[ CD ]
Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())-->Line_47 $$ root = doc.getDocumentElement()[ FD ]
Line_24 $$ if (resource instanceof Path) -->Line_26 $$ if (file.exists()) [ CD ]
Line_5 $$ Object resource = wrapper.getResource()-->Line_37 $$ if (resource instanceof Element) [ FD ]
Line_35 $$ if (resource instanceof Properties) -->Line_37 $$ if (resource instanceof Element) [ CD ]
Line_19 $$ if (resource instanceof URL) -->Line_20 $$ doc = parse(builder, (URL) resource)[ CD ]
Line_72 $$ LinkedList<String> source = new LinkedList<String>()-->Line_85 $$ source.add(StringInterner.weakIntern(((Text) field.getFirstChild()).getData()))[ FD ]
Line_88 $$ if (attr != null) -->Line_89 $$ if (deprecations.getDeprecatedKeyMap().containsKey(attr)) [ CD ]
Line_20 $$ doc = parse(builder, (URL) resource)-->Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())[ FD ]
Line_68 $$ NodeList fields = prop.getChildNodes()-->Line_73 $$ for (int j = 0; j < fields.getLength(); j++) [ FD ]
Line_19 $$ if (resource instanceof URL) -->Line_21 $$ if (resource instanceof String) [ CD ]
Line_61 $$ Element prop = (Element) propNode-->Line_66 $$ if (!"property".equals(prop.getTagName()))[ FD ]
Line_24 $$ if (resource instanceof Path) -->Line_32 $$ if (resource instanceof InputStream) [ CD ]
Line_32 $$ if (resource instanceof InputStream) -->Line_34 $$ returnCachedProperties = true[ CD ]
Line_2 $$ private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) -->Line_27 $$ if (!quiet) [ FD ]
Line_72 $$ LinkedList<String> source = new LinkedList<String>()-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_25 $$ File file = new File(((Path) resource).toUri().getPath()).getAbsoluteFile()-->Line_26 $$ if (file.exists()) [ FD ]
Line_16 $$ Document doc = null-->Line_20 $$ doc = parse(builder, (URL) resource)[ FD ]
Line_33 $$ doc = parse(builder, (InputStream) resource, null)-->Line_41 $$ if (doc == null) [ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_88 $$ if (attr != null) [ CD ]
Line_81 $$ value = StringInterner.weakIntern(((Text) field.getFirstChild()).getData())-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_32 $$ if (resource instanceof InputStream) -->Line_35 $$ if (resource instanceof Properties) [ CD ]
Line_16 $$ Document doc = null-->Line_33 $$ doc = parse(builder, (InputStream) resource, null)[ FD ]
Line_3 $$ String name = UNKNOWN_RESOURCE-->Line_87 $$ source.add(name)[ FD ]
Line_21 $$ if (resource instanceof String) -->Line_22 $$ URL url = getResource((String) resource)[ CD ]
Line_38 $$ root = (Element) resource-->Line_53 $$ if (!"configuration".equals(root.getTagName()))[ FD ]
Line_78 $$ if ("name".equals(field.getTagName()) && field.hasChildNodes())-->Line_79 $$ attr = StringInterner.weakIntern(((Text) field.getFirstChild()).getData().trim())[ CD ]
Line_69 $$ String attr = null-->Line_79 $$ attr = StringInterner.weakIntern(((Text) field.getFirstChild()).getData().trim())[ FD ]
Line_17 $$ Element root = null-->Line_38 $$ root = (Element) resource[ FD ]
Line_49 $$ Properties toAddTo = properties-->Line_63 $$ loadResource(toAddTo, new Resource(prop, name), quiet)[ FD ]
Line_62 $$ if ("configuration".equals(prop.getTagName())) -->Line_63 $$ loadResource(toAddTo, new Resource(prop, name), quiet)[ CD ]
Line_7 $$ DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance()-->Line_11 $$ docBuilderFactory.setXIncludeAware(true)[ FD ]
Line_71 $$ boolean finalParameter = false-->Line_83 $$ finalParameter = "true".equals(((Text) field.getFirstChild()).getData())[ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_69 $$ String attr = null[ CD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_74 $$ Node fieldNode = fields.item(j)[ CD ]
Line_69 $$ String attr = null-->Line_90 $$ DeprecatedKeyInfo keyInfo = deprecations.getDeprecatedKeyMap().get(attr)[ FD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_82 $$ if ("final".equals(field.getTagName()) && field.hasChildNodes())[ CD ]
Line_61 $$ Element prop = (Element) propNode-->Line_62 $$ if ("configuration".equals(prop.getTagName())) [ FD ]
Line_2 $$ private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) -->Line_3 $$ String name = UNKNOWN_RESOURCE[ CD ]
Line_49 $$ Properties toAddTo = properties-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_2 $$ private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) -->Line_36 $$ overlay(properties, (Properties) resource)[ FD ]
Line_35 $$ if (resource instanceof Properties) -->Line_36 $$ overlay(properties, (Properties) resource)[ CD ]
Line_3 $$ String name = UNKNOWN_RESOURCE-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_51 $$ toAddTo = new Properties()-->Line_101 $$ overlay(properties, toAddTo)[ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_73 $$ for (int j = 0; j < fields.getLength(); j++) [ CD ]
Line_5 $$ Object resource = wrapper.getResource()-->Line_32 $$ if (resource instanceof InputStream) [ FD ]
Line_89 $$ if (deprecations.getDeprecatedKeyMap().containsKey(attr)) -->Line_91 $$ keyInfo.clearAccessed()[ CD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_72 $$ LinkedList<String> source = new LinkedList<String>()[ CD ]
Line_5 $$ Object resource = wrapper.getResource()-->Line_21 $$ if (resource instanceof String) [ FD ]
Line_83 $$ finalParameter = "true".equals(((Text) field.getFirstChild()).getData())-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_7 $$ DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance()-->Line_8 $$ docBuilderFactory.setIgnoringComments(true)[ FD ]
Line_20 $$ doc = parse(builder, (URL) resource)-->Line_33 $$ doc = parse(builder, (InputStream) resource, null)[ FD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_74 $$ Node fieldNode = fields.item(j)[ FD ]
Line_23 $$ doc = parse(builder, url)-->Line_47 $$ root = doc.getDocumentElement()[ FD ]
Line_68 $$ NodeList fields = prop.getChildNodes()-->Line_74 $$ Node fieldNode = fields.item(j)[ FD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_80 $$ if ("value".equals(field.getTagName()) && field.hasChildNodes())[ FD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_82 $$ if ("final".equals(field.getTagName()) && field.hasChildNodes())[ FD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_84 $$ if ("source".equals(field.getTagName()) && field.hasChildNodes())[ CD ]
Line_16 $$ Document doc = null-->Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())[ FD ]
Line_15 $$ DocumentBuilder builder = docBuilderFactory.newDocumentBuilder()-->Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())[ FD ]
Line_21 $$ if (resource instanceof String) -->Line_24 $$ if (resource instanceof Path) [ CD ]
Line_89 $$ if (deprecations.getDeprecatedKeyMap().containsKey(attr)) -->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ CD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_84 $$ if ("source".equals(field.getTagName()) && field.hasChildNodes())[ FD ]
Line_26 $$ if (file.exists()) -->Line_27 $$ if (!quiet) [ CD ]
Line_18 $$ boolean returnCachedProperties = false-->Line_34 $$ returnCachedProperties = true[ FD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_85 $$ source.add(StringInterner.weakIntern(((Text) field.getFirstChild()).getData()))[ FD ]
Line_51 $$ toAddTo = new Properties()-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_6 $$ name = wrapper.getName()-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_79 $$ attr = StringInterner.weakIntern(((Text) field.getFirstChild()).getData().trim())[ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_61 $$ Element prop = (Element) propNode[ CD ]
Line_22 $$ URL url = getResource((String) resource)-->Line_23 $$ doc = parse(builder, url)[ FD ]
Line_38 $$ root = (Element) resource-->Line_47 $$ root = doc.getDocumentElement()[ FD ]
Line_26 $$ if (file.exists()) -->Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())[ CD ]
Line_70 $$ String value = null-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_82 $$ if ("final".equals(field.getTagName()) && field.hasChildNodes())-->Line_83 $$ finalParameter = "true".equals(((Text) field.getFirstChild()).getData())[ CD ]
Line_79 $$ attr = StringInterner.weakIntern(((Text) field.getFirstChild()).getData().trim())-->Line_90 $$ DeprecatedKeyInfo keyInfo = deprecations.getDeprecatedKeyMap().get(attr)[ FD ]
Line_2 $$ private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) -->Line_63 $$ loadResource(toAddTo, new Resource(prop, name), quiet)[ FD ]
Line_23 $$ doc = parse(builder, url)-->Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())[ FD ]
Line_71 $$ boolean finalParameter = false-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_51 $$ toAddTo = new Properties()-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_71 $$ boolean finalParameter = false-->Line_93 $$ loadProperty(toAddTo, name, key, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_17 $$ Element root = null-->Line_40 $$ if (root == null) [ FD ]
Line_72 $$ LinkedList<String> source = new LinkedList<String>()-->Line_87 $$ source.add(name)[ FD ]
Line_3 $$ String name = UNKNOWN_RESOURCE-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_23 $$ doc = parse(builder, url)-->Line_41 $$ if (doc == null) [ FD ]
Line_32 $$ if (resource instanceof InputStream) -->Line_33 $$ doc = parse(builder, (InputStream) resource, null)[ CD ]
Line_20 $$ doc = parse(builder, (URL) resource)-->Line_41 $$ if (doc == null) [ FD ]
Line_47 $$ root = doc.getDocumentElement()-->Line_55 $$ NodeList props = root.getChildNodes()[ FD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_75 $$ if (!(fieldNode instanceof Element))[ CD ]
Line_38 $$ root = (Element) resource-->Line_40 $$ if (root == null) [ FD ]
Line_61 $$ Element prop = (Element) propNode-->Line_68 $$ NodeList fields = prop.getChildNodes()[ FD ]
Line_23 $$ doc = parse(builder, url)-->Line_33 $$ doc = parse(builder, (InputStream) resource, null)[ FD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_83 $$ finalParameter = "true".equals(((Text) field.getFirstChild()).getData())[ FD ]
Line_79 $$ attr = StringInterner.weakIntern(((Text) field.getFirstChild()).getData().trim())-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_2 $$ private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) -->Line_6 $$ name = wrapper.getName()[ FD ]
Line_49 $$ Properties toAddTo = properties-->Line_51 $$ toAddTo = new Properties()[ FD ]
Line_66 $$ if (!"property".equals(prop.getTagName()))-->Line_67 $$ LOG.warn("bad conf file: element not <property>")[ CD ]
Line_30 $$ doc = parse(builder, new BufferedInputStream(new FileInputStream(file)), ((Path) resource).toString())-->Line_41 $$ if (doc == null) [ FD ]
Line_89 $$ if (deprecations.getDeprecatedKeyMap().containsKey(attr)) -->Line_90 $$ DeprecatedKeyInfo keyInfo = deprecations.getDeprecatedKeyMap().get(attr)[ CD ]
Line_41 $$ if (doc == null) -->Line_42 $$ if (quiet) [ CD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_68 $$ NodeList fields = prop.getChildNodes()[ CD ]
Line_72 $$ LinkedList<String> source = new LinkedList<String>()-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_3 $$ String name = UNKNOWN_RESOURCE-->Line_6 $$ name = wrapper.getName()[ FD ]
Line_56 $$ DeprecationContext deprecations = deprecationContext.get()-->Line_89 $$ if (deprecations.getDeprecatedKeyMap().containsKey(attr)) [ FD ]
Line_6 $$ name = wrapper.getName()-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_84 $$ if ("source".equals(field.getTagName()) && field.hasChildNodes())-->Line_85 $$ source.add(StringInterner.weakIntern(((Text) field.getFirstChild()).getData()))[ CD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_81 $$ value = StringInterner.weakIntern(((Text) field.getFirstChild()).getData())[ FD ]
Line_69 $$ String attr = null-->Line_88 $$ if (attr != null) [ FD ]
Line_33 $$ doc = parse(builder, (InputStream) resource, null)-->Line_47 $$ root = doc.getDocumentElement()[ FD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_80 $$ if ("value".equals(field.getTagName()) && field.hasChildNodes())[ CD ]
Line_70 $$ String value = null-->Line_81 $$ value = StringInterner.weakIntern(((Text) field.getFirstChild()).getData())[ FD ]
Line_55 $$ NodeList props = root.getChildNodes()-->Line_57 $$ for (int i = 0; i < props.getLength(); i++) [ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_58 $$ Node propNode = props.item(i)[ CD ]
Line_69 $$ String attr = null-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_21 $$ if (resource instanceof String) -->Line_23 $$ doc = parse(builder, url)[ CD ]
Line_15 $$ DocumentBuilder builder = docBuilderFactory.newDocumentBuilder()-->Line_23 $$ doc = parse(builder, url)[ FD ]
Line_79 $$ attr = StringInterner.weakIntern(((Text) field.getFirstChild()).getData().trim())-->Line_88 $$ if (attr != null) [ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_66 $$ if (!"property".equals(prop.getTagName()))[ CD ]
Line_40 $$ if (root == null) -->Line_47 $$ root = doc.getDocumentElement()[ CD ]
Line_27 $$ if (!quiet) -->Line_28 $$ LOG.debug("parsing File " + file)[ CD ]
Line_47 $$ root = doc.getDocumentElement()-->Line_53 $$ if (!"configuration".equals(root.getTagName()))[ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_59 $$ if (!(propNode instanceof Element))[ CD ]
Line_100 $$ if (returnCachedProperties) -->Line_101 $$ overlay(properties, toAddTo)[ CD ]
Line_2 $$ private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) -->Line_101 $$ overlay(properties, toAddTo)[ FD ]
Line_17 $$ Element root = null-->Line_53 $$ if (!"configuration".equals(root.getTagName()))[ FD ]
Line_81 $$ value = StringInterner.weakIntern(((Text) field.getFirstChild()).getData())-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_2 $$ private Resource loadResource(Properties properties, Resource wrapper, boolean quiet) -->Line_5 $$ Object resource = wrapper.getResource()[ FD ]
Line_100 $$ if (returnCachedProperties) -->Line_102 $$ return new Resource(toAddTo, name)[ CD ]
Line_42 $$ if (quiet) -->Line_43 $$ return null[ CD ]
Line_38 $$ root = (Element) resource-->Line_55 $$ NodeList props = root.getChildNodes()[ FD ]
Line_40 $$ if (root == null) -->Line_41 $$ if (doc == null) [ CD ]
Line_15 $$ DocumentBuilder builder = docBuilderFactory.newDocumentBuilder()-->Line_33 $$ doc = parse(builder, (InputStream) resource, null)[ FD ]
Line_16 $$ Document doc = null-->Line_47 $$ root = doc.getDocumentElement()[ FD ]
Line_51 $$ toAddTo = new Properties()-->Line_63 $$ loadResource(toAddTo, new Resource(prop, name), quiet)[ FD ]
Line_49 $$ Properties toAddTo = properties-->Line_96 $$ loadProperty(toAddTo, name, attr, value, finalParameter, source.toArray(new String[source.size()]))[ FD ]
Line_55 $$ NodeList props = root.getChildNodes()-->Line_58 $$ Node propNode = props.item(i)[ FD ]
Line_16 $$ Document doc = null-->Line_23 $$ doc = parse(builder, url)[ FD ]
Line_56 $$ DeprecationContext deprecations = deprecationContext.get()-->Line_90 $$ DeprecatedKeyInfo keyInfo = deprecations.getDeprecatedKeyMap().get(attr)[ FD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_70 $$ String value = null[ CD ]
Line_15 $$ DocumentBuilder builder = docBuilderFactory.newDocumentBuilder()-->Line_20 $$ doc = parse(builder, (URL) resource)[ FD ]
Line_77 $$ Element field = (Element) fieldNode-->Line_78 $$ if ("name".equals(field.getTagName()) && field.hasChildNodes())[ FD ]
Line_50 $$ if (returnCachedProperties) -->Line_51 $$ toAddTo = new Properties()[ CD ]
Line_80 $$ if ("value".equals(field.getTagName()) && field.hasChildNodes())-->Line_81 $$ value = StringInterner.weakIntern(((Text) field.getFirstChild()).getData())[ CD ]
Line_20 $$ doc = parse(builder, (URL) resource)-->Line_23 $$ doc = parse(builder, url)[ FD ]
Line_69 $$ String attr = null-->Line_89 $$ if (deprecations.getDeprecatedKeyMap().containsKey(attr)) [ FD ]
Line_6 $$ name = wrapper.getName()-->Line_87 $$ source.add(name)[ FD ]
Line_79 $$ attr = StringInterner.weakIntern(((Text) field.getFirstChild()).getData().trim())-->Line_89 $$ if (deprecations.getDeprecatedKeyMap().containsKey(attr)) [ FD ]
Line_17 $$ Element root = null-->Line_47 $$ root = doc.getDocumentElement()[ FD ]
Line_37 $$ if (resource instanceof Element) -->Line_38 $$ root = (Element) resource[ CD ]
Line_57 $$ for (int i = 0; i < props.getLength(); i++) -->Line_71 $$ boolean finalParameter = false[ CD ]
Line_5 $$ Object resource = wrapper.getResource()-->Line_19 $$ if (resource instanceof URL) [ FD ]
Line_7 $$ DocumentBuilderFactory docBuilderFactory = DocumentBuilderFactory.newInstance()-->Line_15 $$ DocumentBuilder builder = docBuilderFactory.newDocumentBuilder()[ FD ]
Line_49 $$ Properties toAddTo = properties-->Line_101 $$ overlay(properties, toAddTo)[ FD ]
Line_53 $$ if (!"configuration".equals(root.getTagName()))-->Line_54 $$ LOG.fatal("bad conf file: top-level element not <configuration>")[ CD ]
Line_16 $$ Document doc = null-->Line_41 $$ if (doc == null) [ FD ]
Line_17 $$ Element root = null-->Line_55 $$ NodeList props = root.getChildNodes()[ FD ]
Line_73 $$ for (int j = 0; j < fields.getLength(); j++) -->Line_78 $$ if ("name".equals(field.getTagName()) && field.hasChildNodes())[ CD ]
Line_5 $$ Object resource = wrapper.getResource()-->Line_24 $$ if (resource instanceof Path) [ FD ]
Line_24 $$ if (resource instanceof Path) -->Line_25 $$ File file = new File(((Path) resource).toUri().getPath()).getAbsoluteFile()[ CD ]
