Line_3 $$ if (file.isFile()) -->Line_11 $$ if (file.isDirectory()) [ CD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_8 $$ visitor.visitFile(details)[ FD ]
Line_6 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem)-->Line_15 $$ visitor.visitDir(details)[ FD ]
Line_6 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem)-->Line_8 $$ visitor.visitFile(details)[ FD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_4 $$ if (segmentIndex == patternSegments.size()) [ FD ]
Line_11 $$ if (file.isDirectory()) -->Line_14 $$ if (!excludeSpec.isSatisfiedBy(details)) [ CD ]
Line_3 $$ if (file.isFile()) -->Line_4 $$ if (segmentIndex == patternSegments.size()) [ CD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_15 $$ visitor.visitDir(details)[ FD ]
Line_17 $$ if (segmentIndex < patternSegments.size()) -->Line_18 $$ doVisit(visitor, file, relativePath, segmentIndex, stopFlag)[ CD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_18 $$ doVisit(visitor, file, relativePath, segmentIndex, stopFlag)[ FD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_12 $$ RelativePath path = new RelativePath(false, relativePath.toArray(new String[relativePath.size()]))[ FD ]
Line_14 $$ if (!excludeSpec.isSatisfiedBy(details)) -->Line_15 $$ visitor.visitDir(details)[ CD ]
Line_4 $$ if (segmentIndex == patternSegments.size()) -->Line_5 $$ RelativePath path = new RelativePath(true, relativePath.toArray(new String[relativePath.size()]))[ CD ]
Line_11 $$ if (file.isDirectory()) -->Line_17 $$ if (segmentIndex < patternSegments.size()) [ CD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_17 $$ if (segmentIndex < patternSegments.size()) [ FD ]
Line_6 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem)-->Line_7 $$ if (!excludeSpec.isSatisfiedBy(details)) [ FD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_3 $$ if (file.isFile()) [ FD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_3 $$ if (file.isFile()) [ CD ]
Line_4 $$ if (segmentIndex == patternSegments.size()) -->Line_6 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem)[ CD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_5 $$ RelativePath path = new RelativePath(true, relativePath.toArray(new String[relativePath.size()]))[ FD ]
Line_6 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem)-->Line_14 $$ if (!excludeSpec.isSatisfiedBy(details)) [ FD ]
Line_2 $$ private void doVisitDirOrFile(FileVisitor visitor, File file, LinkedList<String> relativePath, int segmentIndex, AtomicBoolean stopFlag) -->Line_11 $$ if (file.isDirectory()) [ FD ]
Line_4 $$ if (segmentIndex == patternSegments.size()) -->Line_7 $$ if (!excludeSpec.isSatisfiedBy(details)) [ CD ]
Line_7 $$ if (!excludeSpec.isSatisfiedBy(details)) -->Line_8 $$ visitor.visitFile(details)[ CD ]
