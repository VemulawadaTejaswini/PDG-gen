Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_5 $$ if (command.length() == 0)[ FD ]
Line_5 $$ if (command.length() == 0)-->Line_6 $$ return[ CD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_9 $$ while (myHistory.size() > MAX_HISTORY_LENGTH) [ CD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_5 $$ if (command.length() == 0)[ CD ]
Line_9 $$ while (myHistory.size() > MAX_HISTORY_LENGTH) -->Line_10 $$ myHistory.removeLast()[ CD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_3 $$ myWorkDirectory = projectPath.trim()[ FD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_8 $$ myHistory.addFirst(command)[ FD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_3 $$ myWorkDirectory = projectPath.trim()[ CD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_7 $$ myHistory.remove(command)[ FD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_4 $$ command = command.trim()[ CD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_8 $$ myHistory.addFirst(command)[ CD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_7 $$ myHistory.remove(command)[ CD ]
Line_2 $$ public void addCommand(@NotNull String command, @NotNull String projectPath) -->Line_4 $$ command = command.trim()[ FD ]
