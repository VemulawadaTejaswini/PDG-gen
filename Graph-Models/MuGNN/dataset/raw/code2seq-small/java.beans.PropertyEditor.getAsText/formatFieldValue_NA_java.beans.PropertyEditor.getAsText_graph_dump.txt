Line_14 $$ TypeDescriptor strDesc = TypeDescriptor.valueOf(String.class)-->Line_15 $$ if (fieldDesc != null && this.conversionService.canConvert(fieldDesc, strDesc)) [ FD ]
Line_13 $$ TypeDescriptor fieldDesc = getPropertyAccessor().getPropertyTypeDescriptor(fixedField)-->Line_15 $$ if (fieldDesc != null && this.conversionService.canConvert(fieldDesc, strDesc)) [ FD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_4 $$ PropertyEditor customEditor = getCustomEditor(fixedField)[ CD ]
Line_13 $$ TypeDescriptor fieldDesc = getPropertyAccessor().getPropertyTypeDescriptor(fixedField)-->Line_16 $$ return this.conversionService.convert(value, fieldDesc, strDesc)[ FD ]
Line_4 $$ PropertyEditor customEditor = getCustomEditor(fixedField)-->Line_7 $$ String textValue = customEditor.getAsText()[ FD ]
Line_12 $$ if (this.conversionService != null) -->Line_13 $$ TypeDescriptor fieldDesc = getPropertyAccessor().getPropertyTypeDescriptor(fixedField)[ CD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_6 $$ customEditor.setValue(value)[ FD ]
Line_5 $$ if (customEditor != null) -->Line_7 $$ String textValue = customEditor.getAsText()[ CD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_12 $$ if (this.conversionService != null) [ CD ]
Line_15 $$ if (fieldDesc != null && this.conversionService.canConvert(fieldDesc, strDesc)) -->Line_16 $$ return this.conversionService.convert(value, fieldDesc, strDesc)[ CD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_16 $$ return this.conversionService.convert(value, fieldDesc, strDesc)[ FD ]
Line_3 $$ String fixedField = fixedField(field)-->Line_13 $$ TypeDescriptor fieldDesc = getPropertyAccessor().getPropertyTypeDescriptor(fixedField)[ FD ]
Line_12 $$ if (this.conversionService != null) -->Line_14 $$ TypeDescriptor strDesc = TypeDescriptor.valueOf(String.class)[ CD ]
Line_4 $$ PropertyEditor customEditor = getCustomEditor(fixedField)-->Line_5 $$ if (customEditor != null) [ FD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_19 $$ return value[ CD ]
Line_8 $$ if (textValue != null) -->Line_9 $$ return textValue[ CD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_3 $$ String fixedField = fixedField(field)[ CD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_3 $$ String fixedField = fixedField(field)[ FD ]
Line_4 $$ PropertyEditor customEditor = getCustomEditor(fixedField)-->Line_6 $$ customEditor.setValue(value)[ FD ]
Line_5 $$ if (customEditor != null) -->Line_8 $$ if (textValue != null) [ CD ]
Line_14 $$ TypeDescriptor strDesc = TypeDescriptor.valueOf(String.class)-->Line_16 $$ return this.conversionService.convert(value, fieldDesc, strDesc)[ FD ]
Line_12 $$ if (this.conversionService != null) -->Line_15 $$ if (fieldDesc != null && this.conversionService.canConvert(fieldDesc, strDesc)) [ CD ]
Line_3 $$ String fixedField = fixedField(field)-->Line_4 $$ PropertyEditor customEditor = getCustomEditor(fixedField)[ FD ]
Line_2 $$ protected Object formatFieldValue(String field, Object value) -->Line_5 $$ if (customEditor != null) [ CD ]
Line_5 $$ if (customEditor != null) -->Line_6 $$ customEditor.setValue(value)[ CD ]
Line_7 $$ String textValue = customEditor.getAsText()-->Line_8 $$ if (textValue != null) [ FD ]
