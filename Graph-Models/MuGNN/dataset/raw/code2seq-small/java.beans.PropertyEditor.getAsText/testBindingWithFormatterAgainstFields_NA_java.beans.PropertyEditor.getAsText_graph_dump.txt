Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_10 $$ MutablePropertyValues pvs = new MutablePropertyValues()[ CD ]
Line_21 $$ editor = binder.getBindingResult().findEditor("myFloat", null)-->Line_22 $$ assertNotNull(editor)[ FD ]
Line_4 $$ DataBinder binder = new DataBinder(tb)-->Line_16 $$ assertEquals("1,2", binder.getBindingResult().getFieldValue("myFloat"))[ FD ]
Line_21 $$ editor = binder.getBindingResult().findEditor("myFloat", null)-->Line_23 $$ editor.setAsText("1,6")[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_11 $$ pvs.add("myFloat", "1,2")[ CD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_5 $$ FormattingConversionService conversionService = new FormattingConversionService()[ CD ]
Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)-->Line_21 $$ editor = binder.getBindingResult().findEditor("myFloat", null)[ FD ]
Line_10 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_11 $$ pvs.add("myFloat", "1,2")[ FD ]
Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)-->Line_19 $$ editor.setValue(new Float(1.4))[ FD ]
Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)-->Line_23 $$ editor.setAsText("1,6")[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_12 $$ LocaleContextHolder.setLocale(Locale.GERMAN)[ CD ]
Line_5 $$ FormattingConversionService conversionService = new FormattingConversionService()-->Line_6 $$ DefaultConversionService.addDefaultConverters(conversionService)[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_7 $$ conversionService.addFormatterForFieldType(Float.class, new NumberStyleFormatter())[ CD ]
Line_4 $$ DataBinder binder = new DataBinder(tb)-->Line_14 $$ binder.bind(pvs)[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_8 $$ binder.setConversionService(conversionService)[ CD ]
Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)-->Line_18 $$ assertNotNull(editor)[ FD ]
Line_5 $$ FormattingConversionService conversionService = new FormattingConversionService()-->Line_8 $$ binder.setConversionService(conversionService)[ FD ]
Line_5 $$ FormattingConversionService conversionService = new FormattingConversionService()-->Line_7 $$ conversionService.addFormatterForFieldType(Float.class, new NumberStyleFormatter())[ FD ]
Line_10 $$ MutablePropertyValues pvs = new MutablePropertyValues()-->Line_14 $$ binder.bind(pvs)[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_6 $$ DefaultConversionService.addDefaultConverters(conversionService)[ CD ]
Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)-->Line_24 $$ assertEquals(new Float(1.6), editor.getValue())[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_4 $$ DataBinder binder = new DataBinder(tb)[ CD ]
Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)-->Line_22 $$ assertNotNull(editor)[ FD ]
Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)-->Line_20 $$ assertEquals("1,4", editor.getAsText())[ FD ]
Line_3 $$ TestBean tb = new TestBean()-->Line_15 $$ assertEquals(new Float(1.2), tb.getMyFloat())[ FD ]
Line_4 $$ DataBinder binder = new DataBinder(tb)-->Line_21 $$ editor = binder.getBindingResult().findEditor("myFloat", null)[ FD ]
Line_4 $$ DataBinder binder = new DataBinder(tb)-->Line_8 $$ binder.setConversionService(conversionService)[ FD ]
Line_21 $$ editor = binder.getBindingResult().findEditor("myFloat", null)-->Line_24 $$ assertEquals(new Float(1.6), editor.getValue())[ FD ]
Line_4 $$ DataBinder binder = new DataBinder(tb)-->Line_17 $$ PropertyEditor editor = binder.getBindingResult().findEditor("myFloat", Float.class)[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_3 $$ TestBean tb = new TestBean()[ CD ]
Line_4 $$ DataBinder binder = new DataBinder(tb)-->Line_9 $$ binder.initDirectFieldAccess()[ FD ]
Line_2 $$ public void testBindingWithFormatterAgainstFields() -->Line_9 $$ binder.initDirectFieldAccess()[ CD ]
