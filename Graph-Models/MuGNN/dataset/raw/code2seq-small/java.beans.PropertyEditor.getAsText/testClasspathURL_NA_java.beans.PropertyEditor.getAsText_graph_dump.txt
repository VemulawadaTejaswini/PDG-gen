Line_2 $$ public void testClasspathURL() throws Exception -->Line_8 $$ assertEquals(url.toExternalForm(), urlEditor.getAsText())[ CD ]
Line_2 $$ public void testClasspathURL() throws Exception -->Line_5 $$ Object value = urlEditor.getValue()[ CD ]
Line_3 $$ PropertyEditor urlEditor = new URLEditor()-->Line_4 $$ urlEditor.setAsText("classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class")[ FD ]
Line_2 $$ public void testClasspathURL() throws Exception -->Line_9 $$ assertTrue(!url.getProtocol().startsWith("classpath"))[ CD ]
Line_7 $$ URL url = (URL) value-->Line_8 $$ assertEquals(url.toExternalForm(), urlEditor.getAsText())[ FD ]
Line_2 $$ public void testClasspathURL() throws Exception -->Line_4 $$ urlEditor.setAsText("classpath:" + ClassUtils.classPackageAsResourcePath(getClass()) + "/" + ClassUtils.getShortName(getClass()) + ".class")[ CD ]
Line_2 $$ public void testClasspathURL() throws Exception -->Line_7 $$ URL url = (URL) value[ CD ]
Line_2 $$ public void testClasspathURL() throws Exception -->Line_3 $$ PropertyEditor urlEditor = new URLEditor()[ CD ]
Line_7 $$ URL url = (URL) value-->Line_9 $$ assertTrue(!url.getProtocol().startsWith("classpath"))[ FD ]
Line_3 $$ PropertyEditor urlEditor = new URLEditor()-->Line_8 $$ assertEquals(url.toExternalForm(), urlEditor.getAsText())[ FD ]
Line_2 $$ public void testClasspathURL() throws Exception -->Line_6 $$ assertTrue(value instanceof URL)[ CD ]
Line_3 $$ PropertyEditor urlEditor = new URLEditor()-->Line_5 $$ Object value = urlEditor.getValue()[ FD ]
