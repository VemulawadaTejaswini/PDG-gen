Line_2 $$ public void classpathURLAsIs() throws Exception -->Line_4 $$ uriEditor.setAsText("classpath:test.txt")[ CD ]
Line_2 $$ public void classpathURLAsIs() throws Exception -->Line_3 $$ PropertyEditor uriEditor = new URIEditor()[ CD ]
Line_3 $$ PropertyEditor uriEditor = new URIEditor()-->Line_8 $$ assertEquals(uri.toString(), uriEditor.getAsText())[ FD ]
Line_3 $$ PropertyEditor uriEditor = new URIEditor()-->Line_5 $$ Object value = uriEditor.getValue()[ FD ]
Line_7 $$ URI uri = (URI) value-->Line_8 $$ assertEquals(uri.toString(), uriEditor.getAsText())[ FD ]
Line_2 $$ public void classpathURLAsIs() throws Exception -->Line_6 $$ assertTrue(value instanceof URI)[ CD ]
Line_2 $$ public void classpathURLAsIs() throws Exception -->Line_9 $$ assertTrue(uri.getScheme().startsWith("classpath"))[ CD ]
Line_2 $$ public void classpathURLAsIs() throws Exception -->Line_7 $$ URI uri = (URI) value[ CD ]
Line_2 $$ public void classpathURLAsIs() throws Exception -->Line_5 $$ Object value = uriEditor.getValue()[ CD ]
Line_3 $$ PropertyEditor uriEditor = new URIEditor()-->Line_4 $$ uriEditor.setAsText("classpath:test.txt")[ FD ]
Line_7 $$ URI uri = (URI) value-->Line_9 $$ assertTrue(uri.getScheme().startsWith("classpath"))[ FD ]
Line_2 $$ public void classpathURLAsIs() throws Exception -->Line_8 $$ assertEquals(uri.toString(), uriEditor.getAsText())[ CD ]
