Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_10 $$ charEditor.setAsText(" ")[ CD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_9 $$ assertEquals("", charEditor.getAsText())[ FD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_8 $$ charEditor.setAsText("")[ CD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_6 $$ charEditor.setAsText(null)[ FD ]
Line_5 $$ charEditor = new CharacterEditor(true)-->Line_6 $$ charEditor.setAsText(null)[ FD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_10 $$ charEditor.setAsText(" ")[ FD ]
Line_5 $$ charEditor = new CharacterEditor(true)-->Line_11 $$ assertEquals(" ", charEditor.getAsText())[ FD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_11 $$ assertEquals(" ", charEditor.getAsText())[ FD ]
Line_5 $$ charEditor = new CharacterEditor(true)-->Line_9 $$ assertEquals("", charEditor.getAsText())[ FD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_11 $$ assertEquals(" ", charEditor.getAsText())[ CD ]
Line_5 $$ charEditor = new CharacterEditor(true)-->Line_10 $$ charEditor.setAsText(" ")[ FD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_5 $$ charEditor = new CharacterEditor(true)[ FD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)[ CD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_7 $$ assertEquals("", charEditor.getAsText())[ FD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_4 $$ assertEquals("", charEditor.getAsText())[ CD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_7 $$ assertEquals("", charEditor.getAsText())[ CD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_8 $$ charEditor.setAsText("")[ FD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_6 $$ charEditor.setAsText(null)[ CD ]
Line_3 $$ PropertyEditor charEditor = new CharacterEditor(false)-->Line_4 $$ assertEquals("", charEditor.getAsText())[ FD ]
Line_5 $$ charEditor = new CharacterEditor(true)-->Line_8 $$ charEditor.setAsText("")[ FD ]
Line_5 $$ charEditor = new CharacterEditor(true)-->Line_7 $$ assertEquals("", charEditor.getAsText())[ FD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_9 $$ assertEquals("", charEditor.getAsText())[ CD ]
Line_2 $$ public void testCharacterEditorGetAsTextReturnsEmptyStringIfValueIsNull() throws Exception -->Line_5 $$ charEditor = new CharacterEditor(true)[ CD ]
