Line_5 $$ int nrows = gridLayout.getRows()-->Line_10 $$ nrows = (ncomponents + ncols - 1) / ncols[ FD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_4 $$ int ncomponents = parent.getComponentCount()[ CD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_6 $$ int ncols = gridLayout.getColumns()[ CD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_3 $$ GridLayout gridLayout = (GridLayout) layout[ CD ]
Line_5 $$ int nrows = gridLayout.getRows()-->Line_7 $$ if (nrows > 0) [ FD ]
Line_5 $$ int nrows = gridLayout.getRows()-->Line_8 $$ ncols = (ncomponents + nrows - 1) / nrows[ FD ]
Line_3 $$ GridLayout gridLayout = (GridLayout) layout-->Line_5 $$ int nrows = gridLayout.getRows()[ FD ]
Line_7 $$ if (nrows > 0) -->Line_8 $$ ncols = (ncomponents + nrows - 1) / nrows[ CD ]
Line_8 $$ ncols = (ncomponents + nrows - 1) / nrows-->Line_10 $$ nrows = (ncomponents + ncols - 1) / ncols[ FD ]
Line_3 $$ GridLayout gridLayout = (GridLayout) layout-->Line_12 $$ container.setLayout(new GridLayoutManager(nrows, ncols, new Insets(0, 0, 0, 0), gridLayout.getHgap(), gridLayout.getVgap(), true, true))[ FD ]
Line_6 $$ int ncols = gridLayout.getColumns()-->Line_10 $$ nrows = (ncomponents + ncols - 1) / ncols[ FD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_4 $$ int ncomponents = parent.getComponentCount()[ FD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_12 $$ container.setLayout(new GridLayoutManager(nrows, ncols, new Insets(0, 0, 0, 0), gridLayout.getHgap(), gridLayout.getVgap(), true, true))[ CD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_7 $$ if (nrows > 0) [ CD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_5 $$ int nrows = gridLayout.getRows()[ CD ]
Line_3 $$ GridLayout gridLayout = (GridLayout) layout-->Line_6 $$ int ncols = gridLayout.getColumns()[ FD ]
Line_6 $$ int ncols = gridLayout.getColumns()-->Line_8 $$ ncols = (ncomponents + nrows - 1) / nrows[ FD ]
Line_2 $$ public void createSnapshotLayout(final SnapshotContext context, final JComponent parent, final RadContainer container, final LayoutManager layout) -->Line_12 $$ container.setLayout(new GridLayoutManager(nrows, ncols, new Insets(0, 0, 0, 0), gridLayout.getHgap(), gridLayout.getVgap(), true, true))[ FD ]
Line_7 $$ if (nrows > 0) -->Line_10 $$ nrows = (ncomponents + ncols - 1) / ncols[ CD ]
