Line_18 $$ Runnable closeTask = mock(Runnable.class)-->Line_21 $$ verify(closeTask, never()).run()[ FD ]
Line_2 $$ public void concurrent() throws InterruptedException, ExecutionException -->Line_3 $$ ServiceExecutor executor = new StampedLockServiceExecutor()[ CD ]
Line_6 $$ CountDownLatch executeLatch = new CountDownLatch(1)-->Line_10 $$ executeLatch.countDown()[ FD ]
Line_6 $$ CountDownLatch executeLatch = new CountDownLatch(1)-->Line_17 $$ executeLatch.await()[ FD ]
Line_3 $$ ServiceExecutor executor = new StampedLockServiceExecutor()-->Line_16 $$ executor.execute(executeTask)[ FD ]
Line_3 $$ ServiceExecutor executor = new StampedLockServiceExecutor()-->Line_19 $$ executor.close(closeTask)[ FD ]
Line_4 $$ ExecutorService service = Executors.newFixedThreadPool(2)-->Line_16 $$ Future<?> executeFuture = service.submit(() -> executor.execute(executeTask))[ FD ]
Line_18 $$ Runnable closeTask = mock(Runnable.class)-->Line_25 $$ verify(closeTask).run()[ FD ]
Line_4 $$ ExecutorService service = Executors.newFixedThreadPool(2)-->Line_27 $$ service.shutdownNow()[ FD ]
Line_4 $$ ExecutorService service = Executors.newFixedThreadPool(2)-->Line_19 $$ Future<?> closeFuture = service.submit(() -> executor.close(closeTask))[ FD ]
Line_16 $$ Future<?> executeFuture = service.submit(() -> executor.execute(executeTask))-->Line_23 $$ executeFuture.get()[ FD ]
Line_18 $$ Runnable closeTask = mock(Runnable.class)-->Line_19 $$ executor.close(closeTask)[ FD ]
Line_2 $$ public void concurrent() throws InterruptedException, ExecutionException -->Line_4 $$ ExecutorService service = Executors.newFixedThreadPool(2)[ CD ]
Line_7 $$ CountDownLatch stopLatch = new CountDownLatch(1)-->Line_22 $$ stopLatch.countDown()[ FD ]
Line_7 $$ CountDownLatch stopLatch = new CountDownLatch(1)-->Line_11 $$ stopLatch.await()[ FD ]
Line_19 $$ Future<?> closeFuture = service.submit(() -> executor.close(closeTask))-->Line_24 $$ closeFuture.get()[ FD ]
Line_8 $$ Runnable executeTask = () -> -->Line_16 $$ executor.execute(executeTask)[ FD ]
