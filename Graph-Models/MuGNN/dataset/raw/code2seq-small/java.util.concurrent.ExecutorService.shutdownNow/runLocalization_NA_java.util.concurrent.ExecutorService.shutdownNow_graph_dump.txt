Line_8 $$ credFile = lfs.open(tokenPath)-->Line_9 $$ creds.readTokenStorageStream(credFile)[ FD ]
Line_4 $$ final Credentials creds = new Credentials()-->Line_17 $$ remoteUser.addToken(creds.getToken(LocalizerTokenIdentifier.KIND))[ FD ]
Line_4 $$ final Credentials creds = new Credentials()-->Line_9 $$ creds.readTokenStorageStream(credFile)[ FD ]
Line_16 $$ UserGroupInformation remoteUser = UserGroupInformation.createRemoteUser(user)-->Line_18 $$ final LocalizationProtocol nodeManager = remoteUser.doAs(new PrivilegedAction<LocalizationProtocol>() [ FD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_23 $$ UserGroupInformation ugi = UserGroupInformation.createRemoteUser(user)[ CD ]
Line_18 $$ final LocalizationProtocol nodeManager = remoteUser.doAs(new PrivilegedAction<LocalizationProtocol>() -->Line_20 $$ return getProxy(nmAddr)[ CD ]
Line_4 $$ final Credentials creds = new Credentials()-->Line_24 $$ for (Token<? extends TokenIdentifier> token : creds.getAllTokens()) [ FD ]
Line_5 $$ DataInputStream credFile = null-->Line_8 $$ credFile = lfs.open(tokenPath)[ FD ]
Line_12 $$ if (credFile != null) -->Line_13 $$ credFile.close()[ CD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_3 $$ initDirs(conf, user, appId, lfs, localDirs)[ CD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_20 $$ return getProxy(nmAddr)[ FD ]
Line_5 $$ DataInputStream credFile = null-->Line_9 $$ creds.readTokenStorageStream(credFile)[ FD ]
Line_38 $$ if (exec != null) -->Line_39 $$ exec.shutdownNow()[ CD ]
Line_5 $$ DataInputStream credFile = null-->Line_12 $$ if (credFile != null) [ FD ]
Line_16 $$ UserGroupInformation remoteUser = UserGroupInformation.createRemoteUser(user)-->Line_17 $$ remoteUser.addToken(creds.getToken(LocalizerTokenIdentifier.KIND))[ FD ]
Line_5 $$ DataInputStream credFile = null-->Line_13 $$ credFile.close()[ FD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_4 $$ final Credentials creds = new Credentials()[ CD ]
Line_8 $$ credFile = lfs.open(tokenPath)-->Line_13 $$ credFile.close()[ FD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_18 $$ final LocalizationProtocol nodeManager = remoteUser.doAs(new PrivilegedAction<LocalizationProtocol>() [ CD ]
Line_18 $$ final LocalizationProtocol nodeManager = remoteUser.doAs(new PrivilegedAction<LocalizationProtocol>() -->Line_31 $$ localizeFiles(nodeManager, ecs, ugi)[ FD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_5 $$ DataInputStream credFile = null[ CD ]
Line_7 $$ Path tokenPath = new Path(String.format(TOKEN_FILE_NAME_FMT, localizerId))-->Line_10 $$ lfs.delete(tokenPath, false)[ FD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_17 $$ remoteUser.addToken(creds.getToken(LocalizerTokenIdentifier.KIND))[ CD ]
Line_2 $$ public int runLocalization(final InetSocketAddress nmAddr) throws IOException, InterruptedException -->Line_16 $$ UserGroupInformation remoteUser = UserGroupInformation.createRemoteUser(user)[ CD ]
Line_8 $$ credFile = lfs.open(tokenPath)-->Line_12 $$ if (credFile != null) [ FD ]
Line_7 $$ Path tokenPath = new Path(String.format(TOKEN_FILE_NAME_FMT, localizerId))-->Line_8 $$ credFile = lfs.open(tokenPath)[ FD ]
