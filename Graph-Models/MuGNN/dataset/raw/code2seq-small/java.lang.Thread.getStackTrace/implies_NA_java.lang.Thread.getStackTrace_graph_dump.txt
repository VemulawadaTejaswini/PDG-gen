Line_3 $$ CodeSource codeSource = domain.getCodeSource()-->Line_7 $$ URL location = codeSource.getLocation()[ FD ]
Line_9 $$ if (BootstrapInfo.UNTRUSTED_CODEBASE.equals(location.getFile())) -->Line_10 $$ return untrusted.implies(domain, permission)[ CD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_13 $$ if (plugin != null && plugin.implies(domain, permission)) [ FD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_4 $$ if (codeSource == null) [ CD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_17 $$ if (permission instanceof FilePermission && "<<ALL FILES>>".equals(permission.getName())) [ CD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_3 $$ CodeSource codeSource = domain.getCodeSource()[ FD ]
Line_8 $$ if (location != null) -->Line_13 $$ if (plugin != null && plugin.implies(domain, permission)) [ CD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_24 $$ return template.implies(domain, permission) || dynamic.implies(permission) || system.implies(domain, permission)[ FD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_3 $$ CodeSource codeSource = domain.getCodeSource()[ CD ]
Line_7 $$ URL location = codeSource.getLocation()-->Line_8 $$ if (location != null) [ FD ]
Line_8 $$ if (location != null) -->Line_9 $$ if (BootstrapInfo.UNTRUSTED_CODEBASE.equals(location.getFile())) [ CD ]
Line_19 $$ if ("org.apache.hadoop.util.Shell".equals(element.getClassName()) && "runCommand".equals(element.getMethodName())) -->Line_20 $$ rethrow(new IOException("no hadoop, you cannot do this."))[ CD ]
Line_8 $$ if (location != null) -->Line_12 $$ Policy plugin = plugins.get(location.getFile())[ CD ]
Line_3 $$ CodeSource codeSource = domain.getCodeSource()-->Line_4 $$ if (codeSource == null) [ FD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_10 $$ return untrusted.implies(domain, permission)[ FD ]
Line_13 $$ if (plugin != null && plugin.implies(domain, permission)) -->Line_14 $$ return true[ CD ]
Line_12 $$ Policy plugin = plugins.get(location.getFile())-->Line_13 $$ if (plugin != null && plugin.implies(domain, permission)) [ FD ]
Line_4 $$ if (codeSource == null) -->Line_5 $$ return false[ CD ]
Line_7 $$ URL location = codeSource.getLocation()-->Line_9 $$ if (BootstrapInfo.UNTRUSTED_CODEBASE.equals(location.getFile())) [ FD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_8 $$ if (location != null) [ CD ]
Line_7 $$ URL location = codeSource.getLocation()-->Line_12 $$ Policy plugin = plugins.get(location.getFile())[ FD ]
Line_18 $$ for (StackTraceElement element : Thread.currentThread().getStackTrace()) -->Line_19 $$ if ("org.apache.hadoop.util.Shell".equals(element.getClassName()) && "runCommand".equals(element.getMethodName())) [ FD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_7 $$ URL location = codeSource.getLocation()[ CD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_17 $$ if (permission instanceof FilePermission && "<<ALL FILES>>".equals(permission.getName())) [ FD ]
Line_2 $$ public boolean implies(ProtectionDomain domain, Permission permission) -->Line_24 $$ return template.implies(domain, permission) || dynamic.implies(permission) || system.implies(domain, permission)[ CD ]
