Line_7 $$ String parameter = (String) parameters.get(i)-->Line_9 $$ final int indexOf = parameter.indexOf(debuggerParam)[ FD ]
Line_12 $$ parameter = parameter.substring(0, indexOf) + "transport=dt_socket,server=n,suspend=y,address=" + debugAddress-->Line_13 $$ parameters.set(i, parameter)[ FD ]
Line_7 $$ String parameter = (String) parameters.get(i)-->Line_16 $$ parameters.remove(parameter)[ FD ]
Line_3 $$ if (myDebugPort > -1) -->Line_5 $$ boolean found = false[ CD ]
Line_2 $$ public void setupDebugger(List parameters) throws IOException -->Line_22 $$ parameters.add("-agentlib:jdwp=transport=dt_socket,server=n,suspend=y,address=" + debugAddress)[ FD ]
Line_2 $$ public void setupDebugger(List parameters) throws IOException -->Line_6 $$ for (int i = 0; i < parameters.size(); i++) [ FD ]
Line_6 $$ for (int i = 0; i < parameters.size(); i++) -->Line_13 $$ parameters.set(i, parameter)[ FD ]
Line_4 $$ int debugAddress = findAvailableSocketPort()-->Line_24 $$ if (debugAddress > -1) [ FD ]
Line_26 $$ DataOutputStream stream = new DataOutputStream(socket.getOutputStream())-->Line_27 $$ stream.writeInt(debugAddress)[ FD ]
Line_4 $$ int debugAddress = findAvailableSocketPort()-->Line_11 $$ if (debugAddress > -1) [ FD ]
Line_10 $$ if (indexOf >= 0) -->Line_11 $$ if (debugAddress > -1) [ CD ]
Line_24 $$ if (debugAddress > -1) -->Line_27 $$ stream.writeInt(debugAddress)[ CD ]
Line_9 $$ final int indexOf = parameter.indexOf(debuggerParam)-->Line_12 $$ parameter = parameter.substring(0, indexOf) + "transport=dt_socket,server=n,suspend=y,address=" + debugAddress[ FD ]
Line_24 $$ if (debugAddress > -1) -->Line_28 $$ int read = socket.getInputStream().read()[ CD ]
Line_7 $$ String parameter = (String) parameters.get(i)-->Line_12 $$ parameter = parameter.substring(0, indexOf) + "transport=dt_socket,server=n,suspend=y,address=" + debugAddress[ FD ]
Line_3 $$ if (myDebugPort > -1) -->Line_24 $$ if (debugAddress > -1) [ CD ]
Line_24 $$ if (debugAddress > -1) -->Line_26 $$ DataOutputStream stream = new DataOutputStream(socket.getOutputStream())[ CD ]
Line_6 $$ for (int i = 0; i < parameters.size(); i++) -->Line_10 $$ if (indexOf >= 0) [ CD ]
Line_5 $$ boolean found = false-->Line_21 $$ if (!found) [ FD ]
Line_7 $$ String parameter = (String) parameters.get(i)-->Line_13 $$ parameters.set(i, parameter)[ FD ]
Line_9 $$ final int indexOf = parameter.indexOf(debuggerParam)-->Line_10 $$ if (indexOf >= 0) [ FD ]
Line_6 $$ for (int i = 0; i < parameters.size(); i++) -->Line_9 $$ final int indexOf = parameter.indexOf(debuggerParam)[ CD ]
Line_12 $$ parameter = parameter.substring(0, indexOf) + "transport=dt_socket,server=n,suspend=y,address=" + debugAddress-->Line_9 $$ final int indexOf = parameter.indexOf(debuggerParam)[ FD ]
Line_21 $$ if (!found) -->Line_22 $$ parameters.add("-agentlib:jdwp=transport=dt_socket,server=n,suspend=y,address=" + debugAddress)[ CD ]
Line_11 $$ if (debugAddress > -1) -->Line_14 $$ found = true[ CD ]
Line_6 $$ for (int i = 0; i < parameters.size(); i++) -->Line_7 $$ String parameter = (String) parameters.get(i)[ CD ]
Line_4 $$ int debugAddress = findAvailableSocketPort()-->Line_12 $$ parameter = parameter.substring(0, indexOf) + "transport=dt_socket,server=n,suspend=y,address=" + debugAddress[ FD ]
Line_25 $$ Socket socket = getDebugSocket()-->Line_28 $$ int read = socket.getInputStream().read()[ FD ]
Line_25 $$ Socket socket = getDebugSocket()-->Line_26 $$ DataOutputStream stream = new DataOutputStream(socket.getOutputStream())[ FD ]
Line_2 $$ public void setupDebugger(List parameters) throws IOException -->Line_3 $$ if (myDebugPort > -1) [ CD ]
Line_4 $$ int debugAddress = findAvailableSocketPort()-->Line_27 $$ stream.writeInt(debugAddress)[ FD ]
Line_11 $$ if (debugAddress > -1) -->Line_16 $$ parameters.remove(parameter)[ CD ]
Line_8 $$ final String debuggerParam = "transport=dt_socket"-->Line_9 $$ final int indexOf = parameter.indexOf(debuggerParam)[ FD ]
Line_24 $$ if (debugAddress > -1) -->Line_25 $$ Socket socket = getDebugSocket()[ CD ]
Line_3 $$ if (myDebugPort > -1) -->Line_6 $$ for (int i = 0; i < parameters.size(); i++) [ CD ]
Line_6 $$ for (int i = 0; i < parameters.size(); i++) -->Line_8 $$ final String debuggerParam = "transport=dt_socket"[ CD ]
Line_5 $$ boolean found = false-->Line_14 $$ found = true[ FD ]
Line_12 $$ parameter = parameter.substring(0, indexOf) + "transport=dt_socket,server=n,suspend=y,address=" + debugAddress-->Line_16 $$ parameters.remove(parameter)[ FD ]
Line_2 $$ public void setupDebugger(List parameters) throws IOException -->Line_7 $$ String parameter = (String) parameters.get(i)[ FD ]
Line_11 $$ if (debugAddress > -1) -->Line_13 $$ parameters.set(i, parameter)[ CD ]
Line_2 $$ public void setupDebugger(List parameters) throws IOException -->Line_13 $$ parameters.set(i, parameter)[ FD ]
Line_3 $$ if (myDebugPort > -1) -->Line_21 $$ if (!found) [ CD ]
Line_6 $$ for (int i = 0; i < parameters.size(); i++) -->Line_7 $$ String parameter = (String) parameters.get(i)[ FD ]
Line_2 $$ public void setupDebugger(List parameters) throws IOException -->Line_16 $$ parameters.remove(parameter)[ FD ]
Line_11 $$ if (debugAddress > -1) -->Line_12 $$ parameter = parameter.substring(0, indexOf) + "transport=dt_socket,server=n,suspend=y,address=" + debugAddress[ CD ]
Line_3 $$ if (myDebugPort > -1) -->Line_4 $$ int debugAddress = findAvailableSocketPort()[ CD ]
Line_14 $$ found = true-->Line_21 $$ if (!found) [ FD ]
