Line_5 $$ GSSContext gssContext = null-->Line_17 $$ gssContext.requestInteg(true)[ FD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_15 $$ gssContext.requestMutualAuth(true)[ FD ]
Line_2 $$ public String getName(final GSSCredential gssCredential) throws IOException, GSSException -->Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_15 $$ gssContext.requestMutualAuth(true)[ FD ]
Line_18 $$ byte[] token = new byte[0]-->Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)[ FD ]
Line_21 $$ if (token != null) -->Line_24 $$ dos.flush()[ CD ]
Line_21 $$ if (token != null) -->Line_23 $$ dos.write(token)[ CD ]
Line_8 $$ DataOutputStream dos = new DataOutputStream(socket.getOutputStream())-->Line_11 $$ dos.writeInt(GSSTestConstants.CMD_NAME)[ FD ]
Line_21 $$ if (token != null) -->Line_22 $$ dos.writeInt(token.length)[ CD ]
Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)-->Line_27 $$ token = new byte[dis.readInt()][ FD ]
Line_9 $$ DataInputStream dis = new DataInputStream(socket.getInputStream())-->Line_31 $$ token = new byte[dis.readInt()][ FD ]
Line_2 $$ public String getName(final GSSCredential gssCredential) throws IOException, GSSException -->Line_3 $$ LOGGER.info("getName() called with GSSCredential:\n" + gssCredential)[ CD ]
Line_9 $$ DataInputStream dis = new DataInputStream(socket.getInputStream())-->Line_32 $$ dis.readFully(token)[ FD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_16 $$ gssContext.requestConf(true)[ FD ]
Line_27 $$ token = new byte[dis.readInt()]-->Line_32 $$ dis.readFully(token)[ FD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_26 $$ if (!gssContext.isEstablished()) [ FD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_19 $$ while (!gssContext.isEstablished()) [ FD ]
Line_19 $$ while (!gssContext.isEstablished()) -->Line_21 $$ if (token != null) [ CD ]
Line_27 $$ token = new byte[dis.readInt()]-->Line_34 $$ final byte[] nameBytes = gssContext.unwrap(token, 0, token.length, msgProp)[ FD ]
Line_19 $$ while (!gssContext.isEstablished()) -->Line_26 $$ if (!gssContext.isEstablished()) [ CD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_47 $$ gssContext.dispose()[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_45 $$ if (gssContext != null) [ FD ]
Line_9 $$ DataInputStream dis = new DataInputStream(socket.getInputStream())-->Line_28 $$ dis.readFully(token)[ FD ]
Line_27 $$ token = new byte[dis.readInt()]-->Line_28 $$ dis.readFully(token)[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_19 $$ while (!gssContext.isEstablished()) [ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_26 $$ if (!gssContext.isEstablished()) [ FD ]
Line_18 $$ byte[] token = new byte[0]-->Line_27 $$ token = new byte[dis.readInt()][ FD ]
Line_18 $$ byte[] token = new byte[0]-->Line_23 $$ dos.write(token)[ FD ]
Line_8 $$ DataOutputStream dos = new DataOutputStream(socket.getOutputStream())-->Line_24 $$ dos.flush()[ FD ]
Line_18 $$ byte[] token = new byte[0]-->Line_34 $$ final byte[] nameBytes = gssContext.unwrap(token, 0, token.length, msgProp)[ FD ]
Line_27 $$ token = new byte[dis.readInt()]-->Line_21 $$ if (token != null) [ FD ]
Line_18 $$ byte[] token = new byte[0]-->Line_21 $$ if (token != null) [ FD ]
Line_26 $$ if (!gssContext.isEstablished()) -->Line_27 $$ token = new byte[dis.readInt()][ CD ]
Line_18 $$ byte[] token = new byte[0]-->Line_28 $$ dis.readFully(token)[ FD ]
Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)-->Line_34 $$ final byte[] nameBytes = gssContext.unwrap(token, 0, token.length, msgProp)[ FD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_17 $$ gssContext.requestInteg(true)[ FD ]
Line_18 $$ byte[] token = new byte[0]-->Line_31 $$ token = new byte[dis.readInt()][ FD ]
Line_2 $$ public String getName(final GSSCredential gssCredential) throws IOException, GSSException -->Line_4 $$ final Socket socket = new Socket()[ CD ]
Line_4 $$ final Socket socket = new Socket()-->Line_8 $$ DataOutputStream dos = new DataOutputStream(socket.getOutputStream())[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_16 $$ gssContext.requestConf(true)[ FD ]
Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)-->Line_23 $$ dos.write(token)[ FD ]
Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)-->Line_32 $$ dis.readFully(token)[ FD ]
Line_27 $$ token = new byte[dis.readInt()]-->Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)[ FD ]
Line_8 $$ DataOutputStream dos = new DataOutputStream(socket.getOutputStream())-->Line_23 $$ dos.write(token)[ FD ]
Line_26 $$ if (!gssContext.isEstablished()) -->Line_28 $$ dis.readFully(token)[ CD ]
Line_18 $$ byte[] token = new byte[0]-->Line_32 $$ dis.readFully(token)[ FD ]
Line_31 $$ token = new byte[dis.readInt()]-->Line_32 $$ dis.readFully(token)[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_34 $$ final byte[] nameBytes = gssContext.unwrap(token, 0, token.length, msgProp)[ FD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_34 $$ final byte[] nameBytes = gssContext.unwrap(token, 0, token.length, msgProp)[ FD ]
Line_8 $$ DataOutputStream dos = new DataOutputStream(socket.getOutputStream())-->Line_12 $$ dos.flush()[ FD ]
Line_4 $$ final Socket socket = new Socket()-->Line_9 $$ DataInputStream dis = new DataInputStream(socket.getInputStream())[ FD ]
Line_2 $$ public String getName(final GSSCredential gssCredential) throws IOException, GSSException -->Line_5 $$ GSSContext gssContext = null[ CD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)[ FD ]
Line_8 $$ DataOutputStream dos = new DataOutputStream(socket.getOutputStream())-->Line_22 $$ dos.writeInt(token.length)[ FD ]
Line_9 $$ DataInputStream dis = new DataInputStream(socket.getInputStream())-->Line_27 $$ token = new byte[dis.readInt()][ FD ]
Line_31 $$ token = new byte[dis.readInt()]-->Line_34 $$ final byte[] nameBytes = gssContext.unwrap(token, 0, token.length, msgProp)[ FD ]
Line_4 $$ final Socket socket = new Socket()-->Line_41 $$ socket.close()[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_47 $$ gssContext.dispose()[ FD ]
Line_4 $$ final Socket socket = new Socket()-->Line_7 $$ socket.connect(new InetSocketAddress(host, port), GSSTestConstants.SOCKET_TIMEOUT)[ FD ]
Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)-->Line_28 $$ dis.readFully(token)[ FD ]
Line_33 $$ MessageProp msgProp = new MessageProp(false)-->Line_34 $$ final byte[] nameBytes = gssContext.unwrap(token, 0, token.length, msgProp)[ FD ]
Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)-->Line_21 $$ if (token != null) [ FD ]
Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)-->Line_45 $$ if (gssContext != null) [ FD ]
Line_27 $$ token = new byte[dis.readInt()]-->Line_31 $$ token = new byte[dis.readInt()][ FD ]
Line_13 $$ GSSManager manager = GSSManager.getInstance()-->Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)[ FD ]
Line_27 $$ token = new byte[dis.readInt()]-->Line_23 $$ dos.write(token)[ FD ]
Line_5 $$ GSSContext gssContext = null-->Line_14 $$ gssContext = manager.createContext(manager.createName(spn, null), Constants.KERBEROS_V5, gssCredential, GSSContext.DEFAULT_LIFETIME)[ FD ]
Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)-->Line_31 $$ token = new byte[dis.readInt()][ FD ]
Line_19 $$ while (!gssContext.isEstablished()) -->Line_20 $$ token = gssContext.initSecContext(token, 0, token.length)[ CD ]
