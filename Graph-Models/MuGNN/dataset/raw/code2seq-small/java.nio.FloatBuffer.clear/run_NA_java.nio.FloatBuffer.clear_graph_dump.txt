Line_19 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_26 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_7 $$ IntBuffer intBuffer = buffer.asIntBuffer()-->Line_35 $$ intBuffer.put(intArray)[ FD ]
Line_19 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_21 $$ floatBuffer.clear()[ CD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_28 $$ floatBuffer.clear()[ FD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_20 $$ floatBuffer.put(i, floatArray[i])[ FD ]
Line_41 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_42 $$ BufferUtils.copy(floatArray, floatBuffer, floatArray.length, 0)[ CD ]
Line_13 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])-->Line_20 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(i, floatArray[i])[ FD ]
Line_19 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_41 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_7 $$ IntBuffer intBuffer = buffer.asIntBuffer()-->Line_36 $$ intBuffer.clear()[ FD ]
Line_13 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])-->Line_34 $$ for (int i = 0; i < floatArray.length; i++) intArray[i] = Float.floatToIntBits(floatArray[i])[ FD ]
Line_12 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_19 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_13 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])-->Line_20 $$ floatBuffer.put(i, floatArray[i])[ FD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_21 $$ floatBuffer.clear()[ FD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_43 $$ floatBuffer.clear()[ FD ]
Line_4 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8)-->Line_5 $$ buffer.order(ByteOrder.nativeOrder())[ FD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_27 $$ floatBuffer.put(floatArray)[ FD ]
Line_41 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_43 $$ floatBuffer.clear()[ CD ]
Line_9 $$ int[] intArray = new int[1024 * 1024]-->Line_35 $$ intBuffer.put(intArray)[ FD ]
Line_20 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(i, floatArray[i])-->Line_34 $$ for (int i = 0; i < floatArray.length; i++) intArray[i] = Float.floatToIntBits(floatArray[i])[ FD ]
Line_26 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_33 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_26 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_41 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_13 $$ floatBuffer.put(floatArray[i])[ FD ]
Line_4 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8)-->Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()[ FD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_14 $$ floatBuffer.clear()[ FD ]
Line_8 $$ float[] floatArray = new float[1024 * 1024]-->Line_42 $$ BufferUtils.copy(floatArray, floatBuffer, floatArray.length, 0)[ FD ]
Line_12 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_41 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_12 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_13 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])[ CD ]
Line_6 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_42 $$ BufferUtils.copy(floatArray, floatBuffer, floatArray.length, 0)[ FD ]
Line_33 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_34 $$ for (int i = 0; i < floatArray.length; i++) intArray[i] = Float.floatToIntBits(floatArray[i])[ CD ]
Line_4 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8)-->Line_7 $$ IntBuffer intBuffer = buffer.asIntBuffer()[ FD ]
Line_33 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_35 $$ intBuffer.put(intArray)[ CD ]
Line_19 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_33 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_26 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_27 $$ floatBuffer.put(floatArray)[ CD ]
Line_12 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_26 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_26 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_28 $$ floatBuffer.clear()[ CD ]
Line_12 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_14 $$ floatBuffer.clear()[ CD ]
Line_33 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_36 $$ intBuffer.clear()[ CD ]
Line_33 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_41 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_12 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_33 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_19 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_20 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(i, floatArray[i])[ CD ]
Line_8 $$ float[] floatArray = new float[1024 * 1024]-->Line_27 $$ floatBuffer.put(floatArray)[ FD ]
