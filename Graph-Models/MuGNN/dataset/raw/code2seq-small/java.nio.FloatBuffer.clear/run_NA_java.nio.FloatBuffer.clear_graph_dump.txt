Line_22 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_24 $$ floatBuffer.clear()[ CD ]
Line_7 $$ float[] floatArray = new float[1024 * 1024]-->Line_23 $$ floatBuffer.put(floatArray)[ FD ]
Line_11 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])-->Line_17 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(i, floatArray[i])[ FD ]
Line_16 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_22 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_18 $$ floatBuffer.clear()[ FD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_36 $$ BufferUtils.copy(floatArray, floatBuffer, floatArray.length, 0)[ FD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_12 $$ floatBuffer.clear()[ FD ]
Line_2 $$ public void run() -->Line_9 $$ tic()[ CD ]
Line_2 $$ public void run() -->Line_7 $$ float[] floatArray = new float[1024 * 1024][ CD ]
Line_2 $$ public void run() -->Line_22 $$ for (int tries = 0; tries < TRIES; tries++) [ CD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_24 $$ floatBuffer.clear()[ FD ]
Line_6 $$ IntBuffer intBuffer = buffer.asIntBuffer()-->Line_30 $$ intBuffer.put(intArray)[ FD ]
Line_2 $$ public void run() -->Line_16 $$ for (int tries = 0; tries < TRIES; tries++) [ CD ]
Line_35 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_37 $$ floatBuffer.clear()[ CD ]
Line_2 $$ public void run() -->Line_8 $$ int[] intArray = new int[1024 * 1024][ CD ]
Line_2 $$ public void run() -->Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8)[ CD ]
Line_16 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_35 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_10 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_12 $$ floatBuffer.clear()[ CD ]
Line_2 $$ public void run() -->Line_35 $$ for (int tries = 0; tries < TRIES; tries++) [ CD ]
Line_2 $$ public void run() -->Line_34 $$ tic()[ CD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_37 $$ floatBuffer.clear()[ FD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8)-->Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()[ FD ]
Line_2 $$ public void run() -->Line_39 $$ toc("jni bulk put")[ CD ]
Line_28 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_29 $$ for (int i = 0; i < floatArray.length; i++) intArray[i] = Float.floatToIntBits(floatArray[i])[ CD ]
Line_11 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])-->Line_17 $$ floatBuffer.put(i, floatArray[i])[ FD ]
Line_2 $$ public void run() -->Line_15 $$ tic()[ CD ]
Line_2 $$ public void run() -->Line_21 $$ tic()[ CD ]
Line_22 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_23 $$ floatBuffer.put(floatArray)[ CD ]
Line_2 $$ public void run() -->Line_26 $$ toc("vector put")[ CD ]
Line_10 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_28 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8)-->Line_4 $$ buffer.order(ByteOrder.nativeOrder())[ FD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_23 $$ floatBuffer.put(floatArray)[ FD ]
Line_16 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_18 $$ floatBuffer.clear()[ CD ]
Line_2 $$ public void run() -->Line_14 $$ toc("single put")[ CD ]
Line_16 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_28 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_22 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_28 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_28 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_30 $$ intBuffer.put(intArray)[ CD ]
Line_2 $$ public void run() -->Line_28 $$ for (int tries = 0; tries < TRIES; tries++) [ CD ]
Line_28 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_31 $$ intBuffer.clear()[ CD ]
Line_10 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_22 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_6 $$ IntBuffer intBuffer = buffer.asIntBuffer()-->Line_31 $$ intBuffer.clear()[ FD ]
Line_28 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_35 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_2 $$ public void run() -->Line_4 $$ buffer.order(ByteOrder.nativeOrder())[ CD ]
Line_10 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_11 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])[ CD ]
Line_16 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_17 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(i, floatArray[i])[ CD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_17 $$ floatBuffer.put(i, floatArray[i])[ FD ]
Line_10 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_35 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_7 $$ float[] floatArray = new float[1024 * 1024]-->Line_36 $$ BufferUtils.copy(floatArray, floatBuffer, floatArray.length, 0)[ FD ]
Line_10 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_16 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(1024 * 1024 * Float.SIZE / 8)-->Line_6 $$ IntBuffer intBuffer = buffer.asIntBuffer()[ FD ]
Line_17 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(i, floatArray[i])-->Line_29 $$ for (int i = 0; i < floatArray.length; i++) intArray[i] = Float.floatToIntBits(floatArray[i])[ FD ]
Line_2 $$ public void run() -->Line_27 $$ tic()[ CD ]
Line_2 $$ public void run() -->Line_10 $$ for (int tries = 0; tries < TRIES; tries++) [ CD ]
Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()-->Line_11 $$ floatBuffer.put(floatArray[i])[ FD ]
Line_22 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_35 $$ for (int tries = 0; tries < TRIES; tries++) [ FD ]
Line_35 $$ for (int tries = 0; tries < TRIES; tries++) -->Line_36 $$ BufferUtils.copy(floatArray, floatBuffer, floatArray.length, 0)[ CD ]
Line_2 $$ public void run() -->Line_6 $$ IntBuffer intBuffer = buffer.asIntBuffer()[ CD ]
Line_2 $$ public void run() -->Line_20 $$ toc("single indexed put")[ CD ]
Line_8 $$ int[] intArray = new int[1024 * 1024]-->Line_30 $$ intBuffer.put(intArray)[ FD ]
Line_2 $$ public void run() -->Line_5 $$ FloatBuffer floatBuffer = buffer.asFloatBuffer()[ CD ]
Line_11 $$ for (int i = 0; i < floatArray.length; i++) floatBuffer.put(floatArray[i])-->Line_29 $$ for (int i = 0; i < floatArray.length; i++) intArray[i] = Float.floatToIntBits(floatArray[i])[ FD ]
Line_2 $$ public void run() -->Line_33 $$ toc("convert bulk put")[ CD ]
