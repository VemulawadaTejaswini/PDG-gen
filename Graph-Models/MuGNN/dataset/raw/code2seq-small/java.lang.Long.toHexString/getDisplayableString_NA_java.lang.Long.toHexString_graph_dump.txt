Line_15 $$ if (value instanceof ShortValue) -->Line_16 $$ short val = value.shortValue()[ CD ]
Line_8 $$ byte val = value.byteValue()-->Line_25 $$ return showAsHex ? "0x" + Integer.toHexString(val).toUpperCase() : value.toString()[ FD ]
Line_9 $$ String strValue = Integer.toHexString(val).toUpperCase()-->Line_19 $$ strValue = strValue.substring(strValue.length() - 4)[ FD ]
Line_9 $$ String strValue = Integer.toHexString(val).toUpperCase()-->Line_10 $$ if (strValue.length() > 2) [ FD ]
Line_15 $$ if (value instanceof ShortValue) -->Line_17 $$ String strValue = Integer.toHexString(val).toUpperCase()[ CD ]
Line_11 $$ strValue = strValue.substring(strValue.length() - 2)-->Line_19 $$ strValue = strValue.substring(strValue.length() - 4)[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_28 $$ long val = value.longValue()[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_3 $$ if (value instanceof CharValue) [ FD ]
Line_3 $$ if (value instanceof CharValue) -->Line_4 $$ long longValue = value.longValue()[ CD ]
Line_3 $$ if (value instanceof CharValue) -->Line_5 $$ return showAsHex ? "0x" + Long.toHexString(longValue).toUpperCase() : Long.toString(longValue)[ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_15 $$ if (value instanceof ShortValue) [ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_31 $$ return DebuggerUtils.translateStringValue(value.toString())[ FD ]
Line_9 $$ String strValue = Integer.toHexString(val).toUpperCase()-->Line_18 $$ if (strValue.length() > 4) [ FD ]
Line_10 $$ if (strValue.length() > 2) -->Line_11 $$ strValue = strValue.substring(strValue.length() - 2)[ CD ]
Line_27 $$ if (value instanceof LongValue) -->Line_28 $$ long val = value.longValue()[ CD ]
Line_8 $$ byte val = value.byteValue()-->Line_17 $$ String strValue = Integer.toHexString(val).toUpperCase()[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_24 $$ int val = value.intValue()[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_4 $$ long longValue = value.longValue()[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_7 $$ if (value instanceof ByteValue) [ CD ]
Line_7 $$ if (value instanceof ByteValue) -->Line_13 $$ return showAsHex ? "0x" + strValue : value.toString()[ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_21 $$ return showAsHex ? "0x" + strValue : value.toString()[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_25 $$ return showAsHex ? "0x" + Integer.toHexString(val).toUpperCase() : value.toString()[ FD ]
Line_15 $$ if (value instanceof ShortValue) -->Line_21 $$ return showAsHex ? "0x" + strValue : value.toString()[ CD ]
Line_7 $$ if (value instanceof ByteValue) -->Line_10 $$ if (strValue.length() > 2) [ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_3 $$ if (value instanceof CharValue) [ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_27 $$ if (value instanceof LongValue) [ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_27 $$ if (value instanceof LongValue) [ FD ]
Line_7 $$ if (value instanceof ByteValue) -->Line_8 $$ byte val = value.byteValue()[ CD ]
Line_23 $$ if (value instanceof IntegerValue) -->Line_25 $$ return showAsHex ? "0x" + Integer.toHexString(val).toUpperCase() : value.toString()[ CD ]
Line_8 $$ byte val = value.byteValue()-->Line_29 $$ return showAsHex ? "0x" + Long.toHexString(val).toUpperCase() + "L" : value.toString() + "L"[ FD ]
Line_11 $$ strValue = strValue.substring(strValue.length() - 2)-->Line_18 $$ if (strValue.length() > 4) [ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_7 $$ if (value instanceof ByteValue) [ FD ]
Line_8 $$ byte val = value.byteValue()-->Line_9 $$ String strValue = Integer.toHexString(val).toUpperCase()[ FD ]
Line_7 $$ if (value instanceof ByteValue) -->Line_9 $$ String strValue = Integer.toHexString(val).toUpperCase()[ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_8 $$ byte val = value.byteValue()[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_23 $$ if (value instanceof IntegerValue) [ FD ]
Line_4 $$ long longValue = value.longValue()-->Line_5 $$ return showAsHex ? "0x" + Long.toHexString(longValue).toUpperCase() : Long.toString(longValue)[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_16 $$ short val = value.shortValue()[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_31 $$ return DebuggerUtils.translateStringValue(value.toString())[ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_23 $$ if (value instanceof IntegerValue) [ CD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_13 $$ return showAsHex ? "0x" + strValue : value.toString()[ FD ]
Line_27 $$ if (value instanceof LongValue) -->Line_29 $$ return showAsHex ? "0x" + Long.toHexString(val).toUpperCase() + "L" : value.toString() + "L"[ CD ]
Line_15 $$ if (value instanceof ShortValue) -->Line_18 $$ if (strValue.length() > 4) [ CD ]
Line_9 $$ String strValue = Integer.toHexString(val).toUpperCase()-->Line_11 $$ strValue = strValue.substring(strValue.length() - 2)[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_29 $$ return showAsHex ? "0x" + Long.toHexString(val).toUpperCase() + "L" : value.toString() + "L"[ FD ]
Line_2 $$ private static String getDisplayableString(PrimitiveValue value, boolean showAsHex) -->Line_15 $$ if (value instanceof ShortValue) [ CD ]
Line_23 $$ if (value instanceof IntegerValue) -->Line_24 $$ int val = value.intValue()[ CD ]
Line_18 $$ if (strValue.length() > 4) -->Line_19 $$ strValue = strValue.substring(strValue.length() - 4)[ CD ]
