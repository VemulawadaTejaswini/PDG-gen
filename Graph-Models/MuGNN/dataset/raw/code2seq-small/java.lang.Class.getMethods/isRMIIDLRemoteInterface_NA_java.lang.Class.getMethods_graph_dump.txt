Line_7 $$ Method m = (Method) methodIterator.next()-->Line_11 $$ Iterator it = Arrays.asList(m.getExceptionTypes()).iterator()[ FD ]
Line_5 $$ Iterator methodIterator = Arrays.asList(type.getMethods()).iterator()-->Line_6 $$ while (methodIterator.hasNext()) [ FD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_5 $$ Iterator methodIterator = Arrays.asList(type.getMethods()).iterator()[ FD ]
Line_19 $$ while (fieldIterator.hasNext()) -->Line_20 $$ Field f = (Field) fieldIterator.next()[ CD ]
Line_11 $$ Iterator it = Arrays.asList(m.getExceptionTypes()).iterator()-->Line_12 $$ while (it.hasNext()) [ FD ]
Line_6 $$ while (methodIterator.hasNext()) -->Line_12 $$ while (it.hasNext()) [ CD ]
Line_12 $$ while (it.hasNext()) -->Line_13 $$ Class exception = (Class) it.next()[ CD ]
Line_19 $$ while (fieldIterator.hasNext()) -->Line_25 $$ return false[ CD ]
Line_5 $$ Iterator methodIterator = Arrays.asList(type.getMethods()).iterator()-->Line_7 $$ Method m = (Method) methodIterator.next()[ FD ]
Line_14 $$ if (!isRMIIDLExceptionType(exception))-->Line_15 $$ return false[ CD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_19 $$ while (fieldIterator.hasNext()) [ CD ]
Line_13 $$ Class exception = (Class) it.next()-->Line_14 $$ if (!isRMIIDLExceptionType(exception))[ FD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_3 $$ if (!java.rmi.Remote.class.isAssignableFrom(type))[ CD ]
Line_12 $$ while (it.hasNext()) -->Line_14 $$ if (!isRMIIDLExceptionType(exception))[ CD ]
Line_11 $$ Iterator it = Arrays.asList(m.getExceptionTypes()).iterator()-->Line_13 $$ Class exception = (Class) it.next()[ FD ]
Line_6 $$ while (methodIterator.hasNext()) -->Line_7 $$ Method m = (Method) methodIterator.next()[ CD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_5 $$ Iterator methodIterator = Arrays.asList(type.getMethods()).iterator()[ CD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_18 $$ Iterator fieldIterator = Arrays.asList(type.getFields()).iterator()[ CD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_18 $$ Iterator fieldIterator = Arrays.asList(type.getFields()).iterator()[ FD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_6 $$ while (methodIterator.hasNext()) [ CD ]
Line_19 $$ while (fieldIterator.hasNext()) -->Line_23 $$ if (f.getType().equals(java.lang.String.class))[ CD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_3 $$ if (!java.rmi.Remote.class.isAssignableFrom(type))[ FD ]
Line_19 $$ while (fieldIterator.hasNext()) -->Line_21 $$ if (f.getType().isPrimitive())[ CD ]
Line_18 $$ Iterator fieldIterator = Arrays.asList(type.getFields()).iterator()-->Line_20 $$ Field f = (Field) fieldIterator.next()[ FD ]
Line_6 $$ while (methodIterator.hasNext()) -->Line_11 $$ Iterator it = Arrays.asList(m.getExceptionTypes()).iterator()[ CD ]
Line_6 $$ while (methodIterator.hasNext()) -->Line_8 $$ if (!throwsRemoteException(m)) [ CD ]
Line_20 $$ Field f = (Field) fieldIterator.next()-->Line_21 $$ if (f.getType().isPrimitive())[ FD ]
Line_18 $$ Iterator fieldIterator = Arrays.asList(type.getFields()).iterator()-->Line_19 $$ while (fieldIterator.hasNext()) [ FD ]
Line_3 $$ if (!java.rmi.Remote.class.isAssignableFrom(type))-->Line_4 $$ return false[ CD ]
Line_7 $$ Method m = (Method) methodIterator.next()-->Line_8 $$ if (!throwsRemoteException(m)) [ FD ]
Line_20 $$ Field f = (Field) fieldIterator.next()-->Line_23 $$ if (f.getType().equals(java.lang.String.class))[ FD ]
Line_2 $$ public static boolean isRMIIDLRemoteInterface(Class type) -->Line_27 $$ return true[ CD ]
Line_8 $$ if (!throwsRemoteException(m)) -->Line_9 $$ return false[ CD ]
