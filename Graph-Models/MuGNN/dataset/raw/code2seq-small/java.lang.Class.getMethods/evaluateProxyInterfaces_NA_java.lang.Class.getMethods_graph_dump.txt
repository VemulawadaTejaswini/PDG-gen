Line_2 $$ protected void evaluateProxyInterfaces(Class<?> beanClass, ProxyFactory proxyFactory) -->Line_16 $$ proxyFactory.setProxyTargetClass(true)[ FD ]
Line_2 $$ protected void evaluateProxyInterfaces(Class<?> beanClass, ProxyFactory proxyFactory) -->Line_3 $$ Class<?>[] targetInterfaces = ClassUtils.getAllInterfacesForClass(beanClass, getProxyClassLoader())[ CD ]
Line_11 $$ if (hasReasonableProxyInterface) -->Line_16 $$ proxyFactory.setProxyTargetClass(true)[ CD ]
Line_2 $$ protected void evaluateProxyInterfaces(Class<?> beanClass, ProxyFactory proxyFactory) -->Line_3 $$ Class<?>[] targetInterfaces = ClassUtils.getAllInterfacesForClass(beanClass, getProxyClassLoader())[ FD ]
Line_5 $$ for (Class<?> ifc : targetInterfaces) -->Line_6 $$ if (!isConfigurationCallbackInterface(ifc) && !isInternalLanguageInterface(ifc) && ifc.getMethods().length > 0) [ FD ]
Line_2 $$ protected void evaluateProxyInterfaces(Class<?> beanClass, ProxyFactory proxyFactory) -->Line_13 $$ proxyFactory.addInterface(ifc)[ FD ]
Line_2 $$ protected void evaluateProxyInterfaces(Class<?> beanClass, ProxyFactory proxyFactory) -->Line_4 $$ boolean hasReasonableProxyInterface = false[ CD ]
Line_5 $$ for (Class<?> ifc : targetInterfaces) -->Line_13 $$ proxyFactory.addInterface(ifc)[ FD ]
Line_2 $$ protected void evaluateProxyInterfaces(Class<?> beanClass, ProxyFactory proxyFactory) -->Line_11 $$ if (hasReasonableProxyInterface) [ CD ]
Line_4 $$ boolean hasReasonableProxyInterface = false-->Line_7 $$ hasReasonableProxyInterface = true[ FD ]
Line_6 $$ if (!isConfigurationCallbackInterface(ifc) && !isInternalLanguageInterface(ifc) && ifc.getMethods().length > 0) -->Line_7 $$ hasReasonableProxyInterface = true[ CD ]
