Line_11 $$ if (action != null) -->Line_14 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, actionClass, actionMethod, path, method)[ CD ]
Line_9 $$ String path = jsonWebServiceMappingResolver.resolvePath(actionClass, actionMethod)-->Line_14 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, actionClass, actionMethod, path, method)[ FD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_4 $$ Method[] methods = actionClass.getMethods()[ FD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_4 $$ Method[] methods = actionClass.getMethods()[ CD ]
Line_5 $$ for (Method actionMethod : methods) -->Line_9 $$ String path = jsonWebServiceMappingResolver.resolvePath(actionClass, actionMethod)[ FD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_9 $$ String path = jsonWebServiceMappingResolver.resolvePath(actionClass, actionMethod)[ FD ]
Line_11 $$ if (action != null) -->Line_12 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, action, actionClass, actionMethod, path, method)[ CD ]
Line_9 $$ String path = jsonWebServiceMappingResolver.resolvePath(actionClass, actionMethod)-->Line_12 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, action, actionClass, actionMethod, path, method)[ FD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_3 $$ JSONWebServiceMappingResolver jsonWebServiceMappingResolver = new JSONWebServiceMappingResolver(new JSONWebServiceNaming())[ CD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_12 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, action, actionClass, actionMethod, path, method)[ FD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_14 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, actionClass, actionMethod, path, method)[ FD ]
Line_5 $$ for (Method actionMethod : methods) -->Line_12 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, action, actionClass, actionMethod, path, method)[ FD ]
Line_10 $$ String method = jsonWebServiceMappingResolver.resolveHttpMethod(actionMethod)-->Line_14 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, actionClass, actionMethod, path, method)[ FD ]
Line_5 $$ for (Method actionMethod : methods) -->Line_14 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, actionClass, actionMethod, path, method)[ FD ]
Line_10 $$ String method = jsonWebServiceMappingResolver.resolveHttpMethod(actionMethod)-->Line_12 $$ JSONWebServiceActionsManagerUtil.registerJSONWebServiceAction(servletContextName, StringPool.BLANK, action, actionClass, actionMethod, path, method)[ FD ]
Line_5 $$ for (Method actionMethod : methods) -->Line_10 $$ String method = jsonWebServiceMappingResolver.resolveHttpMethod(actionMethod)[ FD ]
Line_3 $$ JSONWebServiceMappingResolver jsonWebServiceMappingResolver = new JSONWebServiceMappingResolver(new JSONWebServiceNaming())-->Line_9 $$ String path = jsonWebServiceMappingResolver.resolvePath(actionClass, actionMethod)[ FD ]
Line_5 $$ for (Method actionMethod : methods) -->Line_6 $$ if (actionMethod.getDeclaringClass() != actionClass) [ FD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_6 $$ if (actionMethod.getDeclaringClass() != actionClass) [ FD ]
Line_2 $$ protected static void registerActionClass(Object action, Class<?> actionClass, String servletContextName) -->Line_11 $$ if (action != null) [ FD ]
Line_3 $$ JSONWebServiceMappingResolver jsonWebServiceMappingResolver = new JSONWebServiceMappingResolver(new JSONWebServiceNaming())-->Line_10 $$ String method = jsonWebServiceMappingResolver.resolveHttpMethod(actionMethod)[ FD ]
