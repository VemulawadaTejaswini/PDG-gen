Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_4 $$ Assert.notNull(methodName, "Method name must not be null")[ CD ]
Line_5 $$ if (paramTypes != null) -->Line_22 $$ return null[ CD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_13 $$ Method[] methods = clazz.getMethods()[ FD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_3 $$ Assert.notNull(clazz, "Class must not be null")[ CD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_7 $$ return clazz.getMethod(methodName, paramTypes)[ FD ]
Line_5 $$ if (paramTypes != null) -->Line_13 $$ Method[] methods = clazz.getMethods()[ CD ]
Line_12 $$ Set<Method> candidates = new HashSet<Method>(1)-->Line_20 $$ return candidates.iterator().next()[ FD ]
Line_14 $$ for (Method method : methods) -->Line_15 $$ if (methodName.equals(method.getName())) [ FD ]
Line_12 $$ Set<Method> candidates = new HashSet<Method>(1)-->Line_16 $$ candidates.add(method)[ FD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_15 $$ if (methodName.equals(method.getName())) [ FD ]
Line_12 $$ Set<Method> candidates = new HashSet<Method>(1)-->Line_19 $$ if (candidates.size() == 1) [ FD ]
Line_5 $$ if (paramTypes != null) -->Line_19 $$ if (candidates.size() == 1) [ CD ]
Line_15 $$ if (methodName.equals(method.getName())) -->Line_16 $$ candidates.add(method)[ CD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_5 $$ if (paramTypes != null) [ FD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_3 $$ Assert.notNull(clazz, "Class must not be null")[ FD ]
Line_19 $$ if (candidates.size() == 1) -->Line_20 $$ return candidates.iterator().next()[ CD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_4 $$ Assert.notNull(methodName, "Method name must not be null")[ FD ]
Line_2 $$ public static Method getMethodIfAvailable(Class<?> clazz, String methodName, Class<?>... paramTypes) -->Line_5 $$ if (paramTypes != null) [ CD ]
Line_5 $$ if (paramTypes != null) -->Line_12 $$ Set<Method> candidates = new HashSet<Method>(1)[ CD ]
Line_14 $$ for (Method method : methods) -->Line_16 $$ candidates.add(method)[ FD ]
