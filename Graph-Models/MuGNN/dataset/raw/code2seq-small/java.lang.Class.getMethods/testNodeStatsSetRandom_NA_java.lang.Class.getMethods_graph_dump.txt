Line_8 $$ NodesStatsRequestBuilder nsBuilder = tc.admin().cluster().prepareNodesStats()-->Line_9 $$ Class c = nsBuilder.getClass()[ FD ]
Line_10 $$ for (Method method : c.getMethods()) -->Line_13 $$ method.invoke(nsBuilder, randomBoolean())[ FD ]
Line_8 $$ NodesStatsRequestBuilder nsBuilder = tc.admin().cluster().prepareNodesStats()-->Line_19 $$ NodesStatsResponse ns = nsBuilder.execute().actionGet()[ FD ]
Line_10 $$ for (Method method : c.getMethods()) -->Line_16 $$ method.invoke(nsBuilder)[ FD ]
Line_10 $$ for (Method method : c.getMethods()) -->Line_12 $$ if (method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == boolean.class) [ FD ]
Line_7 $$ TransportClient tc = TransportClient.builder().settings(settings).build().addTransportAddress(n.getNode().address())-->Line_8 $$ NodesStatsRequestBuilder nsBuilder = tc.admin().cluster().prepareNodesStats()[ FD ]
Line_9 $$ Class c = nsBuilder.getClass()-->Line_10 $$ for (Method method : c.getMethods()) [ FD ]
Line_8 $$ NodesStatsRequestBuilder nsBuilder = tc.admin().cluster().prepareNodesStats()-->Line_16 $$ method.invoke(nsBuilder)[ FD ]
Line_11 $$ if (method.getName().startsWith("set")) -->Line_15 $$ if ((method.getName().equals("all") || method.getName().equals("clear")) && randomBoolean()) [ CD ]
Line_2 $$ public void testNodeStatsSetRandom() throws Exception -->Line_3 $$ createIndex("test")[ CD ]
Line_11 $$ if (method.getName().startsWith("set")) -->Line_12 $$ if (method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == boolean.class) [ CD ]
Line_7 $$ TransportClient tc = TransportClient.builder().settings(settings).build().addTransportAddress(n.getNode().address())-->Line_20 $$ tc.close()[ FD ]
Line_10 $$ for (Method method : c.getMethods()) -->Line_11 $$ if (method.getName().startsWith("set")) [ FD ]
Line_8 $$ NodesStatsRequestBuilder nsBuilder = tc.admin().cluster().prepareNodesStats()-->Line_13 $$ method.invoke(nsBuilder, randomBoolean())[ FD ]
Line_5 $$ Settings settings = Settings.settingsBuilder().put("node.name", "transport_client_" + getTestName()).put("client.transport.ignore_cluster_name", true).build()-->Line_7 $$ TransportClient tc = TransportClient.builder().settings(settings).build().addTransportAddress(n.getNode().address())[ FD ]
Line_12 $$ if (method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == boolean.class) -->Line_13 $$ method.invoke(nsBuilder, randomBoolean())[ CD ]
Line_15 $$ if ((method.getName().equals("all") || method.getName().equals("clear")) && randomBoolean()) -->Line_16 $$ method.invoke(nsBuilder)[ CD ]
Line_2 $$ public void testNodeStatsSetRandom() throws Exception -->Line_5 $$ Settings settings = Settings.settingsBuilder().put("node.name", "transport_client_" + getTestName()).put("client.transport.ignore_cluster_name", true).build()[ CD ]
Line_6 $$ for (NodeInfo n : nodesInfo.getNodes()) -->Line_7 $$ TransportClient tc = TransportClient.builder().settings(settings).build().addTransportAddress(n.getNode().address())[ FD ]
Line_2 $$ public void testNodeStatsSetRandom() throws Exception -->Line_4 $$ NodesInfoResponse nodesInfo = client().admin().cluster().prepareNodesInfo().execute().actionGet()[ CD ]
Line_10 $$ for (Method method : c.getMethods()) -->Line_15 $$ if ((method.getName().equals("all") || method.getName().equals("clear")) && randomBoolean()) [ FD ]
Line_4 $$ NodesInfoResponse nodesInfo = client().admin().cluster().prepareNodesInfo().execute().actionGet()-->Line_6 $$ for (NodeInfo n : nodesInfo.getNodes()) [ FD ]
