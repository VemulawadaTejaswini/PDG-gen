Line_11 $$ hasSyncedMethod = true-->Line_15 $$ if (!hasSyncedMethod) [ FD ]
Line_10 $$ if ((method.getAnnotation(Sync.class) != null) && (method.getAnnotation(Test.class) != null)) -->Line_11 $$ hasSyncedMethod = true[ CD ]
Line_2 $$ public SyncHandler beforeClass(Description description) throws Throwable -->Line_3 $$ Class<?> testClass = description.getTestClass()[ FD ]
Line_2 $$ public SyncHandler beforeClass(Description description) throws Throwable -->Line_4 $$ Sync sync = testClass.getAnnotation(Sync.class)[ CD ]
Line_2 $$ public SyncHandler beforeClass(Description description) throws Throwable -->Line_3 $$ Class<?> testClass = description.getTestClass()[ CD ]
Line_3 $$ Class<?> testClass = description.getTestClass()-->Line_9 $$ for (Method method : testClass.getMethods()) [ FD ]
Line_4 $$ Sync sync = testClass.getAnnotation(Sync.class)-->Line_6 $$ return _createSyncHandler(sync)[ FD ]
Line_2 $$ public SyncHandler beforeClass(Description description) throws Throwable -->Line_15 $$ if (!hasSyncedMethod) [ CD ]
Line_3 $$ Class<?> testClass = description.getTestClass()-->Line_16 $$ throw new AssertionError(testClass.getName() + " uses " + SynchronousDestinationTestRule.class.getName() + " without any usage of " + Sync.class.getName())[ FD ]
Line_2 $$ public SyncHandler beforeClass(Description description) throws Throwable -->Line_18 $$ return null[ CD ]
Line_5 $$ if (sync != null) -->Line_6 $$ return _createSyncHandler(sync)[ CD ]
Line_9 $$ for (Method method : testClass.getMethods()) -->Line_10 $$ if ((method.getAnnotation(Sync.class) != null) && (method.getAnnotation(Test.class) != null)) [ FD ]
Line_8 $$ boolean hasSyncedMethod = false-->Line_15 $$ if (!hasSyncedMethod) [ FD ]
Line_2 $$ public SyncHandler beforeClass(Description description) throws Throwable -->Line_5 $$ if (sync != null) [ CD ]
Line_4 $$ Sync sync = testClass.getAnnotation(Sync.class)-->Line_5 $$ if (sync != null) [ FD ]
Line_8 $$ boolean hasSyncedMethod = false-->Line_11 $$ hasSyncedMethod = true[ FD ]
Line_2 $$ public SyncHandler beforeClass(Description description) throws Throwable -->Line_8 $$ boolean hasSyncedMethod = false[ CD ]
Line_3 $$ Class<?> testClass = description.getTestClass()-->Line_4 $$ Sync sync = testClass.getAnnotation(Sync.class)[ FD ]
