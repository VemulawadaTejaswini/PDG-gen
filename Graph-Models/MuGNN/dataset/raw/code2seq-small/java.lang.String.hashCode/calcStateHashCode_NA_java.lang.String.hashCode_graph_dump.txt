Line_6 $$ hash = 31 * hash + root.getDirectory().hashCode()-->Line_12 $$ hash = 31 * hash + file.hashCode()[ FD ]
Line_5 $$ for (DetectedProjectRoot root : myBuilder.getProjectRoots(myDetector)) -->Line_6 $$ hash = 31 * hash + root.getDirectory().hashCode()[ FD ]
Line_9 $$ for (LibraryDescriptor lib : libs) -->Line_10 $$ final Collection<File> files = lib.getJars()[ FD ]
Line_11 $$ for (File file : files) -->Line_12 $$ hash = 31 * hash + file.hashCode()[ FD ]
Line_4 $$ int hash = contentEntryPath != null ? contentEntryPath.hashCode() : 1-->Line_12 $$ hash = 31 * hash + file.hashCode()[ FD ]
Line_2 $$ private int calcStateHashCode() -->Line_15 $$ return hash[ CD ]
Line_4 $$ int hash = contentEntryPath != null ? contentEntryPath.hashCode() : 1-->Line_6 $$ hash = 31 * hash + root.getDirectory().hashCode()[ FD ]
Line_2 $$ private int calcStateHashCode() -->Line_3 $$ final String contentEntryPath = myBuilder.getBaseProjectPath()[ CD ]
Line_2 $$ private int calcStateHashCode() -->Line_8 $$ final List<LibraryDescriptor> libs = myProjectDescriptor.getLibraries()[ CD ]
Line_3 $$ final String contentEntryPath = myBuilder.getBaseProjectPath()-->Line_4 $$ int hash = contentEntryPath != null ? contentEntryPath.hashCode() : 1[ FD ]
Line_2 $$ private int calcStateHashCode() -->Line_4 $$ int hash = contentEntryPath != null ? contentEntryPath.hashCode() : 1[ CD ]
