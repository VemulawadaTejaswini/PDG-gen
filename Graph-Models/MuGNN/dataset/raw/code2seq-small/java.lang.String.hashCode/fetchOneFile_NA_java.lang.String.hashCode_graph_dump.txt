Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_5 $$ indicator.setText(XmlBundle.message("fetching.progress.indicator", resourceUrl))[ FD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_11 $$ if (!resultIsValid(project, indicator, resourceUrl, result)) [ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_8 $$ FetchResult result = fetchData(project, resourceUrl, indicator)[ FD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_29 $$ if (lastDoPosInResourceUrl == -1 || FileTypeManager.getInstance().getFileTypeByExtension(resourceUrl.substring(lastDoPosInResourceUrl + 1)) == FileTypes.UNKNOWN) [ FD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_34 $$ FileUtil.writeToFile(res, result.bytes)[ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_11 $$ if (!resultIsValid(project, indicator, resourceUrl, result)) [ FD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_29 $$ if (lastDoPosInResourceUrl == -1 || FileTypeManager.getInstance().getFileTypeByExtension(resourceUrl.substring(lastDoPosInResourceUrl + 1)) == FileTypes.UNKNOWN) [ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_16 $$ if (refname != null) [ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_16 $$ if (refname != null) [ FD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_35 $$ return resPath[ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_8 $$ FetchResult result = fetchData(project, resourceUrl, indicator)[ CD ]
Line_21 $$ if (!parent.mkdirs() || !parent.exists()) -->Line_22 $$ LOG.warn("Unable to create: " + parent)[ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_9 $$ if (result == null)[ CD ]
Line_16 $$ if (refname != null) -->Line_19 $$ if (refNameSlashIndex != -1) [ CD ]
Line_9 $$ if (result == null)-->Line_10 $$ return null[ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_26 $$ resPath += Integer.toHexString(resourceUrl.hashCode()) + "_" + resourceUrl.substring(slashIndex + 1)[ FD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_3 $$ SwingUtilities.invokeLater(new Runnable() [ CD ]
Line_3 $$ SwingUtilities.invokeLater(new Runnable() -->Line_5 $$ indicator.setText(XmlBundle.message("fetching.progress.indicator", resourceUrl))[ CD ]
Line_16 $$ if (refname != null) -->Line_18 $$ int refNameSlashIndex = resPath.lastIndexOf('/')[ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_28 $$ final int lastDoPosInResourceUrl = resourceUrl.lastIndexOf('.', slashIndex)[ CD ]
Line_11 $$ if (!resultIsValid(project, indicator, resourceUrl, result)) -->Line_12 $$ return null[ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_14 $$ int slashIndex = resourceUrl.lastIndexOf('/')[ CD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_14 $$ int slashIndex = resourceUrl.lastIndexOf('/')[ FD ]
Line_2 $$ private String fetchOneFile(final ProgressIndicator indicator, final String resourceUrl, final Project project, String extResourcesPath, @Nullable String refname) throws IOException -->Line_28 $$ final int lastDoPosInResourceUrl = resourceUrl.lastIndexOf('.', slashIndex)[ FD ]
Line_19 $$ if (refNameSlashIndex != -1) -->Line_21 $$ if (!parent.mkdirs() || !parent.exists()) [ CD ]
