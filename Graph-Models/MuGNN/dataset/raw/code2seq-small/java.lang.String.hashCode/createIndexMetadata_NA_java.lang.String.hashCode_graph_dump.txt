Line_19 $$ specificationHash = StringUtil.toUpperCase(specificationHash)-->Line_20 $$ return new IndexMetadata(_INDEX_NAME_PREFIX.concat(specificationHash), tableName, unique, columnNames)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_12 $$ sb.append(StringPool.COMMA_AND_SPACE)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_3 $$ if (columnNames == null) [ CD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_19 $$ specificationHash = StringUtil.toUpperCase(specificationHash)[ CD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_14 $$ sb.setIndex(sb.index() - 1)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_8 $$ sb.append(StringPool.SPACE)[ FD ]
Line_17 $$ String specification = sb.toString()-->Line_18 $$ String specificationHash = StringUtil.toHexString(specification.hashCode())[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_9 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ CD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_15 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_9 $$ sb.append(StringPool.OPEN_PARENTHESIS)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_20 $$ return new IndexMetadata(_INDEX_NAME_PREFIX.concat(specificationHash), tableName, unique, columnNames)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_14 $$ sb.setIndex(sb.index() - 1)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_17 $$ String specification = sb.toString()[ FD ]
Line_18 $$ String specificationHash = StringUtil.toHexString(specification.hashCode())-->Line_19 $$ specificationHash = StringUtil.toUpperCase(specificationHash)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_16 $$ sb.append(StringPool.SEMICOLON)[ CD ]
Line_18 $$ String specificationHash = StringUtil.toHexString(specification.hashCode())-->Line_20 $$ return new IndexMetadata(_INDEX_NAME_PREFIX.concat(specificationHash), tableName, unique, columnNames)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_16 $$ sb.append(StringPool.SEMICOLON)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_7 $$ sb.append(tableName)[ CD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_7 $$ sb.append(tableName)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_18 $$ String specificationHash = StringUtil.toHexString(specification.hashCode())[ CD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_3 $$ if (columnNames == null) [ FD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_7 $$ sb.append(tableName)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_8 $$ sb.append(StringPool.SPACE)[ CD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_11 $$ sb.append(columnName)[ FD ]
Line_6 $$ StringBundler sb = new StringBundler(4 + columnNames.length * 2)-->Line_15 $$ sb.append(StringPool.CLOSE_PARENTHESIS)[ FD ]
Line_10 $$ for (String columnName : columnNames) -->Line_11 $$ sb.append(columnName)[ FD ]
Line_2 $$ public static IndexMetadata createIndexMetadata(boolean unique, String tableName, String... columnNames) -->Line_17 $$ String specification = sb.toString()[ CD ]
