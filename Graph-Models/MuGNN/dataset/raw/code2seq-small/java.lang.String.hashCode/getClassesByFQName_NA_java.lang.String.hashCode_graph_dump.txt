Line_2 $$ public List<PsiClass> getClassesByFQName(String name, GlobalSearchScope scope, boolean inSource) -->Line_4 $$ for (PsiElement psiClass : StubIndex.getElements(GrFullClassNameIndex.KEY, name.hashCode(), myProject, inSource ? new GrSourceFilterScope(scope) : scope, PsiClass.class)) [ FD ]
Line_5 $$ if (name.equals(((PsiClass) psiClass).getQualifiedName())) -->Line_6 $$ result.add((PsiClass) psiClass)[ CD ]
Line_2 $$ public List<PsiClass> getClassesByFQName(String name, GlobalSearchScope scope, boolean inSource) -->Line_10 $$ return result[ CD ]
Line_3 $$ final List<PsiClass> result = ContainerUtil.newArrayList()-->Line_6 $$ result.add((PsiClass) psiClass)[ FD ]
Line_2 $$ public List<PsiClass> getClassesByFQName(String name, GlobalSearchScope scope, boolean inSource) -->Line_3 $$ final List<PsiClass> result = ContainerUtil.newArrayList()[ CD ]
Line_2 $$ public List<PsiClass> getClassesByFQName(String name, GlobalSearchScope scope, boolean inSource) -->Line_9 $$ result.addAll(getScriptClassesByFQName(name, scope, inSource))[ CD ]
Line_2 $$ public List<PsiClass> getClassesByFQName(String name, GlobalSearchScope scope, boolean inSource) -->Line_9 $$ result.addAll(getScriptClassesByFQName(name, scope, inSource))[ FD ]
Line_3 $$ final List<PsiClass> result = ContainerUtil.newArrayList()-->Line_9 $$ result.addAll(getScriptClassesByFQName(name, scope, inSource))[ FD ]
Line_2 $$ public List<PsiClass> getClassesByFQName(String name, GlobalSearchScope scope, boolean inSource) -->Line_5 $$ if (name.equals(((PsiClass) psiClass).getQualifiedName())) [ FD ]
