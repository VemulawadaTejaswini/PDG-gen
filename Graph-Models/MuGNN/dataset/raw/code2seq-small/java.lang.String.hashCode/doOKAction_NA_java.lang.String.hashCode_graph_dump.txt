Line_2 $$ protected void doOKAction() -->Line_45 $$ myBlockTree.setRootVisible(true)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_18 $$ myPsiTree.setRootVisible(false)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_43 $$ blockTreeStructure.setRoot(blockNode)[ CD ]
Line_11 $$ PsiElement rootElement = parseText(text)-->Line_14 $$ structure.setRootPsiElement(rootElement)[ FD ]
Line_31 $$ BlockTreeNode rootNode = new BlockTreeNode(rootBlock, null)-->Line_32 $$ blockTreeStructure.setRoot(rootNode)[ FD ]
Line_2 $$ protected void doOKAction() -->Line_39 $$ if (blockNode == null) [ CD ]
Line_2 $$ protected void doOKAction() -->Line_6 $$ final String text = myEditor.getDocument().getText()[ CD ]
Line_38 $$ BlockTreeNode blockNode = myPsiToBlockMap.get(rootPsi)-->Line_41 $$ blockNode = findBlockNode(rootPsi)[ FD ]
Line_22 $$ Block rootBlock = rootElement == null ? null : buildBlocks(rootElement)-->Line_23 $$ if (rootBlock == null) [ FD ]
Line_2 $$ protected void doOKAction() -->Line_36 $$ initMap(rootNode, psiFile)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_38 $$ BlockTreeNode blockNode = myPsiToBlockMap.get(rootPsi)[ CD ]
Line_39 $$ if (blockNode == null) -->Line_40 $$ LOG.error(LogMessageEx.createEvent("PsiViewer: rootNode not found", "Current language: " + rootElement.getContainingFile().getLanguage(), AttachmentFactory.createAttachment(rootElement.getContainingFile().getOriginalFile().getVirtualFile())))[ CD ]
Line_38 $$ BlockTreeNode blockNode = myPsiToBlockMap.get(rootPsi)-->Line_39 $$ if (blockNode == null) [ FD ]
Line_2 $$ protected void doOKAction() -->Line_13 $$ ViewerTreeStructure structure = (ViewerTreeStructure) myPsiTreeBuilder.getTreeStructure()[ CD ]
Line_2 $$ protected void doOKAction() -->Line_32 $$ blockTreeStructure.setRoot(rootNode)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_35 $$ final PsiElement psiFile = ((ViewerTreeStructure) myPsiTreeBuilder.getTreeStructure()).getRootPsiElement()[ CD ]
Line_35 $$ final PsiElement psiFile = ((ViewerTreeStructure) myPsiTreeBuilder.getTreeStructure()).getRootPsiElement()-->Line_36 $$ initMap(rootNode, psiFile)[ FD ]
Line_2 $$ protected void doOKAction() -->Line_12 $$ focusTree()[ CD ]
Line_37 $$ PsiElement rootPsi = rootNode.getBlock() instanceof ASTBlock ? ((ASTBlock) rootNode.getBlock()).getNode().getPsi() : rootElement-->Line_38 $$ BlockTreeNode blockNode = myPsiToBlockMap.get(rootPsi)[ FD ]
Line_38 $$ BlockTreeNode blockNode = myPsiToBlockMap.get(rootPsi)-->Line_43 $$ blockTreeStructure.setRoot(blockNode)[ FD ]
Line_2 $$ protected void doOKAction() -->Line_30 $$ BlockTreeStructure blockTreeStructure = new BlockTreeStructure()[ CD ]
Line_2 $$ protected void doOKAction() -->Line_16 $$ myPsiTree.setRootVisible(true)[ CD ]
Line_30 $$ BlockTreeStructure blockTreeStructure = new BlockTreeStructure()-->Line_43 $$ blockTreeStructure.setRoot(blockNode)[ FD ]
Line_2 $$ protected void doOKAction() -->Line_22 $$ Block rootBlock = rootElement == null ? null : buildBlocks(rootElement)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_19 $$ if (!myShowBlocksCheckBox.isSelected()) [ CD ]
Line_2 $$ protected void doOKAction() -->Line_11 $$ PsiElement rootElement = parseText(text)[ CD ]
Line_30 $$ BlockTreeStructure blockTreeStructure = new BlockTreeStructure()-->Line_32 $$ blockTreeStructure.setRoot(rootNode)[ FD ]
Line_31 $$ BlockTreeNode rootNode = new BlockTreeNode(rootBlock, null)-->Line_36 $$ initMap(rootNode, psiFile)[ FD ]
Line_6 $$ final String text = myEditor.getDocument().getText()-->Line_11 $$ PsiElement rootElement = parseText(text)[ FD ]
Line_2 $$ protected void doOKAction() -->Line_23 $$ if (rootBlock == null) [ CD ]
Line_37 $$ PsiElement rootPsi = rootNode.getBlock() instanceof ASTBlock ? ((ASTBlock) rootNode.getBlock()).getNode().getPsi() : rootElement-->Line_41 $$ blockNode = findBlockNode(rootPsi)[ FD ]
Line_6 $$ final String text = myEditor.getDocument().getText()-->Line_9 $$ myLastParsedTextHashCode = text.hashCode()[ FD ]
Line_2 $$ protected void doOKAction() -->Line_31 $$ BlockTreeNode rootNode = new BlockTreeNode(rootBlock, null)[ CD ]
Line_11 $$ PsiElement rootElement = parseText(text)-->Line_22 $$ Block rootBlock = rootElement == null ? null : buildBlocks(rootElement)[ FD ]
Line_23 $$ if (rootBlock == null) -->Line_26 $$ myBlockTree.setVisible(false)[ CD ]
Line_23 $$ if (rootBlock == null) -->Line_25 $$ myBlockTree.setRootVisible(false)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_37 $$ PsiElement rootPsi = rootNode.getBlock() instanceof ASTBlock ? ((ASTBlock) rootNode.getBlock()).getNode().getPsi() : rootElement[ CD ]
Line_13 $$ ViewerTreeStructure structure = (ViewerTreeStructure) myPsiTreeBuilder.getTreeStructure()-->Line_14 $$ structure.setRootPsiElement(rootElement)[ FD ]
Line_23 $$ if (rootBlock == null) -->Line_27 $$ return[ CD ]
Line_31 $$ BlockTreeNode rootNode = new BlockTreeNode(rootBlock, null)-->Line_37 $$ PsiElement rootPsi = rootNode.getBlock() instanceof ASTBlock ? ((ASTBlock) rootNode.getBlock()).getNode().getPsi() : rootElement[ FD ]
Line_41 $$ blockNode = findBlockNode(rootPsi)-->Line_43 $$ blockTreeStructure.setRoot(blockNode)[ FD ]
Line_2 $$ protected void doOKAction() -->Line_44 $$ myBlockTree.addTreeSelectionListener(new MyBlockTreeSelectionListener())[ CD ]
Line_2 $$ protected void doOKAction() -->Line_17 $$ myPsiTree.expandRow(0)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_14 $$ structure.setRootPsiElement(rootElement)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_9 $$ myLastParsedTextHashCode = text.hashCode()[ CD ]
Line_3 $$ if (myBlockTreeBuilder != null) -->Line_4 $$ Disposer.dispose(myBlockTreeBuilder)[ CD ]
Line_19 $$ if (!myShowBlocksCheckBox.isSelected()) -->Line_20 $$ return[ CD ]
Line_2 $$ protected void doOKAction() -->Line_46 $$ myBlockTree.expandRow(0)[ CD ]
Line_39 $$ if (blockNode == null) -->Line_41 $$ blockNode = findBlockNode(rootPsi)[ CD ]
Line_2 $$ protected void doOKAction() -->Line_3 $$ if (myBlockTreeBuilder != null) [ CD ]
Line_2 $$ protected void doOKAction() -->Line_47 $$ myBlockTreeBuilder.queueUpdate()[ CD ]
Line_2 $$ protected void doOKAction() -->Line_7 $$ myEditor.getSelectionModel().removeSelection()[ CD ]
Line_11 $$ PsiElement rootElement = parseText(text)-->Line_40 $$ LOG.error(LogMessageEx.createEvent("PsiViewer: rootNode not found", "Current language: " + rootElement.getContainingFile().getLanguage(), AttachmentFactory.createAttachment(rootElement.getContainingFile().getOriginalFile().getVirtualFile())))[ FD ]
Line_2 $$ protected void doOKAction() -->Line_15 $$ myPsiTreeBuilder.queueUpdate()[ CD ]
Line_2 $$ protected void doOKAction() -->Line_29 $$ myBlockTree.setVisible(true)[ CD ]
