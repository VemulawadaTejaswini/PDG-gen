Line_98 $$ if (clickCount == 1) -->Line_99 $$ myLocalesModel.add(existLocalesListModel.getLocales())[ CD ]
Line_10 $$ final List<Locale> locales-->Line_16 $$ locales = Collections.emptyList()[ FD ]
Line_13 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)-->Line_62 $$ myLocalesModel.add(locales)[ FD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_41 $$ projectExistLocalesList.addFocusListener(new FocusAdapter() [ FD ]
Line_2 $$ private void createUIComponents() -->Line_68 $$ new ClickListener() [ CD ]
Line_11 $$ final List<Locale> restrictedLocales-->Line_28 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_12 $$ if (myResourceBundle == null) -->Line_14 $$ restrictedLocales = Collections.emptyList()[ CD ]
Line_2 $$ private void createUIComponents() -->Line_96 $$ new ClickListener() [ CD ]
Line_83 $$ final List<Locale> currentItems = myLocalesModel.getItems()-->Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_70 $$ if (clickCount == 1) -->Line_71 $$ myLocalesModel.add(ContainerUtil.map(projectExistLocalesList.getSelectedValues(), new Function<Object, Locale>() [ CD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_84 $$ for (Object o : projectExistLocalesList.getSelectedValues()) [ FD ]
Line_70 $$ if (clickCount == 1) -->Line_76 $$ return true[ CD ]
Line_59 $$ if (rawAddedLocales != null) -->Line_60 $$ final List<Locale> locales = extractLocalesFromString(rawAddedLocales)[ CD ]
Line_17 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_28 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_50 $$ return checkInput(inputString) ? null : "Invalid locales"[ FD ]
Line_81 $$ projectExistLocalesList.addListSelectionListener(new ListSelectionListener() -->Line_91 $$ myAddLocaleFromExistButton.setEnabled(false)[ CD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_53 $$ return extractLocalesFromString(inputString) != null[ CD ]
Line_2 $$ private void createUIComponents() -->Line_46 $$ myNewBundleLocalesPanel = ToolbarDecorator.createDecorator(localesToAddList).setAddAction(new AnActionButtonRunnable() [ CD ]
Line_2 $$ private void createUIComponents() -->Line_12 $$ if (myResourceBundle == null) [ CD ]
Line_46 $$ myNewBundleLocalesPanel = ToolbarDecorator.createDecorator(localesToAddList).setAddAction(new AnActionButtonRunnable() -->Line_59 $$ if (rawAddedLocales != null) [ CD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_38 $$ projectExistLocalesList.clearSelection()[ FD ]
Line_81 $$ projectExistLocalesList.addListSelectionListener(new ListSelectionListener() -->Line_83 $$ final List<Locale> currentItems = myLocalesModel.getItems()[ CD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_6 $$ projectExistLocalesList.setCellRenderer(getLocaleRenderer())[ FD ]
Line_4 $$ final MyExistLocalesListModel existLocalesListModel = new MyExistLocalesListModel()-->Line_99 $$ myLocalesModel.add(existLocalesListModel.getLocales())[ FD ]
Line_2 $$ private void createUIComponents() -->Line_7 $$ myProjectExistLocalesPanel = ToolbarDecorator.createDecorator(projectExistLocalesList).disableRemoveAction().disableUpDownActions().createPanel()[ CD ]
Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) -->Line_88 $$ return[ CD ]
Line_2 $$ private void createUIComponents() -->Line_81 $$ projectExistLocalesList.addListSelectionListener(new ListSelectionListener() [ CD ]
Line_11 $$ final List<Locale> restrictedLocales-->Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_25 $$ final List<Locale> currentItems = getItems()-->Line_28 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_96 $$ new ClickListener() -->Line_98 $$ if (clickCount == 1) [ CD ]
Line_2 $$ private void createUIComponents() -->Line_4 $$ final MyExistLocalesListModel existLocalesListModel = new MyExistLocalesListModel()[ CD ]
Line_96 $$ new ClickListener() -->Line_101 $$ return false[ CD ]
Line_59 $$ if (rawAddedLocales != null) -->Line_61 $$ LOG.assertTrue(locales != null)[ CD ]
Line_9 $$ final JBList localesToAddList = new JBList()-->Line_36 $$ localesToAddList.addFocusListener(new FocusAdapter() [ FD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_50 $$ return checkInput(inputString) ? null : "Invalid locales"[ CD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_59 $$ if (rawAddedLocales != null) [ FD ]
Line_26 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() -->Line_28 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_23 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_26 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() [ FD ]
Line_16 $$ locales = Collections.emptyList()-->Line_62 $$ myLocalesModel.add(locales)[ FD ]
Line_59 $$ if (rawAddedLocales != null) -->Line_62 $$ myLocalesModel.add(locales)[ CD ]
Line_10 $$ final List<Locale> locales-->Line_62 $$ myLocalesModel.add(locales)[ FD ]
Line_36 $$ localesToAddList.addFocusListener(new FocusAdapter() -->Line_38 $$ projectExistLocalesList.clearSelection()[ CD ]
Line_10 $$ final List<Locale> locales-->Line_13 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)[ FD ]
Line_23 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_26 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() [ CD ]
Line_9 $$ final JBList localesToAddList = new JBList()-->Line_46 $$ myNewBundleLocalesPanel = ToolbarDecorator.createDecorator(localesToAddList).setAddAction(new AnActionButtonRunnable() [ FD ]
Line_71 $$ myLocalesModel.add(ContainerUtil.map(projectExistLocalesList.getSelectedValues(), new Function<Object, Locale>() -->Line_73 $$ return (Locale) o[ CD ]
Line_68 $$ new ClickListener() -->Line_78 $$ return false[ CD ]
Line_17 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_19 $$ return propertiesFile.getLocale()[ FD ]
Line_46 $$ myNewBundleLocalesPanel = ToolbarDecorator.createDecorator(localesToAddList).setAddAction(new AnActionButtonRunnable() -->Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() [ CD ]
Line_2 $$ private void createUIComponents() -->Line_8 $$ myProjectExistLocalesPanel.setBorder(IdeBorderFactory.createTitledBorder("Project locales", false))[ CD ]
Line_2 $$ private void createUIComponents() -->Line_3 $$ final JBList projectExistLocalesList = new JBList()[ CD ]
Line_4 $$ final MyExistLocalesListModel existLocalesListModel = new MyExistLocalesListModel()-->Line_5 $$ projectExistLocalesList.setModel(existLocalesListModel)[ FD ]
Line_41 $$ projectExistLocalesList.addFocusListener(new FocusAdapter() -->Line_43 $$ localesToAddList.clearSelection()[ CD ]
Line_2 $$ private void createUIComponents() -->Line_35 $$ localesToAddList.setCellRenderer(getLocaleRenderer())[ CD ]
Line_2 $$ private void createUIComponents() -->Line_5 $$ projectExistLocalesList.setModel(existLocalesListModel)[ CD ]
Line_14 $$ restrictedLocales = Collections.emptyList()-->Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_53 $$ return extractLocalesFromString(inputString) != null[ FD ]
Line_85 $$ Locale l = (Locale) o-->Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_56 $$ return checkInput(inputString)[ FD ]
Line_11 $$ final List<Locale> restrictedLocales-->Line_14 $$ restrictedLocales = Collections.emptyList()[ FD ]
Line_2 $$ private void createUIComponents() -->Line_94 $$ myAddLocaleFromExistButton.setEnabled(false)[ CD ]
Line_25 $$ final List<Locale> currentItems = getItems()-->Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_17 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_19 $$ return propertiesFile.getLocale()[ CD ]
Line_9 $$ final JBList localesToAddList = new JBList()-->Line_43 $$ localesToAddList.clearSelection()[ FD ]
Line_2 $$ private void createUIComponents() -->Line_41 $$ projectExistLocalesList.addFocusListener(new FocusAdapter() [ CD ]
Line_14 $$ restrictedLocales = Collections.emptyList()-->Line_28 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ FD ]
Line_2 $$ private void createUIComponents() -->Line_34 $$ localesToAddList.setModel(myLocalesModel)[ CD ]
Line_17 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() -->Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) [ FD ]
Line_26 $$ elements = ContainerUtil.filter(elements, new Condition<Locale>() -->Line_28 $$ return !restrictedLocales.contains(locale) && !currentItems.contains(locale)[ CD ]
Line_13 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)-->Line_16 $$ locales = Collections.emptyList()[ FD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_60 $$ final List<Locale> locales = extractLocalesFromString(rawAddedLocales)[ FD ]
Line_12 $$ if (myResourceBundle == null) -->Line_13 $$ locales = Collections.singletonList(PropertiesUtil.DEFAULT_LOCALE)[ CD ]
Line_14 $$ restrictedLocales = Collections.emptyList()-->Line_17 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() [ FD ]
Line_2 $$ private void createUIComponents() -->Line_11 $$ final List<Locale> restrictedLocales[ CD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_81 $$ projectExistLocalesList.addListSelectionListener(new ListSelectionListener() [ FD ]
Line_23 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_25 $$ final List<Locale> currentItems = getItems()[ CD ]
Line_12 $$ if (myResourceBundle == null) -->Line_17 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() [ CD ]
Line_12 $$ if (myResourceBundle == null) -->Line_16 $$ locales = Collections.emptyList()[ CD ]
Line_2 $$ private void createUIComponents() -->Line_36 $$ localesToAddList.addFocusListener(new FocusAdapter() [ CD ]
Line_23 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_31 $$ super.add(elements)[ CD ]
Line_2 $$ private void createUIComponents() -->Line_66 $$ myNewBundleLocalesPanel.setBorder(IdeBorderFactory.createTitledBorder("Locales to add", false))[ CD ]
Line_68 $$ new ClickListener() -->Line_70 $$ if (clickCount == 1) [ CD ]
Line_11 $$ final List<Locale> restrictedLocales-->Line_17 $$ restrictedLocales = ContainerUtil.map(myResourceBundle.getPropertiesFiles(), new Function<PropertiesFile, Locale>() [ FD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_7 $$ myProjectExistLocalesPanel = ToolbarDecorator.createDecorator(projectExistLocalesList).disableRemoveAction().disableUpDownActions().createPanel()[ FD ]
Line_86 $$ if (!restrictedLocales.contains(l) && !currentItems.contains(l)) -->Line_87 $$ myAddLocaleFromExistButton.setEnabled(true)[ CD ]
Line_9 $$ final JBList localesToAddList = new JBList()-->Line_34 $$ localesToAddList.setModel(myLocalesModel)[ FD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_5 $$ projectExistLocalesList.setModel(existLocalesListModel)[ FD ]
Line_3 $$ final JBList projectExistLocalesList = new JBList()-->Line_71 $$ myLocalesModel.add(ContainerUtil.map(projectExistLocalesList.getSelectedValues(), new Function<Object, Locale>() [ FD ]
Line_2 $$ private void createUIComponents() -->Line_10 $$ final List<Locale> locales[ CD ]
Line_2 $$ private void createUIComponents() -->Line_9 $$ final JBList localesToAddList = new JBList()[ CD ]
Line_9 $$ final JBList localesToAddList = new JBList()-->Line_35 $$ localesToAddList.setCellRenderer(getLocaleRenderer())[ FD ]
Line_48 $$ final String rawAddedLocales = Messages.showInputDialog(myProject, PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.message"), PropertiesBundle.message("create.resource.bundle.dialog.add.locales.validator.title"), null, null, new InputValidatorEx() -->Line_56 $$ return checkInput(inputString)[ CD ]
Line_2 $$ private void createUIComponents() -->Line_6 $$ projectExistLocalesList.setCellRenderer(getLocaleRenderer())[ CD ]
Line_96 $$ new ClickListener() -->Line_98 $$ if (clickCount == 1) [ FD ]
Line_23 $$ myLocalesModel = new CollectionListModel<Locale>(locales) -->Line_31 $$ super.add(elements)[ FD ]
Line_68 $$ new ClickListener() -->Line_98 $$ if (clickCount == 1) [ FD ]
Line_68 $$ new ClickListener() -->Line_70 $$ if (clickCount == 1) [ FD ]
