Line_14 $$ if (component instanceof ComboBox) -->Line_22 $$ DialogUtil.registerMnemonic(label, component)[ CD ]
Line_2 $$ private JPanel createReturnTypePanel() -->Line_6 $$ final TypeSelectorManagerImpl manager = new TypeSelectorManagerImpl(myProject, myReturnType, findOccurrences(), areTypesDirected()) [ CD ]
Line_8 $$ final PsiType[] types = super.getTypesForAll(direct)-->Line_9 $$ return !isVoidReturn() ? types : ArrayUtil.prepend(PsiType.VOID, types)[ FD ]
Line_23 $$ ((JComboBox) component).addActionListener(new ActionListener() -->Line_26 $$ if (myGenerateAnnotations != null) [ CD ]
Line_6 $$ final TypeSelectorManagerImpl manager = new TypeSelectorManagerImpl(myProject, myReturnType, findOccurrences(), areTypesDirected()) -->Line_9 $$ return !isVoidReturn() ? types : ArrayUtil.prepend(PsiType.VOID, types)[ CD ]
Line_2 $$ private JPanel createReturnTypePanel() -->Line_14 $$ if (component instanceof ComboBox) [ CD ]
Line_14 $$ if (component instanceof ComboBox) -->Line_15 $$ if (isVoidReturn()) [ CD ]
Line_23 $$ ((JComboBox) component).addActionListener(new ActionListener() -->Line_35 $$ returnTypePanel.repaint()[ CD ]
Line_26 $$ if (myGenerateAnnotations != null) -->Line_28 $$ if (!enabled) [ CD ]
Line_23 $$ ((JComboBox) component).addActionListener(new ActionListener() -->Line_36 $$ updateSignature()[ CD ]
Line_27 $$ final boolean enabled = PsiUtil.resolveClassInType(selectedType) != null-->Line_31 $$ myGenerateAnnotations.setEnabled(enabled)[ FD ]
Line_6 $$ final TypeSelectorManagerImpl manager = new TypeSelectorManagerImpl(myProject, myReturnType, findOccurrences(), areTypesDirected()) -->Line_12 $$ mySelector = manager.getTypeSelector()[ FD ]
Line_14 $$ if (component instanceof ComboBox) -->Line_23 $$ ((JComboBox) component).addActionListener(new ActionListener() [ CD ]
Line_26 $$ if (myGenerateAnnotations != null) -->Line_31 $$ myGenerateAnnotations.setEnabled(enabled)[ CD ]
Line_2 $$ private JPanel createReturnTypePanel() -->Line_42 $$ return null[ CD ]
Line_2 $$ private JPanel createReturnTypePanel() -->Line_12 $$ mySelector = manager.getTypeSelector()[ CD ]
Line_28 $$ if (!enabled) -->Line_29 $$ myGenerateAnnotations.setSelected(false)[ CD ]
Line_27 $$ final boolean enabled = PsiUtil.resolveClassInType(selectedType) != null-->Line_28 $$ if (!enabled) [ FD ]
Line_2 $$ private JPanel createReturnTypePanel() -->Line_13 $$ final JComponent component = mySelector.getComponent()[ CD ]
Line_2 $$ private JPanel createReturnTypePanel() -->Line_3 $$ if (TypeConversionUtil.isPrimitiveWrapper(myReturnType) && myNullness == Nullness.NULLABLE) [ CD ]
Line_15 $$ if (isVoidReturn()) -->Line_16 $$ mySelector.selectType(PsiType.VOID)[ CD ]
Line_6 $$ final TypeSelectorManagerImpl manager = new TypeSelectorManagerImpl(myProject, myReturnType, findOccurrences(), areTypesDirected()) -->Line_8 $$ final PsiType[] types = super.getTypesForAll(direct)[ FD ]
Line_14 $$ if (component instanceof ComboBox) -->Line_20 $$ returnTypePanel.add(label, BorderLayout.NORTH)[ CD ]
Line_23 $$ ((JComboBox) component).addActionListener(new ActionListener() -->Line_25 $$ final PsiType selectedType = mySelector.getSelectedType()[ CD ]
Line_23 $$ ((JComboBox) component).addActionListener(new ActionListener() -->Line_33 $$ resizeReturnCombo(component, selectedType)[ CD ]
Line_3 $$ if (TypeConversionUtil.isPrimitiveWrapper(myReturnType) && myNullness == Nullness.NULLABLE) -->Line_4 $$ return null[ CD ]
Line_6 $$ final TypeSelectorManagerImpl manager = new TypeSelectorManagerImpl(myProject, myReturnType, findOccurrences(), areTypesDirected()) -->Line_8 $$ final PsiType[] types = super.getTypesForAll(direct)[ CD ]
Line_14 $$ if (component instanceof ComboBox) -->Line_21 $$ returnTypePanel.add(component, BorderLayout.SOUTH)[ CD ]
Line_23 $$ ((JComboBox) component).addActionListener(new ActionListener() -->Line_34 $$ returnTypePanel.revalidate()[ CD ]
Line_26 $$ if (myGenerateAnnotations != null) -->Line_27 $$ final boolean enabled = PsiUtil.resolveClassInType(selectedType) != null[ CD ]
Line_25 $$ final PsiType selectedType = mySelector.getSelectedType()-->Line_27 $$ final boolean enabled = PsiUtil.resolveClassInType(selectedType) != null[ FD ]
Line_14 $$ if (component instanceof ComboBox) -->Line_40 $$ return returnTypePanel[ CD ]
Line_14 $$ if (component instanceof ComboBox) -->Line_39 $$ resizeReturnCombo(component, mySelector.getSelectedType())[ CD ]
Line_25 $$ final PsiType selectedType = mySelector.getSelectedType()-->Line_33 $$ resizeReturnCombo(component, selectedType)[ FD ]
