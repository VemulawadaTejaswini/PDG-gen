Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_3 $$ String lineSeparator = settings.LINE_SEPARATOR[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_14 $$ myCbWrapWhenTypingReachesRightMargin.setSelected(settings.WRAP_WHEN_TYPING_REACHES_RIGHT_MARGIN)[ CD ]
Line_6 $$ if ("\r\n".equals(lineSeparator)) -->Line_7 $$ myLineSeparatorCombo.setSelectedItem(WINDOWS_STRING)[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_20 $$ myAutodetectIndentsBox.setSelected(settings.AUTODETECT_INDENTS)[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_21 $$ myShowDetectedIndentNotification.setEnabled(myAutodetectIndentsBox.isSelected())[ CD ]
Line_8 $$ if ("\r".equals(lineSeparator)) -->Line_11 $$ myLineSeparatorCombo.setSelectedItem(SYSTEM_DEPENDANT_STRING)[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_13 $$ myRightMarginField.setText(String.valueOf(settings.getDefaultRightMargin()))[ FD ]
Line_3 $$ String lineSeparator = settings.LINE_SEPARATOR-->Line_8 $$ if ("\r".equals(lineSeparator)) [ FD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_17 $$ myFormatterOnTagField.setText(settings.FORMATTER_ON_TAG)[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_15 $$ myAcceptRegularExpressionsCheckBox.setSelected(settings.FORMATTER_TAGS_ACCEPT_REGEXP)[ CD ]
Line_3 $$ String lineSeparator = settings.LINE_SEPARATOR-->Line_6 $$ if ("\r\n".equals(lineSeparator)) [ FD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_4 $$ if ("\n".equals(lineSeparator)) [ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_24 $$ option.reset(settings)[ FD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_13 $$ myRightMarginField.setText(String.valueOf(settings.getDefaultRightMargin()))[ CD ]
Line_6 $$ if ("\r\n".equals(lineSeparator)) -->Line_8 $$ if ("\r".equals(lineSeparator)) [ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_16 $$ myEnableFormatterTags.setSelected(settings.FORMATTER_TAGS_ENABLED)[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_18 $$ myFormatterOffTagField.setText(settings.FORMATTER_OFF_TAG)[ CD ]
Line_4 $$ if ("\n".equals(lineSeparator)) -->Line_6 $$ if ("\r\n".equals(lineSeparator)) [ CD ]
Line_23 $$ for (GeneralCodeStyleOptionsProvider option : myAdditionalOptions) -->Line_24 $$ option.reset(settings)[ FD ]
Line_4 $$ if ("\n".equals(lineSeparator)) -->Line_5 $$ myLineSeparatorCombo.setSelectedItem(UNIX_STRING)[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_19 $$ setFormatterTagControlsEnabled(settings.FORMATTER_TAGS_ENABLED)[ CD ]
Line_8 $$ if ("\r".equals(lineSeparator)) -->Line_9 $$ myLineSeparatorCombo.setSelectedItem(MACINTOSH_STRING)[ CD ]
Line_2 $$ protected void resetImpl(final CodeStyleSettings settings) -->Line_22 $$ myShowDetectedIndentNotification.setSelected(FileIndentOptionsProvider.isShowNotification())[ CD ]
Line_3 $$ String lineSeparator = settings.LINE_SEPARATOR-->Line_4 $$ if ("\n".equals(lineSeparator)) [ FD ]
