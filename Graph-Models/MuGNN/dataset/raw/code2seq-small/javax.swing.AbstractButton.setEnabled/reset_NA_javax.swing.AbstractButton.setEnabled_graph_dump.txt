Line_2 $$ public void reset() -->Line_33 $$ if (alphaModeEnabled) [ CD ]
Line_2 $$ public void reset() -->Line_7 $$ myComponent.myAntialiasingInEditor.setSelectedItem(settings.EDITOR_AA_TYPE)[ CD ]
Line_33 $$ if (alphaModeEnabled) -->Line_34 $$ myComponent.myEnableAlphaModeCheckBox.setSelected(settings.ENABLE_ALPHA_MODE)[ CD ]
Line_2 $$ public void reset() -->Line_25 $$ myComponent.myWidescreenLayoutCheckBox.setSelected(settings.WIDESCREEN_SUPPORT)[ CD ]
Line_2 $$ public void reset() -->Line_10 $$ myComponent.myAnimateWindowsCheckBox.setSelected(settings.ANIMATE_WINDOWS)[ CD ]
Line_2 $$ public void reset() -->Line_38 $$ myComponent.myEnableAlphaModeCheckBox.setEnabled(alphaModeEnabled)[ CD ]
Line_2 $$ public void reset() -->Line_32 $$ boolean alphaModeEnabled = WindowManagerEx.getInstanceEx().isAlphaModeSupported()[ CD ]
Line_2 $$ public void reset() -->Line_11 $$ myComponent.myWindowShortcutsCheckBox.setSelected(settings.SHOW_TOOL_WINDOW_NUMBERS)[ CD ]
Line_2 $$ public void reset() -->Line_13 $$ myComponent.myCbDisplayIconsInMenu.setSelected(settings.SHOW_ICONS_IN_MENUS)[ CD ]
Line_2 $$ public void reset() -->Line_5 $$ myComponent.myFontCombo.setFontName(settings.FONT_FACE)[ CD ]
Line_2 $$ public void reset() -->Line_40 $$ myComponent.myAlphaModeDelayTextField.setEnabled(alphaModeEnabled && settings.ENABLE_ALPHA_MODE)[ CD ]
Line_2 $$ public void reset() -->Line_30 $$ myComponent.myColorBlindnessPanel.setColorBlindness(settings.COLOR_BLINDNESS)[ CD ]
Line_2 $$ public void reset() -->Line_44 $$ myComponent.myAlphaModeRatioSlider.setEnabled(alphaModeEnabled && settings.ENABLE_ALPHA_MODE)[ CD ]
Line_2 $$ public void reset() -->Line_29 $$ myComponent.myNavigateToPreviewCheckBox.setVisible(false)[ CD ]
Line_2 $$ public void reset() -->Line_19 $$ myComponent.myHideNavigationPopupsCheckBox.setSelected(settings.HIDE_NAVIGATION_ON_FOCUS_LOSS)[ CD ]
Line_2 $$ public void reset() -->Line_26 $$ myComponent.myLeftLayoutCheckBox.setSelected(settings.LEFT_HORIZONTAL_SPLIT)[ CD ]
Line_2 $$ public void reset() -->Line_3 $$ initComponent()[ CD ]
Line_2 $$ public void reset() -->Line_6 $$ myComponent.myAntialiasingInIDE.setSelectedItem(settings.IDE_AA_TYPE)[ CD ]
Line_2 $$ public void reset() -->Line_9 $$ myComponent.myPresentationModeFontSize.setSelectedItem(Integer.toString(settings.PRESENTATION_MODE_FONT_SIZE))[ CD ]
Line_2 $$ public void reset() -->Line_17 $$ myComponent.myHideIconsInQuickNavigation.setSelected(settings.SHOW_ICONS_IN_QUICK_NAVIGATION)[ CD ]
Line_2 $$ public void reset() -->Line_46 $$ myComponent.updateCombo()[ CD ]
Line_2 $$ public void reset() -->Line_31 $$ myComponent.myDisableMnemonicInControlsCheckBox.setSelected(settings.DISABLE_MNEMONICS_IN_CONTROLS)[ CD ]
Line_2 $$ public void reset() -->Line_45 $$ myComponent.myInitialTooltipDelaySlider.setValue(Registry.intValue("ide.tooltip.initialDelay"))[ CD ]
Line_2 $$ public void reset() -->Line_28 $$ myComponent.myNavigateToPreviewCheckBox.setSelected(settings.NAVIGATE_TO_PREVIEW)[ CD ]
Line_2 $$ public void reset() -->Line_22 $$ myComponent.myOverrideLAFFonts.setSelected(settings.OVERRIDE_NONIDEA_LAF_FONTS)[ CD ]
Line_41 $$ int ratio = (int) (settings.ALPHA_MODE_RATIO * 100f)-->Line_42 $$ myComponent.myAlphaModeRatioSlider.setValue(ratio)[ FD ]
Line_32 $$ boolean alphaModeEnabled = WindowManagerEx.getInstanceEx().isAlphaModeSupported()-->Line_38 $$ myComponent.myEnableAlphaModeCheckBox.setEnabled(alphaModeEnabled)[ FD ]
Line_2 $$ public void reset() -->Line_18 $$ myComponent.myMoveMouseOnDefaultButtonCheckBox.setSelected(settings.MOVE_MOUSE_ON_DEFAULT_BUTTON)[ CD ]
Line_2 $$ public void reset() -->Line_27 $$ myComponent.myRightLayoutCheckBox.setSelected(settings.RIGHT_HORIZONTAL_SPLIT)[ CD ]
Line_2 $$ public void reset() -->Line_21 $$ myComponent.myLafComboBox.setSelectedItem(LafManager.getInstance().getCurrentLookAndFeel())[ CD ]
Line_33 $$ if (alphaModeEnabled) -->Line_36 $$ myComponent.myEnableAlphaModeCheckBox.setSelected(false)[ CD ]
Line_2 $$ public void reset() -->Line_41 $$ int ratio = (int) (settings.ALPHA_MODE_RATIO * 100f)[ CD ]
Line_2 $$ public void reset() -->Line_15 $$ myComponent.myAllowMergeButtons.setSelected(settings.ALLOW_MERGE_BUTTONS)[ CD ]
Line_2 $$ public void reset() -->Line_39 $$ myComponent.myAlphaModeDelayTextField.setText(Integer.toString(settings.ALPHA_MODE_DELAY))[ CD ]
Line_2 $$ public void reset() -->Line_16 $$ myComponent.myCycleScrollingCheckBox.setSelected(settings.CYCLE_SCROLLING)[ CD ]
Line_2 $$ public void reset() -->Line_23 $$ myComponent.myDisableMnemonics.setSelected(settings.DISABLE_MNEMONICS)[ CD ]
Line_2 $$ public void reset() -->Line_20 $$ myComponent.myAltDNDCheckBox.setSelected(settings.DND_WITH_PRESSED_ALT_ONLY)[ CD ]
Line_2 $$ public void reset() -->Line_4 $$ UISettings settings = UISettings.getInstance()[ CD ]
Line_2 $$ public void reset() -->Line_8 $$ myComponent.myFontSizeCombo.setSelectedItem(Integer.toString(settings.FONT_SIZE))[ CD ]
Line_2 $$ public void reset() -->Line_42 $$ myComponent.myAlphaModeRatioSlider.setValue(ratio)[ CD ]
Line_2 $$ public void reset() -->Line_12 $$ myComponent.myShowToolStripesCheckBox.setSelected(!settings.HIDE_TOOL_STRIPES)[ CD ]
Line_2 $$ public void reset() -->Line_14 $$ myComponent.myShowMemoryIndicatorCheckBox.setSelected(settings.SHOW_MEMORY_INDICATOR)[ CD ]
Line_2 $$ public void reset() -->Line_43 $$ myComponent.myAlphaModeRatioSlider.setToolTipText(ratio + "%")[ CD ]
Line_2 $$ public void reset() -->Line_24 $$ myComponent.myUseSmallLabelsOnTabs.setSelected(settings.USE_SMALL_LABELS_ON_TABS)[ CD ]
