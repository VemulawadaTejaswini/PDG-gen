Line_2 $$ private void initListeners() -->Line_30 $$ myParentDirectory.setText(parentDir)[ CD ]
Line_32 $$ myTestButton.addActionListener(new ActionListener() -->Line_34 $$ test()[ CD ]
Line_2 $$ private void initListeners() -->Line_37 $$ setOKActionEnabled(false)[ CD ]
Line_2 $$ private void initListeners() -->Line_6 $$ fcd.setDescription(DvcsBundle.getString("clone.destination.directory.description"))[ CD ]
Line_3 $$ FileChooserDescriptor fcd = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_5 $$ fcd.setTitle(DvcsBundle.getString("clone.destination.directory.title"))[ FD ]
Line_2 $$ private void initListeners() -->Line_3 $$ FileChooserDescriptor fcd = FileChooserDescriptorFactory.createSingleFolderDescriptor()[ CD ]
Line_2 $$ private void initListeners() -->Line_8 $$ myParentDirectory.addActionListener(new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(fcd.getTitle(), fcd.getDescription(), myParentDirectory, myProject, fcd, TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT) [ CD ]
Line_2 $$ private void initListeners() -->Line_38 $$ myTestButton.setEnabled(false)[ CD ]
Line_13 $$ if (file != null) -->Line_14 $$ return file[ CD ]
Line_2 $$ private void initListeners() -->Line_5 $$ fcd.setTitle(DvcsBundle.getString("clone.destination.directory.title"))[ CD ]
Line_8 $$ myParentDirectory.addActionListener(new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(fcd.getTitle(), fcd.getDescription(), myParentDirectory, myProject, fcd, TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT) -->Line_10 $$ String text = getComponentText()[ CD ]
Line_10 $$ String text = getComponentText()-->Line_11 $$ if (text.length() == 0) [ FD ]
Line_3 $$ FileChooserDescriptor fcd = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_7 $$ fcd.setHideIgnored(false)[ FD ]
Line_20 $$ final DocumentListener updateOkButtonListener = new DocumentAdapter() -->Line_22 $$ updateButtons()[ CD ]
Line_2 $$ private void initListeners() -->Line_32 $$ myTestButton.addActionListener(new ActionListener() [ CD ]
Line_2 $$ private void initListeners() -->Line_26 $$ String parentDir = getRememberedInputs().getCloneParentDir()[ CD ]
Line_8 $$ myParentDirectory.addActionListener(new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(fcd.getTitle(), fcd.getDescription(), myParentDirectory, myProject, fcd, TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT) -->Line_17 $$ return super.getInitialFile()[ CD ]
Line_3 $$ FileChooserDescriptor fcd = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_8 $$ myParentDirectory.addActionListener(new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(fcd.getTitle(), fcd.getDescription(), myParentDirectory, myProject, fcd, TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT) [ FD ]
Line_27 $$ if (StringUtil.isEmptyOrSpaces(parentDir)) -->Line_28 $$ parentDir = ProjectUtil.getBaseDir()[ CD ]
Line_2 $$ private void initListeners() -->Line_31 $$ myDirectoryName.getDocument().addDocumentListener(updateOkButtonListener)[ CD ]
Line_2 $$ private void initListeners() -->Line_7 $$ fcd.setHideIgnored(false)[ CD ]
Line_8 $$ myParentDirectory.addActionListener(new ComponentWithBrowseButton.BrowseFolderActionListener<JTextField>(fcd.getTitle(), fcd.getDescription(), myParentDirectory, myProject, fcd, TextComponentAccessor.TEXT_FIELD_WHOLE_TEXT) -->Line_11 $$ if (text.length() == 0) [ CD ]
Line_11 $$ if (text.length() == 0) -->Line_13 $$ if (file != null) [ CD ]
Line_2 $$ private void initListeners() -->Line_4 $$ fcd.setShowFileSystemRoots(true)[ CD ]
Line_2 $$ private void initListeners() -->Line_25 $$ myParentDirectory.getChildComponent().getDocument().addDocumentListener(updateOkButtonListener)[ CD ]
Line_12 $$ VirtualFile file = myProject.getBaseDir()-->Line_13 $$ if (file != null) [ FD ]
Line_3 $$ FileChooserDescriptor fcd = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_6 $$ fcd.setDescription(DvcsBundle.getString("clone.destination.directory.description"))[ FD ]
Line_3 $$ FileChooserDescriptor fcd = FileChooserDescriptorFactory.createSingleFolderDescriptor()-->Line_4 $$ fcd.setShowFileSystemRoots(true)[ FD ]
Line_2 $$ private void initListeners() -->Line_27 $$ if (StringUtil.isEmptyOrSpaces(parentDir)) [ CD ]
Line_11 $$ if (text.length() == 0) -->Line_12 $$ VirtualFile file = myProject.getBaseDir()[ CD ]
