Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_27 $$ final VirtualFile[] ancestors = VfsUtil.getCommonAncestors(VfsUtil.toVirtualFileArray(virtualFiles))[ CD ]
Line_17 $$ int dirCount = 0-->Line_29 $$ myIgnoreDirectoryTextField.setText(VcsBundle.message("ignored.edit.multiple.directories", dirCount))[ FD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_28 $$ if (dirCount > 1) [ CD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_33 $$ myIgnoreDirectoryTextField.setText(virtualFiles.get(0).getParent().getPresentableUrl())[ FD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_26 $$ updateControls()[ CD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_27 $$ final VirtualFile[] ancestors = VfsUtil.getCommonAncestors(VfsUtil.toVirtualFileArray(virtualFiles))[ FD ]
Line_19 $$ if (file.isDirectory()) -->Line_22 $$ myIgnoreFileTextField.setEnabled(false)[ CD ]
Line_42 $$ if (extensions.size() > 0) -->Line_46 $$ myIgnoreMaskTextField.setText(virtualFiles.get(0).getPresentableName())[ CD ]
Line_36 $$ for (VirtualFile vf : virtualFiles) -->Line_37 $$ final String extension = vf.getExtension()[ FD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_7 $$ if (virtualFiles.size() == 1) [ FD ]
Line_9 $$ String path = FileUtil.getRelativePath(new File(projectDir.getPresentableUrl()), new File(virtualFiles.get(0).getPresentableUrl()))-->Line_10 $$ myIgnoreFileTextField.setText(path)[ FD ]
Line_17 $$ int dirCount = 0-->Line_28 $$ if (dirCount > 1) [ FD ]
Line_7 $$ if (virtualFiles.size() == 1) -->Line_10 $$ myIgnoreFileTextField.setText(path)[ CD ]
Line_18 $$ for (VirtualFile file : virtualFiles) -->Line_19 $$ if (file.isDirectory()) [ FD ]
Line_7 $$ if (virtualFiles.size() == 1) -->Line_12 $$ myIgnoreFileTextField.setText(VcsBundle.message("ignored.edit.multiple.files", virtualFiles.size()))[ CD ]
Line_7 $$ if (virtualFiles.size() == 1) -->Line_8 $$ VirtualFile projectDir = myProject.getBaseDir()[ CD ]
Line_42 $$ if (extensions.size() > 0) -->Line_44 $$ myIgnoreMaskTextField.setText("*." + extensionArray[0])[ CD ]
Line_19 $$ if (file.isDirectory()) -->Line_20 $$ myIgnoreAllFilesUnderRadioButton.setSelected(true)[ CD ]
Line_30 $$ if (ancestors.length > 0) -->Line_31 $$ myIgnoreDirectoryTextField.setText(ancestors[0].getPresentableUrl())[ CD ]
Line_28 $$ if (dirCount > 1) -->Line_30 $$ if (ancestors.length > 0) [ CD ]
Line_38 $$ if (extension != null) -->Line_39 $$ extensions.add(extension)[ CD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_42 $$ if (extensions.size() > 0) [ CD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_9 $$ String path = FileUtil.getRelativePath(new File(projectDir.getPresentableUrl()), new File(virtualFiles.get(0).getPresentableUrl()))[ FD ]
Line_19 $$ if (file.isDirectory()) -->Line_23 $$ dirCount++[ CD ]
Line_30 $$ if (ancestors.length > 0) -->Line_33 $$ myIgnoreDirectoryTextField.setText(virtualFiles.get(0).getParent().getPresentableUrl())[ CD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_46 $$ myIgnoreMaskTextField.setText(virtualFiles.get(0).getPresentableName())[ FD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_3 $$ assert virtualFiles.size() > 0[ FD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_12 $$ myIgnoreFileTextField.setText(VcsBundle.message("ignored.edit.multiple.files", virtualFiles.size()))[ FD ]
Line_35 $$ final Set<String> extensions = new HashSet<String>()-->Line_43 $$ final String[] extensionArray = ArrayUtil.toStringArray(extensions)[ FD ]
Line_19 $$ if (file.isDirectory()) -->Line_21 $$ myIgnoreSpecifiedFileRadioButton.setEnabled(false)[ CD ]
Line_7 $$ if (virtualFiles.size() == 1) -->Line_9 $$ String path = FileUtil.getRelativePath(new File(projectDir.getPresentableUrl()), new File(virtualFiles.get(0).getPresentableUrl()))[ CD ]
Line_8 $$ VirtualFile projectDir = myProject.getBaseDir()-->Line_9 $$ String path = FileUtil.getRelativePath(new File(projectDir.getPresentableUrl()), new File(virtualFiles.get(0).getPresentableUrl()))[ FD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_17 $$ int dirCount = 0[ CD ]
Line_35 $$ final Set<String> extensions = new HashSet<String>()-->Line_39 $$ extensions.add(extension)[ FD ]
Line_17 $$ int dirCount = 0-->Line_23 $$ dirCount++[ FD ]
Line_37 $$ final String extension = vf.getExtension()-->Line_38 $$ if (extension != null) [ FD ]
Line_42 $$ if (extensions.size() > 0) -->Line_43 $$ final String[] extensionArray = ArrayUtil.toStringArray(extensions)[ CD ]
Line_35 $$ final Set<String> extensions = new HashSet<String>()-->Line_42 $$ if (extensions.size() > 0) [ FD ]
Line_2 $$ private void setFilesToIgnore(List<VirtualFile> virtualFiles) -->Line_35 $$ final Set<String> extensions = new HashSet<String>()[ CD ]
Line_37 $$ final String extension = vf.getExtension()-->Line_39 $$ extensions.add(extension)[ FD ]
Line_28 $$ if (dirCount > 1) -->Line_29 $$ myIgnoreDirectoryTextField.setText(VcsBundle.message("ignored.edit.multiple.directories", dirCount))[ CD ]
