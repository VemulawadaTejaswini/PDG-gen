Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_38 $$ if (m != null) [ CD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_7 $$ myRecursive.setEnabled(myDirectoryScope.isSelected())[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_28 $$ myCustomScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.CUSTOM)[ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_28 $$ myCustomScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.CUSTOM)[ CD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_6 $$ myDirectory.setEnabled(myDirectoryScope.isSelected())[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_31 $$ if (scope.getModuleName() != null) [ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_27 $$ myCustomScope.addItemListener(stateListener)[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_51 $$ myRecursive.setSelected(scope.isRecursive())[ CD ]
Line_31 $$ if (scope.getModuleName() != null) -->Line_32 $$ if ((m = ModuleManager.getInstance(myProject).findModuleByName(scope.getModuleName())) == null) [ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_23 $$ myModuleScope.addItemListener(stateListener)[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_24 $$ myModuleScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.MODULE)[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_31 $$ if (scope.getModuleName() != null) [ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_43 $$ myCustomScopeSelection.getComboBox().addItemListener(scopeListener)[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_26 $$ myDirectoryScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.DIRECTORY)[ FD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_5 $$ myModuleSelection.setEnabled(myModuleScope.isSelected())[ CD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_8 $$ myCustomScopeSelection.setEnabled(myCustomScope.isSelected())[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_49 $$ myDirectory.setText(scope.getPath())[ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_50 $$ myDirectory.addBrowseFolderListener("Select Path", "Select Path", myProject, FileChooserDescriptorFactory.createSingleFolderDescriptor())[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_42 $$ ((ScopeChooserCombo) myCustomScopeSelection).init(myProject, true, true, scope.getScopeName())[ CD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_27 $$ myCustomScope.addItemListener(stateListener)[ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_26 $$ myDirectoryScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.DIRECTORY)[ CD ]
Line_44 $$ myDirectory.getTextField().getDocument().addDocumentListener(new DocumentAdapter() -->Line_46 $$ firePropertyChange("scope", null, getSelectedScope())[ CD ]
Line_14 $$ final ItemListener scopeListener = new ItemListener() -->Line_16 $$ if (e.getStateChange() == ItemEvent.SELECTED) [ FD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_16 $$ if (e.getStateChange() == ItemEvent.SELECTED) [ FD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_25 $$ myDirectoryScope.addItemListener(stateListener)[ FD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_21 $$ myWholeProjectScope.addItemListener(stateListener)[ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_25 $$ myDirectoryScope.addItemListener(stateListener)[ CD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_9 $$ if (e.getStateChange() == ItemEvent.SELECTED) [ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_22 $$ myWholeProjectScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.PROJECT)[ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_29 $$ myModuleSelection.fillModules(myProject)[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_3 $$ final ItemListener stateListener = new ItemListener() [ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_21 $$ myWholeProjectScope.addItemListener(stateListener)[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_22 $$ myWholeProjectScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.PROJECT)[ CD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_9 $$ if (e.getStateChange() == ItemEvent.SELECTED) [ CD ]
Line_16 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_17 $$ firePropertyChange("scope", null, getSelectedScope())[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_49 $$ myDirectory.setText(scope.getPath())[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_51 $$ myRecursive.setSelected(scope.isRecursive())[ FD ]
Line_9 $$ if (e.getStateChange() == ItemEvent.SELECTED) -->Line_10 $$ firePropertyChange("scope", null, getSelectedScope())[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_41 $$ myModuleSelection.addItemListener(scopeListener)[ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_32 $$ if ((m = ModuleManager.getInstance(myProject).findModuleByName(scope.getModuleName())) == null) [ FD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_44 $$ myDirectory.getTextField().getDocument().addDocumentListener(new DocumentAdapter() [ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_42 $$ ((ScopeChooserCombo) myCustomScopeSelection).init(myProject, true, true, scope.getScopeName())[ FD ]
Line_38 $$ if (m != null) -->Line_39 $$ myModuleSelection.setSelectedModule(m)[ CD ]
Line_3 $$ final ItemListener stateListener = new ItemListener() -->Line_23 $$ myModuleScope.addItemListener(stateListener)[ FD ]
Line_14 $$ final ItemListener scopeListener = new ItemListener() -->Line_16 $$ if (e.getStateChange() == ItemEvent.SELECTED) [ CD ]
Line_2 $$ public void initComponent(@Nullable Module currentModule, final SearchScope scope) -->Line_24 $$ myModuleScope.setSelected(scope.getScopeType() == SearchScope.ScopeType.MODULE)[ FD ]
