Line_3 $$ final String varName = var.getName()-->Line_25 $$ partOfSearchResults.setSelected(UIUtil.isTarget(varName, matchOptions))[ FD ]
Line_14 $$ if (varInfo == null) -->Line_41 $$ applyWithinTypeHierarchy.setSelected(varInfo.isWithinHierarchy())[ CD ]
Line_14 $$ if (varInfo == null) -->Line_56 $$ wholeWordsOnly.setSelected(varInfo.isWholeWordsOnly())[ CD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_64 $$ final boolean contextVar = Configuration.CONTEXT_VAR_NAME.equals(var.getName())[ CD ]
Line_45 $$ if (varInfo.getMaxCount() == Integer.MAX_VALUE) -->Line_49 $$ maxoccursUnlimited.setSelected(false)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_39 $$ notWrite.setSelected(varInfo.isInvertWriteAccess())[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_45 $$ if (varInfo.getMaxCount() == Integer.MAX_VALUE) [ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_44 $$ minoccurs.setText(Integer.toString(varInfo.getMinCount()))[ FD ]
Line_14 $$ if (varInfo == null) -->Line_25 $$ partOfSearchResults.setSelected(UIUtil.isTarget(varName, matchOptions))[ CD ]
Line_14 $$ if (varInfo == null) -->Line_30 $$ invertFormalArgType.setSelected(false)[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_14 $$ if (varInfo == null) [ FD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_4 $$ if (isReplacementVariable(varName)) [ CD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_68 $$ partOfSearchResults.setEnabled(!contextVar)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_21 $$ minoccurs.setText("1")[ CD ]
Line_14 $$ if (varInfo == null) -->Line_31 $$ formalArgTypeWithinHierarchy.setSelected(false)[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_40 $$ write.setSelected(varInfo.isWriteAccess())[ FD ]
Line_14 $$ if (varInfo == null) -->Line_42 $$ regexp.getDocument().setText(varInfo.getRegExp())[ CD ]
Line_14 $$ if (varInfo == null) -->Line_27 $$ notExprType.setSelected(false)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_32 $$ formalArgType.getDocument().setText("")[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_50 $$ maxoccurs.setText(Integer.toString(varInfo.getMaxCount()))[ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_41 $$ applyWithinTypeHierarchy.setSelected(varInfo.isWithinHierarchy())[ FD ]
Line_14 $$ if (varInfo == null) -->Line_45 $$ if (varInfo.getMaxCount() == Integer.MAX_VALUE) [ CD ]
Line_14 $$ if (varInfo == null) -->Line_54 $$ regexprForExprType.getDocument().setText(varInfo.getNameOfExprType())[ CD ]
Line_4 $$ if (isReplacementVariable(varName)) -->Line_7 $$ setSearchConstraintsVisible(false)[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_59 $$ formalArgType.getDocument().setText(varInfo.getNameOfFormalArgType())[ FD ]
Line_14 $$ if (varInfo == null) -->Line_57 $$ invertFormalArgType.setSelected(varInfo.isInvertFormalType())[ CD ]
Line_5 $$ final ReplacementVariableDefinition definition = ((ReplaceConfiguration) myConfiguration).getOptions().getVariableDefinition(stripReplacementVarDecoration(varName))-->Line_6 $$ restoreScriptCode(definition)[ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_61 $$ withinCombo.getComboBox().getEditor().setItem(StringUtil.stripQuotesAroundValue(varInfo.getWithinConstraint()))[ FD ]
Line_14 $$ if (varInfo == null) -->Line_61 $$ withinCombo.getComboBox().getEditor().setItem(StringUtil.stripQuotesAroundValue(varInfo.getWithinConstraint()))[ CD ]
Line_14 $$ if (varInfo == null) -->Line_44 $$ minoccurs.setText(Integer.toString(varInfo.getMinCount()))[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_43 $$ notRegexp.setSelected(varInfo.isInvertRegExp())[ FD ]
Line_14 $$ if (varInfo == null) -->Line_23 $$ maxoccursUnlimited.setSelected(false)[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_37 $$ notRead.setSelected(varInfo.isInvertReadAccess())[ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_54 $$ regexprForExprType.getDocument().setText(varInfo.getNameOfExprType())[ FD ]
Line_64 $$ final boolean contextVar = Configuration.CONTEXT_VAR_NAME.equals(var.getName())-->Line_67 $$ expressionConstraints.setVisible(!contextVar)[ FD ]
Line_64 $$ final boolean contextVar = Configuration.CONTEXT_VAR_NAME.equals(var.getName())-->Line_69 $$ occurencePanel.setVisible(!contextVar)[ FD ]
Line_64 $$ final boolean contextVar = Configuration.CONTEXT_VAR_NAME.equals(var.getName())-->Line_66 $$ textConstraintsPanel.setVisible(!contextVar)[ FD ]
Line_14 $$ if (varInfo == null) -->Line_52 $$ partOfSearchResults.setSelected(UIUtil.isTarget(varName, matchOptions))[ CD ]
Line_14 $$ if (varInfo == null) -->Line_26 $$ regexprForExprType.getDocument().setText("")[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_62 $$ invertWithinIn.setSelected(varInfo.isInvertWithinConstraint())[ FD ]
Line_14 $$ if (varInfo == null) -->Line_59 $$ formalArgType.getDocument().setText(varInfo.getNameOfFormalArgType())[ CD ]
Line_12 $$ final MatchOptions matchOptions = myConfiguration.getMatchOptions()-->Line_25 $$ partOfSearchResults.setSelected(UIUtil.isTarget(varName, matchOptions))[ FD ]
Line_45 $$ if (varInfo.getMaxCount() == Integer.MAX_VALUE) -->Line_47 $$ maxoccurs.setText("")[ CD ]
Line_14 $$ if (varInfo == null) -->Line_15 $$ notRead.setSelected(false)[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_55 $$ notExprType.setSelected(varInfo.isInvertExprType())[ FD ]
Line_64 $$ final boolean contextVar = Configuration.CONTEXT_VAR_NAME.equals(var.getName())-->Line_68 $$ partOfSearchResults.setEnabled(!contextVar)[ FD ]
Line_14 $$ if (varInfo == null) -->Line_37 $$ notRead.setSelected(varInfo.isInvertReadAccess())[ CD ]
Line_14 $$ if (varInfo == null) -->Line_40 $$ write.setSelected(varInfo.isWriteAccess())[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_57 $$ invertFormalArgType.setSelected(varInfo.isInvertFormalType())[ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_39 $$ notWrite.setSelected(varInfo.isInvertWriteAccess())[ FD ]
Line_14 $$ if (varInfo == null) -->Line_33 $$ customScriptCode.getChildComponent().setText("")[ CD ]
Line_45 $$ if (varInfo.getMaxCount() == Integer.MAX_VALUE) -->Line_46 $$ maxoccursUnlimited.setSelected(true)[ CD ]
Line_3 $$ final String varName = var.getName()-->Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)[ FD ]
Line_14 $$ if (varInfo == null) -->Line_17 $$ read.setSelected(false)[ CD ]
Line_12 $$ final MatchOptions matchOptions = myConfiguration.getMatchOptions()-->Line_52 $$ partOfSearchResults.setSelected(UIUtil.isTarget(varName, matchOptions))[ FD ]
Line_14 $$ if (varInfo == null) -->Line_55 $$ notExprType.setSelected(varInfo.isInvertExprType())[ CD ]
Line_4 $$ if (isReplacementVariable(varName)) -->Line_8 $$ return[ CD ]
Line_3 $$ final String varName = var.getName()-->Line_4 $$ if (isReplacementVariable(varName)) [ FD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_14 $$ if (varInfo == null) [ CD ]
Line_4 $$ if (isReplacementVariable(varName)) -->Line_5 $$ final ReplacementVariableDefinition definition = ((ReplaceConfiguration) myConfiguration).getOptions().getVariableDefinition(stripReplacementVarDecoration(varName))[ CD ]
Line_14 $$ if (varInfo == null) -->Line_16 $$ notRegexp.setSelected(false)[ CD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_12 $$ final MatchOptions matchOptions = myConfiguration.getMatchOptions()[ CD ]
Line_14 $$ if (varInfo == null) -->Line_18 $$ notWrite.setSelected(false)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_53 $$ exprTypeWithinHierarchy.setSelected(varInfo.isExprTypeWithinHierarchy())[ CD ]
Line_14 $$ if (varInfo == null) -->Line_62 $$ invertWithinIn.setSelected(varInfo.isInvertWithinConstraint())[ CD ]
Line_4 $$ if (isReplacementVariable(varName)) -->Line_6 $$ restoreScriptCode(definition)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_34 $$ withinCombo.getComboBox().getEditor().setItem("")[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_42 $$ regexp.getDocument().setText(varInfo.getRegExp())[ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_58 $$ formalArgTypeWithinHierarchy.setSelected(varInfo.isFormalArgTypeWithinHierarchy())[ FD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)[ CD ]
Line_3 $$ final String varName = var.getName()-->Line_5 $$ final ReplacementVariableDefinition definition = ((ReplaceConfiguration) myConfiguration).getOptions().getVariableDefinition(stripReplacementVarDecoration(varName))[ FD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_67 $$ expressionConstraints.setVisible(!contextVar)[ CD ]
Line_12 $$ final MatchOptions matchOptions = myConfiguration.getMatchOptions()-->Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)[ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_53 $$ exprTypeWithinHierarchy.setSelected(varInfo.isExprTypeWithinHierarchy())[ FD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_3 $$ final String varName = var.getName()[ FD ]
Line_14 $$ if (varInfo == null) -->Line_22 $$ maxoccurs.setText("1")[ CD ]
Line_4 $$ if (isReplacementVariable(varName)) -->Line_10 $$ setSearchConstraintsVisible(true)[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_56 $$ wholeWordsOnly.setSelected(varInfo.isWholeWordsOnly())[ FD ]
Line_64 $$ final boolean contextVar = Configuration.CONTEXT_VAR_NAME.equals(var.getName())-->Line_65 $$ containedInConstraints.setVisible(contextVar)[ FD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_38 $$ read.setSelected(varInfo.isReadAccess())[ FD ]
Line_3 $$ final String varName = var.getName()-->Line_52 $$ partOfSearchResults.setSelected(UIUtil.isTarget(varName, matchOptions))[ FD ]
Line_14 $$ if (varInfo == null) -->Line_58 $$ formalArgTypeWithinHierarchy.setSelected(varInfo.isFormalArgTypeWithinHierarchy())[ CD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_66 $$ textConstraintsPanel.setVisible(!contextVar)[ CD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_64 $$ final boolean contextVar = Configuration.CONTEXT_VAR_NAME.equals(var.getName())[ FD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_69 $$ occurencePanel.setVisible(!contextVar)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_20 $$ regexp.getDocument().setText("")[ CD ]
Line_14 $$ if (varInfo == null) -->Line_29 $$ wholeWordsOnly.setSelected(false)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_19 $$ write.setSelected(false)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_38 $$ read.setSelected(varInfo.isReadAccess())[ CD ]
Line_45 $$ if (varInfo.getMaxCount() == Integer.MAX_VALUE) -->Line_50 $$ maxoccurs.setText(Integer.toString(varInfo.getMaxCount()))[ CD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_65 $$ containedInConstraints.setVisible(contextVar)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_24 $$ applyWithinTypeHierarchy.setSelected(false)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_43 $$ notRegexp.setSelected(varInfo.isInvertRegExp())[ CD ]
Line_13 $$ final MatchVariableConstraint varInfo = matchOptions.getVariableConstraint(varName)-->Line_60 $$ restoreScriptCode(varInfo)[ FD ]
Line_14 $$ if (varInfo == null) -->Line_35 $$ invertWithinIn.setSelected(false)[ CD ]
Line_14 $$ if (varInfo == null) -->Line_28 $$ exprTypeWithinHierarchy.setSelected(false)[ CD ]
Line_2 $$ private void copyValuesToUI(Variable var) -->Line_3 $$ final String varName = var.getName()[ CD ]
Line_14 $$ if (varInfo == null) -->Line_60 $$ restoreScriptCode(varInfo)[ CD ]
