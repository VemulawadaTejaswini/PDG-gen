Line_2 $$ protected JComponent createEditor() -->Line_39 $$ group.add(myTracingRb)[ CD ]
Line_42 $$ final CoverageRunner runner = getSelectedRunner()-->Line_43 $$ myTrackPerTestCoverageCb.setEnabled(canHavePerTestCoverage() && myTracingRb.isSelected() && runner != null && runner.isCoverageByTestApplicable())[ FD ]
Line_8 $$ final JavaCoverageEngine provider = javaCoverageEnabledConfiguration.getCoverageProvider()-->Line_10 $$ if (runner.acceptsCoverageEngine(provider)) [ FD ]
Line_4 $$ final DefaultComboBoxModel runnersModel = new DefaultComboBoxModel()-->Line_11 $$ runnersModel.addElement(new CoverageRunnerItem(runner))[ FD ]
Line_9 $$ for (CoverageRunner runner : Extensions.getExtensions(CoverageRunner.EP_NAME)) -->Line_25 $$ myTrackPerTestCoverageCb.setEnabled(myTracingRb.isSelected() && canHavePerTestCoverage() && runner != null && runner.isCoverageByTestApplicable())[ FD ]
Line_2 $$ protected JComponent createEditor() -->Line_61 $$ panel.add(myTrackTestSourcesCb, bagConstraints)[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_65 $$ result.add(myCoverageNotSupportedLabel, gc)[ CD ]
Line_3 $$ JPanel result = new JPanel(new GridBagLayout())-->Line_65 $$ result.add(myCoverageNotSupportedLabel, gc)[ FD ]
Line_2 $$ protected JComponent createEditor() -->Line_55 $$ panel.setBorder(IdeBorderFactory.createTitledBorder(ExecutionBundle.message("record.coverage.filters.title"), false))[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_21 $$ myCoverageRunnerCb.addActionListener(new ActionListener() [ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_3 $$ JPanel result = new JPanel(new GridBagLayout())[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_47 $$ myTracingRb.addActionListener(samplingListener)[ CD ]
Line_9 $$ for (CoverageRunner runner : Extensions.getExtensions(CoverageRunner.EP_NAME)) -->Line_10 $$ if (runner.acceptsCoverageEngine(provider)) [ FD ]
Line_10 $$ if (runner.acceptsCoverageEngine(provider)) -->Line_11 $$ runnersModel.addElement(new CoverageRunnerItem(runner))[ CD ]
Line_14 $$ myCoverageRunnerCb.setRenderer(new ListCellRendererWrapper<CoverageRunnerItem>() -->Line_17 $$ setText(value.getPresentableName())[ FD ]
Line_40 $$ ActionListener samplingListener = new ActionListener() -->Line_42 $$ final CoverageRunner runner = getSelectedRunner()[ CD ]
Line_9 $$ for (CoverageRunner runner : Extensions.getExtensions(CoverageRunner.EP_NAME)) -->Line_24 $$ enableTracingPanel(runner != null && runner.isCoverageByTestApplicable())[ FD ]
Line_2 $$ protected JComponent createEditor() -->Line_49 $$ final JBPanel tracingPanel = JBUI.Panels.simplePanel(myTrackPerTestCoverageCb).withBorder(JBUI.Borders.emptyLeft(15))[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_62 $$ result.add(panel, gc)[ CD ]
Line_3 $$ JPanel result = new JPanel(new GridBagLayout())-->Line_53 $$ result.add(myRunnerPanel, gc)[ FD ]
Line_2 $$ protected JComponent createEditor() -->Line_59 $$ bagConstraints.weighty = 0[ CD ]
Line_23 $$ final CoverageRunner runner = getSelectedRunner()-->Line_24 $$ enableTracingPanel(runner != null && runner.isCoverageByTestApplicable())[ FD ]
Line_2 $$ protected JComponent createEditor() -->Line_8 $$ final JavaCoverageEngine provider = javaCoverageEnabledConfiguration.getCoverageProvider()[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_36 $$ cPanel.add(myTracingRb)[ CD ]
Line_40 $$ ActionListener samplingListener = new ActionListener() -->Line_43 $$ myTrackPerTestCoverageCb.setEnabled(canHavePerTestCoverage() && myTracingRb.isSelected() && runner != null && runner.isCoverageByTestApplicable())[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_53 $$ result.add(myRunnerPanel, gc)[ CD ]
Line_3 $$ JPanel result = new JPanel(new GridBagLayout())-->Line_62 $$ result.add(panel, gc)[ FD ]
Line_2 $$ protected JComponent createEditor() -->Line_64 $$ myCoverageNotSupportedLabel.setIcon(AllIcons.General.WarningDialog)[ CD ]
Line_23 $$ final CoverageRunner runner = getSelectedRunner()-->Line_25 $$ myTrackPerTestCoverageCb.setEnabled(myTracingRb.isSelected() && canHavePerTestCoverage() && runner != null && runner.isCoverageByTestApplicable())[ FD ]
Line_6 $$ final JavaCoverageEnabledConfiguration javaCoverageEnabledConfiguration = JavaCoverageEnabledConfiguration.getFrom(myConfig)-->Line_8 $$ final JavaCoverageEngine provider = javaCoverageEnabledConfiguration.getCoverageProvider()[ FD ]
Line_21 $$ myCoverageRunnerCb.addActionListener(new ActionListener() -->Line_23 $$ final CoverageRunner runner = getSelectedRunner()[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_14 $$ myCoverageRunnerCb.setRenderer(new ListCellRendererWrapper<CoverageRunnerItem>() [ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_7 $$ LOG.assertTrue(javaCoverageEnabledConfiguration != null)[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_6 $$ final JavaCoverageEnabledConfiguration javaCoverageEnabledConfiguration = JavaCoverageEnabledConfiguration.getFrom(myConfig)[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_58 $$ panel.add(myClassFilterEditor, bagConstraints)[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_29 $$ myRunnerPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0))[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_30 $$ myRunnerPanel.add(new JLabel("Choose coverage runner:"), new GridBagConstraints(0, 0, 1, 1, 0, 1, GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 10), 0, 0))[ CD ]
Line_21 $$ myCoverageRunnerCb.addActionListener(new ActionListener() -->Line_24 $$ enableTracingPanel(runner != null && runner.isCoverageByTestApplicable())[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_51 $$ myRunnerPanel.add(cPanel, new GridBagConstraints(0, 1, GridBagConstraints.REMAINDER, 1, 1, 1, GridBagConstraints.WEST, GridBagConstraints.NONE, JBUI.emptyInsets(), 0, 0))[ CD ]
Line_9 $$ for (CoverageRunner runner : Extensions.getExtensions(CoverageRunner.EP_NAME)) -->Line_43 $$ myTrackPerTestCoverageCb.setEnabled(canHavePerTestCoverage() && myTracingRb.isSelected() && runner != null && runner.isCoverageByTestApplicable())[ FD ]
Line_2 $$ protected JComponent createEditor() -->Line_34 $$ cPanel.add(mySamplingRb)[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_4 $$ final DefaultComboBoxModel runnersModel = new DefaultComboBoxModel()[ CD ]
Line_14 $$ myCoverageRunnerCb.setRenderer(new ListCellRendererWrapper<CoverageRunnerItem>() -->Line_16 $$ if (value != null) [ FD ]
Line_14 $$ myCoverageRunnerCb.setRenderer(new ListCellRendererWrapper<CoverageRunnerItem>() -->Line_16 $$ if (value != null) [ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_50 $$ cPanel.add(tracingPanel)[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_31 $$ myRunnerPanel.add(myCoverageRunnerCb, new GridBagConstraints(1, 0, 1, 1, 1, 1, GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0))[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_66 $$ return result[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_46 $$ mySamplingRb.addActionListener(samplingListener)[ CD ]
Line_2 $$ protected JComponent createEditor() -->Line_38 $$ group.add(mySamplingRb)[ CD ]
Line_21 $$ myCoverageRunnerCb.addActionListener(new ActionListener() -->Line_25 $$ myTrackPerTestCoverageCb.setEnabled(myTracingRb.isSelected() && canHavePerTestCoverage() && runner != null && runner.isCoverageByTestApplicable())[ CD ]
Line_16 $$ if (value != null) -->Line_17 $$ setText(value.getPresentableName())[ CD ]
Line_23 $$ final CoverageRunner runner = getSelectedRunner()-->Line_43 $$ myTrackPerTestCoverageCb.setEnabled(canHavePerTestCoverage() && myTracingRb.isSelected() && runner != null && runner.isCoverageByTestApplicable())[ FD ]
