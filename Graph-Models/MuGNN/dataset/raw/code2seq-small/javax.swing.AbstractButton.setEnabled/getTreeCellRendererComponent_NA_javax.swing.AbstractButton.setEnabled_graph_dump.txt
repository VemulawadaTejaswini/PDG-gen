Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_21 $$ myCheckbox.setBackground(null)[ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_20 $$ myCheckbox.setOpaque(false)[ CD ]
Line_4 $$ final VirtualFile file = getFile(value)-->Line_23 $$ myTextRenderer.getListCellRendererComponent(myFictive, file, 0, selected, hasFocus)[ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_3 $$ invalidate()[ CD ]
Line_4 $$ final VirtualFile file = getFile(value)-->Line_6 $$ if (file == null) [ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_4 $$ final VirtualFile file = getFile(value)[ FD ]
Line_9 $$ if (uo instanceof String) -->Line_10 $$ myColoredRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus)[ CD ]
Line_7 $$ if (value instanceof DefaultMutableTreeNode) -->Line_8 $$ final Object uo = node.getUserObject()[ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_25 $$ return this[ CD ]
Line_6 $$ if (file == null) -->Line_7 $$ if (value instanceof DefaultMutableTreeNode) [ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_24 $$ revalidate()[ CD ]
Line_7 $$ if (value instanceof DefaultMutableTreeNode) -->Line_9 $$ if (uo instanceof String) [ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_17 $$ final TreeNodeState state = mySelectionManager.getState(node)[ CD ]
Line_17 $$ final TreeNodeState state = mySelectionManager.getState(node)-->Line_19 $$ myCheckbox.setSelected(!TreeNodeState.CLEAR.equals(state))[ FD ]
Line_5 $$ final DefaultMutableTreeNode node = (DefaultMutableTreeNode) value-->Line_17 $$ final TreeNodeState state = mySelectionManager.getState(node)[ FD ]
Line_17 $$ final TreeNodeState state = mySelectionManager.getState(node)-->Line_18 $$ myCheckbox.setEnabled(TreeNodeState.CLEAR.equals(state) || TreeNodeState.SELECTED.equals(state))[ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_18 $$ myCheckbox.setEnabled(TreeNodeState.CLEAR.equals(state) || TreeNodeState.SELECTED.equals(state))[ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_22 $$ setBackground(null)[ CD ]
Line_6 $$ if (file == null) -->Line_14 $$ return myEmpty[ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_10 $$ myColoredRenderer.getTreeCellRendererComponent(tree, value, selected, expanded, leaf, row, hasFocus)[ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_4 $$ final VirtualFile file = getFile(value)[ CD ]
Line_8 $$ final Object uo = node.getUserObject()-->Line_9 $$ if (uo instanceof String) [ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_19 $$ myCheckbox.setSelected(!TreeNodeState.CLEAR.equals(state))[ CD ]
Line_9 $$ if (uo instanceof String) -->Line_11 $$ return myColoredRenderer[ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_7 $$ if (value instanceof DefaultMutableTreeNode) [ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_16 $$ myCheckbox.setVisible(true)[ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_6 $$ if (file == null) [ CD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_5 $$ final DefaultMutableTreeNode node = (DefaultMutableTreeNode) value[ CD ]
Line_5 $$ final DefaultMutableTreeNode node = (DefaultMutableTreeNode) value-->Line_8 $$ final Object uo = node.getUserObject()[ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_23 $$ myTextRenderer.getListCellRendererComponent(myFictive, file, 0, selected, hasFocus)[ FD ]
Line_2 $$ public Component getTreeCellRendererComponent(JTree tree, Object value, boolean selected, boolean expanded, boolean leaf, int row, boolean hasFocus) -->Line_23 $$ myTextRenderer.getListCellRendererComponent(myFictive, file, 0, selected, hasFocus)[ CD ]
