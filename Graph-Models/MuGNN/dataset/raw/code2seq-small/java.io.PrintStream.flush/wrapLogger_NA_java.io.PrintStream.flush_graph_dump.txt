Line_156 $$ if (isAsyncAppender())-->Line_157 $$ original.print(d)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_221 $$ original.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_165 $$ original.println(s)[ FD ]
Line_204 $$ if (isAsyncAppender())-->Line_207 $$ super.println(v)[ CD ]
Line_268 $$ if (isAsyncAppender())-->Line_271 $$ return super.printf(format, args)[ CD ]
Line_108 $$ if (isAsyncAppender())-->Line_111 $$ super.write(buf, off, len)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_255 $$ super.println(v)[ FD ]
Line_188 $$ if (isAsyncAppender())-->Line_189 $$ original.println()[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_207 $$ super.println(v)[ FD ]
Line_316 $$ if (isAsyncAppender())-->Line_319 $$ return super.append(c)[ CD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_20 $$ write(b, 0, b.length)[ CD ]
Line_124 $$ if (isAsyncAppender())-->Line_127 $$ super.print(c)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_317 $$ return original.append(c)[ FD ]
Line_244 $$ if (isAsyncAppender())-->Line_245 $$ original.println(v)[ CD ]
Line_46 $$ if (error)-->Line_47 $$ logger.error(statement)[ CD ]
Line_292 $$ if (isAsyncAppender())-->Line_293 $$ return original.format(l, format, args)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_149 $$ original.print(f)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_127 $$ super.print(c)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_157 $$ original.print(d)[ FD ]
Line_196 $$ if (isAsyncAppender())-->Line_199 $$ super.println(v)[ CD ]
Line_55 $$ if (encoding != null)-->Line_56 $$ return new PrintStream(os, true, encoding)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_175 $$ super.print(s)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_215 $$ super.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_49 $$ logger.info(statement)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_277 $$ return original.printf(l, format, args)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_309 $$ return original.append(csq, start, end)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_111 $$ super.write(buf, off, len)[ FD ]
Line_164 $$ if (isAsyncAppender())-->Line_167 $$ super.print(s)[ CD ]
Line_300 $$ if (isAsyncAppender())-->Line_301 $$ return original.append(csq)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_173 $$ original.print(s)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_79 $$ return Thread.currentThread().getId() == asyncAppenderThreadId[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_3 $$ final String encoding = System.getProperty(encodingProperty)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_141 $$ original.print(l)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_277 $$ return original.printf(l, format, args)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_116 $$ if (isAsyncAppender())[ CD ]
Line_92 $$ if (isAsyncAppender())-->Line_95 $$ super.flush()[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_47 $$ logger.error(statement)[ FD ]
Line_92 $$ if (isAsyncAppender())-->Line_93 $$ original.close()[ CD ]
Line_260 $$ if (isAsyncAppender())-->Line_261 $$ original.println(v)[ CD ]
Line_236 $$ if (isAsyncAppender())-->Line_239 $$ super.println(v)[ CD ]
Line_42 $$ if (encoding != null)-->Line_45 $$ statement = new String(baos.toByteArray())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_221 $$ original.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_109 $$ original.write(buf, off, len)[ FD ]
Line_100 $$ if (isAsyncAppender())-->Line_103 $$ super.write(b)[ CD ]
Line_3 $$ final String encoding = System.getProperty(encodingProperty)-->Line_42 $$ if (encoding != null)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_57 $$ return new PrintStream(os, true) [ CD ]
Line_45 $$ statement = new String(baos.toByteArray())-->Line_49 $$ logger.info(statement)[ FD ]
Line_116 $$ if (isAsyncAppender())-->Line_117 $$ original.print(b)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_149 $$ original.print(f)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_223 $$ super.println(v)[ FD ]
Line_276 $$ if (isAsyncAppender())-->Line_279 $$ return super.printf(l, format, args)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_287 $$ return super.format(format, args)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_205 $$ original.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_237 $$ original.println(v)[ FD ]
Line_252 $$ if (isAsyncAppender())-->Line_253 $$ original.println(v)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_253 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_125 $$ original.print(c)[ FD ]
Line_41 $$ String statement-->Line_43 $$ statement = new String(baos.toByteArray(), encoding)[ FD ]
Line_76 $$ asyncAppenderThreadId = Thread.currentThread().getName().equals("AsyncAppender-Worker-ASYNC") ? Thread.currentThread().getId() : asyncAppenderThreadId-->Line_77 $$ if (Thread.currentThread().getId() == asyncAppenderThreadId)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_199 $$ super.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_117 $$ original.print(b)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_117 $$ original.print(b)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_119 $$ super.print(b)[ FD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_119 $$ super.print(b)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_189 $$ original.println()[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_101 $$ original.write(b)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_237 $$ original.println(v)[ FD ]
Line_236 $$ if (isAsyncAppender())-->Line_237 $$ original.println(v)[ CD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_15 $$ baos.write(b, offset, length)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_173 $$ original.print(s)[ FD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_10 $$ baos.write(b)[ CD ]
Line_43 $$ statement = new String(baos.toByteArray(), encoding)-->Line_49 $$ logger.info(statement)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_319 $$ return super.append(c)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_181 $$ original.print(obj)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_247 $$ super.println(v)[ FD ]
Line_308 $$ if (isAsyncAppender())-->Line_311 $$ return super.append(csq, start, end)[ CD ]
Line_32 $$ if (bytes[0] == 0xA)-->Line_33 $$ return[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_239 $$ super.println(v)[ FD ]
Line_276 $$ if (isAsyncAppender())-->Line_277 $$ return original.printf(l, format, args)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_231 $$ super.println(v)[ FD ]
Line_132 $$ if (isAsyncAppender())-->Line_133 $$ original.print(i)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_309 $$ return original.append(csq, start, end)[ FD ]
Line_220 $$ if (isAsyncAppender())-->Line_223 $$ super.println(v)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_220 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_269 $$ return original.printf(format, args)[ FD ]
Line_212 $$ if (isAsyncAppender())-->Line_215 $$ super.println(v)[ CD ]
Line_228 $$ if (isAsyncAppender())-->Line_229 $$ original.println(v)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_164 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_317 $$ return original.append(c)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_3 $$ final String encoding = System.getProperty(encodingProperty)[ FD ]
Line_43 $$ statement = new String(baos.toByteArray(), encoding)-->Line_47 $$ logger.error(statement)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_188 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_213 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_252 $$ if (isAsyncAppender())[ CD ]
Line_38 $$ if (bytes[0] == 0xD && bytes[1] == 0xA)-->Line_39 $$ return[ CD ]
Line_41 $$ String statement-->Line_49 $$ logger.info(statement)[ FD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_101 $$ original.write(b)[ FD ]
Line_43 $$ statement = new String(baos.toByteArray(), encoding)-->Line_45 $$ statement = new String(baos.toByteArray())[ FD ]
Line_156 $$ if (isAsyncAppender())-->Line_159 $$ super.print(d)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_260 $$ if (isAsyncAppender())[ CD ]
Line_124 $$ if (isAsyncAppender())-->Line_125 $$ original.print(c)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_100 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_124 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_133 $$ original.print(i)[ FD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_15 $$ baos.write(b, offset, length)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_197 $$ original.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_229 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_271 $$ return super.printf(format, args)[ FD ]
Line_41 $$ String statement-->Line_45 $$ statement = new String(baos.toByteArray())[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_229 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_156 $$ if (isAsyncAppender())[ CD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_103 $$ super.write(b)[ FD ]
Line_108 $$ if (isAsyncAppender())-->Line_109 $$ original.write(buf, off, len)[ CD ]
Line_228 $$ if (isAsyncAppender())-->Line_231 $$ super.println(v)[ CD ]
Line_292 $$ if (isAsyncAppender())-->Line_295 $$ return super.format(l, format, args)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_245 $$ original.println(v)[ FD ]
Line_204 $$ if (isAsyncAppender())-->Line_205 $$ original.println(v)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_213 $$ original.println(v)[ FD ]
Line_3 $$ final String encoding = System.getProperty(encodingProperty)-->Line_55 $$ if (encoding != null)[ FD ]
Line_220 $$ if (isAsyncAppender())-->Line_221 $$ original.println(v)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_172 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_140 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_253 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_236 $$ if (isAsyncAppender())[ CD ]
Line_172 $$ if (isAsyncAppender())-->Line_173 $$ original.print(s)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_141 $$ original.print(l)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_308 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_295 $$ return super.format(l, format, args)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_183 $$ super.print(obj)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_78 $$ original.println("Was in async appender")[ FD ]
Line_180 $$ if (isAsyncAppender())-->Line_181 $$ original.print(obj)[ CD ]
Line_260 $$ if (isAsyncAppender())-->Line_263 $$ super.println(v)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_55 $$ if (encoding != null)[ CD ]
Line_164 $$ if (isAsyncAppender())-->Line_165 $$ original.println(s)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_196 $$ if (isAsyncAppender())[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_125 $$ original.print(c)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_316 $$ if (isAsyncAppender())[ CD ]
Line_116 $$ if (isAsyncAppender())-->Line_119 $$ super.print(b)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_167 $$ super.print(s)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_303 $$ return super.append(csq)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_284 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_103 $$ super.write(b)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_204 $$ if (isAsyncAppender())[ CD ]
Line_300 $$ if (isAsyncAppender())-->Line_303 $$ return super.append(csq)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_77 $$ if (Thread.currentThread().getId() == asyncAppenderThreadId)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_293 $$ return original.format(l, format, args)[ FD ]
Line_41 $$ String statement-->Line_47 $$ logger.error(statement)[ FD ]
Line_212 $$ if (isAsyncAppender())-->Line_213 $$ original.println(v)[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_85 $$ original.flush()[ FD ]
Line_42 $$ if (encoding != null)-->Line_43 $$ statement = new String(baos.toByteArray(), encoding)[ CD ]
Line_84 $$ if (isAsyncAppender())-->Line_87 $$ super.flush()[ CD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_117 $$ original.print(b)[ FD ]
Line_132 $$ if (isAsyncAppender())-->Line_135 $$ super.print(i)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_84 $$ if (isAsyncAppender())[ CD ]
Line_148 $$ if (isAsyncAppender())-->Line_151 $$ super.print(f)[ CD ]
Line_46 $$ if (error)-->Line_49 $$ logger.info(statement)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_108 $$ if (isAsyncAppender())[ CD ]
Line_196 $$ if (isAsyncAppender())-->Line_197 $$ original.println(v)[ CD ]
Line_316 $$ if (isAsyncAppender())-->Line_317 $$ return original.append(c)[ CD ]
Line_180 $$ if (isAsyncAppender())-->Line_183 $$ super.print(obj)[ CD ]
Line_100 $$ if (isAsyncAppender())-->Line_101 $$ original.write(b)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_244 $$ if (isAsyncAppender())[ CD ]
Line_188 $$ if (isAsyncAppender())-->Line_191 $$ super.println()[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_261 $$ original.println(v)[ FD ]
Line_268 $$ if (isAsyncAppender())-->Line_269 $$ return original.printf(format, args)[ CD ]
Line_84 $$ if (isAsyncAppender())-->Line_85 $$ original.flush()[ CD ]
Line_284 $$ if (isAsyncAppender())-->Line_287 $$ return super.format(format, args)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_293 $$ return original.format(l, format, args)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_292 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_180 $$ if (isAsyncAppender())[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_181 $$ original.print(obj)[ FD ]
Line_148 $$ if (isAsyncAppender())-->Line_149 $$ original.print(f)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_212 $$ if (isAsyncAppender())[ CD ]
Line_140 $$ if (isAsyncAppender())-->Line_143 $$ super.print(l)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_148 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_159 $$ super.print(d)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_301 $$ return original.append(csq)[ FD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_10 $$ baos.write(b)[ FD ]
Line_252 $$ if (isAsyncAppender())-->Line_255 $$ super.println(v)[ CD ]
Line_172 $$ if (isAsyncAppender())-->Line_175 $$ super.print(s)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_109 $$ original.write(buf, off, len)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_245 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_143 $$ super.print(l)[ FD ]
Line_4 $$ OutputStream os = new OutputStream() -->Line_20 $$ write(b, 0, b.length)[ FD ]
Line_77 $$ if (Thread.currentThread().getId() == asyncAppenderThreadId)-->Line_78 $$ original.println("Was in async appender")[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_157 $$ original.print(d)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_197 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_205 $$ original.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_285 $$ return original.format(format, args)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_93 $$ original.close()[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_276 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_101 $$ original.write(b)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_311 $$ return super.append(csq, start, end)[ FD ]
Line_140 $$ if (isAsyncAppender())-->Line_141 $$ original.print(l)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_92 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_263 $$ super.println(v)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_269 $$ return original.printf(format, args)[ FD ]
Line_284 $$ if (isAsyncAppender())-->Line_285 $$ return original.format(format, args)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_151 $$ super.print(f)[ FD ]
Line_244 $$ if (isAsyncAppender())-->Line_247 $$ super.println(v)[ CD ]
Line_45 $$ statement = new String(baos.toByteArray())-->Line_47 $$ logger.error(statement)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_261 $$ original.println(v)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_268 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_279 $$ return super.printf(l, format, args)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_285 $$ return original.format(format, args)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_132 $$ if (isAsyncAppender())[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_301 $$ return original.append(csq)[ FD ]
Line_308 $$ if (isAsyncAppender())-->Line_309 $$ return original.append(csq, start, end)[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_300 $$ if (isAsyncAppender())[ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_135 $$ super.print(i)[ FD ]
Line_57 $$ return new PrintStream(os, true) -->Line_228 $$ if (isAsyncAppender())[ CD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_4 $$ OutputStream os = new OutputStream() [ CD ]
Line_57 $$ return new PrintStream(os, true) -->Line_165 $$ original.println(s)[ FD ]
Line_2 $$ private static PrintStream wrapLogger(final Logger logger, final PrintStream original, String encodingProperty, boolean error) throws Exception -->Line_133 $$ original.print(i)[ FD ]
