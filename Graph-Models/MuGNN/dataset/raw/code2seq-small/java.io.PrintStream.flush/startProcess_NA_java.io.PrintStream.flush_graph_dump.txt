Line_5 $$ Thread t = new Thread(new Runnable() -->Line_22 $$ if (line.contains("warning") || line.contains("error")) [ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_63 $$ Matcher matcher = pattern.matcher(line)[ CD ]
Line_65 $$ String fileName = matcher.groupCount() >= 2 ? matcher.group(1).trim() : null-->Line_69 $$ if (index != -1)[ FD ]
Line_68 $$ int index = fileName.indexOf(" ")-->Line_69 $$ if (index != -1)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_79 $$ return matcher.groupCount() >= 1 ? matcher.group(1).trim() : null[ CD ]
Line_10 $$ String line = null-->Line_57 $$ System.out.println(line)[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_57 $$ System.out.println(line)[ FD ]
Line_83 $$ Pattern pattern = Pattern.compile(":([0-9]+):[0-9]+:")-->Line_84 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_10 $$ String line = null-->Line_84 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_78 $$ matcher.find()[ CD ]
Line_62 $$ Pattern pattern = Pattern.compile("(.*):([0-9])+:[0-9]+:")-->Line_63 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_10 $$ String line = null-->Line_37 $$ if (line.contains("warning")) [ FD ]
Line_63 $$ Matcher matcher = pattern.matcher(line)-->Line_64 $$ matcher.find()[ FD ]
Line_28 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_30 $$ String[] content = file.readString().split("\n")[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_37 $$ if (line.contains("warning")) [ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_57 $$ System.out.println(line)[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_37 $$ if (line.contains("warning")) [ FD ]
Line_69 $$ if (index != -1)-->Line_72 $$ return fileName[ CD ]
Line_84 $$ Matcher matcher = pattern.matcher(line)-->Line_85 $$ matcher.find()[ FD ]
Line_4 $$ final Process process = new ProcessBuilder(command.split(" ")).redirectErrorStream(true).start()-->Line_9 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_77 $$ Matcher matcher = pattern.matcher(line)[ CD ]
Line_37 $$ if (line.contains("warning")) -->Line_38 $$ System.out.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_49 $$ System.out.println(line)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_90 $$ t.start()[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_22 $$ if (line.contains("warning") || line.contains("error")) [ FD ]
Line_62 $$ Pattern pattern = Pattern.compile("(.*):([0-9])+:[0-9]+:")-->Line_84 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_62 $$ Pattern pattern = Pattern.compile("(.*):([0-9])+:[0-9]+:")-->Line_77 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_10 $$ String line = null-->Line_22 $$ if (line.contains("warning") || line.contains("error")) [ FD ]
Line_28 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_38 $$ System.out.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ FD ]
Line_4 $$ final Process process = new ProcessBuilder(command.split(" ")).redirectErrorStream(true).start()-->Line_91 $$ process.waitFor()[ FD ]
Line_34 $$ if (contentLine.startsWith("//@line:")) -->Line_37 $$ if (line.contains("warning")) [ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_89 $$ t.setDaemon(true)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_68 $$ int index = fileName.indexOf(" ")[ CD ]
Line_10 $$ String line = null-->Line_77 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_86 $$ return matcher.groupCount() >= 1 ? Integer.parseInt(matcher.group(1)) : -1[ CD ]
Line_76 $$ Pattern pattern = Pattern.compile(":[0-9]+:[0-9]+:(.+)")-->Line_77 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_10 $$ String line = null-->Line_63 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_84 $$ Matcher matcher = pattern.matcher(line)[ CD ]
Line_10 $$ String line = null-->Line_24 $$ String fileName = getFileName(line)[ FD ]
Line_4 $$ final Process process = new ProcessBuilder(command.split(" ")).redirectErrorStream(true).start()-->Line_92 $$ return process.exitValue() == 0[ FD ]
Line_10 $$ String line = null-->Line_12 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_83 $$ Pattern pattern = Pattern.compile(":([0-9]+):[0-9]+:")[ CD ]
Line_31 $$ if (lineNumber < content.length) -->Line_32 $$ for (int i = lineNumber; i >= 0; i--) [ CD ]
Line_9 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))-->Line_12 $$ while ((line = reader.readLine()) != null) [ FD ]
Line_32 $$ for (int i = lineNumber; i >= 0; i--) -->Line_33 $$ String contentLine = content[i][ CD ]
Line_34 $$ if (contentLine.startsWith("//@line:")) -->Line_44 $$ return[ CD ]
Line_63 $$ Matcher matcher = pattern.matcher(line)-->Line_78 $$ matcher.find()[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_24 $$ String fileName = getFileName(line)[ FD ]
Line_77 $$ Matcher matcher = pattern.matcher(line)-->Line_79 $$ return matcher.groupCount() >= 1 ? matcher.group(1).trim() : null[ FD ]
Line_27 $$ if (fileName != null && lineNumber >= 0) -->Line_29 $$ if (file.exists()) [ CD ]
Line_37 $$ if (line.contains("warning")) -->Line_39 $$ System.out.flush()[ CD ]
Line_65 $$ String fileName = matcher.groupCount() >= 2 ? matcher.group(1).trim() : null-->Line_68 $$ int index = fileName.indexOf(" ")[ FD ]
Line_10 $$ String line = null-->Line_26 $$ int lineNumber = getLineNumber(line) - 1[ FD ]
Line_24 $$ String fileName = getFileName(line)-->Line_69 $$ if (index != -1)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_62 $$ Pattern pattern = Pattern.compile("(.*):([0-9])+:[0-9]+:")[ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_53 $$ System.out.println(line)[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_63 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_10 $$ String line = null-->Line_25 $$ String error = getError(line)[ FD ]
Line_69 $$ if (index != -1)-->Line_70 $$ return fileName.substring(index).trim()[ CD ]
Line_63 $$ Matcher matcher = pattern.matcher(line)-->Line_65 $$ String fileName = matcher.groupCount() >= 2 ? matcher.group(1).trim() : null[ FD ]
Line_77 $$ Matcher matcher = pattern.matcher(line)-->Line_86 $$ return matcher.groupCount() >= 1 ? Integer.parseInt(matcher.group(1)) : -1[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_63 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_84 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_64 $$ matcher.find()[ CD ]
Line_28 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_29 $$ if (file.exists()) [ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_69 $$ if (index != -1)[ CD ]
Line_66 $$ if (fileName == null)-->Line_67 $$ return null[ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_84 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_22 $$ if (line.contains("warning") || line.contains("error")) -->Line_57 $$ System.out.println(line)[ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_26 $$ int lineNumber = getLineNumber(line) - 1[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_49 $$ System.out.println(line)[ FD ]
Line_10 $$ String line = null-->Line_53 $$ System.out.println(line)[ FD ]
Line_76 $$ Pattern pattern = Pattern.compile(":[0-9]+:[0-9]+:(.+)")-->Line_84 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_34 $$ if (contentLine.startsWith("//@line:")) -->Line_35 $$ int javaLineNumber = Integer.parseInt(contentLine.split(":")[1].trim())[ CD ]
Line_77 $$ Matcher matcher = pattern.matcher(line)-->Line_85 $$ matcher.find()[ FD ]
Line_24 $$ String fileName = getFileName(line)-->Line_70 $$ return fileName.substring(index).trim()[ FD ]
Line_29 $$ if (file.exists()) -->Line_30 $$ String[] content = file.readString().split("\n")[ CD ]
Line_34 $$ if (contentLine.startsWith("//@line:")) -->Line_36 $$ System.out.flush()[ CD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_24 $$ String fileName = getFileName(line)[ FD ]
Line_2 $$ private static boolean startProcess(String command, File directory) -->Line_4 $$ final Process process = new ProcessBuilder(command.split(" ")).redirectErrorStream(true).start()[ FD ]
Line_33 $$ String contentLine = content[i]-->Line_34 $$ if (contentLine.startsWith("//@line:")) [ FD ]
Line_68 $$ int index = fileName.indexOf(" ")-->Line_70 $$ return fileName.substring(index).trim()[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_26 $$ int lineNumber = getLineNumber(line) - 1[ FD ]
Line_24 $$ String fileName = getFileName(line)-->Line_66 $$ if (fileName == null)[ FD ]
Line_28 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_41 $$ System.err.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ FD ]
Line_63 $$ Matcher matcher = pattern.matcher(line)-->Line_85 $$ matcher.find()[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_10 $$ String line = null[ CD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_22 $$ if (line.contains("warning") || line.contains("error")) [ FD ]
Line_65 $$ String fileName = matcher.groupCount() >= 2 ? matcher.group(1).trim() : null-->Line_70 $$ return fileName.substring(index).trim()[ FD ]
Line_29 $$ if (file.exists()) -->Line_49 $$ System.out.println(line)[ CD ]
Line_63 $$ Matcher matcher = pattern.matcher(line)-->Line_79 $$ return matcher.groupCount() >= 1 ? matcher.group(1).trim() : null[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_77 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_84 $$ Matcher matcher = pattern.matcher(line)-->Line_86 $$ return matcher.groupCount() >= 1 ? Integer.parseInt(matcher.group(1)) : -1[ FD ]
Line_63 $$ Matcher matcher = pattern.matcher(line)-->Line_86 $$ return matcher.groupCount() >= 1 ? Integer.parseInt(matcher.group(1)) : -1[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_25 $$ String error = getError(line)[ FD ]
Line_32 $$ for (int i = lineNumber; i >= 0; i--) -->Line_34 $$ if (contentLine.startsWith("//@line:")) [ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_77 $$ Matcher matcher = pattern.matcher(line)[ FD ]
Line_33 $$ String contentLine = content[i]-->Line_35 $$ int javaLineNumber = Integer.parseInt(contentLine.split(":")[1].trim())[ FD ]
Line_24 $$ String fileName = getFileName(line)-->Line_68 $$ int index = fileName.indexOf(" ")[ FD ]
Line_65 $$ String fileName = matcher.groupCount() >= 2 ? matcher.group(1).trim() : null-->Line_66 $$ if (fileName == null)[ FD ]
Line_10 $$ String line = null-->Line_49 $$ System.out.println(line)[ FD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_25 $$ String error = getError(line)[ FD ]
Line_77 $$ Matcher matcher = pattern.matcher(line)-->Line_78 $$ matcher.find()[ FD ]
Line_29 $$ if (file.exists()) -->Line_31 $$ if (lineNumber < content.length) [ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_85 $$ matcher.find()[ CD ]
Line_37 $$ if (line.contains("warning")) -->Line_41 $$ System.err.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ CD ]
Line_26 $$ int lineNumber = getLineNumber(line) - 1-->Line_31 $$ if (lineNumber < content.length) [ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_65 $$ String fileName = matcher.groupCount() >= 2 ? matcher.group(1).trim() : null[ CD ]
Line_12 $$ while ((line = reader.readLine()) != null) -->Line_53 $$ System.out.println(line)[ FD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_9 $$ BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()))[ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_76 $$ Pattern pattern = Pattern.compile(":[0-9]+:[0-9]+:(.+)")[ CD ]
Line_27 $$ if (fileName != null && lineNumber >= 0) -->Line_28 $$ FileDescriptor file = new FileDescriptor(fileName)[ CD ]
Line_37 $$ if (line.contains("warning")) -->Line_42 $$ System.err.flush()[ CD ]
Line_5 $$ Thread t = new Thread(new Runnable() -->Line_66 $$ if (fileName == null)[ CD ]
