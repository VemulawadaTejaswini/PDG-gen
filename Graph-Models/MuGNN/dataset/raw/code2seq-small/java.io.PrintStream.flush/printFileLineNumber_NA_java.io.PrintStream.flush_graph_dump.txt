Line_15 $$ if (contentLine.startsWith("//@line:")) -->Line_17 $$ System.out.flush()[ CD ]
Line_18 $$ if (line.contains("warning")) -->Line_19 $$ System.out.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ CD ]
Line_10 $$ if (file.exists()) -->Line_30 $$ System.out.println(line)[ CD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_34 $$ System.out.println(line)[ FD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_30 $$ System.out.println(line)[ FD ]
Line_12 $$ if (lineNumber < content.length) -->Line_13 $$ for (int i = lineNumber; i >= 0; i--) [ CD ]
Line_18 $$ if (line.contains("warning")) -->Line_23 $$ System.err.flush()[ CD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_6 $$ String error = getError(line)[ FD ]
Line_8 $$ if (fileName != null && lineNumber >= 0) -->Line_9 $$ FileDescriptor file = new FileDescriptor(fileName)[ CD ]
Line_15 $$ if (contentLine.startsWith("//@line:")) -->Line_18 $$ if (line.contains("warning")) [ CD ]
Line_18 $$ if (line.contains("warning")) -->Line_22 $$ System.err.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ CD ]
Line_10 $$ if (file.exists()) -->Line_11 $$ String[] content = file.readString().split("\n")[ CD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_3 $$ if (line.contains("warning") || line.contains("error")) [ FD ]
Line_9 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_19 $$ System.out.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ FD ]
Line_18 $$ if (line.contains("warning")) -->Line_20 $$ System.out.flush()[ CD ]
Line_9 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_11 $$ String[] content = file.readString().split("\n")[ FD ]
Line_9 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_22 $$ System.err.println("(" + file.nameWithoutExtension() + ".java:" + (javaLineNumber + (lineNumber - i) - 1) + "): " + error + ", original: " + line)[ FD ]
Line_14 $$ String contentLine = content[i]-->Line_15 $$ if (contentLine.startsWith("//@line:")) [ FD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_3 $$ if (line.contains("warning") || line.contains("error")) [ CD ]
Line_14 $$ String contentLine = content[i]-->Line_16 $$ int javaLineNumber = Integer.parseInt(contentLine.split(":")[1].trim())[ FD ]
Line_8 $$ if (fileName != null && lineNumber >= 0) -->Line_10 $$ if (file.exists()) [ CD ]
Line_9 $$ FileDescriptor file = new FileDescriptor(fileName)-->Line_10 $$ if (file.exists()) [ FD ]
Line_10 $$ if (file.exists()) -->Line_12 $$ if (lineNumber < content.length) [ CD ]
Line_15 $$ if (contentLine.startsWith("//@line:")) -->Line_16 $$ int javaLineNumber = Integer.parseInt(contentLine.split(":")[1].trim())[ CD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_7 $$ int lineNumber = getLineNumber(line) - 1[ FD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_5 $$ String fileName = getFileName(line)[ FD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_18 $$ if (line.contains("warning")) [ FD ]
Line_2 $$ private void printFileLineNumber(String line) -->Line_38 $$ System.out.println(line)[ FD ]
Line_13 $$ for (int i = lineNumber; i >= 0; i--) -->Line_14 $$ String contentLine = content[i][ CD ]
Line_15 $$ if (contentLine.startsWith("//@line:")) -->Line_25 $$ return[ CD ]
Line_3 $$ if (line.contains("warning") || line.contains("error")) -->Line_38 $$ System.out.println(line)[ CD ]
Line_13 $$ for (int i = lineNumber; i >= 0; i--) -->Line_15 $$ if (contentLine.startsWith("//@line:")) [ CD ]
Line_7 $$ int lineNumber = getLineNumber(line) - 1-->Line_12 $$ if (lineNumber < content.length) [ FD ]
