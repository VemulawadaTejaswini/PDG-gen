Line_10 $$ CliTool.ExitStatus status = bootstrapCLIParser.execute(args)-->Line_12 $$ exit(status.status())[ FD ]
Line_37 $$ if (!foreground) -->Line_39 $$ closeSystOut()[ CD ]
Line_28 $$ ESLogger logger = Loggers.getLogger(Bootstrap.class)-->Line_67 $$ logger.error("Exception", e)[ FD ]
Line_21 $$ Settings settings = environment.settings()-->Line_22 $$ setupLogging(settings, environment)[ FD ]
Line_20 $$ Environment environment = initialSettings(foreground)-->Line_21 $$ Settings settings = environment.settings()[ FD ]
Line_15 $$ boolean foreground = !"false".equals(System.getProperty("es.foreground", System.getProperty("es-foreground")))-->Line_45 $$ if (!foreground) [ FD ]
Line_37 $$ if (!foreground) -->Line_38 $$ Loggers.disableConsoleLogging()[ CD ]
Line_58 $$ if (e instanceof CreationException) -->Line_61 $$ PrintStream ps = new PrintStream(os, false, "UTF-8")[ CD ]
Line_58 $$ if (e instanceof CreationException) -->Line_62 $$ new StartupError(e).printStackTrace(ps)[ CD ]
Line_28 $$ ESLogger logger = Loggers.getLogger(Bootstrap.class)-->Line_34 $$ logger.warn("jvm uses the client vm, make sure to run `java` with the server vm for best performance by adding `-server` to the command line")[ FD ]
Line_18 $$ foreground = false-->Line_37 $$ if (!foreground) [ FD ]
Line_15 $$ boolean foreground = !"false".equals(System.getProperty("es.foreground", System.getProperty("es-foreground")))-->Line_20 $$ Environment environment = initialSettings(foreground)[ FD ]
Line_28 $$ ESLogger logger = Loggers.getLogger(Bootstrap.class)-->Line_29 $$ logger.info("max_open_files [[ FD ]
Line_20 $$ Environment environment = initialSettings(foreground)-->Line_25 $$ PidFile.create(environment.pidFile(), true)[ FD ]
Line_61 $$ PrintStream ps = new PrintStream(os, false, "UTF-8")-->Line_62 $$ new StartupError(e).printStackTrace(ps)[ FD ]
Line_55 $$ logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("name"))-->Line_64 $$ logger.error("Guice Exception: [ FD ]
Line_20 $$ Environment environment = initialSettings(foreground)-->Line_22 $$ setupLogging(settings, environment)[ FD ]
Line_20 $$ Environment environment = initialSettings(foreground)-->Line_24 $$ if (environment.pidFile() != null) [ FD ]
Line_55 $$ logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("name"))-->Line_67 $$ logger.error("Exception", e)[ FD ]
Line_9 $$ BootstrapCLIParser bootstrapCLIParser = new BootstrapCLIParser()-->Line_10 $$ CliTool.ExitStatus status = bootstrapCLIParser.execute(args)[ FD ]
Line_54 $$ if (INSTANCE.node != null) -->Line_55 $$ logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("name"))[ CD ]
Line_28 $$ ESLogger logger = Loggers.getLogger(Bootstrap.class)-->Line_55 $$ logger = Loggers.getLogger(Bootstrap.class, INSTANCE.node.settings().get("name"))[ FD ]
Line_11 $$ if (CliTool.ExitStatus.OK != status) -->Line_12 $$ exit(status.status())[ CD ]
Line_24 $$ if (environment.pidFile() != null) -->Line_25 $$ PidFile.create(environment.pidFile(), true)[ CD ]
Line_18 $$ foreground = false-->Line_20 $$ Environment environment = initialSettings(foreground)[ FD ]
Line_15 $$ boolean foreground = !"false".equals(System.getProperty("es.foreground", System.getProperty("es-foreground")))-->Line_37 $$ if (!foreground) [ FD ]
Line_27 $$ if (System.getProperty("es.max-open-files", "false").equals("true")) -->Line_29 $$ logger.info("max_open_files [[ CD ]
Line_61 $$ PrintStream ps = new PrintStream(os, false, "UTF-8")-->Line_63 $$ ps.flush()[ FD ]
Line_28 $$ ESLogger logger = Loggers.getLogger(Bootstrap.class)-->Line_64 $$ logger.error("Guice Exception: [ FD ]
Line_45 $$ if (!foreground) -->Line_46 $$ closeSysError()[ CD ]
Line_70 $$ if (foreground) -->Line_71 $$ Loggers.enableConsoleLogging()[ CD ]
Line_20 $$ Environment environment = initialSettings(foreground)-->Line_43 $$ INSTANCE.setup(true, settings, environment)[ FD ]
Line_58 $$ if (e instanceof CreationException) -->Line_63 $$ ps.flush()[ CD ]
Line_60 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()-->Line_64 $$ logger.error("Guice Exception: [ FD ]
Line_58 $$ if (e instanceof CreationException) -->Line_60 $$ ByteArrayOutputStream os = new ByteArrayOutputStream()[ CD ]
Line_27 $$ if (System.getProperty("es.max-open-files", "false").equals("true")) -->Line_28 $$ ESLogger logger = Loggers.getLogger(Bootstrap.class)[ CD ]
Line_10 $$ CliTool.ExitStatus status = bootstrapCLIParser.execute(args)-->Line_11 $$ if (CliTool.ExitStatus.OK != status) [ FD ]
Line_18 $$ foreground = false-->Line_45 $$ if (!foreground) [ FD ]
Line_58 $$ if (e instanceof CreationException) -->Line_67 $$ logger.error("Exception", e)[ CD ]
Line_15 $$ boolean foreground = !"false".equals(System.getProperty("es.foreground", System.getProperty("es-foreground")))-->Line_18 $$ foreground = false[ FD ]
Line_21 $$ Settings settings = environment.settings()-->Line_43 $$ INSTANCE.setup(true, settings, environment)[ FD ]
Line_50 $$ if (foreground) -->Line_51 $$ Loggers.disableConsoleLogging()[ CD ]
Line_58 $$ if (e instanceof CreationException) -->Line_64 $$ logger.error("Guice Exception: [ CD ]
