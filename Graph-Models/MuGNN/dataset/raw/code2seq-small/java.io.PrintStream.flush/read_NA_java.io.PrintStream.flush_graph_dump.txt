Line_37 $$ if (debug != null) -->Line_39 $$ debug.flush()[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_10 $$ tw.writeUINT32(len)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_10 $$ tw.writeUINT32(len)[ CD ]
Line_37 $$ if (debug != null) -->Line_38 $$ debug.println("Got SSH_FX_EOF.")[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_30 $$ tr.readBytes(dst, dstoff, readLen)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_33 $$ if (t != Packet.SSH_FXP_STATUS)[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_20 $$ if (rep_id != req_id)[ CD ]
Line_17 $$ TypesReader tr = new TypesReader(resp)-->Line_27 $$ int readLen = tr.readUINT32()[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_18 $$ int t = tr.readByte()[ CD ]
Line_19 $$ int rep_id = tr.readUINT32()-->Line_20 $$ if (rep_id != req_id)[ FD ]
Line_27 $$ int readLen = tr.readUINT32()-->Line_30 $$ tr.readBytes(dst, dstoff, readLen)[ FD ]
Line_22 $$ if (t == Packet.SSH_FXP_DATA) -->Line_30 $$ tr.readBytes(dst, dstoff, readLen)[ CD ]
Line_18 $$ int t = tr.readByte()-->Line_33 $$ if (t != Packet.SSH_FXP_STATUS)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_22 $$ if (t == Packet.SSH_FXP_DATA) [ CD ]
Line_36 $$ if (errorCode == ErrorCodes.SSH_FX_EOF) -->Line_37 $$ if (debug != null) [ CD ]
Line_6 $$ int req_id = generateNextRequestID()-->Line_15 $$ sendMessage(Packet.SSH_FXP_READ, req_id, tw.getBytes())[ FD ]
Line_7 $$ TypesWriter tw = new TypesWriter()-->Line_9 $$ tw.writeUINT64(fileOffset)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_3 $$ checkHandleValidAndOpen(handle)[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_3 $$ checkHandleValidAndOpen(handle)[ FD ]
Line_7 $$ TypesWriter tw = new TypesWriter()-->Line_10 $$ tw.writeUINT32(len)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_9 $$ tw.writeUINT64(fileOffset)[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_36 $$ if (errorCode == ErrorCodes.SSH_FX_EOF) [ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_4 $$ if ((len > 32768) || (len <= 0))[ CD ]
Line_23 $$ if (debug != null) -->Line_24 $$ debug.println("Got SSH_FXP_DATA...")[ CD ]
Line_22 $$ if (t == Packet.SSH_FXP_DATA) -->Line_28 $$ if ((readLen < 0) || (readLen > len))[ CD ]
Line_17 $$ TypesReader tr = new TypesReader(resp)-->Line_43 $$ String errorMessage = tr.readString()[ FD ]
Line_35 $$ int errorCode = tr.readUINT32()-->Line_36 $$ if (errorCode == ErrorCodes.SSH_FX_EOF) [ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_43 $$ String errorMessage = tr.readString()[ CD ]
Line_17 $$ TypesReader tr = new TypesReader(resp)-->Line_35 $$ int errorCode = tr.readUINT32()[ FD ]
Line_18 $$ int t = tr.readByte()-->Line_22 $$ if (t == Packet.SSH_FXP_DATA) [ FD ]
Line_7 $$ TypesWriter tw = new TypesWriter()-->Line_8 $$ tw.writeString(handle.fileHandle, 0, handle.fileHandle.length)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_35 $$ int errorCode = tr.readUINT32()[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_9 $$ tw.writeUINT64(fileOffset)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_8 $$ tw.writeString(handle.fileHandle, 0, handle.fileHandle.length)[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_15 $$ sendMessage(Packet.SSH_FXP_READ, req_id, tw.getBytes())[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_16 $$ byte[] resp = receiveMessage(34000)[ CD ]
Line_17 $$ TypesReader tr = new TypesReader(resp)-->Line_18 $$ int t = tr.readByte()[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_11 $$ if (debug != null) [ CD ]
Line_6 $$ int req_id = generateNextRequestID()-->Line_20 $$ if (rep_id != req_id)[ FD ]
Line_22 $$ if (t == Packet.SSH_FXP_DATA) -->Line_23 $$ if (debug != null) [ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_17 $$ TypesReader tr = new TypesReader(resp)[ CD ]
Line_22 $$ if (t == Packet.SSH_FXP_DATA) -->Line_31 $$ return readLen[ CD ]
Line_17 $$ TypesReader tr = new TypesReader(resp)-->Line_30 $$ tr.readBytes(dst, dstoff, readLen)[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_7 $$ TypesWriter tw = new TypesWriter()[ CD ]
Line_11 $$ if (debug != null) -->Line_13 $$ debug.flush()[ CD ]
Line_17 $$ TypesReader tr = new TypesReader(resp)-->Line_19 $$ int rep_id = tr.readUINT32()[ FD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_6 $$ int req_id = generateNextRequestID()[ CD ]
Line_2 $$ public int read(SFTPv3FileHandle handle, long fileOffset, byte[] dst, int dstoff, int len) throws IOException -->Line_19 $$ int rep_id = tr.readUINT32()[ CD ]
Line_7 $$ TypesWriter tw = new TypesWriter()-->Line_15 $$ sendMessage(Packet.SSH_FXP_READ, req_id, tw.getBytes())[ FD ]
Line_22 $$ if (t == Packet.SSH_FXP_DATA) -->Line_27 $$ int readLen = tr.readUINT32()[ CD ]
Line_23 $$ if (debug != null) -->Line_25 $$ debug.flush()[ CD ]
Line_11 $$ if (debug != null) -->Line_12 $$ debug.println("Sending SSH_FXP_READ...")[ CD ]
Line_36 $$ if (errorCode == ErrorCodes.SSH_FX_EOF) -->Line_41 $$ return -1[ CD ]
