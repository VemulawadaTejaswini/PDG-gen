Line_2 $$ private static int[] pathToChildIndecies(TreePath path) -->Line_3 $$ int[] result = new int[path.getPathCount()][ FD ]
Line_5 $$ TreeNode node = (TreeNode) path.getPathComponent(i)-->Line_6 $$ TreeNode parent = node.getParent()[ FD ]
Line_2 $$ private static int[] pathToChildIndecies(TreePath path) -->Line_5 $$ TreeNode node = (TreeNode) path.getPathComponent(i)[ FD ]
Line_4 $$ for (int i = 0; i < path.getPathCount(); i++) -->Line_5 $$ TreeNode node = (TreeNode) path.getPathComponent(i)[ CD ]
Line_4 $$ for (int i = 0; i < path.getPathCount(); i++) -->Line_7 $$ result[i] = parent != null ? parent.getIndex(node) : 0[ CD ]
Line_4 $$ for (int i = 0; i < path.getPathCount(); i++) -->Line_6 $$ TreeNode parent = node.getParent()[ CD ]
Line_2 $$ private static int[] pathToChildIndecies(TreePath path) -->Line_9 $$ return result[ CD ]
Line_2 $$ private static int[] pathToChildIndecies(TreePath path) -->Line_4 $$ for (int i = 0; i < path.getPathCount(); i++) [ CD ]
Line_4 $$ for (int i = 0; i < path.getPathCount(); i++) -->Line_5 $$ TreeNode node = (TreeNode) path.getPathComponent(i)[ FD ]
Line_6 $$ TreeNode parent = node.getParent()-->Line_7 $$ result[i] = parent != null ? parent.getIndex(node) : 0[ FD ]
Line_2 $$ private static int[] pathToChildIndecies(TreePath path) -->Line_3 $$ int[] result = new int[path.getPathCount()][ CD ]
Line_2 $$ private static int[] pathToChildIndecies(TreePath path) -->Line_4 $$ for (int i = 0; i < path.getPathCount(); i++) [ FD ]
Line_5 $$ TreeNode node = (TreeNode) path.getPathComponent(i)-->Line_7 $$ result[i] = parent != null ? parent.getIndex(node) : 0[ FD ]
