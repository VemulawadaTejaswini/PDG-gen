Line_5 $$ while (node != null) -->Line_6 $$ path.add(0, node)[ CD ]
Line_3 $$ TreeNode node = myTreeModelAsList.get(row)-->Line_6 $$ path.add(0, node)[ FD ]
Line_5 $$ while (node != null) -->Line_7 $$ node = node.getParent()[ CD ]
Line_7 $$ node = node.getParent()-->Line_6 $$ path.add(0, node)[ FD ]
Line_4 $$ final List<TreeNode> path = new ArrayList<TreeNode>()-->Line_9 $$ return new TreePath(path.toArray(new TreeNode[path.size()]))[ FD ]
Line_2 $$ private TreePath getPathForRow(final int row) -->Line_3 $$ TreeNode node = myTreeModelAsList.get(row)[ CD ]
Line_3 $$ TreeNode node = myTreeModelAsList.get(row)-->Line_5 $$ while (node != null) [ FD ]
Line_2 $$ private TreePath getPathForRow(final int row) -->Line_4 $$ final List<TreeNode> path = new ArrayList<TreeNode>()[ CD ]
Line_2 $$ private TreePath getPathForRow(final int row) -->Line_9 $$ return new TreePath(path.toArray(new TreeNode[path.size()]))[ CD ]
Line_3 $$ TreeNode node = myTreeModelAsList.get(row)-->Line_7 $$ node = node.getParent()[ FD ]
Line_7 $$ node = node.getParent()-->Line_5 $$ while (node != null) [ FD ]
Line_4 $$ final List<TreeNode> path = new ArrayList<TreeNode>()-->Line_6 $$ path.add(0, node)[ FD ]
Line_2 $$ private TreePath getPathForRow(final int row) -->Line_5 $$ while (node != null) [ CD ]
Line_2 $$ private TreePath getPathForRow(final int row) -->Line_3 $$ TreeNode node = myTreeModelAsList.get(row)[ FD ]
