Line_2 $$ private void updateImmediatelyNodesUpToRoot(@NotNull List<TreeNode> nodes) -->Line_16 $$ updateImmediately()[ CD ]
Line_6 $$ for (int i = 0; i < nodes.size(); i++) -->Line_7 $$ TreeNode node = nodes.get(i)[ CD ]
Line_11 $$ if (parent != root && parent != null) -->Line_12 $$ nodes.add(parent)[ CD ]
Line_7 $$ TreeNode node = nodes.get(i)-->Line_8 $$ if (node instanceof Node) [ FD ]
Line_8 $$ if (node instanceof Node) -->Line_9 $$ ((Node) node).update(this, edtQueue)[ CD ]
Line_8 $$ if (node instanceof Node) -->Line_11 $$ if (parent != root && parent != null) [ CD ]
Line_10 $$ TreeNode parent = node.getParent()-->Line_12 $$ nodes.add(parent)[ FD ]
Line_2 $$ private void updateImmediatelyNodesUpToRoot(@NotNull List<TreeNode> nodes) -->Line_6 $$ for (int i = 0; i < nodes.size(); i++) [ FD ]
Line_3 $$ if (myProject.isDisposed())-->Line_4 $$ return[ CD ]
Line_8 $$ if (node instanceof Node) -->Line_10 $$ TreeNode parent = node.getParent()[ CD ]
Line_2 $$ private void updateImmediatelyNodesUpToRoot(@NotNull List<TreeNode> nodes) -->Line_12 $$ nodes.add(parent)[ FD ]
Line_2 $$ private void updateImmediatelyNodesUpToRoot(@NotNull List<TreeNode> nodes) -->Line_3 $$ if (myProject.isDisposed())[ CD ]
Line_2 $$ private void updateImmediatelyNodesUpToRoot(@NotNull List<TreeNode> nodes) -->Line_5 $$ TreeNode root = (TreeNode) myTree.getModel().getRoot()[ CD ]
Line_6 $$ for (int i = 0; i < nodes.size(); i++) -->Line_8 $$ if (node instanceof Node) [ CD ]
Line_2 $$ private void updateImmediatelyNodesUpToRoot(@NotNull List<TreeNode> nodes) -->Line_7 $$ TreeNode node = nodes.get(i)[ FD ]
Line_7 $$ TreeNode node = nodes.get(i)-->Line_10 $$ TreeNode parent = node.getParent()[ FD ]
Line_6 $$ for (int i = 0; i < nodes.size(); i++) -->Line_7 $$ TreeNode node = nodes.get(i)[ FD ]
Line_2 $$ private void updateImmediatelyNodesUpToRoot(@NotNull List<TreeNode> nodes) -->Line_6 $$ for (int i = 0; i < nodes.size(); i++) [ CD ]
