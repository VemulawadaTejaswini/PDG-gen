Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_44 $$ LineMarkerInfo marker = getMethodSeparator(lIterator.getLineNumber())[ FD ]
Line_17 $$ Color backColor = attributes.getBackgroundColor()-->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_19 $$ Font currentFont = getFont(attributes.getFontType())-->Line_21 $$ setFont(g, currentFont)[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_16 $$ Color currentColor = attributes.getForegroundColor()[ CD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_79 $$ Font font = getFont(attributes.getFontType())[ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_26 $$ getMethodSeparator(lIterator.getLineNumber())[ FD ]
Line_29 $$ int hEnd = hIterator.getEnd()-->Line_32 $$ if (hEnd >= lEnd) [ FD ]
Line_73 $$ if (color != currentColor) -->Line_74 $$ setForegroundColor(g, color)[ CD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_52 $$ if (position.getY() > clip.getY() + clip.getHeight() - lineHeight) [ CD ]
Line_41 $$ lineY = position.getY()-->Line_58 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_69 $$ Color color = attributes.getForegroundColor()-->Line_75 $$ currentColor = color[ FD ]
Line_45 $$ if (marker != null) -->Line_46 $$ Color save = g.getColor()[ CD ]
Line_28 $$ while (!hIterator.atEnd() && !lIterator.atEnd()) -->Line_30 $$ int lEnd = lIterator.getEnd()[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_22 $$ g.translate(clip.getX(), 0)[ CD ]
Line_78 $$ underscoredColor = attributes.getEffectColor()-->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_24 $$ double lineY = position.getY()-->Line_37 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_78 $$ underscoredColor = attributes.getEffectColor()[ FD ]
Line_19 $$ Font currentFont = getFont(attributes.getFontType())-->Line_80 $$ if (font != currentFont) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_19 $$ Font currentFont = getFont(attributes.getFontType())[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_21 $$ setFont(g, currentFont)[ FD ]
Line_18 $$ Color underscoredColor = attributes.getEffectColor()-->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_67 $$ hIterator.advance()[ CD ]
Line_71 $$ color = Color.black-->Line_70 $$ if (color == null) [ FD ]
Line_43 $$ if (myPerformActualDrawing) -->Line_44 $$ LineMarkerInfo marker = getMethodSeparator(lIterator.getLineNumber())[ CD ]
Line_16 $$ Color currentColor = attributes.getForegroundColor()-->Line_20 $$ setForegroundColor(g, currentColor)[ FD ]
Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())-->Line_24 $$ double lineY = position.getY()[ FD ]
Line_17 $$ Color backColor = attributes.getBackgroundColor()-->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_46 $$ Color save = g.getColor()-->Line_49 $$ setForegroundColor(g, save)[ FD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_18 $$ Color underscoredColor = attributes.getEffectColor()[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_80 $$ if (font != currentFont) [ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_58 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_77 $$ backColor = attributes.getBackgroundColor()[ CD ]
Line_69 $$ Color color = attributes.getForegroundColor()-->Line_74 $$ setForegroundColor(g, color)[ FD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_77 $$ backColor = attributes.getBackgroundColor()[ FD ]
Line_24 $$ double lineY = position.getY()-->Line_63 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_69 $$ Color color = attributes.getForegroundColor()-->Line_71 $$ color = Color.black[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_40 $$ position.setLocation(0, position.getY() + lineHeight)[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_37 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_78 $$ underscoredColor = attributes.getEffectColor()-->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_24 $$ double lineY = position.getY()[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_3 $$ float lineHeight = getLineHeight(g)[ CD ]
Line_41 $$ lineY = position.getY()-->Line_34 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_69 $$ Color color = attributes.getForegroundColor()[ CD ]
Line_16 $$ Color currentColor = attributes.getForegroundColor()-->Line_73 $$ if (color != currentColor) [ FD ]
Line_56 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) -->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_21 $$ setFont(g, currentFont)[ CD ]
Line_68 $$ attributes = hIterator.getTextAttributes()-->Line_77 $$ backColor = attributes.getBackgroundColor()[ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_56 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_87 $$ g.translate(-clip.getX(), 0)[ CD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_78 $$ underscoredColor = attributes.getEffectColor()[ CD ]
Line_5 $$ if (hIterator.atEnd()) -->Line_7 $$ return[ CD ]
Line_18 $$ Color underscoredColor = attributes.getEffectColor()-->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())-->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_20 $$ setForegroundColor(g, currentColor)[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_68 $$ attributes = hIterator.getTextAttributes()-->Line_78 $$ underscoredColor = attributes.getEffectColor()[ FD ]
Line_24 $$ double lineY = position.getY()-->Line_58 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_11 $$ if (lIterator.atEnd()) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()[ CD ]
Line_45 $$ if (marker != null) -->Line_47 $$ setForegroundColor(g, marker.separatorColor)[ CD ]
Line_25 $$ if (myPerformActualDrawing) -->Line_26 $$ getMethodSeparator(lIterator.getLineNumber())[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_5 $$ if (hIterator.atEnd()) [ CD ]
Line_16 $$ Color currentColor = attributes.getForegroundColor()-->Line_75 $$ currentColor = color[ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_17 $$ Color backColor = attributes.getBackgroundColor()[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_79 $$ Font font = getFont(attributes.getFontType())[ CD ]
Line_4 $$ HighlighterIterator hIterator = myHighlighter.createIterator(myOffset)-->Line_29 $$ int hEnd = hIterator.getEnd()[ FD ]
Line_11 $$ if (lIterator.atEnd()) -->Line_13 $$ return[ CD ]
Line_69 $$ Color color = attributes.getForegroundColor()-->Line_70 $$ if (color == null) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_18 $$ Color underscoredColor = attributes.getEffectColor()[ CD ]
Line_24 $$ double lineY = position.getY()-->Line_41 $$ lineY = position.getY()[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_10 $$ lIterator.start(myOffset)[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_4 $$ HighlighterIterator hIterator = myHighlighter.createIterator(myOffset)[ CD ]
Line_79 $$ Font font = getFont(attributes.getFontType())-->Line_80 $$ if (font != currentFont) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_52 $$ if (position.getY() > clip.getY() + clip.getHeight() - lineHeight) [ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_41 $$ lineY = position.getY()[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_4 $$ HighlighterIterator hIterator = myHighlighter.createIterator(myOffset)-->Line_67 $$ hIterator.advance()[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_68 $$ attributes = hIterator.getTextAttributes()[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_81 $$ setFont(g, font)[ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_31 $$ int lStart = lIterator.getStart()[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_17 $$ Color backColor = attributes.getBackgroundColor()[ CD ]
Line_79 $$ Font font = getFont(attributes.getFontType())-->Line_81 $$ setFont(g, font)[ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_10 $$ lIterator.start(myOffset)[ FD ]
Line_75 $$ currentColor = color-->Line_73 $$ if (color != currentColor) [ FD ]
Line_82 $$ currentFont = font-->Line_80 $$ if (font != currentFont) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_25 $$ if (myPerformActualDrawing) [ CD ]
Line_17 $$ Color backColor = attributes.getBackgroundColor()-->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_16 $$ Color currentColor = attributes.getForegroundColor()[ FD ]
Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) -->Line_34 $$ drawLineNumber(g, 0, lineY)[ CD ]
Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) -->Line_63 $$ drawLineNumber(g, 0, lineY)[ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_79 $$ Font font = getFont(attributes.getFontType())-->Line_82 $$ currentFont = font[ FD ]
Line_77 $$ backColor = attributes.getBackgroundColor()-->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_4 $$ HighlighterIterator hIterator = myHighlighter.createIterator(myOffset)-->Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()[ FD ]
Line_80 $$ if (font != currentFont) -->Line_82 $$ currentFont = font[ CD ]
Line_28 $$ while (!hIterator.atEnd() && !lIterator.atEnd()) -->Line_31 $$ int lStart = lIterator.getStart()[ CD ]
Line_29 $$ int hEnd = hIterator.getEnd()-->Line_56 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_34 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_19 $$ Font currentFont = getFont(attributes.getFontType())-->Line_82 $$ currentFont = font[ FD ]
Line_70 $$ if (color == null) -->Line_71 $$ color = Color.black[ CD ]
Line_28 $$ while (!hIterator.atEnd() && !lIterator.atEnd()) -->Line_29 $$ int hEnd = hIterator.getEnd()[ CD ]
Line_18 $$ Color underscoredColor = attributes.getEffectColor()-->Line_78 $$ underscoredColor = attributes.getEffectColor()[ FD ]
Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())-->Line_40 $$ position.setLocation(0, position.getY() + lineHeight)[ FD ]
Line_68 $$ attributes = hIterator.getTextAttributes()-->Line_69 $$ Color color = attributes.getForegroundColor()[ FD ]
Line_69 $$ Color color = attributes.getForegroundColor()-->Line_73 $$ if (color != currentColor) [ FD ]
Line_56 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) -->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_46 $$ Color save = g.getColor()[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_73 $$ if (color != currentColor) [ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())[ FD ]
Line_45 $$ if (marker != null) -->Line_49 $$ setForegroundColor(g, save)[ CD ]
Line_43 $$ if (myPerformActualDrawing) -->Line_45 $$ if (marker != null) [ CD ]
Line_41 $$ lineY = position.getY()-->Line_37 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_68 $$ attributes = hIterator.getTextAttributes()[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_11 $$ if (lIterator.atEnd()) [ CD ]
Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())-->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_48 $$ UIUtil.drawLine(g, 0, (int) lineY, (int) clip.getWidth(), (int) lineY)[ FD ]
Line_29 $$ int hEnd = hIterator.getEnd()-->Line_62 $$ if (!drawString(g, hEnd, lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_63 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_4 $$ HighlighterIterator hIterator = myHighlighter.createIterator(myOffset)-->Line_5 $$ if (hIterator.atEnd()) [ FD ]
Line_44 $$ LineMarkerInfo marker = getMethodSeparator(lIterator.getLineNumber())-->Line_45 $$ if (marker != null) [ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_37 $$ drawLineNumber(g, 0, lineY)[ CD ]
Line_30 $$ int lEnd = lIterator.getEnd()-->Line_32 $$ if (hEnd >= lEnd) [ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_30 $$ int lEnd = lIterator.getEnd()[ FD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_69 $$ Color color = attributes.getForegroundColor()[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_22 $$ g.translate(clip.getX(), 0)[ FD ]
Line_68 $$ attributes = hIterator.getTextAttributes()-->Line_79 $$ Font font = getFont(attributes.getFontType())[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_43 $$ if (myPerformActualDrawing) [ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_47 $$ setForegroundColor(g, marker.separatorColor)[ FD ]
Line_71 $$ color = Color.black-->Line_74 $$ setForegroundColor(g, color)[ FD ]
Line_18 $$ Color underscoredColor = attributes.getEffectColor()-->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_28 $$ while (!hIterator.atEnd() && !lIterator.atEnd()) [ FD ]
Line_24 $$ double lineY = position.getY()-->Line_34 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_41 $$ lineY = position.getY()-->Line_63 $$ drawLineNumber(g, 0, lineY)[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_3 $$ float lineHeight = getLineHeight(g)[ FD ]
Line_78 $$ underscoredColor = attributes.getEffectColor()-->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_73 $$ if (color != currentColor) -->Line_75 $$ currentColor = color[ CD ]
Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())-->Line_41 $$ lineY = position.getY()[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_74 $$ setForegroundColor(g, color)[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_49 $$ setForegroundColor(g, save)[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_56 $$ if (hEnd > lEnd - lIterator.getSeparatorLength()) [ CD ]
Line_71 $$ color = Color.black-->Line_73 $$ if (color != currentColor) [ FD ]
Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())-->Line_52 $$ if (position.getY() > clip.getY() + clip.getHeight() - lineHeight) [ FD ]
Line_77 $$ backColor = attributes.getBackgroundColor()-->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_87 $$ g.translate(-clip.getX(), 0)[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())[ CD ]
Line_77 $$ backColor = attributes.getBackgroundColor()-->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_33 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ CD ]
Line_15 $$ TextAttributes attributes = hIterator.getTextAttributes()-->Line_19 $$ Font currentFont = getFont(attributes.getFontType())[ FD ]
Line_4 $$ HighlighterIterator hIterator = myHighlighter.createIterator(myOffset)-->Line_68 $$ attributes = hIterator.getTextAttributes()[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_70 $$ if (color == null) [ CD ]
Line_45 $$ if (marker != null) -->Line_48 $$ UIUtil.drawLine(g, 0, (int) lineY, (int) clip.getWidth(), (int) lineY)[ CD ]
Line_71 $$ color = Color.black-->Line_75 $$ currentColor = color[ FD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_28 $$ while (!hIterator.atEnd() && !lIterator.atEnd()) [ CD ]
Line_28 $$ while (!hIterator.atEnd() && !lIterator.atEnd()) -->Line_32 $$ if (hEnd >= lEnd) [ CD ]
Line_2 $$ private void drawText(Graphics2D g, Rectangle2D clip) -->Line_20 $$ setForegroundColor(g, currentColor)[ FD ]
Line_23 $$ Point2D position = new Point2D.Double(0, clip.getY())-->Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) [ FD ]
Line_17 $$ Color backColor = attributes.getBackgroundColor()-->Line_77 $$ backColor = attributes.getBackgroundColor()[ FD ]
Line_80 $$ if (font != currentFont) -->Line_81 $$ setFont(g, font)[ CD ]
Line_57 $$ if (!drawString(g, lEnd - lIterator.getSeparatorLength(), lEnd - lStart, position, clip, backColor, underscoredColor)) -->Line_58 $$ drawLineNumber(g, 0, lineY)[ CD ]
Line_4 $$ HighlighterIterator hIterator = myHighlighter.createIterator(myOffset)-->Line_28 $$ while (!hIterator.atEnd() && !lIterator.atEnd()) [ FD ]
Line_9 $$ LineIterator lIterator = myDocument.createLineIterator()-->Line_38 $$ lIterator.advance()[ FD ]
Line_32 $$ if (hEnd >= lEnd) -->Line_38 $$ lIterator.advance()[ CD ]
