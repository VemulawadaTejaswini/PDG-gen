Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_94 $$ layoutDoNotAskCheckbox(sheetPanel)[ FD ]
Line_49 $$ messageTextPane.addHyperlinkListener(new HyperlinkListener() -->Line_60 $$ LOG.warn("URL is null; HyperlinkEvent: " + he.toString())[ FD ]
Line_49 $$ messageTextPane.addHyperlinkListener(new HyperlinkListener() -->Line_56 $$ URL url = he.getURL()[ FD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_84 $$ sheetPanel.add(messageTextPane)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_38 $$ headerLabel.setSize(250, Short.MAX_VALUE)[ CD ]
Line_25 $$ JPanel ico = new JPanel() -->Line_29 $$ super.paintComponent(g)[ CD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_8 $$ super.paintComponent(g)[ FD ]
Line_99 $$ if (SHEET_HEIGHT < SHEET_MINIMUM_HEIGHT) -->Line_101 $$ shiftButtonsToTheBottom(SHEET_MINIMUM_HEIGHT - SHEET_HEIGHT)[ CD ]
Line_57 $$ if (url != null) -->Line_58 $$ Desktop.getDesktop().browse(url.toURI())[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_24 $$ sheetPanel.setLayout(null)[ FD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_105 $$ sheetPanel.setSize(SHEET_NC_WIDTH, SHEET_NC_HEIGHT)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_24 $$ sheetPanel.setLayout(null)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_88 $$ ico.setLocation(LEFT_SHEET_PADDING, TOP_SHEET_PADDING)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_89 $$ sheetPanel.add(ico)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_91 $$ messageTextPane.setLocation(LEFT_SHEET_OFFSET, TOP_SHEET_PADDING + headerLabel.getPreferredSize().height + GAP_BETWEEN_LINES)[ CD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_15 $$ g.fillRoundRect((int) dialog.getX(), (int) dialog.getY() - 5, (int) dialog.getWidth(), (int) (5 + dialog.getHeight()), 5, 5)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_37 $$ headerLabel.setContentType("text/html")[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_39 $$ headerLabel.setText(title)[ CD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_20 $$ paintShadowFromParent(g)[ FD ]
Line_25 $$ JPanel ico = new JPanel() -->Line_30 $$ myIcon.paintIcon(this, g, 0, 0)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_99 $$ if (SHEET_HEIGHT < SHEET_MINIMUM_HEIGHT) [ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_80 $$ SHEET_WIDTH = Math.max(LEFT_SHEET_OFFSET + widestWordWidth + RIGHT_OFFSET, SHEET_WIDTH)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_43 $$ sheetPanel.add(headerLabel)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_3 $$ JPanel sheetPanel = new JPanel() [ CD ]
Line_93 $$ if (myDoNotAskOption != null) -->Line_94 $$ layoutDoNotAskCheckbox(sheetPanel)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_83 $$ messageTextPane.setFocusable(false)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_46 $$ messageTextPane.setFont(regularFont)[ CD ]
Line_56 $$ URL url = he.getURL()-->Line_57 $$ if (url != null) [ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_105 $$ sheetPanel.setSize(SHEET_NC_WIDTH, SHEET_NC_HEIGHT)[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_20 $$ paintShadowFromParent(g)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_86 $$ ico.setOpaque(false)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_79 $$ messageArea.setSize(widestWordWidth, messageTextPane.getPreferredSize().height)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_47 $$ messageTextPane.setEditable(false)[ CD ]
Line_49 $$ messageTextPane.addHyperlinkListener(new HyperlinkListener() -->Line_53 $$ if (he.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ CD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_12 $$ paintShadow(g)[ FD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_23 $$ sheetPanel.setOpaque(false)[ FD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_9 $$ g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, getSheetAlpha()))[ CD ]
Line_49 $$ messageTextPane.addHyperlinkListener(new HyperlinkListener() -->Line_53 $$ if (he.getEventType() == HyperlinkEvent.EventType.ACTIVATED) [ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_78 $$ messageTextPane.setText(handleBreaks(message))[ FD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_11 $$ Rectangle2D dialog = new Rectangle2D.Double(SHADOW_BORDER, 0, SHEET_WIDTH, SHEET_HEIGHT)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_106 $$ return sheetPanel[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_43 $$ sheetPanel.add(headerLabel)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_35 $$ headerLabel.setFont(boldFont)[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_10 $$ g.setColor(new JBColor(Gray._230, UIUtil.getPanelBackground()))[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_87 $$ ico.setSize(new Dimension(AllIcons.Logo_welcomeScreen.getIconWidth(), AllIcons.Logo_welcomeScreen.getIconHeight()))[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_71 $$ FontMetrics fontMetrics = sheetPanel.getFontMetrics(regularFont)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_90 $$ headerLabel.setLocation(LEFT_SHEET_OFFSET, TOP_SHEET_PADDING)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_93 $$ if (myDoNotAskOption != null) [ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_71 $$ FontMetrics fontMetrics = sheetPanel.getFontMetrics(regularFont)[ FD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_9 $$ g.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, getSheetAlpha()))[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_48 $$ messageTextPane.setContentType("text/html")[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_42 $$ headerLabel.setFocusable(false)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_78 $$ messageTextPane.setText(handleBreaks(message))[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_84 $$ sheetPanel.add(messageTextPane)[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_23 $$ sheetPanel.setOpaque(false)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_96 $$ layoutWithAbsoluteLayout(buttons, sheetPanel)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_41 $$ headerLabel.setOpaque(false)[ CD ]
Line_53 $$ if (he.getEventType() == HyperlinkEvent.EventType.ACTIVATED) -->Line_54 $$ if (Desktop.isDesktopSupported()) [ CD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_29 $$ super.paintComponent(g)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_45 $$ messageTextPane.putClientProperty(JEditorPane.HONOR_DISPLAY_PROPERTIES, Boolean.TRUE)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_73 $$ String[] words = (message == null) ? ArrayUtil.EMPTY_STRING_ARRAY : message.split(SPACE_OR_LINE_SEPARATOR_PATTERN)[ FD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_89 $$ sheetPanel.add(ico)[ FD ]
Line_57 $$ if (url != null) -->Line_60 $$ LOG.warn("URL is null; HyperlinkEvent: " + he.toString())[ CD ]
Line_25 $$ JPanel ico = new JPanel() -->Line_30 $$ myIcon.paintIcon(this, g, 0, 0)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_40 $$ headerLabel.setSize(250, headerLabel.getPreferredSize().height)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_103 $$ sheetPanel.setFocusCycleRoot(true)[ CD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_30 $$ myIcon.paintIcon(this, g, 0, 0)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_77 $$ messageTextPane.setSize(widestWordWidth, Short.MAX_VALUE)[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_103 $$ sheetPanel.setFocusCycleRoot(true)[ FD ]
Line_56 $$ URL url = he.getURL()-->Line_58 $$ Desktop.getDesktop().browse(url.toURI())[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_96 $$ layoutWithAbsoluteLayout(buttons, sheetPanel)[ FD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_96 $$ layoutWithAbsoluteLayout(buttons, sheetPanel)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_44 $$ headerLabel.repaint()[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_36 $$ headerLabel.setEditable(false)[ CD ]
Line_11 $$ Rectangle2D dialog = new Rectangle2D.Double(SHADOW_BORDER, 0, SHEET_WIDTH, SHEET_HEIGHT)-->Line_15 $$ g.fillRoundRect((int) dialog.getX(), (int) dialog.getY() - 5, (int) dialog.getWidth(), (int) (5 + dialog.getHeight()), 5, 5)[ FD ]
Line_25 $$ JPanel ico = new JPanel() -->Line_29 $$ super.paintComponent(g)[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_49 $$ messageTextPane.addHyperlinkListener(new HyperlinkListener() [ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_8 $$ super.paintComponent(g)[ CD ]
Line_3 $$ JPanel sheetPanel = new JPanel() -->Line_12 $$ paintShadow(g)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_104 $$ recalculateShadow()[ CD ]
Line_7 $$ final Graphics2D g = (Graphics2D) g2d.create()-->Line_10 $$ g.setColor(new JBColor(Gray._230, UIUtil.getPanelBackground()))[ FD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_34 $$ headerLabel.putClientProperty(JEditorPane.HONOR_DISPLAY_PROPERTIES, Boolean.TRUE)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_81 $$ messageTextPane.setSize(messageArea)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_82 $$ messageTextPane.setOpaque(false)[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_85 $$ messageTextPane.repaint()[ CD ]
Line_2 $$ private JPanel createSheetPanel(String title, String message, JButton[] buttons) -->Line_39 $$ headerLabel.setText(title)[ FD ]
