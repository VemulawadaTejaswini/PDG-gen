Line_2 $$ protected void startElementInternal(QName name, Attributes attributes, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_14 $$ for (int i = 0; i < attributes.getLength(); i++) [ FD ]
Line_14 $$ for (int i = 0; i < attributes.getLength(); i++) -->Line_15 $$ QName attrName = toQName(attributes.getURI(i), attributes.getQName(i))[ FD ]
Line_8 $$ if (XMLConstants.DEFAULT_NS_PREFIX.equals(prefix)) -->Line_9 $$ this.streamWriter.setDefaultNamespace(namespaceUri)[ CD ]
Line_5 $$ String prefix = entry.getKey()-->Line_11 $$ this.streamWriter.setPrefix(prefix, namespaceUri)[ FD ]
Line_15 $$ QName attrName = toQName(attributes.getURI(i), attributes.getQName(i))-->Line_17 $$ this.streamWriter.writeAttribute(attrName.getPrefix(), attrName.getNamespaceURI(), attrName.getLocalPart(), attributes.getValue(i))[ FD ]
Line_14 $$ for (int i = 0; i < attributes.getLength(); i++) -->Line_17 $$ this.streamWriter.writeAttribute(attrName.getPrefix(), attrName.getNamespaceURI(), attrName.getLocalPart(), attributes.getValue(i))[ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : namespaceMapping.entrySet()) -->Line_6 $$ String namespaceUri = entry.getValue()[ FD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes attributes, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_3 $$ this.streamWriter.writeStartElement(name.getPrefix(), name.getLocalPart(), name.getNamespaceURI())[ CD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes attributes, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_4 $$ for (Map.Entry<String, String> entry : namespaceMapping.entrySet()) [ FD ]
Line_8 $$ if (XMLConstants.DEFAULT_NS_PREFIX.equals(prefix)) -->Line_11 $$ this.streamWriter.setPrefix(prefix, namespaceUri)[ CD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes attributes, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_3 $$ this.streamWriter.writeStartElement(name.getPrefix(), name.getLocalPart(), name.getNamespaceURI())[ FD ]
Line_6 $$ String namespaceUri = entry.getValue()-->Line_11 $$ this.streamWriter.setPrefix(prefix, namespaceUri)[ FD ]
Line_14 $$ for (int i = 0; i < attributes.getLength(); i++) -->Line_16 $$ if (!isNamespaceDeclaration(attrName)) [ CD ]
Line_5 $$ String prefix = entry.getKey()-->Line_8 $$ if (XMLConstants.DEFAULT_NS_PREFIX.equals(prefix)) [ FD ]
Line_15 $$ QName attrName = toQName(attributes.getURI(i), attributes.getQName(i))-->Line_16 $$ if (!isNamespaceDeclaration(attrName)) [ FD ]
Line_4 $$ for (Map.Entry<String, String> entry : namespaceMapping.entrySet()) -->Line_5 $$ String prefix = entry.getKey()[ FD ]
Line_5 $$ String prefix = entry.getKey()-->Line_7 $$ this.streamWriter.writeNamespace(prefix, namespaceUri)[ FD ]
Line_14 $$ for (int i = 0; i < attributes.getLength(); i++) -->Line_15 $$ QName attrName = toQName(attributes.getURI(i), attributes.getQName(i))[ CD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes attributes, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_15 $$ QName attrName = toQName(attributes.getURI(i), attributes.getQName(i))[ FD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes attributes, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_17 $$ this.streamWriter.writeAttribute(attrName.getPrefix(), attrName.getNamespaceURI(), attrName.getLocalPart(), attributes.getValue(i))[ FD ]
Line_16 $$ if (!isNamespaceDeclaration(attrName)) -->Line_17 $$ this.streamWriter.writeAttribute(attrName.getPrefix(), attrName.getNamespaceURI(), attrName.getLocalPart(), attributes.getValue(i))[ CD ]
Line_2 $$ protected void startElementInternal(QName name, Attributes attributes, Map<String, String> namespaceMapping) throws XMLStreamException -->Line_14 $$ for (int i = 0; i < attributes.getLength(); i++) [ CD ]
Line_6 $$ String namespaceUri = entry.getValue()-->Line_9 $$ this.streamWriter.setDefaultNamespace(namespaceUri)[ FD ]
Line_6 $$ String namespaceUri = entry.getValue()-->Line_7 $$ this.streamWriter.writeNamespace(prefix, namespaceUri)[ FD ]
