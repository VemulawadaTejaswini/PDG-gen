Line_6 $$ Object[] trace = null-->Line_19 $$ traces.push(trace)[ FD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_9 $$ String curParentTreePath = (String) trace[1][ CD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_11 $$ treeModelTasks.rebuildDependentModelsTreePaths(curParentPrimaryKey, curParentTreePath)[ CD ]
Line_9 $$ String curParentTreePath = (String) trace[1]-->Line_11 $$ treeModelTasks.rebuildDependentModelsTreePaths(curParentPrimaryKey, curParentTreePath)[ FD ]
Line_6 $$ Object[] trace = null-->Line_7 $$ while ((trace = traces.poll()) != null) [ FD ]
Line_4 $$ Deque<Object[]> traces = new LinkedList()-->Line_19 $$ traces.push(trace)[ FD ]
Line_17 $$ TreeModel treeModel = treeModels.get(treeModels.size() - 1)-->Line_23 $$ treeModel.updateTreePath(treePath)[ FD ]
Line_3 $$ List<TreeModel> modifiedTreeModels = new ArrayList()-->Line_25 $$ modifiedTreeModels.add(treeModel)[ FD ]
Line_4 $$ Deque<Object[]> traces = new LinkedList()-->Line_5 $$ traces.push(new Object[] [ FD ]
Line_3 $$ List<TreeModel> modifiedTreeModels = new ArrayList()-->Line_28 $$ treeModelTasks.reindexTreeModels(modifiedTreeModels)[ FD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_12 $$ List<? extends TreeModel> treeModels = treeModelTasks.findTreeModels(previousPrimaryKey, companyId, curParentPrimaryKey, _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE)[ CD ]
Line_9 $$ String curParentTreePath = (String) trace[1]-->Line_22 $$ String treePath = curParentTreePath.concat(String.valueOf(treeModel.getPrimaryKeyObj())).concat(StringPool.SLASH)[ FD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_10 $$ Long previousPrimaryKey = (Long) trace[2][ CD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_28 $$ treeModelTasks.reindexTreeModels(modifiedTreeModels)[ FD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_8 $$ Long curParentPrimaryKey = (Long) trace[0][ CD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_5 $$ traces.push(new Object[] [ CD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_7 $$ while ((trace = traces.poll()) != null) [ CD ]
Line_16 $$ if (treeModels.size() == _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE) -->Line_18 $$ trace[2] = treeModel.getPrimaryKeyObj()[ CD ]
Line_17 $$ TreeModel treeModel = treeModels.get(treeModels.size() - 1)-->Line_22 $$ String treePath = curParentTreePath.concat(String.valueOf(treeModel.getPrimaryKeyObj())).concat(StringPool.SLASH)[ FD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_11 $$ treeModelTasks.rebuildDependentModelsTreePaths(curParentPrimaryKey, curParentTreePath)[ FD ]
Line_12 $$ List<? extends TreeModel> treeModels = treeModelTasks.findTreeModels(previousPrimaryKey, companyId, curParentPrimaryKey, _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE)-->Line_16 $$ if (treeModels.size() == _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE) [ FD ]
Line_17 $$ TreeModel treeModel = treeModels.get(treeModels.size() - 1)-->Line_25 $$ modifiedTreeModels.add(treeModel)[ FD ]
Line_8 $$ Long curParentPrimaryKey = (Long) trace[0]-->Line_12 $$ List<? extends TreeModel> treeModels = treeModelTasks.findTreeModels(previousPrimaryKey, companyId, curParentPrimaryKey, _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE)[ FD ]
Line_12 $$ List<? extends TreeModel> treeModels = treeModelTasks.findTreeModels(previousPrimaryKey, companyId, curParentPrimaryKey, _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE)-->Line_13 $$ if (treeModels.isEmpty()) [ FD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_16 $$ if (treeModels.size() == _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE) [ CD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_3 $$ List<TreeModel> modifiedTreeModels = new ArrayList()[ CD ]
Line_8 $$ Long curParentPrimaryKey = (Long) trace[0]-->Line_11 $$ treeModelTasks.rebuildDependentModelsTreePaths(curParentPrimaryKey, curParentTreePath)[ FD ]
Line_16 $$ if (treeModels.size() == _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE) -->Line_19 $$ traces.push(trace)[ CD ]
Line_22 $$ String treePath = curParentTreePath.concat(String.valueOf(treeModel.getPrimaryKeyObj())).concat(StringPool.SLASH)-->Line_23 $$ treeModel.updateTreePath(treePath)[ FD ]
Line_17 $$ TreeModel treeModel = treeModels.get(treeModels.size() - 1)-->Line_18 $$ trace[2] = treeModel.getPrimaryKeyObj()[ FD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_4 $$ Deque<Object[]> traces = new LinkedList()[ CD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_19 $$ traces.push(trace)[ FD ]
Line_17 $$ TreeModel treeModel = treeModels.get(treeModels.size() - 1)-->Line_24 $$ traces.push(new Object[] [ FD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_6 $$ Object[] trace = null[ CD ]
Line_4 $$ Deque<Object[]> traces = new LinkedList()-->Line_7 $$ while ((trace = traces.poll()) != null) [ FD ]
Line_16 $$ if (treeModels.size() == _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE) -->Line_17 $$ TreeModel treeModel = treeModels.get(treeModels.size() - 1)[ CD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_12 $$ List<? extends TreeModel> treeModels = treeModelTasks.findTreeModels(previousPrimaryKey, companyId, curParentPrimaryKey, _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE)[ FD ]
Line_10 $$ Long previousPrimaryKey = (Long) trace[2]-->Line_12 $$ List<? extends TreeModel> treeModels = treeModelTasks.findTreeModels(previousPrimaryKey, companyId, curParentPrimaryKey, _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE)[ FD ]
Line_4 $$ Deque<Object[]> traces = new LinkedList()-->Line_24 $$ traces.push(new Object[] [ FD ]
Line_7 $$ while ((trace = traces.poll()) != null) -->Line_13 $$ if (treeModels.isEmpty()) [ CD ]
Line_12 $$ List<? extends TreeModel> treeModels = treeModelTasks.findTreeModels(previousPrimaryKey, companyId, curParentPrimaryKey, _MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE)-->Line_17 $$ TreeModel treeModel = treeModels.get(treeModels.size() - 1)[ FD ]
Line_2 $$ public static void rebuildTree(long companyId, long parentPrimaryKey, String parentTreePath, TreeModelTasks<?> treeModelTasks) throws PortalException -->Line_28 $$ treeModelTasks.reindexTreeModels(modifiedTreeModels)[ CD ]
