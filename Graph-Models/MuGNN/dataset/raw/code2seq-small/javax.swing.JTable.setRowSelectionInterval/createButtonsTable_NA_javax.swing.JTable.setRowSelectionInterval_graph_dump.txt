Line_18 $$ final JButton upButton = new JButton()-->Line_64 $$ upButton.addActionListener(new ActionListener() [ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_70 $$ table.setRowSelectionInterval(index - 1, index - 1)[ FD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_38 $$ if (editorComponent != null) [ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_5 $$ buttonsPanel.setLayout(new GridBagLayout())[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_83 $$ table.requestFocus()[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_86 $$ table.getSelectionModel().addListSelectionListener(new ListSelectionListener() [ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_9 $$ gbConstraints.insets = new Insets(2, 4, 2, 4)[ CD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_37 $$ final Component editorComponent = table.getEditorComponent()[ CD ]
Line_38 $$ if (editorComponent != null) -->Line_39 $$ final Rectangle bounds = editorComponent.getBounds()[ CD ]
Line_3 $$ JPanel buttonsPanel = new JPanel()-->Line_27 $$ buttonsPanel.add(new JPanel(), gbConstraints)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_35 $$ table.setColumnSelectionInterval(0, 0)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_6 $$ GridBagConstraints gbConstraints = new GridBagConstraints()[ CD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_54 $$ if (index > 0) [ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_66 $$ TableUtil.stopEditing(table)[ FD ]
Line_64 $$ upButton.addActionListener(new ActionListener() -->Line_72 $$ table.requestFocus()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_60 $$ table.getParent().repaint()[ FD ]
Line_14 $$ final JButton removeButton = new JButton()-->Line_45 $$ removeButton.addActionListener(new ActionListener() [ FD ]
Line_3 $$ JPanel buttonsPanel = new JPanel()-->Line_17 $$ buttonsPanel.add(removeButton, gbConstraints)[ FD ]
Line_18 $$ final JButton upButton = new JButton()-->Line_88 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_14 $$ final JButton removeButton = new JButton()-->Line_15 $$ removeButton.setText(addMnemonics ? UIBundle.message("row.remove") : UIBundle.message("row.remove.without.mnemonic"))[ FD ]
Line_49 $$ if (0 <= index && index < tableModel.getRowCount()) -->Line_51 $$ if (index < tableModel.getRowCount()) [ CD ]
Line_75 $$ downButton.addActionListener(new ActionListener() -->Line_79 $$ if (0 <= index && index < tableModel.getRowCount() - 1) [ CD ]
Line_22 $$ final JButton downButton = new JButton()-->Line_88 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_78 $$ int index = table.getSelectedRow()[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_34 $$ table.setRowSelectionInterval(index, index)[ FD ]
Line_22 $$ final JButton downButton = new JButton()-->Line_91 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_36 $$ table.getParent().repaint()[ CD ]
Line_45 $$ removeButton.addActionListener(new ActionListener() -->Line_49 $$ if (0 <= index && index < tableModel.getRowCount()) [ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_40 $$ table.scrollRectToVisible(bounds)[ FD ]
Line_86 $$ table.getSelectionModel().addListSelectionListener(new ListSelectionListener() -->Line_88 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ CD ]
Line_78 $$ int index = table.getSelectedRow()-->Line_80 $$ tableModel.exchangeRows(index, index + 1)[ FD ]
Line_6 $$ GridBagConstraints gbConstraints = new GridBagConstraints()-->Line_17 $$ buttonsPanel.add(removeButton, gbConstraints)[ FD ]
Line_14 $$ final JButton removeButton = new JButton()-->Line_16 $$ removeButton.setDefaultCapable(false)[ FD ]
Line_6 $$ GridBagConstraints gbConstraints = new GridBagConstraints()-->Line_25 $$ buttonsPanel.add(downButton, gbConstraints)[ FD ]
Line_10 $$ final JButton addButton = new JButton()-->Line_13 $$ buttonsPanel.add(addButton, gbConstraints)[ FD ]
Line_10 $$ final JButton addButton = new JButton()-->Line_12 $$ addButton.setDefaultCapable(false)[ FD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_33 $$ table.editCellAt(index, 0)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_4 $$ buttonsPanel.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4))[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_30 $$ TableUtil.stopEditing(table)[ FD ]
Line_37 $$ final Component editorComponent = table.getEditorComponent()-->Line_41 $$ editorComponent.requestFocus()[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_61 $$ table.requestFocus()[ FD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_33 $$ table.editCellAt(index, 0)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_47 $$ TableUtil.stopEditing(table)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_49 $$ if (0 <= index && index < tableModel.getRowCount()) [ FD ]
Line_10 $$ final JButton addButton = new JButton()-->Line_11 $$ addButton.setText(addMnemonics ? UIBundle.message("row.add") : UIBundle.message("row.add.without.mnemonic"))[ FD ]
Line_75 $$ downButton.addActionListener(new ActionListener() -->Line_83 $$ table.requestFocus()[ CD ]
Line_64 $$ upButton.addActionListener(new ActionListener() -->Line_68 $$ if (0 < index && index < tableModel.getRowCount()) [ CD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_50 $$ tableModel.removeRow(index)[ FD ]
Line_48 $$ int index = table.getSelectedRow()-->Line_80 $$ tableModel.exchangeRows(index, index + 1)[ FD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_69 $$ tableModel.exchangeRows(index, index - 1)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_3 $$ JPanel buttonsPanel = new JPanel()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_14 $$ final JButton removeButton = new JButton()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_21 $$ buttonsPanel.add(upButton, gbConstraints)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_51 $$ if (index < tableModel.getRowCount()) [ FD ]
Line_45 $$ removeButton.addActionListener(new ActionListener() -->Line_60 $$ table.getParent().repaint()[ CD ]
Line_3 $$ JPanel buttonsPanel = new JPanel()-->Line_5 $$ buttonsPanel.setLayout(new GridBagLayout())[ FD ]
Line_10 $$ final JButton addButton = new JButton()-->Line_91 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_27 $$ buttonsPanel.add(new JPanel(), gbConstraints)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_91 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_37 $$ final Component editorComponent = table.getEditorComponent()[ FD ]
Line_51 $$ if (index < tableModel.getRowCount()) -->Line_52 $$ table.setRowSelectionInterval(index, index)[ CD ]
Line_48 $$ int index = table.getSelectedRow()-->Line_50 $$ tableModel.removeRow(index)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_25 $$ buttonsPanel.add(downButton, gbConstraints)[ CD ]
Line_67 $$ int index = table.getSelectedRow()-->Line_69 $$ tableModel.exchangeRows(index, index - 1)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_26 $$ gbConstraints.weighty = 1[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_67 $$ int index = table.getSelectedRow()[ FD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_52 $$ table.setRowSelectionInterval(index, index)[ FD ]
Line_14 $$ final JButton removeButton = new JButton()-->Line_88 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_68 $$ if (0 < index && index < tableModel.getRowCount()) [ FD ]
Line_6 $$ GridBagConstraints gbConstraints = new GridBagConstraints()-->Line_13 $$ buttonsPanel.add(addButton, gbConstraints)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_15 $$ removeButton.setText(addMnemonics ? UIBundle.message("row.remove") : UIBundle.message("row.remove.without.mnemonic"))[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_81 $$ table.setRowSelectionInterval(index + 1, index + 1)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_16 $$ removeButton.setDefaultCapable(false)[ CD ]
Line_48 $$ int index = table.getSelectedRow()-->Line_51 $$ if (index < tableModel.getRowCount()) [ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_88 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_67 $$ int index = table.getSelectedRow()-->Line_80 $$ tableModel.exchangeRows(index, index + 1)[ FD ]
Line_45 $$ removeButton.addActionListener(new ActionListener() -->Line_47 $$ TableUtil.stopEditing(table)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_50 $$ tableModel.removeRow(index)[ FD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_34 $$ table.setRowSelectionInterval(index, index)[ FD ]
Line_48 $$ int index = table.getSelectedRow()-->Line_54 $$ if (index > 0) [ FD ]
Line_22 $$ final JButton downButton = new JButton()-->Line_75 $$ downButton.addActionListener(new ActionListener() [ FD ]
Line_14 $$ final JButton removeButton = new JButton()-->Line_91 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_68 $$ if (0 < index && index < tableModel.getRowCount()) -->Line_70 $$ table.setRowSelectionInterval(index - 1, index - 1)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_20 $$ upButton.setDefaultCapable(false)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_80 $$ tableModel.exchangeRows(index, index + 1)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_31 $$ tableModel.addRow()[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_22 $$ final JButton downButton = new JButton()[ CD ]
Line_22 $$ final JButton downButton = new JButton()-->Line_25 $$ buttonsPanel.add(downButton, gbConstraints)[ FD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_80 $$ tableModel.exchangeRows(index, index + 1)[ FD ]
Line_64 $$ upButton.addActionListener(new ActionListener() -->Line_67 $$ int index = table.getSelectedRow()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_7 $$ gbConstraints.gridwidth = GridBagConstraints.REMAINDER[ CD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_31 $$ tableModel.addRow()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_28 $$ addButton.addActionListener(new ActionListener() [ CD ]
Line_54 $$ if (index > 0) -->Line_55 $$ table.setRowSelectionInterval(index - 1, index - 1)[ CD ]
Line_64 $$ upButton.addActionListener(new ActionListener() -->Line_66 $$ TableUtil.stopEditing(table)[ CD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_34 $$ table.setRowSelectionInterval(index, index)[ CD ]
Line_22 $$ final JButton downButton = new JButton()-->Line_58 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_22 $$ final JButton downButton = new JButton()-->Line_24 $$ downButton.setDefaultCapable(false)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_13 $$ buttonsPanel.add(addButton, gbConstraints)[ CD ]
Line_39 $$ final Rectangle bounds = editorComponent.getBounds()-->Line_40 $$ table.scrollRectToVisible(bounds)[ FD ]
Line_37 $$ final Component editorComponent = table.getEditorComponent()-->Line_38 $$ if (editorComponent != null) [ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_91 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_3 $$ JPanel buttonsPanel = new JPanel()-->Line_13 $$ buttonsPanel.add(addButton, gbConstraints)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_10 $$ final JButton addButton = new JButton()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_45 $$ removeButton.addActionListener(new ActionListener() [ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_18 $$ final JButton upButton = new JButton()[ CD ]
Line_68 $$ if (0 < index && index < tableModel.getRowCount()) -->Line_69 $$ tableModel.exchangeRows(index, index - 1)[ CD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_35 $$ table.setColumnSelectionInterval(0, 0)[ CD ]
Line_18 $$ final JButton upButton = new JButton()-->Line_19 $$ upButton.setText(addMnemonics ? UIBundle.message("row.move.up") : UIBundle.message("row.move.up.without.mnemonic"))[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_24 $$ downButton.setDefaultCapable(false)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_69 $$ tableModel.exchangeRows(index, index - 1)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_12 $$ addButton.setDefaultCapable(false)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_55 $$ table.setRowSelectionInterval(index - 1, index - 1)[ FD ]
Line_10 $$ final JButton addButton = new JButton()-->Line_88 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_17 $$ buttonsPanel.add(removeButton, gbConstraints)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_79 $$ if (0 <= index && index < tableModel.getRowCount() - 1) [ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_19 $$ upButton.setText(addMnemonics ? UIBundle.message("row.move.up") : UIBundle.message("row.move.up.without.mnemonic"))[ CD ]
Line_32 $$ final int index = tableModel.getRowCount() - 1-->Line_51 $$ if (index < tableModel.getRowCount()) [ FD ]
Line_10 $$ final JButton addButton = new JButton()-->Line_28 $$ addButton.addActionListener(new ActionListener() [ FD ]
Line_48 $$ int index = table.getSelectedRow()-->Line_52 $$ table.setRowSelectionInterval(index, index)[ FD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_32 $$ final int index = tableModel.getRowCount() - 1[ CD ]
Line_3 $$ JPanel buttonsPanel = new JPanel()-->Line_25 $$ buttonsPanel.add(downButton, gbConstraints)[ FD ]
Line_3 $$ JPanel buttonsPanel = new JPanel()-->Line_4 $$ buttonsPanel.setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4))[ FD ]
Line_79 $$ if (0 <= index && index < tableModel.getRowCount() - 1) -->Line_80 $$ tableModel.exchangeRows(index, index + 1)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_58 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_32 $$ final int index = tableModel.getRowCount() - 1[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_36 $$ table.getParent().repaint()[ FD ]
Line_45 $$ removeButton.addActionListener(new ActionListener() -->Line_61 $$ table.requestFocus()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_33 $$ table.editCellAt(index, 0)[ FD ]
Line_75 $$ downButton.addActionListener(new ActionListener() -->Line_78 $$ int index = table.getSelectedRow()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_11 $$ addButton.setText(addMnemonics ? UIBundle.message("row.add") : UIBundle.message("row.add.without.mnemonic"))[ CD ]
Line_48 $$ int index = table.getSelectedRow()-->Line_69 $$ tableModel.exchangeRows(index, index - 1)[ FD ]
Line_18 $$ final JButton upButton = new JButton()-->Line_20 $$ upButton.setDefaultCapable(false)[ FD ]
Line_38 $$ if (editorComponent != null) -->Line_40 $$ table.scrollRectToVisible(bounds)[ CD ]
Line_18 $$ final JButton upButton = new JButton()-->Line_91 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_48 $$ int index = table.getSelectedRow()[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_23 $$ downButton.setText(addMnemonics ? UIBundle.message("row.move.down") : UIBundle.message("row.move.down.without.mnemonic"))[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_64 $$ upButton.addActionListener(new ActionListener() [ CD ]
Line_28 $$ addButton.addActionListener(new ActionListener() -->Line_30 $$ TableUtil.stopEditing(table)[ CD ]
Line_37 $$ final Component editorComponent = table.getEditorComponent()-->Line_39 $$ final Rectangle bounds = editorComponent.getBounds()[ FD ]
Line_79 $$ if (0 <= index && index < tableModel.getRowCount() - 1) -->Line_81 $$ table.setRowSelectionInterval(index + 1, index + 1)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_92 $$ return buttonsPanel[ CD ]
Line_18 $$ final JButton upButton = new JButton()-->Line_21 $$ buttonsPanel.add(upButton, gbConstraints)[ FD ]
Line_38 $$ if (editorComponent != null) -->Line_41 $$ editorComponent.requestFocus()[ CD ]
Line_49 $$ if (0 <= index && index < tableModel.getRowCount()) -->Line_50 $$ tableModel.removeRow(index)[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_75 $$ downButton.addActionListener(new ActionListener() [ CD ]
Line_14 $$ final JButton removeButton = new JButton()-->Line_17 $$ buttonsPanel.add(removeButton, gbConstraints)[ FD ]
Line_45 $$ removeButton.addActionListener(new ActionListener() -->Line_48 $$ int index = table.getSelectedRow()[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_72 $$ table.requestFocus()[ FD ]
Line_18 $$ final JButton upButton = new JButton()-->Line_58 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_77 $$ TableUtil.stopEditing(table)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_86 $$ table.getSelectionModel().addListSelectionListener(new ListSelectionListener() [ FD ]
Line_6 $$ GridBagConstraints gbConstraints = new GridBagConstraints()-->Line_21 $$ buttonsPanel.add(upButton, gbConstraints)[ FD ]
Line_14 $$ final JButton removeButton = new JButton()-->Line_58 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_51 $$ if (index < tableModel.getRowCount()) -->Line_54 $$ if (index > 0) [ CD ]
Line_6 $$ GridBagConstraints gbConstraints = new GridBagConstraints()-->Line_27 $$ buttonsPanel.add(new JPanel(), gbConstraints)[ FD ]
Line_49 $$ if (0 <= index && index < tableModel.getRowCount()) -->Line_58 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ CD ]
Line_75 $$ downButton.addActionListener(new ActionListener() -->Line_77 $$ TableUtil.stopEditing(table)[ CD ]
Line_10 $$ final JButton addButton = new JButton()-->Line_58 $$ updateButtons(table, tableModel, addButton, removeButton, upButton, downButton)[ FD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_8 $$ gbConstraints.fill = GridBagConstraints.HORIZONTAL[ CD ]
Line_2 $$ public static JPanel createButtonsTable(final JTable table, final RowEditableTableModel tableModel, boolean addMnemonics) -->Line_52 $$ table.setRowSelectionInterval(index, index)[ FD ]
Line_3 $$ JPanel buttonsPanel = new JPanel()-->Line_21 $$ buttonsPanel.add(upButton, gbConstraints)[ FD ]
Line_22 $$ final JButton downButton = new JButton()-->Line_23 $$ downButton.setText(addMnemonics ? UIBundle.message("row.move.down") : UIBundle.message("row.move.down.without.mnemonic"))[ FD ]
