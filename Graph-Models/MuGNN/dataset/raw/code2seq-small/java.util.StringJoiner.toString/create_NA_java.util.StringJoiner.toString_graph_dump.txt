Line_5 $$ ImmutableList.Builder<Object> values = ImmutableList.builder()-->Line_57 $$ values.add(maxValue)[ FD ]
Line_35 $$ Object maxValue = null-->Line_44 $$ maxValue = range.getHigh().getValue()[ FD ]
Line_35 $$ Object maxValue = null-->Line_54 $$ if (maxValue != null) [ FD ]
Line_12 $$ Type type = handle.getColumnType()-->Line_13 $$ JDBCType jdbcType = jdbcType(type)[ FD ]
Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())-->Line_44 $$ maxValue = range.getHigh().getValue()[ FD ]
Line_34 $$ Object minValue = null-->Line_52 $$ values.add(minValue)[ FD ]
Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())-->Line_37 $$ minValue = range.getSingleValue()[ FD ]
Line_36 $$ if (range.isSingleValue()) -->Line_43 $$ if (!range.getHigh().isUpperUnbounded()) [ CD ]
Line_7 $$ Domain domain = entry.getValue()-->Line_29 $$ Ranges ranges = domain.getValues().getRanges()[ FD ]
Line_18 $$ if (domain.isSingleValue()) -->Line_19 $$ predicate.add("shard_uuid = ?")[ CD ]
Line_2 $$ public static ShardPredicate create(TupleDomain<RaptorColumnHandle> tupleDomain) -->Line_5 $$ ImmutableList.Builder<Object> values = ImmutableList.builder()[ CD ]
Line_36 $$ if (range.isSingleValue()) -->Line_37 $$ minValue = range.getSingleValue()[ CD ]
Line_47 $$ String min = minColumn(handle.getColumnId())-->Line_55 $$ predicate.add(format("(%s <= ? OR %s IS NULL)", min, min))[ FD ]
Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())-->Line_41 $$ minValue = range.getLow().getValue()[ FD ]
Line_3 $$ StringJoiner predicate = new StringJoiner(" AND ").setEmptyValue("true")-->Line_19 $$ predicate.add("shard_uuid = ?")[ FD ]
Line_49 $$ if (minValue != null) -->Line_52 $$ values.add(minValue)[ CD ]
Line_13 $$ JDBCType jdbcType = jdbcType(type)-->Line_51 $$ types.add(jdbcType)[ FD ]
Line_41 $$ minValue = range.getLow().getValue()-->Line_52 $$ values.add(minValue)[ FD ]
Line_5 $$ ImmutableList.Builder<Object> values = ImmutableList.builder()-->Line_52 $$ values.add(minValue)[ FD ]
Line_36 $$ if (range.isSingleValue()) -->Line_38 $$ maxValue = range.getSingleValue()[ CD ]
Line_38 $$ maxValue = range.getSingleValue()-->Line_57 $$ values.add(maxValue)[ FD ]
Line_2 $$ public static ShardPredicate create(TupleDomain<RaptorColumnHandle> tupleDomain) -->Line_6 $$ for (Entry<RaptorColumnHandle, Domain> entry : tupleDomain.getDomains().get().entrySet()) [ FD ]
Line_40 $$ if (!range.getLow().isLowerUnbounded()) -->Line_41 $$ minValue = range.getLow().getValue()[ CD ]
Line_4 $$ ImmutableList.Builder<JDBCType> types = ImmutableList.builder()-->Line_20 $$ types.add(jdbcType(type))[ FD ]
Line_18 $$ if (domain.isSingleValue()) -->Line_21 $$ Slice uuidSlice = checkType(entry.getValue().getSingleValue(), Slice.class, "value")[ CD ]
Line_11 $$ RaptorColumnHandle handle = entry.getKey()-->Line_48 $$ String max = maxColumn(handle.getColumnId())[ FD ]
Line_37 $$ minValue = range.getSingleValue()-->Line_52 $$ values.add(minValue)[ FD ]
Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())-->Line_43 $$ if (!range.getHigh().isUpperUnbounded()) [ FD ]
Line_44 $$ maxValue = range.getHigh().getValue()-->Line_57 $$ values.add(maxValue)[ FD ]
Line_29 $$ Ranges ranges = domain.getValues().getRanges()-->Line_30 $$ if (ranges.getRangeCount() != 1) [ FD ]
Line_3 $$ StringJoiner predicate = new StringJoiner(" AND ").setEmptyValue("true")-->Line_60 $$ return new ShardPredicate(predicate.toString(), types.build(), values.build())[ FD ]
Line_54 $$ if (maxValue != null) -->Line_55 $$ predicate.add(format("(%s <= ? OR %s IS NULL)", min, min))[ CD ]
Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())-->Line_38 $$ maxValue = range.getSingleValue()[ FD ]
Line_49 $$ if (minValue != null) -->Line_50 $$ predicate.add(format("(%s >= ? OR %s IS NULL)", max, max))[ CD ]
Line_29 $$ Ranges ranges = domain.getValues().getRanges()-->Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())[ FD ]
Line_36 $$ if (range.isSingleValue()) -->Line_40 $$ if (!range.getLow().isLowerUnbounded()) [ CD ]
Line_11 $$ RaptorColumnHandle handle = entry.getKey()-->Line_12 $$ Type type = handle.getColumnType()[ FD ]
Line_13 $$ JDBCType jdbcType = jdbcType(type)-->Line_14 $$ if (jdbcType == null) [ FD ]
Line_3 $$ StringJoiner predicate = new StringJoiner(" AND ").setEmptyValue("true")-->Line_50 $$ predicate.add(format("(%s >= ? OR %s IS NULL)", max, max))[ FD ]
Line_6 $$ for (Entry<RaptorColumnHandle, Domain> entry : tupleDomain.getDomains().get().entrySet()) -->Line_7 $$ Domain domain = entry.getValue()[ FD ]
Line_48 $$ String max = maxColumn(handle.getColumnId())-->Line_50 $$ predicate.add(format("(%s >= ? OR %s IS NULL)", max, max))[ FD ]
Line_5 $$ ImmutableList.Builder<Object> values = ImmutableList.builder()-->Line_22 $$ values.add(uuidStringToBytes(uuidSlice))[ FD ]
Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())-->Line_36 $$ if (range.isSingleValue()) [ FD ]
Line_7 $$ Domain domain = entry.getValue()-->Line_26 $$ if (!domain.getType().isOrderable()) [ FD ]
Line_4 $$ ImmutableList.Builder<JDBCType> types = ImmutableList.builder()-->Line_60 $$ return new ShardPredicate(predicate.toString(), types.build(), values.build())[ FD ]
Line_18 $$ if (domain.isSingleValue()) -->Line_22 $$ values.add(uuidStringToBytes(uuidSlice))[ CD ]
Line_5 $$ ImmutableList.Builder<Object> values = ImmutableList.builder()-->Line_60 $$ return new ShardPredicate(predicate.toString(), types.build(), values.build())[ FD ]
Line_49 $$ if (minValue != null) -->Line_51 $$ types.add(jdbcType)[ CD ]
Line_2 $$ public static ShardPredicate create(TupleDomain<RaptorColumnHandle> tupleDomain) -->Line_4 $$ ImmutableList.Builder<JDBCType> types = ImmutableList.builder()[ CD ]
Line_44 $$ maxValue = range.getHigh().getValue()-->Line_54 $$ if (maxValue != null) [ FD ]
Line_17 $$ if (handle.isShardUuid()) -->Line_18 $$ if (domain.isSingleValue()) [ CD ]
Line_34 $$ Object minValue = null-->Line_37 $$ minValue = range.getSingleValue()[ FD ]
Line_18 $$ if (domain.isSingleValue()) -->Line_20 $$ types.add(jdbcType(type))[ CD ]
Line_4 $$ ImmutableList.Builder<JDBCType> types = ImmutableList.builder()-->Line_51 $$ types.add(jdbcType)[ FD ]
Line_11 $$ RaptorColumnHandle handle = entry.getKey()-->Line_17 $$ if (handle.isShardUuid()) [ FD ]
Line_35 $$ Object maxValue = null-->Line_38 $$ maxValue = range.getSingleValue()[ FD ]
Line_6 $$ for (Entry<RaptorColumnHandle, Domain> entry : tupleDomain.getDomains().get().entrySet()) -->Line_21 $$ Slice uuidSlice = checkType(entry.getValue().getSingleValue(), Slice.class, "value")[ FD ]
Line_34 $$ Object minValue = null-->Line_41 $$ minValue = range.getLow().getValue()[ FD ]
Line_7 $$ Domain domain = entry.getValue()-->Line_18 $$ if (domain.isSingleValue()) [ FD ]
Line_11 $$ RaptorColumnHandle handle = entry.getKey()-->Line_47 $$ String min = minColumn(handle.getColumnId())[ FD ]
Line_12 $$ Type type = handle.getColumnType()-->Line_20 $$ types.add(jdbcType(type))[ FD ]
Line_54 $$ if (maxValue != null) -->Line_57 $$ values.add(maxValue)[ CD ]
Line_37 $$ minValue = range.getSingleValue()-->Line_49 $$ if (minValue != null) [ FD ]
Line_4 $$ ImmutableList.Builder<JDBCType> types = ImmutableList.builder()-->Line_56 $$ types.add(jdbcType)[ FD ]
Line_54 $$ if (maxValue != null) -->Line_56 $$ types.add(jdbcType)[ CD ]
Line_2 $$ public static ShardPredicate create(TupleDomain<RaptorColumnHandle> tupleDomain) -->Line_3 $$ StringJoiner predicate = new StringJoiner(" AND ").setEmptyValue("true")[ CD ]
Line_43 $$ if (!range.getHigh().isUpperUnbounded()) -->Line_44 $$ maxValue = range.getHigh().getValue()[ CD ]
Line_13 $$ JDBCType jdbcType = jdbcType(type)-->Line_56 $$ types.add(jdbcType)[ FD ]
Line_7 $$ Domain domain = entry.getValue()-->Line_8 $$ if (domain.isNullAllowed() || domain.isAll()) [ FD ]
Line_41 $$ minValue = range.getLow().getValue()-->Line_49 $$ if (minValue != null) [ FD ]
Line_34 $$ Object minValue = null-->Line_49 $$ if (minValue != null) [ FD ]
Line_3 $$ StringJoiner predicate = new StringJoiner(" AND ").setEmptyValue("true")-->Line_55 $$ predicate.add(format("(%s <= ? OR %s IS NULL)", min, min))[ FD ]
Line_37 $$ minValue = range.getSingleValue()-->Line_41 $$ minValue = range.getLow().getValue()[ FD ]
Line_38 $$ maxValue = range.getSingleValue()-->Line_44 $$ maxValue = range.getHigh().getValue()[ FD ]
Line_33 $$ Range range = getOnlyElement(ranges.getOrderedRanges())-->Line_40 $$ if (!range.getLow().isLowerUnbounded()) [ FD ]
Line_6 $$ for (Entry<RaptorColumnHandle, Domain> entry : tupleDomain.getDomains().get().entrySet()) -->Line_11 $$ RaptorColumnHandle handle = entry.getKey()[ FD ]
Line_21 $$ Slice uuidSlice = checkType(entry.getValue().getSingleValue(), Slice.class, "value")-->Line_22 $$ values.add(uuidStringToBytes(uuidSlice))[ FD ]
Line_35 $$ Object maxValue = null-->Line_57 $$ values.add(maxValue)[ FD ]
Line_2 $$ public static ShardPredicate create(TupleDomain<RaptorColumnHandle> tupleDomain) -->Line_60 $$ return new ShardPredicate(predicate.toString(), types.build(), values.build())[ CD ]
Line_38 $$ maxValue = range.getSingleValue()-->Line_54 $$ if (maxValue != null) [ FD ]
