Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_7 $$ Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability())[ CD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_10 $$ if (scheduleAsynchronously && numNodes == 0) [ CD ]
Line_15 $$ for (RMContainer container : runningContainers) -->Line_16 $$ completedContainer(container, SchedulerUtils.createAbnormalContainerStatus(container.getContainerId(), SchedulerUtils.LOST_CONTAINER), RMContainerEventType.KILL)[ FD ]
Line_10 $$ if (scheduleAsynchronously && numNodes == 0) -->Line_11 $$ asyncSchedulerThread.suspendSchedule()[ CD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_23 $$ this.nodes.remove(nodeInfo.getNodeID())[ CD ]
Line_20 $$ if (reservedContainer != null) -->Line_21 $$ completedContainer(reservedContainer, SchedulerUtils.createAbnormalContainerStatus(reservedContainer.getContainerId(), SchedulerUtils.LOST_CONTAINER), RMContainerEventType.KILL)[ CD ]
Line_3 $$ FiCaSchedulerNode node = nodes.get(nodeInfo.getNodeID())-->Line_7 $$ Resources.subtractFrom(clusterResource, node.getRMNode().getTotalCapability())[ FD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_24 $$ LOG.info("Removed node " + nodeInfo.getNodeAddress() + " clusterResource: " + clusterResource)[ FD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_8 $$ root.updateClusterResource(clusterResource)[ CD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_9 $$ int numNodes = numNodeManagers.decrementAndGet()[ CD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_4 $$ if (node == null) [ CD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_3 $$ FiCaSchedulerNode node = nodes.get(nodeInfo.getNodeID())[ FD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_20 $$ if (reservedContainer != null) [ CD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_3 $$ FiCaSchedulerNode node = nodes.get(nodeInfo.getNodeID())[ CD ]
Line_3 $$ FiCaSchedulerNode node = nodes.get(nodeInfo.getNodeID())-->Line_4 $$ if (node == null) [ FD ]
Line_4 $$ if (node == null) -->Line_5 $$ return[ CD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_23 $$ this.nodes.remove(nodeInfo.getNodeID())[ FD ]
Line_2 $$ private synchronized void removeNode(RMNode nodeInfo) -->Line_24 $$ LOG.info("Removed node " + nodeInfo.getNodeAddress() + " clusterResource: " + clusterResource)[ CD ]
