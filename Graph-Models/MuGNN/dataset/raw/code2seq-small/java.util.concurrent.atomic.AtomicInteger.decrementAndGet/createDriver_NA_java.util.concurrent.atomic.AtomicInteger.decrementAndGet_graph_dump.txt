Line_5 $$ if (partitionedSplit != null) -->Line_6 $$ driver.updateSource(new TaskSource(partitionedSourceId, ImmutableSet.of(partitionedSplit), true))[ CD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_6 $$ driver.updateSource(new TaskSource(partitionedSourceId, ImmutableSet.of(partitionedSplit), true))[ FD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_5 $$ if (partitionedSplit != null) [ FD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_3 $$ Driver driver = driverFactory.createDriver(driverContext)[ CD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_11 $$ pendingCreation.decrementAndGet()[ CD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_12 $$ closeDriverFactoryIfFullyCreated()[ CD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_13 $$ return driver[ CD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_3 $$ Driver driver = driverFactory.createDriver(driverContext)[ FD ]
Line_3 $$ Driver driver = driverFactory.createDriver(driverContext)-->Line_9 $$ driver.updateSource(source)[ FD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_4 $$ drivers.add(new WeakReference(driver))[ CD ]
Line_2 $$ private Driver createDriver(DriverContext driverContext, @Nullable ScheduledSplit partitionedSplit) -->Line_5 $$ if (partitionedSplit != null) [ CD ]
Line_8 $$ for (TaskSource source : unpartitionedSources.values()) -->Line_9 $$ driver.updateSource(source)[ FD ]
Line_3 $$ Driver driver = driverFactory.createDriver(driverContext)-->Line_6 $$ driver.updateSource(new TaskSource(partitionedSourceId, ImmutableSet.of(partitionedSplit), true))[ FD ]
