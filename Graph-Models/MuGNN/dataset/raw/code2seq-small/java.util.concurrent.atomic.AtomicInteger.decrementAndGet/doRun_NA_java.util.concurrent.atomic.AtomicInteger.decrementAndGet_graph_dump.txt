Line_17 $$ if (DumbService.getInstance(myProject).isDumb() && !DumbService.isDumbAware(myPass)) -->Line_18 $$ return[ CD ]
Line_49 $$ if (predecessorsToRun == 0) -->Line_50 $$ submit(successor)[ CD ]
Line_2 $$ private void doRun() -->Line_12 $$ ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() [ CD ]
Line_6 $$ for (ScheduledPass successor : mySuccessorsOnSubmit) -->Line_50 $$ submit(successor)[ FD ]
Line_14 $$ boolean success = ApplicationManagerEx.getApplicationEx().tryRunReadAction(new Runnable() -->Line_39 $$ if (!success) [ FD ]
Line_2 $$ private void doRun() -->Line_5 $$ log(myUpdateProgress, myPass, "Started. ")[ CD ]
Line_2 $$ private void doRun() -->Line_3 $$ if (myUpdateProgress.isCanceled())[ CD ]
Line_7 $$ int predecessorsToRun = successor.myRunningPredecessorsCount.decrementAndGet()-->Line_49 $$ if (predecessorsToRun == 0) [ FD ]
Line_45 $$ if (!myUpdateProgress.isCanceled()) -->Line_46 $$ applyInformationToEditorsLater(myFileEditor, myPass, myUpdateProgress, myThreadsToStartCountdown)[ CD ]
Line_25 $$ if (!myUpdateProgress.isCanceled()) -->Line_26 $$ myUpdateProgress.cancel(e)[ CD ]
Line_3 $$ if (myUpdateProgress.isCanceled())-->Line_4 $$ return[ CD ]
Line_8 $$ if (predecessorsToRun == 0) -->Line_9 $$ submit(successor)[ CD ]
Line_39 $$ if (!success) -->Line_40 $$ myUpdateProgress.cancel()[ CD ]
Line_2 $$ private void doRun() -->Line_45 $$ if (!myUpdateProgress.isCanceled()) [ CD ]
Line_12 $$ ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() -->Line_14 $$ boolean success = ApplicationManagerEx.getApplicationEx().tryRunReadAction(new Runnable() [ CD ]
Line_12 $$ ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() -->Line_39 $$ if (!success) [ CD ]
Line_6 $$ for (ScheduledPass successor : mySuccessorsOnSubmit) -->Line_9 $$ submit(successor)[ FD ]
Line_7 $$ int predecessorsToRun = successor.myRunningPredecessorsCount.decrementAndGet()-->Line_8 $$ if (predecessorsToRun == 0) [ FD ]
Line_20 $$ if (!myUpdateProgress.isCanceled() && !myProject.isDisposed()) -->Line_21 $$ myPass.collectInformation(myUpdateProgress)[ CD ]
Line_2 $$ private void doRun() -->Line_44 $$ log(myUpdateProgress, myPass, "Finished. ")[ CD ]
