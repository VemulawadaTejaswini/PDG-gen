Line_29 $$ if (!myUpdateProgress.isCanceled()) -->Line_31 $$ myUpdateProgress.cancel(e)[ CD ]
Line_2 $$ private void doRun() -->Line_3 $$ if (myUpdateProgress.isCanceled())[ CD ]
Line_2 $$ private void doRun() -->Line_12 $$ ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() [ CD ]
Line_2 $$ private void doRun() -->Line_5 $$ log(myUpdateProgress, myPass, "Started. ")[ CD ]
Line_16 $$ boolean success = ApplicationManagerEx.getApplicationEx().tryRunReadAction(new Runnable() -->Line_44 $$ if (!success) [ FD ]
Line_7 $$ int predecessorsToRun = successor.myRunningPredecessorsCount.decrementAndGet()-->Line_54 $$ if (predecessorsToRun == 0) [ FD ]
Line_2 $$ private void doRun() -->Line_49 $$ log(myUpdateProgress, myPass, "Finished. ")[ CD ]
Line_12 $$ ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() -->Line_44 $$ if (!success) [ CD ]
Line_3 $$ if (myUpdateProgress.isCanceled())-->Line_4 $$ return[ CD ]
Line_2 $$ private void doRun() -->Line_50 $$ if (!myUpdateProgress.isCanceled()) [ CD ]
Line_6 $$ for (ScheduledPass successor : mySuccessorsOnSubmit) -->Line_55 $$ submit(successor)[ FD ]
Line_44 $$ if (!success) -->Line_45 $$ myUpdateProgress.cancel()[ CD ]
Line_21 $$ if (DumbService.getInstance(myProject).isDumb() && !DumbService.isDumbAware(myPass)) -->Line_22 $$ return[ CD ]
Line_8 $$ if (predecessorsToRun == 0) -->Line_9 $$ submit(successor)[ CD ]
Line_12 $$ ProgressManager.getInstance().executeProcessUnderProgress(new Runnable() -->Line_16 $$ boolean success = ApplicationManagerEx.getApplicationEx().tryRunReadAction(new Runnable() [ CD ]
Line_7 $$ int predecessorsToRun = successor.myRunningPredecessorsCount.decrementAndGet()-->Line_8 $$ if (predecessorsToRun == 0) [ FD ]
Line_6 $$ for (ScheduledPass successor : mySuccessorsOnSubmit) -->Line_9 $$ submit(successor)[ FD ]
Line_50 $$ if (!myUpdateProgress.isCanceled()) -->Line_51 $$ applyInformationToEditorsLater(myFileEditor, myPass, myUpdateProgress, myThreadsToStartCountdown)[ CD ]
Line_24 $$ if (!myUpdateProgress.isCanceled() && !myProject.isDisposed()) -->Line_25 $$ myPass.collectInformation(myUpdateProgress)[ CD ]
Line_54 $$ if (predecessorsToRun == 0) -->Line_55 $$ submit(successor)[ CD ]
