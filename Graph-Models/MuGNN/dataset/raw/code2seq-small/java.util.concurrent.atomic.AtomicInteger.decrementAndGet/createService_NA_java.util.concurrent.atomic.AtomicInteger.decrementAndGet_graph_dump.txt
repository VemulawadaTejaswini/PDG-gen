Line_8 $$ I proxy = (I) Proxy.newProxyInstance(getClass().getClassLoader(), new Class<?>[] -->Line_10 $$ myCallsInProgressNumber.incrementAndGet()[ CD ]
Line_3 $$ if (!myStdOutputConfigured) -->Line_6 $$ System.setErr(new LineAwarePrintStream(System.err))[ CD ]
Line_3 $$ if (!myStdOutputConfigured) -->Line_5 $$ System.setOut(new LineAwarePrintStream(System.out))[ CD ]
Line_8 $$ I proxy = (I) Proxy.newProxyInstance(getClass().getClassLoader(), new Class<?>[] -->Line_12 $$ return method.invoke(impl, args)[ FD ]
Line_2 $$ protected <I extends RemoteExternalSystemService<S>, C extends I> I createService(@NotNull Class<I> interfaceClass, @NotNull final C impl) throws ClassNotFoundException, IllegalAccessException, InstantiationException, RemoteException -->Line_8 $$ I proxy = (I) Proxy.newProxyInstance(getClass().getClassLoader(), new Class<?>[] [ CD ]
Line_8 $$ I proxy = (I) Proxy.newProxyInstance(getClass().getClassLoader(), new Class<?>[] -->Line_19 $$ return (I) UnicastRemoteObject.exportObject(proxy, 0)[ FD ]
Line_2 $$ protected <I extends RemoteExternalSystemService<S>, C extends I> I createService(@NotNull Class<I> interfaceClass, @NotNull final C impl) throws ClassNotFoundException, IllegalAccessException, InstantiationException, RemoteException -->Line_19 $$ return (I) UnicastRemoteObject.exportObject(proxy, 0)[ CD ]
Line_2 $$ protected <I extends RemoteExternalSystemService<S>, C extends I> I createService(@NotNull Class<I> interfaceClass, @NotNull final C impl) throws ClassNotFoundException, IllegalAccessException, InstantiationException, RemoteException -->Line_3 $$ if (!myStdOutputConfigured) [ CD ]
Line_2 $$ protected <I extends RemoteExternalSystemService<S>, C extends I> I createService(@NotNull Class<I> interfaceClass, @NotNull final C impl) throws ClassNotFoundException, IllegalAccessException, InstantiationException, RemoteException -->Line_12 $$ return method.invoke(impl, args)[ FD ]
