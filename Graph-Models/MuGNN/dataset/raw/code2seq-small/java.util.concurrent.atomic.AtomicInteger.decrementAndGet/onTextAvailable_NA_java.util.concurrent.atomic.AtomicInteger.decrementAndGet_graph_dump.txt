Line_13 $$ final WatcherOp watcherOp-->Line_20 $$ if (watcherOp == WatcherOp.GIVEUP) [ FD ]
Line_20 $$ if (watcherOp == WatcherOp.GIVEUP) -->Line_23 $$ if (watcherOp == WatcherOp.RESET) [ CD ]
Line_28 $$ if (myLastOp == WatcherOp.MESSAGE) -->Line_29 $$ notifyOnFailure(line, NotificationListener.URL_OPENING_LISTENER)[ CD ]
Line_13 $$ final WatcherOp watcherOp-->Line_23 $$ if (watcherOp == WatcherOp.RESET) [ FD ]
Line_9 $$ String line = event.getText().trim()-->Line_42 $$ myLines.add(line)[ FD ]
Line_31 $$ if (myLastOp == WatcherOp.REMAP || myLastOp == WatcherOp.UNWATCHEABLE) -->Line_46 $$ processChange(path, myLastOp)[ CD ]
Line_28 $$ if (myLastOp == WatcherOp.MESSAGE) -->Line_31 $$ if (myLastOp == WatcherOp.REMAP || myLastOp == WatcherOp.UNWATCHEABLE) [ CD ]
Line_32 $$ if ("#".equals(line)) -->Line_33 $$ if (myLastOp == WatcherOp.REMAP) [ CD ]
Line_31 $$ if (myLastOp == WatcherOp.REMAP || myLastOp == WatcherOp.UNWATCHEABLE) -->Line_45 $$ String path = StringUtil.trimEnd(line.replace('\0', '\n'), File.separator)[ CD ]
Line_10 $$ if (LOG.isTraceEnabled())-->Line_11 $$ LOG.trace(">> " + line)[ CD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_4 $$ LOG.warn(event.getText().trim())[ FD ]
Line_9 $$ String line = event.getText().trim()-->Line_15 $$ watcherOp = WatcherOp.valueOf(line)[ FD ]
Line_12 $$ if (myLastOp == null) -->Line_13 $$ final WatcherOp watcherOp[ CD ]
Line_20 $$ if (watcherOp == WatcherOp.GIVEUP) -->Line_21 $$ notifyOnFailure(ApplicationBundle.message("watcher.gave.up"), null)[ CD ]
Line_9 $$ String line = event.getText().trim()-->Line_32 $$ if ("#".equals(line)) [ FD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_9 $$ String line = event.getText().trim()[ FD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_10 $$ if (LOG.isTraceEnabled())[ CD ]
Line_32 $$ if ("#".equals(line)) -->Line_42 $$ myLines.add(line)[ CD ]
Line_9 $$ String line = event.getText().trim()-->Line_45 $$ String path = StringUtil.trimEnd(line.replace('\0', '\n'), File.separator)[ FD ]
Line_45 $$ String path = StringUtil.trimEnd(line.replace('\0', '\n'), File.separator)-->Line_46 $$ processChange(path, myLastOp)[ FD ]
Line_12 $$ if (myLastOp == null) -->Line_20 $$ if (watcherOp == WatcherOp.GIVEUP) [ CD ]
Line_6 $$ if (outputType != ProcessOutputTypes.STDOUT) -->Line_7 $$ return[ CD ]
Line_23 $$ if (watcherOp == WatcherOp.RESET) -->Line_24 $$ reset()[ CD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_6 $$ if (outputType != ProcessOutputTypes.STDOUT) [ CD ]
Line_13 $$ final WatcherOp watcherOp-->Line_15 $$ watcherOp = WatcherOp.valueOf(line)[ FD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_3 $$ if (outputType == ProcessOutputTypes.STDERR) [ CD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_3 $$ if (outputType == ProcessOutputTypes.STDERR) [ FD ]
Line_31 $$ if (myLastOp == WatcherOp.REMAP || myLastOp == WatcherOp.UNWATCHEABLE) -->Line_32 $$ if ("#".equals(line)) [ CD ]
Line_3 $$ if (outputType == ProcessOutputTypes.STDERR) -->Line_4 $$ LOG.warn(event.getText().trim())[ CD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_6 $$ if (outputType != ProcessOutputTypes.STDOUT) [ FD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_12 $$ if (myLastOp == null) [ CD ]
Line_12 $$ if (myLastOp == null) -->Line_28 $$ if (myLastOp == WatcherOp.MESSAGE) [ CD ]
Line_15 $$ watcherOp = WatcherOp.valueOf(line)-->Line_20 $$ if (watcherOp == WatcherOp.GIVEUP) [ FD ]
Line_33 $$ if (myLastOp == WatcherOp.REMAP) -->Line_36 $$ mySettingRoots.decrementAndGet()[ CD ]
Line_32 $$ if ("#".equals(line)) -->Line_39 $$ myLines.clear()[ CD ]
Line_9 $$ String line = event.getText().trim()-->Line_29 $$ notifyOnFailure(line, NotificationListener.URL_OPENING_LISTENER)[ FD ]
Line_2 $$ public void onTextAvailable(ProcessEvent event, Key outputType) -->Line_9 $$ String line = event.getText().trim()[ CD ]
Line_33 $$ if (myLastOp == WatcherOp.REMAP) -->Line_34 $$ processRemap()[ CD ]
Line_33 $$ if (myLastOp == WatcherOp.REMAP) -->Line_37 $$ processUnwatchable()[ CD ]
Line_15 $$ watcherOp = WatcherOp.valueOf(line)-->Line_23 $$ if (watcherOp == WatcherOp.RESET) [ FD ]
