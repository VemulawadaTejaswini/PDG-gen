Line_6 $$ if (!this.passivation.isPersistent()) -->Line_7 $$ this.executor.execute(() -> [ CD ]
Line_9 $$ BeanGroupEntry<I, T> entry = this.groupFactory.findValue(groupId)-->Line_10 $$ if (entry != null) [ FD ]
Line_8 $$ G groupId = event.getValue().getGroupId()-->Line_11 $$ try (BeanGroup<G, I, T> group = this.groupFactory.createGroup(groupId, entry)) [ FD ]
Line_11 $$ try (BeanGroup<G, I, T> group = this.groupFactory.createGroup(groupId, entry)) -->Line_12 $$ group.postActivate(event.getKey().getId(), this.passivation.getPassivationListener())[ FD ]
Line_4 $$ if (!event.isPre()) -->Line_6 $$ if (!this.passivation.isPersistent()) [ CD ]
Line_9 $$ BeanGroupEntry<I, T> entry = this.groupFactory.findValue(groupId)-->Line_11 $$ try (BeanGroup<G, I, T> group = this.groupFactory.createGroup(groupId, entry)) [ FD ]
Line_4 $$ if (!event.isPre()) -->Line_5 $$ this.passiveCount.decrementAndGet()[ CD ]
Line_8 $$ G groupId = event.getValue().getGroupId()-->Line_9 $$ BeanGroupEntry<I, T> entry = this.groupFactory.findValue(groupId)[ FD ]
