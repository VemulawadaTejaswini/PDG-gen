Line_51 $$ ActionRequest request = bulkRequest.requests.get(i)-->Line_52 $$ if (request != null && setResponseFailureIfIndexMatches(responses, i, request, index, e)) [ FD ]
Line_24 $$ final String index = entry.getKey()-->Line_52 $$ if (request != null && setResponseFailureIfIndexMatches(responses, i, request, index, e)) [ FD ]
Line_10 $$ if (request instanceof DocumentRequest) -->Line_16 $$ types.add(req.type())[ CD ]
Line_33 $$ createIndexAction.execute(createIndexRequest, new ActionListener<CreateIndexResponse>() -->Line_57 $$ if (counter.decrementAndGet() == 0) [ CD ]
Line_10 $$ if (request instanceof DocumentRequest) -->Line_11 $$ DocumentRequest req = (DocumentRequest) request[ CD ]
Line_23 $$ for (Map.Entry<String, Set<String>> entry : indicesAndTypes.entrySet()) -->Line_24 $$ final String index = entry.getKey()[ FD ]
Line_11 $$ DocumentRequest req = (DocumentRequest) request-->Line_14 $$ indicesAndTypes.put(req.index(), types = new HashSet())[ FD ]
Line_5 $$ final AtomicArray<BulkItemResponse> responses = new AtomicArray(bulkRequest.requests.size())-->Line_68 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_5 $$ final AtomicArray<BulkItemResponse> responses = new AtomicArray(bulkRequest.requests.size())-->Line_52 $$ if (request != null && setResponseFailureIfIndexMatches(responses, i, request, index, e)) [ FD ]
Line_26 $$ CreateIndexRequest createIndexRequest = new CreateIndexRequest(bulkRequest)-->Line_29 $$ createIndexRequest.mapping(type)[ FD ]
Line_52 $$ if (request != null && setResponseFailureIfIndexMatches(responses, i, request, index, e)) -->Line_53 $$ bulkRequest.requests.set(i, null)[ CD ]
Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) -->Line_26 $$ CreateIndexRequest createIndexRequest = new CreateIndexRequest(bulkRequest)[ CD ]
Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) -->Line_27 $$ createIndexRequest.index(index)[ CD ]
Line_6 $$ if (autoCreateIndex.needToCheck()) -->Line_21 $$ final AtomicInteger counter = new AtomicInteger(indicesAndTypes.size())[ CD ]
Line_5 $$ final AtomicArray<BulkItemResponse> responses = new AtomicArray(bulkRequest.requests.size())-->Line_73 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_33 $$ createIndexAction.execute(createIndexRequest, new ActionListener<CreateIndexResponse>() -->Line_52 $$ if (request != null && setResponseFailureIfIndexMatches(responses, i, request, index, e)) [ FD ]
Line_4 $$ final long startTime = System.currentTimeMillis()-->Line_68 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_13 $$ if (types == null) -->Line_14 $$ indicesAndTypes.put(req.index(), types = new HashSet())[ CD ]
Line_22 $$ ClusterState state = clusterService.state()-->Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) [ FD ]
Line_28 $$ for (String type : entry.getValue()) -->Line_29 $$ createIndexRequest.mapping(type)[ FD ]
Line_4 $$ final long startTime = System.currentTimeMillis()-->Line_73 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_6 $$ if (autoCreateIndex.needToCheck()) -->Line_22 $$ ClusterState state = clusterService.state()[ CD ]
Line_21 $$ final AtomicInteger counter = new AtomicInteger(indicesAndTypes.size())-->Line_67 $$ if (counter.decrementAndGet() == 0) [ FD ]
Line_12 $$ Set<String> types = indicesAndTypes.get(req.index())-->Line_16 $$ types.add(req.type())[ FD ]
Line_5 $$ final AtomicArray<BulkItemResponse> responses = new AtomicArray(bulkRequest.requests.size())-->Line_39 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_12 $$ Set<String> types = indicesAndTypes.get(req.index())-->Line_14 $$ indicesAndTypes.put(req.index(), types = new HashSet())[ FD ]
Line_4 $$ final long startTime = System.currentTimeMillis()-->Line_39 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_24 $$ final String index = entry.getKey()-->Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) [ FD ]
Line_33 $$ createIndexAction.execute(createIndexRequest, new ActionListener<CreateIndexResponse>() -->Line_48 $$ if (!(ExceptionsHelper.unwrapCause(e) instanceof IndexAlreadyExistsException)) [ CD ]
Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) -->Line_31 $$ createIndexRequest.cause("auto(bulk api)")[ CD ]
Line_33 $$ createIndexAction.execute(createIndexRequest, new ActionListener<CreateIndexResponse>() -->Line_37 $$ if (counter.decrementAndGet() == 0) [ CD ]
Line_10 $$ if (request instanceof DocumentRequest) -->Line_12 $$ Set<String> types = indicesAndTypes.get(req.index())[ CD ]
Line_9 $$ for (ActionRequest request : bulkRequest.requests) -->Line_10 $$ if (request instanceof DocumentRequest) [ FD ]
Line_26 $$ CreateIndexRequest createIndexRequest = new CreateIndexRequest(bulkRequest)-->Line_27 $$ createIndexRequest.index(index)[ FD ]
Line_12 $$ Set<String> types = indicesAndTypes.get(req.index())-->Line_13 $$ if (types == null) [ FD ]
Line_26 $$ CreateIndexRequest createIndexRequest = new CreateIndexRequest(bulkRequest)-->Line_32 $$ createIndexRequest.masterNodeTimeout(bulkRequest.timeout())[ FD ]
Line_67 $$ if (counter.decrementAndGet() == 0) -->Line_68 $$ executeBulk(bulkRequest, startTime, listener, responses)[ CD ]
Line_9 $$ for (ActionRequest request : bulkRequest.requests) -->Line_52 $$ if (request != null && setResponseFailureIfIndexMatches(responses, i, request, index, e)) [ FD ]
Line_6 $$ if (autoCreateIndex.needToCheck()) -->Line_73 $$ executeBulk(bulkRequest, startTime, listener, responses)[ CD ]
Line_11 $$ DocumentRequest req = (DocumentRequest) request-->Line_16 $$ types.add(req.type())[ FD ]
Line_10 $$ if (request instanceof DocumentRequest) -->Line_13 $$ if (types == null) [ CD ]
Line_5 $$ final AtomicArray<BulkItemResponse> responses = new AtomicArray(bulkRequest.requests.size())-->Line_59 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_26 $$ CreateIndexRequest createIndexRequest = new CreateIndexRequest(bulkRequest)-->Line_31 $$ createIndexRequest.cause("auto(bulk api)")[ FD ]
Line_21 $$ final AtomicInteger counter = new AtomicInteger(indicesAndTypes.size())-->Line_37 $$ if (counter.decrementAndGet() == 0) [ FD ]
Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) -->Line_32 $$ createIndexRequest.masterNodeTimeout(bulkRequest.timeout())[ CD ]
Line_26 $$ CreateIndexRequest createIndexRequest = new CreateIndexRequest(bulkRequest)-->Line_33 $$ createIndexAction.execute(createIndexRequest, new ActionListener<CreateIndexResponse>() [ FD ]
Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) -->Line_33 $$ createIndexAction.execute(createIndexRequest, new ActionListener<CreateIndexResponse>() [ CD ]
Line_33 $$ createIndexAction.execute(createIndexRequest, new ActionListener<CreateIndexResponse>() -->Line_48 $$ if (!(ExceptionsHelper.unwrapCause(e) instanceof IndexAlreadyExistsException)) [ FD ]
Line_25 $$ if (autoCreateIndex.shouldAutoCreate(index, state)) -->Line_67 $$ if (counter.decrementAndGet() == 0) [ CD ]
Line_14 $$ indicesAndTypes.put(req.index(), types = new HashSet())-->Line_16 $$ types.add(req.type())[ FD ]
Line_23 $$ for (Map.Entry<String, Set<String>> entry : indicesAndTypes.entrySet()) -->Line_28 $$ for (String type : entry.getValue()) [ FD ]
Line_4 $$ final long startTime = System.currentTimeMillis()-->Line_59 $$ executeBulk(bulkRequest, startTime, listener, responses)[ FD ]
Line_21 $$ final AtomicInteger counter = new AtomicInteger(indicesAndTypes.size())-->Line_57 $$ if (counter.decrementAndGet() == 0) [ FD ]
Line_11 $$ DocumentRequest req = (DocumentRequest) request-->Line_12 $$ Set<String> types = indicesAndTypes.get(req.index())[ FD ]
Line_9 $$ for (ActionRequest request : bulkRequest.requests) -->Line_18 $$ throw new ElasticsearchException("Parsed unknown request in bulk actions: " + request.getClass().getSimpleName())[ FD ]
Line_24 $$ final String index = entry.getKey()-->Line_27 $$ createIndexRequest.index(index)[ FD ]
