Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_3 $$ if (editor == getConsoleEditor()) [ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_6 $$ final ConsoleGutterComponent lineStartGutter = new ConsoleGutterComponent(editor, gutterContentProvider, true)[ CD ]
Line_9 $$ ((SoftWrapModelImpl) editor.getSoftWrapModel()).getApplianceManager().setWidthProvider(new SoftWrapApplianceManager.VisibleAreaWidthProvider() -->Line_11 $$ int guttersWidth = lineEndGutter.getPreferredSize().width + lineStartGutter.getPreferredSize().width[ CD ]
Line_27 $$ EditorComponentImpl editor = getEditorComponent()-->Line_32 $$ editor.setBounds(lineStartGutterWidth, 0, w - lineStartGutterWidth, h)[ FD ]
Line_27 $$ EditorComponentImpl editor = getEditorComponent()-->Line_47 $$ JScrollPane scrollPane = editor.getScrollPane()[ FD ]
Line_27 $$ EditorComponentImpl editor = getEditorComponent()-->Line_53 $$ editor.getDocument().addDocumentListener(gutterUpdateScheduler)[ FD ]
Line_6 $$ final ConsoleGutterComponent lineStartGutter = new ConsoleGutterComponent(editor, gutterContentProvider, true)-->Line_30 $$ int lineStartGutterWidth = lineStartGutter.getPreferredSize().width[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_23 $$ Dimension editorSize = getEditorComponent().getMinimumSize()[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_31 $$ lineStartGutter.setBounds(0, 0, lineStartGutterWidth + gutterContentProvider.getLineStartGutterOverlap(editor.getEditor()), h)[ FD ]
Line_7 $$ final ConsoleGutterComponent lineEndGutter = new ConsoleGutterComponent(editor, gutterContentProvider, false)-->Line_34 $$ lineEndGutter.setBounds(lineStartGutterWidth + (w - lineEndGutterWidth - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth()), 0, lineEndGutterWidth, h)[ FD ]
Line_12 $$ EditorEx editor = getHistoryViewer()-->Line_34 $$ lineEndGutter.setBounds(lineStartGutterWidth + (w - lineEndGutterWidth - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth()), 0, lineEndGutterWidth, h)[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_20 $$ return new Dimension(lineStartGutter.getPreferredSize().width + editorSize.width, editorSize.height)[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_9 $$ ((SoftWrapModelImpl) editor.getSoftWrapModel()).getApplianceManager().setWidthProvider(new SoftWrapApplianceManager.VisibleAreaWidthProvider() [ FD ]
Line_27 $$ EditorComponentImpl editor = getEditorComponent()-->Line_34 $$ lineEndGutter.setBounds(lineStartGutterWidth + (w - lineEndGutterWidth - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth()), 0, lineEndGutterWidth, h)[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_48 $$ layeredPane.add(scrollPane.getViewport().getView(), JLayeredPane.DEFAULT_LAYER)[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_16 $$ editor.setHorizontalScrollbarVisible(true)[ FD ]
Line_9 $$ ((SoftWrapModelImpl) editor.getSoftWrapModel()).getApplianceManager().setWidthProvider(new SoftWrapApplianceManager.VisibleAreaWidthProvider() -->Line_12 $$ EditorEx editor = getHistoryViewer()[ CD ]
Line_38 $$ Component component = getComponent(i)-->Line_39 $$ if (component instanceof EditorComponentImpl) [ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_50 $$ scrollPane.setViewportView(layeredPane)[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_53 $$ editor.getDocument().addDocumentListener(gutterUpdateScheduler)[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_32 $$ editor.setBounds(lineStartGutterWidth, 0, w - lineStartGutterWidth, h)[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_31 $$ lineStartGutter.setBounds(0, 0, lineStartGutterWidth + gutterContentProvider.getLineStartGutterOverlap(editor.getEditor()), h)[ CD ]
Line_37 $$ for (int i = getComponentCount() - 1; i >= 0; i--) -->Line_38 $$ Component component = getComponent(i)[ FD ]
Line_6 $$ final ConsoleGutterComponent lineStartGutter = new ConsoleGutterComponent(editor, gutterContentProvider, true)-->Line_46 $$ layeredPane.add(lineStartGutter, JLayeredPane.PALETTE_LAYER)[ FD ]
Line_29 $$ int h = getHeight()-->Line_32 $$ editor.setBounds(lineStartGutterWidth, 0, w - lineStartGutterWidth, h)[ FD ]
Line_37 $$ for (int i = getComponentCount() - 1; i >= 0; i--) -->Line_39 $$ if (component instanceof EditorComponentImpl) [ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_49 $$ layeredPane.add(lineEndGutter, JLayeredPane.PALETTE_LAYER)[ CD ]
Line_6 $$ final ConsoleGutterComponent lineStartGutter = new ConsoleGutterComponent(editor, gutterContentProvider, true)-->Line_11 $$ int guttersWidth = lineEndGutter.getPreferredSize().width + lineStartGutter.getPreferredSize().width[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_47 $$ JScrollPane scrollPane = editor.getScrollPane()[ CD ]
Line_7 $$ final ConsoleGutterComponent lineEndGutter = new ConsoleGutterComponent(editor, gutterContentProvider, false)-->Line_49 $$ layeredPane.add(lineEndGutter, JLayeredPane.PALETTE_LAYER)[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_52 $$ getProject().getMessageBus().connect(this).subscribe(DocumentBulkUpdateListener.TOPIC, gutterUpdateScheduler)[ CD ]
Line_7 $$ final ConsoleGutterComponent lineEndGutter = new ConsoleGutterComponent(editor, gutterContentProvider, false)-->Line_33 $$ int lineEndGutterWidth = lineEndGutter.getPreferredSize().width[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_32 $$ editor.setBounds(lineStartGutterWidth, 0, w - lineStartGutterWidth, h)[ CD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_24 $$ return new Dimension(lineStartGutter.getPreferredSize().width + editorSize.width, editorSize.height)[ CD ]
Line_7 $$ final ConsoleGutterComponent lineEndGutter = new ConsoleGutterComponent(editor, gutterContentProvider, false)-->Line_11 $$ int guttersWidth = lineEndGutter.getPreferredSize().width + lineStartGutter.getPreferredSize().width[ FD ]
Line_29 $$ int h = getHeight()-->Line_34 $$ lineEndGutter.setBounds(lineStartGutterWidth + (w - lineEndGutterWidth - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth()), 0, lineEndGutterWidth, h)[ FD ]
Line_12 $$ EditorEx editor = getHistoryViewer()-->Line_31 $$ lineStartGutter.setBounds(0, 0, lineStartGutterWidth + gutterContentProvider.getLineStartGutterOverlap(editor.getEditor()), h)[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_8 $$ editor.getSoftWrapModel().forceAdditionalColumnsUsage()[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_30 $$ int lineStartGutterWidth = lineStartGutter.getPreferredSize().width[ CD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_28 $$ int w = getWidth()[ CD ]
Line_27 $$ EditorComponentImpl editor = getEditorComponent()-->Line_31 $$ lineStartGutter.setBounds(0, 0, lineStartGutterWidth + gutterContentProvider.getLineStartGutterOverlap(editor.getEditor()), h)[ FD ]
Line_6 $$ final ConsoleGutterComponent lineStartGutter = new ConsoleGutterComponent(editor, gutterContentProvider, true)-->Line_24 $$ return new Dimension(lineStartGutter.getPreferredSize().width + editorSize.width, editorSize.height)[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_33 $$ int lineEndGutterWidth = lineEndGutter.getPreferredSize().width[ CD ]
Line_12 $$ EditorEx editor = getHistoryViewer()-->Line_53 $$ editor.getDocument().addDocumentListener(gutterUpdateScheduler)[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_9 $$ ((SoftWrapModelImpl) editor.getSoftWrapModel()).getApplianceManager().setWidthProvider(new SoftWrapApplianceManager.VisibleAreaWidthProvider() [ CD ]
Line_12 $$ EditorEx editor = getHistoryViewer()-->Line_16 $$ editor.setHorizontalScrollbarVisible(true)[ FD ]
Line_6 $$ final ConsoleGutterComponent lineStartGutter = new ConsoleGutterComponent(editor, gutterContentProvider, true)-->Line_31 $$ lineStartGutter.setBounds(0, 0, lineStartGutterWidth + gutterContentProvider.getLineStartGutterOverlap(editor.getEditor()), h)[ FD ]
Line_33 $$ int lineEndGutterWidth = lineEndGutter.getPreferredSize().width-->Line_34 $$ lineEndGutter.setBounds(lineStartGutterWidth + (w - lineEndGutterWidth - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth()), 0, lineEndGutterWidth, h)[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_29 $$ int h = getHeight()[ CD ]
Line_29 $$ int h = getHeight()-->Line_31 $$ lineStartGutter.setBounds(0, 0, lineStartGutterWidth + gutterContentProvider.getLineStartGutterOverlap(editor.getEditor()), h)[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_16 $$ editor.setHorizontalScrollbarVisible(true)[ CD ]
Line_12 $$ EditorEx editor = getHistoryViewer()-->Line_32 $$ editor.setBounds(lineStartGutterWidth, 0, w - lineStartGutterWidth, h)[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_46 $$ layeredPane.add(lineStartGutter, JLayeredPane.PALETTE_LAYER)[ CD ]
Line_9 $$ ((SoftWrapModelImpl) editor.getSoftWrapModel()).getApplianceManager().setWidthProvider(new SoftWrapApplianceManager.VisibleAreaWidthProvider() -->Line_13 $$ return editor.getScrollingModel().getVisibleArea().width - guttersWidth[ CD ]
Line_30 $$ int lineStartGutterWidth = lineStartGutter.getPreferredSize().width-->Line_32 $$ editor.setBounds(lineStartGutterWidth, 0, w - lineStartGutterWidth, h)[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_7 $$ final ConsoleGutterComponent lineEndGutter = new ConsoleGutterComponent(editor, gutterContentProvider, false)[ CD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_37 $$ for (int i = getComponentCount() - 1; i >= 0; i--) [ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_3 $$ if (editor == getConsoleEditor()) [ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_13 $$ return editor.getScrollingModel().getVisibleArea().width - guttersWidth[ FD ]
Line_37 $$ for (int i = getComponentCount() - 1; i >= 0; i--) -->Line_38 $$ Component component = getComponent(i)[ CD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_19 $$ Dimension editorSize = getEditorComponent().getPreferredSize()[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_53 $$ editor.getDocument().addDocumentListener(gutterUpdateScheduler)[ FD ]
Line_3 $$ if (editor == getConsoleEditor()) -->Line_4 $$ return[ CD ]
Line_12 $$ EditorEx editor = getHistoryViewer()-->Line_47 $$ JScrollPane scrollPane = editor.getScrollPane()[ FD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_8 $$ editor.getSoftWrapModel().forceAdditionalColumnsUsage()[ CD ]
Line_6 $$ final ConsoleGutterComponent lineStartGutter = new ConsoleGutterComponent(editor, gutterContentProvider, true)-->Line_20 $$ return new Dimension(lineStartGutter.getPreferredSize().width + editorSize.width, editorSize.height)[ FD ]
Line_12 $$ EditorEx editor = getHistoryViewer()-->Line_13 $$ return editor.getScrollingModel().getVisibleArea().width - guttersWidth[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_34 $$ lineEndGutter.setBounds(lineStartGutterWidth + (w - lineEndGutterWidth - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth()), 0, lineEndGutterWidth, h)[ CD ]
Line_39 $$ if (component instanceof EditorComponentImpl) -->Line_40 $$ return (EditorComponentImpl) component[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_47 $$ JScrollPane scrollPane = editor.getScrollPane()[ FD ]
Line_17 $$ JLayeredPane layeredPane = new JLayeredPane() -->Line_27 $$ EditorComponentImpl editor = getEditorComponent()[ CD ]
Line_2 $$ void setupEditor(@NotNull EditorEx editor) -->Line_34 $$ lineEndGutter.setBounds(lineStartGutterWidth + (w - lineEndGutterWidth - editor.getEditor().getScrollPane().getVerticalScrollBar().getWidth()), 0, lineEndGutterWidth, h)[ FD ]
