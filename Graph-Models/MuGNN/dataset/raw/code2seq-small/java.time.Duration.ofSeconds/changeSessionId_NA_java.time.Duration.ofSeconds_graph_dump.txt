Line_9 $$ SessionAttributes oldAttributes = mock(SessionAttributes.class)-->Line_30 $$ when(this.session.getAttributes()).thenReturn(oldAttributes)[ FD ]
Line_9 $$ SessionAttributes oldAttributes = mock(SessionAttributes.class)-->Line_35 $$ when(oldAttributes.getAttribute(name)).thenReturn(value)[ FD ]
Line_5 $$ SessionManager<LocalSessionContext, Batch> manager = mock(SessionManager.class)-->Line_29 $$ when(manager.createSession(newSessionId)).thenReturn(session)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_40 $$ when(session.getId()).thenReturn(newSessionId)[ CD ]
Line_45 $$ String result = this.adapter.changeSessionId(exchange, config)-->Line_46 $$ assertSame(newSessionId, result)[ FD ]
Line_20 $$ String name = "name"-->Line_36 $$ when(newAttributes.setAttribute(name, value)).thenReturn(null)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_50 $$ verify(newContext).setAuthenticatedSession(same(authenticatedSession))[ CD ]
Line_2 $$ public void changeSessionId() -->Line_15 $$ SessionListener listener = mock(SessionListener.class)[ CD ]
Line_19 $$ String newSessionId = "new"-->Line_29 $$ when(manager.createSession(newSessionId)).thenReturn(session)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_52 $$ verify(context).close()[ CD ]
Line_2 $$ public void changeSessionId() -->Line_30 $$ when(this.session.getAttributes()).thenReturn(oldAttributes)[ CD ]
Line_13 $$ LocalSessionContext oldContext = mock(LocalSessionContext.class)-->Line_41 $$ when(this.session.getLocalContext()).thenReturn(oldContext)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_11 $$ SessionMetaData oldMetaData = mock(SessionMetaData.class)[ CD ]
Line_20 $$ String name = "name"-->Line_35 $$ when(oldAttributes.getAttribute(name)).thenReturn(value)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_22 $$ Instant now = Instant.now()[ CD ]
Line_2 $$ public void changeSessionId() -->Line_4 $$ SessionConfig config = mock(SessionConfig.class)[ CD ]
Line_11 $$ SessionMetaData oldMetaData = mock(SessionMetaData.class)-->Line_38 $$ when(oldMetaData.getMaxInactiveInterval()).thenReturn(interval)[ FD ]
Line_10 $$ SessionAttributes newAttributes = mock(SessionAttributes.class)-->Line_36 $$ when(newAttributes.setAttribute(name, value)).thenReturn(null)[ FD ]
Line_8 $$ Session<LocalSessionContext> session = mock(Session.class)-->Line_42 $$ when(session.getLocalContext()).thenReturn(newContext)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_36 $$ when(newAttributes.setAttribute(name, value)).thenReturn(null)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_20 $$ String name = "name"[ CD ]
Line_8 $$ Session<LocalSessionContext> session = mock(Session.class)-->Line_33 $$ when(session.getMetaData()).thenReturn(newMetaData)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_7 $$ BatchContext context = mock(BatchContext.class)[ CD ]
Line_23 $$ Duration interval = Duration.ofSeconds(10L)-->Line_48 $$ verify(newMetaData).setMaxInactiveInterval(interval)[ FD ]
Line_14 $$ LocalSessionContext newContext = mock(LocalSessionContext.class)-->Line_50 $$ verify(newContext).setAuthenticatedSession(same(authenticatedSession))[ FD ]
Line_12 $$ SessionMetaData newMetaData = mock(SessionMetaData.class)-->Line_48 $$ verify(newMetaData).setMaxInactiveInterval(interval)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_19 $$ String newSessionId = "new"[ CD ]
Line_19 $$ String newSessionId = "new"-->Line_40 $$ when(session.getId()).thenReturn(newSessionId)[ FD ]
Line_8 $$ Session<LocalSessionContext> session = mock(Session.class)-->Line_40 $$ when(session.getId()).thenReturn(newSessionId)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_48 $$ verify(newMetaData).setMaxInactiveInterval(interval)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_37 $$ when(oldMetaData.getLastAccessedTime()).thenReturn(now)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_43 $$ when(oldContext.getAuthenticatedSession()).thenReturn(authenticatedSession)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_3 $$ HttpServerExchange exchange = new HttpServerExchange(null)[ CD ]
Line_19 $$ String newSessionId = "new"-->Line_28 $$ when(manager.createIdentifier()).thenReturn(newSessionId)[ FD ]
Line_18 $$ String oldSessionId = "old"-->Line_51 $$ verify(listener).sessionIdChanged(this.adapter, oldSessionId)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_45 $$ String result = this.adapter.changeSessionId(exchange, config)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_16 $$ SessionListeners listeners = new SessionListeners()[ CD ]
Line_14 $$ LocalSessionContext newContext = mock(LocalSessionContext.class)-->Line_42 $$ when(session.getLocalContext()).thenReturn(newContext)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_31 $$ when(this.session.getMetaData()).thenReturn(oldMetaData)[ CD ]
Line_21 $$ Object value = new Object()-->Line_35 $$ when(oldAttributes.getAttribute(name)).thenReturn(value)[ FD ]
Line_10 $$ SessionAttributes newAttributes = mock(SessionAttributes.class)-->Line_32 $$ when(session.getAttributes()).thenReturn(newAttributes)[ FD ]
Line_11 $$ SessionMetaData oldMetaData = mock(SessionMetaData.class)-->Line_37 $$ when(oldMetaData.getLastAccessedTime()).thenReturn(now)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_26 $$ when(manager.getBatcher()).thenReturn(batcher)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_32 $$ when(session.getAttributes()).thenReturn(newAttributes)[ CD ]
Line_16 $$ SessionListeners listeners = new SessionListeners()-->Line_17 $$ listeners.addSessionListener(listener)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_51 $$ verify(listener).sessionIdChanged(this.adapter, oldSessionId)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_12 $$ SessionMetaData newMetaData = mock(SessionMetaData.class)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_34 $$ when(oldAttributes.getAttributeNames()).thenReturn(Collections.singleton(name))[ CD ]
Line_15 $$ SessionListener listener = mock(SessionListener.class)-->Line_17 $$ listeners.addSessionListener(listener)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_44 $$ when(this.manager.getSessionListeners()).thenReturn(listeners)[ CD ]
Line_7 $$ BatchContext context = mock(BatchContext.class)-->Line_27 $$ when(batcher.resumeBatch(this.batch)).thenReturn(context)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_47 $$ verify(newMetaData).setLastAccessedTime(now)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_8 $$ Session<LocalSessionContext> session = mock(Session.class)[ CD ]
Line_12 $$ SessionMetaData newMetaData = mock(SessionMetaData.class)-->Line_47 $$ verify(newMetaData).setLastAccessedTime(now)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_28 $$ when(manager.createIdentifier()).thenReturn(newSessionId)[ CD ]
Line_24 $$ AuthenticatedSession authenticatedSession = new AuthenticatedSession(null, null)-->Line_50 $$ verify(newContext).setAuthenticatedSession(same(authenticatedSession))[ FD ]
Line_2 $$ public void changeSessionId() -->Line_42 $$ when(session.getLocalContext()).thenReturn(newContext)[ CD ]
Line_3 $$ HttpServerExchange exchange = new HttpServerExchange(null)-->Line_49 $$ verify(config).setSessionId(exchange, newSessionId)[ FD ]
Line_19 $$ String newSessionId = "new"-->Line_49 $$ verify(config).setSessionId(exchange, newSessionId)[ FD ]
Line_5 $$ SessionManager<LocalSessionContext, Batch> manager = mock(SessionManager.class)-->Line_28 $$ when(manager.createIdentifier()).thenReturn(newSessionId)[ FD ]
Line_13 $$ LocalSessionContext oldContext = mock(LocalSessionContext.class)-->Line_43 $$ when(oldContext.getAuthenticatedSession()).thenReturn(authenticatedSession)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_14 $$ LocalSessionContext newContext = mock(LocalSessionContext.class)[ CD ]
Line_6 $$ Batcher<Batch> batcher = mock(Batcher.class)-->Line_27 $$ when(batcher.resumeBatch(this.batch)).thenReturn(context)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_35 $$ when(oldAttributes.getAttribute(name)).thenReturn(value)[ CD ]
Line_8 $$ Session<LocalSessionContext> session = mock(Session.class)-->Line_32 $$ when(session.getAttributes()).thenReturn(newAttributes)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_6 $$ Batcher<Batch> batcher = mock(Batcher.class)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_24 $$ AuthenticatedSession authenticatedSession = new AuthenticatedSession(null, null)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_46 $$ assertSame(newSessionId, result)[ CD ]
Line_6 $$ Batcher<Batch> batcher = mock(Batcher.class)-->Line_26 $$ when(manager.getBatcher()).thenReturn(batcher)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_5 $$ SessionManager<LocalSessionContext, Batch> manager = mock(SessionManager.class)[ CD ]
Line_15 $$ SessionListener listener = mock(SessionListener.class)-->Line_51 $$ verify(listener).sessionIdChanged(this.adapter, oldSessionId)[ FD ]
Line_18 $$ String oldSessionId = "old"-->Line_39 $$ when(this.session.getId()).thenReturn(oldSessionId)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_25 $$ when(this.manager.getSessionManager()).thenReturn(manager)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_39 $$ when(this.session.getId()).thenReturn(oldSessionId)[ CD ]
Line_19 $$ String newSessionId = "new"-->Line_46 $$ assertSame(newSessionId, result)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_18 $$ String oldSessionId = "old"[ CD ]
Line_23 $$ Duration interval = Duration.ofSeconds(10L)-->Line_38 $$ when(oldMetaData.getMaxInactiveInterval()).thenReturn(interval)[ FD ]
Line_21 $$ Object value = new Object()-->Line_36 $$ when(newAttributes.setAttribute(name, value)).thenReturn(null)[ FD ]
Line_4 $$ SessionConfig config = mock(SessionConfig.class)-->Line_45 $$ String result = this.adapter.changeSessionId(exchange, config)[ FD ]
Line_4 $$ SessionConfig config = mock(SessionConfig.class)-->Line_49 $$ verify(config).setSessionId(exchange, newSessionId)[ FD ]
Line_5 $$ SessionManager<LocalSessionContext, Batch> manager = mock(SessionManager.class)-->Line_26 $$ when(manager.getBatcher()).thenReturn(batcher)[ FD ]
Line_7 $$ BatchContext context = mock(BatchContext.class)-->Line_52 $$ verify(context).close()[ FD ]
Line_3 $$ HttpServerExchange exchange = new HttpServerExchange(null)-->Line_45 $$ String result = this.adapter.changeSessionId(exchange, config)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_23 $$ Duration interval = Duration.ofSeconds(10L)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_27 $$ when(batcher.resumeBatch(this.batch)).thenReturn(context)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_29 $$ when(manager.createSession(newSessionId)).thenReturn(session)[ CD ]
Line_12 $$ SessionMetaData newMetaData = mock(SessionMetaData.class)-->Line_33 $$ when(session.getMetaData()).thenReturn(newMetaData)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_17 $$ listeners.addSessionListener(listener)[ CD ]
Line_11 $$ SessionMetaData oldMetaData = mock(SessionMetaData.class)-->Line_31 $$ when(this.session.getMetaData()).thenReturn(oldMetaData)[ FD ]
Line_24 $$ AuthenticatedSession authenticatedSession = new AuthenticatedSession(null, null)-->Line_43 $$ when(oldContext.getAuthenticatedSession()).thenReturn(authenticatedSession)[ FD ]
Line_8 $$ Session<LocalSessionContext> session = mock(Session.class)-->Line_29 $$ when(manager.createSession(newSessionId)).thenReturn(session)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_49 $$ verify(config).setSessionId(exchange, newSessionId)[ CD ]
Line_9 $$ SessionAttributes oldAttributes = mock(SessionAttributes.class)-->Line_34 $$ when(oldAttributes.getAttributeNames()).thenReturn(Collections.singleton(name))[ FD ]
Line_5 $$ SessionManager<LocalSessionContext, Batch> manager = mock(SessionManager.class)-->Line_25 $$ when(this.manager.getSessionManager()).thenReturn(manager)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_9 $$ SessionAttributes oldAttributes = mock(SessionAttributes.class)[ CD ]
Line_22 $$ Instant now = Instant.now()-->Line_47 $$ verify(newMetaData).setLastAccessedTime(now)[ FD ]
Line_2 $$ public void changeSessionId() -->Line_38 $$ when(oldMetaData.getMaxInactiveInterval()).thenReturn(interval)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_13 $$ LocalSessionContext oldContext = mock(LocalSessionContext.class)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_21 $$ Object value = new Object()[ CD ]
Line_16 $$ SessionListeners listeners = new SessionListeners()-->Line_44 $$ when(this.manager.getSessionListeners()).thenReturn(listeners)[ FD ]
Line_20 $$ String name = "name"-->Line_34 $$ when(oldAttributes.getAttributeNames()).thenReturn(Collections.singleton(name))[ FD ]
Line_2 $$ public void changeSessionId() -->Line_41 $$ when(this.session.getLocalContext()).thenReturn(oldContext)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_33 $$ when(session.getMetaData()).thenReturn(newMetaData)[ CD ]
Line_2 $$ public void changeSessionId() -->Line_10 $$ SessionAttributes newAttributes = mock(SessionAttributes.class)[ CD ]
Line_22 $$ Instant now = Instant.now()-->Line_37 $$ when(oldMetaData.getLastAccessedTime()).thenReturn(now)[ FD ]
