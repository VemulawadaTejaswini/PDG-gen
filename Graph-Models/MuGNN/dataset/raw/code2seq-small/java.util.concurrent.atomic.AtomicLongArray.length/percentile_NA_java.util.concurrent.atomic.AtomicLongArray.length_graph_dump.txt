Line_7 $$ long pcount = (long) Math.ceil(count() * percentile)-->Line_13 $$ if (elements >= pcount)[ FD ]
Line_11 $$ for (int i = 0; i < lastBucket; i++) -->Line_12 $$ elements += buckets.get(i)[ CD ]
Line_2 $$ public long percentile(double percentile) -->Line_16 $$ return 0[ CD ]
Line_11 $$ for (int i = 0; i < lastBucket; i++) -->Line_12 $$ elements += buckets.get(i)[ FD ]
Line_2 $$ public long percentile(double percentile) -->Line_8 $$ if (pcount == 0)[ CD ]
Line_10 $$ long elements = 0-->Line_12 $$ elements += buckets.get(i)[ FD ]
Line_7 $$ long pcount = (long) Math.ceil(count() * percentile)-->Line_8 $$ if (pcount == 0)[ FD ]
Line_2 $$ public long percentile(double percentile) -->Line_7 $$ long pcount = (long) Math.ceil(count() * percentile)[ CD ]
Line_2 $$ public long percentile(double percentile) -->Line_10 $$ long elements = 0[ CD ]
Line_2 $$ public long percentile(double percentile) -->Line_5 $$ if (buckets.get(lastBucket) > 0)[ CD ]
Line_8 $$ if (pcount == 0)-->Line_9 $$ return 0[ CD ]
Line_2 $$ public long percentile(double percentile) -->Line_11 $$ for (int i = 0; i < lastBucket; i++) [ CD ]
Line_4 $$ int lastBucket = buckets.length() - 1-->Line_5 $$ if (buckets.get(lastBucket) > 0)[ FD ]
Line_4 $$ int lastBucket = buckets.length() - 1-->Line_11 $$ for (int i = 0; i < lastBucket; i++) [ FD ]
Line_13 $$ if (elements >= pcount)-->Line_14 $$ return bucketOffsets[i][ CD ]
Line_2 $$ public long percentile(double percentile) -->Line_4 $$ int lastBucket = buckets.length() - 1[ CD ]
Line_10 $$ long elements = 0-->Line_13 $$ if (elements >= pcount)[ FD ]
Line_11 $$ for (int i = 0; i < lastBucket; i++) -->Line_13 $$ if (elements >= pcount)[ CD ]
Line_12 $$ elements += buckets.get(i)-->Line_13 $$ if (elements >= pcount)[ FD ]
