Line_37 $$ numCorrupt = corruptFileBlocks.size()-->Line_38 $$ while (numCorrupt < 3) [ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_37 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_38 $$ while (numCorrupt < 3) -->Line_39 $$ Thread.sleep(1000)[ CD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)[ FD ]
Line_52 $$ numCorrupt = nextCorruptFileBlocks.size()-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_37 $$ numCorrupt = corruptFileBlocks.size()-->Line_41 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_16 $$ int numCorrupt = corruptFileBlocks.size()-->Line_41 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_2 $$ public void testlistCorruptFileBlocks() throws Exception -->Line_6 $$ FileSystem fs = null[ CD ]
Line_14 $$ final NameNode namenode = cluster.getNameNode()-->Line_50 $$ Collection<FSNamesystem.CorruptFileBlockInfo> nextCorruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)[ FD ]
Line_27 $$ File blockFile = Block.metaToBlockFile(metadataFile)-->Line_28 $$ LOG.info("Deliberately removing file " + blockFile.getName())[ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_14 $$ final NameNode namenode = cluster.getNameNode()[ FD ]
Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)-->Line_59 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/goodData", null)[ FD ]
Line_37 $$ numCorrupt = corruptFileBlocks.size()-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_20 $$ for (int j = 0; j <= 1; j++) -->Line_23 $$ List<File> metadataFiles = MiniDFSCluster.getAllBlockMetadataFiles(data_dir)[ CD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_48 $$ FSNamesystem.CorruptFileBlockInfo[] cfb = corruptFileBlocks.toArray(new FSNamesystem.CorruptFileBlockInfo[0])[ FD ]
Line_6 $$ FileSystem fs = null-->Line_11 $$ fs = cluster.getFileSystem()[ FD ]
Line_12 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("testGetCorruptFiles").setNumFiles(3).setMaxLevels(1).setMaxSize(1024).build()-->Line_62 $$ util.cleanup(fs, "/corruptData")[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_41 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_59 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/goodData", null)-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_21 $$ File storageDir = cluster.getInstanceStorageDir(i, j)-->Line_22 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ FD ]
Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)[ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_65 $$ if (cluster != null) [ FD ]
Line_14 $$ final NameNode namenode = cluster.getNameNode()-->Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)[ FD ]
Line_37 $$ numCorrupt = corruptFileBlocks.size()-->Line_52 $$ numCorrupt = nextCorruptFileBlocks.size()[ FD ]
Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_59 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/goodData", null)[ FD ]
Line_2 $$ public void testlistCorruptFileBlocks() throws Exception -->Line_4 $$ conf.setLong(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY, 1000)[ CD ]
Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_21 $$ File storageDir = cluster.getInstanceStorageDir(i, j)[ FD ]
Line_52 $$ numCorrupt = nextCorruptFileBlocks.size()-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_41 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)[ FD ]
Line_49 $$ String[] cookie = new String[] -->Line_50 $$ Collection<FSNamesystem.CorruptFileBlockInfo> nextCorruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)[ FD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)[ FD ]
Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_50 $$ Collection<FSNamesystem.CorruptFileBlockInfo> nextCorruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)-->Line_52 $$ numCorrupt = nextCorruptFileBlocks.size()[ FD ]
Line_2 $$ public void testlistCorruptFileBlocks() throws Exception -->Line_7 $$ MiniDFSCluster cluster = null[ CD ]
Line_6 $$ FileSystem fs = null-->Line_58 $$ util.createFiles(fs, "/goodData")[ FD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_37 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)[ FD ]
Line_41 $$ numCorrupt = corruptFileBlocks.size()-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_48 $$ FSNamesystem.CorruptFileBlockInfo[] cfb = corruptFileBlocks.toArray(new FSNamesystem.CorruptFileBlockInfo[0])[ FD ]
Line_26 $$ for (File metadataFile : metadataFiles) -->Line_27 $$ File blockFile = Block.metaToBlockFile(metadataFile)[ FD ]
Line_26 $$ for (File metadataFile : metadataFiles) -->Line_31 $$ assertTrue("Cannot remove file.", metadataFile.delete())[ FD ]
Line_2 $$ public void testlistCorruptFileBlocks() throws Exception -->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_DATANODE_DIRECTORYSCAN_INTERVAL_KEY, 1)[ CD ]
Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_2 $$ public void testlistCorruptFileBlocks() throws Exception -->Line_3 $$ Configuration conf = new Configuration()[ CD ]
Line_20 $$ for (int j = 0; j <= 1; j++) -->Line_21 $$ File storageDir = cluster.getInstanceStorageDir(i, j)[ CD ]
Line_19 $$ for (int i = 0; i < 4; i++) -->Line_21 $$ File storageDir = cluster.getInstanceStorageDir(i, j)[ FD ]
Line_16 $$ int numCorrupt = corruptFileBlocks.size()-->Line_38 $$ while (numCorrupt < 3) [ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_66 $$ cluster.shutdown()[ FD ]
Line_14 $$ final NameNode namenode = cluster.getNameNode()-->Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)[ FD ]
Line_16 $$ int numCorrupt = corruptFileBlocks.size()-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_6 $$ FileSystem fs = null-->Line_62 $$ util.cleanup(fs, "/corruptData")[ FD ]
Line_12 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("testGetCorruptFiles").setNumFiles(3).setMaxLevels(1).setMaxSize(1024).build()-->Line_13 $$ util.createFiles(fs, "/corruptData")[ FD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_41 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_11 $$ fs = cluster.getFileSystem()[ FD ]
Line_12 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("testGetCorruptFiles").setNumFiles(3).setMaxLevels(1).setMaxSize(1024).build()-->Line_63 $$ util.cleanup(fs, "/goodData")[ FD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_4 $$ conf.setLong(DFSConfigKeys.DFS_BLOCKREPORT_INTERVAL_MSEC_KEY, 1000)[ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_11 $$ fs = cluster.getFileSystem()[ FD ]
Line_16 $$ int numCorrupt = corruptFileBlocks.size()-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_56 $$ numCorrupt = corruptFileBlocks.size()-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_49 $$ String[] cookie = new String[] -->Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)[ FD ]
Line_11 $$ fs = cluster.getFileSystem()-->Line_62 $$ util.cleanup(fs, "/corruptData")[ FD ]
Line_20 $$ for (int j = 0; j <= 1; j++) -->Line_22 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ CD ]
Line_37 $$ numCorrupt = corruptFileBlocks.size()-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_66 $$ cluster.shutdown()[ FD ]
Line_6 $$ FileSystem fs = null-->Line_13 $$ util.createFiles(fs, "/corruptData")[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_59 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/goodData", null)[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_16 $$ int numCorrupt = corruptFileBlocks.size()[ FD ]
Line_6 $$ FileSystem fs = null-->Line_63 $$ util.cleanup(fs, "/goodData")[ FD ]
Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_18 $$ String bpid = cluster.getNamesystem().getBlockPoolId()[ FD ]
Line_14 $$ final NameNode namenode = cluster.getNameNode()-->Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)[ FD ]
Line_14 $$ final NameNode namenode = cluster.getNameNode()-->Line_59 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/goodData", null)[ FD ]
Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_10 $$ cluster.waitActive()[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_18 $$ String bpid = cluster.getNamesystem().getBlockPoolId()[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_26 $$ for (File metadataFile : metadataFiles) -->Line_30 $$ LOG.info("Deliberately removing file " + metadataFile.getName())[ FD ]
Line_11 $$ fs = cluster.getFileSystem()-->Line_13 $$ util.createFiles(fs, "/corruptData")[ FD ]
Line_20 $$ for (int j = 0; j <= 1; j++) -->Line_21 $$ File storageDir = cluster.getInstanceStorageDir(i, j)[ FD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)[ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_10 $$ cluster.waitActive()[ FD ]
Line_18 $$ String bpid = cluster.getNamesystem().getBlockPoolId()-->Line_22 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ FD ]
Line_22 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_23 $$ List<File> metadataFiles = MiniDFSCluster.getAllBlockMetadataFiles(data_dir)[ FD ]
Line_15 $$ Collection<FSNamesystem.CorruptFileBlockInfo> corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_48 $$ FSNamesystem.CorruptFileBlockInfo[] cfb = corruptFileBlocks.toArray(new FSNamesystem.CorruptFileBlockInfo[0])[ FD ]
Line_23 $$ List<File> metadataFiles = MiniDFSCluster.getAllBlockMetadataFiles(data_dir)-->Line_24 $$ if (metadataFiles == null)[ FD ]
Line_38 $$ while (numCorrupt < 3) -->Line_42 $$ count++[ CD ]
Line_38 $$ while (numCorrupt < 3) -->Line_41 $$ numCorrupt = corruptFileBlocks.size()[ CD ]
Line_19 $$ for (int i = 0; i < 4; i++) -->Line_20 $$ for (int j = 0; j <= 1; j++) [ CD ]
Line_65 $$ if (cluster != null) -->Line_66 $$ cluster.shutdown()[ CD ]
Line_3 $$ Configuration conf = new Configuration()-->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_DATANODE_DIRECTORYSCAN_INTERVAL_KEY, 1)[ FD ]
Line_38 $$ while (numCorrupt < 3) -->Line_40 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)[ CD ]
Line_38 $$ while (numCorrupt < 3) -->Line_43 $$ if (count > 30)[ CD ]
Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_65 $$ if (cluster != null) [ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_21 $$ File storageDir = cluster.getInstanceStorageDir(i, j)[ FD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_56 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_41 $$ numCorrupt = corruptFileBlocks.size()-->Line_38 $$ while (numCorrupt < 3) [ FD ]
Line_41 $$ numCorrupt = corruptFileBlocks.size()-->Line_52 $$ numCorrupt = nextCorruptFileBlocks.size()[ FD ]
Line_35 $$ int count = 0-->Line_43 $$ if (count > 30)[ FD ]
Line_7 $$ MiniDFSCluster cluster = null-->Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()[ FD ]
Line_36 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", null)-->Line_59 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/goodData", null)[ FD ]
Line_20 $$ for (int j = 0; j <= 1; j++) -->Line_24 $$ if (metadataFiles == null)[ CD ]
Line_9 $$ cluster = new MiniDFSCluster.Builder(conf).build()-->Line_14 $$ final NameNode namenode = cluster.getNameNode()[ FD ]
Line_12 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("testGetCorruptFiles").setNumFiles(3).setMaxLevels(1).setMaxSize(1024).build()-->Line_58 $$ util.createFiles(fs, "/goodData")[ FD ]
Line_16 $$ int numCorrupt = corruptFileBlocks.size()-->Line_37 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_50 $$ Collection<FSNamesystem.CorruptFileBlockInfo> nextCorruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)-->Line_51 $$ FSNamesystem.CorruptFileBlockInfo[] ncfb = nextCorruptFileBlocks.toArray(new FSNamesystem.CorruptFileBlockInfo[0])[ FD ]
Line_11 $$ fs = cluster.getFileSystem()-->Line_63 $$ util.cleanup(fs, "/goodData")[ FD ]
Line_41 $$ numCorrupt = corruptFileBlocks.size()-->Line_60 $$ numCorrupt = corruptFileBlocks.size()[ FD ]
Line_14 $$ final NameNode namenode = cluster.getNameNode()-->Line_55 $$ corruptFileBlocks = namenode.getNamesystem().listCorruptFileBlocks("/corruptData", cookie)[ FD ]
Line_11 $$ fs = cluster.getFileSystem()-->Line_58 $$ util.createFiles(fs, "/goodData")[ FD ]
Line_27 $$ File blockFile = Block.metaToBlockFile(metadataFile)-->Line_29 $$ assertTrue("Cannot remove file.", blockFile.delete())[ FD ]
Line_16 $$ int numCorrupt = corruptFileBlocks.size()-->Line_52 $$ numCorrupt = nextCorruptFileBlocks.size()[ FD ]
Line_35 $$ int count = 0-->Line_42 $$ count++[ FD ]
