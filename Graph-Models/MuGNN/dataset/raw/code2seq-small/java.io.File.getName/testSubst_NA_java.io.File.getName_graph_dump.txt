Line_10 $$ File rootFile = createSubst(targetDir.getPath())-->Line_11 $$ VfsRootAccess.allowRootAccess(getTestRootDisposable(), rootFile.getPath())[ FD ]
Line_9 $$ File file = createTestFile(subDir, "test.txt")-->Line_33 $$ FileUtil.writeToFile(file, "re-creation")[ FD ]
Line_12 $$ VirtualFile vfsRoot = myFileSystem.findFileByIoFile(rootFile)-->Line_14 $$ assertNotNull(rootFile.getPath(), vfsRoot)[ FD ]
Line_9 $$ File file = createTestFile(subDir, "test.txt")-->Line_28 $$ assertEvent(VFileDeleteEvent.class, file.getPath(), substFile.getPath())[ FD ]
Line_2 $$ public void testSubst() throws Exception -->Line_10 $$ File rootFile = createSubst(targetDir.getPath())[ CD ]
Line_7 $$ File targetDir = createTestDir(myTempDirectory, "top")-->Line_24 $$ LocalFileSystem.WatchRequest request2 = watch(targetDir)[ FD ]
Line_7 $$ File targetDir = createTestDir(myTempDirectory, "top")-->Line_10 $$ File rootFile = createSubst(targetDir.getPath())[ FD ]
Line_9 $$ File file = createTestFile(subDir, "test.txt")-->Line_16 $$ File substFile = new File(substDir, file.getName())[ FD ]
Line_24 $$ LocalFileSystem.WatchRequest request2 = watch(targetDir)-->Line_30 $$ unwatch(request2)[ FD ]
Line_10 $$ File rootFile = createSubst(targetDir.getPath())-->Line_40 $$ deleteSubst(rootFile.getPath())[ FD ]
Line_41 $$ if (vfsRoot != null) -->Line_42 $$ ((NewVirtualFile) vfsRoot).markDirty()[ CD ]
Line_12 $$ VirtualFile vfsRoot = myFileSystem.findFileByIoFile(rootFile)-->Line_41 $$ if (vfsRoot != null) [ FD ]
Line_8 $$ File subDir = createTestDir(targetDir, "sub")-->Line_9 $$ File file = createTestFile(subDir, "test.txt")[ FD ]
Line_2 $$ public void testSubst() throws Exception -->Line_12 $$ VirtualFile vfsRoot = myFileSystem.findFileByIoFile(rootFile)[ CD ]
Line_7 $$ File targetDir = createTestDir(myTempDirectory, "top")-->Line_8 $$ File subDir = createTestDir(targetDir, "sub")[ FD ]
Line_41 $$ if (vfsRoot != null) -->Line_43 $$ myFileSystem.refresh(false)[ CD ]
Line_3 $$ if (!SystemInfo.isWindows) -->Line_4 $$ System.err.println("Ignored: Windows required")[ CD ]
Line_7 $$ File targetDir = createTestDir(myTempDirectory, "top")-->Line_17 $$ refresh(targetDir)[ FD ]
Line_19 $$ LocalFileSystem.WatchRequest request = watch(substDir)-->Line_36 $$ unwatch(request)[ FD ]
Line_2 $$ public void testSubst() throws Exception -->Line_7 $$ File targetDir = createTestDir(myTempDirectory, "top")[ CD ]
Line_2 $$ public void testSubst() throws Exception -->Line_9 $$ File file = createTestFile(subDir, "test.txt")[ CD ]
Line_2 $$ public void testSubst() throws Exception -->Line_3 $$ if (!SystemInfo.isWindows) [ CD ]
Line_10 $$ File rootFile = createSubst(targetDir.getPath())-->Line_12 $$ VirtualFile vfsRoot = myFileSystem.findFileByIoFile(rootFile)[ FD ]
Line_16 $$ File substFile = new File(substDir, file.getName())-->Line_28 $$ assertEvent(VFileDeleteEvent.class, file.getPath(), substFile.getPath())[ FD ]
Line_7 $$ File targetDir = createTestDir(myTempDirectory, "top")-->Line_39 $$ delete(targetDir)[ FD ]
Line_15 $$ File substDir = new File(rootFile, subDir.getName())-->Line_19 $$ LocalFileSystem.WatchRequest request = watch(substDir)[ FD ]
Line_2 $$ public void testSubst() throws Exception -->Line_11 $$ VfsRootAccess.allowRootAccess(getTestRootDisposable(), rootFile.getPath())[ CD ]
Line_16 $$ File substFile = new File(substDir, file.getName())-->Line_23 $$ assertEvent(VFileContentChangeEvent.class, substFile.getPath())[ FD ]
Line_16 $$ File substFile = new File(substDir, file.getName())-->Line_34 $$ assertEvent(VFileCreateEvent.class, substFile.getPath())[ FD ]
Line_8 $$ File subDir = createTestDir(targetDir, "sub")-->Line_15 $$ File substDir = new File(rootFile, subDir.getName())[ FD ]
Line_10 $$ File rootFile = createSubst(targetDir.getPath())-->Line_14 $$ assertNotNull(rootFile.getPath(), vfsRoot)[ FD ]
Line_2 $$ public void testSubst() throws Exception -->Line_8 $$ File subDir = createTestDir(targetDir, "sub")[ CD ]
Line_9 $$ File file = createTestFile(subDir, "test.txt")-->Line_27 $$ FileUtil.delete(file)[ FD ]
Line_15 $$ File substDir = new File(rootFile, subDir.getName())-->Line_18 $$ refresh(substDir)[ FD ]
Line_3 $$ if (!SystemInfo.isWindows) -->Line_5 $$ return[ CD ]
Line_9 $$ File file = createTestFile(subDir, "test.txt")-->Line_22 $$ FileUtil.writeToFile(file, "new content")[ FD ]
