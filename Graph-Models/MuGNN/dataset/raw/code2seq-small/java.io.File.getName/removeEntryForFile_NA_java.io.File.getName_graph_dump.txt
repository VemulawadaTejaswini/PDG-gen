Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_4 $$ final File directory = file.getParentFile()[ CD ]
Line_9 $$ final boolean entriesUpdated = entriesHandler.read(myCharset)-->Line_11 $$ if (entriesUpdated || entryRemoved) [ FD ]
Line_3 $$ final File file = cvsFileSystem.getAdminFileSystem().getFile(fileObject)-->Line_10 $$ final boolean entryRemoved = entriesHandler.getEntries().removeEntry(file.getName())[ FD ]
Line_8 $$ final EntriesHandler entriesHandler = new EntriesHandler(directory)-->Line_10 $$ final boolean entryRemoved = entriesHandler.getEntries().removeEntry(file.getName())[ FD ]
Line_8 $$ final EntriesHandler entriesHandler = new EntriesHandler(directory)-->Line_9 $$ final boolean entriesUpdated = entriesHandler.read(myCharset)[ FD ]
Line_3 $$ final File file = cvsFileSystem.getAdminFileSystem().getFile(fileObject)-->Line_6 $$ throw new IOException(SmartCvsSrcBundle.message("file.does.not.have.a.parent.directory.error.message", file))[ FD ]
Line_8 $$ final EntriesHandler entriesHandler = new EntriesHandler(directory)-->Line_12 $$ entriesHandler.write(myLineSeparator, myCharset)[ FD ]
Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_11 $$ if (entriesUpdated || entryRemoved) [ CD ]
Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_8 $$ final EntriesHandler entriesHandler = new EntriesHandler(directory)[ CD ]
Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_9 $$ final boolean entriesUpdated = entriesHandler.read(myCharset)[ CD ]
Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_3 $$ final File file = cvsFileSystem.getAdminFileSystem().getFile(fileObject)[ CD ]
Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_3 $$ final File file = cvsFileSystem.getAdminFileSystem().getFile(fileObject)[ FD ]
Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_10 $$ final boolean entryRemoved = entriesHandler.getEntries().removeEntry(file.getName())[ CD ]
Line_11 $$ if (entriesUpdated || entryRemoved) -->Line_12 $$ entriesHandler.write(myLineSeparator, myCharset)[ CD ]
Line_2 $$ public void removeEntryForFile(AbstractFileObject fileObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_5 $$ if (directory == null) [ CD ]
Line_4 $$ final File directory = file.getParentFile()-->Line_5 $$ if (directory == null) [ FD ]
Line_10 $$ final boolean entryRemoved = entriesHandler.getEntries().removeEntry(file.getName())-->Line_11 $$ if (entriesUpdated || entryRemoved) [ FD ]
Line_3 $$ final File file = cvsFileSystem.getAdminFileSystem().getFile(fileObject)-->Line_4 $$ final File directory = file.getParentFile()[ FD ]
