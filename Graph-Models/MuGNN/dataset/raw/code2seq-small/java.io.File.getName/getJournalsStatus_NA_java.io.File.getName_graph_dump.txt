Line_2 $$ public String getJournalsStatus() -->Line_11 $$ File[] journalDirs = localDir.listFiles(new FileFilter() [ CD ]
Line_6 $$ Map<String, String> jMap = new HashMap<String, String>()-->Line_21 $$ status.put(jid, jMap)[ FD ]
Line_3 $$ Map<String, Map<String, String>> status = new HashMap<String, Map<String, String>>()-->Line_18 $$ if (!status.containsKey(jid)) [ FD ]
Line_6 $$ Map<String, String> jMap = new HashMap<String, String>()-->Line_20 $$ jMap.put("Formatted", "true")[ FD ]
Line_2 $$ public String getJournalsStatus() -->Line_24 $$ return JSON.toString(status)[ CD ]
Line_5 $$ for (Map.Entry<String, Journal> entry : journalsById.entrySet()) -->Line_8 $$ status.put(entry.getKey(), jMap)[ FD ]
Line_6 $$ Map<String, String> jMap = new HashMap<String, String>()-->Line_7 $$ jMap.put("Formatted", Boolean.toString(entry.getValue().isFormatted()))[ FD ]
Line_5 $$ for (Map.Entry<String, Journal> entry : journalsById.entrySet()) -->Line_7 $$ jMap.put("Formatted", Boolean.toString(entry.getValue().isFormatted()))[ FD ]
Line_6 $$ Map<String, String> jMap = new HashMap<String, String>()-->Line_8 $$ status.put(entry.getKey(), jMap)[ FD ]
Line_11 $$ File[] journalDirs = localDir.listFiles(new FileFilter() -->Line_13 $$ return file.isDirectory()[ CD ]
Line_11 $$ File[] journalDirs = localDir.listFiles(new FileFilter() -->Line_13 $$ return file.isDirectory()[ FD ]
Line_18 $$ if (!status.containsKey(jid)) -->Line_20 $$ jMap.put("Formatted", "true")[ CD ]
Line_3 $$ Map<String, Map<String, String>> status = new HashMap<String, Map<String, String>>()-->Line_8 $$ status.put(entry.getKey(), jMap)[ FD ]
Line_2 $$ public String getJournalsStatus() -->Line_3 $$ Map<String, Map<String, String>> status = new HashMap<String, Map<String, String>>()[ CD ]
Line_18 $$ if (!status.containsKey(jid)) -->Line_21 $$ status.put(jid, jMap)[ CD ]
Line_3 $$ Map<String, Map<String, String>> status = new HashMap<String, Map<String, String>>()-->Line_24 $$ return JSON.toString(status)[ FD ]
Line_3 $$ Map<String, Map<String, String>> status = new HashMap<String, Map<String, String>>()-->Line_21 $$ status.put(jid, jMap)[ FD ]
