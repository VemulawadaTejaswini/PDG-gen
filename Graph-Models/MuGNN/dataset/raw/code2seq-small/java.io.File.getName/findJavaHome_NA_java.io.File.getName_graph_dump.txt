Line_4 $$ if (toolsJar != null) -->Line_6 $$ if (javaBase.getName().equalsIgnoreCase("jre") && new File(javaBase.getParentFile(), "bin/java").exists()) [ CD ]
Line_3 $$ File toolsJar = findToolsJar(javaBase)-->Line_4 $$ if (toolsJar != null) [ FD ]
Line_6 $$ if (javaBase.getName().equalsIgnoreCase("jre") && new File(javaBase.getParentFile(), "bin/java").exists()) -->Line_9 $$ return javaBase[ CD ]
Line_2 $$ private File findJavaHome(File javaBase) -->Line_6 $$ if (javaBase.getName().equalsIgnoreCase("jre") && new File(javaBase.getParentFile(), "bin/java").exists()) [ FD ]
Line_4 $$ if (toolsJar != null) -->Line_5 $$ return toolsJar.getParentFile().getParentFile()[ CD ]
Line_2 $$ private File findJavaHome(File javaBase) -->Line_3 $$ File toolsJar = findToolsJar(javaBase)[ FD ]
Line_2 $$ private File findJavaHome(File javaBase) -->Line_4 $$ if (toolsJar != null) [ CD ]
Line_6 $$ if (javaBase.getName().equalsIgnoreCase("jre") && new File(javaBase.getParentFile(), "bin/java").exists()) -->Line_7 $$ return javaBase.getParentFile()[ CD ]
Line_2 $$ private File findJavaHome(File javaBase) -->Line_3 $$ File toolsJar = findToolsJar(javaBase)[ CD ]
Line_2 $$ private File findJavaHome(File javaBase) -->Line_7 $$ return javaBase.getParentFile()[ FD ]
Line_3 $$ File toolsJar = findToolsJar(javaBase)-->Line_5 $$ return toolsJar.getParentFile().getParentFile()[ FD ]
