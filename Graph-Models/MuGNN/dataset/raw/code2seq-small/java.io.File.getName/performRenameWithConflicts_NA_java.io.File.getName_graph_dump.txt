Line_3 $$ File tmpFileWithUniqueName = FileUtil.createTempFile(oldParent, "tempFileToMove", null, false)-->Line_5 $$ File destFile = new File(newParentFile, tmpFileWithUniqueName.getName())[ FD ]
Line_6 $$ while (destFile.exists()) -->Line_7 $$ destFile = new File(newParentFile, FileUtil.createTempFile(oldParent, FileUtil.getNameWithoutExtension(destFile.getName()), null, false).getName())[ CD ]
Line_7 $$ destFile = new File(newParentFile, FileUtil.createTempFile(oldParent, FileUtil.getNameWithoutExtension(destFile.getName()), null, false).getName())-->Line_9 $$ myCurrent.rename(PatchApplier.class, destFile.getName())[ FD ]
Line_5 $$ File destFile = new File(newParentFile, tmpFileWithUniqueName.getName())-->Line_9 $$ myCurrent.rename(PatchApplier.class, destFile.getName())[ FD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_9 $$ myCurrent.rename(PatchApplier.class, destFile.getName())[ CD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_3 $$ File tmpFileWithUniqueName = FileUtil.createTempFile(oldParent, "tempFileToMove", null, false)[ CD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_6 $$ while (destFile.exists()) [ CD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_7 $$ destFile = new File(newParentFile, FileUtil.createTempFile(oldParent, FileUtil.getNameWithoutExtension(destFile.getName()), null, false).getName())[ FD ]
Line_7 $$ destFile = new File(newParentFile, FileUtil.createTempFile(oldParent, FileUtil.getNameWithoutExtension(destFile.getName()), null, false).getName())-->Line_6 $$ while (destFile.exists()) [ FD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_10 $$ myCurrent.move(PatchApplier.class, myNewParent)[ CD ]
Line_5 $$ File destFile = new File(newParentFile, tmpFileWithUniqueName.getName())-->Line_6 $$ while (destFile.exists()) [ FD ]
Line_5 $$ File destFile = new File(newParentFile, tmpFileWithUniqueName.getName())-->Line_7 $$ destFile = new File(newParentFile, FileUtil.createTempFile(oldParent, FileUtil.getNameWithoutExtension(destFile.getName()), null, false).getName())[ FD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_11 $$ myCurrent.rename(PatchApplier.class, myNewName)[ CD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_3 $$ File tmpFileWithUniqueName = FileUtil.createTempFile(oldParent, "tempFileToMove", null, false)[ FD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_4 $$ File newParentFile = VfsUtilCore.virtualToIoFile(myNewParent)[ CD ]
Line_2 $$ private void performRenameWithConflicts(@NotNull File oldParent) throws IOException -->Line_5 $$ File destFile = new File(newParentFile, tmpFileWithUniqueName.getName())[ CD ]
