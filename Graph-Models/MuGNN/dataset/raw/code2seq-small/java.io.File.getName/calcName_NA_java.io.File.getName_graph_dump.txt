Line_2 $$ private static File calcName(@NotNull File dir, @NotNull String prefix, @NotNull String suffix, int i) throws IOException -->Line_8 $$ File f = new File(dir, name)[ CD ]
Line_2 $$ private static File calcName(@NotNull File dir, @NotNull String prefix, @NotNull String suffix, int i) throws IOException -->Line_9 $$ if (!name.equals(f.getName())) [ CD ]
Line_2 $$ private static File calcName(@NotNull File dir, @NotNull String prefix, @NotNull String suffix, int i) throws IOException -->Line_7 $$ String name = prefix + suffix[ CD ]
Line_2 $$ private static File calcName(@NotNull File dir, @NotNull String prefix, @NotNull String suffix, int i) throws IOException -->Line_4 $$ if (prefix.endsWith(".") && suffix.startsWith(".")) [ FD ]
Line_2 $$ private static File calcName(@NotNull File dir, @NotNull String prefix, @NotNull String suffix, int i) throws IOException -->Line_5 $$ prefix = prefix.substring(0, prefix.length() - 1)[ FD ]
Line_2 $$ private static File calcName(@NotNull File dir, @NotNull String prefix, @NotNull String suffix, int i) throws IOException -->Line_4 $$ if (prefix.endsWith(".") && suffix.startsWith(".")) [ CD ]
Line_8 $$ File f = new File(dir, name)-->Line_9 $$ if (!name.equals(f.getName())) [ FD ]
Line_2 $$ private static File calcName(@NotNull File dir, @NotNull String prefix, @NotNull String suffix, int i) throws IOException -->Line_12 $$ return f[ CD ]
Line_7 $$ String name = prefix + suffix-->Line_9 $$ if (!name.equals(f.getName())) [ FD ]
Line_4 $$ if (prefix.endsWith(".") && suffix.startsWith(".")) -->Line_5 $$ prefix = prefix.substring(0, prefix.length() - 1)[ CD ]
