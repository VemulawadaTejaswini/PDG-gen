Line_2 $$ public static IdeaPluginDescriptorImpl loadDescriptionFromJar(final File file) throws IOException -->Line_8 $$ ZipUtil.extract(file, outputDir, null)[ FD ]
Line_6 $$ final File outputDir = FileUtil.createTempDirectory("plugin", "")-->Line_8 $$ ZipUtil.extract(file, outputDir, null)[ FD ]
Line_6 $$ final File outputDir = FileUtil.createTempDirectory("plugin", "")-->Line_9 $$ final File[] files = outputDir.listFiles()[ FD ]
Line_6 $$ final File outputDir = FileUtil.createTempDirectory("plugin", "")-->Line_14 $$ FileUtil.delete(outputDir)[ FD ]
Line_2 $$ public static IdeaPluginDescriptorImpl loadDescriptionFromJar(final File file) throws IOException -->Line_3 $$ IdeaPluginDescriptorImpl descriptor = PluginManagerCore.loadDescriptorFromJar(file)[ FD ]
Line_2 $$ public static IdeaPluginDescriptorImpl loadDescriptionFromJar(final File file) throws IOException -->Line_5 $$ if (file.getName().endsWith(".zip")) [ FD ]
Line_2 $$ public static IdeaPluginDescriptorImpl loadDescriptionFromJar(final File file) throws IOException -->Line_4 $$ if (descriptor == null) [ CD ]
Line_2 $$ public static IdeaPluginDescriptorImpl loadDescriptionFromJar(final File file) throws IOException -->Line_18 $$ return descriptor[ CD ]
Line_2 $$ public static IdeaPluginDescriptorImpl loadDescriptionFromJar(final File file) throws IOException -->Line_3 $$ IdeaPluginDescriptorImpl descriptor = PluginManagerCore.loadDescriptorFromJar(file)[ CD ]
Line_4 $$ if (descriptor == null) -->Line_5 $$ if (file.getName().endsWith(".zip")) [ CD ]
Line_5 $$ if (file.getName().endsWith(".zip")) -->Line_6 $$ final File outputDir = FileUtil.createTempDirectory("plugin", "")[ CD ]
Line_10 $$ if (files != null && files.length == 1) -->Line_11 $$ descriptor = PluginManagerCore.loadDescriptor(files[0], PluginManagerCore.PLUGIN_XML)[ CD ]
Line_3 $$ IdeaPluginDescriptorImpl descriptor = PluginManagerCore.loadDescriptorFromJar(file)-->Line_11 $$ descriptor = PluginManagerCore.loadDescriptor(files[0], PluginManagerCore.PLUGIN_XML)[ FD ]
Line_3 $$ IdeaPluginDescriptorImpl descriptor = PluginManagerCore.loadDescriptorFromJar(file)-->Line_4 $$ if (descriptor == null) [ FD ]
