Line_7 $$ if (file.isDirectory()) -->Line_8 $$ return buildClassLoaderFromDirectory(file)[ CD ]
Line_2 $$ private URLClassLoader buildClassLoader(String plugin) throws Exception -->Line_10 $$ return buildClassLoaderFromCoordinates(plugin)[ FD ]
Line_2 $$ private URLClassLoader buildClassLoader(String plugin) throws Exception -->Line_3 $$ File file = new File(plugin)[ CD ]
Line_4 $$ if (file.isFile() && (file.getName().equals("pom.xml") || file.getName().endsWith(".pom"))) -->Line_5 $$ return buildClassLoaderFromPom(file)[ CD ]
Line_3 $$ File file = new File(plugin)-->Line_4 $$ if (file.isFile() && (file.getName().equals("pom.xml") || file.getName().endsWith(".pom"))) [ FD ]
Line_2 $$ private URLClassLoader buildClassLoader(String plugin) throws Exception -->Line_7 $$ if (file.isDirectory()) [ CD ]
Line_3 $$ File file = new File(plugin)-->Line_8 $$ return buildClassLoaderFromDirectory(file)[ FD ]
Line_3 $$ File file = new File(plugin)-->Line_7 $$ if (file.isDirectory()) [ FD ]
Line_2 $$ private URLClassLoader buildClassLoader(String plugin) throws Exception -->Line_10 $$ return buildClassLoaderFromCoordinates(plugin)[ CD ]
Line_3 $$ File file = new File(plugin)-->Line_5 $$ return buildClassLoaderFromPom(file)[ FD ]
Line_2 $$ private URLClassLoader buildClassLoader(String plugin) throws Exception -->Line_4 $$ if (file.isFile() && (file.getName().equals("pom.xml") || file.getName().endsWith(".pom"))) [ CD ]
