Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_9 $$ String workingDir = MacroManager.getInstance().expandMacrosInString(getWorkingDirectory(), true, dataContext)[ FD ]
Line_10 $$ String exePath = MacroManager.getInstance().expandMacrosInString(getProgram(), true, dataContext)-->Line_16 $$ exePath = MacroManager.getInstance().expandMacrosInString(exePath, false, dataContext)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_3 $$ if (StringUtil.isEmpty(getWorkingDirectory())) [ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_11 $$ commandLine.getParametersList().addParametersString(MacroManager.getInstance().expandMacrosInString(paramString, false, dataContext))[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_25 $$ commandLine.setExePath(exePath)[ FD ]
Line_20 $$ if (exeFile.isDirectory() && exeFile.getName().endsWith(".app")) -->Line_22 $$ commandLine.getParametersList().prependAll("-a", exePath)[ CD ]
Line_12 $$ final String workDirExpanded = MacroManager.getInstance().expandMacrosInString(workingDir, false, dataContext)-->Line_14 $$ commandLine.setWorkDirectory(workDirExpanded)[ FD ]
Line_16 $$ exePath = MacroManager.getInstance().expandMacrosInString(exePath, false, dataContext)-->Line_17 $$ if (exePath == null)[ FD ]
Line_10 $$ String exePath = MacroManager.getInstance().expandMacrosInString(getProgram(), true, dataContext)-->Line_24 $$ exePath = PathEnvironmentVariableUtil.toLocatableExePath(exePath)[ FD ]
Line_19 $$ File exeFile = new File(exePath)-->Line_20 $$ if (exeFile.isDirectory() && exeFile.getName().endsWith(".app")) [ FD ]
Line_16 $$ exePath = MacroManager.getInstance().expandMacrosInString(exePath, false, dataContext)-->Line_25 $$ commandLine.setExePath(exePath)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_10 $$ String exePath = MacroManager.getInstance().expandMacrosInString(getProgram(), true, dataContext)[ FD ]
Line_9 $$ String workingDir = MacroManager.getInstance().expandMacrosInString(getWorkingDirectory(), true, dataContext)-->Line_12 $$ final String workDirExpanded = MacroManager.getInstance().expandMacrosInString(workingDir, false, dataContext)[ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_12 $$ final String workDirExpanded = MacroManager.getInstance().expandMacrosInString(workingDir, false, dataContext)[ FD ]
Line_10 $$ String exePath = MacroManager.getInstance().expandMacrosInString(getProgram(), true, dataContext)-->Line_22 $$ commandLine.getParametersList().prependAll("-a", exePath)[ FD ]
Line_8 $$ String paramString = MacroManager.getInstance().expandMacrosInString(getParameters(), true, dataContext)-->Line_11 $$ commandLine.getParametersList().addParametersString(MacroManager.getInstance().expandMacrosInString(paramString, false, dataContext))[ FD ]
Line_20 $$ if (exeFile.isDirectory() && exeFile.getName().endsWith(".app")) -->Line_21 $$ commandLine.setExePath("open")[ CD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_21 $$ commandLine.setExePath("open")[ FD ]
Line_10 $$ String exePath = MacroManager.getInstance().expandMacrosInString(getProgram(), true, dataContext)-->Line_25 $$ commandLine.setExePath(exePath)[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_11 $$ commandLine.getParametersList().addParametersString(MacroManager.getInstance().expandMacrosInString(paramString, false, dataContext))[ FD ]
Line_16 $$ exePath = MacroManager.getInstance().expandMacrosInString(exePath, false, dataContext)-->Line_22 $$ commandLine.getParametersList().prependAll("-a", exePath)[ FD ]
Line_13 $$ if (!StringUtil.isEmpty(workDirExpanded)) -->Line_14 $$ commandLine.setWorkDirectory(workDirExpanded)[ CD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_14 $$ commandLine.setWorkDirectory(workDirExpanded)[ FD ]
Line_20 $$ if (exeFile.isDirectory() && exeFile.getName().endsWith(".app")) -->Line_24 $$ exePath = PathEnvironmentVariableUtil.toLocatableExePath(exePath)[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_30 $$ return commandLine[ CD ]
Line_3 $$ if (StringUtil.isEmpty(getWorkingDirectory())) -->Line_4 $$ setWorkingDirectory("$ProjectFileDir$")[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_16 $$ exePath = MacroManager.getInstance().expandMacrosInString(exePath, false, dataContext)[ FD ]
Line_12 $$ final String workDirExpanded = MacroManager.getInstance().expandMacrosInString(workingDir, false, dataContext)-->Line_13 $$ if (!StringUtil.isEmpty(workDirExpanded)) [ FD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_8 $$ String paramString = MacroManager.getInstance().expandMacrosInString(getParameters(), true, dataContext)[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_22 $$ commandLine.getParametersList().prependAll("-a", exePath)[ FD ]
Line_20 $$ if (exeFile.isDirectory() && exeFile.getName().endsWith(".app")) -->Line_25 $$ commandLine.setExePath(exePath)[ CD ]
Line_10 $$ String exePath = MacroManager.getInstance().expandMacrosInString(getProgram(), true, dataContext)-->Line_17 $$ if (exePath == null)[ FD ]
Line_24 $$ exePath = PathEnvironmentVariableUtil.toLocatableExePath(exePath)-->Line_25 $$ commandLine.setExePath(exePath)[ FD ]
Line_16 $$ exePath = MacroManager.getInstance().expandMacrosInString(exePath, false, dataContext)-->Line_24 $$ exePath = PathEnvironmentVariableUtil.toLocatableExePath(exePath)[ FD ]
Line_17 $$ if (exePath == null)-->Line_18 $$ return null[ CD ]
Line_2 $$ public GeneralCommandLine createCommandLine(DataContext dataContext) -->Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()[ CD ]
