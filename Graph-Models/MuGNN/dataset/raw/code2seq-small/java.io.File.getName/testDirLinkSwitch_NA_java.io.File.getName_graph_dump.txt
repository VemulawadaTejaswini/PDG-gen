Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_14 $$ createSymLink(targetDir2.getPath(), myTempDir.getRoot() + "/" + link.getName())[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_17 $$ VirtualFile vLink2 = LocalFileSystem.getInstance().findFileByIoFile(link)[ CD ]
Line_17 $$ VirtualFile vLink2 = LocalFileSystem.getInstance().findFileByIoFile(link)-->Line_20 $$ assertEquals(2, vLink2.getChildren().length)[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_7 $$ assertTrue(new File(targetDir2, "child12.txt").createNewFile())[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_12 $$ assertPathsEqual(targetDir1.getPath(), vLink1.getCanonicalPath())[ CD ]
Line_8 $$ File link = createSymLink(targetDir1.getPath(), myTempDir.getRoot() + "/link")-->Line_14 $$ createSymLink(targetDir2.getPath(), myTempDir.getRoot() + "/" + link.getName())[ FD ]
Line_17 $$ VirtualFile vLink2 = LocalFileSystem.getInstance().findFileByIoFile(link)-->Line_19 $$ assertTrue("link=" + link + ", vLink=" + vLink2, vLink2 != null && vLink2.isDirectory() && vLink2.is(VFileProperty.SYMLINK))[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_21 $$ assertPathsEqual(targetDir2.getPath(), vLink1.getCanonicalPath())[ CD ]
Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)-->Line_10 $$ assertTrue("link=" + link + ", vLink=" + vLink1, vLink1 != null && vLink1.isDirectory() && vLink1.is(VFileProperty.SYMLINK))[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_3 $$ File targetDir1 = myTempDir.newFolder("target1")[ CD ]
Line_4 $$ File targetDir2 = myTempDir.newFolder("target2")-->Line_21 $$ assertPathsEqual(targetDir2.getPath(), vLink1.getCanonicalPath())[ FD ]
Line_8 $$ File link = createSymLink(targetDir1.getPath(), myTempDir.getRoot() + "/link")-->Line_13 $$ assertTrue(link.toString(), link.delete())[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)[ CD ]
Line_8 $$ File link = createSymLink(targetDir1.getPath(), myTempDir.getRoot() + "/link")-->Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)[ FD ]
Line_3 $$ File targetDir1 = myTempDir.newFolder("target1")-->Line_12 $$ assertPathsEqual(targetDir1.getPath(), vLink1.getCanonicalPath())[ FD ]
Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)-->Line_18 $$ assertEquals(vLink1, vLink2)[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_16 $$ assertTrue(vLink1.isValid())[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_15 $$ refresh()[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_13 $$ assertTrue(link.toString(), link.delete())[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_5 $$ assertTrue(new File(targetDir1, "child1.txt").createNewFile())[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_10 $$ assertTrue("link=" + link + ", vLink=" + vLink1, vLink1 != null && vLink1.isDirectory() && vLink1.is(VFileProperty.SYMLINK))[ CD ]
Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)-->Line_11 $$ assertEquals(1, vLink1.getChildren().length)[ FD ]
Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)-->Line_21 $$ assertPathsEqual(targetDir2.getPath(), vLink1.getCanonicalPath())[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_19 $$ assertTrue("link=" + link + ", vLink=" + vLink2, vLink2 != null && vLink2.isDirectory() && vLink2.is(VFileProperty.SYMLINK))[ CD ]
Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)-->Line_12 $$ assertPathsEqual(targetDir1.getPath(), vLink1.getCanonicalPath())[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_8 $$ File link = createSymLink(targetDir1.getPath(), myTempDir.getRoot() + "/link")[ CD ]
Line_17 $$ VirtualFile vLink2 = LocalFileSystem.getInstance().findFileByIoFile(link)-->Line_18 $$ assertEquals(vLink1, vLink2)[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_4 $$ File targetDir2 = myTempDir.newFolder("target2")[ CD ]
Line_3 $$ File targetDir1 = myTempDir.newFolder("target1")-->Line_8 $$ File link = createSymLink(targetDir1.getPath(), myTempDir.getRoot() + "/link")[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_11 $$ assertEquals(1, vLink1.getChildren().length)[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_20 $$ assertEquals(2, vLink2.getChildren().length)[ CD ]
Line_4 $$ File targetDir2 = myTempDir.newFolder("target2")-->Line_14 $$ createSymLink(targetDir2.getPath(), myTempDir.getRoot() + "/" + link.getName())[ FD ]
Line_9 $$ VirtualFile vLink1 = refreshAndFind(link)-->Line_16 $$ assertTrue(vLink1.isValid())[ FD ]
Line_8 $$ File link = createSymLink(targetDir1.getPath(), myTempDir.getRoot() + "/link")-->Line_17 $$ VirtualFile vLink2 = LocalFileSystem.getInstance().findFileByIoFile(link)[ FD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_18 $$ assertEquals(vLink1, vLink2)[ CD ]
Line_2 $$ public void testDirLinkSwitch() throws Exception -->Line_6 $$ assertTrue(new File(targetDir2, "child11.txt").createNewFile())[ CD ]
