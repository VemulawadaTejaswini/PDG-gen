Line_6 $$ PropertyClient client = myVCS.getFactory(ioFiles[i]).createPropertyClient()-->Line_7 $$ PropertyValue property = client.getProperty(SvnTarget.fromFile(ioFiles[i], SVNRevision.WORKING), SvnPropertyKeys.SVN_NEEDS_LOCK, false, SVNRevision.WORKING)[ FD ]
Line_7 $$ PropertyValue property = client.getProperty(SvnTarget.fromFile(ioFiles[i], SVNRevision.WORKING), SvnPropertyKeys.SVN_NEEDS_LOCK, false, SVNRevision.WORKING)-->Line_8 $$ if (property == null) [ FD ]
Line_4 $$ for (int i = 0; i < files.length; i++) -->Line_6 $$ PropertyClient client = myVCS.getFactory(ioFiles[i]).createPropertyClient()[ CD ]
Line_2 $$ public void editFiles(VirtualFile[] files) throws VcsException -->Line_12 $$ SvnUtil.doLockFiles(myVCS.getProject(), myVCS, ioFiles)[ CD ]
Line_3 $$ File[] ioFiles = new File[files.length]-->Line_12 $$ SvnUtil.doLockFiles(myVCS.getProject(), myVCS, ioFiles)[ FD ]
Line_2 $$ public void editFiles(VirtualFile[] files) throws VcsException -->Line_4 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_4 $$ for (int i = 0; i < files.length; i++) -->Line_8 $$ if (property == null) [ CD ]
Line_2 $$ public void editFiles(VirtualFile[] files) throws VcsException -->Line_3 $$ File[] ioFiles = new File[files.length][ CD ]
Line_4 $$ for (int i = 0; i < files.length; i++) -->Line_7 $$ PropertyValue property = client.getProperty(SvnTarget.fromFile(ioFiles[i], SVNRevision.WORKING), SvnPropertyKeys.SVN_NEEDS_LOCK, false, SVNRevision.WORKING)[ CD ]
Line_4 $$ for (int i = 0; i < files.length; i++) -->Line_5 $$ ioFiles[i] = new File(files[i].getPath())[ CD ]
