Line_12 $$ final String childRelativePath = (relativePath.isEmpty() ? "" : relativePath + "/") + child.getName()-->Line_13 $$ addFileOrDirRecursively(outputStream, jarFile, child, childRelativePath, fileFilter, writtenItemRelativePaths)[ FD ]
Line_11 $$ for (File child : children) -->Line_13 $$ addFileOrDirRecursively(outputStream, jarFile, child, childRelativePath, fileFilter, writtenItemRelativePaths)[ FD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_7 $$ addFileToZip(outputStream, dir, relativePath, writtenItemRelativePaths, fileFilter)[ FD ]
Line_3 $$ if (jarFile != null && FileUtil.isAncestor(dir, jarFile, false)) -->Line_4 $$ return false[ CD ]
Line_6 $$ if (!relativePath.isEmpty()) -->Line_7 $$ addFileToZip(outputStream, dir, relativePath, writtenItemRelativePaths, fileFilter)[ CD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_9 $$ final File[] children = dir.listFiles()[ CD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_9 $$ final File[] children = dir.listFiles()[ FD ]
Line_11 $$ for (File child : children) -->Line_12 $$ final String childRelativePath = (relativePath.isEmpty() ? "" : relativePath + "/") + child.getName()[ FD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_6 $$ if (!relativePath.isEmpty()) [ FD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_16 $$ return true[ CD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_3 $$ if (jarFile != null && FileUtil.isAncestor(dir, jarFile, false)) [ FD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_6 $$ if (!relativePath.isEmpty()) [ CD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_12 $$ final String childRelativePath = (relativePath.isEmpty() ? "" : relativePath + "/") + child.getName()[ FD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_3 $$ if (jarFile != null && FileUtil.isAncestor(dir, jarFile, false)) [ CD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_13 $$ addFileOrDirRecursively(outputStream, jarFile, child, childRelativePath, fileFilter, writtenItemRelativePaths)[ FD ]
Line_2 $$ public static boolean addDirToZipRecursively(@NotNull ZipOutputStream outputStream, @Nullable File jarFile, @NotNull File dir, @NotNull String relativePath, @Nullable FileFilter fileFilter, @Nullable Set<String> writtenItemRelativePaths) throws IOException -->Line_10 $$ if (children != null) [ CD ]
Line_9 $$ final File[] children = dir.listFiles()-->Line_10 $$ if (children != null) [ FD ]
