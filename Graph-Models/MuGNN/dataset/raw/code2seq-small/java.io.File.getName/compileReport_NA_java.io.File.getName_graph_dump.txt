Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_35 $$ return report[ CD ]
Line_26 $$ while (i + 1 < files.length && files[i + 1].isFile() && files[i + 1].getName().startsWith(blockFile.getName())) -->Line_28 $$ if (isBlockMetaFile(blockFile.getName(), files[i].getName())) [ CD ]
Line_17 $$ if (isBlockMetaFile("blk_", files[i].getName())) -->Line_19 $$ report.add(new ScanInfo(blockId, null, files[i], vol))[ CD ]
Line_16 $$ if (!Block.isBlockFilename(files[i])) -->Line_17 $$ if (isBlockMetaFile("blk_", files[i].getName())) [ CD ]
Line_5 $$ files = FileUtil.listFiles(dir)-->Line_10 $$ Arrays.sort(files)[ FD ]
Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_5 $$ files = FileUtil.listFiles(dir)[ FD ]
Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_11 $$ for (int i = 0; i < files.length; i++) [ CD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_24 $$ long blockId = Block.filename2id(blockFile.getName())[ CD ]
Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_3 $$ File[] files[ CD ]
Line_3 $$ File[] files-->Line_10 $$ Arrays.sort(files)[ FD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_16 $$ if (!Block.isBlockFilename(files[i])) [ CD ]
Line_12 $$ if (files[i].isDirectory()) -->Line_13 $$ compileReport(vol, files[i], report)[ CD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_12 $$ if (files[i].isDirectory()) [ CD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_26 $$ while (i + 1 < files.length && files[i + 1].isFile() && files[i + 1].getName().startsWith(blockFile.getName())) [ CD ]
Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_33 $$ report.add(new ScanInfo(blockId, blockFile, metaFile, vol))[ FD ]
Line_23 $$ File blockFile = files[i]-->Line_24 $$ long blockId = Block.filename2id(blockFile.getName())[ FD ]
Line_3 $$ File[] files-->Line_5 $$ files = FileUtil.listFiles(dir)[ FD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_23 $$ File blockFile = files[i][ CD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_33 $$ report.add(new ScanInfo(blockId, blockFile, metaFile, vol))[ CD ]
Line_26 $$ while (i + 1 < files.length && files[i + 1].isFile() && files[i + 1].getName().startsWith(blockFile.getName())) -->Line_27 $$ i++[ CD ]
Line_17 $$ if (isBlockMetaFile("blk_", files[i].getName())) -->Line_18 $$ long blockId = Block.getBlockId(files[i].getName())[ CD ]
Line_28 $$ if (isBlockMetaFile(blockFile.getName(), files[i].getName())) -->Line_29 $$ metaFile = files[i][ CD ]
Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_13 $$ compileReport(vol, files[i], report)[ FD ]
Line_23 $$ File blockFile = files[i]-->Line_26 $$ while (i + 1 < files.length && files[i + 1].isFile() && files[i + 1].getName().startsWith(blockFile.getName())) [ FD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_25 $$ File metaFile = null[ CD ]
Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_10 $$ Arrays.sort(files)[ CD ]
Line_2 $$ private LinkedList<ScanInfo> compileReport(FsVolumeSpi vol, File dir, LinkedList<ScanInfo> report) -->Line_19 $$ report.add(new ScanInfo(blockId, null, files[i], vol))[ FD ]
Line_23 $$ File blockFile = files[i]-->Line_28 $$ if (isBlockMetaFile(blockFile.getName(), files[i].getName())) [ FD ]
Line_25 $$ File metaFile = null-->Line_29 $$ metaFile = files[i][ FD ]
Line_11 $$ for (int i = 0; i < files.length; i++) -->Line_27 $$ i++[ FD ]
