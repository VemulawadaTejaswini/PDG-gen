Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_3 $$ final File md5File = getDigestFileForFile(dataFile)[ FD ]
Line_3 $$ final File md5File = getDigestFileForFile(dataFile)-->Line_7 $$ final Matcher matcher = readStoredMd5(md5File)[ FD ]
Line_3 $$ final File md5File = getDigestFileForFile(dataFile)-->Line_4 $$ if (!md5File.exists()) [ FD ]
Line_7 $$ final Matcher matcher = readStoredMd5(md5File)-->Line_8 $$ String storedHash = matcher.group(1)[ FD ]
Line_4 $$ if (!md5File.exists()) -->Line_5 $$ return null[ CD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_9 $$ File referencedFile = new File(matcher.group(2))[ CD ]
Line_7 $$ final Matcher matcher = readStoredMd5(md5File)-->Line_9 $$ File referencedFile = new File(matcher.group(2))[ FD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_4 $$ if (!md5File.exists()) [ CD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_10 $$ if (!referencedFile.getName().equals(dataFile.getName())) [ CD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_8 $$ String storedHash = matcher.group(1)[ CD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_7 $$ final Matcher matcher = readStoredMd5(md5File)[ CD ]
Line_9 $$ File referencedFile = new File(matcher.group(2))-->Line_10 $$ if (!referencedFile.getName().equals(dataFile.getName())) [ FD ]
Line_9 $$ File referencedFile = new File(matcher.group(2))-->Line_11 $$ throw new IOException("MD5 file at " + md5File + " references file named " + referencedFile.getName() + " but we expected it to reference " + dataFile)[ FD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_10 $$ if (!referencedFile.getName().equals(dataFile.getName())) [ FD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_13 $$ return new MD5Hash(storedHash)[ CD ]
Line_2 $$ public static MD5Hash readStoredMd5ForFile(File dataFile) throws IOException -->Line_3 $$ final File md5File = getDigestFileForFile(dataFile)[ CD ]
