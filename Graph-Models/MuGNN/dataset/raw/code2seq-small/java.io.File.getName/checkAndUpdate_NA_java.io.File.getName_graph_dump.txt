Line_31 $$ if (memBlockInfo == null) -->Line_39 $$ return[ CD ]
Line_31 $$ if (memBlockInfo == null) -->Line_32 $$ ReplicaInfo diskBlockInfo = new FinalizedReplica(blockId, diskFile.length(), diskGS, vol, diskFile.getParentFile())[ CD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_13 $$ if (diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.delete()) [ FD ]
Line_20 $$ final DataBlockScanner blockScanner = datanode.getBlockScanner()-->Line_21 $$ if (blockScanner != null) [ FD ]
Line_12 $$ if (memBlockInfo == null) -->Line_13 $$ if (diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.delete()) [ CD ]
Line_42 $$ if (memFile.exists()) -->Line_43 $$ if (memFile.compareTo(diskFile) != 0) [ CD ]
Line_11 $$ if (diskFile == null || !diskFile.exists()) -->Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) [ CD ]
Line_20 $$ final DataBlockScanner blockScanner = datanode.getBlockScanner()-->Line_35 $$ if (blockScanner != null) [ FD ]
Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) -->Line_24 $$ LOG.warn("Removed block " + blockId + " from memory with missing block file on the disk")[ CD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_67 $$ LOG.warn("Updating size of block " + blockId + " from " + memBlockInfo.getNumBytes() + " to " + memFile.length())[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_43 $$ if (memFile.compareTo(diskFile) != 0) [ FD ]
Line_13 $$ if (diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.delete()) -->Line_14 $$ LOG.warn("Deleted a metadata file without a block " + diskMetaFile.getAbsolutePath())[ CD ]
Line_32 $$ ReplicaInfo diskBlockInfo = new FinalizedReplica(blockId, diskFile.length(), diskGS, vol, diskFile.getParentFile())-->Line_33 $$ volumeMap.add(bpid, diskBlockInfo)[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)[ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_31 $$ if (memBlockInfo == null) [ FD ]
Line_3 $$ Block corruptBlock = null-->Line_66 $$ corruptBlock = new Block(memBlockInfo)[ FD ]
Line_3 $$ Block corruptBlock = null-->Line_71 $$ if (corruptBlock != null) [ FD ]
Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) -->Line_20 $$ final DataBlockScanner blockScanner = datanode.getBlockScanner()[ CD ]
Line_11 $$ if (diskFile == null || !diskFile.exists()) -->Line_12 $$ if (memBlockInfo == null) [ CD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_68 $$ memBlockInfo.setNumBytes(memFile.length())[ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_12 $$ if (memBlockInfo == null) [ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_54 $$ File memMetaFile = FsDatasetUtil.getMetaFile(diskFile, memBlockInfo.getGenerationStamp())[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_22 $$ blockScanner.deleteBlock(bpid, new Block(blockId))[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_10 $$ final long diskGS = diskMetaFile != null && diskMetaFile.exists() ? Block.getGenerationStamp(diskMetaFile.getName()) : GenerationStamp.GRANDFATHER_GENERATION_STAMP[ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) [ FD ]
Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) -->Line_25 $$ if (diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.delete()) [ CD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_41 $$ File memFile = memBlockInfo.getBlockFile()[ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_61 $$ LOG.warn("Updating generation stamp for block " + blockId + " from " + memBlockInfo.getGenerationStamp() + " to " + gs)[ FD ]
Line_11 $$ if (diskFile == null || !diskFile.exists()) -->Line_29 $$ return[ CD ]
Line_54 $$ File memMetaFile = FsDatasetUtil.getMetaFile(diskFile, memBlockInfo.getGenerationStamp())-->Line_55 $$ if (memMetaFile.exists()) [ FD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_44 $$ LOG.warn("Block file " + memFile.getAbsolutePath() + " does not match file found by scan " + diskFile.getAbsolutePath())[ FD ]
Line_49 $$ memFile = diskFile-->Line_60 $$ long gs = diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.getParent().equals(memFile.getParent()) ? diskGS : GenerationStamp.GRANDFATHER_GENERATION_STAMP[ FD ]
Line_65 $$ if (memBlockInfo.getNumBytes() != memFile.length()) -->Line_66 $$ corruptBlock = new Block(memBlockInfo)[ CD ]
Line_42 $$ if (memFile.exists()) -->Line_50 $$ LOG.warn("Updating generation stamp for block " + blockId + " from " + memBlockInfo.getGenerationStamp() + " to " + diskGS)[ CD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_43 $$ if (memFile.compareTo(diskFile) != 0) [ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_12 $$ if (memBlockInfo == null) [ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_54 $$ File memMetaFile = FsDatasetUtil.getMetaFile(diskFile, memBlockInfo.getGenerationStamp())[ FD ]
Line_31 $$ if (memBlockInfo == null) -->Line_33 $$ volumeMap.add(bpid, diskBlockInfo)[ CD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_3 $$ Block corruptBlock = null[ CD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_53 $$ if (memBlockInfo.getGenerationStamp() != diskGS) [ FD ]
Line_25 $$ if (diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.delete()) -->Line_26 $$ LOG.warn("Deleted a metadata file for the deleted block " + diskMetaFile.getAbsolutePath())[ CD ]
Line_12 $$ if (memBlockInfo == null) -->Line_16 $$ return[ CD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_4 $$ ReplicaInfo memBlockInfo[ CD ]
Line_55 $$ if (memMetaFile.exists()) -->Line_56 $$ if (memMetaFile.compareTo(diskMetaFile) != 0) [ CD ]
Line_66 $$ corruptBlock = new Block(memBlockInfo)-->Line_71 $$ if (corruptBlock != null) [ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_51 $$ memBlockInfo.setGenerationStamp(diskGS)[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_47 $$ LOG.warn("Block file in volumeMap " + memFile.getAbsolutePath() + " does not exist. Updating it to the file found during scan " + diskFile.getAbsolutePath())[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_56 $$ if (memMetaFile.compareTo(diskMetaFile) != 0) [ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_71 $$ if (corruptBlock != null) [ CD ]
Line_53 $$ if (memBlockInfo.getGenerationStamp() != diskGS) -->Line_54 $$ File memMetaFile = FsDatasetUtil.getMetaFile(diskFile, memBlockInfo.getGenerationStamp())[ CD ]
Line_42 $$ if (memFile.exists()) -->Line_47 $$ LOG.warn("Block file in volumeMap " + memFile.getAbsolutePath() + " does not exist. Updating it to the file found during scan " + diskFile.getAbsolutePath())[ CD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_51 $$ memBlockInfo.setGenerationStamp(diskGS)[ FD ]
Line_10 $$ final long diskGS = diskMetaFile != null && diskMetaFile.exists() ? Block.getGenerationStamp(diskMetaFile.getName()) : GenerationStamp.GRANDFATHER_GENERATION_STAMP-->Line_53 $$ if (memBlockInfo.getGenerationStamp() != diskGS) [ FD ]
Line_49 $$ memFile = diskFile-->Line_65 $$ if (memBlockInfo.getNumBytes() != memFile.length()) [ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_7 $$ if (memBlockInfo != null && memBlockInfo.getState() != ReplicaState.FINALIZED) [ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)[ FD ]
Line_31 $$ if (memBlockInfo == null) -->Line_35 $$ if (blockScanner != null) [ CD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_57 $$ LOG.warn("Metadata file in memory " + memMetaFile.getAbsolutePath() + " does not match file found by scan " + (diskMetaFile == null ? null : diskMetaFile.getAbsolutePath()))[ FD ]
Line_42 $$ if (memFile.exists()) -->Line_49 $$ memFile = diskFile[ CD ]
Line_71 $$ if (corruptBlock != null) -->Line_72 $$ LOG.warn("Reporting the block " + corruptBlock + " as corrupt due to length mismatch")[ CD ]
Line_55 $$ if (memMetaFile.exists()) -->Line_61 $$ LOG.warn("Updating generation stamp for block " + blockId + " from " + memBlockInfo.getGenerationStamp() + " to " + gs)[ CD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_44 $$ LOG.warn("Block file " + memFile.getAbsolutePath() + " does not match file found by scan " + diskFile.getAbsolutePath())[ FD ]
Line_7 $$ if (memBlockInfo != null && memBlockInfo.getState() != ReplicaState.FINALIZED) -->Line_8 $$ return[ CD ]
Line_35 $$ if (blockScanner != null) -->Line_36 $$ blockScanner.addBlock(new ExtendedBlock(bpid, diskBlockInfo))[ CD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_62 $$ memBlockInfo.setGenerationStamp(gs)[ FD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_65 $$ if (memBlockInfo.getNumBytes() != memFile.length()) [ FD ]
Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) -->Line_19 $$ volumeMap.remove(bpid, blockId)[ CD ]
Line_10 $$ final long diskGS = diskMetaFile != null && diskMetaFile.exists() ? Block.getGenerationStamp(diskMetaFile.getName()) : GenerationStamp.GRANDFATHER_GENERATION_STAMP-->Line_51 $$ memBlockInfo.setGenerationStamp(diskGS)[ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_50 $$ LOG.warn("Updating generation stamp for block " + blockId + " from " + memBlockInfo.getGenerationStamp() + " to " + diskGS)[ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_53 $$ if (memBlockInfo.getGenerationStamp() != diskGS) [ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_61 $$ LOG.warn("Updating generation stamp for block " + blockId + " from " + memBlockInfo.getGenerationStamp() + " to " + gs)[ FD ]
Line_42 $$ if (memFile.exists()) -->Line_48 $$ memBlockInfo.setDir(diskFile.getParentFile())[ CD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_50 $$ LOG.warn("Updating generation stamp for block " + blockId + " from " + memBlockInfo.getGenerationStamp() + " to " + diskGS)[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_11 $$ if (diskFile == null || !diskFile.exists()) [ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_54 $$ File memMetaFile = FsDatasetUtil.getMetaFile(diskFile, memBlockInfo.getGenerationStamp())[ FD ]
Line_20 $$ final DataBlockScanner blockScanner = datanode.getBlockScanner()-->Line_22 $$ blockScanner.deleteBlock(bpid, new Block(blockId))[ FD ]
Line_53 $$ if (memBlockInfo.getGenerationStamp() != diskGS) -->Line_55 $$ if (memMetaFile.exists()) [ CD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_67 $$ LOG.warn("Updating size of block " + blockId + " from " + memBlockInfo.getNumBytes() + " to " + memFile.length())[ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_31 $$ if (memBlockInfo == null) [ FD ]
Line_65 $$ if (memBlockInfo.getNumBytes() != memFile.length()) -->Line_67 $$ LOG.warn("Updating size of block " + blockId + " from " + memBlockInfo.getNumBytes() + " to " + memFile.length())[ CD ]
Line_55 $$ if (memMetaFile.exists()) -->Line_62 $$ memBlockInfo.setGenerationStamp(gs)[ CD ]
Line_55 $$ if (memMetaFile.exists()) -->Line_60 $$ long gs = diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.getParent().equals(memFile.getParent()) ? diskGS : GenerationStamp.GRANDFATHER_GENERATION_STAMP[ CD ]
Line_49 $$ memFile = diskFile-->Line_67 $$ LOG.warn("Updating size of block " + blockId + " from " + memBlockInfo.getNumBytes() + " to " + memFile.length())[ FD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_68 $$ memBlockInfo.setNumBytes(memFile.length())[ FD ]
Line_56 $$ if (memMetaFile.compareTo(diskMetaFile) != 0) -->Line_57 $$ LOG.warn("Metadata file in memory " + memMetaFile.getAbsolutePath() + " does not match file found by scan " + (diskMetaFile == null ? null : diskMetaFile.getAbsolutePath()))[ CD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_19 $$ volumeMap.remove(bpid, blockId)[ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_7 $$ if (memBlockInfo != null && memBlockInfo.getState() != ReplicaState.FINALIZED) [ FD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_67 $$ LOG.warn("Updating size of block " + blockId + " from " + memBlockInfo.getNumBytes() + " to " + memFile.length())[ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_65 $$ if (memBlockInfo.getNumBytes() != memFile.length()) [ FD ]
Line_43 $$ if (memFile.compareTo(diskFile) != 0) -->Line_44 $$ LOG.warn("Block file " + memFile.getAbsolutePath() + " does not match file found by scan " + diskFile.getAbsolutePath())[ CD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_68 $$ memBlockInfo.setNumBytes(memFile.length())[ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) [ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_48 $$ memBlockInfo.setDir(diskFile.getParentFile())[ FD ]
Line_60 $$ long gs = diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.getParent().equals(memFile.getParent()) ? diskGS : GenerationStamp.GRANDFATHER_GENERATION_STAMP-->Line_62 $$ memBlockInfo.setGenerationStamp(gs)[ FD ]
Line_65 $$ if (memBlockInfo.getNumBytes() != memFile.length()) -->Line_68 $$ memBlockInfo.setNumBytes(memFile.length())[ CD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_47 $$ LOG.warn("Block file in volumeMap " + memFile.getAbsolutePath() + " does not exist. Updating it to the file found during scan " + diskFile.getAbsolutePath())[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_60 $$ long gs = diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.getParent().equals(memFile.getParent()) ? diskGS : GenerationStamp.GRANDFATHER_GENERATION_STAMP[ FD ]
Line_21 $$ if (blockScanner != null) -->Line_22 $$ blockScanner.deleteBlock(bpid, new Block(blockId))[ CD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_65 $$ if (memBlockInfo.getNumBytes() != memFile.length()) [ FD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_60 $$ long gs = diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.getParent().equals(memFile.getParent()) ? diskGS : GenerationStamp.GRANDFATHER_GENERATION_STAMP[ FD ]
Line_54 $$ File memMetaFile = FsDatasetUtil.getMetaFile(diskFile, memBlockInfo.getGenerationStamp())-->Line_57 $$ LOG.warn("Metadata file in memory " + memMetaFile.getAbsolutePath() + " does not match file found by scan " + (diskMetaFile == null ? null : diskMetaFile.getAbsolutePath()))[ FD ]
Line_31 $$ if (memBlockInfo == null) -->Line_38 $$ LOG.warn("Added missing block to memory " + diskBlockInfo)[ CD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_25 $$ if (diskMetaFile != null && diskMetaFile.exists() && diskMetaFile.delete()) [ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_62 $$ memBlockInfo.setGenerationStamp(gs)[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_33 $$ volumeMap.add(bpid, diskBlockInfo)[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_32 $$ ReplicaInfo diskBlockInfo = new FinalizedReplica(blockId, diskFile.length(), diskGS, vol, diskFile.getParentFile())[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_26 $$ LOG.warn("Deleted a metadata file for the deleted block " + diskMetaFile.getAbsolutePath())[ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_41 $$ File memFile = memBlockInfo.getBlockFile()[ FD ]
Line_42 $$ if (memFile.exists()) -->Line_51 $$ memBlockInfo.setGenerationStamp(diskGS)[ CD ]
Line_18 $$ if (!memBlockInfo.getBlockFile().exists()) -->Line_21 $$ if (blockScanner != null) [ CD ]
Line_20 $$ final DataBlockScanner blockScanner = datanode.getBlockScanner()-->Line_36 $$ blockScanner.addBlock(new ExtendedBlock(bpid, diskBlockInfo))[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_14 $$ LOG.warn("Deleted a metadata file without a block " + diskMetaFile.getAbsolutePath())[ FD ]
Line_6 $$ memBlockInfo = volumeMap.get(bpid, blockId)-->Line_48 $$ memBlockInfo.setDir(diskFile.getParentFile())[ FD ]
Line_54 $$ File memMetaFile = FsDatasetUtil.getMetaFile(diskFile, memBlockInfo.getGenerationStamp())-->Line_56 $$ if (memMetaFile.compareTo(diskMetaFile) != 0) [ FD ]
Line_49 $$ memFile = diskFile-->Line_68 $$ memBlockInfo.setNumBytes(memFile.length())[ FD ]
Line_2 $$ public void checkAndUpdate(String bpid, long blockId, File diskFile, File diskMetaFile, FsVolumeSpi vol) -->Line_49 $$ memFile = diskFile[ FD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_49 $$ memFile = diskFile[ FD ]
Line_4 $$ ReplicaInfo memBlockInfo-->Line_48 $$ memBlockInfo.setDir(diskFile.getParentFile())[ FD ]
Line_31 $$ if (memBlockInfo == null) -->Line_34 $$ final DataBlockScanner blockScanner = datanode.getBlockScanner()[ CD ]
Line_41 $$ File memFile = memBlockInfo.getBlockFile()-->Line_42 $$ if (memFile.exists()) [ FD ]
