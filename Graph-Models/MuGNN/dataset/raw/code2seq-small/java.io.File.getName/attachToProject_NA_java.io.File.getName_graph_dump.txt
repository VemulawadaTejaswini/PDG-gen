Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_3 $$ if (!projectDir.exists()) [ CD ]
Line_3 $$ if (!projectDir.exists()) -->Line_9 $$ PlatformProjectOpenProcessor.runDirectoryProjectConfigurators(baseDir, newProject)[ CD ]
Line_20 $$ if (FileUtilRt.extensionEquals(file, "iml")) -->Line_22 $$ if (imlFile != null) [ CD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_30 $$ return rc != Messages.YES[ CD ]
Line_11 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() -->Line_13 $$ Disposer.dispose(newProject)[ CD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_29 $$ int rc = Messages.showYesNoDialog(project, "The project at " + FileUtil.toSystemDependentName(projectDir.getPath()) + " uses a non-standard layout and cannot be attached to this project. Would you like to open it in a new window?", "Open Project", Messages.getQuestionIcon())[ CD ]
Line_3 $$ if (!projectDir.exists()) -->Line_10 $$ newProject.save()[ CD ]
Line_22 $$ if (imlFile != null) -->Line_24 $$ return true[ CD ]
Line_20 $$ if (FileUtilRt.extensionEquals(file, "iml")) -->Line_21 $$ VirtualFile imlFile = LocalFileSystem.getInstance().refreshAndFindFileByIoFile(new File(projectDir, file))[ CD ]
Line_3 $$ if (!projectDir.exists()) -->Line_11 $$ ApplicationManager.getApplication().runWriteAction(new Runnable() [ CD ]
Line_3 $$ if (!projectDir.exists()) -->Line_4 $$ final Project newProject = ((ProjectManagerEx) ProjectManager.getInstance()).newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false)[ CD ]
Line_4 $$ final Project newProject = ((ProjectManagerEx) ProjectManager.getInstance()).newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false)-->Line_10 $$ newProject.save()[ FD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_8 $$ final VirtualFile baseDir = LocalFileSystem.getInstance().refreshAndFindFileByPath(projectDir.getParent())[ FD ]
Line_8 $$ final VirtualFile baseDir = LocalFileSystem.getInstance().refreshAndFindFileByPath(projectDir.getParent())-->Line_9 $$ PlatformProjectOpenProcessor.runDirectoryProjectConfigurators(baseDir, newProject)[ FD ]
Line_22 $$ if (imlFile != null) -->Line_23 $$ attachModule(project, imlFile, callback)[ CD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_23 $$ attachModule(project, imlFile, callback)[ FD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_4 $$ final Project newProject = ((ProjectManagerEx) ProjectManager.getInstance()).newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false)[ FD ]
Line_3 $$ if (!projectDir.exists()) -->Line_8 $$ final VirtualFile baseDir = LocalFileSystem.getInstance().refreshAndFindFileByPath(projectDir.getParent())[ CD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_17 $$ final String[] files = projectDir.list()[ FD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_3 $$ if (!projectDir.exists()) [ FD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_18 $$ if (files != null) [ CD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_17 $$ final String[] files = projectDir.list()[ CD ]
Line_2 $$ public boolean attachToProject(Project project, File projectDir, @Nullable ProjectOpenedCallback callback) -->Line_29 $$ int rc = Messages.showYesNoDialog(project, "The project at " + FileUtil.toSystemDependentName(projectDir.getPath()) + " uses a non-standard layout and cannot be attached to this project. Would you like to open it in a new window?", "Open Project", Messages.getQuestionIcon())[ FD ]
Line_4 $$ final Project newProject = ((ProjectManagerEx) ProjectManager.getInstance()).newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false)-->Line_13 $$ Disposer.dispose(newProject)[ FD ]
Line_4 $$ final Project newProject = ((ProjectManagerEx) ProjectManager.getInstance()).newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false)-->Line_5 $$ if (newProject == null) [ FD ]
Line_4 $$ final Project newProject = ((ProjectManagerEx) ProjectManager.getInstance()).newProject(projectDir.getParentFile().getName(), projectDir.getParent(), true, false)-->Line_9 $$ PlatformProjectOpenProcessor.runDirectoryProjectConfigurators(baseDir, newProject)[ FD ]
Line_5 $$ if (newProject == null) -->Line_6 $$ return false[ CD ]
Line_3 $$ if (!projectDir.exists()) -->Line_5 $$ if (newProject == null) [ CD ]
