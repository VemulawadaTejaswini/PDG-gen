Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_14 $$ if (restart) [ CD ]
Line_23 $$ if (restart) -->Line_26 $$ if (recursive.size() + flat.size() > 0) [ CD ]
Line_24 $$ List<String> recursive = myRecursiveWatchRoots-->Line_27 $$ setWatchRoots(recursive, flat, true)[ FD ]
Line_3 $$ if (myIsShuttingDown) -->Line_4 $$ return[ CD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_23 $$ if (restart) [ CD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_21 $$ myProcessHandler.addProcessListener(new MyProcessAdapter())[ CD ]
Line_10 $$ if (myStartAttemptCount++ > MAX_PROCESS_LAUNCH_ATTEMPT_COUNT) -->Line_12 $$ return[ CD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_3 $$ if (myIsShuttingDown) [ CD ]
Line_14 $$ if (restart) -->Line_15 $$ shutdownProcess()[ CD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_19 $$ Process process = processBuilder.start()[ CD ]
Line_6 $$ if (ShutDownTracker.isShutdownHookRunning()) -->Line_8 $$ return[ CD ]
Line_26 $$ if (recursive.size() + flat.size() > 0) -->Line_27 $$ setWatchRoots(recursive, flat, true)[ CD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_17 $$ LOG.info("Starting file watcher: " + myExecutable)[ CD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_22 $$ myProcessHandler.startNotify()[ CD ]
Line_18 $$ ProcessBuilder processBuilder = new ProcessBuilder(myExecutable.getAbsolutePath())-->Line_19 $$ Process process = processBuilder.start()[ FD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_10 $$ if (myStartAttemptCount++ > MAX_PROCESS_LAUNCH_ATTEMPT_COUNT) [ CD ]
Line_23 $$ if (restart) -->Line_24 $$ List<String> recursive = myRecursiveWatchRoots[ CD ]
Line_10 $$ if (myStartAttemptCount++ > MAX_PROCESS_LAUNCH_ATTEMPT_COUNT) -->Line_11 $$ notifyOnFailure(ApplicationBundle.message("watcher.failed.to.start"), null)[ CD ]
Line_25 $$ List<String> flat = myFlatWatchRoots-->Line_26 $$ if (recursive.size() + flat.size() > 0) [ FD ]
Line_25 $$ List<String> flat = myFlatWatchRoots-->Line_27 $$ setWatchRoots(recursive, flat, true)[ FD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_18 $$ ProcessBuilder processBuilder = new ProcessBuilder(myExecutable.getAbsolutePath())[ CD ]
Line_24 $$ List<String> recursive = myRecursiveWatchRoots-->Line_26 $$ if (recursive.size() + flat.size() > 0) [ FD ]
Line_2 $$ private void startupProcess(boolean restart) throws IOException -->Line_6 $$ if (ShutDownTracker.isShutdownHookRunning()) [ CD ]
Line_23 $$ if (restart) -->Line_25 $$ List<String> flat = myFlatWatchRoots[ CD ]
