Line_2 $$ public void testVersions() throws Throwable -->Line_3 $$ boolean notSkipped = false[ CD ]
Line_4 $$ for (File version : LEGACY_SSTABLE_ROOT.listFiles()) -->Line_9 $$ testVersion(version.getName())[ FD ]
Line_3 $$ boolean notSkipped = false-->Line_8 $$ notSkipped = true[ FD ]
Line_7 $$ if (Version.validate(version.getName()) && SSTableFormat.Type.LEGACY.info.getVersion(version.getName()).isCompatible()) -->Line_8 $$ notSkipped = true[ CD ]
Line_7 $$ if (Version.validate(version.getName()) && SSTableFormat.Type.LEGACY.info.getVersion(version.getName()).isCompatible()) -->Line_9 $$ testVersion(version.getName())[ CD ]
Line_4 $$ for (File version : LEGACY_SSTABLE_ROOT.listFiles()) -->Line_7 $$ if (Version.validate(version.getName()) && SSTableFormat.Type.LEGACY.info.getVersion(version.getName()).isCompatible()) [ FD ]
Line_4 $$ for (File version : LEGACY_SSTABLE_ROOT.listFiles()) -->Line_5 $$ if (!new File(LEGACY_SSTABLE_ROOT + File.separator + version.getName() + File.separator + KSNAME).isDirectory())[ FD ]
