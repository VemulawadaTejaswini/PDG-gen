Line_3 $$ final File file = new File(path)-->Line_4 $$ if (file.isDirectory()) [ FD ]
Line_4 $$ if (file.isDirectory()) -->Line_6 $$ if (nameFile.exists()) [ CD ]
Line_11 $$ if (!StringUtil.isEmpty(name)) -->Line_12 $$ return name.trim()[ CD ]
Line_5 $$ final File nameFile = new File(new File(path, Project.DIRECTORY_STORE_FOLDER), ProjectImpl.NAME_FILE)-->Line_6 $$ if (nameFile.exists()) [ FD ]
Line_10 $$ String name = in.readLine()-->Line_12 $$ return name.trim()[ FD ]
Line_10 $$ String name = in.readLine()-->Line_11 $$ if (!StringUtil.isEmpty(name)) [ FD ]
Line_4 $$ if (file.isDirectory()) -->Line_20 $$ return file.getName()[ CD ]
Line_4 $$ if (file.isDirectory()) -->Line_22 $$ return FileUtilRt.getNameWithoutExtension(file.getName())[ CD ]
Line_8 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(nameFile), CharsetToolkit.UTF8_CHARSET))-->Line_15 $$ in.close()[ FD ]
Line_4 $$ if (file.isDirectory()) -->Line_5 $$ final File nameFile = new File(new File(path, Project.DIRECTORY_STORE_FOLDER), ProjectImpl.NAME_FILE)[ CD ]
Line_8 $$ final BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(nameFile), CharsetToolkit.UTF8_CHARSET))-->Line_10 $$ String name = in.readLine()[ FD ]
Line_2 $$ private static String readProjectName(@NotNull String path) -->Line_3 $$ final File file = new File(path)[ CD ]
Line_3 $$ final File file = new File(path)-->Line_22 $$ return FileUtilRt.getNameWithoutExtension(file.getName())[ FD ]
Line_2 $$ private static String readProjectName(@NotNull String path) -->Line_4 $$ if (file.isDirectory()) [ CD ]
Line_3 $$ final File file = new File(path)-->Line_20 $$ return file.getName()[ FD ]
