Line_11 $$ if (mergedLines == curLines) -->Line_20 $$ outFile.delete()[ CD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_5 $$ if (idx > -1) [ CD ]
Line_4 $$ File target = outFile-->Line_12 $$ if (target.exists() && !target.delete()) [ FD ]
Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))-->Line_12 $$ if (target.exists() && !target.delete()) [ FD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_7 $$ String[] curLines = loadFile(outFile)[ FD ]
Line_8 $$ String[] prevLines = loadFile(target)-->Line_9 $$ String[] mergedLines = mergeLines(curLines, prevLines)[ FD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_29 $$ outFile.delete()[ FD ]
Line_7 $$ String[] curLines = loadFile(outFile)-->Line_9 $$ String[] mergedLines = mergeLines(curLines, prevLines)[ FD ]
Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))-->Line_16 $$ outFile.renameTo(target)[ FD ]
Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))-->Line_24 $$ writeFile(target, mergedLines)[ FD ]
Line_12 $$ if (target.exists() && !target.delete()) -->Line_13 $$ Util.logerr("file replace failed: " + target)[ CD ]
Line_9 $$ String[] mergedLines = mergeLines(curLines, prevLines)-->Line_24 $$ writeFile(target, mergedLines)[ FD ]
Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))-->Line_21 $$ if (target.exists() && !target.delete()) [ FD ]
Line_5 $$ if (idx > -1) -->Line_8 $$ String[] prevLines = loadFile(target)[ CD ]
Line_4 $$ File target = outFile-->Line_8 $$ String[] prevLines = loadFile(target)[ FD ]
Line_12 $$ if (target.exists() && !target.delete()) -->Line_14 $$ outFile.delete()[ CD ]
Line_5 $$ if (idx > -1) -->Line_10 $$ if (mergedLines != prevLines) [ CD ]
Line_12 $$ if (target.exists() && !target.delete()) -->Line_16 $$ outFile.renameTo(target)[ CD ]
Line_21 $$ if (target.exists() && !target.delete()) -->Line_22 $$ Util.logerr("file replace failed: " + target)[ CD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))[ FD ]
Line_21 $$ if (target.exists() && !target.delete()) -->Line_24 $$ writeFile(target, mergedLines)[ CD ]
Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))-->Line_8 $$ String[] prevLines = loadFile(target)[ FD ]
Line_4 $$ File target = outFile-->Line_21 $$ if (target.exists() && !target.delete()) [ FD ]
Line_7 $$ String[] curLines = loadFile(outFile)-->Line_11 $$ if (mergedLines == curLines) [ FD ]
Line_3 $$ int idx = outFile.getName().indexOf(".tmp.")-->Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))[ FD ]
Line_5 $$ if (idx > -1) -->Line_9 $$ String[] mergedLines = mergeLines(curLines, prevLines)[ CD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_3 $$ int idx = outFile.getName().indexOf(".tmp.")[ FD ]
Line_12 $$ if (target.exists() && !target.delete()) -->Line_17 $$ Util.logwarn("file replaced: " + target)[ CD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_16 $$ outFile.renameTo(target)[ FD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_14 $$ outFile.delete()[ FD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_4 $$ File target = outFile[ CD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_20 $$ outFile.delete()[ FD ]
Line_9 $$ String[] mergedLines = mergeLines(curLines, prevLines)-->Line_11 $$ if (mergedLines == curLines) [ FD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_32 $$ return target[ CD ]
Line_9 $$ String[] mergedLines = mergeLines(curLines, prevLines)-->Line_10 $$ if (mergedLines != prevLines) [ FD ]
Line_8 $$ String[] prevLines = loadFile(target)-->Line_10 $$ if (mergedLines != prevLines) [ FD ]
Line_4 $$ File target = outFile-->Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))[ FD ]
Line_4 $$ File target = outFile-->Line_24 $$ writeFile(target, mergedLines)[ FD ]
Line_5 $$ if (idx > -1) -->Line_7 $$ String[] curLines = loadFile(outFile)[ CD ]
Line_4 $$ File target = outFile-->Line_16 $$ outFile.renameTo(target)[ FD ]
Line_5 $$ if (idx > -1) -->Line_6 $$ target = new File(outFile.getParentFile(), outFile.getName().substring(0, idx))[ CD ]
Line_10 $$ if (mergedLines != prevLines) -->Line_11 $$ if (mergedLines == curLines) [ CD ]
Line_11 $$ if (mergedLines == curLines) -->Line_12 $$ if (target.exists() && !target.delete()) [ CD ]
Line_21 $$ if (target.exists() && !target.delete()) -->Line_25 $$ Util.logwarn("file merged: " + target)[ CD ]
Line_10 $$ if (mergedLines != prevLines) -->Line_29 $$ outFile.delete()[ CD ]
Line_11 $$ if (mergedLines == curLines) -->Line_21 $$ if (target.exists() && !target.delete()) [ CD ]
Line_2 $$ public File releaseOutputFile(File outFile) -->Line_3 $$ int idx = outFile.getName().indexOf(".tmp.")[ CD ]
Line_3 $$ int idx = outFile.getName().indexOf(".tmp.")-->Line_5 $$ if (idx > -1) [ FD ]
