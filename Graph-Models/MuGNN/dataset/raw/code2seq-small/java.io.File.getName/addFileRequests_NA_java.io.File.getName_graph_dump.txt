Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_4 $$ final String relativePath = directoryObject.toUnixPath()[ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_3 $$ final DirectoryObject directoryObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getDirectoryObject(directory)[ CD ]
Line_6 $$ if (!relativePath.equals(".")) -->Line_7 $$ repository += '/' + relativePath[ CD ]
Line_16 $$ if (file.isDirectory()) -->Line_21 $$ subdirectories.add(file)[ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_30 $$ requests.addKoptRequest(keywordSubstMode)[ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_6 $$ if (!relativePath.equals(".")) [ CD ]
Line_23 $$ final FileObject fileObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getFileObject(file)-->Line_28 $$ final boolean writable = clientEnvironment.getLocalFileReader().isWritable(fileObject, clientEnvironment.getCvsFileSystem())[ FD ]
Line_23 $$ final FileObject fileObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getFileObject(file)-->Line_32 $$ requests.addModifiedRequest(fileObject, keywordSubstMode == KeywordSubstitution.BINARY, writable)[ FD ]
Line_14 $$ final List<File> subdirectories = new ArrayList()-->Line_21 $$ subdirectories.add(file)[ FD ]
Line_27 $$ final KeywordSubstitution keywordSubstMode = getKeywordSubstMode(file.getName())-->Line_29 $$ if (keywordSubstMode != null) [ FD ]
Line_15 $$ for (final File file : files) -->Line_27 $$ final KeywordSubstitution keywordSubstMode = getKeywordSubstMode(file.getName())[ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_32 $$ requests.addModifiedRequest(fileObject, keywordSubstMode == KeywordSubstitution.BINARY, writable)[ FD ]
Line_16 $$ if (file.isDirectory()) -->Line_23 $$ final FileObject fileObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getFileObject(file)[ CD ]
Line_5 $$ String repository = getRepositoryRoot(clientEnvironment)-->Line_7 $$ repository += '/' + relativePath[ FD ]
Line_27 $$ final KeywordSubstitution keywordSubstMode = getKeywordSubstMode(file.getName())-->Line_30 $$ requests.addKoptRequest(keywordSubstMode)[ FD ]
Line_35 $$ for (final File subdirectory : subdirectories) -->Line_36 $$ addFileRequests(subdirectory, requests, requestProcessor, clientEnvironment)[ FD ]
Line_11 $$ if (files == null) -->Line_12 $$ return[ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_10 $$ final File[] files = directory.listFiles()[ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_28 $$ final boolean writable = clientEnvironment.getLocalFileReader().isWritable(fileObject, clientEnvironment.getCvsFileSystem())[ FD ]
Line_16 $$ if (file.isDirectory()) -->Line_32 $$ requests.addModifiedRequest(fileObject, keywordSubstMode == KeywordSubstitution.BINARY, writable)[ CD ]
Line_29 $$ if (keywordSubstMode != null) -->Line_30 $$ requests.addKoptRequest(keywordSubstMode)[ CD ]
Line_16 $$ if (file.isDirectory()) -->Line_29 $$ if (keywordSubstMode != null) [ CD ]
Line_16 $$ if (file.isDirectory()) -->Line_17 $$ final DirectoryObject subDirObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getDirectoryObject(file)[ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_10 $$ final File[] files = directory.listFiles()[ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_36 $$ addFileRequests(subdirectory, requests, requestProcessor, clientEnvironment)[ FD ]
Line_28 $$ final boolean writable = clientEnvironment.getLocalFileReader().isWritable(fileObject, clientEnvironment.getCvsFileSystem())-->Line_32 $$ requests.addModifiedRequest(fileObject, keywordSubstMode == KeywordSubstitution.BINARY, writable)[ FD ]
Line_15 $$ for (final File file : files) -->Line_21 $$ subdirectories.add(file)[ FD ]
Line_15 $$ for (final File file : files) -->Line_17 $$ final DirectoryObject subDirObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getDirectoryObject(file)[ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_24 $$ if (clientEnvironment.getIgnoreFileFilter().shouldBeIgnored(fileObject, clientEnvironment.getCvsFileSystem())) [ FD ]
Line_16 $$ if (file.isDirectory()) -->Line_18 $$ if (clientEnvironment.getIgnoreFileFilter().shouldBeIgnored(subDirObject, clientEnvironment.getCvsFileSystem())) [ CD ]
Line_16 $$ if (file.isDirectory()) -->Line_27 $$ final KeywordSubstitution keywordSubstMode = getKeywordSubstMode(file.getName())[ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_14 $$ final List<File> subdirectories = new ArrayList()[ CD ]
Line_16 $$ if (file.isDirectory()) -->Line_24 $$ if (clientEnvironment.getIgnoreFileFilter().shouldBeIgnored(fileObject, clientEnvironment.getCvsFileSystem())) [ CD ]
Line_4 $$ final String relativePath = directoryObject.toUnixPath()-->Line_6 $$ if (!relativePath.equals(".")) [ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_9 $$ requests.addRequest(new DirectoryRequest(relativePath, repository))[ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_11 $$ if (files == null) [ CD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_23 $$ final FileObject fileObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getFileObject(file)[ FD ]
Line_15 $$ for (final File file : files) -->Line_23 $$ final FileObject fileObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getFileObject(file)[ FD ]
Line_10 $$ final File[] files = directory.listFiles()-->Line_11 $$ if (files == null) [ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_9 $$ requests.addRequest(new DirectoryRequest(relativePath, repository))[ FD ]
Line_15 $$ for (final File file : files) -->Line_16 $$ if (file.isDirectory()) [ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_17 $$ final DirectoryObject subDirObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getDirectoryObject(file)[ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_18 $$ if (clientEnvironment.getIgnoreFileFilter().shouldBeIgnored(subDirObject, clientEnvironment.getCvsFileSystem())) [ FD ]
Line_3 $$ final DirectoryObject directoryObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getDirectoryObject(directory)-->Line_4 $$ final String relativePath = directoryObject.toUnixPath()[ FD ]
Line_23 $$ final FileObject fileObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getFileObject(file)-->Line_24 $$ if (clientEnvironment.getIgnoreFileFilter().shouldBeIgnored(fileObject, clientEnvironment.getCvsFileSystem())) [ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_3 $$ final DirectoryObject directoryObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getDirectoryObject(directory)[ FD ]
Line_16 $$ if (file.isDirectory()) -->Line_28 $$ final boolean writable = clientEnvironment.getLocalFileReader().isWritable(fileObject, clientEnvironment.getCvsFileSystem())[ CD ]
Line_17 $$ final DirectoryObject subDirObject = clientEnvironment.getCvsFileSystem().getLocalFileSystem().getDirectoryObject(file)-->Line_18 $$ if (clientEnvironment.getIgnoreFileFilter().shouldBeIgnored(subDirObject, clientEnvironment.getCvsFileSystem())) [ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_5 $$ String repository = getRepositoryRoot(clientEnvironment)[ FD ]
Line_4 $$ final String relativePath = directoryObject.toUnixPath()-->Line_7 $$ repository += '/' + relativePath[ FD ]
Line_2 $$ private void addFileRequests(File directory, Requests requests, IRequestProcessor requestProcessor, IClientEnvironment clientEnvironment) throws IOException -->Line_5 $$ String repository = getRepositoryRoot(clientEnvironment)[ CD ]
