Line_4 $$ final File file = new File(VfsUtilCore.urlToPath(url))-->Line_21 $$ throw new IOException(IdeBundle.message("error.message.unable.to.create.file", file.getPath()))[ FD ]
Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)-->Line_25 $$ childData = existingFile[ FD ]
Line_3 $$ final LocalFileSystem fileSystem = LocalFileSystem.getInstance()-->Line_20 $$ if (!FileUtil.createParentDirs(file) || (virtualFile = fileSystem.refreshAndFindFileByIoFile(file.getParentFile())) == null) [ FD ]
Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)-->Line_8 $$ if (!existingFile.isValid()) [ FD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_16 $$ String text = getText(templateName, project)[ FD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)[ CD ]
Line_3 $$ final LocalFileSystem fileSystem = LocalFileSystem.getInstance()-->Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)[ FD ]
Line_17 $$ final VirtualFile childData-->Line_25 $$ childData = existingFile[ FD ]
Line_6 $$ if (existingFile != null) -->Line_8 $$ if (!existingFile.isValid()) [ CD ]
Line_4 $$ final File file = new File(VfsUtilCore.urlToPath(url))-->Line_20 $$ if (!FileUtil.createParentDirs(file) || (virtualFile = fileSystem.refreshAndFindFileByIoFile(file.getParentFile())) == null) [ FD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_4 $$ final File file = new File(VfsUtilCore.urlToPath(url))[ CD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_12 $$ if (existingFile != null && !forceNew) [ CD ]
Line_8 $$ if (!existingFile.isValid()) -->Line_9 $$ existingFile = null[ CD ]
Line_16 $$ String text = getText(templateName, project)-->Line_27 $$ VfsUtil.saveText(childData, text)[ FD ]
Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)-->Line_6 $$ if (existingFile != null) [ FD ]
Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)-->Line_7 $$ existingFile.refresh(false, false)[ FD ]
Line_18 $$ if (existingFile == null || existingFile.isDirectory()) -->Line_19 $$ final VirtualFile virtualFile[ CD ]
Line_9 $$ existingFile = null-->Line_25 $$ childData = existingFile[ FD ]
Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)-->Line_9 $$ existingFile = null[ FD ]
Line_23 $$ childData = virtualFile.createChildData(this, file.getName())-->Line_27 $$ VfsUtil.saveText(childData, text)[ FD ]
Line_6 $$ if (existingFile != null) -->Line_7 $$ existingFile.refresh(false, false)[ CD ]
Line_4 $$ final File file = new File(VfsUtilCore.urlToPath(url))-->Line_23 $$ childData = virtualFile.createChildData(this, file.getName())[ FD ]
Line_4 $$ final File file = new File(VfsUtilCore.urlToPath(url))-->Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)[ FD ]
Line_5 $$ VirtualFile existingFile = fileSystem.refreshAndFindFileByIoFile(file)-->Line_18 $$ if (existingFile == null || existingFile.isDirectory()) [ FD ]
Line_17 $$ final VirtualFile childData-->Line_23 $$ childData = virtualFile.createChildData(this, file.getName())[ FD ]
Line_20 $$ if (!FileUtil.createParentDirs(file) || (virtualFile = fileSystem.refreshAndFindFileByIoFile(file.getParentFile())) == null) -->Line_23 $$ childData = virtualFile.createChildData(this, file.getName())[ FD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_37 $$ return null[ CD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_6 $$ if (existingFile != null) [ CD ]
Line_31 $$ ApplicationManager.getApplication().invokeLater(new Runnable() -->Line_33 $$ Messages.showErrorDialog(IdeBundle.message("message.text.error.creating.deployment.descriptor", e.getLocalizedMessage()), IdeBundle.message("message.text.creating.deployment.descriptor"))[ CD ]
Line_18 $$ if (existingFile == null || existingFile.isDirectory()) -->Line_23 $$ childData = virtualFile.createChildData(this, file.getName())[ CD ]
Line_25 $$ childData = existingFile-->Line_27 $$ VfsUtil.saveText(childData, text)[ FD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_3 $$ final LocalFileSystem fileSystem = LocalFileSystem.getInstance()[ CD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_12 $$ if (existingFile != null && !forceNew) [ FD ]
Line_18 $$ if (existingFile == null || existingFile.isDirectory()) -->Line_20 $$ if (!FileUtil.createParentDirs(file) || (virtualFile = fileSystem.refreshAndFindFileByIoFile(file.getParentFile())) == null) [ CD ]
Line_23 $$ childData = virtualFile.createChildData(this, file.getName())-->Line_25 $$ childData = existingFile[ FD ]
Line_17 $$ final VirtualFile childData-->Line_27 $$ VfsUtil.saveText(childData, text)[ FD ]
Line_12 $$ if (existingFile != null && !forceNew) -->Line_13 $$ return existingFile[ CD ]
Line_2 $$ private VirtualFile createFileFromTemplate(@Nullable final Project project, String url, final String templateName, final boolean forceNew) -->Line_4 $$ final File file = new File(VfsUtilCore.urlToPath(url))[ FD ]
Line_9 $$ existingFile = null-->Line_18 $$ if (existingFile == null || existingFile.isDirectory()) [ FD ]
Line_18 $$ if (existingFile == null || existingFile.isDirectory()) -->Line_25 $$ childData = existingFile[ CD ]
Line_19 $$ final VirtualFile virtualFile-->Line_23 $$ childData = virtualFile.createChildData(this, file.getName())[ FD ]
Line_19 $$ final VirtualFile virtualFile-->Line_20 $$ if (!FileUtil.createParentDirs(file) || (virtualFile = fileSystem.refreshAndFindFileByIoFile(file.getParentFile())) == null) [ FD ]
