Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_4 $$ throw new IllegalArgumentException(file.toString())[ FD ]
Line_5 $$ if (fileType == null)-->Line_6 $$ fileType = FileTypeManager.getInstance().getFileTypeByFileName(file.getName())[ CD ]
Line_6 $$ fileType = FileTypeManager.getInstance().getFileTypeByFileName(file.getName())-->Line_12 $$ return fromBytes(bytes, charset, fileType)[ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_7 $$ BufferedInputStream stream = new BufferedInputStream(new FileInputStream(file))[ CD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_3 $$ if (file.isDirectory())[ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_9 $$ byte[] bytes = new byte[(int) file.length()][ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_12 $$ return fromBytes(bytes, charset, fileType)[ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_11 $$ LOG.assertTrue(file.length() == bytesRead)[ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_5 $$ if (fileType == null)[ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_5 $$ if (fileType == null)[ CD ]
Line_9 $$ byte[] bytes = new byte[(int) file.length()]-->Line_10 $$ int bytesRead = stream.read(bytes, 0, bytes.length)[ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_3 $$ if (file.isDirectory())[ CD ]
Line_7 $$ BufferedInputStream stream = new BufferedInputStream(new FileInputStream(file))-->Line_14 $$ stream.close()[ FD ]
Line_7 $$ BufferedInputStream stream = new BufferedInputStream(new FileInputStream(file))-->Line_10 $$ int bytesRead = stream.read(bytes, 0, bytes.length)[ FD ]
Line_2 $$ public static DiffContent fromIoFile(File file, String charset, FileType fileType) throws IOException -->Line_6 $$ fileType = FileTypeManager.getInstance().getFileTypeByFileName(file.getName())[ FD ]
Line_9 $$ byte[] bytes = new byte[(int) file.length()]-->Line_12 $$ return fromBytes(bytes, charset, fileType)[ FD ]
