Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_3 $$ String className = CommandTestHelper.class.getName()[ CD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_7 $$ commandLine.setExePath(System.getProperty("java.home") + (SystemInfo.isWindows ? "\\bin\\java.exe" : "/bin/java"))[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_26 $$ File out = FileUtil.createTempFile("test.", ".out")[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_15 $$ if (copyTo == null) [ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_28 $$ commandLine.addParameters(args)[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_10 $$ commandLine.addParameter("-D" + "file.encoding=" + encoding)[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_29 $$ commandLine.setRedirectErrorStream(true)[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_27 $$ commandLine.addParameters(mode, CommandTestHelper.OUT, out.getPath())[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_12 $$ commandLine.addParameter("-cp")[ CD ]
Line_15 $$ if (copyTo == null) -->Line_18 $$ commandLine.addParameter(dir.getPath())[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_7 $$ commandLine.setExePath(System.getProperty("java.home") + (SystemInfo.isWindows ? "\\bin\\java.exe" : "/bin/java"))[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_4 $$ URL url = GeneralCommandLine.class.getClassLoader().getResource(className.replace(".", "/") + ".class")[ CD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_25 $$ commandLine.addParameter(className)[ FD ]
Line_17 $$ dir = dir.getParentFile()-->Line_18 $$ commandLine.addParameter(dir.getPath())[ FD ]
Line_17 $$ dir = dir.getParentFile()-->Line_21 $$ dir = new File(dir, packages[i])[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_28 $$ commandLine.addParameters(args)[ FD ]
Line_4 $$ URL url = GeneralCommandLine.class.getClassLoader().getResource(className.replace(".", "/") + ".class")-->Line_14 $$ File classFile = new File(url.toURI())[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_5 $$ assertNotNull(url)[ CD ]
Line_15 $$ if (copyTo == null) -->Line_23 $$ commandLine.addParameter(copyTo.getPath())[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_23 $$ commandLine.addParameter(copyTo.getPath())[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_30 $$ return pair(commandLine, out)[ FD ]
Line_16 $$ File dir = classFile-->Line_21 $$ dir = new File(dir, packages[i])[ FD ]
Line_3 $$ String className = CommandTestHelper.class.getName()-->Line_25 $$ commandLine.addParameter(className)[ FD ]
Line_26 $$ File out = FileUtil.createTempFile("test.", ".out")-->Line_30 $$ return pair(commandLine, out)[ FD ]
Line_8 $$ String encoding = System.getProperty("file.encoding")-->Line_9 $$ if (encoding != null) [ FD ]
Line_4 $$ URL url = GeneralCommandLine.class.getClassLoader().getResource(className.replace(".", "/") + ".class")-->Line_5 $$ assertNotNull(url)[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_18 $$ commandLine.addParameter(dir.getPath())[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()[ CD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_23 $$ commandLine.addParameter(copyTo.getPath())[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_28 $$ commandLine.addParameters(args)[ CD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_12 $$ commandLine.addParameter("-cp")[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_9 $$ if (encoding != null) [ CD ]
Line_3 $$ String className = CommandTestHelper.class.getName()-->Line_13 $$ String[] packages = className.split("\\.")[ FD ]
Line_15 $$ if (copyTo == null) -->Line_21 $$ for (int i = 0; i < packages.length - 1; i++) dir = new File(dir, packages[i])[ CD ]
Line_15 $$ if (copyTo == null) -->Line_16 $$ File dir = classFile[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_27 $$ commandLine.addParameters(mode, CommandTestHelper.OUT, out.getPath())[ FD ]
Line_3 $$ String className = CommandTestHelper.class.getName()-->Line_4 $$ URL url = GeneralCommandLine.class.getClassLoader().getResource(className.replace(".", "/") + ".class")[ FD ]
Line_16 $$ File dir = classFile-->Line_17 $$ dir = dir.getParentFile()[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_8 $$ String encoding = System.getProperty("file.encoding")[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_13 $$ String[] packages = className.split("\\.")[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_14 $$ File classFile = new File(url.toURI())[ CD ]
Line_9 $$ if (encoding != null) -->Line_10 $$ commandLine.addParameter("-D" + "file.encoding=" + encoding)[ CD ]
Line_26 $$ File out = FileUtil.createTempFile("test.", ".out")-->Line_27 $$ commandLine.addParameters(mode, CommandTestHelper.OUT, out.getPath())[ FD ]
Line_14 $$ File classFile = new File(url.toURI())-->Line_22 $$ FileUtil.copy(classFile, new File(dir, classFile.getName()))[ FD ]
Line_16 $$ File dir = classFile-->Line_18 $$ commandLine.addParameter(dir.getPath())[ FD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_27 $$ commandLine.addParameters(mode, CommandTestHelper.OUT, out.getPath())[ FD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_15 $$ if (copyTo == null) [ FD ]
Line_15 $$ if (copyTo == null) -->Line_22 $$ FileUtil.copy(classFile, new File(dir, classFile.getName()))[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_25 $$ commandLine.addParameter(className)[ CD ]
Line_2 $$ private static Pair<GeneralCommandLine, File> makeHelperCommand(@Nullable File copyTo, @MagicConstant(stringValues = -->Line_30 $$ return pair(commandLine, out)[ CD ]
Line_6 $$ GeneralCommandLine commandLine = new GeneralCommandLine()-->Line_29 $$ commandLine.setRedirectErrorStream(true)[ FD ]
