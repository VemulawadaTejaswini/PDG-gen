Line_9 $$ File parentFile = realFile.getParentFile()-->Line_14 $$ return parentFile.getPath()[ FD ]
Line_8 $$ if (realFile.exists()) -->Line_10 $$ if (parentFile != null) [ CD ]
Line_3 $$ for (VirtualFile file : classRoots) -->Line_4 $$ final String name = file.getName()[ FD ]
Line_2 $$ private static String getGroovySdkHome(VirtualFile[] classRoots) -->Line_19 $$ return null[ CD ]
Line_7 $$ File realFile = new File(jarPath)-->Line_8 $$ if (realFile.exists()) [ FD ]
Line_8 $$ if (realFile.exists()) -->Line_9 $$ File parentFile = realFile.getParentFile()[ CD ]
Line_9 $$ File parentFile = realFile.getParentFile()-->Line_10 $$ if (parentFile != null) [ FD ]
Line_5 $$ if (GroovyConfigUtils.GROOVY_JAR_PATTERN.matcher(name).matches()) -->Line_7 $$ File realFile = new File(jarPath)[ CD ]
Line_9 $$ File parentFile = realFile.getParentFile()-->Line_11 $$ if ("lib".equals(parentFile.getName())) [ FD ]
Line_3 $$ for (VirtualFile file : classRoots) -->Line_6 $$ String jarPath = file.getPresentableUrl()[ FD ]
Line_5 $$ if (GroovyConfigUtils.GROOVY_JAR_PATTERN.matcher(name).matches()) -->Line_6 $$ String jarPath = file.getPresentableUrl()[ CD ]
Line_5 $$ if (GroovyConfigUtils.GROOVY_JAR_PATTERN.matcher(name).matches()) -->Line_8 $$ if (realFile.exists()) [ CD ]
Line_10 $$ if (parentFile != null) -->Line_11 $$ if ("lib".equals(parentFile.getName())) [ CD ]
Line_11 $$ if ("lib".equals(parentFile.getName())) -->Line_12 $$ return parentFile.getParent()[ CD ]
Line_9 $$ File parentFile = realFile.getParentFile()-->Line_12 $$ return parentFile.getParent()[ FD ]
Line_10 $$ if (parentFile != null) -->Line_14 $$ return parentFile.getPath()[ CD ]
Line_7 $$ File realFile = new File(jarPath)-->Line_9 $$ File parentFile = realFile.getParentFile()[ FD ]
Line_4 $$ final String name = file.getName()-->Line_5 $$ if (GroovyConfigUtils.GROOVY_JAR_PATTERN.matcher(name).matches()) [ FD ]
