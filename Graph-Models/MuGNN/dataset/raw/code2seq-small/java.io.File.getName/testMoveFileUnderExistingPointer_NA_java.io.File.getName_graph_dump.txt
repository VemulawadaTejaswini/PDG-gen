Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_3 $$ File tempDirectory = createTempDirectory()[ CD ]
Line_14 $$ final VirtualFile target = getVirtualFile(moveTarget)-->Line_15 $$ assertTrue(target.isValid())[ FD ]
Line_4 $$ final File moveTarget = new File(tempDirectory, "moveTarget")-->Line_5 $$ moveTarget.mkdir()[ FD ]
Line_12 $$ final VirtualFile virtualFile = getVirtualFile(fileToMove)-->Line_17 $$ virtualFile.move(null, target)[ FD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_9 $$ final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), listener)[ CD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_23 $$ assertEquals("[before:false, after:true]", listener.getLog().toString())[ CD ]
Line_14 $$ final VirtualFile target = getVirtualFile(moveTarget)-->Line_17 $$ virtualFile.move(null, target)[ FD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_4 $$ final File moveTarget = new File(tempDirectory, "moveTarget")[ CD ]
Line_6 $$ final File fileToMove = new File(tempDirectory, "toMove.txt")-->Line_7 $$ fileToMove.createNewFile()[ FD ]
Line_8 $$ final LoggingListener listener = new LoggingListener()-->Line_23 $$ assertEquals("[before:false, after:true]", listener.getLog().toString())[ FD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_5 $$ moveTarget.mkdir()[ CD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_22 $$ assertTrue(fileToMoveTargetPointer.isValid())[ CD ]
Line_9 $$ final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), listener)-->Line_10 $$ assertFalse(fileToMoveTargetPointer.isValid())[ FD ]
Line_6 $$ final File fileToMove = new File(tempDirectory, "toMove.txt")-->Line_9 $$ final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), listener)[ FD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_6 $$ final File fileToMove = new File(tempDirectory, "toMove.txt")[ CD ]
Line_9 $$ final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), listener)-->Line_22 $$ assertTrue(fileToMoveTargetPointer.isValid())[ FD ]
Line_12 $$ final VirtualFile virtualFile = getVirtualFile(fileToMove)-->Line_13 $$ assertTrue(virtualFile.isValid())[ FD ]
Line_4 $$ final File moveTarget = new File(tempDirectory, "moveTarget")-->Line_14 $$ final VirtualFile target = getVirtualFile(moveTarget)[ FD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_10 $$ assertFalse(fileToMoveTargetPointer.isValid())[ CD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_7 $$ fileToMove.createNewFile()[ CD ]
Line_6 $$ final File fileToMove = new File(tempDirectory, "toMove.txt")-->Line_12 $$ final VirtualFile virtualFile = getVirtualFile(fileToMove)[ FD ]
Line_8 $$ final LoggingListener listener = new LoggingListener()-->Line_9 $$ final VirtualFilePointer fileToMoveTargetPointer = createPointerByFile(new File(moveTarget, fileToMove.getName()), listener)[ FD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_8 $$ final LoggingListener listener = new LoggingListener()[ CD ]
Line_2 $$ public void testMoveFileUnderExistingPointer() throws Exception -->Line_11 $$ ApplicationManager.getApplication().runWriteAction(() -> [ CD ]
