Line_2 $$ private boolean isAcceptable(Path file) -->Line_3 $$ String fileName = file.toFile().getName()[ CD ]
Line_3 $$ String fileName = file.toFile().getName()-->Line_4 $$ Pair<Descriptor, Component> pair = SSTable.tryComponentFromFilename(file.getParent().toFile(), fileName)[ FD ]
Line_2 $$ private boolean isAcceptable(Path file) -->Line_4 $$ Pair<Descriptor, Component> pair = SSTable.tryComponentFromFilename(file.getParent().toFile(), fileName)[ FD ]
Line_2 $$ private boolean isAcceptable(Path file) -->Line_3 $$ String fileName = file.toFile().getName()[ FD ]
Line_2 $$ private boolean isAcceptable(Path file) -->Line_4 $$ Pair<Descriptor, Component> pair = SSTable.tryComponentFromFilename(file.getParent().toFile(), fileName)[ CD ]
Line_2 $$ private boolean isAcceptable(Path file) -->Line_5 $$ return pair != null && pair.left.ksname.equals(metadata.ksName) && pair.left.cfname.equals(metadata.cfName) && !visited.contains(fileName) && !alive.contains(fileName)[ CD ]
Line_3 $$ String fileName = file.toFile().getName()-->Line_5 $$ return pair != null && pair.left.ksname.equals(metadata.ksName) && pair.left.cfname.equals(metadata.cfName) && !visited.contains(fileName) && !alive.contains(fileName)[ FD ]
