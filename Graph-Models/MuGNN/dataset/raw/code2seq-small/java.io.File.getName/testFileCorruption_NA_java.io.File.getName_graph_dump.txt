Line_3 $$ MiniDFSCluster cluster = null-->Line_10 $$ File storageDir = cluster.getInstanceStorageDir(2, 0)[ FD ]
Line_2 $$ public void testFileCorruption() throws Exception -->Line_3 $$ MiniDFSCluster cluster = null[ CD ]
Line_4 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("TestFileCorruption").setNumFiles(20).build()-->Line_23 $$ assertTrue("Corrupted replicas not handled properly.", util.checkFiles(fs, "/srcdat"))[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_27 $$ cluster.shutdown()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_26 $$ if (cluster != null) [ FD ]
Line_10 $$ File storageDir = cluster.getInstanceStorageDir(2, 0)-->Line_12 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ FD ]
Line_2 $$ public void testFileCorruption() throws Exception -->Line_4 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("TestFileCorruption").setNumFiles(20).build()[ CD ]
Line_4 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("TestFileCorruption").setNumFiles(20).build()-->Line_24 $$ util.cleanup(fs, "/srcdat")[ FD ]
Line_8 $$ FileSystem fs = cluster.getFileSystem()-->Line_23 $$ assertTrue("Corrupted replicas not handled properly.", util.checkFiles(fs, "/srcdat"))[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_8 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_12 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_14 $$ File[] blocks = data_dir.listFiles()[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_27 $$ cluster.shutdown()[ FD ]
Line_16 $$ for (int idx = 0; idx < blocks.length; idx++) -->Line_17 $$ if (!blocks[idx].getName().startsWith("blk_")) [ CD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_11 $$ String bpid = cluster.getNamesystem().getBlockPoolId()[ FD ]
Line_8 $$ FileSystem fs = cluster.getFileSystem()-->Line_24 $$ util.cleanup(fs, "/srcdat")[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_26 $$ if (cluster != null) [ FD ]
Line_26 $$ if (cluster != null) -->Line_27 $$ cluster.shutdown()[ CD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_11 $$ String bpid = cluster.getNamesystem().getBlockPoolId()[ FD ]
Line_16 $$ for (int idx = 0; idx < blocks.length; idx++) -->Line_21 $$ assertTrue("Cannot remove file.", blocks[idx].delete())[ CD ]
Line_4 $$ DFSTestUtil util = new DFSTestUtil.Builder().setName("TestFileCorruption").setNumFiles(20).build()-->Line_9 $$ util.createFiles(fs, "/srcdat")[ FD ]
Line_11 $$ String bpid = cluster.getNamesystem().getBlockPoolId()-->Line_12 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_8 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_16 $$ for (int idx = 0; idx < blocks.length; idx++) -->Line_20 $$ System.out.println("Deliberately removing file " + blocks[idx].getName())[ CD ]
Line_8 $$ FileSystem fs = cluster.getFileSystem()-->Line_9 $$ util.createFiles(fs, "/srcdat")[ FD ]
Line_7 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(3).build()-->Line_10 $$ File storageDir = cluster.getInstanceStorageDir(2, 0)[ FD ]
Line_12 $$ File data_dir = MiniDFSCluster.getFinalizedDir(storageDir, bpid)-->Line_13 $$ assertTrue("data directory does not exist", data_dir.exists())[ FD ]
