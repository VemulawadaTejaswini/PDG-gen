Line_5 $$ final File target-->Line_9 $$ FileUtil.createParentDirs(target)[ FD ]
Line_4 $$ for (File file : files) -->Line_7 $$ final String relativePath = FileUtil.getRelativePath(parentDir, file)[ FD ]
Line_6 $$ if (FileUtil.isAncestor(parentDir, file, true)) -->Line_11 $$ target = new File(backupDir, file.getName())[ CD ]
Line_5 $$ final File target-->Line_8 $$ target = new File(backupDir.getAbsolutePath() + File.separator + relativePath)[ FD ]
Line_5 $$ final File target-->Line_11 $$ target = new File(backupDir, file.getName())[ FD ]
Line_4 $$ for (File file : files) -->Line_6 $$ if (FileUtil.isAncestor(parentDir, file, true)) [ FD ]
Line_6 $$ if (FileUtil.isAncestor(parentDir, file, true)) -->Line_9 $$ FileUtil.createParentDirs(target)[ CD ]
Line_11 $$ target = new File(backupDir, file.getName())-->Line_13 $$ FileUtil.copy(file, target)[ FD ]
Line_6 $$ if (FileUtil.isAncestor(parentDir, file, true)) -->Line_7 $$ final String relativePath = FileUtil.getRelativePath(parentDir, file)[ CD ]
Line_8 $$ target = new File(backupDir.getAbsolutePath() + File.separator + relativePath)-->Line_9 $$ FileUtil.createParentDirs(target)[ FD ]
Line_2 $$ public static void backupFiles(Collection<File> files, File parentDir, File backupDir) throws IOException -->Line_3 $$ backupDir.mkdirs()[ FD ]
Line_4 $$ for (File file : files) -->Line_11 $$ target = new File(backupDir, file.getName())[ FD ]
Line_2 $$ public static void backupFiles(Collection<File> files, File parentDir, File backupDir) throws IOException -->Line_3 $$ backupDir.mkdirs()[ CD ]
Line_6 $$ if (FileUtil.isAncestor(parentDir, file, true)) -->Line_8 $$ target = new File(backupDir.getAbsolutePath() + File.separator + relativePath)[ CD ]
Line_5 $$ final File target-->Line_13 $$ FileUtil.copy(file, target)[ FD ]
Line_2 $$ public static void backupFiles(Collection<File> files, File parentDir, File backupDir) throws IOException -->Line_6 $$ if (FileUtil.isAncestor(parentDir, file, true)) [ FD ]
Line_2 $$ public static void backupFiles(Collection<File> files, File parentDir, File backupDir) throws IOException -->Line_7 $$ final String relativePath = FileUtil.getRelativePath(parentDir, file)[ FD ]
Line_2 $$ public static void backupFiles(Collection<File> files, File parentDir, File backupDir) throws IOException -->Line_8 $$ target = new File(backupDir.getAbsolutePath() + File.separator + relativePath)[ FD ]
Line_4 $$ for (File file : files) -->Line_13 $$ FileUtil.copy(file, target)[ FD ]
Line_8 $$ target = new File(backupDir.getAbsolutePath() + File.separator + relativePath)-->Line_13 $$ FileUtil.copy(file, target)[ FD ]
Line_8 $$ target = new File(backupDir.getAbsolutePath() + File.separator + relativePath)-->Line_11 $$ target = new File(backupDir, file.getName())[ FD ]
