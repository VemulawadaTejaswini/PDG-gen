Line_3 $$ MiniDFSCluster cluster = null-->Line_22 $$ cluster = null[ FD ]
Line_36 $$ for (int i = 0; i < numTransactions; i++) -->Line_37 $$ assertTrue(fs.exists(new Path("/test" + i)))[ CD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_21 $$ cluster.shutdown()[ FD ]
Line_22 $$ cluster = null-->Line_51 $$ cluster.waitActive()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_49 $$ cluster = null[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_48 $$ cluster.shutdown()[ FD ]
Line_49 $$ cluster = null-->Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_21 $$ cluster.shutdown()[ FD ]
Line_29 $$ File imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())-->Line_31 $$ assertEquals(NNStorage.getImageFileName(0), imageFile.getName())[ FD ]
Line_22 $$ cluster = null-->Line_53 $$ if (cluster != null) [ FD ]
Line_22 $$ cluster = null-->Line_49 $$ cluster = null[ FD ]
Line_22 $$ cluster = null-->Line_54 $$ cluster.shutdown()[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_48 $$ cluster.shutdown()[ FD ]
Line_29 $$ File imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())-->Line_45 $$ imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())[ FD ]
Line_49 $$ cluster = null-->Line_53 $$ if (cluster != null) [ FD ]
Line_11 $$ for (int i = 0; i < numTransactions; i++) -->Line_36 $$ for (int i = 0; i < numTransactions; i++) [ FD ]
Line_26 $$ File currentDir = new File(nameDir, "current")-->Line_45 $$ imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())[ FD ]
Line_41 $$ expectedTxId = numTransactions + 1-->Line_47 $$ assertEquals(NNStorage.getImageFileName(expectedTxId), imageFile.getName())[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_53 $$ if (cluster != null) [ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_54 $$ cluster.shutdown()[ FD ]
Line_2 $$ private void testCrashRecovery(int numTransactions) throws Exception -->Line_40 $$ if (numTransactions > CHECKPOINT_ON_STARTUP_MIN_TXNS) [ FD ]
Line_35 $$ fs = cluster.getFileSystem()-->Line_37 $$ assertTrue(fs.exists(new Path("/test" + i)))[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_22 $$ cluster = null[ FD ]
Line_10 $$ FileSystem fs = cluster.getFileSystem()-->Line_35 $$ fs = cluster.getFileSystem()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_15 $$ File dfsDir = nameDir.getParentFile()-->Line_24 $$ dfsDir.delete()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_22 $$ cluster = null-->Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_51 $$ cluster.waitActive()[ FD ]
Line_15 $$ File dfsDir = nameDir.getParentFile()-->Line_23 $$ FileUtil.fullyDeleteContents(dfsDir)[ FD ]
Line_29 $$ File imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())-->Line_30 $$ assertNotNull("No image found in " + nameDir, imageFile)[ FD ]
Line_40 $$ if (numTransactions > CHECKPOINT_ON_STARTUP_MIN_TXNS) -->Line_43 $$ expectedTxId = 0[ CD ]
Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_54 $$ cluster.shutdown()[ FD ]
Line_22 $$ cluster = null-->Line_34 $$ cluster.waitActive()[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_51 $$ cluster.waitActive()[ FD ]
Line_18 $$ File backupDir = new File(dfsDir.getParentFile(), "dfs.backup-while-running")-->Line_19 $$ FileUtils.copyDirectory(dfsDir, backupDir)[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()[ FD ]
Line_2 $$ private void testCrashRecovery(int numTransactions) throws Exception -->Line_3 $$ MiniDFSCluster cluster = null[ CD ]
Line_18 $$ File backupDir = new File(dfsDir.getParentFile(), "dfs.backup-while-running")-->Line_25 $$ backupDir.renameTo(dfsDir)[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_14 $$ File nameDir = new File(cluster.getNameDirs(0).iterator().next().getPath())[ FD ]
Line_40 $$ if (numTransactions > CHECKPOINT_ON_STARTUP_MIN_TXNS) -->Line_41 $$ expectedTxId = numTransactions + 1[ CD ]
Line_15 $$ File dfsDir = nameDir.getParentFile()-->Line_25 $$ backupDir.renameTo(dfsDir)[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_10 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_9 $$ cluster.waitActive()[ FD ]
Line_45 $$ imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())-->Line_46 $$ assertNotNull("No image found in " + nameDir, imageFile)[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_14 $$ File nameDir = new File(cluster.getNameDirs(0).iterator().next().getPath())[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_10 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_53 $$ if (cluster != null) -->Line_54 $$ cluster.shutdown()[ CD ]
Line_26 $$ File currentDir = new File(nameDir, "current")-->Line_29 $$ File imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())[ FD ]
Line_22 $$ cluster = null-->Line_48 $$ cluster.shutdown()[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_34 $$ cluster.waitActive()[ FD ]
Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_51 $$ cluster.waitActive()[ FD ]
Line_4 $$ Configuration conf = new HdfsConfiguration()-->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_TXNS_KEY, CHECKPOINT_ON_STARTUP_MIN_TXNS)[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_9 $$ cluster.waitActive()[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_53 $$ if (cluster != null) [ FD ]
Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_53 $$ if (cluster != null) [ FD ]
Line_27 $$ File editsFile = new File(currentDir, NNStorage.getInProgressEditsFileName(1))-->Line_28 $$ assertTrue("Edits file " + editsFile + " should exist", editsFile.exists())[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_34 $$ cluster.waitActive()[ FD ]
Line_22 $$ cluster = null-->Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_49 $$ cluster = null-->Line_51 $$ cluster.waitActive()[ FD ]
Line_15 $$ File dfsDir = nameDir.getParentFile()-->Line_18 $$ File backupDir = new File(dfsDir.getParentFile(), "dfs.backup-while-running")[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_2 $$ private void testCrashRecovery(int numTransactions) throws Exception -->Line_41 $$ expectedTxId = numTransactions + 1[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_54 $$ cluster.shutdown()[ FD ]
Line_49 $$ cluster = null-->Line_54 $$ cluster.shutdown()[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_35 $$ fs = cluster.getFileSystem()[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_51 $$ cluster.waitActive()[ FD ]
Line_43 $$ expectedTxId = 0-->Line_47 $$ assertEquals(NNStorage.getImageFileName(expectedTxId), imageFile.getName())[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_48 $$ cluster.shutdown()[ FD ]
Line_29 $$ File imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())-->Line_46 $$ assertNotNull("No image found in " + nameDir, imageFile)[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_39 $$ long expectedTxId-->Line_43 $$ expectedTxId = 0[ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_53 $$ if (cluster != null) [ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_35 $$ fs = cluster.getFileSystem()[ FD ]
Line_2 $$ private void testCrashRecovery(int numTransactions) throws Exception -->Line_5 $$ conf.setInt(DFSConfigKeys.DFS_NAMENODE_CHECKPOINT_TXNS_KEY, CHECKPOINT_ON_STARTUP_MIN_TXNS)[ CD ]
Line_2 $$ private void testCrashRecovery(int numTransactions) throws Exception -->Line_36 $$ for (int i = 0; i < numTransactions; i++) [ FD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_35 $$ fs = cluster.getFileSystem()[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_49 $$ cluster = null[ FD ]
Line_2 $$ private void testCrashRecovery(int numTransactions) throws Exception -->Line_4 $$ Configuration conf = new HdfsConfiguration()[ CD ]
Line_15 $$ File dfsDir = nameDir.getParentFile()-->Line_16 $$ assertEquals(dfsDir.getName(), "dfs")[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_50 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()[ FD ]
Line_33 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(false).build()-->Line_54 $$ cluster.shutdown()[ FD ]
Line_11 $$ for (int i = 0; i < numTransactions; i++) -->Line_12 $$ fs.mkdirs(new Path("/test" + i))[ CD ]
Line_8 $$ cluster = new MiniDFSCluster.Builder(conf).numDataNodes(NUM_DATA_NODES).format(true).build()-->Line_49 $$ cluster = null[ FD ]
Line_29 $$ File imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())-->Line_47 $$ assertEquals(NNStorage.getImageFileName(expectedTxId), imageFile.getName())[ FD ]
Line_22 $$ cluster = null-->Line_35 $$ fs = cluster.getFileSystem()[ FD ]
Line_14 $$ File nameDir = new File(cluster.getNameDirs(0).iterator().next().getPath())-->Line_15 $$ File dfsDir = nameDir.getParentFile()[ FD ]
Line_10 $$ FileSystem fs = cluster.getFileSystem()-->Line_12 $$ fs.mkdirs(new Path("/test" + i))[ FD ]
Line_2 $$ private void testCrashRecovery(int numTransactions) throws Exception -->Line_11 $$ for (int i = 0; i < numTransactions; i++) [ FD ]
Line_45 $$ imageFile = FSImageTestUtil.findNewestImageFile(currentDir.getAbsolutePath())-->Line_47 $$ assertEquals(NNStorage.getImageFileName(expectedTxId), imageFile.getName())[ FD ]
Line_15 $$ File dfsDir = nameDir.getParentFile()-->Line_19 $$ FileUtils.copyDirectory(dfsDir, backupDir)[ FD ]
Line_3 $$ MiniDFSCluster cluster = null-->Line_34 $$ cluster.waitActive()[ FD ]
Line_10 $$ FileSystem fs = cluster.getFileSystem()-->Line_37 $$ assertTrue(fs.exists(new Path("/test" + i)))[ FD ]
Line_39 $$ long expectedTxId-->Line_41 $$ expectedTxId = numTransactions + 1[ FD ]
Line_39 $$ long expectedTxId-->Line_47 $$ assertEquals(NNStorage.getImageFileName(expectedTxId), imageFile.getName())[ FD ]
Line_41 $$ expectedTxId = numTransactions + 1-->Line_43 $$ expectedTxId = 0[ FD ]
