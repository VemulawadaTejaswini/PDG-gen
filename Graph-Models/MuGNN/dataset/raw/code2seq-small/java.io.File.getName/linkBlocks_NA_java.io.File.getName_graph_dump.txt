Line_4 $$ if (oldLV > DataNodeLayoutVersion.Feature.BLOCKID_BASED_LAYOUT.getInfo().getLayoutVersion() && to.getName().equals(STORAGE_DIR_FINALIZED)) -->Line_5 $$ upgradeToIdBasedLayout = true[ CD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_9 $$ int numLinkWorkers = datanode.getConf().getInt(DFSConfigKeys.DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS_KEY, DFSConfigKeys.DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS)[ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_8 $$ linkBlocksHelper(from, to, oldLV, hl, upgradeToIdBasedLayout, to, idBasedLayoutSingleLinks)[ FD ]
Line_7 $$ final List<LinkArgs> idBasedLayoutSingleLinks = Lists.newArrayList()-->Line_19 $$ LinkArgs cur = idBasedLayoutSingleLinks.get(j)[ FD ]
Line_13 $$ for (int i = 0; i < idBasedLayoutSingleLinks.size(); i += step) -->Line_15 $$ futures.add(linkWorkers.submit(new Callable<Void>() [ CD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_13 $$ for (int i = 0; i < idBasedLayoutSingleLinks.size(); i += step) [ CD ]
Line_7 $$ final List<LinkArgs> idBasedLayoutSingleLinks = Lists.newArrayList()-->Line_13 $$ for (int i = 0; i < idBasedLayoutSingleLinks.size(); i += step) [ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_12 $$ List<Future<Void>> futures = Lists.newArrayList()[ CD ]
Line_15 $$ futures.add(linkWorkers.submit(new Callable<Void>() -->Line_22 $$ return null[ CD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_4 $$ if (oldLV > DataNodeLayoutVersion.Feature.BLOCKID_BASED_LAYOUT.getInfo().getLayoutVersion() && to.getName().equals(STORAGE_DIR_FINALIZED)) [ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_7 $$ final List<LinkArgs> idBasedLayoutSingleLinks = Lists.newArrayList()[ CD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_26 $$ linkWorkers.shutdown()[ CD ]
Line_5 $$ upgradeToIdBasedLayout = true-->Line_8 $$ linkBlocksHelper(from, to, oldLV, hl, upgradeToIdBasedLayout, to, idBasedLayoutSingleLinks)[ FD ]
Line_3 $$ boolean upgradeToIdBasedLayout = false-->Line_8 $$ linkBlocksHelper(from, to, oldLV, hl, upgradeToIdBasedLayout, to, idBasedLayoutSingleLinks)[ FD ]
Line_11 $$ final int step = idBasedLayoutSingleLinks.size() / numLinkWorkers + 1-->Line_13 $$ for (int i = 0; i < idBasedLayoutSingleLinks.size(); i += step) [ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_8 $$ linkBlocksHelper(from, to, oldLV, hl, upgradeToIdBasedLayout, to, idBasedLayoutSingleLinks)[ CD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_10 $$ ExecutorService linkWorkers = Executors.newFixedThreadPool(numLinkWorkers)[ CD ]
Line_7 $$ final List<LinkArgs> idBasedLayoutSingleLinks = Lists.newArrayList()-->Line_17 $$ int upperBound = Math.min(iCopy + step, idBasedLayoutSingleLinks.size())[ FD ]
Line_18 $$ for (int j = iCopy; j < upperBound; j++) -->Line_20 $$ NativeIO.link(cur.src, cur.dst)[ CD ]
Line_17 $$ int upperBound = Math.min(iCopy + step, idBasedLayoutSingleLinks.size())-->Line_18 $$ for (int j = iCopy; j < upperBound; j++) [ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_4 $$ if (oldLV > DataNodeLayoutVersion.Feature.BLOCKID_BASED_LAYOUT.getInfo().getLayoutVersion() && to.getName().equals(STORAGE_DIR_FINALIZED)) [ CD ]
Line_18 $$ for (int j = iCopy; j < upperBound; j++) -->Line_19 $$ LinkArgs cur = idBasedLayoutSingleLinks.get(j)[ CD ]
Line_15 $$ futures.add(linkWorkers.submit(new Callable<Void>() -->Line_17 $$ int upperBound = Math.min(iCopy + step, idBasedLayoutSingleLinks.size())[ CD ]
Line_15 $$ futures.add(linkWorkers.submit(new Callable<Void>() -->Line_18 $$ for (int j = iCopy; j < upperBound; j++) [ CD ]
Line_3 $$ boolean upgradeToIdBasedLayout = false-->Line_5 $$ upgradeToIdBasedLayout = true[ FD ]
Line_10 $$ ExecutorService linkWorkers = Executors.newFixedThreadPool(numLinkWorkers)-->Line_26 $$ linkWorkers.shutdown()[ FD ]
Line_12 $$ List<Future<Void>> futures = Lists.newArrayList()-->Line_15 $$ futures.add(linkWorkers.submit(new Callable<Void>() [ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_11 $$ final int step = idBasedLayoutSingleLinks.size() / numLinkWorkers + 1[ CD ]
Line_18 $$ for (int j = iCopy; j < upperBound; j++) -->Line_19 $$ LinkArgs cur = idBasedLayoutSingleLinks.get(j)[ FD ]
Line_13 $$ for (int i = 0; i < idBasedLayoutSingleLinks.size(); i += step) -->Line_14 $$ final int iCopy = i[ CD ]
Line_7 $$ final List<LinkArgs> idBasedLayoutSingleLinks = Lists.newArrayList()-->Line_11 $$ final int step = idBasedLayoutSingleLinks.size() / numLinkWorkers + 1[ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_3 $$ boolean upgradeToIdBasedLayout = false[ CD ]
Line_10 $$ ExecutorService linkWorkers = Executors.newFixedThreadPool(numLinkWorkers)-->Line_15 $$ futures.add(linkWorkers.submit(new Callable<Void>() [ FD ]
Line_7 $$ final List<LinkArgs> idBasedLayoutSingleLinks = Lists.newArrayList()-->Line_8 $$ linkBlocksHelper(from, to, oldLV, hl, upgradeToIdBasedLayout, to, idBasedLayoutSingleLinks)[ FD ]
Line_9 $$ int numLinkWorkers = datanode.getConf().getInt(DFSConfigKeys.DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS_KEY, DFSConfigKeys.DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS)-->Line_10 $$ ExecutorService linkWorkers = Executors.newFixedThreadPool(numLinkWorkers)[ FD ]
Line_2 $$ static void linkBlocks(DataNode datanode, File from, File to, int oldLV, HardLink hl) throws IOException -->Line_9 $$ int numLinkWorkers = datanode.getConf().getInt(DFSConfigKeys.DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS_KEY, DFSConfigKeys.DFS_DATANODE_BLOCK_ID_LAYOUT_UPGRADE_THREADS)[ CD ]
