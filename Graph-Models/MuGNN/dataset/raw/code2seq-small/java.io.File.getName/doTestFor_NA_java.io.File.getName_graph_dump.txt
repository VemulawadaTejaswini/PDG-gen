Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_21 $$ quickFixTestCase.afterActionCompleted(testName, contents)[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_27 $$ fail(testName)[ FD ]
Line_9 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_21 $$ quickFixTestCase.afterActionCompleted(testName, contents)[ FD ]
Line_5 $$ final File testFile = new File(testFullPath)-->Line_10 $$ quickFixTestCase.configureFromFileText(testFile.getName(), contents)[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_6 $$ CommandProcessor.getInstance().executeCommand(quickFixTestCase.getProject(), new Runnable() [ CD ]
Line_4 $$ final String testFullPath = quickFixTestCase.getTestDataPath().replace(File.separatorChar, '/') + relativePath-->Line_18 $$ quickFixTestCase.doAction(text, actionShouldBeAvailable, testFullPath, testName)[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_6 $$ CommandProcessor.getInstance().executeCommand(quickFixTestCase.getProject(), new Runnable() [ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_5 $$ final File testFile = new File(testFullPath)[ CD ]
Line_5 $$ final File testFile = new File(testFullPath)-->Line_9 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))[ FD ]
Line_13 $$ final String text = pair.getFirst()-->Line_18 $$ quickFixTestCase.doAction(text, actionShouldBeAvailable, testFullPath, testName)[ FD ]
Line_12 $$ final Pair<String, Boolean> pair = quickFixTestCase.parseActionHintImpl(quickFixTestCase.getFile(), contents)-->Line_13 $$ final String text = pair.getFirst()[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_4 $$ final String testFullPath = quickFixTestCase.getTestDataPath().replace(File.separatorChar, '/') + relativePath[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_3 $$ final String relativePath = notNull(quickFixTestCase.getBasePath(), "") + "/" + BEFORE_PREFIX + testName[ CD ]
Line_9 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_15 $$ quickFixTestCase.beforeActionStarted(testName, contents)[ FD ]
Line_12 $$ final Pair<String, Boolean> pair = quickFixTestCase.parseActionHintImpl(quickFixTestCase.getFile(), contents)-->Line_14 $$ final boolean actionShouldBeAvailable = pair.getSecond().booleanValue()[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_18 $$ quickFixTestCase.doAction(text, actionShouldBeAvailable, testFullPath, testName)[ FD ]
Line_9 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_10 $$ quickFixTestCase.configureFromFileText(testFile.getName(), contents)[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_4 $$ final String testFullPath = quickFixTestCase.getTestDataPath().replace(File.separatorChar, '/') + relativePath[ CD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_12 $$ final Pair<String, Boolean> pair = quickFixTestCase.parseActionHintImpl(quickFixTestCase.getFile(), contents)[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_11 $$ quickFixTestCase.bringRealEditorBack()[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_15 $$ quickFixTestCase.beforeActionStarted(testName, contents)[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_3 $$ final String relativePath = notNull(quickFixTestCase.getBasePath(), "") + "/" + BEFORE_PREFIX + testName[ FD ]
Line_9 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_12 $$ final Pair<String, Boolean> pair = quickFixTestCase.parseActionHintImpl(quickFixTestCase.getFile(), contents)[ FD ]
Line_14 $$ final boolean actionShouldBeAvailable = pair.getSecond().booleanValue()-->Line_18 $$ quickFixTestCase.doAction(text, actionShouldBeAvailable, testFullPath, testName)[ FD ]
Line_2 $$ private static void doTestFor(final String testName, final QuickFixTestCase quickFixTestCase) -->Line_10 $$ quickFixTestCase.configureFromFileText(testFile.getName(), contents)[ FD ]
