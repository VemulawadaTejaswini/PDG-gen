Line_7 $$ while (true) -->Line_8 $$ if (dirFile == null || dirFile.getName().length() == 0 || !dirFile.exists()) [ CD ]
Line_16 $$ dirFile = dirFile.getParentFile()-->Line_8 $$ if (dirFile == null || dirFile.getName().length() == 0 || !dirFile.exists()) [ FD ]
Line_7 $$ while (true) -->Line_12 $$ if (rootFile.exists()) [ CD ]
Line_11 $$ rootFile = new File(dirFile, CVS_ROOT_FILE_PATH)-->Line_12 $$ if (rootFile.exists()) [ FD ]
Line_4 $$ File rootFile-->Line_18 $$ return FileUtils.readLineFromFile(rootFile).trim()[ FD ]
Line_2 $$ public String getCvsRootForDirectory(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_18 $$ return FileUtils.readLineFromFile(rootFile).trim()[ CD ]
Line_4 $$ File rootFile-->Line_12 $$ if (rootFile.exists()) [ FD ]
Line_4 $$ File rootFile-->Line_11 $$ rootFile = new File(dirFile, CVS_ROOT_FILE_PATH)[ FD ]
Line_5 $$ String repositoryDirs = ""-->Line_15 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ FD ]
Line_6 $$ File dirFile = directory-->Line_15 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ FD ]
Line_2 $$ public String getCvsRootForDirectory(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_7 $$ while (true) [ CD ]
Line_7 $$ while (true) -->Line_16 $$ dirFile = dirFile.getParentFile()[ CD ]
Line_2 $$ public String getCvsRootForDirectory(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_3 $$ final File directory = cvsFileSystem.getAdminFileSystem().getFile(directoryObject)[ CD ]
Line_16 $$ dirFile = dirFile.getParentFile()-->Line_15 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ FD ]
Line_7 $$ while (true) -->Line_11 $$ rootFile = new File(dirFile, CVS_ROOT_FILE_PATH)[ CD ]
Line_6 $$ File dirFile = directory-->Line_16 $$ dirFile = dirFile.getParentFile()[ FD ]
Line_2 $$ public String getCvsRootForDirectory(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_4 $$ File rootFile[ CD ]
Line_2 $$ public String getCvsRootForDirectory(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_5 $$ String repositoryDirs = ""[ CD ]
Line_6 $$ File dirFile = directory-->Line_8 $$ if (dirFile == null || dirFile.getName().length() == 0 || !dirFile.exists()) [ FD ]
Line_11 $$ rootFile = new File(dirFile, CVS_ROOT_FILE_PATH)-->Line_18 $$ return FileUtils.readLineFromFile(rootFile).trim()[ FD ]
Line_2 $$ public String getCvsRootForDirectory(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_6 $$ File dirFile = directory[ CD ]
Line_2 $$ public String getCvsRootForDirectory(DirectoryObject directoryObject, ICvsFileSystem cvsFileSystem) throws IOException -->Line_3 $$ final File directory = cvsFileSystem.getAdminFileSystem().getFile(directoryObject)[ FD ]
Line_3 $$ final File directory = cvsFileSystem.getAdminFileSystem().getFile(directoryObject)-->Line_9 $$ throw new FileNotFoundException(SmartCvsSrcBundle.message("root.file.not.found.for.directory.err.rmessage", directory))[ FD ]
Line_7 $$ while (true) -->Line_15 $$ repositoryDirs = '/' + dirFile.getName() + repositoryDirs[ CD ]
