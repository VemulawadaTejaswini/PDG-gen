Line_2 $$ static IdeaPluginDescriptorImpl loadDescriptorFromDir(@NotNull File file, @NotNull String fileName) -->Line_16 $$ return null[ CD ]
Line_2 $$ static IdeaPluginDescriptorImpl loadDescriptorFromDir(@NotNull File file, @NotNull String fileName) -->Line_3 $$ File descriptorFile = new File(file, META_INF + File.separator + fileName)[ CD ]
Line_2 $$ static IdeaPluginDescriptorImpl loadDescriptorFromDir(@NotNull File file, @NotNull String fileName) -->Line_11 $$ prepareLoadingPluginsErrorMessage(Collections.singletonList("File '" + file.getName() + "' contains invalid plugin descriptor."))[ FD ]
Line_2 $$ static IdeaPluginDescriptorImpl loadDescriptorFromDir(@NotNull File file, @NotNull String fileName) -->Line_4 $$ if (descriptorFile.exists()) [ CD ]
Line_3 $$ File descriptorFile = new File(file, META_INF + File.separator + fileName)-->Line_7 $$ descriptor.readExternal(descriptorFile.toURI().toURL())[ FD ]
Line_6 $$ IdeaPluginDescriptorImpl descriptor = new IdeaPluginDescriptorImpl(file)-->Line_7 $$ descriptor.readExternal(descriptorFile.toURI().toURL())[ FD ]
Line_3 $$ File descriptorFile = new File(file, META_INF + File.separator + fileName)-->Line_4 $$ if (descriptorFile.exists()) [ FD ]
