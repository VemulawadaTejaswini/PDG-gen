Line_3 $$ final CheckoutCommand result = new CheckoutCommand(null)-->Line_5 $$ result.addModule(myModuleName)[ FD ]
Line_3 $$ final CheckoutCommand result = new CheckoutCommand(null)-->Line_8 $$ result.setAlternativeCheckoutDirectory(myIsDirectory ? myFile.getName() : ".")[ FD ]
Line_2 $$ protected Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) -->Line_10 $$ return result[ CD ]
Line_3 $$ final CheckoutCommand result = new CheckoutCommand(null)-->Line_4 $$ result.setRecursive(true)[ FD ]
Line_7 $$ if (!isRoot()) -->Line_8 $$ result.setAlternativeCheckoutDirectory(myIsDirectory ? myFile.getName() : ".")[ CD ]
Line_2 $$ protected Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) -->Line_7 $$ if (!isRoot()) [ CD ]
Line_2 $$ protected Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) -->Line_5 $$ result.addModule(myModuleName)[ CD ]
Line_2 $$ protected Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) -->Line_3 $$ final CheckoutCommand result = new CheckoutCommand(null)[ CD ]
Line_2 $$ protected Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) -->Line_6 $$ myRevisionOrDate.setForCommand(result)[ CD ]
Line_3 $$ final CheckoutCommand result = new CheckoutCommand(null)-->Line_6 $$ myRevisionOrDate.setForCommand(result)[ FD ]
Line_2 $$ protected Command createCommand(CvsRootProvider root, CvsExecutionEnvironment cvsExecutionEnvironment) -->Line_4 $$ result.setRecursive(true)[ CD ]
