Line_3 $$ FavoritesEditor originalEditor = new FavoritesEditor()-->Line_11 $$ originalEditor.exportToFile(new TestUtility.TestExportInteraction(incorrectFile, true))[ FD ]
Line_17 $$ FavoriteTask readInFavoriteTask = newEditor.getFavoriteTasks().get(0)-->Line_18 $$ assertFavorite(readInFavoriteTask, favoriteTask1)[ FD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_4 $$ Assert.assertTrue(originalEditor.getFavoriteTasks().isEmpty())[ CD ]
Line_7 $$ File correctFile = new File(incorrectFile.getParentFile(), incorrectFile.getName() + ".favorite-tasks")-->Line_12 $$ if (!correctFile.exists()) [ FD ]
Line_6 $$ File incorrectFile = tempDir.createFile("fred.wrong")-->Line_7 $$ File correctFile = new File(incorrectFile.getParentFile(), incorrectFile.getName() + ".favorite-tasks")[ FD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_6 $$ File incorrectFile = tempDir.createFile("fred.wrong")[ CD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_8 $$ if (correctFile.exists()) [ CD ]
Line_3 $$ FavoritesEditor originalEditor = new FavoritesEditor()-->Line_5 $$ FavoriteTask favoriteTask1 = originalEditor.addFavorite(mySubProject1Comple, true)[ FD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_16 $$ newEditor.importFromFile(new TestUtility.TestImportInteraction(correctFile))[ CD ]
Line_15 $$ FavoritesEditor newEditor = new FavoritesEditor()-->Line_16 $$ newEditor.importFromFile(new TestUtility.TestImportInteraction(correctFile))[ FD ]
Line_5 $$ FavoriteTask favoriteTask1 = originalEditor.addFavorite(mySubProject1Comple, true)-->Line_18 $$ assertFavorite(readInFavoriteTask, favoriteTask1)[ FD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_12 $$ if (!correctFile.exists()) [ CD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_17 $$ FavoriteTask readInFavoriteTask = newEditor.getFavoriteTasks().get(0)[ CD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_7 $$ File correctFile = new File(incorrectFile.getParentFile(), incorrectFile.getName() + ".favorite-tasks")[ CD ]
Line_7 $$ File correctFile = new File(incorrectFile.getParentFile(), incorrectFile.getName() + ".favorite-tasks")-->Line_13 $$ throw new AssertionError("failed to correct the file name. Expected it to be saved to '" + correctFile.getAbsolutePath() + "'")[ FD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_3 $$ FavoritesEditor originalEditor = new FavoritesEditor()[ CD ]
Line_3 $$ FavoritesEditor originalEditor = new FavoritesEditor()-->Line_4 $$ Assert.assertTrue(originalEditor.getFavoriteTasks().isEmpty())[ FD ]
Line_7 $$ File correctFile = new File(incorrectFile.getParentFile(), incorrectFile.getName() + ".favorite-tasks")-->Line_8 $$ if (correctFile.exists()) [ FD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_18 $$ assertFavorite(readInFavoriteTask, favoriteTask1)[ CD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_11 $$ originalEditor.exportToFile(new TestUtility.TestExportInteraction(incorrectFile, true))[ CD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_15 $$ FavoritesEditor newEditor = new FavoritesEditor()[ CD ]
Line_15 $$ FavoritesEditor newEditor = new FavoritesEditor()-->Line_17 $$ FavoriteTask readInFavoriteTask = newEditor.getFavoriteTasks().get(0)[ FD ]
Line_2 $$ public void testEnsureFileHasCorrectExtension() -->Line_5 $$ FavoriteTask favoriteTask1 = originalEditor.addFavorite(mySubProject1Comple, true)[ CD ]
