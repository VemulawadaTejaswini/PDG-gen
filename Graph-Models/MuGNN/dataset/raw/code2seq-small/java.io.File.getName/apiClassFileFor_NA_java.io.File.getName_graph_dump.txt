Line_2 $$ private File apiClassFileFor(File originalClassFile) -->Line_4 $$ File cur = originalClassFile.getParentFile()[ FD ]
Line_4 $$ File cur = originalClassFile.getParentFile()-->Line_6 $$ sb.insert(0, cur.getName() + File.separator)[ FD ]
Line_7 $$ cur = cur.getParentFile()-->Line_6 $$ sb.insert(0, cur.getName() + File.separator)[ FD ]
Line_5 $$ while (!cur.equals(runtimeClassesDir)) -->Line_7 $$ cur = cur.getParentFile()[ CD ]
Line_3 $$ StringBuilder sb = new StringBuilder(originalClassFile.getName())-->Line_6 $$ sb.insert(0, cur.getName() + File.separator)[ FD ]
Line_3 $$ StringBuilder sb = new StringBuilder(originalClassFile.getName())-->Line_9 $$ return new File(apiClassesDir, sb.toString())[ FD ]
Line_4 $$ File cur = originalClassFile.getParentFile()-->Line_7 $$ cur = cur.getParentFile()[ FD ]
Line_2 $$ private File apiClassFileFor(File originalClassFile) -->Line_5 $$ while (!cur.equals(runtimeClassesDir)) [ CD ]
Line_2 $$ private File apiClassFileFor(File originalClassFile) -->Line_4 $$ File cur = originalClassFile.getParentFile()[ CD ]
Line_2 $$ private File apiClassFileFor(File originalClassFile) -->Line_3 $$ StringBuilder sb = new StringBuilder(originalClassFile.getName())[ CD ]
Line_2 $$ private File apiClassFileFor(File originalClassFile) -->Line_3 $$ StringBuilder sb = new StringBuilder(originalClassFile.getName())[ FD ]
Line_5 $$ while (!cur.equals(runtimeClassesDir)) -->Line_6 $$ sb.insert(0, cur.getName() + File.separator)[ CD ]
Line_2 $$ private File apiClassFileFor(File originalClassFile) -->Line_9 $$ return new File(apiClassesDir, sb.toString())[ CD ]
Line_7 $$ cur = cur.getParentFile()-->Line_5 $$ while (!cur.equals(runtimeClassesDir)) [ FD ]
Line_4 $$ File cur = originalClassFile.getParentFile()-->Line_5 $$ while (!cur.equals(runtimeClassesDir)) [ FD ]
