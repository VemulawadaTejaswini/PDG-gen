Line_2 $$ private void listDirectory(File directory, Set<JavaFileObject.Kind> fileKinds, ListBuffer<JavaFileObject> resultList) -->Line_3 $$ final File[] files = listChildren(directory)[ FD ]
Line_3 $$ final File[] files = listChildren(directory)-->Line_4 $$ if (files != null) [ FD ]
Line_9 $$ for (File f : files) -->Line_10 $$ final String fileName = f.getName()[ FD ]
Line_2 $$ private void listDirectory(File directory, Set<JavaFileObject.Kind> fileKinds, ListBuffer<JavaFileObject> resultList) -->Line_3 $$ final File[] files = listChildren(directory)[ CD ]
Line_4 $$ if (files != null) -->Line_8 $$ final boolean acceptUnknownFiles = fileKinds.contains(JavaFileObject.Kind.OTHER)[ CD ]
Line_9 $$ for (File f : files) -->Line_12 $$ if (acceptUnknownFiles && !isFile(f)) [ FD ]
Line_11 $$ if (isValidFile(fileName, fileKinds)) -->Line_15 $$ final JavaFileObject fe = new InputFileObject(this, f)[ CD ]
Line_3 $$ final File[] files = listChildren(directory)-->Line_6 $$ Arrays.sort(files, sortFiles)[ FD ]
Line_2 $$ private void listDirectory(File directory, Set<JavaFileObject.Kind> fileKinds, ListBuffer<JavaFileObject> resultList) -->Line_4 $$ if (files != null) [ CD ]
Line_11 $$ if (isValidFile(fileName, fileKinds)) -->Line_12 $$ if (acceptUnknownFiles && !isFile(f)) [ CD ]
Line_11 $$ if (isValidFile(fileName, fileKinds)) -->Line_16 $$ resultList.append(fe)[ CD ]
Line_10 $$ final String fileName = f.getName()-->Line_11 $$ if (isValidFile(fileName, fileKinds)) [ FD ]
Line_4 $$ if (files != null) -->Line_5 $$ if (sortFiles != null) [ CD ]
Line_8 $$ final boolean acceptUnknownFiles = fileKinds.contains(JavaFileObject.Kind.OTHER)-->Line_12 $$ if (acceptUnknownFiles && !isFile(f)) [ FD ]
Line_2 $$ private void listDirectory(File directory, Set<JavaFileObject.Kind> fileKinds, ListBuffer<JavaFileObject> resultList) -->Line_8 $$ final boolean acceptUnknownFiles = fileKinds.contains(JavaFileObject.Kind.OTHER)[ FD ]
Line_2 $$ private void listDirectory(File directory, Set<JavaFileObject.Kind> fileKinds, ListBuffer<JavaFileObject> resultList) -->Line_11 $$ if (isValidFile(fileName, fileKinds)) [ FD ]
Line_2 $$ private void listDirectory(File directory, Set<JavaFileObject.Kind> fileKinds, ListBuffer<JavaFileObject> resultList) -->Line_16 $$ resultList.append(fe)[ FD ]
Line_5 $$ if (sortFiles != null) -->Line_6 $$ Arrays.sort(files, sortFiles)[ CD ]
Line_15 $$ final JavaFileObject fe = new InputFileObject(this, f)-->Line_16 $$ resultList.append(fe)[ FD ]
