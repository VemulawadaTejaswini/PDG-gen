Line_3 $$ if (!StringUtil.startsWithChar(file.getName(), '_') && !"CVS".equals(file.getName())) -->Line_8 $$ addTest(t)[ CD ]
Line_4 $$ if (myPattern != null && !myPattern.matcher(file.getPath()).matches()) -->Line_5 $$ return[ CD ]
Line_7 $$ final ActualTest t = new ActualTest(file, createTestName(file))-->Line_8 $$ addTest(t)[ FD ]
Line_3 $$ if (!StringUtil.startsWithChar(file.getName(), '_') && !"CVS".equals(file.getName())) -->Line_7 $$ final ActualTest t = new ActualTest(file, createTestName(file))[ CD ]
Line_2 $$ private void addFileTest(File file) -->Line_4 $$ if (myPattern != null && !myPattern.matcher(file.getPath()).matches()) [ FD ]
Line_2 $$ private void addFileTest(File file) -->Line_3 $$ if (!StringUtil.startsWithChar(file.getName(), '_') && !"CVS".equals(file.getName())) [ FD ]
Line_2 $$ private void addFileTest(File file) -->Line_3 $$ if (!StringUtil.startsWithChar(file.getName(), '_') && !"CVS".equals(file.getName())) [ CD ]
Line_2 $$ private void addFileTest(File file) -->Line_7 $$ final ActualTest t = new ActualTest(file, createTestName(file))[ FD ]
Line_3 $$ if (!StringUtil.startsWithChar(file.getName(), '_') && !"CVS".equals(file.getName())) -->Line_4 $$ if (myPattern != null && !myPattern.matcher(file.getPath()).matches()) [ CD ]
