Line_2 $$ private static DiffContent getContentForVersion(final VcsFileRevision version, final File file) throws IOException, VcsException -->Line_3 $$ VirtualFile vFile = LocalFileSystem.getInstance().findFileByIoFile(file)[ FD ]
Line_3 $$ VirtualFile vFile = LocalFileSystem.getInstance().findFileByIoFile(file)-->Line_5 $$ return new DocumentContent(FileDocumentManager.getInstance().getDocument(vFile), vFile.getFileType())[ FD ]
Line_3 $$ VirtualFile vFile = LocalFileSystem.getInstance().findFileByIoFile(file)-->Line_7 $$ return new SimpleContent(VcsHistoryUtil.loadRevisionContentGuessEncoding(version, vFile, null), FileTypeManager.getInstance().getFileTypeByFileName(file.getName()))[ FD ]
Line_3 $$ VirtualFile vFile = LocalFileSystem.getInstance().findFileByIoFile(file)-->Line_4 $$ if (vFile != null && (version instanceof CurrentRevision) && !vFile.getFileType().isBinary()) [ FD ]
Line_2 $$ private static DiffContent getContentForVersion(final VcsFileRevision version, final File file) throws IOException, VcsException -->Line_7 $$ return new SimpleContent(VcsHistoryUtil.loadRevisionContentGuessEncoding(version, vFile, null), FileTypeManager.getInstance().getFileTypeByFileName(file.getName()))[ FD ]
Line_4 $$ if (vFile != null && (version instanceof CurrentRevision) && !vFile.getFileType().isBinary()) -->Line_7 $$ return new SimpleContent(VcsHistoryUtil.loadRevisionContentGuessEncoding(version, vFile, null), FileTypeManager.getInstance().getFileTypeByFileName(file.getName()))[ CD ]
Line_2 $$ private static DiffContent getContentForVersion(final VcsFileRevision version, final File file) throws IOException, VcsException -->Line_3 $$ VirtualFile vFile = LocalFileSystem.getInstance().findFileByIoFile(file)[ CD ]
Line_4 $$ if (vFile != null && (version instanceof CurrentRevision) && !vFile.getFileType().isBinary()) -->Line_5 $$ return new DocumentContent(FileDocumentManager.getInstance().getDocument(vFile), vFile.getFileType())[ CD ]
Line_2 $$ private static DiffContent getContentForVersion(final VcsFileRevision version, final File file) throws IOException, VcsException -->Line_4 $$ if (vFile != null && (version instanceof CurrentRevision) && !vFile.getFileType().isBinary()) [ CD ]
