Line_7 $$ File uniqueDir = generateUniqueSchemePatchDir(list.DESCRIPTION, false)-->Line_8 $$ list.setName(uniqueDir.getName())[ FD ]
Line_4 $$ ShelvedChangeList list = readOneShelvedChangeList(changeSetElement)-->Line_9 $$ list.setRecycled(recycled)[ FD ]
Line_2 $$ private void migrateOldShelfInfo(@NotNull Element element, boolean recycled) throws InvalidDataException -->Line_9 $$ list.setRecycled(recycled)[ FD ]
Line_4 $$ ShelvedChangeList list = readOneShelvedChangeList(changeSetElement)-->Line_5 $$ if (!list.isValid())[ FD ]
Line_3 $$ for (Element changeSetElement : element.getChildren(recycled ? ELEMENT_RECYCLED_CHANGELIST : ELEMENT_CHANGELIST)) -->Line_4 $$ ShelvedChangeList list = readOneShelvedChangeList(changeSetElement)[ FD ]
Line_2 $$ private void migrateOldShelfInfo(@NotNull Element element, boolean recycled) throws InvalidDataException -->Line_3 $$ for (Element changeSetElement : element.getChildren(recycled ? ELEMENT_RECYCLED_CHANGELIST : ELEMENT_CHANGELIST)) [ FD ]
Line_4 $$ ShelvedChangeList list = readOneShelvedChangeList(changeSetElement)-->Line_10 $$ mySchemeManager.addNewScheme(list, false)[ FD ]
Line_4 $$ ShelvedChangeList list = readOneShelvedChangeList(changeSetElement)-->Line_8 $$ list.setName(uniqueDir.getName())[ FD ]
