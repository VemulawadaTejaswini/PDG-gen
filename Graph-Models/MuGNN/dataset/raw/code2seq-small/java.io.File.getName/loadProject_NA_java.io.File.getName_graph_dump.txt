Line_7 $$ File dotIdea = new File(file, PathMacroUtil.DIRECTORY_STORE_NAME)-->Line_10 $$ directory = dotIdea[ FD ]
Line_8 $$ File directory-->Line_12 $$ directory = file[ FD ]
Line_3 $$ File file = new File(FileUtil.toCanonicalPath(projectPath))-->Line_12 $$ directory = file[ FD ]
Line_9 $$ if (dotIdea.isDirectory()) -->Line_11 $$ if (file.isDirectory() && file.getName().equals(PathMacroUtil.DIRECTORY_STORE_NAME)) [ CD ]
Line_2 $$ public static void loadProject(final JpsProject project, Map<String, String> pathVariables, String projectPath) throws IOException -->Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) [ CD ]
Line_2 $$ public static void loadProject(final JpsProject project, Map<String, String> pathVariables, String projectPath) throws IOException -->Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) [ FD ]
Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) -->Line_16 $$ new JpsProjectLoader(project, pathVariables, directory.getParentFile()).loadFromDirectory(directory)[ CD ]
Line_12 $$ directory = file-->Line_16 $$ new JpsProjectLoader(project, pathVariables, directory.getParentFile()).loadFromDirectory(directory)[ FD ]
Line_10 $$ directory = dotIdea-->Line_16 $$ new JpsProjectLoader(project, pathVariables, directory.getParentFile()).loadFromDirectory(directory)[ FD ]
Line_3 $$ File file = new File(FileUtil.toCanonicalPath(projectPath))-->Line_5 $$ new JpsProjectLoader(project, pathVariables, file.getParentFile()).loadFromIpr(file)[ FD ]
Line_10 $$ directory = dotIdea-->Line_12 $$ directory = file[ FD ]
Line_8 $$ File directory-->Line_10 $$ directory = dotIdea[ FD ]
Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) -->Line_9 $$ if (dotIdea.isDirectory()) [ CD ]
Line_7 $$ File dotIdea = new File(file, PathMacroUtil.DIRECTORY_STORE_NAME)-->Line_9 $$ if (dotIdea.isDirectory()) [ FD ]
Line_2 $$ public static void loadProject(final JpsProject project, Map<String, String> pathVariables, String projectPath) throws IOException -->Line_3 $$ File file = new File(FileUtil.toCanonicalPath(projectPath))[ CD ]
Line_2 $$ public static void loadProject(final JpsProject project, Map<String, String> pathVariables, String projectPath) throws IOException -->Line_3 $$ File file = new File(FileUtil.toCanonicalPath(projectPath))[ FD ]
Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) -->Line_8 $$ File directory[ CD ]
Line_9 $$ if (dotIdea.isDirectory()) -->Line_10 $$ directory = dotIdea[ CD ]
Line_3 $$ File file = new File(FileUtil.toCanonicalPath(projectPath))-->Line_11 $$ if (file.isDirectory() && file.getName().equals(PathMacroUtil.DIRECTORY_STORE_NAME)) [ FD ]
Line_8 $$ File directory-->Line_16 $$ new JpsProjectLoader(project, pathVariables, directory.getParentFile()).loadFromDirectory(directory)[ FD ]
Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) -->Line_7 $$ File dotIdea = new File(file, PathMacroUtil.DIRECTORY_STORE_NAME)[ CD ]
Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) -->Line_5 $$ new JpsProjectLoader(project, pathVariables, file.getParentFile()).loadFromIpr(file)[ CD ]
Line_3 $$ File file = new File(FileUtil.toCanonicalPath(projectPath))-->Line_4 $$ if (file.isFile() && projectPath.endsWith(".ipr")) [ FD ]
Line_11 $$ if (file.isDirectory() && file.getName().equals(PathMacroUtil.DIRECTORY_STORE_NAME)) -->Line_12 $$ directory = file[ CD ]
