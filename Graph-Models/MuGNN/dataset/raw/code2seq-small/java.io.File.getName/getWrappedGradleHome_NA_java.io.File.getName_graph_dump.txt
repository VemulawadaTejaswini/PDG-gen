Line_12 $$ if (!gradleSystemDir.isDirectory()) -->Line_13 $$ return null[ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_15 $$ PathAssembler.LocalDistribution localDistribution = new PathAssembler(gradleSystemDir).getDistribution(wrapperConfiguration)[ FD ]
Line_8 $$ gradleSystemDir = new File(linkedProjectPath, ".gradle")-->Line_10 $$ gradleSystemDir = StartParameter.DEFAULT_GRADLE_USER_HOME[ FD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_12 $$ if (!gradleSystemDir.isDirectory()) [ CD ]
Line_19 $$ File[] distFiles = localDistribution.getDistributionDir().listFiles(new FileFilter() -->Line_21 $$ return f.isDirectory() && StringUtil.startsWith(f.getName(), "gradle-")[ CD ]
Line_3 $$ if (wrapperConfiguration == null) -->Line_4 $$ return null[ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_24 $$ return distFiles == null || distFiles.length == 0 ? null : distFiles[0][ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_7 $$ if ("PROJECT".equals(wrapperConfiguration.getDistributionBase())) [ FD ]
Line_7 $$ if ("PROJECT".equals(wrapperConfiguration.getDistributionBase())) -->Line_8 $$ gradleSystemDir = new File(linkedProjectPath, ".gradle")[ CD ]
Line_15 $$ PathAssembler.LocalDistribution localDistribution = new PathAssembler(gradleSystemDir).getDistribution(wrapperConfiguration)-->Line_19 $$ File[] distFiles = localDistribution.getDistributionDir().listFiles(new FileFilter() [ FD ]
Line_6 $$ File gradleSystemDir-->Line_10 $$ gradleSystemDir = StartParameter.DEFAULT_GRADLE_USER_HOME[ FD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_15 $$ PathAssembler.LocalDistribution localDistribution = new PathAssembler(gradleSystemDir).getDistribution(wrapperConfiguration)[ CD ]
Line_10 $$ gradleSystemDir = StartParameter.DEFAULT_GRADLE_USER_HOME-->Line_12 $$ if (!gradleSystemDir.isDirectory()) [ FD ]
Line_6 $$ File gradleSystemDir-->Line_12 $$ if (!gradleSystemDir.isDirectory()) [ FD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_3 $$ if (wrapperConfiguration == null) [ FD ]
Line_15 $$ PathAssembler.LocalDistribution localDistribution = new PathAssembler(gradleSystemDir).getDistribution(wrapperConfiguration)-->Line_16 $$ if (localDistribution.getDistributionDir() == null) [ FD ]
Line_6 $$ File gradleSystemDir-->Line_8 $$ gradleSystemDir = new File(linkedProjectPath, ".gradle")[ FD ]
Line_7 $$ if ("PROJECT".equals(wrapperConfiguration.getDistributionBase())) -->Line_10 $$ gradleSystemDir = StartParameter.DEFAULT_GRADLE_USER_HOME[ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_3 $$ if (wrapperConfiguration == null) [ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_16 $$ if (localDistribution.getDistributionDir() == null) [ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_19 $$ File[] distFiles = localDistribution.getDistributionDir().listFiles(new FileFilter() [ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_6 $$ File gradleSystemDir[ CD ]
Line_2 $$ private File getWrappedGradleHome(String linkedProjectPath, @Nullable final WrapperConfiguration wrapperConfiguration) -->Line_7 $$ if ("PROJECT".equals(wrapperConfiguration.getDistributionBase())) [ CD ]
Line_19 $$ File[] distFiles = localDistribution.getDistributionDir().listFiles(new FileFilter() -->Line_21 $$ return f.isDirectory() && StringUtil.startsWith(f.getName(), "gradle-")[ FD ]
Line_16 $$ if (localDistribution.getDistributionDir() == null) -->Line_17 $$ return null[ CD ]
Line_8 $$ gradleSystemDir = new File(linkedProjectPath, ".gradle")-->Line_12 $$ if (!gradleSystemDir.isDirectory()) [ FD ]
