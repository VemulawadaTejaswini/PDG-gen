Line_8 $$ String outPath = args.length == 3 ? args[2] : null-->Line_19 $$ writeInspectionDiff(oldFile.getPath(), result.getPath(), outPath)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_6 $$ String oldPath = args[0][ CD ]
Line_3 $$ if (args.length != 3 && args.length != 2) -->Line_4 $$ System.out.println(InspectionsBundle.message("inspection.diff.format.error"))[ CD ]
Line_20 $$ found = true-->Line_24 $$ if (!found) [ FD ]
Line_2 $$ public static void main(String[] args) -->Line_8 $$ String outPath = args.length == 3 ? args[2] : null[ CD ]
Line_17 $$ for (File oldFile : old) -->Line_19 $$ writeInspectionDiff(oldFile.getPath(), result.getPath(), outPath)[ FD ]
Line_18 $$ if (oldFile.getName().equals(inspectionName)) -->Line_20 $$ found = true[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_9 $$ final File oldResults = new File(oldPath)[ CD ]
Line_2 $$ public static void main(String[] args) -->Line_10 $$ final File newResults = new File(newPath)[ CD ]
Line_10 $$ final File newResults = new File(newPath)-->Line_13 $$ final File[] results = newResults.listFiles()[ FD ]
Line_16 $$ boolean found = false-->Line_20 $$ found = true[ FD ]
Line_11 $$ if (oldResults.isDirectory() && newResults.isDirectory()) -->Line_13 $$ final File[] results = newResults.listFiles()[ CD ]
Line_18 $$ if (oldFile.getName().equals(inspectionName)) -->Line_19 $$ writeInspectionDiff(oldFile.getPath(), result.getPath(), outPath)[ CD ]
Line_8 $$ String outPath = args.length == 3 ? args[2] : null-->Line_25 $$ writeInspectionDiff(null, result.getPath(), outPath)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_11 $$ if (oldResults.isDirectory() && newResults.isDirectory()) [ CD ]
Line_14 $$ for (File result : results) -->Line_15 $$ final String inspectionName = result.getName()[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_3 $$ if (args.length != 3 && args.length != 2) [ CD ]
Line_9 $$ final File oldResults = new File(oldPath)-->Line_11 $$ if (oldResults.isDirectory() && newResults.isDirectory()) [ FD ]
Line_14 $$ for (File result : results) -->Line_25 $$ writeInspectionDiff(null, result.getPath(), outPath)[ FD ]
Line_14 $$ for (File result : results) -->Line_19 $$ writeInspectionDiff(oldFile.getPath(), result.getPath(), outPath)[ FD ]
Line_2 $$ public static void main(String[] args) -->Line_7 $$ String newPath = args[1][ CD ]
Line_15 $$ final String inspectionName = result.getName()-->Line_18 $$ if (oldFile.getName().equals(inspectionName)) [ FD ]
Line_10 $$ final File newResults = new File(newPath)-->Line_11 $$ if (oldResults.isDirectory() && newResults.isDirectory()) [ FD ]
Line_16 $$ boolean found = false-->Line_24 $$ if (!found) [ FD ]
Line_11 $$ if (oldResults.isDirectory() && newResults.isDirectory()) -->Line_12 $$ final File[] old = oldResults.listFiles()[ CD ]
Line_24 $$ if (!found) -->Line_25 $$ writeInspectionDiff(null, result.getPath(), outPath)[ CD ]
Line_17 $$ for (File oldFile : old) -->Line_18 $$ if (oldFile.getName().equals(inspectionName)) [ FD ]
Line_9 $$ final File oldResults = new File(oldPath)-->Line_12 $$ final File[] old = oldResults.listFiles()[ FD ]
