Line_7 $$ if (javaHome.getName().equalsIgnoreCase("jre")) -->Line_8 $$ javaHome = javaHome.getParentFile()[ CD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_24 $$ return null[ CD ]
Line_15 $$ String version = SystemProperties.getInstance().getJavaVersion()-->Line_16 $$ if (javaHome.getName().matches("jre\\d+") || javaHome.getName().equals(String.format("jre%s", version))) [ FD ]
Line_3 $$ File toolsJar = new File(javaHome, "lib/tools.jar")-->Line_19 $$ if (toolsJar.exists()) [ FD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_16 $$ if (javaHome.getName().matches("jre\\d+") || javaHome.getName().equals(String.format("jre%s", version))) [ FD ]
Line_3 $$ File toolsJar = new File(javaHome, "lib/tools.jar")-->Line_10 $$ if (toolsJar.exists()) [ FD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_4 $$ if (toolsJar.exists()) [ CD ]
Line_16 $$ if (javaHome.getName().matches("jre\\d+") || javaHome.getName().equals(String.format("jre%s", version))) -->Line_18 $$ toolsJar = new File(javaHome, "lib/tools.jar")[ CD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_8 $$ javaHome = javaHome.getParentFile()[ FD ]
Line_9 $$ toolsJar = new File(javaHome, "lib/tools.jar")-->Line_10 $$ if (toolsJar.exists()) [ FD ]
Line_8 $$ javaHome = javaHome.getParentFile()-->Line_16 $$ if (javaHome.getName().matches("jre\\d+") || javaHome.getName().equals(String.format("jre%s", version))) [ FD ]
Line_4 $$ if (toolsJar.exists()) -->Line_5 $$ return toolsJar[ CD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_14 $$ if (os.isWindows()) [ CD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_17 $$ javaHome = new File(javaHome.getParentFile(), String.format("jdk%s", version))[ FD ]
Line_14 $$ if (os.isWindows()) -->Line_16 $$ if (javaHome.getName().matches("jre\\d+") || javaHome.getName().equals(String.format("jre%s", version))) [ CD ]
Line_9 $$ toolsJar = new File(javaHome, "lib/tools.jar")-->Line_18 $$ toolsJar = new File(javaHome, "lib/tools.jar")[ FD ]
Line_10 $$ if (toolsJar.exists()) -->Line_11 $$ return toolsJar[ CD ]
Line_14 $$ if (os.isWindows()) -->Line_15 $$ String version = SystemProperties.getInstance().getJavaVersion()[ CD ]
Line_3 $$ File toolsJar = new File(javaHome, "lib/tools.jar")-->Line_18 $$ toolsJar = new File(javaHome, "lib/tools.jar")[ FD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_7 $$ if (javaHome.getName().equalsIgnoreCase("jre")) [ CD ]
Line_7 $$ if (javaHome.getName().equalsIgnoreCase("jre")) -->Line_9 $$ toolsJar = new File(javaHome, "lib/tools.jar")[ CD ]
Line_19 $$ if (toolsJar.exists()) -->Line_20 $$ return toolsJar[ CD ]
Line_3 $$ File toolsJar = new File(javaHome, "lib/tools.jar")-->Line_9 $$ toolsJar = new File(javaHome, "lib/tools.jar")[ FD ]
Line_3 $$ File toolsJar = new File(javaHome, "lib/tools.jar")-->Line_4 $$ if (toolsJar.exists()) [ FD ]
Line_7 $$ if (javaHome.getName().equalsIgnoreCase("jre")) -->Line_10 $$ if (toolsJar.exists()) [ CD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_7 $$ if (javaHome.getName().equalsIgnoreCase("jre")) [ FD ]
Line_16 $$ if (javaHome.getName().matches("jre\\d+") || javaHome.getName().equals(String.format("jre%s", version))) -->Line_17 $$ javaHome = new File(javaHome.getParentFile(), String.format("jdk%s", version))[ CD ]
Line_8 $$ javaHome = javaHome.getParentFile()-->Line_17 $$ javaHome = new File(javaHome.getParentFile(), String.format("jdk%s", version))[ FD ]
Line_2 $$ private File findToolsJar(File javaHome) -->Line_3 $$ File toolsJar = new File(javaHome, "lib/tools.jar")[ CD ]
Line_16 $$ if (javaHome.getName().matches("jre\\d+") || javaHome.getName().equals(String.format("jre%s", version))) -->Line_19 $$ if (toolsJar.exists()) [ CD ]
Line_18 $$ toolsJar = new File(javaHome, "lib/tools.jar")-->Line_19 $$ if (toolsJar.exists()) [ FD ]
Line_9 $$ toolsJar = new File(javaHome, "lib/tools.jar")-->Line_19 $$ if (toolsJar.exists()) [ FD ]
Line_15 $$ String version = SystemProperties.getInstance().getJavaVersion()-->Line_17 $$ javaHome = new File(javaHome.getParentFile(), String.format("jdk%s", version))[ FD ]
