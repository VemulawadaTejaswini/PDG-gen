Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_6 $$ if (ddmTemplate != null) [ CD ]
Line_3 $$ String fileName = FileUtil.stripExtension(file.getName())-->Line_5 $$ DDMTemplate ddmTemplate = DDMTemplateLocalServiceUtil.fetchTemplate(groupId, classNameId, getKey(fileName))[ FD ]
Line_18 $$ if (!updateModeEnabled || (ddmTemplate == null)) -->Line_19 $$ DDMTemplateLocalServiceUtil.addTemplate(userId, groupId, classNameId, 0, PortalUtil.getClassNameId(JournalArticle.class), getKey(fileName), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, false, StringPool.BLANK, null, serviceContext)[ CD ]
Line_8 $$ if (_log.isInfoEnabled()) -->Line_9 $$ _log.info("DDM template with name " + name + " and version " + version + " already exists")[ CD ]
Line_3 $$ String fileName = FileUtil.stripExtension(file.getName())-->Line_19 $$ DDMTemplateLocalServiceUtil.addTemplate(userId, groupId, classNameId, 0, PortalUtil.getClassNameId(JournalArticle.class), getKey(fileName), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, false, StringPool.BLANK, null, serviceContext)[ FD ]
Line_18 $$ if (!updateModeEnabled || (ddmTemplate == null)) -->Line_21 $$ DDMTemplateLocalServiceUtil.updateTemplate(userId, ddmTemplate.getTemplateId(), ddmTemplate.getClassPK(), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, serviceContext)[ CD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_3 $$ String fileName = FileUtil.stripExtension(file.getName())[ CD ]
Line_24 $$ if (_log.isWarnEnabled()) -->Line_25 $$ _log.warn("Unable to import application display template " + file.getName(), e)[ CD ]
Line_5 $$ DDMTemplate ddmTemplate = DDMTemplateLocalServiceUtil.fetchTemplate(groupId, classNameId, getKey(fileName))-->Line_6 $$ if (ddmTemplate != null) [ FD ]
Line_4 $$ String name = getName(fileName)-->Line_21 $$ DDMTemplateLocalServiceUtil.updateTemplate(userId, ddmTemplate.getTemplateId(), ddmTemplate.getClassPK(), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, serviceContext)[ FD ]
Line_6 $$ if (ddmTemplate != null) -->Line_13 $$ if (!updateModeEnabled) [ CD ]
Line_3 $$ String fileName = FileUtil.stripExtension(file.getName())-->Line_4 $$ String name = getName(fileName)[ FD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_4 $$ String name = getName(fileName)[ CD ]
Line_7 $$ if (!developerModeEnabled) -->Line_11 $$ return[ CD ]
Line_6 $$ if (ddmTemplate != null) -->Line_7 $$ if (!developerModeEnabled) [ CD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_3 $$ String fileName = FileUtil.stripExtension(file.getName())[ FD ]
Line_4 $$ String name = getName(fileName)-->Line_19 $$ DDMTemplateLocalServiceUtil.addTemplate(userId, groupId, classNameId, 0, PortalUtil.getClassNameId(JournalArticle.class), getKey(fileName), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, false, StringPool.BLANK, null, serviceContext)[ FD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_5 $$ DDMTemplate ddmTemplate = DDMTemplateLocalServiceUtil.fetchTemplate(groupId, classNameId, getKey(fileName))[ FD ]
Line_5 $$ DDMTemplate ddmTemplate = DDMTemplateLocalServiceUtil.fetchTemplate(groupId, classNameId, getKey(fileName))-->Line_21 $$ DDMTemplateLocalServiceUtil.updateTemplate(userId, ddmTemplate.getTemplateId(), ddmTemplate.getClassPK(), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, serviceContext)[ FD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_25 $$ _log.warn("Unable to import application display template " + file.getName(), e)[ FD ]
Line_5 $$ DDMTemplate ddmTemplate = DDMTemplateLocalServiceUtil.fetchTemplate(groupId, classNameId, getKey(fileName))-->Line_14 $$ DDMTemplateLocalServiceUtil.deleteTemplate(ddmTemplate)[ FD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_5 $$ DDMTemplate ddmTemplate = DDMTemplateLocalServiceUtil.fetchTemplate(groupId, classNameId, getKey(fileName))[ CD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_21 $$ DDMTemplateLocalServiceUtil.updateTemplate(userId, ddmTemplate.getTemplateId(), ddmTemplate.getClassPK(), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, serviceContext)[ FD ]
Line_13 $$ if (!updateModeEnabled) -->Line_14 $$ DDMTemplateLocalServiceUtil.deleteTemplate(ddmTemplate)[ CD ]
Line_2 $$ protected void addApplicationDisplayTemplate(String script, File file, long classNameId) throws PortalException -->Line_19 $$ DDMTemplateLocalServiceUtil.addTemplate(userId, groupId, classNameId, 0, PortalUtil.getClassNameId(JournalArticle.class), getKey(fileName), getMap(name), null, DDMTemplateConstants.TEMPLATE_TYPE_DISPLAY, StringPool.BLANK, getDDMTemplateLanguage(file.getName()), script, false, false, StringPool.BLANK, null, serviceContext)[ FD ]
Line_7 $$ if (!developerModeEnabled) -->Line_8 $$ if (_log.isInfoEnabled()) [ CD ]
