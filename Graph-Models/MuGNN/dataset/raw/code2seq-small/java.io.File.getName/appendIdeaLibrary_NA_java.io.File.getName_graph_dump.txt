Line_6 $$ final File lib = new File(path)-->Line_8 $$ File[] jars = lib.listFiles()[ FD ]
Line_13 $$ VirtualFile file = jfs.findFileByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR)-->Line_15 $$ result.add(file)[ FD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_4 $$ final String path = libDirPath + File.separator + LIB_DIR_NAME[ CD ]
Line_6 $$ final File lib = new File(path)-->Line_7 $$ if (lib.isDirectory()) [ FD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_15 $$ result.add(file)[ FD ]
Line_7 $$ if (lib.isDirectory()) -->Line_9 $$ if (jars != null) [ CD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_12 $$ if (jar.isFile() && Arrays.binarySearch(forbidden, name) < 0 && (name.endsWith(".jar") || name.endsWith(".zip"))) [ FD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_5 $$ final JarFileSystem jfs = JarFileSystem.getInstance()[ CD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_3 $$ Arrays.sort(forbidden)[ CD ]
Line_11 $$ String name = jar.getName()-->Line_12 $$ if (jar.isFile() && Arrays.binarySearch(forbidden, name) < 0 && (name.endsWith(".jar") || name.endsWith(".zip"))) [ FD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_7 $$ if (lib.isDirectory()) [ CD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_6 $$ final File lib = new File(path)[ CD ]
Line_12 $$ if (jar.isFile() && Arrays.binarySearch(forbidden, name) < 0 && (name.endsWith(".jar") || name.endsWith(".zip"))) -->Line_14 $$ LOG.assertTrue(file != null, jar.getPath() + " not found")[ CD ]
Line_5 $$ final JarFileSystem jfs = JarFileSystem.getInstance()-->Line_13 $$ VirtualFile file = jfs.findFileByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR)[ FD ]
Line_8 $$ File[] jars = lib.listFiles()-->Line_9 $$ if (jars != null) [ FD ]
Line_2 $$ private static void appendIdeaLibrary(final String libDirPath, final ArrayList<VirtualFile> result, @NonNls final String... forbidden) -->Line_3 $$ Arrays.sort(forbidden)[ FD ]
Line_12 $$ if (jar.isFile() && Arrays.binarySearch(forbidden, name) < 0 && (name.endsWith(".jar") || name.endsWith(".zip"))) -->Line_15 $$ result.add(file)[ CD ]
Line_10 $$ for (File jar : jars) -->Line_14 $$ LOG.assertTrue(file != null, jar.getPath() + " not found")[ FD ]
Line_12 $$ if (jar.isFile() && Arrays.binarySearch(forbidden, name) < 0 && (name.endsWith(".jar") || name.endsWith(".zip"))) -->Line_13 $$ VirtualFile file = jfs.findFileByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR)[ CD ]
Line_10 $$ for (File jar : jars) -->Line_11 $$ String name = jar.getName()[ FD ]
Line_10 $$ for (File jar : jars) -->Line_12 $$ if (jar.isFile() && Arrays.binarySearch(forbidden, name) < 0 && (name.endsWith(".jar") || name.endsWith(".zip"))) [ FD ]
Line_7 $$ if (lib.isDirectory()) -->Line_8 $$ File[] jars = lib.listFiles()[ CD ]
Line_10 $$ for (File jar : jars) -->Line_13 $$ VirtualFile file = jfs.findFileByPath(jar.getPath() + JarFileSystem.JAR_SEPARATOR)[ FD ]
