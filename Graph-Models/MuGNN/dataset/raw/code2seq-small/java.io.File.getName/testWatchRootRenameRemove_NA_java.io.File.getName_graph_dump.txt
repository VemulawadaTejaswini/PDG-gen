Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_13 $$ assertTrue(rootDir2.renameTo(rootDir))[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_5 $$ File rootDir2 = new File(topDir, "_" + rootDir.getName())[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_10 $$ assertTrue(rootDir.renameTo(rootDir2))[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_29 $$ delete(topDir)[ FD ]
Line_5 $$ File rootDir2 = new File(topDir, "_" + rootDir.getName())-->Line_11 $$ assertEvent(VFileEvent.class, rootDir.getPath(), rootDir2.getPath())[ FD ]
Line_7 $$ LocalFileSystem.WatchRequest request = watch(rootDir)-->Line_28 $$ unwatch(request)[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_17 $$ assertEvent(VFileDeleteEvent.class, rootDir.getPath())[ FD ]
Line_5 $$ File rootDir2 = new File(topDir, "_" + rootDir.getName())-->Line_10 $$ assertTrue(rootDir.renameTo(rootDir2))[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_19 $$ assertTrue(rootDir.mkdirs())[ FD ]
Line_2 $$ public void testWatchRootRenameRemove() throws Exception -->Line_7 $$ LocalFileSystem.WatchRequest request = watch(rootDir)[ CD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_7 $$ LocalFileSystem.WatchRequest request = watch(rootDir)[ FD ]
Line_2 $$ public void testWatchRootRenameRemove() throws Exception -->Line_6 $$ refresh(topDir)[ CD ]
Line_2 $$ public void testWatchRootRenameRemove() throws Exception -->Line_4 $$ File rootDir = createTestDir(topDir, "root")[ CD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_4 $$ File rootDir = createTestDir(topDir, "root")[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_11 $$ assertEvent(VFileEvent.class, rootDir.getPath(), rootDir2.getPath())[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_6 $$ refresh(topDir)[ FD ]
Line_5 $$ File rootDir2 = new File(topDir, "_" + rootDir.getName())-->Line_14 $$ assertEvent(VFileEvent.class, rootDir.getPath(), rootDir2.getPath())[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_22 $$ assertTrue(FileUtil.delete(topDir))[ FD ]
Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")-->Line_23 $$ assertEvent(VFileDeleteEvent.class, topDir.getPath())[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_16 $$ assertTrue(FileUtil.delete(rootDir))[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_20 $$ assertEvent(VFileCreateEvent.class, rootDir.getPath())[ FD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_14 $$ assertEvent(VFileEvent.class, rootDir.getPath(), rootDir2.getPath())[ FD ]
Line_2 $$ public void testWatchRootRenameRemove() throws Exception -->Line_5 $$ File rootDir2 = new File(topDir, "_" + rootDir.getName())[ CD ]
Line_2 $$ public void testWatchRootRenameRemove() throws Exception -->Line_3 $$ File topDir = createTestDir(myTempDirectory, "top")[ CD ]
Line_4 $$ File rootDir = createTestDir(topDir, "root")-->Line_25 $$ assertTrue(rootDir.mkdirs())[ FD ]
Line_5 $$ File rootDir2 = new File(topDir, "_" + rootDir.getName())-->Line_13 $$ assertTrue(rootDir2.renameTo(rootDir))[ FD ]
