Line_5 $$ final File dir = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)-->Line_6 $$ File[] files = dir.listFiles(new FilenameFilter() [ FD ]
Line_2 $$ private static void deleteAllOtherRevisions(final VirtualFile file, final String storedFilename) -->Line_6 $$ File[] files = dir.listFiles(new FilenameFilter() [ CD ]
Line_6 $$ File[] files = dir.listFiles(new FilenameFilter() -->Line_8 $$ return (!storedFilename.equals(name)) && pattern.matcher(name).matches()[ CD ]
Line_3 $$ File ioFile = new File(file.getPath())-->Line_4 $$ final Pattern pattern = Pattern.compile("\\Q.#" + ioFile.getName() + ".\\E" + REVISION_PATTERN)[ FD ]
Line_2 $$ private static void deleteAllOtherRevisions(final VirtualFile file, final String storedFilename) -->Line_4 $$ final Pattern pattern = Pattern.compile("\\Q.#" + ioFile.getName() + ".\\E" + REVISION_PATTERN)[ CD ]
Line_2 $$ private static void deleteAllOtherRevisions(final VirtualFile file, final String storedFilename) -->Line_3 $$ File ioFile = new File(file.getPath())[ CD ]
Line_6 $$ File[] files = dir.listFiles(new FilenameFilter() -->Line_11 $$ if (files != null) [ FD ]
Line_2 $$ private static void deleteAllOtherRevisions(final VirtualFile file, final String storedFilename) -->Line_3 $$ File ioFile = new File(file.getPath())[ FD ]
Line_2 $$ private static void deleteAllOtherRevisions(final VirtualFile file, final String storedFilename) -->Line_8 $$ return (!storedFilename.equals(name)) && pattern.matcher(name).matches()[ FD ]
Line_4 $$ final Pattern pattern = Pattern.compile("\\Q.#" + ioFile.getName() + ".\\E" + REVISION_PATTERN)-->Line_8 $$ return (!storedFilename.equals(name)) && pattern.matcher(name).matches()[ FD ]
Line_2 $$ private static void deleteAllOtherRevisions(final VirtualFile file, final String storedFilename) -->Line_11 $$ if (files != null) [ CD ]
Line_6 $$ File[] files = dir.listFiles(new FilenameFilter() -->Line_8 $$ return (!storedFilename.equals(name)) && pattern.matcher(name).matches()[ FD ]
Line_2 $$ private static void deleteAllOtherRevisions(final VirtualFile file, final String storedFilename) -->Line_5 $$ final File dir = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)[ CD ]
Line_3 $$ File ioFile = new File(file.getPath())-->Line_5 $$ final File dir = new File(getAdminDir(ioFile.getParentFile()), BASE_REVISIONS_DIR)[ FD ]
