Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_3 $$ final CvsApplicationLevelConfiguration config = CvsApplicationLevelConfiguration.getInstance()[ CD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_7 $$ if (useAlternativeCheckoutDir && targetLocation.getParentFile() == null) [ CD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_11 $$ root = targetLocation.getParentFile()[ FD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_4 $$ final KeywordSubstitutionWrapper substitution = KeywordSubstitutionWrapper.getValue(config.CHECKOUT_KEYWORD_SUBSTITUTION)[ CD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_14 $$ root = targetLocation[ FD ]
Line_9 $$ directory = getModuleRootName(moduleName)-->Line_15 $$ directory = null[ FD ]
Line_5 $$ final File root-->Line_11 $$ root = targetLocation.getParentFile()[ FD ]
Line_7 $$ if (useAlternativeCheckoutDir && targetLocation.getParentFile() == null) -->Line_8 $$ root = targetLocation[ CD ]
Line_5 $$ final File root-->Line_14 $$ root = targetLocation[ FD ]
Line_6 $$ final String directory-->Line_15 $$ directory = null[ FD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_12 $$ directory = targetLocation.getName()[ FD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_9 $$ directory = getModuleRootName(moduleName)[ FD ]
Line_8 $$ root = targetLocation-->Line_14 $$ root = targetLocation[ FD ]
Line_10 $$ if (useAlternativeCheckoutDir) -->Line_14 $$ root = targetLocation[ CD ]
Line_6 $$ final String directory-->Line_9 $$ directory = getModuleRootName(moduleName)[ FD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_8 $$ root = targetLocation[ FD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_5 $$ final File root[ CD ]
Line_7 $$ if (useAlternativeCheckoutDir && targetLocation.getParentFile() == null) -->Line_10 $$ if (useAlternativeCheckoutDir) [ CD ]
Line_6 $$ final String directory-->Line_12 $$ directory = targetLocation.getName()[ FD ]
Line_11 $$ root = targetLocation.getParentFile()-->Line_14 $$ root = targetLocation[ FD ]
Line_7 $$ if (useAlternativeCheckoutDir && targetLocation.getParentFile() == null) -->Line_9 $$ directory = getModuleRootName(moduleName)[ CD ]
Line_10 $$ if (useAlternativeCheckoutDir) -->Line_11 $$ root = targetLocation.getParentFile()[ CD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_6 $$ final String directory[ CD ]
Line_10 $$ if (useAlternativeCheckoutDir) -->Line_12 $$ directory = targetLocation.getName()[ CD ]
Line_12 $$ directory = targetLocation.getName()-->Line_15 $$ directory = null[ FD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_7 $$ if (useAlternativeCheckoutDir && targetLocation.getParentFile() == null) [ FD ]
Line_10 $$ if (useAlternativeCheckoutDir) -->Line_15 $$ directory = null[ CD ]
Line_9 $$ directory = getModuleRootName(moduleName)-->Line_12 $$ directory = targetLocation.getName()[ FD ]
Line_2 $$ public static CheckoutProjectOperation create(CvsEnvironment env, String[] moduleName, File targetLocation, boolean useAlternativeCheckoutDir, boolean makeNewFilesReadOnly) -->Line_17 $$ return new CheckoutProjectOperation(moduleName, env, makeNewFilesReadOnly, root, directory, config.CHECKOUT_PRUNE_EMPTY_DIRECTORIES, substitution == null ? null : substitution.getSubstitution())[ CD ]
Line_4 $$ final KeywordSubstitutionWrapper substitution = KeywordSubstitutionWrapper.getValue(config.CHECKOUT_KEYWORD_SUBSTITUTION)-->Line_17 $$ return new CheckoutProjectOperation(moduleName, env, makeNewFilesReadOnly, root, directory, config.CHECKOUT_PRUNE_EMPTY_DIRECTORIES, substitution == null ? null : substitution.getSubstitution())[ FD ]
Line_5 $$ final File root-->Line_8 $$ root = targetLocation[ FD ]
Line_8 $$ root = targetLocation-->Line_11 $$ root = targetLocation.getParentFile()[ FD ]
