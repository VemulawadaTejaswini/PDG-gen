Line_2 $$ private static String checkProgramFiles() -->Line_4 $$ List<File> distrs = new ArrayList<File>()[ CD ]
Line_4 $$ List<File> distrs = new ArrayList<File>()-->Line_17 $$ Collections.sort(distrs, Collections.reverseOrder(new VersionDirsComparator()))[ FD ]
Line_2 $$ private static String checkProgramFiles() -->Line_3 $$ final String[] PROGRAM_FILES = [ CD ]
Line_7 $$ File[] children = pf.listFiles(new FileFilter() -->Line_15 $$ distrs.addAll(Arrays.asList(children))[ FD ]
Line_7 $$ File[] children = pf.listFiles(new FileFilter() -->Line_9 $$ return pathname.isDirectory() && pathname.getName().toLowerCase().startsWith("git")[ FD ]
Line_6 $$ File pf = new File(WIN_ROOT, programFiles)-->Line_12 $$ if (!pf.exists() || children == null) [ FD ]
Line_2 $$ private static String checkProgramFiles() -->Line_17 $$ Collections.sort(distrs, Collections.reverseOrder(new VersionDirsComparator()))[ CD ]
Line_20 $$ if (exec != null) -->Line_21 $$ return exec[ CD ]
Line_2 $$ private static String checkProgramFiles() -->Line_24 $$ return null[ CD ]
Line_7 $$ File[] children = pf.listFiles(new FileFilter() -->Line_9 $$ return pathname.isDirectory() && pathname.getName().toLowerCase().startsWith("git")[ CD ]
Line_6 $$ File pf = new File(WIN_ROOT, programFiles)-->Line_7 $$ File[] children = pf.listFiles(new FileFilter() [ FD ]
Line_4 $$ List<File> distrs = new ArrayList<File>()-->Line_15 $$ distrs.addAll(Arrays.asList(children))[ FD ]
