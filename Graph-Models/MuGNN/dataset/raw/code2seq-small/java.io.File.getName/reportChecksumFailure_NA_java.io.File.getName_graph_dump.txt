Line_6 $$ File parent = f.getParentFile()-->Line_9 $$ dir = parent[ FD ]
Line_31 $$ b = checkFile.renameTo(new File(badDir, checkFile.getName() + suffix))-->Line_32 $$ if (!b) [ FD ]
Line_25 $$ boolean b = f.renameTo(badFile)-->Line_26 $$ if (!b) [ FD ]
Line_2 $$ public boolean reportChecksumFailure(Path p, FSDataInputStream in, long inPos, FSDataInputStream sums, long sumsPos) -->Line_4 $$ File f = ((RawLocalFileSystem) fs).pathToFile(p).getCanonicalFile()[ FD ]
Line_16 $$ if (!badDir.mkdirs()) -->Line_17 $$ if (!badDir.isDirectory()) [ CD ]
Line_2 $$ public boolean reportChecksumFailure(Path p, FSDataInputStream in, long inPos, FSDataInputStream sums, long sumsPos) -->Line_24 $$ in.close()[ FD ]
Line_32 $$ if (!b) -->Line_33 $$ LOG.warn("Ignoring failure of renameTo")[ CD ]
Line_6 $$ File parent = f.getParentFile()-->Line_10 $$ parent = parent.getParentFile()[ FD ]
Line_10 $$ parent = parent.getParentFile()-->Line_8 $$ while (parent != null && FileUtil.canWrite(parent) && parent.toString().startsWith(device)) [ FD ]
Line_10 $$ parent = parent.getParentFile()-->Line_9 $$ dir = parent[ FD ]
Line_6 $$ File parent = f.getParentFile()-->Line_8 $$ while (parent != null && FileUtil.canWrite(parent) && parent.toString().startsWith(device)) [ FD ]
Line_25 $$ boolean b = f.renameTo(badFile)-->Line_32 $$ if (!b) [ FD ]
Line_2 $$ public boolean reportChecksumFailure(Path p, FSDataInputStream in, long inPos, FSDataInputStream sums, long sumsPos) -->Line_38 $$ return false[ CD ]
Line_29 $$ File checkFile = ((RawLocalFileSystem) fs).pathToFile(getChecksumFile(p))-->Line_31 $$ b = checkFile.renameTo(new File(badDir, checkFile.getName() + suffix))[ FD ]
Line_4 $$ File f = ((RawLocalFileSystem) fs).pathToFile(p).getCanonicalFile()-->Line_6 $$ File parent = f.getParentFile()[ FD ]
Line_2 $$ public boolean reportChecksumFailure(Path p, FSDataInputStream in, long inPos, FSDataInputStream sums, long sumsPos) -->Line_29 $$ File checkFile = ((RawLocalFileSystem) fs).pathToFile(getChecksumFile(p))[ FD ]
Line_9 $$ dir = parent-->Line_12 $$ if (dir == null) [ FD ]
Line_5 $$ String device = new DF(f, getConf()).getMount()-->Line_8 $$ while (parent != null && FileUtil.canWrite(parent) && parent.toString().startsWith(device)) [ FD ]
Line_15 $$ File badDir = new File(dir, "bad_files")-->Line_17 $$ if (!badDir.isDirectory()) [ FD ]
Line_4 $$ File f = ((RawLocalFileSystem) fs).pathToFile(p).getCanonicalFile()-->Line_22 $$ File badFile = new File(badDir, f.getName() + suffix)[ FD ]
Line_15 $$ File badDir = new File(dir, "bad_files")-->Line_18 $$ throw new IOException("Mkdirs failed to create " + badDir.toString())[ FD ]
Line_7 $$ File dir = null-->Line_9 $$ dir = parent[ FD ]
Line_15 $$ File badDir = new File(dir, "bad_files")-->Line_16 $$ if (!badDir.mkdirs()) [ FD ]
Line_4 $$ File f = ((RawLocalFileSystem) fs).pathToFile(p).getCanonicalFile()-->Line_25 $$ boolean b = f.renameTo(badFile)[ FD ]
Line_25 $$ boolean b = f.renameTo(badFile)-->Line_31 $$ b = checkFile.renameTo(new File(badDir, checkFile.getName() + suffix))[ FD ]
Line_8 $$ while (parent != null && FileUtil.canWrite(parent) && parent.toString().startsWith(device)) -->Line_10 $$ parent = parent.getParentFile()[ CD ]
Line_2 $$ public boolean reportChecksumFailure(Path p, FSDataInputStream in, long inPos, FSDataInputStream sums, long sumsPos) -->Line_30 $$ sums.close()[ FD ]
Line_8 $$ while (parent != null && FileUtil.canWrite(parent) && parent.toString().startsWith(device)) -->Line_9 $$ dir = parent[ CD ]
Line_7 $$ File dir = null-->Line_12 $$ if (dir == null) [ FD ]
Line_22 $$ File badFile = new File(badDir, f.getName() + suffix)-->Line_25 $$ boolean b = f.renameTo(badFile)[ FD ]
Line_26 $$ if (!b) -->Line_27 $$ LOG.warn("Ignoring failure of renameTo")[ CD ]
