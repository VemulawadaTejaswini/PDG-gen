Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_13 $$ String beforePath = ChangesUtil.getProjectRelativePath(myProject, beforeFile)[ CD ]
Line_4 $$ final ContentRevision afterRevision = change.getAfterRevision()-->Line_10 $$ FileUtil.copy(afterRevision.getFile().getIOFile(), shelvedFile)[ FD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_15 $$ return new ShelvedBinaryFile(beforePath, afterPath, shelvedPath)[ CD ]
Line_5 $$ File beforeFile = beforeRevision == null ? null : beforeRevision.getFile().getIOFile()-->Line_13 $$ String beforePath = ChangesUtil.getProjectRelativePath(myProject, beforeFile)[ FD ]
Line_6 $$ File afterFile = afterRevision == null ? null : afterRevision.getFile().getIOFile()-->Line_8 $$ if (afterFile != null) [ FD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_7 $$ String shelvedPath = null[ CD ]
Line_7 $$ String shelvedPath = null-->Line_11 $$ shelvedPath = shelvedFile.getPath()[ FD ]
Line_4 $$ final ContentRevision afterRevision = change.getAfterRevision()-->Line_6 $$ File afterFile = afterRevision == null ? null : afterRevision.getFile().getIOFile()[ FD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_4 $$ final ContentRevision afterRevision = change.getAfterRevision()[ CD ]
Line_9 $$ File shelvedFile = new File(schemePatchDir, afterFile.getName())-->Line_10 $$ FileUtil.copy(afterRevision.getFile().getIOFile(), shelvedFile)[ FD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_3 $$ final ContentRevision beforeRevision = change.getBeforeRevision()[ FD ]
Line_9 $$ File shelvedFile = new File(schemePatchDir, afterFile.getName())-->Line_11 $$ shelvedPath = shelvedFile.getPath()[ FD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_14 $$ String afterPath = ChangesUtil.getProjectRelativePath(myProject, afterFile)[ CD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_5 $$ File beforeFile = beforeRevision == null ? null : beforeRevision.getFile().getIOFile()[ CD ]
Line_8 $$ if (afterFile != null) -->Line_11 $$ shelvedPath = shelvedFile.getPath()[ CD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_6 $$ File afterFile = afterRevision == null ? null : afterRevision.getFile().getIOFile()[ CD ]
Line_6 $$ File afterFile = afterRevision == null ? null : afterRevision.getFile().getIOFile()-->Line_9 $$ File shelvedFile = new File(schemePatchDir, afterFile.getName())[ FD ]
Line_3 $$ final ContentRevision beforeRevision = change.getBeforeRevision()-->Line_5 $$ File beforeFile = beforeRevision == null ? null : beforeRevision.getFile().getIOFile()[ FD ]
Line_8 $$ if (afterFile != null) -->Line_10 $$ FileUtil.copy(afterRevision.getFile().getIOFile(), shelvedFile)[ CD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_3 $$ final ContentRevision beforeRevision = change.getBeforeRevision()[ CD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_8 $$ if (afterFile != null) [ CD ]
Line_6 $$ File afterFile = afterRevision == null ? null : afterRevision.getFile().getIOFile()-->Line_14 $$ String afterPath = ChangesUtil.getProjectRelativePath(myProject, afterFile)[ FD ]
Line_8 $$ if (afterFile != null) -->Line_9 $$ File shelvedFile = new File(schemePatchDir, afterFile.getName())[ CD ]
Line_2 $$ private ShelvedBinaryFile shelveBinaryFile(@NotNull File schemePatchDir, final Change change) throws IOException -->Line_4 $$ final ContentRevision afterRevision = change.getAfterRevision()[ FD ]
