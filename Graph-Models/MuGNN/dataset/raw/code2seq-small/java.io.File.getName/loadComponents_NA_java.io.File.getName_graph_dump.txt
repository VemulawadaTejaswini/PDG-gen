Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_5 $$ Runnable timingLog = TimingLog.startActivity("loading: " + configFile.getName() + ":" + serializer.getComponentName())[ FD ]
Line_6 $$ Element componentTag-->Line_10 $$ componentTag = null[ FD ]
Line_8 $$ componentTag = JDomSerializationUtil.findComponent(loadRootElement(configFile), serializer.getComponentName())-->Line_13 $$ serializer.loadExtension(element, componentTag)[ FD ]
Line_7 $$ if (configFile.exists()) -->Line_8 $$ componentTag = JDomSerializationUtil.findComponent(loadRootElement(configFile), serializer.getComponentName())[ CD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_13 $$ serializer.loadExtension(element, componentTag)[ FD ]
Line_10 $$ componentTag = null-->Line_12 $$ if (componentTag != null) [ FD ]
Line_6 $$ Element componentTag-->Line_13 $$ serializer.loadExtension(element, componentTag)[ FD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_3 $$ String fileName = serializer.getConfigFileName()[ CD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_6 $$ Element componentTag[ CD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_8 $$ componentTag = JDomSerializationUtil.findComponent(loadRootElement(configFile), serializer.getComponentName())[ FD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_15 $$ serializer.loadExtensionWithDefaultSettings(element)[ FD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_4 $$ File configFile = new File(dir, fileName != null ? fileName : defaultFileName)[ CD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_7 $$ if (configFile.exists()) [ CD ]
Line_10 $$ componentTag = null-->Line_13 $$ serializer.loadExtension(element, componentTag)[ FD ]
Line_7 $$ if (configFile.exists()) -->Line_10 $$ componentTag = null[ CD ]
Line_6 $$ Element componentTag-->Line_12 $$ if (componentTag != null) [ FD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_17 $$ timingLog.run()[ CD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_3 $$ String fileName = serializer.getConfigFileName()[ FD ]
Line_8 $$ componentTag = JDomSerializationUtil.findComponent(loadRootElement(configFile), serializer.getComponentName())-->Line_12 $$ if (componentTag != null) [ FD ]
Line_4 $$ File configFile = new File(dir, fileName != null ? fileName : defaultFileName)-->Line_8 $$ componentTag = JDomSerializationUtil.findComponent(loadRootElement(configFile), serializer.getComponentName())[ FD ]
Line_4 $$ File configFile = new File(dir, fileName != null ? fileName : defaultFileName)-->Line_7 $$ if (configFile.exists()) [ FD ]
Line_12 $$ if (componentTag != null) -->Line_13 $$ serializer.loadExtension(element, componentTag)[ CD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_5 $$ Runnable timingLog = TimingLog.startActivity("loading: " + configFile.getName() + ":" + serializer.getComponentName())[ CD ]
Line_4 $$ File configFile = new File(dir, fileName != null ? fileName : defaultFileName)-->Line_5 $$ Runnable timingLog = TimingLog.startActivity("loading: " + configFile.getName() + ":" + serializer.getComponentName())[ FD ]
Line_2 $$ protected <E extends JpsElement> void loadComponents(File dir, final String defaultFileName, JpsElementExtensionSerializerBase<E> serializer, final E element) -->Line_12 $$ if (componentTag != null) [ CD ]
Line_8 $$ componentTag = JDomSerializationUtil.findComponent(loadRootElement(configFile), serializer.getComponentName())-->Line_10 $$ componentTag = null[ FD ]
Line_6 $$ Element componentTag-->Line_8 $$ componentTag = JDomSerializationUtil.findComponent(loadRootElement(configFile), serializer.getComponentName())[ FD ]
Line_12 $$ if (componentTag != null) -->Line_15 $$ serializer.loadExtensionWithDefaultSettings(element)[ CD ]
Line_5 $$ Runnable timingLog = TimingLog.startActivity("loading: " + configFile.getName() + ":" + serializer.getComponentName())-->Line_17 $$ timingLog.run()[ FD ]
