Line_5 $$ RandomAccessFile randomAccessFile = null-->Line_11 $$ randomAccessFile = new RandomAccessFile(lockFile, "rw")[ FD ]
Line_14 $$ if (lock == null) -->Line_17 $$ Thread.sleep(pollIntervalMs)[ CD ]
Line_2 $$ public <T> T access(File exclusiveFile, Callable<T> task) throws Exception -->Line_21 $$ throw new RuntimeException("Timeout of " + timeoutMs + " reached waiting for exclusive access to file: " + exclusiveFile.getAbsolutePath())[ FD ]
Line_2 $$ public <T> T access(File exclusiveFile, Callable<T> task) throws Exception -->Line_5 $$ RandomAccessFile randomAccessFile = null[ CD ]
Line_12 $$ channel = randomAccessFile.getChannel()-->Line_27 $$ maybeCloseQuietly(channel)[ FD ]
Line_11 $$ randomAccessFile = new RandomAccessFile(lockFile, "rw")-->Line_16 $$ maybeCloseQuietly(randomAccessFile)[ FD ]
Line_28 $$ channel = null-->Line_33 $$ maybeCloseQuietly(channel)[ FD ]
Line_6 $$ FileChannel channel = null-->Line_15 $$ maybeCloseQuietly(channel)[ FD ]
Line_2 $$ public <T> T access(File exclusiveFile, Callable<T> task) throws Exception -->Line_24 $$ return task.call()[ FD ]
Line_11 $$ randomAccessFile = new RandomAccessFile(lockFile, "rw")-->Line_34 $$ maybeCloseQuietly(randomAccessFile)[ FD ]
Line_5 $$ RandomAccessFile randomAccessFile = null-->Line_29 $$ maybeCloseQuietly(randomAccessFile)[ FD ]
Line_10 $$ while (lock == null && System.currentTimeMillis() < startAt + timeoutMs) -->Line_11 $$ randomAccessFile = new RandomAccessFile(lockFile, "rw")[ CD ]
Line_2 $$ public <T> T access(File exclusiveFile, Callable<T> task) throws Exception -->Line_4 $$ lockFile.getParentFile().mkdirs()[ CD ]
Line_5 $$ RandomAccessFile randomAccessFile = null-->Line_34 $$ maybeCloseQuietly(randomAccessFile)[ FD ]
Line_10 $$ while (lock == null && System.currentTimeMillis() < startAt + timeoutMs) -->Line_14 $$ if (lock == null) [ CD ]
Line_10 $$ while (lock == null && System.currentTimeMillis() < startAt + timeoutMs) -->Line_13 $$ lock = channel.tryLock()[ CD ]
Line_14 $$ if (lock == null) -->Line_15 $$ maybeCloseQuietly(channel)[ CD ]
Line_11 $$ randomAccessFile = new RandomAccessFile(lockFile, "rw")-->Line_12 $$ channel = randomAccessFile.getChannel()[ FD ]
Line_30 $$ randomAccessFile = null-->Line_34 $$ maybeCloseQuietly(randomAccessFile)[ FD ]
Line_3 $$ final File lockFile = new File(exclusiveFile.getParentFile(), exclusiveFile.getName() + LOCK_FILE_SUFFIX)-->Line_4 $$ lockFile.getParentFile().mkdirs()[ FD ]
Line_6 $$ FileChannel channel = null-->Line_33 $$ maybeCloseQuietly(channel)[ FD ]
Line_11 $$ randomAccessFile = new RandomAccessFile(lockFile, "rw")-->Line_29 $$ maybeCloseQuietly(randomAccessFile)[ FD ]
Line_14 $$ if (lock == null) -->Line_16 $$ maybeCloseQuietly(randomAccessFile)[ CD ]
Line_9 $$ FileLock lock = null-->Line_26 $$ lock.release()[ FD ]
Line_2 $$ public <T> T access(File exclusiveFile, Callable<T> task) throws Exception -->Line_6 $$ FileChannel channel = null[ CD ]
Line_13 $$ lock = channel.tryLock()-->Line_14 $$ if (lock == null) [ FD ]
Line_5 $$ RandomAccessFile randomAccessFile = null-->Line_16 $$ maybeCloseQuietly(randomAccessFile)[ FD ]
Line_12 $$ channel = randomAccessFile.getChannel()-->Line_28 $$ channel = null[ FD ]
Line_5 $$ RandomAccessFile randomAccessFile = null-->Line_12 $$ channel = randomAccessFile.getChannel()[ FD ]
Line_9 $$ FileLock lock = null-->Line_20 $$ if (lock == null) [ FD ]
Line_2 $$ public <T> T access(File exclusiveFile, Callable<T> task) throws Exception -->Line_3 $$ final File lockFile = new File(exclusiveFile.getParentFile(), exclusiveFile.getName() + LOCK_FILE_SUFFIX)[ CD ]
Line_13 $$ lock = channel.tryLock()-->Line_20 $$ if (lock == null) [ FD ]
Line_6 $$ FileChannel channel = null-->Line_12 $$ channel = randomAccessFile.getChannel()[ FD ]
Line_12 $$ channel = randomAccessFile.getChannel()-->Line_13 $$ lock = channel.tryLock()[ FD ]
Line_9 $$ FileLock lock = null-->Line_14 $$ if (lock == null) [ FD ]
Line_11 $$ randomAccessFile = new RandomAccessFile(lockFile, "rw")-->Line_30 $$ randomAccessFile = null[ FD ]
Line_10 $$ while (lock == null && System.currentTimeMillis() < startAt + timeoutMs) -->Line_12 $$ channel = randomAccessFile.getChannel()[ CD ]
Line_13 $$ lock = channel.tryLock()-->Line_26 $$ lock.release()[ FD ]
Line_12 $$ channel = randomAccessFile.getChannel()-->Line_33 $$ maybeCloseQuietly(channel)[ FD ]
Line_6 $$ FileChannel channel = null-->Line_28 $$ channel = null[ FD ]
Line_6 $$ FileChannel channel = null-->Line_27 $$ maybeCloseQuietly(channel)[ FD ]
Line_9 $$ FileLock lock = null-->Line_13 $$ lock = channel.tryLock()[ FD ]
Line_5 $$ RandomAccessFile randomAccessFile = null-->Line_30 $$ randomAccessFile = null[ FD ]
Line_12 $$ channel = randomAccessFile.getChannel()-->Line_15 $$ maybeCloseQuietly(channel)[ FD ]
Line_6 $$ FileChannel channel = null-->Line_13 $$ lock = channel.tryLock()[ FD ]
Line_2 $$ public <T> T access(File exclusiveFile, Callable<T> task) throws Exception -->Line_3 $$ final File lockFile = new File(exclusiveFile.getParentFile(), exclusiveFile.getName() + LOCK_FILE_SUFFIX)[ FD ]
