Line_3 $$ if (ourProject != null) -->Line_17 $$ ProjectManagerEx.getInstanceEx().closeAndDispose(ourProject)[ CD ]
Line_10 $$ if (dir.getName().startsWith(UsefulTestCase.TEMP_DIR_MARKER)) -->Line_13 $$ FileUtil.delete(ioFile)[ CD ]
Line_6 $$ File ioFile = new File(ourProject.getProjectFilePath())-->Line_8 $$ if (ioFile.exists()) [ FD ]
Line_6 $$ File ioFile = new File(ourProject.getProjectFilePath())-->Line_9 $$ File dir = ioFile.getParentFile()[ FD ]
Line_19 $$ File parent = new File(ourPathToKeep).getParentFile()-->Line_21 $$ parent.delete()[ FD ]
Line_10 $$ if (dir.getName().startsWith(UsefulTestCase.TEMP_DIR_MARKER)) -->Line_11 $$ FileUtil.delete(dir)[ CD ]
Line_9 $$ File dir = ioFile.getParentFile()-->Line_11 $$ FileUtil.delete(dir)[ FD ]
Line_3 $$ if (ourProject != null) -->Line_18 $$ if (ourPathToKeep != null) [ CD ]
Line_3 $$ if (ourProject != null) -->Line_4 $$ ApplicationManager.getApplication().assertWriteAccessAllowed()[ CD ]
Line_5 $$ if (!ourProject.isDisposed()) -->Line_7 $$ Disposer.dispose(ourProject)[ CD ]
Line_8 $$ if (ioFile.exists()) -->Line_10 $$ if (dir.getName().startsWith(UsefulTestCase.TEMP_DIR_MARKER)) [ CD ]
Line_3 $$ if (ourProject != null) -->Line_5 $$ if (!ourProject.isDisposed()) [ CD ]
Line_8 $$ if (ioFile.exists()) -->Line_9 $$ File dir = ioFile.getParentFile()[ CD ]
Line_19 $$ File parent = new File(ourPathToKeep).getParentFile()-->Line_20 $$ if (parent.getName().startsWith(UsefulTestCase.TEMP_DIR_MARKER)) [ FD ]
Line_20 $$ if (parent.getName().startsWith(UsefulTestCase.TEMP_DIR_MARKER)) -->Line_21 $$ parent.delete()[ CD ]
Line_9 $$ File dir = ioFile.getParentFile()-->Line_10 $$ if (dir.getName().startsWith(UsefulTestCase.TEMP_DIR_MARKER)) [ FD ]
Line_18 $$ if (ourPathToKeep != null) -->Line_19 $$ File parent = new File(ourPathToKeep).getParentFile()[ CD ]
Line_5 $$ if (!ourProject.isDisposed()) -->Line_8 $$ if (ioFile.exists()) [ CD ]
Line_5 $$ if (!ourProject.isDisposed()) -->Line_6 $$ File ioFile = new File(ourProject.getProjectFilePath())[ CD ]
Line_2 $$ public static synchronized void closeAndDeleteProject() -->Line_3 $$ if (ourProject != null) [ CD ]
Line_6 $$ File ioFile = new File(ourProject.getProjectFilePath())-->Line_13 $$ FileUtil.delete(ioFile)[ FD ]
Line_18 $$ if (ourPathToKeep != null) -->Line_20 $$ if (parent.getName().startsWith(UsefulTestCase.TEMP_DIR_MARKER)) [ CD ]
