Line_2 $$ private void processSingleFile(File file, FileVisitor visitor, Spec<FileTreeElement> spec, AtomicBoolean stopFlag) -->Line_3 $$ RelativePath path = new RelativePath(true, file.getName())[ FD ]
Line_2 $$ private void processSingleFile(File file, FileVisitor visitor, Spec<FileTreeElement> spec, AtomicBoolean stopFlag) -->Line_3 $$ RelativePath path = new RelativePath(true, file.getName())[ CD ]
Line_4 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem, false)-->Line_6 $$ visitor.visitFile(details)[ FD ]
Line_2 $$ private void processSingleFile(File file, FileVisitor visitor, Spec<FileTreeElement> spec, AtomicBoolean stopFlag) -->Line_4 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem, false)[ CD ]
Line_2 $$ private void processSingleFile(File file, FileVisitor visitor, Spec<FileTreeElement> spec, AtomicBoolean stopFlag) -->Line_5 $$ if (isAllowed(details, spec)) [ FD ]
Line_2 $$ private void processSingleFile(File file, FileVisitor visitor, Spec<FileTreeElement> spec, AtomicBoolean stopFlag) -->Line_6 $$ visitor.visitFile(details)[ FD ]
Line_4 $$ FileVisitDetails details = new DefaultFileVisitDetails(file, path, stopFlag, fileSystem, fileSystem, false)-->Line_5 $$ if (isAllowed(details, spec)) [ FD ]
Line_5 $$ if (isAllowed(details, spec)) -->Line_6 $$ visitor.visitFile(details)[ CD ]
Line_2 $$ private void processSingleFile(File file, FileVisitor visitor, Spec<FileTreeElement> spec, AtomicBoolean stopFlag) -->Line_5 $$ if (isAllowed(details, spec)) [ CD ]
