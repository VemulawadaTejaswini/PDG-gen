Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_9 $$ buildWSDLTask.dependsOn(jarTask)[ CD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_6 $$ Task generateTask = addTaskBuildWSDLGenerate(buildWSDLTask, inputFile, tmpDir)[ CD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_9 $$ buildWSDLTask.dependsOn(jarTask)[ FD ]
Line_5 $$ File tmpDir = new File(project.getBuildDir(), tmpDirName)-->Line_7 $$ Task compileTask = addTaskBuildWSDLCompile(buildWSDLTask, inputFile, tmpDir, generateTask)[ FD ]
Line_8 $$ Task jarTask = addTaskBuildWSDLJar(buildWSDLTask, inputFile, compileTask, generateTask)-->Line_11 $$ taskOutputs.file(jarTask.getOutputs())[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_6 $$ Task generateTask = addTaskBuildWSDLGenerate(buildWSDLTask, inputFile, tmpDir)[ FD ]
Line_3 $$ Project project = buildWSDLTask.getProject()-->Line_5 $$ File tmpDir = new File(project.getBuildDir(), tmpDirName)[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_3 $$ Project project = buildWSDLTask.getProject()[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_11 $$ taskOutputs.file(jarTask.getOutputs())[ CD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_7 $$ Task compileTask = addTaskBuildWSDLCompile(buildWSDLTask, inputFile, tmpDir, generateTask)[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_7 $$ Task compileTask = addTaskBuildWSDLCompile(buildWSDLTask, inputFile, tmpDir, generateTask)[ CD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_5 $$ File tmpDir = new File(project.getBuildDir(), tmpDirName)[ CD ]
Line_7 $$ Task compileTask = addTaskBuildWSDLCompile(buildWSDLTask, inputFile, tmpDir, generateTask)-->Line_8 $$ Task jarTask = addTaskBuildWSDLJar(buildWSDLTask, inputFile, compileTask, generateTask)[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_8 $$ Task jarTask = addTaskBuildWSDLJar(buildWSDLTask, inputFile, compileTask, generateTask)[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_8 $$ Task jarTask = addTaskBuildWSDLJar(buildWSDLTask, inputFile, compileTask, generateTask)[ CD ]
Line_6 $$ Task generateTask = addTaskBuildWSDLGenerate(buildWSDLTask, inputFile, tmpDir)-->Line_7 $$ Task compileTask = addTaskBuildWSDLCompile(buildWSDLTask, inputFile, tmpDir, generateTask)[ FD ]
Line_6 $$ Task generateTask = addTaskBuildWSDLGenerate(buildWSDLTask, inputFile, tmpDir)-->Line_8 $$ Task jarTask = addTaskBuildWSDLJar(buildWSDLTask, inputFile, compileTask, generateTask)[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_4 $$ String tmpDirName = "build-wsdl/" + FileUtil.stripExtension(inputFile.getName())[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_4 $$ String tmpDirName = "build-wsdl/" + FileUtil.stripExtension(inputFile.getName())[ CD ]
Line_8 $$ Task jarTask = addTaskBuildWSDLJar(buildWSDLTask, inputFile, compileTask, generateTask)-->Line_9 $$ buildWSDLTask.dependsOn(jarTask)[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_3 $$ Project project = buildWSDLTask.getProject()[ CD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_10 $$ TaskOutputs taskOutputs = buildWSDLTask.getOutputs()[ FD ]
Line_10 $$ TaskOutputs taskOutputs = buildWSDLTask.getOutputs()-->Line_11 $$ taskOutputs.file(jarTask.getOutputs())[ FD ]
Line_5 $$ File tmpDir = new File(project.getBuildDir(), tmpDirName)-->Line_6 $$ Task generateTask = addTaskBuildWSDLGenerate(buildWSDLTask, inputFile, tmpDir)[ FD ]
Line_2 $$ protected void addTaskBuildWSDLTasks(BuildWSDLTask buildWSDLTask, File inputFile) -->Line_10 $$ TaskOutputs taskOutputs = buildWSDLTask.getOutputs()[ CD ]
