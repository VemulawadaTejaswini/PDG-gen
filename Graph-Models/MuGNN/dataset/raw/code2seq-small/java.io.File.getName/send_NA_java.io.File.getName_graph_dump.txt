Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_28 $$ InternetAddressUtil.validateAddress(from)[ FD ]
Line_81 $$ File file = fileAttachment.getFile()-->Line_92 $$ mimeBodyPart.setFileName(file.getName())[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_36 $$ InternetAddressUtil.validateAddresses(bcc)[ FD ]
Line_89 $$ if (fileAttachment.getFileName() != null) -->Line_90 $$ mimeBodyPart.setFileName(fileAttachment.getFileName())[ CD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_12 $$ _log.debug("HTML Format: " + htmlFormat)[ CD ]
Line_85 $$ MimeBodyPart mimeBodyPart = new MimeBodyPart()-->Line_87 $$ mimeBodyPart.setDataHandler(new DataHandler(dataSource))[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_97 $$ message.saveChanges()[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_3 $$ long startTime = System.currentTimeMillis()[ CD ]
Line_71 $$ MimeBodyPart bodyPart = new MimeBodyPart()-->Line_73 $$ messageMultipart.addBodyPart(bodyPart)[ FD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_99 $$ if (htmlFormat) [ CD ]
Line_81 $$ File file = fileAttachment.getFile()-->Line_82 $$ if (file == null) [ FD ]
Line_70 $$ if (htmlFormat) -->Line_77 $$ messageMultipart.addBodyPart(bodyPart)[ CD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_89 $$ if (fileAttachment.getFileName() != null) [ CD ]
Line_29 $$ if (ArrayUtil.isNotEmpty(to)) -->Line_30 $$ InternetAddressUtil.validateAddresses(to)[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_35 $$ if (ArrayUtil.isNotEmpty(bcc)) [ FD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_69 $$ rootMultipart.addBodyPart(messageBodyPart)[ CD ]
Line_65 $$ MimeMultipart rootMultipart = new MimeMultipart(_MULTIPART_TYPE_MIXED)-->Line_96 $$ message.setContent(rootMultipart)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_117 $$ _send(session, message, bulkAddresses, batchSize)[ FD ]
Line_66 $$ MimeMultipart messageMultipart = new MimeMultipart(_MULTIPART_TYPE_ALTERNATIVE)-->Line_73 $$ messageMultipart.addBodyPart(bodyPart)[ FD ]
Line_80 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_81 $$ File file = fileAttachment.getFile()[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_63 $$ message.setSubject(_sanitizeCRLF(subject))[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_13 $$ _log.debug("Reply to: " + Arrays.toString(replyTo))[ FD ]
Line_45 $$ if (smtpAccount == null) -->Line_46 $$ session = getSession()[ CD ]
Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_7 $$ _log.debug("CC: " + Arrays.toString(cc))[ FD ]
Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) [ FD ]
Line_46 $$ session = getSession()-->Line_117 $$ _send(session, message, bulkAddresses, batchSize)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_10 $$ _log.debug("Subject: " + subject)[ CD ]
Line_112 $$ if (inReplyTo != null) -->Line_114 $$ message.setHeader("References", _sanitizeCRLF(inReplyTo))[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_9 $$ _log.debug("List Addresses: " + Arrays.toString(bulkAddresses))[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_6 $$ _log.debug("To: " + Arrays.toString(to))[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_48 $$ session = getSession(smtpAccount)[ FD ]
Line_16 $$ if ((fileAttachments != null) && _log.isDebugEnabled()) -->Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) [ CD ]
Line_70 $$ if (htmlFormat) -->Line_73 $$ messageMultipart.addBodyPart(bodyPart)[ CD ]
Line_109 $$ if (messageId != null) -->Line_110 $$ message.setHeader("Message-ID", _sanitizeCRLF(messageId))[ CD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_110 $$ message.setHeader("Message-ID", _sanitizeCRLF(messageId))[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_107 $$ message.setReplyTo(replyTo)[ FD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_67 $$ MimeBodyPart messageBodyPart = new MimeBodyPart()[ CD ]
Line_89 $$ if (fileAttachment.getFileName() != null) -->Line_92 $$ mimeBodyPart.setFileName(file.getName())[ CD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_105 $$ message.setSentDate(new Date())[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_96 $$ message.setContent(rootMultipart)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_5 $$ _log.debug("From: " + from)[ CD ]
Line_19 $$ File file = fileAttachment.getFile()-->Line_92 $$ mimeBodyPart.setFileName(file.getName())[ FD ]
Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_23 $$ _log.debug("Attachment " + i + " file " + file.getAbsolutePath() + " and file name " + fileAttachment.getFileName())[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_109 $$ if (messageId != null) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_126 $$ if (_log.isDebugEnabled()) [ CD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_94 $$ rootMultipart.addBodyPart(mimeBodyPart)[ CD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_86 $$ DataSource dataSource = new FileDataSource(file)[ CD ]
Line_46 $$ session = getSession()-->Line_48 $$ session = getSession(smtpAccount)[ FD ]
Line_70 $$ if (htmlFormat) -->Line_76 $$ bodyPart.setText(body)[ CD ]
Line_71 $$ MimeBodyPart bodyPart = new MimeBodyPart()-->Line_77 $$ messageMultipart.addBodyPart(bodyPart)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_42 $$ InternetAddressUtil.validateAddresses(bulkAddresses)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) [ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_52 $$ message.setFrom(from)[ FD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_66 $$ MimeMultipart messageMultipart = new MimeMultipart(_MULTIPART_TYPE_ALTERNATIVE)[ CD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_57 $$ message.setRecipients(Message.RecipientType.CC, cc)[ FD ]
Line_116 $$ int batchSize = GetterUtil.getInteger(PropsUtil.get(PropsKeys.MAIL_BATCH_SIZE), _BATCH_SIZE)-->Line_117 $$ _send(session, message, bulkAddresses, batchSize)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_102 $$ message.setContent(body, _TEXT_PLAIN)[ FD ]
Line_62 $$ subject = GetterUtil.getString(subject)-->Line_63 $$ message.setSubject(_sanitizeCRLF(subject))[ FD ]
Line_48 $$ session = getSession(smtpAccount)-->Line_117 $$ _send(session, message, bulkAddresses, batchSize)[ FD ]
Line_44 $$ Session session = null-->Line_48 $$ session = getSession(smtpAccount)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_57 $$ message.setRecipients(Message.RecipientType.CC, cc)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_7 $$ _log.debug("CC: " + Arrays.toString(cc))[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_76 $$ bodyPart.setText(body)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_100 $$ message.setContent(body, _TEXT_HTML)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_100 $$ message.setContent(body, _TEXT_HTML)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_13 $$ _log.debug("Reply to: " + Arrays.toString(replyTo))[ CD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_70 $$ if (htmlFormat) [ CD ]
Line_80 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_90 $$ mimeBodyPart.setFileName(fileAttachment.getFileName())[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_51 $$ message.addHeader("X-Auto-Response-Suppress", "AutoReply, DR, NDR, NRN, OOF, RN")[ FD ]
Line_19 $$ File file = fileAttachment.getFile()-->Line_23 $$ _log.debug("Attachment " + i + " file " + file.getAbsolutePath() + " and file name " + fileAttachment.getFileName())[ FD ]
Line_65 $$ MimeMultipart rootMultipart = new MimeMultipart(_MULTIPART_TYPE_MIXED)-->Line_69 $$ rootMultipart.addBodyPart(messageBodyPart)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_113 $$ message.setHeader("In-Reply-To", _sanitizeCRLF(inReplyTo))[ FD ]
Line_41 $$ if (ArrayUtil.isNotEmpty(bulkAddresses)) -->Line_42 $$ InternetAddressUtil.validateAddresses(bulkAddresses)[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_32 $$ if (ArrayUtil.isNotEmpty(cc)) [ FD ]
Line_71 $$ MimeBodyPart bodyPart = new MimeBodyPart()-->Line_76 $$ bodyPart.setText(body)[ FD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_88 $$ mimeBodyPart.setDisposition(Part.ATTACHMENT)[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_106 $$ if (ArrayUtil.isNotEmpty(replyTo)) [ FD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_85 $$ MimeBodyPart mimeBodyPart = new MimeBodyPart()[ CD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_63 $$ message.setSubject(_sanitizeCRLF(subject))[ FD ]
Line_66 $$ MimeMultipart messageMultipart = new MimeMultipart(_MULTIPART_TYPE_ALTERNATIVE)-->Line_68 $$ messageBodyPart.setContent(messageMultipart)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_107 $$ message.setReplyTo(replyTo)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_60 $$ message.setRecipients(Message.RecipientType.BCC, bcc)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_80 $$ FileAttachment fileAttachment = fileAttachments.get(i)[ FD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_82 $$ if (file == null) [ CD ]
Line_59 $$ if (ArrayUtil.isNotEmpty(bcc)) -->Line_60 $$ message.setRecipients(Message.RecipientType.BCC, bcc)[ CD ]
Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_20 $$ if (file == null) [ CD ]
Line_66 $$ MimeMultipart messageMultipart = new MimeMultipart(_MULTIPART_TYPE_ALTERNATIVE)-->Line_77 $$ messageMultipart.addBodyPart(bodyPart)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_102 $$ message.setContent(body, _TEXT_PLAIN)[ FD ]
Line_70 $$ if (htmlFormat) -->Line_72 $$ bodyPart.setContent(body, _TEXT_HTML)[ CD ]
Line_85 $$ MimeBodyPart mimeBodyPart = new MimeBodyPart()-->Line_92 $$ mimeBodyPart.setFileName(file.getName())[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_56 $$ if (ArrayUtil.isNotEmpty(cc)) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_30 $$ InternetAddressUtil.validateAddresses(to)[ FD ]
Line_85 $$ MimeBodyPart mimeBodyPart = new MimeBodyPart()-->Line_90 $$ mimeBodyPart.setFileName(fileAttachment.getFileName())[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_33 $$ InternetAddressUtil.validateAddresses(cc)[ FD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_68 $$ messageBodyPart.setContent(messageMultipart)[ CD ]
Line_112 $$ if (inReplyTo != null) -->Line_113 $$ message.setHeader("In-Reply-To", _sanitizeCRLF(inReplyTo))[ CD ]
Line_32 $$ if (ArrayUtil.isNotEmpty(cc)) -->Line_33 $$ InternetAddressUtil.validateAddresses(cc)[ CD ]
Line_65 $$ MimeMultipart rootMultipart = new MimeMultipart(_MULTIPART_TYPE_MIXED)-->Line_94 $$ rootMultipart.addBodyPart(mimeBodyPart)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_29 $$ if (ArrayUtil.isNotEmpty(to)) [ FD ]
Line_56 $$ if (ArrayUtil.isNotEmpty(cc)) -->Line_57 $$ message.setRecipients(Message.RecipientType.CC, cc)[ CD ]
Line_85 $$ MimeBodyPart mimeBodyPart = new MimeBodyPart()-->Line_94 $$ rootMultipart.addBodyPart(mimeBodyPart)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_14 $$ _log.debug("Message ID: " + messageId)[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_4 $$ if (_log.isDebugEnabled()) [ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_62 $$ subject = GetterUtil.getString(subject)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_110 $$ message.setHeader("Message-ID", _sanitizeCRLF(messageId))[ FD ]
Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)[ CD ]
Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_19 $$ File file = fileAttachment.getFile()[ FD ]
Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_81 $$ File file = fileAttachment.getFile()[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_38 $$ if (ArrayUtil.isNotEmpty(replyTo)) [ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_6 $$ _log.debug("To: " + Arrays.toString(to))[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_113 $$ message.setHeader("In-Reply-To", _sanitizeCRLF(inReplyTo))[ FD ]
Line_106 $$ if (ArrayUtil.isNotEmpty(replyTo)) -->Line_107 $$ message.setReplyTo(replyTo)[ CD ]
Line_44 $$ Session session = null-->Line_46 $$ session = getSession()[ FD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_80 $$ FileAttachment fileAttachment = fileAttachments.get(i)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_114 $$ message.setHeader("References", _sanitizeCRLF(inReplyTo))[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_60 $$ message.setRecipients(Message.RecipientType.BCC, bcc)[ FD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_80 $$ FileAttachment fileAttachment = fileAttachments.get(i)[ CD ]
Line_19 $$ File file = fileAttachment.getFile()-->Line_20 $$ if (file == null) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_52 $$ message.setFrom(from)[ FD ]
Line_53 $$ if (ArrayUtil.isNotEmpty(to)) -->Line_54 $$ message.setRecipients(Message.RecipientType.TO, to)[ CD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_65 $$ MimeMultipart rootMultipart = new MimeMultipart(_MULTIPART_TYPE_MIXED)[ CD ]
Line_99 $$ if (htmlFormat) -->Line_102 $$ message.setContent(body, _TEXT_PLAIN)[ CD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_15 $$ _log.debug("In Reply To: " + inReplyTo)[ CD ]
Line_38 $$ if (ArrayUtil.isNotEmpty(replyTo)) -->Line_39 $$ InternetAddressUtil.validateAddresses(replyTo)[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_117 $$ _send(session, message, bulkAddresses, batchSize)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_11 $$ _log.debug("Body: " + body)[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_53 $$ if (ArrayUtil.isNotEmpty(to)) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_54 $$ message.setRecipients(Message.RecipientType.TO, to)[ FD ]
Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_19 $$ File file = fileAttachment.getFile()[ CD ]
Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_23 $$ _log.debug("Attachment " + i + " file " + file.getAbsolutePath() + " and file name " + fileAttachment.getFileName())[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_8 $$ _log.debug("BCC: " + Arrays.toString(bcc))[ FD ]
Line_126 $$ if (_log.isDebugEnabled()) -->Line_127 $$ _log.debug("Sending mail takes " + (System.currentTimeMillis() - startTime) + " ms")[ CD ]
Line_44 $$ Session session = null-->Line_117 $$ _send(session, message, bulkAddresses, batchSize)[ FD ]
Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_89 $$ if (fileAttachment.getFileName() != null) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_112 $$ if (inReplyTo != null) [ FD ]
Line_99 $$ if (htmlFormat) -->Line_100 $$ message.setContent(body, _TEXT_HTML)[ CD ]
Line_19 $$ File file = fileAttachment.getFile()-->Line_82 $$ if (file == null) [ FD ]
Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_90 $$ mimeBodyPart.setFileName(fileAttachment.getFileName())[ FD ]
Line_67 $$ MimeBodyPart messageBodyPart = new MimeBodyPart()-->Line_69 $$ rootMultipart.addBodyPart(messageBodyPart)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_8 $$ _log.debug("BCC: " + Arrays.toString(bcc))[ CD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_97 $$ message.saveChanges()[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) [ FD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) [ CD ]
Line_17 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_80 $$ FileAttachment fileAttachment = fileAttachments.get(i)[ FD ]
Line_80 $$ FileAttachment fileAttachment = fileAttachments.get(i)-->Line_89 $$ if (fileAttachment.getFileName() != null) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_39 $$ InternetAddressUtil.validateAddresses(replyTo)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_59 $$ if (ArrayUtil.isNotEmpty(bcc)) [ FD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_87 $$ mimeBodyPart.setDataHandler(new DataHandler(dataSource))[ CD ]
Line_70 $$ if (htmlFormat) -->Line_71 $$ MimeBodyPart bodyPart = new MimeBodyPart()[ CD ]
Line_64 $$ if (ListUtil.isNotEmpty(fileAttachments)) -->Line_96 $$ message.setContent(rootMultipart)[ CD ]
Line_71 $$ MimeBodyPart bodyPart = new MimeBodyPart()-->Line_72 $$ bodyPart.setContent(body, _TEXT_HTML)[ FD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_16 $$ if ((fileAttachments != null) && _log.isDebugEnabled()) [ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_72 $$ bodyPart.setContent(body, _TEXT_HTML)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_41 $$ if (ArrayUtil.isNotEmpty(bulkAddresses)) [ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_45 $$ if (smtpAccount == null) [ FD ]
Line_35 $$ if (ArrayUtil.isNotEmpty(bcc)) -->Line_36 $$ InternetAddressUtil.validateAddresses(bcc)[ CD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_9 $$ _log.debug("List Addresses: " + Arrays.toString(bulkAddresses))[ CD ]
Line_45 $$ if (smtpAccount == null) -->Line_48 $$ session = getSession(smtpAccount)[ CD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_18 $$ FileAttachment fileAttachment = fileAttachments.get(i)[ FD ]
Line_50 $$ Message message = new LiferayMimeMessage(session)-->Line_54 $$ message.setRecipients(Message.RecipientType.TO, to)[ FD ]
Line_2 $$ public static void send(InternetAddress from, InternetAddress[] to, InternetAddress[] cc, InternetAddress[] bcc, InternetAddress[] bulkAddresses, String subject, String body, boolean htmlFormat, InternetAddress[] replyTo, String messageId, String inReplyTo, List<FileAttachment> fileAttachments, SMTPAccount smtpAccount) throws MailEngineException -->Line_114 $$ message.setHeader("References", _sanitizeCRLF(inReplyTo))[ FD ]
Line_79 $$ for (int i = 0; i < fileAttachments.size(); i++) -->Line_81 $$ File file = fileAttachment.getFile()[ CD ]
Line_67 $$ MimeBodyPart messageBodyPart = new MimeBodyPart()-->Line_68 $$ messageBodyPart.setContent(messageMultipart)[ FD ]
Line_85 $$ MimeBodyPart mimeBodyPart = new MimeBodyPart()-->Line_88 $$ mimeBodyPart.setDisposition(Part.ATTACHMENT)[ FD ]
