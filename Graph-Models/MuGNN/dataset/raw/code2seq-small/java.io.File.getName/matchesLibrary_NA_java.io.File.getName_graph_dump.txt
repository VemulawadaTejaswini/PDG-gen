Line_6 $$ if (orderEntry instanceof LibraryOrderEntry) -->Line_17 $$ if (orderEntry instanceof JdkOrderEntry) [ CD ]
Line_2 $$ public static boolean matchesLibrary(final Pattern libPattern, final VirtualFile file, final ProjectFileIndex fileIndex) -->Line_3 $$ if (libPattern != null) [ CD ]
Line_2 $$ public static boolean matchesLibrary(final Pattern libPattern, final VirtualFile file, final ProjectFileIndex fileIndex) -->Line_4 $$ final List<OrderEntry> entries = fileIndex.getOrderEntriesForFile(file)[ FD ]
Line_17 $$ if (orderEntry instanceof JdkOrderEntry) -->Line_19 $$ if (jdkName != null && libPattern.matcher(jdkName).matches())[ CD ]
Line_19 $$ if (jdkName != null && libPattern.matcher(jdkName).matches())-->Line_20 $$ return true[ CD ]
Line_8 $$ if (libraryName != null) -->Line_13 $$ final String fileName = new File(presentableName).getName()[ CD ]
Line_2 $$ public static boolean matchesLibrary(final Pattern libPattern, final VirtualFile file, final ProjectFileIndex fileIndex) -->Line_14 $$ if (libPattern.matcher(fileName).matches())[ FD ]
Line_7 $$ final String libraryName = ((LibraryOrderEntry) orderEntry).getLibraryName()-->Line_8 $$ if (libraryName != null) [ FD ]
Line_3 $$ if (libPattern != null) -->Line_23 $$ return false[ CD ]
Line_7 $$ final String libraryName = ((LibraryOrderEntry) orderEntry).getLibraryName()-->Line_9 $$ if (libPattern.matcher(libraryName).matches())[ FD ]
Line_5 $$ for (OrderEntry orderEntry : entries) -->Line_12 $$ final String presentableName = orderEntry.getPresentableName()[ FD ]
Line_14 $$ if (libPattern.matcher(fileName).matches())-->Line_15 $$ return true[ CD ]
Line_8 $$ if (libraryName != null) -->Line_14 $$ if (libPattern.matcher(fileName).matches())[ CD ]
Line_8 $$ if (libraryName != null) -->Line_9 $$ if (libPattern.matcher(libraryName).matches())[ CD ]
Line_5 $$ for (OrderEntry orderEntry : entries) -->Line_6 $$ if (orderEntry instanceof LibraryOrderEntry) [ FD ]
Line_2 $$ public static boolean matchesLibrary(final Pattern libPattern, final VirtualFile file, final ProjectFileIndex fileIndex) -->Line_25 $$ return true[ CD ]
Line_18 $$ final String jdkName = ((JdkOrderEntry) orderEntry).getJdkName()-->Line_19 $$ if (jdkName != null && libPattern.matcher(jdkName).matches())[ FD ]
Line_9 $$ if (libPattern.matcher(libraryName).matches())-->Line_10 $$ return true[ CD ]
Line_8 $$ if (libraryName != null) -->Line_12 $$ final String presentableName = orderEntry.getPresentableName()[ CD ]
Line_6 $$ if (orderEntry instanceof LibraryOrderEntry) -->Line_8 $$ if (libraryName != null) [ CD ]
Line_5 $$ for (OrderEntry orderEntry : entries) -->Line_17 $$ if (orderEntry instanceof JdkOrderEntry) [ FD ]
Line_2 $$ public static boolean matchesLibrary(final Pattern libPattern, final VirtualFile file, final ProjectFileIndex fileIndex) -->Line_3 $$ if (libPattern != null) [ FD ]
Line_13 $$ final String fileName = new File(presentableName).getName()-->Line_14 $$ if (libPattern.matcher(fileName).matches())[ FD ]
Line_17 $$ if (orderEntry instanceof JdkOrderEntry) -->Line_18 $$ final String jdkName = ((JdkOrderEntry) orderEntry).getJdkName()[ CD ]
Line_2 $$ public static boolean matchesLibrary(final Pattern libPattern, final VirtualFile file, final ProjectFileIndex fileIndex) -->Line_9 $$ if (libPattern.matcher(libraryName).matches())[ FD ]
Line_3 $$ if (libPattern != null) -->Line_4 $$ final List<OrderEntry> entries = fileIndex.getOrderEntriesForFile(file)[ CD ]
Line_6 $$ if (orderEntry instanceof LibraryOrderEntry) -->Line_7 $$ final String libraryName = ((LibraryOrderEntry) orderEntry).getLibraryName()[ CD ]
Line_2 $$ public static boolean matchesLibrary(final Pattern libPattern, final VirtualFile file, final ProjectFileIndex fileIndex) -->Line_19 $$ if (jdkName != null && libPattern.matcher(jdkName).matches())[ FD ]
