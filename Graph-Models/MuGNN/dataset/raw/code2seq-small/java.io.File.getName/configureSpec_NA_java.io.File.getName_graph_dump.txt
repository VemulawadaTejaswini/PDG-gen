Line_4 $$ if (preCompiledHeader != null) -->Line_8 $$ spec.setPreCompiledHeaderObjectFile(new File(pchDir, pchObjectFile.getName()))[ CD ]
Line_2 $$ protected void configureSpec(NativeCompileSpec spec) -->Line_3 $$ super.configureSpec(spec)[ CD ]
Line_2 $$ protected void configureSpec(NativeCompileSpec spec) -->Line_9 $$ spec.setPreCompiledHeader(DefaultInclude.parse(preCompiledHeader.getIncludeString(), true).getValue())[ FD ]
Line_4 $$ if (preCompiledHeader != null) -->Line_9 $$ spec.setPreCompiledHeader(DefaultInclude.parse(preCompiledHeader.getIncludeString(), true).getValue())[ CD ]
Line_2 $$ protected void configureSpec(NativeCompileSpec spec) -->Line_4 $$ if (preCompiledHeader != null) [ CD ]
Line_4 $$ if (preCompiledHeader != null) -->Line_7 $$ spec.setPrefixHeaderFile(new File(pchDir, preCompiledHeader.getPrefixHeaderFile().getName()))[ CD ]
Line_2 $$ protected void configureSpec(NativeCompileSpec spec) -->Line_7 $$ spec.setPrefixHeaderFile(new File(pchDir, preCompiledHeader.getPrefixHeaderFile().getName()))[ FD ]
Line_5 $$ File pchObjectFile = preCompiledHeader.getObjectFile()-->Line_6 $$ File pchDir = PCHUtils.generatePCHObjectDirectory(spec.getTempDir(), preCompiledHeader.getPrefixHeaderFile(), pchObjectFile)[ FD ]
Line_2 $$ protected void configureSpec(NativeCompileSpec spec) -->Line_3 $$ super.configureSpec(spec)[ FD ]
Line_2 $$ protected void configureSpec(NativeCompileSpec spec) -->Line_8 $$ spec.setPreCompiledHeaderObjectFile(new File(pchDir, pchObjectFile.getName()))[ FD ]
Line_4 $$ if (preCompiledHeader != null) -->Line_6 $$ File pchDir = PCHUtils.generatePCHObjectDirectory(spec.getTempDir(), preCompiledHeader.getPrefixHeaderFile(), pchObjectFile)[ CD ]
Line_4 $$ if (preCompiledHeader != null) -->Line_5 $$ File pchObjectFile = preCompiledHeader.getObjectFile()[ CD ]
Line_5 $$ File pchObjectFile = preCompiledHeader.getObjectFile()-->Line_8 $$ spec.setPreCompiledHeaderObjectFile(new File(pchDir, pchObjectFile.getName()))[ FD ]
Line_2 $$ protected void configureSpec(NativeCompileSpec spec) -->Line_6 $$ File pchDir = PCHUtils.generatePCHObjectDirectory(spec.getTempDir(), preCompiledHeader.getPrefixHeaderFile(), pchObjectFile)[ FD ]
