Line_4 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_16 $$ quickFixTestCase.afterActionCompleted(testName, contents)[ FD ]
Line_4 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_10 $$ quickFixTestCase.beforeActionStarted(testName, contents)[ FD ]
Line_4 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_5 $$ quickFixTestCase.configureFromFileText(testFile.getName(), contents)[ FD ]
Line_8 $$ final String text = pair.getFirst()-->Line_13 $$ quickFixTestCase.doAction(text, actionShouldBeAvailable, testFullPath, testName)[ FD ]
Line_4 $$ String contents = StringUtil.convertLineSeparators(FileUtil.loadFile(testFile, CharsetToolkit.UTF8_CHARSET))-->Line_7 $$ final Pair<String, Boolean> pair = quickFixTestCase.parseActionHintImpl(quickFixTestCase.getFile(), contents)[ FD ]
Line_7 $$ final Pair<String, Boolean> pair = quickFixTestCase.parseActionHintImpl(quickFixTestCase.getFile(), contents)-->Line_9 $$ final boolean actionShouldBeAvailable = pair.getSecond().booleanValue()[ FD ]
Line_9 $$ final boolean actionShouldBeAvailable = pair.getSecond().booleanValue()-->Line_13 $$ quickFixTestCase.doAction(text, actionShouldBeAvailable, testFullPath, testName)[ FD ]
Line_7 $$ final Pair<String, Boolean> pair = quickFixTestCase.parseActionHintImpl(quickFixTestCase.getFile(), contents)-->Line_8 $$ final String text = pair.getFirst()[ FD ]
