Line_4 $$ final List<VirtualFile> jars = new ArrayList<VirtualFile>()-->Line_11 $$ ContainerUtil.addIfNotNull(jars, LocalFileSystem.getInstance().refreshAndFindFileByIoFile(libFile))[ FD ]
Line_10 $$ if (libFile.exists() && libFile.getName().endsWith(".jar")) -->Line_11 $$ ContainerUtil.addIfNotNull(jars, LocalFileSystem.getInstance().refreshAndFindFileByIoFile(libFile))[ CD ]
Line_4 $$ final List<VirtualFile> jars = new ArrayList<VirtualFile>()-->Line_22 $$ jarCount = jars.size()[ FD ]
Line_2 $$ protected void notifyProcessTerminated(int exitCode) -->Line_36 $$ super.notifyProcessTerminated(exitCode)[ FD ]
Line_8 $$ final URL url = new URL(line.substring(GrapeRunner.URL_PREFIX.length()))-->Line_9 $$ final File libFile = new File(url.toURI())[ FD ]
Line_9 $$ final File libFile = new File(url.toURI())-->Line_10 $$ if (libFile.exists() && libFile.getName().endsWith(".jar")) [ FD ]
Line_20 $$ new WriteAction() -->Line_30 $$ if (!jars.isEmpty()) [ CD ]
Line_4 $$ final List<VirtualFile> jars = new ArrayList<VirtualFile>()-->Line_30 $$ if (!jars.isEmpty()) [ FD ]
Line_9 $$ final File libFile = new File(url.toURI())-->Line_11 $$ ContainerUtil.addIfNotNull(jars, LocalFileSystem.getInstance().refreshAndFindFileByIoFile(libFile))[ FD ]
Line_5 $$ for (String line : myStdOut.toString().split("\n")) -->Line_6 $$ if (line.startsWith(GrapeRunner.URL_PREFIX)) [ FD ]
Line_20 $$ new WriteAction() -->Line_24 $$ if (jarCount != 1) [ CD ]
Line_4 $$ final List<VirtualFile> jars = new ArrayList<VirtualFile>()-->Line_31 $$ addGrapeDependencies(jars)[ FD ]
Line_20 $$ new WriteAction() -->Line_22 $$ jarCount = jars.size()[ CD ]
Line_30 $$ if (!jars.isEmpty()) -->Line_31 $$ addGrapeDependencies(jars)[ CD ]
Line_5 $$ for (String line : myStdOut.toString().split("\n")) -->Line_8 $$ final URL url = new URL(line.substring(GrapeRunner.URL_PREFIX.length()))[ FD ]
Line_20 $$ new WriteAction() -->Line_27 $$ if (jarCount == 0) [ CD ]
