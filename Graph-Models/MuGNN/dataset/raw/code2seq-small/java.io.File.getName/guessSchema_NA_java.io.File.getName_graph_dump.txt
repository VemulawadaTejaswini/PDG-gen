Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_17 $$ int i = Comparing.compare(o1.getValue().hasTag(tagName), o2.getValue().hasTag(tagName))[ FD ]
Line_11 $$ if (fileName != null) -->Line_12 $$ int i = Comparing.compare(fileName.equals(o1.getFile().getName()), fileName.equals(o2.getFile().getName()))[ CD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_24 $$ return o1.getValue().getRating(tagName, version) - o2.getValue().getRating(tagName, version)[ FD ]
Line_16 $$ if (tagName != null) -->Line_18 $$ if (i != 0)[ CD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_27 $$ if (tagName != null && !resource.getValue().hasTag(tagName)) [ FD ]
Line_11 $$ if (fileName != null) -->Line_13 $$ if (i != 0)[ CD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_3 $$ final List<IndexedRelevantResource<String, XsdNamespaceBuilder>> resources = getResourcesByNamespace(namespace, project, module)[ FD ]
Line_3 $$ final List<IndexedRelevantResource<String, XsdNamespaceBuilder>> resources = getResourcesByNamespace(namespace, project, module)-->Line_7 $$ return resources.get(0)[ FD ]
Line_3 $$ final List<IndexedRelevantResource<String, XsdNamespaceBuilder>> resources = getResourcesByNamespace(namespace, project, module)-->Line_6 $$ if (resources.size() == 1)[ FD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_17 $$ int i = Comparing.compare(o1.getValue().hasTag(tagName), o2.getValue().hasTag(tagName))[ FD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_21 $$ int i = o1.compareTo(o2)[ CD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_16 $$ if (tagName != null) [ CD ]
Line_27 $$ if (tagName != null && !resource.getValue().hasTag(tagName)) -->Line_28 $$ return null[ CD ]
Line_13 $$ if (i != 0)-->Line_14 $$ return i[ CD ]
Line_3 $$ final List<IndexedRelevantResource<String, XsdNamespaceBuilder>> resources = getResourcesByNamespace(namespace, project, module)-->Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() [ FD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_27 $$ if (tagName != null && !resource.getValue().hasTag(tagName)) [ CD ]
Line_8 $$ final String fileName = schemaLocation == null ? null : new File(schemaLocation).getName()-->Line_11 $$ if (fileName != null) [ FD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_16 $$ if (tagName != null) [ FD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() [ CD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_27 $$ if (tagName != null && !resource.getValue().hasTag(tagName)) [ FD ]
Line_6 $$ if (resources.size() == 1)-->Line_7 $$ return resources.get(0)[ CD ]
Line_3 $$ final List<IndexedRelevantResource<String, XsdNamespaceBuilder>> resources = getResourcesByNamespace(namespace, project, module)-->Line_4 $$ if (resources.isEmpty())[ FD ]
Line_22 $$ if (i != 0)-->Line_23 $$ return i[ CD ]
Line_4 $$ if (resources.isEmpty())-->Line_5 $$ return null[ CD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_11 $$ if (fileName != null) [ CD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_3 $$ final List<IndexedRelevantResource<String, XsdNamespaceBuilder>> resources = getResourcesByNamespace(namespace, project, module)[ CD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_12 $$ int i = Comparing.compare(fileName.equals(o1.getFile().getName()), fileName.equals(o2.getFile().getName()))[ FD ]
Line_12 $$ int i = Comparing.compare(fileName.equals(o1.getFile().getName()), fileName.equals(o2.getFile().getName()))-->Line_13 $$ if (i != 0)[ FD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_30 $$ return resource[ CD ]
Line_12 $$ int i = Comparing.compare(fileName.equals(o1.getFile().getName()), fileName.equals(o2.getFile().getName()))-->Line_18 $$ if (i != 0)[ FD ]
Line_16 $$ if (tagName != null) -->Line_17 $$ int i = Comparing.compare(o1.getValue().hasTag(tagName), o2.getValue().hasTag(tagName))[ CD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_24 $$ return o1.getValue().getRating(tagName, version) - o2.getValue().getRating(tagName, version)[ FD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_24 $$ return o1.getValue().getRating(tagName, version) - o2.getValue().getRating(tagName, version)[ CD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_4 $$ if (resources.isEmpty())[ CD ]
Line_18 $$ if (i != 0)-->Line_19 $$ return i[ CD ]
Line_8 $$ final String fileName = schemaLocation == null ? null : new File(schemaLocation).getName()-->Line_12 $$ int i = Comparing.compare(fileName.equals(o1.getFile().getName()), fileName.equals(o2.getFile().getName()))[ FD ]
Line_12 $$ int i = Comparing.compare(fileName.equals(o1.getFile().getName()), fileName.equals(o2.getFile().getName()))-->Line_22 $$ if (i != 0)[ FD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_22 $$ if (i != 0)[ CD ]
Line_9 $$ IndexedRelevantResource<String, XsdNamespaceBuilder> resource = Collections.max(resources, new Comparator<IndexedRelevantResource<String, XsdNamespaceBuilder>>() -->Line_21 $$ int i = o1.compareTo(o2)[ FD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_6 $$ if (resources.size() == 1)[ CD ]
Line_2 $$ public static IndexedRelevantResource<String, XsdNamespaceBuilder> guessSchema(String namespace, @Nullable final String tagName, @Nullable final String version, @Nullable String schemaLocation, @Nullable Module module, @NotNull Project project) -->Line_8 $$ final String fileName = schemaLocation == null ? null : new File(schemaLocation).getName()[ CD ]
