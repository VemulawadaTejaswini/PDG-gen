Line_12 $$ wrapped1AltText = file1.getName()-->Line_41 $$ diversifyName(wrapped1AltText, wrapped1, file1)[ FD ]
Line_27 $$ file2 = file2.getParentFile()-->Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()[ FD ]
Line_34 $$ if (file2 == null) -->Line_35 $$ wrapped2.nextFile()[ CD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_3 $$ if (!wrapped1.prepare() || !wrapped2.prepare()) [ CD ]
Line_21 $$ if (StringUtil.isEmpty(wrapped2AltText)) -->Line_22 $$ wrapped2AltText = file2.getName()[ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_37 $$ wrapped2.library.setExternalName(file2.getName() + NAME_SEPARATOR + wrapped2.library.getExternalName())[ FD ]
Line_6 $$ String wrapped1AltText = null-->Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_34 $$ if (file2 == null) [ CD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_30 $$ wrapped1.nextFile()[ FD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_35 $$ wrapped2.nextFile()[ FD ]
Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()-->Line_21 $$ if (StringUtil.isEmpty(wrapped2AltText)) [ FD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_9 $$ while (file1 != null && !StringUtil.isEmpty(file1.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file1.getName())) [ FD ]
Line_7 $$ String wrapped2AltText = null-->Line_22 $$ wrapped2AltText = file2.getName()[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_10 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file1.getName())) [ FD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_7 $$ String wrapped2AltText = null[ CD ]
Line_10 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file1.getName())) -->Line_11 $$ if (StringUtil.isEmpty(wrapped1AltText)) [ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_19 $$ while (file2 != null && !StringUtil.isEmpty(file2.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file2.getName())) [ FD ]
Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()-->Line_40 $$ if (wrapped1AltText != null) [ FD ]
Line_22 $$ wrapped2AltText = file2.getName()-->Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()[ FD ]
Line_27 $$ file2 = file2.getParentFile()-->Line_36 $$ if (!wrapped2.library.getExternalName().startsWith(file2.getName())) [ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_44 $$ diversifyName(wrapped2AltText, wrapped2, file1)[ FD ]
Line_27 $$ file2 = file2.getParentFile()-->Line_20 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file2.getName())) [ FD ]
Line_34 $$ if (file2 == null) -->Line_36 $$ if (!wrapped2.library.getExternalName().startsWith(file2.getName())) [ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_27 $$ file2 = file2.getParentFile()[ FD ]
Line_7 $$ String wrapped2AltText = null-->Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()[ FD ]
Line_22 $$ wrapped2AltText = file2.getName()-->Line_43 $$ if (wrapped2AltText != null) [ FD ]
Line_21 $$ if (StringUtil.isEmpty(wrapped2AltText)) -->Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()[ CD ]
Line_50 $$ if (file1 == null || file2 == null) -->Line_51 $$ return[ CD ]
Line_27 $$ file2 = file2.getParentFile()-->Line_22 $$ wrapped2AltText = file2.getName()[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_20 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file2.getName())) [ FD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_29 $$ if (file1 == null) [ FD ]
Line_36 $$ if (!wrapped2.library.getExternalName().startsWith(file2.getName())) -->Line_37 $$ wrapped2.library.setExternalName(file2.getName() + NAME_SEPARATOR + wrapped2.library.getExternalName())[ CD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_3 $$ if (!wrapped1.prepare() || !wrapped2.prepare()) [ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_29 $$ if (file1 == null) [ CD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_44 $$ diversifyName(wrapped2AltText, wrapped2, file1)[ FD ]
Line_39 $$ if (wrapped1.library.getExternalName().equals(wrapped2.library.getExternalName())) -->Line_40 $$ if (wrapped1AltText != null) [ CD ]
Line_27 $$ file2 = file2.getParentFile()-->Line_34 $$ if (file2 == null) [ FD ]
Line_6 $$ String wrapped1AltText = null-->Line_12 $$ wrapped1AltText = file1.getName()[ FD ]
Line_40 $$ if (wrapped1AltText != null) -->Line_42 $$ return[ CD ]
Line_22 $$ wrapped2AltText = file2.getName()-->Line_21 $$ if (StringUtil.isEmpty(wrapped2AltText)) [ FD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_44 $$ diversifyName(wrapped2AltText, wrapped2, file1)[ FD ]
Line_39 $$ if (wrapped1.library.getExternalName().equals(wrapped2.library.getExternalName())) -->Line_48 $$ return[ CD ]
Line_7 $$ String wrapped2AltText = null-->Line_44 $$ diversifyName(wrapped2AltText, wrapped2, file1)[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_12 $$ wrapped1AltText = file1.getName()[ FD ]
Line_11 $$ if (StringUtil.isEmpty(wrapped1AltText)) -->Line_12 $$ wrapped1AltText = file1.getName()[ CD ]
Line_19 $$ while (file2 != null && !StringUtil.isEmpty(file2.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file2.getName())) -->Line_20 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file2.getName())) [ CD ]
Line_29 $$ if (file1 == null) -->Line_30 $$ wrapped1.nextFile()[ CD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) [ CD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_41 $$ diversifyName(wrapped1AltText, wrapped1, file1)[ FD ]
Line_43 $$ if (wrapped2AltText != null) -->Line_45 $$ return[ CD ]
Line_27 $$ file2 = file2.getParentFile()-->Line_37 $$ wrapped2.library.setExternalName(file2.getName() + NAME_SEPARATOR + wrapped2.library.getExternalName())[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_36 $$ if (!wrapped2.library.getExternalName().startsWith(file2.getName())) [ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_22 $$ wrapped2AltText = file2.getName()[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_39 $$ if (wrapped1.library.getExternalName().equals(wrapped2.library.getExternalName())) [ CD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_41 $$ diversifyName(wrapped1AltText, wrapped1, file1)[ FD ]
Line_12 $$ wrapped1AltText = file1.getName()-->Line_11 $$ if (StringUtil.isEmpty(wrapped1AltText)) [ FD ]
Line_40 $$ if (wrapped1AltText != null) -->Line_41 $$ diversifyName(wrapped1AltText, wrapped1, file1)[ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_32 $$ wrapped1.library.setExternalName(file1.getName() + NAME_SEPARATOR + wrapped1.library.getExternalName())[ FD ]
Line_19 $$ while (file2 != null && !StringUtil.isEmpty(file2.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file2.getName())) -->Line_27 $$ file2 = file2.getParentFile()[ CD ]
Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()-->Line_44 $$ diversifyName(wrapped2AltText, wrapped2, file1)[ FD ]
Line_7 $$ String wrapped2AltText = null-->Line_43 $$ if (wrapped2AltText != null) [ FD ]
Line_3 $$ if (!wrapped1.prepare() || !wrapped2.prepare()) -->Line_4 $$ return[ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_9 $$ while (file1 != null && !StringUtil.isEmpty(file1.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file1.getName())) [ CD ]
Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()-->Line_41 $$ diversifyName(wrapped1AltText, wrapped1, file1)[ FD ]
Line_6 $$ String wrapped1AltText = null-->Line_41 $$ diversifyName(wrapped1AltText, wrapped1, file1)[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_50 $$ if (file1 == null || file2 == null) [ CD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_10 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file1.getName())) [ FD ]
Line_9 $$ while (file1 != null && !StringUtil.isEmpty(file1.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file1.getName())) -->Line_17 $$ file1 = file1.getParentFile()[ CD ]
Line_6 $$ String wrapped1AltText = null-->Line_40 $$ if (wrapped1AltText != null) [ FD ]
Line_22 $$ wrapped2AltText = file2.getName()-->Line_44 $$ diversifyName(wrapped2AltText, wrapped2, file1)[ FD ]
Line_43 $$ if (wrapped2AltText != null) -->Line_44 $$ diversifyName(wrapped2AltText, wrapped2, file1)[ CD ]
Line_20 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file2.getName())) -->Line_21 $$ if (StringUtil.isEmpty(wrapped2AltText)) [ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_31 $$ if (!wrapped1.library.getExternalName().startsWith(file1.getName())) [ FD ]
Line_12 $$ wrapped1AltText = file1.getName()-->Line_40 $$ if (wrapped1AltText != null) [ FD ]
Line_11 $$ if (StringUtil.isEmpty(wrapped1AltText)) -->Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()[ CD ]
Line_2 $$ private static void mixNames(@NotNull Wrapped wrapped1, @NotNull Wrapped wrapped2) -->Line_6 $$ String wrapped1AltText = null[ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_17 $$ file1 = file1.getParentFile()[ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_19 $$ while (file2 != null && !StringUtil.isEmpty(file2.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file2.getName())) [ CD ]
Line_6 $$ String wrapped1AltText = null-->Line_11 $$ if (StringUtil.isEmpty(wrapped1AltText)) [ FD ]
Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()-->Line_43 $$ if (wrapped2AltText != null) [ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_34 $$ if (file2 == null) [ FD ]
Line_40 $$ if (wrapped1AltText != null) -->Line_43 $$ if (wrapped2AltText != null) [ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_9 $$ while (file1 != null && !StringUtil.isEmpty(file1.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file1.getName())) [ FD ]
Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()-->Line_11 $$ if (StringUtil.isEmpty(wrapped1AltText)) [ FD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_41 $$ diversifyName(wrapped1AltText, wrapped1, file1)[ FD ]
Line_7 $$ String wrapped2AltText = null-->Line_21 $$ if (StringUtil.isEmpty(wrapped2AltText)) [ FD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_31 $$ if (!wrapped1.library.getExternalName().startsWith(file1.getName())) [ FD ]
Line_9 $$ while (file1 != null && !StringUtil.isEmpty(file1.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file1.getName())) -->Line_10 $$ if (NON_UNIQUE_PATH_ENTRIES.get(file1.getName())) [ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_24 $$ wrapped2AltText += NAME_SEPARATOR + file2.getName()[ FD ]
Line_29 $$ if (file1 == null) -->Line_31 $$ if (!wrapped1.library.getExternalName().startsWith(file1.getName())) [ CD ]
Line_8 $$ for (File file1 = wrapped1.currentFile, file2 = wrapped2.currentFile; file1 != null && file2 != null; file1 = file1.getParentFile(), file2 = file2.getParentFile()) -->Line_29 $$ if (file1 == null) [ FD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_12 $$ wrapped1AltText = file1.getName()[ FD ]
Line_12 $$ wrapped1AltText = file1.getName()-->Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()[ FD ]
Line_27 $$ file2 = file2.getParentFile()-->Line_19 $$ while (file2 != null && !StringUtil.isEmpty(file2.getName()) && NON_UNIQUE_PATH_ENTRIES.containsKey(file2.getName())) [ FD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_32 $$ wrapped1.library.setExternalName(file1.getName() + NAME_SEPARATOR + wrapped1.library.getExternalName())[ FD ]
Line_17 $$ file1 = file1.getParentFile()-->Line_14 $$ wrapped1AltText += NAME_SEPARATOR + file1.getName()[ FD ]
Line_31 $$ if (!wrapped1.library.getExternalName().startsWith(file1.getName())) -->Line_32 $$ wrapped1.library.setExternalName(file1.getName() + NAME_SEPARATOR + wrapped1.library.getExternalName())[ CD ]
