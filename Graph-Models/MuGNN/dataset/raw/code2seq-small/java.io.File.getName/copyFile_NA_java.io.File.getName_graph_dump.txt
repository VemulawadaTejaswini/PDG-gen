Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_4 $$ if (shouldFilter && file.length() > FILTERING_SIZE_LIMIT) [ FD ]
Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_3 $$ boolean shouldFilter = rootConfiguration.isFiltered && !myFilteringExcludedExtensions.contains(FileUtilRt.getExtension(file.getName())) && filteringFilter.accept(file)[ CD ]
Line_3 $$ boolean shouldFilter = rootConfiguration.isFiltered && !myFilteringExcludedExtensions.contains(FileUtilRt.getExtension(file.getName())) && filteringFilter.accept(file)-->Line_4 $$ if (shouldFilter && file.length() > FILTERING_SIZE_LIMIT) [ FD ]
Line_3 $$ boolean shouldFilter = rootConfiguration.isFiltered && !myFilteringExcludedExtensions.contains(FileUtilRt.getExtension(file.getName())) && filteringFilter.accept(file)-->Line_6 $$ shouldFilter = false[ FD ]
Line_8 $$ if (shouldFilter) -->Line_9 $$ copyWithFiltering(file, targetFile)[ CD ]
Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_5 $$ context.processMessage(new CompilerMessage("MavenResources", BuildMessage.Kind.WARNING, "File is too big to be filtered. Most likely it is a binary file and should be excluded from filtering", file.getPath()))[ FD ]
Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_11 $$ FileUtil.copyContent(file, targetFile)[ FD ]
Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_4 $$ if (shouldFilter && file.length() > FILTERING_SIZE_LIMIT) [ CD ]
Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_9 $$ copyWithFiltering(file, targetFile)[ FD ]
Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_8 $$ if (shouldFilter) [ CD ]
Line_4 $$ if (shouldFilter && file.length() > FILTERING_SIZE_LIMIT) -->Line_6 $$ shouldFilter = false[ CD ]
Line_8 $$ if (shouldFilter) -->Line_11 $$ FileUtil.copyContent(file, targetFile)[ CD ]
Line_4 $$ if (shouldFilter && file.length() > FILTERING_SIZE_LIMIT) -->Line_5 $$ context.processMessage(new CompilerMessage("MavenResources", BuildMessage.Kind.WARNING, "File is too big to be filtered. Most likely it is a binary file and should be excluded from filtering", file.getPath()))[ CD ]
Line_2 $$ public void copyFile(File file, File targetFile, ResourceRootConfiguration rootConfiguration, CompileContext context, FileFilter filteringFilter) throws IOException -->Line_3 $$ boolean shouldFilter = rootConfiguration.isFiltered && !myFilteringExcludedExtensions.contains(FileUtilRt.getExtension(file.getName())) && filteringFilter.accept(file)[ FD ]
