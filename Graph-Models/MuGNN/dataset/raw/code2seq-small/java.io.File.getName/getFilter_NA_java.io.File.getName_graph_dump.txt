Line_16 $$ Set<Component> previous = components.get(pair.left)-->Line_19 $$ components.put(pair.left, previous)[ FD ]
Line_17 $$ if (previous == null) -->Line_19 $$ components.put(pair.left, previous)[ CD ]
Line_14 $$ if (!pair.left.ksname.equals(metadata.ksName) || !pair.left.cfname.equals(metadata.cfName))-->Line_15 $$ return false[ CD ]
Line_11 $$ Pair<Descriptor, Component> pair = SSTable.tryComponentFromFilename(file.getParentFile(), file.getName())-->Line_12 $$ if (pair == null)[ FD ]
Line_16 $$ Set<Component> previous = components.get(pair.left)-->Line_17 $$ if (previous == null) [ FD ]
Line_8 $$ if (skipTemporary)-->Line_9 $$ return false[ CD ]
Line_18 $$ previous = new HashSet()-->Line_19 $$ components.put(pair.left, previous)[ FD ]
Line_18 $$ previous = new HashSet()-->Line_27 $$ previous.add(pair.right)[ FD ]
Line_21 $$ if (pair.right != pair.left.digestComponent) -->Line_22 $$ components.remove(pair.left)[ CD ]
Line_16 $$ Set<Component> previous = components.get(pair.left)-->Line_27 $$ previous.add(pair.right)[ FD ]
Line_12 $$ if (pair == null)-->Line_13 $$ return false[ CD ]
Line_2 $$ private BiFunction<File, FileType, Boolean> getFilter() -->Line_3 $$ return ( file,  type) -> [ CD ]
Line_16 $$ Set<Component> previous = components.get(pair.left)-->Line_24 $$ components.put(updated, previous)[ FD ]
Line_17 $$ if (previous == null) -->Line_20 $$ if (pair.right.type == Component.Type.DIGEST) [ CD ]
Line_21 $$ if (pair.right != pair.left.digestComponent) -->Line_24 $$ components.put(updated, previous)[ CD ]
Line_16 $$ Set<Component> previous = components.get(pair.left)-->Line_18 $$ previous = new HashSet()[ FD ]
Line_23 $$ Descriptor updated = pair.left.withDigestComponent(pair.right)-->Line_24 $$ components.put(updated, previous)[ FD ]
Line_17 $$ if (previous == null) -->Line_18 $$ previous = new HashSet()[ CD ]
Line_21 $$ if (pair.right != pair.left.digestComponent) -->Line_23 $$ Descriptor updated = pair.left.withDigestComponent(pair.right)[ CD ]
Line_20 $$ if (pair.right.type == Component.Type.DIGEST) -->Line_21 $$ if (pair.right != pair.left.digestComponent) [ CD ]
Line_18 $$ previous = new HashSet()-->Line_24 $$ components.put(updated, previous)[ FD ]
