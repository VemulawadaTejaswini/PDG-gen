Line_2 $$ private void assertFileEqual(File file, String relativePath) -->Line_7 $$ ZipUtil.extract(file, dirForExtracted, null)[ FD ]
Line_5 $$ if (myArchive) -->Line_6 $$ final File dirForExtracted = FileUtil.createTempDirectory("extracted_archive", null, false)[ CD ]
Line_2 $$ private void assertFileEqual(File file, String relativePath) -->Line_4 $$ Assert.assertEquals("in " + relativePath, myName, file.getName())[ FD ]
Line_6 $$ final File dirForExtracted = FileUtil.createTempDirectory("extracted_archive", null, false)-->Line_7 $$ ZipUtil.extract(file, dirForExtracted, null)[ FD ]
Line_5 $$ if (myArchive) -->Line_10 $$ if (myDirectory) [ CD ]
Line_13 $$ if (myContent != null) -->Line_15 $$ Assert.assertEquals("content mismatch for " + relativePath, myContent, content)[ CD ]
Line_14 $$ final String content = FileUtil.loadFile(file)-->Line_15 $$ Assert.assertEquals("content mismatch for " + relativePath, myContent, content)[ FD ]
Line_10 $$ if (myDirectory) -->Line_13 $$ if (myContent != null) [ CD ]
Line_5 $$ if (myArchive) -->Line_7 $$ ZipUtil.extract(file, dirForExtracted, null)[ CD ]
Line_10 $$ if (myDirectory) -->Line_11 $$ Assert.assertTrue(relativePath + file.getName() + " is not a directory", file.isDirectory())[ CD ]
Line_6 $$ final File dirForExtracted = FileUtil.createTempDirectory("extracted_archive", null, false)-->Line_9 $$ FileUtil.delete(dirForExtracted)[ FD ]
Line_2 $$ private void assertFileEqual(File file, String relativePath) -->Line_11 $$ Assert.assertTrue(relativePath + file.getName() + " is not a directory", file.isDirectory())[ FD ]
Line_2 $$ private void assertFileEqual(File file, String relativePath) -->Line_14 $$ final String content = FileUtil.loadFile(file)[ FD ]
Line_2 $$ private void assertFileEqual(File file, String relativePath) -->Line_12 $$ assertDirectoryEqual(file, relativePath)[ FD ]
Line_2 $$ private void assertFileEqual(File file, String relativePath) -->Line_8 $$ assertDirectoryEqual(dirForExtracted, relativePath)[ FD ]
Line_13 $$ if (myContent != null) -->Line_14 $$ final String content = FileUtil.loadFile(file)[ CD ]
Line_5 $$ if (myArchive) -->Line_9 $$ FileUtil.delete(dirForExtracted)[ CD ]
Line_5 $$ if (myArchive) -->Line_8 $$ assertDirectoryEqual(dirForExtracted, relativePath)[ CD ]
Line_10 $$ if (myDirectory) -->Line_12 $$ assertDirectoryEqual(file, relativePath)[ CD ]
Line_6 $$ final File dirForExtracted = FileUtil.createTempDirectory("extracted_archive", null, false)-->Line_8 $$ assertDirectoryEqual(dirForExtracted, relativePath)[ FD ]
