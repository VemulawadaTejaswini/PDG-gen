Line_5 $$ AtomicFileOutputStream afos = new AtomicFileOutputStream(md5File)-->Line_7 $$ afos.close()[ FD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_7 $$ afos.close()[ CD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_3 $$ File md5File = getDigestFileForFile(dataFile)[ FD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_6 $$ afos.write(md5Line.getBytes(Charsets.UTF_8))[ CD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_4 $$ String md5Line = digestString + " *" + dataFile.getName() + "\n"[ CD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_4 $$ String md5Line = digestString + " *" + dataFile.getName() + "\n"[ FD ]
Line_5 $$ AtomicFileOutputStream afos = new AtomicFileOutputStream(md5File)-->Line_6 $$ afos.write(md5Line.getBytes(Charsets.UTF_8))[ FD ]
Line_4 $$ String md5Line = digestString + " *" + dataFile.getName() + "\n"-->Line_6 $$ afos.write(md5Line.getBytes(Charsets.UTF_8))[ FD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_5 $$ AtomicFileOutputStream afos = new AtomicFileOutputStream(md5File)[ CD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_3 $$ File md5File = getDigestFileForFile(dataFile)[ CD ]
Line_8 $$ if (LOG.isDebugEnabled()) -->Line_9 $$ LOG.debug("Saved MD5 " + digestString + " to " + md5File)[ CD ]
Line_2 $$ private static void saveMD5File(File dataFile, String digestString) throws IOException -->Line_8 $$ if (LOG.isDebugEnabled()) [ CD ]
