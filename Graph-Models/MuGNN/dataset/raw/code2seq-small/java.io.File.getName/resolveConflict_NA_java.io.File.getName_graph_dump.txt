Line_3 $$ File file = CvsVfsUtil.getFileFor(vFile)-->Line_7 $$ Entry entry = entries.getEntry(file.getName())[ FD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_10 $$ long timeStamp = vFile.getTimeStamp()[ CD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_3 $$ File file = CvsVfsUtil.getFileFor(vFile)[ CD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_8 $$ if (entry == null)[ CD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_10 $$ long timeStamp = vFile.getTimeStamp()[ FD ]
Line_5 $$ EntriesHandler handler = getEntriesHandlerIn(file.getParentFile())-->Line_15 $$ handler.write(getLineSeparator(), CvsApplicationLevelConfiguration.getCharset())[ FD ]
Line_6 $$ Entries entries = handler.getEntries()-->Line_7 $$ Entry entry = entries.getEntry(file.getName())[ FD ]
Line_7 $$ Entry entry = entries.getEntry(file.getName())-->Line_13 $$ entries.addEntry(entry)[ FD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_7 $$ Entry entry = entries.getEntry(file.getName())[ CD ]
Line_6 $$ Entries entries = handler.getEntries()-->Line_13 $$ entries.addEntry(entry)[ FD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_12 $$ entry.parseConflictString(Entry.getLastModifiedDateFormatter().format(date))[ CD ]
Line_11 $$ final Date date = CvsStatusProvider.createDateDiffersTo(timeStamp)-->Line_12 $$ entry.parseConflictString(Entry.getLastModifiedDateFormatter().format(date))[ FD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_4 $$ removeConflict(file)[ CD ]
Line_7 $$ Entry entry = entries.getEntry(file.getName())-->Line_12 $$ entry.parseConflictString(Entry.getLastModifiedDateFormatter().format(date))[ FD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_11 $$ final Date date = CvsStatusProvider.createDateDiffersTo(timeStamp)[ CD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_5 $$ EntriesHandler handler = getEntriesHandlerIn(file.getParentFile())[ CD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_6 $$ Entries entries = handler.getEntries()[ CD ]
Line_3 $$ File file = CvsVfsUtil.getFileFor(vFile)-->Line_4 $$ removeConflict(file)[ FD ]
Line_5 $$ EntriesHandler handler = getEntriesHandlerIn(file.getParentFile())-->Line_6 $$ Entries entries = handler.getEntries()[ FD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_13 $$ entries.addEntry(entry)[ CD ]
Line_2 $$ public static void resolveConflict(VirtualFile vFile) -->Line_3 $$ File file = CvsVfsUtil.getFileFor(vFile)[ FD ]
Line_3 $$ File file = CvsVfsUtil.getFileFor(vFile)-->Line_5 $$ EntriesHandler handler = getEntriesHandlerIn(file.getParentFile())[ FD ]
Line_7 $$ Entry entry = entries.getEntry(file.getName())-->Line_8 $$ if (entry == null)[ FD ]
Line_8 $$ if (entry == null)-->Line_9 $$ return[ CD ]
Line_10 $$ long timeStamp = vFile.getTimeStamp()-->Line_11 $$ final Date date = CvsStatusProvider.createDateDiffersTo(timeStamp)[ FD ]
