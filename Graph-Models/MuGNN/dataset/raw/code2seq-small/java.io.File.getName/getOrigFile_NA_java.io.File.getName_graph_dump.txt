Line_2 $$ static File getOrigFile(File unlinkTmpFile) -->Line_8 $$ return new File(unlinkTmpFile.getParentFile(), name.substring(0, n))[ FD ]
Line_2 $$ static File getOrigFile(File unlinkTmpFile) -->Line_4 $$ if (!name.endsWith(DatanodeUtil.UNLINK_BLOCK_SUFFIX)) [ CD ]
Line_3 $$ final String name = unlinkTmpFile.getName()-->Line_4 $$ if (!name.endsWith(DatanodeUtil.UNLINK_BLOCK_SUFFIX)) [ FD ]
Line_2 $$ static File getOrigFile(File unlinkTmpFile) -->Line_7 $$ final int n = name.length() - DatanodeUtil.UNLINK_BLOCK_SUFFIX.length()[ CD ]
Line_2 $$ static File getOrigFile(File unlinkTmpFile) -->Line_8 $$ return new File(unlinkTmpFile.getParentFile(), name.substring(0, n))[ CD ]
Line_2 $$ static File getOrigFile(File unlinkTmpFile) -->Line_3 $$ final String name = unlinkTmpFile.getName()[ FD ]
Line_2 $$ static File getOrigFile(File unlinkTmpFile) -->Line_3 $$ final String name = unlinkTmpFile.getName()[ CD ]
Line_7 $$ final int n = name.length() - DatanodeUtil.UNLINK_BLOCK_SUFFIX.length()-->Line_8 $$ return new File(unlinkTmpFile.getParentFile(), name.substring(0, n))[ FD ]
Line_3 $$ final String name = unlinkTmpFile.getName()-->Line_8 $$ return new File(unlinkTmpFile.getParentFile(), name.substring(0, n))[ FD ]
Line_3 $$ final String name = unlinkTmpFile.getName()-->Line_7 $$ final int n = name.length() - DatanodeUtil.UNLINK_BLOCK_SUFFIX.length()[ FD ]
