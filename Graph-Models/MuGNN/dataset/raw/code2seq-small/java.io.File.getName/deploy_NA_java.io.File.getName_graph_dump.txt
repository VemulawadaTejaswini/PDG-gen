Line_14 $$ if (!isExtPlugin(file) && !isHookPlugin(file) && !isMatchingFile(file, "WEB-INF/liferay-layout-templates.xml") && !isThemePlugin(file) && !isWebPlugin(file) && file.getName().endsWith(".war")) -->Line_15 $$ if (_log.isInfoEnabled()) [ CD ]
Line_12 $$ if (isMatchingFile(file, "index.php")) -->Line_13 $$ autoDeployer = getPhpDeployer()[ CD ]
Line_4 $$ if (_log.isDebugEnabled()) -->Line_5 $$ _log.debug("Invoking deploy for " + file.getPath())[ CD ]
Line_9 $$ autoDeployer = _autoDeployer-->Line_11 $$ autoDeployer = getMvcDeployer()[ FD ]
Line_15 $$ if (_log.isInfoEnabled()) -->Line_16 $$ _log.info("Deploying package as a web application")[ CD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_3 $$ File file = autoDeploymentContext.getFile()[ FD ]
Line_11 $$ autoDeployer = getMvcDeployer()-->Line_18 $$ autoDeployer = getWaiDeployer()[ FD ]
Line_10 $$ if (isMatchingFile(file, "index_mvc.jsp")) -->Line_12 $$ if (isMatchingFile(file, "index.php")) [ CD ]
Line_11 $$ autoDeployer = getMvcDeployer()-->Line_13 $$ autoDeployer = getPhpDeployer()[ FD ]
Line_9 $$ autoDeployer = _autoDeployer-->Line_26 $$ _log.debug("Using deployer " + autoDeployer.getClass().getName())[ FD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_25 $$ if (_log.isDebugEnabled()) [ CD ]
Line_3 $$ File file = autoDeploymentContext.getFile()-->Line_5 $$ _log.debug("Invoking deploy for " + file.getPath())[ FD ]
Line_3 $$ File file = autoDeploymentContext.getFile()-->Line_23 $$ _log.info("Copying portlets for " + file.getPath())[ FD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ FD ]
Line_25 $$ if (_log.isDebugEnabled()) -->Line_26 $$ _log.debug("Using deployer " + autoDeployer.getClass().getName())[ CD ]
Line_18 $$ autoDeployer = getWaiDeployer()-->Line_28 $$ autoDeployer = new ThreadSafeAutoDeployer(autoDeployer)[ FD ]
Line_3 $$ File file = autoDeploymentContext.getFile()-->Line_12 $$ if (isMatchingFile(file, "index.php")) [ FD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_28 $$ autoDeployer = new ThreadSafeAutoDeployer(autoDeployer)[ CD ]
Line_18 $$ autoDeployer = getWaiDeployer()-->Line_26 $$ _log.debug("Using deployer " + autoDeployer.getClass().getName())[ FD ]
Line_7 $$ AutoDeployer autoDeployer = null-->Line_11 $$ autoDeployer = getMvcDeployer()[ FD ]
Line_7 $$ AutoDeployer autoDeployer = null-->Line_13 $$ autoDeployer = getPhpDeployer()[ FD ]
Line_7 $$ AutoDeployer autoDeployer = null-->Line_28 $$ autoDeployer = new ThreadSafeAutoDeployer(autoDeployer)[ FD ]
Line_13 $$ autoDeployer = getPhpDeployer()-->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ FD ]
Line_7 $$ AutoDeployer autoDeployer = null-->Line_9 $$ autoDeployer = _autoDeployer[ FD ]
Line_22 $$ if (_log.isInfoEnabled()) -->Line_23 $$ _log.info("Copying portlets for " + file.getPath())[ CD ]
Line_28 $$ autoDeployer = new ThreadSafeAutoDeployer(autoDeployer)-->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ FD ]
Line_14 $$ if (!isExtPlugin(file) && !isHookPlugin(file) && !isMatchingFile(file, "WEB-INF/liferay-layout-templates.xml") && !isThemePlugin(file) && !isWebPlugin(file) && file.getName().endsWith(".war")) -->Line_20 $$ return AutoDeployer.CODE_NOT_APPLICABLE[ CD ]
Line_8 $$ if (isMatchingFile(file, "WEB-INF/" + Portal.PORTLET_XML_FILE_NAME_STANDARD)) -->Line_9 $$ autoDeployer = _autoDeployer[ CD ]
Line_8 $$ if (isMatchingFile(file, "WEB-INF/" + Portal.PORTLET_XML_FILE_NAME_STANDARD)) -->Line_10 $$ if (isMatchingFile(file, "index_mvc.jsp")) [ CD ]
Line_13 $$ autoDeployer = getPhpDeployer()-->Line_26 $$ _log.debug("Using deployer " + autoDeployer.getClass().getName())[ FD ]
Line_3 $$ File file = autoDeploymentContext.getFile()-->Line_10 $$ if (isMatchingFile(file, "index_mvc.jsp")) [ FD ]
Line_13 $$ autoDeployer = getPhpDeployer()-->Line_18 $$ autoDeployer = getWaiDeployer()[ FD ]
Line_7 $$ AutoDeployer autoDeployer = null-->Line_26 $$ _log.debug("Using deployer " + autoDeployer.getClass().getName())[ FD ]
Line_10 $$ if (isMatchingFile(file, "index_mvc.jsp")) -->Line_11 $$ autoDeployer = getMvcDeployer()[ CD ]
Line_11 $$ autoDeployer = getMvcDeployer()-->Line_28 $$ autoDeployer = new ThreadSafeAutoDeployer(autoDeployer)[ FD ]
Line_9 $$ autoDeployer = _autoDeployer-->Line_18 $$ autoDeployer = getWaiDeployer()[ FD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_4 $$ if (_log.isDebugEnabled()) [ CD ]
Line_7 $$ AutoDeployer autoDeployer = null-->Line_18 $$ autoDeployer = getWaiDeployer()[ FD ]
Line_11 $$ autoDeployer = getMvcDeployer()-->Line_26 $$ _log.debug("Using deployer " + autoDeployer.getClass().getName())[ FD ]
Line_9 $$ autoDeployer = _autoDeployer-->Line_28 $$ autoDeployer = new ThreadSafeAutoDeployer(autoDeployer)[ FD ]
Line_9 $$ autoDeployer = _autoDeployer-->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ FD ]
Line_11 $$ autoDeployer = getMvcDeployer()-->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ FD ]
Line_3 $$ File file = autoDeploymentContext.getFile()-->Line_31 $$ _log.info("Portlets for " + file.getPath() + " copied successfully. " + "Deployment will start in a few seconds.")[ FD ]
Line_12 $$ if (isMatchingFile(file, "index.php")) -->Line_14 $$ if (!isExtPlugin(file) && !isHookPlugin(file) && !isMatchingFile(file, "WEB-INF/liferay-layout-templates.xml") && !isThemePlugin(file) && !isWebPlugin(file) && file.getName().endsWith(".war")) [ CD ]
Line_14 $$ if (!isExtPlugin(file) && !isHookPlugin(file) && !isMatchingFile(file, "WEB-INF/liferay-layout-templates.xml") && !isThemePlugin(file) && !isWebPlugin(file) && file.getName().endsWith(".war")) -->Line_18 $$ autoDeployer = getWaiDeployer()[ CD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_30 $$ if ((code == AutoDeployer.CODE_DEFAULT) && _log.isInfoEnabled()) [ CD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_3 $$ File file = autoDeploymentContext.getFile()[ CD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ CD ]
Line_30 $$ if ((code == AutoDeployer.CODE_DEFAULT) && _log.isInfoEnabled()) -->Line_31 $$ _log.info("Portlets for " + file.getPath() + " copied successfully. " + "Deployment will start in a few seconds.")[ CD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_33 $$ return code[ CD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_22 $$ if (_log.isInfoEnabled()) [ CD ]
Line_9 $$ autoDeployer = _autoDeployer-->Line_13 $$ autoDeployer = getPhpDeployer()[ FD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_8 $$ if (isMatchingFile(file, "WEB-INF/" + Portal.PORTLET_XML_FILE_NAME_STANDARD)) [ CD ]
Line_2 $$ public int deploy(AutoDeploymentContext autoDeploymentContext) throws AutoDeployException -->Line_7 $$ AutoDeployer autoDeployer = null[ CD ]
Line_3 $$ File file = autoDeploymentContext.getFile()-->Line_14 $$ if (!isExtPlugin(file) && !isHookPlugin(file) && !isMatchingFile(file, "WEB-INF/liferay-layout-templates.xml") && !isThemePlugin(file) && !isWebPlugin(file) && file.getName().endsWith(".war")) [ FD ]
Line_13 $$ autoDeployer = getPhpDeployer()-->Line_28 $$ autoDeployer = new ThreadSafeAutoDeployer(autoDeployer)[ FD ]
Line_18 $$ autoDeployer = getWaiDeployer()-->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ FD ]
Line_3 $$ File file = autoDeploymentContext.getFile()-->Line_8 $$ if (isMatchingFile(file, "WEB-INF/" + Portal.PORTLET_XML_FILE_NAME_STANDARD)) [ FD ]
Line_7 $$ AutoDeployer autoDeployer = null-->Line_29 $$ int code = autoDeployer.autoDeploy(autoDeploymentContext)[ FD ]
