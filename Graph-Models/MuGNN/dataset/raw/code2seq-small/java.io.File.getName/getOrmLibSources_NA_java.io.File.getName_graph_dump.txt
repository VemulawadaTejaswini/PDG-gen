Line_14 $$ if (sourcesDir != null) -->Line_15 $$ roots.add(sourcesDir)[ CD ]
Line_2 $$ public VirtualFile[] getOrmLibSources() -->Line_4 $$ final File[] files = libsDir.listFiles()[ CD ]
Line_10 $$ if (zipRoot != null && zipRoot.isDirectory()) -->Line_14 $$ if (sourcesDir != null) [ CD ]
Line_13 $$ final VirtualFile sourcesDir = zipRoot.findFileByRelativePath(srcDirName + "/src/java")-->Line_14 $$ if (sourcesDir != null) [ FD ]
Line_3 $$ final File libsDir = new File(myHomePath, "src/orm")-->Line_4 $$ final File[] files = libsDir.listFiles()[ FD ]
Line_2 $$ public VirtualFile[] getOrmLibSources() -->Line_22 $$ return VfsUtilCore.toVirtualFileArray(roots)[ CD ]
Line_2 $$ public VirtualFile[] getOrmLibSources() -->Line_6 $$ if (files != null) [ CD ]
Line_10 $$ if (zipRoot != null && zipRoot.isDirectory()) -->Line_12 $$ final String srcDirName = StringUtil.trimEnd(fileName, "-src.zip")[ CD ]
Line_7 $$ for (File file : files) -->Line_11 $$ String fileName = file.getName()[ FD ]
Line_9 $$ final VirtualFile zipRoot = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_10 $$ if (zipRoot != null && zipRoot.isDirectory()) [ FD ]
Line_14 $$ if (sourcesDir != null) -->Line_17 $$ roots.add(zipRoot)[ CD ]
Line_8 $$ final String url = VfsUtil.getUrlForLibraryRoot(file)-->Line_9 $$ final VirtualFile zipRoot = VirtualFileManager.getInstance().findFileByUrl(url)[ FD ]
Line_5 $$ List<VirtualFile> roots = new ArrayList<VirtualFile>()-->Line_17 $$ roots.add(zipRoot)[ FD ]
Line_9 $$ final VirtualFile zipRoot = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_13 $$ final VirtualFile sourcesDir = zipRoot.findFileByRelativePath(srcDirName + "/src/java")[ FD ]
Line_11 $$ String fileName = file.getName()-->Line_12 $$ final String srcDirName = StringUtil.trimEnd(fileName, "-src.zip")[ FD ]
Line_2 $$ public VirtualFile[] getOrmLibSources() -->Line_3 $$ final File libsDir = new File(myHomePath, "src/orm")[ CD ]
Line_10 $$ if (zipRoot != null && zipRoot.isDirectory()) -->Line_13 $$ final VirtualFile sourcesDir = zipRoot.findFileByRelativePath(srcDirName + "/src/java")[ CD ]
Line_10 $$ if (zipRoot != null && zipRoot.isDirectory()) -->Line_11 $$ String fileName = file.getName()[ CD ]
Line_4 $$ final File[] files = libsDir.listFiles()-->Line_6 $$ if (files != null) [ FD ]
Line_5 $$ List<VirtualFile> roots = new ArrayList<VirtualFile>()-->Line_22 $$ return VfsUtilCore.toVirtualFileArray(roots)[ FD ]
Line_13 $$ final VirtualFile sourcesDir = zipRoot.findFileByRelativePath(srcDirName + "/src/java")-->Line_15 $$ roots.add(sourcesDir)[ FD ]
Line_7 $$ for (File file : files) -->Line_8 $$ final String url = VfsUtil.getUrlForLibraryRoot(file)[ FD ]
Line_2 $$ public VirtualFile[] getOrmLibSources() -->Line_5 $$ List<VirtualFile> roots = new ArrayList<VirtualFile>()[ CD ]
Line_5 $$ List<VirtualFile> roots = new ArrayList<VirtualFile>()-->Line_15 $$ roots.add(sourcesDir)[ FD ]
Line_9 $$ final VirtualFile zipRoot = VirtualFileManager.getInstance().findFileByUrl(url)-->Line_17 $$ roots.add(zipRoot)[ FD ]
