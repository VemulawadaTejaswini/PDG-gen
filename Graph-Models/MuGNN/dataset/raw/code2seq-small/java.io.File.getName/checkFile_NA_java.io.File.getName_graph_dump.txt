Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_5 $$ byte[] b = new byte[len][ CD ]
Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_9 $$ fail("Reading " + f.getName() + " failed with " + ie.getMessage())[ FD ]
Line_3 $$ FileInputStream fi = new FileInputStream(f)-->Line_7 $$ IOUtils.readFully(fi, b, 0, len)[ FD ]
Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_14 $$ assertEquals("File content differs", expectedContents, s)[ CD ]
Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_14 $$ assertEquals("File content differs", expectedContents, s)[ FD ]
Line_13 $$ String s = new String(b, 0, len)-->Line_14 $$ assertEquals("File content differs", expectedContents, s)[ FD ]
Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_13 $$ String s = new String(b, 0, len)[ CD ]
Line_5 $$ byte[] b = new byte[len]-->Line_7 $$ IOUtils.readFully(fi, b, 0, len)[ FD ]
Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_3 $$ FileInputStream fi = new FileInputStream(f)[ CD ]
Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_4 $$ int len = expectedContents.length()[ CD ]
Line_3 $$ FileInputStream fi = new FileInputStream(f)-->Line_11 $$ fi.close()[ FD ]
Line_2 $$ private static void checkFile(File f, String expectedContents) throws IOException -->Line_4 $$ int len = expectedContents.length()[ FD ]
Line_4 $$ int len = expectedContents.length()-->Line_7 $$ IOUtils.readFully(fi, b, 0, len)[ FD ]
