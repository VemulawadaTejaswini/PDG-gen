Line_15 $$ final DiffContent content1 = getContentForVersion(version1, file)-->Line_21 $$ request.setContents(content1, content2)[ FD ]
Line_17 $$ if (version2.getRevisionNumber().compareTo(version1.getRevisionNumber()) > 0) -->Line_19 $$ request.setContentTitles(version2.getRevisionNumber().asString(), version1.getRevisionNumber().asString())[ CD ]
Line_16 $$ final DiffContent content2 = getContentForVersion(version2, file)-->Line_21 $$ request.setContents(content1, content2)[ FD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_19 $$ request.setContentTitles(version2.getRevisionNumber().asString(), version1.getRevisionNumber().asString())[ FD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_15 $$ final DiffContent content1 = getContentForVersion(version1, file)[ FD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_10 $$ final FileType fileType = FileTypeManager.getInstance().getFileTypeByFileName(file.getName())[ FD ]
Line_6 $$ if (Comparing.equal(byteContent1, byteContent2)) -->Line_7 $$ Messages.showInfoMessage(VcsBundle.message("message.text.versions.are.identical"), VcsBundle.message("message.title.diff"))[ CD ]
Line_9 $$ final SimpleDiffRequest request = new SimpleDiffRequest(myProject, file.getAbsolutePath())-->Line_19 $$ request.setContentTitles(version2.getRevisionNumber().asString(), version1.getRevisionNumber().asString())[ FD ]
Line_9 $$ final SimpleDiffRequest request = new SimpleDiffRequest(myProject, file.getAbsolutePath())-->Line_21 $$ request.setContents(content1, content2)[ FD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_17 $$ if (version2.getRevisionNumber().compareTo(version1.getRevisionNumber()) > 0) [ FD ]
Line_9 $$ final SimpleDiffRequest request = new SimpleDiffRequest(myProject, file.getAbsolutePath())-->Line_22 $$ request.setContentTitles(version1.getRevisionNumber().asString(), version2.getRevisionNumber().asString())[ FD ]
Line_11 $$ if (fileType.isBinary()) -->Line_12 $$ Messages.showInfoMessage(VcsBundle.message("message.text.binary.versions.differ"), VcsBundle.message("message.title.diff"))[ CD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_9 $$ final SimpleDiffRequest request = new SimpleDiffRequest(myProject, file.getAbsolutePath())[ FD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_22 $$ request.setContentTitles(version1.getRevisionNumber().asString(), version2.getRevisionNumber().asString())[ FD ]
Line_9 $$ final SimpleDiffRequest request = new SimpleDiffRequest(myProject, file.getAbsolutePath())-->Line_18 $$ request.setContents(content2, content1)[ FD ]
Line_9 $$ final SimpleDiffRequest request = new SimpleDiffRequest(myProject, file.getAbsolutePath())-->Line_24 $$ DiffManager.getInstance().getDiffTool().show(request)[ FD ]
Line_4 $$ final byte[] byteContent1 = VcsHistoryUtil.loadRevisionContent(version1)-->Line_6 $$ if (Comparing.equal(byteContent1, byteContent2)) [ FD ]
Line_16 $$ final DiffContent content2 = getContentForVersion(version2, file)-->Line_18 $$ request.setContents(content2, content1)[ FD ]
Line_5 $$ final byte[] byteContent2 = VcsHistoryUtil.loadRevisionContent(version2)-->Line_6 $$ if (Comparing.equal(byteContent1, byteContent2)) [ FD ]
Line_10 $$ final FileType fileType = FileTypeManager.getInstance().getFileTypeByFileName(file.getName())-->Line_11 $$ if (fileType.isBinary()) [ FD ]
Line_17 $$ if (version2.getRevisionNumber().compareTo(version1.getRevisionNumber()) > 0) -->Line_18 $$ request.setContents(content2, content1)[ CD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_16 $$ final DiffContent content2 = getContentForVersion(version2, file)[ FD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_4 $$ final byte[] byteContent1 = VcsHistoryUtil.loadRevisionContent(version1)[ FD ]
Line_2 $$ public void showDifferences(final VcsFileRevision version1, final VcsFileRevision version2, final File file) -->Line_5 $$ final byte[] byteContent2 = VcsHistoryUtil.loadRevisionContent(version2)[ FD ]
Line_15 $$ final DiffContent content1 = getContentForVersion(version1, file)-->Line_18 $$ request.setContents(content2, content1)[ FD ]
Line_17 $$ if (version2.getRevisionNumber().compareTo(version1.getRevisionNumber()) > 0) -->Line_21 $$ request.setContents(content1, content2)[ CD ]
Line_17 $$ if (version2.getRevisionNumber().compareTo(version1.getRevisionNumber()) > 0) -->Line_22 $$ request.setContentTitles(version1.getRevisionNumber().asString(), version2.getRevisionNumber().asString())[ CD ]
Line_11 $$ if (fileType.isBinary()) -->Line_13 $$ return[ CD ]
