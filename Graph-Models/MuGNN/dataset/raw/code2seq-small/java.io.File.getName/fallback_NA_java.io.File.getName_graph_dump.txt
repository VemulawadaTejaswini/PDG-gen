Line_8 $$ String name2 = f2.getName().toLowerCase()-->Line_9 $$ return name1.compareTo(name2)[ FD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_3 $$ int compareParents = f1.getParentFile().getName().compareTo(f2.getParentFile().getName())[ CD ]
Line_7 $$ String name1 = f1.getName().toLowerCase()-->Line_9 $$ return name1.compareTo(name2)[ FD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_4 $$ if (compareParents != 0) [ CD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_9 $$ return name1.compareTo(name2)[ CD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_3 $$ int compareParents = f1.getParentFile().getName().compareTo(f2.getParentFile().getName())[ FD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_7 $$ String name1 = f1.getName().toLowerCase()[ FD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_8 $$ String name2 = f2.getName().toLowerCase()[ CD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_7 $$ String name1 = f1.getName().toLowerCase()[ CD ]
Line_3 $$ int compareParents = f1.getParentFile().getName().compareTo(f2.getParentFile().getName())-->Line_4 $$ if (compareParents != 0) [ FD ]
Line_2 $$ private static int fallback(@NotNull File f1, @NotNull File f2) -->Line_8 $$ String name2 = f2.getName().toLowerCase()[ FD ]
Line_4 $$ if (compareParents != 0) -->Line_5 $$ return -compareParents[ CD ]
Line_3 $$ int compareParents = f1.getParentFile().getName().compareTo(f2.getParentFile().getName())-->Line_5 $$ return -compareParents[ FD ]
