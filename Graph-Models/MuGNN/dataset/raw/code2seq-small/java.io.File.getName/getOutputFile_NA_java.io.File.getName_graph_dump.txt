Line_2 $$ public File getOutputFile(File target) -->Line_11 $$ return outFile[ CD ]
Line_2 $$ public File getOutputFile(File target) -->Line_8 $$ for (int i = 0; outFile.exists(); i++) [ CD ]
Line_2 $$ public File getOutputFile(File target) -->Line_3 $$ File outFile = target[ CD ]
Line_4 $$ if (!outFile.getParentFile().exists() && !outFile.getParentFile().mkdirs()) -->Line_6 $$ return null[ CD ]
Line_3 $$ File outFile = target-->Line_8 $$ for (int i = 0; outFile.exists(); i++) [ FD ]
Line_3 $$ File outFile = target-->Line_9 $$ outFile = new File(target.getParentFile(), target.getName() + ".tmp." + i)[ FD ]
Line_3 $$ File outFile = target-->Line_4 $$ if (!outFile.getParentFile().exists() && !outFile.getParentFile().mkdirs()) [ FD ]
Line_9 $$ outFile = new File(target.getParentFile(), target.getName() + ".tmp." + i)-->Line_8 $$ for (int i = 0; outFile.exists(); i++) [ FD ]
Line_2 $$ public File getOutputFile(File target) -->Line_4 $$ if (!outFile.getParentFile().exists() && !outFile.getParentFile().mkdirs()) [ CD ]
Line_4 $$ if (!outFile.getParentFile().exists() && !outFile.getParentFile().mkdirs()) -->Line_5 $$ Util.logerr("parent mkdirs failed: " + outFile)[ CD ]
Line_8 $$ for (int i = 0; outFile.exists(); i++) -->Line_9 $$ outFile = new File(target.getParentFile(), target.getName() + ".tmp." + i)[ CD ]
Line_2 $$ public File getOutputFile(File target) -->Line_9 $$ outFile = new File(target.getParentFile(), target.getName() + ".tmp." + i)[ FD ]
