Line_6 $$ File headerFileCopy = new File(generatedSourceDir, sourceFile.getName())-->Line_9 $$ FileUtils.writeStringToFile(generatedSource, "#include \"".concat(headerFileCopy.getName()).concat("\""))[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_8 $$ FileUtils.copyFile(sourceFile, headerFileCopy)[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_3 $$ File generatedSourceDir = new File(original.getTempDir(), "pchGenerated")[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_6 $$ File headerFileCopy = new File(generatedSourceDir, sourceFile.getName())[ CD ]
Line_5 $$ File generatedSource = new File(generatedSourceDir, FilenameUtils.removeExtension(sourceFile.getName()).concat(getSourceFileExtension(original.getClass())))-->Line_9 $$ FileUtils.writeStringToFile(generatedSource, "#include \"".concat(headerFileCopy.getName()).concat("\""))[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_4 $$ generatedSourceDir.mkdirs()[ CD ]
Line_6 $$ File headerFileCopy = new File(generatedSourceDir, sourceFile.getName())-->Line_8 $$ FileUtils.copyFile(sourceFile, headerFileCopy)[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_3 $$ File generatedSourceDir = new File(original.getTempDir(), "pchGenerated")[ CD ]
Line_3 $$ File generatedSourceDir = new File(original.getTempDir(), "pchGenerated")-->Line_4 $$ generatedSourceDir.mkdirs()[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_6 $$ File headerFileCopy = new File(generatedSourceDir, sourceFile.getName())[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_5 $$ File generatedSource = new File(generatedSourceDir, FilenameUtils.removeExtension(sourceFile.getName()).concat(getSourceFileExtension(original.getClass())))[ FD ]
Line_2 $$ public static <T extends NativeCompileSpec> File generatePCHSourceFile(T original, File sourceFile) -->Line_5 $$ File generatedSource = new File(generatedSourceDir, FilenameUtils.removeExtension(sourceFile.getName()).concat(getSourceFileExtension(original.getClass())))[ CD ]
