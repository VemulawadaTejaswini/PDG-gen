Line_18 $$ final PropertiesComponent comp = component-->Line_21 $$ comp.setFile(activeVcs, ioFiles[0])[ FD ]
Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)-->Line_17 $$ w.show(null)[ FD ]
Line_2 $$ protected void batchPerform(Project project, final SvnVcs activeVcs, VirtualFile[] file, DataContext context) throws VcsException -->Line_3 $$ final File[] ioFiles = new File[file.length][ CD ]
Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)-->Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)[ FD ]
Line_2 $$ protected void batchPerform(Project project, final SvnVcs activeVcs, VirtualFile[] file, DataContext context) throws VcsException -->Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)[ FD ]
Line_7 $$ if (ioFiles.length > 0) -->Line_16 $$ w.setTitle(ioFiles[0].getName())[ CD ]
Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)-->Line_19 $$ w.activate(new Runnable() [ FD ]
Line_11 $$ component = new PropertiesComponent()-->Line_14 $$ component = ((PropertiesComponent) w.getContentManager().getContents()[0].getComponent())[ FD ]
Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)-->Line_17 $$ w.show(null)[ FD ]
Line_7 $$ if (ioFiles.length > 0) -->Line_9 $$ PropertiesComponent component = null[ CD ]
Line_9 $$ PropertiesComponent component = null-->Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)[ FD ]
Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)-->Line_10 $$ if (w == null) [ FD ]
Line_2 $$ protected void batchPerform(Project project, final SvnVcs activeVcs, VirtualFile[] file, DataContext context) throws VcsException -->Line_4 $$ for (int i = 0; i < ioFiles.length; i++) [ CD ]
Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)-->Line_19 $$ w.activate(new Runnable() [ FD ]
Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)-->Line_16 $$ w.setTitle(ioFiles[0].getName())[ FD ]
Line_7 $$ if (ioFiles.length > 0) -->Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)[ CD ]
Line_7 $$ if (ioFiles.length > 0) -->Line_10 $$ if (w == null) [ CD ]
Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)-->Line_14 $$ component = ((PropertiesComponent) w.getContentManager().getContents()[0].getComponent())[ FD ]
Line_11 $$ component = new PropertiesComponent()-->Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)[ FD ]
Line_4 $$ for (int i = 0; i < ioFiles.length; i++) -->Line_5 $$ ioFiles[i] = new File(file[i].getPath())[ CD ]
Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)-->Line_14 $$ component = ((PropertiesComponent) w.getContentManager().getContents()[0].getComponent())[ FD ]
Line_7 $$ if (ioFiles.length > 0) -->Line_18 $$ final PropertiesComponent comp = component[ CD ]
Line_10 $$ if (w == null) -->Line_11 $$ component = new PropertiesComponent()[ CD ]
Line_19 $$ w.activate(new Runnable() -->Line_21 $$ comp.setFile(activeVcs, ioFiles[0])[ CD ]
Line_7 $$ if (ioFiles.length > 0) -->Line_17 $$ w.show(null)[ CD ]
Line_2 $$ protected void batchPerform(Project project, final SvnVcs activeVcs, VirtualFile[] file, DataContext context) throws VcsException -->Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)[ FD ]
Line_9 $$ PropertiesComponent component = null-->Line_14 $$ component = ((PropertiesComponent) w.getContentManager().getContents()[0].getComponent())[ FD ]
Line_2 $$ protected void batchPerform(Project project, final SvnVcs activeVcs, VirtualFile[] file, DataContext context) throws VcsException -->Line_7 $$ if (ioFiles.length > 0) [ CD ]
Line_9 $$ PropertiesComponent component = null-->Line_11 $$ component = new PropertiesComponent()[ FD ]
Line_10 $$ if (w == null) -->Line_12 $$ w = ToolWindowManager.getInstance(project).registerToolWindow(PropertiesComponent.ID, component, ToolWindowAnchor.BOTTOM)[ CD ]
Line_10 $$ if (w == null) -->Line_14 $$ component = ((PropertiesComponent) w.getContentManager().getContents()[0].getComponent())[ CD ]
Line_8 $$ ToolWindow w = ToolWindowManager.getInstance(project).getToolWindow(PropertiesComponent.ID)-->Line_16 $$ w.setTitle(ioFiles[0].getName())[ FD ]
Line_2 $$ protected void batchPerform(Project project, final SvnVcs activeVcs, VirtualFile[] file, DataContext context) throws VcsException -->Line_21 $$ comp.setFile(activeVcs, ioFiles[0])[ FD ]
Line_7 $$ if (ioFiles.length > 0) -->Line_19 $$ w.activate(new Runnable() [ CD ]
