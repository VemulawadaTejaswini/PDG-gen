Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_33 $$ DeleteTask.deleteDirectory(deployDir)[ FD ]
Line_17 $$ deployDir = new File(deployDirPath)-->Line_23 $$ FileUtil.delete(deployDir)[ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_11 $$ String deployDirPath = deployDir.getAbsolutePath()[ FD ]
Line_12 $$ if (StringUtil.endsWith(deployDirPath, ".war")) -->Line_13 $$ deployDirPath = deployDirPath.substring(0, deployDirPath.length() - 4)[ CD ]
Line_42 $$ int undeployInterval = PrefsPropsUtil.getInteger(PropsKeys.HOT_UNDEPLOY_INTERVAL, PropsValues.HOT_UNDEPLOY_INTERVAL)-->Line_47 $$ Thread.sleep(undeployInterval)[ FD ]
Line_22 $$ if (deployDir.isFile()) -->Line_23 $$ FileUtil.delete(deployDir)[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_10 $$ if (!deployDir.exists()) [ CD ]
Line_12 $$ if (StringUtil.endsWith(deployDirPath, ".war")) -->Line_15 $$ deployDirPath = deployDirPath.concat(".war")[ CD ]
Line_38 $$ if (appServerType.equals(ServerDetector.JBOSS_ID) || appServerType.equals(ServerDetector.WILDFLY_ID)) -->Line_39 $$ File deployedFile = new File(deployDir.getParent(), deployDir.getName() + ".deployed")[ CD ]
Line_46 $$ if (undeployInterval > 0) -->Line_47 $$ Thread.sleep(undeployInterval)[ CD ]
Line_17 $$ deployDir = new File(deployDirPath)-->Line_22 $$ if (deployDir.isFile()) [ FD ]
Line_10 $$ if (!deployDir.exists()) -->Line_11 $$ String deployDirPath = deployDir.getAbsolutePath()[ CD ]
Line_39 $$ File deployedFile = new File(deployDir.getParent(), deployDir.getName() + ".deployed")-->Line_40 $$ FileUtil.delete(deployedFile)[ FD ]
Line_22 $$ if (deployDir.isFile()) -->Line_25 $$ File webXml = new File(deployDir + "/WEB-INF/web.xml")[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_10 $$ if (!deployDir.exists()) [ FD ]
Line_22 $$ if (deployDir.isFile()) -->Line_26 $$ if (!webXml.exists()) [ CD ]
Line_17 $$ deployDir = new File(deployDirPath)-->Line_33 $$ DeleteTask.deleteDirectory(deployDir)[ FD ]
Line_42 $$ int undeployInterval = PrefsPropsUtil.getInteger(PropsKeys.HOT_UNDEPLOY_INTERVAL, PropsValues.HOT_UNDEPLOY_INTERVAL)-->Line_46 $$ if (undeployInterval > 0) [ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_3 $$ boolean undeployEnabled = PrefsPropsUtil.getBoolean(PropsKeys.HOT_UNDEPLOY_ENABLED, PropsValues.HOT_UNDEPLOY_ENABLED)[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_7 $$ if (!appServerType.equals(ServerDetector.GLASSFISH_ID) && !appServerType.equals(ServerDetector.JBOSS_ID) && !appServerType.equals(ServerDetector.JETTY_ID) && !appServerType.equals(ServerDetector.TOMCAT_ID) && !appServerType.equals(ServerDetector.WEBLOGIC_ID) && !appServerType.equals(ServerDetector.WILDFLY_ID)) [ CD ]
Line_26 $$ if (!webXml.exists()) -->Line_27 $$ return[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_36 $$ FileUtil.delete(getJettyHome() + "/contexts/" + deployDir.getName() + ".xml")[ FD ]
Line_38 $$ if (appServerType.equals(ServerDetector.JBOSS_ID) || appServerType.equals(ServerDetector.WILDFLY_ID)) -->Line_40 $$ FileUtil.delete(deployedFile)[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_42 $$ int undeployInterval = PrefsPropsUtil.getInteger(PropsKeys.HOT_UNDEPLOY_INTERVAL, PropsValues.HOT_UNDEPLOY_INTERVAL)[ CD ]
Line_11 $$ String deployDirPath = deployDir.getAbsolutePath()-->Line_12 $$ if (StringUtil.endsWith(deployDirPath, ".war")) [ FD ]
Line_10 $$ if (!deployDir.exists()) -->Line_12 $$ if (StringUtil.endsWith(deployDirPath, ".war")) [ CD ]
Line_10 $$ if (!deployDir.exists()) -->Line_17 $$ deployDir = new File(deployDirPath)[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_22 $$ if (deployDir.isFile()) [ FD ]
Line_22 $$ if (deployDir.isFile()) -->Line_32 $$ FileUtil.delete(deployDir + "/WEB-INF/web.xml")[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_35 $$ if (appServerType.equals(ServerDetector.JETTY_ID)) [ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_35 $$ if (appServerType.equals(ServerDetector.JETTY_ID)) [ FD ]
Line_4 $$ if (!undeployEnabled) -->Line_5 $$ return[ CD ]
Line_29 $$ if (_log.isInfoEnabled()) -->Line_30 $$ _log.info("Undeploy " + deployDir)[ CD ]
Line_43 $$ if (_log.isInfoEnabled()) -->Line_44 $$ _log.info("Wait " + undeployInterval + " ms to allow the plugin time to fully undeploy")[ CD ]
Line_7 $$ if (!appServerType.equals(ServerDetector.GLASSFISH_ID) && !appServerType.equals(ServerDetector.JBOSS_ID) && !appServerType.equals(ServerDetector.JETTY_ID) && !appServerType.equals(ServerDetector.TOMCAT_ID) && !appServerType.equals(ServerDetector.WEBLOGIC_ID) && !appServerType.equals(ServerDetector.WILDFLY_ID)) -->Line_8 $$ return[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_46 $$ if (undeployInterval > 0) [ CD ]
Line_13 $$ deployDirPath = deployDirPath.substring(0, deployDirPath.length() - 4)-->Line_15 $$ deployDirPath = deployDirPath.concat(".war")[ FD ]
Line_19 $$ if (!deployDir.exists()) -->Line_20 $$ return[ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_7 $$ if (!appServerType.equals(ServerDetector.GLASSFISH_ID) && !appServerType.equals(ServerDetector.JBOSS_ID) && !appServerType.equals(ServerDetector.JETTY_ID) && !appServerType.equals(ServerDetector.TOMCAT_ID) && !appServerType.equals(ServerDetector.WEBLOGIC_ID) && !appServerType.equals(ServerDetector.WILDFLY_ID)) [ FD ]
Line_22 $$ if (deployDir.isFile()) -->Line_29 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_39 $$ File deployedFile = new File(deployDir.getParent(), deployDir.getName() + ".deployed")[ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_43 $$ if (_log.isInfoEnabled()) [ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_19 $$ if (!deployDir.exists()) [ FD ]
Line_11 $$ String deployDirPath = deployDir.getAbsolutePath()-->Line_13 $$ deployDirPath = deployDirPath.substring(0, deployDirPath.length() - 4)[ FD ]
Line_17 $$ deployDir = new File(deployDirPath)-->Line_19 $$ if (!deployDir.exists()) [ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_38 $$ if (appServerType.equals(ServerDetector.JBOSS_ID) || appServerType.equals(ServerDetector.WILDFLY_ID)) [ CD ]
Line_35 $$ if (appServerType.equals(ServerDetector.JETTY_ID)) -->Line_36 $$ FileUtil.delete(getJettyHome() + "/contexts/" + deployDir.getName() + ".xml")[ CD ]
Line_17 $$ deployDir = new File(deployDirPath)-->Line_39 $$ File deployedFile = new File(deployDir.getParent(), deployDir.getName() + ".deployed")[ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_17 $$ deployDir = new File(deployDirPath)[ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_38 $$ if (appServerType.equals(ServerDetector.JBOSS_ID) || appServerType.equals(ServerDetector.WILDFLY_ID)) [ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_4 $$ if (!undeployEnabled) [ CD ]
Line_17 $$ deployDir = new File(deployDirPath)-->Line_36 $$ FileUtil.delete(getJettyHome() + "/contexts/" + deployDir.getName() + ".xml")[ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_19 $$ if (!deployDir.exists()) [ CD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_22 $$ if (deployDir.isFile()) [ CD ]
Line_25 $$ File webXml = new File(deployDir + "/WEB-INF/web.xml")-->Line_26 $$ if (!webXml.exists()) [ FD ]
Line_22 $$ if (deployDir.isFile()) -->Line_33 $$ DeleteTask.deleteDirectory(deployDir)[ CD ]
Line_11 $$ String deployDirPath = deployDir.getAbsolutePath()-->Line_15 $$ deployDirPath = deployDirPath.concat(".war")[ FD ]
Line_2 $$ public static void undeploy(String appServerType, File deployDir) throws Exception -->Line_23 $$ FileUtil.delete(deployDir)[ FD ]
Line_3 $$ boolean undeployEnabled = PrefsPropsUtil.getBoolean(PropsKeys.HOT_UNDEPLOY_ENABLED, PropsValues.HOT_UNDEPLOY_ENABLED)-->Line_4 $$ if (!undeployEnabled) [ FD ]
