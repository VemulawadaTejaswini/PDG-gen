Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_11 $$ listCopy.setName(newPatchDir.getName())[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_10 $$ final ShelvedChangeList listCopy = new ShelvedChangeList(newPath.getAbsolutePath(), changeList.DESCRIPTION, new ArrayList<ShelvedBinaryFile>(changeList.getBinaryFiles()))[ FD ]
Line_10 $$ final ShelvedChangeList listCopy = new ShelvedChangeList(newPath.getAbsolutePath(), changeList.DESCRIPTION, new ArrayList<ShelvedBinaryFile>(changeList.getBinaryFiles()))-->Line_17 $$ mySchemeManager.addNewScheme(listCopy, false)[ FD ]
Line_10 $$ final ShelvedChangeList listCopy = new ShelvedChangeList(newPath.getAbsolutePath(), changeList.DESCRIPTION, new ArrayList<ShelvedBinaryFile>(changeList.getBinaryFiles()))-->Line_16 $$ recycleChangeList(listCopy, changeList)[ FD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_12 $$ listCopy.DATE = changeList.DATE == null ? null : new Date(changeList.DATE.getTime())[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_16 $$ recycleChangeList(listCopy, changeList)[ CD ]
Line_4 $$ final File newPath = getPatchFileInConfigDir(newPatchDir)-->Line_10 $$ final ShelvedChangeList listCopy = new ShelvedChangeList(newPath.getAbsolutePath(), changeList.DESCRIPTION, new ArrayList<ShelvedBinaryFile>(changeList.getBinaryFiles()))[ FD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_10 $$ final ShelvedChangeList listCopy = new ShelvedChangeList(newPath.getAbsolutePath(), changeList.DESCRIPTION, new ArrayList<ShelvedBinaryFile>(changeList.getBinaryFiles()))[ CD ]
Line_10 $$ final ShelvedChangeList listCopy = new ShelvedChangeList(newPath.getAbsolutePath(), changeList.DESCRIPTION, new ArrayList<ShelvedBinaryFile>(changeList.getBinaryFiles()))-->Line_11 $$ listCopy.setName(newPatchDir.getName())[ FD ]
Line_3 $$ final File newPatchDir = generateUniqueSchemePatchDir(changeList.DESCRIPTION, true)-->Line_4 $$ final File newPath = getPatchFileInConfigDir(newPatchDir)[ FD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_13 $$ writePatchesToFile(myProject, changeList.PATH, remainingPatches, commitContext)[ FD ]
Line_4 $$ final File newPath = getPatchFileInConfigDir(newPatchDir)-->Line_6 $$ FileUtil.copy(new File(changeList.PATH), newPath)[ FD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_3 $$ final File newPatchDir = generateUniqueSchemePatchDir(changeList.DESCRIPTION, true)[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_4 $$ final File newPath = getPatchFileInConfigDir(newPatchDir)[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_13 $$ writePatchesToFile(myProject, changeList.PATH, remainingPatches, commitContext)[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_17 $$ mySchemeManager.addNewScheme(listCopy, false)[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_15 $$ changeList.clearLoadedChanges()[ FD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_15 $$ changeList.clearLoadedChanges()[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_16 $$ recycleChangeList(listCopy, changeList)[ FD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_18 $$ notifyStateChanged()[ CD ]
Line_3 $$ final File newPatchDir = generateUniqueSchemePatchDir(changeList.DESCRIPTION, true)-->Line_11 $$ listCopy.setName(newPatchDir.getName())[ FD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_14 $$ changeList.getBinaryFiles().retainAll(remainingBinaries)[ CD ]
Line_2 $$ public void saveRemainingPatches(final ShelvedChangeList changeList, final List<FilePatch> remainingPatches, final List<ShelvedBinaryFile> remainingBinaries, CommitContext commitContext) -->Line_14 $$ changeList.getBinaryFiles().retainAll(remainingBinaries)[ FD ]
