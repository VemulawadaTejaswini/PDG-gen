Line_5 $$ ServletOutputStream servletOutputStream = response.getOutputStream()-->Line_13 $$ StreamUtil.transfer(inputStream, servletOutputStream, false)[ FD ]
Line_7 $$ Collection<URL> jsConfigURLs = _jsBundleConfigTracker.getJSConfigURLs()-->Line_8 $$ if (!jsConfigURLs.isEmpty()) [ FD ]
Line_6 $$ PrintWriter printWriter = new PrintWriter(servletOutputStream, true)-->Line_9 $$ printWriter.println("(function() [ FD ]
Line_5 $$ ServletOutputStream servletOutputStream = response.getOutputStream()-->Line_12 $$ servletOutputStream.println("try [ FD ]
Line_8 $$ if (!jsConfigURLs.isEmpty()) -->Line_9 $$ printWriter.println("(function() [ CD ]
Line_8 $$ if (!jsConfigURLs.isEmpty()) -->Line_21 $$ printWriter.println("}());")[ CD ]
Line_6 $$ PrintWriter printWriter = new PrintWriter(servletOutputStream, true)-->Line_21 $$ printWriter.println("}());")[ FD ]
Line_6 $$ PrintWriter printWriter = new PrintWriter(servletOutputStream, true)-->Line_23 $$ printWriter.close()[ FD ]
Line_11 $$ try (InputStream inputStream = jsConfigURL.openStream()) -->Line_13 $$ StreamUtil.transfer(inputStream, servletOutputStream, false)[ FD ]
Line_5 $$ ServletOutputStream servletOutputStream = response.getOutputStream()-->Line_14 $$ servletOutputStream.println("} catch (error) [ FD ]
Line_5 $$ ServletOutputStream servletOutputStream = response.getOutputStream()-->Line_15 $$ servletOutputStream.println("console.error(error);")[ FD ]
Line_5 $$ ServletOutputStream servletOutputStream = response.getOutputStream()-->Line_16 $$ servletOutputStream.println("}")[ FD ]
Line_10 $$ for (URL jsConfigURL : jsConfigURLs) -->Line_11 $$ try (InputStream inputStream = jsConfigURL.openStream()) [ FD ]
