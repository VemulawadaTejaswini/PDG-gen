Line_12 $$ for (DeploymentAspect da : das) -->Line_17 $$ if (da instanceof TestDA3) [ FD ]
Line_23 $$ if (da instanceof TestDA4) -->Line_24 $$ da4Found = true[ CD ]
Line_17 $$ if (da instanceof TestDA3) -->Line_18 $$ da3Found = true[ CD ]
Line_19 $$ TestDA3 da3 = (TestDA3) da-->Line_22 $$ assertTrue(da3.getList().contains("Two"))[ FD ]
Line_9 $$ boolean da2Found = false-->Line_35 $$ assertTrue(da2Found)[ FD ]
Line_25 $$ TestDA4 da4 = (TestDA4) da-->Line_27 $$ assertNotNull(da4.getMap())[ FD ]
Line_6 $$ List<DeploymentAspect> das = WSDeploymentAspectParser.parse(is, this.getClass().getClassLoader())-->Line_7 $$ assertEquals(4, das.size())[ FD ]
Line_4 $$ InputStream is = getXmlUrl("jbossws-deployment-aspects-example.xml").openStream()-->Line_6 $$ List<DeploymentAspect> das = WSDeploymentAspectParser.parse(is, this.getClass().getClassLoader())[ FD ]
Line_17 $$ if (da instanceof TestDA3) -->Line_23 $$ if (da instanceof TestDA4) [ CD ]
Line_4 $$ InputStream is = getXmlUrl("jbossws-deployment-aspects-example.xml").openStream()-->Line_39 $$ if (is != null) [ FD ]
Line_10 $$ boolean da3Found = false-->Line_18 $$ da3Found = true[ FD ]
Line_17 $$ if (da instanceof TestDA3) -->Line_21 $$ assertTrue(da3.getList().contains("One"))[ CD ]
Line_8 $$ boolean da1Found = false-->Line_34 $$ assertTrue(da1Found)[ FD ]
Line_13 $$ if (da instanceof TestDA2) -->Line_17 $$ if (da instanceof TestDA3) [ CD ]
Line_11 $$ boolean da4Found = false-->Line_24 $$ da4Found = true[ FD ]
Line_18 $$ da3Found = true-->Line_36 $$ assertTrue(da3Found)[ FD ]
Line_25 $$ TestDA4 da4 = (TestDA4) da-->Line_28 $$ assertEquals(1, (int) da4.getMap().get("One"))[ FD ]
Line_25 $$ TestDA4 da4 = (TestDA4) da-->Line_29 $$ assertEquals(3, (int) da4.getMap().get("Three"))[ FD ]
Line_25 $$ TestDA4 da4 = (TestDA4) da-->Line_26 $$ assertEquals(true, da4.isBool())[ FD ]
Line_23 $$ if (da instanceof TestDA4) -->Line_30 $$ if (da instanceof TestDA1) [ CD ]
Line_9 $$ boolean da2Found = false-->Line_14 $$ da2Found = true[ FD ]
Line_17 $$ if (da instanceof TestDA3) -->Line_20 $$ assertNotNull(da3.getList())[ CD ]
Line_4 $$ InputStream is = getXmlUrl("jbossws-deployment-aspects-example.xml").openStream()-->Line_40 $$ is.close()[ FD ]
Line_30 $$ if (da instanceof TestDA1) -->Line_31 $$ da1Found = true[ CD ]
Line_14 $$ da2Found = true-->Line_35 $$ assertTrue(da2Found)[ FD ]
Line_23 $$ if (da instanceof TestDA4) -->Line_25 $$ TestDA4 da4 = (TestDA4) da[ CD ]
Line_39 $$ if (is != null) -->Line_40 $$ is.close()[ CD ]
Line_23 $$ if (da instanceof TestDA4) -->Line_27 $$ assertNotNull(da4.getMap())[ CD ]
Line_12 $$ for (DeploymentAspect da : das) -->Line_30 $$ if (da instanceof TestDA1) [ FD ]
Line_13 $$ if (da instanceof TestDA2) -->Line_15 $$ TestDA2 da2 = (TestDA2) da[ CD ]
Line_13 $$ if (da instanceof TestDA2) -->Line_14 $$ da2Found = true[ CD ]
Line_31 $$ da1Found = true-->Line_34 $$ assertTrue(da1Found)[ FD ]
Line_23 $$ if (da instanceof TestDA4) -->Line_29 $$ assertEquals(3, (int) da4.getMap().get("Three"))[ CD ]
Line_13 $$ if (da instanceof TestDA2) -->Line_16 $$ assertEquals("myString", da2.getTwo())[ CD ]
Line_19 $$ TestDA3 da3 = (TestDA3) da-->Line_20 $$ assertNotNull(da3.getList())[ FD ]
Line_17 $$ if (da instanceof TestDA3) -->Line_19 $$ TestDA3 da3 = (TestDA3) da[ CD ]
Line_19 $$ TestDA3 da3 = (TestDA3) da-->Line_21 $$ assertTrue(da3.getList().contains("One"))[ FD ]
Line_12 $$ for (DeploymentAspect da : das) -->Line_23 $$ if (da instanceof TestDA4) [ FD ]
Line_23 $$ if (da instanceof TestDA4) -->Line_28 $$ assertEquals(1, (int) da4.getMap().get("One"))[ CD ]
Line_11 $$ boolean da4Found = false-->Line_37 $$ assertTrue(da4Found)[ FD ]
Line_15 $$ TestDA2 da2 = (TestDA2) da-->Line_16 $$ assertEquals("myString", da2.getTwo())[ FD ]
Line_8 $$ boolean da1Found = false-->Line_31 $$ da1Found = true[ FD ]
Line_23 $$ if (da instanceof TestDA4) -->Line_26 $$ assertEquals(true, da4.isBool())[ CD ]
Line_24 $$ da4Found = true-->Line_37 $$ assertTrue(da4Found)[ FD ]
Line_12 $$ for (DeploymentAspect da : das) -->Line_13 $$ if (da instanceof TestDA2) [ FD ]
Line_17 $$ if (da instanceof TestDA3) -->Line_22 $$ assertTrue(da3.getList().contains("Two"))[ CD ]
Line_10 $$ boolean da3Found = false-->Line_36 $$ assertTrue(da3Found)[ FD ]
