Line_10 $$ while (enu.hasMoreElements()) -->Line_13 $$ readResource(configuration, inputStream)[ CD ]
Line_4 $$ if (resource.startsWith("classpath*:")) -->Line_7 $$ if (_log.isDebugEnabled() && !enu.hasMoreElements()) [ CD ]
Line_2 $$ protected void readResource(Configuration configuration, String resource) throws Exception -->Line_13 $$ readResource(configuration, inputStream)[ FD ]
Line_10 $$ while (enu.hasMoreElements()) -->Line_11 $$ URL url = enu.nextElement()[ CD ]
Line_11 $$ URL url = enu.nextElement()-->Line_12 $$ InputStream inputStream = url.openStream()[ FD ]
Line_5 $$ String name = resource.substring("classpath*:".length())-->Line_6 $$ Enumeration<URL> enu = classLoader.getResources(name)[ FD ]
Line_4 $$ if (resource.startsWith("classpath*:")) -->Line_10 $$ while (enu.hasMoreElements()) [ CD ]
Line_4 $$ if (resource.startsWith("classpath*:")) -->Line_16 $$ InputStream inputStream = classLoader.getResourceAsStream(resource)[ CD ]
Line_3 $$ ClassLoader classLoader = getConfigurationClassLoader()-->Line_16 $$ InputStream inputStream = classLoader.getResourceAsStream(resource)[ FD ]
Line_12 $$ InputStream inputStream = url.openStream()-->Line_17 $$ readResource(configuration, inputStream)[ FD ]
Line_4 $$ if (resource.startsWith("classpath*:")) -->Line_6 $$ Enumeration<URL> enu = classLoader.getResources(name)[ CD ]
Line_6 $$ Enumeration<URL> enu = classLoader.getResources(name)-->Line_10 $$ while (enu.hasMoreElements()) [ FD ]
Line_3 $$ ClassLoader classLoader = getConfigurationClassLoader()-->Line_6 $$ Enumeration<URL> enu = classLoader.getResources(name)[ FD ]
Line_2 $$ protected void readResource(Configuration configuration, String resource) throws Exception -->Line_5 $$ String name = resource.substring("classpath*:".length())[ FD ]
Line_2 $$ protected void readResource(Configuration configuration, String resource) throws Exception -->Line_4 $$ if (resource.startsWith("classpath*:")) [ CD ]
Line_16 $$ InputStream inputStream = classLoader.getResourceAsStream(resource)-->Line_17 $$ readResource(configuration, inputStream)[ FD ]
Line_2 $$ protected void readResource(Configuration configuration, String resource) throws Exception -->Line_3 $$ ClassLoader classLoader = getConfigurationClassLoader()[ CD ]
Line_6 $$ Enumeration<URL> enu = classLoader.getResources(name)-->Line_7 $$ if (_log.isDebugEnabled() && !enu.hasMoreElements()) [ FD ]
Line_2 $$ protected void readResource(Configuration configuration, String resource) throws Exception -->Line_4 $$ if (resource.startsWith("classpath*:")) [ FD ]
Line_4 $$ if (resource.startsWith("classpath*:")) -->Line_17 $$ readResource(configuration, inputStream)[ CD ]
Line_6 $$ Enumeration<URL> enu = classLoader.getResources(name)-->Line_11 $$ URL url = enu.nextElement()[ FD ]
Line_2 $$ protected void readResource(Configuration configuration, String resource) throws Exception -->Line_16 $$ InputStream inputStream = classLoader.getResourceAsStream(resource)[ FD ]
Line_4 $$ if (resource.startsWith("classpath*:")) -->Line_5 $$ String name = resource.substring("classpath*:".length())[ CD ]
Line_10 $$ while (enu.hasMoreElements()) -->Line_12 $$ InputStream inputStream = url.openStream()[ CD ]
Line_7 $$ if (_log.isDebugEnabled() && !enu.hasMoreElements()) -->Line_8 $$ _log.debug("No resources found for " + name)[ CD ]
Line_12 $$ InputStream inputStream = url.openStream()-->Line_13 $$ readResource(configuration, inputStream)[ FD ]
Line_2 $$ protected void readResource(Configuration configuration, String resource) throws Exception -->Line_17 $$ readResource(configuration, inputStream)[ FD ]
