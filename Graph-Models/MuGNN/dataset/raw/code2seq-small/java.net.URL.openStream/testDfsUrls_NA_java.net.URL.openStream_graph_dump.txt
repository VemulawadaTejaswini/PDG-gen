Line_24 $$ for (int i = 0; i < fileContent.length; ++i) fileContent[i] = (byte) i-->Line_37 $$ for (int i = 0; i < fileContent.length; ++i) assertEquals(fileContent[i], bytes[i])[ FD ]
Line_31 $$ URL fileURL = new URL(uri.getScheme(), uri.getHost(), uri.getPort(), filePath.toString())-->Line_32 $$ InputStream is = fileURL.openStream()[ FD ]
Line_32 $$ InputStream is = fileURL.openStream()-->Line_36 $$ is.close()[ FD ]
Line_21 $$ Path filePath = new Path("/thefile")-->Line_31 $$ URL fileURL = new URL(uri.getScheme(), uri.getHost(), uri.getPort(), filePath.toString())[ FD ]
Line_32 $$ InputStream is = fileURL.openStream()-->Line_35 $$ assertEquals(1024, is.read(bytes))[ FD ]
Line_34 $$ byte[] bytes = new byte[4096]-->Line_35 $$ assertEquals(1024, is.read(bytes))[ FD ]
Line_14 $$ FileSystem fs = cluster.getFileSystem()-->Line_41 $$ fs.close()[ FD ]
Line_13 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_42 $$ cluster.shutdown()[ FD ]
Line_13 $$ MiniDFSCluster cluster = new MiniDFSCluster.Builder(conf).numDataNodes(2).build()-->Line_14 $$ FileSystem fs = cluster.getFileSystem()[ FD ]
Line_32 $$ InputStream is = fileURL.openStream()-->Line_33 $$ assertNotNull(is)[ FD ]
Line_23 $$ byte[] fileContent = new byte[1024]-->Line_27 $$ os.write(fileContent)[ FD ]
