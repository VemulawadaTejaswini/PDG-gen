Line_20 $$ final Logger logger = Logger.getInstance(PyTestTracebackParserTest.class)-->Line_26 $$ logger.warn(String.format("Got %s", trace))[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_9 $$ requiredStrings.add("file:///c:/windows/system32/file.txt - 42")[ FD ]
Line_25 $$ final LinkInTrace trace = new PyTestTracebackParser().findLinkInTrace(line)-->Line_29 $$ Assert.assertTrue(String.format("Unexpected file found %s line %s", trace.getFileName(), trace.getLineNumber()), removeResult)[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_10 $$ requiredStrings.add("/file.py - 42")[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_12 $$ requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 5")[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_15 $$ requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 89999")[ FD ]
Line_27 $$ if (trace != null) -->Line_29 $$ Assert.assertTrue(String.format("Unexpected file found %s line %s", trace.getFileName(), trace.getLineNumber()), removeResult)[ CD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_14 $$ requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 7")[ FD ]
Line_25 $$ final LinkInTrace trace = new PyTestTracebackParser().findLinkInTrace(line)-->Line_28 $$ final boolean removeResult = requiredStrings.remove(trace.getFileName() + " - " + trace.getLineNumber())[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_18 $$ requiredStrings.add("/Users/Mac Hipster/Applications/PyCharm 4.0 .app/helpers/lala.py - 12")[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_13 $$ requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 6")[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_28 $$ final boolean removeResult = requiredStrings.remove(trace.getFileName() + " - " + trace.getLineNumber())[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_8 $$ requiredStrings.add("c:\\documents and settings\\foo.txt - 43")[ FD ]
Line_20 $$ final Logger logger = Logger.getInstance(PyTestTracebackParserTest.class)-->Line_22 $$ logger.warn(String.format("Got lines %s", strings))[ FD ]
Line_27 $$ if (trace != null) -->Line_28 $$ final boolean removeResult = requiredStrings.remove(trace.getFileName() + " - " + trace.getLineNumber())[ CD ]
Line_28 $$ final boolean removeResult = requiredStrings.remove(trace.getFileName() + " - " + trace.getLineNumber())-->Line_29 $$ Assert.assertTrue(String.format("Unexpected file found %s line %s", trace.getFileName(), trace.getLineNumber()), removeResult)[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_32 $$ Assert.assertThat("Some lines were not found", requiredStrings, Matchers.empty())[ FD ]
Line_23 $$ for (final String line : strings) -->Line_24 $$ logger.warn(String.format("Starting with string %s", line))[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_16 $$ requiredStrings.add("C:\\temp\\untitled55\\test_sample.py - 99999")[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_19 $$ requiredStrings.add("C:\\Users\\ilya.kazakevich\\virtenvs\\spammy\\lib\\site-packages\\django_cron\\models.py - 4")[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_17 $$ requiredStrings.add("../../../files/files.py - 100")[ FD ]
Line_21 $$ final String[] strings = s.split("\n")-->Line_22 $$ logger.warn(String.format("Got lines %s", strings))[ FD ]
Line_25 $$ final LinkInTrace trace = new PyTestTracebackParser().findLinkInTrace(line)-->Line_27 $$ if (trace != null) [ FD ]
Line_4 $$ final String s = StreamUtil.readText(PyTestTracebackParserTest.class.getResource("linksDataTest.txt").openStream(), Charset.defaultCharset())-->Line_21 $$ final String[] strings = s.split("\n")[ FD ]
Line_25 $$ final LinkInTrace trace = new PyTestTracebackParser().findLinkInTrace(line)-->Line_26 $$ logger.warn(String.format("Got %s", trace))[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_11 $$ requiredStrings.add("c:\\folder55\\file.py - 12")[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_7 $$ requiredStrings.add("file:///c:/windows/system32/file_spam.txt - 42")[ FD ]
Line_23 $$ for (final String line : strings) -->Line_25 $$ final LinkInTrace trace = new PyTestTracebackParser().findLinkInTrace(line)[ FD ]
Line_5 $$ final Set<String> requiredStrings = new HashSet<String>()-->Line_6 $$ requiredStrings.add("file:///c:/windows/system32/file.txt - 42")[ FD ]
Line_20 $$ final Logger logger = Logger.getInstance(PyTestTracebackParserTest.class)-->Line_24 $$ logger.warn(String.format("Starting with string %s", line))[ FD ]
