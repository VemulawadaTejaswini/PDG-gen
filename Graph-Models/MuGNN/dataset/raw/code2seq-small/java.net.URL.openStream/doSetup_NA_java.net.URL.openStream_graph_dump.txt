Line_3 $$ URL url = ExtensionTestCase.class.getResource("module.xml")-->Line_4 $$ if (url == null) [ FD ]
Line_2 $$ protected static void doSetup() throws Exception -->Line_4 $$ if (url == null) [ CD ]
Line_2 $$ protected static void doSetup() throws Exception -->Line_3 $$ URL url = ExtensionTestCase.class.getResource("module.xml")[ CD ]
Line_7 $$ JavaArchive moduleJar = ShrinkWrap.create(JavaArchive.class, "weldTest.jar")-->Line_9 $$ moduleJar.addAsServiceProvider(Extension.class, FunExtension.class)[ FD ]
Line_2 $$ protected static void doSetup() throws Exception -->Line_10 $$ doSetup(modulePath, url.openStream(), moduleJar)[ CD ]
Line_7 $$ JavaArchive moduleJar = ShrinkWrap.create(JavaArchive.class, "weldTest.jar")-->Line_8 $$ moduleJar.addClasses(FunExtension.class, Funny.class)[ FD ]
Line_2 $$ protected static void doSetup() throws Exception -->Line_7 $$ JavaArchive moduleJar = ShrinkWrap.create(JavaArchive.class, "weldTest.jar")[ CD ]
Line_7 $$ JavaArchive moduleJar = ShrinkWrap.create(JavaArchive.class, "weldTest.jar")-->Line_10 $$ doSetup(modulePath, url.openStream(), moduleJar)[ FD ]
Line_3 $$ URL url = ExtensionTestCase.class.getResource("module.xml")-->Line_10 $$ doSetup(modulePath, url.openStream(), moduleJar)[ FD ]
Line_2 $$ protected static void doSetup() throws Exception -->Line_9 $$ moduleJar.addAsServiceProvider(Extension.class, FunExtension.class)[ CD ]
Line_2 $$ protected static void doSetup() throws Exception -->Line_8 $$ moduleJar.addClasses(FunExtension.class, Funny.class)[ CD ]
