Line_2 $$ private static void deployModule() throws IOException -->Line_22 $$ copyFile(new File(testModuleMainDir, "module.xml"), moduleXmlURL.openStream())[ CD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_12 $$ final InputStream moduleJarInputStream = moduleJar.as(ZipExporter.class).exportAsInputStream()[ CD ]
Line_12 $$ final InputStream moduleJarInputStream = moduleJar.as(ZipExporter.class).exportAsInputStream()-->Line_14 $$ copyFile(new File(testModuleMainDir, MODULE_JAR_NAME), moduleJarInputStream)[ FD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_18 $$ URL moduleXmlURL = ObjectFactoryWithEnvironmentBindingTestCase.class.getResource(ObjectFactoryWithEnvironmentBindingTestCase.class.getSimpleName() + "-module.xml")[ CD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_7 $$ File testModuleMainDir = new File(testModuleRoot, "main")[ CD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_19 $$ if (moduleXmlURL == null) [ CD ]
Line_18 $$ URL moduleXmlURL = ObjectFactoryWithEnvironmentBindingTestCase.class.getResource(ObjectFactoryWithEnvironmentBindingTestCase.class.getSimpleName() + "-module.xml")-->Line_22 $$ copyFile(new File(testModuleMainDir, "module.xml"), moduleXmlURL.openStream())[ FD ]
Line_7 $$ File testModuleMainDir = new File(testModuleRoot, "main")-->Line_8 $$ if (!testModuleMainDir.mkdirs()) [ FD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_8 $$ if (!testModuleMainDir.mkdirs()) [ CD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_11 $$ Archive<?> moduleJar = ShrinkWrap.create(JavaArchive.class, MODULE_JAR_NAME).addClass(ObjectFactoryWithEnvironmentBinding.class).addClass(ObjectFactoryWithEnvironmentBindingTestCase.class)[ CD ]
Line_11 $$ Archive<?> moduleJar = ShrinkWrap.create(JavaArchive.class, MODULE_JAR_NAME).addClass(ObjectFactoryWithEnvironmentBinding.class).addClass(ObjectFactoryWithEnvironmentBindingTestCase.class)-->Line_12 $$ final InputStream moduleJarInputStream = moduleJar.as(ZipExporter.class).exportAsInputStream()[ FD ]
Line_3 $$ File testModuleRoot = new File(getModulesHome(), MODULE_NAME)-->Line_4 $$ if (testModuleRoot.exists()) [ FD ]
Line_12 $$ final InputStream moduleJarInputStream = moduleJar.as(ZipExporter.class).exportAsInputStream()-->Line_16 $$ IoUtils.safeClose(moduleJarInputStream)[ FD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_4 $$ if (testModuleRoot.exists()) [ CD ]
Line_18 $$ URL moduleXmlURL = ObjectFactoryWithEnvironmentBindingTestCase.class.getResource(ObjectFactoryWithEnvironmentBindingTestCase.class.getSimpleName() + "-module.xml")-->Line_19 $$ if (moduleXmlURL == null) [ FD ]
Line_2 $$ private static void deployModule() throws IOException -->Line_3 $$ File testModuleRoot = new File(getModulesHome(), MODULE_NAME)[ CD ]
