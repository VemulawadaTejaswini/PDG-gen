Line_12 $$ Streams.readAllLines(is, new Callback<String>() -->Line_16 $$ sb.append(s)[ FD ]
Line_12 $$ Streams.readAllLines(is, new Callback<String>() -->Line_16 $$ sb.append(s)[ CD ]
Line_11 $$ final StringBuilder sb = new StringBuilder()-->Line_16 $$ sb.append(s)[ FD ]
Line_6 $$ URL resource = GceComputeServiceMock.class.getResource(mockFileName)-->Line_7 $$ if (resource == null) [ FD ]
Line_2 $$ private String readJsonResponse(String url, String urlRoot) throws IOException -->Line_7 $$ if (resource == null) [ CD ]
Line_6 $$ URL resource = GceComputeServiceMock.class.getResource(mockFileName)-->Line_10 $$ try (InputStream is = resource.openStream()) [ FD ]
Line_11 $$ final StringBuilder sb = new StringBuilder()-->Line_19 $$ String response = sb.toString()[ FD ]
Line_10 $$ try (InputStream is = resource.openStream()) -->Line_12 $$ Streams.readAllLines(is, new Callback<String>() [ FD ]
Line_2 $$ private String readJsonResponse(String url, String urlRoot) throws IOException -->Line_6 $$ URL resource = GceComputeServiceMock.class.getResource(mockFileName)[ CD ]
