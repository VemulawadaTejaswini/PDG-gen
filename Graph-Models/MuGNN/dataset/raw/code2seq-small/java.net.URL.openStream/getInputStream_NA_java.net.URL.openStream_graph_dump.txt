Line_17 $$ config = rr.getRoot().getChild(handlerChainConfigFileResourcePath)-->Line_19 $$ return config.openStream()[ FD ]
Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)-->Line_18 $$ if (config.exists() && config.isFile()) [ FD ]
Line_3 $$ if (handlerChainConfigFile.startsWith("file://") || handlerChainConfigFile.startsWith("http://")) -->Line_6 $$ URI classURI = null[ CD ]
Line_3 $$ if (handlerChainConfigFile.startsWith("file://") || handlerChainConfigFile.startsWith("http://")) -->Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)[ CD ]
Line_6 $$ URI classURI = null-->Line_11 $$ final String handlerChainConfigFileResourcePath = classURI.resolve(handlerChainConfigFile).toString()[ FD ]
Line_13 $$ if (config.exists() && config.isFile()) -->Line_14 $$ return config.openStream()[ CD ]
Line_3 $$ if (handlerChainConfigFile.startsWith("file://") || handlerChainConfigFile.startsWith("http://")) -->Line_13 $$ if (config.exists() && config.isFile()) [ CD ]
Line_16 $$ for (ResourceRoot rr : resourceRoots) -->Line_17 $$ config = rr.getRoot().getChild(handlerChainConfigFileResourcePath)[ FD ]
Line_8 $$ classURI = new URI(annotatedClassName.replace('.', '/'))-->Line_11 $$ final String handlerChainConfigFileResourcePath = classURI.resolve(handlerChainConfigFile).toString()[ FD ]
Line_6 $$ URI classURI = null-->Line_8 $$ classURI = new URI(annotatedClassName.replace('.', '/'))[ FD ]
Line_2 $$ private static InputStream getInputStream(final ResourceRoot currentResourceRoot, final List<ResourceRoot> resourceRoots, final String handlerChainConfigFile, final String annotatedClassName) throws IOException -->Line_8 $$ classURI = new URI(annotatedClassName.replace('.', '/'))[ FD ]
Line_2 $$ private static InputStream getInputStream(final ResourceRoot currentResourceRoot, final List<ResourceRoot> resourceRoots, final String handlerChainConfigFile, final String annotatedClassName) throws IOException -->Line_3 $$ if (handlerChainConfigFile.startsWith("file://") || handlerChainConfigFile.startsWith("http://")) [ FD ]
Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)-->Line_17 $$ config = rr.getRoot().getChild(handlerChainConfigFileResourcePath)[ FD ]
Line_11 $$ final String handlerChainConfigFileResourcePath = classURI.resolve(handlerChainConfigFile).toString()-->Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)[ FD ]
Line_18 $$ if (config.exists() && config.isFile()) -->Line_19 $$ return config.openStream()[ CD ]
Line_2 $$ private static InputStream getInputStream(final ResourceRoot currentResourceRoot, final List<ResourceRoot> resourceRoots, final String handlerChainConfigFile, final String annotatedClassName) throws IOException -->Line_3 $$ if (handlerChainConfigFile.startsWith("file://") || handlerChainConfigFile.startsWith("http://")) [ CD ]
Line_2 $$ private static InputStream getInputStream(final ResourceRoot currentResourceRoot, final List<ResourceRoot> resourceRoots, final String handlerChainConfigFile, final String annotatedClassName) throws IOException -->Line_11 $$ final String handlerChainConfigFileResourcePath = classURI.resolve(handlerChainConfigFile).toString()[ FD ]
Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)-->Line_13 $$ if (config.exists() && config.isFile()) [ FD ]
Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)-->Line_19 $$ return config.openStream()[ FD ]
Line_11 $$ final String handlerChainConfigFileResourcePath = classURI.resolve(handlerChainConfigFile).toString()-->Line_23 $$ throw WSLogger.ROOT_LOGGER.missingHandlerChainConfigFile(handlerChainConfigFileResourcePath, currentResourceRoot)[ FD ]
Line_17 $$ config = rr.getRoot().getChild(handlerChainConfigFileResourcePath)-->Line_18 $$ if (config.exists() && config.isFile()) [ FD ]
Line_11 $$ final String handlerChainConfigFileResourcePath = classURI.resolve(handlerChainConfigFile).toString()-->Line_17 $$ config = rr.getRoot().getChild(handlerChainConfigFileResourcePath)[ FD ]
Line_3 $$ if (handlerChainConfigFile.startsWith("file://") || handlerChainConfigFile.startsWith("http://")) -->Line_4 $$ return new URL(handlerChainConfigFile).openStream()[ CD ]
Line_2 $$ private static InputStream getInputStream(final ResourceRoot currentResourceRoot, final List<ResourceRoot> resourceRoots, final String handlerChainConfigFile, final String annotatedClassName) throws IOException -->Line_23 $$ throw WSLogger.ROOT_LOGGER.missingHandlerChainConfigFile(handlerChainConfigFileResourcePath, currentResourceRoot)[ FD ]
Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)-->Line_14 $$ return config.openStream()[ FD ]
Line_2 $$ private static InputStream getInputStream(final ResourceRoot currentResourceRoot, final List<ResourceRoot> resourceRoots, final String handlerChainConfigFile, final String annotatedClassName) throws IOException -->Line_12 $$ VirtualFile config = currentResourceRoot.getRoot().getChild(handlerChainConfigFileResourcePath)[ FD ]
Line_3 $$ if (handlerChainConfigFile.startsWith("file://") || handlerChainConfigFile.startsWith("http://")) -->Line_11 $$ final String handlerChainConfigFileResourcePath = classURI.resolve(handlerChainConfigFile).toString()[ CD ]
