Line_4 $$ InputStream inputStream = null-->Line_23 $$ indexKeywords(searchContext, groupId, languageId, inputStream, keywordFieldName, typeFieldValue, maxNGramLength)[ FD ]
Line_16 $$ inputStream = url.openStream()-->Line_23 $$ indexKeywords(searchContext, groupId, languageId, inputStream, keywordFieldName, typeFieldValue, maxNGramLength)[ FD ]
Line_9 $$ URL url = getResource(dictionaryFileName)-->Line_16 $$ inputStream = url.openStream()[ FD ]
Line_27 $$ if (_log.isInfoEnabled()) -->Line_28 $$ _log.info("Finished indexing dictionary for " + dictionaryFileName)[ CD ]
Line_17 $$ if (inputStream == null) -->Line_18 $$ if (_log.isWarnEnabled()) [ CD ]
Line_16 $$ inputStream = url.openStream()-->Line_25 $$ StreamUtil.cleanUp(inputStream)[ FD ]
Line_11 $$ if (_log.isWarnEnabled()) -->Line_12 $$ _log.warn("Unable to read " + dictionaryFileName)[ CD ]
Line_4 $$ InputStream inputStream = null-->Line_17 $$ if (inputStream == null) [ FD ]
Line_9 $$ URL url = getResource(dictionaryFileName)-->Line_10 $$ if (url == null) [ FD ]
Line_16 $$ inputStream = url.openStream()-->Line_17 $$ if (inputStream == null) [ FD ]
Line_5 $$ if (_log.isInfoEnabled()) -->Line_6 $$ _log.info("Start indexing dictionary for " + dictionaryFileName)[ CD ]
Line_10 $$ if (url == null) -->Line_11 $$ if (_log.isWarnEnabled()) [ CD ]
Line_18 $$ if (_log.isWarnEnabled()) -->Line_19 $$ _log.warn("Unable to read " + dictionaryFileName)[ CD ]
Line_3 $$ for (String dictionaryFileName : dictionaryFileNames) -->Line_9 $$ URL url = getResource(dictionaryFileName)[ FD ]
Line_2 $$ protected void indexKeywords(SearchContext searchContext, long groupId, String languageId, String[] dictionaryFileNames, String keywordFieldName, String typeFieldValue, int maxNGramLength) throws Exception -->Line_23 $$ indexKeywords(searchContext, groupId, languageId, inputStream, keywordFieldName, typeFieldValue, maxNGramLength)[ FD ]
Line_4 $$ InputStream inputStream = null-->Line_16 $$ inputStream = url.openStream()[ FD ]
Line_4 $$ InputStream inputStream = null-->Line_25 $$ StreamUtil.cleanUp(inputStream)[ FD ]
