Line_11 $$ Dictionary<String, String> headers = _bundle.getHeaders()-->Line_12 $$ boolean jsSubmodules = GetterUtil.getBoolean(headers.get("JS-Submodules"))[ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObject(jsonTokener)-->Line_9 $$ _unversionedConfiguration = normalize(generateConfiguration(jsonObject, bundleWiring, false))[ FD ]
Line_2 $$ protected void urlToConfiguration(URL url, BundleWiring bundleWiring) -->Line_3 $$ if (url == null) [ CD ]
Line_2 $$ protected void urlToConfiguration(URL url, BundleWiring bundleWiring) -->Line_9 $$ _unversionedConfiguration = normalize(generateConfiguration(jsonObject, bundleWiring, false))[ FD ]
Line_8 $$ JSONObject jsonObject = new JSONObject(jsonTokener)-->Line_10 $$ _versionedConfiguration = normalize(generateConfiguration(jsonObject, bundleWiring, true))[ FD ]
Line_13 $$ if (jsSubmodules) -->Line_14 $$ _unversionedMapsConfiguration = normalize(generateMapsConfiguration(_unversionedConfiguration))[ CD ]
Line_2 $$ protected void urlToConfiguration(URL url, BundleWiring bundleWiring) -->Line_3 $$ if (url == null) [ FD ]
Line_2 $$ protected void urlToConfiguration(URL url, BundleWiring bundleWiring) -->Line_10 $$ _versionedConfiguration = normalize(generateConfiguration(jsonObject, bundleWiring, true))[ FD ]
Line_2 $$ protected void urlToConfiguration(URL url, BundleWiring bundleWiring) -->Line_6 $$ try (Reader reader = new InputStreamReader(url.openStream())) [ FD ]
Line_3 $$ if (url == null) -->Line_4 $$ return[ CD ]
