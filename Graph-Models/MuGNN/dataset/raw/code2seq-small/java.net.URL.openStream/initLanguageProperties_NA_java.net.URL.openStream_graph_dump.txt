Line_18 $$ if (locale != null) -->Line_27 $$ baseLanguagePropertiesLocation = languagePropertiesLocation[ CD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_38 $$ registerService(servletContextName, baseLanguagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_31 $$ if (baseLanguageURL != null) -->Line_33 $$ String languageId = LocaleUtil.toLanguageId(locale)[ CD ]
Line_8 $$ Locale locale = getLocale(languagePropertiesLocation)-->Line_9 $$ if (locale != null) [ FD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_31 $$ if (baseLanguageURL != null) [ CD ]
Line_28 $$ baseLanguageURL = url-->Line_31 $$ if (baseLanguageURL != null) [ FD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_10 $$ if (!checkPermission(PACLConstants.PORTAL_HOOK_PERMISSION_LANGUAGE_PROPERTIES_LOCALE, portletClassLoader, locale, "Rejecting locale " + locale)) [ FD ]
Line_14 $$ URL url = portletClassLoader.getResource(languagePropertiesLocation)-->Line_15 $$ if (url == null) [ FD ]
Line_28 $$ baseLanguageURL = url-->Line_34 $$ try (InputStream inputStream = baseLanguageURL.openStream()) [ FD ]
Line_8 $$ Locale locale = getLocale(languagePropertiesLocation)-->Line_19 $$ String languageId = LocaleUtil.toLanguageId(locale)[ FD ]
Line_21 $$ ResourceBundle resourceBundle = new LiferayResourceBundle(inputStream, StringPool.UTF8)-->Line_38 $$ registerService(servletContextName, baseLanguagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_5 $$ URL baseLanguageURL = null-->Line_31 $$ if (baseLanguageURL != null) [ FD ]
Line_7 $$ String languagePropertiesLocation = languagePropertiesElement.getText()-->Line_24 $$ registerService(servletContextName, languagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_22 $$ Map<String, Object> properties = new HashMap()-->Line_24 $$ registerService(servletContextName, languagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_6 $$ for (Element languagePropertiesElement : languagePropertiesElements) -->Line_7 $$ String languagePropertiesLocation = languagePropertiesElement.getText()[ FD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_5 $$ URL baseLanguageURL = null[ CD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_14 $$ URL url = portletClassLoader.getResource(languagePropertiesLocation)[ FD ]
Line_8 $$ Locale locale = getLocale(languagePropertiesLocation)-->Line_33 $$ String languageId = LocaleUtil.toLanguageId(locale)[ FD ]
Line_14 $$ URL url = portletClassLoader.getResource(languagePropertiesLocation)-->Line_20 $$ try (InputStream inputStream = url.openStream()) [ FD ]
Line_9 $$ if (locale != null) -->Line_10 $$ if (!checkPermission(PACLConstants.PORTAL_HOOK_PERMISSION_LANGUAGE_PROPERTIES_LOCALE, portletClassLoader, locale, "Rejecting locale " + locale)) [ CD ]
Line_7 $$ String languagePropertiesLocation = languagePropertiesElement.getText()-->Line_8 $$ Locale locale = getLocale(languagePropertiesLocation)[ FD ]
Line_5 $$ URL baseLanguageURL = null-->Line_28 $$ baseLanguageURL = url[ FD ]
Line_14 $$ URL url = portletClassLoader.getResource(languagePropertiesLocation)-->Line_28 $$ baseLanguageURL = url[ FD ]
Line_8 $$ Locale locale = getLocale(languagePropertiesLocation)-->Line_10 $$ if (!checkPermission(PACLConstants.PORTAL_HOOK_PERMISSION_LANGUAGE_PROPERTIES_LOCALE, portletClassLoader, locale, "Rejecting locale " + locale)) [ FD ]
Line_18 $$ if (locale != null) -->Line_28 $$ baseLanguageURL = url[ CD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_3 $$ List<Element> languagePropertiesElements = parentElement.elements("language-properties")[ FD ]
Line_21 $$ ResourceBundle resourceBundle = new LiferayResourceBundle(inputStream, StringPool.UTF8)-->Line_24 $$ registerService(servletContextName, languagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_8 $$ Locale locale = getLocale(languagePropertiesLocation)-->Line_18 $$ if (locale != null) [ FD ]
Line_22 $$ Map<String, Object> properties = new HashMap()-->Line_37 $$ properties.put("language.id", languageId)[ FD ]
Line_4 $$ String baseLanguagePropertiesLocation = null-->Line_38 $$ registerService(servletContextName, baseLanguagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_19 $$ String languageId = LocaleUtil.toLanguageId(locale)-->Line_37 $$ properties.put("language.id", languageId)[ FD ]
Line_18 $$ if (locale != null) -->Line_19 $$ String languageId = LocaleUtil.toLanguageId(locale)[ CD ]
Line_7 $$ String languagePropertiesLocation = languagePropertiesElement.getText()-->Line_14 $$ URL url = portletClassLoader.getResource(languagePropertiesLocation)[ FD ]
Line_27 $$ baseLanguagePropertiesLocation = languagePropertiesLocation-->Line_38 $$ registerService(servletContextName, baseLanguagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_7 $$ String languagePropertiesLocation = languagePropertiesElement.getText()-->Line_27 $$ baseLanguagePropertiesLocation = languagePropertiesLocation[ FD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_4 $$ String baseLanguagePropertiesLocation = null[ CD ]
Line_5 $$ URL baseLanguageURL = null-->Line_34 $$ try (InputStream inputStream = baseLanguageURL.openStream()) [ FD ]
Line_19 $$ String languageId = LocaleUtil.toLanguageId(locale)-->Line_23 $$ properties.put("language.id", languageId)[ FD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_24 $$ registerService(servletContextName, languagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_4 $$ String baseLanguagePropertiesLocation = null-->Line_27 $$ baseLanguagePropertiesLocation = languagePropertiesLocation[ FD ]
Line_22 $$ Map<String, Object> properties = new HashMap()-->Line_23 $$ properties.put("language.id", languageId)[ FD ]
Line_22 $$ Map<String, Object> properties = new HashMap()-->Line_38 $$ registerService(servletContextName, baseLanguagePropertiesLocation, ResourceBundle.class, resourceBundle, properties)[ FD ]
Line_2 $$ protected void initLanguageProperties(String servletContextName, ClassLoader portletClassLoader, Element parentElement) throws Exception -->Line_3 $$ List<Element> languagePropertiesElements = parentElement.elements("language-properties")[ CD ]
