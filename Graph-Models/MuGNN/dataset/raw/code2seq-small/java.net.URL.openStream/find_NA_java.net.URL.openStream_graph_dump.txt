Line_28 $$ reader = new ClassReader(inputStream)-->Line_32 $$ char[] charBuffer = new char[reader.getMaxStringLength()][ FD ]
Line_18 $$ if (resource == null) -->Line_20 $$ return[ CD ]
Line_28 $$ reader = new ClassReader(inputStream)-->Line_34 $$ int itemOffset = reader.getItem(i)[ FD ]
Line_38 $$ Type type = Type.getObjectType(classDescriptor)-->Line_39 $$ while (type.getSort() == Type.ARRAY) [ FD ]
Line_18 $$ if (resource == null) -->Line_19 $$ LOGGER.warn("Could not determine classpath for [ CD ]
Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) -->Line_38 $$ Type type = Type.getObjectType(classDescriptor)[ CD ]
Line_6 $$ ClassLoader targetClassLoader = target.getClassLoader()-->Line_16 $$ URL resource = targetClassLoader.getResource(resourceName)[ FD ]
Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) -->Line_46 $$ String className = type.getClassName()[ CD ]
Line_33 $$ for (int i = 1; i < reader.getItemCount(); i++) -->Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) [ CD ]
Line_39 $$ while (type.getSort() == Type.ARRAY) -->Line_40 $$ type = type.getElementType()[ CD ]
Line_40 $$ type = type.getElementType()-->Line_39 $$ while (type.getSort() == Type.ARRAY) [ FD ]
Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) -->Line_59 $$ find(cl, visited, dest)[ CD ]
Line_28 $$ reader = new ClassReader(inputStream)-->Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) [ FD ]
Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) -->Line_47 $$ if (className.equals(target.getName())) [ CD ]
Line_6 $$ ClassLoader targetClassLoader = target.getClassLoader()-->Line_7 $$ if (targetClassLoader == null) [ FD ]
Line_40 $$ type = type.getElementType()-->Line_42 $$ if (type.getSort() != Type.OBJECT) [ FD ]
Line_15 $$ String resourceName = target.getName().replace('.', '/') + ".class"-->Line_16 $$ URL resource = targetClassLoader.getResource(resourceName)[ FD ]
Line_38 $$ Type type = Type.getObjectType(classDescriptor)-->Line_42 $$ if (type.getSort() != Type.OBJECT) [ FD ]
Line_16 $$ URL resource = targetClassLoader.getResource(resourceName)-->Line_26 $$ InputStream inputStream = resource.openStream()[ FD ]
Line_33 $$ for (int i = 1; i < reader.getItemCount(); i++) -->Line_34 $$ int itemOffset = reader.getItem(i)[ CD ]
Line_38 $$ Type type = Type.getObjectType(classDescriptor)-->Line_40 $$ type = type.getElementType()[ FD ]
Line_16 $$ URL resource = targetClassLoader.getResource(resourceName)-->Line_18 $$ if (resource == null) [ FD ]
Line_33 $$ for (int i = 1; i < reader.getItemCount(); i++) -->Line_34 $$ int itemOffset = reader.getItem(i)[ FD ]
Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) -->Line_42 $$ if (type.getSort() != Type.OBJECT) [ CD ]
Line_6 $$ ClassLoader targetClassLoader = target.getClassLoader()-->Line_53 $$ cl = Class.forName(className, false, targetClassLoader)[ FD ]
Line_38 $$ Type type = Type.getObjectType(classDescriptor)-->Line_46 $$ String className = type.getClassName()[ FD ]
Line_26 $$ InputStream inputStream = resource.openStream()-->Line_30 $$ inputStream.close()[ FD ]
Line_28 $$ reader = new ClassReader(inputStream)-->Line_33 $$ for (int i = 1; i < reader.getItemCount(); i++) [ FD ]
Line_40 $$ type = type.getElementType()-->Line_46 $$ String className = type.getClassName()[ FD ]
Line_35 $$ if (itemOffset > 0 && reader.readByte(itemOffset - 1) == 7) -->Line_39 $$ while (type.getSort() == Type.ARRAY) [ CD ]
Line_22 $$ File classPathRoot = ClasspathUtil.getClasspathForClass(target)-->Line_23 $$ dest.add(classPathRoot.toURI().toURL())[ FD ]
