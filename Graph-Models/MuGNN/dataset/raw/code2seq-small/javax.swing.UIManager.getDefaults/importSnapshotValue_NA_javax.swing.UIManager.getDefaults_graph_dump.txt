Line_16 $$ while (e.hasMoreElements()) -->Line_17 $$ Object key = e.nextElement()[ CD ]
Line_4 $$ if (component.getParent() != null) -->Line_26 $$ if (!Comparing.equal(componentFont, parentFont)) [ CD ]
Line_4 $$ if (component.getParent() != null) -->Line_25 $$ Font parentFont = (Font) myReadMethod.invoke(component.getParent(), EMPTY_OBJECT_ARRAY)[ CD ]
Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)-->Line_28 $$ int fontStyle = componentFont.getStyle() == parentFont.getStyle() ? -1 : componentFont.getStyle()[ FD ]
Line_4 $$ if (component.getParent() != null) -->Line_6 $$ if (componentFont instanceof FontUIResource) [ CD ]
Line_19 $$ if (key instanceof String && value == componentFont) -->Line_20 $$ setValue(radComponent, FontDescriptor.fromSwingFont((String) key))[ CD ]
Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)-->Line_26 $$ if (!Comparing.equal(componentFont, parentFont)) [ FD ]
Line_9 $$ JComponent newComponent = (JComponent) constructor.newInstance(ArrayUtil.EMPTY_OBJECT_ARRAY)-->Line_10 $$ Font defaultFont = (Font) myReadMethod.invoke(newComponent, EMPTY_OBJECT_ARRAY)[ FD ]
Line_26 $$ if (!Comparing.equal(componentFont, parentFont)) -->Line_28 $$ int fontStyle = componentFont.getStyle() == parentFont.getStyle() ? -1 : componentFont.getStyle()[ CD ]
Line_10 $$ Font defaultFont = (Font) myReadMethod.invoke(newComponent, EMPTY_OBJECT_ARRAY)-->Line_11 $$ if (defaultFont == componentFont) [ FD ]
Line_26 $$ if (!Comparing.equal(componentFont, parentFont)) -->Line_27 $$ String fontName = componentFont.getName().equals(parentFont.getName()) ? null : componentFont.getName()[ CD ]
Line_25 $$ Font parentFont = (Font) myReadMethod.invoke(component.getParent(), EMPTY_OBJECT_ARRAY)-->Line_26 $$ if (!Comparing.equal(componentFont, parentFont)) [ FD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_7 $$ final Constructor constructor = component.getClass().getConstructor(ArrayUtil.EMPTY_CLASS_ARRAY)[ CD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_14 $$ UIDefaults defaults = UIManager.getDefaults()[ CD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_16 $$ while (e.hasMoreElements()) [ CD ]
Line_26 $$ if (!Comparing.equal(componentFont, parentFont)) -->Line_29 $$ int fontSize = componentFont.getSize() == parentFont.getSize() ? -1 : componentFont.getSize()[ CD ]
Line_17 $$ Object key = e.nextElement()-->Line_18 $$ Object value = defaults.get(key)[ FD ]
Line_25 $$ Font parentFont = (Font) myReadMethod.invoke(component.getParent(), EMPTY_OBJECT_ARRAY)-->Line_28 $$ int fontStyle = componentFont.getStyle() == parentFont.getStyle() ? -1 : componentFont.getStyle()[ FD ]
Line_7 $$ final Constructor constructor = component.getClass().getConstructor(ArrayUtil.EMPTY_CLASS_ARRAY)-->Line_9 $$ JComponent newComponent = (JComponent) constructor.newInstance(ArrayUtil.EMPTY_OBJECT_ARRAY)[ FD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_15 $$ Enumeration e = defaults.keys()[ CD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_8 $$ constructor.setAccessible(true)[ CD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_10 $$ Font defaultFont = (Font) myReadMethod.invoke(newComponent, EMPTY_OBJECT_ARRAY)[ CD ]
Line_2 $$ public void importSnapshotValue(final SnapshotContext context, final JComponent component, final RadComponent radComponent) -->Line_25 $$ Font parentFont = (Font) myReadMethod.invoke(component.getParent(), EMPTY_OBJECT_ARRAY)[ FD ]
Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)-->Line_11 $$ if (defaultFont == componentFont) [ FD ]
Line_14 $$ UIDefaults defaults = UIManager.getDefaults()-->Line_18 $$ Object value = defaults.get(key)[ FD ]
Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)-->Line_27 $$ String fontName = componentFont.getName().equals(parentFont.getName()) ? null : componentFont.getName()[ FD ]
Line_2 $$ public void importSnapshotValue(final SnapshotContext context, final JComponent component, final RadComponent radComponent) -->Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)[ FD ]
Line_2 $$ public void importSnapshotValue(final SnapshotContext context, final JComponent component, final RadComponent radComponent) -->Line_7 $$ final Constructor constructor = component.getClass().getConstructor(ArrayUtil.EMPTY_CLASS_ARRAY)[ FD ]
Line_2 $$ public void importSnapshotValue(final SnapshotContext context, final JComponent component, final RadComponent radComponent) -->Line_4 $$ if (component.getParent() != null) [ FD ]
Line_16 $$ while (e.hasMoreElements()) -->Line_19 $$ if (key instanceof String && value == componentFont) [ CD ]
Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)-->Line_6 $$ if (componentFont instanceof FontUIResource) [ FD ]
Line_15 $$ Enumeration e = defaults.keys()-->Line_16 $$ while (e.hasMoreElements()) [ FD ]
Line_2 $$ public void importSnapshotValue(final SnapshotContext context, final JComponent component, final RadComponent radComponent) -->Line_20 $$ setValue(radComponent, FontDescriptor.fromSwingFont((String) key))[ FD ]
Line_16 $$ while (e.hasMoreElements()) -->Line_18 $$ Object value = defaults.get(key)[ CD ]
Line_19 $$ if (key instanceof String && value == componentFont) -->Line_21 $$ return[ CD ]
Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)-->Line_29 $$ int fontSize = componentFont.getSize() == parentFont.getSize() ? -1 : componentFont.getSize()[ FD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_11 $$ if (defaultFont == componentFont) [ CD ]
Line_2 $$ public void importSnapshotValue(final SnapshotContext context, final JComponent component, final RadComponent radComponent) -->Line_30 $$ setValue(radComponent, new FontDescriptor(fontName, fontStyle, fontSize))[ FD ]
Line_15 $$ Enumeration e = defaults.keys()-->Line_17 $$ Object key = e.nextElement()[ FD ]
Line_4 $$ if (component.getParent() != null) -->Line_5 $$ Font componentFont = (Font) myReadMethod.invoke(component, EMPTY_OBJECT_ARRAY)[ CD ]
Line_26 $$ if (!Comparing.equal(componentFont, parentFont)) -->Line_30 $$ setValue(radComponent, new FontDescriptor(fontName, fontStyle, fontSize))[ CD ]
Line_25 $$ Font parentFont = (Font) myReadMethod.invoke(component.getParent(), EMPTY_OBJECT_ARRAY)-->Line_27 $$ String fontName = componentFont.getName().equals(parentFont.getName()) ? null : componentFont.getName()[ FD ]
Line_25 $$ Font parentFont = (Font) myReadMethod.invoke(component.getParent(), EMPTY_OBJECT_ARRAY)-->Line_29 $$ int fontSize = componentFont.getSize() == parentFont.getSize() ? -1 : componentFont.getSize()[ FD ]
Line_7 $$ final Constructor constructor = component.getClass().getConstructor(ArrayUtil.EMPTY_CLASS_ARRAY)-->Line_8 $$ constructor.setAccessible(true)[ FD ]
Line_11 $$ if (defaultFont == componentFont) -->Line_12 $$ return[ CD ]
Line_6 $$ if (componentFont instanceof FontUIResource) -->Line_9 $$ JComponent newComponent = (JComponent) constructor.newInstance(ArrayUtil.EMPTY_OBJECT_ARRAY)[ CD ]
Line_14 $$ UIDefaults defaults = UIManager.getDefaults()-->Line_15 $$ Enumeration e = defaults.keys()[ FD ]
