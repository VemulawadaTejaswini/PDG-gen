Line_10 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_24 $$ contentComponent.addFocusListener(focusListener)[ FD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_3 $$ final Editor editor = event.getEditor()[ FD ]
Line_3 $$ final Editor editor = event.getEditor()-->Line_13 $$ registerEditor(editor)[ FD ]
Line_25 $$ myExecuteOnEditorRelease.put(event.getEditor(), new Runnable() -->Line_27 $$ component.removeHierarchyListener(hierarchyListener)[ CD ]
Line_4 $$ if (editor.getProject() != null && editor.getProject() != myProject || myProject.isDisposed())-->Line_5 $$ return[ CD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_10 $$ final JComponent contentComponent = editor.getContentComponent()[ CD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_25 $$ myExecuteOnEditorRelease.put(event.getEditor(), new Runnable() [ CD ]
Line_9 $$ final JComponent component = editor.getComponent()-->Line_16 $$ component.addHierarchyListener(hierarchyListener)[ FD ]
Line_9 $$ final JComponent component = editor.getComponent()-->Line_27 $$ component.removeHierarchyListener(hierarchyListener)[ FD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_4 $$ if (editor.getProject() != null && editor.getProject() != myProject || myProject.isDisposed())[ CD ]
Line_7 $$ if (psiFile == null)-->Line_8 $$ return[ CD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_3 $$ final Editor editor = event.getEditor()[ CD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_7 $$ if (psiFile == null)[ CD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_6 $$ final PsiFile psiFile = PsiDocumentManager.getInstance(myProject).getPsiFile(editor.getDocument())[ CD ]
Line_3 $$ final Editor editor = event.getEditor()-->Line_10 $$ final JComponent contentComponent = editor.getContentComponent()[ FD ]
Line_3 $$ final Editor editor = event.getEditor()-->Line_9 $$ final JComponent component = editor.getComponent()[ FD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_11 $$ final HierarchyListener hierarchyListener = new HierarchyListener() [ CD ]
Line_25 $$ myExecuteOnEditorRelease.put(event.getEditor(), new Runnable() -->Line_28 $$ contentComponent.removeFocusListener(focusListener)[ CD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_9 $$ final JComponent component = editor.getComponent()[ CD ]
Line_3 $$ final Editor editor = event.getEditor()-->Line_19 $$ editorFocused(editor)[ FD ]
Line_17 $$ final FocusListener focusListener = new FocusListener() -->Line_19 $$ editorFocused(editor)[ CD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_24 $$ contentComponent.addFocusListener(focusListener)[ CD ]
Line_3 $$ final Editor editor = event.getEditor()-->Line_4 $$ if (editor.getProject() != null && editor.getProject() != myProject || myProject.isDisposed())[ FD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_25 $$ myExecuteOnEditorRelease.put(event.getEditor(), new Runnable() [ FD ]
Line_10 $$ final JComponent contentComponent = editor.getContentComponent()-->Line_28 $$ contentComponent.removeFocusListener(focusListener)[ FD ]
Line_2 $$ public void editorCreated(@NotNull EditorFactoryEvent event) -->Line_16 $$ component.addHierarchyListener(hierarchyListener)[ CD ]
Line_11 $$ final HierarchyListener hierarchyListener = new HierarchyListener() -->Line_16 $$ component.addHierarchyListener(hierarchyListener)[ FD ]
Line_11 $$ final HierarchyListener hierarchyListener = new HierarchyListener() -->Line_27 $$ component.removeHierarchyListener(hierarchyListener)[ FD ]
Line_11 $$ final HierarchyListener hierarchyListener = new HierarchyListener() -->Line_13 $$ registerEditor(editor)[ CD ]
Line_3 $$ final Editor editor = event.getEditor()-->Line_6 $$ final PsiFile psiFile = PsiDocumentManager.getInstance(myProject).getPsiFile(editor.getDocument())[ FD ]
Line_6 $$ final PsiFile psiFile = PsiDocumentManager.getInstance(myProject).getPsiFile(editor.getDocument())-->Line_7 $$ if (psiFile == null)[ FD ]
