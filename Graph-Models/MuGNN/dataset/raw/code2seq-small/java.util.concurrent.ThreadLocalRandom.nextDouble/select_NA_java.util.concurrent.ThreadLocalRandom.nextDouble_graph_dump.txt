Line_3 $$ if (settings.columns.slice) -->Line_4 $$ int count = (int) columnCount.next()[ CD ]
Line_6 $$ if (count == settings.columns.maxColumnsPerKey)-->Line_9 $$ start = 1 + ThreadLocalRandom.current().nextInt(settings.columns.maxColumnsPerKey - count)[ CD ]
Line_4 $$ int count = (int) columnCount.next()-->Line_6 $$ if (count == settings.columns.maxColumnsPerKey)[ FD ]
Line_5 $$ int start-->Line_9 $$ start = 1 + ThreadLocalRandom.current().nextInt(settings.columns.maxColumnsPerKey - count)[ FD ]
Line_26 $$ while (c < count) -->Line_27 $$ indices[c] = o + c[ CD ]
Line_22 $$ o += Math.round(rnd.nextDouble() * (leeway / (double) spreadover))-->Line_23 $$ indices[c] = o + c[ FD ]
Line_18 $$ int c = 0, o = 0-->Line_24 $$ c++[ FD ]
Line_2 $$ ColumnSelection select() -->Line_26 $$ while (c < count) [ CD ]
Line_4 $$ int count = (int) columnCount.next()-->Line_26 $$ while (c < count) [ FD ]
Line_18 $$ int c = 0, o = 0-->Line_23 $$ indices[c] = o + c[ FD ]
Line_19 $$ while (c < count && count + o < totalCount) -->Line_24 $$ c++[ CD ]
Line_2 $$ ColumnSelection select() -->Line_3 $$ if (settings.columns.slice) [ CD ]
Line_19 $$ while (c < count && count + o < totalCount) -->Line_22 $$ o += Math.round(rnd.nextDouble() * (leeway / (double) spreadover))[ CD ]
Line_18 $$ int c = 0, o = 0-->Line_27 $$ indices[c] = o + c[ FD ]
Line_6 $$ if (count == settings.columns.maxColumnsPerKey)-->Line_7 $$ start = 0[ CD ]
Line_2 $$ ColumnSelection select() -->Line_14 $$ if (count == settings.columns.names.size())[ CD ]
Line_2 $$ ColumnSelection select() -->Line_17 $$ int[] indices = new int[count][ CD ]
Line_7 $$ start = 0-->Line_9 $$ start = 1 + ThreadLocalRandom.current().nextInt(settings.columns.maxColumnsPerKey - count)[ FD ]
Line_2 $$ ColumnSelection select() -->Line_30 $$ return new ColumnSelection(indices, 0, 0)[ CD ]
Line_22 $$ o += Math.round(rnd.nextDouble() * (leeway / (double) spreadover))-->Line_27 $$ indices[c] = o + c[ FD ]
Line_2 $$ ColumnSelection select() -->Line_16 $$ ThreadLocalRandom rnd = ThreadLocalRandom.current()[ CD ]
Line_2 $$ ColumnSelection select() -->Line_19 $$ while (c < count && count + o < totalCount) [ CD ]
Line_18 $$ int c = 0, o = 0-->Line_26 $$ while (c < count) [ FD ]
Line_14 $$ if (count == settings.columns.names.size())-->Line_15 $$ return new ColumnSelection(null, 0, count)[ CD ]
Line_18 $$ int c = 0, o = 0-->Line_22 $$ o += Math.round(rnd.nextDouble() * (leeway / (double) spreadover))[ FD ]
Line_4 $$ int count = (int) columnCount.next()-->Line_14 $$ if (count == settings.columns.names.size())[ FD ]
Line_18 $$ int c = 0, o = 0-->Line_28 $$ c++[ FD ]
Line_2 $$ ColumnSelection select() -->Line_18 $$ int c = 0, o = 0[ CD ]
Line_16 $$ ThreadLocalRandom rnd = ThreadLocalRandom.current()-->Line_22 $$ o += Math.round(rnd.nextDouble() * (leeway / (double) spreadover))[ FD ]
Line_3 $$ if (settings.columns.slice) -->Line_5 $$ int start[ CD ]
Line_2 $$ ColumnSelection select() -->Line_13 $$ int totalCount = settings.columns.names.size()[ CD ]
Line_3 $$ if (settings.columns.slice) -->Line_10 $$ return new ColumnSelection(null, start, start + count)[ CD ]
Line_19 $$ while (c < count && count + o < totalCount) -->Line_20 $$ int leeway = totalCount - (count + o)[ CD ]
Line_5 $$ int start-->Line_7 $$ start = 0[ FD ]
Line_19 $$ while (c < count && count + o < totalCount) -->Line_21 $$ int spreadover = count - c[ CD ]
Line_26 $$ while (c < count) -->Line_28 $$ c++[ CD ]
Line_3 $$ if (settings.columns.slice) -->Line_6 $$ if (count == settings.columns.maxColumnsPerKey)[ CD ]
Line_19 $$ while (c < count && count + o < totalCount) -->Line_23 $$ indices[c] = o + c[ CD ]
