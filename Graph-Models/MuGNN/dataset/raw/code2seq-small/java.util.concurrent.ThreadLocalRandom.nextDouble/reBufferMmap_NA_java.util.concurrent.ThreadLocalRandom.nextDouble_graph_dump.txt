Line_9 $$ int chunkOffset = Ints.checkedCast(chunk.offset - segmentOffset)-->Line_21 $$ compressedChunk.position(chunkOffset).limit(chunkOffset + chunk.length)[ FD ]
Line_4 $$ long position = current()-->Line_6 $$ CompressionMetadata.Chunk chunk = metadata.chunkFor(position)[ FD ]
Line_10 $$ ByteBuffer compressedChunk = region.buffer.duplicate()-->Line_24 $$ if (compressedChunk.getInt() != (int) checksum.getValue())[ FD ]
Line_20 $$ if (getCrcCheckChance() > ThreadLocalRandom.current().nextDouble()) -->Line_22 $$ metadata.checksumType.update(checksum, compressedChunk)[ CD ]
Line_20 $$ if (getCrcCheckChance() > ThreadLocalRandom.current().nextDouble()) -->Line_21 $$ compressedChunk.position(chunkOffset).limit(chunkOffset + chunk.length)[ CD ]
Line_20 $$ if (getCrcCheckChance() > ThreadLocalRandom.current().nextDouble()) -->Line_24 $$ if (compressedChunk.getInt() != (int) checksum.getValue())[ CD ]
Line_30 $$ if (bufferOffset + buffer.limit() > length())-->Line_31 $$ buffer.limit((int) (length() - bufferOffset))[ CD ]
Line_10 $$ ByteBuffer compressedChunk = region.buffer.duplicate()-->Line_23 $$ compressedChunk.limit(compressedChunk.capacity())[ FD ]
Line_10 $$ ByteBuffer compressedChunk = region.buffer.duplicate()-->Line_21 $$ compressedChunk.position(chunkOffset).limit(chunkOffset + chunk.length)[ FD ]
Line_10 $$ ByteBuffer compressedChunk = region.buffer.duplicate()-->Line_14 $$ metadata.compressor().uncompress(compressedChunk, buffer)[ FD ]
Line_20 $$ if (getCrcCheckChance() > ThreadLocalRandom.current().nextDouble()) -->Line_26 $$ checksum.reset()[ CD ]
Line_7 $$ MmappedRegions.Region region = regions.floor(chunk.offset)-->Line_8 $$ long segmentOffset = region.bottom()[ FD ]
Line_10 $$ ByteBuffer compressedChunk = region.buffer.duplicate()-->Line_22 $$ metadata.checksumType.update(checksum, compressedChunk)[ FD ]
Line_20 $$ if (getCrcCheckChance() > ThreadLocalRandom.current().nextDouble()) -->Line_23 $$ compressedChunk.limit(compressedChunk.capacity())[ CD ]
Line_9 $$ int chunkOffset = Ints.checkedCast(chunk.offset - segmentOffset)-->Line_11 $$ compressedChunk.position(chunkOffset).limit(chunkOffset + chunk.length)[ FD ]
Line_10 $$ ByteBuffer compressedChunk = region.buffer.duplicate()-->Line_11 $$ compressedChunk.position(chunkOffset).limit(chunkOffset + chunk.length)[ FD ]
