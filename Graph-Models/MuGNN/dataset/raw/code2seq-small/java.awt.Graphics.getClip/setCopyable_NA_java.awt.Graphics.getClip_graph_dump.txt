Line_31 $$ myEditorPane.addFocusListener(new FocusAdapter() -->Line_35 $$ int caretPosition = myEditorPane.getCaretPosition()[ CD ]
Line_2 $$ public JBLabel setCopyable(boolean copyable) -->Line_58 $$ return this[ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_5 $$ final JLabel ellipsisLabel = new JBLabel("...")[ CD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_10 $$ boolean paintEllipsis = getPreferredSize().width > size.width && !myMultiline[ CD ]
Line_11 $$ if (!paintEllipsis) -->Line_14 $$ Dimension ellipsisSize = ellipsisLabel.getPreferredSize()[ CD ]
Line_11 $$ if (!paintEllipsis) -->Line_27 $$ g.translate(-endOffset, 0)[ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_45 $$ UIUtil.putClientProperty(myEditorPane, UIUtil.NOT_IN_HIERARCHY_COMPONENTS, Collections.singleton(ellipsisLabel))[ CD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_9 $$ Dimension size = getSize()[ CD ]
Line_10 $$ boolean paintEllipsis = getPreferredSize().width > size.width && !myMultiline-->Line_11 $$ if (!paintEllipsis) [ FD ]
Line_11 $$ if (!paintEllipsis) -->Line_23 $$ g.setClip(oldClip)[ CD ]
Line_11 $$ if (!paintEllipsis) -->Line_12 $$ super.paint(g)[ CD ]
Line_5 $$ final JLabel ellipsisLabel = new JBLabel("...")-->Line_14 $$ Dimension ellipsisSize = ellipsisLabel.getPreferredSize()[ FD ]
Line_5 $$ final JLabel ellipsisLabel = new JBLabel("...")-->Line_45 $$ UIUtil.putClientProperty(myEditorPane, UIUtil.NOT_IN_HIERARCHY_COMPONENTS, Collections.singleton(ellipsisLabel))[ FD ]
Line_35 $$ int caretPosition = myEditorPane.getCaretPosition()-->Line_37 $$ myEditorPane.setSelectionEnd(caretPosition)[ FD ]
Line_31 $$ myEditorPane.addFocusListener(new FocusAdapter() -->Line_33 $$ if (myEditorPane == null)[ CD ]
Line_11 $$ if (!paintEllipsis) -->Line_25 $$ ellipsisLabel.setSize(ellipsisSize)[ CD ]
Line_31 $$ myEditorPane.addFocusListener(new FocusAdapter() -->Line_36 $$ myEditorPane.setSelectionStart(caretPosition)[ CD ]
Line_35 $$ int caretPosition = myEditorPane.getCaretPosition()-->Line_36 $$ myEditorPane.setSelectionStart(caretPosition)[ FD ]
Line_4 $$ if (myEditorPane == null) -->Line_46 $$ myEditorPane.setEditorKit(UIUtil.getHTMLEditorKit())[ CD ]
Line_17 $$ endOffset = modelToView(viewToModel(new Point(endOffset, 0)) - 1).x-->Line_27 $$ g.translate(-endOffset, 0)[ FD ]
Line_11 $$ if (!paintEllipsis) -->Line_21 $$ g.clipRect(0, 0, endOffset, size.height)[ CD ]
Line_15 $$ int endOffset = size.width - ellipsisSize.width-->Line_24 $$ g.translate(endOffset, 0)[ FD ]
Line_4 $$ if (myEditorPane == null) -->Line_51 $$ updateLayout()[ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_47 $$ updateStyle(myEditorPane)[ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_49 $$ checkMultiline()[ CD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_21 $$ g.clipRect(0, 0, endOffset, size.height)[ FD ]
Line_2 $$ public JBLabel setCopyable(boolean copyable) -->Line_3 $$ if (copyable ^ myEditorPane != null) [ FD ]
Line_4 $$ if (myEditorPane == null) -->Line_31 $$ myEditorPane.addFocusListener(new FocusAdapter() [ CD ]
Line_15 $$ int endOffset = size.width - ellipsisSize.width-->Line_27 $$ g.translate(-endOffset, 0)[ FD ]
Line_11 $$ if (!paintEllipsis) -->Line_20 $$ Shape oldClip = g.getClip()[ CD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_26 $$ ellipsisLabel.paint(g)[ FD ]
Line_4 $$ if (myEditorPane == null) -->Line_44 $$ myEditorPane.setBorder(null)[ CD ]
Line_17 $$ endOffset = modelToView(viewToModel(new Point(endOffset, 0)) - 1).x-->Line_24 $$ g.translate(endOffset, 0)[ FD ]
Line_14 $$ Dimension ellipsisSize = ellipsisLabel.getPreferredSize()-->Line_25 $$ ellipsisLabel.setSize(ellipsisSize)[ FD ]
Line_11 $$ if (!paintEllipsis) -->Line_22 $$ super.paint(g)[ CD ]
Line_11 $$ if (!paintEllipsis) -->Line_24 $$ g.translate(endOffset, 0)[ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_41 $$ myEditorPane.setEditable(false)[ CD ]
Line_3 $$ if (copyable ^ myEditorPane != null) -->Line_4 $$ if (myEditorPane == null) [ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_42 $$ myEditorPane.setBackground(UIUtil.TRANSPARENT_COLOR)[ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_50 $$ myEditorPane.setCaretPosition(0)[ CD ]
Line_11 $$ if (!paintEllipsis) -->Line_26 $$ ellipsisLabel.paint(g)[ CD ]
Line_15 $$ int endOffset = size.width - ellipsisSize.width-->Line_17 $$ endOffset = modelToView(viewToModel(new Point(endOffset, 0)) - 1).x[ FD ]
Line_5 $$ final JLabel ellipsisLabel = new JBLabel("...")-->Line_26 $$ ellipsisLabel.paint(g)[ FD ]
Line_17 $$ endOffset = modelToView(viewToModel(new Point(endOffset, 0)) - 1).x-->Line_21 $$ g.clipRect(0, 0, endOffset, size.height)[ FD ]
Line_4 $$ if (myEditorPane == null) -->Line_43 $$ myEditorPane.setOpaque(false)[ CD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_27 $$ g.translate(-endOffset, 0)[ FD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_24 $$ g.translate(endOffset, 0)[ FD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_23 $$ g.setClip(oldClip)[ FD ]
Line_20 $$ Shape oldClip = g.getClip()-->Line_23 $$ g.setClip(oldClip)[ FD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_12 $$ super.paint(g)[ FD ]
Line_4 $$ if (myEditorPane == null) -->Line_40 $$ myEditorPane.setContentType("text/html")[ CD ]
Line_31 $$ myEditorPane.addFocusListener(new FocusAdapter() -->Line_37 $$ myEditorPane.setSelectionEnd(caretPosition)[ CD ]
Line_2 $$ public JBLabel setCopyable(boolean copyable) -->Line_3 $$ if (copyable ^ myEditorPane != null) [ CD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_20 $$ Shape oldClip = g.getClip()[ FD ]
Line_15 $$ int endOffset = size.width - ellipsisSize.width-->Line_21 $$ g.clipRect(0, 0, endOffset, size.height)[ FD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_11 $$ if (!paintEllipsis) [ CD ]
Line_5 $$ final JLabel ellipsisLabel = new JBLabel("...")-->Line_25 $$ ellipsisLabel.setSize(ellipsisSize)[ FD ]
Line_4 $$ if (myEditorPane == null) -->Line_48 $$ myEditorPane.setText(getText())[ CD ]
Line_7 $$ myEditorPane = new JEditorPane() -->Line_22 $$ super.paint(g)[ FD ]
Line_11 $$ if (!paintEllipsis) -->Line_15 $$ int endOffset = size.width - ellipsisSize.width[ CD ]
Line_33 $$ if (myEditorPane == null)-->Line_34 $$ return[ CD ]
Line_4 $$ if (myEditorPane == null) -->Line_53 $$ removeAll()[ CD ]
