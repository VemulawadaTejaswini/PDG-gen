
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class430.getTimestamp()#1{
    Calendar calendar = Calendar.getInstance();
    return dateFormat.format(calendar.getTime());
}
    
   
  
   







 Instance 1







   
  
   
    
Class40.getDate(String format)#0{
        Calendar cal = Calendar.getInstance();
        return dateFormat.format(cal.getTime());
}
    
   
  
   







 Instance 2







   
  
   
    
Class430.testSimpleDate()#0{
        Calendar calendar = Calendar.getInstance();
        Date in = calendar.getTime();
        DateTime out = new DateTime(in);
}
    
   
  
   







 Instance 3







   
  
   
    
Class200.testAddRounding()#0{
        Calendar cal = Calendar.getInstance();
        long origTime = cal.getTime().getTime();
}
    
   
  
   







 Instance 4







   
  
   
    
Class170.testDateConversion()#0{
    Calendar refCal = Calendar.getInstance(java.util.TimeZone.getTimeZone("UTC"));
    Date refDate = refCal.getTime();
    TimeStamp ts = new TimeStamp(refDate);
    assertEquals("refDate.getTime()", refDate.getTime(), ts.getTime());
}
    
   
  
   







 Instance 5







   
  
   
    
Class800.testDateToStringConversion(){
        Calendar date = Calendar.getInstance();
        String dateText = view.getDateFormatter().format(date.getTime());
        view.setDate(date);
        assertThat(view.getText(), equalTo(dateText));
}
    
   
  
   







 Instance 6







   
  
   
    
Class350.convertCalendarToDate(){
        Calendar cal = Calendar.getInstance();
        assertThat(ConversionUtil.convert(cal, Date.class), is(cal.getTime()));
}
    
   
  
   







 Instance 7







   
  
   
    
Class720.getNextJobExecution(UserAccount owner)#1{
        Calendar today = Calendar.getInstance();
        JobExecution jobExecution = new JobExecution(this, owner, today.getTime());
}
    
   
  
   







 Instance 8







   
  
   
    
Class660.testSetAndGet()#0{
    Calendar c = Calendar.getInstance();
    Date date = c.getTime();
    d.set(date);
    assertEquals(date, d.get());
}
    
   
  
   







 Instance 9







   
  
   
    
Class730.openTimestampedFile()#0{
        Calendar calendar = Calendar.getInstance();
        String filename = sDateFormatter.format(
                calendar.getTime()) + ".json";
}
    
   
  
   







 Instance 10







   
  
   
    
Class470.testSetDate(){
        Calendar cal = Calendar.getInstance();
        Date date = cal.getTime();
        instance.setDate( date );
        assertEquals( "Date value not set correctly", date, instance.getDate() );
}
    
   
  
   







 Instance 11







   
  
   
    
Class50.testCheckDateWithoutTimeZone2(){
        final Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone("America/Los_Angeles"));
        final Date date = calendar.getTime();
        final Date checkDateWithTimeZone = exampleSProcServiceDateConversion.checkDateWithTimeZone(date);
        Assert.assertEquals(date, checkDateWithTimeZone);
}
    
   
  
   







 Instance 12







   
  
   
    
Class650.shouldThrowExceptionIfStartDateEqualToCurrentDateWhenDeletingPeriod()#0{
    Calendar periodStartDate = Calendar.getInstance();
    ProcessingPeriod processingPeriod = make(a(defaultProcessingPeriod, with(startDate, periodStartDate.getTime())));
    when(mapper.getById(processingPeriod.getId())).thenReturn(processingPeriod);
}
    
   
  
   





