
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class750.format(Calendar cal)#0{
        return dateFormat.format(cal.getTime());
}
    
   
  
   







 Instance 1







   
  
   
    
Class310.compare(final Calendar expected,final Calendar actual)#1{
                + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime());
}
    
   
  
   







 Instance 2







   
  
   
    
Class580.getValue(TimePicker dp)#0{
                        return df.format(c.getTime());
}
    
   
  
   







 Instance 3







   
  
   
    
Class310.compare(final Calendar expected,final Calendar actual)#0{
        final String msg = "Locale: " + locale + " FirstDayOfWeek: " + actual.getFirstDayOfWeek() + " Expected: "
                + f.format(expected.getTime()) + " Actual: " + f.format(actual.getTime());
        assertEquals(msg, expected.get(Calendar.YEAR), actual.get(Calendar.YEAR));
        assertEquals(msg, expected.get(Calendar.MONTH), actual.get(Calendar.MONTH));
        assertEquals(msg, expected.get(Calendar.DAY_OF_MONTH), actual.get(Calendar.DAY_OF_MONTH));
        assertEquals(msg, expected.get(Calendar.HOUR), actual.get(Calendar.HOUR));
        assertEquals(msg, expected.get(Calendar.MINUTE), actual.get(Calendar.MINUTE));
}
    
   
  
   







 Instance 4







   
  
   
    
Class180.outputCache(final CommandSource sender,String command,int page)#4{
    sender.sendMessage(tl("balanceTop", format.format(cal.getTime())));
}
    
   
  
   







 Instance 5







   
  
   
    
Class360.getDefaultFileName()#0{
        String datetime = dateFormat.format(cal.getTime());
}
    
   
  
   







 Instance 6







   
  
   
    
Class90.testCalendarDate()#3{
    assertEquals(df.format(gc.getTime()), df.format(Convert.toDate(jdt)));
}
    
   
  
   







 Instance 7







   
  
   
    
Class270.getTimestamp()#1{
      currentTimestamp = dfm.format(cal.getTime());
}
    
   
  
   







 Instance 8







   
  
   
    
Class300.compare(Calendar expected,Calendar actual)#0{
        assertEquals(f.format(expected.getTime()), f.format(actual.getTime()));
}
    
   
  
   







 Instance 9







   
  
   
    
Class300.compare(Calendar expected,Calendar actual)#2{
        assertEquals(f.format(expected.getTime()), f.format(actual.getTime()));
}
    
   
  
   





