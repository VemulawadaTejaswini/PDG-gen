
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class410.dateRangeChanged(Calendar start,Calendar end){
            if (start == null || end == null) {
               System.err.println("Null range selected");
            } else {
               System.err.println("Range selected, from " + start.getTime() + " to " + end.getTime());
            }
}
    
   
  
   







 Instance 1







   
  
   
    
Class440.getValue(DocumentModel doc){
                Calendar cal = (Calendar) doc.getPropertyValue("dc:created");
                if (cal != null) {
                    return cal.getTime();
                }
}
    
   
  
   







 Instance 2







   
  
   
    
Class780.toString(Object object){
        Calendar calendar = (Calendar) object;
        if (calendar == null)
        {
            return null;
        }
        return String.valueOf(calendar.getTime().getTime());
}
    
   
  
   







 Instance 3







   
  
   
    
Class400.areEqual(Calendar one,Calendar another){
    if ( one == another ) {
      return true;
    }
    if ( one == null || another == null ) {
      return false;
    }
    return one.getTimeZone().getRawOffset() == another.getTimeZone().getRawOffset() && one.getTime() == another.getTime();
}
    
   
  
   







 Instance 4







   
  
   
    
Class340.refreshValue(){
    Calendar c = getSkinnable().getCalendar();
    String s = c == null ? "" : getSkinnable().getDateFormat().format( c.getTime() );
    textField.setText(s);
    if (s.equals(getSkinnable().getText()) == false) {
      getSkinnable().setText(s);
    }
}
    
   
  
   







 Instance 5







   
  
   
    
Class520.getDatePropertyValue(String propertyName){
        Calendar cal = (Calendar) doc.getPropertyValue(propertyName);
        if (cal != null) {
            return cal.getTime();
        }
}
    
   
  
   







 Instance 6







   
  
   
    
Class180.format(Calendar calendar)#2{
        if (calendar == null) {
            return formatter.format(new Date(0L));
        } else {
            return formatter.format(calendar.getTime());
        }
}
    
   
  
   







 Instance 7







   
  
   
    
Class130.quickFormatCalendarAsDate(Calendar value)#0{
    return value == null ? "null" : lSimpleDateFormat.format(value.getTime());
}
    
   
  
   







 Instance 8







   
  
   
    
Class720.formatCal(final Calendar calendar)#1{
        if (calendar.getTimeInMillis() < 0L) {
            calendar.setTimeInMillis(10L);
        }
        return df.format(calendar.getTime());
}
    
   
  
   







 Instance 9







   
  
   
    
Class760.assertEquals(Calendar expected,Date actual)#1{
        if (expected == null || actual == null) {
            assertEquals((Object) expected, (Object) actual);
        } else {
            assertEquals(expected.getTime(), actual);
        }
}
    
   
  
   







 Instance 10







   
  
   
    
Class290.assertEquals(Date expected,Calendar actual)#0{
        if (expected == null || actual == null) {
            assertEquals((Object) expected, (Object) actual);
        } else {
            assertEquals(expected, actual.getTime());
        }
}
    
   
  
   







 Instance 11







   
  
   
    
Class340.refreshValue(){
    Calendar c = getSkinnable().getCalendar();
    String s = (c == null ? "" : getSkinnable().getDateFormat().format(c.getTime()));
    textField.setText( s );
}
    
   
  
   







 Instance 12







   
  
   
    
Class490.formatDate(Calendar c){
        return (c != null) ? getISO8601DateFormat(c.getTimeZone(), ACTIVE_MASK).format(c.getTime()) : "NULL";
}
    
   
  
   







 Instance 13







   
  
   
    
Class170.formatTime(Calendar calend){
    if (calend == null) {
      return null;
    }
    return TIME_FORMATTER.format(calend.getTime());
}
    
   
  
   







 Instance 14







   
  
   
    
Class490.formatDateOozieTZ(Calendar c){
        return (c != null) ? formatDateOozieTZ(c.getTime()) : "NULL";
}
    
   
  
   







 Instance 15







   
  
   
    
Class500.getTimeAfter(Date afterTime){
    Calendar date = new GregorianCalendar();
    date.setTime(afterTime);
    Calendar after = getTimeAfter(date);
    return after == null ? null : after.getTime();
}
    
   
  
   







 Instance 16







   
  
   
    
Class800.setDate(Calendar dat){
        if (dat != null)
            date = new SIPDate(dat.getTime().getTime());
}
    
   
  
   







 Instance 17







   
  
   
    
Class220.toBytes(final Calendar obj){
        if (obj == null) {
            date = null;
        } else {
            date = obj.getTime();
        }
        return DateSerde.get.toBytes(date);
}
    
   
  
   







 Instance 18







   
  
   
    
Class110.setEnrollmentEndDay(Calendar calendar)#1{
        if (calendar != null) {
            this.setEnrollmentEndDayDate(calendar.getTime());
        } else {
            this.setEnrollmentEndDayDate(null);
        }
}
    
   
  
   







 Instance 19







   
  
   
    
Class110.setEnrollmentBeginTime(Calendar calendar)#0{
        if (calendar != null) {
            this.setEnrollmentBeginTimeDate(calendar.getTime());
        } else {
            this.setEnrollmentBeginTimeDate(null);
        }
}
    
   
  
   







 Instance 20







   
  
   
    
Class110.setEnrollmentBeginDay(Calendar calendar)#1{
        if (calendar != null) {
            this.setEnrollmentBeginDayDate(calendar.getTime());
        } else {
            this.setEnrollmentBeginDayDate(null);
        }
}
    
   
  
   







 Instance 21







   
  
   
    
Class110.setEnd(Calendar calendar)#1{
        if (calendar != null) {
            this.setEndDate(calendar.getTime());
        } else {
            this.setEndDate(null);
        }
}
    
   
  
   







 Instance 22







   
  
   
    
Class320.getModifiedDate()#1{
    Calendar calendar = _cmisFolder.getLastModificationDate();
    if (calendar != null) {
      return calendar.getTime();
    }
    else {
      return new Date();
    }
}
    
   
  
   







 Instance 23







   
  
   
    
Class580.setOfficialDate(Calendar officialDate)#0{
        if (officialDate != null) {
            this.setOfficial(officialDate.getTime());
        } else {
            this.setOfficial(null);
        }
}
    
   
  
   







 Instance 24







   
  
   
    
Class580.setModificationDate(Calendar modificationDate)#0{
        if (modificationDate != null) {
            this.setModification(modificationDate.getTime());
        } else {
            this.setModification(null);
        }
}
    
   
  
   







 Instance 25







   
  
   
    
Class580.dateChanged(Calendar date){
        if (date == null) {
          System.err.println("Date changed to null");
        }
        else {
          System.err.println("Date changed " + date.getTime());
        }
}
    
   
  
   







 Instance 26







   
  
   
    
Class240.setCalendar(Calendar calendar)#0{
        if (calendar != null) {
            date = calendar.getTime();
        }
        setDate(date);
}
    
   
  
   







 Instance 27







   
  
   
    
Class620.setInicio(Calendar inicio)#0{
        if (inicio != null) {
            this.setBegin(inicio.getTime());
        } else {
            this.setBegin(null);
        }
}
    
   
  
   







 Instance 28







   
  
   
    
Class620.setEnrolmentEndDay(Calendar enrolmentEndDay)#1{
        if (enrolmentEndDay != null) {
            this.setEnrolmentEndDayDate(enrolmentEndDay.getTime());
        } else {
            this.setEnrolmentEndDayDate(null);
        }
}
    
   
  
   







 Instance 29







   
  
   
    
Class620.setEnrolmentBeginDay(Calendar enrolmentBeginDay)#0{
        if (enrolmentBeginDay != null) {
            this.setEnrolmentBeginDayDate(enrolmentBeginDay.getTime());
        } else {
            this.setEnrolmentBeginDayDate(null);
        }
}
    
   
  
   







 Instance 30







   
  
   
    
Class620.setEndDate(Calendar endDate)#0{
        if (endDate != null) {
            this.setEnd(endDate.getTime());
        } else {
            this.setEnd(null);
        }
}
    
   
  
   







 Instance 31







   
  
   
    
Class810.setEnrollmentEndTime(Calendar calendar)#1{
        if (calendar != null) {
            this.setEnrollmentEndTimeDate(calendar.getTime());
        } else {
            this.setEnrollmentEndTimeDate(null);
        }
}
    
   
  
   







 Instance 32







   
  
   
    
Class450.serialize(Calendar calendar,BsonGenerator bsonGenerator,SerializerProvider serializerProvider)#0{
    if (calendar == null) {
      serializerProvider.defaultSerializeNull(bsonGenerator);
    } else {
      bsonGenerator.writeDateTime(calendar.getTime());
    }
}
    
   
  
   







 Instance 33







   
  
   
    
Class450.setCreationDate(Calendar creationDate)#0{
        if (creationDate != null) {
            this.setCreation(creationDate.getTime());
        } else {
            this.setCreation(null);
        }
}
    
   
  
   







 Instance 34







   
  
   
    
Class450.setFim(Calendar fim)#0{
        if (fim != null) {
            this.setEnd(fim.getTime());
        } else {
            this.setEnd(null);
        }
}
    
   
  
   







 Instance 35







   
  
   
    
Class740.setDay(Calendar calendar)#0{
        if (calendar != null) {
            this.setDayDate(calendar.getTime());
        } else {
            this.setDayDate(null);
        }
}
    
   
  
   







 Instance 36







   
  
   
    
Class740.setBeginning(Calendar calendar)#0{
        if (calendar != null) {
            this.setBeginningDate(calendar.getTime());
        } else {
            this.setBeginningDate(null);
        }
}
    
   
  
   







 Instance 37







   
  
   
    
Class410.dateChanged(Calendar date){
            if (date != null) {
               System.err.println(date.getTime().toString());
            } else {
               System.err.println("null");
            }
}
    
   
  
   







 Instance 38







   
  
   
    
Class380.setBeginDate(Calendar beginDate)#0{
        if (beginDate != null) {
            this.setBegin(beginDate.getTime());
        } else {
            this.setBegin(null);
        }
}
    
   
  
   





