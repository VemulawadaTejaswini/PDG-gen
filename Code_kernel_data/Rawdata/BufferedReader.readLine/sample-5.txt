
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class620.read(String filename){
            BufferedReader br = new BufferedReader(new FileReader(filename));
            value = br.readLine();
            br.close();
}
    
   
  
   







 Instance 1







   
  
   
    
Class630.isFileEmpty(File file){
    final BufferedReader reader = new BufferedReader(new FileReader(file));
    String firstLine = reader.readLine();  
    reader.close();
}
    
   
  
   







 Instance 2







   
  
   
    
Class750.readLine(String filename){
        BufferedReader reader = new BufferedReader(new FileReader(filename), 256);
            return reader.readLine();
            reader.close();
}
    
   
  
   







 Instance 3







   
  
   
    
Class220.readWorkspaceName(File nameFile){
    final FileReader reader = new FileReader(nameFile);
    final BufferedReader input = new BufferedReader(reader);
      return input.readLine();
      try { input.close(); } catch (IOException ignored) { }
}
    
   
  
   







 Instance 4







   
  
   
    
Class190.getSharelibJars(String sharelib)#0{
        String classpathFile = findClasspathFile(sharelib);
        BufferedReader br = new BufferedReader(new FileReader(classpathFile));
        String line = br.readLine();
        br.close();
}
    
   
  
   







 Instance 5







   
  
   
    
Class30.getShardEdataSize(String edataShardname){
        BufferedReader rd = new BufferedReader(new FileReader(new File(fname)));
        String ln = rd.readLine();
        rd.close();
        return Integer.parseInt(ln);
}
    
   
  
   







 Instance 6







   
  
   
    
Class450.firstLine(String fileName){
    BufferedReader in = new BufferedReader(new FileReader(fileName));
    String rval = in.readLine();
    in.close();
}
    
   
  
   







 Instance 7







   
  
   
    
Class600.firstLine(File f){
      bf = new BufferedReader(new FileReader(f));
      return bf.readLine();
      if (bf != null) {
        bf.close();
      }
}
    
   
  
   







 Instance 8







   
  
   
    
Class210.testApp()#0{
        File originalConfigFile = new File(appsDir, "capp1/conf/.test.config.orig");
        reader = new BufferedReader(new FileReader(originalConfigFile));
        assertThat(reader.readLine()).isEqualTo("Hello ${application.id}");
}
    
   
  
   







 Instance 9







   
  
   
    
Class160.testSqlGeneration(){
        File sqlFile = new File( TARGET_DIR, SQL_FILE );
        BufferedReader in = new BufferedReader( new FileReader( sqlFile ) );
        String sqlIn = in.readLine();
        assertEquals( VALID_SQL, sqlIn );
}
    
   
  
   







 Instance 10







   
  
   
    
Class620.testVersionAgreesWithVERSIONFile(){
        File versionFile = new File("VERSION").getAbsoluteFile();
        Assert.assertTrue(String.format("Expected VERSION file to exist, but it doesn't. (path is %s).", versionFile.getAbsolutePath()), versionFile.exists());
        Assert.assertTrue(String.format("Expected VERSION to be a file, but it doesn't. (path is %s).", versionFile.getAbsolutePath()), versionFile.isFile());
        BufferedReader reader = new BufferedReader(new FileReader(versionFile));
        String firstLine = reader.readLine();
        Assert.assertEquals(firstLine, Stripe.VERSION);
}
    
   
  
   







 Instance 11







   
  
   
    
Class660.initMaleFirstNames(){
    FileReader firstNamesMReader = new FileReader( "data/names_dist.male.first" );
    BufferedReader firstNamesMBR = new BufferedReader( firstNamesMReader );
    for( String line = firstNamesMBR.readLine(); line != null; line = firstNamesMBR.readLine() )
    {
      String[] result = line.split("\\s");
      firstNamesM.add( result[0] );
    }    
}
    
   
  
   







 Instance 12







   
  
   
    
Class40.readFile(File file)#0{
            LOG.debug("Read file:" + file.getAbsolutePath());
            BufferedReader br = new BufferedReader(new FileReader(file));
            return br.readLine();
}
    
   
  
   







 Instance 13







   
  
   
    
Class210.testApp()#1{
        File configFile = new File(appsDir, "capp1/conf/test");
        BufferedReader reader = new BufferedReader(new FileReader(configFile));
        assertThat(reader.readLine()).isEqualTo("Hello capp1");
}
    
   
  
   







 Instance 14







   
  
   
    
Class340.isFastChargeOn()#0{
            File fastcharge = new File(FAST_CHARGE_DIR, FAST_CHARGE_FILE);
            FileReader reader = new FileReader(fastcharge);
            BufferedReader breader = new BufferedReader(reader);
            return (breader.readLine().equals("1"));
}
    
   
  
   







 Instance 15







   
  
   
    
Class160.initStreetSuffixes(){
    FileReader streetSuffixesReader = new FileReader( "data/street_suffix.txt" );
    BufferedReader streetSuffixesBR = new BufferedReader( streetSuffixesReader );
    for( String line = streetSuffixesBR.readLine(); line != null; line = streetSuffixesBR.readLine())
    {
      String[] results = line.split( "\\s" );
      streetSuffixes.add( results[1] );
    }
}
    
   
  
   







 Instance 16







   
  
   
    
Class450.initStreetNames(){
    FileReader streetNamesReader = new FileReader( "data/street_names.txt" );
    BufferedReader streetNamesBR = new BufferedReader( streetNamesReader );
    for( String line = streetNamesBR.readLine(); line != null; line = streetNamesBR.readLine())
    {
      streetNames.add( line );
    }  
}
    
   
  
   







 Instance 17







   
  
   
    
Class390.readString(final File file)#0{
        final FileReader in = new FileReader(file);
            final BufferedReader reader = new BufferedReader(in);
            return reader.readLine();
}
    
   
  
   







 Instance 18







   
  
   
    
Class410.getPDPUrl()#0{
            BufferedReader in = new BufferedReader(new FileReader(
                    "src/test/resources/remotePDP.properties"));
            String urlString = in.readLine();
}
    
   
  
   







 Instance 19







   
  
   
    
Class730.testAmpHandling(){
        final BufferedReader reader = new BufferedReader(new XmlFixerReader(new StringReader(input)));
        final String output = reader.readLine();
        reader.close();
        assertEquals("&amp; &amp;aa &amp;", output);
}
    
   
  
   







 Instance 20







   
  
   
    
Class530.readFromReader(Reader reader){
      BufferedReader br = new BufferedReader(reader);
      String entity = br.readLine();
      br.close();
}
    
   
  
   







 Instance 21







   
  
   
    
Class10.readLine(Reader reader){
      BufferedReader buffered = new BufferedReader(reader);
         line = buffered.readLine();
         buffered.close();
}
    
   
  
   







 Instance 22







   
  
   
    
Class650.readFromReader(Reader reader){
    BufferedReader br = new BufferedReader(reader);
    String entity = br.readLine();
    br.close();
}
    
   
  
   







 Instance 23







   
  
   
    
Class600.echo()#0{
      FileReader fileReader = closer.register(new FileReader("/etc/hosts"));
      BufferedReader bufferedReader = closer.register(new BufferedReader(fileReader));
      return bufferedReader.readLine();
}
    
   
  
   





