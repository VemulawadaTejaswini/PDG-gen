
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class510.seekAndReadContent(FileChannel source)#0{
        source.position(dataOffset);
        source.read(data);
        this.data.flip();
}
    
   
  
   







 Instance 1







   
  
   
    
Class570.readValuesFromTile(int tileColumn,int tileRow,RasterRect fRect,FileChannel channel,ByteBuffer resultBuffer)#2{
            for ( int row = bufferOffsetY; row < ( bufferOffsetY + inter.height ); ++row, ++currentIntersectRow ) {
                currentPos = ( bufferOffsetX + ( fRect.width * row ) ) * sampleSize;
                limit = currentPos + lineSize;
                // first the limit
                resultBuffer.limit( limit );
                // then the position.
                resultBuffer.position( currentPos );
                filePosition = filePos + ( ( tileOffsetX + ( currentIntersectRow * tileRect.width ) ) * sampleSize );
                channel.position( filePosition );
                channel.read( resultBuffer );
            }
}
    
   
  
   







 Instance 2







   
  
   
    
Class610.read(long start,ByteBuffer dst)#0{
        ch.position(start - entry.getKey());
        return ch.read(dst);
}
    
   
  
   







 Instance 3







   
  
   
    
Class500.read(int columnId,int rowId,ByteBuffer buffer)#2{
        int tileInBlob = tileId % getTilesPerBlob();
                FileChannel channel = getFileChannel();
                channel.position( tileInBlob * getBytesPerTile() );
                channel.read( buffer );
}
    
   
  
   







 Instance 4







   
  
   
    
Class230.readData(int column,int row)#0{
            long position = calcFilePosition( column, row );
            FileChannel channel = getReadChannel();
            channel.position( position );
            channel.read( buffer );
}
    
   
  
   







 Instance 5







   
  
   
    
Class340.read(ByteBuffer dst)#1{
        FileChannel channel = getFileChannel();
        channel.position(offset);
        len = channel.read(dst);
}
    
   
  
   





