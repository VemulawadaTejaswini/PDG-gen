
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class390.read(byte[] data,int doff,int length,long offset)#0{
        int read = channel.read(ByteBuffer.wrap(data, doff, length));
}
    
   
  
   







 Instance 1







   
  
   
    
Class10.checkVersion(FileChannel channel)#0{
                buffer = ByteBuffer.wrap(new byte[8]);
                channel.read(buffer);
            buffer.position(0);
            long onDiskVersion = buffer.getLong();
}
    
   
  
   







 Instance 2







   
  
   
    
Class510.testAddRecord()#1{
      long offset = Long.parseLong(parts[0]);
      int len = Integer.parseInt(parts[1]);
      ByteBuffer bb = ByteBuffer.wrap(gz);
      int amt = fc.read(bb, offset);
      assertEquals(amt,len);
      ByteArrayInputStream bais = new ByteArrayInputStream(gz);
      GZIPMemberSeries gzms = new GZIPMemberSeries(new SimpleStream(bais));
      GZIPSeriesMember m = gzms.getNextMember();
      m.skipMember();
}
    
   
  
   







 Instance 3







   
  
   
    
Class490.testSimple(final String fsBase)#8{
        assertEquals(-1, channel.read(ByteBuffer.wrap(buffer, 0, 1)));
        assertEquals("test", FileUtils.getName(path));
        can = FilePath.get(fsBase).toRealPath().toString();
}
    
   
  
   







 Instance 4







   
  
   
    
Class350.testRandomAccess(String fsBase,int seed)#14{
        assertEquals(-1, f.read(ByteBuffer.wrap(new byte[1])));
        f.force(true);
}
    
   
  
   





