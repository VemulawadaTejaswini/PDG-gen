
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class320.toFile(String name){
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        return new File(cl.getResource(name).toURI());
}
    
   
  
   







 Instance 1







   
  
   
    
Class720.initialize()#2{
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            URL dataUrl = classLoader.getResource("org/richfaces/renderkit/countries.xml");
            Countries cntr = (Countries) unmarshaller.unmarshal(dataUrl);
            countries = cntr.getCountries();
}
    
   
  
   







 Instance 2







   
  
   
    
Class430.readDataset(String name){
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        DicomInputStream in = new DicomInputStream(
                new File(cl.getResource(name).toURI()));
            return in.readDataset(-1, -1);
            in.close();
}
    
   
  
   







 Instance 3







   
  
   
    
Class550.addClasspathResources(){
        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        File testResourceFile = new File(classLoader.getResource(TEST_RESOURCE_NAME).getFile());
        File testResourceFolder = testResourceFile.getParentFile();
        facesServer.addResourcesFromDirectory("/" + RESOURCES_FOLDER_PATH, testResourceFolder);
}
    
   
  
   







 Instance 4







   
  
   
    
Class190.readFromResource(String name,IncludeBulkData includeBulkData){
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        DicomInputStream in = new DicomInputStream(
                new File(cl.getResource(name).toURI()));
            in.setIncludeBulkData(includeBulkData);
            in.setAddBulkDataReferences(includeBulkData == IncludeBulkData.URI);
            return in.readDataset(-1, -1);
            in.close();
}
    
   
  
   







 Instance 5







   
  
   
    
Class210.classpathResourceExistsForLocation(String location){
        ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
        return contextClassLoader.getResource(location) != null;
}
    
   
  
   







 Instance 6







   
  
   
    
Class190.uri(String name){
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        return cl.getResource(name).toString();
}
    
   
  
   







 Instance 7







   
  
   
    
Class250.testSlaves(){
        ClassLoader classLoader = Thread.currentThread()
                .getContextClassLoader();
        BufferedReader in = new BufferedReader(new InputStreamReader(
                classLoader.getResource("slaves").openStream()));
        String line = in.readLine();
}
    
   
  
   







 Instance 8







   
  
   
    
Class580.testNonMetaInfNotAccessible(){
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        URL nonManifestResource = cl.getResource("example2.txt");
        assertNull(nonManifestResource);
}
    
   
  
   







 Instance 9







   
  
   
    
Class590.resourceOnClasspath(final String filename){
        ClassLoader cldr = Thread.currentThread().getContextClassLoader();
        return cldr.getResource(filename);
}
    
   
  
   







 Instance 10







   
  
   
    
Class640.createTimeWindow(){
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        DEACTIVATED_VALIDATION_XML = new File(cl.getResource("META-INF/deactivated_validation.xml").toURI());
        ACTIVATED_VALIDATION_XML = new File(DEACTIVATED_VALIDATION_XML.getCanonicalPath().replace("deactivated_", ""));
        assertFalse(ACTIVATED_VALIDATION_XML.exists());
        boolean renamingSucceeded = DEACTIVATED_VALIDATION_XML.renameTo(ACTIVATED_VALIDATION_XML);
        assertTrue(renamingSucceeded);
}
    
   
  
   







 Instance 11







   
  
   
    
Class720.initialize()#0{
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            URL dataUrl = classLoader.getResource("org/richfaces/demo/countries.xml");
            countries = ((Countries) unmarshaller.unmarshal(dataUrl)).getCountries();
}
    
   
  
   







 Instance 12







   
  
   
    
Class510.getResource(String name){
        ClassLoader tccl = Thread.currentThread().getContextClassLoader();
        return tccl.getResource(name);
}
    
   
  
   







 Instance 13







   
  
   
    
Class460.getResizableIconFromResource(String resource)#1{
            ClassLoader cl = Thread.currentThread().getContextClassLoader();
            image = ImageIO.read(cl.getResource(resource));
            LOGGER.error("Failed to read image: \"{}\"", resource);
}
    
   
  
   







 Instance 14







   
  
   
    
Class0.getXmlUrl(String fileName){
        ClassLoader loader = Thread.currentThread().getContextClassLoader();
        return loader.getResource(fileName).toExternalForm();
}
    
   
  
   







 Instance 15







   
  
   
    
Class580.testMetaInfAccessible(){
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        URL manifestResource = cl.getResource("META-INF/example.txt");
        assertNotNull(manifestResource);
}
    
   
  
   







 Instance 16







   
  
   
    
Class740.testLoader(){
        ClassLoader loader = Thread.currentThread().getContextClassLoader();
        URL url2 = loader.getResource(defaultConfigFileName1);
}
    
   
  
   







 Instance 17







   
  
   
    
Class590.getURL(final String name){
        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        return classLoader.getResource(name);
}
    
   
  
   





