
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class110.BinaryIn(URL url)#0{
            URLConnection site = url.openConnection();
            InputStream is     = site.getInputStream();
            in = new BufferedInputStream(is);
}
    
   
  
   







 Instance 1







   
  
   
    
Class950.getImage(URL url)#1{
    URLConnection connection = url.openConnection();
    InputStream stream = connection.getInputStream();
    BufferedInputStream inputbuffer = new BufferedInputStream(stream, 8000);
}
    
   
  
   







 Instance 2







   
  
   
    
Class1440.getRootElementFromUrl(URL url)#1{
        URLConnection connection = url.openConnection();            
        Document dom = builder.build(connection.getInputStream());
        return dom.getRootElement(); 
}
    
   
  
   







 Instance 3







   
  
   
    
Class1000.In(URL url){
            URLConnection site = url.openConnection();
            InputStream is     = site.getInputStream();
            scanner            = new Scanner(new BufferedInputStream(is), charsetName);
            scanner.useLocale(usLocale);
}
    
   
  
   







 Instance 4







   
  
   
    
Class990.writeSchema(XMLStreamWriter writer,QName typeName,URL url)#0{
            URLConnection urlConn = url.openConnection();
            BufferedInputStream bais = new BufferedInputStream( urlConn.getInputStream() );
            InputStreamReader isr = new InputStreamReader( bais, "UTF-8" );
            dcHelper.exportSchemaComponent( writer, typeName, isr );
            LOG.info( "Could not get connection to " + url.toExternalForm() + ". Try to export schema as reference." );
}
    
   
  
   







 Instance 5







   
  
   
    
Class770.getRootElement()#0{
            URLConnection connection = url.openConnection();
            Document dom = builder.build(connection.getInputStream());
            rootElement = dom.getRootElement();  
}
    
   
  
   







 Instance 6







   
  
   
    
Class870.NASASourceManager()#0{
            URLConnection connection = url.openConnection();            
            Document dom = builder.build(connection.getInputStream());
            Element root = dom.getRootElement();                    
            tiledPatterns = root.getChild("TiledPatterns"); //$NON-NLS-1$
}
    
   
  
   







 Instance 7







   
  
   
    
Class190.client(String u)#0{
        URLConnection urlc = url.openConnection();
                new DigestInputStream(urlc.getInputStream(), clientDigest);
        while (dis.read() != -1);
        clientMac = dis.getMessageDigest().digest();
}
    
   
  
   







 Instance 8







   
  
   
    
Class1520.fetchUrl(URL url){
    URLConnection cnx = url.openConnection();
    InputStream in = cnx.getInputStream();
    while ((len = in.read(buf)) >= 0)
      total += len;
}
    
   
  
   







 Instance 9







   
  
   
    
Class1280.readURL(URL url)#0{
            urlCon = url.openConnection(); 
            return readInputStream(urlCon.getInputStream());           
}
    
   
  
   







 Instance 10







   
  
   
    
Class1450.submitRequestTo(URL url){
        URLConnection connection = url.openConnection();
        return StreamUtility.readAllFromStream(connection.getInputStream());
}
    
   
  
   







 Instance 11







   
  
   
    
Class770.getProperties(URL configURL)#0{
      URLConnection conn = configURL.openConnection();
      InputStream in = conn.getInputStream();
      String jsonString = IOUtils.toString(in, "UTF-8");
      JSONObject json = new JSONObject(jsonString);
      return getProperties(json);
}
    
   
  
   







 Instance 12







   
  
   
    
Class30.getResponse(String path){
        URI destUri = getServerURI().resolve(path);
        URL url = destUri.toURL();
        URLConnection conn = url.openConnection();
            in = conn.getInputStream();
            return IO.toString(in);
            IO.close(in);
}
    
   
  
   







 Instance 13







   
  
   
    
Class1330.getCssContent(HttpServletRequest request,HttpServletResponse response,URL resourceURL,String resourcePath){
    URLConnection urlConnection = resourceURL.openConnection();
    String content = StringUtil.read(urlConnection.getInputStream());
    content = aggregateCss(
      new ServletPaths(
        _servletContext, ServletPaths.getParentPath(resourcePath)),
      content);
    return getCssContent(request, response, resourcePath, content);
}
    
   
  
   







 Instance 14







   
  
   
    
Class240.navigate(final URL url)#0{
      EncogLogging.log(EncogLogging.LEVEL_INFO, 
          "Navigating to page:" + url);
      final URLConnection connection = url.openConnection();
      final InputStream is = connection.getInputStream();
      navigate(url, is);
      is.close();
}
    
   
  
   







 Instance 15







   
  
   
    
Class380.getURL(URL url)#0{
      URLConnection conn = url.openConnection();
      return toByteArray(conn.getInputStream());
}
    
   
  
   





