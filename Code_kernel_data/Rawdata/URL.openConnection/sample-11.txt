
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class800.getJSONObject(URL jsonURL)#1{
    URLConnection conn = jsonURL.openConnection();
    BufferedReader reader = new BufferedReader(new InputStreamReader(
            conn.getInputStream()));
}
    
   
  
   







 Instance 1







   
  
   
    
Class230.slurpURL(URL u)#0{
    URLConnection uc = u.openConnection();
    InputStream is = uc.getInputStream();
    BufferedReader br = new BufferedReader(new InputStreamReader(is));
}
    
   
  
   







 Instance 2







   
  
   
    
Class510.readURL(URL url)#0{
        URLConnection conn = url.openConnection();
        BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
}
    
   
  
   







 Instance 3







   
  
   
    
Class360.readOutput(URL url)#0{
    URLConnection connection = url.openConnection();
    BufferedReader in = new BufferedReader(
                            new InputStreamReader(
                            connection.getInputStream()));
    while ((inputLine = in.readLine()) != null) {
      out.append(inputLine);
    }
    in.close();
}
    
   
  
   







 Instance 4







   
  
   
    
Class680.getUrlPageHtml(String urlStr,InetSocketAddress addr)#1{
         URLConnection connection = url.openConnection(new Proxy(Proxy.Type.HTTP, addr));
         BufferedReader rd = new BufferedReader(new InputStreamReader(connection.getInputStream()));
         while ((line = rd.readLine()) != null) {
            buffer.append(line);
         }
         rd.close();
}
    
   
  
   







 Instance 5







   
  
   
    
Class1140.slurpURL(URL u)#1{
    URLConnection uc = u.openConnection();
    InputStream is = uc.getInputStream();
    BufferedReader br = new BufferedReader(new InputStreamReader(is));
}
    
   
  
   







 Instance 6







   
  
   
    
Class670.getReferenceFromURL(URL url)#0{
      URLConnection uc = url.openConnection();
      is = uc.getInputStream();
      BufferedReader in = new BufferedReader(new InputStreamReader(is, MediaType.getCharsetRobustOrUTF(uc.getContentType())));
      while ((line = in.readLine()) != null) {
        ref.append( line ).append('\n');
      }
      Closer.close(is);
}
    
   
  
   







 Instance 7







   
  
   
    
Class1230.readXMLFromJarURL(URL url){
    URLConnection urlConnection = url.openConnection();
    assertTrue("URL is not a JarURL", urlConnection instanceof JarURLConnection);
    BufferedReader reader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
      String firstLine = reader.readLine();
      assertEquals("Unexpected first line", "<?xml version=\"1.0\"", firstLine.substring(0, 19));
      reader.close();
}
    
   
  
   







 Instance 8







   
  
   
    
Class240.slurpURL(URL u)#1{
    URLConnection uc = u.openConnection();
    String encoding = getUrlEncoding(uc);
    InputStream is = uc.getInputStream();
    BufferedReader br = new BufferedReader(new InputStreamReader(is, encoding));
}
    
   
  
   







 Instance 9







   
  
   
    
Class1470.loadVersion(String version)#2{
      conn = (new URL("https://s3.amazonaws.com/Minecraft.Download/versions/" + version + "/" + version + ".json")).openConnection();
      return gson.fromJson(new InputStreamReader(conn.getInputStream()),MinecraftVersion.class);
}
    
   
  
   







 Instance 10







   
  
   
    
Class750.getJSONObject(URL jsonURL){
    URLConnection conn = jsonURL.openConnection();
    return JSON.parse(
            new BufferedReader(new InputStreamReader(
            conn.getInputStream())));
}
    
   
  
   





