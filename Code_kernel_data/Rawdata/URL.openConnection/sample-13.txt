
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class150.fetchImage(URL url)#1{
            URLConnection conn = url.openConnection();
            conn.connect();
            is = conn.getInputStream();
            BufferedInputStream bis = new BufferedInputStream(is, 16384);
                Bitmap bitmap = BitmapFactory.decodeStream(bis);
                bis.close();
}
    
   
  
   







 Instance 1







   
  
   
    
Class1250.setRemoteImage(final URL aURL)#0{
      final URLConnection conn = aURL.openConnection();
      conn.connect();
      final InputStream is = conn.getInputStream();
      final BufferedInputStream bis = new BufferedInputStream(is);
      final Bitmap bm = BitmapFactory.decodeStream(bis);
      bis.close();
}
    
   
  
   







 Instance 2







   
  
   
    
Class160.getContentAsString(URL url)#0{
      URLConnection conn = url.openConnection();
      conn.connect();
      InputStream in = conn.getInputStream();
      Reader r = new InputStreamReader(in, "UTF-8");
}
    
   
  
   







 Instance 3







   
  
   
    
Class1440.assertJar(URL url)#1{
    URLConnection conn = url.openConnection();
    conn.connect();
    InputStream in = conn.getInputStream();
}
    
   
  
   







 Instance 4







   
  
   
    
Class590.analyseFileUrl(URL url)#1{
      URLConnection conn = url.openConnection();
      conn.connect();
      conn.getInputStream();
}
    
   
  
   







 Instance 5







   
  
   
    
Class1000.getURLinputStream(URL url){
    URLConnection connection = url.openConnection();
    connection.setDoOutput(true);
    connection.connect();
    return connection.getInputStream();
}
    
   
  
   







 Instance 6







   
  
   
    
Class950.getURLinputStream(URL url){
        URLConnection connection = url.openConnection();
        connection.setDoOutput(true);
        connection.connect();
        return connection.getInputStream();
}
    
   
  
   







 Instance 7







   
  
   
    
Class410.getInputStream(URL url,int connectTimeout,int readTimeout)#1{
    URLConnection conn = url.openConnection();
    conn.setConnectTimeout( connectTimeout );  // CRITICAL: if fail to establish finite timeout here and on next line, run a grave danger out being unable to close the InputStream because the underlying socket is sometimes seen to wait forever for a remote response
    conn.setReadTimeout( readTimeout );
    conn.connect();  // hmm, this may not really be necessary, as conn.getInputStream the call below will connect it if not done already?
    return conn.getInputStream();
}
    
   
  
   





