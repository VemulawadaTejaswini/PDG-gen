
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class140.draw(Graphics2D g2,Point p)#1{
    GradientPaint gradient = new GradientPaint(x, y, Color.RED, x + 50, y,
        Color.WHITE);
    g2.setPaint(gradient);
    g2.fill(new Ellipse2D.Double(x, y, 50, 50));
}
    
   
  
   







 Instance 1







   
  
   
    
Class70.draw(Graphics2D g2,Point p)#2{
        GradientPaint gradient = new GradientPaint(
            x, y, Color.RED, x + 50, y, Color.WHITE);
        g2.setPaint(gradient);
        g2.fill(new Ellipse2D.Double(x, y, 50, 50));
}
    
   
  
   







 Instance 2







   
  
   
    
Class90.drawInsideVertex(final Graphics2D g2d,final Vertex v,final Color[] colors,final double x,final double y,final float height,final float width)#0{
                final Paint p = new GradientPaint((float) x + width / number,
                                                  (float) y,
                                                  getVertexFillSecondaryColor(v),
                                                  (float) x + width / number,
                                                  (float) y + height,
                                                  colors[i],
                                                  false);
                g2d.setPaint(p);
                final Shape s = new Rectangle2D.Double(x + width / 2 + (width / number / 2) * i,
                                                       y,
                                                       width / number / 2,
                                                       height - 2);
                g2d.fill(s);
}
    
   
  
   







 Instance 3







   
  
   
    
Class230.drawBackGradient(Graphics2D g2d,Rectangle2D rectangle,BiColor colors,int height)#0{
            GradientPaint gragient = new GradientPaint(0, (float) (rectangle.getHeight() - height), colors.getBottomColor(), 0, (float) rectangle.getHeight(), colors.getTopColor());
            g2d.setPaint(gragient);
            g2d.fill(rectangle);
}
    
   
  
   







 Instance 4







   
  
   
    
Class620.paint(Graphics2D g2d)#0{
        GradientPaint paint = new GradientPaint((float) 3, (float) 3, gradientColorStart, (float) DIMENSIONS.getWidth() - 2,
            (float) DIMENSIONS.getHeight() - 2, gradientColorEnd);
        g2d.setPaint(paint);
        g2d.fill(inSquare);
        Ellipse2D outSquare = new Ellipse2D.Double(0, 0, DIMENSIONS.getWidth(), DIMENSIONS.getHeight());
        Ellipse2D midSquare = new Ellipse2D.Double(1, 1, DIMENSIONS.getWidth() - 2, DIMENSIONS.getHeight() - 2);
}
    
   
  
   







 Instance 5







   
  
   
    
Class590.createGradientMask(int width,int height,int orientation)#0{
        GradientPaint paint = new GradientPaint(0.0f, 0.0f,
                new Color(1.0f, 1.0f, 1.0f, 1.0f),
                orientation == SwingConstants.HORIZONTAL? width : 0.0f, 
                orientation == SwingConstants.VERTICAL? height : 0.0f,
                new Color(1.0f, 1.0f, 1.0f, 0.0f));
        g.setPaint(paint);
        g.fill(new Rectangle2D.Double(0, 0, width, height));
        g.dispose();
}
    
   
  
   







 Instance 6







   
  
   
    
Class290.addBackground(BufferedImage baseImage)#3{
    GradientPaint paint = new GradientPaint(0, 0, colorFrom, width, height,
        colorTo);
    graph.setPaint(paint);
    graph.fill(new Rectangle2D.Double(0, 0, width, height));
    graph.drawImage(baseImage, 0, 0, null);
}
    
   
  
   







 Instance 7







   
  
   
    
Class130.draw(Graphics2D g2,Point p)#0{
        GradientPaint gradient = new GradientPaint(x, y, Color.BLUE, x + 50, y, Color.WHITE);
        g2.setPaint(gradient);
        g2.fill(new Rectangle2D.Double(x, y, 50, 50));
}
    
   
  
   







 Instance 8







   
  
   
    
Class90.drawGradient(Graphics2D g2d,Shape shape,BiColor colors,int height){
        if (colors != null) {
            GradientPaint gragient = new GradientPaint(0, 0, colors.getTopColor(), 0, height, colors.getBottomColor());
            g2d.setPaint(gragient);
            g2d.fill(shape);
        }
}
    
   
  
   







 Instance 9







   
  
   
    
Class520.drawCustomWebBorder(final Graphics2D g2d,final JComponent component,final Shape borderShape,final Color shadeColor,final int shadeWidth,final boolean fillBackground,final boolean webColored,final Color border,final Color disabledBorder,final Color backgroundColor)#4{
                g2d.setPaint ( new GradientPaint ( 0, shapeBounds.y, StyleConstants.topBgColor, 0, shapeBounds.y + shapeBounds.height,
                        StyleConstants.bottomBgColor ) );
                g2d.fill ( borderShape );
}
    
   
  
   







 Instance 10







   
  
   
    
Class360.drawFeature(Graphics2D g2d,int start,int end,int ypos,Color colour,Color borderColor,float size,boolean selected,float selected_size,int fontHeight)#0{
    if(colour == null)
      colour = Color.BLACK;
    GradientPaint gp = new GradientPaint(start, ypos, 
        colour,
        start, ypos+( (fontHeight/2) * size ), 
        Color.white, true);
    g2d.setPaint(gp); 
    g2d.fill(e);
}
    
   
  
   







 Instance 11







   
  
   
    
Class380.paintComponent(Graphics g)#2{
      g2.setPaint(new GradientPaint(0, 0, getBackground(), getWidth(), 0,
          gradientColor));
      g2.fill(rect);
}
    
   
  
   







 Instance 12







   
  
   
    
Class400.paint(Graphics g)#0{
    gp = new GradientPaint(50.0f, 50.0f, Color.red,
      75.0f, 75.0f, Color.green, true);
    g2.setPaint(gp);
    g2.fill(p);
}
    
   
  
   







 Instance 13







   
  
   
    
Class0.drawFrame(Graphics2D g2d)#2{
        GradientPaint gragient = new GradientPaint(4, 4, controlColor, 13, 13, trimColor);
        g2d.setPaint(gragient);
        g2d.fill(rect);
}
    
   
  
   







 Instance 14







   
  
   
    
Class630.draw(BufferedImage image,Graphics2D g,UnicodeFont unicodeFont,Glyph glyph){
    int ascent = unicodeFont.getAscent();
    float top = -glyph.getYOffset() + unicodeFont.getDescent() + offset + ascent / 2 - height / 2;
    g.setPaint(new GradientPaint(0, top, topColor, 0, top + height, bottomColor, cyclic));
    g.fill(glyph.getShape());
}
    
   
  
   







 Instance 15







   
  
   
    
Class110.draw(ColorMapper mapper,Graphics2D g2d){
    final GradientPaint paint = new GradientPaint(0, 0, mapper.getMappedColor(c1), (float) width, (float) height,
        mapper.getMappedColor(c2));
    final RoundRectangle2D r = new RoundRectangle2D.Double(0, 0, width, height, corner * 2, corner * 2);
    g2d.setPaint(paint);
    g2d.fill(r);
}
    
   
  
   







 Instance 16







   
  
   
    
Class400.drawBackground(Graphics2D graphics,Dimension dimension,int _startColor){
    Color endColor = getRandomColor(_startColor);
    GradientPaint gradientPaint = new GradientPaint(getRandomPointOnBorder(dimension), 
                      startColor,
                      getRandomPointOnBorder(dimension),  
                      endColor.brighter(), 
                      true);
    graphics.setPaint(gradientPaint);
    graphics.fill(new Rectangle(dimension));
}
    
   
  
   







 Instance 17







   
  
   
    
Class30.draw(BufferedImage image,Graphics2D g,UnicodeFont unicodeFont,Glyph glyph){
    int ascent = unicodeFont.getAscent();
    float top = -glyph.getYOffset() + unicodeFont.getDescent() + offset + ascent / 2 - height / 2;
    g.setPaint(new GradientPaint(0, top, topColor, 0, top + height, bottomColor, cyclic));
    g.fill(glyph.getShape());
}
    
   
  
   





