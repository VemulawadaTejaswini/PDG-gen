
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class480.paint(Graphics g)#0{
      g2d.fill(new Ellipse2D.Float(this.x - this.radius, this.y
          - this.radius, 2 * radius, 2 * radius));
      g2d.dispose();
}
    
   
  
   







 Instance 1







   
  
   
    
Class270.paint(Graphics g)#2{
      g2d.fill(new Ellipse2D.Float(this.xc - this.radius, this.yc
          - this.radius, 2 * this.radius, 2 * this.radius));
      g2d.dispose();
}
    
   
  
   







 Instance 2







   
  
   
    
Class190.paint(Graphics g)#3{
      g2d.fill(new Rectangle2D.Float(-this.width / 2, -this.height / 2,
          this.width, this.height));
      g2d.dispose();
}
    
   
  
   







 Instance 3







   
  
   
    
Class730.createImage()#1{
        g2.fill(new Ellipse2D.Float(0, 0, i.getWidth(), i.getHeight()));
        g2.dispose();
}
    
   
  
   







 Instance 4







   
  
   
    
Class310.fillWithWhiteBackground(final BufferedImage resizedImage)#1{
        g2d.fill(new Rectangle2D.Float(0, 0, resizedImage.getWidth(), resizedImage.getHeight()));
        g2d.dispose();
}
    
   
  
   







 Instance 5







   
  
   
    
Class180.roundCorners(BufferedImage sourceImage,int cornerRadius)#1{
        g2.fill(new Ellipse2D.Float(0, 0, w , h));
        g2.setComposite(AlphaComposite.SrcAtop);
        g2.drawImage(sourceImage, 0, 0, null);
        g2.dispose();
}
    
   
  
   







 Instance 6







   
  
   
    
Class130.makeRoundedCorner(final BufferedImage image,final int cornerRadius)#1{
    g2.fill(new RoundRectangle2D.Float(0, 0, w, h, cornerRadius,
        cornerRadius));
    g2.setComposite(AlphaComposite.SrcAtop);
    g2.drawImage(image, 0, 0, null);
    g2.dispose();
}
    
   
  
   







 Instance 7







   
  
   
    
Class730.applyRoundedCorners(BufferedImage image,int cornerRadius)#0{
    g2.fill(new RoundRectangle2D.Float(0, 0, w, h, cornerRadius, cornerRadius));
    g2.setComposite(AlphaComposite.SrcIn);
    g2.drawImage(image, 0, 0, null);
    g2.dispose();
}
    
   
  
   







 Instance 8







   
  
   
    
Class290.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#0{
      if(ob.getIntValForAttribute(BlockDude.ATTDIR) == 1){
        ex = (rx+width) - eyeWidth;
      }
      g2.fill(new Rectangle2D.Float(ex, ey, eyeWidth, eyeHeight));
}
    
   
  
   







 Instance 9







   
  
   
    
Class660.replay(final int imageX,final int imageY)#1{
    graphics.fill( new Rectangle( 0, 0, imageX, imageY ) );
    draw( graphics, new Rectangle2D.Float( 0, 0, imageX, imageY ) );
    graphics.dispose();
}
    
   
  
   







 Instance 10







   
  
   
    
Class680.paint(Graphics2D g2,State s,float cWidth,float cHeight)#0{
        for (int x=0; x < fWidth; x++) {
            for (int y = 0; y < fHeight; y++) {
                if (x == 0 || x == fWidth-1 || y == 0 || y == fHeight-1 || map[x-1][y-1] == 1) {
                    float rx = x * width;
                    float ry = cHeight - (y+1) * height;
                    g2.fill(new Rectangle2D.Float(rx, ry, width, height));
                }
            }
        }
}
    
   
  
   







 Instance 11







   
  
   
    
Class720.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#2{
      for(int i = 0; i < map.length; i++){

        if(map[i] == 1) {

          int x = i % this.maxx;
          int y = i / this.maxx;

          float rx = x * width;
          float ry = cHeight - height - y * height;

          g2.fill(new Rectangle2D.Float(rx, ry, width, height));

        }

      }
}
    
   
  
   







 Instance 12







   
  
   
    
Class60.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#1{
      float ry = cHeight - height - ob.getIntValForAttribute(GridWorldDomain.ATTY)*height;
      g2.fill(new Rectangle2D.Float(rx, ry, width, height));
}
    
   
  
   







 Instance 13







   
  
   
    
Class380.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#1{
        int ay = ob.getIntValForAttribute(ExampleGridWorld.ATT_Y) + 1;
        g2.fill(new Ellipse2D.Float(rx, ry, width, height));
}
    
   
  
   







 Instance 14







   
  
   
    
Class550.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#0{
      float ry = cHeight - height - ob.getIntValForAttribute(BlockDude.ATTY)*height;
      g2.fill(new Rectangle2D.Float(rx, ry, width, height));
}
    
   
  
   







 Instance 15







   
  
   
    
Class400.fillOvals(Graphics2D g){
        for (int i = 0; i < rpts.length; i++) {
            // use fill() instead of fillOval(), since the former is more
            // likely to be consistent with our software loops when the
            // OGL pipeline cannot be enabled
            g.fill(new Ellipse2D.Float(rpts[i][0], rpts[i][1],
                                       rpts[i][2], rpts[i][3]));
        }
}
    
   
  
   







 Instance 16







   
  
   
    
Class290.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#6{
      g2.fill(new Rectangle2D.Float(scx-cartRadius, scy-cartRadius, 2*cartRadius, 2*cartRadius));
}
    
   
  
   







 Instance 17







   
  
   
    
Class730.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#1{
        g2.fill(new Rectangle2D.Float(rx, ry, width, height));
}
    
   
  
   







 Instance 18







   
  
   
    
Class730.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#2{
        g2.fill(new Ellipse2D.Float(rx, ry, width, height));
}
    
   
  
   







 Instance 19







   
  
   
    
Class430.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#0{
      g2.fill(new Rectangle2D.Float(scx-cartRadius, scy-cartRadius, 2*cartRadius, 2*cartRadius));
      float poleTipX = poleLength * (float)Math.sin(a) + scx;
}
    
   
  
   







 Instance 20







   
  
   
    
Class520.drawSelected(Graphics2D graphics,ButtonModel model)#1{
            float offset = (getIconWidth() - DOT_DIAMETER) / 2.0f;
            Ellipse2D dot = new Ellipse2D.Float(offset, offset, DOT_DIAMETER, DOT_DIAMETER);
            graphics.fill(dot);
}
    
   
  
   







 Instance 21







   
  
   
    
Class470.paint(Graphics g)#9{
        g2.fill(new Rectangle2D.Float(0, 0, width, height));
}
    
   
  
   







 Instance 22







   
  
   
    
Class10.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#0{
        g2.fill(new Ellipse2D.Float(rx, ry, width, height));
}
    
   
  
   







 Instance 23







   
  
   
    
Class10.paintObject(Graphics2D g2,State s,ObjectInstance ob,float cWidth,float cHeight)#3{
        g2.fill(new Rectangle2D.Float(rx, ry, width, height));
}
    
   
  
   







 Instance 24







   
  
   
    
Class400.draw(Graphics2D g2)#0{
    g2.fill(new Ellipse2D.Float(FieldConstants.GREEN_PAD_X+x-20, FieldConstants.GREEN_PAD_Y+y-20, 40.0f, 40.0f));
}
    
   
  
   







 Instance 25







   
  
   
    
Class740.drawParticle(Graphics2D g2,float weight,boolean shouldFlip)#3{
    g2.fill(new Ellipse2D.Float(x-1, y-1, 2.f, 2.f));
}
    
   
  
   







 Instance 26







   
  
   
    
Class60.paintComponent(Graphics g)#1{
         RoundRectangle2D roundedRectangle = new 
         RoundRectangle2D.Float(0, 0, getWidth(), getHeight(), 15, 15);
         g2d.fill(roundedRectangle);
}
    
   
  
   





