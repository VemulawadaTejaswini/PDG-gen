
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class240.drawRobocodeText(Graphics2D g)#0{
    transform(g, AffineTransform.getTranslateInstance(121, 88));
    g.setColor(GREEN_ALPHA_40);
    g.fill(shape);
    g.setStroke(THIN_STROKE);
    g.setColor(GREEN_ALPHA_80);
    g.draw(shape);
}
    
   
  
   







 Instance 1







   
  
   
    
Class240.drawInnerDecoration(Graphics2D g)#0{
    transform(g, AffineTransform.getTranslateInstance(103, 52));
    g.setColor(DARK_GREEN_ALPHA_80);
    g.fill(shape);
    g.setStroke(THIN_STROKE);
    g.setColor(GLOW_GREEN);
    g.draw(shape);
}
    
   
  
   







 Instance 2







   
  
   
    
Class340.set(Shape shape){
        Graphics2D g2d = image.createGraphics();
        g2d.setColor(Color.WHITE);
        g2d.draw(shape);
        g2d.fill(shape);
        g2d.dispose();
}
    
   
  
   







 Instance 3







   
  
   
    
Class630.paint(Component c,Graphics2D g2)#1{
            for (Iterator<Node> it = nodes.iterator(); it.hasNext(); ) {
                if (it.next().paint(localhost, width, height, radius, g2)) {
                    it.remove();
                }
            }
        g2.setColor(Color.orange);
        g2.setStroke(DEFAULT_STROKE);
        g2.fill(dot);
}
    
   
  
   







 Instance 4







   
  
   
    
Class480.paintIcon(java.awt.Component c,java.awt.Graphics gr,int x,int y)#0{
        DrawingView view = editor.getActiveView();
        if (view != null && view.getSelectedFigures().size() == 1) {
            color = view.getSelectedFigures().iterator().next().get(key);
        } else {
            color = key.get(editor.getDefaultAttributes());
        }
        if (color != null) {
            g.setColor(color);
            g.translate(x, y);
            g.fill(colorShape);
            g.translate(-x, -y);
        }
}
    
   
  
   







 Instance 5







   
  
   
    
Class280.drawSlot(Graphics2D g2,int rank,double xoffset)#0{
    if (board.values(rank)==null)
      return;
    for (int i=0; i<board.values(rank).length; i++) {
      int size = board.values(rank)[i];
      g2.setColor(board.getColor(rank, i));
      g2.fill(new Rectangle2D.Double( xoffset-size*5-3, 180-(11.*height),  size*10+3, 10));
      if (rank == pegFrom && i==board.values(rank).length-1) {
        g2.setStroke(new BasicStroke(3));
        g2.setColor(buggyMove ? Color.red : Color.green);
      } else {
        g2.setColor(Color.black);
      }
      g2.draw(new Rectangle2D.Double( xoffset-size*5-3, 180-(11.*height),  size*10+3, 10));
      height++;
    }
}
    
   
  
   







 Instance 6







   
  
   
    
Class640.paintBackground(final Graphics2D g2d,final E popup,final Dimension popupSize){
        final Color backgroundColor = getBackgroundColor ( popup );
        if ( backgroundColor != null )
        {
            g2d.setColor ( backgroundColor );
            g2d.fill ( getBorderShape ( popup, popupSize, true ) );
        }
}
    
   
  
   







 Instance 7







   
  
   
    
Class450.render()#2{
            Rectangle backRect = new Rectangle(0, 0, width + 20, height + 20);
            graphic.fill(backRect);
            graphic.draw(backRect);
            graphic.setColor(Color.BLACK);
}
    
   
  
   







 Instance 8







   
  
   
    
Class360.paint(Graphics g)#4{
                            g2d.setColor(Color.black);
                            g2d.setXORMode(Color.yellow);
                            g2d.fill(s);
                            g2d.draw(s);
}
    
   
  
   







 Instance 9







   
  
   
    
Class290.create_MINUTE_SHADOW_Image(final int WIDTH)#10{
                G2.setColor(SHADOW_COLOR);
                G2.fill(MINUTEPOINTER);
        G2.dispose();
}
    
   
  
   







 Instance 10







   
  
   
    
Class290.create_HOUR_SHADOW_Image(final int WIDTH)#8{
                G2.setColor(SHADOW_COLOR);
                G2.fill(HOURPOINTER);
        G2.dispose();
}
    
   
  
   







 Instance 11







   
  
   
    
Class0.paintDragSelection(Graphics2D g)#1{
            g.setColor(DRAG_SELECTION_COLOR);
            g.setStroke(DRAG_SELECTION_STROKE);
            g.fill(r);
            g.drawRect((int) r.getX(), (int) r.getY(), (int) r.getWidth() - 1, (int) r.getHeight() - 1);
}
    
   
  
   







 Instance 12







   
  
   
    
Class90.paintComponent(final Graphics g)#0{
                g2.setColor(getBgColor());
                g2.translate(cropx, cropy);
                g2.fill(shape);
}
    
   
  
   







 Instance 13







   
  
   
    
Class160.paintBackground(Graphics2D g2){
        g2.setColor(COLOR_BACKGROUND);
        g2.fill(g2.getClipBounds());
}
    
   
  
   







 Instance 14







   
  
   
    
Class410.paint(@NotNull Graphics g,@NotNull JComponent divider)#0{
      Graphics2D gg = DiffDividerDrawUtil.getDividerGraphics(g, divider, getEditor(ThreeSide.BASE).getComponent());
      gg.setColor(DiffDrawUtil.getDividerColor(getEditor(ThreeSide.BASE)));
      gg.fill(gg.getClipBounds());
      Editor editor1 = mySide.select(getEditor(ThreeSide.LEFT), getEditor(ThreeSide.BASE));
      Editor editor2 = mySide.select(getEditor(ThreeSide.BASE), getEditor(ThreeSide.RIGHT));
}
    
   
  
   







 Instance 15







   
  
   
    
Class260.paint(Graphics2D g2)#2{
            g2.setColor(Color.BLACK);
            g2.setComposite(BRIDGE_FILL_COMPOSITE);
            g2.fill(a);
        g2.setComposite(oldComposite);
        meepleLayer.paintMeeplesOnBridges(g2);
}
    
   
  
   





