
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class1100.getDateTime(Long d)#0{
        if (d != null)
            dateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
        Date date = (d == null) ? new Date() : new Date(d);
        return dateFormat.format(date);
}
    
   
  
   







 Instance 1







   
  
   
    
Class240.secToDateTime(long time)#0{
    String dateString = f.format(new Date(time * 1000));
    if(dateString.endsWith("-00:00:00"))
      dateString = dateString.substring(0, 8);
}
    
   
  
   







 Instance 2







   
  
   
    
Class870.addNote()#1{
        String comment = "Added on " + df.format(new Date());
        Note note = new Note(null, noteText, comment, new Date());
        noteDao.insert(note);
        Log.d("DaoExample", "Inserted new note, ID: " + note.getId());
}
    
   
  
   







 Instance 3







   
  
   
    
Class470.renameToBak(File file)#0{
        if (file.exists() && !file.renameTo(new File(file.getAbsolutePath() + "." + fmt.format(new Date()) + ".bak")))
            exit("Failed to rename file '" + file.getPath() + "'.", null);
}
    
   
  
   







 Instance 4







   
  
   
    
Class1360.writeKeys(final Writer out,final List<ECKey> keys)#0{
    for (final ECKey key : keys)
    {
      out.write(key.getPrivateKeyEncoded(Constants.NETWORK_PARAMETERS).toString());
      if (key.getCreationTimeSeconds() != 0)
      {
        out.write(' ');
        out.write(format.format(new Date(key.getCreationTimeSeconds() * DateUtils.SECOND_IN_MILLIS)));
      }
      out.write('\n');
    }
}
    
   
  
   







 Instance 5







   
  
   
    
Class110.toString()#1{
        mb.append("lastAccessedTime", lastAccessedTime <= 0 ? "n/a" : fmt.format(new Date(lastAccessedTime)));
        mb.append("maxInactiveInterval", maxInactiveInterval);
}
    
   
  
   







 Instance 6







   
  
   
    
Class110.toString()#3{
        mb.append("creationTime", creationTime <= 0 ? "n/a" : fmt.format(new Date(creationTime)));
}
    
   
  
   







 Instance 7







   
  
   
    
Class320.promptForFile()#0{
        final String fileName = "GoogleEarth-" + df.format(new Date()) + ".kmz";
        fc.setSelectedFile(new File(fileName));
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            return fc.getSelectedFile().getAbsolutePath();
        } else {
            return null;
        }
}
    
   
  
   







 Instance 8







   
  
   
    
Class110.run()#0{
                    output.println(formatter.format(new Date()));
                    output.close();
                    if (output != null) {
                        output.close();
                    }
}
    
   
  
   







 Instance 9







   
  
   
    
Class1390._now(String args[])#0{
      if ("long".equals(args[1]))
        return now.getTime();
      DateFormat df = new SimpleDateFormat(args[1]);
      return df.format(now);
    return new Date();
}
    
   
  
   







 Instance 10







   
  
   
    
Class260.main(String[] args)#0{
        String siString = new String (dfSi.format(new Date(108, Calendar.APRIL, 30)));
        if (expected.compareTo(siString) != 0) {
            throw new RuntimeException("Error: " + siString  + " should be " + expected);
        }
}
    
   
  
   







 Instance 11







   
  
   
    
Class1250.formatMessage(String message)#0{
        String date = df.format(new Date());
        return String.format("%s %s", date, message);
}
    
   
  
   







 Instance 12







   
  
   
    
Class970.toString()#2{
    return String.format("Hand[%s '%s' at '%s' on %s seats=%s str=%d]", 
        id & ~ROOM, game, tablename, df.format(new Date(date)), seats != null ? seats.length : -1, streets != null ? streets.length : -1);
}
    
   
  
   







 Instance 13







   
  
   
    
Class300.printStats()#0{
        System.out.println("Elapsed  : " + df.format(new Date(elapsed)));
        System.out.println("Kbps     : " + String.format(Locale.US, "%.2f", kbytes * 8.0 / elapsedSecs));
}
    
   
  
   







 Instance 14







   
  
   
    
Class1560.getHeaderSection()#0{
    return String.format(".TH %s %d \"%s\" \"%s-%s\" \"%s\"\n", Version.PROJECT_NAME, 1, "Licensed under GPLv3", Version.RELEASE_VERSION, Version.BUILD_VERSION, df.format(new Date()));
}
    
   
  
   







 Instance 15







   
  
   
    
Class490.scanDateStringFormatterTest()#0{
    String expected = String.format("r f:q [] %s    v", dateFormat.format(new Date(0)));
    exec("deletetable t -f", true, "Table: [t] has been deleted");
}
    
   
  
   







 Instance 16







   
  
   
    
Class670.checkDateFormatSanity(DateFormat dateFormat,long date){
      return date == dateFormat.parse(dateFormat.format(new Date(date)))
        .getTime();
}
    
   
  
   







 Instance 17







   
  
   
    
Class1230.getFormattedEventTime()#1{
        Date date = new Date();
            date = dateFormat.parse(dateFormat.format(date));
}
    
   
  
   







 Instance 18







   
  
   
    
Class110.getDetails()#0{
        details.addDetail(MediaDetails.INDEX_DATETIME, formater.format(new Date(dateTakenInMs)));
}
    
   
  
   







 Instance 19







   
  
   
    
Class410.testWaitUntil()#1{
        String isountil = idf.format(new Date(System.currentTimeMillis()+5000));
}
    
   
  
   







 Instance 20







   
  
   
    
Class310.writeHeader(XMLWriter writer)#0{
    XmlWriterUtil.writeComment(writer, "Generated on " + dateFormat.format(new Date(System.currentTimeMillis())));
    XmlWriterUtil.writeComment(writer, " ");
    XmlWriterUtil.writeCommentLineBreak(writer);
    XmlWriterUtil.writeLineBreak(writer);
}
    
   
  
   







 Instance 21







   
  
   
    
Class1360.setupCache(InfinispanConfig config)#2{
            logger.debug("Infinispan initialization took " + df.format(new Date(System.currentTimeMillis() - start)));
}
    
   
  
   







 Instance 22







   
  
   
    
Class1170.getDetails()#3{
        details.addDetail(MediaDetails.INDEX_DATETIME, formater.format(new Date(mDateTaken)));
        details.addDetail(MediaDetails.INDEX_HEIGHT, mImageHeight);
}
    
   
  
   







 Instance 23







   
  
   
    
Class90.getDetails()#2{
                formater.format(new Date(dateModifiedInSec * 1000)));
        details.addDetail(MediaDetails.INDEX_HEIGHT, height);
}
    
   
  
   







 Instance 24







   
  
   
    
Class890.createTemplateArguments()#0{
    args.put("datetime", formatter.format(new Date()));
    formatter = new SimpleDateFormat("MMMM d, yyyy", Locale.US);
}
    
   
  
   







 Instance 25







   
  
   
    
Class1230.appendDateFormat(Writer writer)#0{
      writer.write(dateFormat.format(new Date()));
      writer.write("] ");
}
    
   
  
   







 Instance 26







   
  
   
    
Class1280.start(String mrl)#1{
        String fileName = dir.getAbsolutePath() + "/Capture-" + df.format(new Date()) + ".mpg";
        mediaPlayer.playMedia(mrl, options);
}
    
   
  
   







 Instance 27







   
  
   
    
Class560.toString(Context context)#0{
      sb.append(df.format(new Date(startDate))).append(", ");
}
    
   
  
   







 Instance 28







   
  
   
    
Class1480.getDateTime(long millis)#1{
    Date expDate = new Date(millis);
    String expires = dateFormat.format(expDate);
    String left = expires.substring(0,expires.length()-2);
    String right = expires.substring(expires.length()-2);
}
    
   
  
   







 Instance 29







   
  
   
    
Class300.printDate(StringBuilder sb,String addedBy)#0{
        Date date = new Date();
        sb.append("# Added by dctc "
                  + addedBy
                  + " ("
                  + dateFormat.format(date)
                  + ").");
}
    
   
  
   







 Instance 30







   
  
   
    
Class890.createTemplateArguments()#4{
    args.put("date", formatter.format(new Date()));
}
    
   
  
   







 Instance 31







   
  
   
    
Class840.trackNotificationSeen(InAppNotification notif)#0{
                notifProperties.put("$time", dateFormat.format(new Date()));
}
    
   
  
   







 Instance 32







   
  
   
    
Class810.postATestMessage()#0{
    Date date = new Date();
    String value="[TEST] Hello World! It's "+dateFormat.format(date);
    connector.post(value);
    logger.info("Linkedin POST test:"+  value);
}
    
   
  
   







 Instance 33







   
  
   
    
Class800.setMessage(JSONObject event,String displayName,Cursor cursor)#2{
            String dateString = df.format(new Date(date));
            event.put("message", getString(R.string.missed_call_at, dateString));
}
    
   
  
   







 Instance 34







   
  
   
    
Class850.customFormat()#0{
        logger.info("### " + df.format(new Date()));
}
    
   
  
   







 Instance 35







   
  
   
    
Class320.getNowDateTimeFormatted()#0{
        java.util.Date date = new java.util.Date();
        String dateTime = dateFormat.format(date);
}
    
   
  
   







 Instance 36







   
  
   
    
Class320.getIsoTimestamp()#0{
        final String timestamp = dateFormat.format( new Date() );
}
    
   
  
   







 Instance 37







   
  
   
    
Class1100.PdbRdfModel()#0{
    Date d = new Date();
    date = dateFormat.format(d);
    model.add(dataset, RDF.type, model.createResource("http://rdfs.org/ns/void#Dataset"));
    inDataset = model.createProperty("http://rdfs.org/ns/void#inDataset");
}
    
   
  
   







 Instance 38







   
  
   
    
Class450.toDateTime(String timeStamp)#1{
        return sdf.format(new java.util.Date(ts));
}
    
   
  
   







 Instance 39







   
  
   
    
Class990.InsertDateAction()#1{
    super.setEnclosingStrings("",df.format(new Date()));
}
    
   
  
   







 Instance 40







   
  
   
    
Class990.getDate()#1{
        Date date = new Date();
        return dateFormat.format(date);
}
    
   
  
   







 Instance 41







   
  
   
    
Class1350.getDate(java.text.DateFormat format){
    return format.format(new Date(timestamp));
}
    
   
  
   







 Instance 42







   
  
   
    
Class1350.process(final String value)#3{
    return dateFormat.format(new Date());
}
    
   
  
   







 Instance 43







   
  
   
    
Class470.generateFileName(String filename)#2{
    String formatDate = format.format(new Date()) + SEED.toString();
}
    
   
  
   







 Instance 44







   
  
   
    
Class720.getCurrentDateString()#1{
    return dateFormat.format(new Date());
}
    
   
  
   







 Instance 45







   
  
   
    
Class460.formatDate(final long date,final String format)#1{
        return dateFormat.format(new Date(date));
}
    
   
  
   







 Instance 46







   
  
   
    
Class690.getSubTitle()#0{
        return df.format(new Date());
}
    
   
  
   







 Instance 47







   
  
   
    
Class760.now()#0{
        final Date date = new Date();
        return dateFormat.format(date);
}
    
   
  
   







 Instance 48







   
  
   
    
Class760.convertToiCal4JCompatibleDate(final LocalDate inputDate)#2{
        final String seedDateStr = df.format(inputDate.toDateTimeAtStartOfDay().toDate());
            formattedDate = new Date(seedDateStr, "yyyy-MM-dd");
}
    
   
  
   







 Instance 49







   
  
   
    
Class120.parseDate(Long dateLong)#0{
        Date date = new Date(dateLong);
        return formatter.format(date);
}
    
   
  
   







 Instance 50







   
  
   
    
Class120.format(UnitNumber val,Locale locale,FormatSpecifics specifics)#0{
        return new FormattedNumber(df.format(new Date(dec.longValue())), "");
}
    
   
  
   







 Instance 51







   
  
   
    
Class540.reformattedCurrentDateForFileName()#1{
        return currentFormat.format(new Date());
}
    
   
  
   







 Instance 52







   
  
   
    
Class540.reformattedCurrentDate()#0{
        return currentFormat.format(new Date());
}
    
   
  
   







 Instance 53







   
  
   
    
Class540.getDateTime()#0{
    return df.format(new Date());
}
    
   
  
   







 Instance 54







   
  
   
    
Class540.getDateTime()#1{
        return df.format(new Date());
}
    
   
  
   







 Instance 55







   
  
   
    
Class50.getTimeStamp()#1{
      String time = ( df1.format(new Date()));
}
    
   
  
   







 Instance 56







   
  
   
    
Class50.getTimeStamp()#3{
      String date = ( df.format(new Date()));    
}
    
   
  
   







 Instance 57







   
  
   
    
Class140.getFormattedTime(final long time)#2{
        return fmt.format(new Date(time));
}
    
   
  
   







 Instance 58







   
  
   
    
Class820.addDateHeader(String name,long l)#1{
    addHeader(name, df.format(new Date(l)));
}
    
   
  
   







 Instance 59







   
  
   
    
Class1410.dump()#3{
                        format.format(new Date()), max, free, 100.0 * free / max, total, 100.0 * total / max);
}
    
   
  
   







 Instance 60







   
  
   
    
Class1410.toSummary(Context context,long param)#1{
        return String.format(context.getString(R.string.recur_stops_on_date_summary), df.format(new Date(param)));
}
    
   
  
   







 Instance 61







   
  
   
    
Class1340.onPrepareDialog(int id,Dialog dialog)#3{
                playlistNameView.setText(dateFormat.format(new Date()));
}
    
   
  
   







 Instance 62







   
  
   
    
Class110.getCurrentTime()#0{
        Date d = new Date();
        return df.format(d);
}
    
   
  
   







 Instance 63







   
  
   
    
Class10.getCurrentDate()#1{
        Date date = new Date();
        return dateFormat.format(date);
}
    
   
  
   







 Instance 64







   
  
   
    
Class1080.createStateGroup(Composite parent,IFileStore fileStore,IFileInfo fileInfo)#2{
    timeStampText.setText(format.format(new Date(fileInfo.getLastModified())));
    timeStampText.setBackground(timeStampText.getDisplay().getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
}
    
   
  
   







 Instance 65







   
  
   
    
Class1080.getDateTime()#0{
                return df.format(new Date());
}
    
   
  
   







 Instance 66







   
  
   
    
Class100.formatDate(Locale l,String fmt)#0{
        return dateFormat.format(new Date(0));
}
    
   
  
   







 Instance 67







   
  
   
    
Class100.now()#1{
        return dateFormat.format(new Date());
}
    
   
  
   







 Instance 68







   
  
   
    
Class510.toString()#1{
                name, Integer.toString(age), mail, employeeType.toString(), Boolean.toString(isEmployed), dateFormat.format(new Date(birthDate)));
}
    
   
  
   







 Instance 69







   
  
   
    
Class710.formatDate(long date)#0{
    return dateFormat.format(new Date(date));
}
    
   
  
   







 Instance 70







   
  
   
    
Class920.getReadableDate(long dateInSeconds)#0{
        return dateFormatter.format(new Date(dateInSeconds * 1000));
}
    
   
  
   







 Instance 71







   
  
   
    
Class330.buildPayload(WebhookNotification.Kind kind,String id)#1{
        String timestamp = dateFormat.format(new Date());
}
    
   
  
   







 Instance 72







   
  
   
    
Class1590.verifyIsEventDisplayed()#1{
        Date currentDate = new Date();
        String date = sdfDayFormat.format(currentDate);
}
    
   
  
   







 Instance 73







   
  
   
    
Class660.setExpiresAt(long time)#0{
        tokenExpiresEdit.setText(dateFormat.format(new Date(time)));
}
    
   
  
   







 Instance 74







   
  
   
    
Class210.getTimestamp()#1{
        return fmt.format(new Date());
}
    
   
  
   







 Instance 75







   
  
   
    
Class1500.writeWARC(OutputStream recOut,MetaData md)#0{
    String capDateString = dateFormat.format(new Date());
}
    
   
  
   







 Instance 76







   
  
   
    
Class1560.formatTimestamp(long timestamp)#0{
        return f.format(new Date(timestamp));
}
    
   
  
   







 Instance 77







   
  
   
    
Class1000.toString()#0{
                + ", mTomorrowSunrise=" + f.format(new Date(mTomorrowSunrise))
}
    
   
  
   







 Instance 78







   
  
   
    
Class1000.toString()#1{
                + ", mTodaySunset=" + f.format(new Date(mTodaySunset))
}
    
   
  
   







 Instance 79







   
  
   
    
Class1000.toString()#2{
                + ", mTodaySunrise=" + f.format(new Date(mTodaySunrise))
}
    
   
  
   







 Instance 80







   
  
   
    
Class1000.toString()#4{
                + ", mYesterdaySunset=" + f.format(new Date(mYesterdaySunset))
}
    
   
  
   







 Instance 81







   
  
   
    
Class1000.main(String[] args)#3{
    System.out.println(df.format(new Date()));
}
    
   
  
   







 Instance 82







   
  
   
    
Class400.getDateTime()#0{
        return df.format(new Date());
}
    
   
  
   







 Instance 83







   
  
   
    
Class1060.millisecondsToDatestamp(long ms)#0{
    Date d = new Date(ms);
    return dateFormat.format(d);
}
    
   
  
   







 Instance 84







   
  
   
    
Class1060.clear()#0{
                timeStamp = format.format(new Date());
}
    
   
  
   







 Instance 85







   
  
   
    
Class800.ensureTime(JsonObject context)#1{
        String nowAsISO8601 = df.format(new Date());
        context.addProperty(KEY_REFTIME, nowAsISO8601);
}
    
   
  
   







 Instance 86







   
  
   
    
Class1040.logToFile(String msg)#1{
    Date d = new Date();
    String tsMsg = df.format(d) + " " + msg;
}
    
   
  
   







 Instance 87







   
  
   
    
Class340.calculateTimeDiference(Date pInitialDate,Date pFinishDate)#2{
    String returnedValue = df.format(new Date(totalTime));
}
    
   
  
   







 Instance 88







   
  
   
    
Class340.formatDate(DateFormat dateFormat,DateTimeZone tz,long time)#0{
            dateFormat.setTimeZone(convertToJavaTimeZone(tz, time));
            return dateFormat.format(new Date(time));
}
    
   
  
   







 Instance 89







   
  
   
    
Class340.getDatedName()#2{
    Date now = new Date();
    String myDateString = dfm.format(now);
}
    
   
  
   







 Instance 90







   
  
   
    
Class1130.createMessage()#2{
        String dateMessage = dateFormat.format(new Date());
}
    
   
  
   







 Instance 91







   
  
   
    
Class70.getDateTime()#1{
      return df.format(new Date());
}
    
   
  
   







 Instance 92







   
  
   
    
Class930.testTimeFormat()#1{
    assertEquals("01:00:01", timeFormat.format(new Date(3601000)).substring(0, 8));
}
    
   
  
   







 Instance 93







   
  
   
    
Class930.generateFileID()#0{
            digest.update(PDFDocument.encode(df.format(new Date())));
}
    
   
  
   







 Instance 94







   
  
   
    
Class1420.writeStandardHeader(PrintWriter writer)#1{
        writer.printf(Locale.ENGLISH, "# Created on:\t%s%n%n", dateFormat.format(new Date()));
}
    
   
  
   







 Instance 95







   
  
   
    
Class1490.getFormattedDate(Context context)#0{
                + timeFormat.format(new Date(timestamp));
}
    
   
  
   







 Instance 96







   
  
   
    
Class1490.getFormattedDate(Context context)#2{
        return dateFormat.format(new Date(timestamp)) + " - "
}
    
   
  
   







 Instance 97







   
  
   
    
Class580.getUTCTime()#1{
        return rfc1123Format.format(new Date());
}
    
   
  
   







 Instance 98







   
  
   
    
Class580.createTimestamp()#0{
        return dateFormat.format(new Date());
}
    
   
  
   







 Instance 99







   
  
   
    
Class1280.getLogFileSuffix()#2{
      String timestamp = dateFormat.format(new Date());
      logFileSuffix = logFileSuffix.replace("#timestamp", timestamp);
}
    
   
  
   







 Instance 100







   
  
   
    
Class1120.showStartBanner(PrintWriter out)#0{
        out.println(JmxDumpUtil.class.getSimpleName() + " started: " + df.format(new Date()));
        out.println();
}
    
   
  
   







 Instance 101







   
  
   
    
Class1260.getStatus()#0{
                       "\n" + "    End:       " + fmt.format(new Date(end)) + "\n" +
}
    
   
  
   







 Instance 102







   
  
   
    
Class1260.getStatus()#3{
                return "Metric Report Data\n" + "    Start:     " + fmt.format(new Date(start)) +
}
    
   
  
   







 Instance 103







   
  
   
    
Class1260.formatDateTime(long epoc)#0{
    Date date = new Date(epoc);
    return dateFormat.format(date);
}
    
   
  
   







 Instance 104







   
  
   
    
Class570.getTempString()#0{
    final String value = dateFormat.format(new Date());
}
    
   
  
   







 Instance 105







   
  
   
    
Class1250.addDateModifiedFilter(StringBuilder sb,long dateModified)#1{
        String dateString = formatter.format(new Date(dateModified));
}
    
   
  
   







 Instance 106







   
  
   
    
Class410.fileDateFormat(long date)#0{
        Date aDate = new Date( date );
        return dateFormatter.format( aDate );
}
    
   
  
   







 Instance 107







   
  
   
    
Class410._2b()#0{
        assertEquals("01-Jan-1970", formatter.format(new Date(0)));
}
    
   
  
   







 Instance 108







   
  
   
    
Class180.getDateTime()#1{
    Date date = new Date();
    return dateFormat.format(date);
}
    
   
  
   







 Instance 109







   
  
   
    
Class1330.getBuildTime()#1{
    return dateFormat.format(new Date());
}
    
   
  
   







 Instance 110







   
  
   
    
Class130.getTime()#1{
    Date time = new Date();
    return dateFormat.format(time);
}
    
   
  
   







 Instance 111







   
  
   
    
Class1010.getDateTime(long value)#1{
        Date date = new Date(value);
        return dateFormat.format(date);
}
    
   
  
   







 Instance 112







   
  
   
    
Class1010.test8()#0{
    Date jul4 = new Date(12603L * 86400000L);
    assertEquals("2004-07-04 00:00:00,000", cachedFormat.format(jul4));
}
    
   
  
   







 Instance 113







   
  
   
    
Class170.selectDate()#1{
    Date dat = new Date();
    return dateFormat.format(dat);
}
    
   
  
   







 Instance 114







   
  
   
    
Class170.buildCreationTime()#0{
        creationTime.setValue(format.format(new Date()));
        request.setCreationTime(creationTime);
}
    
   
  
   







 Instance 115







   
  
   
    
Class1510.getBuildTime()#1{
    return dateFormat.format(new Date());
}
    
   
  
   







 Instance 116







   
  
   
    
Class1510.getCurrentDateTimeString(String returnFormat)#0{
    Date date = new Date();
    String dateString = dateFormat.format(date);
    dateString = dateString.replace(".", "");
}
    
   
  
   







 Instance 117







   
  
   
    
Class260.getUtcTimestamp()#2{
    return format.format(new Date());
}
    
   
  
   







 Instance 118







   
  
   
    
Class260.getTimestamp()#1{
    return df.format(new Date());
}
    
   
  
   







 Instance 119







   
  
   
    
Class640.appendToInvocationHistory(String entry)#2{
        invocationHistory.append(dateFormat.format(new Date(clock.currentTimeMillis())));
        invocationHistory.append(entry);
}
    
   
  
   







 Instance 120







   
  
   
    
Class640.getObject()#1{
            return fmt.format(new Date());
}
    
   
  
   







 Instance 121







   
  
   
    
Class610.addDateHeader(String name,long date)#0{
    String dateString = df.format(new Date(date));
    addHeader(name, dateString);
}
    
   
  
   







 Instance 122







   
  
   
    
Class610.getDisplayLastAccessedTimeForSession(Session in_session)#1{
      return formatter.format(new Date(in_session.getLastAccessedTime()));
}
    
   
  
   







 Instance 123







   
  
   
    
Class310.getDisplayCreationTimeForSession(Session in_session)#1{
            return formatter.format(new Date(in_session.getCreationTime()));
}
    
   
  
   







 Instance 124







   
  
   
    
Class430.writeLogEntry(String message,String method,boolean error)#4{
    Date date = new Date();
    String output = dateFormat.format(date);
}
    
   
  
   







 Instance 125







   
  
   
    
Class30.printStartedMessage()#0{
        String now = dateFormat.format(new Date());
        infolog.info("Lily Runtime started [" + now + "]");
}
    
   
  
   







 Instance 126







   
  
   
    
Class970.setSysTime(long ctrTime)#2{
      String[] cmd = {"date", "-s", dateTime.format(new Date(ctrTime))};
}
    
   
  
   







 Instance 127







   
  
   
    
Class970.formatTime(DateFormat df,int s){
        return df.format(new Date(ms));
}
    
   
  
   







 Instance 128







   
  
   
    
Class970.formatDateTime(long datetime)#0{
        Date date = new Date(datetime*1000L);
        return dateFormat.format(date);
}
    
   
  
   







 Instance 129







   
  
   
    
Class970.getTimeString()#0{
        Date date = new Date(this.getTimeInMillis(false));
        return dateFormat.format(date);
}
    
   
  
   







 Instance 130







   
  
   
    
Class970.getTempString()#0{
  final String value = dateFormat.format(new Date());
}
    
   
  
   







 Instance 131







   
  
   
    
Class870.formatDatetime(long timeMillis)#1{
    Date date = new Date(timeMillis);
    return dateFormat.format(date);
}
    
   
  
   







 Instance 132







   
  
   
    
Class550.formatTime(long time)#0{
    return formatter.format(new Date(time));
}
    
   
  
   







 Instance 133







   
  
   
    
Class1020.SessionManager(ClusterManager clusterManager)#3{
    this.startTime = dateFormat.format(new Date());
}
    
   
  
   







 Instance 134







   
  
   
    
Class1020.getDateValue()#1{
        return df.format(new Date());
}
    
   
  
   







 Instance 135







   
  
   
    
Class1400.reactInternal(String conversationName,String author,String message)#1{
    return "Current time: " + format.format(new Date());
}
    
   
  
   







 Instance 136







   
  
   
    
Class390.convertMsToDate(long Millis)#0{
    return formatter.format(new Date(Millis));
}
    
   
  
   







 Instance 137







   
  
   
    
Class600.onAddAgenda()#2{
        String comment = "Added on " + df.format(new Date());
}
    
   
  
   







 Instance 138







   
  
   
    
Class220.rfc1123Date(long millis)#0{
        return df.format(new Date(millis));
}
    
   
  
   







 Instance 139







   
  
   
    
Class220.formatGMT(String format)#1{
        return fmt.format(new Date(0));
}
    
   
  
   







 Instance 140







   
  
   
    
Class1090.getCurrentDateAsString(DateFormat df){
    return df.format(new Date());
}
    
   
  
   







 Instance 141







   
  
   
    
Class880.handleRequest(RestRequest req)#2{
        String nowAsISO = df.format(new Date());
        resp.setTime(nowAsISO);
}
    
   
  
   







 Instance 142







   
  
   
    
Class880.getDate()#0{
        return df.format(new Date()) + "GMT";
}
    
   
  
   







 Instance 143







   
  
   
    
Class880.getDateString()#1{
    Date date = new Date(this.getTimeInMillis(false));
    return dateFormat.format(date);
}
    
   
  
   







 Instance 144







   
  
   
    
Class1380.getLatest()#0{
        return format.format(new Date(last));
}
    
   
  
   







 Instance 145







   
  
   
    
Class1530.getDateForExport()#1{
        return df.format(new Date());
}
    
   
  
   







 Instance 146







   
  
   
    
Class1530.toString()#0{
        + ", read: " + f.format(new Date(lastRead)) + "]"; //$NON-NLS-1$ //$NON-NLS-2$
}
    
   
  
   







 Instance 147







   
  
   
    
Class1530.toString()#1{
    return "FileSnapshot[modified: " + f.format(new Date(lastModified)) //$NON-NLS-1$
}
    
   
  
   







 Instance 148







   
  
   
    
Class620.testBasicExpiresParse()#1{
        final Date now = new Date();
        h.parse(cookie, dateformat.format(now));
        Assert.assertNotNull(cookie.getExpiryDate());
}
    
   
  
   







 Instance 149







   
  
   
    
Class950.addMessage(String message)#0{
        message = format.format(new Date()) + " - " + message;
        messages.add(message);
        while (messages.size() > LIMIT) {
            messages.removeFirst();
        }
}
    
   
  
   







 Instance 150







   
  
   
    
Class40.resolve(final String aMacro,final Element aParent)#2{
          return df.format( new Date() );
}
    
   
  
   







 Instance 151







   
  
   
    
Class40.test_formatLjava_util_Date()#1{
            Date current = new Date();
            String dtf = format.format(current);
}
    
   
  
   







 Instance 152







   
  
   
    
Class1200.millisecondsToStopwatchTime(long ms)#0{
    Date d = new Date(ms);
    return timeFormat.format(d);
}
    
   
  
   







 Instance 153







   
  
   
    
Class1200.millisecondsToDayOnly(long ms)#0{
    Date d = new Date(ms);
    return dateFormat.format(d);
}
    
   
  
   







 Instance 154







   
  
   
    
Class1200.getDate()#1{
    Date date = new Date();
    return dateFormat.format(date);
}
    
   
  
   







 Instance 155







   
  
   
    
Class1050.getTag()#0{
    String date = dateFormat.format(new Date());
}
    
   
  
   







 Instance 156







   
  
   
    
Class1050.formatTime(long time)#1{
    return dateFmt.format(new Date(time));
}
    
   
  
   







 Instance 157







   
  
   
    
Class890.main(String[] args)#1{
    System.out.println(df.format(new Date()));
}
    
   
  
   







 Instance 158







   
  
   
    
Class1150.testCanonical(String string1,String string2){
    DateFormat instanceWithArbitraryOrigin = new MissionElapsedTimeFormat(new Date(), FORMAT_STRING);
    assertEquals(string1,
        string2, instanceWithArbitraryOrigin.format(instanceWithArbitraryOrigin.parse(string1)));
}
    
   
  
   







 Instance 159







   
  
   
    
Class360.updateSummary(final long time)#0{
    final Date date = new Date(time);
    setSummary(dateFormat.format(date.getTime()));
}
    
   
  
   







 Instance 160







   
  
   
    
Class1300.testDateSerializationWithPattern()#1{
    Date now = new Date();
    String json = gson.toJson(now);
    assertEquals("\"" + formatter.format(now) + "\"", json);
}
    
   
  
   





