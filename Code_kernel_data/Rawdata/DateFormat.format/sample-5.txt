
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class1240.formatHeaderDate(Date date)#0{
        rfc1123Format.setTimeZone(TimeZone.getTimeZone("GMT"));
        return rfc1123Format.format(date);
}
    
   
  
   







 Instance 1







   
  
   
    
Class1100.getMysqlTimeStampForWeek(int week)#0{
    df.setTimeZone(TimeZone.getTimeZone("GMT"));
    String mysql_time = df.format(time);  
}
    
   
  
   







 Instance 2







   
  
   
    
Class120.formatDate(Date date)#0{
    rfc1123.setTimeZone(TimeZone.getTimeZone("GMT"));
    return rfc1123.format(date);
}
    
   
  
   







 Instance 3







   
  
   
    
Class840.getGMTString(Date date)#1{
        df.setTimeZone(TimeZone.getTimeZone("GMT"));
        return df.format(date);
}
    
   
  
   







 Instance 4







   
  
   
    
Class560.testGetCurrentAsString()#1{
        dateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
        String testConvertedDate = dateFormat.format(date);
        Assert.assertEquals(testConvertedDate, dateAsString);
}
    
   
  
   







 Instance 5







   
  
   
    
Class160.toSimpleDateTime(Date date)#0{
        df.setTimeZone(TimeZone.getTimeZone("UTC"));
        return df.format(date);
}
    
   
  
   







 Instance 6







   
  
   
    
Class1560.format(Date date)#0{
        iso8601Format.setTimeZone(TimeZone.getTimeZone("GMT"));
        return iso8601Format.format(date);
}
    
   
  
   







 Instance 7







   
  
   
    
Class1010.test8()#1{
    cachedFormat.setTimeZone(TimeZone.getTimeZone("GMT-6"));
    assertEquals("2004-07-03 18:00:00,000", cachedFormat.format(jul4));
}
    
   
  
   







 Instance 8







   
  
   
    
Class170.formatHttpDate(final Date date)#0{
        httpDateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
        return httpDateFormat.format(date);
}
    
   
  
   







 Instance 9







   
  
   
    
Class370.testConverFromObject_Date_GMTDefault()#2{
        f.setTimeZone(TimeZone.getTimeZone("GMT"));
        String dateString = f.format(aDate);
        this.assertEquals(origDateString, dateString);
}
    
   
  
   







 Instance 10







   
  
   
    
Class880.formatDateHeader(Date date)#1{
      df.setTimeZone(TimeZone.getTimeZone("GMT"));
      return df.format(date);
}
    
   
  
   







 Instance 11







   
  
   
    
Class1200.format(Date date,String pattern,String lang,String timezone)#1{
        df.setTimeZone(TimeZone.getTimeZone(timezone));
        return df.format(date);
}
    
   
  
   







 Instance 12







   
  
   
    
Class1100.print(Date time)#2{
    p.setTimeZone(TimeZone.getTimeZone("UTC"));
    log("UTC Date is " + p.format(time));
}
    
   
  
   







 Instance 13







   
  
   
    
Class460.getISO8601StringForDate(Date date)#1{
        dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
        return dateFormat.format(date);
}
    
   
  
   







 Instance 14







   
  
   
    
Class190.convertDateTimeToUniversalDateTimeString(Date dt)#1{
    utcFormatter.setTimeZone(TimeZone.getTimeZone("UTC"));
    return utcFormatter.format(dt);
}
    
   
  
   







 Instance 15







   
  
   
    
Class910.createTestCases()#1{
    defaultDateFormat.setTimeZone(TimeZone.getTimeZone(PlotConstants.DEFAULT_TIME_ZONE));
    String def = defaultDateFormat.format(testDate);
}
    
   
  
   







 Instance 16







   
  
   
    
Class1130.toGmtTimestampString(Timestamp timestamp)#1{
        df.setTimeZone(TimeZone.getTimeZone("GMT"));
        return df.format(timestamp);
}
    
   
  
   







 Instance 17







   
  
   
    
Class1110.setDate(Date date)#1{
        df.setTimeZone(TimeZone.getTimeZone("GMT"));
        setDate(df.format(date));
}
    
   
  
   







 Instance 18







   
  
   
    
Class1110.print(Time time)#0{
    p.setTimeZone(TimeZone.getTimeZone("UTC"));
    log("UTC Time is " + p.format(time));
}
    
   
  
   







 Instance 19







   
  
   
    
Class1330.formatBuildTime(Date buildTime)#0{
        format.setTimeZone(TimeZone.getTimeZone("UTC"));
        return format.format(buildTime);
}
    
   
  
   







 Instance 20







   
  
   
    
Class1300.timestampToString(Date timestamp){
    dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"));
    String string = dateFormat.format(timestamp);
    string = string.replace("+0000", "Z");
}
    
   
  
   







 Instance 21







   
  
   
    
Class1170.print(Timestamp time)#1{
    p.setTimeZone(TimeZone.getTimeZone("UTC"));
    log("UTC Timestamp is " + p.format(time));
}
    
   
  
   







 Instance 22







   
  
   
    
Class1050.getFilteredPartitions(String tableName,String timeZone,String dateMask,Pair<Date,Date> range)#0{
        dateFormat.setTimeZone(TimeZone.getTimeZone(timeZone));
        String filter = "ds < '" + dateFormat.format(range.first) + "'";
        return client.listPartitionsByFilter(DATABASE_NAME, tableName, filter);
}
    
   
  
   







 Instance 23







   
  
   
    
Class1370.dateTimeToString(Date d,String tzString)#0{
        if (tzString != null)
            df.setTimeZone (TimeZone.getTimeZone (tzString));
        return df.format (d);
}
    
   
  
   





