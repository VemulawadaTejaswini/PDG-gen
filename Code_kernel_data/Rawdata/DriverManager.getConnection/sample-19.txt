
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class280.initDateTableValues(String tenantId,byte[][] splits,long ts,Date startDate,double dateIncrement)#0{
        Properties props = new Properties(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
            assertNoRows(conn);
            initDateTableValues(conn, tenantId, startDate, dateIncrement);
            conn.commit();
            conn.close();
}
    
   
  
   







 Instance 1







   
  
   
    
Class280.initTableValues(String tenantId,byte[][] splits,long ts)#0{
        Properties props = new Properties(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
            assertNoRows(conn);
            initTableValues(conn, tenantId);
            conn.commit();
            conn.close();
}
    
   
  
   







 Instance 2







   
  
   
    
Class810.loadData(long ts)#0{
        props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts));
        Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props);
        insertRow(conn, "SOQL4", 30);
        conn.commit();
        conn.close();
}
    
   
  
   







 Instance 3







   
  
   
    
Class160.doBeforeTestSetup(){
        ensureTableCreated(getUrl(), GROUPBYTEST_NAME);
        Connection conn = DriverManager.getConnection(getUrl());
        insertRow(conn, "Report3?2", 30);
        conn.commit();
        conn.close();
}
    
   
  
   







 Instance 4







   
  
   
    
Class110.db(File dbFile,String tableName,Iterator<SamRecordDiscrepancy> it){
    Connection connection = DriverManager.getConnection("jdbc:h2:"
        + dbFile.getAbsolutePath());
    createDiscrepancyTable(tableName, connection);
    dbLog(tableName, it, connection);
    connection.commit();
    connection.close();
}
    
   
  
   





