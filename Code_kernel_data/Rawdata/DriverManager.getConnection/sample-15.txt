
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class440.connect()#0{
      if(connection != null){
        connection.close();
      }
      connection = DriverManager.getConnection(getConnectionString());
}
    
   
  
   







 Instance 1







   
  
   
    
Class1150.openDBCon()#0{
            if (con == null || con.isClosed()) {
                con = DriverManager.getConnection("jdbc:sqlite:" + dbPath.toString());
            }
}
    
   
  
   







 Instance 2







   
  
   
    
Class210.getConnection()#0{
        if(Log.isDebugEnabled())Log.debug("Connecting using dbDriver="+dbDriver+"+ dbUserName="+dbUserName+", dbPassword="+dbUrl);
        return DriverManager.getConnection (dbUrl,
                dbUserName,
                dbPassword);
}
    
   
  
   







 Instance 3







   
  
   
    
Class1020.setConn(String dbPassword)#2{
      this.conn=DriverManager.getConnection("jdbc:mysql://" + param.get("db") + "/cloud", "root", dbPassword);
      if (!this.conn.isValid(0)) {
        s_logger.error("Connection to DB failed to establish");
      }
}
    
   
  
   







 Instance 4







   
  
   
    
Class350.buildConnection(Configuration pluginConfig)#1{
        if (LOG.isDebugEnabled()) {
            LOG.debug("Attempting JDBC connection to [" + url + "]");
        }
        return DriverManager.getConnection(url, username, password);
}
    
   
  
   







 Instance 5







   
  
   
    
Class690.getConnection(final String url,final String user,final String password)#1{
        if (user != null) {
            LOG.info("Connecting to " + url + " as " + user);
            return DriverManager.getConnection(url, user, password);
        } else {
            LOG.info("Connecting to " + url + " with no credentials");
            return DriverManager.getConnection(url);
        }
}
    
   
  
   







 Instance 6







   
  
   
    
Class1010.testServerMode()#0{
            SqlRepositoryConfiguration config = sqlFactory.getSqlConfiguration();
            Class.forName(config.getDriverClassName());
            connection = DriverManager.getConnection(config.getJdbcUrl(),
                    config.getJdbcUsername(), config.getJdbcPassword());
            AssertJUnit.assertNotNull(connection);
            if (connection != null) {
                connection.close();
            }
}
    
   
  
   





