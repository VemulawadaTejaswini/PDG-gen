
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class730.dropTable()#1{
                Connection conn = DriverManager.getConnection("jdbc:default:connection");
                PreparedStatement ps = conn.prepareStatement("drop table t1");
                ps.execute();
                ps.close();
}
    
   
  
   







 Instance 1







   
  
   
    
Class210.testTableWithInvalidBucketNumber()#0{
        Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
            PreparedStatement stmt = conn.prepareStatement(query);
            stmt.execute();
}
    
   
  
   







 Instance 2







   
  
   
    
Class970.testFakeCFDynamicUpsert()#0{
        Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
            PreparedStatement statement = conn.prepareStatement(upsertquery);
            statement.execute();
}
    
   
  
   







 Instance 3







   
  
   
    
Class810.testAmbiguousDynamicUpsert()#0{
        Properties props = new Properties(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
            PreparedStatement statement = conn.prepareStatement(upsertquery);
            statement.execute();
}
    
   
  
   







 Instance 4







   
  
   
    
Class570.testVarBinaryInMultipartPK()#0{
        Connection conn = DriverManager.getConnection(getUrl());
        PreparedStatement statement = conn.prepareStatement(query);
        statement.execute();
            statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 5







   
  
   
    
Class550.alterTable()#1{
    Connection conn = DriverManager.getConnection("jdbc:default:connection");
    PreparedStatement ps = conn.prepareStatement("alter table t1 add column test integer");
    ps.execute();
    ps.close();
}
    
   
  
   







 Instance 6







   
  
   
    
Class530.createIndex()#0{
    Connection conn = DriverManager.getConnection("jdbc:default:connection");
    PreparedStatement ps = conn.prepareStatement("create index ix on t1(i,b)");
    ps.execute();
    ps.close();
}
    
   
  
   







 Instance 7







   
  
   
    
Class80.grantSelect()#0{
    Connection conn = DriverManager.getConnection("jdbc:default:connection");
    PreparedStatement ps = conn.prepareStatement("grant select on t1 to user2");
    ps.execute();
    ps.close();
}
    
   
  
   







 Instance 8







   
  
   
    
Class1320.createTrigger()#0{
    Connection conn = DriverManager.getConnection("jdbc:default:connection");
    PreparedStatement ps = conn.prepareStatement("create trigger test_trig" +
        " AFTER delete on t1 for each STATEMENT insert into" +
        " t1 values(20, 'twenty')");
    ps.execute();
    ps.close();
}
    
   
  
   







 Instance 9







   
  
   
    
Class1300.initTableValues(long ts)#0{
        Properties props = new Properties(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
        PreparedStatement stmt = conn.prepareStatement(
            "upsert into " +
            "KEYONLY VALUES (?, ?)");
        stmt.setInt(2, 2);
        stmt.execute();
        stmt.setInt(2, 4);
        stmt.execute();
}
    
   
  
   







 Instance 10







   
  
   
    
Class150.dropTable()#0{
    Connection conn = DriverManager.getConnection("jdbc:default:connection");
    PreparedStatement ps = conn.prepareStatement("drop table t1");
    ps.execute();
    ps.close();
}
    
   
  
   







 Instance 11







   
  
   
    
Class900.testMultiPKDef()#1{
        Connection conn = DriverManager.getConnection(getUrl());
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 12







   
  
   
    
Class1230.testNoPK()#1{
        Connection conn = DriverManager.getConnection(getUrl());
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 13







   
  
   
    
Class810.testAmbiguousStaticUpsert()#0{
        Properties props = new Properties(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
            PreparedStatement statement = conn.prepareStatement(upsertquery);
            statement.execute();
}
    
   
  
   







 Instance 14







   
  
   
    
Class960.testInvalidArraySize()#2{
        Connection conn = DriverManager.getConnection(getUrl());
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 15







   
  
   
    
Class700.testCreateNullableInPKMiddle()#0{
        long ts = nextTimestamp();
        String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + (ts + 5); // Run query at timestamp 5
        Connection conn = DriverManager.getConnection(url);
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 16







   
  
   
    
Class0.createTrigger()#0{
                Connection conn = DriverManager.getConnection("jdbc:default:connection");
                PreparedStatement ps = conn.prepareStatement("create trigger test_trig" +
                                " AFTER delete on t1 for each STATEMENT insert into" +
                                " t1 values(20, 'twenty')");
                ps.execute();
                ps.close();
}
    
   
  
   







 Instance 17







   
  
   
    
Class1320.createIndex()#1{
                Connection conn = DriverManager.getConnection("jdbc:default:connection");
                PreparedStatement ps = conn.prepareStatement("create index ix on t1(i,b)");
                ps.execute();
                ps.close();
}
    
   
  
   







 Instance 18







   
  
   
    
Class900.testFamilyNameInPK()#0{
        Connection conn = DriverManager.getConnection(getUrl());
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 19







   
  
   
    
Class900.testPKDefAndPKConstraint()#0{
        Connection conn = DriverManager.getConnection(getUrl());
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 20







   
  
   
    
Class1230.testUnknownFamilyNameInTableOption()#0{
        Connection conn = DriverManager.getConnection(getUrl());
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 21







   
  
   
    
Class710.testSetSaltBucketOnAlterTable()#1{
        long ts = nextTimestamp();
        String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + (ts + 5); // Run query at timestamp 5
        Connection conn = DriverManager.getConnection(url);
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 22







   
  
   
    
Class1030.testNoPK()#0{
        Connection conn = DriverManager.getConnection(getUrl());
            PreparedStatement statement = conn.prepareStatement(query);
            statement.execute();
}
    
   
  
   







 Instance 23







   
  
   
    
Class300.testNegativeAddNegativeValue()#0{
        Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
            PreparedStatement stmt = conn.prepareStatement("UPSERT INTO HBASE_NATIVE(uint_key,ulong_key,string_key, uint_col) VALUES(?,?,?,?)");
            stmt.setInt(1, -1);
            stmt.setLong(2, 2L);
            stmt.setString(3,"foo");
            stmt.setInt(4, 3);
            stmt.execute();
}
    
   
  
   







 Instance 24







   
  
   
    
Class370.testNoKVColumn()#0{
        Properties props = new Properties(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
        conn.setAutoCommit(true);
        PreparedStatement stmt = conn.prepareStatement(
                "upsert into BTABLE VALUES (?, ?, ?, ?, ?)");
        stmt.setString(3, "x");
        stmt.setInt(4, 1);
        stmt.setString(5, "ab");
        stmt.execute();
}
    
   
  
   







 Instance 25







   
  
   
    
Class340.initPtsdbTableValues(long ts)#0{
        Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES);
        Connection conn = DriverManager.getConnection(url, props);
        conn.setAutoCommit(true);
        PreparedStatement stmt = conn.prepareStatement("upsert into PTSDB VALUES ('x', 'y', ?, 0.5)");
        stmt.setDate(1, D1);
        stmt.execute();
}
    
   
  
   







 Instance 26







   
  
   
    
Class640.initTableValues(byte[][] splits,long ts)#0{
        ensureTableCreated(getUrl(),"LongInKeyTest",splits, ts-2);
        String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + ts;
        Connection conn = DriverManager.getConnection(url);
        conn.setAutoCommit(true);
        PreparedStatement stmt = conn.prepareStatement(
                "upsert into " +
                "LongInKeyTest VALUES(?)");
        stmt.setLong(1, 2);
        stmt.execute();
}
    
   
  
   





