
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class930.getConnection()#0{
        if ( _jdbcUser == null && _jdbcPassword == null ) {
            return DriverManager.getConnection(_jdbcUrl);
        } else {
            String password = _jdbcPassword;
                        
            if (PropertyValueEncryptionUtils.isEncryptedValue(password)) {
                password = decryptPassword(password);
            }
            
            return DriverManager.getConnection(_jdbcUrl, _jdbcUser, password);
        }
}
    
   
  
   







 Instance 1







   
  
   
    
Class820.getConnection()#0{
        if (jdbcUser == null && jdbcPassword == null ) {
            return DriverManager.getConnection(jdbcUrl);
        } else {
            String password = jdbcPassword;
                        
            if (PropertyValueEncryptionUtils.isEncryptedValue(password)) {
                log("Encryption key is " + encryptionKey);
                password = decryptPassword(
                                "PBEWithMD5AndDES",
                                encryptionKey,
                                password);
            }
            
            return DriverManager.getConnection(jdbcUrl, jdbcUser, password);
        }
}
    
   
  
   







 Instance 2







   
  
   
    
Class1260.getTimedOutConnection(String url,String user,String password){
        if (isOracleUrl(url)) {
            // pass in timeout property for Oracle
            Properties info = getOracleJDBCConnectionProperties(user, password);
            return DriverManager.getConnection(url, info);    
        }
        else if (isMySqlUrl(url)) {
            // pass in timeout in URL for MySQL
            url = getMySqlUrl(url);
        }
        return DriverManager.getConnection(url, user, password);
}
    
   
  
   







 Instance 3







   
  
   
    
Class820.createConnection()#1{
        String password = !config.isPromptForPassword() ? config.getPassword() : promptForPassword();
            Class.forName(config.getDriver());
            return DriverManager.getConnection(config.getUrl(), config.getUsername(), password);
            String pwd = password == null ? "<null>" : StringUtils.repeat("*", password.length());
            System.out.println("Couldn't create JDBC connection to '" + config.getUrl() + "' with username '"
                    + config.getUsername() + "' and password '" + pwd + "', reason: " + ex.getMessage());
}
    
   
  
   







 Instance 4







   
  
   
    
Class1120.getConnection(String connectionUrl,String username,String passwd){
        if (!connectionUrl.contains("database=")) {
            String dbname = connectionUrl.substring(connectionUrl.lastIndexOf('/') + 1);
            String url = connectionUrl.substring(0, connectionUrl.lastIndexOf('/'));
            String port = url.substring(url.lastIndexOf(":") + 1);
            port = port.isEmpty() ? "" : ",dbs_port=" + port;
            url = url.substring(0, url.lastIndexOf(":"));
            connectionUrl = url + "/database=" + dbname + ",charset=UTF8" + port;
        }
        return DriverManager.getConnection(connectionUrl, username, passwd);
}
    
   
  
   







 Instance 5







   
  
   
    
Class10.connect()#0{
    if (context == null || context.isClosed()) {
      context = DriverManager.getConnection(dsn, username, password);
    }
    if (context == null || context.isClosed()) {
      throw new SQLException("Lost context to MYSQL server!");
    }
}
    
   
  
   





