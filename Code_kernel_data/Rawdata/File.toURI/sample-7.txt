
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class570.getLabelsFromOfbizComponents(){
        List<File> componentsFiles = FileUtil.findXmlFiles(null, null, "ofbiz-component", "http://ofbiz.apache.org/dtds/ofbiz-component.xsd");
        for (File componentFile : componentsFiles) {
            String filePath = componentFile.getPath();
            Document menuDocument = UtilXml.readXmlDocument(componentFile.toURI().toURL());
            Element rootElem = menuDocument.getDocumentElement();
            for (Element elem1 : UtilXml.childElementList(rootElem)) {
                checkOfbizComponentTag(elem1, filePath);
                for (Element elem2 : UtilXml.childElementList(elem1)) {
                    checkOfbizComponentTag(elem2, filePath);
                }
            }
        }
}
    
   
  
   







 Instance 1







   
  
   
    
Class540.scanXMLFiles(){
    File[] jobBeansFiles = FileLocator.findFiles(BatchFrameworkConstants.SPRING_BATCH_CONFIG);          
    for (File jobBeansFile : jobBeansFiles) {
      for(String jobName: ConfigFileUtils.getJobName(new FileSystemResource(jobBeansFile))) {
        this.jobXMLFile.put(jobName, jobBeansFile.toURI());
      }
    }
}
    
   
  
   







 Instance 2







   
  
   
    
Class500.createUrls(File[] files)#2{
        for (File jar : files){
            try {
                urls.add(jar.toURI().toURL());
            } catch (MalformedURLException e) {
                LOGGER.warn("Unable to load a plugin from JAR", e);
            }
        }
}
    
   
  
   







 Instance 3







   
  
   
    
Class380.generateBuildPath(List<File> systemDependencies)#0{
        for (File systemDependency : systemDependencies) {
            try {
                urls.add(systemDependency.toURI().toURL());
            } catch (MalformedURLException e) {
                // ignore
            }
        }
}
    
   
  
   







 Instance 4







   
  
   
    
Class0.getPath(File[] sourceDirectory){
    for (File directory : sourceDirectory) {
      cp = cp + directory.toURI() + " ";
    }
}
    
   
  
   







 Instance 5







   
  
   
    
Class160.addLibrariesToClassPath(Collection<File> libraries)#0{
        for (File library : libraries) {
            try {
                RunHandler.mAddUrl.invoke(RunHandler.classLoader, library.toURI().toURL());
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
}
    
   
  
   







 Instance 6







   
  
   
    
Class30.getBuildScriptConfig()#0{
            for (File pathEntry : getPathEntries()) {
                config += String.format("%s.path file('%s')", getId(), pathEntry.toURI());
            }
}
    
   
  
   







 Instance 7







   
  
   
    
Class490.getAsURIs()#0{
        for (File file : files) {
            urls.add(file.toURI());
        }
}
    
   
  
   





