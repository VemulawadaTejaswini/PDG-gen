
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class80.getSource(){
              File f = new File(new String(originatingFileName));
              if (f.exists()) {
                return new EclipseFileObject(null, f.toURI(), JavaFileObject.Kind.SOURCE, null);
              }
}
    
   
  
   







 Instance 1







   
  
   
    
Class420.getResource(String name)#0{
      File resourceFile = new File(myClassPath + File.separator + name.replace('/', File.separatorChar));
      if (!resourceFile.exists()) return null;
      return resourceFile.toURI().toURL();
}
    
   
  
   







 Instance 2







   
  
   
    
Class500.prepare(PropertiesManager pm)#0{
        File descpath = new File(System.getProperty("user.dir"), "desc");
        if(descpath.exists())
            pm.libspath.add(descpath.toURI());
}
    
   
  
   







 Instance 3







   
  
   
    
Class770.CliTableManager()#0{
    File f=new File(ConfUtil.getHiveConfDir()+File.separator+"hive-site.xml");
    if(f.exists()){
      conf.addResource(f.toURI().toURL());
    }
    client=new HiveMetaStoreClient(conf);
}
    
   
  
   







 Instance 4







   
  
   
    
Class550.findFirstLombokDirectory(File file)#1{
    if (file.isFile()) current = current.getParentFile();
    while (current != null) {
      if (new File(current, "lombok.config").exists()) return current.toURI();
      current = current.getParentFile();
    }
}
    
   
  
   







 Instance 5







   
  
   
    
Class80.getSource(){
        File f = new File(new String(this.originatingFileName));
        if (f.exists()) {
            return new EclipseFileObject(null, f.toURI(), JavaFileObject.Kind.SOURCE, null);
        }
}
    
   
  
   







 Instance 6







   
  
   
    
Class760.getSymbolMapUrl()#0{
    File symbolMapsDirectory = new File("war/" + getJunitSymbolMapsPath());
      return symbolMapsDirectory.exists() ? symbolMapsDirectory.toURI().toURL()
          : getServletContext().getResource(getJunitSymbolMapsPath());
}
    
   
  
   







 Instance 7







   
  
   
    
Class260.checkThatFileResourceExists(){
        final FileResource nonExisting = new FileResource("devNullFile");
        assertFalse(nonExisting.exists());
        final File file = new File(getClass().getResource("/cache1.ini").toURI());
        assertTrue(file.exists());
        final FileResource existing = new FileResource(file.toURI().toString());
        assertTrue(existing.exists());
}
    
   
  
   







 Instance 8







   
  
   
    
Class570.getTestBundle(String baseName){
        File f = new File(m_testBundleBasePath, getBundleFilename(baseName));
        assertTrue("No such bundle: " + f, f.exists() && f.isFile());
        return f.toURI().toURL();
}
    
   
  
   







 Instance 9







   
  
   
    
Class570.getTestBundleURL(String artifactName,String baseName,String version){
        assertNotNull("Version cannot be null!", version);
        File f = new File(m_testBundleBasePath, String.format("%1$s/target/org.apache.felix.deploymentadmin.test.%2$s-%3$s.jar", artifactName, baseName, version));
        assertTrue("No such bundle: " + f, f.exists() && f.isFile());
        return f.toURI().toURL();
}
    
   
  
   





