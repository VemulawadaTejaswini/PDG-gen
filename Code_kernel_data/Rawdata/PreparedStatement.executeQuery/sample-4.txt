
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class550.run()#1{
                            Connection con = dataSource.getConnection();
                            PreparedStatement ps = con.prepareStatement("select 1");
                            ResultSet rs = ps.executeQuery();
                            rs.close();
}
    
   
  
   







 Instance 1







   
  
   
    
Class510.RSMDWrapper(Connection conn,String query)#0{
        PreparedStatement ps = conn.prepareStatement( query );
        ResultSet rs = ps.executeQuery();
        _rsmd = rs.getMetaData();
        _rowCount = _rsmd.getColumnCount();
}
    
   
  
   







 Instance 2







   
  
   
    
Class460.test_0()#2{
        Connection conn = dataSource.getConnection();
        PreparedStatement stmt = conn.prepareStatement(sql);
        ResultSet rs = stmt.executeQuery();
        JdbcUtils.printResultSet(rs);
        rs.close();
}
    
   
  
   







 Instance 3







   
  
   
    
Class680.dumpMessages()#2{
        java.sql.Connection conn = ((JDBCPersistenceAdapter) broker.getPersistenceAdapter()).getDataSource().getConnection();
        PreparedStatement statement = conn.prepareStatement("SELECT ID, MSG FROM ACTIVEMQ_MSGS");
        ResultSet result = statement.executeQuery();
}
    
   
  
   







 Instance 4







   
  
   
    
Class420.dumpMessages()#2{
        java.sql.Connection conn = ((JDBCPersistenceAdapter) service.getPersistenceAdapter()).getDataSource().getConnection();
        PreparedStatement statement = conn.prepareStatement("SELECT ID, MSG FROM MYPREFIX_ACTIVEMQ_MSGS");
        ResultSet result = statement.executeQuery();
}
    
   
  
   







 Instance 5







   
  
   
    
Class710.should_close_statement_and_resultset()#1{
      PreparedStatement statement = connection.prepareStatement(selectDual());
      ResultSet rs = statement.executeQuery();
      DatabaseUtils.closeQuietly(statement);
      assertThat(isClosed(statement)).isTrue();
}
    
   
  
   







 Instance 6







   
  
   
    
Class640.execute(String query){
    Connection connection = DataSourceUtils.getConnection(dataSource);
    PreparedStatement preparedStatement = connection.prepareStatement(query);
    return preparedStatement.executeQuery();
}
    
   
  
   







 Instance 7







   
  
   
    
Class130.getResultSet(Connection conn,String query){
        PreparedStatement statement = conn.prepareStatement(query);
        ResultSet rs = statement.executeQuery();
}
    
   
  
   







 Instance 8







   
  
   
    
Class610.loadPolymorphs()#0{
      con = L1DatabaseFactory.getInstance().getConnection();
      pstm = con.prepareStatement("SELECT * FROM polymorphs");
      rs = pstm.executeQuery();
      fillPolyTable(rs);
}
    
   
  
   







 Instance 9







   
  
   
    
Class520.testNoHoldScrollableResults()#1{
         PreparedStatement ps_c1 = conn.prepareStatement("select * from big b1 left outer join  big b2 on b1.a = b2.a left outer join  big b3 on b2.a = b3.a left outer join big b4 on b3.a = b4.a left outer join (big b5 left outer join (big b6 left outer join (big b7 left outer join big b8 on b7.a = b8.a) on b6.a=b7.a) on b5.a = b6.a) on b4.a = b5.a");
         ResultSet rs = ps_c1.executeQuery();
}
    
   
  
   







 Instance 10







   
  
   
    
Class310.resultSetWithNull(Connection conn){
        PreparedStatement statement = conn.prepareStatement(
                "select null from system_range(1,1)");
        return statement.executeQuery();
}
    
   
  
   







 Instance 11







   
  
   
    
Class60.executeQuery(Connection conn,String query){
        PreparedStatement st = conn.prepareStatement(query);
        st.executeQuery();
}
    
   
  
   







 Instance 12







   
  
   
    
Class170.testCallTablePrepared(Connection conn){
        PreparedStatement prep = conn.prepareStatement("call table(x int = (1))");
        prep.executeQuery();
}
    
   
  
   







 Instance 13







   
  
   
    
Class150.getSplitTestRecords(ResultSet[] data1,ResultSet[] data2)#2{
            PreparedStatement ps2 = conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION > 2");
            data2[0] = ps2.executeQuery();
}
    
   
  
   







 Instance 14







   
  
   
    
Class250.check()#2{
      connection = Factory.getConnection(null);
      PreparedStatement statement = connection.prepareStatement("SELECT 1");
      statement.executeQuery();
}
    
   
  
   







 Instance 15







   
  
   
    
Class490.query(Connection conn,String sql)#1{
        Mediator.getLogger(Sql.class.getName()).log(Level.FINE, "SQL Query:\n{0}", sql);
            PreparedStatement stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();
}
    
   
  
   







 Instance 16







   
  
   
    
Class490.testUsePreparedStatement()#0{
        Connection conn = proxyDataSource.getConnection();
        PreparedStatement st = conn.prepareStatement("select * from emp");
        st.executeQuery();
}
    
   
  
   







 Instance 17







   
  
   
    
Class350.entries()#0{
            conn = datasource.getConnection();
            stmt = conn.prepareStatement(select);
            rs = stmt.executeQuery();
            throw new PersistenceFailureException("Fix me!", e);
}
    
   
  
   





