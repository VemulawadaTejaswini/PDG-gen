
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class370.apply(HostAndPort socketA)#0{
      InetSocketAddress socketAddress = new InetSocketAddress(socketA.getHostText(), socketA
               .getPort());
         logger.trace("testing socket %s", socketAddress);
         socket = new Socket(
               proxyForURI.apply(URI.create("socket://" + socketA.getHostText() + ":" + socketA.getPort())));
         socket.setReuseAddress(false);
         socket.setSoLinger(false, 1);
         socket.setSoTimeout(timeout);
         socket.connect(socketAddress, timeout);
}
    
   
  
   







 Instance 1







   
  
   
    
Class100.isPortOpen(String hostname,int port)#1{
            socket = new Socket();
            socket.setReuseAddress(false);
            socket.setSoLinger(false, 1);
            socket.setSoTimeout(TIMEOUT_IN_MILLISECONDS);
            socket.connect(socketAddress, TIMEOUT_IN_MILLISECONDS);
}
    
   
  
   







 Instance 2







   
  
   
    
Class360.newSocket(int timeout){
        Socket socket = new Socket();
        socket.setReuseAddress(true);
        socket.setSoLinger(false, 0);
        socket.setSoTimeout(timeout);
        socket.setTcpNoDelay(true);
        socket.connect(connectadr);
}
    
   
  
   







 Instance 3







   
  
   
    
Class330.run()#1{
            Socket s = new Socket();
                s.setReuseAddress(true);
                s.setSoTimeout(100);
                s.connect(addr);
}
    
   
  
   







 Instance 4







   
  
   
    
Class660.establishTargetSideConnection(final Socket controlConnection,final Message connectionRequestMessage)#1{
            final Socket toClient = new Socket();
            toClient.setReuseAddress(true);
            toClient.connect(sourceAddress);
}
    
   
  
   







 Instance 5







   
  
   
    
Class320.createSocketToEndpoint(final InetSocketAddress targetAddress,final InetSocketAddress bindAddress){
        final Socket socket = new Socket();
        socket.setReuseAddress(true);
        socket.bind(bindAddress);
        socket.connect(targetAddress);
}
    
   
  
   





