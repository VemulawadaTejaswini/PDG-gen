
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class50.doConnect(InetSocketAddress dest,int timeout)#8{
                    s.connect(dest);
}
    
   
  
   







 Instance 1







   
  
   
    
Class660.test_connect_unresolved()#0{
        InetSocketAddress unresolved = InetSocketAddress.createUnresolved("www.apache.org", 80);
            socket.connect(unresolved);
            socket.connect(unresolved, 123);
}
    
   
  
   







 Instance 2







   
  
   
    
Class250.test_connectLjava_net_SocketAddressI()#14{
        client = new Socket();
        client.connect(boundAddress, 10000);
            client.connect(boundAddress, 10000);
        client.close();
}
    
   
  
   







 Instance 3







   
  
   
    
Class610.test_connectLjava_net_SocketAddress()#3{
        client = new Socket();
        client.connect(boundAddress);
            client.connect(boundAddress);
        client.close();
}
    
   
  
   







 Instance 4







   
  
   
    
Class210.run()#0{
          outputSocket.connect(new InetSocketAddress(httpsProxyServer.getLocalAddress(), httpsProxyServer.getLocalPort()));
          outputSocket.connect(new InetSocketAddress(httpProxyServer.getLocalAddress(), httpProxyServer.getLocalPort()));
        final InputStream outputSocketInputStream = outputSocket.getInputStream();
        final OutputStream outputSocketOutputStream = outputSocket.getOutputStream();
        outputSocketOutputStream.write(byteArray1);
              while((byteArray1Length = inputSocketInputStream.read(byteArray1)) != -1)
              {
                outputSocketOutputStream.write(byteArray1, 0, byteArray1Length);
              }
}
    
   
  
   







 Instance 5







   
  
   
    
Class480.connectSocket(Socket socket,InetSocketAddress address,int connectTimeout){
        socket.connect(address, connectTimeout);
}
    
   
  
   







 Instance 6







   
  
   
    
Class390.connect(InetAddress ipAddress,int port,int connectTimeout,ConnectionWatcher watcher,boolean clientToServer,int bufferSize,boolean useSSL_ignored)#3{
      socket.connect(addr);
}
    
   
  
   







 Instance 7







   
  
   
    
Class40.connectSocket(Socket socket,InetSocketAddress address,int connectTimeout)#0{
        socket.connect(address, connectTimeout);
}
    
   
  
   







 Instance 8







   
  
   
    
Class40.sockConnect(Socket sock,InetSocketAddress addr,int timeout){
        sock.connect(addr, timeout);
}
    
   
  
   







 Instance 9







   
  
   
    
Class150.assertSocketAction_NonBlock_AfterConnect(Socket s)#6{
                s.connect(localAddr2);
}
    
   
  
   







 Instance 10







   
  
   
    
Class150.assertSocketAction_NonBlock_AfterConnect(Socket s)#10{
                s.connect(localAddr2);
}
    
   
  
   







 Instance 11







   
  
   
    
Class80.assertSocketAction_NonBlock_BeforeConnect(Socket s)#8{
            s.connect(localAddr2);
}
    
   
  
   







 Instance 12







   
  
   
    
Class80.connectToHost(String host,int port,int timeout)#1{
        socket.connect( is );
}
    
   
  
   





