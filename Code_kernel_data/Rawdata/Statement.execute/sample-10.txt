
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class400.testTimezoneWithSeconds(){
        if (!TestUtil.haveMinimumServerVersion(con, "8.2"))
            return;
        Statement stmt = con.createStatement();
        stmt.execute("SET TimeZone = 'Europe/Paris'");
        ResultSet rs = stmt.executeQuery("SELECT '1920-01-01'::timestamptz");
        rs.next();
        assertEquals(-1577923200000L, rs.getTimestamp(1).getTime());
}
    
   
  
   







 Instance 1







   
  
   
    
Class410.testHalfHourTimezone(){
        Statement stmt = con.createStatement();
        stmt.execute("SET TimeZone = 'GMT+3:30'");
        ResultSet rs = stmt.executeQuery("SELECT '1969-12-31 20:30:00'::timestamptz");
        assertTrue(rs.next());
        assertEquals(0L, rs.getTimestamp(1).getTime());
}
    
   
  
   







 Instance 2







   
  
   
    
Class340.testSetMode(){
        deleteDb(getTestName());
        c1 = getConnection(getTestName());
        Statement stat = c1.createStatement();
        stat.execute("SET LOCK_MODE 2");
        ResultSet rs = stat.executeQuery("call lock_mode()");
        rs.next();
        assertEquals("2", rs.getString(1));
        c1.close();
}
    
   
  
   







 Instance 3







   
  
   
    
Class30.testLog(double expected,Statement stat)#0{
        stat.execute("insert into log values(1)");
        ResultSet rs = stat.executeQuery("select log(10) from log");
        rs.next();
        assertEquals((int) (expected * 100), (int) (rs.getDouble(1) * 100));
}
    
   
  
   







 Instance 4







   
  
   
    
Class270.testConnectionRollback()#1{
        ResultSet rs = stat.executeQuery("SELECT * FROM TEST");
        assertFalse(rs.next());
        stat.execute("DROP TABLE TEST");
}
    
   
  
   





