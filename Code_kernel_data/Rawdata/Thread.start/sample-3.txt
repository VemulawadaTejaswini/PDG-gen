
  
CodeKernel
  
     h3{color:#800; font-family: "Courier New", Courier, monospace; font-size: 20pt}
  



 Instance 0







   
  
   
    
Class260.initDocumentCache(Book book)#0{
    Thread documentIndexerThread = new Thread(new DocumentIndexer(book), "DocumentIndexer");
    documentIndexerThread.setPriority(Thread.MIN_PRIORITY);
    documentIndexerThread.start();
}
    
   
  
   







 Instance 1







   
  
   
    
Class120.BackgroundStreamSaver(InputStream in,OutputStream out){
    Thread myThread = new Thread(this, getClass().getName());
    myThread.setPriority(Thread.MIN_PRIORITY);
    myThread.start();
}
    
   
  
   







 Instance 2







   
  
   
    
Class720.init(Activity activity,Runnable postAction)#0{
      final Thread initThread = new Thread(new Initializer(activity, postAction));
      initThread.setPriority(Thread.MIN_PRIORITY);
      initThread.start();
}
    
   
  
   







 Instance 3







   
  
   
    
Class130.Player()#0{
        Buffer buffer = new Buffer(BUFFER_SIZE);
        playingThread = new PlayingThread(this, buffer);
        Thread t1 = new Thread(playingThread, "Playing Thread");
        t1.setPriority(Thread.MAX_PRIORITY);
        t1.start();
}
    
   
  
   







 Instance 4







   
  
   
    
Class210.test_all_makeLogsSeriallySlowly(int numToGenerate,Handler handler){
      LogGenerator generator = new LogGenerator(numToGenerate, handler, 1000);
      String tName = handler.getClass().getSimpleName() + ".UnitTest_LogGenerator";
      Thread thread = new Thread( generator, tName );
      thread.setPriority( Thread.NORM_PRIORITY );
      thread.start();
}
    
   
  
   







 Instance 5







   
  
   
    
Class350.unlockInNewThread(final LockHandle handle,final AtomicBoolean wasUnlockedFirst)#0{
        Thread t = new Thread(new Runnable() {
            public void run() {
                wasUnlockedFirst.set(true);
                handle.unlock();
            }
        });
        t.setPriority(Thread.MIN_PRIORITY);
        t.start();
}
    
   
  
   







 Instance 6







   
  
   
    
Class680.quit()#0{
    Thread thread = new Thread(this, "Quit");
    thread.setPriority(Thread.NORM_PRIORITY);
    thread.start();
}
    
   
  
   







 Instance 7







   
  
   
    
Class240.initialize()#0{
        Thread saveThread = new Thread(new SaveRunnable());
        saveThread.setName("XWiki's extension job history saving thread");
        saveThread.setDaemon(true);
        saveThread.setPriority(Thread.MIN_PRIORITY);
        saveThread.start();
}
    
   
  
   





