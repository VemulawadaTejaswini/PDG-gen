Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testVarBinaryInMultipartPK() [ CD ]
Line_2 $$ public void testVarBinaryInMultipartPK() -->Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_3 $$ DriverManager.getConnection(getUrl())[ CD ]
Line_2 $$ public void testVarBinaryInMultipartPK() -->Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_4 $$ conn.prepareStatement(query)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_4 $$ conn.prepareStatement(query)[ FD ]
Line_2 $$ public void testVarBinaryInMultipartPK() -->Line_5 $$ statement.execute()[ CD ]
Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_5 $$ statement.execute()[ FD ]
Line_2 $$ public void testVarBinaryInMultipartPK() -->Line_6 $$ statement = conn.prepareStatement(query)[ CD ]
Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_6 $$ statement = conn.prepareStatement(query)[ FD ]
Line_6 $$ statement = conn.prepareStatement(query)-->Line_6 $$ statement = conn.prepareStatement(query)[ FD ]
Line_6 $$ statement = conn.prepareStatement(query)-->Line_6 $$ conn.prepareStatement(query)[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_6 $$ conn.prepareStatement(query)[ FD ]
Line_2 $$ public void testVarBinaryInMultipartPK() -->Line_7 $$ statement.execute()[ CD ]
Line_4 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_7 $$ statement.execute()[ FD ]
Line_6 $$ statement = conn.prepareStatement(query)-->Line_7 $$ statement.execute()[ FD ]
