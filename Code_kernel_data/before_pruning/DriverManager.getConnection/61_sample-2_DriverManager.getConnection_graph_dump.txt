Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void test_4() [ CD ]
Line_2 $$ public void test_4() -->Line_3 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_3 $$ DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_2 $$ public void test_4() -->Line_4 $$ Statement stmt = conn.createStatement()[ CD ]
Line_4 $$ Statement stmt = conn.createStatement()-->Line_4 $$ conn.createStatement()[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_4 $$ conn.createStatement()[ FD ]
Line_2 $$ public void test_4() -->Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_5 $$ stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")[ CD ]
Line_4 $$ Statement stmt = conn.createStatement()-->Line_5 $$ stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")[ FD ]
Line_2 $$ public void test_4() -->Line_6 $$ Assert.assertTrue(rs.next())[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_6 $$ rs.next()[ FD ]
Line_2 $$ public void test_4() -->Line_7 $$ Assert.assertEquals("ABCDE", rs.getString(1))[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_7 $$ rs.getString(1)[ FD ]
Line_2 $$ public void test_4() -->Line_8 $$ rs.close()[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT 'ABCDE' FROM DUAL")-->Line_8 $$ rs.close()[ FD ]
