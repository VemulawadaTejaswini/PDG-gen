Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void populateStats(Statistics stats) [ CD ]
Line_2 $$ public void populateStats(Statistics stats) -->Line_3 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_3 $$ Runtime.getRuntime()[ CD ]
Line_2 $$ public void populateStats(Statistics stats) -->Line_4 $$ long used = rt.totalMemory() - rt.freeMemory()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ rt.totalMemory()[ FD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ rt.freeMemory()[ FD ]
Line_2 $$ public void populateStats(Statistics stats) -->Line_5 $$ stats.addBytes("Max memory", rt.maxMemory())[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ rt.maxMemory()[ FD ]
Line_2 $$ public void populateStats(Statistics stats) -->Line_6 $$ stats.addBytes("Used memory", used, critical)[ CD ]
Line_4 $$ long used = rt.totalMemory() - rt.freeMemory()-->Line_6 $$ stats.addBytes("Used memory", used, critical)[ FD ]
Line_2 $$ public void populateStats(Statistics stats) -->Line_7 $$ stats.addBytes("Free memory", rt.freeMemory())[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_7 $$ rt.freeMemory()[ FD ]
Line_2 $$ public void populateStats(Statistics stats) -->Line_8 $$ stats.addBytes("Total memory", rt.totalMemory())[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_8 $$ rt.totalMemory()[ FD ]
Line_2 $$ public void populateStats(Statistics stats) -->Line_9 $$ stats.add("Number of processors", rt.availableProcessors())[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_9 $$ rt.availableProcessors()[ FD ]
