Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testFileHeaderCorruption() [ CD ]
Line_2 $$ public void testFileHeaderCorruption() -->Line_3 $$ fc.write(ByteBuffer.allocate(256), fc.size() - 256)[ CD ]
Line_2 $$ public void testFileHeaderCorruption() -->Line_4 $$ ByteBuffer buff = ByteBuffer.allocate(4 * 1024)[ CD ]
Line_4 $$ ByteBuffer buff = ByteBuffer.allocate(4 * 1024)-->Line_4 $$ ByteBuffer.allocate(4 * 1024)[ CD ]
Line_2 $$ public void testFileHeaderCorruption() -->Line_5 $$ fc.read(buff, i)[ CD ]
Line_4 $$ ByteBuffer buff = ByteBuffer.allocate(4 * 1024)-->Line_5 $$ fc.read(buff, i)[ FD ]
Line_2 $$ public void testFileHeaderCorruption() -->Line_6 $$ String h = new String(buff.array(), "UTF-8").trim()[ CD ]
Line_6 $$ String h = new String(buff.array(), "UTF-8").trim()-->Line_6 $$ new String(buff.array(), "UTF-8").trim()[ CD ]
Line_4 $$ ByteBuffer buff = ByteBuffer.allocate(4 * 1024)-->Line_6 $$ buff.array()[ FD ]
Line_2 $$ public void testFileHeaderCorruption() -->Line_7 $$ int idx = h.indexOf("fletcher:")[ CD ]
Line_7 $$ int idx = h.indexOf("fletcher:")-->Line_7 $$ h.indexOf("fletcher:")[ CD ]
Line_6 $$ String h = new String(buff.array(), "UTF-8").trim()-->Line_7 $$ h.indexOf("fletcher:")[ FD ]
