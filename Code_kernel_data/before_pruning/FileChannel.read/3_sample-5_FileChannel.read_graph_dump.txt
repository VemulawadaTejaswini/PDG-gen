Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void delete(RandomAccessFile file) [ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_3 $$ file.getChannel()[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_4 $$ if (file.length() < TAG_LENGTH) [ CD ]
Line_4 $$ if (file.length() < TAG_LENGTH) -->Line_4 $$ file.length()[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_7 $$ fc.position(file.length() - TAG_LENGTH)[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_8 $$ ByteBuffer.allocate(TAG_LENGTH)[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_9 $$ fc.read(byteBuffer)[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_10 $$ byteBuffer.rewind()[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_11 $$ if (AbstractID3v1Tag.seekForV1OrV11Tag(byteBuffer)) [ CD ]
Line_11 $$ if (AbstractID3v1Tag.seekForV1OrV11Tag(byteBuffer)) -->Line_11 $$ AbstractID3v1Tag.seekForV1OrV11Tag(byteBuffer)[ CD ]
Line_11 $$ if (AbstractID3v1Tag.seekForV1OrV11Tag(byteBuffer)) -->Line_12 $$ logger.config("Deleted ID3v1 tag")[ CD ]
Line_11 $$ if (AbstractID3v1Tag.seekForV1OrV11Tag(byteBuffer)) -->Line_13 $$ file.setLength(file.length() - TAG_LENGTH)[ CD ]
Line_11 $$ if (AbstractID3v1Tag.seekForV1OrV11Tag(byteBuffer)) -->Line_15 $$ logger.config("Unable to find ID3v1 tag to deleteField")[ CD ]
