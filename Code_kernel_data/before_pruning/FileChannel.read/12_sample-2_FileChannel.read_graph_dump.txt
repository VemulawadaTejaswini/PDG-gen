Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void handle(URL url) [ CD ]
Line_2 $$ public void handle(URL url) -->Line_3 $$ if (file != null && file.exists()) [ CD ]
Line_6 $$ FileChannel channel = fis.getChannel()-->Line_6 $$ fis.getChannel()[ CD ]
Line_5 $$ FileInputStream fis = new FileInputStream(file)-->Line_6 $$ fis.getChannel()[ FD ]
Line_6 $$ FileChannel channel = fis.getChannel()-->Line_7 $$ channel.size()[ FD ]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) -->Line_10 $$ bb = ByteBuffer.allocate((int) size)[ CD ]
Line_8 $$ ByteBuffer bb-->Line_10 $$ bb = ByteBuffer.allocate((int) size)[ FD ]
Line_10 $$ bb = ByteBuffer.allocate((int) size)-->Line_10 $$ bb = ByteBuffer.allocate((int) size)[ FD ]
Line_10 $$ bb = ByteBuffer.allocate((int) size)-->Line_10 $$ ByteBuffer.allocate((int) size)[ CD ]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) -->Line_11 $$ channel.read(bb, 0)[ CD ]
Line_6 $$ FileChannel channel = fis.getChannel()-->Line_11 $$ channel.read(bb, 0)[ FD ]
Line_8 $$ ByteBuffer bb-->Line_11 $$ channel.read(bb, 0)[ FD ]
Line_10 $$ bb = ByteBuffer.allocate((int) size)-->Line_11 $$ channel.read(bb, 0)[ FD ]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) -->Line_13 $$ int pos = (int) (size - SHOW_LOG_LENGTH)[ CD ]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) -->Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)[ CD ]
Line_8 $$ ByteBuffer bb-->Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)[ FD ]
Line_10 $$ bb = ByteBuffer.allocate((int) size)-->Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)[ FD ]
Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)-->Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)[ FD ]
Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)-->Line_14 $$ ByteBuffer.allocate(SHOW_LOG_LENGTH)[ CD ]
Line_9 $$ if (size <= SHOW_LOG_LENGTH) -->Line_15 $$ channel.read(bb, pos)[ CD ]
Line_6 $$ FileChannel channel = fis.getChannel()-->Line_15 $$ channel.read(bb, pos)[ FD ]
Line_8 $$ ByteBuffer bb-->Line_15 $$ channel.read(bb, pos)[ FD ]
Line_10 $$ bb = ByteBuffer.allocate((int) size)-->Line_15 $$ channel.read(bb, pos)[ FD ]
Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)-->Line_15 $$ channel.read(bb, pos)[ FD ]
Line_13 $$ int pos = (int) (size - SHOW_LOG_LENGTH)-->Line_15 $$ channel.read(bb, pos)[ FD ]
Line_8 $$ ByteBuffer bb-->Line_17 $$ bb.flip()[ FD ]
Line_10 $$ bb = ByteBuffer.allocate((int) size)-->Line_17 $$ bb.flip()[ FD ]
Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)-->Line_17 $$ bb.flip()[ FD ]
Line_8 $$ ByteBuffer bb-->Line_18 $$ bb.array()[ FD ]
Line_10 $$ bb = ByteBuffer.allocate((int) size)-->Line_18 $$ bb.array()[ FD ]
Line_14 $$ bb = ByteBuffer.allocate(SHOW_LOG_LENGTH)-->Line_18 $$ bb.array()[ FD ]
