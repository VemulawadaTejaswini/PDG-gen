Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testThroughLogBuffer() [ CD ]
Line_2 $$ public void testThroughLogBuffer() -->Line_3 $$ ByteBuffer readInMe = ByteBuffer.allocate(4)[ CD ]
Line_3 $$ ByteBuffer readInMe = ByteBuffer.allocate(4)-->Line_3 $$ ByteBuffer.allocate(4)[ CD ]
Line_2 $$ public void testThroughLogBuffer() -->Line_4 $$ dup.read(readInMe)[ CD ]
Line_3 $$ ByteBuffer readInMe = ByteBuffer.allocate(4)-->Line_4 $$ dup.read(readInMe)[ FD ]
Line_2 $$ public void testThroughLogBuffer() -->Line_5 $$ readInMe.flip()[ CD ]
Line_3 $$ ByteBuffer readInMe = ByteBuffer.allocate(4)-->Line_5 $$ readInMe.flip()[ FD ]
Line_2 $$ public void testThroughLogBuffer() -->Line_6 $$ assertEquals(1, readInMe.getInt())[ CD ]
Line_3 $$ ByteBuffer readInMe = ByteBuffer.allocate(4)-->Line_6 $$ readInMe.getInt()[ FD ]
Line_2 $$ public void testThroughLogBuffer() -->Line_7 $$ readInMe.flip()[ CD ]
Line_3 $$ ByteBuffer readInMe = ByteBuffer.allocate(4)-->Line_7 $$ readInMe.flip()[ FD ]
