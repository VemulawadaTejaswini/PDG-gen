Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) [ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_3 $$ if (DEBUG.META)[ CD ]
Line_3 $$ if (DEBUG.META)-->Line_3 $$ writeField(w, "hashCode", Integer.toHexString(u.hashCode()))[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_4 $$ writeField(w, "scheme", u.getScheme())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_5 $$ writeField(w, "scheme-specific", u.getSchemeSpecificPart(), u.getRawSchemeSpecificPart())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_6 $$ writeField(w, "authority", u.getAuthority(), u.getRawAuthority())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_7 $$ writeField(w, "userInfo", u.getUserInfo(), u.getRawUserInfo())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_8 $$ writeField(w, "host", u.getHost())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_9 $$ if (u.getPort() != -1)[ CD ]
Line_9 $$ if (u.getPort() != -1)-->Line_10 $$ writeField(w, "port", u.getPort())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_11 $$ writeField(w, "path", u.getPath(), u.getRawPath())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_12 $$ writeField(w, "query", u.getQuery(), u.getRawQuery())[ CD ]
Line_2 $$ public void writeURI(PrintWriter w, URI u, String msg) -->Line_13 $$ writeField(w, "fragment", u.getFragment(), u.getRawFragment())[ CD ]
