Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testEscapeResolvedUrl() [ CD ]
Line_2 $$ public void testEscapeResolvedUrl() -->Line_3 $$ String escaped = RealCDXExtractorOutput.resolve(context, spec)[ CD ]
Line_3 $$ String escaped = RealCDXExtractorOutput.resolve(context, spec)-->Line_3 $$ RealCDXExtractorOutput.resolve(context, spec)[ CD ]
Line_2 $$ public void testEscapeResolvedUrl() -->Line_4 $$ assertTrue(escaped.indexOf(" ") < 0)[ CD ]
Line_3 $$ String escaped = RealCDXExtractorOutput.resolve(context, spec)-->Line_4 $$ escaped.indexOf(" ")[ FD ]
Line_2 $$ public void testEscapeResolvedUrl() -->Line_5 $$ URI parsed = new URI(escaped)[ CD ]
Line_2 $$ public void testEscapeResolvedUrl() -->Line_6 $$ assertEquals("Ã¤nchor", parsed.getFragment())[ CD ]
Line_5 $$ URI parsed = new URI(escaped)-->Line_6 $$ parsed.getFragment()[ FD ]
