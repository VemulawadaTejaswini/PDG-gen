Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) [ CD ]
Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) -->Line_4 $$ for (int i = redirects.size() - 1; frag == null && i >= 0; i--) [ CD ]
Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) -->Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) [ CD ]
Line_4 $$ for (int i = redirects.size() - 1; frag == null && i >= 0; i--) -->Line_4 $$ int i = redirects.size() - 1[ CD ]
Line_4 $$ for (int i = redirects.size() - 1; frag == null && i >= 0; i--) -->Line_4 $$ i--[ CD ]
Line_4 $$ int i = redirects.size() - 1-->Line_4 $$ i--[ FD ]
Line_4 $$ for (int i = redirects.size() - 1; frag == null && i >= 0; i--) -->Line_5 $$ redirects.get(i).getFragment()[ CD ]
Line_4 $$ int i = redirects.size() - 1-->Line_5 $$ redirects.get(i)[ FD ]
Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) -->Line_7 $$ uribuilder.setFragment(frag)[ CD ]
Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) -->Line_8 $$ if (uribuilder.getFragment() == null) [ CD ]
Line_8 $$ if (uribuilder.getFragment() == null) -->Line_9 $$ uribuilder.setFragment(originalURI.getFragment())[ CD ]
Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) -->Line_11 $$ if (target != null && !uribuilder.isAbsolute()) [ CD ]
Line_11 $$ !uribuilder.isAbsolute()-->Line_11 $$ uribuilder.isAbsolute()[ CD ]
Line_11 $$ if (target != null && !uribuilder.isAbsolute()) -->Line_12 $$ uribuilder.setScheme(target.getSchemeName())[ CD ]
Line_11 $$ if (target != null && !uribuilder.isAbsolute()) -->Line_13 $$ uribuilder.setHost(target.getHostName())[ CD ]
Line_11 $$ if (target != null && !uribuilder.isAbsolute()) -->Line_14 $$ uribuilder.setPort(target.getPort())[ CD ]
Line_2 $$ public void resolve(final URI originalURI, final HttpHost target, final List<URI> redirects) -->Line_16 $$ return uribuilder.build();[ CD ]
Line_16 $$ return uribuilder.build();-->Line_16 $$ uribuilder.build()[ CD ]
Line_4 $$ int i = redirects.size() - 1-->Line_4 $$ i--[ FD ]
Line_4 $$ int i = redirects.size() - 1-->Line_5 $$ redirects.get(i)[ FD ]
