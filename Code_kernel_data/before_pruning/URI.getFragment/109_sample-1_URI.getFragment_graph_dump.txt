Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void createFromURL(String url) [ CD ]
Line_2 $$ public void createFromURL(String url) -->Line_3 $$ res.setScheme(uri.getScheme())[ CD ]
Line_2 $$ public void createFromURL(String url) -->Line_4 $$ res.setUserInfo(uri.getUserInfo())[ CD ]
Line_2 $$ public void createFromURL(String url) -->Line_5 $$ if (uri.getHost() == null && res.getHasScheme()) [ CD ]
Line_9 $$ java.net.URL u = new java.net.URL(url)-->Line_10 $$ u.getHost()[ FD ]
Line_9 $$ java.net.URL u = new java.net.URL(url)-->Line_11 $$ u.getPort()[ FD ]
Line_15 $$ URISyntaxException uex = new URISyntaxException(url, e.getMessage())-->Line_16 $$ uex.initCause(e)[ FD ]
Line_5 $$ if (uri.getHost() == null && res.getHasScheme()) -->Line_22 $$ res.setHost(uri.getHost())[ CD ]
Line_5 $$ if (uri.getHost() == null && res.getHasScheme()) -->Line_23 $$ res.setPort(uri.getPort())[ CD ]
Line_2 $$ public void createFromURL(String url) -->Line_25 $$ res.setPath(uri.getRawPath())[ CD ]
Line_2 $$ public void createFromURL(String url) -->Line_26 $$ res.setFragment(uri.getFragment())[ CD ]
Line_2 $$ public void createFromURL(String url) -->Line_27 $$ res.addQuery(uri)[ CD ]
