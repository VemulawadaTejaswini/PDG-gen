Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void rewrite(JSONObject json, String scheme, String hostname, int port, String contextPath) [ CD ]
Line_2 $$ public void rewrite(JSONObject json, String scheme, String hostname, int port, String contextPath) -->Line_3 $$ String[] names = JSONObject.getNames(json)[ CD ]
Line_3 $$ String[] names = JSONObject.getNames(json)-->Line_3 $$ JSONObject.getNames(json)[ CD ]
Line_2 $$ public void rewrite(JSONObject json, String scheme, String hostname, int port, String contextPath) -->Line_4 $$ if (names == null)[ CD ]
Line_3 $$ String[] names = JSONObject.getNames(json)-->Line_4 $$ if (names == null)[ FD ]
Line_4 $$ if (names == null)-->Line_5 $$ return;[ CD ]
Line_7 $$ Object o = json.opt(name)-->Line_7 $$ json.opt(name)[ CD ]
Line_6 $$ String name-->Line_7 $$ json.opt(name)[ FD ]
Line_7 $$ Object o = json.opt(name)-->Line_8 $$ if (o instanceof URI) [ FD ]
Line_11 $$ if ("orion".equals(uri.getScheme())) -->Line_11 $$ "orion".equals(uri.getScheme())[ CD ]
Line_10 $$ URI uri = (URI) o-->Line_11 $$ uri.getScheme()[ FD ]
Line_11 $$ if ("orion".equals(uri.getScheme())) -->Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_10 $$ URI uri = (URI) o-->Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_12 $$ uri.getPath()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_12 $$ uri.getPath()[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_12 $$ uri.getQuery()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_12 $$ uri.getQuery()[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_12 $$ uri.getFragment()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_12 $$ uri.getFragment()[ FD ]
Line_6 $$ String name-->Line_14 $$ json.put(name, unqualifyObjectProperty(name, uri, scheme, hostname, port))[ FD ]
Line_6 $$ String name-->Line_14 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_14 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_14 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_8 $$ if (o instanceof URI) -->Line_18 $$ if (o instanceof String) [ CD ]
Line_7 $$ Object o = json.opt(name)-->Line_18 $$ if (o instanceof String) [ FD ]
Line_18 $$ if (o instanceof String) -->Line_19 $$ String string = (String) o[ CD ]
Line_18 $$ if (o instanceof String) -->Line_20 $$ if (string.startsWith(scheme) || string.startsWith("orion:/")) [ CD ]
Line_19 $$ String string = (String) o-->Line_20 $$ string.startsWith(scheme)[ FD ]
Line_19 $$ String string = (String) o-->Line_20 $$ string.startsWith("orion:/")[ FD ]
Line_23 $$ if ("orion".equals(uri.getScheme())) -->Line_23 $$ "orion".equals(uri.getScheme())[ CD ]
Line_10 $$ URI uri = (URI) o-->Line_23 $$ uri.getScheme()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_23 $$ uri.getScheme()[ FD ]
Line_23 $$ if ("orion".equals(uri.getScheme())) -->Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_10 $$ URI uri = (URI) o-->Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_24 $$ uri.getPath()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri.getPath()[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri.getPath()[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_24 $$ uri.getQuery()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri.getQuery()[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri.getQuery()[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_24 $$ uri.getFragment()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri.getFragment()[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_24 $$ uri.getFragment()[ FD ]
Line_23 $$ if ("orion".equals(uri.getScheme())) -->Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ CD ]
Line_10 $$ URI uri = (URI) o-->Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_26 $$ uri.getScheme()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getScheme()[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getScheme()[ FD ]
Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getScheme()[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_26 $$ uri.getPath()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getPath()[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getPath()[ FD ]
Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getPath()[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_26 $$ uri.getQuery()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getQuery()[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getQuery()[ FD ]
Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getQuery()[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_26 $$ uri.getFragment()[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getFragment()[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getFragment()[ FD ]
Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_26 $$ uri.getFragment()[ FD ]
Line_6 $$ String name-->Line_28 $$ json.put(name, unqualifyObjectProperty(name, uri, scheme, hostname, port))[ FD ]
Line_6 $$ String name-->Line_28 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_10 $$ URI uri = (URI) o-->Line_28 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_12 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_28 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_24 $$ uri = new URI(null, null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_28 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_26 $$ uri = new URI(uri.getScheme(), null, contextPath + uri.getPath(), uri.getQuery(), uri.getFragment())-->Line_28 $$ unqualifyObjectProperty(name, uri, scheme, hostname, port)[ FD ]
Line_18 $$ if (o instanceof String) -->Line_34 $$ rewrite(o, scheme, hostname, port, contextPath)[ CD ]
Line_7 $$ Object o = json.opt(name)-->Line_34 $$ rewrite(o, scheme, hostname, port, contextPath)[ FD ]
