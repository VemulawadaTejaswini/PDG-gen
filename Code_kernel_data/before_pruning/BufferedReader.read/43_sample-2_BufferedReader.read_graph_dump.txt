Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getMediaType(BufferedReader br) [ CD ]
Line_2 $$ public void getMediaType(BufferedReader br) -->Line_3 $$ br.mark(READ_AHEAD_LIMIT)[ CD ]
Line_2 $$ public void getMediaType(BufferedReader br) -->Line_4 $$ for (int i = 0; c != -1 && i < READ_AHEAD_LIMIT; i++) [ CD ]
Line_2 $$ public void getMediaType(BufferedReader br) -->Line_2 $$ public void getMediaType(BufferedReader br) [ CD ]
Line_4 $$ for (int i = 0; c != -1 && i < READ_AHEAD_LIMIT; i++) -->Line_4 $$ int i = 0[ CD ]
Line_4 $$ for (int i = 0; c != -1 && i < READ_AHEAD_LIMIT; i++) -->Line_4 $$ i++[ CD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
Line_4 $$ for (int i = 0; c != -1 && i < READ_AHEAD_LIMIT; i++) -->Line_6 $$ if (c == '[' || c == '[ CD ]
Line_6 $$ if (c == '[' || c == '-->Line_7 $$ return Constants.APPLICATION_JSON;[ CD ]
Line_6 $$ if (c == '[' || c == '-->Line_8 $$ if (c == '<') [ CD ]
Line_8 $$ if (c == '<') -->Line_9 $$ return Constants.APPLICATION_XML;[ CD ]
Line_2 $$ public void getMediaType(BufferedReader br) -->Line_12 $$ br.reset()[ CD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
