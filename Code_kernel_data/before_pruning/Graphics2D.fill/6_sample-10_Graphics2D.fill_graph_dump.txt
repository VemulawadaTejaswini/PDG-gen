Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) [ CD ]
Line_2 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_3 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())[ CD ]
Line_3 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())-->Line_3 $$ AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())[ CD ]
Line_2 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_5 $$ tx.translate(-paintBounds.getX(), -paintBounds.getY())[ CD ]
Line_3 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())-->Line_5 $$ tx.translate(-paintBounds.getX(), -paintBounds.getY())[ FD ]
Line_5 $$ -paintBounds.getX()-->Line_5 $$ paintBounds.getX()[ CD ]
Line_5 $$ -paintBounds.getY()-->Line_5 $$ paintBounds.getY()[ CD ]
Line_2 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_6 $$ graphics.fill(tx.createTransformedShape(shape))[ CD ]
Line_3 $$ AffineTransform tx = AffineTransform.getScaleInstance(1.0 / paintBounds.getWidth(), 1.0 / paintBounds.getHeight())-->Line_6 $$ tx.createTransformedShape(shape)[ FD ]
Line_2 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_7 $$ if (paintOld != null) [ CD ]
Line_7 $$ if (paintOld != null) -->Line_8 $$ graphics.setPaint(paintOld)[ CD ]
Line_2 $$ public void fillPaintedShape(Graphics2D graphics, Shape shape, Paint paint, Rectangle2D paintBounds) -->Line_10 $$ graphics.setTransform(txOrig)[ CD ]
