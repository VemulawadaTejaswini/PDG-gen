Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) [ CD ]
Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) -->Line_3 $$ for (int i = 0; i < this.fractions.length; i++) [ CD ]
Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) -->Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) [ CD ]
Line_3 $$ for (int i = 0; i < this.fractions.length; i++) -->Line_3 $$ int i = 0[ CD ]
Line_3 $$ for (int i = 0; i < this.fractions.length; i++) -->Line_3 $$ i++[ CD ]
Line_3 $$ int i = 0-->Line_3 $$ i++[ FD ]
Line_3 $$ for (int i = 0; i < this.fractions.length; i++) -->Line_4 $$ ColorSchemeSingleColorQuery colorQuery = this.colorQueries[i][ CD ]
Line_3 $$ for (int i = 0; i < this.fractions.length; i++) -->Line_5 $$ fillColors[i] = colorQuery.query(fillScheme)[ CD ]
Line_5 $$ fillColors[i] = colorQuery.query(fillScheme)-->Line_5 $$ colorQuery.query(fillScheme)[ CD ]
Line_4 $$ ColorSchemeSingleColorQuery colorQuery = this.colorQueries[i]-->Line_5 $$ colorQuery.query(fillScheme)[ FD ]
Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) -->Line_7 $$ MultipleGradientPaint gradient = new LinearGradientPaint(0, 0, 0, height, this.fractions, fillColors, CycleMethod.REPEAT)[ CD ]
Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) -->Line_9 $$ graphics.setPaint(gradient)[ CD ]
Line_7 $$ MultipleGradientPaint gradient = new LinearGradientPaint(0, 0, 0, height, this.fractions, fillColors, CycleMethod.REPEAT)-->Line_9 $$ graphics.setPaint(gradient)[ FD ]
Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) -->Line_10 $$ graphics.fill(contour)[ CD ]
Line_2 $$ public void paintContourBackground(Graphics g, Component comp, int width, int height, Shape contour, boolean isFocused, SubstanceColorScheme fillScheme, boolean hasShine) -->Line_11 $$ graphics.dispose()[ CD ]
Line_3 $$ int i = 0-->Line_3 $$ for (int i = 0; i < this.fractions.length; i++) [ FD ]
Line_3 $$ int i = 0-->Line_3 $$ for (int i = 0; i < this.fractions.length; i++) [ FD ]
Line_3 $$ int i = 0-->Line_3 $$ i++[ FD ]
Line_4 $$ ColorSchemeSingleColorQuery colorQuery = this.colorQueries[i]-->Line_5 $$ colorQuery.query(fillScheme)[ FD ]
