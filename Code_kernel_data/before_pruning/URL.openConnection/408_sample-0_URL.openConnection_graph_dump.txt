Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testPathParam() [ CD ]
Line_2 $$ public void testPathParam() -->Line_3 $$ URL url = applicationURL()[ CD ]
Line_3 $$ URL url = applicationURL()-->Line_3 $$ applicationURL()[ CD ]
Line_2 $$ public void testPathParam() -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = applicationURL()-->Line_4 $$ url.openConnection()[ FD ]
Line_2 $$ public void testPathParam() -->Line_5 $$ conn.setInstanceFollowRedirects(false)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ conn.setInstanceFollowRedirects(false)[ FD ]
Line_2 $$ public void testPathParam() -->Line_6 $$ conn.connect()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.connect()[ FD ]
Line_2 $$ public void testPathParam() -->Line_7 $$ assertEquals(302, conn.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ conn.getResponseCode()[ FD ]
Line_2 $$ public void testPathParam() -->Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)[ CD ]
Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)-->Line_8 $$ Tools.responseHeaders(conn)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ Tools.responseHeaders(conn)[ FD ]
Line_2 $$ public void testPathParam() -->Line_9 $$ String redirect = headers.get("Location")[ CD ]
Line_9 $$ String redirect = headers.get("Location")-->Line_9 $$ headers.get("Location")[ CD ]
Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)-->Line_9 $$ headers.get("Location")[ FD ]
Line_2 $$ public void testPathParam() -->Line_10 $$ driver.get(redirect)[ CD ]
Line_9 $$ String redirect = headers.get("Location")-->Line_10 $$ driver.get(redirect)[ FD ]
