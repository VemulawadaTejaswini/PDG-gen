Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void deploy(URL resource, boolean xhrCompatible) [ CD ]
Line_2 $$ public void deploy(URL resource, boolean xhrCompatible) -->Line_3 $$ String fileName = ResourceGeneratorUtil.baseName(resource)[ CD ]
Line_3 $$ String fileName = ResourceGeneratorUtil.baseName(resource)-->Line_3 $$ ResourceGeneratorUtil.baseName(resource)[ CD ]
Line_2 $$ public void deploy(URL resource, boolean xhrCompatible) -->Line_4 $$ byte[] bytes = Util.readURLAsBytes(resource)[ CD ]
Line_4 $$ byte[] bytes = Util.readURLAsBytes(resource)-->Line_4 $$ Util.readURLAsBytes(resource)[ CD ]
Line_2 $$ public void deploy(URL resource, boolean xhrCompatible) -->Line_5 $$ return deploy(fileName, resource.openConnection().getContentType(), bytes, xhrCompatible);[ CD ]
Line_5 $$ return deploy(fileName, resource.openConnection().getContentType(), bytes, xhrCompatible);-->Line_5 $$ deploy(fileName, resource.openConnection().getContentType(), bytes, xhrCompatible)[ CD ]
Line_3 $$ String fileName = ResourceGeneratorUtil.baseName(resource)-->Line_5 $$ deploy(fileName, resource.openConnection().getContentType(), bytes, xhrCompatible)[ FD ]
Line_4 $$ byte[] bytes = Util.readURLAsBytes(resource)-->Line_5 $$ deploy(fileName, resource.openConnection().getContentType(), bytes, xhrCompatible)[ FD ]
Line_5 $$ return deploy(fileName, resource.openConnection().getContentType(), bytes, xhrCompatible);-->Line_5 $$ resource.openConnection().getContentType()[ CD ]
Line_2 $$ public void deploy(URL resource, boolean xhrCompatible) -->Line_7 $$ getLogger().log(TreeLogger.ERROR, "Unable to determine mime type of resource", e)[ CD ]
