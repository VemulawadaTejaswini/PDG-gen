Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testMemoryBufferURLConnection() [ CD ]
Line_2 $$ public void testMemoryBufferURLConnection() -->Line_3 $$ new Random().nextBytes(randomData)[ CD ]
Line_2 $$ public void testMemoryBufferURLConnection() -->Line_4 $$ URL url = MemoryBufferURLConnection.createURL(randomData, CONTENT_TYPE)[ CD ]
Line_4 $$ URL url = MemoryBufferURLConnection.createURL(randomData, CONTENT_TYPE)-->Line_4 $$ MemoryBufferURLConnection.createURL(randomData, CONTENT_TYPE)[ CD ]
Line_2 $$ public void testMemoryBufferURLConnection() -->Line_5 $$ URLConnection uc = url.openConnection()[ CD ]
Line_5 $$ URLConnection uc = url.openConnection()-->Line_5 $$ url.openConnection()[ CD ]
Line_4 $$ URL url = MemoryBufferURLConnection.createURL(randomData, CONTENT_TYPE)-->Line_5 $$ url.openConnection()[ FD ]
Line_2 $$ public void testMemoryBufferURLConnection() -->Line_6 $$ uc.connect()[ CD ]
Line_5 $$ URLConnection uc = url.openConnection()-->Line_6 $$ uc.connect()[ FD ]
Line_2 $$ public void testMemoryBufferURLConnection() -->Line_7 $$ Assert.assertEquals(CONTENT_TYPE, uc.getContentType())[ CD ]
Line_5 $$ URLConnection uc = url.openConnection()-->Line_7 $$ uc.getContentType()[ FD ]
Line_2 $$ public void testMemoryBufferURLConnection() -->Line_8 $$ Assert.assertEquals(4096, uc.getContentLength())[ CD ]
Line_5 $$ URLConnection uc = url.openConnection()-->Line_8 $$ uc.getContentLength()[ FD ]
