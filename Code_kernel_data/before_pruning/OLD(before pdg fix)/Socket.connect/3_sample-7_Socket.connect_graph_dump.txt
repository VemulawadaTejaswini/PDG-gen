Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void connectSocket(final Socket socket, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpParams params) [ CD ]
Line_2 $$ public void connectSocket(final Socket socket, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpParams params) -->Line_3 $$ final int connTimeout = HttpConnectionParams.getConnectionTimeout(params)[ CD ]
Line_3 $$ final int connTimeout = HttpConnectionParams.getConnectionTimeout(params)-->Line_3 $$ HttpConnectionParams.getConnectionTimeout(params)[ CD ]
Line_2 $$ public void connectSocket(final Socket socket, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpParams params) -->Line_4 $$ final int soTimeout = HttpConnectionParams.getSoTimeout(params)[ CD ]
Line_4 $$ final int soTimeout = HttpConnectionParams.getSoTimeout(params)-->Line_4 $$ HttpConnectionParams.getSoTimeout(params)[ CD ]
Line_2 $$ public void connectSocket(final Socket socket, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpParams params) -->Line_5 $$ sock.setSoTimeout(soTimeout)[ CD ]
Line_4 $$ final int soTimeout = HttpConnectionParams.getSoTimeout(params)-->Line_5 $$ sock.setSoTimeout(soTimeout)[ FD ]
Line_2 $$ public void connectSocket(final Socket socket, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpParams params) -->Line_6 $$ sock.connect(remoteAddress, connTimeout)[ CD ]
Line_3 $$ final int connTimeout = HttpConnectionParams.getConnectionTimeout(params)-->Line_6 $$ sock.connect(remoteAddress, connTimeout)[ FD ]
