Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void copyStream(final BufferedReader in, final PrintWriter out, final String[] mapFrom, String[] mapTo) [ CD ]
Line_2 $$ public void copyStream(final BufferedReader in, final PrintWriter out, final String[] mapFrom, String[] mapTo) -->Line_3 $$ while ((line = in.readLine()) != null) [ CD ]
Line_2 $$ public void copyStream(final BufferedReader in, final PrintWriter out, final String[] mapFrom, String[] mapTo) -->Line_2 $$ public void copyStream(final BufferedReader in, final PrintWriter out, final String[] mapFrom, String[] mapTo) [ CD ]
Line_3 $$ while ((line = in.readLine()) != null) -->Line_4 $$ for (int i = 0; i < mapFrom.length; i++) [ CD ]
Line_3 $$ while ((line = in.readLine()) != null) -->Line_3 $$ while ((line = in.readLine()) != null) [ CD ]
Line_4 $$ for (int i = 0; i < mapFrom.length; i++) -->Line_4 $$ int i = 0[ CD ]
Line_4 $$ for (int i = 0; i < mapFrom.length; i++) -->Line_4 $$ i++[ CD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
Line_4 $$ for (int i = 0; i < mapFrom.length; i++) -->Line_5 $$ line.replaceAll(mapFrom[i], mapTo[i])[ CD ]
Line_3 $$ while ((line = in.readLine()) != null) -->Line_7 $$ out.println(line)[ CD ]
Line_4 $$ int i = 0-->Line_4 $$ for (int i = 0; i < mapFrom.length; i++) [ FD ]
Line_4 $$ int i = 0-->Line_4 $$ for (int i = 0; i < mapFrom.length; i++) [ FD ]
Line_4 $$ int i = 0-->Line_4 $$ i++[ FD ]
