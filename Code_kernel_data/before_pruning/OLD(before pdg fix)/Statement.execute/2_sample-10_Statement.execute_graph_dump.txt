Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testSetMode() [ CD ]
Line_2 $$ public void testSetMode() -->Line_3 $$ deleteDb(getTestName())[ CD ]
Line_2 $$ public void testSetMode() -->Line_4 $$ getConnection(getTestName())[ CD ]
Line_2 $$ public void testSetMode() -->Line_5 $$ Statement stat = c1.createStatement()[ CD ]
Line_5 $$ Statement stat = c1.createStatement()-->Line_5 $$ c1.createStatement()[ CD ]
Line_2 $$ public void testSetMode() -->Line_6 $$ stat.execute("SET LOCK_MODE 2")[ CD ]
Line_5 $$ Statement stat = c1.createStatement()-->Line_6 $$ stat.execute("SET LOCK_MODE 2")[ FD ]
Line_2 $$ public void testSetMode() -->Line_7 $$ ResultSet rs = stat.executeQuery("call lock_mode()")[ CD ]
Line_7 $$ ResultSet rs = stat.executeQuery("call lock_mode()")-->Line_7 $$ stat.executeQuery("call lock_mode()")[ CD ]
Line_5 $$ Statement stat = c1.createStatement()-->Line_7 $$ stat.executeQuery("call lock_mode()")[ FD ]
Line_2 $$ public void testSetMode() -->Line_8 $$ rs.next()[ CD ]
Line_7 $$ ResultSet rs = stat.executeQuery("call lock_mode()")-->Line_8 $$ rs.next()[ FD ]
Line_2 $$ public void testSetMode() -->Line_9 $$ assertEquals("2", rs.getString(1))[ CD ]
Line_7 $$ ResultSet rs = stat.executeQuery("call lock_mode()")-->Line_9 $$ rs.getString(1)[ FD ]
Line_2 $$ public void testSetMode() -->Line_10 $$ c1.close()[ CD ]
