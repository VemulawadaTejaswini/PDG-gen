Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void configure(JobConf jconf) [ CD ]
Line_2 $$ public void configure(JobConf jconf) -->Line_3 $$ for (int i = 0; i < localArchives.length; i++) [ CD ]
Line_2 $$ public void configure(JobConf jconf) -->Line_2 $$ public void configure(JobConf jconf) [ CD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_3 $$ int i = 0[ CD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_3 $$ i++[ CD ]
Line_3 $$ int i = 0-->Line_3 $$ i++[ FD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_4 $$ File f = new File(localArchives[i].toString())[ CD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_5 $$ File txt = new File(f, "test.txt")[ CD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_6 $$ FileInputStream fin = new FileInputStream(txt)[ CD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_7 $$ DataInputStream din = new DataInputStream(fin)[ CD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_8 $$ String str = din.readLine()[ CD ]
Line_8 $$ String str = din.readLine()-->Line_8 $$ din.readLine()[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(fin)-->Line_8 $$ din.readLine()[ FD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_9 $$ din.close()[ CD ]
Line_7 $$ DataInputStream din = new DataInputStream(fin)-->Line_9 $$ din.close()[ FD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_10 $$ out.writeBytes(str)[ CD ]
Line_8 $$ String str = din.readLine()-->Line_10 $$ out.writeBytes(str)[ FD ]
Line_3 $$ for (int i = 0; i < localArchives.length; i++) -->Line_11 $$ out.writeBytes("\n")[ CD ]
Line_2 $$ public void configure(JobConf jconf) -->Line_13 $$ for (int i = 0; i < localFiles.length; i++) [ CD ]
Line_2 $$ public void configure(JobConf jconf) -->Line_2 $$ public void configure(JobConf jconf) [ CD ]
Line_3 $$ int i = 0-->Line_13 $$ for (int i = 0; i < localFiles.length; i++) [ FD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_13 $$ int i = 0[ CD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_13 $$ i++[ CD ]
Line_13 $$ int i = 0-->Line_13 $$ i++[ FD ]
Line_3 $$ int i = 0-->Line_13 $$ i++[ FD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_14 $$ File txt = new File(localFiles[i].toString())[ CD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_15 $$ FileInputStream fin = new FileInputStream(txt)[ CD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_16 $$ DataInputStream din = new DataInputStream(fin)[ CD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_17 $$ String str = din.readLine()[ CD ]
Line_17 $$ String str = din.readLine()-->Line_17 $$ din.readLine()[ CD ]
Line_16 $$ DataInputStream din = new DataInputStream(fin)-->Line_17 $$ din.readLine()[ FD ]
Line_7 $$ DataInputStream din = new DataInputStream(fin)-->Line_17 $$ din.readLine()[ FD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_18 $$ out.writeBytes(str)[ CD ]
Line_17 $$ String str = din.readLine()-->Line_18 $$ out.writeBytes(str)[ FD ]
Line_8 $$ String str = din.readLine()-->Line_18 $$ out.writeBytes(str)[ FD ]
Line_13 $$ for (int i = 0; i < localFiles.length; i++) -->Line_19 $$ out.writeBytes("\n")[ CD ]
Line_3 $$ int i = 0-->Line_3 $$ for (int i = 0; i < localArchives.length; i++) [ FD ]
Line_3 $$ int i = 0-->Line_3 $$ for (int i = 0; i < localArchives.length; i++) [ FD ]
Line_3 $$ int i = 0-->Line_3 $$ i++[ FD ]
Line_7 $$ DataInputStream din = new DataInputStream(fin)-->Line_8 $$ din.readLine()[ FD ]
Line_7 $$ DataInputStream din = new DataInputStream(fin)-->Line_9 $$ din.close()[ FD ]
Line_8 $$ String str = din.readLine()-->Line_10 $$ out.writeBytes(str)[ FD ]
Line_13 $$ int i = 0-->Line_13 $$ for (int i = 0; i < localFiles.length; i++) [ FD ]
Line_13 $$ int i = 0-->Line_13 $$ for (int i = 0; i < localFiles.length; i++) [ FD ]
Line_13 $$ int i = 0-->Line_13 $$ i++[ FD ]
Line_16 $$ DataInputStream din = new DataInputStream(fin)-->Line_17 $$ din.readLine()[ FD ]
Line_17 $$ String str = din.readLine()-->Line_18 $$ out.writeBytes(str)[ FD ]
