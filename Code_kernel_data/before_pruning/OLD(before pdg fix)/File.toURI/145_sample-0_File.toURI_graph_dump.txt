Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testBadUrl() [ CD ]
Line_2 $$ public void testBadUrl() -->Line_3 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()[ CD ]
Line_3 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()-->Line_3 $$ new File("nonexistent.web.xml").toURI().toURL()[ CD ]
Line_2 $$ public void testBadUrl() -->Line_4 $$ builder.expectWarn("Unable to process '" + url.toExternalForm() + "' for servlet validation", IOException.class)[ CD ]
Line_3 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()-->Line_4 $$ url.toExternalForm()[ FD ]
Line_2 $$ public void testBadUrl() -->Line_6 $$ UnitTestTreeLogger logger = builder.createLogger()[ CD ]
Line_6 $$ UnitTestTreeLogger logger = builder.createLogger()-->Line_6 $$ builder.createLogger()[ CD ]
Line_2 $$ public void testBadUrl() -->Line_7 $$ ServletValidator validator = ServletValidator.create(logger, url)[ CD ]
Line_7 $$ ServletValidator validator = ServletValidator.create(logger, url)-->Line_7 $$ ServletValidator.create(logger, url)[ CD ]
Line_6 $$ UnitTestTreeLogger logger = builder.createLogger()-->Line_7 $$ ServletValidator.create(logger, url)[ FD ]
Line_3 $$ URL url = new File("nonexistent.web.xml").toURI().toURL()-->Line_7 $$ ServletValidator.create(logger, url)[ FD ]
Line_2 $$ public void testBadUrl() -->Line_8 $$ assertNull(validator)[ CD ]
Line_7 $$ ServletValidator validator = ServletValidator.create(logger, url)-->Line_8 $$ assertNull(validator)[ FD ]
Line_2 $$ public void testBadUrl() -->Line_9 $$ logger.assertCorrectLogEntries()[ CD ]
Line_6 $$ UnitTestTreeLogger logger = builder.createLogger()-->Line_9 $$ logger.assertCorrectLogEntries()[ FD ]
