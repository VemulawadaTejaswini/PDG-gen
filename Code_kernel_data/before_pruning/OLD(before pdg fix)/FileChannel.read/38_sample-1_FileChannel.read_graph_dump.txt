Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void initialWritePosition() [ CD ]
Line_2 $$ public void initialWritePosition() -->Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_3 $$ ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)[ CD ]
Line_2 $$ public void initialWritePosition() -->Line_4 $$ channel.read(buf)[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_4 $$ channel.read(buf)[ FD ]
Line_2 $$ public void initialWritePosition() -->Line_5 $$ buf.rewind()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_5 $$ buf.rewind()[ FD ]
Line_2 $$ public void initialWritePosition() -->Line_6 $$ long result = buf.getLong()[ CD ]
Line_6 $$ long result = buf.getLong()-->Line_6 $$ buf.getLong()[ CD ]
Line_3 $$ ByteBuffer buf = ByteBuffer.allocate(AllocatedHeapMemory.LONG_SIZE)-->Line_6 $$ buf.getLong()[ FD ]
