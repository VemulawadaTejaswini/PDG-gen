Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testRandomAccessRead() [ CD ]
Line_2 $$ public void testRandomAccessRead() -->Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(bytes.length)[ CD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(bytes.length)-->Line_3 $$ ByteBuffer.allocate(bytes.length)[ CD ]
Line_2 $$ public void testRandomAccessRead() -->Line_4 $$ int count = fileChannel.read(buffer)[ CD ]
Line_4 $$ int count = fileChannel.read(buffer)-->Line_4 $$ fileChannel.read(buffer)[ CD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(bytes.length)-->Line_4 $$ fileChannel.read(buffer)[ FD ]
Line_2 $$ public void testRandomAccessRead() -->Line_5 $$ assertEquals("Incorrect number of bytes read", bytes.length, count)[ CD ]
Line_4 $$ int count = fileChannel.read(buffer)-->Line_5 $$ assertEquals("Incorrect number of bytes read", bytes.length, count)[ FD ]
Line_2 $$ public void testRandomAccessRead() -->Line_6 $$ buffer.rewind()[ CD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(bytes.length)-->Line_6 $$ buffer.rewind()[ FD ]
Line_2 $$ public void testRandomAccessRead() -->Line_7 $$ buffer.get(bytes)[ CD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(bytes.length)-->Line_7 $$ buffer.get(bytes)[ FD ]
Line_2 $$ public void testRandomAccessRead() -->Line_8 $$ String checkContent = new String(bytes)[ CD ]
Line_2 $$ public void testRandomAccessRead() -->Line_9 $$ assertEquals("Content read failure", content, checkContent)[ CD ]
Line_8 $$ String checkContent = new String(bytes)-->Line_9 $$ assertEquals("Content read failure", content, checkContent)[ FD ]
