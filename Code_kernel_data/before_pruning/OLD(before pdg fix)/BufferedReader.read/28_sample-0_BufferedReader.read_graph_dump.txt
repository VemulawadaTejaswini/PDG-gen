Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void findApplets(URL u) [ CD ]
Line_2 $$ public void findApplets(URL u) -->Line_4 $$ while ((i = inrdr.read()) != -1) [ CD ]
Line_2 $$ public void findApplets(URL u) -->Line_2 $$ public void findApplets(URL u) [ CD ]
Line_4 $$ while ((i = inrdr.read()) != -1) -->Line_6 $$ if (thisChar == '<') [ CD ]
Line_6 $$ if (thisChar == '<') -->Line_7 $$ String tag = readTag(inrdr)[ CD ]
Line_7 $$ String tag = readTag(inrdr)-->Line_7 $$ readTag(inrdr)[ CD ]
Line_6 $$ if (thisChar == '<') -->Line_8 $$ if (tag.toUpperCase().startsWith("<APPLET"))[ CD ]
Line_8 $$ if (tag.toUpperCase().startsWith("<APPLET"))-->Line_8 $$ tag.toUpperCase().startsWith("<APPLET")[ CD ]
Line_7 $$ String tag = readTag(inrdr)-->Line_8 $$ tag.toUpperCase()[ FD ]
Line_8 $$ if (tag.toUpperCase().startsWith("<APPLET"))-->Line_9 $$ list.add(tag)[ CD ]
Line_7 $$ String tag = readTag(inrdr)-->Line_9 $$ list.add(tag)[ FD ]
Line_2 $$ public void findApplets(URL u) -->Line_12 $$ inrdr.close()[ CD ]
Line_7 $$ String tag = readTag(inrdr)-->Line_8 $$ tag.toUpperCase()[ FD ]
Line_7 $$ String tag = readTag(inrdr)-->Line_9 $$ list.add(tag)[ FD ]
