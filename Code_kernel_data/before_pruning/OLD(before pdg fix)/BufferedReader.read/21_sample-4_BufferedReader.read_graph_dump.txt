Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void generateGraph(String dotFile) [ CD ]
Line_2 $$ public void generateGraph(String dotFile) -->Line_3 $$ while ((c = br.read()) != -1) [ CD ]
Line_2 $$ public void generateGraph(String dotFile) -->Line_2 $$ public void generateGraph(String dotFile) [ CD ]
Line_3 $$ while ((c = br.read()) != -1) -->Line_4 $$ if (c == '\n') [ CD ]
Line_4 $$ if (c == '\n') -->Line_5 $$ if (pc == '\\') [ CD ]
Line_5 $$ if (pc == '\\') -->Line_6 $$ line.deleteCharAt(line.length() - 1)[ CD ]
Line_5 $$ if (pc == '\\') -->Line_8 $$ GElement element = parseLine(line.toString())[ CD ]
Line_8 $$ GElement element = parseLine(line.toString())-->Line_8 $$ parseLine(line.toString())[ CD ]
Line_5 $$ if (pc == '\\') -->Line_9 $$ if (element != null) [ CD ]
Line_8 $$ GElement element = parseLine(line.toString())-->Line_9 $$ if (element != null) [ FD ]
Line_9 $$ if (element != null) -->Line_10 $$ if (graph == null)[ CD ]
Line_10 $$ if (graph == null)-->Line_13 $$ graph.addElement(element)[ CD ]
Line_8 $$ GElement element = parseLine(line.toString())-->Line_13 $$ graph.addElement(element)[ FD ]
Line_5 $$ if (pc == '\\') -->Line_15 $$ line.delete(0, line.length())[ CD ]
Line_4 $$ if (c == '\n') -->Line_17 $$ if (c != '\r') [ CD ]
Line_17 $$ if (c != '\r') -->Line_18 $$ line.append((char) c)[ CD ]
Line_17 $$ if (c != '\r') -->Line_19 $$ if (c == '\r') [ CD ]
Line_2 $$ public void generateGraph(String dotFile) -->Line_24 $$ br.close()[ CD ]
Line_8 $$ GElement element = parseLine(line.toString())-->Line_9 $$ if (element != null) [ FD ]
Line_8 $$ GElement element = parseLine(line.toString())-->Line_13 $$ graph.addElement(element)[ FD ]
