Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void reserveSlotsInBulkUsingBindsAndAssertValue(int expectedValue, long numSlotToAllocate) [ CD ]
Line_2 $$ public void reserveSlotsInBulkUsingBindsAndAssertValue(int expectedValue, long numSlotToAllocate) -->Line_3 $$ PreparedStatement ps = conn.prepareStatement("SELECT NEXT ? VALUES FOR bulkalloc.alpha FROM SYSTEM.\"SEQUENCE\"")[ CD ]
Line_3 $$ PreparedStatement ps = conn.prepareStatement("SELECT NEXT ? VALUES FOR bulkalloc.alpha FROM SYSTEM.\"SEQUENCE\"")-->Line_3 $$ conn.prepareStatement("SELECT NEXT ? VALUES FOR bulkalloc.alpha FROM SYSTEM.\"SEQUENCE\"")[ CD ]
Line_2 $$ public void reserveSlotsInBulkUsingBindsAndAssertValue(int expectedValue, long numSlotToAllocate) -->Line_4 $$ ps.setLong(1, numSlotToAllocate)[ CD ]
Line_3 $$ PreparedStatement ps = conn.prepareStatement("SELECT NEXT ? VALUES FOR bulkalloc.alpha FROM SYSTEM.\"SEQUENCE\"")-->Line_4 $$ ps.setLong(1, numSlotToAllocate)[ FD ]
Line_2 $$ public void reserveSlotsInBulkUsingBindsAndAssertValue(int expectedValue, long numSlotToAllocate) -->Line_5 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_5 $$ ps.executeQuery()[ CD ]
Line_3 $$ PreparedStatement ps = conn.prepareStatement("SELECT NEXT ? VALUES FOR bulkalloc.alpha FROM SYSTEM.\"SEQUENCE\"")-->Line_5 $$ ps.executeQuery()[ FD ]
Line_2 $$ public void reserveSlotsInBulkUsingBindsAndAssertValue(int expectedValue, long numSlotToAllocate) -->Line_6 $$ assertTrue(rs.next())[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_6 $$ rs.next()[ FD ]
Line_2 $$ public void reserveSlotsInBulkUsingBindsAndAssertValue(int expectedValue, long numSlotToAllocate) -->Line_7 $$ int retValue = rs.getInt(1)[ CD ]
Line_7 $$ int retValue = rs.getInt(1)-->Line_7 $$ rs.getInt(1)[ CD ]
Line_5 $$ ResultSet rs = ps.executeQuery()-->Line_7 $$ rs.getInt(1)[ FD ]
Line_2 $$ public void reserveSlotsInBulkUsingBindsAndAssertValue(int expectedValue, long numSlotToAllocate) -->Line_8 $$ assertEquals(expectedValue, retValue)[ CD ]
Line_7 $$ int retValue = rs.getInt(1)-->Line_8 $$ assertEquals(expectedValue, retValue)[ FD ]
