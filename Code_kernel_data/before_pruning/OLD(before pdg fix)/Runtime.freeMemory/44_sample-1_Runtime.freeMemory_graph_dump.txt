Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void logMemory(Logger logger, String message) [ CD ]
Line_2 $$ public void logMemory(Logger logger, String message) -->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime.getRuntime()[ CD ]
Line_2 $$ public void logMemory(Logger logger, String message) -->Line_4 $$ long freeMem = runtime.freeMemory() / 1024 / 1024[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ runtime.freeMemory()[ FD ]
Line_2 $$ public void logMemory(Logger logger, String message) -->Line_5 $$ long maxMem = runtime.maxMemory() / 1024 / 1024[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.maxMemory()[ FD ]
Line_2 $$ public void logMemory(Logger logger, String message) -->Line_6 $$ long totalMem = runtime.totalMemory() / 1024 / 1024[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ runtime.totalMemory()[ FD ]
Line_2 $$ public void logMemory(Logger logger, String message) -->Line_7 $$ logger.info(message + " (mb), free: " + freeMem + ", total: " + totalMem + ", max: " + maxMem)[ CD ]
