Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getMemoryBar(int size, Runtime run) [ CD ]
Line_2 $$ public void getMemoryBar(int size, Runtime run) -->Line_3 $$ double percentUsed = (run.totalMemory() - run.freeMemory()) / run.maxMemory()[ CD ]
Line_2 $$ public void getMemoryBar(int size, Runtime run) -->Line_5 $$ int pivot = (int) Math.floor(size * percentUsed)[ CD ]
Line_2 $$ public void getMemoryBar(int size, Runtime run) -->Line_6 $$ for (int i = 0; i < pivot - 1; i++) line += "=";[ CD ]
Line_2 $$ public void getMemoryBar(int size, Runtime run) -->Line_2 $$ public void getMemoryBar(int size, Runtime run) [ CD ]
Line_6 $$ for (int i = 0; i < pivot - 1; i++) line += "=";-->Line_6 $$ int i = 0[ CD ]
Line_6 $$ for (int i = 0; i < pivot - 1; i++) line += "=";-->Line_6 $$ i++[ CD ]
Line_6 $$ int i = 0-->Line_6 $$ i++[ FD ]
Line_2 $$ public void getMemoryBar(int size, Runtime run) -->Line_8 $$ if (pivot < size - 1)[ CD ]
Line_5 $$ int pivot = (int) Math.floor(size * percentUsed)-->Line_8 $$ if (pivot < size - 1)[ FD ]
Line_2 $$ public void getMemoryBar(int size, Runtime run) -->Line_10 $$ for (int i = pivot + 1; i < size; i++) line += "-";[ CD ]
Line_2 $$ public void getMemoryBar(int size, Runtime run) -->Line_2 $$ public void getMemoryBar(int size, Runtime run) [ CD ]
Line_6 $$ int i = 0-->Line_10 $$ for (int i = pivot + 1; i < size; i++) line += "-";[ FD ]
Line_10 $$ for (int i = pivot + 1; i < size; i++) line += "-";-->Line_10 $$ int i = pivot + 1[ CD ]
Line_10 $$ for (int i = pivot + 1; i < size; i++) line += "-";-->Line_10 $$ i++[ CD ]
Line_10 $$ int i = pivot + 1-->Line_10 $$ i++[ FD ]
Line_6 $$ int i = 0-->Line_10 $$ i++[ FD ]
Line_6 $$ int i = 0-->Line_6 $$ for (int i = 0; i < pivot - 1; i++) line += "=";[ FD ]
Line_6 $$ int i = 0-->Line_6 $$ for (int i = 0; i < pivot - 1; i++) line += "=";[ FD ]
Line_6 $$ int i = 0-->Line_6 $$ i++[ FD ]
Line_10 $$ int i = pivot + 1-->Line_10 $$ for (int i = pivot + 1; i < size; i++) line += "-";[ FD ]
Line_10 $$ int i = pivot + 1-->Line_10 $$ for (int i = pivot + 1; i < size; i++) line += "-";[ FD ]
Line_10 $$ int i = pivot + 1-->Line_10 $$ i++[ FD ]
