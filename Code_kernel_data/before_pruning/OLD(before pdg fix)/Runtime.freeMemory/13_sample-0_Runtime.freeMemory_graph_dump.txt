Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void printMemoryUsage() [ CD ]
Line_2 $$ public void printMemoryUsage() -->Line_3 $$ final Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime.getRuntime()[ CD ]
Line_2 $$ public void printMemoryUsage() -->Line_4 $$ final long usedMemory = (runtime.totalMemory() - runtime.freeMemory()) / megaUnit[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_4 $$ runtime.totalMemory()[ FD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_4 $$ runtime.freeMemory()[ FD ]
Line_2 $$ public void printMemoryUsage() -->Line_5 $$ final long totalMemory = runtime.totalMemory() / megaUnit[ CD ]
Line_5 $$ final long totalMemory = runtime.totalMemory() / megaUnit-->Line_5 $$ runtime.totalMemory()[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_5 $$ runtime.totalMemory()[ FD ]
Line_2 $$ public void printMemoryUsage() -->Line_6 $$ console.printf("-- Final Memory: %sM/%sM%n", usedMemory, totalMemory)[ CD ]
Line_4 $$ final long usedMemory = (runtime.totalMemory() - runtime.freeMemory()) / megaUnit-->Line_6 $$ console.printf("-- Final Memory: %sM/%sM%n", usedMemory, totalMemory)[ FD ]
Line_5 $$ final long totalMemory = runtime.totalMemory() / megaUnit-->Line_6 $$ console.printf("-- Final Memory: %sM/%sM%n", usedMemory, totalMemory)[ FD ]
