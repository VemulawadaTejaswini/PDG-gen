Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void unlockInNewThread(final LockHandle handle, final AtomicBoolean wasUnlockedFirst) [ CD ]
Line_2 $$ public void unlockInNewThread(final LockHandle handle, final AtomicBoolean wasUnlockedFirst) -->Line_3 $$ Thread t = new Thread(new Runnable() [ CD ]
Line_4 $$ public void run() -->Line_5 $$ wasUnlockedFirst.set(true)[ CD ]
Line_4 $$ public void run() -->Line_6 $$ handle.unlock()[ CD ]
Line_2 $$ public void unlockInNewThread(final LockHandle handle, final AtomicBoolean wasUnlockedFirst) -->Line_9 $$ t.setPriority(Thread.MIN_PRIORITY)[ CD ]
Line_3 $$ Thread t = new Thread(new Runnable() -->Line_9 $$ t.setPriority(Thread.MIN_PRIORITY)[ FD ]
Line_2 $$ public void unlockInNewThread(final LockHandle handle, final AtomicBoolean wasUnlockedFirst) -->Line_10 $$ t.start()[ CD ]
Line_3 $$ Thread t = new Thread(new Runnable() -->Line_10 $$ t.start()[ FD ]
