Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void issueRequest(String targetHost, int targetPort, String forPlayerName, String requestContent, int timeoutClock, Map<String, String> extraHeaders) [ CD ]
Line_2 $$ public void issueRequest(String targetHost, int targetPort, String forPlayerName, String requestContent, int timeoutClock, Map<String, String> extraHeaders) -->Line_3 $$ InetAddress theHost = InetAddress.getByName(targetHost)[ CD ]
Line_3 $$ InetAddress theHost = InetAddress.getByName(targetHost)-->Line_3 $$ InetAddress.getByName(targetHost)[ CD ]
Line_2 $$ public void issueRequest(String targetHost, int targetPort, String forPlayerName, String requestContent, int timeoutClock, Map<String, String> extraHeaders) -->Line_4 $$ socket.connect(new InetSocketAddress(theHost.getHostAddress(), targetPort), 5000)[ CD ]
Line_3 $$ InetAddress theHost = InetAddress.getByName(targetHost)-->Line_4 $$ theHost.getHostAddress()[ FD ]
Line_2 $$ public void issueRequest(String targetHost, int targetPort, String forPlayerName, String requestContent, int timeoutClock, Map<String, String> extraHeaders) -->Line_5 $$ HttpWriter.writeAsClient(socket, theHost.getHostName(), requestContent, forPlayerName, extraHeaders)[ CD ]
Line_3 $$ InetAddress theHost = InetAddress.getByName(targetHost)-->Line_5 $$ theHost.getHostName()[ FD ]
