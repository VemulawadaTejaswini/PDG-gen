Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void paintObject(Graphics2D g2, State s, ObjectInstance ob, float cWidth, float cHeight) [ CD ]
Line_2 $$ public void paintObject(Graphics2D g2, State s, ObjectInstance ob, float cWidth, float cHeight) -->Line_3 $$ g2.fill(new Rectangle2D.Double(x, y, size, size))[ CD ]
Line_2 $$ public void paintObject(Graphics2D g2, State s, ObjectInstance ob, float cWidth, float cHeight) -->Line_3 $$ g2.fill(new Rectangle2D.Double(x, y, size, size))[ FD ]
Line_2 $$ public void paintObject(Graphics2D g2, State s, ObjectInstance ob, float cWidth, float cHeight) -->Line_4 $$ if (x + size > FrostbiteDomain.gameWidth)[ CD ]
Line_4 $$ if (x + size > FrostbiteDomain.gameWidth)-->Line_5 $$ g2.fill(new Rectangle2D.Double(x - FrostbiteDomain.gameWidth, y, size, size))[ CD ]
Line_2 $$ public void paintObject(Graphics2D g2, State s, ObjectInstance ob, float cWidth, float cHeight) -->Line_5 $$ g2.fill(new Rectangle2D.Double(x - FrostbiteDomain.gameWidth, y, size, size))[ FD ]
Line_4 $$ if (x + size > FrostbiteDomain.gameWidth)-->Line_6 $$ if (x < 0)[ CD ]
Line_6 $$ if (x < 0)-->Line_7 $$ g2.fill(new Rectangle2D.Double(x + FrostbiteDomain.gameWidth, y, size, size))[ CD ]
Line_2 $$ public void paintObject(Graphics2D g2, State s, ObjectInstance ob, float cWidth, float cHeight) -->Line_7 $$ g2.fill(new Rectangle2D.Double(x + FrostbiteDomain.gameWidth, y, size, size))[ FD ]
