Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) [ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_3 $$ g2.setPaint(Color.BLACK)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_3 $$ g2.setPaint(Color.BLACK)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) [ CD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) [ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) [ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_5 $$ TextLayout layout = new TextLayout(str, g2.getFont(), g2.getFontRenderContext())[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_5 $$ TextLayout layout = new TextLayout(str, g2.getFont(), g2.getFontRenderContext())[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_5 $$ TextLayout layout = new TextLayout(str, g2.getFont(), g2.getFontRenderContext())[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_6 $$ Rectangle2D b = layout.getBounds()[ CD ]
Line_6 $$ Rectangle2D b = layout.getBounds()-->Line_6 $$ Rectangle2D b = layout.getBounds()[ CD ]
Line_5 $$ TextLayout layout = new TextLayout(str, g2.getFont(), g2.getFontRenderContext())-->Line_6 $$ Rectangle2D b = layout.getBounds()[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_7 $$ b.setRect(x + b.getX() - 0.75, y + b.getY() - 0.75, b.getWidth() + 1.5, b.getHeight() + 1.5)[ CD ]
Line_6 $$ Rectangle2D b = layout.getBounds()-->Line_7 $$ b.setRect(x + b.getX() - 0.75, y + b.getY() - 0.75, b.getWidth() + 1.5, b.getHeight() + 1.5)[ FD ]
Line_6 $$ Rectangle2D b = layout.getBounds()-->Line_7 $$ b.setRect(x + b.getX() - 0.75, y + b.getY() - 0.75, b.getWidth() + 1.5, b.getHeight() + 1.5)[ FD ]
Line_6 $$ Rectangle2D b = layout.getBounds()-->Line_7 $$ b.setRect(x + b.getX() - 0.75, y + b.getY() - 0.75, b.getWidth() + 1.5, b.getHeight() + 1.5)[ FD ]
Line_6 $$ Rectangle2D b = layout.getBounds()-->Line_7 $$ b.setRect(x + b.getX() - 0.75, y + b.getY() - 0.75, b.getWidth() + 1.5, b.getHeight() + 1.5)[ FD ]
Line_6 $$ Rectangle2D b = layout.getBounds()-->Line_7 $$ b.setRect(x + b.getX() - 0.75, y + b.getY() - 0.75, b.getWidth() + 1.5, b.getHeight() + 1.5)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_8 $$ g2.fill(b)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_8 $$ g2.fill(b)[ FD ]
Line_6 $$ Rectangle2D b = layout.getBounds()-->Line_8 $$ g2.fill(b)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_10 $$ g2.drawString(str, x - 1f, y - 1f)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_10 $$ g2.drawString(str, x - 1f, y - 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_10 $$ g2.drawString(str, x - 1f, y - 1f)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_11 $$ g2.drawString(str, x - 1f, y)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_11 $$ g2.drawString(str, x - 1f, y)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_11 $$ g2.drawString(str, x - 1f, y)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_11 $$ g2.drawString(str, x - 1f, y)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_12 $$ g2.drawString(str, x - 1f, y + 1f)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_12 $$ g2.drawString(str, x - 1f, y + 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_12 $$ g2.drawString(str, x - 1f, y + 1f)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_13 $$ g2.drawString(str, x, y - 1f)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_13 $$ g2.drawString(str, x, y - 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_13 $$ g2.drawString(str, x, y - 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_13 $$ g2.drawString(str, x, y - 1f)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_14 $$ g2.drawString(str, x, y + 1f)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_14 $$ g2.drawString(str, x, y + 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_14 $$ g2.drawString(str, x, y + 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_14 $$ g2.drawString(str, x, y + 1f)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_15 $$ g2.drawString(str, x + 1f, y - 1f)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_15 $$ g2.drawString(str, x + 1f, y - 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_15 $$ g2.drawString(str, x + 1f, y - 1f)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_16 $$ g2.drawString(str, x + 1f, y)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_16 $$ g2.drawString(str, x + 1f, y)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_16 $$ g2.drawString(str, x + 1f, y)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_16 $$ g2.drawString(str, x + 1f, y)[ FD ]
Line_4 $$ if (RenderingHints.VALUE_TEXT_ANTIALIAS_ON.equals(g2.getRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING))) -->Line_17 $$ g2.drawString(str, x + 1f, y + 1f)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_17 $$ g2.drawString(str, x + 1f, y + 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_17 $$ g2.drawString(str, x + 1f, y + 1f)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_19 $$ g2.setPaint(color)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_19 $$ g2.setPaint(color)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_19 $$ g2.setPaint(color)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_20 $$ g2.drawString(str, x, y)[ CD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_20 $$ g2.drawString(str, x, y)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_20 $$ g2.drawString(str, x, y)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_20 $$ g2.drawString(str, x, y)[ FD ]
Line_2 $$ public void paintColorFontOutline(Graphics2D g2, String str, float x, float y, Color color) -->Line_20 $$ g2.drawString(str, x, y)[ FD ]
