Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) [ CD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_3 $$ if (this.backgroundPaint != null) [ CD ]
Line_3 $$ if (this.backgroundPaint != null) -->Line_4 $$ g2.setPaint(this.backgroundPaint)[ CD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_4 $$ g2.setPaint(this.backgroundPaint)[ FD ]
Line_3 $$ if (this.backgroundPaint != null) -->Line_5 $$ g2.fill(area)[ CD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_5 $$ g2.fill(area)[ FD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_5 $$ g2.fill(area)[ FD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_7 $$ area = trimPadding(area)[ CD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_7 $$ area = trimPadding(area)[ FD ]
Line_7 $$ area = trimPadding(area)-->Line_7 $$ area = trimPadding(area)[ FD ]
Line_7 $$ area = trimPadding(area)-->Line_7 $$ area = trimPadding(area)[ CD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_7 $$ area = trimPadding(area)[ FD ]
Line_7 $$ area = trimPadding(area)-->Line_7 $$ area = trimPadding(area)[ FD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_8 $$ return this.container.draw(g2, area, params)[ CD ]
Line_8 $$ return this.container.draw(g2, area, params)-->Line_8 $$ return this.container.draw(g2, area, params)[ CD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_8 $$ return this.container.draw(g2, area, params)[ FD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_8 $$ return this.container.draw(g2, area, params)[ FD ]
Line_7 $$ area = trimPadding(area)-->Line_8 $$ return this.container.draw(g2, area, params)[ FD ]
Line_2 $$ public void draw(Graphics2D g2, Rectangle2D area, Object params) -->Line_8 $$ return this.container.draw(g2, area, params)[ FD ]
