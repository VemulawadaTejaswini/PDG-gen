Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testSimpleArgumentSelect() [ CD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_3 $$ PGobject pgo = new PGobject()[ CD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_4 $$ pgo.setType("simplecompositetest")[ CD ]
Line_3 $$ PGobject pgo = new PGobject()-->Line_4 $$ pgo.setType("simplecompositetest")[ FD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_5 $$ pgo.setValue("(1,2.2,)")[ CD ]
Line_3 $$ PGobject pgo = new PGobject()-->Line_5 $$ pgo.setValue("(1,2.2,)")[ FD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_6 $$ pstmt.setObject(1, pgo)[ CD ]
Line_3 $$ PGobject pgo = new PGobject()-->Line_6 $$ pstmt.setObject(1, pgo)[ FD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_7 $$ ResultSet rs = pstmt.executeQuery()[ CD ]
Line_7 $$ ResultSet rs = pstmt.executeQuery()-->Line_7 $$ ResultSet rs = pstmt.executeQuery()[ CD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_8 $$ assertTrue(rs.next())[ CD ]
Line_7 $$ ResultSet rs = pstmt.executeQuery()-->Line_8 $$ assertTrue(rs.next())[ FD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_9 $$ PGobject pgo2 = (PGobject) rs.getObject(1)[ CD ]
Line_7 $$ ResultSet rs = pstmt.executeQuery()-->Line_9 $$ PGobject pgo2 = (PGobject) rs.getObject(1)[ FD ]
Line_2 $$ public void testSimpleArgumentSelect() -->Line_10 $$ assertEquals(pgo, pgo2)[ CD ]
Line_3 $$ PGobject pgo = new PGobject()-->Line_10 $$ assertEquals(pgo, pgo2)[ FD ]
Line_9 $$ PGobject pgo2 = (PGobject) rs.getObject(1)-->Line_10 $$ assertEquals(pgo, pgo2)[ FD ]
