Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void doRun(Connection cx) [ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_3 $$ String sql = format("SELECT object FROM %s WHERE id = ?", OBJECTS)[ CD ]
Line_3 $$ String sql = format("SELECT object FROM %s WHERE id = ?", OBJECTS)-->Line_3 $$ String sql = format("SELECT object FROM %s WHERE id = ?", OBJECTS)[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, id)))[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, id)))-->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, id)))[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, id)))[ FD ]
Line_3 $$ String sql = format("SELECT object FROM %s WHERE id = ?", OBJECTS)-->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, id)))[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_5 $$ ps.setString(1, id)[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, id)))-->Line_5 $$ ps.setString(1, id)[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_6 $$ ResultSet rs = open(ps.executeQuery())[ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_6 $$ ResultSet rs = open(ps.executeQuery())[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, id)))-->Line_6 $$ ResultSet rs = open(ps.executeQuery())[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_7 $$ if (!rs.next()) [ CD ]
Line_7 $$ if (!rs.next()) -->Line_7 $$ if (!rs.next()) [ CD ]
Line_7 $$ if (!rs.next()) -->Line_7 $$ if (!rs.next()) [ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_7 $$ if (!rs.next()) [ FD ]
Line_7 $$ if (!rs.next()) -->Line_8 $$ return null[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_10 $$ byte[] bytes = rs.getBytes(1)[ CD ]
Line_10 $$ byte[] bytes = rs.getBytes(1)-->Line_10 $$ byte[] bytes = rs.getBytes(1)[ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_10 $$ byte[] bytes = rs.getBytes(1)[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_11 $$ return new ByteArrayInputStream(bytes)[ CD ]
