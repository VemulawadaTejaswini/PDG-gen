Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void doRun(Connection cx) [ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_3 $$ String sql = format("SELECT val FROM %s WHERE nid = ? AND key = ?", PROPS)[ CD ]
Line_3 $$ String sql = format("SELECT val FROM %s WHERE nid = ? AND key = ?", PROPS)-->Line_3 $$ String sql = format("SELECT val FROM %s WHERE nid = ? AND key = ?", PROPS)[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, node, key)))[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, node, key)))-->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, node, key)))[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, node, key)))[ FD ]
Line_3 $$ String sql = format("SELECT val FROM %s WHERE nid = ? AND key = ?", PROPS)-->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, node, key)))[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_5 $$ ps.setString(2, key)[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, node, key)))-->Line_5 $$ ps.setString(2, key)[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_6 $$ ResultSet rs = open(ps.executeQuery())[ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_6 $$ ResultSet rs = open(ps.executeQuery())[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, node, key)))-->Line_6 $$ ResultSet rs = open(ps.executeQuery())[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_7 $$ if (rs.next()) [ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_7 $$ if (rs.next()) [ FD ]
Line_7 $$ if (rs.next()) -->Line_7 $$ if (rs.next()) [ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_7 $$ if (rs.next()) [ FD ]
Line_7 $$ if (rs.next()) -->Line_8 $$ return rs.getString(1)[ CD ]
Line_8 $$ return rs.getString(1)-->Line_8 $$ return rs.getString(1)[ CD ]
Line_6 $$ ResultSet rs = open(ps.executeQuery())-->Line_8 $$ return rs.getString(1)[ FD ]
Line_7 $$ if (rs.next()) -->Line_10 $$ return null[ CD ]
