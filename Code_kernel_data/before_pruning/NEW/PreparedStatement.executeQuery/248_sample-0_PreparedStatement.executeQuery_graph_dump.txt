Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testIsClosed() [ CD ]
Line_2 $$ public void testIsClosed() -->Line_3 $$ Connection conn = newConnection()[ CD ]
Line_3 $$ Connection conn = newConnection()-->Line_3 $$ Connection conn = newConnection()[ CD ]
Line_2 $$ public void testIsClosed() -->Line_4 $$ assertNotNull(conn)[ CD ]
Line_3 $$ Connection conn = newConnection()-->Line_4 $$ assertNotNull(conn)[ FD ]
Line_2 $$ public void testIsClosed() -->Line_5 $$ assertTrue(!conn.isClosed())[ CD ]
Line_5 $$ assertTrue(!conn.isClosed())-->Line_5 $$ assertTrue(!conn.isClosed())[ CD ]
Line_3 $$ Connection conn = newConnection()-->Line_5 $$ assertTrue(!conn.isClosed())[ FD ]
Line_2 $$ public void testIsClosed() -->Line_6 $$ PreparedStatement stmt = conn.prepareStatement("select * from dual")[ CD ]
Line_6 $$ PreparedStatement stmt = conn.prepareStatement("select * from dual")-->Line_6 $$ PreparedStatement stmt = conn.prepareStatement("select * from dual")[ CD ]
Line_3 $$ Connection conn = newConnection()-->Line_6 $$ PreparedStatement stmt = conn.prepareStatement("select * from dual")[ FD ]
Line_2 $$ public void testIsClosed() -->Line_7 $$ assertNotNull(stmt)[ CD ]
Line_6 $$ PreparedStatement stmt = conn.prepareStatement("select * from dual")-->Line_7 $$ assertNotNull(stmt)[ FD ]
Line_2 $$ public void testIsClosed() -->Line_8 $$ ResultSet rset = stmt.executeQuery()[ CD ]
Line_8 $$ ResultSet rset = stmt.executeQuery()-->Line_8 $$ ResultSet rset = stmt.executeQuery()[ CD ]
Line_6 $$ PreparedStatement stmt = conn.prepareStatement("select * from dual")-->Line_8 $$ ResultSet rset = stmt.executeQuery()[ FD ]
Line_2 $$ public void testIsClosed() -->Line_9 $$ assertNotNull(rset)[ CD ]
Line_8 $$ ResultSet rset = stmt.executeQuery()-->Line_9 $$ assertNotNull(rset)[ FD ]
Line_2 $$ public void testIsClosed() -->Line_10 $$ assertTrue(rset.next())[ CD ]
Line_8 $$ ResultSet rset = stmt.executeQuery()-->Line_10 $$ assertTrue(rset.next())[ FD ]
Line_2 $$ public void testIsClosed() -->Line_11 $$ rset.close()[ CD ]
Line_8 $$ ResultSet rset = stmt.executeQuery()-->Line_11 $$ rset.close()[ FD ]
