Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void doRun(Connection cx) [ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_3 $$ String sql = format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)[ CD ]
Line_3 $$ String sql = format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)-->Line_3 $$ String sql = format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_6 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_6 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_6 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_6 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))[ FD ]
Line_3 $$ String sql = format("SELECT conflict FROM %s WHERE namespace = ? AND path LIKE '%%%s%%'", CONFLICTS, pathFilter)-->Line_6 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_7 $$ ps.setString(1, namespace)[ CD ]
Line_6 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_7 $$ ps.setString(1, namespace)[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_8 $$ return ps.executeQuery()[ CD ]
Line_8 $$ return ps.executeQuery()-->Line_8 $$ return ps.executeQuery()[ CD ]
Line_6 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_8 $$ return ps.executeQuery()[ FD ]
