Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void download(String urlAsString) [ CD ]
Line_2 $$ public void download(String urlAsString) -->Line_3 $$ URL url = new URL(urlAsString)[ CD ]
Line_2 $$ public void download(String urlAsString) -->Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)[ CD ]
Line_3 $$ URL url = new URL(urlAsString)-->Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)[ FD ]
Line_2 $$ public void download(String urlAsString) -->Line_5 $$ hConn.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1")[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)-->Line_5 $$ hConn.setRequestProperty("User-Agent", "Mozilla/5.0 (X11; Linux i686; rv:7.0.1) Gecko/20100101 Firefox/7.0.1")[ FD ]
Line_2 $$ public void download(String urlAsString) -->Line_6 $$ hConn.addRequestProperty("Referer", "http://jetsli.de/crawler")[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)-->Line_6 $$ hConn.addRequestProperty("Referer", "http://jetsli.de/crawler")[ FD ]
Line_2 $$ public void download(String urlAsString) -->Line_7 $$ hConn.setConnectTimeout(2000)[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)-->Line_7 $$ hConn.setConnectTimeout(2000)[ FD ]
Line_2 $$ public void download(String urlAsString) -->Line_8 $$ hConn.setReadTimeout(2000)[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)-->Line_8 $$ hConn.setReadTimeout(2000)[ FD ]
Line_2 $$ public void download(String urlAsString) -->Line_9 $$ InputStream is = hConn.getInputStream()[ CD ]
Line_9 $$ InputStream is = hConn.getInputStream()-->Line_9 $$ InputStream is = hConn.getInputStream()[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)-->Line_9 $$ InputStream is = hConn.getInputStream()[ FD ]
Line_2 $$ public void download(String urlAsString) -->Line_10 $$ if ("gzip".equals(hConn.getContentEncoding()))[ CD ]
Line_10 $$ if ("gzip".equals(hConn.getContentEncoding()))-->Line_10 $$ if ("gzip".equals(hConn.getContentEncoding()))[ CD ]
Line_4 $$ HttpURLConnection hConn = (HttpURLConnection) url.openConnection(Proxy.NO_PROXY)-->Line_10 $$ if ("gzip".equals(hConn.getContentEncoding()))[ FD ]
Line_10 $$ if ("gzip".equals(hConn.getContentEncoding()))-->Line_11 $$ is = new GZIPInputStream(is)[ CD ]
Line_9 $$ InputStream is = hConn.getInputStream()-->Line_11 $$ is = new GZIPInputStream(is)[ FD ]
Line_11 $$ is = new GZIPInputStream(is)-->Line_11 $$ is = new GZIPInputStream(is)[ FD ]
Line_2 $$ public void download(String urlAsString) -->Line_12 $$ return getInputStream(is)[ CD ]
Line_12 $$ return getInputStream(is)-->Line_12 $$ return getInputStream(is)[ CD ]
Line_9 $$ InputStream is = hConn.getInputStream()-->Line_12 $$ return getInputStream(is)[ FD ]
Line_11 $$ is = new GZIPInputStream(is)-->Line_12 $$ return getInputStream(is)[ FD ]
