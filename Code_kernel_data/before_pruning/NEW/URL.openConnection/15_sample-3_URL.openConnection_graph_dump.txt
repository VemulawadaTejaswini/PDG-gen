Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getResource(String filename) [ CD ]
Line_2 $$ public void getResource(String filename) -->Line_3 $$ URL url = getClassLoader().getResource(filename)[ CD ]
Line_3 $$ URL url = getClassLoader().getResource(filename)-->Line_3 $$ URL url = getClassLoader().getResource(filename)[ CD ]
Line_2 $$ public void getResource(String filename) -->Line_3 $$ URL url = getClassLoader().getResource(filename)[ FD ]
Line_2 $$ public void getResource(String filename) -->Line_4 $$ if (url == null) [ CD ]
Line_3 $$ URL url = getClassLoader().getResource(filename)-->Line_4 $$ if (url == null) [ FD ]
Line_4 $$ if (url == null) -->Line_5 $$ return null[ CD ]
Line_2 $$ public void getResource(String filename) -->Line_7 $$ URLConnection connection = url.openConnection()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_7 $$ URLConnection connection = url.openConnection()[ CD ]
Line_3 $$ URL url = getClassLoader().getResource(filename)-->Line_7 $$ URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ public void getResource(String filename) -->Line_8 $$ connection.setUseCaches(false)[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_8 $$ connection.setUseCaches(false)[ FD ]
Line_2 $$ public void getResource(String filename) -->Line_9 $$ return connection.getInputStream()[ CD ]
Line_9 $$ return connection.getInputStream()-->Line_9 $$ return connection.getInputStream()[ CD ]
Line_7 $$ URLConnection connection = url.openConnection()-->Line_9 $$ return connection.getInputStream()[ FD ]
