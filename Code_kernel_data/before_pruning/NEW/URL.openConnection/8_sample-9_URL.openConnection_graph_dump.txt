Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void eachLine(URL url, int firstLine, @ClosureParams(value = FromString.class, options = [ CD ]
Line_2 $$ public void eachLine(URL url, int firstLine, @ClosureParams(value = FromString.class, options = -->Line_3 $$ return IOGroovyMethods.eachLine(url.openConnection().getInputStream(), firstLine, closure)[ CD ]
Line_3 $$ return IOGroovyMethods.eachLine(url.openConnection().getInputStream(), firstLine, closure)-->Line_3 $$ return IOGroovyMethods.eachLine(url.openConnection().getInputStream(), firstLine, closure)[ CD ]
Line_2 $$ public void eachLine(URL url, int firstLine, @ClosureParams(value = FromString.class, options = -->Line_3 $$ return IOGroovyMethods.eachLine(url.openConnection().getInputStream(), firstLine, closure)[ FD ]
Line_2 $$ public void eachLine(URL url, int firstLine, @ClosureParams(value = FromString.class, options = -->Line_3 $$ return IOGroovyMethods.eachLine(url.openConnection().getInputStream(), firstLine, closure)[ FD ]
Line_2 $$ public void eachLine(URL url, int firstLine, @ClosureParams(value = FromString.class, options = -->Line_3 $$ return IOGroovyMethods.eachLine(url.openConnection().getInputStream(), firstLine, closure)[ FD ]
