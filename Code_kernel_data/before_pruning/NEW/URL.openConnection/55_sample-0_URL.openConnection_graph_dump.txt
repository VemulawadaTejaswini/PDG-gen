Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testServletTestCase() [ CD ]
Line_2 $$ public void testServletTestCase() -->Line_3 $$ URL url = new URL(getServletURL() + "bla")[ CD ]
Line_2 $$ public void testServletTestCase() -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(getServletURL() + "bla")-->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void testServletTestCase() -->Line_5 $$ conn.connect()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ conn.connect()[ FD ]
Line_2 $$ public void testServletTestCase() -->Line_6 $$ assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ assertEquals(HttpURLConnection.HTTP_OK, conn.getResponseCode())[ FD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ new BufferedReader(new InputStreamReader(conn.getInputStream()))[ FD ]
Line_2 $$ public void testServletTestCase() -->Line_8 $$ assertEquals("ping", reader.readLine())[ CD ]
Line_2 $$ public void testServletTestCase() -->Line_9 $$ assertEquals(null, reader.readLine())[ CD ]
