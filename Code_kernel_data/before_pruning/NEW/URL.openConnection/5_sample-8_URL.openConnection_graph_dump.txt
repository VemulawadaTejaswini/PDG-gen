Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void createHttpReader(@NotNull URL url) [ CD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_3 $$ httpConfigurable.prepareURL(url.toString())[ CD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_3 $$ httpConfigurable.prepareURL(url.toString())[ FD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_4 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_4 $$ URLConnection urlConnection = url.openConnection()-->Line_4 $$ URLConnection urlConnection = url.openConnection()[ CD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_4 $$ URLConnection urlConnection = url.openConnection()[ FD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_5 $$ String contentEncoding = urlConnection.getContentEncoding()[ CD ]
Line_5 $$ String contentEncoding = urlConnection.getContentEncoding()-->Line_5 $$ String contentEncoding = urlConnection.getContentEncoding()[ CD ]
Line_4 $$ URLConnection urlConnection = url.openConnection()-->Line_5 $$ String contentEncoding = urlConnection.getContentEncoding()[ FD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_6 $$ InputStream inputStream = urlConnection.getInputStream()[ CD ]
Line_6 $$ InputStream inputStream = urlConnection.getInputStream()-->Line_6 $$ InputStream inputStream = urlConnection.getInputStream()[ CD ]
Line_4 $$ URLConnection urlConnection = url.openConnection()-->Line_6 $$ InputStream inputStream = urlConnection.getInputStream()[ FD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_7 $$ InputStreamReader inputStreamReader = contentEncoding != null ? new InputStreamReader(inputStream, contentEncoding) : new InputStreamReader(inputStream)[ CD ]
Line_2 $$ public void createHttpReader(@NotNull URL url) -->Line_10 $$ return new BufferedReader(inputStreamReader)[ CD ]
