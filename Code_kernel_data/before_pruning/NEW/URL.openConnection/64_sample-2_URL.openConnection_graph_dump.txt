Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void test503() [ CD ]
Line_2 $$ public void test503() -->Line_3 $$ HttpURLConnection httpURLConnection = EasyMock.createMock(HttpURLConnection.class)[ CD ]
Line_3 $$ HttpURLConnection httpURLConnection = EasyMock.createMock(HttpURLConnection.class)-->Line_3 $$ HttpURLConnection httpURLConnection = EasyMock.createMock(HttpURLConnection.class)[ CD ]
Line_2 $$ public void test503() -->Line_4 $$ EasyMock.expect(mock.openConnection()).andReturn(httpURLConnection)[ CD ]
Line_3 $$ HttpURLConnection httpURLConnection = EasyMock.createMock(HttpURLConnection.class)-->Line_4 $$ EasyMock.expect(mock.openConnection()).andReturn(httpURLConnection)[ FD ]
Line_2 $$ public void test503() -->Line_5 $$ httpURLConnection.connect()[ CD ]
Line_3 $$ HttpURLConnection httpURLConnection = EasyMock.createMock(HttpURLConnection.class)-->Line_5 $$ httpURLConnection.connect()[ FD ]
Line_2 $$ public void test503() -->Line_6 $$ EasyMock.expect(httpURLConnection.getContentEncoding()).andReturn("")[ CD ]
Line_3 $$ HttpURLConnection httpURLConnection = EasyMock.createMock(HttpURLConnection.class)-->Line_6 $$ EasyMock.expect(httpURLConnection.getContentEncoding()).andReturn("")[ FD ]
