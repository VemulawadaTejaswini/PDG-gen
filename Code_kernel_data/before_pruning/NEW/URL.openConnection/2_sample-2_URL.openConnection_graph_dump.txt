Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testUrlFactory() [ CD ]
Line_2 $$ public void testUrlFactory() -->Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)[ CD ]
Line_2 $$ public void testUrlFactory() -->Line_4 $$ Assert.assertEquals(HttpsUrlHandler.HTTPS, url.getProtocol())[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_4 $$ Assert.assertEquals(HttpsUrlHandler.HTTPS, url.getProtocol())[ FD ]
Line_2 $$ public void testUrlFactory() -->Line_5 $$ Assert.assertTrue(url.openConnection() instanceof HttpUrlConnection)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_5 $$ Assert.assertTrue(url.openConnection() instanceof HttpUrlConnection)[ FD ]
Line_2 $$ public void testUrlFactory() -->Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)[ CD ]
Line_2 $$ public void testUrlFactory() -->Line_7 $$ Assert.assertEquals(HttpUrlHandler.HTTP, url.getProtocol())[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_7 $$ Assert.assertEquals(HttpUrlHandler.HTTP, url.getProtocol())[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_7 $$ Assert.assertEquals(HttpUrlHandler.HTTP, url.getProtocol())[ FD ]
Line_2 $$ public void testUrlFactory() -->Line_8 $$ Assert.assertTrue(url.openConnection() instanceof HttpUrlConnection)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_8 $$ Assert.assertTrue(url.openConnection() instanceof HttpUrlConnection)[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_8 $$ Assert.assertTrue(url.openConnection() instanceof HttpUrlConnection)[ FD ]
Line_2 $$ public void testUrlFactory() -->Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ FD ]
Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ FD ]
Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)[ CD ]
Line_2 $$ public void testUrlFactory() -->Line_10 $$ Assert.assertEquals(SftpUrlHandler.PROTOCOL, url.getProtocol())[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_10 $$ Assert.assertEquals(SftpUrlHandler.PROTOCOL, url.getProtocol())[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_10 $$ Assert.assertEquals(SftpUrlHandler.PROTOCOL, url.getProtocol())[ FD ]
Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_10 $$ Assert.assertEquals(SftpUrlHandler.PROTOCOL, url.getProtocol())[ FD ]
Line_2 $$ public void testUrlFactory() -->Line_11 $$ Assert.assertTrue(url.openConnection() instanceof SftpUrlConnection)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_11 $$ Assert.assertTrue(url.openConnection() instanceof SftpUrlConnection)[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_11 $$ Assert.assertTrue(url.openConnection() instanceof SftpUrlConnection)[ FD ]
Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_11 $$ Assert.assertTrue(url.openConnection() instanceof SftpUrlConnection)[ FD ]
Line_2 $$ public void testUrlFactory() -->Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ FD ]
Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)[ CD ]
Line_2 $$ public void testUrlFactory() -->Line_13 $$ Assert.assertEquals(Sftp3gppUrlHandler.PROTOCOL, url.getProtocol())[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_13 $$ Assert.assertEquals(Sftp3gppUrlHandler.PROTOCOL, url.getProtocol())[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_13 $$ Assert.assertEquals(Sftp3gppUrlHandler.PROTOCOL, url.getProtocol())[ FD ]
Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_13 $$ Assert.assertEquals(Sftp3gppUrlHandler.PROTOCOL, url.getProtocol())[ FD ]
Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_13 $$ Assert.assertEquals(Sftp3gppUrlHandler.PROTOCOL, url.getProtocol())[ FD ]
Line_2 $$ public void testUrlFactory() -->Line_14 $$ Assert.assertTrue(url.openConnection() instanceof Sftp3gppUrlConnection)[ CD ]
Line_3 $$ URL url = UrlFactory.getUrl("https://www.google.com", null)-->Line_14 $$ Assert.assertTrue(url.openConnection() instanceof Sftp3gppUrlConnection)[ FD ]
Line_6 $$ url = UrlFactory.getUrl("HTTP://www.opennms.org", null)-->Line_14 $$ Assert.assertTrue(url.openConnection() instanceof Sftp3gppUrlConnection)[ FD ]
Line_9 $$ url = UrlFactory.getUrl("sftp://www.opennms.org", null)-->Line_14 $$ Assert.assertTrue(url.openConnection() instanceof Sftp3gppUrlConnection)[ FD ]
Line_12 $$ url = UrlFactory.getUrl("sftp.3GPP://junier-router.local/opt/3gpp/data", null)-->Line_14 $$ Assert.assertTrue(url.openConnection() instanceof Sftp3gppUrlConnection)[ FD ]
