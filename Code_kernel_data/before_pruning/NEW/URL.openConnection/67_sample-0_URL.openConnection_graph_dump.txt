Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void call() [ CD ]
Line_2 $$ public void call() -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_2 $$ public void call() -->Line_5 $$ conn.setRequestProperty(RMWebServices.DELEGATION_TOKEN_HEADER, tokenString)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ conn.setRequestProperty(RMWebServices.DELEGATION_TOKEN_HEADER, tokenString)[ FD ]
Line_2 $$ public void call() -->Line_7 $$ setupConn(conn, "DELETE", null, null)[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ setupConn(conn, "DELETE", null, null)[ FD ]
Line_2 $$ public void call() -->Line_8 $$ InputStream response = conn.getInputStream()[ CD ]
Line_8 $$ InputStream response = conn.getInputStream()-->Line_8 $$ InputStream response = conn.getInputStream()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ InputStream response = conn.getInputStream()[ FD ]
Line_2 $$ public void call() -->Line_9 $$ assertEquals(Status.OK.getStatusCode(), conn.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_9 $$ assertEquals(Status.OK.getStatusCode(), conn.getResponseCode())[ FD ]
