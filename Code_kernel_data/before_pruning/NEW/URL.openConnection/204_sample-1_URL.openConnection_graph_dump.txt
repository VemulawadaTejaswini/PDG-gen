Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void postTokenEndpoint(String payload) [ CD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_3 $$ HttpsURLConnection connection = (HttpsURLConnection) new URL(TOKEN_URL).openConnection()[ CD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_4 $$ connection.setDoOutput(true)[ CD ]
Line_3 $$ HttpsURLConnection connection = (HttpsURLConnection) new URL(TOKEN_URL).openConnection()-->Line_4 $$ connection.setDoOutput(true)[ FD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_5 $$ connection.setRequestMethod("POST")[ CD ]
Line_3 $$ HttpsURLConnection connection = (HttpsURLConnection) new URL(TOKEN_URL).openConnection()-->Line_5 $$ connection.setRequestMethod("POST")[ FD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_6 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ CD ]
Line_3 $$ HttpsURLConnection connection = (HttpsURLConnection) new URL(TOKEN_URL).openConnection()-->Line_6 $$ connection.setRequestProperty("Content-Type", "application/x-www-form-urlencoded")[ FD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_7 $$ final OutputStream os = connection.getOutputStream()[ CD ]
Line_7 $$ final OutputStream os = connection.getOutputStream()-->Line_7 $$ final OutputStream os = connection.getOutputStream()[ CD ]
Line_3 $$ HttpsURLConnection connection = (HttpsURLConnection) new URL(TOKEN_URL).openConnection()-->Line_7 $$ final OutputStream os = connection.getOutputStream()[ FD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"))[ CD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_9 $$ writer.write(payload)[ CD ]
Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"))-->Line_9 $$ writer.write(payload)[ FD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_9 $$ writer.write(payload)[ FD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_10 $$ writer.flush()[ CD ]
Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"))-->Line_10 $$ writer.flush()[ FD ]
Line_2 $$ public void postTokenEndpoint(String payload) -->Line_11 $$ writer.close()[ CD ]
Line_8 $$ BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(os, "UTF-8"))-->Line_11 $$ writer.close()[ FD ]
