Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readModel(URL url) [ CD ]
Line_2 $$ public void readModel(URL url) -->Line_3 $$ final URLConnection conn = url.openConnection()[ CD ]
Line_3 $$ final URLConnection conn = url.openConnection()-->Line_3 $$ final URLConnection conn = url.openConnection()[ CD ]
Line_2 $$ public void readModel(URL url) -->Line_3 $$ final URLConnection conn = url.openConnection()[ FD ]
Line_2 $$ public void readModel(URL url) -->Line_4 $$ final InputStream in = conn instanceof HttpURLConnection ? HttpUrlConnectionHelper.openInputStream((HttpURLConnection) conn, HttpUrlConnectionHelper.GZIP) : conn.getInputStream()[ CD ]
Line_3 $$ final URLConnection conn = url.openConnection()-->Line_4 $$ final InputStream in = conn instanceof HttpURLConnection ? HttpUrlConnectionHelper.openInputStream((HttpURLConnection) conn, HttpUrlConnectionHelper.GZIP) : conn.getInputStream()[ FD ]
Line_2 $$ public void readModel(URL url) -->Line_7 $$ final DataReader reader = factory.getDataReader(in)[ CD ]
Line_7 $$ final DataReader reader = factory.getDataReader(in)-->Line_7 $$ final DataReader reader = factory.getDataReader(in)[ CD ]
Line_4 $$ final InputStream in = conn instanceof HttpURLConnection ? HttpUrlConnectionHelper.openInputStream((HttpURLConnection) conn, HttpUrlConnectionHelper.GZIP) : conn.getInputStream()-->Line_7 $$ final DataReader reader = factory.getDataReader(in)[ FD ]
Line_2 $$ public void readModel(URL url) -->Line_8 $$ final GCModel model = reader.read()[ CD ]
Line_8 $$ final GCModel model = reader.read()-->Line_8 $$ final GCModel model = reader.read()[ CD ]
Line_7 $$ final DataReader reader = factory.getDataReader(in)-->Line_8 $$ final GCModel model = reader.read()[ FD ]
