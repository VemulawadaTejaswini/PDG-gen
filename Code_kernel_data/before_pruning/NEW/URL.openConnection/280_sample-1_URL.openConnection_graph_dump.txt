Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void resolveStreamFromUrl() [ CD ]
Line_2 $$ public void resolveStreamFromUrl() -->Line_3 $$ String u = endpoint.getUrl()[ CD ]
Line_3 $$ String u = endpoint.getUrl()-->Line_3 $$ String u = endpoint.getUrl()[ CD ]
Line_2 $$ public void resolveStreamFromUrl() -->Line_4 $$ ObjectHelper.notEmpty(u, "url")[ CD ]
Line_3 $$ String u = endpoint.getUrl()-->Line_4 $$ ObjectHelper.notEmpty(u, "url")[ FD ]
Line_2 $$ public void resolveStreamFromUrl() -->Line_5 $$ LOG.debug("About to write to url: [ CD ]
Line_3 $$ String u = endpoint.getUrl()-->Line_5 $$ LOG.debug("About to write to url: [ FD ]
Line_2 $$ public void resolveStreamFromUrl() -->Line_6 $$ URL url = new URL(u)[ CD ]
Line_2 $$ public void resolveStreamFromUrl() -->Line_7 $$ URLConnection c = url.openConnection()[ CD ]
Line_7 $$ URLConnection c = url.openConnection()-->Line_7 $$ URLConnection c = url.openConnection()[ CD ]
Line_6 $$ URL url = new URL(u)-->Line_7 $$ URLConnection c = url.openConnection()[ FD ]
Line_2 $$ public void resolveStreamFromUrl() -->Line_8 $$ return c.getOutputStream()[ CD ]
Line_8 $$ return c.getOutputStream()-->Line_8 $$ return c.getOutputStream()[ CD ]
Line_7 $$ URLConnection c = url.openConnection()-->Line_8 $$ return c.getOutputStream()[ FD ]
