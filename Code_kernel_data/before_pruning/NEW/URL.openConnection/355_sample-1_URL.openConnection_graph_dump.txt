Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void checkValidMavenJarUrl(String url, String resource) [ CD ]
Line_2 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_3 $$ URL realUrl = followRedirects(new URL(url))[ CD ]
Line_3 $$ URL realUrl = followRedirects(new URL(url))-->Line_3 $$ URL realUrl = followRedirects(new URL(url))[ CD ]
Line_2 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_4 $$ URLClassLoader classLoader = new URLClassLoader(new URL[] [ CD ]
Line_2 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_5 $$ URL innerU = classLoader.findResource(resource)[ CD ]
Line_5 $$ URL innerU = classLoader.findResource(resource)-->Line_5 $$ URL innerU = classLoader.findResource(resource)[ CD ]
Line_4 $$ URLClassLoader classLoader = new URLClassLoader(new URL[] -->Line_5 $$ URL innerU = classLoader.findResource(resource)[ FD ]
Line_2 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_5 $$ URL innerU = classLoader.findResource(resource)[ FD ]
Line_2 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_6 $$ InputStream innerUin = innerU.openConnection().getInputStream()[ CD ]
Line_6 $$ InputStream innerUin = innerU.openConnection().getInputStream()-->Line_6 $$ InputStream innerUin = innerU.openConnection().getInputStream()[ CD ]
Line_5 $$ URL innerU = classLoader.findResource(resource)-->Line_6 $$ InputStream innerUin = innerU.openConnection().getInputStream()[ FD ]
Line_2 $$ public void checkValidMavenJarUrl(String url, String resource) -->Line_7 $$ innerUin.close()[ CD ]
Line_6 $$ InputStream innerUin = innerU.openConnection().getInputStream()-->Line_7 $$ innerUin.close()[ FD ]
