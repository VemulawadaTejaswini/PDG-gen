Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testStatus() [ CD ]
Line_2 $$ public void testStatus() -->Line_3 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/")[ CD ]
Line_2 $$ public void testStatus() -->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_3 $$ URL url = new URL("http", "localhost", HTTP_SERVER_PORT, "/")-->Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ FD ]
Line_2 $$ public void testStatus() -->Line_5 $$ conn.addRequestProperty("X-ResponseStatus", "302 Temporary Redirect")[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_5 $$ conn.addRequestProperty("X-ResponseStatus", "302 Temporary Redirect")[ FD ]
Line_2 $$ public void testStatus() -->Line_6 $$ conn.connect()[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.connect()[ FD ]
Line_2 $$ public void testStatus() -->Line_7 $$ assertEquals(302, conn.getResponseCode())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ assertEquals(302, conn.getResponseCode())[ FD ]
Line_2 $$ public void testStatus() -->Line_8 $$ assertEquals("Temporary Redirect", conn.getResponseMessage())[ CD ]
Line_4 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ assertEquals("Temporary Redirect", conn.getResponseMessage())[ FD ]
