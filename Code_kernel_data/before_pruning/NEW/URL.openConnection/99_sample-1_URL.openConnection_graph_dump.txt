Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void findAddress(String address) [ CD ]
Line_2 $$ public void findAddress(String address) -->Line_3 $$ URL url = new URL(geocoder.encode(address))[ CD ]
Line_2 $$ public void findAddress(String address) -->Line_3 $$ URL url = new URL(geocoder.encode(address))[ FD ]
Line_2 $$ public void findAddress(String address) -->Line_4 $$ URLConnection connection = url.openConnection()[ CD ]
Line_4 $$ URLConnection connection = url.openConnection()-->Line_4 $$ URLConnection connection = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL(geocoder.encode(address))-->Line_4 $$ URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ public void findAddress(String address) -->Line_5 $$ String content = Streams.readString(connection.getInputStream())[ CD ]
Line_5 $$ String content = Streams.readString(connection.getInputStream())-->Line_5 $$ String content = Streams.readString(connection.getInputStream())[ CD ]
Line_4 $$ URLConnection connection = url.openConnection()-->Line_5 $$ String content = Streams.readString(connection.getInputStream())[ FD ]
Line_2 $$ public void findAddress(String address) -->Line_6 $$ return geocoder.decode(content)[ CD ]
Line_6 $$ return geocoder.decode(content)-->Line_6 $$ return geocoder.decode(content)[ CD ]
Line_5 $$ String content = Streams.readString(connection.getInputStream())-->Line_6 $$ return geocoder.decode(content)[ FD ]
