Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testGET_URL() [ CD ]
Line_2 $$ public void testGET_URL() -->Line_3 $$ URL url = new URL("http://localhost:" + serverPort + "/tests/alpha.txt")[ CD ]
Line_2 $$ public void testGET_URL() -->Line_4 $$ URLConnection conn = url.openConnection()[ CD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_4 $$ URLConnection conn = url.openConnection()[ CD ]
Line_3 $$ URL url = new URL("http://localhost:" + serverPort + "/tests/alpha.txt")-->Line_4 $$ URLConnection conn = url.openConnection()[ FD ]
Line_2 $$ public void testGET_URL() -->Line_5 $$ conn.connect()[ CD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_5 $$ conn.connect()[ FD ]
Line_2 $$ public void testGET_URL() -->Line_6 $$ InputStream in = conn.getInputStream()[ CD ]
Line_6 $$ InputStream in = conn.getInputStream()-->Line_6 $$ InputStream in = conn.getInputStream()[ CD ]
Line_4 $$ URLConnection conn = url.openConnection()-->Line_6 $$ InputStream in = conn.getInputStream()[ FD ]
Line_2 $$ public void testGET_URL() -->Line_7 $$ String response = IO.toString(in)[ CD ]
Line_7 $$ String response = IO.toString(in)-->Line_7 $$ String response = IO.toString(in)[ CD ]
Line_6 $$ InputStream in = conn.getInputStream()-->Line_7 $$ String response = IO.toString(in)[ FD ]
Line_2 $$ public void testGET_URL() -->Line_8 $$ Assert.assertEquals("Response", expected, response)[ CD ]
Line_7 $$ String response = IO.toString(in)-->Line_8 $$ Assert.assertEquals("Response", expected, response)[ FD ]
