Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testFoo() [ CD ]
Line_2 $$ public void testFoo() -->Line_3 $$ WebElement trigger = driver.findElement(By.id("trigger"))[ CD ]
Line_3 $$ WebElement trigger = driver.findElement(By.id("trigger"))-->Line_3 $$ WebElement trigger = driver.findElement(By.id("trigger"))[ CD ]
Line_3 $$ WebElement trigger = driver.findElement(By.id("trigger"))-->Line_4 $$ url = new URL(trigger.getAttribute("href"))[ FD ]
Line_2 $$ public void testFoo() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()[ CD ]
Line_2 $$ public void testFoo() -->Line_6 $$ conn.setInstanceFollowRedirects(false)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_6 $$ conn.setInstanceFollowRedirects(false)[ FD ]
Line_2 $$ public void testFoo() -->Line_7 $$ assertEquals(302, conn.getResponseCode())[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_7 $$ assertEquals(302, conn.getResponseCode())[ FD ]
Line_2 $$ public void testFoo() -->Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)[ CD ]
Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)-->Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) url.openConnection()-->Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)[ FD ]
Line_2 $$ public void testFoo() -->Line_9 $$ assertTrue(headers.containsKey("Location"))[ CD ]
Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)-->Line_9 $$ assertTrue(headers.containsKey("Location"))[ FD ]
Line_2 $$ public void testFoo() -->Line_10 $$ assertEquals("http://www.foobar.com", headers.get("Location"))[ CD ]
Line_8 $$ Map<String, String> headers = Tools.responseHeaders(conn)-->Line_10 $$ assertEquals("http://www.foobar.com", headers.get("Location"))[ FD ]
