Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readClassFile(Class<?> templateClass) [ CD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_3 $$ String templateName = templateClass.getName()[ CD ]
Line_3 $$ String templateName = templateClass.getName()-->Line_3 $$ String templateName = templateClass.getName()[ CD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_3 $$ String templateName = templateClass.getName()[ FD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_4 $$ int lastDot = templateName.lastIndexOf('.')[ CD ]
Line_4 $$ int lastDot = templateName.lastIndexOf('.')-->Line_4 $$ int lastDot = templateName.lastIndexOf('.')[ CD ]
Line_3 $$ String templateName = templateClass.getName()-->Line_4 $$ int lastDot = templateName.lastIndexOf('.')[ FD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_5 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")[ CD ]
Line_5 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")-->Line_5 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")[ CD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_5 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")[ FD ]
Line_3 $$ String templateName = templateClass.getName()-->Line_5 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")[ FD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_6 $$ java.net.URLConnection connection = url.openConnection()[ CD ]
Line_6 $$ java.net.URLConnection connection = url.openConnection()-->Line_6 $$ java.net.URLConnection connection = url.openConnection()[ CD ]
Line_5 $$ java.net.URL url = templateClass.getResource(templateName.substring(lastDot + 1) + ".class")-->Line_6 $$ java.net.URLConnection connection = url.openConnection()[ FD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_7 $$ int contentLength = connection.getContentLength()[ CD ]
Line_7 $$ int contentLength = connection.getContentLength()-->Line_7 $$ int contentLength = connection.getContentLength()[ CD ]
Line_6 $$ java.net.URLConnection connection = url.openConnection()-->Line_7 $$ int contentLength = connection.getContentLength()[ FD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_8 $$ if (contentLength < 0)[ CD ]
Line_7 $$ int contentLength = connection.getContentLength()-->Line_8 $$ if (contentLength < 0)[ FD ]
Line_2 $$ public void readClassFile(Class<?> templateClass) -->Line_10 $$ return IOUtils.readFully(connection.getInputStream(), contentLength, true)[ CD ]
Line_10 $$ return IOUtils.readFully(connection.getInputStream(), contentLength, true)-->Line_10 $$ return IOUtils.readFully(connection.getInputStream(), contentLength, true)[ CD ]
Line_7 $$ int contentLength = connection.getContentLength()-->Line_10 $$ return IOUtils.readFully(connection.getInputStream(), contentLength, true)[ FD ]
Line_6 $$ java.net.URLConnection connection = url.openConnection()-->Line_10 $$ return IOUtils.readFully(connection.getInputStream(), contentLength, true)[ FD ]
