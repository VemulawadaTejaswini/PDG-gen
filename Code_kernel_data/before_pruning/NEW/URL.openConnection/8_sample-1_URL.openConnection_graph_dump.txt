Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testHttpCookie() [ CD ]
Line_2 $$ public void testHttpCookie() -->Line_3 $$ URL base = new URL("http://" + NetUtils.getHostPortString(server.getConnectorAddress(0)))[ CD ]
Line_2 $$ public void testHttpCookie() -->Line_5 $$ HttpURLConnection conn = (HttpURLConnection) new URL(base, "/echo").openConnection()[ CD ]
Line_2 $$ public void testHttpCookie() -->Line_7 $$ String header = conn.getHeaderField("Set-Cookie")[ CD ]
Line_7 $$ String header = conn.getHeaderField("Set-Cookie")-->Line_7 $$ String header = conn.getHeaderField("Set-Cookie")[ CD ]
Line_5 $$ HttpURLConnection conn = (HttpURLConnection) new URL(base, "/echo").openConnection()-->Line_7 $$ String header = conn.getHeaderField("Set-Cookie")[ FD ]
Line_2 $$ public void testHttpCookie() -->Line_8 $$ List<HttpCookie> cookies = HttpCookie.parse(header)[ CD ]
Line_8 $$ List<HttpCookie> cookies = HttpCookie.parse(header)-->Line_8 $$ List<HttpCookie> cookies = HttpCookie.parse(header)[ CD ]
Line_7 $$ String header = conn.getHeaderField("Set-Cookie")-->Line_8 $$ List<HttpCookie> cookies = HttpCookie.parse(header)[ FD ]
Line_2 $$ public void testHttpCookie() -->Line_9 $$ Assert.assertTrue(!cookies.isEmpty())[ CD ]
Line_9 $$ Assert.assertTrue(!cookies.isEmpty())-->Line_9 $$ Assert.assertTrue(!cookies.isEmpty())[ CD ]
Line_8 $$ List<HttpCookie> cookies = HttpCookie.parse(header)-->Line_9 $$ Assert.assertTrue(!cookies.isEmpty())[ FD ]
Line_2 $$ public void testHttpCookie() -->Line_10 $$ Assert.assertTrue(header.contains("; HttpOnly"))[ CD ]
Line_7 $$ String header = conn.getHeaderField("Set-Cookie")-->Line_10 $$ Assert.assertTrue(header.contains("; HttpOnly"))[ FD ]
