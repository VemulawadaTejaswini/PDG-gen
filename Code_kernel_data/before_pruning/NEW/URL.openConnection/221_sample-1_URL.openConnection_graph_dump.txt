Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) [ CD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_3 $$ connection = new URL(url).openConnection()[ CD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_4 $$ connection.setConnectTimeout(DEFAULT_TIMEOUT_SECONDS * 1000)[ CD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_5 $$ manageContentTypeHeaders(contentType, charset, connection, binary)[ CD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_5 $$ manageContentTypeHeaders(contentType, charset, connection, binary)[ FD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_5 $$ manageContentTypeHeaders(contentType, charset, connection, binary)[ FD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_5 $$ manageContentTypeHeaders(contentType, charset, connection, binary)[ FD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_6 $$ manageHeaders(headers, connection)[ CD ]
Line_2 $$ public void doGet(String url, Map<String, ?> headers, String contentType, String charset, boolean binary) -->Line_6 $$ manageHeaders(headers, connection)[ FD ]
