Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) [ CD ]
Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) -->Line_3 $$ while (dstBuffer.remaining() > 0) [ CD ]
Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) -->Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) [ CD ]
Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) -->Line_3 $$ while (dstBuffer.remaining() > 0) [ FD ]
Line_3 $$ while (dstBuffer.remaining() > 0) -->Line_4 $$ if (srcChannel.read(dstBuffer, position + dstBuffer.position()) == -1) [ CD ]
Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) -->Line_4 $$ if (srcChannel.read(dstBuffer, position + dstBuffer.position()) == -1) [ FD ]
Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) -->Line_4 $$ if (srcChannel.read(dstBuffer, position + dstBuffer.position()) == -1) [ FD ]
Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) -->Line_4 $$ if (srcChannel.read(dstBuffer, position + dstBuffer.position()) == -1) [ FD ]
Line_3 $$ while (dstBuffer.remaining() > 0) -->Line_10 $$ if (Thread.currentThread().isInterrupted() && !srcChannel.isOpen()) [ CD ]
Line_10 $$ if (Thread.currentThread().isInterrupted() && !srcChannel.isOpen()) -->Line_10 $$ if (Thread.currentThread().isInterrupted() && !srcChannel.isOpen()) [ CD ]
Line_2 $$ public void readFull(ByteBuffer dstBuffer, FileChannel srcChannel, long position) -->Line_10 $$ if (Thread.currentThread().isInterrupted() && !srcChannel.isOpen()) [ FD ]
