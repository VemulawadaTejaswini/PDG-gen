Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void findAndValidateKeystone() [ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_3 $$ _readBuffer.limit(JH.MAX_LENGTH)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_4 $$ readChannel.read(_readBuffer, 0)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_5 $$ _readBuffer.flip()[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_6 $$ final int recordSize = JH.getLength(_readBuffer)[ CD ]
Line_6 $$ final int recordSize = JH.getLength(_readBuffer)-->Line_6 $$ final int recordSize = JH.getLength(_readBuffer)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_7 $$ final long version = JH.getVersion(_readBuffer)[ CD ]
Line_7 $$ final long version = JH.getVersion(_readBuffer)-->Line_7 $$ final long version = JH.getVersion(_readBuffer)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_8 $$ _blockSize = JH.getBlockSize(_readBuffer)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_9 $$ _baseAddress = JH.getBaseJournalAddress(_readBuffer)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_10 $$ _journalCreatedTime = JH.getJournalCreatedTime(_readBuffer)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_11 $$ _keystoneAddress = JH.getCurrentJournalAddress(_readBuffer)[ CD ]
Line_2 $$ public void findAndValidateKeystone() -->Line_12 $$ validate(_baseAddress, candidate, 0, 0, _keystoneAddress, "Base address %3$,d after current address %4$,d:  at %1$s:%2$,d")[ CD ]
