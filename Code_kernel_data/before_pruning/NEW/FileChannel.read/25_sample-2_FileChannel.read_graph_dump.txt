Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void test1() [ CD ]
Line_2 $$ public void test1() -->Line_3 $$ long bytesRead = fc.read(dstBuffers)[ CD ]
Line_3 $$ long bytesRead = fc.read(dstBuffers)-->Line_3 $$ long bytesRead = fc.read(dstBuffers)[ CD ]
Line_2 $$ public void test1() -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ CD ]
Line_2 $$ public void test1() -->Line_2 $$ public void test1() [ CD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ CD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ CD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ FD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) [ CD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ CD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) [ CD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) [ CD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) [ FD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_6 $$ byte b = dstBuffers[i].get(j)[ CD ]
Line_6 $$ byte b = dstBuffers[i].get(j)-->Line_6 $$ byte b = dstBuffers[i].get(j)[ CD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_6 $$ byte b = dstBuffers[i].get(j)[ FD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_7 $$ if (b != expectedResult++)[ CD ]
Line_6 $$ byte b = dstBuffers[i].get(j)-->Line_7 $$ if (b != expectedResult++)[ FD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_10 $$ dstBuffers[i].flip()[ CD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ FD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ FD ]
Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) -->Line_4 $$ for (int i = 0; i < NUM_BUFFERS; i++) [ FD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) [ FD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) [ FD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) [ FD ]
Line_5 $$ for (int j = 0; j < BUFFER_CAP; j++) -->Line_6 $$ byte b = dstBuffers[i].get(j)[ FD ]
Line_6 $$ byte b = dstBuffers[i].get(j)-->Line_7 $$ if (b != expectedResult++)[ FD ]
