Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void write(OutputStream out) [ CD ]
Line_2 $$ public void write(OutputStream out) -->Line_3 $$ bb.clear()[ CD ]
Line_2 $$ public void write(OutputStream out) -->Line_4 $$ long bytesRead = channel.read(bb)[ CD ]
Line_4 $$ long bytesRead = channel.read(bb)-->Line_4 $$ long bytesRead = channel.read(bb)[ CD ]
Line_2 $$ public void write(OutputStream out) -->Line_5 $$ if (bytesRead <= 0) [ CD ]
Line_4 $$ long bytesRead = channel.read(bb)-->Line_5 $$ if (bytesRead <= 0) [ FD ]
Line_5 $$ if (bytesRead <= 0) -->Line_6 $$ writeNothing()[ CD ]
Line_5 $$ if (bytesRead <= 0) -->Line_7 $$ fos.close()[ CD ]
Line_2 $$ public void write(OutputStream out) -->Line_10 $$ fos.writeInt((int) bytesRead)[ CD ]
Line_2 $$ public void write(OutputStream out) -->Line_11 $$ if (useChecksum) [ CD ]
Line_11 $$ if (useChecksum) -->Line_12 $$ checksum.reset()[ CD ]
Line_11 $$ if (useChecksum) -->Line_13 $$ checksum.update(buf, 0, (int) bytesRead)[ CD ]
Line_11 $$ if (useChecksum) -->Line_14 $$ fos.writeLong(checksum.getValue())[ CD ]
