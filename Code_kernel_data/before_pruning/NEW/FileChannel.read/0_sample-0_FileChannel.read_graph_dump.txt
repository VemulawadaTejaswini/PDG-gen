Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) [ CD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_3 $$ int bytesRead = channel.read(buf)[ CD ]
Line_3 $$ int bytesRead = channel.read(buf)-->Line_3 $$ int bytesRead = channel.read(buf)[ CD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_3 $$ int bytesRead = channel.read(buf)[ FD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_3 $$ int bytesRead = channel.read(buf)[ FD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_4 $$ if (bytesRead < 0) [ CD ]
Line_3 $$ int bytesRead = channel.read(buf)-->Line_4 $$ if (bytesRead < 0) [ FD ]
Line_4 $$ if (bytesRead < 0) -->Line_5 $$ return bytesRead[ CD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_7 $$ while (buf.remaining() > 0) [ CD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) [ CD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_7 $$ while (buf.remaining() > 0) [ FD ]
Line_7 $$ while (buf.remaining() > 0) -->Line_8 $$ int n = channel.read(buf)[ CD ]
Line_8 $$ int n = channel.read(buf)-->Line_8 $$ int n = channel.read(buf)[ CD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_8 $$ int n = channel.read(buf)[ FD ]
Line_2 $$ public void fillBuffer(FileChannel channel, ByteBuffer buf) -->Line_8 $$ int n = channel.read(buf)[ FD ]
Line_7 $$ while (buf.remaining() > 0) -->Line_9 $$ if (n < 0) [ CD ]
Line_8 $$ int n = channel.read(buf)-->Line_9 $$ if (n < 0) [ FD ]
Line_9 $$ if (n < 0) -->Line_10 $$ return bytesRead[ CD ]
Line_7 $$ while (buf.remaining() > 0) -->Line_12 $$ bytesRead += n[ CD ]
Line_12 $$ bytesRead += n-->Line_12 $$ bytesRead += n[ FD ]
Line_3 $$ int bytesRead = channel.read(buf)-->Line_12 $$ bytesRead += n[ FD ]
Line_8 $$ int n = channel.read(buf)-->Line_12 $$ bytesRead += n[ FD ]
Line_8 $$ int n = channel.read(buf)-->Line_9 $$ if (n < 0) [ FD ]
Line_8 $$ int n = channel.read(buf)-->Line_12 $$ bytesRead += n[ FD ]
