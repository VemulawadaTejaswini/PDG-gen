Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) [ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)[ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)[ FD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_4 $$ fc.read(header)[ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_4 $$ fc.read(header)[ FD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_4 $$ fc.read(header)[ FD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_5 $$ header.flip()[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_5 $$ header.flip()[ FD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_6 $$ int type = getUnsignedShort(header)[ CD ]
Line_6 $$ int type = getUnsignedShort(header)-->Line_6 $$ int type = getUnsignedShort(header)[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_6 $$ int type = getUnsignedShort(header)[ FD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_7 $$ long count = getUnsignedInt(header)[ CD ]
Line_7 $$ long count = getUnsignedInt(header)-->Line_7 $$ long count = getUnsignedInt(header)[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_7 $$ long count = getUnsignedInt(header)[ FD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) [ CD ]
Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_10 $$ int upper = getUnsignedShort(header)[ CD ]
Line_10 $$ int upper = getUnsignedShort(header)-->Line_10 $$ int upper = getUnsignedShort(header)[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_10 $$ int upper = getUnsignedShort(header)[ FD ]
Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_11 $$ int lower = getUnsignedShort(header)[ CD ]
Line_11 $$ int lower = getUnsignedShort(header)-->Line_11 $$ int lower = getUnsignedShort(header)[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_11 $$ int lower = getUnsignedShort(header)[ FD ]
Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_12 $$ long value = (MASK_USHORT & upper) << 16 | (MASK_USHORT & lower)[ CD ]
Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_13 $$ return new TiffIFDEntry(tag, type, value)[ CD ]
Line_8 $$ if (type == Tiff.Type.SHORT && count == 1) -->Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) [ CD ]
Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_17 $$ long value = header.getInt()[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_17 $$ long value = header.getInt()[ FD ]
Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_18 $$ return new TiffIFDEntry(tag, type, value)[ CD ]
Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_22 $$ long offset = getUnsignedInt(header)[ CD ]
Line_22 $$ long offset = getUnsignedInt(header)-->Line_22 $$ long offset = getUnsignedInt(header)[ CD ]
Line_3 $$ ByteBuffer header = ByteBuffer.wrap(new byte[12]).order(tiffFileOrder)-->Line_22 $$ long offset = getUnsignedInt(header)[ FD ]
Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count)[ CD ]
Line_6 $$ int type = getUnsignedShort(header)-->Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count)[ FD ]
Line_7 $$ long count = getUnsignedInt(header)-->Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count)[ FD ]
Line_15 $$ if (count == 1 && (type == Tiff.Type.LONG || type == Tiff.Type.FLOAT)) -->Line_24 $$ if (size > 0L) [ CD ]
Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count)-->Line_24 $$ if (size > 0L) [ FD ]
Line_24 $$ if (size > 0L) -->Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)[ CD ]
Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)-->Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)[ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)[ FD ]
Line_23 $$ int size = MASK_USHORT & (int) calcSize(type, count)-->Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)[ FD ]
Line_24 $$ if (size > 0L) -->Line_27 $$ savedPosition = fc.position()[ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_27 $$ savedPosition = fc.position()[ FD ]
Line_24 $$ if (size > 0L) -->Line_28 $$ fc.position(offset)[ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_28 $$ fc.position(offset)[ FD ]
Line_22 $$ long offset = getUnsignedInt(header)-->Line_28 $$ fc.position(offset)[ FD ]
Line_24 $$ if (size > 0L) -->Line_29 $$ fc.read(data)[ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_29 $$ fc.read(data)[ FD ]
Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)-->Line_29 $$ fc.read(data)[ FD ]
Line_24 $$ if (size > 0L) -->Line_30 $$ data.flip()[ CD ]
Line_26 $$ ByteBuffer data = ByteBuffer.allocateDirect(size).order(tiffFileOrder)-->Line_30 $$ data.flip()[ FD ]
Line_24 $$ if (size > 0L) -->Line_31 $$ fc.position(savedPosition)[ CD ]
Line_2 $$ public void create(FileChannel fc, ByteOrder tiffFileOrder) -->Line_31 $$ fc.position(savedPosition)[ FD ]
Line_24 $$ if (size > 0L) -->Line_33 $$ return new TiffIFDEntry(tag, type, count, offset, data)[ CD ]
Line_24 $$ if (size > 0L) -->Line_36 $$ return new TiffIFDEntry(tag, type, count, offset)[ CD ]
