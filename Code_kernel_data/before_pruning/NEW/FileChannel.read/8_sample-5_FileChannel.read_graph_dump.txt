Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void delete(RandomAccessFile file) [ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(TAG_HEADER_LENGTH)[ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(TAG_HEADER_LENGTH)-->Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(TAG_HEADER_LENGTH)[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_4 $$ fc.read(byteBuffer, 0)[ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(TAG_HEADER_LENGTH)-->Line_4 $$ fc.read(byteBuffer, 0)[ FD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_5 $$ byteBuffer.flip()[ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(TAG_HEADER_LENGTH)-->Line_5 $$ byteBuffer.flip()[ FD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_6 $$ if (seek(byteBuffer)) [ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(TAG_HEADER_LENGTH)-->Line_6 $$ if (seek(byteBuffer)) [ FD ]
Line_6 $$ if (seek(byteBuffer)) -->Line_6 $$ if (seek(byteBuffer)) [ CD ]
Line_3 $$ ByteBuffer byteBuffer = ByteBuffer.allocate(TAG_HEADER_LENGTH)-->Line_6 $$ if (seek(byteBuffer)) [ FD ]
Line_6 $$ if (seek(byteBuffer)) -->Line_8 $$ file.seek(0L)[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_8 $$ file.seek(0L)[ FD ]
Line_6 $$ if (seek(byteBuffer)) -->Line_9 $$ file.write(buffer)[ CD ]
Line_2 $$ public void delete(RandomAccessFile file) -->Line_9 $$ file.write(buffer)[ FD ]
