Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testRead10Frames() [ CD ]
Line_2 $$ public void testRead10Frames() -->Line_3 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_2 $$ public void testRead10Frames() -->Line_2 $$ public void testRead10Frames() [ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_3 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_3 $$ for (int i = 0; i < 5; i++) [ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_3 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_4 $$ FileChannel channel = frameReadingChannel[ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)[ CD ]
Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)-->Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)[ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ frameReadingChannel.position(bs.get(i).dataOffset)[ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ frameReadingChannel.position(bs.get(i).dataOffset)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_7 $$ frameReadingChannel.read(bb)[ CD ]
Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)-->Line_7 $$ frameReadingChannel.read(bb)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)[ CD ]
Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)-->Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)[ CD ]
Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)-->Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_9 $$ Assert.assertNotNull(frames)[ CD ]
Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)-->Line_9 $$ Assert.assertNotNull(frames)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_10 $$ Assert.assertEquals(1, frames.length)[ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_11 $$ Assert.assertArrayEquals(rawFrames[i], MKVMuxerTest.bufferToArray(frames[0]))[ CD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_3 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_3 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_3 $$ for (int i = 0; i < 5; i++) [ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_6 $$ frameReadingChannel.position(bs.get(i).dataOffset)[ FD ]
Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)-->Line_7 $$ frameReadingChannel.read(bb)[ FD ]
Line_5 $$ ByteBuffer bb = ByteBuffer.allocate(bs.get(i).dataLen)-->Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)[ FD ]
Line_3 $$ for (int i = 0; i < 5; i++) -->Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)[ FD ]
Line_8 $$ ByteBuffer[] frames = bs.get(i).getFrames(bb)-->Line_9 $$ Assert.assertNotNull(frames)[ FD ]
