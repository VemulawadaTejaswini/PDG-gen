Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) [ CD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(occupiedSpace)[ CD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(occupiedSpace)-->Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(occupiedSpace)[ CD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(occupiedSpace)[ FD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_4 $$ do [ CD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) [ CD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_4 $$ do [ FD ]
Line_4 $$ do -->Line_5 $$ int nowRead = indexFile.read(buffer, offset + read)[ CD ]
Line_5 $$ int nowRead = indexFile.read(buffer, offset + read)-->Line_5 $$ int nowRead = indexFile.read(buffer, offset + read)[ CD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_5 $$ int nowRead = indexFile.read(buffer, offset + read)[ FD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(occupiedSpace)-->Line_5 $$ int nowRead = indexFile.read(buffer, offset + read)[ FD ]
Line_4 $$ do -->Line_6 $$ if (nowRead < 0) [ CD ]
Line_5 $$ int nowRead = indexFile.read(buffer, offset + read)-->Line_6 $$ if (nowRead < 0) [ FD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_7 $$ throw new IOException("Cannot read record [" + offset + ":" + occupiedSpace + "] (already read " + read + "), file size is " + indexFile.size())[ FD ]
Line_2 $$ public void loadBuffer(FileChannel indexFile, long offset, int occupiedSpace) -->Line_12 $$ buffer.rewind()[ CD ]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocate(occupiedSpace)-->Line_12 $$ buffer.rewind()[ FD ]
Line_5 $$ int nowRead = indexFile.read(buffer, offset + read)-->Line_6 $$ if (nowRead < 0) [ FD ]
