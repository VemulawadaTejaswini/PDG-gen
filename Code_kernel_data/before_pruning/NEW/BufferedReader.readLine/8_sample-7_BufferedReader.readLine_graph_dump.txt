Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testParseList() [ CD ]
Line_2 $$ public void testParseList() -->Line_3 $$ BufferedReader br = new BufferedReader(new StringReader("(defun test (\n) \"doc\ndoc\ndoc()\" (message\n\"test\")\n)"))[ CD ]
Line_2 $$ public void testParseList() -->Line_4 $$ TestForwardMultilineParser bufferedReaderParser = new TestForwardMultilineParser(br, "test")[ CD ]
Line_2 $$ public void testParseList() -->Line_5 $$ s = br.readLine()[ CD ]
Line_3 $$ BufferedReader br = new BufferedReader(new StringReader("(defun test (\n) \"doc\ndoc\ndoc()\" (message\n\"test\")\n)"))-->Line_5 $$ s = br.readLine()[ FD ]
Line_2 $$ public void testParseList() -->Line_6 $$ LispObject lispObject = bufferedReaderParser.parse(s, 0)[ CD ]
Line_6 $$ LispObject lispObject = bufferedReaderParser.parse(s, 0)-->Line_6 $$ LispObject lispObject = bufferedReaderParser.parse(s, 0)[ CD ]
Line_4 $$ TestForwardMultilineParser bufferedReaderParser = new TestForwardMultilineParser(br, "test")-->Line_6 $$ LispObject lispObject = bufferedReaderParser.parse(s, 0)[ FD ]
