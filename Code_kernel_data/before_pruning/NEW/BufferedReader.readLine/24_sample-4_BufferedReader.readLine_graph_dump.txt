Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testUnresolvablePlaceholdersDontCrash() [ CD ]
Line_2 $$ public void testUnresolvablePlaceholdersDontCrash() -->Line_3 $$ ClassLoader classLoader = ModuleUtils.createModuleRuntimeClassLoader(definition, options, ModuleUtilsTests.class.getClassLoader())[ CD ]
Line_3 $$ ClassLoader classLoader = ModuleUtils.createModuleRuntimeClassLoader(definition, options, ModuleUtilsTests.class.getClassLoader())-->Line_3 $$ ClassLoader classLoader = ModuleUtils.createModuleRuntimeClassLoader(definition, options, ModuleUtilsTests.class.getClassLoader())[ CD ]
Line_2 $$ public void testUnresolvablePlaceholdersDontCrash() -->Line_4 $$ String value = new BufferedReader(new InputStreamReader(classLoader.getResourceAsStream("a_file"))).readLine()[ CD ]
Line_4 $$ String value = new BufferedReader(new InputStreamReader(classLoader.getResourceAsStream("a_file"))).readLine()-->Line_4 $$ String value = new BufferedReader(new InputStreamReader(classLoader.getResourceAsStream("a_file"))).readLine()[ CD ]
Line_3 $$ ClassLoader classLoader = ModuleUtils.createModuleRuntimeClassLoader(definition, options, ModuleUtilsTests.class.getClassLoader())-->Line_4 $$ String value = new BufferedReader(new InputStreamReader(classLoader.getResourceAsStream("a_file"))).readLine()[ FD ]
