Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void handleRequest(final Socket socket) [ CD ]
Line_2 $$ public void handleRequest(final Socket socket) -->Line_3 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))[ CD ]
Line_2 $$ public void handleRequest(final Socket socket) -->Line_3 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))[ FD ]
Line_2 $$ public void handleRequest(final Socket socket) -->Line_4 $$ final PrintWriter writer = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()))[ CD ]
Line_2 $$ public void handleRequest(final Socket socket) -->Line_4 $$ final PrintWriter writer = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()))[ FD ]
Line_2 $$ public void handleRequest(final Socket socket) -->Line_5 $$ do [ CD ]
Line_2 $$ public void handleRequest(final Socket socket) -->Line_2 $$ public void handleRequest(final Socket socket) [ CD ]
Line_5 $$ do -->Line_6 $$ request = reader.readLine()[ CD ]
Line_3 $$ final BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()))-->Line_6 $$ request = reader.readLine()[ FD ]
Line_5 $$ do -->Line_5 $$ do [ CD ]
Line_4 $$ final PrintWriter writer = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()))-->Line_5 $$ do [ FD ]
Line_2 $$ public void handleRequest(final Socket socket) -->Line_8 $$ writer.close()[ CD ]
Line_4 $$ final PrintWriter writer = new PrintWriter(new OutputStreamWriter(socket.getOutputStream()))-->Line_8 $$ writer.close()[ FD ]
