Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readAllResultLines(List<String> target, String resultPath, boolean inOrderOfFiles) [ CD ]
Line_2 $$ public void readAllResultLines(List<String> target, String resultPath, boolean inOrderOfFiles) -->Line_3 $$ for (BufferedReader reader : getResultReader(resultPath, inOrderOfFiles)) [ FD ]
Line_2 $$ public void readAllResultLines(List<String> target, String resultPath, boolean inOrderOfFiles) -->Line_3 $$ for (BufferedReader reader : getResultReader(resultPath, inOrderOfFiles)) [ FD ]
Line_5 $$ while ((s = reader.readLine()) != null) -->Line_5 $$ while ((s = reader.readLine()) != null) [ FD ]
Line_4 $$ String s = null-->Line_5 $$ while ((s = reader.readLine()) != null) [ FD ]
Line_5 $$ while ((s = reader.readLine()) != null) -->Line_5 $$ while ((s = reader.readLine()) != null) [ CD ]
Line_3 $$ for (BufferedReader reader : getResultReader(resultPath, inOrderOfFiles)) -->Line_5 $$ while ((s = reader.readLine()) != null) [ FD ]
Line_5 $$ while ((s = reader.readLine()) != null) -->Line_6 $$ target.add(s)[ CD ]
Line_2 $$ public void readAllResultLines(List<String> target, String resultPath, boolean inOrderOfFiles) -->Line_6 $$ target.add(s)[ FD ]
Line_5 $$ while ((s = reader.readLine()) != null) -->Line_6 $$ target.add(s)[ FD ]
Line_4 $$ String s = null-->Line_6 $$ target.add(s)[ FD ]
Line_5 $$ while ((s = reader.readLine()) != null) -->Line_6 $$ target.add(s)[ FD ]
