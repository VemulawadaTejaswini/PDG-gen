Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getFileForClasspathResource(String resource) [ CD ]
Line_2 $$ public void getFileForClasspathResource(String resource) -->Line_3 $$ ClassLoader cloader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_3 $$ ClassLoader cloader = Thread.currentThread().getContextClassLoader()-->Line_3 $$ ClassLoader cloader = Thread.currentThread().getContextClassLoader()[ CD ]
Line_2 $$ public void getFileForClasspathResource(String resource) -->Line_4 $$ URL resourceUrl = cloader.getResource(resource)[ CD ]
Line_4 $$ URL resourceUrl = cloader.getResource(resource)-->Line_4 $$ URL resourceUrl = cloader.getResource(resource)[ CD ]
Line_3 $$ ClassLoader cloader = Thread.currentThread().getContextClassLoader()-->Line_4 $$ URL resourceUrl = cloader.getResource(resource)[ FD ]
Line_2 $$ public void getFileForClasspathResource(String resource) -->Line_4 $$ URL resourceUrl = cloader.getResource(resource)[ FD ]
Line_2 $$ public void getFileForClasspathResource(String resource) -->Line_5 $$ if (resourceUrl == null) [ CD ]
Line_4 $$ URL resourceUrl = cloader.getResource(resource)-->Line_5 $$ if (resourceUrl == null) [ FD ]
Line_2 $$ public void getFileForClasspathResource(String resource) -->Line_9 $$ return new File(URI.create(resourceUrl.toString().replaceAll(" ", "%20")))[ CD ]
Line_4 $$ URL resourceUrl = cloader.getResource(resource)-->Line_9 $$ return new File(URI.create(resourceUrl.toString().replaceAll(" ", "%20")))[ FD ]
