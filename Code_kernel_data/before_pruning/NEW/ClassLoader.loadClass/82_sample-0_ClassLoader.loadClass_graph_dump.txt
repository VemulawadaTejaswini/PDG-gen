Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void loadPluginClass(ClassLoader classLoader) [ CD ]
Line_2 $$ public void loadPluginClass(ClassLoader classLoader) -->Line_3 $$ String pluginClassName = pluginPropertiesReader.getPluginClassName(classLoader)[ CD ]
Line_3 $$ String pluginClassName = pluginPropertiesReader.getPluginClassName(classLoader)-->Line_3 $$ String pluginClassName = pluginPropertiesReader.getPluginClassName(classLoader)[ CD ]
Line_2 $$ public void loadPluginClass(ClassLoader classLoader) -->Line_3 $$ String pluginClassName = pluginPropertiesReader.getPluginClassName(classLoader)[ FD ]
Line_2 $$ public void loadPluginClass(ClassLoader classLoader) -->Line_4 $$ logger.info("Loading plugin class [ CD ]
Line_3 $$ String pluginClassName = pluginPropertiesReader.getPluginClassName(classLoader)-->Line_4 $$ logger.info("Loading plugin class [ FD ]
Line_2 $$ public void loadPluginClass(ClassLoader classLoader) -->Line_5 $$ return (Class<? extends Plugin>) classLoader.loadClass(pluginClassName)[ CD ]
Line_2 $$ public void loadPluginClass(ClassLoader classLoader) -->Line_5 $$ return (Class<? extends Plugin>) classLoader.loadClass(pluginClassName)[ FD ]
Line_3 $$ String pluginClassName = pluginPropertiesReader.getPluginClassName(classLoader)-->Line_5 $$ return (Class<? extends Plugin>) classLoader.loadClass(pluginClassName)[ FD ]
