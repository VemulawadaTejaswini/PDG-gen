Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void run() [ CD ]
Line_2 $$ public void run() -->Line_3 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_3 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_2 $$ public void run() -->Line_4 $$ byte[] memBytes = longToByteArray(rt.totalMemory())[ CD ]
Line_4 $$ byte[] memBytes = longToByteArray(rt.totalMemory())-->Line_4 $$ byte[] memBytes = longToByteArray(rt.totalMemory())[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ byte[] memBytes = longToByteArray(rt.totalMemory())[ FD ]
Line_2 $$ public void run() -->Line_5 $$ md.update(memBytes, 0, memBytes.length)[ CD ]
Line_4 $$ byte[] memBytes = longToByteArray(rt.totalMemory())-->Line_5 $$ md.update(memBytes, 0, memBytes.length)[ FD ]
Line_2 $$ public void run() -->Line_6 $$ memBytes = longToByteArray(rt.freeMemory())[ CD ]
Line_4 $$ byte[] memBytes = longToByteArray(rt.totalMemory())-->Line_6 $$ memBytes = longToByteArray(rt.freeMemory())[ FD ]
Line_6 $$ memBytes = longToByteArray(rt.freeMemory())-->Line_6 $$ memBytes = longToByteArray(rt.freeMemory())[ FD ]
Line_6 $$ memBytes = longToByteArray(rt.freeMemory())-->Line_6 $$ memBytes = longToByteArray(rt.freeMemory())[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_6 $$ memBytes = longToByteArray(rt.freeMemory())[ FD ]
Line_2 $$ public void run() -->Line_7 $$ md.update(memBytes, 0, memBytes.length)[ CD ]
Line_4 $$ byte[] memBytes = longToByteArray(rt.totalMemory())-->Line_7 $$ md.update(memBytes, 0, memBytes.length)[ FD ]
Line_6 $$ memBytes = longToByteArray(rt.freeMemory())-->Line_7 $$ md.update(memBytes, 0, memBytes.length)[ FD ]
