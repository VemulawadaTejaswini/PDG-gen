Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readFileToString(String fileName) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_3 $$ if (fileName.equals(ERROR_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_3 $$ if (fileName.equals(ERROR_OUTPUT)) [ FD ]
Line_3 $$ if (fileName.equals(ERROR_OUTPUT)) -->Line_3 $$ if (fileName.equals(ERROR_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_3 $$ if (fileName.equals(ERROR_OUTPUT)) [ FD ]
Line_3 $$ if (fileName.equals(ERROR_OUTPUT)) -->Line_4 $$ return getErrorOutput()[ CD ]
Line_4 $$ return getErrorOutput()-->Line_4 $$ return getErrorOutput()[ CD ]
Line_3 $$ if (fileName.equals(ERROR_OUTPUT)) -->Line_5 $$ if (fileName.equals(NOTICE_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_5 $$ if (fileName.equals(NOTICE_OUTPUT)) [ FD ]
Line_5 $$ if (fileName.equals(NOTICE_OUTPUT)) -->Line_5 $$ if (fileName.equals(NOTICE_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_5 $$ if (fileName.equals(NOTICE_OUTPUT)) [ FD ]
Line_5 $$ if (fileName.equals(NOTICE_OUTPUT)) -->Line_6 $$ return getNoticeOutput()[ CD ]
Line_6 $$ return getNoticeOutput()-->Line_6 $$ return getNoticeOutput()[ CD ]
Line_5 $$ if (fileName.equals(NOTICE_OUTPUT)) -->Line_7 $$ if (fileName.equals(WARNING_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_7 $$ if (fileName.equals(WARNING_OUTPUT)) [ FD ]
Line_7 $$ if (fileName.equals(WARNING_OUTPUT)) -->Line_7 $$ if (fileName.equals(WARNING_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_7 $$ if (fileName.equals(WARNING_OUTPUT)) [ FD ]
Line_7 $$ if (fileName.equals(WARNING_OUTPUT)) -->Line_8 $$ return getWarningOutput()[ CD ]
Line_8 $$ return getWarningOutput()-->Line_8 $$ return getWarningOutput()[ CD ]
Line_7 $$ if (fileName.equals(WARNING_OUTPUT)) -->Line_9 $$ if (fileName.equals(STANDARD_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_9 $$ if (fileName.equals(STANDARD_OUTPUT)) [ FD ]
Line_9 $$ if (fileName.equals(STANDARD_OUTPUT)) -->Line_9 $$ if (fileName.equals(STANDARD_OUTPUT)) [ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_9 $$ if (fileName.equals(STANDARD_OUTPUT)) [ FD ]
Line_9 $$ if (fileName.equals(STANDARD_OUTPUT)) -->Line_10 $$ return getStandardOutput()[ CD ]
Line_10 $$ return getStandardOutput()-->Line_10 $$ return getStandardOutput()[ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_12 $$ File file = new File(fileName)[ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_13 $$ if (!file.exists()) [ CD ]
Line_13 $$ if (!file.exists()) -->Line_13 $$ if (!file.exists()) [ CD ]
Line_13 $$ if (!file.exists()) -->Line_13 $$ if (!file.exists()) [ CD ]
Line_12 $$ File file = new File(fileName)-->Line_13 $$ if (!file.exists()) [ FD ]
Line_13 $$ if (!file.exists()) -->Line_14 $$ System.out.println("\n" + "FILE DOES NOT EXIST: " + fileName)[ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_16 $$ BufferedReader in = new BufferedReader(new FileReader(file))[ CD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_17 $$ char[] allChars = new char[(int) file.length()][ CD ]
Line_12 $$ File file = new File(fileName)-->Line_17 $$ char[] allChars = new char[(int) file.length()][ FD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_18 $$ in.read(allChars, 0, (int) file.length())[ CD ]
Line_16 $$ BufferedReader in = new BufferedReader(new FileReader(file))-->Line_18 $$ in.read(allChars, 0, (int) file.length())[ FD ]
Line_17 $$ char[] allChars = new char[(int) file.length()]-->Line_18 $$ in.read(allChars, 0, (int) file.length())[ FD ]
Line_12 $$ File file = new File(fileName)-->Line_18 $$ in.read(allChars, 0, (int) file.length())[ FD ]
Line_2 $$ public void readFileToString(String fileName) -->Line_19 $$ in.close()[ CD ]
Line_16 $$ BufferedReader in = new BufferedReader(new FileReader(file))-->Line_19 $$ in.close()[ FD ]
