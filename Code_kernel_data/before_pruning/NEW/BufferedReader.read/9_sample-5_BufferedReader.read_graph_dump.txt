Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readOldContent(File target, String charset) [ CD ]
Line_2 $$ public void readOldContent(File target, String charset) -->Line_4 $$ final InputStream fileInputStream = new FileInputStream(target)[ CD ]
Line_2 $$ public void readOldContent(File target, String charset) -->Line_5 $$ final InputStreamReader fileReader = new InputStreamReader(fileInputStream, charset)[ CD ]
Line_2 $$ public void readOldContent(File target, String charset) -->Line_7 $$ int length = reader.read(buf)[ CD ]
Line_7 $$ int length = reader.read(buf)-->Line_7 $$ int length = reader.read(buf)[ CD ]
Line_2 $$ public void readOldContent(File target, String charset) -->Line_8 $$ while (length > 0) [ CD ]
Line_2 $$ public void readOldContent(File target, String charset) -->Line_2 $$ public void readOldContent(File target, String charset) [ CD ]
Line_7 $$ int length = reader.read(buf)-->Line_8 $$ while (length > 0) [ FD ]
Line_8 $$ while (length > 0) -->Line_9 $$ oldContent.append(buf, 0, length)[ CD ]
Line_7 $$ int length = reader.read(buf)-->Line_9 $$ oldContent.append(buf, 0, length)[ FD ]
Line_8 $$ while (length > 0) -->Line_10 $$ length = reader.read(buf)[ CD ]
Line_10 $$ length = reader.read(buf)-->Line_10 $$ length = reader.read(buf)[ FD ]
Line_7 $$ int length = reader.read(buf)-->Line_10 $$ length = reader.read(buf)[ FD ]
Line_10 $$ length = reader.read(buf)-->Line_10 $$ length = reader.read(buf)[ CD ]
Line_2 $$ public void readOldContent(File target, String charset) -->Line_12 $$ if (reader != null) [ CD ]
Line_12 $$ if (reader != null) -->Line_13 $$ reader.close()[ CD ]
Line_10 $$ length = reader.read(buf)-->Line_8 $$ while (length > 0) [ FD ]
Line_10 $$ length = reader.read(buf)-->Line_8 $$ while (length > 0) [ FD ]
Line_10 $$ length = reader.read(buf)-->Line_9 $$ oldContent.append(buf, 0, length)[ FD ]
