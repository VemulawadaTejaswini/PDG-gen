Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void fileMatchesPercentage(File file) [ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_3 $$ while ((count = reader.read(buffer, 0, buffer.length)) != -1) [ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_2 $$ public void fileMatchesPercentage(File file) [ CD ]
Line_3 $$ while ((count = reader.read(buffer, 0, buffer.length)) != -1) -->Line_4 $$ builder.append(buffer, 0, count)[ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_6 $$ String output = builder.toString()[ CD ]
Line_6 $$ String output = builder.toString()-->Line_6 $$ String output = builder.toString()[ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_7 $$ if (output.startsWith("0")) [ CD ]
Line_6 $$ String output = builder.toString()-->Line_7 $$ if (output.startsWith("0")) [ FD ]
Line_7 $$ if (output.startsWith("0")) -->Line_7 $$ if (output.startsWith("0")) [ CD ]
Line_6 $$ String output = builder.toString()-->Line_7 $$ if (output.startsWith("0")) [ FD ]
Line_7 $$ if (output.startsWith("0")) -->Line_8 $$ if (getProject() != null) [ CD ]
Line_8 $$ if (getProject() != null) -->Line_9 $$ log(MessageFormat.format("[ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_9 $$ log(MessageFormat.format("[ FD ]
Line_7 $$ if (output.startsWith("0")) -->Line_11 $$ return evaluatePercentage(0)[ CD ]
Line_11 $$ return evaluatePercentage(0)-->Line_11 $$ return evaluatePercentage(0)[ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_13 $$ StringTokenizer st = new StringTokenizer(output)[ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_14 $$ int translated = Integer.parseInt(st.nextToken())[ CD ]
Line_14 $$ int translated = Integer.parseInt(st.nextToken())-->Line_14 $$ int translated = Integer.parseInt(st.nextToken())[ CD ]
Line_13 $$ StringTokenizer st = new StringTokenizer(output)-->Line_14 $$ int translated = Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_15 $$ while (st.hasMoreTokens()) [ CD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_2 $$ public void fileMatchesPercentage(File file) [ CD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_15 $$ while (st.hasMoreTokens()) [ CD ]
Line_13 $$ StringTokenizer st = new StringTokenizer(output)-->Line_15 $$ while (st.hasMoreTokens()) [ FD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_16 $$ st.nextToken()[ CD ]
Line_13 $$ StringTokenizer st = new StringTokenizer(output)-->Line_16 $$ st.nextToken()[ FD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_17 $$ if (!st.hasMoreTokens()) [ CD ]
Line_17 $$ if (!st.hasMoreTokens()) -->Line_17 $$ if (!st.hasMoreTokens()) [ CD ]
Line_17 $$ if (!st.hasMoreTokens()) -->Line_17 $$ if (!st.hasMoreTokens()) [ CD ]
Line_13 $$ StringTokenizer st = new StringTokenizer(output)-->Line_17 $$ if (!st.hasMoreTokens()) [ FD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_20 $$ st.nextToken()[ CD ]
Line_13 $$ StringTokenizer st = new StringTokenizer(output)-->Line_20 $$ st.nextToken()[ FD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_21 $$ if (!st.hasMoreTokens()) [ CD ]
Line_21 $$ if (!st.hasMoreTokens()) -->Line_21 $$ if (!st.hasMoreTokens()) [ CD ]
Line_21 $$ if (!st.hasMoreTokens()) -->Line_21 $$ if (!st.hasMoreTokens()) [ CD ]
Line_13 $$ StringTokenizer st = new StringTokenizer(output)-->Line_21 $$ if (!st.hasMoreTokens()) [ FD ]
Line_15 $$ while (st.hasMoreTokens()) -->Line_24 $$ total += Integer.parseInt(st.nextToken())[ CD ]
Line_13 $$ StringTokenizer st = new StringTokenizer(output)-->Line_24 $$ total += Integer.parseInt(st.nextToken())[ FD ]
Line_2 $$ public void fileMatchesPercentage(File file) -->Line_26 $$ int translatedPercentage = (int) (100.0 * (double) translated / (double) total)[ CD ]
