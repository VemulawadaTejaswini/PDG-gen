Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void transferData(Reader src, Writer dest, long charsToCopy) [ CD ]
Line_2 $$ public void transferData(Reader src, Writer dest, long charsToCopy) -->Line_3 $$ BufferedWriter out = new BufferedWriter(dest, BUFFER_SIZE)[ CD ]
Line_2 $$ public void transferData(Reader src, Writer dest, long charsToCopy) -->Line_4 $$ while ((read = in.read(bridge, 0, (int) Math.min(charsLeft, BUFFER_SIZE))) > 0) [ CD ]
Line_2 $$ public void transferData(Reader src, Writer dest, long charsToCopy) -->Line_2 $$ public void transferData(Reader src, Writer dest, long charsToCopy) [ CD ]
Line_4 $$ while ((read = in.read(bridge, 0, (int) Math.min(charsLeft, BUFFER_SIZE))) > 0) -->Line_5 $$ out.write(bridge, 0, read)[ CD ]
Line_3 $$ BufferedWriter out = new BufferedWriter(dest, BUFFER_SIZE)-->Line_5 $$ out.write(bridge, 0, read)[ FD ]
Line_2 $$ public void transferData(Reader src, Writer dest, long charsToCopy) -->Line_8 $$ in.close()[ CD ]
