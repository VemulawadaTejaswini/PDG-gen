Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void compileFile(final File grammarFile, final String targetLanguage, final File destinationDirectory, final String destinationPackage, final boolean generateCode, final Strictness strictness, final Trace trace) [ CD ]
Line_2 $$ public void compileFile(final File grammarFile, final String targetLanguage, final File destinationDirectory, final String destinationPackage, final boolean generateCode, final Strictness strictness, final Trace trace) -->Line_3 $$ while ((c = br.read()) != -1) [ CD ]
Line_2 $$ public void compileFile(final File grammarFile, final String targetLanguage, final File destinationDirectory, final String destinationPackage, final boolean generateCode, final Strictness strictness, final Trace trace) -->Line_2 $$ public void compileFile(final File grammarFile, final String targetLanguage, final File destinationDirectory, final String destinationPackage, final boolean generateCode, final Strictness strictness, final Trace trace) [ CD ]
Line_3 $$ while ((c = br.read()) != -1) -->Line_4 $$ sb.append((char) c)[ CD ]
Line_2 $$ public void compileFile(final File grammarFile, final String targetLanguage, final File destinationDirectory, final String destinationPackage, final boolean generateCode, final Strictness strictness, final Trace trace) -->Line_6 $$ br.close()[ CD ]
