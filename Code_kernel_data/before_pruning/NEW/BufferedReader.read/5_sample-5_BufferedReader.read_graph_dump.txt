Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readLine(BufferedReader r) [ CD ]
Line_2 $$ public void readLine(BufferedReader r) -->Line_3 $$ while (!eol && (c = r.read()) >= 0) [ CD ]
Line_2 $$ public void readLine(BufferedReader r) -->Line_2 $$ public void readLine(BufferedReader r) [ CD ]
Line_2 $$ public void readLine(BufferedReader r) -->Line_3 $$ while (!eol && (c = r.read()) >= 0) [ FD ]
Line_3 $$ while (!eol && (c = r.read()) >= 0) -->Line_4 $$ sb.append((char) c)[ CD ]
Line_3 $$ while (!eol && (c = r.read()) >= 0) -->Line_6 $$ if (c == '\r') [ CD ]
Line_6 $$ if (c == '\r') -->Line_7 $$ r.mark(1)[ CD ]
Line_2 $$ public void readLine(BufferedReader r) -->Line_7 $$ r.mark(1)[ FD ]
Line_6 $$ if (c == '\r') -->Line_8 $$ c = r.read()[ CD ]
Line_2 $$ public void readLine(BufferedReader r) -->Line_8 $$ c = r.read()[ FD ]
Line_6 $$ if (c == '\r') -->Line_9 $$ if (c != '\n') [ CD ]
Line_9 $$ if (c != '\n') -->Line_10 $$ r.reset()[ CD ]
Line_2 $$ public void readLine(BufferedReader r) -->Line_10 $$ r.reset()[ FD ]
Line_9 $$ if (c != '\n') -->Line_13 $$ sb.append((char) c)[ CD ]
Line_2 $$ public void readLine(BufferedReader r) -->Line_17 $$ return sb.length() == 0 ? null : sb.toString()[ CD ]
