Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getMemoryFreeStatPercentage() [ CD ]
Line_2 $$ public void getMemoryFreeStatPercentage() -->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_3 $$ Runtime runtime = Runtime.getRuntime()[ CD ]
Line_2 $$ public void getMemoryFreeStatPercentage() -->Line_4 $$ if (runtime.maxMemory() != 0) [ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_4 $$ if (runtime.maxMemory() != 0) [ FD ]
Line_4 $$ if (runtime.maxMemory() != 0) -->Line_5 $$ long usedMem = runtime.totalMemory() - runtime.freeMemory()[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ long usedMem = runtime.totalMemory() - runtime.freeMemory()[ FD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_5 $$ long usedMem = runtime.totalMemory() - runtime.freeMemory()[ FD ]
Line_4 $$ if (runtime.maxMemory() != 0) -->Line_6 $$ return (1 - (1.0f * usedMem) / runtime.maxMemory()) * 100[ CD ]
Line_3 $$ Runtime runtime = Runtime.getRuntime()-->Line_6 $$ return (1 - (1.0f * usedMem) / runtime.maxMemory()) * 100[ FD ]
Line_4 $$ if (runtime.maxMemory() != 0) -->Line_8 $$ return -1[ CD ]
Line_8 $$ return -1-->Line_8 $$ return -1[ CD ]
