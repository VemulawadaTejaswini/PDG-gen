Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void dispatchLoop() [ CD ]
Line_2 $$ public void dispatchLoop() -->Line_3 $$ long currentMemorySize = rt.totalMemory()[ CD ]
Line_3 $$ long currentMemorySize = rt.totalMemory()-->Line_3 $$ long currentMemorySize = rt.totalMemory()[ CD ]
Line_2 $$ public void dispatchLoop() -->Line_4 $$ long memoryUsed = currentMemorySize - rt.freeMemory()[ CD ]
Line_2 $$ public void dispatchLoop() -->Line_5 $$ long maxMemory = rt.maxMemory()[ CD ]
Line_5 $$ long maxMemory = rt.maxMemory()-->Line_5 $$ long maxMemory = rt.maxMemory()[ CD ]
Line_2 $$ public void dispatchLoop() -->Line_6 $$ while (memoryUsed > maxMemory * PUSHBACK_THRESHOLD_RATIO) [ CD ]
Line_2 $$ public void dispatchLoop() -->Line_2 $$ public void dispatchLoop() [ CD ]
Line_4 $$ long memoryUsed = currentMemorySize - rt.freeMemory()-->Line_6 $$ while (memoryUsed > maxMemory * PUSHBACK_THRESHOLD_RATIO) [ FD ]
Line_6 $$ while (memoryUsed > maxMemory * PUSHBACK_THRESHOLD_RATIO) -->Line_7 $$ if (lastPushbackLog < (lastPushbackLog = System.currentTimeMillis()) - 60 * 1000) [ CD ]
Line_7 $$ if (lastPushbackLog < (lastPushbackLog = System.currentTimeMillis()) - 60 * 1000) -->Line_8 $$ LOG.warn("In pushback, not accepting new work. Using [ CD ]
Line_7 $$ if (lastPushbackLog < (lastPushbackLog = System.currentTimeMillis()) - 60 * 1000) -->Line_11 $$ System.gc()[ CD ]
Line_6 $$ while (memoryUsed > maxMemory * PUSHBACK_THRESHOLD_RATIO) -->Line_13 $$ sleep(10)[ CD ]
