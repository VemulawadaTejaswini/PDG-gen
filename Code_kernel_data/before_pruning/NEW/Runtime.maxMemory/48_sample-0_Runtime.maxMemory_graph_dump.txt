Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void clearCacheIfLowOnMem() [ CD ]
Line_2 $$ public void clearCacheIfLowOnMem() -->Line_3 $$ Runtime r = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime r = Runtime.getRuntime()-->Line_3 $$ Runtime r = Runtime.getRuntime()[ CD ]
Line_2 $$ public void clearCacheIfLowOnMem() -->Line_4 $$ long max = r.maxMemory()[ CD ]
Line_4 $$ long max = r.maxMemory()-->Line_4 $$ long max = r.maxMemory()[ CD ]
Line_3 $$ Runtime r = Runtime.getRuntime()-->Line_4 $$ long max = r.maxMemory()[ FD ]
Line_2 $$ public void clearCacheIfLowOnMem() -->Line_5 $$ if (max == Long.MAX_VALUE)[ CD ]
Line_4 $$ long max = r.maxMemory()-->Line_5 $$ if (max == Long.MAX_VALUE)[ FD ]
Line_5 $$ if (max == Long.MAX_VALUE)-->Line_6 $$ return[ CD ]
Line_2 $$ public void clearCacheIfLowOnMem() -->Line_7 $$ double free = r.freeMemory()[ CD ]
Line_7 $$ double free = r.freeMemory()-->Line_7 $$ double free = r.freeMemory()[ CD ]
Line_3 $$ Runtime r = Runtime.getRuntime()-->Line_7 $$ double free = r.freeMemory()[ FD ]
Line_2 $$ public void clearCacheIfLowOnMem() -->Line_8 $$ double total = r.totalMemory()[ CD ]
Line_8 $$ double total = r.totalMemory()-->Line_8 $$ double total = r.totalMemory()[ CD ]
Line_3 $$ Runtime r = Runtime.getRuntime()-->Line_8 $$ double total = r.totalMemory()[ FD ]
