Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) [ CD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_3 $$ sender.sendMessage(ChatColor.YELLOW + "Available processors: " + rt.availableProcessors())[ CD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_3 $$ sender.sendMessage(ChatColor.YELLOW + "Available processors: " + rt.availableProcessors())[ FD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_5 $$ sender.sendMessage(ChatColor.YELLOW + "Available total memory: " + Math.floor(rt.maxMemory() / 1024.0 / 1024.0) + " MB")[ CD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_5 $$ sender.sendMessage(ChatColor.YELLOW + "Available total memory: " + Math.floor(rt.maxMemory() / 1024.0 / 1024.0) + " MB")[ FD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_7 $$ sender.sendMessage(ChatColor.YELLOW + "JVM allocated memory: " + Math.floor(rt.totalMemory() / 1024.0 / 1024.0) + " MB")[ CD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_7 $$ sender.sendMessage(ChatColor.YELLOW + "JVM allocated memory: " + Math.floor(rt.totalMemory() / 1024.0 / 1024.0) + " MB")[ FD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_9 $$ sender.sendMessage(ChatColor.YELLOW + "Free allocated memory: " + Math.floor(rt.freeMemory() / 1024.0 / 1024.0) + " MB")[ CD ]
Line_2 $$ public void serverInfo(CommandContext args, CommandSender sender) -->Line_9 $$ sender.sendMessage(ChatColor.YELLOW + "Free allocated memory: " + Math.floor(rt.freeMemory() / 1024.0 / 1024.0) + " MB")[ FD ]
