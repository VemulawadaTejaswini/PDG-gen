Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void reportStatus(final HTTPRequestContext context, final HttpServletRequest request, final HttpServletResponse response) [ CD ]
Line_2 $$ public void reportStatus(final HTTPRequestContext context, final HttpServletRequest request, final HttpServletResponse response) -->Line_3 $$ final Runtime runtime = Runtime.getRuntime()[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_3 $$ final Runtime runtime = Runtime.getRuntime()[ CD ]
Line_2 $$ public void reportStatus(final HTTPRequestContext context, final HttpServletRequest request, final HttpServletResponse response) -->Line_4 $$ memory.put("totoal", runtime.totalMemory() / mb)[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_4 $$ memory.put("totoal", runtime.totalMemory() / mb)[ FD ]
Line_2 $$ public void reportStatus(final HTTPRequestContext context, final HttpServletRequest request, final HttpServletResponse response) -->Line_5 $$ memory.put("free", runtime.freeMemory() / mb)[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_5 $$ memory.put("free", runtime.freeMemory() / mb)[ FD ]
Line_2 $$ public void reportStatus(final HTTPRequestContext context, final HttpServletRequest request, final HttpServletResponse response) -->Line_6 $$ memory.put("used", (runtime.totalMemory() - runtime.freeMemory()) / mb)[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_6 $$ memory.put("used", (runtime.totalMemory() - runtime.freeMemory()) / mb)[ FD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_6 $$ memory.put("used", (runtime.totalMemory() - runtime.freeMemory()) / mb)[ FD ]
Line_2 $$ public void reportStatus(final HTTPRequestContext context, final HttpServletRequest request, final HttpServletResponse response) -->Line_7 $$ memory.put("max", runtime.maxMemory() / mb)[ CD ]
Line_3 $$ final Runtime runtime = Runtime.getRuntime()-->Line_7 $$ memory.put("max", runtime.maxMemory() / mb)[ FD ]
