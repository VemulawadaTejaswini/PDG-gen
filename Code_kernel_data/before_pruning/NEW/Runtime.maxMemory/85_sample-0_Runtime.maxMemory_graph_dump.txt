Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void generateReport(String type, long now, boolean reset) [ CD ]
Line_2 $$ public void generateReport(String type, long now, boolean reset) -->Line_3 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_3 $$ Runtime rt = Runtime.getRuntime()[ CD ]
Line_2 $$ public void generateReport(String type, long now, boolean reset) -->Line_4 $$ long total = rt.totalMemory(), max = rt.maxMemory()[ CD ]
Line_4 $$ long total = rt.totalMemory(), max = rt.maxMemory()-->Line_4 $$ long total = rt.totalMemory(), max = rt.maxMemory()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ long total = rt.totalMemory(), max = rt.maxMemory()[ FD ]
Line_4 $$ long total = rt.totalMemory(), max = rt.maxMemory()-->Line_4 $$ long total = rt.totalMemory(), max = rt.maxMemory()[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_4 $$ long total = rt.totalMemory(), max = rt.maxMemory()[ FD ]
Line_2 $$ public void generateReport(String type, long now, boolean reset) -->Line_5 $$ long used = (total - rt.freeMemory())[ CD ]
Line_3 $$ Runtime rt = Runtime.getRuntime()-->Line_5 $$ long used = (total - rt.freeMemory())[ FD ]
