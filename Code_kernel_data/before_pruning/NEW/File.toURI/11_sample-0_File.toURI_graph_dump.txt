Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void normaliseFilePathToUrl(String path) [ CD ]
Line_2 $$ public void normaliseFilePathToUrl(String path) -->Line_3 $$ if (path.startsWith("file:") || path.startsWith("http:") || path.startsWith("https:")) [ CD ]
Line_2 $$ public void normaliseFilePathToUrl(String path) -->Line_3 $$ if (path.startsWith("file:") || path.startsWith("http:") || path.startsWith("https:")) [ FD ]
Line_2 $$ public void normaliseFilePathToUrl(String path) -->Line_3 $$ if (path.startsWith("file:") || path.startsWith("http:") || path.startsWith("https:")) [ FD ]
Line_2 $$ public void normaliseFilePathToUrl(String path) -->Line_3 $$ if (path.startsWith("file:") || path.startsWith("http:") || path.startsWith("https:")) [ FD ]
Line_3 $$ if (path.startsWith("file:") || path.startsWith("http:") || path.startsWith("https:")) -->Line_6 $$ return new URI(path).toURL()[ CD ]
Line_6 $$ return new URI(path).toURL()-->Line_6 $$ return new URI(path).toURL()[ CD ]
Line_3 $$ if (path.startsWith("file:") || path.startsWith("http:") || path.startsWith("https:")) -->Line_8 $$ return new File(path).toURI().toURL()[ CD ]
Line_8 $$ return new File(path).toURI().toURL()-->Line_8 $$ return new File(path).toURI().toURL()[ CD ]
