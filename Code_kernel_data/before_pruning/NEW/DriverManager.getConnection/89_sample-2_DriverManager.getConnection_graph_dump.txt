Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void setUp() [ CD ]
Line_2 $$ public void setUp() -->Line_3 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))-->Line_3 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))[ CD ]
Line_2 $$ public void setUp() -->Line_5 $$ doOnAllTables(connection, null, "public", "DROP TABLE \"%s\" CASCADE")[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))-->Line_5 $$ doOnAllTables(connection, null, "public", "DROP TABLE \"%s\" CASCADE")[ FD ]
Line_2 $$ public void setUp() -->Line_6 $$ Statement st = connection.createStatement()[ CD ]
Line_6 $$ Statement st = connection.createStatement()-->Line_6 $$ Statement st = connection.createStatement()[ CD ]
Line_3 $$ Connection connection = DriverManager.getConnection(Framework.getProperty(URL_PROPERTY), Framework.getProperty(USER_PROPERTY), Framework.getProperty(PASSWORD_PROPERTY))-->Line_6 $$ Statement st = connection.createStatement()[ FD ]
Line_2 $$ public void setUp() -->Line_7 $$ executeSql(st, "DROP SEQUENCE IF EXISTS hierarchy_seq")[ CD ]
Line_6 $$ Statement st = connection.createStatement()-->Line_7 $$ executeSql(st, "DROP SEQUENCE IF EXISTS hierarchy_seq")[ FD ]
Line_2 $$ public void setUp() -->Line_8 $$ st.close()[ CD ]
Line_6 $$ Statement st = connection.createStatement()-->Line_8 $$ st.close()[ FD ]
