Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void test_1() [ CD ]
Line_2 $$ public void test_1() -->Line_3 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_3 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")[ CD ]
Line_2 $$ public void test_1() -->Line_4 $$ Statement stmt = conn.createStatement()[ CD ]
Line_4 $$ Statement stmt = conn.createStatement()-->Line_4 $$ Statement stmt = conn.createStatement()[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection("jdbc:mock:")-->Line_4 $$ Statement stmt = conn.createStatement()[ FD ]
Line_2 $$ public void test_1() -->Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")[ CD ]
Line_4 $$ Statement stmt = conn.createStatement()-->Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")[ FD ]
Line_2 $$ public void test_1() -->Line_6 $$ Assert.assertTrue(rs.next())[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_6 $$ Assert.assertTrue(rs.next())[ FD ]
Line_2 $$ public void test_1() -->Line_7 $$ Assert.assertEquals(0, rs.getInt(1))[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_7 $$ Assert.assertEquals(0, rs.getInt(1))[ FD ]
Line_2 $$ public void test_1() -->Line_8 $$ Assert.assertEquals(null, rs.getObject(1))[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_8 $$ Assert.assertEquals(null, rs.getObject(1))[ FD ]
Line_2 $$ public void test_1() -->Line_9 $$ rs.close()[ CD ]
Line_5 $$ ResultSet rs = stmt.executeQuery("SELECT NULL")-->Line_9 $$ rs.close()[ FD ]
