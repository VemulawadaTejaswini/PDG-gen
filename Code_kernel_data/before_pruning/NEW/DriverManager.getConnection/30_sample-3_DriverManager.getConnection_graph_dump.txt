Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testAllScan() [ CD ]
Line_2 $$ public void testAllScan() -->Line_3 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ CD ]
Line_2 $$ public void testAllScan() -->Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_2 $$ public void testAllScan() -->Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)[ FD ]
Line_2 $$ public void testAllScan() -->Line_6 $$ statement.setString(1, tenantId)[ CD ]
Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_6 $$ statement.setString(1, tenantId)[ FD ]
Line_2 $$ public void testAllScan() -->Line_7 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_7 $$ ResultSet rs = statement.executeQuery()-->Line_7 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_5 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_7 $$ ResultSet rs = statement.executeQuery()[ FD ]
Line_2 $$ public void testAllScan() -->Line_8 $$ assertTrue(rs.next())[ CD ]
Line_7 $$ ResultSet rs = statement.executeQuery()-->Line_8 $$ assertTrue(rs.next())[ FD ]
Line_2 $$ public void testAllScan() -->Line_9 $$ assertEquals(rs.getString(1), B_VALUE)[ CD ]
Line_7 $$ ResultSet rs = statement.executeQuery()-->Line_9 $$ assertEquals(rs.getString(1), B_VALUE)[ FD ]
Line_2 $$ public void testAllScan() -->Line_10 $$ assertEquals(rs.getString("B_string"), C_VALUE)[ CD ]
Line_7 $$ ResultSet rs = statement.executeQuery()-->Line_10 $$ assertEquals(rs.getString("B_string"), C_VALUE)[ FD ]
Line_2 $$ public void testAllScan() -->Line_11 $$ assertFalse(rs.next())[ CD ]
Line_7 $$ ResultSet rs = statement.executeQuery()-->Line_11 $$ assertFalse(rs.next())[ FD ]
Line_2 $$ public void testAllScan() -->Line_12 $$ conn.close()[ CD ]
Line_4 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_12 $$ conn.close()[ FD ]
