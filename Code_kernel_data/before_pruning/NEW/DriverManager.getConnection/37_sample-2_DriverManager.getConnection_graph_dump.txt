Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testRoundFloat() [ CD ]
Line_2 $$ public void testRoundFloat() -->Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())[ CD ]
Line_2 $$ public void testRoundFloat() -->Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")[ CD ]
Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")[ CD ]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl())-->Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")[ FD ]
Line_2 $$ public void testRoundFloat() -->Line_5 $$ assertTrue(rs.next())[ CD ]
Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_5 $$ assertTrue(rs.next())[ FD ]
Line_2 $$ public void testRoundFloat() -->Line_6 $$ assertEquals(0, Floats.compare(1, rs.getFloat(1)))[ CD ]
Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_6 $$ assertEquals(0, Floats.compare(1, rs.getFloat(1)))[ FD ]
Line_2 $$ public void testRoundFloat() -->Line_7 $$ assertEquals(0, Floats.compare(1.3f, rs.getFloat(2)))[ CD ]
Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_7 $$ assertEquals(0, Floats.compare(1.3f, rs.getFloat(2)))[ FD ]
Line_2 $$ public void testRoundFloat() -->Line_8 $$ assertEquals(0, Floats.compare(1.26f, rs.getFloat(3)))[ CD ]
Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_8 $$ assertEquals(0, Floats.compare(1.26f, rs.getFloat(3)))[ FD ]
Line_2 $$ public void testRoundFloat() -->Line_9 $$ assertEquals(0, Floats.compare(1.264f, rs.getFloat(4)))[ CD ]
Line_4 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ROUND(fl), ROUND(fl, 1), ROUND(fl, 2), ROUND(fl, 3) FROM t1")-->Line_9 $$ assertEquals(0, Floats.compare(1.264f, rs.getFloat(4)))[ FD ]
