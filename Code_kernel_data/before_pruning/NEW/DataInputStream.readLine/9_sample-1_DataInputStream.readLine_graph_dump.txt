Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void decode() [ CD ]
Line_2 $$ public void decode() -->Line_3 $$ String rawCommitter = n.substring("committer ".length())[ CD ]
Line_3 $$ String rawCommitter = n.substring("committer ".length())-->Line_3 $$ String rawCommitter = n.substring("committer ".length())[ CD ]
Line_2 $$ public void decode() -->Line_4 $$ n = br.readLine()[ CD ]
Line_2 $$ public void decode() -->Line_5 $$ if (n != null && n.startsWith("encoding"))[ CD ]
Line_5 $$ if (n != null && n.startsWith("encoding"))-->Line_6 $$ encoding = Charset.forName(n.substring("encoding ".length()))[ CD ]
Line_5 $$ if (n != null && n.startsWith("encoding"))-->Line_8 $$ if (n == null || !n.equals("")) [ CD ]
Line_8 $$ if (n == null || !n.equals("")) -->Line_8 $$ if (n == null || !n.equals("")) [ CD ]
Line_2 $$ public void decode() -->Line_12 $$ byte[] readBuf = new byte[br.available()][ CD ]
Line_2 $$ public void decode() -->Line_13 $$ br.read(readBuf)[ CD ]
Line_12 $$ byte[] readBuf = new byte[br.available()]-->Line_13 $$ br.read(readBuf)[ FD ]
Line_2 $$ public void decode() -->Line_14 $$ if (encoding != null) [ CD ]
Line_3 $$ String rawCommitter = n.substring("committer ".length())-->Line_16 $$ committer = new PersonIdent(new String(rawCommitter.getBytes(), encoding.name()))[ FD ]
Line_3 $$ String rawCommitter = n.substring("committer ".length())-->Line_20 $$ committer = new PersonIdent(new String(rawCommitter.getBytes()))[ FD ]
