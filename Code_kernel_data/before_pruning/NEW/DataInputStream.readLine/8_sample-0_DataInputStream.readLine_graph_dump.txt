Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getStreamLines(final InputStream is) [ CD ]
Line_2 $$ public void getStreamLines(final InputStream is) -->Line_3 $$ final DataInputStream dis = new DataInputStream(is)[ CD ]
Line_2 $$ public void getStreamLines(final InputStream is) -->Line_4 $$ if (dis.available() > 0) [ CD ]
Line_3 $$ final DataInputStream dis = new DataInputStream(is)-->Line_4 $$ if (dis.available() > 0) [ FD ]
Line_3 $$ final DataInputStream dis = new DataInputStream(is)-->Line_5 $$ buffer = new StringBuffer(dis.readLine())[ FD ]
Line_4 $$ if (dis.available() > 0) -->Line_6 $$ while (dis.available() > 0) [ CD ]
Line_4 $$ if (dis.available() > 0) -->Line_4 $$ if (dis.available() > 0) [ CD ]
Line_3 $$ final DataInputStream dis = new DataInputStream(is)-->Line_6 $$ while (dis.available() > 0) [ FD ]
Line_6 $$ while (dis.available() > 0) -->Line_7 $$ buffer.append("\n").append(dis.readLine())[ CD ]
Line_3 $$ final DataInputStream dis = new DataInputStream(is)-->Line_7 $$ buffer.append("\n").append(dis.readLine())[ FD ]
Line_2 $$ public void getStreamLines(final InputStream is) -->Line_10 $$ dis.close()[ CD ]
Line_3 $$ final DataInputStream dis = new DataInputStream(is)-->Line_10 $$ dis.close()[ FD ]
