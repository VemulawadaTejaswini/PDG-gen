Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void parseHeader(DataInputStream in) [ CD ]
Line_2 $$ public void parseHeader(DataInputStream in) -->Line_3 $$ header.file = decodeWebChars(strs[1])[ CD ]
Line_3 $$ header.file = decodeWebChars(strs[1])-->Line_3 $$ header.file = decodeWebChars(strs[1])[ CD ]
Line_2 $$ public void parseHeader(DataInputStream in) -->Line_4 $$ if (header.file != null) [ CD ]
Line_4 $$ if (header.file != null) -->Line_5 $$ header.file = URLDecoder.decode(header.file, ISO_8859_1)[ CD ]
Line_5 $$ header.file = URLDecoder.decode(header.file, ISO_8859_1)-->Line_5 $$ header.file = URLDecoder.decode(header.file, ISO_8859_1)[ CD ]
Line_4 $$ if (header.file != null) -->Line_6 $$ header.parseGetParams()[ CD ]
Line_2 $$ public void parseHeader(DataInputStream in) -->Line_8 $$ line = in.readLine()[ CD ]
Line_2 $$ public void parseHeader(DataInputStream in) -->Line_8 $$ line = in.readLine()[ FD ]
Line_2 $$ public void parseHeader(DataInputStream in) -->Line_9 $$ while (line != null) [ CD ]
Line_2 $$ public void parseHeader(DataInputStream in) -->Line_2 $$ public void parseHeader(DataInputStream in) [ CD ]
Line_9 $$ while (line != null) -->Line_10 $$ if (line.isEmpty()) [ CD ]
Line_10 $$ if (line.isEmpty()) -->Line_10 $$ if (line.isEmpty()) [ CD ]
Line_9 $$ while (line != null) -->Line_13 $$ int index = line.indexOf(':')[ CD ]
Line_13 $$ int index = line.indexOf(':')-->Line_13 $$ int index = line.indexOf(':')[ CD ]
Line_9 $$ while (line != null) -->Line_14 $$ if (index == -1) [ CD ]
Line_13 $$ int index = line.indexOf(':')-->Line_14 $$ if (index == -1) [ FD ]
Line_14 $$ if (index == -1) -->Line_15 $$ header.headers.put(line, "")[ CD ]
Line_14 $$ if (index == -1) -->Line_17 $$ header.headers.put(line.substring(0, index), line.substring(index + 1).trim())[ CD ]
Line_13 $$ int index = line.indexOf(':')-->Line_17 $$ header.headers.put(line.substring(0, index), line.substring(index + 1).trim())[ FD ]
Line_9 $$ while (line != null) -->Line_19 $$ line = in.readLine()[ CD ]
Line_2 $$ public void parseHeader(DataInputStream in) -->Line_19 $$ line = in.readLine()[ FD ]
Line_13 $$ int index = line.indexOf(':')-->Line_14 $$ if (index == -1) [ FD ]
Line_13 $$ int index = line.indexOf(':')-->Line_17 $$ header.headers.put(line.substring(0, index), line.substring(index + 1).trim())[ FD ]
