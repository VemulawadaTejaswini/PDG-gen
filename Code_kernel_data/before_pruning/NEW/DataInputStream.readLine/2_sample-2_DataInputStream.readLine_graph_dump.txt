Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void readPGM(InputStream is) [ CD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_3 $$ DataInputStream dis = new DataInputStream(is)[ CD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_4 $$ String p5 = dis.readLine()[ CD ]
Line_4 $$ String p5 = dis.readLine()-->Line_4 $$ String p5 = dis.readLine()[ CD ]
Line_3 $$ DataInputStream dis = new DataInputStream(is)-->Line_4 $$ String p5 = dis.readLine()[ FD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_5 $$ if (!p5.equals("P5")) [ CD ]
Line_5 $$ if (!p5.equals("P5")) -->Line_5 $$ if (!p5.equals("P5")) [ CD ]
Line_5 $$ if (!p5.equals("P5")) -->Line_5 $$ if (!p5.equals("P5")) [ CD ]
Line_4 $$ String p5 = dis.readLine()-->Line_5 $$ if (!p5.equals("P5")) [ FD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_8 $$ String depth = dis.readLine()[ CD ]
Line_8 $$ String depth = dis.readLine()-->Line_8 $$ String depth = dis.readLine()[ CD ]
Line_3 $$ DataInputStream dis = new DataInputStream(is)-->Line_8 $$ String depth = dis.readLine()[ FD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_9 $$ String[] tmp = dim.split(" ")[ CD ]
Line_9 $$ String[] tmp = dim.split(" ")-->Line_9 $$ String[] tmp = dim.split(" ")[ CD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_10 $$ int height = Integer.parseInt(tmp[1])[ CD ]
Line_10 $$ int height = Integer.parseInt(tmp[1])-->Line_10 $$ int height = Integer.parseInt(tmp[1])[ CD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_11 $$ int read = dis.read(buf, 0, width * height)[ CD ]
Line_11 $$ int read = dis.read(buf, 0, width * height)-->Line_11 $$ int read = dis.read(buf, 0, width * height)[ CD ]
Line_3 $$ DataInputStream dis = new DataInputStream(is)-->Line_11 $$ int read = dis.read(buf, 0, width * height)[ FD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_12 $$ if (read != width * height) [ CD ]
Line_11 $$ int read = dis.read(buf, 0, width * height)-->Line_12 $$ if (read != width * height) [ FD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_15 $$ for (int i = 0; i < width * height; i++) [ CD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_2 $$ public void readPGM(InputStream is) [ CD ]
Line_15 $$ for (int i = 0; i < width * height; i++) -->Line_15 $$ for (int i = 0; i < width * height; i++) [ CD ]
Line_15 $$ for (int i = 0; i < width * height; i++) -->Line_15 $$ for (int i = 0; i < width * height; i++) [ CD ]
Line_15 $$ for (int i = 0; i < width * height; i++) -->Line_15 $$ for (int i = 0; i < width * height; i++) [ FD ]
Line_15 $$ for (int i = 0; i < width * height; i++) -->Line_16 $$ y[i] = buf[i] & 0xff[ CD ]
Line_2 $$ public void readPGM(InputStream is) -->Line_18 $$ return new Picture(width, height, new int[][] [ CD ]
Line_15 $$ for (int i = 0; i < width * height; i++) -->Line_15 $$ for (int i = 0; i < width * height; i++) [ FD ]
Line_15 $$ for (int i = 0; i < width * height; i++) -->Line_15 $$ for (int i = 0; i < width * height; i++) [ FD ]
Line_15 $$ for (int i = 0; i < width * height; i++) -->Line_15 $$ for (int i = 0; i < width * height; i++) [ FD ]
