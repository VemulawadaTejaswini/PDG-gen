Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void start(DataInputStream in, OutputStream out, String[] parameters) [ CD ]
Line_2 $$ public void start(DataInputStream in, OutputStream out, String[] parameters) -->Line_3 $$ String line = in.readLine()[ CD ]
Line_3 $$ String line = in.readLine()-->Line_3 $$ String line = in.readLine()[ CD ]
Line_2 $$ public void start(DataInputStream in, OutputStream out, String[] parameters) -->Line_3 $$ String line = in.readLine()[ FD ]
Line_2 $$ public void start(DataInputStream in, OutputStream out, String[] parameters) -->Line_4 $$ if (line.equals("exit"))[ CD ]
Line_3 $$ String line = in.readLine()-->Line_4 $$ if (line.equals("exit"))[ FD ]
Line_4 $$ if (line.equals("exit"))-->Line_4 $$ if (line.equals("exit"))[ CD ]
Line_3 $$ String line = in.readLine()-->Line_4 $$ if (line.equals("exit"))[ FD ]
Line_2 $$ public void start(DataInputStream in, OutputStream out, String[] parameters) -->Line_5 $$ if (line.startsWith("\"")) [ CD ]
Line_3 $$ String line = in.readLine()-->Line_5 $$ if (line.startsWith("\"")) [ FD ]
Line_5 $$ if (line.startsWith("\"")) -->Line_5 $$ if (line.startsWith("\"")) [ CD ]
Line_3 $$ String line = in.readLine()-->Line_5 $$ if (line.startsWith("\"")) [ FD ]
Line_5 $$ if (line.startsWith("\"")) -->Line_6 $$ values[++maxUsed] = line.substring(1)[ CD ]
Line_6 $$ values[++maxUsed] = line.substring(1)-->Line_6 $$ values[++maxUsed] = line.substring(1)[ CD ]
Line_3 $$ String line = in.readLine()-->Line_6 $$ values[++maxUsed] = line.substring(1)[ FD ]
Line_5 $$ if (line.startsWith("\"")) -->Line_8 $$ if (line.indexOf(' ') == -1 && line.indexOf('[') == -1 && line.indexOf('/') == -1)[ CD ]
Line_3 $$ String line = in.readLine()-->Line_8 $$ if (line.indexOf(' ') == -1 && line.indexOf('[') == -1 && line.indexOf('/') == -1)[ FD ]
Line_3 $$ String line = in.readLine()-->Line_8 $$ if (line.indexOf(' ') == -1 && line.indexOf('[') == -1 && line.indexOf('/') == -1)[ FD ]
Line_3 $$ String line = in.readLine()-->Line_8 $$ if (line.indexOf(' ') == -1 && line.indexOf('[') == -1 && line.indexOf('/') == -1)[ FD ]
Line_8 $$ if (line.indexOf(' ') == -1 && line.indexOf('[') == -1 && line.indexOf('/') == -1)-->Line_9 $$ line += "/"[ CD ]
Line_3 $$ String line = in.readLine()-->Line_9 $$ line += "/"[ FD ]
Line_9 $$ line += "/"-->Line_9 $$ line += "/"[ FD ]
Line_5 $$ if (line.startsWith("\"")) -->Line_10 $$ int pos = line.indexOf('/')[ CD ]
Line_10 $$ int pos = line.indexOf('/')-->Line_10 $$ int pos = line.indexOf('/')[ CD ]
Line_3 $$ String line = in.readLine()-->Line_10 $$ int pos = line.indexOf('/')[ FD ]
Line_9 $$ line += "/"-->Line_10 $$ int pos = line.indexOf('/')[ FD ]
Line_5 $$ if (line.startsWith("\"")) -->Line_11 $$ if (pos != -1) [ CD ]
Line_10 $$ int pos = line.indexOf('/')-->Line_11 $$ if (pos != -1) [ FD ]
Line_11 $$ if (pos != -1) -->Line_12 $$ Object obj = values[Integer.parseInt(line.substring(0, pos).trim())][ CD ]
Line_3 $$ String line = in.readLine()-->Line_12 $$ Object obj = values[Integer.parseInt(line.substring(0, pos).trim())][ FD ]
Line_9 $$ line += "/"-->Line_12 $$ Object obj = values[Integer.parseInt(line.substring(0, pos).trim())][ FD ]
Line_10 $$ int pos = line.indexOf('/')-->Line_12 $$ Object obj = values[Integer.parseInt(line.substring(0, pos).trim())][ FD ]
Line_11 $$ if (pos != -1) -->Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) [ CD ]
Line_3 $$ String line = in.readLine()-->Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) [ FD ]
Line_9 $$ line += "/"-->Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) [ FD ]
Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) -->Line_14 $$ Object[] arr = (Object[]) obj[ CD ]
Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) -->Line_15 $$ for (int i = 0; i < arr.length; i++) [ CD ]
Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) -->Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) [ CD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_15 $$ for (int i = 0; i < arr.length; i++) [ CD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_15 $$ for (int i = 0; i < arr.length; i++) [ CD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_15 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_16 $$ values[++maxUsed] = arr[i][ CD ]
Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) -->Line_19 $$ Class clazz = obj instanceof Class ? (Class) obj : obj.getClass()[ CD ]
Line_12 $$ Object obj = values[Integer.parseInt(line.substring(0, pos).trim())]-->Line_19 $$ Class clazz = obj instanceof Class ? (Class) obj : obj.getClass()[ FD ]
Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) -->Line_20 $$ Method[] mthds = clazz.getMethods()[ CD ]
Line_20 $$ Method[] mthds = clazz.getMethods()-->Line_20 $$ Method[] mthds = clazz.getMethods()[ CD ]
Line_19 $$ Class clazz = obj instanceof Class ? (Class) obj : obj.getClass()-->Line_20 $$ Method[] mthds = clazz.getMethods()[ FD ]
Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ CD ]
Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) -->Line_13 $$ if (obj instanceof Object[] && pos == line.length() - 1) [ CD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ CD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ CD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_22 $$ if (mthds[i].getName().startsWith(line.substring(pos + 1))) [ CD ]
Line_22 $$ if (mthds[i].getName().startsWith(line.substring(pos + 1))) -->Line_22 $$ if (mthds[i].getName().startsWith(line.substring(pos + 1))) [ CD ]
Line_3 $$ String line = in.readLine()-->Line_22 $$ if (mthds[i].getName().startsWith(line.substring(pos + 1))) [ FD ]
Line_9 $$ line += "/"-->Line_22 $$ if (mthds[i].getName().startsWith(line.substring(pos + 1))) [ FD ]
Line_22 $$ if (mthds[i].getName().startsWith(line.substring(pos + 1))) -->Line_23 $$ values[++maxUsed] = mthds[i][ CD ]
Line_11 $$ if (pos != -1) -->Line_28 $$ StringTokenizer st = new StringTokenizer(line)[ CD ]
Line_28 $$ StringTokenizer st = new StringTokenizer(line)-->Line_29 $$ Object obj = values[Integer.parseInt(st.nextToken())][ FD ]
Line_11 $$ if (pos != -1) -->Line_30 $$ String mthIdx = st.nextToken()[ CD ]
Line_30 $$ String mthIdx = st.nextToken()-->Line_30 $$ String mthIdx = st.nextToken()[ CD ]
Line_28 $$ StringTokenizer st = new StringTokenizer(line)-->Line_30 $$ String mthIdx = st.nextToken()[ FD ]
Line_11 $$ if (pos != -1) -->Line_31 $$ Object[] args = new Object[st.countTokens()][ CD ]
Line_28 $$ StringTokenizer st = new StringTokenizer(line)-->Line_31 $$ Object[] args = new Object[st.countTokens()][ FD ]
Line_11 $$ if (pos != -1) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_11 $$ if (pos != -1) -->Line_11 $$ if (pos != -1) [ CD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_32 $$ for (int i = 0; i < args.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_32 $$ for (int i = 0; i < args.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ CD ]
Line_32 $$ for (int i = 0; i < args.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_32 $$ for (int i = 0; i < args.length; i++) -->Line_33 $$ args[i] = values[Integer.parseInt(st.nextToken())][ CD ]
Line_28 $$ StringTokenizer st = new StringTokenizer(line)-->Line_33 $$ args[i] = values[Integer.parseInt(st.nextToken())][ FD ]
Line_11 $$ if (pos != -1) -->Line_35 $$ if (mthIdx.equals("[")) [ CD ]
Line_30 $$ String mthIdx = st.nextToken()-->Line_35 $$ if (mthIdx.equals("[")) [ FD ]
Line_35 $$ if (mthIdx.equals("[")) -->Line_35 $$ if (mthIdx.equals("[")) [ CD ]
Line_30 $$ String mthIdx = st.nextToken()-->Line_35 $$ if (mthIdx.equals("[")) [ FD ]
Line_35 $$ if (mthIdx.equals("[")) -->Line_36 $$ Object[] result = (Object[]) Array.newInstance((Class) obj, args.length)[ CD ]
Line_35 $$ if (mthIdx.equals("[")) -->Line_37 $$ System.arraycopy(args, 0, result, 0, args.length)[ CD ]
Line_31 $$ Object[] args = new Object[st.countTokens()]-->Line_37 $$ System.arraycopy(args, 0, result, 0, args.length)[ FD ]
Line_36 $$ Object[] result = (Object[]) Array.newInstance((Class) obj, args.length)-->Line_37 $$ System.arraycopy(args, 0, result, 0, args.length)[ FD ]
Line_35 $$ if (mthIdx.equals("[")) -->Line_38 $$ values[++maxUsed] = result[ CD ]
Line_36 $$ Object[] result = (Object[]) Array.newInstance((Class) obj, args.length)-->Line_38 $$ values[++maxUsed] = result[ FD ]
Line_35 $$ if (mthIdx.equals("[")) -->Line_40 $$ Method mth = (Method) values[Integer.parseInt(mthIdx)][ CD ]
Line_30 $$ String mthIdx = st.nextToken()-->Line_40 $$ Method mth = (Method) values[Integer.parseInt(mthIdx)][ FD ]
Line_35 $$ if (mthIdx.equals("[")) -->Line_41 $$ values[++maxUsed] = mth.invoke(obj, args)[ CD ]
Line_41 $$ values[++maxUsed] = mth.invoke(obj, args)-->Line_41 $$ values[++maxUsed] = mth.invoke(obj, args)[ CD ]
Line_40 $$ Method mth = (Method) values[Integer.parseInt(mthIdx)]-->Line_41 $$ values[++maxUsed] = mth.invoke(obj, args)[ FD ]
Line_12 $$ Object obj = values[Integer.parseInt(line.substring(0, pos).trim())]-->Line_41 $$ values[++maxUsed] = mth.invoke(obj, args)[ FD ]
Line_31 $$ Object[] args = new Object[st.countTokens()]-->Line_41 $$ values[++maxUsed] = mth.invoke(obj, args)[ FD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_15 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_15 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_15 $$ for (int i = 0; i < arr.length; i++) -->Line_15 $$ for (int i = 0; i < arr.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ FD ]
Line_21 $$ for (int i = 0; i < mthds.length; i++) -->Line_21 $$ for (int i = 0; i < mthds.length; i++) [ FD ]
Line_32 $$ for (int i = 0; i < args.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_32 $$ for (int i = 0; i < args.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
Line_32 $$ for (int i = 0; i < args.length; i++) -->Line_32 $$ for (int i = 0; i < args.length; i++) [ FD ]
