Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void listen(String hostname, int port, F2<Void, BufferedReader, DataOutputStream> protocol) [ CD ]
Line_2 $$ public void listen(String hostname, int port, F2<Void, BufferedReader, DataOutputStream> protocol) -->Line_3 $$ socket.bind(U.isEmpty(hostname) ? new InetSocketAddress(port) : new InetSocketAddress(hostname, port))[ CD ]
Line_2 $$ public void listen(String hostname, int port, F2<Void, BufferedReader, DataOutputStream> protocol) -->Line_3 $$ socket.bind(U.isEmpty(hostname) ? new InetSocketAddress(port) : new InetSocketAddress(hostname, port))[ FD ]
Line_2 $$ public void listen(String hostname, int port, F2<Void, BufferedReader, DataOutputStream> protocol) -->Line_4 $$ Log.info("Starting TCP/IP server", "host", hostname, "port", port)[ CD ]
Line_2 $$ public void listen(String hostname, int port, F2<Void, BufferedReader, DataOutputStream> protocol) -->Line_4 $$ Log.info("Starting TCP/IP server", "host", hostname, "port", port)[ FD ]
Line_2 $$ public void listen(String hostname, int port, F2<Void, BufferedReader, DataOutputStream> protocol) -->Line_4 $$ Log.info("Starting TCP/IP server", "host", hostname, "port", port)[ FD ]
