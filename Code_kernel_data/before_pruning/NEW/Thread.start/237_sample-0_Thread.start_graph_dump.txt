Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void setupCouchbase(final int couchbasePort) [ CD ]
Line_2 $$ public void setupCouchbase(final int couchbasePort) -->Line_3 $$ final CouchbaseMock couchbase = new CouchbaseMock("localhost", couchbasePort, 1, 1)[ CD ]
Line_2 $$ public void setupCouchbase(final int couchbasePort) -->Line_4 $$ couchbase.setRequiredHttpAuthorization(null)[ CD ]
Line_3 $$ final CouchbaseMock couchbase = new CouchbaseMock("localhost", couchbasePort, 1, 1)-->Line_4 $$ couchbase.setRequiredHttpAuthorization(null)[ FD ]
Line_2 $$ public void setupCouchbase(final int couchbasePort) -->Line_5 $$ final Thread thread = new Thread(couchbase)[ CD ]
Line_2 $$ public void setupCouchbase(final int couchbasePort) -->Line_6 $$ thread.start()[ CD ]
Line_5 $$ final Thread thread = new Thread(couchbase)-->Line_6 $$ thread.start()[ FD ]
Line_2 $$ public void setupCouchbase(final int couchbasePort) -->Line_7 $$ return Pair.of(couchbase, thread)[ CD ]
Line_7 $$ return Pair.of(couchbase, thread)-->Line_7 $$ return Pair.of(couchbase, thread)[ CD ]
Line_3 $$ final CouchbaseMock couchbase = new CouchbaseMock("localhost", couchbasePort, 1, 1)-->Line_7 $$ return Pair.of(couchbase, thread)[ FD ]
Line_5 $$ final Thread thread = new Thread(couchbase)-->Line_7 $$ return Pair.of(couchbase, thread)[ FD ]
