Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void runTest(final Class<?> c) [ CD ]
Line_2 $$ public void runTest(final Class<?> c) -->Line_3 $$ Thread t = new Thread(new Runnable() [ CD ]
Line_3 $$ Thread t = new Thread(new Runnable() -->Line_5 $$ assertEquals(3000, c.getAnnotations().length)[ CD ]
Line_2 $$ public void runTest(final Class<?> c) -->Line_5 $$ assertEquals(3000, c.getAnnotations().length)[ FD ]
Line_2 $$ public void runTest(final Class<?> c) -->Line_3 $$ Thread t = new Thread(new Runnable() [ FD ]
Line_2 $$ public void runTest(final Class<?> c) -->Line_8 $$ t.start()[ CD ]
Line_3 $$ Thread t = new Thread(new Runnable() -->Line_8 $$ t.start()[ FD ]
