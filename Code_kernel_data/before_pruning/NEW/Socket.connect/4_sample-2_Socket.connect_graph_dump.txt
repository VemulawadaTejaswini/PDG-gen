Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) [ CD ]
Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) -->Line_3 $$ if (localAddress != null) [ CD ]
Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) -->Line_3 $$ if (localAddress != null) [ FD ]
Line_3 $$ if (localAddress != null) -->Line_4 $$ sock.bind(localAddress)[ CD ]
Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) -->Line_4 $$ sock.bind(localAddress)[ FD ]
Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) -->Line_6 $$ sock.connect(remoteAddress, connectTimeout)[ CD ]
Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) -->Line_6 $$ sock.connect(remoteAddress, connectTimeout)[ FD ]
Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) -->Line_6 $$ sock.connect(remoteAddress, connectTimeout)[ FD ]
Line_2 $$ public void connectSocket(final int connectTimeout, final Socket socket, final HttpHost host, final InetSocketAddress remoteAddress, final InetSocketAddress localAddress, final HttpContext context) -->Line_7 $$ throw new ConnectTimeoutException(ex, host, remoteAddress.getAddress())[ FD ]
