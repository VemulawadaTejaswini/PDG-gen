Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) [ CD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_3 $$ socket = sslfac.createSocket(host, port, localAddress, localPort)[ CD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_3 $$ socket = sslfac.createSocket(host, port, localAddress, localPort)[ FD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_3 $$ socket = sslfac.createSocket(host, port, localAddress, localPort)[ FD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_3 $$ socket = sslfac.createSocket(host, port, localAddress, localPort)[ FD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_3 $$ socket = sslfac.createSocket(host, port, localAddress, localPort)[ FD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_4 $$ socket.bind(localaddr)[ CD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_5 $$ socket.connect(remoteaddr, timeout)[ CD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_6 $$ setSocket(socket)[ CD ]
Line_2 $$ public void createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) -->Line_7 $$ return wrapSocket(socket)[ CD ]
Line_7 $$ return wrapSocket(socket)-->Line_7 $$ return wrapSocket(socket)[ CD ]
