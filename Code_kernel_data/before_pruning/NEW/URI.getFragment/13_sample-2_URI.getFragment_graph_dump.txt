Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testExtractURIComponent() [ CD ]
Line_2 $$ public void testExtractURIComponent() -->Line_3 $$ URI uri = new URI(uriStr)[ CD ]
Line_2 $$ public void testExtractURIComponent() -->Line_4 $$ testExtractURIComponent2(uriStr, "scheme", uri.getScheme())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_4 $$ testExtractURIComponent2(uriStr, "scheme", uri.getScheme())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_5 $$ testExtractURIComponent2(uriStr, "authority", uri.getAuthority())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_5 $$ testExtractURIComponent2(uriStr, "authority", uri.getAuthority())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_6 $$ testExtractURIComponent2(uriStr, "path", uri.getPath())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_6 $$ testExtractURIComponent2(uriStr, "path", uri.getPath())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_7 $$ testExtractURIComponent2(uriStr, "query", uri.getQuery())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_7 $$ testExtractURIComponent2(uriStr, "query", uri.getQuery())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_8 $$ testExtractURIComponent2(uriStr, "fragment", uri.getFragment())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_8 $$ testExtractURIComponent2(uriStr, "fragment", uri.getFragment())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_9 $$ testExtractURIComponent2(uriStr, "host", uri.getHost())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_9 $$ testExtractURIComponent2(uriStr, "host", uri.getHost())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_10 $$ testExtractURIComponent2(uriStr, "port", uri.getPort())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_10 $$ testExtractURIComponent2(uriStr, "port", uri.getPort())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_11 $$ testExtractURIComponent2(uriStr, "schemeSpecificPart", uri.getSchemeSpecificPart())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_11 $$ testExtractURIComponent2(uriStr, "schemeSpecificPart", uri.getSchemeSpecificPart())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_12 $$ testExtractURIComponent2(uriStr, "userInfo", uri.getUserInfo())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_12 $$ testExtractURIComponent2(uriStr, "userInfo", uri.getUserInfo())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_13 $$ testExtractURIComponent2(uriStr, "illegalType", uri.getUserInfo())[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_13 $$ testExtractURIComponent2(uriStr, "illegalType", uri.getUserInfo())[ FD ]
Line_2 $$ public void testExtractURIComponent() -->Line_14 $$ fail()[ CD ]
Line_2 $$ public void testExtractURIComponent() -->Line_15 $$ testExtractURIComponent2("invalidURI:", "host", uri.getHost(), false)[ CD ]
Line_3 $$ URI uri = new URI(uriStr)-->Line_15 $$ testExtractURIComponent2("invalidURI:", "host", uri.getHost(), false)[ FD ]
