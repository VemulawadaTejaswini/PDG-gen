Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void parseFeedUri(String catalogTableUri) [ CD ]
Line_2 $$ public void parseFeedUri(String catalogTableUri) -->Line_3 $$ if (table == null || table.length() == 0) [ CD ]
Line_2 $$ public void parseFeedUri(String catalogTableUri) -->Line_6 $$ String partRaw = tableUri.getFragment()[ CD ]
Line_6 $$ String partRaw = tableUri.getFragment()-->Line_6 $$ String partRaw = tableUri.getFragment()[ CD ]
Line_2 $$ public void parseFeedUri(String catalogTableUri) -->Line_7 $$ if (partRaw == null || partRaw.length() == 0) [ CD ]
Line_6 $$ String partRaw = tableUri.getFragment()-->Line_7 $$ if (partRaw == null || partRaw.length() == 0) [ FD ]
Line_2 $$ public void parseFeedUri(String catalogTableUri) -->Line_10 $$ final String rawPartition = partRaw.replaceAll(DOLLAR_EXPR_START_NORMALIZED, DOLLAR_EXPR_START_REGEX).replaceAll(EXPR_CLOSE_NORMALIZED, EXPR_CLOSE_REGEX)[ CD ]
Line_10 $$ final String rawPartition = partRaw.replaceAll(DOLLAR_EXPR_START_NORMALIZED, DOLLAR_EXPR_START_REGEX).replaceAll(EXPR_CLOSE_NORMALIZED, EXPR_CLOSE_REGEX)-->Line_10 $$ final String rawPartition = partRaw.replaceAll(DOLLAR_EXPR_START_NORMALIZED, DOLLAR_EXPR_START_REGEX).replaceAll(EXPR_CLOSE_NORMALIZED, EXPR_CLOSE_REGEX)[ CD ]
Line_6 $$ String partRaw = tableUri.getFragment()-->Line_10 $$ final String rawPartition = partRaw.replaceAll(DOLLAR_EXPR_START_NORMALIZED, DOLLAR_EXPR_START_REGEX).replaceAll(EXPR_CLOSE_NORMALIZED, EXPR_CLOSE_REGEX)[ FD ]
