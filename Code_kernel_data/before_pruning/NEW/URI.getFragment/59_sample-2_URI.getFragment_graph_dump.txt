Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) [ CD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_3 $$ int newPort = uri.getPort()[ CD ]
Line_3 $$ int newPort = uri.getPort()-->Line_3 $$ int newPort = uri.getPort()[ CD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_3 $$ int newPort = uri.getPort()[ FD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_4 $$ if (newPort < 0) [ CD ]
Line_3 $$ int newPort = uri.getPort()-->Line_4 $$ if (newPort < 0) [ FD ]
Line_3 $$ int newPort = uri.getPort()-->Line_6 $$ newPort = uri.toURL().getDefaultPort()[ FD ]
Line_6 $$ newPort = uri.toURL().getDefaultPort()-->Line_6 $$ newPort = uri.toURL().getDefaultPort()[ FD ]
Line_6 $$ newPort = uri.toURL().getDefaultPort()-->Line_6 $$ newPort = uri.toURL().getDefaultPort()[ CD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_6 $$ newPort = uri.toURL().getDefaultPort()[ FD ]
Line_3 $$ int newPort = uri.getPort()-->Line_8 $$ newPort = ANY_PORT[ FD ]
Line_6 $$ newPort = uri.toURL().getDefaultPort()-->Line_8 $$ newPort = ANY_PORT[ FD ]
Line_8 $$ newPort = ANY_PORT-->Line_8 $$ newPort = ANY_PORT[ FD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_11 $$ return new MatchInfo(uri.getScheme(), uri.getHost(), newPort, uri.getPath(), uri.getQuery(), uri.getFragment(), ANY_REALM, method)[ CD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_11 $$ return new MatchInfo(uri.getScheme(), uri.getHost(), newPort, uri.getPath(), uri.getQuery(), uri.getFragment(), ANY_REALM, method)[ FD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_11 $$ return new MatchInfo(uri.getScheme(), uri.getHost(), newPort, uri.getPath(), uri.getQuery(), uri.getFragment(), ANY_REALM, method)[ FD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_11 $$ return new MatchInfo(uri.getScheme(), uri.getHost(), newPort, uri.getPath(), uri.getQuery(), uri.getFragment(), ANY_REALM, method)[ FD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_11 $$ return new MatchInfo(uri.getScheme(), uri.getHost(), newPort, uri.getPath(), uri.getQuery(), uri.getFragment(), ANY_REALM, method)[ FD ]
Line_2 $$ public void fromUri(final URI uri, final HttpMethod method) -->Line_11 $$ return new MatchInfo(uri.getScheme(), uri.getHost(), newPort, uri.getPath(), uri.getQuery(), uri.getFragment(), ANY_REALM, method)[ FD ]
