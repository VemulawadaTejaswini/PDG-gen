Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void URIBuilder(URI base) [ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_3 $$ if (base == null) [ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_3 $$ if (base == null) [ FD ]
Line_3 $$ if (base == null) -->Line_5 $$ return[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_7 $$ scheme = base.getScheme()[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_7 $$ scheme = base.getScheme()[ FD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_8 $$ userInfo = base.getUserInfo()[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_8 $$ userInfo = base.getUserInfo()[ FD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_9 $$ host = base.getHost()[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_9 $$ host = base.getHost()[ FD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_10 $$ port = base.getPort() == -1 ? null : base.getPort()[ FD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_10 $$ port = base.getPort() == -1 ? null : base.getPort()[ FD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_11 $$ path = base.getPath()[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_11 $$ path = base.getPath()[ FD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_12 $$ fragment = base.getFragment()[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_12 $$ fragment = base.getFragment()[ FD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_13 $$ if (Util.isEmpty(base.getQuery())) [ CD ]
Line_13 $$ if (Util.isEmpty(base.getQuery())) -->Line_13 $$ if (Util.isEmpty(base.getQuery())) [ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_13 $$ if (Util.isEmpty(base.getQuery())) [ FD ]
Line_13 $$ if (Util.isEmpty(base.getQuery())) -->Line_15 $$ return[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_17 $$ params.putAll(URIUtil.getParameterMap(base))[ CD ]
Line_2 $$ public void URIBuilder(URI base) -->Line_17 $$ params.putAll(URIUtil.getParameterMap(base))[ FD ]
