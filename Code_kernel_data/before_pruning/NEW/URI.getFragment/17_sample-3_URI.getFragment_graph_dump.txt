Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void resolve(String baseUri, String pathToResolve) [ CD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_3 $$ if (pathToResolve.startsWith("?")) [ CD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_3 $$ if (pathToResolve.startsWith("?")) [ FD ]
Line_3 $$ if (pathToResolve.startsWith("?")) -->Line_3 $$ if (pathToResolve.startsWith("?")) [ CD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_3 $$ if (pathToResolve.startsWith("?")) [ FD ]
Line_3 $$ if (pathToResolve.startsWith("?")) -->Line_4 $$ if (uri.getFragment() != null) [ CD ]
Line_3 $$ if (pathToResolve.startsWith("?")) -->Line_7 $$ return uri.toString() + pathToResolve[ CD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_9 $$ uri = uri.resolve(pathToResolve)[ CD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_9 $$ uri = uri.resolve(pathToResolve)[ FD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_10 $$ String path = uri.getPath()[ CD ]
Line_10 $$ String path = uri.getPath()-->Line_10 $$ String path = uri.getPath()[ CD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_11 $$ if (path != null) [ CD ]
Line_10 $$ String path = uri.getPath()-->Line_11 $$ if (path != null) [ FD ]
Line_11 $$ if (path != null) -->Line_12 $$ path = JsonLdUrl.removeDotSegments(uri.getPath(), true)[ CD ]
Line_10 $$ String path = uri.getPath()-->Line_12 $$ path = JsonLdUrl.removeDotSegments(uri.getPath(), true)[ FD ]
Line_12 $$ path = JsonLdUrl.removeDotSegments(uri.getPath(), true)-->Line_12 $$ path = JsonLdUrl.removeDotSegments(uri.getPath(), true)[ FD ]
Line_12 $$ path = JsonLdUrl.removeDotSegments(uri.getPath(), true)-->Line_12 $$ path = JsonLdUrl.removeDotSegments(uri.getPath(), true)[ CD ]
Line_2 $$ public void resolve(String baseUri, String pathToResolve) -->Line_14 $$ return new URI(uri.getScheme(), uri.getAuthority(), path, uri.getQuery(), uri.getFragment()).toString()[ CD ]
Line_14 $$ return new URI(uri.getScheme(), uri.getAuthority(), path, uri.getQuery(), uri.getFragment()).toString()-->Line_14 $$ return new URI(uri.getScheme(), uri.getAuthority(), path, uri.getQuery(), uri.getFragment()).toString()[ CD ]
