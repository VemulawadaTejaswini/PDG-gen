Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void normalizeSyntax(final URI uri) [ CD ]
Line_2 $$ public void normalizeSyntax(final URI uri) -->Line_3 $$ final StringBuilder normalized = new StringBuilder(ref.toASCIIString())[ CD ]
Line_2 $$ public void normalizeSyntax(final URI uri) -->Line_5 $$ if (uri.getQuery() != null) [ CD ]
Line_2 $$ public void normalizeSyntax(final URI uri) -->Line_5 $$ if (uri.getQuery() != null) [ FD ]
Line_5 $$ if (uri.getQuery() != null) -->Line_6 $$ normalized.append('?').append(uri.getRawQuery())[ CD ]
Line_3 $$ final StringBuilder normalized = new StringBuilder(ref.toASCIIString())-->Line_6 $$ normalized.append('?').append(uri.getRawQuery())[ FD ]
Line_2 $$ public void normalizeSyntax(final URI uri) -->Line_6 $$ normalized.append('?').append(uri.getRawQuery())[ FD ]
Line_2 $$ public void normalizeSyntax(final URI uri) -->Line_8 $$ if (uri.getFragment() != null) [ CD ]
Line_2 $$ public void normalizeSyntax(final URI uri) -->Line_8 $$ if (uri.getFragment() != null) [ FD ]
Line_8 $$ if (uri.getFragment() != null) -->Line_9 $$ normalized.append('#').append(uri.getRawFragment())[ CD ]
Line_3 $$ final StringBuilder normalized = new StringBuilder(ref.toASCIIString())-->Line_9 $$ normalized.append('#').append(uri.getRawFragment())[ FD ]
Line_2 $$ public void normalizeSyntax(final URI uri) -->Line_9 $$ normalized.append('#').append(uri.getRawFragment())[ FD ]
