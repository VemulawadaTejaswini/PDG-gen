Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void parseURL(String uri) [ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_3 $$ String sessVars = jdbcURI.getPath()[ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_3 $$ String sessVars = jdbcURI.getPath()[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) [ CD ]
Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) -->Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) [ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) [ FD ]
Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) -->Line_5 $$ String dbName = ""[ CD ]
Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) -->Line_6 $$ sessVars = sessVars.substring(1)[ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_6 $$ sessVars = sessVars.substring(1)[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_6 $$ sessVars = sessVars.substring(1)[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_6 $$ sessVars = sessVars.substring(1)[ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_6 $$ sessVars = sessVars.substring(1)[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_6 $$ sessVars = sessVars.substring(1)[ FD ]
Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) -->Line_7 $$ if (!sessVars.contains(";")) [ CD ]
Line_7 $$ if (!sessVars.contains(";")) -->Line_7 $$ if (!sessVars.contains(";")) [ CD ]
Line_7 $$ if (!sessVars.contains(";")) -->Line_7 $$ if (!sessVars.contains(";")) [ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_7 $$ if (!sessVars.contains(";")) [ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_7 $$ if (!sessVars.contains(";")) [ FD ]
Line_7 $$ if (!sessVars.contains(";")) -->Line_8 $$ dbName = sessVars[ CD ]
Line_5 $$ String dbName = ""-->Line_8 $$ dbName = sessVars[ FD ]
Line_8 $$ dbName = sessVars-->Line_8 $$ dbName = sessVars[ FD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_8 $$ dbName = sessVars[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_8 $$ dbName = sessVars[ FD ]
Line_7 $$ if (!sessVars.contains(";")) -->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ CD ]
Line_5 $$ String dbName = ""-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ FD ]
Line_8 $$ dbName = sessVars-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ FD ]
Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ FD ]
Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ FD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))[ FD ]
Line_7 $$ if (!sessVars.contains(";")) -->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)-->Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)[ FD ]
Line_7 $$ if (!sessVars.contains(";")) -->Line_12 $$ if (sessVars != null) [ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_12 $$ if (sessVars != null) [ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_12 $$ if (sessVars != null) [ FD ]
Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)-->Line_12 $$ if (sessVars != null) [ FD ]
Line_12 $$ if (sessVars != null) -->Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)[ CD ]
Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)-->Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)[ CD ]
Line_3 $$ String sessVars = jdbcURI.getPath()-->Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)[ FD ]
Line_6 $$ sessVars = sessVars.substring(1)-->Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)[ FD ]
Line_11 $$ sessVars = sessVars.substring(sessVars.indexOf(';') + 1)-->Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)[ FD ]
Line_12 $$ if (sessVars != null) -->Line_14 $$ while (sessMatcher.find()) [ CD ]
Line_12 $$ if (sessVars != null) -->Line_12 $$ if (sessVars != null) [ CD ]
Line_14 $$ while (sessMatcher.find()) -->Line_14 $$ while (sessMatcher.find()) [ CD ]
Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)-->Line_14 $$ while (sessMatcher.find()) [ FD ]
Line_14 $$ while (sessMatcher.find()) -->Line_15 $$ if (connParams.getSessionVars().put(sessMatcher.group(1), sessMatcher.group(2)) != null) [ CD ]
Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)-->Line_15 $$ if (connParams.getSessionVars().put(sessMatcher.group(1), sessMatcher.group(2)) != null) [ FD ]
Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)-->Line_15 $$ if (connParams.getSessionVars().put(sessMatcher.group(1), sessMatcher.group(2)) != null) [ FD ]
Line_13 $$ Matcher sessMatcher = pattern.matcher(sessVars)-->Line_16 $$ throw new JdbcUriParseException("Bad URL format: Multiple values for property " + sessMatcher.group(1))[ FD ]
Line_4 $$ if ((sessVars != null) && !sessVars.isEmpty()) -->Line_22 $$ if (!dbName.isEmpty()) [ CD ]
Line_22 $$ if (!dbName.isEmpty()) -->Line_22 $$ if (!dbName.isEmpty()) [ CD ]
Line_22 $$ if (!dbName.isEmpty()) -->Line_22 $$ if (!dbName.isEmpty()) [ CD ]
Line_5 $$ String dbName = ""-->Line_22 $$ if (!dbName.isEmpty()) [ FD ]
Line_8 $$ dbName = sessVars-->Line_22 $$ if (!dbName.isEmpty()) [ FD ]
Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))-->Line_22 $$ if (!dbName.isEmpty()) [ FD ]
Line_22 $$ if (!dbName.isEmpty()) -->Line_23 $$ connParams.setDbName(dbName)[ CD ]
Line_5 $$ String dbName = ""-->Line_23 $$ connParams.setDbName(dbName)[ FD ]
Line_8 $$ dbName = sessVars-->Line_23 $$ connParams.setDbName(dbName)[ FD ]
Line_10 $$ dbName = sessVars.substring(0, sessVars.indexOf(';'))-->Line_23 $$ connParams.setDbName(dbName)[ FD ]
Line_2 $$ public void parseURL(String uri) -->Line_26 $$ String confStr = jdbcURI.getQuery()[ CD ]
Line_26 $$ String confStr = jdbcURI.getQuery()-->Line_26 $$ String confStr = jdbcURI.getQuery()[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_27 $$ if (confStr != null) [ CD ]
Line_26 $$ String confStr = jdbcURI.getQuery()-->Line_27 $$ if (confStr != null) [ FD ]
Line_27 $$ if (confStr != null) -->Line_28 $$ Matcher confMatcher = pattern.matcher(confStr)[ CD ]
Line_28 $$ Matcher confMatcher = pattern.matcher(confStr)-->Line_28 $$ Matcher confMatcher = pattern.matcher(confStr)[ CD ]
Line_26 $$ String confStr = jdbcURI.getQuery()-->Line_28 $$ Matcher confMatcher = pattern.matcher(confStr)[ FD ]
Line_27 $$ if (confStr != null) -->Line_29 $$ while (confMatcher.find()) [ CD ]
Line_27 $$ if (confStr != null) -->Line_27 $$ if (confStr != null) [ CD ]
Line_29 $$ while (confMatcher.find()) -->Line_29 $$ while (confMatcher.find()) [ CD ]
Line_28 $$ Matcher confMatcher = pattern.matcher(confStr)-->Line_29 $$ while (confMatcher.find()) [ FD ]
Line_29 $$ while (confMatcher.find()) -->Line_30 $$ connParams.getHiveConfs().put(confMatcher.group(1), confMatcher.group(2))[ CD ]
Line_28 $$ Matcher confMatcher = pattern.matcher(confStr)-->Line_30 $$ connParams.getHiveConfs().put(confMatcher.group(1), confMatcher.group(2))[ FD ]
Line_28 $$ Matcher confMatcher = pattern.matcher(confStr)-->Line_30 $$ connParams.getHiveConfs().put(confMatcher.group(1), confMatcher.group(2))[ FD ]
Line_2 $$ public void parseURL(String uri) -->Line_33 $$ String varStr = jdbcURI.getFragment()[ CD ]
Line_33 $$ String varStr = jdbcURI.getFragment()-->Line_33 $$ String varStr = jdbcURI.getFragment()[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_34 $$ if (varStr != null) [ CD ]
Line_33 $$ String varStr = jdbcURI.getFragment()-->Line_34 $$ if (varStr != null) [ FD ]
Line_34 $$ if (varStr != null) -->Line_35 $$ Matcher varMatcher = pattern.matcher(varStr)[ CD ]
Line_35 $$ Matcher varMatcher = pattern.matcher(varStr)-->Line_35 $$ Matcher varMatcher = pattern.matcher(varStr)[ CD ]
Line_33 $$ String varStr = jdbcURI.getFragment()-->Line_35 $$ Matcher varMatcher = pattern.matcher(varStr)[ FD ]
Line_34 $$ if (varStr != null) -->Line_36 $$ while (varMatcher.find()) [ CD ]
Line_34 $$ if (varStr != null) -->Line_34 $$ if (varStr != null) [ CD ]
Line_36 $$ while (varMatcher.find()) -->Line_36 $$ while (varMatcher.find()) [ CD ]
Line_35 $$ Matcher varMatcher = pattern.matcher(varStr)-->Line_36 $$ while (varMatcher.find()) [ FD ]
Line_36 $$ while (varMatcher.find()) -->Line_37 $$ connParams.getHiveVars().put(varMatcher.group(1), varMatcher.group(2))[ CD ]
Line_35 $$ Matcher varMatcher = pattern.matcher(varStr)-->Line_37 $$ connParams.getHiveVars().put(varMatcher.group(1), varMatcher.group(2))[ FD ]
Line_35 $$ Matcher varMatcher = pattern.matcher(varStr)-->Line_37 $$ connParams.getHiveVars().put(varMatcher.group(1), varMatcher.group(2))[ FD ]
Line_2 $$ public void parseURL(String uri) -->Line_40 $$ handleParamDeprecation(connParams.getSessionVars(), connParams.getSessionVars(), JdbcConnectionParams.AUTH_QOP_DEPRECATED, JdbcConnectionParams.AUTH_QOP, newUsage)[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_42 $$ handleParamDeprecation(connParams.getHiveConfs(), connParams.getSessionVars(), JdbcConnectionParams.TRANSPORT_MODE_DEPRECATED, JdbcConnectionParams.TRANSPORT_MODE, newUsage)[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_45 $$ handleParamDeprecation(connParams.getHiveConfs(), connParams.getSessionVars(), JdbcConnectionParams.HTTP_PATH_DEPRECATED, JdbcConnectionParams.HTTP_PATH, newUsage)[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_47 $$ if (connParams.isEmbeddedMode()) [ CD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_47 $$ if (connParams.isEmbeddedMode()) [ CD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_48 $$ connParams.setHost(jdbcURI.getHost())[ CD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_49 $$ connParams.setPort(jdbcURI.getPort())[ CD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_51 $$ String resolvedAuthorityString = resolveAuthority(connParams)[ CD ]
Line_51 $$ String resolvedAuthorityString = resolveAuthority(connParams)-->Line_51 $$ String resolvedAuthorityString = resolveAuthority(connParams)[ CD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_52 $$ LOG.info("Resolved authority: " + resolvedAuthorityString)[ CD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)[ FD ]
Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)-->Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)[ FD ]
Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)-->Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)[ FD ]
Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)-->Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)[ FD ]
Line_51 $$ String resolvedAuthorityString = resolveAuthority(connParams)-->Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)[ FD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_54 $$ connParams.setJdbcUriString(uri)[ CD ]
Line_2 $$ public void parseURL(String uri) -->Line_54 $$ connParams.setJdbcUriString(uri)[ FD ]
Line_53 $$ uri = uri.replace(dummyAuthorityString, resolvedAuthorityString)-->Line_54 $$ connParams.setJdbcUriString(uri)[ FD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_55 $$ URI resolvedAuthorityURI = null[ CD ]
Line_55 $$ URI resolvedAuthorityURI = null-->Line_57 $$ resolvedAuthorityURI = new URI(null, resolvedAuthorityString, null, null, null)[ FD ]
Line_57 $$ resolvedAuthorityURI = new URI(null, resolvedAuthorityString, null, null, null)-->Line_57 $$ resolvedAuthorityURI = new URI(null, resolvedAuthorityString, null, null, null)[ FD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_61 $$ connParams.setHost(resolvedAuthorityURI.getHost())[ CD ]
Line_55 $$ URI resolvedAuthorityURI = null-->Line_61 $$ connParams.setHost(resolvedAuthorityURI.getHost())[ FD ]
Line_57 $$ resolvedAuthorityURI = new URI(null, resolvedAuthorityString, null, null, null)-->Line_61 $$ connParams.setHost(resolvedAuthorityURI.getHost())[ FD ]
Line_47 $$ if (connParams.isEmbeddedMode()) -->Line_62 $$ connParams.setPort(resolvedAuthorityURI.getPort())[ CD ]
Line_55 $$ URI resolvedAuthorityURI = null-->Line_62 $$ connParams.setPort(resolvedAuthorityURI.getPort())[ FD ]
Line_57 $$ resolvedAuthorityURI = new URI(null, resolvedAuthorityString, null, null, null)-->Line_62 $$ connParams.setPort(resolvedAuthorityURI.getPort())[ FD ]
