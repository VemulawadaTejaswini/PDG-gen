Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void getProxyLoadMatrix() [ CD ]
Line_2 $$ public void getProxyLoadMatrix() -->Line_3 $$ Transaction txn = Transaction.currentTxn()[ CD ]
Line_3 $$ Transaction txn = Transaction.currentTxn()-->Line_3 $$ Transaction.currentTxn()[ CD ]
Line_2 $$ public void getProxyLoadMatrix() -->Line_4 $$ txn.prepareAutoCloseStatement(PROXY_ASSIGNMENT_MATRIX)[ CD ]
Line_3 $$ Transaction txn = Transaction.currentTxn()-->Line_4 $$ txn.prepareAutoCloseStatement(PROXY_ASSIGNMENT_MATRIX)[ FD ]
Line_2 $$ public void getProxyLoadMatrix() -->Line_5 $$ ResultSet rs = pstmt.executeQuery()[ CD ]
Line_5 $$ ResultSet rs = pstmt.executeQuery()-->Line_5 $$ pstmt.executeQuery()[ CD ]
Line_2 $$ public void getProxyLoadMatrix() -->Line_6 $$ while (rs.next()) [ CD ]
Line_2 $$ public void getProxyLoadMatrix() -->Line_2 $$ public void getProxyLoadMatrix() [ CD ]
Line_6 $$ while (rs.next()) -->Line_6 $$ rs.next()[ CD ]
Line_5 $$ ResultSet rs = pstmt.executeQuery()-->Line_6 $$ rs.next()[ FD ]
Line_6 $$ while (rs.next()) -->Line_7 $$ l.add(new Pair<Long, Integer>(rs.getLong(1), rs.getInt(2)))[ CD ]
Line_5 $$ ResultSet rs = pstmt.executeQuery()-->Line_7 $$ rs.getLong(1)[ FD ]
Line_5 $$ ResultSet rs = pstmt.executeQuery()-->Line_7 $$ rs.getInt(2)[ FD ]
