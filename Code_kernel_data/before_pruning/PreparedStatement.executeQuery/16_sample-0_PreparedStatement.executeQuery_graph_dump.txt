Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void doRun(Connection cx) [ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_3 $$ String sql = format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)[ CD ]
Line_3 $$ String sql = format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)-->Line_3 $$ format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)[ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_4 $$ open(cx.prepareStatement(log(sql, LOG, namespace)))[ CD ]
Line_3 $$ String sql = format("SELECT count(*) FROM %s WHERE namespace = ?", CONFLICTS)-->Line_4 $$ log(sql, LOG, namespace)[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_5 $$ ps.setString(1, namespace)[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_5 $$ ps.setString(1, namespace)[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_6 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_6 $$ ResultSet rs = ps.executeQuery()-->Line_6 $$ ps.executeQuery()[ CD ]
Line_4 $$ PreparedStatement ps = open(cx.prepareStatement(log(sql, LOG, namespace)))-->Line_6 $$ ps.executeQuery()[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_7 $$ while (rs.next()) [ CD ]
Line_2 $$ public void doRun(Connection cx) -->Line_2 $$ public void doRun(Connection cx) [ CD ]
Line_7 $$ while (rs.next()) -->Line_7 $$ rs.next()[ CD ]
Line_6 $$ ResultSet rs = ps.executeQuery()-->Line_7 $$ rs.next()[ FD ]
Line_7 $$ while (rs.next()) -->Line_8 $$ rs.getInt(1)[ CD ]
Line_6 $$ ResultSet rs = ps.executeQuery()-->Line_8 $$ rs.getInt(1)[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_10 $$ rs.close()[ CD ]
Line_6 $$ ResultSet rs = ps.executeQuery()-->Line_10 $$ rs.close()[ FD ]
Line_2 $$ public void doRun(Connection cx) -->Line_11 $$ return Integer.valueOf(count);[ CD ]
Line_11 $$ return Integer.valueOf(count);-->Line_11 $$ Integer.valueOf(count)[ CD ]
