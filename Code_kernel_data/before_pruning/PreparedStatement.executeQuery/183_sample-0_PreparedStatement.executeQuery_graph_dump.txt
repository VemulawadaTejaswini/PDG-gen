Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void assertScalarResult(String queryText, int expectedValue) [ CD ]
Line_2 $$ public void assertScalarResult(String queryText, int expectedValue) -->Line_3 $$ PreparedStatement ps = chattyPrepare(queryText)[ CD ]
Line_3 $$ PreparedStatement ps = chattyPrepare(queryText)-->Line_3 $$ chattyPrepare(queryText)[ CD ]
Line_2 $$ public void assertScalarResult(String queryText, int expectedValue) -->Line_4 $$ ResultSet rs = ps.executeQuery()[ CD ]
Line_4 $$ ResultSet rs = ps.executeQuery()-->Line_4 $$ ps.executeQuery()[ CD ]
Line_3 $$ PreparedStatement ps = chattyPrepare(queryText)-->Line_4 $$ ps.executeQuery()[ FD ]
Line_2 $$ public void assertScalarResult(String queryText, int expectedValue) -->Line_5 $$ rs.next()[ CD ]
Line_4 $$ ResultSet rs = ps.executeQuery()-->Line_5 $$ rs.next()[ FD ]
Line_2 $$ public void assertScalarResult(String queryText, int expectedValue) -->Line_6 $$ assertEquals(expectedValue, rs.getInt(1))[ CD ]
Line_4 $$ ResultSet rs = ps.executeQuery()-->Line_6 $$ rs.getInt(1)[ FD ]
Line_2 $$ public void assertScalarResult(String queryText, int expectedValue) -->Line_7 $$ rs.close()[ CD ]
Line_4 $$ ResultSet rs = ps.executeQuery()-->Line_7 $$ rs.close()[ FD ]
