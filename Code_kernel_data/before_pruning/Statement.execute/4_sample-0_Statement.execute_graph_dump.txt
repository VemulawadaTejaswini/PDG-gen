Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void testShowPlan() [ CD ]
Line_2 $$ public void testShowPlan() -->Line_3 $$ Statement s = conn.createStatement()[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_3 $$ conn.createStatement()[ CD ]
Line_2 $$ public void testShowPlan() -->Line_4 $$ assertFalse(s.execute("SET SHOWPLAN ON"))[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_4 $$ s.execute("SET SHOWPLAN ON")[ FD ]
Line_2 $$ public void testShowPlan() -->Line_5 $$ assertTrue(s.execute("SELECT 1"))[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_5 $$ s.execute("SELECT 1")[ FD ]
Line_2 $$ public void testShowPlan() -->Line_6 $$ assertTrue(s.execute("SHOW PLAN"))[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_6 $$ s.execute("SHOW PLAN")[ FD ]
Line_2 $$ public void testShowPlan() -->Line_7 $$ ResultSet rs = s.getResultSet()[ CD ]
Line_7 $$ ResultSet rs = s.getResultSet()-->Line_7 $$ s.getResultSet()[ CD ]
Line_3 $$ Statement s = conn.createStatement()-->Line_7 $$ s.getResultSet()[ FD ]
Line_2 $$ public void testShowPlan() -->Line_8 $$ assertTrue(rs.next())[ CD ]
Line_7 $$ ResultSet rs = s.getResultSet()-->Line_8 $$ rs.next()[ FD ]
Line_2 $$ public void testShowPlan() -->Line_9 $$ String str = rs.getString(1)[ CD ]
Line_9 $$ String str = rs.getString(1)-->Line_9 $$ rs.getString(1)[ CD ]
Line_7 $$ ResultSet rs = s.getResultSet()-->Line_9 $$ rs.getString(1)[ FD ]
Line_2 $$ public void testShowPlan() -->Line_10 $$ assertTrue(str.startsWith("ProjectNode\n  + Relational Node ID:0\n  + Output Columns:expr1 (integer)\n  + Statistics:\n    0: Node Output Rows: 1"))[ CD ]
Line_9 $$ String str = rs.getString(1)-->Line_10 $$ str.startsWith("ProjectNode\n  + Relational Node ID:0\n  + Output Columns:expr1 (integer)\n  + Statistics:\n    0: Node Output Rows: 1")[ FD ]
