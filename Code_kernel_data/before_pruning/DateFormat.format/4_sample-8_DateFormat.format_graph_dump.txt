Line_0 $$ Entry-->Line_1 $$ public class func [ CD ]
Line_1 $$ public class func -->Line_2 $$ public void format(final JSON json, final Context context, final Object src, final Object o, final OutputSource out) [ CD ]
Line_2 $$ public void format(final JSON json, final Context context, final Object src, final Object o, final OutputSource out) -->Line_3 $$ DateFormat f = context.getDateFormat()[ CD ]
Line_3 $$ DateFormat f = context.getDateFormat()-->Line_3 $$ context.getDateFormat()[ CD ]
Line_2 $$ public void format(final JSON json, final Context context, final Object src, final Object o, final OutputSource out) -->Line_4 $$ if (f != null) [ CD ]
Line_3 $$ DateFormat f = context.getDateFormat()-->Line_4 $$ if (f != null) [ FD ]
Line_4 $$ if (f != null) -->Line_5 $$ StringFormatter.serialize(context, f.format(o), out)[ CD ]
Line_3 $$ DateFormat f = context.getDateFormat()-->Line_5 $$ f.format(o)[ FD ]
Line_4 $$ if (f != null) -->Line_6 $$ if (context.getMode() == Mode.SCRIPT) [ CD ]
Line_6 $$ if (context.getMode() == Mode.SCRIPT) -->Line_7 $$ out.append("new Date(")[ CD ]
Line_6 $$ if (context.getMode() == Mode.SCRIPT) -->Line_8 $$ out.append(Long.toString(date.getTime()))[ CD ]
Line_6 $$ if (context.getMode() == Mode.SCRIPT) -->Line_9 $$ out.append(")")[ CD ]
Line_6 $$ if (context.getMode() == Mode.SCRIPT) -->Line_11 $$ out.append(Long.toString(date.getTime()))[ CD ]
