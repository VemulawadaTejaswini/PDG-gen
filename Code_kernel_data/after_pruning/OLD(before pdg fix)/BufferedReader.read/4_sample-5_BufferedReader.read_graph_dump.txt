Line_2 $$ public void expandToTemplate(Properties props, InputStream is, OutputStream os, char marker, File file) --> Line_3 $$ while ((ch = r.read()) != -1) [CD]
Line_3 $$ while ((ch = r.read()) != -1) --> Line_4 $$ if (ch == marker) [CD]
Line_4 $$ if (ch == marker) --> Line_5 $$ StringBuffer sb = new StringBuffer(20) [CD]
Line_4 $$ if (ch == marker) --> Line_6 $$ while ((ch = r.read()) != marker) [CD]
Line_5 $$ StringBuffer sb = new StringBuffer(20) --> Line_18 $$ sb.append((char) ch) [FD]
Line_4 $$ if (ch == marker) --> Line_21 $$ if (sb.length() == 0) [CD]
Line_5 $$ StringBuffer sb = new StringBuffer(20) --> Line_21 $$ if (sb.length() == 0) [FD]
Line_21 $$ if (sb.length() == 0) --> Line_22 $$ w.write(marker) [CD]
Line_21 $$ if (sb.length() == 0) --> Line_24 $$ AT_AT_CONTENTS_PATTERN.matcher(sb) [CD]
Line_5 $$ StringBuffer sb = new StringBuffer(20) --> Line_24 $$ AT_AT_CONTENTS_PATTERN.matcher(sb) [FD]
Line_21 $$ if (sb.length() == 0) --> Line_25 $$ if (!matcher.matches()) [CD]
Line_21 $$ if (sb.length() == 0) --> Line_29 $$ matcher.group(1) [CD]
Line_21 $$ if (sb.length() == 0) --> Line_30 $$ matcher.group(2) [CD]
Line_21 $$ if (sb.length() == 0) --> Line_32 $$ props.getProperty(name) [CD]
Line_21 $$ if (sb.length() == 0) --> Line_33 $$ w.write(codec.encodeProperty(name, propValue, modifiers)) [CD]
Line_4 $$ if (ch == marker) --> Line_36 $$ if (ch == '\n') [CD]
Line_4 $$ if (ch == marker) --> Line_39 $$ w.write((char) ch) [CD]
