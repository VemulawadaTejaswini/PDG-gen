Line_2 $$ public void testSplit_InFilter() --> Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) [CD]
Line_2 $$ public void testSplit_InFilter() --> Line_4 $$ initTable(conn, "ONE,TWO,THREE") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) --> Line_4 $$ initTable(conn, "ONE,TWO,THREE") [FD]
Line_2 $$ public void testSplit_InFilter() --> Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) --> Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'") [FD]
Line_2 $$ public void testSplit_InFilter() --> Line_7 $$ assertTrue(rs.next()) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'") --> Line_7 $$ assertTrue(rs.next()) [FD]
Line_2 $$ public void testSplit_InFilter() --> Line_8 $$ assertEquals(1, rs.getInt(1)) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'") --> Line_8 $$ assertEquals(1, rs.getInt(1)) [FD]
Line_2 $$ public void testSplit_InFilter() --> Line_9 $$ assertFalse(rs.next()) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT ID FROM SPLIT_TEST WHERE (REGEXP_SPLIT(VAL, ','))[1] = 'ONE'") --> Line_9 $$ assertFalse(rs.next()) [FD]
