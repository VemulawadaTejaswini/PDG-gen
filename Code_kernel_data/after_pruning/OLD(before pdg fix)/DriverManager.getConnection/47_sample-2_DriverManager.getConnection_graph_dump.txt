Line_2 $$ public void testSplit_AlternateSeparator() --> Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) [CD]
Line_2 $$ public void testSplit_AlternateSeparator() --> Line_4 $$ initTable(conn, "ONE:TWO:THREE") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) --> Line_4 $$ initTable(conn, "ONE:TWO:THREE") [FD]
Line_2 $$ public void testSplit_AlternateSeparator() --> Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) --> Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST") [FD]
Line_2 $$ public void testSplit_AlternateSeparator() --> Line_7 $$ assertTrue(rs.next()) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST") --> Line_7 $$ assertTrue(rs.next()) [FD]
Line_2 $$ public void testSplit_AlternateSeparator() --> Line_8 $$ Array array = rs.getArray(1) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ':') FROM SPLIT_TEST") --> Line_8 $$ Array array = rs.getArray(1) [FD]
Line_2 $$ public void testSplit_AlternateSeparator() --> Line_9 $$ String[] values = (String[]) array.getArray() [CD]
Line_8 $$ Array array = rs.getArray(1) --> Line_9 $$ String[] values = (String[]) array.getArray() [FD]
Line_2 $$ public void testSplit_AlternateSeparator() --> Line_10 $$ assertArrayEquals(new String[] [CD]
Line_9 $$ String[] values = (String[]) array.getArray() --> Line_10 $$ assertArrayEquals(new String[] [FD]
