Line_2 $$ public void testGitDirPathNoGit() --> Line_4 $$ JSONObject project = createProjectOrLink(workspaceLocation, getMethodName().concat("Project"), null) [CD]
Line_2 $$ public void testGitDirPathNoGit() --> Line_5 $$ String location = project.getString(ProtocolConstants.KEY_CONTENT_LOCATION) [CD]
Line_4 $$ JSONObject project = createProjectOrLink(workspaceLocation, getMethodName().concat("Project"), null) --> Line_5 $$ String location = project.getString(ProtocolConstants.KEY_CONTENT_LOCATION) [FD]
Line_2 $$ public void testGitDirPathNoGit() --> Line_6 $$ URI uri = URI.create(location) [CD]
Line_5 $$ String location = project.getString(ProtocolConstants.KEY_CONTENT_LOCATION) --> Line_6 $$ URI uri = URI.create(location) [FD]
Line_2 $$ public void testGitDirPathNoGit() --> Line_7 $$ File dir = GitUtils.getGitDir(new Path(uri.getPath())) [CD]
Line_6 $$ URI uri = URI.create(location) --> Line_7 $$ File dir = GitUtils.getGitDir(new Path(uri.getPath())) [FD]
Line_2 $$ public void testGitDirPathNoGit() --> Line_8 $$ assertNull(dir == null ? "N/A" : dir.toURI().toURL().toString(), dir) [CD]
Line_7 $$ File dir = GitUtils.getGitDir(new Path(uri.getPath())) --> Line_8 $$ assertNull(dir == null ? "N/A" : dir.toURI().toURL().toString(), dir) [FD]
