Line_2 $$ public void configureSentinel(URI uri) --> Line_3 $$ checkArgument(isNotEmpty(uri.getFragment()), "URI Fragment must contain the sentinelMasterId") [FD]
Line_2 $$ public void configureSentinel(URI uri) --> Line_3 $$ checkArgument(isNotEmpty(uri.getFragment()), "URI Fragment must contain the sentinelMasterId") [CD]
Line_2 $$ public void configureSentinel(URI uri) --> Line_4 $$ String masterId = uri.getFragment() [FD]
Line_2 $$ public void configureSentinel(URI uri) --> Line_4 $$ String masterId = uri.getFragment() [CD]
Line_4 $$ String masterId = uri.getFragment() --> Line_7 $$ builder = RedisURI.Builder.sentinel(uri.getHost(), uri.getPort(), masterId) [FD]
Line_2 $$ public void configureSentinel(URI uri) --> Line_7 $$ builder = RedisURI.Builder.sentinel(uri.getHost(), uri.getPort(), masterId) [FD]
Line_4 $$ String masterId = uri.getFragment() --> Line_9 $$ builder = RedisURI.Builder.sentinel(uri.getHost(), masterId) [FD]
Line_2 $$ public void configureSentinel(URI uri) --> Line_9 $$ builder = RedisURI.Builder.sentinel(uri.getHost(), masterId) [FD]
Line_4 $$ String masterId = uri.getFragment() --> Line_22 $$ builder = RedisURI.Builder.sentinel(hostAndPort.getHostText(), hostAndPort.getPort(), masterId) [FD]
Line_4 $$ String masterId = uri.getFragment() --> Line_24 $$ builder = RedisURI.Builder.sentinel(hostAndPort.getHostText(), masterId) [FD]
