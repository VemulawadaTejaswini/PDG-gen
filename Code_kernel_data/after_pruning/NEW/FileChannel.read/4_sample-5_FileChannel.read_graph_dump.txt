Line_2 $$ public void retrieveParts(int contentId, int[] start, int[] end) --> Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) [CD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_4 $$ long readStartOffset = e.getBlockStartOffset(j) [FD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_4 $$ long readStartOffset = e.getBlockStartOffset(j) [CD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_5 $$ int bytesToRead = (int) (e.getBlockEndOffset(j) - readStartOffset) [FD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_5 $$ int bytesToRead = (int) (e.getBlockEndOffset(j) - readStartOffset) [CD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_6 $$ ByteBuffer buffer = ByteBuffer.allocate(bytesToRead) [CD]
Line_5 $$ int bytesToRead = (int) (e.getBlockEndOffset(j) - readStartOffset) --> Line_6 $$ ByteBuffer buffer = ByteBuffer.allocate(bytesToRead) [FD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_7 $$ int bytesRead = fileChannel.read(buffer, readStartOffset) [CD]
Line_6 $$ ByteBuffer buffer = ByteBuffer.allocate(bytesToRead) --> Line_7 $$ int bytesRead = fileChannel.read(buffer, readStartOffset) [FD]
Line_4 $$ long readStartOffset = e.getBlockStartOffset(j) --> Line_7 $$ int bytesRead = fileChannel.read(buffer, readStartOffset) [FD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_8 $$ if (bytesRead < bytesToRead) [CD]
Line_7 $$ int bytesRead = fileChannel.read(buffer, readStartOffset) --> Line_8 $$ if (bytesRead < bytesToRead) [FD]
Line_5 $$ int bytesToRead = (int) (e.getBlockEndOffset(j) - readStartOffset) --> Line_8 $$ if (bytesRead < bytesToRead) [FD]
Line_3 $$ for (int j = firstBlock; j <= lastBlock; j++) --> Line_12 $$ decoded.append(decodeBlock(buffer.array(), 0, bytesRead)) [CD]
Line_7 $$ int bytesRead = fileChannel.read(buffer, readStartOffset) --> Line_12 $$ decoded.append(decodeBlock(buffer.array(), 0, bytesRead)) [FD]
Line_6 $$ ByteBuffer buffer = ByteBuffer.allocate(bytesToRead) --> Line_12 $$ decoded.append(decodeBlock(buffer.array(), 0, bytesRead)) [FD]
