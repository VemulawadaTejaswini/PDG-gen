Line_2 $$ public void retrieveParts(int contentId, int[] start, int[] end) --> Line_3 $$ for (int i = 0; i < n; i++) [CD]
Line_3 $$ for (int i = 0; i < n; i++) --> Line_21 $$ long startOffsetBytes = e.offset + start[i] * BYTES_PER_CHAR + BYTE_ORDER_MARK_SIZE [CD]
Line_3 $$ for (int i = 0; i < n; i++) --> Line_23 $$ int bytesToRead = (end[i] - start[i]) * BYTES_PER_CHAR [CD]
Line_3 $$ for (int i = 0; i < n; i++) --> Line_24 $$ ByteBuffer buffer = ByteBuffer.allocate(bytesToRead) [CD]
Line_23 $$ int bytesToRead = (end[i] - start[i]) * BYTES_PER_CHAR --> Line_24 $$ ByteBuffer buffer = ByteBuffer.allocate(bytesToRead) [FD]
Line_3 $$ for (int i = 0; i < n; i++) --> Line_25 $$ int bytesRead = fileChannel.read(buffer, startOffsetBytes) [CD]
Line_24 $$ ByteBuffer buffer = ByteBuffer.allocate(bytesToRead) --> Line_25 $$ int bytesRead = fileChannel.read(buffer, startOffsetBytes) [FD]
Line_21 $$ long startOffsetBytes = e.offset + start[i] * BYTES_PER_CHAR + BYTE_ORDER_MARK_SIZE --> Line_25 $$ int bytesRead = fileChannel.read(buffer, startOffsetBytes) [FD]
Line_3 $$ for (int i = 0; i < n; i++) --> Line_26 $$ if (bytesRead < bytesToRead) [CD]
Line_25 $$ int bytesRead = fileChannel.read(buffer, startOffsetBytes) --> Line_26 $$ if (bytesRead < bytesToRead) [FD]
Line_23 $$ int bytesToRead = (end[i] - start[i]) * BYTES_PER_CHAR --> Line_26 $$ if (bytesRead < bytesToRead) [FD]
