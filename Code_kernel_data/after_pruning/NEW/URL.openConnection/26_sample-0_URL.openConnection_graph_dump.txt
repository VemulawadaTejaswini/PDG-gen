Line_2 $$ public void validateIcon(Service service, String serviceFilePath) --> Line_3 $$ String icon = service.getIcon() [FD]
Line_2 $$ public void validateIcon(Service service, String serviceFilePath) --> Line_3 $$ String icon = service.getIcon() [CD]
Line_2 $$ public void validateIcon(Service service, String serviceFilePath) --> Line_4 $$ if (icon.startsWith("http")) [CD]
Line_3 $$ String icon = service.getIcon() --> Line_4 $$ if (icon.startsWith("http")) [FD]
Line_4 $$ if (icon.startsWith("http")) --> Line_5 $$ HttpURLConnection connection = (HttpURLConnection) new URL(icon).openConnection() [CD]
Line_4 $$ if (icon.startsWith("http")) --> Line_6 $$ connection.setRequestMethod("HEAD") [CD]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) new URL(icon).openConnection() --> Line_6 $$ connection.setRequestMethod("HEAD") [FD]
Line_4 $$ if (icon.startsWith("http")) --> Line_7 $$ Assert.assertEquals("The icon URL cannot establish a connection", HttpURLConnection.HTTP_OK, connection.getResponseCode()) [CD]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) new URL(icon).openConnection() --> Line_7 $$ Assert.assertEquals("The icon URL cannot establish a connection", HttpURLConnection.HTTP_OK, connection.getResponseCode()) [FD]
Line_4 $$ if (icon.startsWith("http")) --> Line_9 $$ connection.disconnect() [CD]
Line_5 $$ HttpURLConnection connection = (HttpURLConnection) new URL(icon).openConnection() --> Line_9 $$ connection.disconnect() [FD]
