Line_2 $$ public void testSplit_ArrayReference() --> Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) [CD]
Line_2 $$ public void testSplit_ArrayReference() --> Line_4 $$ initTable(conn, "ONE,TWO,THREE") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) --> Line_4 $$ initTable(conn, "ONE,TWO,THREE") [FD]
Line_2 $$ public void testSplit_ArrayReference() --> Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST") [CD]
Line_3 $$ Connection conn = DriverManager.getConnection(getUrl()) --> Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST") [FD]
Line_2 $$ public void testSplit_ArrayReference() --> Line_7 $$ assertTrue(rs.next()) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST") --> Line_7 $$ assertTrue(rs.next()) [FD]
Line_2 $$ public void testSplit_ArrayReference() --> Line_8 $$ assertEquals("ONE", rs.getString(1)) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST") --> Line_8 $$ assertEquals("ONE", rs.getString(1)) [FD]
Line_2 $$ public void testSplit_ArrayReference() --> Line_9 $$ assertFalse(rs.next()) [CD]
Line_5 $$ ResultSet rs = conn.createStatement().executeQuery("SELECT REGEXP_SPLIT(VAL, ',')[1] FROM SPLIT_TEST") --> Line_9 $$ assertFalse(rs.next()) [FD]
