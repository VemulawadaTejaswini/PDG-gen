Line_2 $$ public void main(String... args) --> Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(4096).order(ByteOrder.nativeOrder()) [CD]
Line_2 $$ public void main(String... args) --> Line_4 $$ while (fc.read(buffer) > 0) [CD]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(4096).order(ByteOrder.nativeOrder()) --> Line_4 $$ while (fc.read(buffer) > 0) [FD]
Line_4 $$ while (fc.read(buffer) > 0) --> Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) [CD]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(4096).order(ByteOrder.nativeOrder()) --> Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) [FD]
Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) --> Line_6 $$ long indexStart = buffer.getLong(i) [CD]
Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) --> Line_6 $$ long indexStart = buffer.getLong(i) [FD]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(4096).order(ByteOrder.nativeOrder()) --> Line_6 $$ long indexStart = buffer.getLong(i) [FD]
Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) --> Line_7 $$ if (indexStart == 0 && zeros++ > 2) [CD]
Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) --> Line_10 $$ System.out.print(count + ": ") [CD]
Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) --> Line_12 $$ System.out.print(HEX ? Long.toHexString(indexStart) : String.valueOf(indexStart)) [CD]
Line_6 $$ long indexStart = buffer.getLong(i) --> Line_12 $$ System.out.print(HEX ? Long.toHexString(indexStart) : String.valueOf(indexStart)) [FD]
Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) --> Line_13 $$ for (int j = i + 8; j < i + 64; j += 4) [CD]
Line_13 $$ for (int j = i + 8; j < i + 64; j += 4) --> Line_14 $$ System.out.print(' ') [CD]
Line_13 $$ for (int j = i + 8; j < i + 64; j += 4) --> Line_15 $$ int offset = buffer.getInt(j) [CD]
Line_13 $$ for (int j = i + 8; j < i + 64; j += 4) --> Line_15 $$ int offset = buffer.getInt(j) [FD]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(4096).order(ByteOrder.nativeOrder()) --> Line_15 $$ int offset = buffer.getInt(j) [FD]
Line_13 $$ for (int j = i + 8; j < i + 64; j += 4) --> Line_16 $$ System.out.print(HEX ? Integer.toHexString(offset) : String.valueOf(offset)) [CD]
Line_15 $$ int offset = buffer.getInt(j) --> Line_16 $$ System.out.print(HEX ? Integer.toHexString(offset) : String.valueOf(offset)) [FD]
Line_5 $$ for (int i = 0; i < buffer.capacity(); i += 4 * 16) --> Line_18 $$ System.out.println() [CD]
Line_4 $$ while (fc.read(buffer) > 0) --> Line_20 $$ buffer.clear() [CD]
Line_3 $$ ByteBuffer buffer = ByteBuffer.allocateDirect(4096).order(ByteOrder.nativeOrder()) --> Line_20 $$ buffer.clear() [FD]
