Line_2 $$ public void testGetBookNotExistent() --> Line_3 $$ URL url = new URL(endpointAddress) [CD]
Line_2 $$ public void testGetBookNotExistent() --> Line_4 $$ HttpURLConnection connect = (HttpURLConnection) url.openConnection() [CD]
Line_3 $$ URL url = new URL(endpointAddress) --> Line_4 $$ HttpURLConnection connect = (HttpURLConnection) url.openConnection() [FD]
Line_2 $$ public void testGetBookNotExistent() --> Line_5 $$ connect.addRequestProperty("Accept", "application/xml") [CD]
Line_4 $$ HttpURLConnection connect = (HttpURLConnection) url.openConnection() --> Line_5 $$ connect.addRequestProperty("Accept", "application/xml") [FD]
Line_2 $$ public void testGetBookNotExistent() --> Line_6 $$ assertEquals(405, connect.getResponseCode()) [CD]
Line_4 $$ HttpURLConnection connect = (HttpURLConnection) url.openConnection() --> Line_6 $$ assertEquals(405, connect.getResponseCode()) [FD]
Line_2 $$ public void testGetBookNotExistent() --> Line_7 $$ InputStream in = connect.getErrorStream() [CD]
Line_4 $$ HttpURLConnection connect = (HttpURLConnection) url.openConnection() --> Line_7 $$ InputStream in = connect.getErrorStream() [FD]
Line_2 $$ public void testGetBookNotExistent() --> Line_8 $$ assertNotNull(in) [CD]
Line_7 $$ InputStream in = connect.getErrorStream() --> Line_8 $$ assertNotNull(in) [FD]
Line_7 $$ InputStream in = connect.getErrorStream() --> Line_11 $$ getStringFromInputStream(in) [FD]
