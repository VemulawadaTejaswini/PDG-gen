Line_2 $$ public void initConnection(HttpRequest request) --> Line_3 $$ URL url = request.getEndpoint().toURL() [CD]
Line_2 $$ public void initConnection(HttpRequest request) --> Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection(proxyForURI.apply(request.getEndpoint())) [CD]
Line_3 $$ URL url = request.getEndpoint().toURL() --> Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection(proxyForURI.apply(request.getEndpoint())) [FD]
Line_2 $$ public void initConnection(HttpRequest request) --> Line_5 $$ if (connection instanceof HttpsURLConnection) [CD]
Line_4 $$ HttpURLConnection connection = (HttpURLConnection) url.openConnection(proxyForURI.apply(request.getEndpoint())) --> Line_5 $$ if (connection instanceof HttpsURLConnection) [FD]
Line_5 $$ if (connection instanceof HttpsURLConnection) --> Line_6 $$ HttpsURLConnection sslCon = (HttpsURLConnection) connection [CD]
Line_5 $$ if (connection instanceof HttpsURLConnection) --> Line_7 $$ if (utils.relaxHostname()) [CD]
Line_7 $$ if (utils.relaxHostname()) --> Line_8 $$ sslCon.setHostnameVerifier(verifier) [CD]
Line_6 $$ HttpsURLConnection sslCon = (HttpsURLConnection) connection --> Line_8 $$ sslCon.setHostnameVerifier(verifier) [FD]
Line_5 $$ if (connection instanceof HttpsURLConnection) --> Line_9 $$ if (sslContextSupplier != null) [CD]
Line_9 $$ if (sslContextSupplier != null) --> Line_10 $$ sslCon.setSSLSocketFactory(sslContextSupplier.get().getSocketFactory()) [CD]
Line_6 $$ HttpsURLConnection sslCon = (HttpsURLConnection) connection --> Line_10 $$ sslCon.setSSLSocketFactory(sslContextSupplier.get().getSocketFactory()) [FD]
Line_9 $$ if (sslContextSupplier != null) --> Line_11 $$ if (utils.trustAllCerts()) [CD]
Line_11 $$ if (utils.trustAllCerts()) --> Line_12 $$ sslCon.setSSLSocketFactory(untrustedSSLContextProvider.get().getSocketFactory()) [CD]
Line_6 $$ HttpsURLConnection sslCon = (HttpsURLConnection) connection --> Line_12 $$ sslCon.setSSLSocketFactory(untrustedSSLContextProvider.get().getSocketFactory()) [FD]
