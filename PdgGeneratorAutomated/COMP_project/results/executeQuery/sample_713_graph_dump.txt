Line_3 $$ public void testAmbiguousColumn() -->Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_3 $$ public void testAmbiguousColumn() -->Line_5 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_5 $$ DriverManager.getConnection(url, props)[ FD ]
Line_3 $$ public void testAmbiguousColumn() -->Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_6 $$ conn.prepareStatement(query)[ FD ]
Line_3 $$ public void testAmbiguousColumn() -->Line_7 $$ statement.executeQuery()[ CD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_7 $$ statement.executeQuery()[ FD ]
Line_12 $$ public void testAmbiguousStaticSelect() -->Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_12 $$ public void testAmbiguousStaticSelect() -->Line_14 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_14 $$ DriverManager.getConnection(url, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_14 $$ DriverManager.getConnection(url, props)[ FD ]
Line_12 $$ public void testAmbiguousStaticSelect() -->Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)[ CD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_15 $$ conn.prepareStatement(upsertquery)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_15 $$ conn.prepareStatement(upsertquery)[ FD ]
Line_12 $$ public void testAmbiguousStaticSelect() -->Line_16 $$ statement.executeQuery()[ CD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_16 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_16 $$ statement.executeQuery()[ FD ]
Line_21 $$ public void testJoinWithIncomparableJoinKeyTypes() -->Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_21 $$ public void testJoinWithIncomparableJoinKeyTypes() -->Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_23 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_23 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_23 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_21 $$ public void testJoinWithIncomparableJoinKeyTypes() -->Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_24 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_24 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_24 $$ conn.prepareStatement(query)[ FD ]
Line_21 $$ public void testJoinWithIncomparableJoinKeyTypes() -->Line_25 $$ statement.executeQuery()[ CD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_25 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_25 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_25 $$ statement.executeQuery()[ FD ]
Line_30 $$ public void testFakeCFDynamicUpsert() -->Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_30 $$ public void testFakeCFDynamicUpsert() -->Line_32 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_32 $$ DriverManager.getConnection(url, props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_32 $$ DriverManager.getConnection(url, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_32 $$ DriverManager.getConnection(url, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_32 $$ DriverManager.getConnection(url, props)[ FD ]
Line_30 $$ public void testFakeCFDynamicUpsert() -->Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)[ CD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_33 $$ conn.prepareStatement(upsertquery)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_33 $$ conn.prepareStatement(upsertquery)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_33 $$ conn.prepareStatement(upsertquery)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_33 $$ conn.prepareStatement(upsertquery)[ FD ]
Line_30 $$ public void testFakeCFDynamicUpsert() -->Line_34 $$ statement.executeQuery()[ CD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_34 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_34 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_34 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_34 $$ statement.executeQuery()[ FD ]
Line_39 $$ public void testDynamicFamilyException() -->Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_39 $$ public void testDynamicFamilyException() -->Line_41 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_41 $$ DriverManager.getConnection(url, props)[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_41 $$ DriverManager.getConnection(url, props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_41 $$ DriverManager.getConnection(url, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_41 $$ DriverManager.getConnection(url, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_41 $$ DriverManager.getConnection(url, props)[ FD ]
Line_39 $$ public void testDynamicFamilyException() -->Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_42 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_42 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_42 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_42 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_42 $$ conn.prepareStatement(query)[ FD ]
Line_39 $$ public void testDynamicFamilyException() -->Line_43 $$ statement.executeQuery()[ CD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_43 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_43 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_43 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_43 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_43 $$ statement.executeQuery()[ FD ]
Line_48 $$ public void testOrderByNotInSelectDistinct() -->Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_48 $$ public void testOrderByNotInSelectDistinct() -->Line_50 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_50 $$ DriverManager.getConnection(url, props)[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_50 $$ DriverManager.getConnection(url, props)[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_50 $$ DriverManager.getConnection(url, props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_50 $$ DriverManager.getConnection(url, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_50 $$ DriverManager.getConnection(url, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_50 $$ DriverManager.getConnection(url, props)[ FD ]
Line_48 $$ public void testOrderByNotInSelectDistinct() -->Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_51 $$ conn.prepareStatement(query)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_51 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_51 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_51 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_51 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_51 $$ conn.prepareStatement(query)[ FD ]
Line_48 $$ public void testOrderByNotInSelectDistinct() -->Line_52 $$ statement.executeQuery()[ CD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_52 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_52 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_52 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_52 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_52 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_52 $$ statement.executeQuery()[ FD ]
Line_57 $$ public void testDecimalSubtraction1Expression() -->Line_58 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ CD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_58 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_58 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_58 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_58 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_58 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_58 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_57 $$ public void testDecimalSubtraction1Expression() -->Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)[ CD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_59 $$ DriverManager.getConnection(getUrl(), props)[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_59 $$ DriverManager.getConnection(getUrl(), props)[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_59 $$ DriverManager.getConnection(getUrl(), props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_59 $$ DriverManager.getConnection(getUrl(), props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_59 $$ DriverManager.getConnection(getUrl(), props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_59 $$ DriverManager.getConnection(getUrl(), props)[ FD ]
Line_57 $$ public void testDecimalSubtraction1Expression() -->Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_60 $$ conn.prepareStatement(query)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_60 $$ conn.prepareStatement(query)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_60 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_60 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_60 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_60 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_60 $$ conn.prepareStatement(query)[ FD ]
Line_57 $$ public void testDecimalSubtraction1Expression() -->Line_61 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_61 $$ statement.executeQuery()[ FD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_61 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_61 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_61 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_61 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_61 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_61 $$ statement.executeQuery()[ FD ]
Line_66 $$ public void testIntToDecimalDivideExpression() -->Line_67 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ CD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_67 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_67 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_67 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_67 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_67 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_67 $$ props.setProperty(PhoenixRuntime.CURRENT_SCN_ATTRIB, Long.toString(ts + 2))[ FD ]
Line_66 $$ public void testIntToDecimalDivideExpression() -->Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ CD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_68 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_68 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_68 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_68 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_68 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_68 $$ DriverManager.getConnection(PHOENIX_JDBC_URL, props)[ FD ]
Line_66 $$ public void testIntToDecimalDivideExpression() -->Line_69 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_69 $$ conn.prepareStatement(query)[ FD ]
Line_66 $$ public void testIntToDecimalDivideExpression() -->Line_70 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_69 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_70 $$ statement.executeQuery()[ FD ]
Line_75 $$ public void testDivideByIntegerZero() -->Line_76 $$ long ts = nextTimestamp()[ CD ]
Line_75 $$ public void testDivideByIntegerZero() -->Line_77 $$ String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + (ts + 5)[ CD ]
Line_75 $$ public void testDivideByIntegerZero() -->Line_78 $$ Connection conn = DriverManager.getConnection(url)[ CD ]
Line_77 $$ String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + (ts + 5)-->Line_78 $$ DriverManager.getConnection(url)[ FD ]
Line_75 $$ public void testDivideByIntegerZero() -->Line_79 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_79 $$ conn.prepareStatement(query)[ FD ]
Line_75 $$ public void testDivideByIntegerZero() -->Line_80 $$ statement.executeQuery()[ CD ]
Line_79 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_69 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_80 $$ statement.executeQuery()[ FD ]
Line_85 $$ public void testDynamicFamilyFunctionException() -->Line_86 $$ Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES)[ CD ]
Line_85 $$ public void testDynamicFamilyFunctionException() -->Line_87 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_77 $$ String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + (ts + 5)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_86 $$ Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_87 $$ DriverManager.getConnection(url, props)[ FD ]
Line_85 $$ public void testDynamicFamilyFunctionException() -->Line_88 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_88 $$ conn.prepareStatement(query)[ FD ]
Line_85 $$ public void testDynamicFamilyFunctionException() -->Line_89 $$ statement.executeQuery()[ CD ]
Line_88 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_79 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_69 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_89 $$ statement.executeQuery()[ FD ]
Line_94 $$ public void findUserIds(ResultSet[] results) -->Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_94 $$ public void findUserIds(ResultSet[] results) -->Line_96 $$ PreparedStatement ps = conn.prepareStatement("select id from t_user")[ CD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_96 $$ conn.prepareStatement("select id from t_user")[ FD ]
Line_96 $$ PreparedStatement ps = conn.prepareStatement("select id from t_user")-->Line_97 $$ ps.executeQuery()[ FD ]
Line_102 $$ public void proc_test1_DeleteBeforeTrigger_select_table(int p1) -->Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_102 $$ public void proc_test1_DeleteBeforeTrigger_select_table(int p1) -->Line_104 $$ PreparedStatement ps = conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ CD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_104 $$ conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)[ FD ]
Line_102 $$ public void proc_test1_DeleteBeforeTrigger_select_table(int p1) -->Line_106 $$ ps.executeQuery()[ CD ]
Line_104 $$ PreparedStatement ps = conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)-->Line_106 $$ ps.executeQuery()[ FD ]
Line_96 $$ PreparedStatement ps = conn.prepareStatement("select id from t_user")-->Line_106 $$ ps.executeQuery()[ FD ]
Line_111 $$ public void selectRows(ResultSet[] data1) -->Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_111 $$ public void selectRows(ResultSet[] data1) -->Line_113 $$ PreparedStatement ps1 = conn.prepareStatement("SELECT * FROM PLANET")[ CD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_113 $$ conn.prepareStatement("SELECT * FROM PLANET")[ FD ]
Line_113 $$ PreparedStatement ps1 = conn.prepareStatement("SELECT * FROM PLANET")-->Line_114 $$ ps1.executeQuery()[ FD ]
Line_119 $$ public void findAllCoffeeBeverages(ResultSet[] coffeeBeverages) -->Line_120 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_119 $$ public void findAllCoffeeBeverages(ResultSet[] coffeeBeverages) -->Line_121 $$ connection.prepareStatement(sql)[ CD ]
Line_88 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_79 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_69 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_122 $$ statement.executeQuery()[ FD ]
Line_127 $$ public void hashmapReader() -->Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_127 $$ public void hashmapReader() -->Line_129 $$ PreparedStatement ps = conn.prepareStatement("select intCol, hashmapCol from t_11")[ CD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_129 $$ conn.prepareStatement("select intCol, hashmapCol from t_11")[ FD ]
Line_129 $$ PreparedStatement ps = conn.prepareStatement("select intCol, hashmapCol from t_11")-->Line_130 $$ ps.executeQuery()[ FD ]
Line_104 $$ PreparedStatement ps = conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)-->Line_130 $$ ps.executeQuery()[ FD ]
Line_96 $$ PreparedStatement ps = conn.prepareStatement("select id from t_user")-->Line_130 $$ ps.executeQuery()[ FD ]
Line_135 $$ public void readFoos(ResultSet[] rs) -->Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_135 $$ public void readFoos(ResultSet[] rs) -->Line_137 $$ PreparedStatement ps1 = conn.prepareStatement(SQL)[ CD ]
Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_137 $$ conn.prepareStatement(SQL)[ FD ]
Line_137 $$ PreparedStatement ps1 = conn.prepareStatement(SQL)-->Line_138 $$ ps1.executeQuery()[ FD ]
Line_113 $$ PreparedStatement ps1 = conn.prepareStatement("SELECT * FROM PLANET")-->Line_138 $$ ps1.executeQuery()[ FD ]
Line_143 $$ public void selectFromSpecificSchema(int p1) -->Line_144 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_143 $$ public void selectFromSpecificSchema(int p1) -->Line_145 $$ PreparedStatement ps = conn.prepareStatement("select * from mamta1.t12RoutineTest")[ CD ]
Line_144 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_145 $$ conn.prepareStatement("select * from mamta1.t12RoutineTest")[ FD ]
Line_143 $$ public void selectFromSpecificSchema(int p1) -->Line_146 $$ ps.executeQuery()[ CD ]
Line_145 $$ PreparedStatement ps = conn.prepareStatement("select * from mamta1.t12RoutineTest")-->Line_146 $$ ps.executeQuery()[ FD ]
Line_129 $$ PreparedStatement ps = conn.prepareStatement("select intCol, hashmapCol from t_11")-->Line_146 $$ ps.executeQuery()[ FD ]
Line_104 $$ PreparedStatement ps = conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)-->Line_146 $$ ps.executeQuery()[ FD ]
Line_96 $$ PreparedStatement ps = conn.prepareStatement("select id from t_user")-->Line_146 $$ ps.executeQuery()[ FD ]
Line_143 $$ public void selectFromSpecificSchema(int p1) -->Line_147 $$ ps.close()[ CD ]
Line_145 $$ PreparedStatement ps = conn.prepareStatement("select * from mamta1.t12RoutineTest")-->Line_147 $$ ps.close()[ FD ]
Line_129 $$ PreparedStatement ps = conn.prepareStatement("select intCol, hashmapCol from t_11")-->Line_147 $$ ps.close()[ FD ]
Line_104 $$ PreparedStatement ps = conn.prepareStatement("select updates from " + "table2 where table2.id = " + p1)-->Line_147 $$ ps.close()[ FD ]
Line_96 $$ PreparedStatement ps = conn.prepareStatement("select id from t_user")-->Line_147 $$ ps.close()[ FD ]
Line_152 $$ public void testPartiallyQualifiedRVCInList() -->Line_153 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_152 $$ public void testPartiallyQualifiedRVCInList() -->Line_154 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_77 $$ String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + (ts + 5)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_153 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_86 $$ Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_154 $$ DriverManager.getConnection(url, props)[ FD ]
Line_152 $$ public void testPartiallyQualifiedRVCInList() -->Line_155 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_154 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_144 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_155 $$ conn.prepareStatement(query)[ FD ]
Line_152 $$ public void testPartiallyQualifiedRVCInList() -->Line_156 $$ ResultSet rs = statement.executeQuery()[ CD ]
Line_155 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_88 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_79 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_69 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_156 $$ statement.executeQuery()[ FD ]
Line_161 $$ public void testCoelesceFunctionTypeMismatch() -->Line_162 $$ Properties props = new Properties(TEST_PROPERTIES)[ CD ]
Line_161 $$ public void testCoelesceFunctionTypeMismatch() -->Line_163 $$ Connection conn = DriverManager.getConnection(url, props)[ CD ]
Line_77 $$ String url = getUrl() + ";" + PhoenixRuntime.CURRENT_SCN_ATTRIB + "=" + (ts + 5)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_162 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_153 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_86 $$ Properties props = PropertiesUtil.deepCopy(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_49 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_40 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_31 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_22 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_13 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_4 $$ Properties props = new Properties(TEST_PROPERTIES)-->Line_163 $$ DriverManager.getConnection(url, props)[ FD ]
Line_161 $$ public void testCoelesceFunctionTypeMismatch() -->Line_164 $$ PreparedStatement statement = conn.prepareStatement(query)[ CD ]
Line_163 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_154 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_144 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_164 $$ conn.prepareStatement(query)[ FD ]
Line_161 $$ public void testCoelesceFunctionTypeMismatch() -->Line_165 $$ statement.executeQuery()[ CD ]
Line_164 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_155 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_88 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_79 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_69 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_60 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_51 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_42 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_33 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_24 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_15 $$ PreparedStatement statement = conn.prepareStatement(upsertquery)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_6 $$ PreparedStatement statement = conn.prepareStatement(query)-->Line_165 $$ statement.executeQuery()[ FD ]
Line_170 $$ public void blobselect(ResultSet[] results) -->Line_171 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_170 $$ public void blobselect(ResultSet[] results) -->Line_173 $$ PreparedStatement st = conn.prepareStatement("select * from lobCheckTwo")[ CD ]
Line_171 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_163 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_154 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_144 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_173 $$ conn.prepareStatement("select * from lobCheckTwo")[ FD ]
Line_173 $$ PreparedStatement st = conn.prepareStatement("select * from lobCheckTwo")-->Line_174 $$ st.executeQuery()[ FD ]
Line_179 $$ public void testMutationUsingExecuteQueryShouldFail() -->Line_180 $$ Connection connection = DriverManager.getConnection(getUrl(), connectionProperties)[ CD ]
Line_179 $$ public void testMutationUsingExecuteQueryShouldFail() -->Line_181 $$ PreparedStatement stmt = connection.prepareStatement("DELETE FROM " + ATABLE)[ CD ]
Line_180 $$ Connection connection = DriverManager.getConnection(getUrl(), connectionProperties)-->Line_181 $$ connection.prepareStatement("DELETE FROM " + ATABLE)[ FD ]
Line_179 $$ public void testMutationUsingExecuteQueryShouldFail() -->Line_182 $$ stmt.executeQuery()[ CD ]
Line_181 $$ PreparedStatement stmt = connection.prepareStatement("DELETE FROM " + ATABLE)-->Line_182 $$ stmt.executeQuery()[ FD ]
Line_187 $$ public void getAllApplicants(ResultSet[] rs1) -->Line_188 $$ DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_187 $$ public void getAllApplicants(ResultSet[] rs1) -->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ CD ]
Line_171 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_163 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_154 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_144 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_189 $$ conn.prepareStatement("select * from APPLICANT")[ FD ]
Line_137 $$ PreparedStatement ps1 = conn.prepareStatement(SQL)-->Line_190 $$ ps1.executeQuery()[ FD ]
Line_113 $$ PreparedStatement ps1 = conn.prepareStatement("SELECT * FROM PLANET")-->Line_190 $$ ps1.executeQuery()[ FD ]
Line_195 $$ public void getSplitTestRecords(ResultSet[] data1, ResultSet[] data2) -->Line_196 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")[ CD ]
Line_195 $$ public void getSplitTestRecords(ResultSet[] data1, ResultSet[] data2) -->Line_197 $$ PreparedStatement ps1 = conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ CD ]
Line_196 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_171 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_163 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_154 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_144 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_136 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_128 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_112 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_103 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_95 $$ Connection conn = DriverManager.getConnection("jdbc:default:connection")-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_87 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_78 $$ Connection conn = DriverManager.getConnection(url)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_68 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_59 $$ Connection conn = DriverManager.getConnection(getUrl(), props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_50 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_41 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_32 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_23 $$ Connection conn = DriverManager.getConnection(PHOENIX_JDBC_URL, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_14 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_5 $$ Connection conn = DriverManager.getConnection(url, props)-->Line_197 $$ conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")[ FD ]
Line_197 $$ PreparedStatement ps1 = conn.prepareStatement("SELECT * FROM PLANET WHERE POSITION <= 2")-->Line_198 $$ ps1.executeQuery()[ FD ]
Line_137 $$ PreparedStatement ps1 = conn.prepareStatement(SQL)-->Line_198 $$ ps1.executeQuery()[ FD ]
Line_113 $$ PreparedStatement ps1 = conn.prepareStatement("SELECT * FROM PLANET")-->Line_198 $$ ps1.executeQuery()[ FD ]
