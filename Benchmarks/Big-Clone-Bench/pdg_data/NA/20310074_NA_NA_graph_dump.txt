Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ public static String encryptPassword(String originalPassword) [ CD ]
Line_2 $$ public static String encryptPassword(String originalPassword) -->Line_3 $$ if (!StringUtils.hasText(originalPassword)) [ CD ]
Line_3 $$ if (!StringUtils.hasText(originalPassword)) -->Line_3 $$ if (!StringUtils.hasText(originalPassword)) [ CD ]
Line_3 $$ if (!StringUtils.hasText(originalPassword)) -->Line_3 $$ if (!StringUtils.hasText(originalPassword)) [ CD ]
Line_2 $$ public static String encryptPassword(String originalPassword) -->Line_3 $$ if (!StringUtils.hasText(originalPassword)) [ FD ]
Line_3 $$ if (!StringUtils.hasText(originalPassword)) -->Line_4 $$ originalPassword = randomPassword()[ CD ]
Line_2 $$ public static String encryptPassword(String originalPassword) -->Line_4 $$ originalPassword = randomPassword()[ FD ]
Line_4 $$ originalPassword = randomPassword()-->Line_4 $$ originalPassword = randomPassword()[ FD ]
Line_4 $$ originalPassword = randomPassword()-->Line_4 $$ originalPassword = randomPassword()[ CD ]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance(PASSWORD_ENCRYPTION_TYPE)-->Line_7 $$ MessageDigest md5 = MessageDigest.getInstance(PASSWORD_ENCRYPTION_TYPE)[ CD ]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance(PASSWORD_ENCRYPTION_TYPE)-->Line_8 $$ md5.update(originalPassword.getBytes())[ FD ]
Line_2 $$ public static String encryptPassword(String originalPassword) -->Line_8 $$ md5.update(originalPassword.getBytes())[ FD ]
Line_4 $$ originalPassword = randomPassword()-->Line_8 $$ md5.update(originalPassword.getBytes())[ FD ]
Line_9 $$ byte[] bytes = md5.digest()-->Line_9 $$ byte[] bytes = md5.digest()[ CD ]
Line_7 $$ MessageDigest md5 = MessageDigest.getInstance(PASSWORD_ENCRYPTION_TYPE)-->Line_9 $$ byte[] bytes = md5.digest()[ FD ]
Line_10 $$ int value-->Line_13 $$ value = aByte[ FD ]
Line_13 $$ value = aByte-->Line_13 $$ value = aByte[ FD ]
Line_12 $$ for (byte aByte : bytes) -->Line_13 $$ value = aByte[ FD ]
Line_10 $$ int value-->Line_14 $$ if (value < 0) [ FD ]
Line_13 $$ value = aByte-->Line_14 $$ if (value < 0) [ FD ]
Line_14 $$ if (value < 0) -->Line_15 $$ value += 256[ CD ]
Line_10 $$ int value-->Line_15 $$ value += 256[ FD ]
Line_13 $$ value = aByte-->Line_15 $$ value += 256[ FD ]
Line_15 $$ value += 256-->Line_15 $$ value += 256[ FD ]
Line_10 $$ int value-->Line_17 $$ if (value < 16) [ FD ]
Line_13 $$ value = aByte-->Line_17 $$ if (value < 16) [ FD ]
Line_15 $$ value += 256-->Line_17 $$ if (value < 16) [ FD ]
Line_17 $$ if (value < 16) -->Line_18 $$ buf.append("0")[ CD ]
Line_11 $$ StringBuilder buf = new StringBuilder()-->Line_18 $$ buf.append("0")[ FD ]
Line_11 $$ StringBuilder buf = new StringBuilder()-->Line_20 $$ buf.append(Integer.toHexString(value))[ FD ]
Line_10 $$ int value-->Line_20 $$ buf.append(Integer.toHexString(value))[ FD ]
Line_13 $$ value = aByte-->Line_20 $$ buf.append(Integer.toHexString(value))[ FD ]
Line_15 $$ value += 256-->Line_20 $$ buf.append(Integer.toHexString(value))[ FD ]
Line_22 $$ return buf.toString()-->Line_22 $$ return buf.toString()[ CD ]
Line_11 $$ StringBuilder buf = new StringBuilder()-->Line_22 $$ return buf.toString()[ FD ]
