Line_0 $$ Entry-->Line_1 $$ public class dummy [ CD ]
Line_1 $$ public class dummy -->Line_2 $$ private void loadMap() [ CD ]
Line_2 $$ private void loadMap() -->Line_3 $$ final String wordList = "vietwordlist.txt"[ CD ]
Line_6 $$ if (!dataFile.exists()) -->Line_6 $$ if (!dataFile.exists()) [ CD ]
Line_6 $$ if (!dataFile.exists()) -->Line_6 $$ if (!dataFile.exists()) [ CD ]
Line_5 $$ File dataFile = new File(supportDir, wordList)-->Line_6 $$ if (!dataFile.exists()) [ FD ]
Line_6 $$ if (!dataFile.exists()) -->Line_7 $$ final ReadableByteChannel input = Channels.newChannel(ClassLoader.getSystemResourceAsStream("dict/" + dataFile.getName()))[ CD ]
Line_7 $$ final ReadableByteChannel input = Channels.newChannel(ClassLoader.getSystemResourceAsStream("dict/" + dataFile.getName()))-->Line_7 $$ final ReadableByteChannel input = Channels.newChannel(ClassLoader.getSystemResourceAsStream("dict/" + dataFile.getName()))[ CD ]
Line_5 $$ File dataFile = new File(supportDir, wordList)-->Line_7 $$ final ReadableByteChannel input = Channels.newChannel(ClassLoader.getSystemResourceAsStream("dict/" + dataFile.getName()))[ FD ]
Line_6 $$ if (!dataFile.exists()) -->Line_8 $$ final FileChannel output = new FileOutputStream(dataFile).getChannel()[ CD ]
Line_8 $$ final FileChannel output = new FileOutputStream(dataFile).getChannel()-->Line_8 $$ final FileChannel output = new FileOutputStream(dataFile).getChannel()[ CD ]
Line_6 $$ if (!dataFile.exists()) -->Line_9 $$ output.transferFrom(input, 0, 1000000L)[ CD ]
Line_8 $$ final FileChannel output = new FileOutputStream(dataFile).getChannel()-->Line_9 $$ output.transferFrom(input, 0, 1000000L)[ FD ]
Line_7 $$ final ReadableByteChannel input = Channels.newChannel(ClassLoader.getSystemResourceAsStream("dict/" + dataFile.getName()))-->Line_9 $$ output.transferFrom(input, 0, 1000000L)[ FD ]
Line_6 $$ if (!dataFile.exists()) -->Line_10 $$ input.close()[ CD ]
Line_7 $$ final ReadableByteChannel input = Channels.newChannel(ClassLoader.getSystemResourceAsStream("dict/" + dataFile.getName()))-->Line_10 $$ input.close()[ FD ]
Line_6 $$ if (!dataFile.exists()) -->Line_11 $$ output.close()[ CD ]
Line_8 $$ final FileChannel output = new FileOutputStream(dataFile).getChannel()-->Line_11 $$ output.close()[ FD ]
Line_13 $$ long fileLastModified = dataFile.lastModified()-->Line_13 $$ long fileLastModified = dataFile.lastModified()[ CD ]
Line_5 $$ File dataFile = new File(supportDir, wordList)-->Line_13 $$ long fileLastModified = dataFile.lastModified()[ FD ]
Line_14 $$ if (map == null) -->Line_17 $$ if (fileLastModified <= mapLastModified) [ CD ]
Line_13 $$ long fileLastModified = dataFile.lastModified()-->Line_17 $$ if (fileLastModified <= mapLastModified) [ FD ]
Line_17 $$ if (fileLastModified <= mapLastModified) -->Line_18 $$ return[ CD ]
Line_14 $$ if (map == null) -->Line_20 $$ map.clear()[ CD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_25 $$ while ((accented = bs.readLine()) != null) [ FD ]
Line_24 $$ String accented-->Line_25 $$ while ((accented = bs.readLine()) != null) [ FD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_25 $$ while ((accented = bs.readLine()) != null) [ CD ]
Line_23 $$ BufferedReader bs = new BufferedReader(new InputStreamReader(new FileInputStream(dataFile), "UTF-8"))-->Line_25 $$ while ((accented = bs.readLine()) != null) [ FD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)[ CD ]
Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)-->Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)[ CD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)[ FD ]
Line_24 $$ String accented-->Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)[ FD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_27 $$ map.put(plain.toLowerCase(), accented)[ CD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_27 $$ map.put(plain.toLowerCase(), accented)[ FD ]
Line_24 $$ String accented-->Line_27 $$ map.put(plain.toLowerCase(), accented)[ FD ]
Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)-->Line_27 $$ map.put(plain.toLowerCase(), accented)[ FD ]
Line_23 $$ BufferedReader bs = new BufferedReader(new InputStreamReader(new FileInputStream(dataFile), "UTF-8"))-->Line_29 $$ bs.close()[ FD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)[ FD ]
Line_25 $$ while ((accented = bs.readLine()) != null) -->Line_27 $$ map.put(plain.toLowerCase(), accented)[ FD ]
Line_26 $$ String plain = VietUtilities.stripDiacritics(accented)-->Line_27 $$ map.put(plain.toLowerCase(), accented)[ FD ]
